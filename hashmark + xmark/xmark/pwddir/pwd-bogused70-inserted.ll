; ModuleID = '<stdin>'
source_filename = "ld-temp.o"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.infomap = type { i8*, i8* }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.file_name = type { i8*, i64, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.dev_ino, %struct.dev_ino, %struct.dev_ino, [3 x i64] }
%struct.dev_ino = type { i64, i64 }
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.__mbstate_t = type { i32, %union.anon }
%union.anon = type { i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"Usage: %s [OPTION]...\0A\00", align 1
@.str.2 = private unnamed_addr constant [60 x i8] c"Print the full filename of the current working directory.\0A\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [111 x i8] c"  -L, --logical   use PWD from environment, even if it contains symlinks\0A  -P, --physical  avoid all symlinks\0A\00", align 1
@.str.4 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.5 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"\0AIf no option is specified, -P is assumed.\0A\00", align 1
@.str.7 = private unnamed_addr constant [191 x i8] c"\0ANOTE: your shell may have its own version of %s, which usually supersedes\0Athe version described here.  Please refer to your shell's documentation\0Afor details about the options it supports.\0A\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"pwd\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.25 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.14 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.26 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.28 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.29 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.30 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.31 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.19 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.24 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"POSIXLY_CORRECT\00", align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"LP\00", align 1
@longopts = internal constant [5 x %struct.option] [%struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i32 0, i32 0), i32 0, i32* null, i32 76 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i32 0, i32 0), i32 0, i32* null, i32 80 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.35, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !0
@.str.15 = private unnamed_addr constant [13 x i8] c"Jim Meyering\00", align 1
@optind = external dso_local global i32, align 4
@.str.16 = private unnamed_addr constant [30 x i8] c"ignoring non-option arguments\00", align 1
@.str.39 = private unnamed_addr constant [31 x i8] c"failed to get attributes of %s\00", align 1
@.str.40 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.38 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.41 = private unnamed_addr constant [18 x i8] c"failed to stat %s\00", align 1
@.str.42 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.43 = private unnamed_addr constant [25 x i8] c"cannot open directory %s\00", align 1
@.str.44 = private unnamed_addr constant [22 x i8] c"failed to chdir to %s\00", align 1
@.str.45 = private unnamed_addr constant [21 x i8] c"reading directory %s\00", align 1
@.str.46 = private unnamed_addr constant [57 x i8] c"couldn't find directory entry in %s with matching i-node\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c"../\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"PWD\00", align 1
@.str.37 = private unnamed_addr constant [3 x i8] c"/.\00", align 1
@.str.32 = private unnamed_addr constant [8 x i8] c"logical\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c"physical\00", align 1
@.str.34 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.35 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@Version = internal global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i32 0, i32 0), align 8, !dbg !25
@.str.48 = private unnamed_addr constant [5 x i8] c"8.32\00", align 1
@ignore_EPIPE = internal global i8 0, align 1, !dbg !30
@.str.51 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@file_name = internal global i8* null, align 8, !dbg !35
@.str.1.52 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.53 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = internal global i32 1, align 4, !dbg !39
@.str.58 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.59 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.60 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8
@program_name = internal global i8* null, align 8, !dbg !46
@program_invocation_name = external dso_local global i8*, align 8
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !52
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !108
@nslots = internal global i32 1, align 4, !dbg !115
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !117
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !103
@.str.10.63 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.64 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.65 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.66 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.67 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.68 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.69 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.70 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.71 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@quote_quoting_options = internal global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !91
@.str.80 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.81 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.82 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.83 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.84 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4.85 = private unnamed_addr constant [171 x i8] c"License GPLv3+: GNU GPL version 3 or later <%s>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\00", align 1
@.str.5.86 = private unnamed_addr constant [34 x i8] c"https://gnu.org/licenses/gpl.html\00", align 1
@.str.6.87 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.7.88 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.8.89 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.9.90 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.10.91 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.11.92 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.12.93 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.13.94 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.14.95 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.15.96 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@version_etc_copyright = internal constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !119
@.str.1.111 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.112 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.123 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.124 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.127 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.128 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@inVal0 = global i32 0
@inVal1 = global i8** null
@.compVal0 = private global [4 x i8] c"-LL\00"
@.compVal1 = private global [1 x i8] zeroinitializer
@.compVal2 = private global [3 x i8] c"-L\00"
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @usage(i32) #0 !dbg !171 {
  %2 = load i32, i32* @x
  %3 = load i32, i32* @y
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  store i32 %0, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !174, metadata !DIExpression()), !dbg !175
  %11 = load i32, i32* %10, align 4, !dbg !176
  %12 = icmp ne i32 %11, 0, !dbg !178
  %13 = load i32, i32* @x
  %14 = load i32, i32* @y
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %44, !dbg !179

21:                                               ; preds = %originalBBpart2
  br label %22, !dbg !180

22:                                               ; preds = %21
  %23 = load i32, i32* @x
  %24 = load i32, i32* @y
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %22, %originalBB1alteredBB
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !181
  %32 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #10, !dbg !181
  %33 = load i8*, i8** @program_name, align 8, !dbg !181
  %34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* %32, i8* %33), !dbg !181
  %35 = load i32, i32* @x
  %36 = load i32, i32* @y
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %43, !dbg !181

43:                                               ; preds = %originalBBpart24
  br label %65, !dbg !181

44:                                               ; preds = %originalBBpart2
  %45 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0)) #10, !dbg !183
  %46 = load i8*, i8** @program_name, align 8, !dbg !185
  %47 = call i32 (i8*, ...) @printf(i8* %45, i8* %46), !dbg !186
  %48 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !187
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !187
  %50 = call i32 @fputs_unlocked(i8* %48, %struct._IO_FILE* %49), !dbg !187
  %51 = call i8* @gettext(i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !188
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !188
  %53 = call i32 @fputs_unlocked(i8* %51, %struct._IO_FILE* %52), !dbg !188
  %54 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4, i64 0, i64 0)) #10, !dbg !189
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !189
  %56 = call i32 @fputs_unlocked(i8* %54, %struct._IO_FILE* %55), !dbg !189
  %57 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !190
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !190
  %59 = call i32 @fputs_unlocked(i8* %57, %struct._IO_FILE* %58), !dbg !190
  %60 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !191
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !191
  %62 = call i32 @fputs_unlocked(i8* %60, %struct._IO_FILE* %61), !dbg !191
  %63 = call i8* @gettext(i8* getelementptr inbounds ([191 x i8], [191 x i8]* @.str.7, i64 0, i64 0)) #10, !dbg !192
  %64 = call i32 (i8*, ...) @printf(i8* %63, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0)), !dbg !193
  call void @emit_ancillary_info(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0)), !dbg !194
  br label %65

65:                                               ; preds = %44, %43
  %66 = load i32, i32* @x
  %67 = load i32, i32* @y
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %65, %originalBB6alteredBB
  %74 = load i32, i32* %10, align 4, !dbg !195
  call void @exit(i32 %74) #12, !dbg !196
  %75 = load i32, i32* @x
  %76 = load i32, i32* @y
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable, !dbg !196

originalBBalteredBB:                              ; preds = %originalBB, %1
  %83 = alloca i32, align 4
  store i32 %0, i32* %83, align 4
  call void @llvm.dbg.declare(metadata i32* %83, metadata !197, metadata !DIExpression()), !dbg !175
  %84 = load i32, i32* %83, align 4, !dbg !176
  %85 = icmp ne i32 %84, 0, !dbg !178
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %22
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !181
  %87 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #10, !dbg !181
  %88 = load i8*, i8** @program_name, align 8, !dbg !181
  %89 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %86, i8* %87, i8* %88), !dbg !181
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %65
  %90 = load i32, i32* %10, align 4, !dbg !195
  call void @exit(i32 %90) #12, !dbg !196
  br label %originalBB6
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8*) #4 !dbg !211 {
  %2 = alloca i8*, align 8
  %3 = alloca [7 x %struct.infomap], align 16
  %4 = alloca i8*, align 8
  %5 = alloca %struct.infomap*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !215, metadata !DIExpression()), !dbg !216
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %3, metadata !217, metadata !DIExpression()), !dbg !226
  %7 = bitcast [7 x %struct.infomap]* %3 to i8*, !dbg !226
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %7, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !226
  call void @llvm.dbg.declare(metadata i8** %4, metadata !227, metadata !DIExpression()), !dbg !228
  %8 = load i8*, i8** %2, align 8, !dbg !229
  store i8* %8, i8** %4, align 8, !dbg !228
  call void @llvm.dbg.declare(metadata %struct.infomap** %5, metadata !230, metadata !DIExpression()), !dbg !232
  %9 = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %3, i64 0, i64 0, !dbg !233
  store %struct.infomap* %9, %struct.infomap** %5, align 8, !dbg !232
  br label %10, !dbg !234

10:                                               ; preds = %originalBBpart215, %1
  %11 = load i32, i32* @x.1
  %12 = load i32, i32* @y.2
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !235
  %20 = getelementptr inbounds %struct.infomap, %struct.infomap* %19, i32 0, i32 0, !dbg !236
  %21 = load i8*, i8** %20, align 8, !dbg !236
  %22 = icmp ne i8* %21, null, !dbg !235
  %23 = load i32, i32* @x.1
  %24 = load i32, i32* @y.2
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %55, !dbg !237

31:                                               ; preds = %originalBBpart2
  %32 = load i32, i32* @x.1
  %33 = load i32, i32* @y.2
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load i8*, i8** %2, align 8, !dbg !238
  %41 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !238
  %42 = getelementptr inbounds %struct.infomap, %struct.infomap* %41, i32 0, i32 0, !dbg !238
  %43 = load i8*, i8** %42, align 8, !dbg !238
  %44 = call i32 @strcmp(i8* %40, i8* %43) #13, !dbg !238
  %45 = icmp eq i32 %44, 0, !dbg !238
  %46 = xor i1 %45, true, !dbg !239
  %47 = load i32, i32* @x.1
  %48 = load i32, i32* @y.2
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart211, label %originalBB1alteredBB

originalBBpart211:                                ; preds = %originalBB1
  br label %55

55:                                               ; preds = %originalBBpart211, %originalBBpart2
  %56 = phi i1 [ false, %originalBBpart2 ], [ %46, %originalBBpart211 ], !dbg !240
  br i1 %56, label %57, label %76, !dbg !234

57:                                               ; preds = %55
  %58 = load i32, i32* @x.1
  %59 = load i32, i32* @y.2
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %57, %originalBB13alteredBB
  %66 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !241
  %67 = getelementptr inbounds %struct.infomap, %struct.infomap* %66, i32 1, !dbg !241
  store %struct.infomap* %67, %struct.infomap** %5, align 8, !dbg !241
  %68 = load i32, i32* @x.1
  %69 = load i32, i32* @y.2
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  br label %10, !dbg !234, !llvm.loop !242

76:                                               ; preds = %55
  %77 = load i32, i32* @x.1
  %78 = load i32, i32* @y.2
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %76, %originalBB17alteredBB
  %85 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !243
  %86 = getelementptr inbounds %struct.infomap, %struct.infomap* %85, i32 0, i32 1, !dbg !245
  %87 = load i8*, i8** %86, align 8, !dbg !245
  %88 = icmp ne i8* %87, null, !dbg !243
  %89 = load i32, i32* @x.1
  %90 = load i32, i32* @y.2
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  br i1 %88, label %97, label %117, !dbg !246

97:                                               ; preds = %originalBBpart219
  %98 = load i32, i32* @x.1
  %99 = load i32, i32* @y.2
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %97, %originalBB21alteredBB
  %106 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !247
  %107 = getelementptr inbounds %struct.infomap, %struct.infomap* %106, i32 0, i32 1, !dbg !248
  %108 = load i8*, i8** %107, align 8, !dbg !248
  store i8* %108, i8** %4, align 8, !dbg !249
  %109 = load i32, i32* @x.1
  %110 = load i32, i32* @y.2
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  br label %117, !dbg !250

117:                                              ; preds = %originalBBpart223, %originalBBpart219
  %118 = load i32, i32* @x.1
  %119 = load i32, i32* @y.2
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %117, %originalBB25alteredBB
  %126 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25, i64 0, i64 0)) #10, !dbg !251
  %127 = call i32 (i8*, ...) @printf(i8* %126, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.26, i64 0, i64 0)), !dbg !252
  call void @llvm.dbg.declare(metadata i8** %6, metadata !253, metadata !DIExpression()), !dbg !254
  %128 = call i8* @setlocale(i32 5, i8* null) #10, !dbg !255
  store i8* %128, i8** %6, align 8, !dbg !254
  %129 = load i8*, i8** %6, align 8, !dbg !256
  %130 = icmp ne i8* %129, null, !dbg !256
  %131 = load i32, i32* @x.1
  %132 = load i32, i32* @y.2
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  br i1 %130, label %139, label %179, !dbg !258

139:                                              ; preds = %originalBBpart227
  %140 = load i32, i32* @x.1
  %141 = load i32, i32* @y.2
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %139, %originalBB29alteredBB
  %148 = load i8*, i8** %6, align 8, !dbg !259
  %149 = call i32 @strncmp(i8* %148, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0), i64 3) #13, !dbg !259
  %150 = icmp ne i32 %149, 0, !dbg !259
  %151 = load i32, i32* @x.1
  %152 = load i32, i32* @y.2
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br i1 %150, label %159, label %179, !dbg !260

159:                                              ; preds = %originalBBpart231
  %160 = load i32, i32* @x.1
  %161 = load i32, i32* @y.2
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %159, %originalBB33alteredBB
  %168 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.28, i64 0, i64 0)) #10, !dbg !261
  %169 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !261
  %170 = call i32 @fputs_unlocked(i8* %168, %struct._IO_FILE* %169), !dbg !261
  %171 = load i32, i32* @x.1
  %172 = load i32, i32* @y.2
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br label %179, !dbg !263

179:                                              ; preds = %originalBBpart235, %originalBBpart231, %originalBBpart227
  %180 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29, i64 0, i64 0)) #10, !dbg !264
  %181 = load i8*, i8** %2, align 8, !dbg !265
  %182 = call i32 (i8*, ...) @printf(i8* %180, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.26, i64 0, i64 0), i8* %181), !dbg !266
  %183 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.30, i64 0, i64 0)) #10, !dbg !267
  %184 = load i8*, i8** %4, align 8, !dbg !268
  %185 = load i8*, i8** %4, align 8, !dbg !269
  %186 = load i8*, i8** %2, align 8, !dbg !270
  %187 = icmp eq i8* %185, %186, !dbg !271
  %188 = zext i1 %187 to i64, !dbg !269
  %189 = select i1 %187, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), !dbg !269
  %190 = call i32 (i8*, ...) @printf(i8* %183, i8* %184, i8* %189), !dbg !272
  ret void, !dbg !273

originalBBalteredBB:                              ; preds = %originalBB, %10
  %191 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !235
  %192 = getelementptr inbounds %struct.infomap, %struct.infomap* %191, i32 0, i32 0, !dbg !236
  %193 = load i8*, i8** %192, align 8, !dbg !236
  %194 = icmp ne i8* %193, null, !dbg !235
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %195 = load i8*, i8** %2, align 8, !dbg !238
  %196 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !238
  %197 = getelementptr inbounds %struct.infomap, %struct.infomap* %196, i32 0, i32 0, !dbg !238
  %198 = load i8*, i8** %197, align 8, !dbg !238
  %199 = call i32 @strcmp(i8* %195, i8* %198) #13, !dbg !238
  %200 = icmp eq i32 %199, 0, !dbg !238
  %_ = shl i1 %200, true
  %_2 = sub i1 false, %200
  %gen = add i1 %_2, true
  %_3 = sub i1 false, %200
  %gen4 = add i1 %_3, true
  %_5 = sub i1 %200, true
  %gen6 = mul i1 %_5, true
  %_7 = shl i1 %200, true
  %_8 = shl i1 %200, true
  %_9 = shl i1 %200, true
  %201 = xor i1 %200, true, !dbg !239
  br label %originalBB1

originalBB13alteredBB:                            ; preds = %originalBB13, %57
  %202 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !241
  %203 = getelementptr inbounds %struct.infomap, %struct.infomap* %202, i32 1, !dbg !241
  store %struct.infomap* %203, %struct.infomap** %5, align 8, !dbg !241
  br label %originalBB13

originalBB17alteredBB:                            ; preds = %originalBB17, %76
  %204 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !243
  %205 = getelementptr inbounds %struct.infomap, %struct.infomap* %204, i32 0, i32 1, !dbg !245
  %206 = load i8*, i8** %205, align 8, !dbg !245
  %207 = icmp ne i8* %206, null, !dbg !243
  br label %originalBB17

originalBB21alteredBB:                            ; preds = %originalBB21, %97
  %208 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !247
  %209 = getelementptr inbounds %struct.infomap, %struct.infomap* %208, i32 0, i32 1, !dbg !248
  %210 = load i8*, i8** %209, align 8, !dbg !248
  store i8* %210, i8** %4, align 8, !dbg !249
  br label %originalBB21

originalBB25alteredBB:                            ; preds = %originalBB25, %117
  %211 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25, i64 0, i64 0)) #10, !dbg !251
  %212 = call i32 (i8*, ...) @printf(i8* %211, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.26, i64 0, i64 0)), !dbg !252
  call void @llvm.dbg.declare(metadata !4, metadata !274, metadata !DIExpression()), !dbg !254
  %213 = call i8* @setlocale(i32 5, i8* null) #10, !dbg !255
  store i8* %213, i8** %6, align 8, !dbg !254
  %214 = load i8*, i8** %6, align 8, !dbg !256
  %215 = icmp ne i8* %214, null, !dbg !256
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %139
  %216 = load i8*, i8** %6, align 8, !dbg !259
  %217 = call i32 @strncmp(i8* %216, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0), i64 3) #13, !dbg !259
  %218 = icmp ne i32 %217, 0, !dbg !259
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %159
  %219 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.28, i64 0, i64 0)) #10, !dbg !261
  %220 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !261
  %221 = call i32 @fputs_unlocked(i8* %219, %struct._IO_FILE* %220), !dbg !261
  br label %originalBB33
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32, i8**) #4 !dbg !288 {
  %3 = load i32, i32* @x.3
  %4 = load i32, i32* @y.4
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  store i8** %1, i8*** @inVal1
  store i32 %0, i32* @inVal0
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8**, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca %struct.file_name*, align 8
  store i32 0, i32* %11, align 4
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !292, metadata !DIExpression()), !dbg !293
  store i8** %1, i8*** %13, align 8
  call void @llvm.dbg.declare(metadata i8*** %13, metadata !294, metadata !DIExpression()), !dbg !295
  call void @llvm.dbg.declare(metadata i8** %14, metadata !296, metadata !DIExpression()), !dbg !297
  call void @llvm.dbg.declare(metadata i8* %15, metadata !298, metadata !DIExpression()), !dbg !299
  %18 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !300
  %19 = icmp ne i8* %18, null, !dbg !301
  %20 = zext i1 %19 to i8, !dbg !299
  store i8 %20, i8* %15, align 1, !dbg !299
  %21 = load i8**, i8*** %13, align 8, !dbg !302
  %22 = getelementptr inbounds i8*, i8** %21, i64 0, !dbg !302
  %23 = load i8*, i8** %22, align 8, !dbg !302
  call void @set_program_name(i8* %23), !dbg !303
  %24 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !304
  %25 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0)) #10, !dbg !305
  %26 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)) #10, !dbg !306
  %27 = call i32 @atexit(void ()* @close_stdout) #10, !dbg !307
  %28 = load i32, i32* @x.3
  %29 = load i32, i32* @y.4
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %36, !dbg !308

36:                                               ; preds = %originalBBpart295, %originalBBpart2
  call void @llvm.dbg.declare(metadata i32* %16, metadata !309, metadata !DIExpression()), !dbg !311
  %37 = load i32, i32* @x.3
  %38 = load i32, i32* @y.4
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %36, %originalBB1alteredBB
  %45 = load i32, i32* %12, align 4, !dbg !312
  %46 = load i8**, i8*** %13, align 8, !dbg !313
  %47 = call i32 @getopt_long(i32 %45, i8** %46, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0), %struct.option* getelementptr inbounds ([5 x %struct.option], [5 x %struct.option]* @longopts, i64 0, i64 0), i32* null) #10, !dbg !314
  store i32 %47, i32* %16, align 4, !dbg !311
  %48 = load i32, i32* %16, align 4, !dbg !315
  %49 = load i32, i32* @x.3
  %50 = load i32, i32* @y.4
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %57, !dbg !317

57:                                               ; preds = %originalBBpart24
  %58 = load i32, i32* @x.3
  %59 = load i32, i32* @y.4
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %57, %originalBB6alteredBB
  %collatzVar = alloca i32
  %66 = load i32, i32* @x.3
  %67 = load i32, i32* @y.4
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %74

74:                                               ; preds = %originalBBpart28
  %75 = load i32, i32* @x.3
  %76 = load i32, i32* @y.4
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %74, %originalBB10alteredBB
  %83 = load i32, i32* @inVal0
  %84 = icmp sgt i32 %83, 1
  %85 = load i32, i32* @x.3
  %86 = load i32, i32* @y.4
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %84, label %110, label %93

93:                                               ; preds = %originalBBpart212
  %94 = load i32, i32* @x.3
  %95 = load i32, i32* @y.4
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %93, %originalBB14alteredBB
  store i32 19, i32* %collatzVar
  %102 = load i32, i32* @x.3
  %103 = load i32, i32* @y.4
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %110

110:                                              ; preds = %originalBBpart216, %originalBBpart212
  %111 = load i32, i32* @x.3
  %112 = load i32, i32* @y.4
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %110, %originalBB18alteredBB
  %119 = load i8**, i8*** @inVal1
  %120 = getelementptr inbounds i8*, i8** %119, i64 1
  %121 = load i8*, i8** %120
  %controle = call i32 @controle(i8* %121, i32 -1)
  store i32 %controle, i32* %collatzVar
  %122 = load i32, i32* @x.3
  %123 = load i32, i32* @y.4
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %130

130:                                              ; preds = %228, %originalBBpart271, %originalBBpart220
  %131 = load i32, i32* @x.3
  %132 = load i32, i32* @y.4
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %130, %originalBB22alteredBB
  %139 = load i32, i32* %collatzVar
  %140 = icmp sgt i32 %139, 1
  %141 = load i32, i32* @x.3
  %142 = load i32, i32* @y.4
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %140, label %149, label %249

149:                                              ; preds = %originalBBpart224
  %150 = load i32, i32* @x.3
  %151 = load i32, i32* @y.4
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %149, %originalBB26alteredBB
  %158 = load i32, i32* %collatzVar
  %159 = srem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = load i32, i32* @x.3
  %162 = load i32, i32* @y.4
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBBpart229, label %originalBB26alteredBB

originalBBpart229:                                ; preds = %originalBB26
  br i1 %160, label %169, label %188

169:                                              ; preds = %originalBBpart229
  %170 = load i32, i32* @x.3
  %171 = load i32, i32* @y.4
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %169, %originalBB31alteredBB
  %178 = load i32, i32* %collatzVar
  %179 = sdiv i32 %178, 2
  store i32 %179, i32* %collatzVar
  %180 = load i32, i32* @x.3
  %181 = load i32, i32* @y.4
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBBpart235, label %originalBB31alteredBB

originalBBpart235:                                ; preds = %originalBB31
  br label %208

188:                                              ; preds = %originalBBpart229
  %189 = load i32, i32* @x.3
  %190 = load i32, i32* @y.4
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %188, %originalBB37alteredBB
  %197 = load i32, i32* %collatzVar
  %198 = mul i32 %197, 3
  %199 = add i32 %198, 1
  store i32 %199, i32* %collatzVar
  %200 = load i32, i32* @x.3
  %201 = load i32, i32* @y.4
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBBpart262, label %originalBB37alteredBB

originalBBpart262:                                ; preds = %originalBB37
  br label %208

208:                                              ; preds = %originalBBpart262, %originalBBpart235
  %209 = load i32, i32* @x.3
  %210 = load i32, i32* @y.4
  %211 = sub i32 %209, 1
  %212 = mul i32 %209, %211
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %214, %215
  br i1 %216, label %originalBB64, label %originalBB64alteredBB

originalBB64:                                     ; preds = %208, %originalBB64alteredBB
  %217 = load i32, i32* %collatzVar
  %218 = sub i32 %48, %217
  %219 = icmp sgt i32 %218, -3
  %220 = load i32, i32* @x.3
  %221 = load i32, i32* @y.4
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBBpart271, label %originalBB64alteredBB

originalBBpart271:                                ; preds = %originalBB64
  br i1 %219, label %228, label %130

228:                                              ; preds = %originalBBpart271
  %229 = load i32, i32* %collatzVar
  %230 = add i32 %48, %229
  %231 = icmp slt i32 %230, 1
  br i1 %231, label %232, label %130

232:                                              ; preds = %228
  %233 = load i32, i32* @x.3
  %234 = load i32, i32* @y.4
  %235 = sub i32 %233, 1
  %236 = mul i32 %233, %235
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %238, %239
  br i1 %240, label %originalBB73, label %originalBB73alteredBB

originalBB73:                                     ; preds = %232, %originalBB73alteredBB
  %241 = load i32, i32* @x.3
  %242 = load i32, i32* @y.4
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBBpart275, label %originalBB73alteredBB

originalBBpart275:                                ; preds = %originalBB73
  br label %339, !dbg !318

249:                                              ; preds = %originalBBpart224
  %250 = load i32, i32* %16, align 4, !dbg !319
  switch i32 %250, label %305 [
    i32 76, label %251
    i32 80, label %268
    i32 -130, label %285
    i32 -131, label %286
  ], !dbg !320

251:                                              ; preds = %249
  %252 = load i32, i32* @x.3
  %253 = load i32, i32* @y.4
  %254 = sub i32 %252, 1
  %255 = mul i32 %252, %254
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %257, %258
  br i1 %259, label %originalBB77, label %originalBB77alteredBB

originalBB77:                                     ; preds = %251, %originalBB77alteredBB
  store i8 1, i8* %15, align 1, !dbg !321
  %260 = load i32, i32* @x.3
  %261 = load i32, i32* @y.4
  %262 = sub i32 %260, 1
  %263 = mul i32 %260, %262
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %265, %266
  br i1 %267, label %originalBBpart279, label %originalBB77alteredBB

originalBBpart279:                                ; preds = %originalBB77
  br label %322, !dbg !323

268:                                              ; preds = %249
  %269 = load i32, i32* @x.3
  %270 = load i32, i32* @y.4
  %271 = sub i32 %269, 1
  %272 = mul i32 %269, %271
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %274, %275
  br i1 %276, label %originalBB81, label %originalBB81alteredBB

originalBB81:                                     ; preds = %268, %originalBB81alteredBB
  store i8 0, i8* %15, align 1, !dbg !324
  %277 = load i32, i32* @x.3
  %278 = load i32, i32* @y.4
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBBpart283, label %originalBB81alteredBB

originalBBpart283:                                ; preds = %originalBB81
  br label %322, !dbg !325

285:                                              ; preds = %249
  call void @usage(i32 0) #14, !dbg !326
  unreachable, !dbg !326

286:                                              ; preds = %249
  %287 = load i32, i32* @x.3
  %288 = load i32, i32* @y.4
  %289 = sub i32 %287, 1
  %290 = mul i32 %287, %289
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %288, 10
  %294 = or i1 %292, %293
  br i1 %294, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %286, %originalBB85alteredBB
  %295 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !327
  %296 = load i8*, i8** @Version, align 8, !dbg !327
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %295, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0), i8* %296, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), i8* null), !dbg !327
  call void @exit(i32 0) #12, !dbg !327
  %297 = load i32, i32* @x.3
  %298 = load i32, i32* @y.4
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  unreachable, !dbg !327

305:                                              ; preds = %249
  %306 = load i32, i32* @x.3
  %307 = load i32, i32* @y.4
  %308 = sub i32 %306, 1
  %309 = mul i32 %306, %308
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %311, %312
  br i1 %313, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %305, %originalBB89alteredBB
  call void @usage(i32 1) #14, !dbg !328
  %314 = load i32, i32* @x.3
  %315 = load i32, i32* @y.4
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  unreachable, !dbg !328

322:                                              ; preds = %originalBBpart283, %originalBBpart279
  %323 = load i32, i32* @x.3
  %324 = load i32, i32* @y.4
  %325 = sub i32 %323, 1
  %326 = mul i32 %323, %325
  %327 = urem i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %328, %329
  br i1 %330, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %322, %originalBB93alteredBB
  %331 = load i32, i32* @x.3
  %332 = load i32, i32* @y.4
  %333 = sub i32 %331, 1
  %334 = mul i32 %331, %333
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %336, %337
  br i1 %338, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  br label %36, !dbg !308, !llvm.loop !329

339:                                              ; preds = %originalBBpart275
  %340 = load i32, i32* @x.3
  %341 = load i32, i32* @y.4
  %342 = sub i32 %340, 1
  %343 = mul i32 %340, %342
  %344 = urem i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %345, %346
  br i1 %347, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %339, %originalBB97alteredBB
  %348 = load i32, i32* @optind, align 4, !dbg !331
  %349 = load i32, i32* %12, align 4, !dbg !333
  %350 = icmp slt i32 %348, %349, !dbg !334
  %351 = load i32, i32* @x.3
  %352 = load i32, i32* @y.4
  %353 = sub i32 %351, 1
  %354 = mul i32 %351, %353
  %355 = urem i32 %354, 2
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %352, 10
  %358 = or i1 %356, %357
  br i1 %358, label %originalBBpart299, label %originalBB97alteredBB

originalBBpart299:                                ; preds = %originalBB97
  br i1 %350, label %359, label %361, !dbg !335

359:                                              ; preds = %originalBBpart299
  %360 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.16, i64 0, i64 0)) #10, !dbg !336
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %360), !dbg !337
  br label %361, !dbg !337

361:                                              ; preds = %359, %originalBBpart299
  %362 = load i32, i32* @x.3
  %363 = load i32, i32* @y.4
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %361, %originalBB101alteredBB
  %370 = load i8, i8* %15, align 1, !dbg !338
  %371 = trunc i8 %370 to i1, !dbg !338
  %372 = load i32, i32* @x.3
  %373 = load i32, i32* @y.4
  %374 = sub i32 %372, 1
  %375 = mul i32 %372, %374
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %377, %378
  br i1 %379, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  br i1 %371, label %380, label %420, !dbg !340

380:                                              ; preds = %originalBBpart2103
  %381 = load i32, i32* @x.3
  %382 = load i32, i32* @y.4
  %383 = sub i32 %381, 1
  %384 = mul i32 %381, %383
  %385 = urem i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %382, 10
  %388 = or i1 %386, %387
  br i1 %388, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %380, %originalBB105alteredBB
  %389 = call i8* @logical_getcwd(), !dbg !341
  store i8* %389, i8** %14, align 8, !dbg !343
  %390 = load i8*, i8** %14, align 8, !dbg !344
  %391 = icmp ne i8* %390, null, !dbg !344
  %392 = load i32, i32* @x.3
  %393 = load i32, i32* @y.4
  %394 = sub i32 %392, 1
  %395 = mul i32 %392, %394
  %396 = urem i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %397, %398
  br i1 %399, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  br i1 %391, label %400, label %403, !dbg !346

400:                                              ; preds = %originalBBpart2107
  %401 = load i8*, i8** %14, align 8, !dbg !347
  %402 = call i32 @puts(i8* %401), !dbg !349
  store i32 0, i32* %11, align 4, !dbg !350
  br label %501, !dbg !350

403:                                              ; preds = %originalBBpart2107
  %404 = load i32, i32* @x.3
  %405 = load i32, i32* @y.4
  %406 = sub i32 %404, 1
  %407 = mul i32 %404, %406
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %405, 10
  %411 = or i1 %409, %410
  br i1 %411, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %403, %originalBB109alteredBB
  %412 = load i32, i32* @x.3
  %413 = load i32, i32* @y.4
  %414 = sub i32 %412, 1
  %415 = mul i32 %412, %414
  %416 = urem i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %413, 10
  %419 = or i1 %417, %418
  br i1 %419, label %originalBBpart2111, label %originalBB109alteredBB

originalBBpart2111:                               ; preds = %originalBB109
  br label %420, !dbg !351

420:                                              ; preds = %originalBBpart2111, %originalBBpart2103
  %421 = load i32, i32* @x.3
  %422 = load i32, i32* @y.4
  %423 = sub i32 %421, 1
  %424 = mul i32 %421, %423
  %425 = urem i32 %424, 2
  %426 = icmp eq i32 %425, 0
  %427 = icmp slt i32 %422, 10
  %428 = or i1 %426, %427
  br i1 %428, label %originalBB113, label %originalBB113alteredBB

originalBB113:                                    ; preds = %420, %originalBB113alteredBB
  %429 = call i8* @xgetcwd(), !dbg !352
  store i8* %429, i8** %14, align 8, !dbg !353
  %430 = load i8*, i8** %14, align 8, !dbg !354
  %431 = icmp ne i8* %430, null, !dbg !356
  %432 = load i32, i32* @x.3
  %433 = load i32, i32* @y.4
  %434 = sub i32 %432, 1
  %435 = mul i32 %432, %434
  %436 = urem i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = icmp slt i32 %433, 10
  %439 = or i1 %437, %438
  br i1 %439, label %originalBBpart2115, label %originalBB113alteredBB

originalBBpart2115:                               ; preds = %originalBB113
  br i1 %431, label %440, label %460, !dbg !357

440:                                              ; preds = %originalBBpart2115
  %441 = load i32, i32* @x.3
  %442 = load i32, i32* @y.4
  %443 = sub i32 %441, 1
  %444 = mul i32 %441, %443
  %445 = urem i32 %444, 2
  %446 = icmp eq i32 %445, 0
  %447 = icmp slt i32 %442, 10
  %448 = or i1 %446, %447
  br i1 %448, label %originalBB117, label %originalBB117alteredBB

originalBB117:                                    ; preds = %440, %originalBB117alteredBB
  %449 = load i8*, i8** %14, align 8, !dbg !358
  %450 = call i32 @puts(i8* %449), !dbg !360
  %451 = load i8*, i8** %14, align 8, !dbg !361
  call void @free(i8* %451) #10, !dbg !362
  %452 = load i32, i32* @x.3
  %453 = load i32, i32* @y.4
  %454 = sub i32 %452, 1
  %455 = mul i32 %452, %454
  %456 = urem i32 %455, 2
  %457 = icmp eq i32 %456, 0
  %458 = icmp slt i32 %453, 10
  %459 = or i1 %457, %458
  br i1 %459, label %originalBBpart2119, label %originalBB117alteredBB

originalBBpart2119:                               ; preds = %originalBB117
  br label %484, !dbg !363

460:                                              ; preds = %originalBBpart2115
  call void @llvm.dbg.declare(metadata %struct.file_name** %17, metadata !364, metadata !DIExpression()), !dbg !372
  %461 = load i32, i32* @x.3
  %462 = load i32, i32* @y.4
  %463 = sub i32 %461, 1
  %464 = mul i32 %461, %463
  %465 = urem i32 %464, 2
  %466 = icmp eq i32 %465, 0
  %467 = icmp slt i32 %462, 10
  %468 = or i1 %466, %467
  br i1 %468, label %originalBB121, label %originalBB121alteredBB

originalBB121:                                    ; preds = %460, %originalBB121alteredBB
  %469 = call %struct.file_name* @file_name_init(), !dbg !373
  store %struct.file_name* %469, %struct.file_name** %17, align 8, !dbg !372
  %470 = load %struct.file_name*, %struct.file_name** %17, align 8, !dbg !374
  call void @robust_getcwd(%struct.file_name* %470), !dbg !375
  %471 = load %struct.file_name*, %struct.file_name** %17, align 8, !dbg !376
  %472 = getelementptr inbounds %struct.file_name, %struct.file_name* %471, i32 0, i32 2, !dbg !377
  %473 = load i8*, i8** %472, align 8, !dbg !377
  %474 = call i32 @puts(i8* %473), !dbg !378
  %475 = load %struct.file_name*, %struct.file_name** %17, align 8, !dbg !379
  call void @file_name_free(%struct.file_name* %475), !dbg !380
  %476 = load i32, i32* @x.3
  %477 = load i32, i32* @y.4
  %478 = sub i32 %476, 1
  %479 = mul i32 %476, %478
  %480 = urem i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = icmp slt i32 %477, 10
  %483 = or i1 %481, %482
  br i1 %483, label %originalBBpart2123, label %originalBB121alteredBB

originalBBpart2123:                               ; preds = %originalBB121
  br label %484

484:                                              ; preds = %originalBBpart2123, %originalBBpart2119
  %485 = load i32, i32* @x.3
  %486 = load i32, i32* @y.4
  %487 = sub i32 %485, 1
  %488 = mul i32 %485, %487
  %489 = urem i32 %488, 2
  %490 = icmp eq i32 %489, 0
  %491 = icmp slt i32 %486, 10
  %492 = or i1 %490, %491
  br i1 %492, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %484, %originalBB125alteredBB
  store i32 0, i32* %11, align 4, !dbg !381
  %493 = load i32, i32* @x.3
  %494 = load i32, i32* @y.4
  %495 = sub i32 %493, 1
  %496 = mul i32 %493, %495
  %497 = urem i32 %496, 2
  %498 = icmp eq i32 %497, 0
  %499 = icmp slt i32 %494, 10
  %500 = or i1 %498, %499
  br i1 %500, label %originalBBpart2127, label %originalBB125alteredBB

originalBBpart2127:                               ; preds = %originalBB125
  br label %501, !dbg !381

501:                                              ; preds = %originalBBpart2127, %400
  %502 = load i32, i32* @x.3
  %503 = load i32, i32* @y.4
  %504 = sub i32 %502, 1
  %505 = mul i32 %502, %504
  %506 = urem i32 %505, 2
  %507 = icmp eq i32 %506, 0
  %508 = icmp slt i32 %503, 10
  %509 = or i1 %507, %508
  br i1 %509, label %originalBB129, label %originalBB129alteredBB

originalBB129:                                    ; preds = %501, %originalBB129alteredBB
  %510 = load i32, i32* %11, align 4, !dbg !382
  %511 = load i32, i32* @x.3
  %512 = load i32, i32* @y.4
  %513 = sub i32 %511, 1
  %514 = mul i32 %511, %513
  %515 = urem i32 %514, 2
  %516 = icmp eq i32 %515, 0
  %517 = icmp slt i32 %512, 10
  %518 = or i1 %516, %517
  br i1 %518, label %originalBBpart2131, label %originalBB129alteredBB

originalBBpart2131:                               ; preds = %originalBB129
  ret i32 %510, !dbg !382

originalBBalteredBB:                              ; preds = %originalBB, %2
  store i8** %1, i8*** @inVal1
  store i32 %0, i32* @inVal0
  %519 = alloca i32, align 4
  %520 = alloca i32, align 4
  %521 = alloca i8**, align 8
  %522 = alloca i8*, align 8
  %523 = alloca i8, align 1
  %524 = alloca i32, align 4
  %525 = alloca %struct.file_name*, align 8
  store i32 0, i32* %519, align 4
  store i32 %0, i32* %520, align 4
  call void @llvm.dbg.declare(metadata i32* %520, metadata !383, metadata !DIExpression()), !dbg !293
  store i8** %1, i8*** %521, align 8
  call void @llvm.dbg.declare(metadata i8*** %521, metadata !397, metadata !DIExpression()), !dbg !295
  call void @llvm.dbg.declare(metadata i8** %522, metadata !398, metadata !DIExpression()), !dbg !297
  call void @llvm.dbg.declare(metadata i8* %523, metadata !399, metadata !DIExpression()), !dbg !299
  %526 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !300
  %527 = icmp ne i8* %526, null, !dbg !301
  %528 = zext i1 %527 to i8, !dbg !299
  store i8 %528, i8* %523, align 1, !dbg !299
  %529 = load i8**, i8*** %521, align 8, !dbg !302
  %530 = getelementptr inbounds i8*, i8** %529, i64 0, !dbg !302
  %531 = load i8*, i8** %530, align 8, !dbg !302
  call void @set_program_name(i8* %531), !dbg !303
  %532 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !304
  %533 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0)) #10, !dbg !305
  %534 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)) #10, !dbg !306
  %535 = call i32 @atexit(void ()* @close_stdout) #10, !dbg !307
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %36
  %536 = load i32, i32* %12, align 4, !dbg !312
  %537 = load i8**, i8*** %13, align 8, !dbg !313
  %538 = call i32 @getopt_long(i32 %536, i8** %537, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0), %struct.option* getelementptr inbounds ([5 x %struct.option], [5 x %struct.option]* @longopts, i64 0, i64 0), i32* null) #10, !dbg !314
  store i32 %538, i32* %16, align 4, !dbg !311
  %539 = load i32, i32* %16, align 4, !dbg !315
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %57
  %collatzVaralteredBB = alloca i32
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %74
  %540 = load i32, i32* @inVal0
  %541 = icmp sgt i32 %540, 1
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %93
  store i32 19, i32* %collatzVar
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %110
  %542 = load i8**, i8*** @inVal1
  %543 = getelementptr inbounds i8*, i8** %542, i64 1
  %544 = load i8*, i8** %543
  %controlealteredBB = call i32 @controle(i8* %544, i32 -1)
  store i32 %controlealteredBB, i32* %collatzVar
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %130
  %545 = load i32, i32* %collatzVar
  %546 = icmp sgt i32 %545, 1
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %149
  %547 = load i32, i32* %collatzVar
  %_ = sub i32 0, %547
  %gen = add i32 %_, 2
  %_27 = shl i32 %547, 2
  %548 = srem i32 %547, 2
  %549 = icmp eq i32 %548, 0
  br label %originalBB26

originalBB31alteredBB:                            ; preds = %originalBB31, %169
  %550 = load i32, i32* %collatzVar
  %_32 = sub i32 0, %550
  %gen33 = add i32 %_32, 2
  %551 = sdiv i32 %550, 2
  store i32 %551, i32* %collatzVar
  br label %originalBB31

originalBB37alteredBB:                            ; preds = %originalBB37, %188
  %552 = load i32, i32* %collatzVar
  %_38 = sub i32 %552, 3
  %gen39 = mul i32 %_38, 3
  %_40 = shl i32 %552, 3
  %_41 = shl i32 %552, 3
  %_42 = sub i32 %552, 3
  %gen43 = mul i32 %_42, 3
  %_44 = sub i32 %552, 3
  %gen45 = mul i32 %_44, 3
  %_46 = sub i32 0, %552
  %gen47 = add i32 %_46, 3
  %_48 = shl i32 %552, 3
  %_49 = sub i32 %552, 3
  %gen50 = mul i32 %_49, 3
  %553 = mul i32 %552, 3
  %_51 = sub i32 0, %553
  %gen52 = add i32 %_51, 1
  %_53 = sub i32 %553, 1
  %gen54 = mul i32 %_53, 1
  %_55 = sub i32 0, %553
  %gen56 = add i32 %_55, 1
  %_57 = sub i32 %553, 1
  %gen58 = mul i32 %_57, 1
  %_59 = shl i32 %553, 1
  %_60 = shl i32 %553, 1
  %554 = add i32 %553, 1
  store i32 %554, i32* %collatzVar
  br label %originalBB37

originalBB64alteredBB:                            ; preds = %originalBB64, %208
  %555 = load i32, i32* %collatzVar
  %_65 = sub i32 %48, %555
  %gen66 = mul i32 %_65, %555
  %_67 = sub i32 0, %48
  %gen68 = add i32 %_67, %555
  %_69 = shl i32 %48, %555
  %556 = sub i32 %48, %555
  %557 = icmp sgt i32 %556, -3
  br label %originalBB64

originalBB73alteredBB:                            ; preds = %originalBB73, %232
  br label %originalBB73

originalBB77alteredBB:                            ; preds = %originalBB77, %251
  store i8 1, i8* %15, align 1, !dbg !321
  br label %originalBB77

originalBB81alteredBB:                            ; preds = %originalBB81, %268
  store i8 0, i8* %15, align 1, !dbg !324
  br label %originalBB81

originalBB85alteredBB:                            ; preds = %originalBB85, %286
  %558 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !327
  %559 = load i8*, i8** @Version, align 8, !dbg !327
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %558, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0), i8* %559, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), i8* null), !dbg !327
  call void @exit(i32 0) #12, !dbg !327
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %305
  call void @usage(i32 1) #14, !dbg !328
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %322
  br label %originalBB93

originalBB97alteredBB:                            ; preds = %originalBB97, %339
  %560 = load i32, i32* @optind, align 4, !dbg !331
  %561 = load i32, i32* %12, align 4, !dbg !333
  %562 = icmp slt i32 %560, %561, !dbg !334
  br label %originalBB97

originalBB101alteredBB:                           ; preds = %originalBB101, %361
  %563 = load i8, i8* %15, align 1, !dbg !338
  %564 = trunc i8 %563 to i1, !dbg !338
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %380
  %565 = call i8* @logical_getcwd(), !dbg !341
  store i8* %565, i8** %14, align 8, !dbg !343
  %566 = load i8*, i8** %14, align 8, !dbg !344
  %567 = icmp ne i8* %566, null, !dbg !344
  br label %originalBB105

originalBB109alteredBB:                           ; preds = %originalBB109, %403
  br label %originalBB109

originalBB113alteredBB:                           ; preds = %originalBB113, %420
  %568 = call i8* @xgetcwd(), !dbg !352
  store i8* %568, i8** %14, align 8, !dbg !353
  %569 = load i8*, i8** %14, align 8, !dbg !354
  %570 = icmp ne i8* %569, null, !dbg !356
  br label %originalBB113

originalBB117alteredBB:                           ; preds = %originalBB117, %440
  %571 = load i8*, i8** %14, align 8, !dbg !358
  %572 = call i32 @puts(i8* %571), !dbg !360
  %573 = load i8*, i8** %14, align 8, !dbg !361
  call void @free(i8* %573) #10, !dbg !362
  br label %originalBB117

originalBB121alteredBB:                           ; preds = %originalBB121, %460
  %574 = call %struct.file_name* @file_name_init(), !dbg !373
  store %struct.file_name* %574, %struct.file_name** %17, align 8, !dbg !372
  %575 = load %struct.file_name*, %struct.file_name** %17, align 8, !dbg !374
  call void @robust_getcwd(%struct.file_name* %575), !dbg !375
  %576 = load %struct.file_name*, %struct.file_name** %17, align 8, !dbg !376
  %577 = getelementptr inbounds %struct.file_name, %struct.file_name* %576, i32 0, i32 2, !dbg !377
  %578 = load i8*, i8** %577, align 8, !dbg !377
  %579 = call i32 @puts(i8* %578), !dbg !378
  %580 = load %struct.file_name*, %struct.file_name** %17, align 8, !dbg !379
  call void @file_name_free(%struct.file_name* %580), !dbg !380
  br label %originalBB121

originalBB125alteredBB:                           ; preds = %originalBB125, %484
  store i32 0, i32* %11, align 4, !dbg !381
  br label %originalBB125

originalBB129alteredBB:                           ; preds = %originalBB129, %501
  %581 = load i32, i32* %11, align 4, !dbg !382
  br label %originalBB129
}

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @logical_getcwd() #4 !dbg !400 {
  %1 = load i32, i32* @x.5
  %2 = load i32, i32* @y.6
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = alloca i8*, align 8
  %10 = alloca %struct.stat, align 8
  %11 = alloca %struct.stat, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata %struct.stat* %10, metadata !403, metadata !DIExpression()), !dbg !443
  call void @llvm.dbg.declare(metadata %struct.stat* %11, metadata !444, metadata !DIExpression()), !dbg !445
  call void @llvm.dbg.declare(metadata i8** %12, metadata !446, metadata !DIExpression()), !dbg !447
  %14 = call i8* @getenv(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0)) #10, !dbg !448
  store i8* %14, i8** %12, align 8, !dbg !447
  call void @llvm.dbg.declare(metadata i8** %13, metadata !449, metadata !DIExpression()), !dbg !450
  %15 = load i8*, i8** %12, align 8, !dbg !451
  %16 = icmp ne i8* %15, null, !dbg !451
  %17 = load i32, i32* @x.5
  %18 = load i32, i32* @y.6
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %47, !dbg !453

25:                                               ; preds = %originalBBpart2
  %26 = load i32, i32* @x.5
  %27 = load i32, i32* @y.6
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %25, %originalBB1alteredBB
  %34 = load i8*, i8** %12, align 8, !dbg !454
  %35 = getelementptr inbounds i8, i8* %34, i64 0, !dbg !454
  %36 = load i8, i8* %35, align 1, !dbg !454
  %37 = sext i8 %36 to i32, !dbg !454
  %38 = icmp ne i32 %37, 47, !dbg !455
  %39 = load i32, i32* @x.5
  %40 = load i32, i32* @y.6
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %38, label %47, label %64, !dbg !456

47:                                               ; preds = %originalBBpart24, %originalBBpart2
  %48 = load i32, i32* @x.5
  %49 = load i32, i32* @y.6
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %47, %originalBB6alteredBB
  store i8* null, i8** %9, align 8, !dbg !457
  %56 = load i32, i32* @x.5
  %57 = load i32, i32* @y.6
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %568, !dbg !457

64:                                               ; preds = %originalBBpart24
  %65 = load i32, i32* @x.5
  %66 = load i32, i32* @y.6
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %64, %originalBB10alteredBB
  %73 = load i8*, i8** %12, align 8, !dbg !458
  store i8* %73, i8** %13, align 8, !dbg !459
  %74 = load i32, i32* @x.5
  %75 = load i32, i32* @y.6
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %82, !dbg !460

82:                                               ; preds = %originalBBpart240, %originalBBpart212
  %83 = load i32, i32* @x.5
  %84 = load i32, i32* @y.6
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %82, %originalBB14alteredBB
  %91 = load i8*, i8** %13, align 8, !dbg !461
  %92 = call i8* @strstr(i8* %91, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i64 0, i64 0)) #13, !dbg !462
  store i8* %92, i8** %13, align 8, !dbg !463
  %93 = icmp ne i8* %92, null, !dbg !460
  %94 = load i32, i32* @x.5
  %95 = load i32, i32* @y.6
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %93, label %102, label %230, !dbg !460

102:                                              ; preds = %originalBBpart216
  %103 = load i8*, i8** %13, align 8, !dbg !464
  %104 = getelementptr inbounds i8, i8* %103, i64 2, !dbg !464
  %105 = load i8, i8* %104, align 1, !dbg !464
  %106 = icmp ne i8 %105, 0, !dbg !464
  br i1 %106, label %107, label %194, !dbg !467

107:                                              ; preds = %102
  %108 = load i32, i32* @x.5
  %109 = load i32, i32* @y.6
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %107, %originalBB18alteredBB
  %116 = load i8*, i8** %13, align 8, !dbg !468
  %117 = getelementptr inbounds i8, i8* %116, i64 2, !dbg !468
  %118 = load i8, i8* %117, align 1, !dbg !468
  %119 = sext i8 %118 to i32, !dbg !468
  %120 = icmp eq i32 %119, 47, !dbg !469
  %121 = load i32, i32* @x.5
  %122 = load i32, i32* @y.6
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %120, label %194, label %129, !dbg !470

129:                                              ; preds = %originalBBpart220
  %130 = load i32, i32* @x.5
  %131 = load i32, i32* @y.6
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %129, %originalBB22alteredBB
  %138 = load i8*, i8** %13, align 8, !dbg !471
  %139 = getelementptr inbounds i8, i8* %138, i64 2, !dbg !471
  %140 = load i8, i8* %139, align 1, !dbg !471
  %141 = sext i8 %140 to i32, !dbg !471
  %142 = icmp eq i32 %141, 46, !dbg !472
  %143 = load i32, i32* @x.5
  %144 = load i32, i32* @y.6
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %142, label %151, label %211, !dbg !473

151:                                              ; preds = %originalBBpart224
  %152 = load i32, i32* @x.5
  %153 = load i32, i32* @y.6
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %151, %originalBB26alteredBB
  %160 = load i8*, i8** %13, align 8, !dbg !474
  %161 = getelementptr inbounds i8, i8* %160, i64 3, !dbg !474
  %162 = load i8, i8* %161, align 1, !dbg !474
  %163 = icmp ne i8 %162, 0, !dbg !474
  %164 = load i32, i32* @x.5
  %165 = load i32, i32* @y.6
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %163, label %172, label %194, !dbg !475

172:                                              ; preds = %originalBBpart228
  %173 = load i32, i32* @x.5
  %174 = load i32, i32* @y.6
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %172, %originalBB30alteredBB
  %181 = load i8*, i8** %13, align 8, !dbg !476
  %182 = getelementptr inbounds i8, i8* %181, i64 3, !dbg !476
  %183 = load i8, i8* %182, align 1, !dbg !476
  %184 = sext i8 %183 to i32, !dbg !476
  %185 = icmp eq i32 %184, 47, !dbg !477
  %186 = load i32, i32* @x.5
  %187 = load i32, i32* @y.6
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %185, label %194, label %211, !dbg !478

194:                                              ; preds = %originalBBpart232, %originalBBpart228, %originalBBpart220, %102
  %195 = load i32, i32* @x.5
  %196 = load i32, i32* @y.6
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %194, %originalBB34alteredBB
  store i8* null, i8** %9, align 8, !dbg !479
  %203 = load i32, i32* @x.5
  %204 = load i32, i32* @y.6
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %568, !dbg !479

211:                                              ; preds = %originalBBpart232, %originalBBpart224
  %212 = load i32, i32* @x.5
  %213 = load i32, i32* @y.6
  %214 = sub i32 %212, 1
  %215 = mul i32 %212, %214
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %217, %218
  br i1 %219, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %211, %originalBB38alteredBB
  %220 = load i8*, i8** %13, align 8, !dbg !480
  %221 = getelementptr inbounds i8, i8* %220, i32 1, !dbg !480
  store i8* %221, i8** %13, align 8, !dbg !480
  %222 = load i32, i32* @x.5
  %223 = load i32, i32* @y.6
  %224 = sub i32 %222, 1
  %225 = mul i32 %222, %224
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %227, %228
  br i1 %229, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %82, !dbg !460, !llvm.loop !481

230:                                              ; preds = %originalBBpart216
  %231 = load i32, i32* @x.5
  %232 = load i32, i32* @y.6
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %230, %originalBB42alteredBB
  %239 = load i8*, i8** %12, align 8, !dbg !483
  %240 = call i32 @stat(i8* %239, %struct.stat* %10) #10, !dbg !485
  %241 = load i32, i32* @x.5
  %242 = load i32, i32* @y.6
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %249, !dbg !486

249:                                              ; preds = %originalBBpart244
  %250 = load i32, i32* @x.5
  %251 = load i32, i32* @y.6
  %252 = sub i32 %250, 1
  %253 = mul i32 %250, %252
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %255, %256
  br i1 %257, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %249, %originalBB46alteredBB
  %collatzVar1 = alloca i32
  %258 = load i32, i32* @x.5
  %259 = load i32, i32* @y.6
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %266

266:                                              ; preds = %originalBBpart248
  %267 = load i32, i32* @x.5
  %268 = load i32, i32* @y.6
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %266, %originalBB50alteredBB
  %275 = load i32, i32* @inVal0
  %276 = icmp sgt i32 %275, 1
  %277 = load i32, i32* @x.5
  %278 = load i32, i32* @y.6
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br i1 %276, label %286, label %285

285:                                              ; preds = %originalBBpart252
  store i32 54, i32* %collatzVar1
  br label %286

286:                                              ; preds = %285, %originalBBpart252
  %287 = load i32, i32* @x.5
  %288 = load i32, i32* @y.6
  %289 = sub i32 %287, 1
  %290 = mul i32 %287, %289
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %288, 10
  %294 = or i1 %292, %293
  br i1 %294, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %286, %originalBB54alteredBB
  %295 = load i8**, i8*** @inVal1
  %296 = getelementptr inbounds i8*, i8** %295, i64 1
  %297 = load i8*, i8** %296
  %controle2 = call i32 @controle(i8* %297, i32 0)
  store i32 %controle2, i32* %collatzVar1
  %298 = load i32, i32* @x.5
  %299 = load i32, i32* @y.6
  %300 = sub i32 %298, 1
  %301 = mul i32 %298, %300
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %303, %304
  br i1 %305, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %306

306:                                              ; preds = %originalBBpart287, %352, %originalBBpart256
  %307 = load i32, i32* @x.5
  %308 = load i32, i32* @y.6
  %309 = sub i32 %307, 1
  %310 = mul i32 %307, %309
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %312, %313
  br i1 %314, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %306, %originalBB58alteredBB
  %315 = load i32, i32* %collatzVar1
  %316 = icmp sgt i32 %315, 1
  %317 = load i32, i32* @x.5
  %318 = load i32, i32* @y.6
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br i1 %316, label %325, label %567

325:                                              ; preds = %originalBBpart260
  %326 = load i32, i32* @x.5
  %327 = load i32, i32* @y.6
  %328 = sub i32 %326, 1
  %329 = mul i32 %326, %328
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %331, %332
  br i1 %333, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %325, %originalBB62alteredBB
  %334 = load i32, i32* %collatzVar1
  %335 = srem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = load i32, i32* @x.5
  %338 = load i32, i32* @y.6
  %339 = sub i32 %337, 1
  %340 = mul i32 %337, %339
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %342, %343
  br i1 %344, label %originalBBpart270, label %originalBB62alteredBB

originalBBpart270:                                ; preds = %originalBB62
  br i1 %336, label %345, label %348

345:                                              ; preds = %originalBBpart270
  %346 = load i32, i32* %collatzVar1
  %347 = sdiv i32 %346, 2
  store i32 %347, i32* %collatzVar1
  br label %352

348:                                              ; preds = %originalBBpart270
  %349 = load i32, i32* %collatzVar1
  %350 = mul i32 %349, 3
  %351 = add i32 %350, 1
  store i32 %351, i32* %collatzVar1
  br label %352

352:                                              ; preds = %348, %345
  %353 = load i32, i32* %collatzVar1
  %354 = sub i32 %240, %353
  %355 = icmp sgt i32 %354, -2
  br i1 %355, label %356, label %306

356:                                              ; preds = %352
  %357 = load i32, i32* @x.5
  %358 = load i32, i32* @y.6
  %359 = sub i32 %357, 1
  %360 = mul i32 %357, %359
  %361 = urem i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %358, 10
  %364 = or i1 %362, %363
  br i1 %364, label %originalBB72, label %originalBB72alteredBB

originalBB72:                                     ; preds = %356, %originalBB72alteredBB
  %365 = load i32, i32* %collatzVar1
  %366 = add i32 %240, %365
  %367 = icmp slt i32 %366, 2
  %368 = load i32, i32* @x.5
  %369 = load i32, i32* @y.6
  %370 = sub i32 %368, 1
  %371 = mul i32 %368, %370
  %372 = urem i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %369, 10
  %375 = or i1 %373, %374
  br i1 %375, label %originalBBpart287, label %originalBB72alteredBB

originalBBpart287:                                ; preds = %originalBB72
  br i1 %367, label %376, label %306

376:                                              ; preds = %originalBBpart287
  %377 = load i32, i32* @x.5
  %378 = load i32, i32* @y.6
  %379 = sub i32 %377, 1
  %380 = mul i32 %377, %379
  %381 = urem i32 %380, 2
  %382 = icmp eq i32 %381, 0
  %383 = icmp slt i32 %378, 10
  %384 = or i1 %382, %383
  br i1 %384, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %376, %originalBB89alteredBB
  %385 = call i32 @stat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0), %struct.stat* %11) #10, !dbg !487
  %386 = load i32, i32* @x.5
  %387 = load i32, i32* @y.6
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  br label %394, !dbg !488

394:                                              ; preds = %originalBBpart291
  %collatzVar = alloca i32
  br label %395

395:                                              ; preds = %394
  %396 = load i32, i32* @x.5
  %397 = load i32, i32* @y.6
  %398 = sub i32 %396, 1
  %399 = mul i32 %396, %398
  %400 = urem i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = icmp slt i32 %397, 10
  %403 = or i1 %401, %402
  br i1 %403, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %395, %originalBB93alteredBB
  %404 = load i32, i32* @inVal0
  %405 = icmp sgt i32 %404, 1
  %406 = load i32, i32* @x.5
  %407 = load i32, i32* @y.6
  %408 = sub i32 %406, 1
  %409 = mul i32 %406, %408
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %411, %412
  br i1 %413, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  br i1 %405, label %431, label %414

414:                                              ; preds = %originalBBpart295
  %415 = load i32, i32* @x.5
  %416 = load i32, i32* @y.6
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %414, %originalBB97alteredBB
  store i32 51, i32* %collatzVar
  %423 = load i32, i32* @x.5
  %424 = load i32, i32* @y.6
  %425 = sub i32 %423, 1
  %426 = mul i32 %423, %425
  %427 = urem i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %424, 10
  %430 = or i1 %428, %429
  br i1 %430, label %originalBBpart299, label %originalBB97alteredBB

originalBBpart299:                                ; preds = %originalBB97
  br label %431

431:                                              ; preds = %originalBBpart299, %originalBBpart295
  %432 = load i32, i32* @x.5
  %433 = load i32, i32* @y.6
  %434 = sub i32 %432, 1
  %435 = mul i32 %432, %434
  %436 = urem i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = icmp slt i32 %433, 10
  %439 = or i1 %437, %438
  br i1 %439, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %431, %originalBB101alteredBB
  %440 = load i8**, i8*** @inVal1
  %441 = getelementptr inbounds i8*, i8** %440, i64 1
  %442 = load i8*, i8** %441
  %controle = call i32 @controle(i8* %442, i32 0)
  store i32 %controle, i32* %collatzVar
  %443 = load i32, i32* @x.5
  %444 = load i32, i32* @y.6
  %445 = sub i32 %443, 1
  %446 = mul i32 %443, %445
  %447 = urem i32 %446, 2
  %448 = icmp eq i32 %447, 0
  %449 = icmp slt i32 %444, 10
  %450 = or i1 %448, %449
  br i1 %450, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  br label %451

451:                                              ; preds = %501, %497, %originalBBpart2103
  %452 = load i32, i32* %collatzVar
  %453 = icmp sgt i32 %452, 1
  br i1 %453, label %454, label %567

454:                                              ; preds = %451
  %455 = load i32, i32* %collatzVar
  %456 = srem i32 %455, 2
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %458, label %477

458:                                              ; preds = %454
  %459 = load i32, i32* @x.5
  %460 = load i32, i32* @y.6
  %461 = sub i32 %459, 1
  %462 = mul i32 %459, %461
  %463 = urem i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %460, 10
  %466 = or i1 %464, %465
  br i1 %466, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %458, %originalBB105alteredBB
  %467 = load i32, i32* %collatzVar
  %468 = sdiv i32 %467, 2
  store i32 %468, i32* %collatzVar
  %469 = load i32, i32* @x.5
  %470 = load i32, i32* @y.6
  %471 = sub i32 %469, 1
  %472 = mul i32 %469, %471
  %473 = urem i32 %472, 2
  %474 = icmp eq i32 %473, 0
  %475 = icmp slt i32 %470, 10
  %476 = or i1 %474, %475
  br i1 %476, label %originalBBpart2121, label %originalBB105alteredBB

originalBBpart2121:                               ; preds = %originalBB105
  br label %497

477:                                              ; preds = %454
  %478 = load i32, i32* @x.5
  %479 = load i32, i32* @y.6
  %480 = sub i32 %478, 1
  %481 = mul i32 %478, %480
  %482 = urem i32 %481, 2
  %483 = icmp eq i32 %482, 0
  %484 = icmp slt i32 %479, 10
  %485 = or i1 %483, %484
  br i1 %485, label %originalBB123, label %originalBB123alteredBB

originalBB123:                                    ; preds = %477, %originalBB123alteredBB
  %486 = load i32, i32* %collatzVar
  %487 = mul i32 %486, 3
  %488 = add i32 %487, 1
  store i32 %488, i32* %collatzVar
  %489 = load i32, i32* @x.5
  %490 = load i32, i32* @y.6
  %491 = sub i32 %489, 1
  %492 = mul i32 %489, %491
  %493 = urem i32 %492, 2
  %494 = icmp eq i32 %493, 0
  %495 = icmp slt i32 %490, 10
  %496 = or i1 %494, %495
  br i1 %496, label %originalBBpart2134, label %originalBB123alteredBB

originalBBpart2134:                               ; preds = %originalBB123
  br label %497

497:                                              ; preds = %originalBBpart2134, %originalBBpart2121
  %498 = load i32, i32* %collatzVar
  %499 = sub i32 %385, %498
  %500 = icmp sgt i32 %499, -2
  br i1 %500, label %501, label %451

501:                                              ; preds = %497
  %502 = load i32, i32* %collatzVar
  %503 = add i32 %385, %502
  %504 = icmp slt i32 %503, 2
  br i1 %504, label %505, label %451

505:                                              ; preds = %501
  %506 = load i32, i32* @x.5
  %507 = load i32, i32* @y.6
  %508 = sub i32 %506, 1
  %509 = mul i32 %506, %508
  %510 = urem i32 %509, 2
  %511 = icmp eq i32 %510, 0
  %512 = icmp slt i32 %507, 10
  %513 = or i1 %511, %512
  br i1 %513, label %originalBB136, label %originalBB136alteredBB

originalBB136:                                    ; preds = %505, %originalBB136alteredBB
  %514 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 1, !dbg !489
  %515 = load i64, i64* %514, align 8, !dbg !489
  %516 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 1, !dbg !489
  %517 = load i64, i64* %516, align 8, !dbg !489
  %518 = icmp eq i64 %515, %517, !dbg !489
  %519 = load i32, i32* @x.5
  %520 = load i32, i32* @y.6
  %521 = sub i32 %519, 1
  %522 = mul i32 %519, %521
  %523 = urem i32 %522, 2
  %524 = icmp eq i32 %523, 0
  %525 = icmp slt i32 %520, 10
  %526 = or i1 %524, %525
  br i1 %526, label %originalBBpart2138, label %originalBB136alteredBB

originalBBpart2138:                               ; preds = %originalBB136
  br i1 %518, label %527, label %567, !dbg !489

527:                                              ; preds = %originalBBpart2138
  %528 = load i32, i32* @x.5
  %529 = load i32, i32* @y.6
  %530 = sub i32 %528, 1
  %531 = mul i32 %528, %530
  %532 = urem i32 %531, 2
  %533 = icmp eq i32 %532, 0
  %534 = icmp slt i32 %529, 10
  %535 = or i1 %533, %534
  br i1 %535, label %originalBB140, label %originalBB140alteredBB

originalBB140:                                    ; preds = %527, %originalBB140alteredBB
  %536 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 0, !dbg !489
  %537 = load i64, i64* %536, align 8, !dbg !489
  %538 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 0, !dbg !489
  %539 = load i64, i64* %538, align 8, !dbg !489
  %540 = icmp eq i64 %537, %539, !dbg !489
  %541 = load i32, i32* @x.5
  %542 = load i32, i32* @y.6
  %543 = sub i32 %541, 1
  %544 = mul i32 %541, %543
  %545 = urem i32 %544, 2
  %546 = icmp eq i32 %545, 0
  %547 = icmp slt i32 %542, 10
  %548 = or i1 %546, %547
  br i1 %548, label %originalBBpart2142, label %originalBB140alteredBB

originalBBpart2142:                               ; preds = %originalBB140
  br i1 %540, label %549, label %567, !dbg !490

549:                                              ; preds = %originalBBpart2142
  %550 = load i32, i32* @x.5
  %551 = load i32, i32* @y.6
  %552 = sub i32 %550, 1
  %553 = mul i32 %550, %552
  %554 = urem i32 %553, 2
  %555 = icmp eq i32 %554, 0
  %556 = icmp slt i32 %551, 10
  %557 = or i1 %555, %556
  br i1 %557, label %originalBB144, label %originalBB144alteredBB

originalBB144:                                    ; preds = %549, %originalBB144alteredBB
  %558 = load i8*, i8** %12, align 8, !dbg !491
  store i8* %558, i8** %9, align 8, !dbg !492
  %559 = load i32, i32* @x.5
  %560 = load i32, i32* @y.6
  %561 = sub i32 %559, 1
  %562 = mul i32 %559, %561
  %563 = urem i32 %562, 2
  %564 = icmp eq i32 %563, 0
  %565 = icmp slt i32 %560, 10
  %566 = or i1 %564, %565
  br i1 %566, label %originalBBpart2146, label %originalBB144alteredBB

originalBBpart2146:                               ; preds = %originalBB144
  br label %568, !dbg !492

567:                                              ; preds = %originalBBpart2142, %originalBBpart2138, %451, %originalBBpart260
  store i8* null, i8** %9, align 8, !dbg !493
  br label %568, !dbg !493

568:                                              ; preds = %567, %originalBBpart2146, %originalBBpart236, %originalBBpart28
  %569 = load i32, i32* @x.5
  %570 = load i32, i32* @y.6
  %571 = sub i32 %569, 1
  %572 = mul i32 %569, %571
  %573 = urem i32 %572, 2
  %574 = icmp eq i32 %573, 0
  %575 = icmp slt i32 %570, 10
  %576 = or i1 %574, %575
  br i1 %576, label %originalBB148, label %originalBB148alteredBB

originalBB148:                                    ; preds = %568, %originalBB148alteredBB
  %577 = load i8*, i8** %9, align 8, !dbg !494
  %578 = load i32, i32* @x.5
  %579 = load i32, i32* @y.6
  %580 = sub i32 %578, 1
  %581 = mul i32 %578, %580
  %582 = urem i32 %581, 2
  %583 = icmp eq i32 %582, 0
  %584 = icmp slt i32 %579, 10
  %585 = or i1 %583, %584
  br i1 %585, label %originalBBpart2150, label %originalBB148alteredBB

originalBBpart2150:                               ; preds = %originalBB148
  ret i8* %577, !dbg !494

originalBBalteredBB:                              ; preds = %originalBB, %0
  %586 = alloca i8*, align 8
  %587 = alloca %struct.stat, align 8
  %588 = alloca %struct.stat, align 8
  %589 = alloca i8*, align 8
  %590 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata %struct.stat* %587, metadata !495, metadata !DIExpression()), !dbg !443
  call void @llvm.dbg.declare(metadata %struct.stat* %588, metadata !530, metadata !DIExpression()), !dbg !445
  call void @llvm.dbg.declare(metadata i8** %589, metadata !531, metadata !DIExpression()), !dbg !447
  %591 = call i8* @getenv(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0)) #10, !dbg !448
  store i8* %591, i8** %589, align 8, !dbg !447
  call void @llvm.dbg.declare(metadata i8** %590, metadata !532, metadata !DIExpression()), !dbg !450
  %592 = load i8*, i8** %589, align 8, !dbg !451
  %593 = icmp ne i8* %592, null, !dbg !451
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  %594 = load i8*, i8** %12, align 8, !dbg !454
  %595 = getelementptr inbounds i8, i8* %594, i64 0, !dbg !454
  %596 = load i8, i8* %595, align 1, !dbg !454
  %597 = sext i8 %596 to i32, !dbg !454
  %598 = icmp ne i32 %597, 47, !dbg !455
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %47
  store i8* null, i8** %9, align 8, !dbg !457
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %64
  %599 = load i8*, i8** %12, align 8, !dbg !458
  store i8* %599, i8** %13, align 8, !dbg !459
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %82
  %600 = load i8*, i8** %13, align 8, !dbg !461
  %601 = call i8* @strstr(i8* %600, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i64 0, i64 0)) #13, !dbg !462
  store i8* %601, i8** %13, align 8, !dbg !463
  %602 = icmp ne i8* %601, null, !dbg !460
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %107
  %603 = load i8*, i8** %13, align 8, !dbg !468
  %604 = getelementptr inbounds i8, i8* %603, i64 2, !dbg !468
  %605 = load i8, i8* %604, align 1, !dbg !468
  %606 = sext i8 %605 to i32, !dbg !468
  %607 = icmp eq i32 %606, 47, !dbg !469
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %129
  %608 = load i8*, i8** %13, align 8, !dbg !471
  %609 = getelementptr inbounds i8, i8* %608, i64 2, !dbg !471
  %610 = load i8, i8* %609, align 1, !dbg !471
  %611 = sext i8 %610 to i32, !dbg !471
  %612 = icmp eq i32 %611, 46, !dbg !472
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %151
  %613 = load i8*, i8** %13, align 8, !dbg !474
  %614 = getelementptr inbounds i8, i8* %613, i64 3, !dbg !474
  %615 = load i8, i8* %614, align 1, !dbg !474
  %616 = icmp ne i8 %615, 0, !dbg !474
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %172
  %617 = load i8*, i8** %13, align 8, !dbg !476
  %618 = getelementptr inbounds i8, i8* %617, i64 3, !dbg !476
  %619 = load i8, i8* %618, align 1, !dbg !476
  %620 = sext i8 %619 to i32, !dbg !476
  %621 = icmp eq i32 %620, 47, !dbg !477
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %194
  store i8* null, i8** %9, align 8, !dbg !479
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %211
  %622 = load i8*, i8** %13, align 8, !dbg !480
  %623 = getelementptr inbounds i8, i8* %622, i32 1, !dbg !480
  store i8* %623, i8** %13, align 8, !dbg !480
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %230
  %624 = load i8*, i8** %12, align 8, !dbg !483
  %625 = call i32 @stat(i8* %624, %struct.stat* %10) #10, !dbg !485
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %249
  %collatzVar1alteredBB = alloca i32
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %266
  %626 = load i32, i32* @inVal0
  %627 = icmp sgt i32 %626, 1
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %286
  %628 = load i8**, i8*** @inVal1
  %629 = getelementptr inbounds i8*, i8** %628, i64 1
  %630 = load i8*, i8** %629
  %controle2alteredBB = call i32 @controle(i8* %630, i32 0)
  store i32 %controle2alteredBB, i32* %collatzVar1
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %306
  %631 = load i32, i32* %collatzVar1
  %632 = icmp sgt i32 %631, 1
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %325
  %633 = load i32, i32* %collatzVar1
  %_ = sub i32 0, %633
  %gen = add i32 %_, 2
  %_63 = shl i32 %633, 2
  %_64 = shl i32 %633, 2
  %_65 = sub i32 %633, 2
  %gen66 = mul i32 %_65, 2
  %_67 = sub i32 0, %633
  %gen68 = add i32 %_67, 2
  %634 = srem i32 %633, 2
  %635 = icmp eq i32 %634, 0
  br label %originalBB62

originalBB72alteredBB:                            ; preds = %originalBB72, %356
  %636 = load i32, i32* %collatzVar1
  %_73 = sub i32 %240, %636
  %gen74 = mul i32 %_73, %636
  %_75 = sub i32 %240, %636
  %gen76 = mul i32 %_75, %636
  %_77 = sub i32 %240, %636
  %gen78 = mul i32 %_77, %636
  %_79 = sub i32 0, %240
  %gen80 = add i32 %_79, %636
  %_81 = sub i32 0, %240
  %gen82 = add i32 %_81, %636
  %_83 = shl i32 %240, %636
  %_84 = sub i32 0, %240
  %gen85 = add i32 %_84, %636
  %637 = add i32 %240, %636
  %638 = icmp slt i32 %637, 2
  br label %originalBB72

originalBB89alteredBB:                            ; preds = %originalBB89, %376
  %639 = call i32 @stat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0), %struct.stat* %11) #10, !dbg !487
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %395
  %640 = load i32, i32* @inVal0
  %641 = icmp sgt i32 %640, 1
  br label %originalBB93

originalBB97alteredBB:                            ; preds = %originalBB97, %414
  store i32 51, i32* %collatzVar
  br label %originalBB97

originalBB101alteredBB:                           ; preds = %originalBB101, %431
  %642 = load i8**, i8*** @inVal1
  %643 = getelementptr inbounds i8*, i8** %642, i64 1
  %644 = load i8*, i8** %643
  %controlealteredBB = call i32 @controle(i8* %644, i32 0)
  store i32 %controlealteredBB, i32* %collatzVar
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %458
  %645 = load i32, i32* %collatzVar
  %_106 = sub i32 0, %645
  %gen107 = add i32 %_106, 2
  %_108 = sub i32 %645, 2
  %gen109 = mul i32 %_108, 2
  %_110 = sub i32 %645, 2
  %gen111 = mul i32 %_110, 2
  %_112 = sub i32 0, %645
  %gen113 = add i32 %_112, 2
  %_114 = sub i32 %645, 2
  %gen115 = mul i32 %_114, 2
  %_116 = sub i32 %645, 2
  %gen117 = mul i32 %_116, 2
  %_118 = sub i32 %645, 2
  %gen119 = mul i32 %_118, 2
  %646 = sdiv i32 %645, 2
  store i32 %646, i32* %collatzVar
  br label %originalBB105

originalBB123alteredBB:                           ; preds = %originalBB123, %477
  %647 = load i32, i32* %collatzVar
  %_124 = sub i32 %647, 3
  %gen125 = mul i32 %_124, 3
  %_126 = shl i32 %647, 3
  %648 = mul i32 %647, 3
  %_127 = shl i32 %648, 1
  %_128 = sub i32 0, %648
  %gen129 = add i32 %_128, 1
  %_130 = shl i32 %648, 1
  %_131 = sub i32 %648, 1
  %gen132 = mul i32 %_131, 1
  %649 = add i32 %648, 1
  store i32 %649, i32* %collatzVar
  br label %originalBB123

originalBB136alteredBB:                           ; preds = %originalBB136, %505
  %650 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 1, !dbg !489
  %651 = load i64, i64* %650, align 8, !dbg !489
  %652 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 1, !dbg !489
  %653 = load i64, i64* %652, align 8, !dbg !489
  %654 = icmp eq i64 %651, %653, !dbg !489
  br label %originalBB136

originalBB140alteredBB:                           ; preds = %originalBB140, %527
  %655 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 0, !dbg !489
  %656 = load i64, i64* %655, align 8, !dbg !489
  %657 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 0, !dbg !489
  %658 = load i64, i64* %657, align 8, !dbg !489
  %659 = icmp eq i64 %656, %658, !dbg !489
  br label %originalBB140

originalBB144alteredBB:                           ; preds = %originalBB144, %549
  %660 = load i8*, i8** %12, align 8, !dbg !491
  store i8* %660, i8** %9, align 8, !dbg !492
  br label %originalBB144

originalBB148alteredBB:                           ; preds = %originalBB148, %568
  %661 = load i8*, i8** %9, align 8, !dbg !494
  br label %originalBB148
}

declare dso_local i32 @puts(i8*) #3

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.file_name* @file_name_init() #4 !dbg !533 {
  %1 = load i32, i32* @x.7
  %2 = load i32, i32* @y.8
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = alloca %struct.file_name*, align 8
  call void @llvm.dbg.declare(metadata %struct.file_name** %9, metadata !536, metadata !DIExpression()), !dbg !537
  %10 = call noalias i8* @xmalloc(i64 24), !dbg !538
  %11 = bitcast i8* %10 to %struct.file_name*, !dbg !538
  store %struct.file_name* %11, %struct.file_name** %9, align 8, !dbg !537
  %12 = load %struct.file_name*, %struct.file_name** %9, align 8, !dbg !539
  %13 = getelementptr inbounds %struct.file_name, %struct.file_name* %12, i32 0, i32 1, !dbg !540
  store i64 8192, i64* %13, align 8, !dbg !541
  %14 = load %struct.file_name*, %struct.file_name** %9, align 8, !dbg !542
  %15 = getelementptr inbounds %struct.file_name, %struct.file_name* %14, i32 0, i32 1, !dbg !543
  %16 = load i64, i64* %15, align 8, !dbg !543
  %17 = call noalias i8* @xmalloc(i64 %16), !dbg !544
  %18 = load %struct.file_name*, %struct.file_name** %9, align 8, !dbg !545
  %19 = getelementptr inbounds %struct.file_name, %struct.file_name* %18, i32 0, i32 0, !dbg !546
  store i8* %17, i8** %19, align 8, !dbg !547
  %20 = load %struct.file_name*, %struct.file_name** %9, align 8, !dbg !548
  %21 = getelementptr inbounds %struct.file_name, %struct.file_name* %20, i32 0, i32 0, !dbg !549
  %22 = load i8*, i8** %21, align 8, !dbg !549
  %23 = load %struct.file_name*, %struct.file_name** %9, align 8, !dbg !550
  %24 = getelementptr inbounds %struct.file_name, %struct.file_name* %23, i32 0, i32 1, !dbg !551
  %25 = load i64, i64* %24, align 8, !dbg !551
  %26 = sub i64 %25, 1, !dbg !552
  %27 = getelementptr inbounds i8, i8* %22, i64 %26, !dbg !553
  %28 = load %struct.file_name*, %struct.file_name** %9, align 8, !dbg !554
  %29 = getelementptr inbounds %struct.file_name, %struct.file_name* %28, i32 0, i32 2, !dbg !555
  store i8* %27, i8** %29, align 8, !dbg !556
  %30 = load %struct.file_name*, %struct.file_name** %9, align 8, !dbg !557
  %31 = getelementptr inbounds %struct.file_name, %struct.file_name* %30, i32 0, i32 2, !dbg !558
  %32 = load i8*, i8** %31, align 8, !dbg !558
  %33 = getelementptr inbounds i8, i8* %32, i64 0, !dbg !557
  store i8 0, i8* %33, align 1, !dbg !559
  %34 = load %struct.file_name*, %struct.file_name** %9, align 8, !dbg !560
  %35 = load i32, i32* @x.7
  %36 = load i32, i32* @y.8
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %struct.file_name* %34, !dbg !561

originalBBalteredBB:                              ; preds = %originalBB, %0
  %43 = alloca %struct.file_name*, align 8
  call void @llvm.dbg.declare(metadata %struct.file_name** %43, metadata !562, metadata !DIExpression()), !dbg !537
  %44 = call noalias i8* @xmalloc(i64 24), !dbg !538
  %45 = bitcast i8* %44 to %struct.file_name*, !dbg !538
  store %struct.file_name* %45, %struct.file_name** %43, align 8, !dbg !537
  %46 = load %struct.file_name*, %struct.file_name** %43, align 8, !dbg !539
  %47 = getelementptr inbounds %struct.file_name, %struct.file_name* %46, i32 0, i32 1, !dbg !540
  store i64 8192, i64* %47, align 8, !dbg !541
  %48 = load %struct.file_name*, %struct.file_name** %43, align 8, !dbg !542
  %49 = getelementptr inbounds %struct.file_name, %struct.file_name* %48, i32 0, i32 1, !dbg !543
  %50 = load i64, i64* %49, align 8, !dbg !543
  %51 = call noalias i8* @xmalloc(i64 %50), !dbg !544
  %52 = load %struct.file_name*, %struct.file_name** %43, align 8, !dbg !545
  %53 = getelementptr inbounds %struct.file_name, %struct.file_name* %52, i32 0, i32 0, !dbg !546
  store i8* %51, i8** %53, align 8, !dbg !547
  %54 = load %struct.file_name*, %struct.file_name** %43, align 8, !dbg !548
  %55 = getelementptr inbounds %struct.file_name, %struct.file_name* %54, i32 0, i32 0, !dbg !549
  %56 = load i8*, i8** %55, align 8, !dbg !549
  %57 = load %struct.file_name*, %struct.file_name** %43, align 8, !dbg !550
  %58 = getelementptr inbounds %struct.file_name, %struct.file_name* %57, i32 0, i32 1, !dbg !551
  %59 = load i64, i64* %58, align 8, !dbg !551
  %_ = shl i64 %59, 1
  %60 = sub i64 %59, 1, !dbg !552
  %61 = getelementptr inbounds i8, i8* %56, i64 %60, !dbg !553
  %62 = load %struct.file_name*, %struct.file_name** %43, align 8, !dbg !554
  %63 = getelementptr inbounds %struct.file_name, %struct.file_name* %62, i32 0, i32 2, !dbg !555
  store i8* %61, i8** %63, align 8, !dbg !556
  %64 = load %struct.file_name*, %struct.file_name** %43, align 8, !dbg !557
  %65 = getelementptr inbounds %struct.file_name, %struct.file_name* %64, i32 0, i32 2, !dbg !558
  %66 = load i8*, i8** %65, align 8, !dbg !558
  %67 = getelementptr inbounds i8, i8* %66, i64 0, !dbg !557
  store i8 0, i8* %67, align 1, !dbg !559
  %68 = load %struct.file_name*, %struct.file_name** %43, align 8, !dbg !560
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @robust_getcwd(%struct.file_name*) #4 !dbg !584 {
  %2 = alloca %struct.file_name*, align 8
  %3 = alloca i64, align 8
  %4 = alloca %struct.dev_ino, align 8
  %5 = alloca %struct.dev_ino*, align 8
  %6 = alloca %struct.stat, align 8
  store %struct.file_name* %0, %struct.file_name** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.file_name** %2, metadata !587, metadata !DIExpression()), !dbg !588
  call void @llvm.dbg.declare(metadata i64* %3, metadata !589, metadata !DIExpression()), !dbg !590
  store i64 1, i64* %3, align 8, !dbg !590
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %4, metadata !591, metadata !DIExpression()), !dbg !600
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %5, metadata !601, metadata !DIExpression()), !dbg !603
  %7 = call %struct.dev_ino* @get_root_dev_ino(%struct.dev_ino* %4), !dbg !604
  store %struct.dev_ino* %7, %struct.dev_ino** %5, align 8, !dbg !603
  call void @llvm.dbg.declare(metadata %struct.stat* %6, metadata !605, metadata !DIExpression()), !dbg !606
  %8 = load %struct.dev_ino*, %struct.dev_ino** %5, align 8, !dbg !607
  %9 = icmp eq %struct.dev_ino* %8, null, !dbg !609
  br i1 %9, label %10, label %31, !dbg !610

10:                                               ; preds = %1
  %11 = load i32, i32* @x.9
  %12 = load i32, i32* @y.10
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = call i32* @__errno_location() #15, !dbg !611
  %20 = load i32, i32* %19, align 4, !dbg !611
  %21 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.39, i64 0, i64 0)) #10, !dbg !611
  %22 = call i8* @quotearg_style(i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40, i64 0, i64 0)), !dbg !611
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %20, i8* %21, i8* %22), !dbg !611
  %23 = load i32, i32* @x.9
  %24 = load i32, i32* @y.10
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable, !dbg !611

31:                                               ; preds = %1
  %32 = load i32, i32* @x.9
  %33 = load i32, i32* @y.10
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = call i32 @stat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0), %struct.stat* %6) #10, !dbg !612
  %41 = icmp slt i32 %40, 0, !dbg !614
  %42 = load i32, i32* @x.9
  %43 = load i32, i32* @y.10
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %41, label %50, label %71, !dbg !615

50:                                               ; preds = %originalBBpart24
  %51 = load i32, i32* @x.9
  %52 = load i32, i32* @y.10
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %50, %originalBB6alteredBB
  %59 = call i32* @__errno_location() #15, !dbg !616
  %60 = load i32, i32* %59, align 4, !dbg !616
  %61 = call i8* @gettext(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i64 0, i64 0)) #10, !dbg !616
  %62 = call i8* @quotearg_style(i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0)), !dbg !616
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %60, i8* %61, i8* %62), !dbg !616
  %63 = load i32, i32* @x.9
  %64 = load i32, i32* @y.10
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable, !dbg !616

71:                                               ; preds = %originalBBpart24
  %72 = load i32, i32* @x.9
  %73 = load i32, i32* @y.10
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %71, %originalBB10alteredBB
  %80 = load i32, i32* @x.9
  %81 = load i32, i32* @y.10
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %88, !dbg !617

88:                                               ; preds = %originalBBpart222, %originalBBpart212
  %89 = load i32, i32* @x.9
  %90 = load i32, i32* @y.10
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %88, %originalBB14alteredBB
  %97 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 1, !dbg !618
  %98 = load i64, i64* %97, align 8, !dbg !618
  %99 = load %struct.dev_ino*, %struct.dev_ino** %5, align 8, !dbg !618
  %100 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %99, i32 0, i32 0, !dbg !618
  %101 = load i64, i64* %100, align 8, !dbg !618
  %102 = icmp eq i64 %98, %101, !dbg !618
  %103 = load i32, i32* @x.9
  %104 = load i32, i32* @y.10
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %102, label %111, label %119, !dbg !618

111:                                              ; preds = %originalBBpart216
  %112 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 0, !dbg !618
  %113 = load i64, i64* %112, align 8, !dbg !618
  %114 = load %struct.dev_ino*, %struct.dev_ino** %5, align 8, !dbg !618
  %115 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %114, i32 0, i32 1, !dbg !618
  %116 = load i64, i64* %115, align 8, !dbg !618
  %117 = icmp eq i64 %113, %116, !dbg !618
  br i1 %117, label %118, label %119, !dbg !621

118:                                              ; preds = %111
  br label %139, !dbg !622

119:                                              ; preds = %111, %originalBBpart216
  %120 = load i32, i32* @x.9
  %121 = load i32, i32* @y.10
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %119, %originalBB18alteredBB
  %128 = load %struct.file_name*, %struct.file_name** %2, align 8, !dbg !623
  %129 = load i64, i64* %3, align 8, !dbg !624
  %130 = add i64 %129, 1, !dbg !624
  store i64 %130, i64* %3, align 8, !dbg !624
  call void @find_dir_entry(%struct.stat* %6, %struct.file_name* %128, i64 %129), !dbg !625
  %131 = load i32, i32* @x.9
  %132 = load i32, i32* @y.10
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart222, label %originalBB18alteredBB

originalBBpart222:                                ; preds = %originalBB18
  br label %88, !dbg !617, !llvm.loop !626

139:                                              ; preds = %118
  %140 = load i32, i32* @x.9
  %141 = load i32, i32* @y.10
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %139, %originalBB24alteredBB
  %148 = load %struct.file_name*, %struct.file_name** %2, align 8, !dbg !628
  %149 = getelementptr inbounds %struct.file_name, %struct.file_name* %148, i32 0, i32 2, !dbg !630
  %150 = load i8*, i8** %149, align 8, !dbg !630
  %151 = getelementptr inbounds i8, i8* %150, i64 0, !dbg !628
  %152 = load i8, i8* %151, align 1, !dbg !628
  %153 = sext i8 %152 to i32, !dbg !628
  %154 = icmp eq i32 %153, 0, !dbg !631
  %155 = load i32, i32* @x.9
  %156 = load i32, i32* @y.10
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBBpart227, label %originalBB24alteredBB

originalBBpart227:                                ; preds = %originalBB24
  br i1 %154, label %163, label %181, !dbg !632

163:                                              ; preds = %originalBBpart227
  %164 = load i32, i32* @x.9
  %165 = load i32, i32* @y.10
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %163, %originalBB29alteredBB
  %172 = load %struct.file_name*, %struct.file_name** %2, align 8, !dbg !633
  call void @file_name_prepend(%struct.file_name* %172, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), i64 0), !dbg !634
  %173 = load i32, i32* @x.9
  %174 = load i32, i32* @y.10
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br label %181, !dbg !634

181:                                              ; preds = %originalBBpart231, %originalBBpart227
  ret void, !dbg !635

originalBBalteredBB:                              ; preds = %originalBB, %10
  %182 = call i32* @__errno_location() #15, !dbg !611
  %183 = load i32, i32* %182, align 4, !dbg !611
  %184 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.39, i64 0, i64 0)) #10, !dbg !611
  %185 = call i8* @quotearg_style(i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40, i64 0, i64 0)), !dbg !611
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %183, i8* %184, i8* %185), !dbg !611
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %186 = call i32 @stat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0), %struct.stat* %6) #10, !dbg !612
  %187 = icmp slt i32 %186, 0, !dbg !614
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %50
  %188 = call i32* @__errno_location() #15, !dbg !616
  %189 = load i32, i32* %188, align 4, !dbg !616
  %190 = call i8* @gettext(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i64 0, i64 0)) #10, !dbg !616
  %191 = call i8* @quotearg_style(i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0)), !dbg !616
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %189, i8* %190, i8* %191), !dbg !616
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %71
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %88
  %192 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 1, !dbg !618
  %193 = load i64, i64* %192, align 8, !dbg !618
  %194 = load %struct.dev_ino*, %struct.dev_ino** %5, align 8, !dbg !618
  %195 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %194, i32 0, i32 0, !dbg !618
  %196 = load i64, i64* %195, align 8, !dbg !618
  %197 = icmp eq i64 %193, %196, !dbg !618
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %119
  %198 = load %struct.file_name*, %struct.file_name** %2, align 8, !dbg !623
  %199 = load i64, i64* %3, align 8, !dbg !624
  %_ = sub i64 %199, 1
  %gen = mul i64 %_, 1
  %_19 = sub i64 0, %199
  %gen20 = add i64 %_19, 1
  %200 = add i64 %199, 1, !dbg !624
  store i64 %200, i64* %3, align 8, !dbg !624
  call void @find_dir_entry(%struct.stat* %6, %struct.file_name* %198, i64 %199), !dbg !625
  br label %originalBB18

originalBB24alteredBB:                            ; preds = %originalBB24, %139
  %201 = load %struct.file_name*, %struct.file_name** %2, align 8, !dbg !628
  %202 = getelementptr inbounds %struct.file_name, %struct.file_name* %201, i32 0, i32 2, !dbg !630
  %203 = load i8*, i8** %202, align 8, !dbg !630
  %204 = getelementptr inbounds i8, i8* %203, i64 0, !dbg !628
  %205 = load i8, i8* %204, align 1, !dbg !628
  %206 = sext i8 %205 to i32, !dbg !628
  %207 = icmp eq i32 %206, 0, !dbg !631
  br label %originalBB24

originalBB29alteredBB:                            ; preds = %originalBB29, %163
  %208 = load %struct.file_name*, %struct.file_name** %2, align 8, !dbg !633
  call void @file_name_prepend(%struct.file_name* %208, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), i64 0), !dbg !634
  br label %originalBB29
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @file_name_free(%struct.file_name*) #4 !dbg !636 {
  %2 = load i32, i32* @x.11
  %3 = load i32, i32* @y.12
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.file_name*, align 8
  store %struct.file_name* %0, %struct.file_name** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.file_name** %10, metadata !637, metadata !DIExpression()), !dbg !638
  %11 = load %struct.file_name*, %struct.file_name** %10, align 8, !dbg !639
  %12 = getelementptr inbounds %struct.file_name, %struct.file_name* %11, i32 0, i32 0, !dbg !640
  %13 = load i8*, i8** %12, align 8, !dbg !640
  call void @free(i8* %13) #10, !dbg !641
  %14 = load %struct.file_name*, %struct.file_name** %10, align 8, !dbg !642
  %15 = bitcast %struct.file_name* %14 to i8*, !dbg !642
  call void @free(i8* %15) #10, !dbg !643
  %16 = load i32, i32* @x.11
  %17 = load i32, i32* @y.12
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !644

originalBBalteredBB:                              ; preds = %originalBB, %1
  %24 = alloca %struct.file_name*, align 8
  store %struct.file_name* %0, %struct.file_name** %24, align 8
  call void @llvm.dbg.declare(metadata %struct.file_name** %24, metadata !645, metadata !DIExpression()), !dbg !638
  %25 = load %struct.file_name*, %struct.file_name** %24, align 8, !dbg !639
  %26 = getelementptr inbounds %struct.file_name, %struct.file_name* %25, i32 0, i32 0, !dbg !640
  %27 = load i8*, i8** %26, align 8, !dbg !640
  call void @free(i8* %27) #10, !dbg !641
  %28 = load %struct.file_name*, %struct.file_name** %24, align 8, !dbg !642
  %29 = bitcast %struct.file_name* %28 to i8*, !dbg !642
  call void @free(i8* %29) #10, !dbg !643
  br label %originalBB
}

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #8

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @find_dir_entry(%struct.stat*, %struct.file_name*, i64) #4 !dbg !667 {
  %4 = load i32, i32* @x.13
  %5 = load i32, i32* @y.14
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %struct.stat*, align 8
  %13 = alloca %struct.file_name*, align 8
  %14 = alloca i64, align 8
  %15 = alloca %struct.__dirstream*, align 8
  %16 = alloca i32, align 4
  %17 = alloca %struct.stat, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca %struct.dirent*, align 8
  %21 = alloca %struct.stat, align 8
  %22 = alloca i64, align 8
  %23 = alloca i32, align 4
  store %struct.stat* %0, %struct.stat** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %12, metadata !671, metadata !DIExpression()), !dbg !672
  store %struct.file_name* %1, %struct.file_name** %13, align 8
  call void @llvm.dbg.declare(metadata %struct.file_name** %13, metadata !673, metadata !DIExpression()), !dbg !674
  store i64 %2, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !675, metadata !DIExpression()), !dbg !676
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %15, metadata !677, metadata !DIExpression()), !dbg !682
  call void @llvm.dbg.declare(metadata i32* %16, metadata !683, metadata !DIExpression()), !dbg !684
  call void @llvm.dbg.declare(metadata %struct.stat* %17, metadata !685, metadata !DIExpression()), !dbg !686
  call void @llvm.dbg.declare(metadata i8* %18, metadata !687, metadata !DIExpression()), !dbg !688
  call void @llvm.dbg.declare(metadata i8* %19, metadata !689, metadata !DIExpression()), !dbg !690
  %24 = call %struct.__dirstream* @opendir(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0)), !dbg !691
  store %struct.__dirstream* %24, %struct.__dirstream** %15, align 8, !dbg !692
  %25 = load %struct.__dirstream*, %struct.__dirstream** %15, align 8, !dbg !693
  %26 = icmp eq %struct.__dirstream* %25, null, !dbg !695
  %27 = load i32, i32* @x.13
  %28 = load i32, i32* @y.14
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %26, label %35, label %42, !dbg !696

35:                                               ; preds = %originalBBpart2
  %36 = call i32* @__errno_location() #15, !dbg !697
  %37 = load i32, i32* %36, align 4, !dbg !697
  %38 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.43, i64 0, i64 0)) #10, !dbg !697
  %39 = load i64, i64* %14, align 8, !dbg !697
  %40 = call i8* @nth_parent(i64 %39), !dbg !697
  %41 = call i8* @quote(i8* %40), !dbg !697
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %37, i8* %38, i8* %41), !dbg !697
  unreachable, !dbg !697

42:                                               ; preds = %originalBBpart2
  %43 = load i32, i32* @x.13
  %44 = load i32, i32* @y.14
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %42, %originalBB1alteredBB
  %51 = load %struct.__dirstream*, %struct.__dirstream** %15, align 8, !dbg !698
  %52 = call i32 @dirfd(%struct.__dirstream* %51) #10, !dbg !699
  store i32 %52, i32* %16, align 4, !dbg !700
  %53 = load i32, i32* %16, align 4, !dbg !701
  %54 = icmp sle i32 0, %53, !dbg !703
  %55 = load i32, i32* @x.13
  %56 = load i32, i32* @y.14
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %54, label %63, label %66, !dbg !704

63:                                               ; preds = %originalBBpart24
  %64 = load i32, i32* %16, align 4, !dbg !705
  %65 = call i32 @fchdir(i32 %64) #10, !dbg !706
  br label %84, !dbg !704

66:                                               ; preds = %originalBBpart24
  %67 = load i32, i32* @x.13
  %68 = load i32, i32* @y.14
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %66, %originalBB6alteredBB
  %75 = call i32 @chdir(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0)) #10, !dbg !707
  %76 = load i32, i32* @x.13
  %77 = load i32, i32* @y.14
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %84, !dbg !704

84:                                               ; preds = %originalBBpart28, %63
  %85 = phi i32 [ %65, %63 ], [ %75, %originalBBpart28 ], !dbg !704
  %86 = load i32, i32* @x.13
  %87 = load i32, i32* @y.14
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %84, %originalBB10alteredBB
  %94 = icmp slt i32 %85, 0, !dbg !708
  %95 = load i32, i32* @x.13
  %96 = load i32, i32* @y.14
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %94, label %103, label %126, !dbg !709

103:                                              ; preds = %originalBBpart212
  %104 = load i32, i32* @x.13
  %105 = load i32, i32* @y.14
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %103, %originalBB14alteredBB
  %112 = call i32* @__errno_location() #15, !dbg !710
  %113 = load i32, i32* %112, align 4, !dbg !710
  %114 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.44, i64 0, i64 0)) #10, !dbg !710
  %115 = load i64, i64* %14, align 8, !dbg !710
  %116 = call i8* @nth_parent(i64 %115), !dbg !710
  %117 = call i8* @quote(i8* %116), !dbg !710
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %113, i8* %114, i8* %117), !dbg !710
  %118 = load i32, i32* @x.13
  %119 = load i32, i32* @y.14
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  unreachable, !dbg !710

126:                                              ; preds = %originalBBpart212
  %127 = load i32, i32* @x.13
  %128 = load i32, i32* @y.14
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %126, %originalBB18alteredBB
  %135 = load i32, i32* %16, align 4, !dbg !711
  %136 = icmp sle i32 0, %135, !dbg !713
  %137 = load i32, i32* @x.13
  %138 = load i32, i32* @y.14
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %136, label %145, label %148, !dbg !714

145:                                              ; preds = %originalBBpart220
  %146 = load i32, i32* %16, align 4, !dbg !715
  %147 = call i32 @fstat(i32 %146, %struct.stat* %17) #10, !dbg !716
  br label %166, !dbg !714

148:                                              ; preds = %originalBBpart220
  %149 = load i32, i32* @x.13
  %150 = load i32, i32* @y.14
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %148, %originalBB22alteredBB
  %157 = call i32 @stat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0), %struct.stat* %17) #10, !dbg !717
  %158 = load i32, i32* @x.13
  %159 = load i32, i32* @y.14
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %166, !dbg !714

166:                                              ; preds = %originalBBpart224, %145
  %167 = phi i32 [ %147, %145 ], [ %157, %originalBBpart224 ], !dbg !714
  %168 = load i32, i32* @x.13
  %169 = load i32, i32* @y.14
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %166, %originalBB26alteredBB
  %176 = icmp slt i32 %167, 0, !dbg !718
  %177 = load i32, i32* @x.13
  %178 = load i32, i32* @y.14
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %176, label %185, label %208, !dbg !719

185:                                              ; preds = %originalBBpart228
  %186 = load i32, i32* @x.13
  %187 = load i32, i32* @y.14
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %185, %originalBB30alteredBB
  %194 = call i32* @__errno_location() #15, !dbg !720
  %195 = load i32, i32* %194, align 4, !dbg !720
  %196 = call i8* @gettext(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i64 0, i64 0)) #10, !dbg !720
  %197 = load i64, i64* %14, align 8, !dbg !720
  %198 = call i8* @nth_parent(i64 %197), !dbg !720
  %199 = call i8* @quote(i8* %198), !dbg !720
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %195, i8* %196, i8* %199), !dbg !720
  %200 = load i32, i32* @x.13
  %201 = load i32, i32* @y.14
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  unreachable, !dbg !720

208:                                              ; preds = %originalBBpart228
  %209 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 0, !dbg !721
  %210 = load i64, i64* %209, align 8, !dbg !721
  %211 = load %struct.stat*, %struct.stat** %12, align 8, !dbg !722
  %212 = getelementptr inbounds %struct.stat, %struct.stat* %211, i32 0, i32 0, !dbg !723
  %213 = load i64, i64* %212, align 8, !dbg !723
  %214 = icmp ne i64 %210, %213, !dbg !724
  %215 = zext i1 %214 to i8, !dbg !725
  store i8 %215, i8* %18, align 1, !dbg !725
  store i8 0, i8* %19, align 1, !dbg !726
  br label %216, !dbg !727

216:                                              ; preds = %454, %originalBBpart260, %originalBBpart252, %208
  call void @llvm.dbg.declare(metadata %struct.dirent** %20, metadata !728, metadata !DIExpression()), !dbg !740
  call void @llvm.dbg.declare(metadata %struct.stat* %21, metadata !741, metadata !DIExpression()), !dbg !742
  call void @llvm.dbg.declare(metadata i64* %22, metadata !743, metadata !DIExpression()), !dbg !744
  %217 = call i32* @__errno_location() #15, !dbg !745
  store i32 0, i32* %217, align 4, !dbg !746
  %218 = load %struct.__dirstream*, %struct.__dirstream** %15, align 8, !dbg !747
  %219 = call %struct.dirent* @readdir_ignoring_dot_and_dotdot(%struct.__dirstream* %218), !dbg !749
  store %struct.dirent* %219, %struct.dirent** %20, align 8, !dbg !750
  %220 = icmp eq %struct.dirent* %219, null, !dbg !751
  br i1 %220, label %221, label %297, !dbg !752

221:                                              ; preds = %216
  %222 = call i32* @__errno_location() #15, !dbg !753
  %223 = load i32, i32* %222, align 4, !dbg !753
  %224 = icmp ne i32 %223, 0, !dbg !753
  br i1 %224, label %225, label %280, !dbg !756

225:                                              ; preds = %221
  call void @llvm.dbg.declare(metadata i32* %23, metadata !757, metadata !DIExpression()), !dbg !759
  %226 = call i32* @__errno_location() #15, !dbg !760
  %227 = load i32, i32* %226, align 4, !dbg !760
  store i32 %227, i32* %23, align 4, !dbg !759
  %228 = load %struct.__dirstream*, %struct.__dirstream** %15, align 8, !dbg !761
  %229 = call i32 @closedir(%struct.__dirstream* %228), !dbg !762
  %230 = load i32, i32* %23, align 4, !dbg !763
  %231 = call i32* @__errno_location() #15, !dbg !764
  store i32 %230, i32* %231, align 4, !dbg !765
  %232 = add i32 %227, 5
  %233 = add i32 %230, 2
  %234 = mul i32 %227, 4
  %235 = mul i32 %232, %232
  %236 = mul i32 %235, %235
  %237 = mul i32 %233, %233
  %238 = mul i32 %237, %237
  %239 = mul i32 %234, %234
  %240 = mul i32 %239, %239
  %241 = add i32 %236, %238
  %242 = sub i32 %241, %240
  %243 = mul i32 %242, 3
  %244 = add i32 %243, 4
  %245 = icmp eq i32 %244, 4
  br i1 %245, label %263, label %246

246:                                              ; preds = %225
  %247 = load i32, i32* @x.13
  %248 = load i32, i32* @y.14
  %249 = sub i32 %247, 1
  %250 = mul i32 %247, %249
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %252, %253
  br i1 %254, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %246, %originalBB34alteredBB
  %255 = load i32, i32* @x.13
  %256 = load i32, i32* @y.14
  %257 = sub i32 %255, 1
  %258 = mul i32 %255, %257
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %260, %261
  br i1 %262, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  ret void

263:                                              ; preds = %225
  %264 = load i32, i32* @x.13
  %265 = load i32, i32* @y.14
  %266 = sub i32 %264, 1
  %267 = mul i32 %264, %266
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %269, %270
  br i1 %271, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %263, %originalBB38alteredBB
  store %struct.__dirstream* null, %struct.__dirstream** %15, align 8, !dbg !766
  %272 = load i32, i32* @x.13
  %273 = load i32, i32* @y.14
  %274 = sub i32 %272, 1
  %275 = mul i32 %272, %274
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %277, %278
  br i1 %279, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %280, !dbg !767

280:                                              ; preds = %originalBBpart240, %221
  %281 = load i32, i32* @x.13
  %282 = load i32, i32* @y.14
  %283 = sub i32 %281, 1
  %284 = mul i32 %281, %283
  %285 = urem i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %286, %287
  br i1 %288, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %280, %originalBB42alteredBB
  %289 = load i32, i32* @x.13
  %290 = load i32, i32* @y.14
  %291 = sub i32 %289, 1
  %292 = mul i32 %289, %291
  %293 = urem i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %290, 10
  %296 = or i1 %294, %295
  br i1 %296, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %455, !dbg !768

297:                                              ; preds = %216
  %298 = load i32, i32* @x.13
  %299 = load i32, i32* @y.14
  %300 = sub i32 %298, 1
  %301 = mul i32 %298, %300
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %303, %304
  br i1 %305, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %297, %originalBB46alteredBB
  %306 = load %struct.dirent*, %struct.dirent** %20, align 8, !dbg !769
  %307 = getelementptr inbounds %struct.dirent, %struct.dirent* %306, i32 0, i32 0, !dbg !769
  %308 = load i64, i64* %307, align 8, !dbg !769
  store i64 %308, i64* %22, align 8, !dbg !770
  %309 = load i64, i64* %22, align 8, !dbg !771
  %310 = icmp eq i64 %309, 0, !dbg !773
  %311 = load i32, i32* @x.13
  %312 = load i32, i32* @y.14
  %313 = sub i32 %311, 1
  %314 = mul i32 %311, %313
  %315 = urem i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %316, %317
  br i1 %318, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br i1 %310, label %322, label %319, !dbg !774

319:                                              ; preds = %originalBBpart248
  %320 = load i8, i8* %18, align 1, !dbg !775
  %321 = trunc i8 %320 to i1, !dbg !775
  br i1 %321, label %322, label %348, !dbg !776

322:                                              ; preds = %319, %originalBBpart248
  %323 = load %struct.dirent*, %struct.dirent** %20, align 8, !dbg !777
  %324 = getelementptr inbounds %struct.dirent, %struct.dirent* %323, i32 0, i32 4, !dbg !780
  %325 = getelementptr inbounds [256 x i8], [256 x i8]* %324, i64 0, i64 0, !dbg !777
  %326 = call i32 @lstat(i8* %325, %struct.stat* %21) #10, !dbg !781
  %327 = icmp slt i32 %326, 0, !dbg !782
  br i1 %327, label %328, label %345, !dbg !783

328:                                              ; preds = %322
  %329 = load i32, i32* @x.13
  %330 = load i32, i32* @y.14
  %331 = sub i32 %329, 1
  %332 = mul i32 %329, %331
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %334, %335
  br i1 %336, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %328, %originalBB50alteredBB
  %337 = load i32, i32* @x.13
  %338 = load i32, i32* @y.14
  %339 = sub i32 %337, 1
  %340 = mul i32 %337, %339
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %342, %343
  br i1 %344, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %216, !dbg !784, !llvm.loop !786

345:                                              ; preds = %322
  %346 = getelementptr inbounds %struct.stat, %struct.stat* %21, i32 0, i32 1, !dbg !788
  %347 = load i64, i64* %346, align 8, !dbg !788
  store i64 %347, i64* %22, align 8, !dbg !789
  br label %348, !dbg !790

348:                                              ; preds = %345, %319
  %349 = load i32, i32* @x.13
  %350 = load i32, i32* @y.14
  %351 = sub i32 %349, 1
  %352 = mul i32 %349, %351
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %350, 10
  %356 = or i1 %354, %355
  br i1 %356, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %348, %originalBB54alteredBB
  %357 = load i64, i64* %22, align 8, !dbg !791
  %358 = load %struct.stat*, %struct.stat** %12, align 8, !dbg !793
  %359 = getelementptr inbounds %struct.stat, %struct.stat* %358, i32 0, i32 1, !dbg !794
  %360 = load i64, i64* %359, align 8, !dbg !794
  %361 = icmp ne i64 %357, %360, !dbg !795
  %362 = load i32, i32* @x.13
  %363 = load i32, i32* @y.14
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br i1 %361, label %370, label %387, !dbg !796

370:                                              ; preds = %originalBBpart256
  %371 = load i32, i32* @x.13
  %372 = load i32, i32* @y.14
  %373 = sub i32 %371, 1
  %374 = mul i32 %371, %373
  %375 = urem i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %372, 10
  %378 = or i1 %376, %377
  br i1 %378, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %370, %originalBB58alteredBB
  %379 = load i32, i32* @x.13
  %380 = load i32, i32* @y.14
  %381 = sub i32 %379, 1
  %382 = mul i32 %379, %381
  %383 = urem i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %380, 10
  %386 = or i1 %384, %385
  br i1 %386, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %216, !dbg !797, !llvm.loop !786

387:                                              ; preds = %originalBBpart256
  %388 = load i32, i32* @x.13
  %389 = load i32, i32* @y.14
  %390 = sub i32 %388, 1
  %391 = mul i32 %388, %390
  %392 = urem i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %393, %394
  br i1 %395, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %387, %originalBB62alteredBB
  %396 = load i8, i8* %18, align 1, !dbg !798
  %397 = trunc i8 %396 to i1, !dbg !798
  %398 = load i32, i32* @x.13
  %399 = load i32, i32* @y.14
  %400 = sub i32 %398, 1
  %401 = mul i32 %398, %400
  %402 = urem i32 %401, 2
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %399, 10
  %405 = or i1 %403, %404
  br i1 %405, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br i1 %397, label %406, label %429, !dbg !800

406:                                              ; preds = %originalBBpart264
  %407 = load i32, i32* @x.13
  %408 = load i32, i32* @y.14
  %409 = sub i32 %407, 1
  %410 = mul i32 %407, %409
  %411 = urem i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = icmp slt i32 %408, 10
  %414 = or i1 %412, %413
  br i1 %414, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %406, %originalBB66alteredBB
  %415 = getelementptr inbounds %struct.stat, %struct.stat* %21, i32 0, i32 0, !dbg !801
  %416 = load i64, i64* %415, align 8, !dbg !801
  %417 = load %struct.stat*, %struct.stat** %12, align 8, !dbg !802
  %418 = getelementptr inbounds %struct.stat, %struct.stat* %417, i32 0, i32 0, !dbg !803
  %419 = load i64, i64* %418, align 8, !dbg !803
  %420 = icmp eq i64 %416, %419, !dbg !804
  %421 = load i32, i32* @x.13
  %422 = load i32, i32* @y.14
  %423 = sub i32 %421, 1
  %424 = mul i32 %421, %423
  %425 = urem i32 %424, 2
  %426 = icmp eq i32 %425, 0
  %427 = icmp slt i32 %422, 10
  %428 = or i1 %426, %427
  br i1 %428, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br i1 %420, label %429, label %454, !dbg !805

429:                                              ; preds = %originalBBpart268, %originalBBpart264
  %430 = load i32, i32* @x.13
  %431 = load i32, i32* @y.14
  %432 = sub i32 %430, 1
  %433 = mul i32 %430, %432
  %434 = urem i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = icmp slt i32 %431, 10
  %437 = or i1 %435, %436
  br i1 %437, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %429, %originalBB70alteredBB
  %438 = load %struct.file_name*, %struct.file_name** %13, align 8, !dbg !806
  %439 = load %struct.dirent*, %struct.dirent** %20, align 8, !dbg !808
  %440 = getelementptr inbounds %struct.dirent, %struct.dirent* %439, i32 0, i32 4, !dbg !809
  %441 = getelementptr inbounds [256 x i8], [256 x i8]* %440, i64 0, i64 0, !dbg !808
  %442 = load %struct.dirent*, %struct.dirent** %20, align 8, !dbg !810
  %443 = getelementptr inbounds %struct.dirent, %struct.dirent* %442, i32 0, i32 4, !dbg !810
  %444 = getelementptr inbounds [256 x i8], [256 x i8]* %443, i64 0, i64 0, !dbg !810
  %445 = call i64 @strlen(i8* %444) #13, !dbg !810
  call void @file_name_prepend(%struct.file_name* %438, i8* %441, i64 %445), !dbg !811
  store i8 1, i8* %19, align 1, !dbg !812
  %446 = load i32, i32* @x.13
  %447 = load i32, i32* @y.14
  %448 = sub i32 %446, 1
  %449 = mul i32 %446, %448
  %450 = urem i32 %449, 2
  %451 = icmp eq i32 %450, 0
  %452 = icmp slt i32 %447, 10
  %453 = or i1 %451, %452
  br i1 %453, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %455, !dbg !813

454:                                              ; preds = %originalBBpart268
  br label %216, !dbg !727, !llvm.loop !786

455:                                              ; preds = %originalBBpart272, %originalBBpart244
  %456 = load i32, i32* @x.13
  %457 = load i32, i32* @y.14
  %458 = sub i32 %456, 1
  %459 = mul i32 %456, %458
  %460 = urem i32 %459, 2
  %461 = icmp eq i32 %460, 0
  %462 = icmp slt i32 %457, 10
  %463 = or i1 %461, %462
  br i1 %463, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %455, %originalBB74alteredBB
  %464 = load %struct.__dirstream*, %struct.__dirstream** %15, align 8, !dbg !814
  %465 = icmp eq %struct.__dirstream* %464, null, !dbg !816
  %466 = load i32, i32* @x.13
  %467 = load i32, i32* @y.14
  %468 = sub i32 %466, 1
  %469 = mul i32 %466, %468
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %467, 10
  %473 = or i1 %471, %472
  br i1 %473, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br i1 %465, label %494, label %474, !dbg !817

474:                                              ; preds = %originalBBpart276
  %475 = load i32, i32* @x.13
  %476 = load i32, i32* @y.14
  %477 = sub i32 %475, 1
  %478 = mul i32 %475, %477
  %479 = urem i32 %478, 2
  %480 = icmp eq i32 %479, 0
  %481 = icmp slt i32 %476, 10
  %482 = or i1 %480, %481
  br i1 %482, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %474, %originalBB78alteredBB
  %483 = load %struct.__dirstream*, %struct.__dirstream** %15, align 8, !dbg !818
  %484 = call i32 @closedir(%struct.__dirstream* %483), !dbg !819
  %485 = icmp ne i32 %484, 0, !dbg !820
  %486 = load i32, i32* @x.13
  %487 = load i32, i32* @y.14
  %488 = sub i32 %486, 1
  %489 = mul i32 %486, %488
  %490 = urem i32 %489, 2
  %491 = icmp eq i32 %490, 0
  %492 = icmp slt i32 %487, 10
  %493 = or i1 %491, %492
  br i1 %493, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br i1 %485, label %494, label %517, !dbg !821

494:                                              ; preds = %originalBBpart280, %originalBBpart276
  %495 = load i32, i32* @x.13
  %496 = load i32, i32* @y.14
  %497 = sub i32 %495, 1
  %498 = mul i32 %495, %497
  %499 = urem i32 %498, 2
  %500 = icmp eq i32 %499, 0
  %501 = icmp slt i32 %496, 10
  %502 = or i1 %500, %501
  br i1 %502, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %494, %originalBB82alteredBB
  %503 = call i32* @__errno_location() #15, !dbg !822
  %504 = load i32, i32* %503, align 4, !dbg !822
  %505 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.45, i64 0, i64 0)) #10, !dbg !822
  %506 = load i64, i64* %14, align 8, !dbg !822
  %507 = call i8* @nth_parent(i64 %506), !dbg !822
  %508 = call i8* @quote(i8* %507), !dbg !822
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %504, i8* %505, i8* %508), !dbg !822
  %509 = load i32, i32* @x.13
  %510 = load i32, i32* @y.14
  %511 = sub i32 %509, 1
  %512 = mul i32 %509, %511
  %513 = urem i32 %512, 2
  %514 = icmp eq i32 %513, 0
  %515 = icmp slt i32 %510, 10
  %516 = or i1 %514, %515
  br i1 %516, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  unreachable, !dbg !822

517:                                              ; preds = %originalBBpart280
  %518 = load i8, i8* %19, align 1, !dbg !824
  %519 = trunc i8 %518 to i1, !dbg !824
  br i1 %519, label %541, label %520, !dbg !826

520:                                              ; preds = %517
  %521 = load i32, i32* @x.13
  %522 = load i32, i32* @y.14
  %523 = sub i32 %521, 1
  %524 = mul i32 %521, %523
  %525 = urem i32 %524, 2
  %526 = icmp eq i32 %525, 0
  %527 = icmp slt i32 %522, 10
  %528 = or i1 %526, %527
  br i1 %528, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %520, %originalBB86alteredBB
  %529 = call i8* @gettext(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.46, i64 0, i64 0)) #10, !dbg !827
  %530 = load i64, i64* %14, align 8, !dbg !827
  %531 = call i8* @nth_parent(i64 %530), !dbg !827
  %532 = call i8* @quote(i8* %531), !dbg !827
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %529, i8* %532), !dbg !827
  %533 = load i32, i32* @x.13
  %534 = load i32, i32* @y.14
  %535 = sub i32 %533, 1
  %536 = mul i32 %533, %535
  %537 = urem i32 %536, 2
  %538 = icmp eq i32 %537, 0
  %539 = icmp slt i32 %534, 10
  %540 = or i1 %538, %539
  br i1 %540, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  unreachable, !dbg !827

541:                                              ; preds = %517
  %542 = load i32, i32* @x.13
  %543 = load i32, i32* @y.14
  %544 = sub i32 %542, 1
  %545 = mul i32 %542, %544
  %546 = urem i32 %545, 2
  %547 = icmp eq i32 %546, 0
  %548 = icmp slt i32 %543, 10
  %549 = or i1 %547, %548
  br i1 %549, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %541, %originalBB90alteredBB
  %550 = load %struct.stat*, %struct.stat** %12, align 8, !dbg !828
  %551 = bitcast %struct.stat* %550 to i8*, !dbg !829
  %552 = bitcast %struct.stat* %17 to i8*, !dbg !829
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %551, i8* align 8 %552, i64 144, i1 false), !dbg !829
  %553 = load i32, i32* @x.13
  %554 = load i32, i32* @y.14
  %555 = sub i32 %553, 1
  %556 = mul i32 %553, %555
  %557 = urem i32 %556, 2
  %558 = icmp eq i32 %557, 0
  %559 = icmp slt i32 %554, 10
  %560 = or i1 %558, %559
  br i1 %560, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  ret void, !dbg !830

originalBBalteredBB:                              ; preds = %originalBB, %3
  %561 = alloca %struct.stat*, align 8
  %562 = alloca %struct.file_name*, align 8
  %563 = alloca i64, align 8
  %564 = alloca %struct.__dirstream*, align 8
  %565 = alloca i32, align 4
  %566 = alloca %struct.stat, align 8
  %567 = alloca i8, align 1
  %568 = alloca i8, align 1
  %569 = alloca %struct.dirent*, align 8
  %570 = alloca %struct.stat, align 8
  %571 = alloca i64, align 8
  %572 = alloca i32, align 4
  store %struct.stat* %0, %struct.stat** %561, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %561, metadata !831, metadata !DIExpression()), !dbg !672
  store %struct.file_name* %1, %struct.file_name** %562, align 8
  call void @llvm.dbg.declare(metadata %struct.file_name** %562, metadata !875, metadata !DIExpression()), !dbg !674
  store i64 %2, i64* %563, align 8
  call void @llvm.dbg.declare(metadata i64* %563, metadata !876, metadata !DIExpression()), !dbg !676
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %564, metadata !877, metadata !DIExpression()), !dbg !682
  call void @llvm.dbg.declare(metadata i32* %565, metadata !878, metadata !DIExpression()), !dbg !684
  call void @llvm.dbg.declare(metadata %struct.stat* %566, metadata !879, metadata !DIExpression()), !dbg !686
  call void @llvm.dbg.declare(metadata i8* %567, metadata !880, metadata !DIExpression()), !dbg !688
  call void @llvm.dbg.declare(metadata i8* %568, metadata !881, metadata !DIExpression()), !dbg !690
  %573 = call %struct.__dirstream* @opendir(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0)), !dbg !691
  store %struct.__dirstream* %573, %struct.__dirstream** %564, align 8, !dbg !692
  %574 = load %struct.__dirstream*, %struct.__dirstream** %564, align 8, !dbg !693
  %575 = icmp eq %struct.__dirstream* %574, null, !dbg !695
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  %576 = load %struct.__dirstream*, %struct.__dirstream** %15, align 8, !dbg !698
  %577 = call i32 @dirfd(%struct.__dirstream* %576) #10, !dbg !699
  store i32 %577, i32* %16, align 4, !dbg !700
  %578 = load i32, i32* %16, align 4, !dbg !701
  %579 = icmp sle i32 0, %578, !dbg !703
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %66
  %580 = call i32 @chdir(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0)) #10, !dbg !707
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %84
  %581 = icmp slt i32 %85, 0, !dbg !708
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %103
  %582 = call i32* @__errno_location() #15, !dbg !710
  %583 = load i32, i32* %582, align 4, !dbg !710
  %584 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.44, i64 0, i64 0)) #10, !dbg !710
  %585 = load i64, i64* %14, align 8, !dbg !710
  %586 = call i8* @nth_parent(i64 %585), !dbg !710
  %587 = call i8* @quote(i8* %586), !dbg !710
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %583, i8* %584, i8* %587), !dbg !710
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %126
  %588 = load i32, i32* %16, align 4, !dbg !711
  %589 = icmp sle i32 0, %588, !dbg !713
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %148
  %590 = call i32 @stat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0), %struct.stat* %17) #10, !dbg !717
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %166
  %591 = icmp slt i32 %167, 0, !dbg !718
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %185
  %592 = call i32* @__errno_location() #15, !dbg !720
  %593 = load i32, i32* %592, align 4, !dbg !720
  %594 = call i8* @gettext(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i64 0, i64 0)) #10, !dbg !720
  %595 = load i64, i64* %14, align 8, !dbg !720
  %596 = call i8* @nth_parent(i64 %595), !dbg !720
  %597 = call i8* @quote(i8* %596), !dbg !720
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %593, i8* %594, i8* %597), !dbg !720
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %246
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %263
  store %struct.__dirstream* null, %struct.__dirstream** %15, align 8, !dbg !766
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %280
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %297
  %598 = load %struct.dirent*, %struct.dirent** %20, align 8, !dbg !769
  %599 = getelementptr inbounds %struct.dirent, %struct.dirent* %598, i32 0, i32 0, !dbg !769
  %600 = load i64, i64* %599, align 8, !dbg !769
  store i64 %600, i64* %22, align 8, !dbg !770
  %601 = load i64, i64* %22, align 8, !dbg !771
  %602 = icmp eq i64 %601, 0, !dbg !773
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %328
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %348
  %603 = load i64, i64* %22, align 8, !dbg !791
  %604 = load %struct.stat*, %struct.stat** %12, align 8, !dbg !793
  %605 = getelementptr inbounds %struct.stat, %struct.stat* %604, i32 0, i32 1, !dbg !794
  %606 = load i64, i64* %605, align 8, !dbg !794
  %607 = icmp ne i64 %603, %606, !dbg !795
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %370
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %387
  %608 = load i8, i8* %18, align 1, !dbg !798
  %609 = trunc i8 %608 to i1, !dbg !798
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %406
  %610 = getelementptr inbounds %struct.stat, %struct.stat* %21, i32 0, i32 0, !dbg !801
  %611 = load i64, i64* %610, align 8, !dbg !801
  %612 = load %struct.stat*, %struct.stat** %12, align 8, !dbg !802
  %613 = getelementptr inbounds %struct.stat, %struct.stat* %612, i32 0, i32 0, !dbg !803
  %614 = load i64, i64* %613, align 8, !dbg !803
  %615 = icmp eq i64 %611, %614, !dbg !804
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %429
  %616 = load %struct.file_name*, %struct.file_name** %13, align 8, !dbg !806
  %617 = load %struct.dirent*, %struct.dirent** %20, align 8, !dbg !808
  %618 = getelementptr inbounds %struct.dirent, %struct.dirent* %617, i32 0, i32 4, !dbg !809
  %619 = getelementptr inbounds [256 x i8], [256 x i8]* %618, i64 0, i64 0, !dbg !808
  %620 = load %struct.dirent*, %struct.dirent** %20, align 8, !dbg !810
  %621 = getelementptr inbounds %struct.dirent, %struct.dirent* %620, i32 0, i32 4, !dbg !810
  %622 = getelementptr inbounds [256 x i8], [256 x i8]* %621, i64 0, i64 0, !dbg !810
  %623 = call i64 @strlen(i8* %622) #13, !dbg !810
  call void @file_name_prepend(%struct.file_name* %616, i8* %619, i64 %623), !dbg !811
  store i8 1, i8* %19, align 1, !dbg !812
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %455
  %624 = load %struct.__dirstream*, %struct.__dirstream** %15, align 8, !dbg !814
  %625 = icmp eq %struct.__dirstream* %624, null, !dbg !816
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %474
  %626 = load %struct.__dirstream*, %struct.__dirstream** %15, align 8, !dbg !818
  %627 = call i32 @closedir(%struct.__dirstream* %626), !dbg !819
  %628 = icmp ne i32 %627, 0, !dbg !820
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %494
  %629 = call i32* @__errno_location() #15, !dbg !822
  %630 = load i32, i32* %629, align 4, !dbg !822
  %631 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.45, i64 0, i64 0)) #10, !dbg !822
  %632 = load i64, i64* %14, align 8, !dbg !822
  %633 = call i8* @nth_parent(i64 %632), !dbg !822
  %634 = call i8* @quote(i8* %633), !dbg !822
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %630, i8* %631, i8* %634), !dbg !822
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %520
  %635 = call i8* @gettext(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.46, i64 0, i64 0)) #10, !dbg !827
  %636 = load i64, i64* %14, align 8, !dbg !827
  %637 = call i8* @nth_parent(i64 %636), !dbg !827
  %638 = call i8* @quote(i8* %637), !dbg !827
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %635, i8* %638), !dbg !827
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %541
  %639 = load %struct.stat*, %struct.stat** %12, align 8, !dbg !828
  %640 = bitcast %struct.stat* %639 to i8*, !dbg !829
  %641 = bitcast %struct.stat* %17 to i8*, !dbg !829
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %640, i8* align 8 %641, i64 144, i1 false), !dbg !829
  br label %originalBB90
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @file_name_prepend(%struct.file_name*, i8*, i64) #4 !dbg !882 {
  %4 = load i32, i32* @x.15
  %5 = load i32, i32* @y.16
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %struct.file_name*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i64, align 8
  store %struct.file_name* %0, %struct.file_name** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.file_name** %12, metadata !885, metadata !DIExpression()), !dbg !886
  store i8* %1, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !887, metadata !DIExpression()), !dbg !888
  store i64 %2, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !889, metadata !DIExpression()), !dbg !890
  call void @llvm.dbg.declare(metadata i64* %15, metadata !891, metadata !DIExpression()), !dbg !892
  %19 = load %struct.file_name*, %struct.file_name** %12, align 8, !dbg !893
  %20 = getelementptr inbounds %struct.file_name, %struct.file_name* %19, i32 0, i32 2, !dbg !894
  %21 = load i8*, i8** %20, align 8, !dbg !894
  %22 = load %struct.file_name*, %struct.file_name** %12, align 8, !dbg !895
  %23 = getelementptr inbounds %struct.file_name, %struct.file_name* %22, i32 0, i32 0, !dbg !896
  %24 = load i8*, i8** %23, align 8, !dbg !896
  %25 = ptrtoint i8* %21 to i64, !dbg !897
  %26 = ptrtoint i8* %24 to i64, !dbg !897
  %27 = sub i64 %25, %26, !dbg !897
  store i64 %27, i64* %15, align 8, !dbg !892
  %28 = load i64, i64* %15, align 8, !dbg !898
  %29 = load i64, i64* %14, align 8, !dbg !900
  %30 = add i64 1, %29, !dbg !901
  %31 = icmp ult i64 %28, %30, !dbg !902
  %32 = load i32, i32* @x.15
  %33 = load i32, i32* @y.16
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %31, label %40, label %98, !dbg !903

40:                                               ; preds = %originalBBpart2
  call void @llvm.dbg.declare(metadata i64* %16, metadata !904, metadata !DIExpression()), !dbg !906
  %41 = load i32, i32* @x.15
  %42 = load i32, i32* @y.16
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %40, %originalBB13alteredBB
  %49 = load %struct.file_name*, %struct.file_name** %12, align 8, !dbg !907
  %50 = getelementptr inbounds %struct.file_name, %struct.file_name* %49, i32 0, i32 1, !dbg !908
  %51 = load i64, i64* %50, align 8, !dbg !908
  %52 = add i64 %51, 1, !dbg !909
  %53 = load i64, i64* %14, align 8, !dbg !910
  %54 = add i64 %52, %53, !dbg !911
  store i64 %54, i64* %16, align 8, !dbg !906
  call void @llvm.dbg.declare(metadata i8** %17, metadata !912, metadata !DIExpression()), !dbg !913
  %55 = load i64, i64* %16, align 8, !dbg !914
  %56 = call noalias i8* @xnmalloc(i64 2, i64 %55), !dbg !915
  store i8* %56, i8** %17, align 8, !dbg !913
  call void @llvm.dbg.declare(metadata i64* %18, metadata !916, metadata !DIExpression()), !dbg !917
  %57 = load %struct.file_name*, %struct.file_name** %12, align 8, !dbg !918
  %58 = getelementptr inbounds %struct.file_name, %struct.file_name* %57, i32 0, i32 1, !dbg !919
  %59 = load i64, i64* %58, align 8, !dbg !919
  %60 = load i64, i64* %15, align 8, !dbg !920
  %61 = sub i64 %59, %60, !dbg !921
  store i64 %61, i64* %18, align 8, !dbg !917
  %62 = load i8*, i8** %17, align 8, !dbg !922
  %63 = load i64, i64* %16, align 8, !dbg !923
  %64 = mul i64 2, %63, !dbg !924
  %65 = getelementptr inbounds i8, i8* %62, i64 %64, !dbg !925
  %66 = load i64, i64* %18, align 8, !dbg !926
  %67 = sub i64 0, %66, !dbg !927
  %68 = getelementptr inbounds i8, i8* %65, i64 %67, !dbg !927
  %69 = load %struct.file_name*, %struct.file_name** %12, align 8, !dbg !928
  %70 = getelementptr inbounds %struct.file_name, %struct.file_name* %69, i32 0, i32 2, !dbg !929
  store i8* %68, i8** %70, align 8, !dbg !930
  %71 = load %struct.file_name*, %struct.file_name** %12, align 8, !dbg !931
  %72 = getelementptr inbounds %struct.file_name, %struct.file_name* %71, i32 0, i32 2, !dbg !932
  %73 = load i8*, i8** %72, align 8, !dbg !932
  %74 = load %struct.file_name*, %struct.file_name** %12, align 8, !dbg !933
  %75 = getelementptr inbounds %struct.file_name, %struct.file_name* %74, i32 0, i32 0, !dbg !934
  %76 = load i8*, i8** %75, align 8, !dbg !934
  %77 = load i64, i64* %15, align 8, !dbg !935
  %78 = getelementptr inbounds i8, i8* %76, i64 %77, !dbg !936
  %79 = load i64, i64* %18, align 8, !dbg !937
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %73, i8* align 1 %78, i64 %79, i1 false), !dbg !938
  %80 = load %struct.file_name*, %struct.file_name** %12, align 8, !dbg !939
  %81 = getelementptr inbounds %struct.file_name, %struct.file_name* %80, i32 0, i32 0, !dbg !940
  %82 = load i8*, i8** %81, align 8, !dbg !940
  call void @free(i8* %82) #10, !dbg !941
  %83 = load i8*, i8** %17, align 8, !dbg !942
  %84 = load %struct.file_name*, %struct.file_name** %12, align 8, !dbg !943
  %85 = getelementptr inbounds %struct.file_name, %struct.file_name* %84, i32 0, i32 0, !dbg !944
  store i8* %83, i8** %85, align 8, !dbg !945
  %86 = load i64, i64* %16, align 8, !dbg !946
  %87 = mul i64 2, %86, !dbg !947
  %88 = load %struct.file_name*, %struct.file_name** %12, align 8, !dbg !948
  %89 = getelementptr inbounds %struct.file_name, %struct.file_name* %88, i32 0, i32 1, !dbg !949
  store i64 %87, i64* %89, align 8, !dbg !950
  %90 = load i32, i32* @x.15
  %91 = load i32, i32* @y.16
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart266, label %originalBB13alteredBB

originalBBpart266:                                ; preds = %originalBB13
  br label %98, !dbg !951

98:                                               ; preds = %originalBBpart266, %originalBBpart2
  %99 = load i32, i32* @x.15
  %100 = load i32, i32* @y.16
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %98, %originalBB68alteredBB
  %107 = load i64, i64* %14, align 8, !dbg !952
  %108 = add i64 1, %107, !dbg !953
  %109 = load %struct.file_name*, %struct.file_name** %12, align 8, !dbg !954
  %110 = getelementptr inbounds %struct.file_name, %struct.file_name* %109, i32 0, i32 2, !dbg !955
  %111 = load i8*, i8** %110, align 8, !dbg !956
  %112 = sub i64 0, %108, !dbg !956
  %113 = getelementptr inbounds i8, i8* %111, i64 %112, !dbg !956
  store i8* %113, i8** %110, align 8, !dbg !956
  %114 = load %struct.file_name*, %struct.file_name** %12, align 8, !dbg !957
  %115 = getelementptr inbounds %struct.file_name, %struct.file_name* %114, i32 0, i32 2, !dbg !958
  %116 = load i8*, i8** %115, align 8, !dbg !958
  %117 = getelementptr inbounds i8, i8* %116, i64 0, !dbg !957
  store i8 47, i8* %117, align 1, !dbg !959
  %118 = load %struct.file_name*, %struct.file_name** %12, align 8, !dbg !960
  %119 = getelementptr inbounds %struct.file_name, %struct.file_name* %118, i32 0, i32 2, !dbg !961
  %120 = load i8*, i8** %119, align 8, !dbg !961
  %121 = getelementptr inbounds i8, i8* %120, i64 1, !dbg !962
  %122 = load i8*, i8** %13, align 8, !dbg !963
  %123 = load i64, i64* %14, align 8, !dbg !964
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %121, i8* align 1 %122, i64 %123, i1 false), !dbg !965
  %124 = load i32, i32* @x.15
  %125 = load i32, i32* @y.16
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBBpart284, label %originalBB68alteredBB

originalBBpart284:                                ; preds = %originalBB68
  ret void, !dbg !966

originalBBalteredBB:                              ; preds = %originalBB, %3
  %132 = alloca %struct.file_name*, align 8
  %133 = alloca i8*, align 8
  %134 = alloca i64, align 8
  %135 = alloca i64, align 8
  %136 = alloca i64, align 8
  %137 = alloca i8*, align 8
  %138 = alloca i64, align 8
  store %struct.file_name* %0, %struct.file_name** %132, align 8
  call void @llvm.dbg.declare(metadata %struct.file_name** %132, metadata !967, metadata !DIExpression()), !dbg !886
  store i8* %1, i8** %133, align 8
  call void @llvm.dbg.declare(metadata i8** %133, metadata !989, metadata !DIExpression()), !dbg !888
  store i64 %2, i64* %134, align 8
  call void @llvm.dbg.declare(metadata i64* %134, metadata !990, metadata !DIExpression()), !dbg !890
  call void @llvm.dbg.declare(metadata i64* %135, metadata !991, metadata !DIExpression()), !dbg !892
  %139 = load %struct.file_name*, %struct.file_name** %132, align 8, !dbg !893
  %140 = getelementptr inbounds %struct.file_name, %struct.file_name* %139, i32 0, i32 2, !dbg !894
  %141 = load i8*, i8** %140, align 8, !dbg !894
  %142 = load %struct.file_name*, %struct.file_name** %132, align 8, !dbg !895
  %143 = getelementptr inbounds %struct.file_name, %struct.file_name* %142, i32 0, i32 0, !dbg !896
  %144 = load i8*, i8** %143, align 8, !dbg !896
  %145 = ptrtoint i8* %141 to i64, !dbg !897
  %146 = ptrtoint i8* %144 to i64, !dbg !897
  %_ = shl i64 %145, %146
  %_1 = sub i64 %145, %146
  %gen = mul i64 %_1, %146
  %_2 = sub i64 %145, %146
  %gen3 = mul i64 %_2, %146
  %_4 = sub i64 0, %145
  %gen5 = add i64 %_4, %146
  %_6 = shl i64 %145, %146
  %_7 = sub i64 0, %145
  %gen8 = add i64 %_7, %146
  %_9 = sub i64 %145, %146
  %gen10 = mul i64 %_9, %146
  %147 = sub i64 %145, %146, !dbg !897
  store i64 %147, i64* %135, align 8, !dbg !892
  %148 = load i64, i64* %135, align 8, !dbg !898
  %149 = load i64, i64* %134, align 8, !dbg !900
  %_11 = sub i64 0, 1
  %gen12 = add i64 %_11, %149
  %150 = add i64 1, %149, !dbg !901
  %151 = icmp ult i64 %148, %150, !dbg !902
  br label %originalBB

originalBB13alteredBB:                            ; preds = %originalBB13, %40
  %152 = load %struct.file_name*, %struct.file_name** %12, align 8, !dbg !907
  %153 = getelementptr inbounds %struct.file_name, %struct.file_name* %152, i32 0, i32 1, !dbg !908
  %154 = load i64, i64* %153, align 8, !dbg !908
  %_14 = shl i64 %154, 1
  %_15 = shl i64 %154, 1
  %_16 = shl i64 %154, 1
  %_17 = sub i64 0, %154
  %gen18 = add i64 %_17, 1
  %_19 = shl i64 %154, 1
  %155 = add i64 %154, 1, !dbg !909
  %156 = load i64, i64* %14, align 8, !dbg !910
  %_20 = sub i64 %155, %156
  %gen21 = mul i64 %_20, %156
  %_22 = sub i64 0, %155
  %gen23 = add i64 %_22, %156
  %_24 = sub i64 0, %155
  %gen25 = add i64 %_24, %156
  %_26 = sub i64 0, %155
  %gen27 = add i64 %_26, %156
  %_28 = sub i64 %155, %156
  %gen29 = mul i64 %_28, %156
  %_30 = sub i64 0, %155
  %gen31 = add i64 %_30, %156
  %157 = add i64 %155, %156, !dbg !911
  store i64 %157, i64* %16, align 8, !dbg !906
  call void @llvm.dbg.declare(metadata !4, metadata !992, metadata !DIExpression()), !dbg !913
  %158 = load i64, i64* %16, align 8, !dbg !914
  %159 = call noalias i8* @xnmalloc(i64 2, i64 %158), !dbg !915
  store i8* %159, i8** %17, align 8, !dbg !913
  call void @llvm.dbg.declare(metadata !4, metadata !1016, metadata !DIExpression()), !dbg !917
  %160 = load %struct.file_name*, %struct.file_name** %12, align 8, !dbg !918
  %161 = getelementptr inbounds %struct.file_name, %struct.file_name* %160, i32 0, i32 1, !dbg !919
  %162 = load i64, i64* %161, align 8, !dbg !919
  %163 = load i64, i64* %15, align 8, !dbg !920
  %_32 = shl i64 %162, %163
  %_33 = shl i64 %162, %163
  %_34 = sub i64 %162, %163
  %gen35 = mul i64 %_34, %163
  %_36 = sub i64 0, %162
  %gen37 = add i64 %_36, %163
  %164 = sub i64 %162, %163, !dbg !921
  store i64 %164, i64* %18, align 8, !dbg !917
  %165 = load i8*, i8** %17, align 8, !dbg !922
  %166 = load i64, i64* %16, align 8, !dbg !923
  %_38 = sub i64 0, 2
  %gen39 = add i64 %_38, %166
  %_40 = shl i64 2, %166
  %_41 = shl i64 2, %166
  %167 = mul i64 2, %166, !dbg !924
  %168 = getelementptr inbounds i8, i8* %165, i64 %167, !dbg !925
  %169 = load i64, i64* %18, align 8, !dbg !926
  %_42 = sub i64 0, 0
  %gen43 = add i64 %_42, %169
  %_44 = sub i64 0, 0
  %gen45 = add i64 %_44, %169
  %_46 = sub i64 0, %169
  %gen47 = mul i64 %_46, %169
  %_48 = sub i64 0, %169
  %gen49 = mul i64 %_48, %169
  %_50 = sub i64 0, %169
  %gen51 = mul i64 %_50, %169
  %170 = sub i64 0, %169, !dbg !927
  %171 = getelementptr inbounds i8, i8* %168, i64 %170, !dbg !927
  %172 = load %struct.file_name*, %struct.file_name** %12, align 8, !dbg !928
  %173 = getelementptr inbounds %struct.file_name, %struct.file_name* %172, i32 0, i32 2, !dbg !929
  store i8* %171, i8** %173, align 8, !dbg !930
  %174 = load %struct.file_name*, %struct.file_name** %12, align 8, !dbg !931
  %175 = getelementptr inbounds %struct.file_name, %struct.file_name* %174, i32 0, i32 2, !dbg !932
  %176 = load i8*, i8** %175, align 8, !dbg !932
  %177 = load %struct.file_name*, %struct.file_name** %12, align 8, !dbg !933
  %178 = getelementptr inbounds %struct.file_name, %struct.file_name* %177, i32 0, i32 0, !dbg !934
  %179 = load i8*, i8** %178, align 8, !dbg !934
  %180 = load i64, i64* %15, align 8, !dbg !935
  %181 = getelementptr inbounds i8, i8* %179, i64 %180, !dbg !936
  %182 = load i64, i64* %18, align 8, !dbg !937
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %176, i8* align 1 %181, i64 %182, i1 false), !dbg !938
  %183 = load %struct.file_name*, %struct.file_name** %12, align 8, !dbg !939
  %184 = getelementptr inbounds %struct.file_name, %struct.file_name* %183, i32 0, i32 0, !dbg !940
  %185 = load i8*, i8** %184, align 8, !dbg !940
  call void @free(i8* %185) #10, !dbg !941
  %186 = load i8*, i8** %17, align 8, !dbg !942
  %187 = load %struct.file_name*, %struct.file_name** %12, align 8, !dbg !943
  %188 = getelementptr inbounds %struct.file_name, %struct.file_name* %187, i32 0, i32 0, !dbg !944
  store i8* %186, i8** %188, align 8, !dbg !945
  %189 = load i64, i64* %16, align 8, !dbg !946
  %_52 = sub i64 2, %189
  %gen53 = mul i64 %_52, %189
  %_54 = sub i64 2, %189
  %gen55 = mul i64 %_54, %189
  %_56 = sub i64 0, 2
  %gen57 = add i64 %_56, %189
  %_58 = sub i64 2, %189
  %gen59 = mul i64 %_58, %189
  %_60 = sub i64 2, %189
  %gen61 = mul i64 %_60, %189
  %_62 = shl i64 2, %189
  %_63 = sub i64 2, %189
  %gen64 = mul i64 %_63, %189
  %190 = mul i64 2, %189, !dbg !947
  %191 = load %struct.file_name*, %struct.file_name** %12, align 8, !dbg !948
  %192 = getelementptr inbounds %struct.file_name, %struct.file_name* %191, i32 0, i32 1, !dbg !949
  store i64 %190, i64* %192, align 8, !dbg !950
  br label %originalBB13

originalBB68alteredBB:                            ; preds = %originalBB68, %98
  %193 = load i64, i64* %14, align 8, !dbg !952
  %_69 = sub i64 0, 1
  %gen70 = add i64 %_69, %193
  %_71 = sub i64 1, %193
  %gen72 = mul i64 %_71, %193
  %_73 = sub i64 0, 1
  %gen74 = add i64 %_73, %193
  %_75 = shl i64 1, %193
  %194 = add i64 1, %193, !dbg !953
  %195 = load %struct.file_name*, %struct.file_name** %12, align 8, !dbg !954
  %196 = getelementptr inbounds %struct.file_name, %struct.file_name* %195, i32 0, i32 2, !dbg !955
  %197 = load i8*, i8** %196, align 8, !dbg !956
  %_76 = shl i64 0, %194
  %_77 = sub i64 0, %194
  %gen78 = mul i64 %_77, %194
  %_79 = sub i64 0, 0
  %gen80 = add i64 %_79, %194
  %_81 = sub i64 0, %194
  %gen82 = mul i64 %_81, %194
  %198 = sub i64 0, %194, !dbg !956
  %199 = getelementptr inbounds i8, i8* %197, i64 %198, !dbg !956
  store i8* %199, i8** %196, align 8, !dbg !956
  %200 = load %struct.file_name*, %struct.file_name** %12, align 8, !dbg !957
  %201 = getelementptr inbounds %struct.file_name, %struct.file_name* %200, i32 0, i32 2, !dbg !958
  %202 = load i8*, i8** %201, align 8, !dbg !958
  %203 = getelementptr inbounds i8, i8* %202, i64 0, !dbg !957
  store i8 47, i8* %203, align 1, !dbg !959
  %204 = load %struct.file_name*, %struct.file_name** %12, align 8, !dbg !960
  %205 = getelementptr inbounds %struct.file_name, %struct.file_name* %204, i32 0, i32 2, !dbg !961
  %206 = load i8*, i8** %205, align 8, !dbg !961
  %207 = getelementptr inbounds i8, i8* %206, i64 1, !dbg !962
  %208 = load i8*, i8** %13, align 8, !dbg !963
  %209 = load i64, i64* %14, align 8, !dbg !964
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %207, i8* align 1 %208, i64 %209, i1 false), !dbg !965
  br label %originalBB68
}

declare dso_local %struct.__dirstream* @opendir(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @nth_parent(i64) #4 !dbg !1017 {
  %2 = load i32, i32* @x.17
  %3 = load i32, i32* @y.18
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  store i64 %0, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !1020, metadata !DIExpression()), !dbg !1021
  call void @llvm.dbg.declare(metadata i8** %11, metadata !1022, metadata !DIExpression()), !dbg !1023
  %14 = load i64, i64* %10, align 8, !dbg !1024
  %15 = call noalias i8* @xnmalloc(i64 3, i64 %14), !dbg !1025
  store i8* %15, i8** %11, align 8, !dbg !1023
  call void @llvm.dbg.declare(metadata i8** %12, metadata !1026, metadata !DIExpression()), !dbg !1027
  %16 = load i8*, i8** %11, align 8, !dbg !1028
  store i8* %16, i8** %12, align 8, !dbg !1027
  call void @llvm.dbg.declare(metadata i64* %13, metadata !1029, metadata !DIExpression()), !dbg !1031
  store i64 0, i64* %13, align 8, !dbg !1031
  %17 = load i32, i32* @x.17
  %18 = load i32, i32* @y.18
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %25, !dbg !1032

25:                                               ; preds = %originalBBpart212, %originalBBpart2
  %26 = load i64, i64* %13, align 8, !dbg !1033
  %27 = load i64, i64* %10, align 8, !dbg !1035
  %28 = icmp ult i64 %26, %27, !dbg !1036
  br i1 %28, label %29, label %52, !dbg !1037

29:                                               ; preds = %25
  %30 = load i8*, i8** %12, align 8, !dbg !1038
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i64 0, i64 0), i64 3, i1 false), !dbg !1040
  %31 = load i8*, i8** %12, align 8, !dbg !1041
  %32 = getelementptr inbounds i8, i8* %31, i64 3, !dbg !1041
  store i8* %32, i8** %12, align 8, !dbg !1041
  br label %33, !dbg !1042

33:                                               ; preds = %29
  %34 = load i32, i32* @x.17
  %35 = load i32, i32* @y.18
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %33, %originalBB1alteredBB
  %42 = load i64, i64* %13, align 8, !dbg !1043
  %43 = add i64 %42, 1, !dbg !1043
  store i64 %43, i64* %13, align 8, !dbg !1043
  %44 = load i32, i32* @x.17
  %45 = load i32, i32* @y.18
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart212, label %originalBB1alteredBB

originalBBpart212:                                ; preds = %originalBB1
  br label %25, !dbg !1044, !llvm.loop !1045

52:                                               ; preds = %25
  %53 = load i32, i32* @x.17
  %54 = load i32, i32* @y.18
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %52, %originalBB14alteredBB
  %61 = load i8*, i8** %12, align 8, !dbg !1047
  %62 = getelementptr inbounds i8, i8* %61, i64 -1, !dbg !1047
  store i8 0, i8* %62, align 1, !dbg !1048
  %63 = load i8*, i8** %11, align 8, !dbg !1049
  %64 = load i32, i32* @x.17
  %65 = load i32, i32* @y.18
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret i8* %63, !dbg !1050

originalBBalteredBB:                              ; preds = %originalBB, %1
  %72 = alloca i64, align 8
  %73 = alloca i8*, align 8
  %74 = alloca i8*, align 8
  %75 = alloca i64, align 8
  store i64 %0, i64* %72, align 8
  call void @llvm.dbg.declare(metadata i64* %72, metadata !1051, metadata !DIExpression()), !dbg !1021
  call void @llvm.dbg.declare(metadata i8** %73, metadata !1065, metadata !DIExpression()), !dbg !1023
  %76 = load i64, i64* %72, align 8, !dbg !1024
  %77 = call noalias i8* @xnmalloc(i64 3, i64 %76), !dbg !1025
  store i8* %77, i8** %73, align 8, !dbg !1023
  call void @llvm.dbg.declare(metadata i8** %74, metadata !1066, metadata !DIExpression()), !dbg !1027
  %78 = load i8*, i8** %73, align 8, !dbg !1028
  store i8* %78, i8** %74, align 8, !dbg !1027
  call void @llvm.dbg.declare(metadata i64* %75, metadata !1067, metadata !DIExpression()), !dbg !1031
  store i64 0, i64* %75, align 8, !dbg !1031
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %33
  %79 = load i64, i64* %13, align 8, !dbg !1043
  %_ = sub i64 0, %79
  %gen = add i64 %_, 1
  %_2 = shl i64 %79, 1
  %_3 = shl i64 %79, 1
  %_4 = sub i64 %79, 1
  %gen5 = mul i64 %_4, 1
  %_6 = shl i64 %79, 1
  %_7 = sub i64 %79, 1
  %gen8 = mul i64 %_7, 1
  %_9 = sub i64 0, %79
  %gen10 = add i64 %_9, 1
  %80 = add i64 %79, 1, !dbg !1043
  store i64 %80, i64* %13, align 8, !dbg !1043
  br label %originalBB1

originalBB14alteredBB:                            ; preds = %originalBB14, %52
  %81 = load i8*, i8** %12, align 8, !dbg !1047
  %82 = getelementptr inbounds i8, i8* %81, i64 -1, !dbg !1047
  store i8 0, i8* %82, align 1, !dbg !1048
  %83 = load i8*, i8** %11, align 8, !dbg !1049
  br label %originalBB14
}

; Function Attrs: nounwind
declare dso_local i32 @dirfd(%struct.__dirstream*) #2

; Function Attrs: nounwind
declare dso_local i32 @fchdir(i32) #2

; Function Attrs: nounwind
declare dso_local i32 @chdir(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @fstat(i32, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.dirent* @readdir_ignoring_dot_and_dotdot(%struct.__dirstream*) #4 !dbg !1069 {
  %2 = load i32, i32* @x.19
  %3 = load i32, i32* @y.20
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.__dirstream*, align 8
  %11 = alloca %struct.dirent*, align 8
  store %struct.__dirstream* %0, %struct.__dirstream** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %10, metadata !1072, metadata !DIExpression()), !dbg !1073
  %12 = load i32, i32* @x.19
  %13 = load i32, i32* @y.20
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %20, !dbg !1074

20:                                               ; preds = %originalBBpart212, %originalBBpart2
  call void @llvm.dbg.declare(metadata %struct.dirent** %11, metadata !1075, metadata !DIExpression()), !dbg !1077
  %21 = load i32, i32* @x.19
  %22 = load i32, i32* @y.20
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %20, %originalBB1alteredBB
  %29 = load %struct.__dirstream*, %struct.__dirstream** %10, align 8, !dbg !1078
  %30 = call %struct.dirent* @readdir(%struct.__dirstream* %29), !dbg !1079
  store %struct.dirent* %30, %struct.dirent** %11, align 8, !dbg !1077
  %31 = load %struct.dirent*, %struct.dirent** %11, align 8, !dbg !1080
  %32 = icmp eq %struct.dirent* %31, null, !dbg !1082
  %33 = load i32, i32* @x.19
  %34 = load i32, i32* @y.20
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %32, label %46, label %41, !dbg !1083

41:                                               ; preds = %originalBBpart24
  %42 = load %struct.dirent*, %struct.dirent** %11, align 8, !dbg !1084
  %43 = getelementptr inbounds %struct.dirent, %struct.dirent* %42, i32 0, i32 4, !dbg !1085
  %44 = getelementptr inbounds [256 x i8], [256 x i8]* %43, i64 0, i64 0, !dbg !1084
  %45 = call zeroext i1 @dot_or_dotdot(i8* %44), !dbg !1086
  br i1 %45, label %64, label %46, !dbg !1087

46:                                               ; preds = %41, %originalBBpart24
  %47 = load i32, i32* @x.19
  %48 = load i32, i32* @y.20
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %46, %originalBB6alteredBB
  %55 = load %struct.dirent*, %struct.dirent** %11, align 8, !dbg !1088
  %56 = load i32, i32* @x.19
  %57 = load i32, i32* @y.20
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret %struct.dirent* %55, !dbg !1089

64:                                               ; preds = %41
  %65 = load i32, i32* @x.19
  %66 = load i32, i32* @y.20
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %64, %originalBB10alteredBB
  %73 = load i32, i32* @x.19
  %74 = load i32, i32* @y.20
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %20, !dbg !1074, !llvm.loop !1090

originalBBalteredBB:                              ; preds = %originalBB, %1
  %81 = alloca %struct.__dirstream*, align 8
  %82 = alloca %struct.dirent*, align 8
  store %struct.__dirstream* %0, %struct.__dirstream** %81, align 8
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %81, metadata !1092, metadata !DIExpression()), !dbg !1073
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %20
  %83 = load %struct.__dirstream*, %struct.__dirstream** %10, align 8, !dbg !1078
  %84 = call %struct.dirent* @readdir(%struct.__dirstream* %83), !dbg !1079
  store %struct.dirent* %84, %struct.dirent** %11, align 8, !dbg !1077
  %85 = load %struct.dirent*, %struct.dirent** %11, align 8, !dbg !1080
  %86 = icmp eq %struct.dirent* %85, null, !dbg !1082
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %46
  %87 = load %struct.dirent*, %struct.dirent** %11, align 8, !dbg !1088
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %64
  br label %originalBB10
}

declare dso_local i32 @closedir(%struct.__dirstream*) #3

; Function Attrs: nounwind
declare dso_local i32 @lstat(i8*, %struct.stat*) #2

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

declare dso_local %struct.dirent* @readdir(%struct.__dirstream*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dot_or_dotdot(i8*) #4 !dbg !1117 {
  %2 = load i32, i32* @x.21
  %3 = load i32, i32* @y.22
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i1, align 1
  %11 = alloca i8*, align 8
  %12 = alloca i8, align 1
  store i8* %0, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !1120, metadata !DIExpression()), !dbg !1121
  %13 = load i8*, i8** %11, align 8, !dbg !1122
  %14 = getelementptr inbounds i8, i8* %13, i64 0, !dbg !1122
  %15 = load i8, i8* %14, align 1, !dbg !1122
  %16 = sext i8 %15 to i32, !dbg !1122
  %17 = icmp eq i32 %16, 46, !dbg !1124
  %18 = load i32, i32* @x.21
  %19 = load i32, i32* @y.22
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %78, !dbg !1125

26:                                               ; preds = %originalBBpart2
  call void @llvm.dbg.declare(metadata i8* %12, metadata !1126, metadata !DIExpression()), !dbg !1128
  %27 = load i8*, i8** %11, align 8, !dbg !1129
  %28 = load i8*, i8** %11, align 8, !dbg !1130
  %29 = getelementptr inbounds i8, i8* %28, i64 1, !dbg !1130
  %30 = load i8, i8* %29, align 1, !dbg !1130
  %31 = sext i8 %30 to i32, !dbg !1130
  %32 = icmp eq i32 %31, 46, !dbg !1131
  %33 = zext i1 %32 to i32, !dbg !1131
  %34 = add nsw i32 %33, 1, !dbg !1132
  %35 = sext i32 %34 to i64, !dbg !1129
  %36 = getelementptr inbounds i8, i8* %27, i64 %35, !dbg !1129
  %37 = load i8, i8* %36, align 1, !dbg !1129
  store i8 %37, i8* %12, align 1, !dbg !1128
  %38 = load i8, i8* %12, align 1, !dbg !1133
  %39 = icmp ne i8 %38, 0, !dbg !1133
  br i1 %39, label %40, label %60, !dbg !1134

40:                                               ; preds = %26
  %41 = load i32, i32* @x.21
  %42 = load i32, i32* @y.22
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %40, %originalBB1alteredBB
  %49 = load i8, i8* %12, align 1, !dbg !1135
  %50 = sext i8 %49 to i32, !dbg !1135
  %51 = icmp eq i32 %50, 47, !dbg !1135
  %52 = load i32, i32* @x.21
  %53 = load i32, i32* @y.22
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %60, !dbg !1134

60:                                               ; preds = %originalBBpart24, %26
  %61 = phi i1 [ true, %26 ], [ %51, %originalBBpart24 ]
  %62 = load i32, i32* @x.21
  %63 = load i32, i32* @y.22
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %60, %originalBB6alteredBB
  store i1 %61, i1* %10, align 1, !dbg !1136
  %70 = load i32, i32* @x.21
  %71 = load i32, i32* @y.22
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %95, !dbg !1136

78:                                               ; preds = %originalBBpart2
  %79 = load i32, i32* @x.21
  %80 = load i32, i32* @y.22
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %78, %originalBB10alteredBB
  store i1 false, i1* %10, align 1, !dbg !1137
  %87 = load i32, i32* @x.21
  %88 = load i32, i32* @y.22
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %95, !dbg !1137

95:                                               ; preds = %originalBBpart212, %originalBBpart28
  %96 = load i1, i1* %10, align 1, !dbg !1138
  ret i1 %96, !dbg !1138

originalBBalteredBB:                              ; preds = %originalBB, %1
  %97 = alloca i1, align 1
  %98 = alloca i8*, align 8
  %99 = alloca i8, align 1
  store i8* %0, i8** %98, align 8
  call void @llvm.dbg.declare(metadata i8** %98, metadata !1139, metadata !DIExpression()), !dbg !1121
  %100 = load i8*, i8** %98, align 8, !dbg !1122
  %101 = getelementptr inbounds i8, i8* %100, i64 0, !dbg !1122
  %102 = load i8, i8* %101, align 1, !dbg !1122
  %103 = sext i8 %102 to i32, !dbg !1122
  %104 = icmp eq i32 %103, 46, !dbg !1124
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %40
  %105 = load i8, i8* %12, align 1, !dbg !1135
  %106 = sext i8 %105 to i32, !dbg !1135
  %107 = icmp eq i32 %106, 47, !dbg !1135
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %60
  store i1 %61, i1* %10, align 1, !dbg !1136
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %78
  store i1 false, i1* %10, align 1, !dbg !1137
  br label %originalBB10
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strstr(i8*, i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal void @close_stdout() #4 !dbg !1153 {
  %1 = alloca i8*, align 8
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1156
  %3 = call i32 @close_stream(%struct._IO_FILE* %2), !dbg !1158
  %4 = icmp ne i32 %3, 0, !dbg !1159
  br i1 %4, label %5, label %108, !dbg !1160

5:                                                ; preds = %0
  %6 = load i32, i32* @x.23
  %7 = load i32, i32* @y.24
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = load i8, i8* @ignore_EPIPE, align 1, !dbg !1161
  %15 = trunc i8 %14 to i1, !dbg !1161
  %16 = load i32, i32* @x.23
  %17 = load i32, i32* @y.24
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %44, !dbg !1162

24:                                               ; preds = %originalBBpart2
  %25 = load i32, i32* @x.23
  %26 = load i32, i32* @y.24
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = call i32* @__errno_location() #15, !dbg !1163
  %34 = load i32, i32* %33, align 4, !dbg !1163
  %35 = icmp eq i32 %34, 32, !dbg !1164
  %36 = load i32, i32* @x.23
  %37 = load i32, i32* @y.24
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %35, label %108, label %44, !dbg !1165

44:                                               ; preds = %originalBBpart24, %originalBBpart2
  call void @llvm.dbg.declare(metadata i8** %1, metadata !1166, metadata !DIExpression()), !dbg !1168
  %45 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.51, i64 0, i64 0)) #10, !dbg !1169
  store i8* %45, i8** %1, align 8, !dbg !1168
  %46 = load i8*, i8** @file_name, align 8, !dbg !1170
  %47 = icmp ne i8* %46, null, !dbg !1170
  br i1 %47, label %48, label %70, !dbg !1172

48:                                               ; preds = %44
  %49 = load i32, i32* @x.23
  %50 = load i32, i32* @y.24
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %48, %originalBB6alteredBB
  %57 = call i32* @__errno_location() #15, !dbg !1173
  %58 = load i32, i32* %57, align 4, !dbg !1173
  %59 = load i8*, i8** @file_name, align 8, !dbg !1174
  %60 = call i8* @quotearg_colon(i8* %59), !dbg !1175
  %61 = load i8*, i8** %1, align 8, !dbg !1176
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %58, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.52, i64 0, i64 0), i8* %60, i8* %61), !dbg !1177
  %62 = load i32, i32* @x.23
  %63 = load i32, i32* @y.24
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %90, !dbg !1177

70:                                               ; preds = %44
  %71 = load i32, i32* @x.23
  %72 = load i32, i32* @y.24
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %70, %originalBB10alteredBB
  %79 = call i32* @__errno_location() #15, !dbg !1178
  %80 = load i32, i32* %79, align 4, !dbg !1178
  %81 = load i8*, i8** %1, align 8, !dbg !1179
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %80, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.53, i64 0, i64 0), i8* %81), !dbg !1180
  %82 = load i32, i32* @x.23
  %83 = load i32, i32* @y.24
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %90

90:                                               ; preds = %originalBBpart212, %originalBBpart28
  %91 = load i32, i32* @x.23
  %92 = load i32, i32* @y.24
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %90, %originalBB14alteredBB
  %99 = load volatile i32, i32* @exit_failure, align 4, !dbg !1181
  call void @_exit(i32 %99) #14, !dbg !1182
  %100 = load i32, i32* @x.23
  %101 = load i32, i32* @y.24
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  unreachable, !dbg !1182

108:                                              ; preds = %originalBBpart24, %0
  %109 = load i32, i32* @x.23
  %110 = load i32, i32* @y.24
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %108, %originalBB18alteredBB
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1183
  %118 = call i32 @close_stream(%struct._IO_FILE* %117), !dbg !1185
  %119 = icmp ne i32 %118, 0, !dbg !1186
  %120 = load i32, i32* @x.23
  %121 = load i32, i32* @y.24
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %119, label %128, label %146, !dbg !1187

128:                                              ; preds = %originalBBpart220
  %129 = load i32, i32* @x.23
  %130 = load i32, i32* @y.24
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %128, %originalBB22alteredBB
  %137 = load volatile i32, i32* @exit_failure, align 4, !dbg !1188
  call void @_exit(i32 %137) #14, !dbg !1189
  %138 = load i32, i32* @x.23
  %139 = load i32, i32* @y.24
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  unreachable, !dbg !1189

146:                                              ; preds = %originalBBpart220
  %147 = load i32, i32* @x.23
  %148 = load i32, i32* @y.24
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %146, %originalBB26alteredBB
  %155 = load i32, i32* @x.23
  %156 = load i32, i32* @y.24
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  ret void, !dbg !1190

originalBBalteredBB:                              ; preds = %originalBB, %5
  %163 = load i8, i8* @ignore_EPIPE, align 1, !dbg !1161
  %164 = trunc i8 %163 to i1, !dbg !1161
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %165 = call i32* @__errno_location() #15, !dbg !1163
  %166 = load i32, i32* %165, align 4, !dbg !1163
  %167 = icmp eq i32 %166, 32, !dbg !1164
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  %168 = call i32* @__errno_location() #15, !dbg !1173
  %169 = load i32, i32* %168, align 4, !dbg !1173
  %170 = load i8*, i8** @file_name, align 8, !dbg !1174
  %171 = call i8* @quotearg_colon(i8* %170), !dbg !1175
  %172 = load i8*, i8** %1, align 8, !dbg !1176
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %169, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.52, i64 0, i64 0), i8* %171, i8* %172), !dbg !1177
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %70
  %173 = call i32* @__errno_location() #15, !dbg !1178
  %174 = load i32, i32* %173, align 4, !dbg !1178
  %175 = load i8*, i8** %1, align 8, !dbg !1179
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %174, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.53, i64 0, i64 0), i8* %175), !dbg !1180
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %90
  %176 = load volatile i32, i32* @exit_failure, align 4, !dbg !1181
  call void @_exit(i32 %176) #14, !dbg !1182
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %108
  %177 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1183
  %178 = call i32 @close_stream(%struct._IO_FILE* %177), !dbg !1185
  %179 = icmp ne i32 %178, 0, !dbg !1186
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %128
  %180 = load volatile i32, i32* @exit_failure, align 4, !dbg !1188
  call void @_exit(i32 %180) #14, !dbg !1189
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %146
  br label %originalBB26
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #9

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_program_name(i8*) #4 !dbg !1191 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !1192, metadata !DIExpression()), !dbg !1193
  call void @llvm.dbg.declare(metadata i8** %3, metadata !1194, metadata !DIExpression()), !dbg !1195
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1196, metadata !DIExpression()), !dbg !1197
  %5 = load i8*, i8** %2, align 8, !dbg !1198
  %6 = icmp eq i8* %5, null, !dbg !1200
  br i1 %6, label %7, label %26, !dbg !1201

7:                                                ; preds = %1
  %8 = load i32, i32* @x.25
  %9 = load i32, i32* @y.26
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %7, %originalBBalteredBB
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1202
  %17 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.58, i64 0, i64 0), %struct._IO_FILE* %16), !dbg !1204
  call void @abort() #12, !dbg !1205
  %18 = load i32, i32* @x.25
  %19 = load i32, i32* @y.26
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable, !dbg !1205

26:                                               ; preds = %1
  %27 = load i8*, i8** %2, align 8, !dbg !1206
  %28 = call i8* @strrchr(i8* %27, i32 47) #13, !dbg !1207
  store i8* %28, i8** %3, align 8, !dbg !1208
  %29 = load i8*, i8** %3, align 8, !dbg !1209
  %30 = icmp ne i8* %29, null, !dbg !1210
  br i1 %30, label %31, label %50, !dbg !1209

31:                                               ; preds = %26
  %32 = load i32, i32* @x.25
  %33 = load i32, i32* @y.26
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load i8*, i8** %3, align 8, !dbg !1211
  %41 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !1212
  %42 = load i32, i32* @x.25
  %43 = load i32, i32* @y.26
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %68, !dbg !1209

50:                                               ; preds = %26
  %51 = load i32, i32* @x.25
  %52 = load i32, i32* @y.26
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %50, %originalBB6alteredBB
  %59 = load i8*, i8** %2, align 8, !dbg !1213
  %60 = load i32, i32* @x.25
  %61 = load i32, i32* @y.26
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %68, !dbg !1209

68:                                               ; preds = %originalBBpart28, %originalBBpart24
  %69 = phi i8* [ %41, %originalBBpart24 ], [ %59, %originalBBpart28 ], !dbg !1209
  %70 = load i32, i32* @x.25
  %71 = load i32, i32* @y.26
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %68, %originalBB10alteredBB
  store i8* %69, i8** %4, align 8, !dbg !1214
  %78 = load i8*, i8** %4, align 8, !dbg !1215
  %79 = load i8*, i8** %2, align 8, !dbg !1217
  %80 = ptrtoint i8* %78 to i64, !dbg !1218
  %81 = ptrtoint i8* %79 to i64, !dbg !1218
  %82 = sub i64 %80, %81, !dbg !1218
  %83 = icmp sge i64 %82, 7, !dbg !1219
  %84 = load i32, i32* @x.25
  %85 = load i32, i32* @y.26
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart217, label %originalBB10alteredBB

originalBBpart217:                                ; preds = %originalBB10
  br i1 %83, label %92, label %155, !dbg !1220

92:                                               ; preds = %originalBBpart217
  %93 = load i32, i32* @x.25
  %94 = load i32, i32* @y.26
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %92, %originalBB19alteredBB
  %101 = load i8*, i8** %4, align 8, !dbg !1221
  %102 = getelementptr inbounds i8, i8* %101, i64 -7, !dbg !1222
  %103 = call i32 @strncmp(i8* %102, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.59, i64 0, i64 0), i64 7) #13, !dbg !1223
  %104 = icmp eq i32 %103, 0, !dbg !1224
  %105 = load i32, i32* @x.25
  %106 = load i32, i32* @y.26
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  br i1 %104, label %113, label %155, !dbg !1225

113:                                              ; preds = %originalBBpart221
  %114 = load i8*, i8** %4, align 8, !dbg !1226
  store i8* %114, i8** %2, align 8, !dbg !1228
  %115 = load i8*, i8** %4, align 8, !dbg !1229
  %116 = call i32 @strncmp(i8* %115, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.60, i64 0, i64 0), i64 3) #13, !dbg !1231
  %117 = icmp eq i32 %116, 0, !dbg !1232
  br i1 %117, label %118, label %138, !dbg !1233

118:                                              ; preds = %113
  %119 = load i32, i32* @x.25
  %120 = load i32, i32* @y.26
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %118, %originalBB23alteredBB
  %127 = load i8*, i8** %4, align 8, !dbg !1234
  %128 = getelementptr inbounds i8, i8* %127, i64 3, !dbg !1236
  store i8* %128, i8** %2, align 8, !dbg !1237
  %129 = load i8*, i8** %2, align 8, !dbg !1238
  store i8* %129, i8** @program_invocation_short_name, align 8, !dbg !1239
  %130 = load i32, i32* @x.25
  %131 = load i32, i32* @y.26
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br label %138, !dbg !1240

138:                                              ; preds = %originalBBpart225, %113
  %139 = load i32, i32* @x.25
  %140 = load i32, i32* @y.26
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %138, %originalBB27alteredBB
  %147 = load i32, i32* @x.25
  %148 = load i32, i32* @y.26
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br label %155, !dbg !1241

155:                                              ; preds = %originalBBpart229, %originalBBpart221, %originalBBpart217
  %156 = load i32, i32* @x.25
  %157 = load i32, i32* @y.26
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %155, %originalBB31alteredBB
  %164 = load i8*, i8** %2, align 8, !dbg !1242
  store i8* %164, i8** @program_name, align 8, !dbg !1243
  %165 = load i8*, i8** %2, align 8, !dbg !1244
  store i8* %165, i8** @program_invocation_name, align 8, !dbg !1245
  %166 = load i32, i32* @x.25
  %167 = load i32, i32* @y.26
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  ret void, !dbg !1246

originalBBalteredBB:                              ; preds = %originalBB, %7
  %174 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1202
  %175 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.58, i64 0, i64 0), %struct._IO_FILE* %174), !dbg !1204
  call void @abort() #12, !dbg !1205
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %176 = load i8*, i8** %3, align 8, !dbg !1211
  %177 = getelementptr inbounds i8, i8* %176, i64 1, !dbg !1212
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %50
  %178 = load i8*, i8** %2, align 8, !dbg !1213
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %68
  store i8* %69, i8** %4, align 8, !dbg !1214
  %179 = load i8*, i8** %4, align 8, !dbg !1215
  %180 = load i8*, i8** %2, align 8, !dbg !1217
  %181 = ptrtoint i8* %179 to i64, !dbg !1218
  %182 = ptrtoint i8* %180 to i64, !dbg !1218
  %_ = sub i64 %181, %182
  %gen = mul i64 %_, %182
  %_11 = sub i64 0, %181
  %gen12 = add i64 %_11, %182
  %_13 = shl i64 %181, %182
  %_14 = sub i64 %181, %182
  %gen15 = mul i64 %_14, %182
  %183 = sub i64 %181, %182, !dbg !1218
  %184 = icmp sge i64 %183, 7, !dbg !1219
  br label %originalBB10

originalBB19alteredBB:                            ; preds = %originalBB19, %92
  %185 = load i8*, i8** %4, align 8, !dbg !1221
  %186 = getelementptr inbounds i8, i8* %185, i64 -7, !dbg !1222
  %187 = call i32 @strncmp(i8* %186, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.59, i64 0, i64 0), i64 7) #13, !dbg !1223
  %188 = icmp eq i32 %187, 0, !dbg !1224
  br label %originalBB19

originalBB23alteredBB:                            ; preds = %originalBB23, %118
  %189 = load i8*, i8** %4, align 8, !dbg !1234
  %190 = getelementptr inbounds i8, i8* %189, i64 3, !dbg !1236
  store i8* %190, i8** %2, align 8, !dbg !1237
  %191 = load i8*, i8** %2, align 8, !dbg !1238
  store i8* %191, i8** @program_invocation_short_name, align 8, !dbg !1239
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %138
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %155
  %192 = load i8*, i8** %2, align 8, !dbg !1242
  store i8* %192, i8** @program_name, align 8, !dbg !1243
  %193 = load i8*, i8** %2, align 8, !dbg !1244
  store i8* %193, i8** @program_invocation_name, align 8, !dbg !1245
  br label %originalBB31
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #5

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_char_quoting(%struct.quoting_options*, i8 signext, i32) #4 !dbg !1247 {
  %4 = load i32, i32* @x.27
  %5 = load i32, i32* @y.28
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %struct.quoting_options*, align 8
  %13 = alloca i8, align 1
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  %16 = alloca i32*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %12, metadata !1251, metadata !DIExpression()), !dbg !1252
  store i8 %1, i8* %13, align 1
  call void @llvm.dbg.declare(metadata i8* %13, metadata !1253, metadata !DIExpression()), !dbg !1254
  store i32 %2, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !1255, metadata !DIExpression()), !dbg !1256
  call void @llvm.dbg.declare(metadata i8* %15, metadata !1257, metadata !DIExpression()), !dbg !1258
  %19 = load i8, i8* %13, align 1, !dbg !1259
  store i8 %19, i8* %15, align 1, !dbg !1258
  call void @llvm.dbg.declare(metadata i32** %16, metadata !1260, metadata !DIExpression()), !dbg !1262
  %20 = load %struct.quoting_options*, %struct.quoting_options** %12, align 8, !dbg !1263
  %21 = icmp ne %struct.quoting_options* %20, null, !dbg !1263
  %22 = load i32, i32* @x.27
  %23 = load i32, i32* @y.28
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %48, !dbg !1263

30:                                               ; preds = %originalBBpart2
  %31 = load i32, i32* @x.27
  %32 = load i32, i32* @y.28
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load %struct.quoting_options*, %struct.quoting_options** %12, align 8, !dbg !1264
  %40 = load i32, i32* @x.27
  %41 = load i32, i32* @y.28
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %65, !dbg !1263

48:                                               ; preds = %originalBBpart2
  %49 = load i32, i32* @x.27
  %50 = load i32, i32* @y.28
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %48, %originalBB6alteredBB
  %57 = load i32, i32* @x.27
  %58 = load i32, i32* @y.28
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %65, !dbg !1263

65:                                               ; preds = %originalBBpart28, %originalBBpart24
  %66 = phi %struct.quoting_options* [ %39, %originalBBpart24 ], [ @default_quoting_options, %originalBBpart28 ], !dbg !1263
  %67 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %66, i32 0, i32 2, !dbg !1265
  %68 = getelementptr inbounds [8 x i32], [8 x i32]* %67, i64 0, i64 0, !dbg !1266
  %69 = load i8, i8* %15, align 1, !dbg !1267
  %70 = zext i8 %69 to i64, !dbg !1267
  %71 = udiv i64 %70, 32, !dbg !1268
  %72 = getelementptr inbounds i32, i32* %68, i64 %71, !dbg !1269
  store i32* %72, i32** %16, align 8, !dbg !1262
  call void @llvm.dbg.declare(metadata i32* %17, metadata !1270, metadata !DIExpression()), !dbg !1271
  %73 = load i8, i8* %15, align 1, !dbg !1272
  %74 = zext i8 %73 to i64, !dbg !1272
  %75 = urem i64 %74, 32, !dbg !1273
  %76 = trunc i64 %75 to i32, !dbg !1272
  store i32 %76, i32* %17, align 4, !dbg !1271
  call void @llvm.dbg.declare(metadata i32* %18, metadata !1274, metadata !DIExpression()), !dbg !1275
  %77 = load i32*, i32** %16, align 8, !dbg !1276
  %78 = load i32, i32* %77, align 4, !dbg !1277
  %79 = load i32, i32* %17, align 4, !dbg !1278
  %80 = lshr i32 %78, %79, !dbg !1279
  %81 = and i32 %80, 1, !dbg !1280
  store i32 %81, i32* %18, align 4, !dbg !1275
  %82 = load i32, i32* %14, align 4, !dbg !1281
  %83 = and i32 %82, 1, !dbg !1282
  %84 = load i32, i32* %18, align 4, !dbg !1283
  %85 = xor i32 %83, %84, !dbg !1284
  %86 = load i32, i32* %17, align 4, !dbg !1285
  %87 = shl i32 %85, %86, !dbg !1286
  %88 = load i32*, i32** %16, align 8, !dbg !1287
  %89 = load i32, i32* %88, align 4, !dbg !1288
  %90 = xor i32 %89, %87, !dbg !1288
  store i32 %90, i32* %88, align 4, !dbg !1288
  %91 = load i32, i32* %18, align 4, !dbg !1289
  ret i32 %91, !dbg !1290

originalBBalteredBB:                              ; preds = %originalBB, %3
  %92 = alloca %struct.quoting_options*, align 8
  %93 = alloca i8, align 1
  %94 = alloca i32, align 4
  %95 = alloca i8, align 1
  %96 = alloca i32*, align 8
  %97 = alloca i32, align 4
  %98 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %92, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %92, metadata !1291, metadata !DIExpression()), !dbg !1252
  store i8 %1, i8* %93, align 1
  call void @llvm.dbg.declare(metadata i8* %93, metadata !1326, metadata !DIExpression()), !dbg !1254
  store i32 %2, i32* %94, align 4
  call void @llvm.dbg.declare(metadata i32* %94, metadata !1327, metadata !DIExpression()), !dbg !1256
  call void @llvm.dbg.declare(metadata i8* %95, metadata !1328, metadata !DIExpression()), !dbg !1258
  %99 = load i8, i8* %93, align 1, !dbg !1259
  store i8 %99, i8* %95, align 1, !dbg !1258
  call void @llvm.dbg.declare(metadata i32** %96, metadata !1329, metadata !DIExpression()), !dbg !1262
  %100 = load %struct.quoting_options*, %struct.quoting_options** %92, align 8, !dbg !1263
  %101 = icmp ne %struct.quoting_options* %100, null, !dbg !1263
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %102 = load %struct.quoting_options*, %struct.quoting_options** %12, align 8, !dbg !1264
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  br label %originalBB6
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_style(i32, i32, i8*) #4 !dbg !1330 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1333, metadata !DIExpression()), !dbg !1334
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !1335, metadata !DIExpression()), !dbg !1336
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !1337, metadata !DIExpression()), !dbg !1338
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %7, metadata !1339, metadata !DIExpression()), !dbg !1341
  %8 = load i32, i32* %5, align 4, !dbg !1342
  call void @quoting_options_from_style(%struct.quoting_options* sret %7, i32 %8), !dbg !1343
  %9 = load i32, i32* %4, align 4, !dbg !1344
  %10 = load i8*, i8** %6, align 8, !dbg !1345
  %11 = call i8* @quotearg_n_options(i32 %9, i8* %10, i64 -1, %struct.quoting_options* %7), !dbg !1346
  ret i8* %11, !dbg !1347
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret, i32) #4 !dbg !1348 {
  %3 = load i32, i32* @x.31
  %4 = load i32, i32* @y.32
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  store i32 %1, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !1351, metadata !DIExpression()), !dbg !1352
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %0, metadata !1353, metadata !DIExpression()), !dbg !1354
  %12 = bitcast %struct.quoting_options* %0 to i8*, !dbg !1354
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 56, i1 false), !dbg !1354
  %13 = load i32, i32* %11, align 4, !dbg !1355
  %14 = icmp eq i32 %13, 10, !dbg !1357
  %15 = load i32, i32* @x.31
  %16 = load i32, i32* @y.32
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %14, label %23, label %40, !dbg !1358

23:                                               ; preds = %originalBBpart2
  %24 = load i32, i32* @x.31
  %25 = load i32, i32* @y.32
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %23, %originalBB1alteredBB
  call void @abort() #12, !dbg !1359
  %32 = load i32, i32* @x.31
  %33 = load i32, i32* @y.32
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable, !dbg !1359

40:                                               ; preds = %originalBBpart2
  %41 = load i32, i32* %11, align 4, !dbg !1360
  %42 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %0, i32 0, i32 0, !dbg !1361
  store i32 %41, i32* %42, align 8, !dbg !1362
  ret void, !dbg !1363

originalBBalteredBB:                              ; preds = %originalBB, %2
  %43 = alloca i32, align 4
  store i32 %1, i32* %43, align 4
  call void @llvm.dbg.declare(metadata i32* %43, metadata !1364, metadata !DIExpression()), !dbg !1352
  call void @llvm.dbg.declare(metadata !4, metadata !1398, metadata !DIExpression()), !dbg !1354
  %44 = bitcast %struct.quoting_options* %0 to i8*, !dbg !1354
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 56, i1 false), !dbg !1354
  %45 = load i32, i32* %43, align 4, !dbg !1355
  %46 = icmp eq i32 %45, 10, !dbg !1357
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %23
  call void @abort() #12, !dbg !1359
  br label %originalBB1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32, i8*, i64, %struct.quoting_options*) #4 !dbg !1399 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.quoting_options*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.slotvec*, align 8
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !1403, metadata !DIExpression()), !dbg !1404
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !1405, metadata !DIExpression()), !dbg !1406
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !1407, metadata !DIExpression()), !dbg !1408
  store %struct.quoting_options* %3, %struct.quoting_options** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %8, metadata !1409, metadata !DIExpression()), !dbg !1410
  call void @llvm.dbg.declare(metadata i32* %9, metadata !1411, metadata !DIExpression()), !dbg !1412
  %17 = call i32* @__errno_location() #15, !dbg !1413
  %18 = load i32, i32* %17, align 4, !dbg !1413
  store i32 %18, i32* %9, align 4, !dbg !1412
  call void @llvm.dbg.declare(metadata %struct.slotvec** %10, metadata !1414, metadata !DIExpression()), !dbg !1415
  %19 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !1416
  store %struct.slotvec* %19, %struct.slotvec** %10, align 8, !dbg !1415
  %20 = load i32, i32* %5, align 4, !dbg !1417
  %21 = icmp slt i32 %20, 0, !dbg !1419
  br i1 %21, label %22, label %39, !dbg !1420

22:                                               ; preds = %4
  %23 = load i32, i32* @x.33
  %24 = load i32, i32* @y.34
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %22, %originalBBalteredBB
  call void @abort() #12, !dbg !1421
  %31 = load i32, i32* @x.33
  %32 = load i32, i32* @y.34
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable, !dbg !1421

39:                                               ; preds = %4
  %40 = load i32, i32* @nslots, align 4, !dbg !1422
  %41 = mul i32 %40, 4
  %42 = add i32 %41, 5
  %43 = mul i32 %42, %42
  %44 = sub i32 %43, %42
  %45 = srem i32 %44, 2
  %46 = add i32 %45, 1
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %65, label %48

48:                                               ; preds = %39
  %49 = load i32, i32* @x.33
  %50 = load i32, i32* @y.34
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %48, %originalBB1alteredBB
  %57 = load i32, i32* @x.33
  %58 = load i32, i32* @y.34
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret i8* null

65:                                               ; preds = %39
  %66 = load i32, i32* @x.33
  %67 = load i32, i32* @y.34
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %65, %originalBB6alteredBB
  %74 = load i32, i32* %5, align 4, !dbg !1424
  %75 = icmp sle i32 %40, %74, !dbg !1425
  %76 = load i32, i32* @x.33
  %77 = load i32, i32* @y.34
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %75, label %84, label %254, !dbg !1426

84:                                               ; preds = %originalBBpart28
  call void @llvm.dbg.declare(metadata i8* %11, metadata !1427, metadata !DIExpression()), !dbg !1429
  %85 = load i32, i32* @x.33
  %86 = load i32, i32* @y.34
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %84, %originalBB10alteredBB
  %93 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !1430
  %94 = icmp eq %struct.slotvec* %93, @slotvec0, !dbg !1431
  %95 = zext i1 %94 to i8, !dbg !1429
  store i8 %95, i8* %11, align 1, !dbg !1429
  call void @llvm.dbg.declare(metadata i32* %12, metadata !1432, metadata !DIExpression()), !dbg !1433
  store i32 2147483646, i32* %12, align 4, !dbg !1433
  %96 = load i32, i32* %12, align 4, !dbg !1434
  %97 = load i32, i32* %5, align 4, !dbg !1436
  %98 = icmp slt i32 %96, %97, !dbg !1437
  %99 = load i32, i32* @x.33
  %100 = load i32, i32* @y.34
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %98, label %107, label %108, !dbg !1438

107:                                              ; preds = %originalBBpart212
  call void @xalloc_die() #14, !dbg !1439
  unreachable, !dbg !1439

108:                                              ; preds = %originalBBpart212
  %109 = load i32, i32* @x.33
  %110 = load i32, i32* @y.34
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %108, %originalBB14alteredBB
  %117 = load i8, i8* %11, align 1, !dbg !1440
  %118 = trunc i8 %117 to i1, !dbg !1440
  %119 = load i32, i32* @x.33
  %120 = load i32, i32* @y.34
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %118, label %127, label %128, !dbg !1440

127:                                              ; preds = %originalBBpart216
  br label %146, !dbg !1440

128:                                              ; preds = %originalBBpart216
  %129 = load i32, i32* @x.33
  %130 = load i32, i32* @y.34
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %128, %originalBB18alteredBB
  %137 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !1441
  %138 = load i32, i32* @x.33
  %139 = load i32, i32* @y.34
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %146, !dbg !1440

146:                                              ; preds = %originalBBpart220, %127
  %147 = phi %struct.slotvec* [ null, %127 ], [ %137, %originalBBpart220 ], !dbg !1440
  %148 = load i32, i32* @x.33
  %149 = load i32, i32* @y.34
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %146, %originalBB22alteredBB
  %156 = bitcast %struct.slotvec* %147 to i8*, !dbg !1440
  %157 = load i32, i32* %5, align 4, !dbg !1442
  %158 = add nsw i32 %157, 1, !dbg !1443
  %159 = sext i32 %158 to i64, !dbg !1444
  %160 = mul i64 %159, 16, !dbg !1445
  %161 = trunc i64 16 to i32
  %162 = add i32 %161, 5
  %163 = trunc i64 16 to i32
  %164 = mul i32 %163, -2
  %165 = add i32 %164, -4
  %166 = mul i32 %162, %162
  %167 = mul i32 %165, %165
  %168 = add i32 %166, %167
  %169 = mul i32 %162, %165
  %170 = mul i32 %169, 2
  %171 = sub i32 %168, %170
  %172 = mul i32 %171, 5
  %173 = add i32 %172, 2
  %174 = icmp eq i32 %173, -3
  %175 = load i32, i32* @x.33
  %176 = load i32, i32* @y.34
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBBpart2115, label %originalBB22alteredBB

originalBBpart2115:                               ; preds = %originalBB22
  br i1 %174, label %183, label %200

183:                                              ; preds = %originalBBpart2115
  %184 = load i32, i32* @x.33
  %185 = load i32, i32* @y.34
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBB117, label %originalBB117alteredBB

originalBB117:                                    ; preds = %183, %originalBB117alteredBB
  %192 = load i32, i32* @x.33
  %193 = load i32, i32* @y.34
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBBpart2119, label %originalBB117alteredBB

originalBBpart2119:                               ; preds = %originalBB117
  ret i8* null

200:                                              ; preds = %originalBBpart2115
  %201 = load i32, i32* @x.33
  %202 = load i32, i32* @y.34
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBB121, label %originalBB121alteredBB

originalBB121:                                    ; preds = %200, %originalBB121alteredBB
  %209 = call i8* @xrealloc(i8* %156, i64 %160), !dbg !1446
  %210 = bitcast i8* %209 to %struct.slotvec*, !dbg !1446
  store %struct.slotvec* %210, %struct.slotvec** %10, align 8, !dbg !1447
  store %struct.slotvec* %210, %struct.slotvec** @slotvec, align 8, !dbg !1448
  %211 = load i8, i8* %11, align 1, !dbg !1449
  %212 = trunc i8 %211 to i1, !dbg !1449
  %213 = load i32, i32* @x.33
  %214 = load i32, i32* @y.34
  %215 = sub i32 %213, 1
  %216 = mul i32 %213, %215
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %218, %219
  br i1 %220, label %originalBBpart2123, label %originalBB121alteredBB

originalBBpart2123:                               ; preds = %originalBB121
  br i1 %212, label %221, label %224, !dbg !1451

221:                                              ; preds = %originalBBpart2123
  %222 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !1452
  %223 = bitcast %struct.slotvec* %222 to i8*, !dbg !1453
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %223, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !1453
  br label %224, !dbg !1454

224:                                              ; preds = %221, %originalBBpart2123
  %225 = load i32, i32* @x.33
  %226 = load i32, i32* @y.34
  %227 = sub i32 %225, 1
  %228 = mul i32 %225, %227
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %226, 10
  %232 = or i1 %230, %231
  br i1 %232, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %224, %originalBB125alteredBB
  %233 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !1455
  %234 = load i32, i32* @nslots, align 4, !dbg !1456
  %235 = sext i32 %234 to i64, !dbg !1457
  %236 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %233, i64 %235, !dbg !1457
  %237 = bitcast %struct.slotvec* %236 to i8*, !dbg !1458
  %238 = load i32, i32* %5, align 4, !dbg !1459
  %239 = add nsw i32 %238, 1, !dbg !1460
  %240 = load i32, i32* @nslots, align 4, !dbg !1461
  %241 = sub nsw i32 %239, %240, !dbg !1462
  %242 = sext i32 %241 to i64, !dbg !1463
  %243 = mul i64 %242, 16, !dbg !1464
  call void @llvm.memset.p0i8.i64(i8* align 8 %237, i8 0, i64 %243, i1 false), !dbg !1458
  %244 = load i32, i32* %5, align 4, !dbg !1465
  %245 = add nsw i32 %244, 1, !dbg !1466
  store i32 %245, i32* @nslots, align 4, !dbg !1467
  %246 = load i32, i32* @x.33
  %247 = load i32, i32* @y.34
  %248 = sub i32 %246, 1
  %249 = mul i32 %246, %248
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %251, %252
  br i1 %253, label %originalBBpart2156, label %originalBB125alteredBB

originalBBpart2156:                               ; preds = %originalBB125
  br label %254, !dbg !1468

254:                                              ; preds = %originalBBpart2156, %originalBBpart28
  call void @llvm.dbg.declare(metadata i64* %13, metadata !1469, metadata !DIExpression()), !dbg !1471
  %255 = load i32, i32* @x.33
  %256 = load i32, i32* @y.34
  %257 = sub i32 %255, 1
  %258 = mul i32 %255, %257
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %260, %261
  br i1 %262, label %originalBB158, label %originalBB158alteredBB

originalBB158:                                    ; preds = %254, %originalBB158alteredBB
  %263 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !1472
  %264 = load i32, i32* %5, align 4, !dbg !1473
  %265 = sext i32 %264 to i64, !dbg !1472
  %266 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %263, i64 %265, !dbg !1472
  %267 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %266, i32 0, i32 0, !dbg !1474
  %268 = load i64, i64* %267, align 8, !dbg !1474
  store i64 %268, i64* %13, align 8, !dbg !1471
  call void @llvm.dbg.declare(metadata i8** %14, metadata !1475, metadata !DIExpression()), !dbg !1476
  %269 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !1477
  %270 = load i32, i32* %5, align 4, !dbg !1478
  %271 = sext i32 %270 to i64, !dbg !1477
  %272 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %269, i64 %271, !dbg !1477
  %273 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %272, i32 0, i32 1, !dbg !1479
  %274 = load i8*, i8** %273, align 8, !dbg !1479
  store i8* %274, i8** %14, align 8, !dbg !1476
  call void @llvm.dbg.declare(metadata i32* %15, metadata !1480, metadata !DIExpression()), !dbg !1481
  %275 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !1482
  %276 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %275, i32 0, i32 1, !dbg !1483
  %277 = load i32, i32* %276, align 4, !dbg !1483
  %278 = or i32 %277, 1, !dbg !1484
  store i32 %278, i32* %15, align 4, !dbg !1481
  call void @llvm.dbg.declare(metadata i64* %16, metadata !1485, metadata !DIExpression()), !dbg !1486
  %279 = load i8*, i8** %14, align 8, !dbg !1487
  %280 = load i64, i64* %13, align 8, !dbg !1488
  %281 = load i8*, i8** %6, align 8, !dbg !1489
  %282 = load i64, i64* %7, align 8, !dbg !1490
  %283 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !1491
  %284 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %283, i32 0, i32 0, !dbg !1492
  %285 = load i32, i32* %284, align 8, !dbg !1492
  %286 = load i32, i32* %15, align 4, !dbg !1493
  %287 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !1494
  %288 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %287, i32 0, i32 2, !dbg !1495
  %289 = getelementptr inbounds [8 x i32], [8 x i32]* %288, i64 0, i64 0, !dbg !1494
  %290 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !1496
  %291 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %290, i32 0, i32 3, !dbg !1497
  %292 = load i8*, i8** %291, align 8, !dbg !1497
  %293 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !1498
  %294 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %293, i32 0, i32 4, !dbg !1499
  %295 = load i8*, i8** %294, align 8, !dbg !1499
  %296 = call i64 @quotearg_buffer_restyled(i8* %279, i64 %280, i8* %281, i64 %282, i32 %285, i32 %286, i32* %289, i8* %292, i8* %295), !dbg !1500
  store i64 %296, i64* %16, align 8, !dbg !1486
  %297 = load i64, i64* %13, align 8, !dbg !1501
  %298 = load i64, i64* %16, align 8, !dbg !1503
  %299 = icmp ule i64 %297, %298, !dbg !1504
  %300 = load i32, i32* @x.33
  %301 = load i32, i32* @y.34
  %302 = sub i32 %300, 1
  %303 = mul i32 %300, %302
  %304 = urem i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %305, %306
  br i1 %307, label %originalBBpart2164, label %originalBB158alteredBB

originalBBpart2164:                               ; preds = %originalBB158
  br i1 %299, label %308, label %405, !dbg !1505

308:                                              ; preds = %originalBBpart2164
  %309 = load i64, i64* %16, align 8, !dbg !1506
  %310 = add i64 %309, 1, !dbg !1508
  store i64 %310, i64* %13, align 8, !dbg !1509
  %311 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !1510
  %312 = load i32, i32* %5, align 4, !dbg !1511
  %313 = trunc i64 %310 to i32
  %314 = mul i32 %313, 4
  %315 = add i32 %314, -1
  %316 = mul i32 %315, %315
  %317 = sub i32 %316, %315
  %318 = srem i32 %317, 2
  %319 = mul i32 %318, 3
  %320 = add i32 %319, -2
  %321 = icmp ne i32 %320, -2
  br i1 %321, label %322, label %339

322:                                              ; preds = %308
  %323 = load i32, i32* @x.33
  %324 = load i32, i32* @y.34
  %325 = sub i32 %323, 1
  %326 = mul i32 %323, %325
  %327 = urem i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %328, %329
  br i1 %330, label %originalBB166, label %originalBB166alteredBB

originalBB166:                                    ; preds = %322, %originalBB166alteredBB
  %331 = load i32, i32* @x.33
  %332 = load i32, i32* @y.34
  %333 = sub i32 %331, 1
  %334 = mul i32 %331, %333
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %336, %337
  br i1 %338, label %originalBBpart2168, label %originalBB166alteredBB

originalBBpart2168:                               ; preds = %originalBB166
  ret i8* null

339:                                              ; preds = %308
  %340 = load i32, i32* @x.33
  %341 = load i32, i32* @y.34
  %342 = sub i32 %340, 1
  %343 = mul i32 %340, %342
  %344 = urem i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %345, %346
  br i1 %347, label %originalBB170, label %originalBB170alteredBB

originalBB170:                                    ; preds = %339, %originalBB170alteredBB
  %348 = sext i32 %312 to i64, !dbg !1510
  %349 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %311, i64 %348, !dbg !1510
  %350 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %349, i32 0, i32 0, !dbg !1512
  store i64 %310, i64* %350, align 8, !dbg !1513
  %351 = load i8*, i8** %14, align 8, !dbg !1514
  %352 = icmp ne i8* %351, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !1516
  %353 = load i32, i32* @x.33
  %354 = load i32, i32* @y.34
  %355 = sub i32 %353, 1
  %356 = mul i32 %353, %355
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %358, %359
  br i1 %360, label %originalBBpart2172, label %originalBB170alteredBB

originalBBpart2172:                               ; preds = %originalBB170
  br i1 %352, label %361, label %379, !dbg !1517

361:                                              ; preds = %originalBBpart2172
  %362 = load i32, i32* @x.33
  %363 = load i32, i32* @y.34
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBB174, label %originalBB174alteredBB

originalBB174:                                    ; preds = %361, %originalBB174alteredBB
  %370 = load i8*, i8** %14, align 8, !dbg !1518
  call void @free(i8* %370) #10, !dbg !1519
  %371 = load i32, i32* @x.33
  %372 = load i32, i32* @y.34
  %373 = sub i32 %371, 1
  %374 = mul i32 %371, %373
  %375 = urem i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %372, 10
  %378 = or i1 %376, %377
  br i1 %378, label %originalBBpart2176, label %originalBB174alteredBB

originalBBpart2176:                               ; preds = %originalBB174
  br label %379, !dbg !1519

379:                                              ; preds = %originalBBpart2176, %originalBBpart2172
  %380 = load i64, i64* %13, align 8, !dbg !1520
  %381 = call noalias i8* @xcharalloc(i64 %380), !dbg !1521
  store i8* %381, i8** %14, align 8, !dbg !1522
  %382 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !1523
  %383 = load i32, i32* %5, align 4, !dbg !1524
  %384 = sext i32 %383 to i64, !dbg !1523
  %385 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %382, i64 %384, !dbg !1523
  %386 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %385, i32 0, i32 1, !dbg !1525
  store i8* %381, i8** %386, align 8, !dbg !1526
  %387 = load i8*, i8** %14, align 8, !dbg !1527
  %388 = load i64, i64* %13, align 8, !dbg !1528
  %389 = load i8*, i8** %6, align 8, !dbg !1529
  %390 = load i64, i64* %7, align 8, !dbg !1530
  %391 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !1531
  %392 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %391, i32 0, i32 0, !dbg !1532
  %393 = load i32, i32* %392, align 8, !dbg !1532
  %394 = load i32, i32* %15, align 4, !dbg !1533
  %395 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !1534
  %396 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %395, i32 0, i32 2, !dbg !1535
  %397 = getelementptr inbounds [8 x i32], [8 x i32]* %396, i64 0, i64 0, !dbg !1534
  %398 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !1536
  %399 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %398, i32 0, i32 3, !dbg !1537
  %400 = load i8*, i8** %399, align 8, !dbg !1537
  %401 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !1538
  %402 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %401, i32 0, i32 4, !dbg !1539
  %403 = load i8*, i8** %402, align 8, !dbg !1539
  %404 = call i64 @quotearg_buffer_restyled(i8* %387, i64 %388, i8* %389, i64 %390, i32 %393, i32 %394, i32* %397, i8* %400, i8* %403), !dbg !1540
  br label %405, !dbg !1541

405:                                              ; preds = %379, %originalBBpart2164
  %406 = load i32, i32* %9, align 4, !dbg !1542
  %407 = call i32* @__errno_location() #15, !dbg !1543
  store i32 %406, i32* %407, align 4, !dbg !1544
  %408 = mul i32 %406, -3
  %409 = add i32 %408, -1
  %410 = mul i32 %406, 3
  %411 = add i32 %410, -2
  %412 = mul i32 %409, %409
  %413 = mul i32 %411, %411
  %414 = mul i32 %413, 34
  %415 = sub i32 %412, %414
  %416 = add i32 %415, 4
  %417 = icmp ne i32 %416, 4
  br i1 %417, label %435, label %418

418:                                              ; preds = %405
  %419 = load i32, i32* @x.33
  %420 = load i32, i32* @y.34
  %421 = sub i32 %419, 1
  %422 = mul i32 %419, %421
  %423 = urem i32 %422, 2
  %424 = icmp eq i32 %423, 0
  %425 = icmp slt i32 %420, 10
  %426 = or i1 %424, %425
  br i1 %426, label %originalBB178, label %originalBB178alteredBB

originalBB178:                                    ; preds = %418, %originalBB178alteredBB
  %427 = load i32, i32* @x.33
  %428 = load i32, i32* @y.34
  %429 = sub i32 %427, 1
  %430 = mul i32 %427, %429
  %431 = urem i32 %430, 2
  %432 = icmp eq i32 %431, 0
  %433 = icmp slt i32 %428, 10
  %434 = or i1 %432, %433
  br i1 %434, label %originalBBpart2180, label %originalBB178alteredBB

originalBBpart2180:                               ; preds = %originalBB178
  ret i8* null

435:                                              ; preds = %405
  %436 = load i8*, i8** %14, align 8, !dbg !1545
  ret i8* %436, !dbg !1546

originalBBalteredBB:                              ; preds = %originalBB, %22
  call void @abort() #12, !dbg !1421
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %48
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %65
  %437 = load i32, i32* %5, align 4, !dbg !1424
  %438 = icmp sle i32 %40, %437, !dbg !1425
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %84
  %439 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !1430
  %440 = icmp eq %struct.slotvec* %439, @slotvec0, !dbg !1431
  %441 = zext i1 %440 to i8, !dbg !1429
  store i8 %441, i8* %11, align 1, !dbg !1429
  call void @llvm.dbg.declare(metadata !4, metadata !1547, metadata !DIExpression()), !dbg !1433
  store i32 2147483646, i32* %12, align 4, !dbg !1433
  %442 = load i32, i32* %12, align 4, !dbg !1434
  %443 = load i32, i32* %5, align 4, !dbg !1436
  %444 = icmp slt i32 %442, %443, !dbg !1437
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %108
  %445 = load i8, i8* %11, align 1, !dbg !1440
  %446 = trunc i8 %445 to i1, !dbg !1440
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %128
  %447 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !1441
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %146
  %448 = bitcast %struct.slotvec* %147 to i8*, !dbg !1440
  %449 = load i32, i32* %5, align 4, !dbg !1442
  %_ = shl i32 %449, 1
  %_23 = sub i32 %449, 1
  %gen = mul i32 %_23, 1
  %_24 = shl i32 %449, 1
  %450 = add nsw i32 %449, 1, !dbg !1443
  %451 = sext i32 %450 to i64, !dbg !1444
  %_25 = shl i64 %451, 16
  %_26 = sub i64 %451, 16
  %gen27 = mul i64 %_26, 16
  %_28 = shl i64 %451, 16
  %_29 = shl i64 %451, 16
  %_30 = sub i64 %451, 16
  %gen31 = mul i64 %_30, 16
  %_32 = sub i64 0, %451
  %gen33 = add i64 %_32, 16
  %_34 = sub i64 %451, 16
  %gen35 = mul i64 %_34, 16
  %452 = mul i64 %451, 16, !dbg !1445
  %453 = trunc i64 16 to i32
  %_36 = shl i32 %453, 5
  %_37 = sub i32 %453, 5
  %gen38 = mul i32 %_37, 5
  %_39 = sub i32 %453, 5
  %gen40 = mul i32 %_39, 5
  %_41 = sub i32 0, %453
  %gen42 = add i32 %_41, 5
  %454 = add i32 %453, 5
  %455 = trunc i64 16 to i32
  %_43 = sub i32 %455, -2
  %gen44 = mul i32 %_43, -2
  %_45 = sub i32 %455, -2
  %gen46 = mul i32 %_45, -2
  %_47 = sub i32 0, %455
  %gen48 = add i32 %_47, -2
  %_49 = sub i32 %455, -2
  %gen50 = mul i32 %_49, -2
  %_51 = shl i32 %455, -2
  %_52 = sub i32 %455, -2
  %gen53 = mul i32 %_52, -2
  %_54 = shl i32 %455, -2
  %456 = mul i32 %455, -2
  %_55 = shl i32 %456, -4
  %_56 = sub i32 0, %456
  %gen57 = add i32 %_56, -4
  %_58 = shl i32 %456, -4
  %457 = add i32 %456, -4
  %_59 = sub i32 0, %454
  %gen60 = add i32 %_59, %454
  %_61 = sub i32 0, %454
  %gen62 = add i32 %_61, %454
  %_63 = sub i32 %454, %454
  %gen64 = mul i32 %_63, %454
  %_65 = sub i32 %454, %454
  %gen66 = mul i32 %_65, %454
  %_67 = shl i32 %454, %454
  %_68 = shl i32 %454, %454
  %458 = mul i32 %454, %454
  %_69 = sub i32 0, %457
  %gen70 = add i32 %_69, %457
  %_71 = sub i32 0, %457
  %gen72 = add i32 %_71, %457
  %_73 = sub i32 %457, %457
  %gen74 = mul i32 %_73, %457
  %_75 = shl i32 %457, %457
  %_76 = shl i32 %457, %457
  %459 = mul i32 %457, %457
  %_77 = sub i32 0, %458
  %gen78 = add i32 %_77, %459
  %_79 = sub i32 0, %458
  %gen80 = add i32 %_79, %459
  %_81 = sub i32 %458, %459
  %gen82 = mul i32 %_81, %459
  %_83 = sub i32 0, %458
  %gen84 = add i32 %_83, %459
  %460 = add i32 %458, %459
  %_85 = shl i32 %454, %457
  %_86 = shl i32 %454, %457
  %_87 = sub i32 0, %454
  %gen88 = add i32 %_87, %457
  %_89 = shl i32 %454, %457
  %_90 = shl i32 %454, %457
  %_91 = shl i32 %454, %457
  %_92 = sub i32 0, %454
  %gen93 = add i32 %_92, %457
  %_94 = shl i32 %454, %457
  %461 = mul i32 %454, %457
  %_95 = sub i32 0, %461
  %gen96 = add i32 %_95, 2
  %462 = mul i32 %461, 2
  %_97 = sub i32 %460, %462
  %gen98 = mul i32 %_97, %462
  %_99 = sub i32 %460, %462
  %gen100 = mul i32 %_99, %462
  %_101 = sub i32 %460, %462
  %gen102 = mul i32 %_101, %462
  %_103 = shl i32 %460, %462
  %_104 = shl i32 %460, %462
  %_105 = sub i32 %460, %462
  %gen106 = mul i32 %_105, %462
  %_107 = shl i32 %460, %462
  %463 = sub i32 %460, %462
  %_108 = sub i32 0, %463
  %gen109 = add i32 %_108, 5
  %_110 = shl i32 %463, 5
  %464 = mul i32 %463, 5
  %_111 = sub i32 0, %464
  %gen112 = add i32 %_111, 2
  %_113 = shl i32 %464, 2
  %465 = add i32 %464, 2
  %466 = icmp eq i32 %465, -3
  br label %originalBB22

originalBB117alteredBB:                           ; preds = %originalBB117, %183
  br label %originalBB117

originalBB121alteredBB:                           ; preds = %originalBB121, %200
  %467 = call i8* @xrealloc(i8* %156, i64 %160), !dbg !1446
  %468 = bitcast i8* %467 to %struct.slotvec*, !dbg !1446
  store %struct.slotvec* %468, %struct.slotvec** %10, align 8, !dbg !1447
  store %struct.slotvec* %468, %struct.slotvec** @slotvec, align 8, !dbg !1448
  %469 = load i8, i8* %11, align 1, !dbg !1449
  %470 = trunc i8 %469 to i1, !dbg !1449
  br label %originalBB121

originalBB125alteredBB:                           ; preds = %originalBB125, %224
  %471 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !1455
  %472 = load i32, i32* @nslots, align 4, !dbg !1456
  %473 = sext i32 %472 to i64, !dbg !1457
  %474 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %471, i64 %473, !dbg !1457
  %475 = bitcast %struct.slotvec* %474 to i8*, !dbg !1458
  %476 = load i32, i32* %5, align 4, !dbg !1459
  %_126 = shl i32 %476, 1
  %_127 = sub i32 %476, 1
  %gen128 = mul i32 %_127, 1
  %_129 = sub i32 %476, 1
  %gen130 = mul i32 %_129, 1
  %_131 = shl i32 %476, 1
  %_132 = sub i32 %476, 1
  %gen133 = mul i32 %_132, 1
  %_134 = shl i32 %476, 1
  %477 = add nsw i32 %476, 1, !dbg !1460
  %478 = load i32, i32* @nslots, align 4, !dbg !1461
  %_135 = sub i32 0, %477
  %gen136 = add i32 %_135, %478
  %_137 = shl i32 %477, %478
  %_138 = sub i32 0, %477
  %gen139 = add i32 %_138, %478
  %_140 = sub i32 %477, %478
  %gen141 = mul i32 %_140, %478
  %_142 = shl i32 %477, %478
  %_143 = sub i32 %477, %478
  %gen144 = mul i32 %_143, %478
  %_145 = sub i32 0, %477
  %gen146 = add i32 %_145, %478
  %479 = sub nsw i32 %477, %478, !dbg !1462
  %480 = sext i32 %479 to i64, !dbg !1463
  %_147 = sub i64 0, %480
  %gen148 = add i64 %_147, 16
  %481 = mul i64 %480, 16, !dbg !1464
  call void @llvm.memset.p0i8.i64(i8* align 8 %475, i8 0, i64 %481, i1 false), !dbg !1458
  %482 = load i32, i32* %5, align 4, !dbg !1465
  %_149 = sub i32 0, %482
  %gen150 = add i32 %_149, 1
  %_151 = sub i32 %482, 1
  %gen152 = mul i32 %_151, 1
  %_153 = sub i32 %482, 1
  %gen154 = mul i32 %_153, 1
  %483 = add nsw i32 %482, 1, !dbg !1466
  store i32 %483, i32* @nslots, align 4, !dbg !1467
  br label %originalBB125

originalBB158alteredBB:                           ; preds = %originalBB158, %254
  %484 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !1472
  %485 = load i32, i32* %5, align 4, !dbg !1473
  %486 = sext i32 %485 to i64, !dbg !1472
  %487 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %484, i64 %486, !dbg !1472
  %488 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %487, i32 0, i32 0, !dbg !1474
  %489 = load i64, i64* %488, align 8, !dbg !1474
  store i64 %489, i64* %13, align 8, !dbg !1471
  call void @llvm.dbg.declare(metadata !4, metadata !1585, metadata !DIExpression()), !dbg !1476
  %490 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !1477
  %491 = load i32, i32* %5, align 4, !dbg !1478
  %492 = sext i32 %491 to i64, !dbg !1477
  %493 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %490, i64 %492, !dbg !1477
  %494 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %493, i32 0, i32 1, !dbg !1479
  %495 = load i8*, i8** %494, align 8, !dbg !1479
  store i8* %495, i8** %14, align 8, !dbg !1476
  call void @llvm.dbg.declare(metadata !4, metadata !1622, metadata !DIExpression()), !dbg !1481
  %496 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !1482
  %497 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %496, i32 0, i32 1, !dbg !1483
  %498 = load i32, i32* %497, align 4, !dbg !1483
  %_159 = shl i32 %498, 1
  %_160 = shl i32 %498, 1
  %_161 = sub i32 0, %498
  %gen162 = add i32 %_161, 1
  %499 = or i32 %498, 1, !dbg !1484
  store i32 %499, i32* %15, align 4, !dbg !1481
  call void @llvm.dbg.declare(metadata !4, metadata !1623, metadata !DIExpression()), !dbg !1486
  %500 = load i8*, i8** %14, align 8, !dbg !1487
  %501 = load i64, i64* %13, align 8, !dbg !1488
  %502 = load i8*, i8** %6, align 8, !dbg !1489
  %503 = load i64, i64* %7, align 8, !dbg !1490
  %504 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !1491
  %505 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %504, i32 0, i32 0, !dbg !1492
  %506 = load i32, i32* %505, align 8, !dbg !1492
  %507 = load i32, i32* %15, align 4, !dbg !1493
  %508 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !1494
  %509 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %508, i32 0, i32 2, !dbg !1495
  %510 = getelementptr inbounds [8 x i32], [8 x i32]* %509, i64 0, i64 0, !dbg !1494
  %511 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !1496
  %512 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %511, i32 0, i32 3, !dbg !1497
  %513 = load i8*, i8** %512, align 8, !dbg !1497
  %514 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !1498
  %515 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %514, i32 0, i32 4, !dbg !1499
  %516 = load i8*, i8** %515, align 8, !dbg !1499
  %517 = call i64 @quotearg_buffer_restyled(i8* %500, i64 %501, i8* %502, i64 %503, i32 %506, i32 %507, i32* %510, i8* %513, i8* %516), !dbg !1500
  store i64 %517, i64* %16, align 8, !dbg !1486
  %518 = load i64, i64* %13, align 8, !dbg !1501
  %519 = load i64, i64* %16, align 8, !dbg !1503
  %520 = icmp ule i64 %518, %519, !dbg !1504
  br label %originalBB158

originalBB166alteredBB:                           ; preds = %originalBB166, %322
  br label %originalBB166

originalBB170alteredBB:                           ; preds = %originalBB170, %339
  %521 = sext i32 %312 to i64, !dbg !1510
  %522 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %311, i64 %521, !dbg !1510
  %523 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %522, i32 0, i32 0, !dbg !1512
  store i64 %310, i64* %523, align 8, !dbg !1513
  %524 = load i8*, i8** %14, align 8, !dbg !1514
  %525 = icmp ne i8* %524, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !1516
  br label %originalBB170

originalBB174alteredBB:                           ; preds = %originalBB174, %361
  %526 = load i8*, i8** %14, align 8, !dbg !1518
  call void @free(i8* %526) #10, !dbg !1519
  br label %originalBB174

originalBB178alteredBB:                           ; preds = %originalBB178, %418
  br label %originalBB178
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8*, i64, i8*, i64, i32, i32, i32*, i8*, i8*) #4 !dbg !1624 {
  %10 = load i32, i32* @x.35
  %11 = load i32, i32* @y.36
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  %18 = alloca i64, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i64, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca i64, align 8
  %31 = alloca i8*, align 8
  %32 = alloca i64, align 8
  %33 = alloca i8, align 1
  %34 = alloca i8, align 1
  %35 = alloca i8, align 1
  %36 = alloca i8, align 1
  %37 = alloca i8, align 1
  %38 = alloca i8, align 1
  %39 = alloca i8, align 1
  %40 = alloca i8, align 1
  %41 = alloca i8, align 1
  %42 = alloca i8, align 1
  %43 = alloca i8, align 1
  %44 = alloca i64, align 8
  %45 = alloca i8, align 1
  %46 = alloca %struct.__mbstate_t, align 4
  %47 = alloca i32, align 4
  %48 = alloca i64, align 8
  %49 = alloca i64, align 8
  %50 = alloca i64, align 8
  store i8* %0, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !1629, metadata !DIExpression()), !dbg !1630
  store i64 %1, i64* %20, align 8
  call void @llvm.dbg.declare(metadata i64* %20, metadata !1631, metadata !DIExpression()), !dbg !1632
  store i8* %2, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !1633, metadata !DIExpression()), !dbg !1634
  store i64 %3, i64* %22, align 8
  call void @llvm.dbg.declare(metadata i64* %22, metadata !1635, metadata !DIExpression()), !dbg !1636
  store i32 %4, i32* %23, align 4
  call void @llvm.dbg.declare(metadata i32* %23, metadata !1637, metadata !DIExpression()), !dbg !1638
  store i32 %5, i32* %24, align 4
  call void @llvm.dbg.declare(metadata i32* %24, metadata !1639, metadata !DIExpression()), !dbg !1640
  store i32* %6, i32** %25, align 8
  call void @llvm.dbg.declare(metadata i32** %25, metadata !1641, metadata !DIExpression()), !dbg !1642
  store i8* %7, i8** %26, align 8
  call void @llvm.dbg.declare(metadata i8** %26, metadata !1643, metadata !DIExpression()), !dbg !1644
  store i8* %8, i8** %27, align 8
  call void @llvm.dbg.declare(metadata i8** %27, metadata !1645, metadata !DIExpression()), !dbg !1646
  call void @llvm.dbg.declare(metadata i64* %28, metadata !1647, metadata !DIExpression()), !dbg !1648
  call void @llvm.dbg.declare(metadata i64* %29, metadata !1649, metadata !DIExpression()), !dbg !1650
  store i64 0, i64* %29, align 8, !dbg !1650
  call void @llvm.dbg.declare(metadata i64* %30, metadata !1651, metadata !DIExpression()), !dbg !1652
  store i64 0, i64* %30, align 8, !dbg !1652
  call void @llvm.dbg.declare(metadata i8** %31, metadata !1653, metadata !DIExpression()), !dbg !1654
  store i8* null, i8** %31, align 8, !dbg !1654
  call void @llvm.dbg.declare(metadata i64* %32, metadata !1655, metadata !DIExpression()), !dbg !1656
  store i64 0, i64* %32, align 8, !dbg !1656
  call void @llvm.dbg.declare(metadata i8* %33, metadata !1657, metadata !DIExpression()), !dbg !1658
  store i8 0, i8* %33, align 1, !dbg !1658
  call void @llvm.dbg.declare(metadata i8* %34, metadata !1659, metadata !DIExpression()), !dbg !1660
  %51 = call i64 @__ctype_get_mb_cur_max() #10, !dbg !1661
  %52 = icmp eq i64 %51, 1, !dbg !1662
  %53 = zext i1 %52 to i8, !dbg !1660
  store i8 %53, i8* %34, align 1, !dbg !1660
  call void @llvm.dbg.declare(metadata i8* %35, metadata !1663, metadata !DIExpression()), !dbg !1664
  %54 = load i32, i32* %24, align 4, !dbg !1665
  %55 = and i32 %54, 2, !dbg !1666
  %56 = icmp ne i32 %55, 0, !dbg !1667
  %57 = zext i1 %56 to i8, !dbg !1664
  store i8 %57, i8* %35, align 1, !dbg !1664
  call void @llvm.dbg.declare(metadata i8* %36, metadata !1668, metadata !DIExpression()), !dbg !1669
  store i8 0, i8* %36, align 1, !dbg !1669
  call void @llvm.dbg.declare(metadata i8* %37, metadata !1670, metadata !DIExpression()), !dbg !1671
  store i8 0, i8* %37, align 1, !dbg !1671
  call void @llvm.dbg.declare(metadata i8* %38, metadata !1672, metadata !DIExpression()), !dbg !1673
  store i8 1, i8* %38, align 1, !dbg !1673
  %58 = load i32, i32* @x.35
  %59 = load i32, i32* @y.36
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %66, !dbg !1674

66:                                               ; preds = %originalBBpart21568, %originalBBpart2
  call void @llvm.dbg.label(metadata !1675), !dbg !1676
  %67 = load i32, i32* @x.35
  %68 = load i32, i32* @y.36
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB2, label %originalBB2alteredBB

originalBB2:                                      ; preds = %66, %originalBB2alteredBB
  %75 = load i32, i32* %23, align 4, !dbg !1677
  %76 = load i32, i32* @x.35
  %77 = load i32, i32* @y.36
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart24, label %originalBB2alteredBB

originalBBpart24:                                 ; preds = %originalBB2
  switch i32 %75, label %632 [
    i32 6, label %84
    i32 5, label %101
    i32 7, label %214
    i32 8, label %215
    i32 9, label %215
    i32 10, label %215
    i32 3, label %431
    i32 1, label %448
    i32 4, label %449
    i32 2, label %502
    i32 0, label %615
  ], !dbg !1678

84:                                               ; preds = %originalBBpart24
  %85 = load i32, i32* @x.35
  %86 = load i32, i32* @y.36
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %84, %originalBB6alteredBB
  store i32 5, i32* %23, align 4, !dbg !1679
  store i8 1, i8* %35, align 1, !dbg !1681
  %93 = load i32, i32* @x.35
  %94 = load i32, i32* @y.36
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %101, !dbg !1682

101:                                              ; preds = %originalBBpart28, %originalBBpart24
  %102 = load i32, i32* @x.35
  %103 = load i32, i32* @y.36
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %101, %originalBB10alteredBB
  %110 = load i8, i8* %35, align 1, !dbg !1683
  %111 = trunc i8 %110 to i1, !dbg !1683
  %112 = load i32, i32* @x.35
  %113 = load i32, i32* @y.36
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %111, label %197, label %120, !dbg !1685

120:                                              ; preds = %originalBBpart212
  %121 = load i32, i32* @x.35
  %122 = load i32, i32* @y.36
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %120, %originalBB14alteredBB
  %129 = load i32, i32* @x.35
  %130 = load i32, i32* @y.36
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %137, !dbg !1686

137:                                              ; preds = %originalBBpart216
  %138 = load i32, i32* @x.35
  %139 = load i32, i32* @y.36
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %137, %originalBB18alteredBB
  %146 = load i64, i64* %29, align 8, !dbg !1687
  %147 = load i64, i64* %20, align 8, !dbg !1687
  %148 = icmp ult i64 %146, %147, !dbg !1687
  %149 = load i32, i32* @x.35
  %150 = load i32, i32* @y.36
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %148, label %157, label %177, !dbg !1690

157:                                              ; preds = %originalBBpart220
  %158 = load i32, i32* @x.35
  %159 = load i32, i32* @y.36
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %157, %originalBB22alteredBB
  %166 = load i8*, i8** %19, align 8, !dbg !1687
  %167 = load i64, i64* %29, align 8, !dbg !1687
  %168 = getelementptr inbounds i8, i8* %166, i64 %167, !dbg !1687
  store i8 34, i8* %168, align 1, !dbg !1687
  %169 = load i32, i32* @x.35
  %170 = load i32, i32* @y.36
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %177, !dbg !1687

177:                                              ; preds = %originalBBpart224, %originalBBpart220
  %178 = load i32, i32* @x.35
  %179 = load i32, i32* @y.36
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %177, %originalBB26alteredBB
  %186 = load i64, i64* %29, align 8, !dbg !1690
  %187 = add i64 %186, 1, !dbg !1690
  store i64 %187, i64* %29, align 8, !dbg !1690
  %188 = load i32, i32* @x.35
  %189 = load i32, i32* @y.36
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBBpart234, label %originalBB26alteredBB

originalBBpart234:                                ; preds = %originalBB26
  br label %196, !dbg !1690

196:                                              ; preds = %originalBBpart234
  br label %197, !dbg !1690

197:                                              ; preds = %196, %originalBBpart212
  %198 = load i32, i32* @x.35
  %199 = load i32, i32* @y.36
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBB36, label %originalBB36alteredBB

originalBB36:                                     ; preds = %197, %originalBB36alteredBB
  store i8 1, i8* %33, align 1, !dbg !1691
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.63, i64 0, i64 0), i8** %31, align 8, !dbg !1692
  store i64 1, i64* %32, align 8, !dbg !1693
  %206 = load i32, i32* @x.35
  %207 = load i32, i32* @y.36
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBBpart238, label %originalBB36alteredBB

originalBBpart238:                                ; preds = %originalBB36
  br label %649, !dbg !1694

214:                                              ; preds = %originalBBpart24
  store i8 1, i8* %33, align 1, !dbg !1695
  store i8 0, i8* %35, align 1, !dbg !1696
  br label %649, !dbg !1697

215:                                              ; preds = %originalBBpart24, %originalBBpart24, %originalBBpart24
  %216 = load i32, i32* @x.35
  %217 = load i32, i32* @y.36
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBB40, label %originalBB40alteredBB

originalBB40:                                     ; preds = %215, %originalBB40alteredBB
  %224 = load i32, i32* %23, align 4, !dbg !1698
  %225 = icmp ne i32 %224, 10, !dbg !1701
  %226 = load i32, i32* @x.35
  %227 = load i32, i32* @y.36
  %228 = sub i32 %226, 1
  %229 = mul i32 %226, %228
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %227, 10
  %233 = or i1 %231, %232
  br i1 %233, label %originalBBpart242, label %originalBB40alteredBB

originalBBpart242:                                ; preds = %originalBB40
  br i1 %225, label %234, label %255, !dbg !1702

234:                                              ; preds = %originalBBpart242
  %235 = load i32, i32* @x.35
  %236 = load i32, i32* @y.36
  %237 = sub i32 %235, 1
  %238 = mul i32 %235, %237
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %240, %241
  br i1 %242, label %originalBB44, label %originalBB44alteredBB

originalBB44:                                     ; preds = %234, %originalBB44alteredBB
  %243 = load i32, i32* %23, align 4, !dbg !1703
  %244 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.64, i64 0, i64 0), i32 %243), !dbg !1705
  store i8* %244, i8** %26, align 8, !dbg !1706
  %245 = load i32, i32* %23, align 4, !dbg !1707
  %246 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.65, i64 0, i64 0), i32 %245), !dbg !1708
  store i8* %246, i8** %27, align 8, !dbg !1709
  %247 = load i32, i32* @x.35
  %248 = load i32, i32* @y.36
  %249 = sub i32 %247, 1
  %250 = mul i32 %247, %249
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %252, %253
  br i1 %254, label %originalBBpart246, label %originalBB44alteredBB

originalBBpart246:                                ; preds = %originalBB44
  br label %255, !dbg !1710

255:                                              ; preds = %originalBBpart246, %originalBBpart242
  %256 = load i32, i32* @x.35
  %257 = load i32, i32* @y.36
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBB48, label %originalBB48alteredBB

originalBB48:                                     ; preds = %255, %originalBB48alteredBB
  %264 = load i8, i8* %35, align 1, !dbg !1711
  %265 = trunc i8 %264 to i1, !dbg !1711
  %266 = load i32, i32* @x.35
  %267 = load i32, i32* @y.36
  %268 = sub i32 %266, 1
  %269 = mul i32 %266, %268
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %271, %272
  br i1 %273, label %originalBBpart250, label %originalBB48alteredBB

originalBBpart250:                                ; preds = %originalBB48
  br i1 %265, label %411, label %274, !dbg !1713

274:                                              ; preds = %originalBBpart250
  %275 = load i32, i32* @x.35
  %276 = load i32, i32* @y.36
  %277 = sub i32 %275, 1
  %278 = mul i32 %275, %277
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %280, %281
  br i1 %282, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %274, %originalBB52alteredBB
  %283 = load i8*, i8** %26, align 8, !dbg !1714
  store i8* %283, i8** %31, align 8, !dbg !1716
  %284 = load i32, i32* @x.35
  %285 = load i32, i32* @y.36
  %286 = sub i32 %284, 1
  %287 = mul i32 %284, %286
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %289, %290
  br i1 %291, label %originalBBpart254, label %originalBB52alteredBB

originalBBpart254:                                ; preds = %originalBB52
  br label %292, !dbg !1717

292:                                              ; preds = %391, %originalBBpart254
  %293 = load i32, i32* @x.35
  %294 = load i32, i32* @y.36
  %295 = sub i32 %293, 1
  %296 = mul i32 %293, %295
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %298, %299
  br i1 %300, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %292, %originalBB56alteredBB
  %301 = load i8*, i8** %31, align 8, !dbg !1718
  %302 = load i8, i8* %301, align 1, !dbg !1720
  %303 = icmp ne i8 %302, 0, !dbg !1721
  %304 = load i32, i32* @x.35
  %305 = load i32, i32* @y.36
  %306 = sub i32 %304, 1
  %307 = mul i32 %304, %306
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %309, %310
  br i1 %311, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  br i1 %303, label %312, label %394, !dbg !1721

312:                                              ; preds = %originalBBpart258
  %313 = load i32, i32* @x.35
  %314 = load i32, i32* @y.36
  %315 = sub i32 %313, 1
  %316 = mul i32 %313, %315
  %317 = urem i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %314, 10
  %320 = or i1 %318, %319
  br i1 %320, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %312, %originalBB60alteredBB
  %321 = load i32, i32* @x.35
  %322 = load i32, i32* @y.36
  %323 = sub i32 %321, 1
  %324 = mul i32 %321, %323
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %322, 10
  %328 = or i1 %326, %327
  br i1 %328, label %originalBBpart262, label %originalBB60alteredBB

originalBBpart262:                                ; preds = %originalBB60
  br label %329, !dbg !1722

329:                                              ; preds = %originalBBpart262
  %330 = load i32, i32* @x.35
  %331 = load i32, i32* @y.36
  %332 = sub i32 %330, 1
  %333 = mul i32 %330, %332
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %335, %336
  br i1 %337, label %originalBB64, label %originalBB64alteredBB

originalBB64:                                     ; preds = %329, %originalBB64alteredBB
  %338 = load i64, i64* %29, align 8, !dbg !1723
  %339 = load i64, i64* %20, align 8, !dbg !1723
  %340 = icmp ult i64 %338, %339, !dbg !1723
  %341 = load i32, i32* @x.35
  %342 = load i32, i32* @y.36
  %343 = sub i32 %341, 1
  %344 = mul i32 %341, %343
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %346, %347
  br i1 %348, label %originalBBpart266, label %originalBB64alteredBB

originalBBpart266:                                ; preds = %originalBB64
  br i1 %340, label %349, label %355, !dbg !1726

349:                                              ; preds = %originalBBpart266
  %350 = load i8*, i8** %31, align 8, !dbg !1723
  %351 = load i8, i8* %350, align 1, !dbg !1723
  %352 = load i8*, i8** %19, align 8, !dbg !1723
  %353 = load i64, i64* %29, align 8, !dbg !1723
  %354 = getelementptr inbounds i8, i8* %352, i64 %353, !dbg !1723
  store i8 %351, i8* %354, align 1, !dbg !1723
  br label %355, !dbg !1723

355:                                              ; preds = %349, %originalBBpart266
  %356 = load i32, i32* @x.35
  %357 = load i32, i32* @y.36
  %358 = sub i32 %356, 1
  %359 = mul i32 %356, %358
  %360 = urem i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %361, %362
  br i1 %363, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %355, %originalBB68alteredBB
  %364 = load i64, i64* %29, align 8, !dbg !1726
  %365 = add i64 %364, 1, !dbg !1726
  store i64 %365, i64* %29, align 8, !dbg !1726
  %366 = load i32, i32* @x.35
  %367 = load i32, i32* @y.36
  %368 = sub i32 %366, 1
  %369 = mul i32 %366, %368
  %370 = urem i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %371, %372
  br i1 %373, label %originalBBpart276, label %originalBB68alteredBB

originalBBpart276:                                ; preds = %originalBB68
  br label %374, !dbg !1726

374:                                              ; preds = %originalBBpart276
  %375 = load i32, i32* @x.35
  %376 = load i32, i32* @y.36
  %377 = sub i32 %375, 1
  %378 = mul i32 %375, %377
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %380, %381
  br i1 %382, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %374, %originalBB78alteredBB
  %383 = load i32, i32* @x.35
  %384 = load i32, i32* @y.36
  %385 = sub i32 %383, 1
  %386 = mul i32 %383, %385
  %387 = urem i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %388, %389
  br i1 %390, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br label %391, !dbg !1726

391:                                              ; preds = %originalBBpart280
  %392 = load i8*, i8** %31, align 8, !dbg !1727
  %393 = getelementptr inbounds i8, i8* %392, i32 1, !dbg !1727
  store i8* %393, i8** %31, align 8, !dbg !1727
  br label %292, !dbg !1728, !llvm.loop !1729

394:                                              ; preds = %originalBBpart258
  %395 = load i32, i32* @x.35
  %396 = load i32, i32* @y.36
  %397 = sub i32 %395, 1
  %398 = mul i32 %395, %397
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %400, %401
  br i1 %402, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %394, %originalBB82alteredBB
  %403 = load i32, i32* @x.35
  %404 = load i32, i32* @y.36
  %405 = sub i32 %403, 1
  %406 = mul i32 %403, %405
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %404, 10
  %410 = or i1 %408, %409
  br i1 %410, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br label %411, !dbg !1730

411:                                              ; preds = %originalBBpart284, %originalBBpart250
  %412 = load i32, i32* @x.35
  %413 = load i32, i32* @y.36
  %414 = sub i32 %412, 1
  %415 = mul i32 %412, %414
  %416 = urem i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %413, 10
  %419 = or i1 %417, %418
  br i1 %419, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %411, %originalBB86alteredBB
  store i8 1, i8* %33, align 1, !dbg !1731
  %420 = load i8*, i8** %27, align 8, !dbg !1732
  store i8* %420, i8** %31, align 8, !dbg !1733
  %421 = load i8*, i8** %31, align 8, !dbg !1734
  %422 = call i64 @strlen(i8* %421) #13, !dbg !1735
  store i64 %422, i64* %32, align 8, !dbg !1736
  %423 = load i32, i32* @x.35
  %424 = load i32, i32* @y.36
  %425 = sub i32 %423, 1
  %426 = mul i32 %423, %425
  %427 = urem i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %424, 10
  %430 = or i1 %428, %429
  br i1 %430, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br label %649, !dbg !1737

431:                                              ; preds = %originalBBpart24
  %432 = load i32, i32* @x.35
  %433 = load i32, i32* @y.36
  %434 = sub i32 %432, 1
  %435 = mul i32 %432, %434
  %436 = urem i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = icmp slt i32 %433, 10
  %439 = or i1 %437, %438
  br i1 %439, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %431, %originalBB90alteredBB
  store i8 1, i8* %33, align 1, !dbg !1738
  %440 = load i32, i32* @x.35
  %441 = load i32, i32* @y.36
  %442 = sub i32 %440, 1
  %443 = mul i32 %440, %442
  %444 = urem i32 %443, 2
  %445 = icmp eq i32 %444, 0
  %446 = icmp slt i32 %441, 10
  %447 = or i1 %445, %446
  br i1 %447, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br label %448, !dbg !1739

448:                                              ; preds = %originalBBpart292, %originalBBpart24
  store i8 1, i8* %35, align 1, !dbg !1740
  br label %449, !dbg !1741

449:                                              ; preds = %448, %originalBBpart24
  %450 = load i32, i32* @x.35
  %451 = load i32, i32* @y.36
  %452 = sub i32 %450, 1
  %453 = mul i32 %450, %452
  %454 = urem i32 %453, 2
  %455 = icmp eq i32 %454, 0
  %456 = icmp slt i32 %451, 10
  %457 = or i1 %455, %456
  br i1 %457, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %449, %originalBB94alteredBB
  %458 = load i8, i8* %35, align 1, !dbg !1742
  %459 = trunc i8 %458 to i1, !dbg !1742
  %460 = load i32, i32* @x.35
  %461 = load i32, i32* @y.36
  %462 = sub i32 %460, 1
  %463 = mul i32 %460, %462
  %464 = urem i32 %463, 2
  %465 = icmp eq i32 %464, 0
  %466 = icmp slt i32 %461, 10
  %467 = or i1 %465, %466
  br i1 %467, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br i1 %459, label %485, label %468, !dbg !1744

468:                                              ; preds = %originalBBpart296
  %469 = load i32, i32* @x.35
  %470 = load i32, i32* @y.36
  %471 = sub i32 %469, 1
  %472 = mul i32 %469, %471
  %473 = urem i32 %472, 2
  %474 = icmp eq i32 %473, 0
  %475 = icmp slt i32 %470, 10
  %476 = or i1 %474, %475
  br i1 %476, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %468, %originalBB98alteredBB
  store i8 1, i8* %33, align 1, !dbg !1745
  %477 = load i32, i32* @x.35
  %478 = load i32, i32* @y.36
  %479 = sub i32 %477, 1
  %480 = mul i32 %477, %479
  %481 = urem i32 %480, 2
  %482 = icmp eq i32 %481, 0
  %483 = icmp slt i32 %478, 10
  %484 = or i1 %482, %483
  br i1 %484, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br label %485, !dbg !1746

485:                                              ; preds = %originalBBpart2100, %originalBBpart296
  %486 = load i32, i32* @x.35
  %487 = load i32, i32* @y.36
  %488 = sub i32 %486, 1
  %489 = mul i32 %486, %488
  %490 = urem i32 %489, 2
  %491 = icmp eq i32 %490, 0
  %492 = icmp slt i32 %487, 10
  %493 = or i1 %491, %492
  br i1 %493, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %485, %originalBB102alteredBB
  %494 = load i32, i32* @x.35
  %495 = load i32, i32* @y.36
  %496 = sub i32 %494, 1
  %497 = mul i32 %494, %496
  %498 = urem i32 %497, 2
  %499 = icmp eq i32 %498, 0
  %500 = icmp slt i32 %495, 10
  %501 = or i1 %499, %500
  br i1 %501, label %originalBBpart2104, label %originalBB102alteredBB

originalBBpart2104:                               ; preds = %originalBB102
  br label %502, !dbg !1747

502:                                              ; preds = %originalBBpart2104, %originalBBpart24
  %503 = load i32, i32* @x.35
  %504 = load i32, i32* @y.36
  %505 = sub i32 %503, 1
  %506 = mul i32 %503, %505
  %507 = urem i32 %506, 2
  %508 = icmp eq i32 %507, 0
  %509 = icmp slt i32 %504, 10
  %510 = or i1 %508, %509
  br i1 %510, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %502, %originalBB106alteredBB
  store i32 2, i32* %23, align 4, !dbg !1748
  %511 = load i8, i8* %35, align 1, !dbg !1749
  %512 = trunc i8 %511 to i1, !dbg !1749
  %513 = load i32, i32* @x.35
  %514 = load i32, i32* @y.36
  %515 = sub i32 %513, 1
  %516 = mul i32 %513, %515
  %517 = urem i32 %516, 2
  %518 = icmp eq i32 %517, 0
  %519 = icmp slt i32 %514, 10
  %520 = or i1 %518, %519
  br i1 %520, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  br i1 %512, label %598, label %521, !dbg !1751

521:                                              ; preds = %originalBBpart2108
  %522 = load i32, i32* @x.35
  %523 = load i32, i32* @y.36
  %524 = sub i32 %522, 1
  %525 = mul i32 %522, %524
  %526 = urem i32 %525, 2
  %527 = icmp eq i32 %526, 0
  %528 = icmp slt i32 %523, 10
  %529 = or i1 %527, %528
  br i1 %529, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %521, %originalBB110alteredBB
  %530 = load i32, i32* @x.35
  %531 = load i32, i32* @y.36
  %532 = sub i32 %530, 1
  %533 = mul i32 %530, %532
  %534 = urem i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %531, 10
  %537 = or i1 %535, %536
  br i1 %537, label %originalBBpart2112, label %originalBB110alteredBB

originalBBpart2112:                               ; preds = %originalBB110
  br label %538, !dbg !1752

538:                                              ; preds = %originalBBpart2112
  %539 = load i64, i64* %29, align 8, !dbg !1753
  %540 = load i64, i64* %20, align 8, !dbg !1753
  %541 = icmp ult i64 %539, %540, !dbg !1753
  br i1 %541, label %542, label %562, !dbg !1756

542:                                              ; preds = %538
  %543 = load i32, i32* @x.35
  %544 = load i32, i32* @y.36
  %545 = sub i32 %543, 1
  %546 = mul i32 %543, %545
  %547 = urem i32 %546, 2
  %548 = icmp eq i32 %547, 0
  %549 = icmp slt i32 %544, 10
  %550 = or i1 %548, %549
  br i1 %550, label %originalBB114, label %originalBB114alteredBB

originalBB114:                                    ; preds = %542, %originalBB114alteredBB
  %551 = load i8*, i8** %19, align 8, !dbg !1753
  %552 = load i64, i64* %29, align 8, !dbg !1753
  %553 = getelementptr inbounds i8, i8* %551, i64 %552, !dbg !1753
  store i8 39, i8* %553, align 1, !dbg !1753
  %554 = load i32, i32* @x.35
  %555 = load i32, i32* @y.36
  %556 = sub i32 %554, 1
  %557 = mul i32 %554, %556
  %558 = urem i32 %557, 2
  %559 = icmp eq i32 %558, 0
  %560 = icmp slt i32 %555, 10
  %561 = or i1 %559, %560
  br i1 %561, label %originalBBpart2116, label %originalBB114alteredBB

originalBBpart2116:                               ; preds = %originalBB114
  br label %562, !dbg !1753

562:                                              ; preds = %originalBBpart2116, %538
  %563 = load i32, i32* @x.35
  %564 = load i32, i32* @y.36
  %565 = sub i32 %563, 1
  %566 = mul i32 %563, %565
  %567 = urem i32 %566, 2
  %568 = icmp eq i32 %567, 0
  %569 = icmp slt i32 %564, 10
  %570 = or i1 %568, %569
  br i1 %570, label %originalBB118, label %originalBB118alteredBB

originalBB118:                                    ; preds = %562, %originalBB118alteredBB
  %571 = load i64, i64* %29, align 8, !dbg !1756
  %572 = add i64 %571, 1, !dbg !1756
  store i64 %572, i64* %29, align 8, !dbg !1756
  %573 = load i32, i32* @x.35
  %574 = load i32, i32* @y.36
  %575 = sub i32 %573, 1
  %576 = mul i32 %573, %575
  %577 = urem i32 %576, 2
  %578 = icmp eq i32 %577, 0
  %579 = icmp slt i32 %574, 10
  %580 = or i1 %578, %579
  br i1 %580, label %originalBBpart2132, label %originalBB118alteredBB

originalBBpart2132:                               ; preds = %originalBB118
  br label %581, !dbg !1756

581:                                              ; preds = %originalBBpart2132
  %582 = load i32, i32* @x.35
  %583 = load i32, i32* @y.36
  %584 = sub i32 %582, 1
  %585 = mul i32 %582, %584
  %586 = urem i32 %585, 2
  %587 = icmp eq i32 %586, 0
  %588 = icmp slt i32 %583, 10
  %589 = or i1 %587, %588
  br i1 %589, label %originalBB134, label %originalBB134alteredBB

originalBB134:                                    ; preds = %581, %originalBB134alteredBB
  %590 = load i32, i32* @x.35
  %591 = load i32, i32* @y.36
  %592 = sub i32 %590, 1
  %593 = mul i32 %590, %592
  %594 = urem i32 %593, 2
  %595 = icmp eq i32 %594, 0
  %596 = icmp slt i32 %591, 10
  %597 = or i1 %595, %596
  br i1 %597, label %originalBBpart2136, label %originalBB134alteredBB

originalBBpart2136:                               ; preds = %originalBB134
  br label %598, !dbg !1756

598:                                              ; preds = %originalBBpart2136, %originalBBpart2108
  %599 = load i32, i32* @x.35
  %600 = load i32, i32* @y.36
  %601 = sub i32 %599, 1
  %602 = mul i32 %599, %601
  %603 = urem i32 %602, 2
  %604 = icmp eq i32 %603, 0
  %605 = icmp slt i32 %600, 10
  %606 = or i1 %604, %605
  br i1 %606, label %originalBB138, label %originalBB138alteredBB

originalBB138:                                    ; preds = %598, %originalBB138alteredBB
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.65, i64 0, i64 0), i8** %31, align 8, !dbg !1757
  store i64 1, i64* %32, align 8, !dbg !1758
  %607 = load i32, i32* @x.35
  %608 = load i32, i32* @y.36
  %609 = sub i32 %607, 1
  %610 = mul i32 %607, %609
  %611 = urem i32 %610, 2
  %612 = icmp eq i32 %611, 0
  %613 = icmp slt i32 %608, 10
  %614 = or i1 %612, %613
  br i1 %614, label %originalBBpart2140, label %originalBB138alteredBB

originalBBpart2140:                               ; preds = %originalBB138
  br label %649, !dbg !1759

615:                                              ; preds = %originalBBpart24
  %616 = load i32, i32* @x.35
  %617 = load i32, i32* @y.36
  %618 = sub i32 %616, 1
  %619 = mul i32 %616, %618
  %620 = urem i32 %619, 2
  %621 = icmp eq i32 %620, 0
  %622 = icmp slt i32 %617, 10
  %623 = or i1 %621, %622
  br i1 %623, label %originalBB142, label %originalBB142alteredBB

originalBB142:                                    ; preds = %615, %originalBB142alteredBB
  store i8 0, i8* %35, align 1, !dbg !1760
  %624 = load i32, i32* @x.35
  %625 = load i32, i32* @y.36
  %626 = sub i32 %624, 1
  %627 = mul i32 %624, %626
  %628 = urem i32 %627, 2
  %629 = icmp eq i32 %628, 0
  %630 = icmp slt i32 %625, 10
  %631 = or i1 %629, %630
  br i1 %631, label %originalBBpart2144, label %originalBB142alteredBB

originalBBpart2144:                               ; preds = %originalBB142
  br label %649, !dbg !1761

632:                                              ; preds = %originalBBpart24
  %633 = load i32, i32* @x.35
  %634 = load i32, i32* @y.36
  %635 = sub i32 %633, 1
  %636 = mul i32 %633, %635
  %637 = urem i32 %636, 2
  %638 = icmp eq i32 %637, 0
  %639 = icmp slt i32 %634, 10
  %640 = or i1 %638, %639
  br i1 %640, label %originalBB146, label %originalBB146alteredBB

originalBB146:                                    ; preds = %632, %originalBB146alteredBB
  call void @abort() #12, !dbg !1762
  %641 = load i32, i32* @x.35
  %642 = load i32, i32* @y.36
  %643 = sub i32 %641, 1
  %644 = mul i32 %641, %643
  %645 = urem i32 %644, 2
  %646 = icmp eq i32 %645, 0
  %647 = icmp slt i32 %642, 10
  %648 = or i1 %646, %647
  br i1 %648, label %originalBBpart2148, label %originalBB146alteredBB

originalBBpart2148:                               ; preds = %originalBB146
  unreachable, !dbg !1762

649:                                              ; preds = %originalBBpart2144, %originalBBpart2140, %originalBBpart288, %214, %originalBBpart238
  store i64 0, i64* %28, align 8, !dbg !1763
  br label %650, !dbg !1765

650:                                              ; preds = %5104, %649
  %651 = load i32, i32* @x.35
  %652 = load i32, i32* @y.36
  %653 = sub i32 %651, 1
  %654 = mul i32 %651, %653
  %655 = urem i32 %654, 2
  %656 = icmp eq i32 %655, 0
  %657 = icmp slt i32 %652, 10
  %658 = or i1 %656, %657
  br i1 %658, label %originalBB150, label %originalBB150alteredBB

originalBB150:                                    ; preds = %650, %originalBB150alteredBB
  %659 = load i64, i64* %22, align 8, !dbg !1766
  %660 = icmp eq i64 %659, -1, !dbg !1768
  %661 = load i32, i32* @x.35
  %662 = load i32, i32* @y.36
  %663 = sub i32 %661, 1
  %664 = mul i32 %661, %663
  %665 = urem i32 %664, 2
  %666 = icmp eq i32 %665, 0
  %667 = icmp slt i32 %662, 10
  %668 = or i1 %666, %667
  br i1 %668, label %originalBBpart2152, label %originalBB150alteredBB

originalBBpart2152:                               ; preds = %originalBB150
  br i1 %660, label %669, label %693, !dbg !1766

669:                                              ; preds = %originalBBpart2152
  %670 = load i32, i32* @x.35
  %671 = load i32, i32* @y.36
  %672 = sub i32 %670, 1
  %673 = mul i32 %670, %672
  %674 = urem i32 %673, 2
  %675 = icmp eq i32 %674, 0
  %676 = icmp slt i32 %671, 10
  %677 = or i1 %675, %676
  br i1 %677, label %originalBB154, label %originalBB154alteredBB

originalBB154:                                    ; preds = %669, %originalBB154alteredBB
  %678 = load i8*, i8** %21, align 8, !dbg !1769
  %679 = load i64, i64* %28, align 8, !dbg !1770
  %680 = getelementptr inbounds i8, i8* %678, i64 %679, !dbg !1769
  %681 = load i8, i8* %680, align 1, !dbg !1769
  %682 = sext i8 %681 to i32, !dbg !1769
  %683 = icmp eq i32 %682, 0, !dbg !1771
  %684 = zext i1 %683 to i32, !dbg !1771
  %685 = load i32, i32* @x.35
  %686 = load i32, i32* @y.36
  %687 = sub i32 %685, 1
  %688 = mul i32 %685, %687
  %689 = urem i32 %688, 2
  %690 = icmp eq i32 %689, 0
  %691 = icmp slt i32 %686, 10
  %692 = or i1 %690, %691
  br i1 %692, label %originalBBpart2156, label %originalBB154alteredBB

originalBBpart2156:                               ; preds = %originalBB154
  br label %714, !dbg !1766

693:                                              ; preds = %originalBBpart2152
  %694 = load i32, i32* @x.35
  %695 = load i32, i32* @y.36
  %696 = sub i32 %694, 1
  %697 = mul i32 %694, %696
  %698 = urem i32 %697, 2
  %699 = icmp eq i32 %698, 0
  %700 = icmp slt i32 %695, 10
  %701 = or i1 %699, %700
  br i1 %701, label %originalBB158, label %originalBB158alteredBB

originalBB158:                                    ; preds = %693, %originalBB158alteredBB
  %702 = load i64, i64* %28, align 8, !dbg !1772
  %703 = load i64, i64* %22, align 8, !dbg !1773
  %704 = icmp eq i64 %702, %703, !dbg !1774
  %705 = zext i1 %704 to i32, !dbg !1774
  %706 = load i32, i32* @x.35
  %707 = load i32, i32* @y.36
  %708 = sub i32 %706, 1
  %709 = mul i32 %706, %708
  %710 = urem i32 %709, 2
  %711 = icmp eq i32 %710, 0
  %712 = icmp slt i32 %707, 10
  %713 = or i1 %711, %712
  br i1 %713, label %originalBBpart2160, label %originalBB158alteredBB

originalBBpart2160:                               ; preds = %originalBB158
  br label %714, !dbg !1766

714:                                              ; preds = %originalBBpart2160, %originalBBpart2156
  %715 = phi i32 [ %684, %originalBBpart2156 ], [ %705, %originalBBpart2160 ], !dbg !1766
  %716 = load i32, i32* @x.35
  %717 = load i32, i32* @y.36
  %718 = sub i32 %716, 1
  %719 = mul i32 %716, %718
  %720 = urem i32 %719, 2
  %721 = icmp eq i32 %720, 0
  %722 = icmp slt i32 %717, 10
  %723 = or i1 %721, %722
  br i1 %723, label %originalBB162, label %originalBB162alteredBB

originalBB162:                                    ; preds = %714, %originalBB162alteredBB
  %724 = icmp ne i32 %715, 0, !dbg !1775
  %725 = xor i1 %724, true, !dbg !1775
  %726 = load i32, i32* @x.35
  %727 = load i32, i32* @y.36
  %728 = sub i32 %726, 1
  %729 = mul i32 %726, %728
  %730 = urem i32 %729, 2
  %731 = icmp eq i32 %730, 0
  %732 = icmp slt i32 %727, 10
  %733 = or i1 %731, %732
  br i1 %733, label %originalBBpart2167, label %originalBB162alteredBB

originalBBpart2167:                               ; preds = %originalBB162
  br i1 %725, label %734, label %5107, !dbg !1776

734:                                              ; preds = %originalBBpart2167
  call void @llvm.dbg.declare(metadata i8* %39, metadata !1777, metadata !DIExpression()), !dbg !1779
  call void @llvm.dbg.declare(metadata i8* %40, metadata !1780, metadata !DIExpression()), !dbg !1781
  call void @llvm.dbg.declare(metadata i8* %41, metadata !1782, metadata !DIExpression()), !dbg !1783
  %735 = load i32, i32* @x.35
  %736 = load i32, i32* @y.36
  %737 = sub i32 %735, 1
  %738 = mul i32 %735, %737
  %739 = urem i32 %738, 2
  %740 = icmp eq i32 %739, 0
  %741 = icmp slt i32 %736, 10
  %742 = or i1 %740, %741
  br i1 %742, label %originalBB169, label %originalBB169alteredBB

originalBB169:                                    ; preds = %734, %originalBB169alteredBB
  store i8 0, i8* %41, align 1, !dbg !1783
  call void @llvm.dbg.declare(metadata i8* %42, metadata !1784, metadata !DIExpression()), !dbg !1785
  store i8 0, i8* %42, align 1, !dbg !1785
  call void @llvm.dbg.declare(metadata i8* %43, metadata !1786, metadata !DIExpression()), !dbg !1787
  store i8 0, i8* %43, align 1, !dbg !1787
  %743 = load i8, i8* %33, align 1, !dbg !1788
  %744 = trunc i8 %743 to i1, !dbg !1788
  %745 = load i32, i32* @x.35
  %746 = load i32, i32* @y.36
  %747 = sub i32 %745, 1
  %748 = mul i32 %745, %747
  %749 = urem i32 %748, 2
  %750 = icmp eq i32 %749, 0
  %751 = icmp slt i32 %746, 10
  %752 = or i1 %750, %751
  br i1 %752, label %originalBBpart2171, label %originalBB169alteredBB

originalBBpart2171:                               ; preds = %originalBB169
  br i1 %744, label %753, label %917, !dbg !1790

753:                                              ; preds = %originalBBpart2171
  %754 = load i32, i32* @x.35
  %755 = load i32, i32* @y.36
  %756 = sub i32 %754, 1
  %757 = mul i32 %754, %756
  %758 = urem i32 %757, 2
  %759 = icmp eq i32 %758, 0
  %760 = icmp slt i32 %755, 10
  %761 = or i1 %759, %760
  br i1 %761, label %originalBB173, label %originalBB173alteredBB

originalBB173:                                    ; preds = %753, %originalBB173alteredBB
  %762 = load i32, i32* %23, align 4, !dbg !1791
  %763 = icmp ne i32 %762, 2, !dbg !1792
  %764 = load i32, i32* @x.35
  %765 = load i32, i32* @y.36
  %766 = sub i32 %764, 1
  %767 = mul i32 %764, %766
  %768 = urem i32 %767, 2
  %769 = icmp eq i32 %768, 0
  %770 = icmp slt i32 %765, 10
  %771 = or i1 %769, %770
  br i1 %771, label %originalBBpart2175, label %originalBB173alteredBB

originalBBpart2175:                               ; preds = %originalBB173
  br i1 %763, label %772, label %917, !dbg !1793

772:                                              ; preds = %originalBBpart2175
  %773 = load i32, i32* @x.35
  %774 = load i32, i32* @y.36
  %775 = sub i32 %773, 1
  %776 = mul i32 %773, %775
  %777 = urem i32 %776, 2
  %778 = icmp eq i32 %777, 0
  %779 = icmp slt i32 %774, 10
  %780 = or i1 %778, %779
  br i1 %780, label %originalBB177, label %originalBB177alteredBB

originalBB177:                                    ; preds = %772, %originalBB177alteredBB
  %781 = load i64, i64* %32, align 8, !dbg !1794
  %782 = icmp ne i64 %781, 0, !dbg !1794
  %783 = load i32, i32* @x.35
  %784 = load i32, i32* @y.36
  %785 = sub i32 %783, 1
  %786 = mul i32 %783, %785
  %787 = urem i32 %786, 2
  %788 = icmp eq i32 %787, 0
  %789 = icmp slt i32 %784, 10
  %790 = or i1 %788, %789
  br i1 %790, label %originalBBpart2179, label %originalBB177alteredBB

originalBBpart2179:                               ; preds = %originalBB177
  br i1 %782, label %791, label %917, !dbg !1795

791:                                              ; preds = %originalBBpart2179
  %792 = load i32, i32* @x.35
  %793 = load i32, i32* @y.36
  %794 = sub i32 %792, 1
  %795 = mul i32 %792, %794
  %796 = urem i32 %795, 2
  %797 = icmp eq i32 %796, 0
  %798 = icmp slt i32 %793, 10
  %799 = or i1 %797, %798
  br i1 %799, label %originalBB181, label %originalBB181alteredBB

originalBB181:                                    ; preds = %791, %originalBB181alteredBB
  %800 = load i64, i64* %28, align 8, !dbg !1796
  %801 = load i64, i64* %32, align 8, !dbg !1797
  %802 = add i64 %800, %801, !dbg !1798
  %803 = load i64, i64* %22, align 8, !dbg !1799
  %804 = icmp eq i64 %803, -1, !dbg !1800
  %805 = load i32, i32* @x.35
  %806 = load i32, i32* @y.36
  %807 = sub i32 %805, 1
  %808 = mul i32 %805, %807
  %809 = urem i32 %808, 2
  %810 = icmp eq i32 %809, 0
  %811 = icmp slt i32 %806, 10
  %812 = or i1 %810, %811
  br i1 %812, label %originalBBpart2188, label %originalBB181alteredBB

originalBBpart2188:                               ; preds = %originalBB181
  br i1 %804, label %813, label %851, !dbg !1801

813:                                              ; preds = %originalBBpart2188
  %814 = load i32, i32* @x.35
  %815 = load i32, i32* @y.36
  %816 = sub i32 %814, 1
  %817 = mul i32 %814, %816
  %818 = urem i32 %817, 2
  %819 = icmp eq i32 %818, 0
  %820 = icmp slt i32 %815, 10
  %821 = or i1 %819, %820
  br i1 %821, label %originalBB190, label %originalBB190alteredBB

originalBB190:                                    ; preds = %813, %originalBB190alteredBB
  %822 = load i64, i64* %32, align 8, !dbg !1802
  %823 = icmp ult i64 1, %822, !dbg !1803
  %824 = load i32, i32* @x.35
  %825 = load i32, i32* @y.36
  %826 = sub i32 %824, 1
  %827 = mul i32 %824, %826
  %828 = urem i32 %827, 2
  %829 = icmp eq i32 %828, 0
  %830 = icmp slt i32 %825, 10
  %831 = or i1 %829, %830
  br i1 %831, label %originalBBpart2192, label %originalBB190alteredBB

originalBBpart2192:                               ; preds = %originalBB190
  br i1 %823, label %832, label %851, !dbg !1799

832:                                              ; preds = %originalBBpart2192
  %833 = load i32, i32* @x.35
  %834 = load i32, i32* @y.36
  %835 = sub i32 %833, 1
  %836 = mul i32 %833, %835
  %837 = urem i32 %836, 2
  %838 = icmp eq i32 %837, 0
  %839 = icmp slt i32 %834, 10
  %840 = or i1 %838, %839
  br i1 %840, label %originalBB194, label %originalBB194alteredBB

originalBB194:                                    ; preds = %832, %originalBB194alteredBB
  %841 = load i8*, i8** %21, align 8, !dbg !1804
  %842 = call i64 @strlen(i8* %841) #13, !dbg !1805
  store i64 %842, i64* %22, align 8, !dbg !1806
  %843 = load i32, i32* @x.35
  %844 = load i32, i32* @y.36
  %845 = sub i32 %843, 1
  %846 = mul i32 %843, %845
  %847 = urem i32 %846, 2
  %848 = icmp eq i32 %847, 0
  %849 = icmp slt i32 %844, 10
  %850 = or i1 %848, %849
  br i1 %850, label %originalBBpart2196, label %originalBB194alteredBB

originalBBpart2196:                               ; preds = %originalBB194
  br label %853, !dbg !1799

851:                                              ; preds = %originalBBpart2192, %originalBBpart2188
  %852 = load i64, i64* %22, align 8, !dbg !1807
  br label %853, !dbg !1799

853:                                              ; preds = %851, %originalBBpart2196
  %854 = phi i64 [ %842, %originalBBpart2196 ], [ %852, %851 ], !dbg !1799
  %855 = load i32, i32* @x.35
  %856 = load i32, i32* @y.36
  %857 = sub i32 %855, 1
  %858 = mul i32 %855, %857
  %859 = urem i32 %858, 2
  %860 = icmp eq i32 %859, 0
  %861 = icmp slt i32 %856, 10
  %862 = or i1 %860, %861
  br i1 %862, label %originalBB198, label %originalBB198alteredBB

originalBB198:                                    ; preds = %853, %originalBB198alteredBB
  %863 = icmp ule i64 %802, %854, !dbg !1808
  %864 = load i32, i32* @x.35
  %865 = load i32, i32* @y.36
  %866 = sub i32 %864, 1
  %867 = mul i32 %864, %866
  %868 = urem i32 %867, 2
  %869 = icmp eq i32 %868, 0
  %870 = icmp slt i32 %865, 10
  %871 = or i1 %869, %870
  br i1 %871, label %originalBBpart2200, label %originalBB198alteredBB

originalBBpart2200:                               ; preds = %originalBB198
  br i1 %863, label %872, label %917, !dbg !1809

872:                                              ; preds = %originalBBpart2200
  %873 = load i8*, i8** %21, align 8, !dbg !1810
  %874 = load i64, i64* %28, align 8, !dbg !1811
  %875 = getelementptr inbounds i8, i8* %873, i64 %874, !dbg !1812
  %876 = load i8*, i8** %31, align 8, !dbg !1813
  %877 = load i64, i64* %32, align 8, !dbg !1814
  %878 = call i32 @memcmp(i8* %875, i8* %876, i64 %877) #13, !dbg !1815
  %879 = icmp eq i32 %878, 0, !dbg !1816
  br i1 %879, label %880, label %917, !dbg !1817

880:                                              ; preds = %872
  %881 = load i32, i32* @x.35
  %882 = load i32, i32* @y.36
  %883 = sub i32 %881, 1
  %884 = mul i32 %881, %883
  %885 = urem i32 %884, 2
  %886 = icmp eq i32 %885, 0
  %887 = icmp slt i32 %882, 10
  %888 = or i1 %886, %887
  br i1 %888, label %originalBB202, label %originalBB202alteredBB

originalBB202:                                    ; preds = %880, %originalBB202alteredBB
  %889 = load i8, i8* %35, align 1, !dbg !1818
  %890 = trunc i8 %889 to i1, !dbg !1818
  %891 = load i32, i32* @x.35
  %892 = load i32, i32* @y.36
  %893 = sub i32 %891, 1
  %894 = mul i32 %891, %893
  %895 = urem i32 %894, 2
  %896 = icmp eq i32 %895, 0
  %897 = icmp slt i32 %892, 10
  %898 = or i1 %896, %897
  br i1 %898, label %originalBBpart2204, label %originalBB202alteredBB

originalBBpart2204:                               ; preds = %originalBB202
  br i1 %890, label %899, label %900, !dbg !1821

899:                                              ; preds = %originalBBpart2204
  br label %5413, !dbg !1822

900:                                              ; preds = %originalBBpart2204
  %901 = load i32, i32* @x.35
  %902 = load i32, i32* @y.36
  %903 = sub i32 %901, 1
  %904 = mul i32 %901, %903
  %905 = urem i32 %904, 2
  %906 = icmp eq i32 %905, 0
  %907 = icmp slt i32 %902, 10
  %908 = or i1 %906, %907
  br i1 %908, label %originalBB206, label %originalBB206alteredBB

originalBB206:                                    ; preds = %900, %originalBB206alteredBB
  store i8 1, i8* %41, align 1, !dbg !1823
  %909 = load i32, i32* @x.35
  %910 = load i32, i32* @y.36
  %911 = sub i32 %909, 1
  %912 = mul i32 %909, %911
  %913 = urem i32 %912, 2
  %914 = icmp eq i32 %913, 0
  %915 = icmp slt i32 %910, 10
  %916 = or i1 %914, %915
  br i1 %916, label %originalBBpart2208, label %originalBB206alteredBB

originalBBpart2208:                               ; preds = %originalBB206
  br label %917, !dbg !1824

917:                                              ; preds = %originalBBpart2208, %872, %originalBBpart2200, %originalBBpart2179, %originalBBpart2175, %originalBBpart2171
  %918 = load i32, i32* @x.35
  %919 = load i32, i32* @y.36
  %920 = sub i32 %918, 1
  %921 = mul i32 %918, %920
  %922 = urem i32 %921, 2
  %923 = icmp eq i32 %922, 0
  %924 = icmp slt i32 %919, 10
  %925 = or i1 %923, %924
  br i1 %925, label %originalBB210, label %originalBB210alteredBB

originalBB210:                                    ; preds = %917, %originalBB210alteredBB
  %926 = load i8*, i8** %21, align 8, !dbg !1825
  %927 = load i64, i64* %28, align 8, !dbg !1826
  %928 = getelementptr inbounds i8, i8* %926, i64 %927, !dbg !1825
  %929 = load i8, i8* %928, align 1, !dbg !1825
  store i8 %929, i8* %39, align 1, !dbg !1827
  %930 = load i8, i8* %39, align 1, !dbg !1828
  %931 = zext i8 %930 to i32, !dbg !1828
  %932 = load i32, i32* @x.35
  %933 = load i32, i32* @y.36
  %934 = sub i32 %932, 1
  %935 = mul i32 %932, %934
  %936 = urem i32 %935, 2
  %937 = icmp eq i32 %936, 0
  %938 = icmp slt i32 %933, 10
  %939 = or i1 %937, %938
  br i1 %939, label %originalBBpart2212, label %originalBB210alteredBB

originalBBpart2212:                               ; preds = %originalBB210
  switch i32 %931, label %2766 [
    i32 0, label %940
    i32 63, label %1593
    i32 7, label %2035
    i32 8, label %2052
    i32 12, label %2069
    i32 10, label %2070
    i32 13, label %2087
    i32 9, label %2088
    i32 11, label %2105
    i32 92, label %2122
    i32 123, label %2284
    i32 125, label %2284
    i32 35, label %2346
    i32 126, label %2346
    i32 32, label %2383
    i32 33, label %2400
    i32 34, label %2400
    i32 36, label %2400
    i32 38, label %2400
    i32 40, label %2400
    i32 41, label %2400
    i32 42, label %2400
    i32 59, label %2400
    i32 60, label %2400
    i32 61, label %2400
    i32 62, label %2400
    i32 91, label %2400
    i32 94, label %2400
    i32 96, label %2400
    i32 124, label %2400
    i32 39, label %2472
    i32 37, label %2749
    i32 43, label %2749
    i32 44, label %2749
    i32 45, label %2749
    i32 46, label %2749
    i32 47, label %2749
    i32 48, label %2749
    i32 49, label %2749
    i32 50, label %2749
    i32 51, label %2749
    i32 52, label %2749
    i32 53, label %2749
    i32 54, label %2749
    i32 55, label %2749
    i32 56, label %2749
    i32 57, label %2749
    i32 58, label %2749
    i32 65, label %2749
    i32 66, label %2749
    i32 67, label %2749
    i32 68, label %2749
    i32 69, label %2749
    i32 70, label %2749
    i32 71, label %2749
    i32 72, label %2749
    i32 73, label %2749
    i32 74, label %2749
    i32 75, label %2749
    i32 76, label %2749
    i32 77, label %2749
    i32 78, label %2749
    i32 79, label %2749
    i32 80, label %2749
    i32 81, label %2749
    i32 82, label %2749
    i32 83, label %2749
    i32 84, label %2749
    i32 85, label %2749
    i32 86, label %2749
    i32 87, label %2749
    i32 88, label %2749
    i32 89, label %2749
    i32 90, label %2749
    i32 93, label %2749
    i32 95, label %2749
    i32 97, label %2749
    i32 98, label %2749
    i32 99, label %2749
    i32 100, label %2749
    i32 101, label %2749
    i32 102, label %2749
    i32 103, label %2749
    i32 104, label %2749
    i32 105, label %2749
    i32 106, label %2749
    i32 107, label %2749
    i32 108, label %2749
    i32 109, label %2749
    i32 110, label %2749
    i32 111, label %2749
    i32 112, label %2749
    i32 113, label %2749
    i32 114, label %2749
    i32 115, label %2749
    i32 116, label %2749
    i32 117, label %2749
    i32 118, label %2749
    i32 119, label %2749
    i32 120, label %2749
    i32 121, label %2749
    i32 122, label %2749
  ], !dbg !1829

940:                                              ; preds = %originalBBpart2212
  %941 = load i32, i32* @x.35
  %942 = load i32, i32* @y.36
  %943 = sub i32 %941, 1
  %944 = mul i32 %941, %943
  %945 = urem i32 %944, 2
  %946 = icmp eq i32 %945, 0
  %947 = icmp slt i32 %942, 10
  %948 = or i1 %946, %947
  br i1 %948, label %originalBB214, label %originalBB214alteredBB

originalBB214:                                    ; preds = %940, %originalBB214alteredBB
  %949 = load i8, i8* %33, align 1, !dbg !1830
  %950 = trunc i8 %949 to i1, !dbg !1830
  %951 = load i32, i32* @x.35
  %952 = load i32, i32* @y.36
  %953 = sub i32 %951, 1
  %954 = mul i32 %951, %953
  %955 = urem i32 %954, 2
  %956 = icmp eq i32 %955, 0
  %957 = icmp slt i32 %952, 10
  %958 = or i1 %956, %957
  br i1 %958, label %originalBBpart2216, label %originalBB214alteredBB

originalBBpart2216:                               ; preds = %originalBB214
  br i1 %950, label %959, label %1522, !dbg !1833

959:                                              ; preds = %originalBBpart2216
  %960 = load i32, i32* @x.35
  %961 = load i32, i32* @y.36
  %962 = sub i32 %960, 1
  %963 = mul i32 %960, %962
  %964 = urem i32 %963, 2
  %965 = icmp eq i32 %964, 0
  %966 = icmp slt i32 %961, 10
  %967 = or i1 %965, %966
  br i1 %967, label %originalBB218, label %originalBB218alteredBB

originalBB218:                                    ; preds = %959, %originalBB218alteredBB
  %968 = load i32, i32* @x.35
  %969 = load i32, i32* @y.36
  %970 = sub i32 %968, 1
  %971 = mul i32 %968, %970
  %972 = urem i32 %971, 2
  %973 = icmp eq i32 %972, 0
  %974 = icmp slt i32 %969, 10
  %975 = or i1 %973, %974
  br i1 %975, label %originalBBpart2220, label %originalBB218alteredBB

originalBBpart2220:                               ; preds = %originalBB218
  br label %976, !dbg !1834

976:                                              ; preds = %originalBBpart2220
  %977 = load i32, i32* @x.35
  %978 = load i32, i32* @y.36
  %979 = sub i32 %977, 1
  %980 = mul i32 %977, %979
  %981 = urem i32 %980, 2
  %982 = icmp eq i32 %981, 0
  %983 = icmp slt i32 %978, 10
  %984 = or i1 %982, %983
  br i1 %984, label %originalBB222, label %originalBB222alteredBB

originalBB222:                                    ; preds = %976, %originalBB222alteredBB
  %985 = load i8, i8* %35, align 1, !dbg !1836
  %986 = trunc i8 %985 to i1, !dbg !1836
  %987 = load i32, i32* @x.35
  %988 = load i32, i32* @y.36
  %989 = sub i32 %987, 1
  %990 = mul i32 %987, %989
  %991 = urem i32 %990, 2
  %992 = icmp eq i32 %991, 0
  %993 = icmp slt i32 %988, 10
  %994 = or i1 %992, %993
  br i1 %994, label %originalBBpart2224, label %originalBB222alteredBB

originalBBpart2224:                               ; preds = %originalBB222
  br i1 %986, label %995, label %996, !dbg !1839

995:                                              ; preds = %originalBBpart2224
  br label %5413, !dbg !1836

996:                                              ; preds = %originalBBpart2224
  store i8 1, i8* %42, align 1, !dbg !1839
  %997 = load i32, i32* %23, align 4, !dbg !1840
  %998 = icmp eq i32 %997, 2, !dbg !1840
  br i1 %998, label %999, label %1251, !dbg !1840

999:                                              ; preds = %996
  %1000 = load i32, i32* @x.35
  %1001 = load i32, i32* @y.36
  %1002 = sub i32 %1000, 1
  %1003 = mul i32 %1000, %1002
  %1004 = urem i32 %1003, 2
  %1005 = icmp eq i32 %1004, 0
  %1006 = icmp slt i32 %1001, 10
  %1007 = or i1 %1005, %1006
  br i1 %1007, label %originalBB226, label %originalBB226alteredBB

originalBB226:                                    ; preds = %999, %originalBB226alteredBB
  %1008 = load i8, i8* %36, align 1, !dbg !1840
  %1009 = trunc i8 %1008 to i1, !dbg !1840
  %1010 = load i32, i32* @x.35
  %1011 = load i32, i32* @y.36
  %1012 = sub i32 %1010, 1
  %1013 = mul i32 %1010, %1012
  %1014 = urem i32 %1013, 2
  %1015 = icmp eq i32 %1014, 0
  %1016 = icmp slt i32 %1011, 10
  %1017 = or i1 %1015, %1016
  br i1 %1017, label %originalBBpart2228, label %originalBB226alteredBB

originalBBpart2228:                               ; preds = %originalBB226
  br i1 %1009, label %1251, label %1018, !dbg !1839

1018:                                             ; preds = %originalBBpart2228
  br label %1019, !dbg !1842

1019:                                             ; preds = %1018
  %1020 = load i32, i32* @x.35
  %1021 = load i32, i32* @y.36
  %1022 = sub i32 %1020, 1
  %1023 = mul i32 %1020, %1022
  %1024 = urem i32 %1023, 2
  %1025 = icmp eq i32 %1024, 0
  %1026 = icmp slt i32 %1021, 10
  %1027 = or i1 %1025, %1026
  br i1 %1027, label %originalBB230, label %originalBB230alteredBB

originalBB230:                                    ; preds = %1019, %originalBB230alteredBB
  %1028 = load i64, i64* %29, align 8, !dbg !1844
  %1029 = load i64, i64* %20, align 8, !dbg !1844
  %1030 = icmp ult i64 %1028, %1029, !dbg !1844
  %1031 = load i32, i32* @x.35
  %1032 = load i32, i32* @y.36
  %1033 = sub i32 %1031, 1
  %1034 = mul i32 %1031, %1033
  %1035 = urem i32 %1034, 2
  %1036 = icmp eq i32 %1035, 0
  %1037 = icmp slt i32 %1032, 10
  %1038 = or i1 %1036, %1037
  br i1 %1038, label %originalBBpart2232, label %originalBB230alteredBB

originalBBpart2232:                               ; preds = %originalBB230
  br i1 %1030, label %1039, label %1059, !dbg !1847

1039:                                             ; preds = %originalBBpart2232
  %1040 = load i32, i32* @x.35
  %1041 = load i32, i32* @y.36
  %1042 = sub i32 %1040, 1
  %1043 = mul i32 %1040, %1042
  %1044 = urem i32 %1043, 2
  %1045 = icmp eq i32 %1044, 0
  %1046 = icmp slt i32 %1041, 10
  %1047 = or i1 %1045, %1046
  br i1 %1047, label %originalBB234, label %originalBB234alteredBB

originalBB234:                                    ; preds = %1039, %originalBB234alteredBB
  %1048 = load i8*, i8** %19, align 8, !dbg !1844
  %1049 = load i64, i64* %29, align 8, !dbg !1844
  %1050 = getelementptr inbounds i8, i8* %1048, i64 %1049, !dbg !1844
  store i8 39, i8* %1050, align 1, !dbg !1844
  %1051 = load i32, i32* @x.35
  %1052 = load i32, i32* @y.36
  %1053 = sub i32 %1051, 1
  %1054 = mul i32 %1051, %1053
  %1055 = urem i32 %1054, 2
  %1056 = icmp eq i32 %1055, 0
  %1057 = icmp slt i32 %1052, 10
  %1058 = or i1 %1056, %1057
  br i1 %1058, label %originalBBpart2237, label %originalBB234alteredBB

originalBBpart2237:                               ; preds = %originalBB234
  br label %1059, !dbg !1844

1059:                                             ; preds = %originalBBpart2237, %originalBBpart2232
  %1060 = load i32, i32* @x.35
  %1061 = load i32, i32* @y.36
  %1062 = sub i32 %1060, 1
  %1063 = mul i32 %1060, %1062
  %1064 = urem i32 %1063, 2
  %1065 = icmp eq i32 %1064, 0
  %1066 = icmp slt i32 %1061, 10
  %1067 = or i1 %1065, %1066
  br i1 %1067, label %originalBB239, label %originalBB239alteredBB

originalBB239:                                    ; preds = %1059, %originalBB239alteredBB
  %1068 = load i64, i64* %29, align 8, !dbg !1847
  %1069 = add i64 %1068, 1, !dbg !1847
  %1070 = trunc i64 1 to i32
  %1071 = mul i32 %1070, -5
  %1072 = add i32 %1071, 3
  %1073 = trunc i64 %1068 to i32
  %1074 = add i32 %1073, 2
  %1075 = trunc i64 %1069 to i32
  %1076 = mul i32 %1075, -2
  %1077 = add i32 %1076, 2
  %1078 = mul i32 %1072, %1072
  %1079 = mul i32 %1078, %1078
  %1080 = mul i32 %1074, %1074
  %1081 = mul i32 %1080, %1080
  %1082 = mul i32 %1077, %1077
  %1083 = mul i32 %1082, %1082
  %1084 = add i32 %1079, %1081
  %1085 = sub i32 %1084, %1083
  %1086 = add i32 %1085, 5
  %1087 = icmp ne i32 %1086, 5
  %1088 = load i32, i32* @x.35
  %1089 = load i32, i32* @y.36
  %1090 = sub i32 %1088, 1
  %1091 = mul i32 %1088, %1090
  %1092 = urem i32 %1091, 2
  %1093 = icmp eq i32 %1092, 0
  %1094 = icmp slt i32 %1089, 10
  %1095 = or i1 %1093, %1094
  br i1 %1095, label %originalBBpart2337, label %originalBB239alteredBB

originalBBpart2337:                               ; preds = %originalBB239
  br i1 %1087, label %1096, label %1113

1096:                                             ; preds = %originalBBpart2337
  %1097 = load i32, i32* @x.35
  %1098 = load i32, i32* @y.36
  %1099 = sub i32 %1097, 1
  %1100 = mul i32 %1097, %1099
  %1101 = urem i32 %1100, 2
  %1102 = icmp eq i32 %1101, 0
  %1103 = icmp slt i32 %1098, 10
  %1104 = or i1 %1102, %1103
  br i1 %1104, label %originalBB339, label %originalBB339alteredBB

originalBB339:                                    ; preds = %1096, %originalBB339alteredBB
  %1105 = load i32, i32* @x.35
  %1106 = load i32, i32* @y.36
  %1107 = sub i32 %1105, 1
  %1108 = mul i32 %1105, %1107
  %1109 = urem i32 %1108, 2
  %1110 = icmp eq i32 %1109, 0
  %1111 = icmp slt i32 %1106, 10
  %1112 = or i1 %1110, %1111
  br i1 %1112, label %originalBBpart2341, label %originalBB339alteredBB

originalBBpart2341:                               ; preds = %originalBB339
  ret i64 0

1113:                                             ; preds = %originalBBpart2337
  %1114 = load i32, i32* @x.35
  %1115 = load i32, i32* @y.36
  %1116 = sub i32 %1114, 1
  %1117 = mul i32 %1114, %1116
  %1118 = urem i32 %1117, 2
  %1119 = icmp eq i32 %1118, 0
  %1120 = icmp slt i32 %1115, 10
  %1121 = or i1 %1119, %1120
  br i1 %1121, label %originalBB343, label %originalBB343alteredBB

originalBB343:                                    ; preds = %1113, %originalBB343alteredBB
  store i64 %1069, i64* %29, align 8, !dbg !1847
  %1122 = load i32, i32* @x.35
  %1123 = load i32, i32* @y.36
  %1124 = sub i32 %1122, 1
  %1125 = mul i32 %1122, %1124
  %1126 = urem i32 %1125, 2
  %1127 = icmp eq i32 %1126, 0
  %1128 = icmp slt i32 %1123, 10
  %1129 = or i1 %1127, %1128
  br i1 %1129, label %originalBBpart2345, label %originalBB343alteredBB

originalBBpart2345:                               ; preds = %originalBB343
  br label %1130, !dbg !1847

1130:                                             ; preds = %originalBBpart2345
  %1131 = load i32, i32* @x.35
  %1132 = load i32, i32* @y.36
  %1133 = sub i32 %1131, 1
  %1134 = mul i32 %1131, %1133
  %1135 = urem i32 %1134, 2
  %1136 = icmp eq i32 %1135, 0
  %1137 = icmp slt i32 %1132, 10
  %1138 = or i1 %1136, %1137
  br i1 %1138, label %originalBB347, label %originalBB347alteredBB

originalBB347:                                    ; preds = %1130, %originalBB347alteredBB
  %1139 = load i32, i32* @x.35
  %1140 = load i32, i32* @y.36
  %1141 = sub i32 %1139, 1
  %1142 = mul i32 %1139, %1141
  %1143 = urem i32 %1142, 2
  %1144 = icmp eq i32 %1143, 0
  %1145 = icmp slt i32 %1140, 10
  %1146 = or i1 %1144, %1145
  br i1 %1146, label %originalBBpart2349, label %originalBB347alteredBB

originalBBpart2349:                               ; preds = %originalBB347
  br label %1147, !dbg !1842

1147:                                             ; preds = %originalBBpart2349
  %1148 = load i32, i32* @x.35
  %1149 = load i32, i32* @y.36
  %1150 = sub i32 %1148, 1
  %1151 = mul i32 %1148, %1150
  %1152 = urem i32 %1151, 2
  %1153 = icmp eq i32 %1152, 0
  %1154 = icmp slt i32 %1149, 10
  %1155 = or i1 %1153, %1154
  br i1 %1155, label %originalBB351, label %originalBB351alteredBB

originalBB351:                                    ; preds = %1147, %originalBB351alteredBB
  %1156 = load i64, i64* %29, align 8, !dbg !1848
  %1157 = load i64, i64* %20, align 8, !dbg !1848
  %1158 = icmp ult i64 %1156, %1157, !dbg !1848
  %1159 = load i32, i32* @x.35
  %1160 = load i32, i32* @y.36
  %1161 = sub i32 %1159, 1
  %1162 = mul i32 %1159, %1161
  %1163 = urem i32 %1162, 2
  %1164 = icmp eq i32 %1163, 0
  %1165 = icmp slt i32 %1160, 10
  %1166 = or i1 %1164, %1165
  br i1 %1166, label %originalBBpart2353, label %originalBB351alteredBB

originalBBpart2353:                               ; preds = %originalBB351
  br i1 %1158, label %1167, label %1171, !dbg !1851

1167:                                             ; preds = %originalBBpart2353
  %1168 = load i8*, i8** %19, align 8, !dbg !1848
  %1169 = load i64, i64* %29, align 8, !dbg !1848
  %1170 = getelementptr inbounds i8, i8* %1168, i64 %1169, !dbg !1848
  store i8 36, i8* %1170, align 1, !dbg !1848
  br label %1171, !dbg !1848

1171:                                             ; preds = %1167, %originalBBpart2353
  %1172 = load i32, i32* @x.35
  %1173 = load i32, i32* @y.36
  %1174 = sub i32 %1172, 1
  %1175 = mul i32 %1172, %1174
  %1176 = urem i32 %1175, 2
  %1177 = icmp eq i32 %1176, 0
  %1178 = icmp slt i32 %1173, 10
  %1179 = or i1 %1177, %1178
  br i1 %1179, label %originalBB355, label %originalBB355alteredBB

originalBB355:                                    ; preds = %1171, %originalBB355alteredBB
  %1180 = load i64, i64* %29, align 8, !dbg !1851
  %1181 = add i64 %1180, 1, !dbg !1851
  store i64 %1181, i64* %29, align 8, !dbg !1851
  %1182 = load i32, i32* @x.35
  %1183 = load i32, i32* @y.36
  %1184 = sub i32 %1182, 1
  %1185 = mul i32 %1182, %1184
  %1186 = urem i32 %1185, 2
  %1187 = icmp eq i32 %1186, 0
  %1188 = icmp slt i32 %1183, 10
  %1189 = or i1 %1187, %1188
  br i1 %1189, label %originalBBpart2370, label %originalBB355alteredBB

originalBBpart2370:                               ; preds = %originalBB355
  br label %1190, !dbg !1851

1190:                                             ; preds = %originalBBpart2370
  br label %1191, !dbg !1842

1191:                                             ; preds = %1190
  %1192 = load i64, i64* %29, align 8, !dbg !1852
  %1193 = load i64, i64* %20, align 8, !dbg !1852
  %1194 = icmp ult i64 %1192, %1193, !dbg !1852
  br i1 %1194, label %1195, label %1215, !dbg !1855

1195:                                             ; preds = %1191
  %1196 = load i32, i32* @x.35
  %1197 = load i32, i32* @y.36
  %1198 = sub i32 %1196, 1
  %1199 = mul i32 %1196, %1198
  %1200 = urem i32 %1199, 2
  %1201 = icmp eq i32 %1200, 0
  %1202 = icmp slt i32 %1197, 10
  %1203 = or i1 %1201, %1202
  br i1 %1203, label %originalBB372, label %originalBB372alteredBB

originalBB372:                                    ; preds = %1195, %originalBB372alteredBB
  %1204 = load i8*, i8** %19, align 8, !dbg !1852
  %1205 = load i64, i64* %29, align 8, !dbg !1852
  %1206 = getelementptr inbounds i8, i8* %1204, i64 %1205, !dbg !1852
  store i8 39, i8* %1206, align 1, !dbg !1852
  %1207 = load i32, i32* @x.35
  %1208 = load i32, i32* @y.36
  %1209 = sub i32 %1207, 1
  %1210 = mul i32 %1207, %1209
  %1211 = urem i32 %1210, 2
  %1212 = icmp eq i32 %1211, 0
  %1213 = icmp slt i32 %1208, 10
  %1214 = or i1 %1212, %1213
  br i1 %1214, label %originalBBpart2374, label %originalBB372alteredBB

originalBBpart2374:                               ; preds = %originalBB372
  br label %1215, !dbg !1852

1215:                                             ; preds = %originalBBpart2374, %1191
  %1216 = load i32, i32* @x.35
  %1217 = load i32, i32* @y.36
  %1218 = sub i32 %1216, 1
  %1219 = mul i32 %1216, %1218
  %1220 = urem i32 %1219, 2
  %1221 = icmp eq i32 %1220, 0
  %1222 = icmp slt i32 %1217, 10
  %1223 = or i1 %1221, %1222
  br i1 %1223, label %originalBB376, label %originalBB376alteredBB

originalBB376:                                    ; preds = %1215, %originalBB376alteredBB
  %1224 = load i64, i64* %29, align 8, !dbg !1855
  %1225 = add i64 %1224, 1, !dbg !1855
  store i64 %1225, i64* %29, align 8, !dbg !1855
  %1226 = load i32, i32* @x.35
  %1227 = load i32, i32* @y.36
  %1228 = sub i32 %1226, 1
  %1229 = mul i32 %1226, %1228
  %1230 = urem i32 %1229, 2
  %1231 = icmp eq i32 %1230, 0
  %1232 = icmp slt i32 %1227, 10
  %1233 = or i1 %1231, %1232
  br i1 %1233, label %originalBBpart2387, label %originalBB376alteredBB

originalBBpart2387:                               ; preds = %originalBB376
  br label %1234, !dbg !1855

1234:                                             ; preds = %originalBBpart2387
  %1235 = load i32, i32* @x.35
  %1236 = load i32, i32* @y.36
  %1237 = sub i32 %1235, 1
  %1238 = mul i32 %1235, %1237
  %1239 = urem i32 %1238, 2
  %1240 = icmp eq i32 %1239, 0
  %1241 = icmp slt i32 %1236, 10
  %1242 = or i1 %1240, %1241
  br i1 %1242, label %originalBB389, label %originalBB389alteredBB

originalBB389:                                    ; preds = %1234, %originalBB389alteredBB
  store i8 1, i8* %36, align 1, !dbg !1842
  %1243 = load i32, i32* @x.35
  %1244 = load i32, i32* @y.36
  %1245 = sub i32 %1243, 1
  %1246 = mul i32 %1243, %1245
  %1247 = urem i32 %1246, 2
  %1248 = icmp eq i32 %1247, 0
  %1249 = icmp slt i32 %1244, 10
  %1250 = or i1 %1248, %1249
  br i1 %1250, label %originalBBpart2391, label %originalBB389alteredBB

originalBBpart2391:                               ; preds = %originalBB389
  br label %1251, !dbg !1842

1251:                                             ; preds = %originalBBpart2391, %originalBBpart2228, %996
  %1252 = load i32, i32* @x.35
  %1253 = load i32, i32* @y.36
  %1254 = sub i32 %1252, 1
  %1255 = mul i32 %1252, %1254
  %1256 = urem i32 %1255, 2
  %1257 = icmp eq i32 %1256, 0
  %1258 = icmp slt i32 %1253, 10
  %1259 = or i1 %1257, %1258
  br i1 %1259, label %originalBB393, label %originalBB393alteredBB

originalBB393:                                    ; preds = %1251, %originalBB393alteredBB
  %1260 = load i32, i32* @x.35
  %1261 = load i32, i32* @y.36
  %1262 = sub i32 %1260, 1
  %1263 = mul i32 %1260, %1262
  %1264 = urem i32 %1263, 2
  %1265 = icmp eq i32 %1264, 0
  %1266 = icmp slt i32 %1261, 10
  %1267 = or i1 %1265, %1266
  br i1 %1267, label %originalBBpart2395, label %originalBB393alteredBB

originalBBpart2395:                               ; preds = %originalBB393
  br label %1268, !dbg !1839

1268:                                             ; preds = %originalBBpart2395
  %1269 = load i32, i32* @x.35
  %1270 = load i32, i32* @y.36
  %1271 = sub i32 %1269, 1
  %1272 = mul i32 %1269, %1271
  %1273 = urem i32 %1272, 2
  %1274 = icmp eq i32 %1273, 0
  %1275 = icmp slt i32 %1270, 10
  %1276 = or i1 %1274, %1275
  br i1 %1276, label %originalBB397, label %originalBB397alteredBB

originalBB397:                                    ; preds = %1268, %originalBB397alteredBB
  %1277 = load i64, i64* %29, align 8, !dbg !1856
  %1278 = load i64, i64* %20, align 8, !dbg !1856
  %1279 = icmp ult i64 %1277, %1278, !dbg !1856
  %1280 = load i32, i32* @x.35
  %1281 = load i32, i32* @y.36
  %1282 = sub i32 %1280, 1
  %1283 = mul i32 %1280, %1282
  %1284 = urem i32 %1283, 2
  %1285 = icmp eq i32 %1284, 0
  %1286 = icmp slt i32 %1281, 10
  %1287 = or i1 %1285, %1286
  br i1 %1287, label %originalBBpart2399, label %originalBB397alteredBB

originalBBpart2399:                               ; preds = %originalBB397
  br i1 %1279, label %1288, label %1308, !dbg !1859

1288:                                             ; preds = %originalBBpart2399
  %1289 = load i32, i32* @x.35
  %1290 = load i32, i32* @y.36
  %1291 = sub i32 %1289, 1
  %1292 = mul i32 %1289, %1291
  %1293 = urem i32 %1292, 2
  %1294 = icmp eq i32 %1293, 0
  %1295 = icmp slt i32 %1290, 10
  %1296 = or i1 %1294, %1295
  br i1 %1296, label %originalBB401, label %originalBB401alteredBB

originalBB401:                                    ; preds = %1288, %originalBB401alteredBB
  %1297 = load i8*, i8** %19, align 8, !dbg !1856
  %1298 = load i64, i64* %29, align 8, !dbg !1856
  %1299 = getelementptr inbounds i8, i8* %1297, i64 %1298, !dbg !1856
  store i8 92, i8* %1299, align 1, !dbg !1856
  %1300 = load i32, i32* @x.35
  %1301 = load i32, i32* @y.36
  %1302 = sub i32 %1300, 1
  %1303 = mul i32 %1300, %1302
  %1304 = urem i32 %1303, 2
  %1305 = icmp eq i32 %1304, 0
  %1306 = icmp slt i32 %1301, 10
  %1307 = or i1 %1305, %1306
  br i1 %1307, label %originalBBpart2403, label %originalBB401alteredBB

originalBBpart2403:                               ; preds = %originalBB401
  br label %1308, !dbg !1856

1308:                                             ; preds = %originalBBpart2403, %originalBBpart2399
  %1309 = load i64, i64* %29, align 8, !dbg !1859
  %1310 = add i64 %1309, 1, !dbg !1859
  store i64 %1310, i64* %29, align 8, !dbg !1859
  br label %1311, !dbg !1859

1311:                                             ; preds = %1308
  br label %1312, !dbg !1839

1312:                                             ; preds = %1311
  %1313 = load i32, i32* %23, align 4, !dbg !1860
  %1314 = icmp ne i32 %1313, 2, !dbg !1862
  br i1 %1314, label %1315, label %1521, !dbg !1863

1315:                                             ; preds = %1312
  %1316 = load i32, i32* @x.35
  %1317 = load i32, i32* @y.36
  %1318 = sub i32 %1316, 1
  %1319 = mul i32 %1316, %1318
  %1320 = urem i32 %1319, 2
  %1321 = icmp eq i32 %1320, 0
  %1322 = icmp slt i32 %1317, 10
  %1323 = or i1 %1321, %1322
  br i1 %1323, label %originalBB405, label %originalBB405alteredBB

originalBB405:                                    ; preds = %1315, %originalBB405alteredBB
  %1324 = load i64, i64* %28, align 8, !dbg !1864
  %1325 = add i64 %1324, 1, !dbg !1865
  %1326 = load i64, i64* %22, align 8, !dbg !1866
  %1327 = icmp ult i64 %1325, %1326, !dbg !1867
  %1328 = load i32, i32* @x.35
  %1329 = load i32, i32* @y.36
  %1330 = sub i32 %1328, 1
  %1331 = mul i32 %1328, %1330
  %1332 = urem i32 %1331, 2
  %1333 = icmp eq i32 %1332, 0
  %1334 = icmp slt i32 %1329, 10
  %1335 = or i1 %1333, %1334
  br i1 %1335, label %originalBBpart2411, label %originalBB405alteredBB

originalBBpart2411:                               ; preds = %originalBB405
  br i1 %1327, label %1336, label %1521, !dbg !1868

1336:                                             ; preds = %originalBBpart2411
  %1337 = load i32, i32* @x.35
  %1338 = load i32, i32* @y.36
  %1339 = sub i32 %1337, 1
  %1340 = mul i32 %1337, %1339
  %1341 = urem i32 %1340, 2
  %1342 = icmp eq i32 %1341, 0
  %1343 = icmp slt i32 %1338, 10
  %1344 = or i1 %1342, %1343
  br i1 %1344, label %originalBB413, label %originalBB413alteredBB

originalBB413:                                    ; preds = %1336, %originalBB413alteredBB
  %1345 = load i8*, i8** %21, align 8, !dbg !1869
  %1346 = load i64, i64* %28, align 8, !dbg !1870
  %1347 = add i64 %1346, 1, !dbg !1871
  %1348 = getelementptr inbounds i8, i8* %1345, i64 %1347, !dbg !1869
  %1349 = load i8, i8* %1348, align 1, !dbg !1869
  %1350 = sext i8 %1349 to i32, !dbg !1869
  %1351 = icmp sle i32 48, %1350, !dbg !1872
  %1352 = load i32, i32* @x.35
  %1353 = load i32, i32* @y.36
  %1354 = sub i32 %1352, 1
  %1355 = mul i32 %1352, %1354
  %1356 = urem i32 %1355, 2
  %1357 = icmp eq i32 %1356, 0
  %1358 = icmp slt i32 %1353, 10
  %1359 = or i1 %1357, %1358
  br i1 %1359, label %originalBBpart2416, label %originalBB413alteredBB

originalBBpart2416:                               ; preds = %originalBB413
  br i1 %1351, label %1360, label %1521, !dbg !1873

1360:                                             ; preds = %originalBBpart2416
  %1361 = load i32, i32* @x.35
  %1362 = load i32, i32* @y.36
  %1363 = sub i32 %1361, 1
  %1364 = mul i32 %1361, %1363
  %1365 = urem i32 %1364, 2
  %1366 = icmp eq i32 %1365, 0
  %1367 = icmp slt i32 %1362, 10
  %1368 = or i1 %1366, %1367
  br i1 %1368, label %originalBB418, label %originalBB418alteredBB

originalBB418:                                    ; preds = %1360, %originalBB418alteredBB
  %1369 = load i8*, i8** %21, align 8, !dbg !1874
  %1370 = load i64, i64* %28, align 8, !dbg !1875
  %1371 = add i64 %1370, 1, !dbg !1876
  %1372 = getelementptr inbounds i8, i8* %1369, i64 %1371, !dbg !1874
  %1373 = load i8, i8* %1372, align 1, !dbg !1874
  %1374 = sext i8 %1373 to i32, !dbg !1874
  %1375 = icmp sle i32 %1374, 57, !dbg !1877
  %1376 = load i32, i32* @x.35
  %1377 = load i32, i32* @y.36
  %1378 = sub i32 %1376, 1
  %1379 = mul i32 %1376, %1378
  %1380 = urem i32 %1379, 2
  %1381 = icmp eq i32 %1380, 0
  %1382 = icmp slt i32 %1377, 10
  %1383 = or i1 %1381, %1382
  br i1 %1383, label %originalBBpart2429, label %originalBB418alteredBB

originalBBpart2429:                               ; preds = %originalBB418
  br i1 %1375, label %1384, label %1521, !dbg !1878

1384:                                             ; preds = %originalBBpart2429
  %1385 = load i32, i32* @x.35
  %1386 = load i32, i32* @y.36
  %1387 = sub i32 %1385, 1
  %1388 = mul i32 %1385, %1387
  %1389 = urem i32 %1388, 2
  %1390 = icmp eq i32 %1389, 0
  %1391 = icmp slt i32 %1386, 10
  %1392 = or i1 %1390, %1391
  br i1 %1392, label %originalBB431, label %originalBB431alteredBB

originalBB431:                                    ; preds = %1384, %originalBB431alteredBB
  %1393 = load i32, i32* @x.35
  %1394 = load i32, i32* @y.36
  %1395 = sub i32 %1393, 1
  %1396 = mul i32 %1393, %1395
  %1397 = urem i32 %1396, 2
  %1398 = icmp eq i32 %1397, 0
  %1399 = icmp slt i32 %1394, 10
  %1400 = or i1 %1398, %1399
  br i1 %1400, label %originalBBpart2433, label %originalBB431alteredBB

originalBBpart2433:                               ; preds = %originalBB431
  br label %1401, !dbg !1879

1401:                                             ; preds = %originalBBpart2433
  %1402 = load i32, i32* @x.35
  %1403 = load i32, i32* @y.36
  %1404 = sub i32 %1402, 1
  %1405 = mul i32 %1402, %1404
  %1406 = urem i32 %1405, 2
  %1407 = icmp eq i32 %1406, 0
  %1408 = icmp slt i32 %1403, 10
  %1409 = or i1 %1407, %1408
  br i1 %1409, label %originalBB435, label %originalBB435alteredBB

originalBB435:                                    ; preds = %1401, %originalBB435alteredBB
  %1410 = load i64, i64* %29, align 8, !dbg !1881
  %1411 = load i64, i64* %20, align 8, !dbg !1881
  %1412 = icmp ult i64 %1410, %1411, !dbg !1881
  %1413 = load i32, i32* @x.35
  %1414 = load i32, i32* @y.36
  %1415 = sub i32 %1413, 1
  %1416 = mul i32 %1413, %1415
  %1417 = urem i32 %1416, 2
  %1418 = icmp eq i32 %1417, 0
  %1419 = icmp slt i32 %1414, 10
  %1420 = or i1 %1418, %1419
  br i1 %1420, label %originalBBpart2437, label %originalBB435alteredBB

originalBBpart2437:                               ; preds = %originalBB435
  br i1 %1412, label %1421, label %1441, !dbg !1884

1421:                                             ; preds = %originalBBpart2437
  %1422 = load i32, i32* @x.35
  %1423 = load i32, i32* @y.36
  %1424 = sub i32 %1422, 1
  %1425 = mul i32 %1422, %1424
  %1426 = urem i32 %1425, 2
  %1427 = icmp eq i32 %1426, 0
  %1428 = icmp slt i32 %1423, 10
  %1429 = or i1 %1427, %1428
  br i1 %1429, label %originalBB439, label %originalBB439alteredBB

originalBB439:                                    ; preds = %1421, %originalBB439alteredBB
  %1430 = load i8*, i8** %19, align 8, !dbg !1881
  %1431 = load i64, i64* %29, align 8, !dbg !1881
  %1432 = getelementptr inbounds i8, i8* %1430, i64 %1431, !dbg !1881
  store i8 48, i8* %1432, align 1, !dbg !1881
  %1433 = load i32, i32* @x.35
  %1434 = load i32, i32* @y.36
  %1435 = sub i32 %1433, 1
  %1436 = mul i32 %1433, %1435
  %1437 = urem i32 %1436, 2
  %1438 = icmp eq i32 %1437, 0
  %1439 = icmp slt i32 %1434, 10
  %1440 = or i1 %1438, %1439
  br i1 %1440, label %originalBBpart2441, label %originalBB439alteredBB

originalBBpart2441:                               ; preds = %originalBB439
  br label %1441, !dbg !1881

1441:                                             ; preds = %originalBBpart2441, %originalBBpart2437
  %1442 = load i32, i32* @x.35
  %1443 = load i32, i32* @y.36
  %1444 = sub i32 %1442, 1
  %1445 = mul i32 %1442, %1444
  %1446 = urem i32 %1445, 2
  %1447 = icmp eq i32 %1446, 0
  %1448 = icmp slt i32 %1443, 10
  %1449 = or i1 %1447, %1448
  br i1 %1449, label %originalBB443, label %originalBB443alteredBB

originalBB443:                                    ; preds = %1441, %originalBB443alteredBB
  %1450 = load i64, i64* %29, align 8, !dbg !1884
  %1451 = add i64 %1450, 1, !dbg !1884
  store i64 %1451, i64* %29, align 8, !dbg !1884
  %1452 = load i32, i32* @x.35
  %1453 = load i32, i32* @y.36
  %1454 = sub i32 %1452, 1
  %1455 = mul i32 %1452, %1454
  %1456 = urem i32 %1455, 2
  %1457 = icmp eq i32 %1456, 0
  %1458 = icmp slt i32 %1453, 10
  %1459 = or i1 %1457, %1458
  br i1 %1459, label %originalBBpart2448, label %originalBB443alteredBB

originalBBpart2448:                               ; preds = %originalBB443
  br label %1460, !dbg !1884

1460:                                             ; preds = %originalBBpart2448
  %1461 = load i32, i32* @x.35
  %1462 = load i32, i32* @y.36
  %1463 = sub i32 %1461, 1
  %1464 = mul i32 %1461, %1463
  %1465 = urem i32 %1464, 2
  %1466 = icmp eq i32 %1465, 0
  %1467 = icmp slt i32 %1462, 10
  %1468 = or i1 %1466, %1467
  br i1 %1468, label %originalBB450, label %originalBB450alteredBB

originalBB450:                                    ; preds = %1460, %originalBB450alteredBB
  %1469 = load i32, i32* @x.35
  %1470 = load i32, i32* @y.36
  %1471 = sub i32 %1469, 1
  %1472 = mul i32 %1469, %1471
  %1473 = urem i32 %1472, 2
  %1474 = icmp eq i32 %1473, 0
  %1475 = icmp slt i32 %1470, 10
  %1476 = or i1 %1474, %1475
  br i1 %1476, label %originalBBpart2452, label %originalBB450alteredBB

originalBBpart2452:                               ; preds = %originalBB450
  br label %1477, !dbg !1885

1477:                                             ; preds = %originalBBpart2452
  %1478 = load i64, i64* %29, align 8, !dbg !1886
  %1479 = load i64, i64* %20, align 8, !dbg !1886
  %1480 = icmp ult i64 %1478, %1479, !dbg !1886
  br i1 %1480, label %1481, label %1485, !dbg !1889

1481:                                             ; preds = %1477
  %1482 = load i8*, i8** %19, align 8, !dbg !1886
  %1483 = load i64, i64* %29, align 8, !dbg !1886
  %1484 = getelementptr inbounds i8, i8* %1482, i64 %1483, !dbg !1886
  store i8 48, i8* %1484, align 1, !dbg !1886
  br label %1485, !dbg !1886

1485:                                             ; preds = %1481, %1477
  %1486 = load i32, i32* @x.35
  %1487 = load i32, i32* @y.36
  %1488 = sub i32 %1486, 1
  %1489 = mul i32 %1486, %1488
  %1490 = urem i32 %1489, 2
  %1491 = icmp eq i32 %1490, 0
  %1492 = icmp slt i32 %1487, 10
  %1493 = or i1 %1491, %1492
  br i1 %1493, label %originalBB454, label %originalBB454alteredBB

originalBB454:                                    ; preds = %1485, %originalBB454alteredBB
  %1494 = load i64, i64* %29, align 8, !dbg !1889
  %1495 = add i64 %1494, 1, !dbg !1889
  store i64 %1495, i64* %29, align 8, !dbg !1889
  %1496 = load i32, i32* @x.35
  %1497 = load i32, i32* @y.36
  %1498 = sub i32 %1496, 1
  %1499 = mul i32 %1496, %1498
  %1500 = urem i32 %1499, 2
  %1501 = icmp eq i32 %1500, 0
  %1502 = icmp slt i32 %1497, 10
  %1503 = or i1 %1501, %1502
  br i1 %1503, label %originalBBpart2460, label %originalBB454alteredBB

originalBBpart2460:                               ; preds = %originalBB454
  br label %1504, !dbg !1889

1504:                                             ; preds = %originalBBpart2460
  %1505 = load i32, i32* @x.35
  %1506 = load i32, i32* @y.36
  %1507 = sub i32 %1505, 1
  %1508 = mul i32 %1505, %1507
  %1509 = urem i32 %1508, 2
  %1510 = icmp eq i32 %1509, 0
  %1511 = icmp slt i32 %1506, 10
  %1512 = or i1 %1510, %1511
  br i1 %1512, label %originalBB462, label %originalBB462alteredBB

originalBB462:                                    ; preds = %1504, %originalBB462alteredBB
  %1513 = load i32, i32* @x.35
  %1514 = load i32, i32* @y.36
  %1515 = sub i32 %1513, 1
  %1516 = mul i32 %1513, %1515
  %1517 = urem i32 %1516, 2
  %1518 = icmp eq i32 %1517, 0
  %1519 = icmp slt i32 %1514, 10
  %1520 = or i1 %1518, %1519
  br i1 %1520, label %originalBBpart2464, label %originalBB462alteredBB

originalBBpart2464:                               ; preds = %originalBB462
  br label %1521, !dbg !1890

1521:                                             ; preds = %originalBBpart2464, %originalBBpart2429, %originalBBpart2416, %originalBBpart2411, %1312
  store i8 48, i8* %39, align 1, !dbg !1891
  br label %1576, !dbg !1892

1522:                                             ; preds = %originalBBpart2216
  %1523 = load i32, i32* @x.35
  %1524 = load i32, i32* @y.36
  %1525 = sub i32 %1523, 1
  %1526 = mul i32 %1523, %1525
  %1527 = urem i32 %1526, 2
  %1528 = icmp eq i32 %1527, 0
  %1529 = icmp slt i32 %1524, 10
  %1530 = or i1 %1528, %1529
  br i1 %1530, label %originalBB466, label %originalBB466alteredBB

originalBB466:                                    ; preds = %1522, %originalBB466alteredBB
  %1531 = load i32, i32* %24, align 4, !dbg !1893
  %1532 = and i32 %1531, 1, !dbg !1895
  %1533 = icmp ne i32 %1532, 0, !dbg !1895
  %1534 = load i32, i32* @x.35
  %1535 = load i32, i32* @y.36
  %1536 = sub i32 %1534, 1
  %1537 = mul i32 %1534, %1536
  %1538 = urem i32 %1537, 2
  %1539 = icmp eq i32 %1538, 0
  %1540 = icmp slt i32 %1535, 10
  %1541 = or i1 %1539, %1540
  br i1 %1541, label %originalBBpart2478, label %originalBB466alteredBB

originalBBpart2478:                               ; preds = %originalBB466
  br i1 %1533, label %1542, label %1559, !dbg !1896

1542:                                             ; preds = %originalBBpart2478
  %1543 = load i32, i32* @x.35
  %1544 = load i32, i32* @y.36
  %1545 = sub i32 %1543, 1
  %1546 = mul i32 %1543, %1545
  %1547 = urem i32 %1546, 2
  %1548 = icmp eq i32 %1547, 0
  %1549 = icmp slt i32 %1544, 10
  %1550 = or i1 %1548, %1549
  br i1 %1550, label %originalBB480, label %originalBB480alteredBB

originalBB480:                                    ; preds = %1542, %originalBB480alteredBB
  %1551 = load i32, i32* @x.35
  %1552 = load i32, i32* @y.36
  %1553 = sub i32 %1551, 1
  %1554 = mul i32 %1551, %1553
  %1555 = urem i32 %1554, 2
  %1556 = icmp eq i32 %1555, 0
  %1557 = icmp slt i32 %1552, 10
  %1558 = or i1 %1556, %1557
  br i1 %1558, label %originalBBpart2482, label %originalBB480alteredBB

originalBBpart2482:                               ; preds = %originalBB480
  br label %5104, !dbg !1897

1559:                                             ; preds = %originalBBpart2478
  %1560 = load i32, i32* @x.35
  %1561 = load i32, i32* @y.36
  %1562 = sub i32 %1560, 1
  %1563 = mul i32 %1560, %1562
  %1564 = urem i32 %1563, 2
  %1565 = icmp eq i32 %1564, 0
  %1566 = icmp slt i32 %1561, 10
  %1567 = or i1 %1565, %1566
  br i1 %1567, label %originalBB484, label %originalBB484alteredBB

originalBB484:                                    ; preds = %1559, %originalBB484alteredBB
  %1568 = load i32, i32* @x.35
  %1569 = load i32, i32* @y.36
  %1570 = sub i32 %1568, 1
  %1571 = mul i32 %1568, %1570
  %1572 = urem i32 %1571, 2
  %1573 = icmp eq i32 %1572, 0
  %1574 = icmp slt i32 %1569, 10
  %1575 = or i1 %1573, %1574
  br i1 %1575, label %originalBBpart2486, label %originalBB484alteredBB

originalBBpart2486:                               ; preds = %originalBB484
  br label %1576

1576:                                             ; preds = %originalBBpart2486, %1521
  %1577 = load i32, i32* @x.35
  %1578 = load i32, i32* @y.36
  %1579 = sub i32 %1577, 1
  %1580 = mul i32 %1577, %1579
  %1581 = urem i32 %1580, 2
  %1582 = icmp eq i32 %1581, 0
  %1583 = icmp slt i32 %1578, 10
  %1584 = or i1 %1582, %1583
  br i1 %1584, label %originalBB488, label %originalBB488alteredBB

originalBB488:                                    ; preds = %1576, %originalBB488alteredBB
  %1585 = load i32, i32* @x.35
  %1586 = load i32, i32* @y.36
  %1587 = sub i32 %1585, 1
  %1588 = mul i32 %1585, %1587
  %1589 = urem i32 %1588, 2
  %1590 = icmp eq i32 %1589, 0
  %1591 = icmp slt i32 %1586, 10
  %1592 = or i1 %1590, %1591
  br i1 %1592, label %originalBBpart2490, label %originalBB488alteredBB

originalBBpart2490:                               ; preds = %originalBB488
  br label %4319, !dbg !1898

1593:                                             ; preds = %originalBBpart2212
  %1594 = load i32, i32* @x.35
  %1595 = load i32, i32* @y.36
  %1596 = sub i32 %1594, 1
  %1597 = mul i32 %1594, %1596
  %1598 = urem i32 %1597, 2
  %1599 = icmp eq i32 %1598, 0
  %1600 = icmp slt i32 %1595, 10
  %1601 = or i1 %1599, %1600
  br i1 %1601, label %originalBB492, label %originalBB492alteredBB

originalBB492:                                    ; preds = %1593, %originalBB492alteredBB
  %1602 = load i32, i32* %23, align 4, !dbg !1899
  %1603 = load i32, i32* @x.35
  %1604 = load i32, i32* @y.36
  %1605 = sub i32 %1603, 1
  %1606 = mul i32 %1603, %1605
  %1607 = urem i32 %1606, 2
  %1608 = icmp eq i32 %1607, 0
  %1609 = icmp slt i32 %1604, 10
  %1610 = or i1 %1608, %1609
  br i1 %1610, label %originalBBpart2494, label %originalBB492alteredBB

originalBBpart2494:                               ; preds = %originalBB492
  switch i32 %1602, label %2017 [
    i32 2, label %1611
    i32 5, label %1648
  ], !dbg !1900

1611:                                             ; preds = %originalBBpart2494
  %1612 = load i8, i8* %35, align 1, !dbg !1901
  %1613 = trunc i8 %1612 to i1, !dbg !1901
  br i1 %1613, label %1614, label %1631, !dbg !1904

1614:                                             ; preds = %1611
  %1615 = load i32, i32* @x.35
  %1616 = load i32, i32* @y.36
  %1617 = sub i32 %1615, 1
  %1618 = mul i32 %1615, %1617
  %1619 = urem i32 %1618, 2
  %1620 = icmp eq i32 %1619, 0
  %1621 = icmp slt i32 %1616, 10
  %1622 = or i1 %1620, %1621
  br i1 %1622, label %originalBB496, label %originalBB496alteredBB

originalBB496:                                    ; preds = %1614, %originalBB496alteredBB
  %1623 = load i32, i32* @x.35
  %1624 = load i32, i32* @y.36
  %1625 = sub i32 %1623, 1
  %1626 = mul i32 %1623, %1625
  %1627 = urem i32 %1626, 2
  %1628 = icmp eq i32 %1627, 0
  %1629 = icmp slt i32 %1624, 10
  %1630 = or i1 %1628, %1629
  br i1 %1630, label %originalBBpart2498, label %originalBB496alteredBB

originalBBpart2498:                               ; preds = %originalBB496
  br label %5413, !dbg !1905

1631:                                             ; preds = %1611
  %1632 = load i32, i32* @x.35
  %1633 = load i32, i32* @y.36
  %1634 = sub i32 %1632, 1
  %1635 = mul i32 %1632, %1634
  %1636 = urem i32 %1635, 2
  %1637 = icmp eq i32 %1636, 0
  %1638 = icmp slt i32 %1633, 10
  %1639 = or i1 %1637, %1638
  br i1 %1639, label %originalBB500, label %originalBB500alteredBB

originalBB500:                                    ; preds = %1631, %originalBB500alteredBB
  %1640 = load i32, i32* @x.35
  %1641 = load i32, i32* @y.36
  %1642 = sub i32 %1640, 1
  %1643 = mul i32 %1640, %1642
  %1644 = urem i32 %1643, 2
  %1645 = icmp eq i32 %1644, 0
  %1646 = icmp slt i32 %1641, 10
  %1647 = or i1 %1645, %1646
  br i1 %1647, label %originalBBpart2502, label %originalBB500alteredBB

originalBBpart2502:                               ; preds = %originalBB500
  br label %2034, !dbg !1906

1648:                                             ; preds = %originalBBpart2494
  %1649 = load i32, i32* @x.35
  %1650 = load i32, i32* @y.36
  %1651 = sub i32 %1649, 1
  %1652 = mul i32 %1649, %1651
  %1653 = urem i32 %1652, 2
  %1654 = icmp eq i32 %1653, 0
  %1655 = icmp slt i32 %1650, 10
  %1656 = or i1 %1654, %1655
  br i1 %1656, label %originalBB504, label %originalBB504alteredBB

originalBB504:                                    ; preds = %1648, %originalBB504alteredBB
  %1657 = load i32, i32* %24, align 4, !dbg !1907
  %1658 = and i32 %1657, 4, !dbg !1909
  %1659 = icmp ne i32 %1658, 0, !dbg !1909
  %1660 = load i32, i32* @x.35
  %1661 = load i32, i32* @y.36
  %1662 = sub i32 %1660, 1
  %1663 = mul i32 %1660, %1662
  %1664 = urem i32 %1663, 2
  %1665 = icmp eq i32 %1664, 0
  %1666 = icmp slt i32 %1661, 10
  %1667 = or i1 %1665, %1666
  br i1 %1667, label %originalBBpart2510, label %originalBB504alteredBB

originalBBpart2510:                               ; preds = %originalBB504
  br i1 %1659, label %1668, label %2016, !dbg !1910

1668:                                             ; preds = %originalBBpart2510
  %1669 = load i32, i32* @x.35
  %1670 = load i32, i32* @y.36
  %1671 = sub i32 %1669, 1
  %1672 = mul i32 %1669, %1671
  %1673 = urem i32 %1672, 2
  %1674 = icmp eq i32 %1673, 0
  %1675 = icmp slt i32 %1670, 10
  %1676 = or i1 %1674, %1675
  br i1 %1676, label %originalBB512, label %originalBB512alteredBB

originalBB512:                                    ; preds = %1668, %originalBB512alteredBB
  %1677 = load i64, i64* %28, align 8, !dbg !1911
  %1678 = add i64 %1677, 2, !dbg !1912
  %1679 = load i64, i64* %22, align 8, !dbg !1913
  %1680 = trunc i64 %1679 to i32
  %1681 = mul i32 %1680, -4
  %1682 = trunc i64 2 to i32
  %1683 = mul i32 %1682, 3
  %1684 = add i32 %1683, -5
  %1685 = mul i32 %1681, %1681
  %1686 = mul i32 %1684, %1684
  %1687 = add i32 %1685, %1686
  %1688 = mul i32 %1681, %1684
  %1689 = mul i32 %1688, 2
  %1690 = sub i32 %1687, %1689
  %1691 = mul i32 %1690, -2
  %1692 = add i32 %1691, -4
  %1693 = icmp ne i32 %1692, -2
  %1694 = load i32, i32* @x.35
  %1695 = load i32, i32* @y.36
  %1696 = sub i32 %1694, 1
  %1697 = mul i32 %1694, %1696
  %1698 = urem i32 %1697, 2
  %1699 = icmp eq i32 %1698, 0
  %1700 = icmp slt i32 %1695, 10
  %1701 = or i1 %1699, %1700
  br i1 %1701, label %originalBBpart2597, label %originalBB512alteredBB

originalBBpart2597:                               ; preds = %originalBB512
  br i1 %1693, label %1719, label %1702

1702:                                             ; preds = %originalBBpart2597
  %1703 = load i32, i32* @x.35
  %1704 = load i32, i32* @y.36
  %1705 = sub i32 %1703, 1
  %1706 = mul i32 %1703, %1705
  %1707 = urem i32 %1706, 2
  %1708 = icmp eq i32 %1707, 0
  %1709 = icmp slt i32 %1704, 10
  %1710 = or i1 %1708, %1709
  br i1 %1710, label %originalBB599, label %originalBB599alteredBB

originalBB599:                                    ; preds = %1702, %originalBB599alteredBB
  %1711 = load i32, i32* @x.35
  %1712 = load i32, i32* @y.36
  %1713 = sub i32 %1711, 1
  %1714 = mul i32 %1711, %1713
  %1715 = urem i32 %1714, 2
  %1716 = icmp eq i32 %1715, 0
  %1717 = icmp slt i32 %1712, 10
  %1718 = or i1 %1716, %1717
  br i1 %1718, label %originalBBpart2601, label %originalBB599alteredBB

originalBBpart2601:                               ; preds = %originalBB599
  ret i64 0

1719:                                             ; preds = %originalBBpart2597
  %1720 = load i32, i32* @x.35
  %1721 = load i32, i32* @y.36
  %1722 = sub i32 %1720, 1
  %1723 = mul i32 %1720, %1722
  %1724 = urem i32 %1723, 2
  %1725 = icmp eq i32 %1724, 0
  %1726 = icmp slt i32 %1721, 10
  %1727 = or i1 %1725, %1726
  br i1 %1727, label %originalBB603, label %originalBB603alteredBB

originalBB603:                                    ; preds = %1719, %originalBB603alteredBB
  %1728 = icmp ult i64 %1678, %1679, !dbg !1914
  %1729 = load i32, i32* @x.35
  %1730 = load i32, i32* @y.36
  %1731 = sub i32 %1729, 1
  %1732 = mul i32 %1729, %1731
  %1733 = urem i32 %1732, 2
  %1734 = icmp eq i32 %1733, 0
  %1735 = icmp slt i32 %1730, 10
  %1736 = or i1 %1734, %1735
  br i1 %1736, label %originalBBpart2605, label %originalBB603alteredBB

originalBBpart2605:                               ; preds = %originalBB603
  br i1 %1728, label %1737, label %2016, !dbg !1915

1737:                                             ; preds = %originalBBpart2605
  %1738 = load i8*, i8** %21, align 8, !dbg !1916
  %1739 = load i64, i64* %28, align 8, !dbg !1917
  %1740 = add i64 %1739, 1, !dbg !1918
  %1741 = trunc i64 1 to i32
  %1742 = mul i32 %1741, 4
  %1743 = add i32 %1742, 3
  %1744 = trunc i64 %1739 to i32
  %1745 = mul i32 %1744, 2
  %1746 = add i32 %1745, 1
  %1747 = mul i32 %1743, %1743
  %1748 = mul i32 %1746, %1746
  %1749 = mul i32 %1748, 34
  %1750 = sub i32 %1747, %1749
  %1751 = mul i32 %1750, -2
  %1752 = add i32 %1751, -2
  %1753 = icmp ne i32 %1752, -4
  br i1 %1753, label %1755, label %1754

1754:                                             ; preds = %1737
  ret i64 0

1755:                                             ; preds = %1737
  %1756 = load i32, i32* @x.35
  %1757 = load i32, i32* @y.36
  %1758 = sub i32 %1756, 1
  %1759 = mul i32 %1756, %1758
  %1760 = urem i32 %1759, 2
  %1761 = icmp eq i32 %1760, 0
  %1762 = icmp slt i32 %1757, 10
  %1763 = or i1 %1761, %1762
  br i1 %1763, label %originalBB607, label %originalBB607alteredBB

originalBB607:                                    ; preds = %1755, %originalBB607alteredBB
  %1764 = getelementptr inbounds i8, i8* %1738, i64 %1740, !dbg !1916
  %1765 = load i8, i8* %1764, align 1, !dbg !1916
  %1766 = sext i8 %1765 to i32, !dbg !1916
  %1767 = icmp eq i32 %1766, 63, !dbg !1919
  %1768 = load i32, i32* @x.35
  %1769 = load i32, i32* @y.36
  %1770 = sub i32 %1768, 1
  %1771 = mul i32 %1768, %1770
  %1772 = urem i32 %1771, 2
  %1773 = icmp eq i32 %1772, 0
  %1774 = icmp slt i32 %1769, 10
  %1775 = or i1 %1773, %1774
  br i1 %1775, label %originalBBpart2609, label %originalBB607alteredBB

originalBBpart2609:                               ; preds = %originalBB607
  br i1 %1767, label %1776, label %2016, !dbg !1920

1776:                                             ; preds = %originalBBpart2609
  %1777 = load i8*, i8** %21, align 8, !dbg !1921
  %1778 = load i64, i64* %28, align 8, !dbg !1922
  %1779 = add i64 %1778, 2, !dbg !1923
  %1780 = getelementptr inbounds i8, i8* %1777, i64 %1779, !dbg !1921
  %1781 = load i8, i8* %1780, align 1, !dbg !1921
  %1782 = sext i8 %1781 to i32, !dbg !1921
  switch i32 %1782, label %1982 [
    i32 33, label %1783
    i32 39, label %1783
    i32 40, label %1783
    i32 41, label %1783
    i32 45, label %1783
    i32 47, label %1783
    i32 60, label %1783
    i32 61, label %1783
    i32 62, label %1783
  ], !dbg !1924

1783:                                             ; preds = %1776, %1776, %1776, %1776, %1776, %1776, %1776, %1776, %1776
  %1784 = load i8, i8* %35, align 1, !dbg !1925
  %1785 = trunc i8 %1784 to i1, !dbg !1925
  br i1 %1785, label %1786, label %1803, !dbg !1928

1786:                                             ; preds = %1783
  %1787 = load i32, i32* @x.35
  %1788 = load i32, i32* @y.36
  %1789 = sub i32 %1787, 1
  %1790 = mul i32 %1787, %1789
  %1791 = urem i32 %1790, 2
  %1792 = icmp eq i32 %1791, 0
  %1793 = icmp slt i32 %1788, 10
  %1794 = or i1 %1792, %1793
  br i1 %1794, label %originalBB611, label %originalBB611alteredBB

originalBB611:                                    ; preds = %1786, %originalBB611alteredBB
  %1795 = load i32, i32* @x.35
  %1796 = load i32, i32* @y.36
  %1797 = sub i32 %1795, 1
  %1798 = mul i32 %1795, %1797
  %1799 = urem i32 %1798, 2
  %1800 = icmp eq i32 %1799, 0
  %1801 = icmp slt i32 %1796, 10
  %1802 = or i1 %1800, %1801
  br i1 %1802, label %originalBBpart2613, label %originalBB611alteredBB

originalBBpart2613:                               ; preds = %originalBB611
  br label %5413, !dbg !1929

1803:                                             ; preds = %1783
  %1804 = load i8*, i8** %21, align 8, !dbg !1930
  %1805 = load i64, i64* %28, align 8, !dbg !1931
  %1806 = add i64 %1805, 2, !dbg !1932
  %1807 = getelementptr inbounds i8, i8* %1804, i64 %1806, !dbg !1930
  %1808 = load i8, i8* %1807, align 1, !dbg !1930
  store i8 %1808, i8* %39, align 1, !dbg !1933
  %1809 = load i64, i64* %28, align 8, !dbg !1934
  %1810 = add i64 %1809, 2, !dbg !1934
  store i64 %1810, i64* %28, align 8, !dbg !1934
  br label %1811, !dbg !1935

1811:                                             ; preds = %1803
  %1812 = load i64, i64* %29, align 8, !dbg !1936
  %1813 = load i64, i64* %20, align 8, !dbg !1936
  %1814 = icmp ult i64 %1812, %1813, !dbg !1936
  br i1 %1814, label %1815, label %1835, !dbg !1939

1815:                                             ; preds = %1811
  %1816 = load i32, i32* @x.35
  %1817 = load i32, i32* @y.36
  %1818 = sub i32 %1816, 1
  %1819 = mul i32 %1816, %1818
  %1820 = urem i32 %1819, 2
  %1821 = icmp eq i32 %1820, 0
  %1822 = icmp slt i32 %1817, 10
  %1823 = or i1 %1821, %1822
  br i1 %1823, label %originalBB615, label %originalBB615alteredBB

originalBB615:                                    ; preds = %1815, %originalBB615alteredBB
  %1824 = load i8*, i8** %19, align 8, !dbg !1936
  %1825 = load i64, i64* %29, align 8, !dbg !1936
  %1826 = getelementptr inbounds i8, i8* %1824, i64 %1825, !dbg !1936
  store i8 63, i8* %1826, align 1, !dbg !1936
  %1827 = load i32, i32* @x.35
  %1828 = load i32, i32* @y.36
  %1829 = sub i32 %1827, 1
  %1830 = mul i32 %1827, %1829
  %1831 = urem i32 %1830, 2
  %1832 = icmp eq i32 %1831, 0
  %1833 = icmp slt i32 %1828, 10
  %1834 = or i1 %1832, %1833
  br i1 %1834, label %originalBBpart2617, label %originalBB615alteredBB

originalBBpart2617:                               ; preds = %originalBB615
  br label %1835, !dbg !1936

1835:                                             ; preds = %originalBBpart2617, %1811
  %1836 = load i64, i64* %29, align 8, !dbg !1939
  %1837 = add i64 %1836, 1, !dbg !1939
  store i64 %1837, i64* %29, align 8, !dbg !1939
  br label %1838, !dbg !1939

1838:                                             ; preds = %1835
  %1839 = load i32, i32* @x.35
  %1840 = load i32, i32* @y.36
  %1841 = sub i32 %1839, 1
  %1842 = mul i32 %1839, %1841
  %1843 = urem i32 %1842, 2
  %1844 = icmp eq i32 %1843, 0
  %1845 = icmp slt i32 %1840, 10
  %1846 = or i1 %1844, %1845
  br i1 %1846, label %originalBB619, label %originalBB619alteredBB

originalBB619:                                    ; preds = %1838, %originalBB619alteredBB
  %1847 = load i32, i32* @x.35
  %1848 = load i32, i32* @y.36
  %1849 = sub i32 %1847, 1
  %1850 = mul i32 %1847, %1849
  %1851 = urem i32 %1850, 2
  %1852 = icmp eq i32 %1851, 0
  %1853 = icmp slt i32 %1848, 10
  %1854 = or i1 %1852, %1853
  br i1 %1854, label %originalBBpart2621, label %originalBB619alteredBB

originalBBpart2621:                               ; preds = %originalBB619
  br label %1855, !dbg !1940

1855:                                             ; preds = %originalBBpart2621
  %1856 = load i64, i64* %29, align 8, !dbg !1941
  %1857 = load i64, i64* %20, align 8, !dbg !1941
  %1858 = icmp ult i64 %1856, %1857, !dbg !1941
  br i1 %1858, label %1859, label %1863, !dbg !1944

1859:                                             ; preds = %1855
  %1860 = load i8*, i8** %19, align 8, !dbg !1941
  %1861 = load i64, i64* %29, align 8, !dbg !1941
  %1862 = getelementptr inbounds i8, i8* %1860, i64 %1861, !dbg !1941
  store i8 34, i8* %1862, align 1, !dbg !1941
  br label %1863, !dbg !1941

1863:                                             ; preds = %1859, %1855
  %1864 = load i64, i64* %29, align 8, !dbg !1944
  %1865 = add i64 %1864, 1, !dbg !1944
  %1866 = trunc i64 1 to i32
  %1867 = mul i32 %1866, -5
  %1868 = add i32 %1867, -5
  %1869 = mul i32 %1868, %1868
  %1870 = sub i32 %1869, %1868
  %1871 = srem i32 %1870, 2
  %1872 = mul i32 %1871, 5
  %1873 = add i32 %1872, 2
  %1874 = icmp eq i32 %1873, 2
  br i1 %1874, label %1876, label %1875

1875:                                             ; preds = %1863
  ret i64 0

1876:                                             ; preds = %1863
  store i64 %1865, i64* %29, align 8, !dbg !1944
  br label %1877, !dbg !1944

1877:                                             ; preds = %1876
  %1878 = load i32, i32* @x.35
  %1879 = load i32, i32* @y.36
  %1880 = sub i32 %1878, 1
  %1881 = mul i32 %1878, %1880
  %1882 = urem i32 %1881, 2
  %1883 = icmp eq i32 %1882, 0
  %1884 = icmp slt i32 %1879, 10
  %1885 = or i1 %1883, %1884
  br i1 %1885, label %originalBB623, label %originalBB623alteredBB

originalBB623:                                    ; preds = %1877, %originalBB623alteredBB
  %1886 = load i32, i32* @x.35
  %1887 = load i32, i32* @y.36
  %1888 = sub i32 %1886, 1
  %1889 = mul i32 %1886, %1888
  %1890 = urem i32 %1889, 2
  %1891 = icmp eq i32 %1890, 0
  %1892 = icmp slt i32 %1887, 10
  %1893 = or i1 %1891, %1892
  br i1 %1893, label %originalBBpart2625, label %originalBB623alteredBB

originalBBpart2625:                               ; preds = %originalBB623
  br label %1894, !dbg !1945

1894:                                             ; preds = %originalBBpart2625
  %1895 = load i64, i64* %29, align 8, !dbg !1946
  %1896 = load i64, i64* %20, align 8, !dbg !1946
  %1897 = icmp ult i64 %1895, %1896, !dbg !1946
  br i1 %1897, label %1898, label %1918, !dbg !1949

1898:                                             ; preds = %1894
  %1899 = load i32, i32* @x.35
  %1900 = load i32, i32* @y.36
  %1901 = sub i32 %1899, 1
  %1902 = mul i32 %1899, %1901
  %1903 = urem i32 %1902, 2
  %1904 = icmp eq i32 %1903, 0
  %1905 = icmp slt i32 %1900, 10
  %1906 = or i1 %1904, %1905
  br i1 %1906, label %originalBB627, label %originalBB627alteredBB

originalBB627:                                    ; preds = %1898, %originalBB627alteredBB
  %1907 = load i8*, i8** %19, align 8, !dbg !1946
  %1908 = load i64, i64* %29, align 8, !dbg !1946
  %1909 = getelementptr inbounds i8, i8* %1907, i64 %1908, !dbg !1946
  store i8 34, i8* %1909, align 1, !dbg !1946
  %1910 = load i32, i32* @x.35
  %1911 = load i32, i32* @y.36
  %1912 = sub i32 %1910, 1
  %1913 = mul i32 %1910, %1912
  %1914 = urem i32 %1913, 2
  %1915 = icmp eq i32 %1914, 0
  %1916 = icmp slt i32 %1911, 10
  %1917 = or i1 %1915, %1916
  br i1 %1917, label %originalBBpart2629, label %originalBB627alteredBB

originalBBpart2629:                               ; preds = %originalBB627
  br label %1918, !dbg !1946

1918:                                             ; preds = %originalBBpart2629, %1894
  %1919 = load i32, i32* @x.35
  %1920 = load i32, i32* @y.36
  %1921 = sub i32 %1919, 1
  %1922 = mul i32 %1919, %1921
  %1923 = urem i32 %1922, 2
  %1924 = icmp eq i32 %1923, 0
  %1925 = icmp slt i32 %1920, 10
  %1926 = or i1 %1924, %1925
  br i1 %1926, label %originalBB631, label %originalBB631alteredBB

originalBB631:                                    ; preds = %1918, %originalBB631alteredBB
  %1927 = load i64, i64* %29, align 8, !dbg !1949
  %1928 = add i64 %1927, 1, !dbg !1949
  store i64 %1928, i64* %29, align 8, !dbg !1949
  %1929 = load i32, i32* @x.35
  %1930 = load i32, i32* @y.36
  %1931 = sub i32 %1929, 1
  %1932 = mul i32 %1929, %1931
  %1933 = urem i32 %1932, 2
  %1934 = icmp eq i32 %1933, 0
  %1935 = icmp slt i32 %1930, 10
  %1936 = or i1 %1934, %1935
  br i1 %1936, label %originalBBpart2636, label %originalBB631alteredBB

originalBBpart2636:                               ; preds = %originalBB631
  br label %1937, !dbg !1949

1937:                                             ; preds = %originalBBpart2636
  %1938 = load i32, i32* @x.35
  %1939 = load i32, i32* @y.36
  %1940 = sub i32 %1938, 1
  %1941 = mul i32 %1938, %1940
  %1942 = urem i32 %1941, 2
  %1943 = icmp eq i32 %1942, 0
  %1944 = icmp slt i32 %1939, 10
  %1945 = or i1 %1943, %1944
  br i1 %1945, label %originalBB638, label %originalBB638alteredBB

originalBB638:                                    ; preds = %1937, %originalBB638alteredBB
  %1946 = load i32, i32* @x.35
  %1947 = load i32, i32* @y.36
  %1948 = sub i32 %1946, 1
  %1949 = mul i32 %1946, %1948
  %1950 = urem i32 %1949, 2
  %1951 = icmp eq i32 %1950, 0
  %1952 = icmp slt i32 %1947, 10
  %1953 = or i1 %1951, %1952
  br i1 %1953, label %originalBBpart2640, label %originalBB638alteredBB

originalBBpart2640:                               ; preds = %originalBB638
  br label %1954, !dbg !1950

1954:                                             ; preds = %originalBBpart2640
  %1955 = load i64, i64* %29, align 8, !dbg !1951
  %1956 = load i64, i64* %20, align 8, !dbg !1951
  %1957 = icmp ult i64 %1955, %1956, !dbg !1951
  br i1 %1957, label %1958, label %1962, !dbg !1954

1958:                                             ; preds = %1954
  %1959 = load i8*, i8** %19, align 8, !dbg !1951
  %1960 = load i64, i64* %29, align 8, !dbg !1951
  %1961 = getelementptr inbounds i8, i8* %1959, i64 %1960, !dbg !1951
  store i8 63, i8* %1961, align 1, !dbg !1951
  br label %1962, !dbg !1951

1962:                                             ; preds = %1958, %1954
  %1963 = load i64, i64* %29, align 8, !dbg !1954
  %1964 = add i64 %1963, 1, !dbg !1954
  store i64 %1964, i64* %29, align 8, !dbg !1954
  br label %1965, !dbg !1954

1965:                                             ; preds = %1962
  %1966 = load i32, i32* @x.35
  %1967 = load i32, i32* @y.36
  %1968 = sub i32 %1966, 1
  %1969 = mul i32 %1966, %1968
  %1970 = urem i32 %1969, 2
  %1971 = icmp eq i32 %1970, 0
  %1972 = icmp slt i32 %1967, 10
  %1973 = or i1 %1971, %1972
  br i1 %1973, label %originalBB642, label %originalBB642alteredBB

originalBB642:                                    ; preds = %1965, %originalBB642alteredBB
  %1974 = load i32, i32* @x.35
  %1975 = load i32, i32* @y.36
  %1976 = sub i32 %1974, 1
  %1977 = mul i32 %1974, %1976
  %1978 = urem i32 %1977, 2
  %1979 = icmp eq i32 %1978, 0
  %1980 = icmp slt i32 %1975, 10
  %1981 = or i1 %1979, %1980
  br i1 %1981, label %originalBBpart2644, label %originalBB642alteredBB

originalBBpart2644:                               ; preds = %originalBB642
  br label %1999, !dbg !1955

1982:                                             ; preds = %1776
  %1983 = load i32, i32* @x.35
  %1984 = load i32, i32* @y.36
  %1985 = sub i32 %1983, 1
  %1986 = mul i32 %1983, %1985
  %1987 = urem i32 %1986, 2
  %1988 = icmp eq i32 %1987, 0
  %1989 = icmp slt i32 %1984, 10
  %1990 = or i1 %1988, %1989
  br i1 %1990, label %originalBB646, label %originalBB646alteredBB

originalBB646:                                    ; preds = %1982, %originalBB646alteredBB
  %1991 = load i32, i32* @x.35
  %1992 = load i32, i32* @y.36
  %1993 = sub i32 %1991, 1
  %1994 = mul i32 %1991, %1993
  %1995 = urem i32 %1994, 2
  %1996 = icmp eq i32 %1995, 0
  %1997 = icmp slt i32 %1992, 10
  %1998 = or i1 %1996, %1997
  br i1 %1998, label %originalBBpart2648, label %originalBB646alteredBB

originalBBpart2648:                               ; preds = %originalBB646
  br label %1999, !dbg !1956

1999:                                             ; preds = %originalBBpart2648, %originalBBpart2644
  %2000 = load i32, i32* @x.35
  %2001 = load i32, i32* @y.36
  %2002 = sub i32 %2000, 1
  %2003 = mul i32 %2000, %2002
  %2004 = urem i32 %2003, 2
  %2005 = icmp eq i32 %2004, 0
  %2006 = icmp slt i32 %2001, 10
  %2007 = or i1 %2005, %2006
  br i1 %2007, label %originalBB650, label %originalBB650alteredBB

originalBB650:                                    ; preds = %1999, %originalBB650alteredBB
  %2008 = load i32, i32* @x.35
  %2009 = load i32, i32* @y.36
  %2010 = sub i32 %2008, 1
  %2011 = mul i32 %2008, %2010
  %2012 = urem i32 %2011, 2
  %2013 = icmp eq i32 %2012, 0
  %2014 = icmp slt i32 %2009, 10
  %2015 = or i1 %2013, %2014
  br i1 %2015, label %originalBBpart2652, label %originalBB650alteredBB

originalBBpart2652:                               ; preds = %originalBB650
  br label %2016, !dbg !1957

2016:                                             ; preds = %originalBBpart2652, %originalBBpart2609, %originalBBpart2605, %originalBBpart2510
  br label %2034, !dbg !1958

2017:                                             ; preds = %originalBBpart2494
  %2018 = load i32, i32* @x.35
  %2019 = load i32, i32* @y.36
  %2020 = sub i32 %2018, 1
  %2021 = mul i32 %2018, %2020
  %2022 = urem i32 %2021, 2
  %2023 = icmp eq i32 %2022, 0
  %2024 = icmp slt i32 %2019, 10
  %2025 = or i1 %2023, %2024
  br i1 %2025, label %originalBB654, label %originalBB654alteredBB

originalBB654:                                    ; preds = %2017, %originalBB654alteredBB
  %2026 = load i32, i32* @x.35
  %2027 = load i32, i32* @y.36
  %2028 = sub i32 %2026, 1
  %2029 = mul i32 %2026, %2028
  %2030 = urem i32 %2029, 2
  %2031 = icmp eq i32 %2030, 0
  %2032 = icmp slt i32 %2027, 10
  %2033 = or i1 %2031, %2032
  br i1 %2033, label %originalBBpart2656, label %originalBB654alteredBB

originalBBpart2656:                               ; preds = %originalBB654
  br label %2034, !dbg !1959

2034:                                             ; preds = %originalBBpart2656, %2016, %originalBBpart2502
  br label %4319, !dbg !1960

2035:                                             ; preds = %originalBBpart2212
  %2036 = load i32, i32* @x.35
  %2037 = load i32, i32* @y.36
  %2038 = sub i32 %2036, 1
  %2039 = mul i32 %2036, %2038
  %2040 = urem i32 %2039, 2
  %2041 = icmp eq i32 %2040, 0
  %2042 = icmp slt i32 %2037, 10
  %2043 = or i1 %2041, %2042
  br i1 %2043, label %originalBB658, label %originalBB658alteredBB

originalBB658:                                    ; preds = %2035, %originalBB658alteredBB
  store i8 97, i8* %40, align 1, !dbg !1961
  %2044 = load i32, i32* @x.35
  %2045 = load i32, i32* @y.36
  %2046 = sub i32 %2044, 1
  %2047 = mul i32 %2044, %2046
  %2048 = urem i32 %2047, 2
  %2049 = icmp eq i32 %2048, 0
  %2050 = icmp slt i32 %2045, 10
  %2051 = or i1 %2049, %2050
  br i1 %2051, label %originalBBpart2660, label %originalBB658alteredBB

originalBBpart2660:                               ; preds = %originalBB658
  br label %2246, !dbg !1962

2052:                                             ; preds = %originalBBpart2212
  %2053 = load i32, i32* @x.35
  %2054 = load i32, i32* @y.36
  %2055 = sub i32 %2053, 1
  %2056 = mul i32 %2053, %2055
  %2057 = urem i32 %2056, 2
  %2058 = icmp eq i32 %2057, 0
  %2059 = icmp slt i32 %2054, 10
  %2060 = or i1 %2058, %2059
  br i1 %2060, label %originalBB662, label %originalBB662alteredBB

originalBB662:                                    ; preds = %2052, %originalBB662alteredBB
  store i8 98, i8* %40, align 1, !dbg !1963
  %2061 = load i32, i32* @x.35
  %2062 = load i32, i32* @y.36
  %2063 = sub i32 %2061, 1
  %2064 = mul i32 %2061, %2063
  %2065 = urem i32 %2064, 2
  %2066 = icmp eq i32 %2065, 0
  %2067 = icmp slt i32 %2062, 10
  %2068 = or i1 %2066, %2067
  br i1 %2068, label %originalBBpart2664, label %originalBB662alteredBB

originalBBpart2664:                               ; preds = %originalBB662
  br label %2246, !dbg !1964

2069:                                             ; preds = %originalBBpart2212
  store i8 102, i8* %40, align 1, !dbg !1965
  br label %2246, !dbg !1966

2070:                                             ; preds = %originalBBpart2212
  %2071 = load i32, i32* @x.35
  %2072 = load i32, i32* @y.36
  %2073 = sub i32 %2071, 1
  %2074 = mul i32 %2071, %2073
  %2075 = urem i32 %2074, 2
  %2076 = icmp eq i32 %2075, 0
  %2077 = icmp slt i32 %2072, 10
  %2078 = or i1 %2076, %2077
  br i1 %2078, label %originalBB666, label %originalBB666alteredBB

originalBB666:                                    ; preds = %2070, %originalBB666alteredBB
  store i8 110, i8* %40, align 1, !dbg !1967
  %2079 = load i32, i32* @x.35
  %2080 = load i32, i32* @y.36
  %2081 = sub i32 %2079, 1
  %2082 = mul i32 %2079, %2081
  %2083 = urem i32 %2082, 2
  %2084 = icmp eq i32 %2083, 0
  %2085 = icmp slt i32 %2080, 10
  %2086 = or i1 %2084, %2085
  br i1 %2086, label %originalBBpart2668, label %originalBB666alteredBB

originalBBpart2668:                               ; preds = %originalBB666
  br label %2222, !dbg !1968

2087:                                             ; preds = %originalBBpart2212
  store i8 114, i8* %40, align 1, !dbg !1969
  br label %2222, !dbg !1970

2088:                                             ; preds = %originalBBpart2212
  %2089 = load i32, i32* @x.35
  %2090 = load i32, i32* @y.36
  %2091 = sub i32 %2089, 1
  %2092 = mul i32 %2089, %2091
  %2093 = urem i32 %2092, 2
  %2094 = icmp eq i32 %2093, 0
  %2095 = icmp slt i32 %2090, 10
  %2096 = or i1 %2094, %2095
  br i1 %2096, label %originalBB670, label %originalBB670alteredBB

originalBB670:                                    ; preds = %2088, %originalBB670alteredBB
  store i8 116, i8* %40, align 1, !dbg !1971
  %2097 = load i32, i32* @x.35
  %2098 = load i32, i32* @y.36
  %2099 = sub i32 %2097, 1
  %2100 = mul i32 %2097, %2099
  %2101 = urem i32 %2100, 2
  %2102 = icmp eq i32 %2101, 0
  %2103 = icmp slt i32 %2098, 10
  %2104 = or i1 %2102, %2103
  br i1 %2104, label %originalBBpart2672, label %originalBB670alteredBB

originalBBpart2672:                               ; preds = %originalBB670
  br label %2222, !dbg !1972

2105:                                             ; preds = %originalBBpart2212
  %2106 = load i32, i32* @x.35
  %2107 = load i32, i32* @y.36
  %2108 = sub i32 %2106, 1
  %2109 = mul i32 %2106, %2108
  %2110 = urem i32 %2109, 2
  %2111 = icmp eq i32 %2110, 0
  %2112 = icmp slt i32 %2107, 10
  %2113 = or i1 %2111, %2112
  br i1 %2113, label %originalBB674, label %originalBB674alteredBB

originalBB674:                                    ; preds = %2105, %originalBB674alteredBB
  store i8 118, i8* %40, align 1, !dbg !1973
  %2114 = load i32, i32* @x.35
  %2115 = load i32, i32* @y.36
  %2116 = sub i32 %2114, 1
  %2117 = mul i32 %2114, %2116
  %2118 = urem i32 %2117, 2
  %2119 = icmp eq i32 %2118, 0
  %2120 = icmp slt i32 %2115, 10
  %2121 = or i1 %2119, %2120
  br i1 %2121, label %originalBBpart2676, label %originalBB674alteredBB

originalBBpart2676:                               ; preds = %originalBB674
  br label %2246, !dbg !1974

2122:                                             ; preds = %originalBBpart2212
  %2123 = load i32, i32* @x.35
  %2124 = load i32, i32* @y.36
  %2125 = sub i32 %2123, 1
  %2126 = mul i32 %2123, %2125
  %2127 = urem i32 %2126, 2
  %2128 = icmp eq i32 %2127, 0
  %2129 = icmp slt i32 %2124, 10
  %2130 = or i1 %2128, %2129
  br i1 %2130, label %originalBB678, label %originalBB678alteredBB

originalBB678:                                    ; preds = %2122, %originalBB678alteredBB
  %2131 = load i8, i8* %39, align 1, !dbg !1975
  store i8 %2131, i8* %40, align 1, !dbg !1976
  %2132 = load i32, i32* %23, align 4, !dbg !1977
  %2133 = icmp eq i32 %2132, 2, !dbg !1979
  %2134 = load i32, i32* @x.35
  %2135 = load i32, i32* @y.36
  %2136 = sub i32 %2134, 1
  %2137 = mul i32 %2134, %2136
  %2138 = urem i32 %2137, 2
  %2139 = icmp eq i32 %2138, 0
  %2140 = icmp slt i32 %2135, 10
  %2141 = or i1 %2139, %2140
  br i1 %2141, label %originalBBpart2680, label %originalBB678alteredBB

originalBBpart2680:                               ; preds = %originalBB678
  br i1 %2133, label %2142, label %2163, !dbg !1980

2142:                                             ; preds = %originalBBpart2680
  %2143 = load i32, i32* @x.35
  %2144 = load i32, i32* @y.36
  %2145 = sub i32 %2143, 1
  %2146 = mul i32 %2143, %2145
  %2147 = urem i32 %2146, 2
  %2148 = icmp eq i32 %2147, 0
  %2149 = icmp slt i32 %2144, 10
  %2150 = or i1 %2148, %2149
  br i1 %2150, label %originalBB682, label %originalBB682alteredBB

originalBB682:                                    ; preds = %2142, %originalBB682alteredBB
  %2151 = load i8, i8* %35, align 1, !dbg !1981
  %2152 = trunc i8 %2151 to i1, !dbg !1981
  %2153 = load i32, i32* @x.35
  %2154 = load i32, i32* @y.36
  %2155 = sub i32 %2153, 1
  %2156 = mul i32 %2153, %2155
  %2157 = urem i32 %2156, 2
  %2158 = icmp eq i32 %2157, 0
  %2159 = icmp slt i32 %2154, 10
  %2160 = or i1 %2158, %2159
  br i1 %2160, label %originalBBpart2684, label %originalBB682alteredBB

originalBBpart2684:                               ; preds = %originalBB682
  br i1 %2152, label %2161, label %2162, !dbg !1984

2161:                                             ; preds = %originalBBpart2684
  br label %5413, !dbg !1985

2162:                                             ; preds = %originalBBpart2684
  br label %4796, !dbg !1986

2163:                                             ; preds = %originalBBpart2680
  %2164 = load i32, i32* @x.35
  %2165 = load i32, i32* @y.36
  %2166 = sub i32 %2164, 1
  %2167 = mul i32 %2164, %2166
  %2168 = urem i32 %2167, 2
  %2169 = icmp eq i32 %2168, 0
  %2170 = icmp slt i32 %2165, 10
  %2171 = or i1 %2169, %2170
  br i1 %2171, label %originalBB686, label %originalBB686alteredBB

originalBB686:                                    ; preds = %2163, %originalBB686alteredBB
  %2172 = load i8, i8* %33, align 1, !dbg !1987
  %2173 = trunc i8 %2172 to i1, !dbg !1987
  %2174 = load i32, i32* @x.35
  %2175 = load i32, i32* @y.36
  %2176 = sub i32 %2174, 1
  %2177 = mul i32 %2174, %2176
  %2178 = urem i32 %2177, 2
  %2179 = icmp eq i32 %2178, 0
  %2180 = icmp slt i32 %2175, 10
  %2181 = or i1 %2179, %2180
  br i1 %2181, label %originalBBpart2688, label %originalBB686alteredBB

originalBBpart2688:                               ; preds = %originalBB686
  br i1 %2173, label %2182, label %2205, !dbg !1989

2182:                                             ; preds = %originalBBpart2688
  %2183 = load i32, i32* @x.35
  %2184 = load i32, i32* @y.36
  %2185 = sub i32 %2183, 1
  %2186 = mul i32 %2183, %2185
  %2187 = urem i32 %2186, 2
  %2188 = icmp eq i32 %2187, 0
  %2189 = icmp slt i32 %2184, 10
  %2190 = or i1 %2188, %2189
  br i1 %2190, label %originalBB690, label %originalBB690alteredBB

originalBB690:                                    ; preds = %2182, %originalBB690alteredBB
  %2191 = load i8, i8* %35, align 1, !dbg !1990
  %2192 = trunc i8 %2191 to i1, !dbg !1990
  %2193 = load i32, i32* @x.35
  %2194 = load i32, i32* @y.36
  %2195 = sub i32 %2193, 1
  %2196 = mul i32 %2193, %2195
  %2197 = urem i32 %2196, 2
  %2198 = icmp eq i32 %2197, 0
  %2199 = icmp slt i32 %2194, 10
  %2200 = or i1 %2198, %2199
  br i1 %2200, label %originalBBpart2692, label %originalBB690alteredBB

originalBBpart2692:                               ; preds = %originalBB690
  br i1 %2192, label %2201, label %2205, !dbg !1991

2201:                                             ; preds = %originalBBpart2692
  %2202 = load i64, i64* %32, align 8, !dbg !1992
  %2203 = icmp ne i64 %2202, 0, !dbg !1992
  br i1 %2203, label %2204, label %2205, !dbg !1993

2204:                                             ; preds = %2201
  br label %4796, !dbg !1994

2205:                                             ; preds = %2201, %originalBBpart2692, %originalBBpart2688
  %2206 = load i32, i32* @x.35
  %2207 = load i32, i32* @y.36
  %2208 = sub i32 %2206, 1
  %2209 = mul i32 %2206, %2208
  %2210 = urem i32 %2209, 2
  %2211 = icmp eq i32 %2210, 0
  %2212 = icmp slt i32 %2207, 10
  %2213 = or i1 %2211, %2212
  br i1 %2213, label %originalBB694, label %originalBB694alteredBB

originalBB694:                                    ; preds = %2205, %originalBB694alteredBB
  %2214 = load i32, i32* @x.35
  %2215 = load i32, i32* @y.36
  %2216 = sub i32 %2214, 1
  %2217 = mul i32 %2214, %2216
  %2218 = urem i32 %2217, 2
  %2219 = icmp eq i32 %2218, 0
  %2220 = icmp slt i32 %2215, 10
  %2221 = or i1 %2219, %2220
  br i1 %2221, label %originalBBpart2696, label %originalBB694alteredBB

originalBBpart2696:                               ; preds = %originalBB694
  br label %2222, !dbg !1992

2222:                                             ; preds = %originalBBpart2696, %originalBBpart2672, %2087, %originalBBpart2668
  call void @llvm.dbg.label(metadata !1995), !dbg !1996
  %2223 = load i32, i32* %23, align 4, !dbg !1997
  %2224 = icmp eq i32 %2223, 2, !dbg !1999
  br i1 %2224, label %2225, label %2245, !dbg !2000

2225:                                             ; preds = %2222
  %2226 = load i32, i32* @x.35
  %2227 = load i32, i32* @y.36
  %2228 = sub i32 %2226, 1
  %2229 = mul i32 %2226, %2228
  %2230 = urem i32 %2229, 2
  %2231 = icmp eq i32 %2230, 0
  %2232 = icmp slt i32 %2227, 10
  %2233 = or i1 %2231, %2232
  br i1 %2233, label %originalBB698, label %originalBB698alteredBB

originalBB698:                                    ; preds = %2225, %originalBB698alteredBB
  %2234 = load i8, i8* %35, align 1, !dbg !2001
  %2235 = trunc i8 %2234 to i1, !dbg !2001
  %2236 = load i32, i32* @x.35
  %2237 = load i32, i32* @y.36
  %2238 = sub i32 %2236, 1
  %2239 = mul i32 %2236, %2238
  %2240 = urem i32 %2239, 2
  %2241 = icmp eq i32 %2240, 0
  %2242 = icmp slt i32 %2237, 10
  %2243 = or i1 %2241, %2242
  br i1 %2243, label %originalBBpart2700, label %originalBB698alteredBB

originalBBpart2700:                               ; preds = %originalBB698
  br i1 %2235, label %2244, label %2245, !dbg !2002

2244:                                             ; preds = %originalBBpart2700
  br label %5413, !dbg !2003

2245:                                             ; preds = %originalBBpart2700, %2222
  br label %2246, !dbg !2001

2246:                                             ; preds = %2245, %originalBBpart2676, %2069, %originalBBpart2664, %originalBBpart2660
  call void @llvm.dbg.label(metadata !2004), !dbg !2005
  %2247 = load i32, i32* @x.35
  %2248 = load i32, i32* @y.36
  %2249 = sub i32 %2247, 1
  %2250 = mul i32 %2247, %2249
  %2251 = urem i32 %2250, 2
  %2252 = icmp eq i32 %2251, 0
  %2253 = icmp slt i32 %2248, 10
  %2254 = or i1 %2252, %2253
  br i1 %2254, label %originalBB702, label %originalBB702alteredBB

originalBB702:                                    ; preds = %2246, %originalBB702alteredBB
  %2255 = load i8, i8* %33, align 1, !dbg !2006
  %2256 = trunc i8 %2255 to i1, !dbg !2006
  %2257 = load i32, i32* @x.35
  %2258 = load i32, i32* @y.36
  %2259 = sub i32 %2257, 1
  %2260 = mul i32 %2257, %2259
  %2261 = urem i32 %2260, 2
  %2262 = icmp eq i32 %2261, 0
  %2263 = icmp slt i32 %2258, 10
  %2264 = or i1 %2262, %2263
  br i1 %2264, label %originalBBpart2704, label %originalBB702alteredBB

originalBBpart2704:                               ; preds = %originalBB702
  br i1 %2256, label %2265, label %2267, !dbg !2008

2265:                                             ; preds = %originalBBpart2704
  %2266 = load i8, i8* %40, align 1, !dbg !2009
  store i8 %2266, i8* %39, align 1, !dbg !2011
  br label %4462, !dbg !2012

2267:                                             ; preds = %originalBBpart2704
  %2268 = load i32, i32* @x.35
  %2269 = load i32, i32* @y.36
  %2270 = sub i32 %2268, 1
  %2271 = mul i32 %2268, %2270
  %2272 = urem i32 %2271, 2
  %2273 = icmp eq i32 %2272, 0
  %2274 = icmp slt i32 %2269, 10
  %2275 = or i1 %2273, %2274
  br i1 %2275, label %originalBB706, label %originalBB706alteredBB

originalBB706:                                    ; preds = %2267, %originalBB706alteredBB
  %2276 = load i32, i32* @x.35
  %2277 = load i32, i32* @y.36
  %2278 = sub i32 %2276, 1
  %2279 = mul i32 %2276, %2278
  %2280 = urem i32 %2279, 2
  %2281 = icmp eq i32 %2280, 0
  %2282 = icmp slt i32 %2277, 10
  %2283 = or i1 %2281, %2282
  br i1 %2283, label %originalBBpart2708, label %originalBB706alteredBB

originalBBpart2708:                               ; preds = %originalBB706
  br label %4319, !dbg !2013

2284:                                             ; preds = %originalBBpart2212, %originalBBpart2212
  %2285 = load i32, i32* @x.35
  %2286 = load i32, i32* @y.36
  %2287 = sub i32 %2285, 1
  %2288 = mul i32 %2285, %2287
  %2289 = urem i32 %2288, 2
  %2290 = icmp eq i32 %2289, 0
  %2291 = icmp slt i32 %2286, 10
  %2292 = or i1 %2290, %2291
  br i1 %2292, label %originalBB710, label %originalBB710alteredBB

originalBB710:                                    ; preds = %2284, %originalBB710alteredBB
  %2293 = load i64, i64* %22, align 8, !dbg !2014
  %2294 = icmp eq i64 %2293, -1, !dbg !2016
  %2295 = load i32, i32* @x.35
  %2296 = load i32, i32* @y.36
  %2297 = sub i32 %2295, 1
  %2298 = mul i32 %2295, %2297
  %2299 = urem i32 %2298, 2
  %2300 = icmp eq i32 %2299, 0
  %2301 = icmp slt i32 %2296, 10
  %2302 = or i1 %2300, %2301
  br i1 %2302, label %originalBBpart2712, label %originalBB710alteredBB

originalBBpart2712:                               ; preds = %originalBB710
  br i1 %2294, label %2303, label %2309, !dbg !2017

2303:                                             ; preds = %originalBBpart2712
  %2304 = load i8*, i8** %21, align 8, !dbg !2018
  %2305 = getelementptr inbounds i8, i8* %2304, i64 1, !dbg !2018
  %2306 = load i8, i8* %2305, align 1, !dbg !2018
  %2307 = sext i8 %2306 to i32, !dbg !2018
  %2308 = icmp eq i32 %2307, 0, !dbg !2019
  br i1 %2308, label %2329, label %2312, !dbg !2014

2309:                                             ; preds = %originalBBpart2712
  %2310 = load i64, i64* %22, align 8, !dbg !2020
  %2311 = icmp eq i64 %2310, 1, !dbg !2021
  br i1 %2311, label %2329, label %2312, !dbg !2017

2312:                                             ; preds = %2309, %2303
  %2313 = load i32, i32* @x.35
  %2314 = load i32, i32* @y.36
  %2315 = sub i32 %2313, 1
  %2316 = mul i32 %2313, %2315
  %2317 = urem i32 %2316, 2
  %2318 = icmp eq i32 %2317, 0
  %2319 = icmp slt i32 %2314, 10
  %2320 = or i1 %2318, %2319
  br i1 %2320, label %originalBB714, label %originalBB714alteredBB

originalBB714:                                    ; preds = %2312, %originalBB714alteredBB
  %2321 = load i32, i32* @x.35
  %2322 = load i32, i32* @y.36
  %2323 = sub i32 %2321, 1
  %2324 = mul i32 %2321, %2323
  %2325 = urem i32 %2324, 2
  %2326 = icmp eq i32 %2325, 0
  %2327 = icmp slt i32 %2322, 10
  %2328 = or i1 %2326, %2327
  br i1 %2328, label %originalBBpart2716, label %originalBB714alteredBB

originalBBpart2716:                               ; preds = %originalBB714
  br label %4319, !dbg !2022

2329:                                             ; preds = %2309, %2303
  %2330 = load i32, i32* @x.35
  %2331 = load i32, i32* @y.36
  %2332 = sub i32 %2330, 1
  %2333 = mul i32 %2330, %2332
  %2334 = urem i32 %2333, 2
  %2335 = icmp eq i32 %2334, 0
  %2336 = icmp slt i32 %2331, 10
  %2337 = or i1 %2335, %2336
  br i1 %2337, label %originalBB718, label %originalBB718alteredBB

originalBB718:                                    ; preds = %2329, %originalBB718alteredBB
  %2338 = load i32, i32* @x.35
  %2339 = load i32, i32* @y.36
  %2340 = sub i32 %2338, 1
  %2341 = mul i32 %2338, %2340
  %2342 = urem i32 %2341, 2
  %2343 = icmp eq i32 %2342, 0
  %2344 = icmp slt i32 %2339, 10
  %2345 = or i1 %2343, %2344
  br i1 %2345, label %originalBBpart2720, label %originalBB718alteredBB

originalBBpart2720:                               ; preds = %originalBB718
  br label %2346, !dbg !2023

2346:                                             ; preds = %originalBBpart2720, %originalBBpart2212, %originalBBpart2212
  %2347 = load i32, i32* @x.35
  %2348 = load i32, i32* @y.36
  %2349 = sub i32 %2347, 1
  %2350 = mul i32 %2347, %2349
  %2351 = urem i32 %2350, 2
  %2352 = icmp eq i32 %2351, 0
  %2353 = icmp slt i32 %2348, 10
  %2354 = or i1 %2352, %2353
  br i1 %2354, label %originalBB722, label %originalBB722alteredBB

originalBB722:                                    ; preds = %2346, %originalBB722alteredBB
  %2355 = load i64, i64* %28, align 8, !dbg !2024
  %2356 = icmp ne i64 %2355, 0, !dbg !2026
  %2357 = load i32, i32* @x.35
  %2358 = load i32, i32* @y.36
  %2359 = sub i32 %2357, 1
  %2360 = mul i32 %2357, %2359
  %2361 = urem i32 %2360, 2
  %2362 = icmp eq i32 %2361, 0
  %2363 = icmp slt i32 %2358, 10
  %2364 = or i1 %2362, %2363
  br i1 %2364, label %originalBBpart2724, label %originalBB722alteredBB

originalBBpart2724:                               ; preds = %originalBB722
  br i1 %2356, label %2365, label %2382, !dbg !2027

2365:                                             ; preds = %originalBBpart2724
  %2366 = load i32, i32* @x.35
  %2367 = load i32, i32* @y.36
  %2368 = sub i32 %2366, 1
  %2369 = mul i32 %2366, %2368
  %2370 = urem i32 %2369, 2
  %2371 = icmp eq i32 %2370, 0
  %2372 = icmp slt i32 %2367, 10
  %2373 = or i1 %2371, %2372
  br i1 %2373, label %originalBB726, label %originalBB726alteredBB

originalBB726:                                    ; preds = %2365, %originalBB726alteredBB
  %2374 = load i32, i32* @x.35
  %2375 = load i32, i32* @y.36
  %2376 = sub i32 %2374, 1
  %2377 = mul i32 %2374, %2376
  %2378 = urem i32 %2377, 2
  %2379 = icmp eq i32 %2378, 0
  %2380 = icmp slt i32 %2375, 10
  %2381 = or i1 %2379, %2380
  br i1 %2381, label %originalBBpart2728, label %originalBB726alteredBB

originalBBpart2728:                               ; preds = %originalBB726
  br label %4319, !dbg !2028

2382:                                             ; preds = %originalBBpart2724
  br label %2383, !dbg !2029

2383:                                             ; preds = %2382, %originalBBpart2212
  %2384 = load i32, i32* @x.35
  %2385 = load i32, i32* @y.36
  %2386 = sub i32 %2384, 1
  %2387 = mul i32 %2384, %2386
  %2388 = urem i32 %2387, 2
  %2389 = icmp eq i32 %2388, 0
  %2390 = icmp slt i32 %2385, 10
  %2391 = or i1 %2389, %2390
  br i1 %2391, label %originalBB730, label %originalBB730alteredBB

originalBB730:                                    ; preds = %2383, %originalBB730alteredBB
  store i8 1, i8* %43, align 1, !dbg !2030
  %2392 = load i32, i32* @x.35
  %2393 = load i32, i32* @y.36
  %2394 = sub i32 %2392, 1
  %2395 = mul i32 %2392, %2394
  %2396 = urem i32 %2395, 2
  %2397 = icmp eq i32 %2396, 0
  %2398 = icmp slt i32 %2393, 10
  %2399 = or i1 %2397, %2398
  br i1 %2399, label %originalBBpart2732, label %originalBB730alteredBB

originalBBpart2732:                               ; preds = %originalBB730
  br label %2400, !dbg !2031

2400:                                             ; preds = %originalBBpart2732, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212
  %2401 = load i32, i32* @x.35
  %2402 = load i32, i32* @y.36
  %2403 = sub i32 %2401, 1
  %2404 = mul i32 %2401, %2403
  %2405 = urem i32 %2404, 2
  %2406 = icmp eq i32 %2405, 0
  %2407 = icmp slt i32 %2402, 10
  %2408 = or i1 %2406, %2407
  br i1 %2408, label %originalBB734, label %originalBB734alteredBB

originalBB734:                                    ; preds = %2400, %originalBB734alteredBB
  %2409 = load i32, i32* %23, align 4, !dbg !2032
  %2410 = icmp eq i32 %2409, 2, !dbg !2034
  %2411 = load i32, i32* @x.35
  %2412 = load i32, i32* @y.36
  %2413 = sub i32 %2411, 1
  %2414 = mul i32 %2411, %2413
  %2415 = urem i32 %2414, 2
  %2416 = icmp eq i32 %2415, 0
  %2417 = icmp slt i32 %2412, 10
  %2418 = or i1 %2416, %2417
  br i1 %2418, label %originalBBpart2736, label %originalBB734alteredBB

originalBBpart2736:                               ; preds = %originalBB734
  br i1 %2410, label %2419, label %2455, !dbg !2035

2419:                                             ; preds = %originalBBpart2736
  %2420 = load i32, i32* @x.35
  %2421 = load i32, i32* @y.36
  %2422 = sub i32 %2420, 1
  %2423 = mul i32 %2420, %2422
  %2424 = urem i32 %2423, 2
  %2425 = icmp eq i32 %2424, 0
  %2426 = icmp slt i32 %2421, 10
  %2427 = or i1 %2425, %2426
  br i1 %2427, label %originalBB738, label %originalBB738alteredBB

originalBB738:                                    ; preds = %2419, %originalBB738alteredBB
  %2428 = load i8, i8* %35, align 1, !dbg !2036
  %2429 = trunc i8 %2428 to i1, !dbg !2036
  %2430 = load i32, i32* @x.35
  %2431 = load i32, i32* @y.36
  %2432 = sub i32 %2430, 1
  %2433 = mul i32 %2430, %2432
  %2434 = urem i32 %2433, 2
  %2435 = icmp eq i32 %2434, 0
  %2436 = icmp slt i32 %2431, 10
  %2437 = or i1 %2435, %2436
  br i1 %2437, label %originalBBpart2740, label %originalBB738alteredBB

originalBBpart2740:                               ; preds = %originalBB738
  br i1 %2429, label %2438, label %2455, !dbg !2037

2438:                                             ; preds = %originalBBpart2740
  %2439 = load i32, i32* @x.35
  %2440 = load i32, i32* @y.36
  %2441 = sub i32 %2439, 1
  %2442 = mul i32 %2439, %2441
  %2443 = urem i32 %2442, 2
  %2444 = icmp eq i32 %2443, 0
  %2445 = icmp slt i32 %2440, 10
  %2446 = or i1 %2444, %2445
  br i1 %2446, label %originalBB742, label %originalBB742alteredBB

originalBB742:                                    ; preds = %2438, %originalBB742alteredBB
  %2447 = load i32, i32* @x.35
  %2448 = load i32, i32* @y.36
  %2449 = sub i32 %2447, 1
  %2450 = mul i32 %2447, %2449
  %2451 = urem i32 %2450, 2
  %2452 = icmp eq i32 %2451, 0
  %2453 = icmp slt i32 %2448, 10
  %2454 = or i1 %2452, %2453
  br i1 %2454, label %originalBBpart2744, label %originalBB742alteredBB

originalBBpart2744:                               ; preds = %originalBB742
  br label %5413, !dbg !2038

2455:                                             ; preds = %originalBBpart2740, %originalBBpart2736
  %2456 = load i32, i32* @x.35
  %2457 = load i32, i32* @y.36
  %2458 = sub i32 %2456, 1
  %2459 = mul i32 %2456, %2458
  %2460 = urem i32 %2459, 2
  %2461 = icmp eq i32 %2460, 0
  %2462 = icmp slt i32 %2457, 10
  %2463 = or i1 %2461, %2462
  br i1 %2463, label %originalBB746, label %originalBB746alteredBB

originalBB746:                                    ; preds = %2455, %originalBB746alteredBB
  %2464 = load i32, i32* @x.35
  %2465 = load i32, i32* @y.36
  %2466 = sub i32 %2464, 1
  %2467 = mul i32 %2464, %2466
  %2468 = urem i32 %2467, 2
  %2469 = icmp eq i32 %2468, 0
  %2470 = icmp slt i32 %2465, 10
  %2471 = or i1 %2469, %2470
  br i1 %2471, label %originalBBpart2748, label %originalBB746alteredBB

originalBBpart2748:                               ; preds = %originalBB746
  br label %4319, !dbg !2039

2472:                                             ; preds = %originalBBpart2212
  %2473 = load i32, i32* @x.35
  %2474 = load i32, i32* @y.36
  %2475 = sub i32 %2473, 1
  %2476 = mul i32 %2473, %2475
  %2477 = urem i32 %2476, 2
  %2478 = icmp eq i32 %2477, 0
  %2479 = icmp slt i32 %2474, 10
  %2480 = or i1 %2478, %2479
  br i1 %2480, label %originalBB750, label %originalBB750alteredBB

originalBB750:                                    ; preds = %2472, %originalBB750alteredBB
  store i8 1, i8* %37, align 1, !dbg !2040
  store i8 1, i8* %43, align 1, !dbg !2041
  %2481 = load i32, i32* %23, align 4, !dbg !2042
  %2482 = icmp eq i32 %2481, 2, !dbg !2044
  %2483 = load i32, i32* @x.35
  %2484 = load i32, i32* @y.36
  %2485 = sub i32 %2483, 1
  %2486 = mul i32 %2483, %2485
  %2487 = urem i32 %2486, 2
  %2488 = icmp eq i32 %2487, 0
  %2489 = icmp slt i32 %2484, 10
  %2490 = or i1 %2488, %2489
  br i1 %2490, label %originalBBpart2752, label %originalBB750alteredBB

originalBBpart2752:                               ; preds = %originalBB750
  br i1 %2482, label %2491, label %2748, !dbg !2045

2491:                                             ; preds = %originalBBpart2752
  %2492 = load i8, i8* %35, align 1, !dbg !2046
  %2493 = trunc i8 %2492 to i1, !dbg !2046
  br i1 %2493, label %2494, label %2511, !dbg !2049

2494:                                             ; preds = %2491
  %2495 = load i32, i32* @x.35
  %2496 = load i32, i32* @y.36
  %2497 = sub i32 %2495, 1
  %2498 = mul i32 %2495, %2497
  %2499 = urem i32 %2498, 2
  %2500 = icmp eq i32 %2499, 0
  %2501 = icmp slt i32 %2496, 10
  %2502 = or i1 %2500, %2501
  br i1 %2502, label %originalBB754, label %originalBB754alteredBB

originalBB754:                                    ; preds = %2494, %originalBB754alteredBB
  %2503 = load i32, i32* @x.35
  %2504 = load i32, i32* @y.36
  %2505 = sub i32 %2503, 1
  %2506 = mul i32 %2503, %2505
  %2507 = urem i32 %2506, 2
  %2508 = icmp eq i32 %2507, 0
  %2509 = icmp slt i32 %2504, 10
  %2510 = or i1 %2508, %2509
  br i1 %2510, label %originalBBpart2756, label %originalBB754alteredBB

originalBBpart2756:                               ; preds = %originalBB754
  br label %5413, !dbg !2050

2511:                                             ; preds = %2491
  %2512 = load i32, i32* @x.35
  %2513 = load i32, i32* @y.36
  %2514 = sub i32 %2512, 1
  %2515 = mul i32 %2512, %2514
  %2516 = urem i32 %2515, 2
  %2517 = icmp eq i32 %2516, 0
  %2518 = icmp slt i32 %2513, 10
  %2519 = or i1 %2517, %2518
  br i1 %2519, label %originalBB758, label %originalBB758alteredBB

originalBB758:                                    ; preds = %2511, %originalBB758alteredBB
  %2520 = load i64, i64* %20, align 8, !dbg !2051
  %2521 = icmp ne i64 %2520, 0, !dbg !2051
  %2522 = load i32, i32* @x.35
  %2523 = load i32, i32* @y.36
  %2524 = sub i32 %2522, 1
  %2525 = mul i32 %2522, %2524
  %2526 = urem i32 %2525, 2
  %2527 = icmp eq i32 %2526, 0
  %2528 = icmp slt i32 %2523, 10
  %2529 = or i1 %2527, %2528
  br i1 %2529, label %originalBBpart2760, label %originalBB758alteredBB

originalBBpart2760:                               ; preds = %originalBB758
  br i1 %2521, label %2530, label %2551, !dbg !2053

2530:                                             ; preds = %originalBBpart2760
  %2531 = load i64, i64* %30, align 8, !dbg !2054
  %2532 = icmp ne i64 %2531, 0, !dbg !2054
  br i1 %2532, label %2551, label %2533, !dbg !2055

2533:                                             ; preds = %2530
  %2534 = load i32, i32* @x.35
  %2535 = load i32, i32* @y.36
  %2536 = sub i32 %2534, 1
  %2537 = mul i32 %2534, %2536
  %2538 = urem i32 %2537, 2
  %2539 = icmp eq i32 %2538, 0
  %2540 = icmp slt i32 %2535, 10
  %2541 = or i1 %2539, %2540
  br i1 %2541, label %originalBB762, label %originalBB762alteredBB

originalBB762:                                    ; preds = %2533, %originalBB762alteredBB
  %2542 = load i64, i64* %20, align 8, !dbg !2056
  store i64 %2542, i64* %30, align 8, !dbg !2058
  store i64 0, i64* %20, align 8, !dbg !2059
  %2543 = load i32, i32* @x.35
  %2544 = load i32, i32* @y.36
  %2545 = sub i32 %2543, 1
  %2546 = mul i32 %2543, %2545
  %2547 = urem i32 %2546, 2
  %2548 = icmp eq i32 %2547, 0
  %2549 = icmp slt i32 %2544, 10
  %2550 = or i1 %2548, %2549
  br i1 %2550, label %originalBBpart2764, label %originalBB762alteredBB

originalBBpart2764:                               ; preds = %originalBB762
  br label %2551, !dbg !2060

2551:                                             ; preds = %originalBBpart2764, %2530, %originalBBpart2760
  br label %2552, !dbg !2061

2552:                                             ; preds = %2551
  %2553 = load i64, i64* %29, align 8, !dbg !2062
  %2554 = load i64, i64* %20, align 8, !dbg !2062
  %2555 = icmp ult i64 %2553, %2554, !dbg !2062
  br i1 %2555, label %2556, label %2576, !dbg !2065

2556:                                             ; preds = %2552
  %2557 = load i32, i32* @x.35
  %2558 = load i32, i32* @y.36
  %2559 = sub i32 %2557, 1
  %2560 = mul i32 %2557, %2559
  %2561 = urem i32 %2560, 2
  %2562 = icmp eq i32 %2561, 0
  %2563 = icmp slt i32 %2558, 10
  %2564 = or i1 %2562, %2563
  br i1 %2564, label %originalBB766, label %originalBB766alteredBB

originalBB766:                                    ; preds = %2556, %originalBB766alteredBB
  %2565 = load i8*, i8** %19, align 8, !dbg !2062
  %2566 = load i64, i64* %29, align 8, !dbg !2062
  %2567 = getelementptr inbounds i8, i8* %2565, i64 %2566, !dbg !2062
  store i8 39, i8* %2567, align 1, !dbg !2062
  %2568 = load i32, i32* @x.35
  %2569 = load i32, i32* @y.36
  %2570 = sub i32 %2568, 1
  %2571 = mul i32 %2568, %2570
  %2572 = urem i32 %2571, 2
  %2573 = icmp eq i32 %2572, 0
  %2574 = icmp slt i32 %2569, 10
  %2575 = or i1 %2573, %2574
  br i1 %2575, label %originalBBpart2768, label %originalBB766alteredBB

originalBBpart2768:                               ; preds = %originalBB766
  br label %2576, !dbg !2062

2576:                                             ; preds = %originalBBpart2768, %2552
  %2577 = load i32, i32* @x.35
  %2578 = load i32, i32* @y.36
  %2579 = sub i32 %2577, 1
  %2580 = mul i32 %2577, %2579
  %2581 = urem i32 %2580, 2
  %2582 = icmp eq i32 %2581, 0
  %2583 = icmp slt i32 %2578, 10
  %2584 = or i1 %2582, %2583
  br i1 %2584, label %originalBB770, label %originalBB770alteredBB

originalBB770:                                    ; preds = %2576, %originalBB770alteredBB
  %2585 = load i64, i64* %29, align 8, !dbg !2065
  %2586 = add i64 %2585, 1, !dbg !2065
  store i64 %2586, i64* %29, align 8, !dbg !2065
  %2587 = load i32, i32* @x.35
  %2588 = load i32, i32* @y.36
  %2589 = sub i32 %2587, 1
  %2590 = mul i32 %2587, %2589
  %2591 = urem i32 %2590, 2
  %2592 = icmp eq i32 %2591, 0
  %2593 = icmp slt i32 %2588, 10
  %2594 = or i1 %2592, %2593
  br i1 %2594, label %originalBBpart2772, label %originalBB770alteredBB

originalBBpart2772:                               ; preds = %originalBB770
  br label %2595, !dbg !2065

2595:                                             ; preds = %originalBBpart2772
  %2596 = load i32, i32* @x.35
  %2597 = load i32, i32* @y.36
  %2598 = sub i32 %2596, 1
  %2599 = mul i32 %2596, %2598
  %2600 = urem i32 %2599, 2
  %2601 = icmp eq i32 %2600, 0
  %2602 = icmp slt i32 %2597, 10
  %2603 = or i1 %2601, %2602
  br i1 %2603, label %originalBB774, label %originalBB774alteredBB

originalBB774:                                    ; preds = %2595, %originalBB774alteredBB
  %2604 = load i32, i32* @x.35
  %2605 = load i32, i32* @y.36
  %2606 = sub i32 %2604, 1
  %2607 = mul i32 %2604, %2606
  %2608 = urem i32 %2607, 2
  %2609 = icmp eq i32 %2608, 0
  %2610 = icmp slt i32 %2605, 10
  %2611 = or i1 %2609, %2610
  br i1 %2611, label %originalBBpart2776, label %originalBB774alteredBB

originalBBpart2776:                               ; preds = %originalBB774
  br label %2612, !dbg !2066

2612:                                             ; preds = %originalBBpart2776
  %2613 = load i32, i32* @x.35
  %2614 = load i32, i32* @y.36
  %2615 = sub i32 %2613, 1
  %2616 = mul i32 %2613, %2615
  %2617 = urem i32 %2616, 2
  %2618 = icmp eq i32 %2617, 0
  %2619 = icmp slt i32 %2614, 10
  %2620 = or i1 %2618, %2619
  br i1 %2620, label %originalBB778, label %originalBB778alteredBB

originalBB778:                                    ; preds = %2612, %originalBB778alteredBB
  %2621 = load i64, i64* %29, align 8, !dbg !2067
  %2622 = load i64, i64* %20, align 8, !dbg !2067
  %2623 = icmp ult i64 %2621, %2622, !dbg !2067
  %2624 = load i32, i32* @x.35
  %2625 = load i32, i32* @y.36
  %2626 = sub i32 %2624, 1
  %2627 = mul i32 %2624, %2626
  %2628 = urem i32 %2627, 2
  %2629 = icmp eq i32 %2628, 0
  %2630 = icmp slt i32 %2625, 10
  %2631 = or i1 %2629, %2630
  br i1 %2631, label %originalBBpart2780, label %originalBB778alteredBB

originalBBpart2780:                               ; preds = %originalBB778
  br i1 %2623, label %2632, label %2652, !dbg !2070

2632:                                             ; preds = %originalBBpart2780
  %2633 = load i32, i32* @x.35
  %2634 = load i32, i32* @y.36
  %2635 = sub i32 %2633, 1
  %2636 = mul i32 %2633, %2635
  %2637 = urem i32 %2636, 2
  %2638 = icmp eq i32 %2637, 0
  %2639 = icmp slt i32 %2634, 10
  %2640 = or i1 %2638, %2639
  br i1 %2640, label %originalBB782, label %originalBB782alteredBB

originalBB782:                                    ; preds = %2632, %originalBB782alteredBB
  %2641 = load i8*, i8** %19, align 8, !dbg !2067
  %2642 = load i64, i64* %29, align 8, !dbg !2067
  %2643 = getelementptr inbounds i8, i8* %2641, i64 %2642, !dbg !2067
  store i8 92, i8* %2643, align 1, !dbg !2067
  %2644 = load i32, i32* @x.35
  %2645 = load i32, i32* @y.36
  %2646 = sub i32 %2644, 1
  %2647 = mul i32 %2644, %2646
  %2648 = urem i32 %2647, 2
  %2649 = icmp eq i32 %2648, 0
  %2650 = icmp slt i32 %2645, 10
  %2651 = or i1 %2649, %2650
  br i1 %2651, label %originalBBpart2784, label %originalBB782alteredBB

originalBBpart2784:                               ; preds = %originalBB782
  br label %2652, !dbg !2067

2652:                                             ; preds = %originalBBpart2784, %originalBBpart2780
  %2653 = load i32, i32* @x.35
  %2654 = load i32, i32* @y.36
  %2655 = sub i32 %2653, 1
  %2656 = mul i32 %2653, %2655
  %2657 = urem i32 %2656, 2
  %2658 = icmp eq i32 %2657, 0
  %2659 = icmp slt i32 %2654, 10
  %2660 = or i1 %2658, %2659
  br i1 %2660, label %originalBB786, label %originalBB786alteredBB

originalBB786:                                    ; preds = %2652, %originalBB786alteredBB
  %2661 = load i64, i64* %29, align 8, !dbg !2070
  %2662 = add i64 %2661, 1, !dbg !2070
  store i64 %2662, i64* %29, align 8, !dbg !2070
  %2663 = load i32, i32* @x.35
  %2664 = load i32, i32* @y.36
  %2665 = sub i32 %2663, 1
  %2666 = mul i32 %2663, %2665
  %2667 = urem i32 %2666, 2
  %2668 = icmp eq i32 %2667, 0
  %2669 = icmp slt i32 %2664, 10
  %2670 = or i1 %2668, %2669
  br i1 %2670, label %originalBBpart2803, label %originalBB786alteredBB

originalBBpart2803:                               ; preds = %originalBB786
  br label %2671, !dbg !2070

2671:                                             ; preds = %originalBBpart2803
  br label %2672, !dbg !2071

2672:                                             ; preds = %2671
  %2673 = load i32, i32* @x.35
  %2674 = load i32, i32* @y.36
  %2675 = sub i32 %2673, 1
  %2676 = mul i32 %2673, %2675
  %2677 = urem i32 %2676, 2
  %2678 = icmp eq i32 %2677, 0
  %2679 = icmp slt i32 %2674, 10
  %2680 = or i1 %2678, %2679
  br i1 %2680, label %originalBB805, label %originalBB805alteredBB

originalBB805:                                    ; preds = %2672, %originalBB805alteredBB
  %2681 = load i64, i64* %29, align 8, !dbg !2072
  %2682 = load i64, i64* %20, align 8, !dbg !2072
  %2683 = icmp ult i64 %2681, %2682, !dbg !2072
  %2684 = load i32, i32* @x.35
  %2685 = load i32, i32* @y.36
  %2686 = sub i32 %2684, 1
  %2687 = mul i32 %2684, %2686
  %2688 = urem i32 %2687, 2
  %2689 = icmp eq i32 %2688, 0
  %2690 = icmp slt i32 %2685, 10
  %2691 = or i1 %2689, %2690
  br i1 %2691, label %originalBBpart2807, label %originalBB805alteredBB

originalBBpart2807:                               ; preds = %originalBB805
  br i1 %2683, label %2692, label %2712, !dbg !2075

2692:                                             ; preds = %originalBBpart2807
  %2693 = load i32, i32* @x.35
  %2694 = load i32, i32* @y.36
  %2695 = sub i32 %2693, 1
  %2696 = mul i32 %2693, %2695
  %2697 = urem i32 %2696, 2
  %2698 = icmp eq i32 %2697, 0
  %2699 = icmp slt i32 %2694, 10
  %2700 = or i1 %2698, %2699
  br i1 %2700, label %originalBB809, label %originalBB809alteredBB

originalBB809:                                    ; preds = %2692, %originalBB809alteredBB
  %2701 = load i8*, i8** %19, align 8, !dbg !2072
  %2702 = load i64, i64* %29, align 8, !dbg !2072
  %2703 = getelementptr inbounds i8, i8* %2701, i64 %2702, !dbg !2072
  store i8 39, i8* %2703, align 1, !dbg !2072
  %2704 = load i32, i32* @x.35
  %2705 = load i32, i32* @y.36
  %2706 = sub i32 %2704, 1
  %2707 = mul i32 %2704, %2706
  %2708 = urem i32 %2707, 2
  %2709 = icmp eq i32 %2708, 0
  %2710 = icmp slt i32 %2705, 10
  %2711 = or i1 %2709, %2710
  br i1 %2711, label %originalBBpart2811, label %originalBB809alteredBB

originalBBpart2811:                               ; preds = %originalBB809
  br label %2712, !dbg !2072

2712:                                             ; preds = %originalBBpart2811, %originalBBpart2807
  %2713 = load i32, i32* @x.35
  %2714 = load i32, i32* @y.36
  %2715 = sub i32 %2713, 1
  %2716 = mul i32 %2713, %2715
  %2717 = urem i32 %2716, 2
  %2718 = icmp eq i32 %2717, 0
  %2719 = icmp slt i32 %2714, 10
  %2720 = or i1 %2718, %2719
  br i1 %2720, label %originalBB813, label %originalBB813alteredBB

originalBB813:                                    ; preds = %2712, %originalBB813alteredBB
  %2721 = load i64, i64* %29, align 8, !dbg !2075
  %2722 = add i64 %2721, 1, !dbg !2075
  store i64 %2722, i64* %29, align 8, !dbg !2075
  %2723 = load i32, i32* @x.35
  %2724 = load i32, i32* @y.36
  %2725 = sub i32 %2723, 1
  %2726 = mul i32 %2723, %2725
  %2727 = urem i32 %2726, 2
  %2728 = icmp eq i32 %2727, 0
  %2729 = icmp slt i32 %2724, 10
  %2730 = or i1 %2728, %2729
  br i1 %2730, label %originalBBpart2826, label %originalBB813alteredBB

originalBBpart2826:                               ; preds = %originalBB813
  br label %2731, !dbg !2075

2731:                                             ; preds = %originalBBpart2826
  %2732 = load i32, i32* @x.35
  %2733 = load i32, i32* @y.36
  %2734 = sub i32 %2732, 1
  %2735 = mul i32 %2732, %2734
  %2736 = urem i32 %2735, 2
  %2737 = icmp eq i32 %2736, 0
  %2738 = icmp slt i32 %2733, 10
  %2739 = or i1 %2737, %2738
  br i1 %2739, label %originalBB828, label %originalBB828alteredBB

originalBB828:                                    ; preds = %2731, %originalBB828alteredBB
  store i8 0, i8* %36, align 1, !dbg !2076
  %2740 = load i32, i32* @x.35
  %2741 = load i32, i32* @y.36
  %2742 = sub i32 %2740, 1
  %2743 = mul i32 %2740, %2742
  %2744 = urem i32 %2743, 2
  %2745 = icmp eq i32 %2744, 0
  %2746 = icmp slt i32 %2741, 10
  %2747 = or i1 %2745, %2746
  br i1 %2747, label %originalBBpart2830, label %originalBB828alteredBB

originalBBpart2830:                               ; preds = %originalBB828
  br label %2748, !dbg !2077

2748:                                             ; preds = %originalBBpart2830, %originalBBpart2752
  br label %4319, !dbg !2078

2749:                                             ; preds = %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212, %originalBBpart2212
  %2750 = load i32, i32* @x.35
  %2751 = load i32, i32* @y.36
  %2752 = sub i32 %2750, 1
  %2753 = mul i32 %2750, %2752
  %2754 = urem i32 %2753, 2
  %2755 = icmp eq i32 %2754, 0
  %2756 = icmp slt i32 %2751, 10
  %2757 = or i1 %2755, %2756
  br i1 %2757, label %originalBB832, label %originalBB832alteredBB

originalBB832:                                    ; preds = %2749, %originalBB832alteredBB
  store i8 1, i8* %43, align 1, !dbg !2079
  %2758 = load i32, i32* @x.35
  %2759 = load i32, i32* @y.36
  %2760 = sub i32 %2758, 1
  %2761 = mul i32 %2758, %2760
  %2762 = urem i32 %2761, 2
  %2763 = icmp eq i32 %2762, 0
  %2764 = icmp slt i32 %2759, 10
  %2765 = or i1 %2763, %2764
  br i1 %2765, label %originalBBpart2834, label %originalBB832alteredBB

originalBBpart2834:                               ; preds = %originalBB832
  br label %4319, !dbg !2080

2766:                                             ; preds = %originalBBpart2212
  call void @llvm.dbg.declare(metadata i64* %44, metadata !2081, metadata !DIExpression()), !dbg !2083
  call void @llvm.dbg.declare(metadata i8* %45, metadata !2084, metadata !DIExpression()), !dbg !2085
  %2767 = load i32, i32* @x.35
  %2768 = load i32, i32* @y.36
  %2769 = sub i32 %2767, 1
  %2770 = mul i32 %2767, %2769
  %2771 = urem i32 %2770, 2
  %2772 = icmp eq i32 %2771, 0
  %2773 = icmp slt i32 %2768, 10
  %2774 = or i1 %2772, %2773
  br i1 %2774, label %originalBB836, label %originalBB836alteredBB

originalBB836:                                    ; preds = %2766, %originalBB836alteredBB
  %2775 = load i8, i8* %34, align 1, !dbg !2086
  %2776 = trunc i8 %2775 to i1, !dbg !2086
  %2777 = load i32, i32* @x.35
  %2778 = load i32, i32* @y.36
  %2779 = sub i32 %2777, 1
  %2780 = mul i32 %2777, %2779
  %2781 = urem i32 %2780, 2
  %2782 = icmp eq i32 %2781, 0
  %2783 = icmp slt i32 %2778, 10
  %2784 = or i1 %2782, %2783
  br i1 %2784, label %originalBBpart2838, label %originalBB836alteredBB

originalBBpart2838:                               ; preds = %originalBB836
  br i1 %2776, label %2785, label %2813, !dbg !2088

2785:                                             ; preds = %originalBBpart2838
  %2786 = load i32, i32* @x.35
  %2787 = load i32, i32* @y.36
  %2788 = sub i32 %2786, 1
  %2789 = mul i32 %2786, %2788
  %2790 = urem i32 %2789, 2
  %2791 = icmp eq i32 %2790, 0
  %2792 = icmp slt i32 %2787, 10
  %2793 = or i1 %2791, %2792
  br i1 %2793, label %originalBB840, label %originalBB840alteredBB

originalBB840:                                    ; preds = %2785, %originalBB840alteredBB
  store i64 1, i64* %44, align 8, !dbg !2089
  %2794 = call i16** @__ctype_b_loc() #15, !dbg !2091
  %2795 = load i16*, i16** %2794, align 8, !dbg !2091
  %2796 = load i8, i8* %39, align 1, !dbg !2091
  %2797 = zext i8 %2796 to i32, !dbg !2091
  %2798 = sext i32 %2797 to i64, !dbg !2091
  %2799 = getelementptr inbounds i16, i16* %2795, i64 %2798, !dbg !2091
  %2800 = load i16, i16* %2799, align 2, !dbg !2091
  %2801 = zext i16 %2800 to i32, !dbg !2091
  %2802 = and i32 %2801, 16384, !dbg !2091
  %2803 = icmp ne i32 %2802, 0, !dbg !2092
  %2804 = zext i1 %2803 to i8, !dbg !2093
  store i8 %2804, i8* %45, align 1, !dbg !2093
  %2805 = load i32, i32* @x.35
  %2806 = load i32, i32* @y.36
  %2807 = sub i32 %2805, 1
  %2808 = mul i32 %2805, %2807
  %2809 = urem i32 %2808, 2
  %2810 = icmp eq i32 %2809, 0
  %2811 = icmp slt i32 %2806, 10
  %2812 = or i1 %2810, %2811
  br i1 %2812, label %originalBBpart2846, label %originalBB840alteredBB

originalBBpart2846:                               ; preds = %originalBB840
  br label %3318, !dbg !2094

2813:                                             ; preds = %originalBBpart2838
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %46, metadata !2095, metadata !DIExpression()), !dbg !2112
  %2814 = load i32, i32* @x.35
  %2815 = load i32, i32* @y.36
  %2816 = sub i32 %2814, 1
  %2817 = mul i32 %2814, %2816
  %2818 = urem i32 %2817, 2
  %2819 = icmp eq i32 %2818, 0
  %2820 = icmp slt i32 %2815, 10
  %2821 = or i1 %2819, %2820
  br i1 %2821, label %originalBB848, label %originalBB848alteredBB

originalBB848:                                    ; preds = %2813, %originalBB848alteredBB
  %2822 = bitcast %struct.__mbstate_t* %46 to i8*, !dbg !2113
  call void @llvm.memset.p0i8.i64(i8* align 4 %2822, i8 0, i64 8, i1 false), !dbg !2113
  store i64 0, i64* %44, align 8, !dbg !2114
  store i8 1, i8* %45, align 1, !dbg !2115
  %2823 = load i64, i64* %22, align 8, !dbg !2116
  %2824 = trunc i64 %2823 to i32
  %2825 = mul i32 %2824, -2
  %2826 = mul i32 %2825, %2825
  %2827 = sub i32 %2826, %2825
  %2828 = srem i32 %2827, 2
  %2829 = icmp ne i32 %2828, 0
  %2830 = load i32, i32* @x.35
  %2831 = load i32, i32* @y.36
  %2832 = sub i32 %2830, 1
  %2833 = mul i32 %2830, %2832
  %2834 = urem i32 %2833, 2
  %2835 = icmp eq i32 %2834, 0
  %2836 = icmp slt i32 %2831, 10
  %2837 = or i1 %2835, %2836
  br i1 %2837, label %originalBBpart2882, label %originalBB848alteredBB

originalBBpart2882:                               ; preds = %originalBB848
  br i1 %2829, label %2838, label %2855

2838:                                             ; preds = %originalBBpart2882
  %2839 = load i32, i32* @x.35
  %2840 = load i32, i32* @y.36
  %2841 = sub i32 %2839, 1
  %2842 = mul i32 %2839, %2841
  %2843 = urem i32 %2842, 2
  %2844 = icmp eq i32 %2843, 0
  %2845 = icmp slt i32 %2840, 10
  %2846 = or i1 %2844, %2845
  br i1 %2846, label %originalBB884, label %originalBB884alteredBB

originalBB884:                                    ; preds = %2838, %originalBB884alteredBB
  %2847 = load i32, i32* @x.35
  %2848 = load i32, i32* @y.36
  %2849 = sub i32 %2847, 1
  %2850 = mul i32 %2847, %2849
  %2851 = urem i32 %2850, 2
  %2852 = icmp eq i32 %2851, 0
  %2853 = icmp slt i32 %2848, 10
  %2854 = or i1 %2852, %2853
  br i1 %2854, label %originalBBpart2886, label %originalBB884alteredBB

originalBBpart2886:                               ; preds = %originalBB884
  ret i64 0

2855:                                             ; preds = %originalBBpart2882
  %2856 = load i32, i32* @x.35
  %2857 = load i32, i32* @y.36
  %2858 = sub i32 %2856, 1
  %2859 = mul i32 %2856, %2858
  %2860 = urem i32 %2859, 2
  %2861 = icmp eq i32 %2860, 0
  %2862 = icmp slt i32 %2857, 10
  %2863 = or i1 %2861, %2862
  br i1 %2863, label %originalBB888, label %originalBB888alteredBB

originalBB888:                                    ; preds = %2855, %originalBB888alteredBB
  %2864 = icmp eq i64 %2823, -1, !dbg !2118
  %2865 = load i32, i32* @x.35
  %2866 = load i32, i32* @y.36
  %2867 = sub i32 %2865, 1
  %2868 = mul i32 %2865, %2867
  %2869 = urem i32 %2868, 2
  %2870 = icmp eq i32 %2869, 0
  %2871 = icmp slt i32 %2866, 10
  %2872 = or i1 %2870, %2871
  br i1 %2872, label %originalBBpart2890, label %originalBB888alteredBB

originalBBpart2890:                               ; preds = %originalBB888
  br i1 %2864, label %2873, label %2876, !dbg !2119

2873:                                             ; preds = %originalBBpart2890
  %2874 = load i8*, i8** %21, align 8, !dbg !2120
  %2875 = call i64 @strlen(i8* %2874) #13, !dbg !2121
  store i64 %2875, i64* %22, align 8, !dbg !2122
  br label %2876, !dbg !2123

2876:                                             ; preds = %2873, %originalBBpart2890
  %2877 = load i32, i32* @x.35
  %2878 = load i32, i32* @y.36
  %2879 = sub i32 %2877, 1
  %2880 = mul i32 %2877, %2879
  %2881 = urem i32 %2880, 2
  %2882 = icmp eq i32 %2881, 0
  %2883 = icmp slt i32 %2878, 10
  %2884 = or i1 %2882, %2883
  br i1 %2884, label %originalBB892, label %originalBB892alteredBB

originalBB892:                                    ; preds = %2876, %originalBB892alteredBB
  %2885 = load i32, i32* @x.35
  %2886 = load i32, i32* @y.36
  %2887 = sub i32 %2885, 1
  %2888 = mul i32 %2885, %2887
  %2889 = urem i32 %2888, 2
  %2890 = icmp eq i32 %2889, 0
  %2891 = icmp slt i32 %2886, 10
  %2892 = or i1 %2890, %2891
  br i1 %2892, label %originalBBpart2894, label %originalBB892alteredBB

originalBBpart2894:                               ; preds = %originalBB892
  br label %2893, !dbg !2124

2893:                                             ; preds = %3297, %originalBBpart2894
  call void @llvm.dbg.declare(metadata i32* %47, metadata !2125, metadata !DIExpression()), !dbg !2128
  call void @llvm.dbg.declare(metadata i64* %48, metadata !2129, metadata !DIExpression()), !dbg !2130
  %2894 = load i32, i32* @x.35
  %2895 = load i32, i32* @y.36
  %2896 = sub i32 %2894, 1
  %2897 = mul i32 %2894, %2896
  %2898 = urem i32 %2897, 2
  %2899 = icmp eq i32 %2898, 0
  %2900 = icmp slt i32 %2895, 10
  %2901 = or i1 %2899, %2900
  br i1 %2901, label %originalBB896, label %originalBB896alteredBB

originalBB896:                                    ; preds = %2893, %originalBB896alteredBB
  %2902 = load i8*, i8** %21, align 8, !dbg !2131
  %2903 = load i64, i64* %28, align 8, !dbg !2132
  %2904 = load i64, i64* %44, align 8, !dbg !2133
  %2905 = add i64 %2903, %2904, !dbg !2134
  %2906 = getelementptr inbounds i8, i8* %2902, i64 %2905, !dbg !2131
  %2907 = load i64, i64* %22, align 8, !dbg !2135
  %2908 = load i64, i64* %28, align 8, !dbg !2136
  %2909 = load i64, i64* %44, align 8, !dbg !2137
  %2910 = add i64 %2908, %2909, !dbg !2138
  %2911 = sub i64 %2907, %2910, !dbg !2139
  %2912 = call i64 @rpl_mbrtowc(i32* %47, i8* %2906, i64 %2911, %struct.__mbstate_t* %46), !dbg !2140
  store i64 %2912, i64* %48, align 8, !dbg !2130
  %2913 = load i64, i64* %48, align 8, !dbg !2141
  %2914 = icmp eq i64 %2913, 0, !dbg !2143
  %2915 = load i32, i32* @x.35
  %2916 = load i32, i32* @y.36
  %2917 = sub i32 %2915, 1
  %2918 = mul i32 %2915, %2917
  %2919 = urem i32 %2918, 2
  %2920 = icmp eq i32 %2919, 0
  %2921 = icmp slt i32 %2916, 10
  %2922 = or i1 %2920, %2921
  br i1 %2922, label %originalBBpart2924, label %originalBB896alteredBB

originalBBpart2924:                               ; preds = %originalBB896
  br i1 %2914, label %2923, label %2940, !dbg !2144

2923:                                             ; preds = %originalBBpart2924
  %2924 = load i32, i32* @x.35
  %2925 = load i32, i32* @y.36
  %2926 = sub i32 %2924, 1
  %2927 = mul i32 %2924, %2926
  %2928 = urem i32 %2927, 2
  %2929 = icmp eq i32 %2928, 0
  %2930 = icmp slt i32 %2925, 10
  %2931 = or i1 %2929, %2930
  br i1 %2931, label %originalBB926, label %originalBB926alteredBB

originalBB926:                                    ; preds = %2923, %originalBB926alteredBB
  %2932 = load i32, i32* @x.35
  %2933 = load i32, i32* @y.36
  %2934 = sub i32 %2932, 1
  %2935 = mul i32 %2932, %2934
  %2936 = urem i32 %2935, 2
  %2937 = icmp eq i32 %2936, 0
  %2938 = icmp slt i32 %2933, 10
  %2939 = or i1 %2937, %2938
  br i1 %2939, label %originalBBpart2928, label %originalBB926alteredBB

originalBBpart2928:                               ; preds = %originalBB926
  br label %3301, !dbg !2145

2940:                                             ; preds = %originalBBpart2924
  %2941 = load i64, i64* %48, align 8, !dbg !2146
  %2942 = icmp eq i64 %2941, -1, !dbg !2148
  br i1 %2942, label %2943, label %2960, !dbg !2149

2943:                                             ; preds = %2940
  %2944 = load i32, i32* @x.35
  %2945 = load i32, i32* @y.36
  %2946 = sub i32 %2944, 1
  %2947 = mul i32 %2944, %2946
  %2948 = urem i32 %2947, 2
  %2949 = icmp eq i32 %2948, 0
  %2950 = icmp slt i32 %2945, 10
  %2951 = or i1 %2949, %2950
  br i1 %2951, label %originalBB930, label %originalBB930alteredBB

originalBB930:                                    ; preds = %2943, %originalBB930alteredBB
  store i8 0, i8* %45, align 1, !dbg !2150
  %2952 = load i32, i32* @x.35
  %2953 = load i32, i32* @y.36
  %2954 = sub i32 %2952, 1
  %2955 = mul i32 %2952, %2954
  %2956 = urem i32 %2955, 2
  %2957 = icmp eq i32 %2956, 0
  %2958 = icmp slt i32 %2953, 10
  %2959 = or i1 %2957, %2958
  br i1 %2959, label %originalBBpart2932, label %originalBB930alteredBB

originalBBpart2932:                               ; preds = %originalBB930
  br label %3301, !dbg !2152

2960:                                             ; preds = %2940
  %2961 = load i32, i32* @x.35
  %2962 = load i32, i32* @y.36
  %2963 = sub i32 %2961, 1
  %2964 = mul i32 %2961, %2963
  %2965 = urem i32 %2964, 2
  %2966 = icmp eq i32 %2965, 0
  %2967 = icmp slt i32 %2962, 10
  %2968 = or i1 %2966, %2967
  br i1 %2968, label %originalBB934, label %originalBB934alteredBB

originalBB934:                                    ; preds = %2960, %originalBB934alteredBB
  %2969 = load i64, i64* %48, align 8, !dbg !2153
  %2970 = icmp eq i64 %2969, -2, !dbg !2155
  %2971 = load i32, i32* @x.35
  %2972 = load i32, i32* @y.36
  %2973 = sub i32 %2971, 1
  %2974 = mul i32 %2971, %2973
  %2975 = urem i32 %2974, 2
  %2976 = icmp eq i32 %2975, 0
  %2977 = icmp slt i32 %2972, 10
  %2978 = or i1 %2976, %2977
  br i1 %2978, label %originalBBpart2936, label %originalBB934alteredBB

originalBBpart2936:                               ; preds = %originalBB934
  br i1 %2970, label %2979, label %3097, !dbg !2156

2979:                                             ; preds = %originalBBpart2936
  %2980 = load i32, i32* @x.35
  %2981 = load i32, i32* @y.36
  %2982 = sub i32 %2980, 1
  %2983 = mul i32 %2980, %2982
  %2984 = urem i32 %2983, 2
  %2985 = icmp eq i32 %2984, 0
  %2986 = icmp slt i32 %2981, 10
  %2987 = or i1 %2985, %2986
  br i1 %2987, label %originalBB938, label %originalBB938alteredBB

originalBB938:                                    ; preds = %2979, %originalBB938alteredBB
  store i8 0, i8* %45, align 1, !dbg !2157
  %2988 = load i32, i32* @x.35
  %2989 = load i32, i32* @y.36
  %2990 = sub i32 %2988, 1
  %2991 = mul i32 %2988, %2990
  %2992 = urem i32 %2991, 2
  %2993 = icmp eq i32 %2992, 0
  %2994 = icmp slt i32 %2989, 10
  %2995 = or i1 %2993, %2994
  br i1 %2995, label %originalBBpart2940, label %originalBB938alteredBB

originalBBpart2940:                               ; preds = %originalBB938
  br label %2996, !dbg !2159

2996:                                             ; preds = %originalBBpart2979, %originalBBpart2940
  %2997 = load i32, i32* @x.35
  %2998 = load i32, i32* @y.36
  %2999 = sub i32 %2997, 1
  %3000 = mul i32 %2997, %2999
  %3001 = urem i32 %3000, 2
  %3002 = icmp eq i32 %3001, 0
  %3003 = icmp slt i32 %2998, 10
  %3004 = or i1 %3002, %3003
  br i1 %3004, label %originalBB942, label %originalBB942alteredBB

originalBB942:                                    ; preds = %2996, %originalBB942alteredBB
  %3005 = load i64, i64* %28, align 8, !dbg !2160
  %3006 = load i64, i64* %44, align 8, !dbg !2161
  %3007 = add i64 %3005, %3006, !dbg !2162
  %3008 = load i64, i64* %22, align 8, !dbg !2163
  %3009 = icmp ult i64 %3007, %3008, !dbg !2164
  %3010 = load i32, i32* @x.35
  %3011 = load i32, i32* @y.36
  %3012 = sub i32 %3010, 1
  %3013 = mul i32 %3010, %3012
  %3014 = urem i32 %3013, 2
  %3015 = icmp eq i32 %3014, 0
  %3016 = icmp slt i32 %3011, 10
  %3017 = or i1 %3015, %3016
  br i1 %3017, label %originalBBpart2948, label %originalBB942alteredBB

originalBBpart2948:                               ; preds = %originalBB942
  br i1 %3009, label %3018, label %3043, !dbg !2165

3018:                                             ; preds = %originalBBpart2948
  %3019 = load i32, i32* @x.35
  %3020 = load i32, i32* @y.36
  %3021 = sub i32 %3019, 1
  %3022 = mul i32 %3019, %3021
  %3023 = urem i32 %3022, 2
  %3024 = icmp eq i32 %3023, 0
  %3025 = icmp slt i32 %3020, 10
  %3026 = or i1 %3024, %3025
  br i1 %3026, label %originalBB950, label %originalBB950alteredBB

originalBB950:                                    ; preds = %3018, %originalBB950alteredBB
  %3027 = load i8*, i8** %21, align 8, !dbg !2166
  %3028 = load i64, i64* %28, align 8, !dbg !2167
  %3029 = load i64, i64* %44, align 8, !dbg !2168
  %3030 = add i64 %3028, %3029, !dbg !2169
  %3031 = getelementptr inbounds i8, i8* %3027, i64 %3030, !dbg !2166
  %3032 = load i8, i8* %3031, align 1, !dbg !2166
  %3033 = sext i8 %3032 to i32, !dbg !2166
  %3034 = icmp ne i32 %3033, 0, !dbg !2165
  %3035 = load i32, i32* @x.35
  %3036 = load i32, i32* @y.36
  %3037 = sub i32 %3035, 1
  %3038 = mul i32 %3035, %3037
  %3039 = urem i32 %3038, 2
  %3040 = icmp eq i32 %3039, 0
  %3041 = icmp slt i32 %3036, 10
  %3042 = or i1 %3040, %3041
  br i1 %3042, label %originalBBpart2965, label %originalBB950alteredBB

originalBBpart2965:                               ; preds = %originalBB950
  br label %3043

3043:                                             ; preds = %originalBBpart2965, %originalBBpart2948
  %3044 = phi i1 [ false, %originalBBpart2948 ], [ %3034, %originalBBpart2965 ], !dbg !2170
  %3045 = load i32, i32* @x.35
  %3046 = load i32, i32* @y.36
  %3047 = sub i32 %3045, 1
  %3048 = mul i32 %3045, %3047
  %3049 = urem i32 %3048, 2
  %3050 = icmp eq i32 %3049, 0
  %3051 = icmp slt i32 %3046, 10
  %3052 = or i1 %3050, %3051
  br i1 %3052, label %originalBB967, label %originalBB967alteredBB

originalBB967:                                    ; preds = %3043, %originalBB967alteredBB
  %3053 = load i32, i32* @x.35
  %3054 = load i32, i32* @y.36
  %3055 = sub i32 %3053, 1
  %3056 = mul i32 %3053, %3055
  %3057 = urem i32 %3056, 2
  %3058 = icmp eq i32 %3057, 0
  %3059 = icmp slt i32 %3054, 10
  %3060 = or i1 %3058, %3059
  br i1 %3060, label %originalBBpart2969, label %originalBB967alteredBB

originalBBpart2969:                               ; preds = %originalBB967
  br i1 %3044, label %3061, label %3080, !dbg !2159

3061:                                             ; preds = %originalBBpart2969
  %3062 = load i32, i32* @x.35
  %3063 = load i32, i32* @y.36
  %3064 = sub i32 %3062, 1
  %3065 = mul i32 %3062, %3064
  %3066 = urem i32 %3065, 2
  %3067 = icmp eq i32 %3066, 0
  %3068 = icmp slt i32 %3063, 10
  %3069 = or i1 %3067, %3068
  br i1 %3069, label %originalBB971, label %originalBB971alteredBB

originalBB971:                                    ; preds = %3061, %originalBB971alteredBB
  %3070 = load i64, i64* %44, align 8, !dbg !2171
  %3071 = add i64 %3070, 1, !dbg !2171
  store i64 %3071, i64* %44, align 8, !dbg !2171
  %3072 = load i32, i32* @x.35
  %3073 = load i32, i32* @y.36
  %3074 = sub i32 %3072, 1
  %3075 = mul i32 %3072, %3074
  %3076 = urem i32 %3075, 2
  %3077 = icmp eq i32 %3076, 0
  %3078 = icmp slt i32 %3073, 10
  %3079 = or i1 %3077, %3078
  br i1 %3079, label %originalBBpart2979, label %originalBB971alteredBB

originalBBpart2979:                               ; preds = %originalBB971
  br label %2996, !dbg !2159, !llvm.loop !2172

3080:                                             ; preds = %originalBBpart2969
  %3081 = load i32, i32* @x.35
  %3082 = load i32, i32* @y.36
  %3083 = sub i32 %3081, 1
  %3084 = mul i32 %3081, %3083
  %3085 = urem i32 %3084, 2
  %3086 = icmp eq i32 %3085, 0
  %3087 = icmp slt i32 %3082, 10
  %3088 = or i1 %3086, %3087
  br i1 %3088, label %originalBB981, label %originalBB981alteredBB

originalBB981:                                    ; preds = %3080, %originalBB981alteredBB
  %3089 = load i32, i32* @x.35
  %3090 = load i32, i32* @y.36
  %3091 = sub i32 %3089, 1
  %3092 = mul i32 %3089, %3091
  %3093 = urem i32 %3092, 2
  %3094 = icmp eq i32 %3093, 0
  %3095 = icmp slt i32 %3090, 10
  %3096 = or i1 %3094, %3095
  br i1 %3096, label %originalBBpart2983, label %originalBB981alteredBB

originalBBpart2983:                               ; preds = %originalBB981
  br label %3301, !dbg !2173

3097:                                             ; preds = %originalBBpart2936
  %3098 = load i32, i32* @x.35
  %3099 = load i32, i32* @y.36
  %3100 = sub i32 %3098, 1
  %3101 = mul i32 %3098, %3100
  %3102 = urem i32 %3101, 2
  %3103 = icmp eq i32 %3102, 0
  %3104 = icmp slt i32 %3099, 10
  %3105 = or i1 %3103, %3104
  br i1 %3105, label %originalBB985, label %originalBB985alteredBB

originalBB985:                                    ; preds = %3097, %originalBB985alteredBB
  %3106 = load i8, i8* %35, align 1, !dbg !2174
  %3107 = trunc i8 %3106 to i1, !dbg !2174
  %3108 = load i32, i32* @x.35
  %3109 = load i32, i32* @y.36
  %3110 = sub i32 %3108, 1
  %3111 = mul i32 %3108, %3110
  %3112 = urem i32 %3111, 2
  %3113 = icmp eq i32 %3112, 0
  %3114 = icmp slt i32 %3109, 10
  %3115 = or i1 %3113, %3114
  br i1 %3115, label %originalBBpart2987, label %originalBB985alteredBB

originalBBpart2987:                               ; preds = %originalBB985
  br i1 %3107, label %3116, label %3205, !dbg !2177

3116:                                             ; preds = %originalBBpart2987
  %3117 = load i32, i32* %23, align 4, !dbg !2178
  %3118 = icmp eq i32 %3117, 2, !dbg !2179
  br i1 %3118, label %3119, label %3205, !dbg !2180

3119:                                             ; preds = %3116
  call void @llvm.dbg.declare(metadata i64* %49, metadata !2181, metadata !DIExpression()), !dbg !2183
  %3120 = load i32, i32* @x.35
  %3121 = load i32, i32* @y.36
  %3122 = sub i32 %3120, 1
  %3123 = mul i32 %3120, %3122
  %3124 = urem i32 %3123, 2
  %3125 = icmp eq i32 %3124, 0
  %3126 = icmp slt i32 %3121, 10
  %3127 = or i1 %3125, %3126
  br i1 %3127, label %originalBB989, label %originalBB989alteredBB

originalBB989:                                    ; preds = %3119, %originalBB989alteredBB
  store i64 1, i64* %49, align 8, !dbg !2184
  %3128 = load i32, i32* @x.35
  %3129 = load i32, i32* @y.36
  %3130 = sub i32 %3128, 1
  %3131 = mul i32 %3128, %3130
  %3132 = urem i32 %3131, 2
  %3133 = icmp eq i32 %3132, 0
  %3134 = icmp slt i32 %3129, 10
  %3135 = or i1 %3133, %3134
  br i1 %3135, label %originalBBpart2991, label %originalBB989alteredBB

originalBBpart2991:                               ; preds = %originalBB989
  br label %3136, !dbg !2186

3136:                                             ; preds = %3201, %originalBBpart2991
  %3137 = load i32, i32* @x.35
  %3138 = load i32, i32* @y.36
  %3139 = sub i32 %3137, 1
  %3140 = mul i32 %3137, %3139
  %3141 = urem i32 %3140, 2
  %3142 = icmp eq i32 %3141, 0
  %3143 = icmp slt i32 %3138, 10
  %3144 = or i1 %3142, %3143
  br i1 %3144, label %originalBB993, label %originalBB993alteredBB

originalBB993:                                    ; preds = %3136, %originalBB993alteredBB
  %3145 = load i64, i64* %49, align 8, !dbg !2187
  %3146 = load i64, i64* %48, align 8, !dbg !2189
  %3147 = icmp ult i64 %3145, %3146, !dbg !2190
  %3148 = load i32, i32* @x.35
  %3149 = load i32, i32* @y.36
  %3150 = sub i32 %3148, 1
  %3151 = mul i32 %3148, %3150
  %3152 = urem i32 %3151, 2
  %3153 = icmp eq i32 %3152, 0
  %3154 = icmp slt i32 %3149, 10
  %3155 = or i1 %3153, %3154
  br i1 %3155, label %originalBBpart2995, label %originalBB993alteredBB

originalBBpart2995:                               ; preds = %originalBB993
  br i1 %3147, label %3156, label %3204, !dbg !2191

3156:                                             ; preds = %originalBBpart2995
  %3157 = load i8*, i8** %21, align 8, !dbg !2192
  %3158 = load i64, i64* %28, align 8, !dbg !2193
  %3159 = load i64, i64* %44, align 8, !dbg !2194
  %3160 = add i64 %3158, %3159, !dbg !2195
  %3161 = load i64, i64* %49, align 8, !dbg !2196
  %3162 = add i64 %3160, %3161, !dbg !2197
  %3163 = getelementptr inbounds i8, i8* %3157, i64 %3162, !dbg !2192
  %3164 = load i8, i8* %3163, align 1, !dbg !2192
  %3165 = sext i8 %3164 to i32, !dbg !2192
  switch i32 %3165, label %3183 [
    i32 91, label %3166
    i32 92, label %3166
    i32 94, label %3166
    i32 96, label %3166
    i32 124, label %3166
  ], !dbg !2198

3166:                                             ; preds = %3156, %3156, %3156, %3156, %3156
  %3167 = load i32, i32* @x.35
  %3168 = load i32, i32* @y.36
  %3169 = sub i32 %3167, 1
  %3170 = mul i32 %3167, %3169
  %3171 = urem i32 %3170, 2
  %3172 = icmp eq i32 %3171, 0
  %3173 = icmp slt i32 %3168, 10
  %3174 = or i1 %3172, %3173
  br i1 %3174, label %originalBB997, label %originalBB997alteredBB

originalBB997:                                    ; preds = %3166, %originalBB997alteredBB
  %3175 = load i32, i32* @x.35
  %3176 = load i32, i32* @y.36
  %3177 = sub i32 %3175, 1
  %3178 = mul i32 %3175, %3177
  %3179 = urem i32 %3178, 2
  %3180 = icmp eq i32 %3179, 0
  %3181 = icmp slt i32 %3176, 10
  %3182 = or i1 %3180, %3181
  br i1 %3182, label %originalBBpart2999, label %originalBB997alteredBB

originalBBpart2999:                               ; preds = %originalBB997
  br label %5413, !dbg !2199

3183:                                             ; preds = %3156
  %3184 = load i32, i32* @x.35
  %3185 = load i32, i32* @y.36
  %3186 = sub i32 %3184, 1
  %3187 = mul i32 %3184, %3186
  %3188 = urem i32 %3187, 2
  %3189 = icmp eq i32 %3188, 0
  %3190 = icmp slt i32 %3185, 10
  %3191 = or i1 %3189, %3190
  br i1 %3191, label %originalBB1001, label %originalBB1001alteredBB

originalBB1001:                                   ; preds = %3183, %originalBB1001alteredBB
  %3192 = load i32, i32* @x.35
  %3193 = load i32, i32* @y.36
  %3194 = sub i32 %3192, 1
  %3195 = mul i32 %3192, %3194
  %3196 = urem i32 %3195, 2
  %3197 = icmp eq i32 %3196, 0
  %3198 = icmp slt i32 %3193, 10
  %3199 = or i1 %3197, %3198
  br i1 %3199, label %originalBBpart21003, label %originalBB1001alteredBB

originalBBpart21003:                              ; preds = %originalBB1001
  br label %3200, !dbg !2201

3200:                                             ; preds = %originalBBpart21003
  br label %3201, !dbg !2202

3201:                                             ; preds = %3200
  %3202 = load i64, i64* %49, align 8, !dbg !2203
  %3203 = add i64 %3202, 1, !dbg !2203
  store i64 %3203, i64* %49, align 8, !dbg !2203
  br label %3136, !dbg !2204, !llvm.loop !2205

3204:                                             ; preds = %originalBBpart2995
  br label %3205, !dbg !2207

3205:                                             ; preds = %3204, %3116, %originalBBpart2987
  %3206 = load i32, i32* @x.35
  %3207 = load i32, i32* @y.36
  %3208 = sub i32 %3206, 1
  %3209 = mul i32 %3206, %3208
  %3210 = urem i32 %3209, 2
  %3211 = icmp eq i32 %3210, 0
  %3212 = icmp slt i32 %3207, 10
  %3213 = or i1 %3211, %3212
  br i1 %3213, label %originalBB1005, label %originalBB1005alteredBB

originalBB1005:                                   ; preds = %3205, %originalBB1005alteredBB
  %3214 = load i32, i32* %47, align 4, !dbg !2208
  %3215 = call i32 @iswprint(i32 %3214) #10, !dbg !2210
  %3216 = icmp ne i32 %3215, 0, !dbg !2210
  %3217 = load i32, i32* @x.35
  %3218 = load i32, i32* @y.36
  %3219 = sub i32 %3217, 1
  %3220 = mul i32 %3217, %3219
  %3221 = urem i32 %3220, 2
  %3222 = icmp eq i32 %3221, 0
  %3223 = icmp slt i32 %3218, 10
  %3224 = or i1 %3222, %3223
  br i1 %3224, label %originalBBpart21007, label %originalBB1005alteredBB

originalBBpart21007:                              ; preds = %originalBB1005
  br i1 %3216, label %3242, label %3225, !dbg !2211

3225:                                             ; preds = %originalBBpart21007
  %3226 = load i32, i32* @x.35
  %3227 = load i32, i32* @y.36
  %3228 = sub i32 %3226, 1
  %3229 = mul i32 %3226, %3228
  %3230 = urem i32 %3229, 2
  %3231 = icmp eq i32 %3230, 0
  %3232 = icmp slt i32 %3227, 10
  %3233 = or i1 %3231, %3232
  br i1 %3233, label %originalBB1009, label %originalBB1009alteredBB

originalBB1009:                                   ; preds = %3225, %originalBB1009alteredBB
  store i8 0, i8* %45, align 1, !dbg !2212
  %3234 = load i32, i32* @x.35
  %3235 = load i32, i32* @y.36
  %3236 = sub i32 %3234, 1
  %3237 = mul i32 %3234, %3236
  %3238 = urem i32 %3237, 2
  %3239 = icmp eq i32 %3238, 0
  %3240 = icmp slt i32 %3235, 10
  %3241 = or i1 %3239, %3240
  br i1 %3241, label %originalBBpart21011, label %originalBB1009alteredBB

originalBBpart21011:                              ; preds = %originalBB1009
  br label %3242, !dbg !2213

3242:                                             ; preds = %originalBBpart21011, %originalBBpart21007
  %3243 = load i32, i32* @x.35
  %3244 = load i32, i32* @y.36
  %3245 = sub i32 %3243, 1
  %3246 = mul i32 %3243, %3245
  %3247 = urem i32 %3246, 2
  %3248 = icmp eq i32 %3247, 0
  %3249 = icmp slt i32 %3244, 10
  %3250 = or i1 %3248, %3249
  br i1 %3250, label %originalBB1013, label %originalBB1013alteredBB

originalBB1013:                                   ; preds = %3242, %originalBB1013alteredBB
  %3251 = load i64, i64* %48, align 8, !dbg !2214
  %3252 = load i64, i64* %44, align 8, !dbg !2215
  %3253 = add i64 %3252, %3251, !dbg !2215
  store i64 %3253, i64* %44, align 8, !dbg !2215
  %3254 = load i32, i32* @x.35
  %3255 = load i32, i32* @y.36
  %3256 = sub i32 %3254, 1
  %3257 = mul i32 %3254, %3256
  %3258 = urem i32 %3257, 2
  %3259 = icmp eq i32 %3258, 0
  %3260 = icmp slt i32 %3255, 10
  %3261 = or i1 %3259, %3260
  br i1 %3261, label %originalBBpart21020, label %originalBB1013alteredBB

originalBBpart21020:                              ; preds = %originalBB1013
  br label %3262

3262:                                             ; preds = %originalBBpart21020
  br label %3263

3263:                                             ; preds = %3262
  %3264 = load i32, i32* @x.35
  %3265 = load i32, i32* @y.36
  %3266 = sub i32 %3264, 1
  %3267 = mul i32 %3264, %3266
  %3268 = urem i32 %3267, 2
  %3269 = icmp eq i32 %3268, 0
  %3270 = icmp slt i32 %3265, 10
  %3271 = or i1 %3269, %3270
  br i1 %3271, label %originalBB1022, label %originalBB1022alteredBB

originalBB1022:                                   ; preds = %3263, %originalBB1022alteredBB
  %3272 = load i32, i32* @x.35
  %3273 = load i32, i32* @y.36
  %3274 = sub i32 %3272, 1
  %3275 = mul i32 %3272, %3274
  %3276 = urem i32 %3275, 2
  %3277 = icmp eq i32 %3276, 0
  %3278 = icmp slt i32 %3273, 10
  %3279 = or i1 %3277, %3278
  br i1 %3279, label %originalBBpart21024, label %originalBB1022alteredBB

originalBBpart21024:                              ; preds = %originalBB1022
  br label %3280

3280:                                             ; preds = %originalBBpart21024
  %3281 = load i32, i32* @x.35
  %3282 = load i32, i32* @y.36
  %3283 = sub i32 %3281, 1
  %3284 = mul i32 %3281, %3283
  %3285 = urem i32 %3284, 2
  %3286 = icmp eq i32 %3285, 0
  %3287 = icmp slt i32 %3282, 10
  %3288 = or i1 %3286, %3287
  br i1 %3288, label %originalBB1026, label %originalBB1026alteredBB

originalBB1026:                                   ; preds = %3280, %originalBB1026alteredBB
  %3289 = load i32, i32* @x.35
  %3290 = load i32, i32* @y.36
  %3291 = sub i32 %3289, 1
  %3292 = mul i32 %3289, %3291
  %3293 = urem i32 %3292, 2
  %3294 = icmp eq i32 %3293, 0
  %3295 = icmp slt i32 %3290, 10
  %3296 = or i1 %3294, %3295
  br i1 %3296, label %originalBBpart21028, label %originalBB1026alteredBB

originalBBpart21028:                              ; preds = %originalBB1026
  br label %3297, !dbg !2216

3297:                                             ; preds = %originalBBpart21028
  %3298 = call i32 @mbsinit(%struct.__mbstate_t* %46) #13, !dbg !2217
  %3299 = icmp ne i32 %3298, 0, !dbg !2218
  %3300 = xor i1 %3299, true, !dbg !2218
  br i1 %3300, label %2893, label %3301, !dbg !2216, !llvm.loop !2219

3301:                                             ; preds = %3297, %originalBBpart2983, %originalBBpart2932, %originalBBpart2928
  %3302 = load i32, i32* @x.35
  %3303 = load i32, i32* @y.36
  %3304 = sub i32 %3302, 1
  %3305 = mul i32 %3302, %3304
  %3306 = urem i32 %3305, 2
  %3307 = icmp eq i32 %3306, 0
  %3308 = icmp slt i32 %3303, 10
  %3309 = or i1 %3307, %3308
  br i1 %3309, label %originalBB1030, label %originalBB1030alteredBB

originalBB1030:                                   ; preds = %3301, %originalBB1030alteredBB
  %3310 = load i32, i32* @x.35
  %3311 = load i32, i32* @y.36
  %3312 = sub i32 %3310, 1
  %3313 = mul i32 %3310, %3312
  %3314 = urem i32 %3313, 2
  %3315 = icmp eq i32 %3314, 0
  %3316 = icmp slt i32 %3311, 10
  %3317 = or i1 %3315, %3316
  br i1 %3317, label %originalBBpart21032, label %originalBB1030alteredBB

originalBBpart21032:                              ; preds = %originalBB1030
  br label %3318

3318:                                             ; preds = %originalBBpart21032, %originalBBpart2846
  %3319 = load i32, i32* @x.35
  %3320 = load i32, i32* @y.36
  %3321 = sub i32 %3319, 1
  %3322 = mul i32 %3319, %3321
  %3323 = urem i32 %3322, 2
  %3324 = icmp eq i32 %3323, 0
  %3325 = icmp slt i32 %3320, 10
  %3326 = or i1 %3324, %3325
  br i1 %3326, label %originalBB1034, label %originalBB1034alteredBB

originalBB1034:                                   ; preds = %3318, %originalBB1034alteredBB
  %3327 = load i8, i8* %45, align 1, !dbg !2221
  %3328 = trunc i8 %3327 to i1, !dbg !2221
  %3329 = zext i1 %3328 to i8, !dbg !2222
  store i8 %3329, i8* %43, align 1, !dbg !2222
  %3330 = load i64, i64* %44, align 8, !dbg !2223
  %3331 = icmp ult i64 1, %3330, !dbg !2225
  %3332 = load i32, i32* @x.35
  %3333 = load i32, i32* @y.36
  %3334 = sub i32 %3332, 1
  %3335 = mul i32 %3332, %3334
  %3336 = urem i32 %3335, 2
  %3337 = icmp eq i32 %3336, 0
  %3338 = icmp slt i32 %3333, 10
  %3339 = or i1 %3337, %3338
  br i1 %3339, label %originalBBpart21036, label %originalBB1034alteredBB

originalBBpart21036:                              ; preds = %originalBB1034
  br i1 %3331, label %3378, label %3340, !dbg !2226

3340:                                             ; preds = %originalBBpart21036
  %3341 = load i32, i32* @x.35
  %3342 = load i32, i32* @y.36
  %3343 = sub i32 %3341, 1
  %3344 = mul i32 %3341, %3343
  %3345 = urem i32 %3344, 2
  %3346 = icmp eq i32 %3345, 0
  %3347 = icmp slt i32 %3342, 10
  %3348 = or i1 %3346, %3347
  br i1 %3348, label %originalBB1038, label %originalBB1038alteredBB

originalBB1038:                                   ; preds = %3340, %originalBB1038alteredBB
  %3349 = load i8, i8* %33, align 1, !dbg !2227
  %3350 = trunc i8 %3349 to i1, !dbg !2227
  %3351 = load i32, i32* @x.35
  %3352 = load i32, i32* @y.36
  %3353 = sub i32 %3351, 1
  %3354 = mul i32 %3351, %3353
  %3355 = urem i32 %3354, 2
  %3356 = icmp eq i32 %3355, 0
  %3357 = icmp slt i32 %3352, 10
  %3358 = or i1 %3356, %3357
  br i1 %3358, label %originalBBpart21040, label %originalBB1038alteredBB

originalBBpart21040:                              ; preds = %originalBB1038
  br i1 %3350, label %3359, label %4302, !dbg !2228

3359:                                             ; preds = %originalBBpart21040
  %3360 = load i32, i32* @x.35
  %3361 = load i32, i32* @y.36
  %3362 = sub i32 %3360, 1
  %3363 = mul i32 %3360, %3362
  %3364 = urem i32 %3363, 2
  %3365 = icmp eq i32 %3364, 0
  %3366 = icmp slt i32 %3361, 10
  %3367 = or i1 %3365, %3366
  br i1 %3367, label %originalBB1042, label %originalBB1042alteredBB

originalBB1042:                                   ; preds = %3359, %originalBB1042alteredBB
  %3368 = load i8, i8* %45, align 1, !dbg !2229
  %3369 = trunc i8 %3368 to i1, !dbg !2229
  %3370 = load i32, i32* @x.35
  %3371 = load i32, i32* @y.36
  %3372 = sub i32 %3370, 1
  %3373 = mul i32 %3370, %3372
  %3374 = urem i32 %3373, 2
  %3375 = icmp eq i32 %3374, 0
  %3376 = icmp slt i32 %3371, 10
  %3377 = or i1 %3375, %3376
  br i1 %3377, label %originalBBpart21044, label %originalBB1042alteredBB

originalBBpart21044:                              ; preds = %originalBB1042
  br i1 %3369, label %4302, label %3378, !dbg !2230

3378:                                             ; preds = %originalBBpart21044, %originalBBpart21036
  call void @llvm.dbg.declare(metadata i64* %50, metadata !2231, metadata !DIExpression()), !dbg !2233
  %3379 = load i32, i32* @x.35
  %3380 = load i32, i32* @y.36
  %3381 = sub i32 %3379, 1
  %3382 = mul i32 %3379, %3381
  %3383 = urem i32 %3382, 2
  %3384 = icmp eq i32 %3383, 0
  %3385 = icmp slt i32 %3380, 10
  %3386 = or i1 %3384, %3385
  br i1 %3386, label %originalBB1046, label %originalBB1046alteredBB

originalBB1046:                                   ; preds = %3378, %originalBB1046alteredBB
  %3387 = load i64, i64* %28, align 8, !dbg !2234
  %3388 = load i64, i64* %44, align 8, !dbg !2235
  %3389 = add i64 %3387, %3388, !dbg !2236
  store i64 %3389, i64* %50, align 8, !dbg !2233
  %3390 = load i32, i32* @x.35
  %3391 = load i32, i32* @y.36
  %3392 = sub i32 %3390, 1
  %3393 = mul i32 %3390, %3392
  %3394 = urem i32 %3393, 2
  %3395 = icmp eq i32 %3394, 0
  %3396 = icmp slt i32 %3391, 10
  %3397 = or i1 %3395, %3396
  br i1 %3397, label %originalBBpart21051, label %originalBB1046alteredBB

originalBBpart21051:                              ; preds = %originalBB1046
  br label %3398, !dbg !2237

3398:                                             ; preds = %originalBBpart21313, %originalBBpart21051
  %3399 = load i32, i32* @x.35
  %3400 = load i32, i32* @y.36
  %3401 = sub i32 %3399, 1
  %3402 = mul i32 %3399, %3401
  %3403 = urem i32 %3402, 2
  %3404 = icmp eq i32 %3403, 0
  %3405 = icmp slt i32 %3400, 10
  %3406 = or i1 %3404, %3405
  br i1 %3406, label %originalBB1053, label %originalBB1053alteredBB

originalBB1053:                                   ; preds = %3398, %originalBB1053alteredBB
  %3407 = load i8, i8* %33, align 1, !dbg !2238
  %3408 = trunc i8 %3407 to i1, !dbg !2238
  %3409 = load i32, i32* @x.35
  %3410 = load i32, i32* @y.36
  %3411 = sub i32 %3409, 1
  %3412 = mul i32 %3409, %3411
  %3413 = urem i32 %3412, 2
  %3414 = icmp eq i32 %3413, 0
  %3415 = icmp slt i32 %3410, 10
  %3416 = or i1 %3414, %3415
  br i1 %3416, label %originalBBpart21055, label %originalBB1053alteredBB

originalBBpart21055:                              ; preds = %originalBB1053
  br i1 %3408, label %3417, label %3890, !dbg !2243

3417:                                             ; preds = %originalBBpart21055
  %3418 = load i32, i32* @x.35
  %3419 = load i32, i32* @y.36
  %3420 = sub i32 %3418, 1
  %3421 = mul i32 %3418, %3420
  %3422 = urem i32 %3421, 2
  %3423 = icmp eq i32 %3422, 0
  %3424 = icmp slt i32 %3419, 10
  %3425 = or i1 %3423, %3424
  br i1 %3425, label %originalBB1057, label %originalBB1057alteredBB

originalBB1057:                                   ; preds = %3417, %originalBB1057alteredBB
  %3426 = load i8, i8* %45, align 1, !dbg !2244
  %3427 = trunc i8 %3426 to i1, !dbg !2244
  %3428 = load i32, i32* @x.35
  %3429 = load i32, i32* @y.36
  %3430 = sub i32 %3428, 1
  %3431 = mul i32 %3428, %3430
  %3432 = urem i32 %3431, 2
  %3433 = icmp eq i32 %3432, 0
  %3434 = icmp slt i32 %3429, 10
  %3435 = or i1 %3433, %3434
  br i1 %3435, label %originalBBpart21059, label %originalBB1057alteredBB

originalBBpart21059:                              ; preds = %originalBB1057
  br i1 %3427, label %3890, label %3436, !dbg !2245

3436:                                             ; preds = %originalBBpart21059
  %3437 = load i32, i32* @x.35
  %3438 = load i32, i32* @y.36
  %3439 = sub i32 %3437, 1
  %3440 = mul i32 %3437, %3439
  %3441 = urem i32 %3440, 2
  %3442 = icmp eq i32 %3441, 0
  %3443 = icmp slt i32 %3438, 10
  %3444 = or i1 %3442, %3443
  br i1 %3444, label %originalBB1061, label %originalBB1061alteredBB

originalBB1061:                                   ; preds = %3436, %originalBB1061alteredBB
  %3445 = load i32, i32* @x.35
  %3446 = load i32, i32* @y.36
  %3447 = sub i32 %3445, 1
  %3448 = mul i32 %3445, %3447
  %3449 = urem i32 %3448, 2
  %3450 = icmp eq i32 %3449, 0
  %3451 = icmp slt i32 %3446, 10
  %3452 = or i1 %3450, %3451
  br i1 %3452, label %originalBBpart21063, label %originalBB1061alteredBB

originalBBpart21063:                              ; preds = %originalBB1061
  br label %3453, !dbg !2246

3453:                                             ; preds = %originalBBpart21063
  %3454 = load i8, i8* %35, align 1, !dbg !2248
  %3455 = trunc i8 %3454 to i1, !dbg !2248
  br i1 %3455, label %3456, label %3473, !dbg !2251

3456:                                             ; preds = %3453
  %3457 = load i32, i32* @x.35
  %3458 = load i32, i32* @y.36
  %3459 = sub i32 %3457, 1
  %3460 = mul i32 %3457, %3459
  %3461 = urem i32 %3460, 2
  %3462 = icmp eq i32 %3461, 0
  %3463 = icmp slt i32 %3458, 10
  %3464 = or i1 %3462, %3463
  br i1 %3464, label %originalBB1065, label %originalBB1065alteredBB

originalBB1065:                                   ; preds = %3456, %originalBB1065alteredBB
  %3465 = load i32, i32* @x.35
  %3466 = load i32, i32* @y.36
  %3467 = sub i32 %3465, 1
  %3468 = mul i32 %3465, %3467
  %3469 = urem i32 %3468, 2
  %3470 = icmp eq i32 %3469, 0
  %3471 = icmp slt i32 %3466, 10
  %3472 = or i1 %3470, %3471
  br i1 %3472, label %originalBBpart21067, label %originalBB1065alteredBB

originalBBpart21067:                              ; preds = %originalBB1065
  br label %5413, !dbg !2248

3473:                                             ; preds = %3453
  %3474 = load i32, i32* @x.35
  %3475 = load i32, i32* @y.36
  %3476 = sub i32 %3474, 1
  %3477 = mul i32 %3474, %3476
  %3478 = urem i32 %3477, 2
  %3479 = icmp eq i32 %3478, 0
  %3480 = icmp slt i32 %3475, 10
  %3481 = or i1 %3479, %3480
  br i1 %3481, label %originalBB1069, label %originalBB1069alteredBB

originalBB1069:                                   ; preds = %3473, %originalBB1069alteredBB
  store i8 1, i8* %42, align 1, !dbg !2251
  %3482 = load i32, i32* %23, align 4, !dbg !2252
  %3483 = icmp eq i32 %3482, 2, !dbg !2252
  %3484 = load i32, i32* @x.35
  %3485 = load i32, i32* @y.36
  %3486 = sub i32 %3484, 1
  %3487 = mul i32 %3484, %3486
  %3488 = urem i32 %3487, 2
  %3489 = icmp eq i32 %3488, 0
  %3490 = icmp slt i32 %3485, 10
  %3491 = or i1 %3489, %3490
  br i1 %3491, label %originalBBpart21071, label %originalBB1069alteredBB

originalBBpart21071:                              ; preds = %originalBB1069
  br i1 %3483, label %3492, label %3676, !dbg !2252

3492:                                             ; preds = %originalBBpart21071
  %3493 = load i32, i32* @x.35
  %3494 = load i32, i32* @y.36
  %3495 = sub i32 %3493, 1
  %3496 = mul i32 %3493, %3495
  %3497 = urem i32 %3496, 2
  %3498 = icmp eq i32 %3497, 0
  %3499 = icmp slt i32 %3494, 10
  %3500 = or i1 %3498, %3499
  br i1 %3500, label %originalBB1073, label %originalBB1073alteredBB

originalBB1073:                                   ; preds = %3492, %originalBB1073alteredBB
  %3501 = load i8, i8* %36, align 1, !dbg !2252
  %3502 = trunc i8 %3501 to i1, !dbg !2252
  %3503 = load i32, i32* @x.35
  %3504 = load i32, i32* @y.36
  %3505 = sub i32 %3503, 1
  %3506 = mul i32 %3503, %3505
  %3507 = urem i32 %3506, 2
  %3508 = icmp eq i32 %3507, 0
  %3509 = icmp slt i32 %3504, 10
  %3510 = or i1 %3508, %3509
  br i1 %3510, label %originalBBpart21075, label %originalBB1073alteredBB

originalBBpart21075:                              ; preds = %originalBB1073
  br i1 %3502, label %3676, label %3511, !dbg !2251

3511:                                             ; preds = %originalBBpart21075
  %3512 = load i32, i32* @x.35
  %3513 = load i32, i32* @y.36
  %3514 = sub i32 %3512, 1
  %3515 = mul i32 %3512, %3514
  %3516 = urem i32 %3515, 2
  %3517 = icmp eq i32 %3516, 0
  %3518 = icmp slt i32 %3513, 10
  %3519 = or i1 %3517, %3518
  br i1 %3519, label %originalBB1077, label %originalBB1077alteredBB

originalBB1077:                                   ; preds = %3511, %originalBB1077alteredBB
  %3520 = load i32, i32* @x.35
  %3521 = load i32, i32* @y.36
  %3522 = sub i32 %3520, 1
  %3523 = mul i32 %3520, %3522
  %3524 = urem i32 %3523, 2
  %3525 = icmp eq i32 %3524, 0
  %3526 = icmp slt i32 %3521, 10
  %3527 = or i1 %3525, %3526
  br i1 %3527, label %originalBBpart21079, label %originalBB1077alteredBB

originalBBpart21079:                              ; preds = %originalBB1077
  br label %3528, !dbg !2254

3528:                                             ; preds = %originalBBpart21079
  %3529 = load i64, i64* %29, align 8, !dbg !2256
  %3530 = load i64, i64* %20, align 8, !dbg !2256
  %3531 = icmp ult i64 %3529, %3530, !dbg !2256
  br i1 %3531, label %3532, label %3552, !dbg !2259

3532:                                             ; preds = %3528
  %3533 = load i32, i32* @x.35
  %3534 = load i32, i32* @y.36
  %3535 = sub i32 %3533, 1
  %3536 = mul i32 %3533, %3535
  %3537 = urem i32 %3536, 2
  %3538 = icmp eq i32 %3537, 0
  %3539 = icmp slt i32 %3534, 10
  %3540 = or i1 %3538, %3539
  br i1 %3540, label %originalBB1081, label %originalBB1081alteredBB

originalBB1081:                                   ; preds = %3532, %originalBB1081alteredBB
  %3541 = load i8*, i8** %19, align 8, !dbg !2256
  %3542 = load i64, i64* %29, align 8, !dbg !2256
  %3543 = getelementptr inbounds i8, i8* %3541, i64 %3542, !dbg !2256
  store i8 39, i8* %3543, align 1, !dbg !2256
  %3544 = load i32, i32* @x.35
  %3545 = load i32, i32* @y.36
  %3546 = sub i32 %3544, 1
  %3547 = mul i32 %3544, %3546
  %3548 = urem i32 %3547, 2
  %3549 = icmp eq i32 %3548, 0
  %3550 = icmp slt i32 %3545, 10
  %3551 = or i1 %3549, %3550
  br i1 %3551, label %originalBBpart21083, label %originalBB1081alteredBB

originalBBpart21083:                              ; preds = %originalBB1081
  br label %3552, !dbg !2256

3552:                                             ; preds = %originalBBpart21083, %3528
  %3553 = load i32, i32* @x.35
  %3554 = load i32, i32* @y.36
  %3555 = sub i32 %3553, 1
  %3556 = mul i32 %3553, %3555
  %3557 = urem i32 %3556, 2
  %3558 = icmp eq i32 %3557, 0
  %3559 = icmp slt i32 %3554, 10
  %3560 = or i1 %3558, %3559
  br i1 %3560, label %originalBB1085, label %originalBB1085alteredBB

originalBB1085:                                   ; preds = %3552, %originalBB1085alteredBB
  %3561 = load i64, i64* %29, align 8, !dbg !2259
  %3562 = add i64 %3561, 1, !dbg !2259
  store i64 %3562, i64* %29, align 8, !dbg !2259
  %3563 = load i32, i32* @x.35
  %3564 = load i32, i32* @y.36
  %3565 = sub i32 %3563, 1
  %3566 = mul i32 %3563, %3565
  %3567 = urem i32 %3566, 2
  %3568 = icmp eq i32 %3567, 0
  %3569 = icmp slt i32 %3564, 10
  %3570 = or i1 %3568, %3569
  br i1 %3570, label %originalBBpart21095, label %originalBB1085alteredBB

originalBBpart21095:                              ; preds = %originalBB1085
  br label %3571, !dbg !2259

3571:                                             ; preds = %originalBBpart21095
  %3572 = load i32, i32* @x.35
  %3573 = load i32, i32* @y.36
  %3574 = sub i32 %3572, 1
  %3575 = mul i32 %3572, %3574
  %3576 = urem i32 %3575, 2
  %3577 = icmp eq i32 %3576, 0
  %3578 = icmp slt i32 %3573, 10
  %3579 = or i1 %3577, %3578
  br i1 %3579, label %originalBB1097, label %originalBB1097alteredBB

originalBB1097:                                   ; preds = %3571, %originalBB1097alteredBB
  %3580 = load i32, i32* @x.35
  %3581 = load i32, i32* @y.36
  %3582 = sub i32 %3580, 1
  %3583 = mul i32 %3580, %3582
  %3584 = urem i32 %3583, 2
  %3585 = icmp eq i32 %3584, 0
  %3586 = icmp slt i32 %3581, 10
  %3587 = or i1 %3585, %3586
  br i1 %3587, label %originalBBpart21099, label %originalBB1097alteredBB

originalBBpart21099:                              ; preds = %originalBB1097
  br label %3588, !dbg !2254

3588:                                             ; preds = %originalBBpart21099
  %3589 = load i64, i64* %29, align 8, !dbg !2260
  %3590 = load i64, i64* %20, align 8, !dbg !2260
  %3591 = icmp ult i64 %3589, %3590, !dbg !2260
  br i1 %3591, label %3592, label %3596, !dbg !2263

3592:                                             ; preds = %3588
  %3593 = load i8*, i8** %19, align 8, !dbg !2260
  %3594 = load i64, i64* %29, align 8, !dbg !2260
  %3595 = getelementptr inbounds i8, i8* %3593, i64 %3594, !dbg !2260
  store i8 36, i8* %3595, align 1, !dbg !2260
  br label %3596, !dbg !2260

3596:                                             ; preds = %3592, %3588
  %3597 = load i64, i64* %29, align 8, !dbg !2263
  %3598 = add i64 %3597, 1, !dbg !2263
  store i64 %3598, i64* %29, align 8, !dbg !2263
  br label %3599, !dbg !2263

3599:                                             ; preds = %3596
  %3600 = load i32, i32* @x.35
  %3601 = load i32, i32* @y.36
  %3602 = sub i32 %3600, 1
  %3603 = mul i32 %3600, %3602
  %3604 = urem i32 %3603, 2
  %3605 = icmp eq i32 %3604, 0
  %3606 = icmp slt i32 %3601, 10
  %3607 = or i1 %3605, %3606
  br i1 %3607, label %originalBB1101, label %originalBB1101alteredBB

originalBB1101:                                   ; preds = %3599, %originalBB1101alteredBB
  %3608 = load i32, i32* @x.35
  %3609 = load i32, i32* @y.36
  %3610 = sub i32 %3608, 1
  %3611 = mul i32 %3608, %3610
  %3612 = urem i32 %3611, 2
  %3613 = icmp eq i32 %3612, 0
  %3614 = icmp slt i32 %3609, 10
  %3615 = or i1 %3613, %3614
  br i1 %3615, label %originalBBpart21103, label %originalBB1101alteredBB

originalBBpart21103:                              ; preds = %originalBB1101
  br label %3616, !dbg !2254

3616:                                             ; preds = %originalBBpart21103
  %3617 = load i32, i32* @x.35
  %3618 = load i32, i32* @y.36
  %3619 = sub i32 %3617, 1
  %3620 = mul i32 %3617, %3619
  %3621 = urem i32 %3620, 2
  %3622 = icmp eq i32 %3621, 0
  %3623 = icmp slt i32 %3618, 10
  %3624 = or i1 %3622, %3623
  br i1 %3624, label %originalBB1105, label %originalBB1105alteredBB

originalBB1105:                                   ; preds = %3616, %originalBB1105alteredBB
  %3625 = load i64, i64* %29, align 8, !dbg !2264
  %3626 = load i64, i64* %20, align 8, !dbg !2264
  %3627 = icmp ult i64 %3625, %3626, !dbg !2264
  %3628 = load i32, i32* @x.35
  %3629 = load i32, i32* @y.36
  %3630 = sub i32 %3628, 1
  %3631 = mul i32 %3628, %3630
  %3632 = urem i32 %3631, 2
  %3633 = icmp eq i32 %3632, 0
  %3634 = icmp slt i32 %3629, 10
  %3635 = or i1 %3633, %3634
  br i1 %3635, label %originalBBpart21107, label %originalBB1105alteredBB

originalBBpart21107:                              ; preds = %originalBB1105
  br i1 %3627, label %3636, label %3656, !dbg !2267

3636:                                             ; preds = %originalBBpart21107
  %3637 = load i32, i32* @x.35
  %3638 = load i32, i32* @y.36
  %3639 = sub i32 %3637, 1
  %3640 = mul i32 %3637, %3639
  %3641 = urem i32 %3640, 2
  %3642 = icmp eq i32 %3641, 0
  %3643 = icmp slt i32 %3638, 10
  %3644 = or i1 %3642, %3643
  br i1 %3644, label %originalBB1109, label %originalBB1109alteredBB

originalBB1109:                                   ; preds = %3636, %originalBB1109alteredBB
  %3645 = load i8*, i8** %19, align 8, !dbg !2264
  %3646 = load i64, i64* %29, align 8, !dbg !2264
  %3647 = getelementptr inbounds i8, i8* %3645, i64 %3646, !dbg !2264
  store i8 39, i8* %3647, align 1, !dbg !2264
  %3648 = load i32, i32* @x.35
  %3649 = load i32, i32* @y.36
  %3650 = sub i32 %3648, 1
  %3651 = mul i32 %3648, %3650
  %3652 = urem i32 %3651, 2
  %3653 = icmp eq i32 %3652, 0
  %3654 = icmp slt i32 %3649, 10
  %3655 = or i1 %3653, %3654
  br i1 %3655, label %originalBBpart21111, label %originalBB1109alteredBB

originalBBpart21111:                              ; preds = %originalBB1109
  br label %3656, !dbg !2264

3656:                                             ; preds = %originalBBpart21111, %originalBBpart21107
  %3657 = load i32, i32* @x.35
  %3658 = load i32, i32* @y.36
  %3659 = sub i32 %3657, 1
  %3660 = mul i32 %3657, %3659
  %3661 = urem i32 %3660, 2
  %3662 = icmp eq i32 %3661, 0
  %3663 = icmp slt i32 %3658, 10
  %3664 = or i1 %3662, %3663
  br i1 %3664, label %originalBB1113, label %originalBB1113alteredBB

originalBB1113:                                   ; preds = %3656, %originalBB1113alteredBB
  %3665 = load i64, i64* %29, align 8, !dbg !2267
  %3666 = add i64 %3665, 1, !dbg !2267
  store i64 %3666, i64* %29, align 8, !dbg !2267
  %3667 = load i32, i32* @x.35
  %3668 = load i32, i32* @y.36
  %3669 = sub i32 %3667, 1
  %3670 = mul i32 %3667, %3669
  %3671 = urem i32 %3670, 2
  %3672 = icmp eq i32 %3671, 0
  %3673 = icmp slt i32 %3668, 10
  %3674 = or i1 %3672, %3673
  br i1 %3674, label %originalBBpart21117, label %originalBB1113alteredBB

originalBBpart21117:                              ; preds = %originalBB1113
  br label %3675, !dbg !2267

3675:                                             ; preds = %originalBBpart21117
  store i8 1, i8* %36, align 1, !dbg !2254
  br label %3676, !dbg !2254

3676:                                             ; preds = %3675, %originalBBpart21075, %originalBBpart21071
  %3677 = load i32, i32* @x.35
  %3678 = load i32, i32* @y.36
  %3679 = sub i32 %3677, 1
  %3680 = mul i32 %3677, %3679
  %3681 = urem i32 %3680, 2
  %3682 = icmp eq i32 %3681, 0
  %3683 = icmp slt i32 %3678, 10
  %3684 = or i1 %3682, %3683
  br i1 %3684, label %originalBB1119, label %originalBB1119alteredBB

originalBB1119:                                   ; preds = %3676, %originalBB1119alteredBB
  %3685 = load i32, i32* @x.35
  %3686 = load i32, i32* @y.36
  %3687 = sub i32 %3685, 1
  %3688 = mul i32 %3685, %3687
  %3689 = urem i32 %3688, 2
  %3690 = icmp eq i32 %3689, 0
  %3691 = icmp slt i32 %3686, 10
  %3692 = or i1 %3690, %3691
  br i1 %3692, label %originalBBpart21121, label %originalBB1119alteredBB

originalBBpart21121:                              ; preds = %originalBB1119
  br label %3693, !dbg !2251

3693:                                             ; preds = %originalBBpart21121
  %3694 = load i64, i64* %29, align 8, !dbg !2268
  %3695 = load i64, i64* %20, align 8, !dbg !2268
  %3696 = icmp ult i64 %3694, %3695, !dbg !2268
  br i1 %3696, label %3697, label %3701, !dbg !2271

3697:                                             ; preds = %3693
  %3698 = load i8*, i8** %19, align 8, !dbg !2268
  %3699 = load i64, i64* %29, align 8, !dbg !2268
  %3700 = getelementptr inbounds i8, i8* %3698, i64 %3699, !dbg !2268
  store i8 92, i8* %3700, align 1, !dbg !2268
  br label %3701, !dbg !2268

3701:                                             ; preds = %3697, %3693
  %3702 = load i32, i32* @x.35
  %3703 = load i32, i32* @y.36
  %3704 = sub i32 %3702, 1
  %3705 = mul i32 %3702, %3704
  %3706 = urem i32 %3705, 2
  %3707 = icmp eq i32 %3706, 0
  %3708 = icmp slt i32 %3703, 10
  %3709 = or i1 %3707, %3708
  br i1 %3709, label %originalBB1123, label %originalBB1123alteredBB

originalBB1123:                                   ; preds = %3701, %originalBB1123alteredBB
  %3710 = load i64, i64* %29, align 8, !dbg !2271
  %3711 = add i64 %3710, 1, !dbg !2271
  store i64 %3711, i64* %29, align 8, !dbg !2271
  %3712 = load i32, i32* @x.35
  %3713 = load i32, i32* @y.36
  %3714 = sub i32 %3712, 1
  %3715 = mul i32 %3712, %3714
  %3716 = urem i32 %3715, 2
  %3717 = icmp eq i32 %3716, 0
  %3718 = icmp slt i32 %3713, 10
  %3719 = or i1 %3717, %3718
  br i1 %3719, label %originalBBpart21136, label %originalBB1123alteredBB

originalBBpart21136:                              ; preds = %originalBB1123
  br label %3720, !dbg !2271

3720:                                             ; preds = %originalBBpart21136
  %3721 = load i32, i32* @x.35
  %3722 = load i32, i32* @y.36
  %3723 = sub i32 %3721, 1
  %3724 = mul i32 %3721, %3723
  %3725 = urem i32 %3724, 2
  %3726 = icmp eq i32 %3725, 0
  %3727 = icmp slt i32 %3722, 10
  %3728 = or i1 %3726, %3727
  br i1 %3728, label %originalBB1138, label %originalBB1138alteredBB

originalBB1138:                                   ; preds = %3720, %originalBB1138alteredBB
  %3729 = load i32, i32* @x.35
  %3730 = load i32, i32* @y.36
  %3731 = sub i32 %3729, 1
  %3732 = mul i32 %3729, %3731
  %3733 = urem i32 %3732, 2
  %3734 = icmp eq i32 %3733, 0
  %3735 = icmp slt i32 %3730, 10
  %3736 = or i1 %3734, %3735
  br i1 %3736, label %originalBBpart21140, label %originalBB1138alteredBB

originalBBpart21140:                              ; preds = %originalBB1138
  br label %3737, !dbg !2251

3737:                                             ; preds = %originalBBpart21140
  %3738 = load i32, i32* @x.35
  %3739 = load i32, i32* @y.36
  %3740 = sub i32 %3738, 1
  %3741 = mul i32 %3738, %3740
  %3742 = urem i32 %3741, 2
  %3743 = icmp eq i32 %3742, 0
  %3744 = icmp slt i32 %3739, 10
  %3745 = or i1 %3743, %3744
  br i1 %3745, label %originalBB1142, label %originalBB1142alteredBB

originalBB1142:                                   ; preds = %3737, %originalBB1142alteredBB
  %3746 = load i32, i32* @x.35
  %3747 = load i32, i32* @y.36
  %3748 = sub i32 %3746, 1
  %3749 = mul i32 %3746, %3748
  %3750 = urem i32 %3749, 2
  %3751 = icmp eq i32 %3750, 0
  %3752 = icmp slt i32 %3747, 10
  %3753 = or i1 %3751, %3752
  br i1 %3753, label %originalBBpart21144, label %originalBB1142alteredBB

originalBBpart21144:                              ; preds = %originalBB1142
  br label %3754, !dbg !2272

3754:                                             ; preds = %originalBBpart21144
  %3755 = load i64, i64* %29, align 8, !dbg !2273
  %3756 = load i64, i64* %20, align 8, !dbg !2273
  %3757 = icmp ult i64 %3755, %3756, !dbg !2273
  br i1 %3757, label %3758, label %3783, !dbg !2276

3758:                                             ; preds = %3754
  %3759 = load i32, i32* @x.35
  %3760 = load i32, i32* @y.36
  %3761 = sub i32 %3759, 1
  %3762 = mul i32 %3759, %3761
  %3763 = urem i32 %3762, 2
  %3764 = icmp eq i32 %3763, 0
  %3765 = icmp slt i32 %3760, 10
  %3766 = or i1 %3764, %3765
  br i1 %3766, label %originalBB1146, label %originalBB1146alteredBB

originalBB1146:                                   ; preds = %3758, %originalBB1146alteredBB
  %3767 = load i8, i8* %39, align 1, !dbg !2273
  %3768 = zext i8 %3767 to i32, !dbg !2273
  %3769 = ashr i32 %3768, 6, !dbg !2273
  %3770 = add nsw i32 48, %3769, !dbg !2273
  %3771 = trunc i32 %3770 to i8, !dbg !2273
  %3772 = load i8*, i8** %19, align 8, !dbg !2273
  %3773 = load i64, i64* %29, align 8, !dbg !2273
  %3774 = getelementptr inbounds i8, i8* %3772, i64 %3773, !dbg !2273
  store i8 %3771, i8* %3774, align 1, !dbg !2273
  %3775 = load i32, i32* @x.35
  %3776 = load i32, i32* @y.36
  %3777 = sub i32 %3775, 1
  %3778 = mul i32 %3775, %3777
  %3779 = urem i32 %3778, 2
  %3780 = icmp eq i32 %3779, 0
  %3781 = icmp slt i32 %3776, 10
  %3782 = or i1 %3780, %3781
  br i1 %3782, label %originalBBpart21160, label %originalBB1146alteredBB

originalBBpart21160:                              ; preds = %originalBB1146
  br label %3783, !dbg !2273

3783:                                             ; preds = %originalBBpart21160, %3754
  %3784 = load i32, i32* @x.35
  %3785 = load i32, i32* @y.36
  %3786 = sub i32 %3784, 1
  %3787 = mul i32 %3784, %3786
  %3788 = urem i32 %3787, 2
  %3789 = icmp eq i32 %3788, 0
  %3790 = icmp slt i32 %3785, 10
  %3791 = or i1 %3789, %3790
  br i1 %3791, label %originalBB1162, label %originalBB1162alteredBB

originalBB1162:                                   ; preds = %3783, %originalBB1162alteredBB
  %3792 = load i64, i64* %29, align 8, !dbg !2276
  %3793 = add i64 %3792, 1, !dbg !2276
  store i64 %3793, i64* %29, align 8, !dbg !2276
  %3794 = load i32, i32* @x.35
  %3795 = load i32, i32* @y.36
  %3796 = sub i32 %3794, 1
  %3797 = mul i32 %3794, %3796
  %3798 = urem i32 %3797, 2
  %3799 = icmp eq i32 %3798, 0
  %3800 = icmp slt i32 %3795, 10
  %3801 = or i1 %3799, %3800
  br i1 %3801, label %originalBBpart21169, label %originalBB1162alteredBB

originalBBpart21169:                              ; preds = %originalBB1162
  br label %3802, !dbg !2276

3802:                                             ; preds = %originalBBpart21169
  %3803 = load i32, i32* @x.35
  %3804 = load i32, i32* @y.36
  %3805 = sub i32 %3803, 1
  %3806 = mul i32 %3803, %3805
  %3807 = urem i32 %3806, 2
  %3808 = icmp eq i32 %3807, 0
  %3809 = icmp slt i32 %3804, 10
  %3810 = or i1 %3808, %3809
  br i1 %3810, label %originalBB1171, label %originalBB1171alteredBB

originalBB1171:                                   ; preds = %3802, %originalBB1171alteredBB
  %3811 = load i32, i32* @x.35
  %3812 = load i32, i32* @y.36
  %3813 = sub i32 %3811, 1
  %3814 = mul i32 %3811, %3813
  %3815 = urem i32 %3814, 2
  %3816 = icmp eq i32 %3815, 0
  %3817 = icmp slt i32 %3812, 10
  %3818 = or i1 %3816, %3817
  br i1 %3818, label %originalBBpart21173, label %originalBB1171alteredBB

originalBBpart21173:                              ; preds = %originalBB1171
  br label %3819, !dbg !2277

3819:                                             ; preds = %originalBBpart21173
  %3820 = load i32, i32* @x.35
  %3821 = load i32, i32* @y.36
  %3822 = sub i32 %3820, 1
  %3823 = mul i32 %3820, %3822
  %3824 = urem i32 %3823, 2
  %3825 = icmp eq i32 %3824, 0
  %3826 = icmp slt i32 %3821, 10
  %3827 = or i1 %3825, %3826
  br i1 %3827, label %originalBB1175, label %originalBB1175alteredBB

originalBB1175:                                   ; preds = %3819, %originalBB1175alteredBB
  %3828 = load i64, i64* %29, align 8, !dbg !2278
  %3829 = load i64, i64* %20, align 8, !dbg !2278
  %3830 = icmp ult i64 %3828, %3829, !dbg !2278
  %3831 = load i32, i32* @x.35
  %3832 = load i32, i32* @y.36
  %3833 = sub i32 %3831, 1
  %3834 = mul i32 %3831, %3833
  %3835 = urem i32 %3834, 2
  %3836 = icmp eq i32 %3835, 0
  %3837 = icmp slt i32 %3832, 10
  %3838 = or i1 %3836, %3837
  br i1 %3838, label %originalBBpart21177, label %originalBB1175alteredBB

originalBBpart21177:                              ; preds = %originalBB1175
  br i1 %3830, label %3839, label %3849, !dbg !2281

3839:                                             ; preds = %originalBBpart21177
  %3840 = load i8, i8* %39, align 1, !dbg !2278
  %3841 = zext i8 %3840 to i32, !dbg !2278
  %3842 = ashr i32 %3841, 3, !dbg !2278
  %3843 = and i32 %3842, 7, !dbg !2278
  %3844 = add nsw i32 48, %3843, !dbg !2278
  %3845 = trunc i32 %3844 to i8, !dbg !2278
  %3846 = load i8*, i8** %19, align 8, !dbg !2278
  %3847 = load i64, i64* %29, align 8, !dbg !2278
  %3848 = getelementptr inbounds i8, i8* %3846, i64 %3847, !dbg !2278
  store i8 %3845, i8* %3848, align 1, !dbg !2278
  br label %3849, !dbg !2278

3849:                                             ; preds = %3839, %originalBBpart21177
  %3850 = load i32, i32* @x.35
  %3851 = load i32, i32* @y.36
  %3852 = sub i32 %3850, 1
  %3853 = mul i32 %3850, %3852
  %3854 = urem i32 %3853, 2
  %3855 = icmp eq i32 %3854, 0
  %3856 = icmp slt i32 %3851, 10
  %3857 = or i1 %3855, %3856
  br i1 %3857, label %originalBB1179, label %originalBB1179alteredBB

originalBB1179:                                   ; preds = %3849, %originalBB1179alteredBB
  %3858 = load i64, i64* %29, align 8, !dbg !2281
  %3859 = add i64 %3858, 1, !dbg !2281
  store i64 %3859, i64* %29, align 8, !dbg !2281
  %3860 = load i32, i32* @x.35
  %3861 = load i32, i32* @y.36
  %3862 = sub i32 %3860, 1
  %3863 = mul i32 %3860, %3862
  %3864 = urem i32 %3863, 2
  %3865 = icmp eq i32 %3864, 0
  %3866 = icmp slt i32 %3861, 10
  %3867 = or i1 %3865, %3866
  br i1 %3867, label %originalBBpart21184, label %originalBB1179alteredBB

originalBBpart21184:                              ; preds = %originalBB1179
  br label %3868, !dbg !2281

3868:                                             ; preds = %originalBBpart21184
  %3869 = load i32, i32* @x.35
  %3870 = load i32, i32* @y.36
  %3871 = sub i32 %3869, 1
  %3872 = mul i32 %3869, %3871
  %3873 = urem i32 %3872, 2
  %3874 = icmp eq i32 %3873, 0
  %3875 = icmp slt i32 %3870, 10
  %3876 = or i1 %3874, %3875
  br i1 %3876, label %originalBB1186, label %originalBB1186alteredBB

originalBB1186:                                   ; preds = %3868, %originalBB1186alteredBB
  %3877 = load i8, i8* %39, align 1, !dbg !2282
  %3878 = zext i8 %3877 to i32, !dbg !2282
  %3879 = and i32 %3878, 7, !dbg !2283
  %3880 = add nsw i32 48, %3879, !dbg !2284
  %3881 = trunc i32 %3880 to i8, !dbg !2285
  store i8 %3881, i8* %39, align 1, !dbg !2286
  %3882 = load i32, i32* @x.35
  %3883 = load i32, i32* @y.36
  %3884 = sub i32 %3882, 1
  %3885 = mul i32 %3882, %3884
  %3886 = urem i32 %3885, 2
  %3887 = icmp eq i32 %3886, 0
  %3888 = icmp slt i32 %3883, 10
  %3889 = or i1 %3887, %3888
  br i1 %3889, label %originalBBpart21199, label %originalBB1186alteredBB

originalBBpart21199:                              ; preds = %originalBB1186
  br label %4003, !dbg !2287

3890:                                             ; preds = %originalBBpart21059, %originalBBpart21055
  %3891 = load i8, i8* %41, align 1, !dbg !2288
  %3892 = trunc i8 %3891 to i1, !dbg !2288
  br i1 %3892, label %3893, label %3986, !dbg !2290

3893:                                             ; preds = %3890
  %3894 = load i32, i32* @x.35
  %3895 = load i32, i32* @y.36
  %3896 = sub i32 %3894, 1
  %3897 = mul i32 %3894, %3896
  %3898 = urem i32 %3897, 2
  %3899 = icmp eq i32 %3898, 0
  %3900 = icmp slt i32 %3895, 10
  %3901 = or i1 %3899, %3900
  br i1 %3901, label %originalBB1201, label %originalBB1201alteredBB

originalBB1201:                                   ; preds = %3893, %originalBB1201alteredBB
  %3902 = load i32, i32* @x.35
  %3903 = load i32, i32* @y.36
  %3904 = sub i32 %3902, 1
  %3905 = mul i32 %3902, %3904
  %3906 = urem i32 %3905, 2
  %3907 = icmp eq i32 %3906, 0
  %3908 = icmp slt i32 %3903, 10
  %3909 = or i1 %3907, %3908
  br i1 %3909, label %originalBBpart21203, label %originalBB1201alteredBB

originalBBpart21203:                              ; preds = %originalBB1201
  br label %3910, !dbg !2291

3910:                                             ; preds = %originalBBpart21203
  %3911 = load i32, i32* @x.35
  %3912 = load i32, i32* @y.36
  %3913 = sub i32 %3911, 1
  %3914 = mul i32 %3911, %3913
  %3915 = urem i32 %3914, 2
  %3916 = icmp eq i32 %3915, 0
  %3917 = icmp slt i32 %3912, 10
  %3918 = or i1 %3916, %3917
  br i1 %3918, label %originalBB1205, label %originalBB1205alteredBB

originalBB1205:                                   ; preds = %3910, %originalBB1205alteredBB
  %3919 = load i64, i64* %29, align 8, !dbg !2293
  %3920 = load i64, i64* %20, align 8, !dbg !2293
  %3921 = icmp ult i64 %3919, %3920, !dbg !2293
  %3922 = load i32, i32* @x.35
  %3923 = load i32, i32* @y.36
  %3924 = sub i32 %3922, 1
  %3925 = mul i32 %3922, %3924
  %3926 = urem i32 %3925, 2
  %3927 = icmp eq i32 %3926, 0
  %3928 = icmp slt i32 %3923, 10
  %3929 = or i1 %3927, %3928
  br i1 %3929, label %originalBBpart21207, label %originalBB1205alteredBB

originalBBpart21207:                              ; preds = %originalBB1205
  br i1 %3921, label %3930, label %3950, !dbg !2296

3930:                                             ; preds = %originalBBpart21207
  %3931 = load i32, i32* @x.35
  %3932 = load i32, i32* @y.36
  %3933 = sub i32 %3931, 1
  %3934 = mul i32 %3931, %3933
  %3935 = urem i32 %3934, 2
  %3936 = icmp eq i32 %3935, 0
  %3937 = icmp slt i32 %3932, 10
  %3938 = or i1 %3936, %3937
  br i1 %3938, label %originalBB1209, label %originalBB1209alteredBB

originalBB1209:                                   ; preds = %3930, %originalBB1209alteredBB
  %3939 = load i8*, i8** %19, align 8, !dbg !2293
  %3940 = load i64, i64* %29, align 8, !dbg !2293
  %3941 = getelementptr inbounds i8, i8* %3939, i64 %3940, !dbg !2293
  store i8 92, i8* %3941, align 1, !dbg !2293
  %3942 = load i32, i32* @x.35
  %3943 = load i32, i32* @y.36
  %3944 = sub i32 %3942, 1
  %3945 = mul i32 %3942, %3944
  %3946 = urem i32 %3945, 2
  %3947 = icmp eq i32 %3946, 0
  %3948 = icmp slt i32 %3943, 10
  %3949 = or i1 %3947, %3948
  br i1 %3949, label %originalBBpart21211, label %originalBB1209alteredBB

originalBBpart21211:                              ; preds = %originalBB1209
  br label %3950, !dbg !2293

3950:                                             ; preds = %originalBBpart21211, %originalBBpart21207
  %3951 = load i32, i32* @x.35
  %3952 = load i32, i32* @y.36
  %3953 = sub i32 %3951, 1
  %3954 = mul i32 %3951, %3953
  %3955 = urem i32 %3954, 2
  %3956 = icmp eq i32 %3955, 0
  %3957 = icmp slt i32 %3952, 10
  %3958 = or i1 %3956, %3957
  br i1 %3958, label %originalBB1213, label %originalBB1213alteredBB

originalBB1213:                                   ; preds = %3950, %originalBB1213alteredBB
  %3959 = load i64, i64* %29, align 8, !dbg !2296
  %3960 = add i64 %3959, 1, !dbg !2296
  store i64 %3960, i64* %29, align 8, !dbg !2296
  %3961 = load i32, i32* @x.35
  %3962 = load i32, i32* @y.36
  %3963 = sub i32 %3961, 1
  %3964 = mul i32 %3961, %3963
  %3965 = urem i32 %3964, 2
  %3966 = icmp eq i32 %3965, 0
  %3967 = icmp slt i32 %3962, 10
  %3968 = or i1 %3966, %3967
  br i1 %3968, label %originalBBpart21219, label %originalBB1213alteredBB

originalBBpart21219:                              ; preds = %originalBB1213
  br label %3969, !dbg !2296

3969:                                             ; preds = %originalBBpart21219
  %3970 = load i32, i32* @x.35
  %3971 = load i32, i32* @y.36
  %3972 = sub i32 %3970, 1
  %3973 = mul i32 %3970, %3972
  %3974 = urem i32 %3973, 2
  %3975 = icmp eq i32 %3974, 0
  %3976 = icmp slt i32 %3971, 10
  %3977 = or i1 %3975, %3976
  br i1 %3977, label %originalBB1221, label %originalBB1221alteredBB

originalBB1221:                                   ; preds = %3969, %originalBB1221alteredBB
  store i8 0, i8* %41, align 1, !dbg !2297
  %3978 = load i32, i32* @x.35
  %3979 = load i32, i32* @y.36
  %3980 = sub i32 %3978, 1
  %3981 = mul i32 %3978, %3980
  %3982 = urem i32 %3981, 2
  %3983 = icmp eq i32 %3982, 0
  %3984 = icmp slt i32 %3979, 10
  %3985 = or i1 %3983, %3984
  br i1 %3985, label %originalBBpart21223, label %originalBB1221alteredBB

originalBBpart21223:                              ; preds = %originalBB1221
  br label %3986, !dbg !2298

3986:                                             ; preds = %originalBBpart21223, %3890
  %3987 = load i32, i32* @x.35
  %3988 = load i32, i32* @y.36
  %3989 = sub i32 %3987, 1
  %3990 = mul i32 %3987, %3989
  %3991 = urem i32 %3990, 2
  %3992 = icmp eq i32 %3991, 0
  %3993 = icmp slt i32 %3988, 10
  %3994 = or i1 %3992, %3993
  br i1 %3994, label %originalBB1225, label %originalBB1225alteredBB

originalBB1225:                                   ; preds = %3986, %originalBB1225alteredBB
  %3995 = load i32, i32* @x.35
  %3996 = load i32, i32* @y.36
  %3997 = sub i32 %3995, 1
  %3998 = mul i32 %3995, %3997
  %3999 = urem i32 %3998, 2
  %4000 = icmp eq i32 %3999, 0
  %4001 = icmp slt i32 %3996, 10
  %4002 = or i1 %4000, %4001
  br i1 %4002, label %originalBBpart21227, label %originalBB1225alteredBB

originalBBpart21227:                              ; preds = %originalBB1225
  br label %4003

4003:                                             ; preds = %originalBBpart21227, %originalBBpart21199
  %4004 = load i32, i32* @x.35
  %4005 = load i32, i32* @y.36
  %4006 = sub i32 %4004, 1
  %4007 = mul i32 %4004, %4006
  %4008 = urem i32 %4007, 2
  %4009 = icmp eq i32 %4008, 0
  %4010 = icmp slt i32 %4005, 10
  %4011 = or i1 %4009, %4010
  br i1 %4011, label %originalBB1229, label %originalBB1229alteredBB

originalBB1229:                                   ; preds = %4003, %originalBB1229alteredBB
  %4012 = load i64, i64* %50, align 8, !dbg !2299
  %4013 = load i64, i64* %28, align 8, !dbg !2301
  %4014 = add i64 %4013, 1, !dbg !2302
  %4015 = icmp ule i64 %4012, %4014, !dbg !2303
  %4016 = load i32, i32* @x.35
  %4017 = load i32, i32* @y.36
  %4018 = sub i32 %4016, 1
  %4019 = mul i32 %4016, %4018
  %4020 = urem i32 %4019, 2
  %4021 = icmp eq i32 %4020, 0
  %4022 = icmp slt i32 %4017, 10
  %4023 = or i1 %4021, %4022
  br i1 %4023, label %originalBBpart21240, label %originalBB1229alteredBB

originalBBpart21240:                              ; preds = %originalBB1229
  br i1 %4015, label %4024, label %4041, !dbg !2304

4024:                                             ; preds = %originalBBpart21240
  %4025 = load i32, i32* @x.35
  %4026 = load i32, i32* @y.36
  %4027 = sub i32 %4025, 1
  %4028 = mul i32 %4025, %4027
  %4029 = urem i32 %4028, 2
  %4030 = icmp eq i32 %4029, 0
  %4031 = icmp slt i32 %4026, 10
  %4032 = or i1 %4030, %4031
  br i1 %4032, label %originalBB1242, label %originalBB1242alteredBB

originalBB1242:                                   ; preds = %4024, %originalBB1242alteredBB
  %4033 = load i32, i32* @x.35
  %4034 = load i32, i32* @y.36
  %4035 = sub i32 %4033, 1
  %4036 = mul i32 %4033, %4035
  %4037 = urem i32 %4036, 2
  %4038 = icmp eq i32 %4037, 0
  %4039 = icmp slt i32 %4034, 10
  %4040 = or i1 %4038, %4039
  br i1 %4040, label %originalBBpart21244, label %originalBB1242alteredBB

originalBBpart21244:                              ; preds = %originalBB1242
  br label %4285, !dbg !2305

4041:                                             ; preds = %originalBBpart21240
  br label %4042, !dbg !2306

4042:                                             ; preds = %4041
  %4043 = load i32, i32* @x.35
  %4044 = load i32, i32* @y.36
  %4045 = sub i32 %4043, 1
  %4046 = mul i32 %4043, %4045
  %4047 = urem i32 %4046, 2
  %4048 = icmp eq i32 %4047, 0
  %4049 = icmp slt i32 %4044, 10
  %4050 = or i1 %4048, %4049
  br i1 %4050, label %originalBB1246, label %originalBB1246alteredBB

originalBB1246:                                   ; preds = %4042, %originalBB1246alteredBB
  %4051 = load i8, i8* %36, align 1, !dbg !2307
  %4052 = trunc i8 %4051 to i1, !dbg !2307
  %4053 = load i32, i32* @x.35
  %4054 = load i32, i32* @y.36
  %4055 = sub i32 %4053, 1
  %4056 = mul i32 %4053, %4055
  %4057 = urem i32 %4056, 2
  %4058 = icmp eq i32 %4057, 0
  %4059 = icmp slt i32 %4054, 10
  %4060 = or i1 %4058, %4059
  br i1 %4060, label %originalBBpart21248, label %originalBB1246alteredBB

originalBBpart21248:                              ; preds = %originalBB1246
  br i1 %4052, label %4061, label %4201, !dbg !2307

4061:                                             ; preds = %originalBBpart21248
  %4062 = load i32, i32* @x.35
  %4063 = load i32, i32* @y.36
  %4064 = sub i32 %4062, 1
  %4065 = mul i32 %4062, %4064
  %4066 = urem i32 %4065, 2
  %4067 = icmp eq i32 %4066, 0
  %4068 = icmp slt i32 %4063, 10
  %4069 = or i1 %4067, %4068
  br i1 %4069, label %originalBB1250, label %originalBB1250alteredBB

originalBB1250:                                   ; preds = %4061, %originalBB1250alteredBB
  %4070 = load i8, i8* %42, align 1, !dbg !2307
  %4071 = trunc i8 %4070 to i1, !dbg !2307
  %4072 = load i32, i32* @x.35
  %4073 = load i32, i32* @y.36
  %4074 = sub i32 %4072, 1
  %4075 = mul i32 %4072, %4074
  %4076 = urem i32 %4075, 2
  %4077 = icmp eq i32 %4076, 0
  %4078 = icmp slt i32 %4073, 10
  %4079 = or i1 %4077, %4078
  br i1 %4079, label %originalBBpart21252, label %originalBB1250alteredBB

originalBBpart21252:                              ; preds = %originalBB1250
  br i1 %4071, label %4201, label %4080, !dbg !2310

4080:                                             ; preds = %originalBBpart21252
  br label %4081, !dbg !2311

4081:                                             ; preds = %4080
  %4082 = load i64, i64* %29, align 8, !dbg !2313
  %4083 = load i64, i64* %20, align 8, !dbg !2313
  %4084 = icmp ult i64 %4082, %4083, !dbg !2313
  br i1 %4084, label %4085, label %4105, !dbg !2316

4085:                                             ; preds = %4081
  %4086 = load i32, i32* @x.35
  %4087 = load i32, i32* @y.36
  %4088 = sub i32 %4086, 1
  %4089 = mul i32 %4086, %4088
  %4090 = urem i32 %4089, 2
  %4091 = icmp eq i32 %4090, 0
  %4092 = icmp slt i32 %4087, 10
  %4093 = or i1 %4091, %4092
  br i1 %4093, label %originalBB1254, label %originalBB1254alteredBB

originalBB1254:                                   ; preds = %4085, %originalBB1254alteredBB
  %4094 = load i8*, i8** %19, align 8, !dbg !2313
  %4095 = load i64, i64* %29, align 8, !dbg !2313
  %4096 = getelementptr inbounds i8, i8* %4094, i64 %4095, !dbg !2313
  store i8 39, i8* %4096, align 1, !dbg !2313
  %4097 = load i32, i32* @x.35
  %4098 = load i32, i32* @y.36
  %4099 = sub i32 %4097, 1
  %4100 = mul i32 %4097, %4099
  %4101 = urem i32 %4100, 2
  %4102 = icmp eq i32 %4101, 0
  %4103 = icmp slt i32 %4098, 10
  %4104 = or i1 %4102, %4103
  br i1 %4104, label %originalBBpart21256, label %originalBB1254alteredBB

originalBBpart21256:                              ; preds = %originalBB1254
  br label %4105, !dbg !2313

4105:                                             ; preds = %originalBBpart21256, %4081
  %4106 = load i32, i32* @x.35
  %4107 = load i32, i32* @y.36
  %4108 = sub i32 %4106, 1
  %4109 = mul i32 %4106, %4108
  %4110 = urem i32 %4109, 2
  %4111 = icmp eq i32 %4110, 0
  %4112 = icmp slt i32 %4107, 10
  %4113 = or i1 %4111, %4112
  br i1 %4113, label %originalBB1258, label %originalBB1258alteredBB

originalBB1258:                                   ; preds = %4105, %originalBB1258alteredBB
  %4114 = load i64, i64* %29, align 8, !dbg !2316
  %4115 = add i64 %4114, 1, !dbg !2316
  store i64 %4115, i64* %29, align 8, !dbg !2316
  %4116 = load i32, i32* @x.35
  %4117 = load i32, i32* @y.36
  %4118 = sub i32 %4116, 1
  %4119 = mul i32 %4116, %4118
  %4120 = urem i32 %4119, 2
  %4121 = icmp eq i32 %4120, 0
  %4122 = icmp slt i32 %4117, 10
  %4123 = or i1 %4121, %4122
  br i1 %4123, label %originalBBpart21268, label %originalBB1258alteredBB

originalBBpart21268:                              ; preds = %originalBB1258
  br label %4124, !dbg !2316

4124:                                             ; preds = %originalBBpart21268
  %4125 = load i32, i32* @x.35
  %4126 = load i32, i32* @y.36
  %4127 = sub i32 %4125, 1
  %4128 = mul i32 %4125, %4127
  %4129 = urem i32 %4128, 2
  %4130 = icmp eq i32 %4129, 0
  %4131 = icmp slt i32 %4126, 10
  %4132 = or i1 %4130, %4131
  br i1 %4132, label %originalBB1270, label %originalBB1270alteredBB

originalBB1270:                                   ; preds = %4124, %originalBB1270alteredBB
  %4133 = load i32, i32* @x.35
  %4134 = load i32, i32* @y.36
  %4135 = sub i32 %4133, 1
  %4136 = mul i32 %4133, %4135
  %4137 = urem i32 %4136, 2
  %4138 = icmp eq i32 %4137, 0
  %4139 = icmp slt i32 %4134, 10
  %4140 = or i1 %4138, %4139
  br i1 %4140, label %originalBBpart21272, label %originalBB1270alteredBB

originalBBpart21272:                              ; preds = %originalBB1270
  br label %4141, !dbg !2311

4141:                                             ; preds = %originalBBpart21272
  %4142 = load i32, i32* @x.35
  %4143 = load i32, i32* @y.36
  %4144 = sub i32 %4142, 1
  %4145 = mul i32 %4142, %4144
  %4146 = urem i32 %4145, 2
  %4147 = icmp eq i32 %4146, 0
  %4148 = icmp slt i32 %4143, 10
  %4149 = or i1 %4147, %4148
  br i1 %4149, label %originalBB1274, label %originalBB1274alteredBB

originalBB1274:                                   ; preds = %4141, %originalBB1274alteredBB
  %4150 = load i64, i64* %29, align 8, !dbg !2317
  %4151 = load i64, i64* %20, align 8, !dbg !2317
  %4152 = icmp ult i64 %4150, %4151, !dbg !2317
  %4153 = load i32, i32* @x.35
  %4154 = load i32, i32* @y.36
  %4155 = sub i32 %4153, 1
  %4156 = mul i32 %4153, %4155
  %4157 = urem i32 %4156, 2
  %4158 = icmp eq i32 %4157, 0
  %4159 = icmp slt i32 %4154, 10
  %4160 = or i1 %4158, %4159
  br i1 %4160, label %originalBBpart21276, label %originalBB1274alteredBB

originalBBpart21276:                              ; preds = %originalBB1274
  br i1 %4152, label %4161, label %4181, !dbg !2320

4161:                                             ; preds = %originalBBpart21276
  %4162 = load i32, i32* @x.35
  %4163 = load i32, i32* @y.36
  %4164 = sub i32 %4162, 1
  %4165 = mul i32 %4162, %4164
  %4166 = urem i32 %4165, 2
  %4167 = icmp eq i32 %4166, 0
  %4168 = icmp slt i32 %4163, 10
  %4169 = or i1 %4167, %4168
  br i1 %4169, label %originalBB1278, label %originalBB1278alteredBB

originalBB1278:                                   ; preds = %4161, %originalBB1278alteredBB
  %4170 = load i8*, i8** %19, align 8, !dbg !2317
  %4171 = load i64, i64* %29, align 8, !dbg !2317
  %4172 = getelementptr inbounds i8, i8* %4170, i64 %4171, !dbg !2317
  store i8 39, i8* %4172, align 1, !dbg !2317
  %4173 = load i32, i32* @x.35
  %4174 = load i32, i32* @y.36
  %4175 = sub i32 %4173, 1
  %4176 = mul i32 %4173, %4175
  %4177 = urem i32 %4176, 2
  %4178 = icmp eq i32 %4177, 0
  %4179 = icmp slt i32 %4174, 10
  %4180 = or i1 %4178, %4179
  br i1 %4180, label %originalBBpart21280, label %originalBB1278alteredBB

originalBBpart21280:                              ; preds = %originalBB1278
  br label %4181, !dbg !2317

4181:                                             ; preds = %originalBBpart21280, %originalBBpart21276
  %4182 = load i32, i32* @x.35
  %4183 = load i32, i32* @y.36
  %4184 = sub i32 %4182, 1
  %4185 = mul i32 %4182, %4184
  %4186 = urem i32 %4185, 2
  %4187 = icmp eq i32 %4186, 0
  %4188 = icmp slt i32 %4183, 10
  %4189 = or i1 %4187, %4188
  br i1 %4189, label %originalBB1282, label %originalBB1282alteredBB

originalBB1282:                                   ; preds = %4181, %originalBB1282alteredBB
  %4190 = load i64, i64* %29, align 8, !dbg !2320
  %4191 = add i64 %4190, 1, !dbg !2320
  store i64 %4191, i64* %29, align 8, !dbg !2320
  %4192 = load i32, i32* @x.35
  %4193 = load i32, i32* @y.36
  %4194 = sub i32 %4192, 1
  %4195 = mul i32 %4192, %4194
  %4196 = urem i32 %4195, 2
  %4197 = icmp eq i32 %4196, 0
  %4198 = icmp slt i32 %4193, 10
  %4199 = or i1 %4197, %4198
  br i1 %4199, label %originalBBpart21289, label %originalBB1282alteredBB

originalBBpart21289:                              ; preds = %originalBB1282
  br label %4200, !dbg !2320

4200:                                             ; preds = %originalBBpart21289
  store i8 0, i8* %36, align 1, !dbg !2311
  br label %4201, !dbg !2311

4201:                                             ; preds = %4200, %originalBBpart21252, %originalBBpart21248
  %4202 = load i32, i32* @x.35
  %4203 = load i32, i32* @y.36
  %4204 = sub i32 %4202, 1
  %4205 = mul i32 %4202, %4204
  %4206 = urem i32 %4205, 2
  %4207 = icmp eq i32 %4206, 0
  %4208 = icmp slt i32 %4203, 10
  %4209 = or i1 %4207, %4208
  br i1 %4209, label %originalBB1291, label %originalBB1291alteredBB

originalBB1291:                                   ; preds = %4201, %originalBB1291alteredBB
  %4210 = load i32, i32* @x.35
  %4211 = load i32, i32* @y.36
  %4212 = sub i32 %4210, 1
  %4213 = mul i32 %4210, %4212
  %4214 = urem i32 %4213, 2
  %4215 = icmp eq i32 %4214, 0
  %4216 = icmp slt i32 %4211, 10
  %4217 = or i1 %4215, %4216
  br i1 %4217, label %originalBBpart21293, label %originalBB1291alteredBB

originalBBpart21293:                              ; preds = %originalBB1291
  br label %4218, !dbg !2310

4218:                                             ; preds = %originalBBpart21293
  br label %4219, !dbg !2321

4219:                                             ; preds = %4218
  %4220 = load i64, i64* %29, align 8, !dbg !2322
  %4221 = load i64, i64* %20, align 8, !dbg !2322
  %4222 = icmp ult i64 %4220, %4221, !dbg !2322
  br i1 %4222, label %4223, label %4244, !dbg !2325

4223:                                             ; preds = %4219
  %4224 = load i32, i32* @x.35
  %4225 = load i32, i32* @y.36
  %4226 = sub i32 %4224, 1
  %4227 = mul i32 %4224, %4226
  %4228 = urem i32 %4227, 2
  %4229 = icmp eq i32 %4228, 0
  %4230 = icmp slt i32 %4225, 10
  %4231 = or i1 %4229, %4230
  br i1 %4231, label %originalBB1295, label %originalBB1295alteredBB

originalBB1295:                                   ; preds = %4223, %originalBB1295alteredBB
  %4232 = load i8, i8* %39, align 1, !dbg !2322
  %4233 = load i8*, i8** %19, align 8, !dbg !2322
  %4234 = load i64, i64* %29, align 8, !dbg !2322
  %4235 = getelementptr inbounds i8, i8* %4233, i64 %4234, !dbg !2322
  store i8 %4232, i8* %4235, align 1, !dbg !2322
  %4236 = load i32, i32* @x.35
  %4237 = load i32, i32* @y.36
  %4238 = sub i32 %4236, 1
  %4239 = mul i32 %4236, %4238
  %4240 = urem i32 %4239, 2
  %4241 = icmp eq i32 %4240, 0
  %4242 = icmp slt i32 %4237, 10
  %4243 = or i1 %4241, %4242
  br i1 %4243, label %originalBBpart21297, label %originalBB1295alteredBB

originalBBpart21297:                              ; preds = %originalBB1295
  br label %4244, !dbg !2322

4244:                                             ; preds = %originalBBpart21297, %4219
  %4245 = load i32, i32* @x.35
  %4246 = load i32, i32* @y.36
  %4247 = sub i32 %4245, 1
  %4248 = mul i32 %4245, %4247
  %4249 = urem i32 %4248, 2
  %4250 = icmp eq i32 %4249, 0
  %4251 = icmp slt i32 %4246, 10
  %4252 = or i1 %4250, %4251
  br i1 %4252, label %originalBB1299, label %originalBB1299alteredBB

originalBB1299:                                   ; preds = %4244, %originalBB1299alteredBB
  %4253 = load i64, i64* %29, align 8, !dbg !2325
  %4254 = add i64 %4253, 1, !dbg !2325
  store i64 %4254, i64* %29, align 8, !dbg !2325
  %4255 = load i32, i32* @x.35
  %4256 = load i32, i32* @y.36
  %4257 = sub i32 %4255, 1
  %4258 = mul i32 %4255, %4257
  %4259 = urem i32 %4258, 2
  %4260 = icmp eq i32 %4259, 0
  %4261 = icmp slt i32 %4256, 10
  %4262 = or i1 %4260, %4261
  br i1 %4262, label %originalBBpart21306, label %originalBB1299alteredBB

originalBBpart21306:                              ; preds = %originalBB1299
  br label %4263, !dbg !2325

4263:                                             ; preds = %originalBBpart21306
  %4264 = load i32, i32* @x.35
  %4265 = load i32, i32* @y.36
  %4266 = sub i32 %4264, 1
  %4267 = mul i32 %4264, %4266
  %4268 = urem i32 %4267, 2
  %4269 = icmp eq i32 %4268, 0
  %4270 = icmp slt i32 %4265, 10
  %4271 = or i1 %4269, %4270
  br i1 %4271, label %originalBB1308, label %originalBB1308alteredBB

originalBB1308:                                   ; preds = %4263, %originalBB1308alteredBB
  %4272 = load i8*, i8** %21, align 8, !dbg !2326
  %4273 = load i64, i64* %28, align 8, !dbg !2327
  %4274 = add i64 %4273, 1, !dbg !2327
  store i64 %4274, i64* %28, align 8, !dbg !2327
  %4275 = getelementptr inbounds i8, i8* %4272, i64 %4274, !dbg !2326
  %4276 = load i8, i8* %4275, align 1, !dbg !2326
  store i8 %4276, i8* %39, align 1, !dbg !2328
  %4277 = load i32, i32* @x.35
  %4278 = load i32, i32* @y.36
  %4279 = sub i32 %4277, 1
  %4280 = mul i32 %4277, %4279
  %4281 = urem i32 %4280, 2
  %4282 = icmp eq i32 %4281, 0
  %4283 = icmp slt i32 %4278, 10
  %4284 = or i1 %4282, %4283
  br i1 %4284, label %originalBBpart21313, label %originalBB1308alteredBB

originalBBpart21313:                              ; preds = %originalBB1308
  br label %3398, !dbg !2329, !llvm.loop !2330

4285:                                             ; preds = %originalBBpart21244
  %4286 = load i32, i32* @x.35
  %4287 = load i32, i32* @y.36
  %4288 = sub i32 %4286, 1
  %4289 = mul i32 %4286, %4288
  %4290 = urem i32 %4289, 2
  %4291 = icmp eq i32 %4290, 0
  %4292 = icmp slt i32 %4287, 10
  %4293 = or i1 %4291, %4292
  br i1 %4293, label %originalBB1315, label %originalBB1315alteredBB

originalBB1315:                                   ; preds = %4285, %originalBB1315alteredBB
  %4294 = load i32, i32* @x.35
  %4295 = load i32, i32* @y.36
  %4296 = sub i32 %4294, 1
  %4297 = mul i32 %4294, %4296
  %4298 = urem i32 %4297, 2
  %4299 = icmp eq i32 %4298, 0
  %4300 = icmp slt i32 %4295, 10
  %4301 = or i1 %4299, %4300
  br i1 %4301, label %originalBBpart21317, label %originalBB1315alteredBB

originalBBpart21317:                              ; preds = %originalBB1315
  br label %4796, !dbg !2333

4302:                                             ; preds = %originalBBpart21044, %originalBBpart21040
  %4303 = load i32, i32* @x.35
  %4304 = load i32, i32* @y.36
  %4305 = sub i32 %4303, 1
  %4306 = mul i32 %4303, %4305
  %4307 = urem i32 %4306, 2
  %4308 = icmp eq i32 %4307, 0
  %4309 = icmp slt i32 %4304, 10
  %4310 = or i1 %4308, %4309
  br i1 %4310, label %originalBB1319, label %originalBB1319alteredBB

originalBB1319:                                   ; preds = %4302, %originalBB1319alteredBB
  %4311 = load i32, i32* @x.35
  %4312 = load i32, i32* @y.36
  %4313 = sub i32 %4311, 1
  %4314 = mul i32 %4311, %4313
  %4315 = urem i32 %4314, 2
  %4316 = icmp eq i32 %4315, 0
  %4317 = icmp slt i32 %4312, 10
  %4318 = or i1 %4316, %4317
  br i1 %4318, label %originalBBpart21321, label %originalBB1319alteredBB

originalBBpart21321:                              ; preds = %originalBB1319
  br label %4319, !dbg !2334

4319:                                             ; preds = %originalBBpart21321, %originalBBpart2834, %2748, %originalBBpart2748, %originalBBpart2728, %originalBBpart2716, %originalBBpart2708, %2034, %originalBBpart2490
  %4320 = load i32, i32* @x.35
  %4321 = load i32, i32* @y.36
  %4322 = sub i32 %4320, 1
  %4323 = mul i32 %4320, %4322
  %4324 = urem i32 %4323, 2
  %4325 = icmp eq i32 %4324, 0
  %4326 = icmp slt i32 %4321, 10
  %4327 = or i1 %4325, %4326
  br i1 %4327, label %originalBB1323, label %originalBB1323alteredBB

originalBB1323:                                   ; preds = %4319, %originalBB1323alteredBB
  %4328 = load i8, i8* %33, align 1, !dbg !2335
  %4329 = trunc i8 %4328 to i1, !dbg !2335
  %4330 = load i32, i32* @x.35
  %4331 = load i32, i32* @y.36
  %4332 = sub i32 %4330, 1
  %4333 = mul i32 %4330, %4332
  %4334 = urem i32 %4333, 2
  %4335 = icmp eq i32 %4334, 0
  %4336 = icmp slt i32 %4331, 10
  %4337 = or i1 %4335, %4336
  br i1 %4337, label %originalBBpart21325, label %originalBB1323alteredBB

originalBBpart21325:                              ; preds = %originalBB1323
  br i1 %4329, label %4338, label %4341, !dbg !2337

4338:                                             ; preds = %originalBBpart21325
  %4339 = load i32, i32* %23, align 4, !dbg !2338
  %4340 = icmp ne i32 %4339, 2, !dbg !2339
  br i1 %4340, label %4360, label %4341, !dbg !2340

4341:                                             ; preds = %4338, %originalBBpart21325
  %4342 = load i32, i32* @x.35
  %4343 = load i32, i32* @y.36
  %4344 = sub i32 %4342, 1
  %4345 = mul i32 %4342, %4344
  %4346 = urem i32 %4345, 2
  %4347 = icmp eq i32 %4346, 0
  %4348 = icmp slt i32 %4343, 10
  %4349 = or i1 %4347, %4348
  br i1 %4349, label %originalBB1327, label %originalBB1327alteredBB

originalBB1327:                                   ; preds = %4341, %originalBB1327alteredBB
  %4350 = load i8, i8* %35, align 1, !dbg !2341
  %4351 = trunc i8 %4350 to i1, !dbg !2341
  %4352 = load i32, i32* @x.35
  %4353 = load i32, i32* @y.36
  %4354 = sub i32 %4352, 1
  %4355 = mul i32 %4352, %4354
  %4356 = urem i32 %4355, 2
  %4357 = icmp eq i32 %4356, 0
  %4358 = icmp slt i32 %4353, 10
  %4359 = or i1 %4357, %4358
  br i1 %4359, label %originalBBpart21329, label %originalBB1327alteredBB

originalBBpart21329:                              ; preds = %originalBB1327
  br i1 %4351, label %4360, label %4409, !dbg !2342

4360:                                             ; preds = %originalBBpart21329, %4338
  %4361 = load i32, i32* @x.35
  %4362 = load i32, i32* @y.36
  %4363 = sub i32 %4361, 1
  %4364 = mul i32 %4361, %4363
  %4365 = urem i32 %4364, 2
  %4366 = icmp eq i32 %4365, 0
  %4367 = icmp slt i32 %4362, 10
  %4368 = or i1 %4366, %4367
  br i1 %4368, label %originalBB1331, label %originalBB1331alteredBB

originalBB1331:                                   ; preds = %4360, %originalBB1331alteredBB
  %4369 = load i32*, i32** %25, align 8, !dbg !2343
  %4370 = icmp ne i32* %4369, null, !dbg !2343
  %4371 = load i32, i32* @x.35
  %4372 = load i32, i32* @y.36
  %4373 = sub i32 %4371, 1
  %4374 = mul i32 %4371, %4373
  %4375 = urem i32 %4374, 2
  %4376 = icmp eq i32 %4375, 0
  %4377 = icmp slt i32 %4372, 10
  %4378 = or i1 %4376, %4377
  br i1 %4378, label %originalBBpart21333, label %originalBB1331alteredBB

originalBBpart21333:                              ; preds = %originalBB1331
  br i1 %4370, label %4379, label %4409, !dbg !2344

4379:                                             ; preds = %originalBBpart21333
  %4380 = load i32, i32* @x.35
  %4381 = load i32, i32* @y.36
  %4382 = sub i32 %4380, 1
  %4383 = mul i32 %4380, %4382
  %4384 = urem i32 %4383, 2
  %4385 = icmp eq i32 %4384, 0
  %4386 = icmp slt i32 %4381, 10
  %4387 = or i1 %4385, %4386
  br i1 %4387, label %originalBB1335, label %originalBB1335alteredBB

originalBB1335:                                   ; preds = %4379, %originalBB1335alteredBB
  %4388 = load i32*, i32** %25, align 8, !dbg !2345
  %4389 = load i8, i8* %39, align 1, !dbg !2346
  %4390 = zext i8 %4389 to i64, !dbg !2346
  %4391 = udiv i64 %4390, 32, !dbg !2347
  %4392 = getelementptr inbounds i32, i32* %4388, i64 %4391, !dbg !2345
  %4393 = load i32, i32* %4392, align 4, !dbg !2345
  %4394 = load i8, i8* %39, align 1, !dbg !2348
  %4395 = zext i8 %4394 to i64, !dbg !2348
  %4396 = urem i64 %4395, 32, !dbg !2349
  %4397 = trunc i64 %4396 to i32, !dbg !2350
  %4398 = lshr i32 %4393, %4397, !dbg !2350
  %4399 = and i32 %4398, 1, !dbg !2351
  %4400 = icmp ne i32 %4399, 0, !dbg !2351
  %4401 = load i32, i32* @x.35
  %4402 = load i32, i32* @y.36
  %4403 = sub i32 %4401, 1
  %4404 = mul i32 %4401, %4403
  %4405 = urem i32 %4404, 2
  %4406 = icmp eq i32 %4405, 0
  %4407 = icmp slt i32 %4402, 10
  %4408 = or i1 %4406, %4407
  br i1 %4408, label %originalBBpart21361, label %originalBB1335alteredBB

originalBBpart21361:                              ; preds = %originalBB1335
  br i1 %4400, label %4445, label %4409, !dbg !2352

4409:                                             ; preds = %originalBBpart21361, %originalBBpart21333, %originalBBpart21329
  %4410 = load i32, i32* @x.35
  %4411 = load i32, i32* @y.36
  %4412 = sub i32 %4410, 1
  %4413 = mul i32 %4410, %4412
  %4414 = urem i32 %4413, 2
  %4415 = icmp eq i32 %4414, 0
  %4416 = icmp slt i32 %4411, 10
  %4417 = or i1 %4415, %4416
  br i1 %4417, label %originalBB1363, label %originalBB1363alteredBB

originalBB1363:                                   ; preds = %4409, %originalBB1363alteredBB
  %4418 = load i8, i8* %41, align 1, !dbg !2353
  %4419 = trunc i8 %4418 to i1, !dbg !2353
  %4420 = load i32, i32* @x.35
  %4421 = load i32, i32* @y.36
  %4422 = sub i32 %4420, 1
  %4423 = mul i32 %4420, %4422
  %4424 = urem i32 %4423, 2
  %4425 = icmp eq i32 %4424, 0
  %4426 = icmp slt i32 %4421, 10
  %4427 = or i1 %4425, %4426
  br i1 %4427, label %originalBBpart21365, label %originalBB1363alteredBB

originalBBpart21365:                              ; preds = %originalBB1363
  br i1 %4419, label %4445, label %4428, !dbg !2354

4428:                                             ; preds = %originalBBpart21365
  %4429 = load i32, i32* @x.35
  %4430 = load i32, i32* @y.36
  %4431 = sub i32 %4429, 1
  %4432 = mul i32 %4429, %4431
  %4433 = urem i32 %4432, 2
  %4434 = icmp eq i32 %4433, 0
  %4435 = icmp slt i32 %4430, 10
  %4436 = or i1 %4434, %4435
  br i1 %4436, label %originalBB1367, label %originalBB1367alteredBB

originalBB1367:                                   ; preds = %4428, %originalBB1367alteredBB
  %4437 = load i32, i32* @x.35
  %4438 = load i32, i32* @y.36
  %4439 = sub i32 %4437, 1
  %4440 = mul i32 %4437, %4439
  %4441 = urem i32 %4440, 2
  %4442 = icmp eq i32 %4441, 0
  %4443 = icmp slt i32 %4438, 10
  %4444 = or i1 %4442, %4443
  br i1 %4444, label %originalBBpart21369, label %originalBB1367alteredBB

originalBBpart21369:                              ; preds = %originalBB1367
  br label %4796, !dbg !2355

4445:                                             ; preds = %originalBBpart21365, %originalBBpart21361
  %4446 = load i32, i32* @x.35
  %4447 = load i32, i32* @y.36
  %4448 = sub i32 %4446, 1
  %4449 = mul i32 %4446, %4448
  %4450 = urem i32 %4449, 2
  %4451 = icmp eq i32 %4450, 0
  %4452 = icmp slt i32 %4447, 10
  %4453 = or i1 %4451, %4452
  br i1 %4453, label %originalBB1371, label %originalBB1371alteredBB

originalBB1371:                                   ; preds = %4445, %originalBB1371alteredBB
  %4454 = load i32, i32* @x.35
  %4455 = load i32, i32* @y.36
  %4456 = sub i32 %4454, 1
  %4457 = mul i32 %4454, %4456
  %4458 = urem i32 %4457, 2
  %4459 = icmp eq i32 %4458, 0
  %4460 = icmp slt i32 %4455, 10
  %4461 = or i1 %4459, %4460
  br i1 %4461, label %originalBBpart21373, label %originalBB1371alteredBB

originalBBpart21373:                              ; preds = %originalBB1371
  br label %4462, !dbg !2353

4462:                                             ; preds = %originalBBpart21373, %2265
  call void @llvm.dbg.label(metadata !2356), !dbg !2357
  %4463 = load i32, i32* @x.35
  %4464 = load i32, i32* @y.36
  %4465 = sub i32 %4463, 1
  %4466 = mul i32 %4463, %4465
  %4467 = urem i32 %4466, 2
  %4468 = icmp eq i32 %4467, 0
  %4469 = icmp slt i32 %4464, 10
  %4470 = or i1 %4468, %4469
  br i1 %4470, label %originalBB1375, label %originalBB1375alteredBB

originalBB1375:                                   ; preds = %4462, %originalBB1375alteredBB
  %4471 = load i32, i32* @x.35
  %4472 = load i32, i32* @y.36
  %4473 = sub i32 %4471, 1
  %4474 = mul i32 %4471, %4473
  %4475 = urem i32 %4474, 2
  %4476 = icmp eq i32 %4475, 0
  %4477 = icmp slt i32 %4472, 10
  %4478 = or i1 %4476, %4477
  br i1 %4478, label %originalBBpart21377, label %originalBB1375alteredBB

originalBBpart21377:                              ; preds = %originalBB1375
  br label %4479, !dbg !2358

4479:                                             ; preds = %originalBBpart21377
  %4480 = load i8, i8* %35, align 1, !dbg !2359
  %4481 = trunc i8 %4480 to i1, !dbg !2359
  br i1 %4481, label %4482, label %4499, !dbg !2362

4482:                                             ; preds = %4479
  %4483 = load i32, i32* @x.35
  %4484 = load i32, i32* @y.36
  %4485 = sub i32 %4483, 1
  %4486 = mul i32 %4483, %4485
  %4487 = urem i32 %4486, 2
  %4488 = icmp eq i32 %4487, 0
  %4489 = icmp slt i32 %4484, 10
  %4490 = or i1 %4488, %4489
  br i1 %4490, label %originalBB1379, label %originalBB1379alteredBB

originalBB1379:                                   ; preds = %4482, %originalBB1379alteredBB
  %4491 = load i32, i32* @x.35
  %4492 = load i32, i32* @y.36
  %4493 = sub i32 %4491, 1
  %4494 = mul i32 %4491, %4493
  %4495 = urem i32 %4494, 2
  %4496 = icmp eq i32 %4495, 0
  %4497 = icmp slt i32 %4492, 10
  %4498 = or i1 %4496, %4497
  br i1 %4498, label %originalBBpart21381, label %originalBB1379alteredBB

originalBBpart21381:                              ; preds = %originalBB1379
  br label %5413, !dbg !2359

4499:                                             ; preds = %4479
  %4500 = load i32, i32* @x.35
  %4501 = load i32, i32* @y.36
  %4502 = sub i32 %4500, 1
  %4503 = mul i32 %4500, %4502
  %4504 = urem i32 %4503, 2
  %4505 = icmp eq i32 %4504, 0
  %4506 = icmp slt i32 %4501, 10
  %4507 = or i1 %4505, %4506
  br i1 %4507, label %originalBB1383, label %originalBB1383alteredBB

originalBB1383:                                   ; preds = %4499, %originalBB1383alteredBB
  store i8 1, i8* %42, align 1, !dbg !2362
  %4508 = load i32, i32* %23, align 4, !dbg !2363
  %4509 = icmp eq i32 %4508, 2, !dbg !2363
  %4510 = load i32, i32* @x.35
  %4511 = load i32, i32* @y.36
  %4512 = sub i32 %4510, 1
  %4513 = mul i32 %4510, %4512
  %4514 = urem i32 %4513, 2
  %4515 = icmp eq i32 %4514, 0
  %4516 = icmp slt i32 %4511, 10
  %4517 = or i1 %4515, %4516
  br i1 %4517, label %originalBBpart21385, label %originalBB1383alteredBB

originalBBpart21385:                              ; preds = %originalBB1383
  br i1 %4509, label %4518, label %4702, !dbg !2363

4518:                                             ; preds = %originalBBpart21385
  %4519 = load i32, i32* @x.35
  %4520 = load i32, i32* @y.36
  %4521 = sub i32 %4519, 1
  %4522 = mul i32 %4519, %4521
  %4523 = urem i32 %4522, 2
  %4524 = icmp eq i32 %4523, 0
  %4525 = icmp slt i32 %4520, 10
  %4526 = or i1 %4524, %4525
  br i1 %4526, label %originalBB1387, label %originalBB1387alteredBB

originalBB1387:                                   ; preds = %4518, %originalBB1387alteredBB
  %4527 = load i8, i8* %36, align 1, !dbg !2363
  %4528 = trunc i8 %4527 to i1, !dbg !2363
  %4529 = load i32, i32* @x.35
  %4530 = load i32, i32* @y.36
  %4531 = sub i32 %4529, 1
  %4532 = mul i32 %4529, %4531
  %4533 = urem i32 %4532, 2
  %4534 = icmp eq i32 %4533, 0
  %4535 = icmp slt i32 %4530, 10
  %4536 = or i1 %4534, %4535
  br i1 %4536, label %originalBBpart21389, label %originalBB1387alteredBB

originalBBpart21389:                              ; preds = %originalBB1387
  br i1 %4528, label %4702, label %4537, !dbg !2362

4537:                                             ; preds = %originalBBpart21389
  br label %4538, !dbg !2365

4538:                                             ; preds = %4537
  %4539 = load i32, i32* @x.35
  %4540 = load i32, i32* @y.36
  %4541 = sub i32 %4539, 1
  %4542 = mul i32 %4539, %4541
  %4543 = urem i32 %4542, 2
  %4544 = icmp eq i32 %4543, 0
  %4545 = icmp slt i32 %4540, 10
  %4546 = or i1 %4544, %4545
  br i1 %4546, label %originalBB1391, label %originalBB1391alteredBB

originalBB1391:                                   ; preds = %4538, %originalBB1391alteredBB
  %4547 = load i64, i64* %29, align 8, !dbg !2367
  %4548 = load i64, i64* %20, align 8, !dbg !2367
  %4549 = icmp ult i64 %4547, %4548, !dbg !2367
  %4550 = load i32, i32* @x.35
  %4551 = load i32, i32* @y.36
  %4552 = sub i32 %4550, 1
  %4553 = mul i32 %4550, %4552
  %4554 = urem i32 %4553, 2
  %4555 = icmp eq i32 %4554, 0
  %4556 = icmp slt i32 %4551, 10
  %4557 = or i1 %4555, %4556
  br i1 %4557, label %originalBBpart21393, label %originalBB1391alteredBB

originalBBpart21393:                              ; preds = %originalBB1391
  br i1 %4549, label %4558, label %4578, !dbg !2370

4558:                                             ; preds = %originalBBpart21393
  %4559 = load i32, i32* @x.35
  %4560 = load i32, i32* @y.36
  %4561 = sub i32 %4559, 1
  %4562 = mul i32 %4559, %4561
  %4563 = urem i32 %4562, 2
  %4564 = icmp eq i32 %4563, 0
  %4565 = icmp slt i32 %4560, 10
  %4566 = or i1 %4564, %4565
  br i1 %4566, label %originalBB1395, label %originalBB1395alteredBB

originalBB1395:                                   ; preds = %4558, %originalBB1395alteredBB
  %4567 = load i8*, i8** %19, align 8, !dbg !2367
  %4568 = load i64, i64* %29, align 8, !dbg !2367
  %4569 = getelementptr inbounds i8, i8* %4567, i64 %4568, !dbg !2367
  store i8 39, i8* %4569, align 1, !dbg !2367
  %4570 = load i32, i32* @x.35
  %4571 = load i32, i32* @y.36
  %4572 = sub i32 %4570, 1
  %4573 = mul i32 %4570, %4572
  %4574 = urem i32 %4573, 2
  %4575 = icmp eq i32 %4574, 0
  %4576 = icmp slt i32 %4571, 10
  %4577 = or i1 %4575, %4576
  br i1 %4577, label %originalBBpart21397, label %originalBB1395alteredBB

originalBBpart21397:                              ; preds = %originalBB1395
  br label %4578, !dbg !2367

4578:                                             ; preds = %originalBBpart21397, %originalBBpart21393
  %4579 = load i32, i32* @x.35
  %4580 = load i32, i32* @y.36
  %4581 = sub i32 %4579, 1
  %4582 = mul i32 %4579, %4581
  %4583 = urem i32 %4582, 2
  %4584 = icmp eq i32 %4583, 0
  %4585 = icmp slt i32 %4580, 10
  %4586 = or i1 %4584, %4585
  br i1 %4586, label %originalBB1399, label %originalBB1399alteredBB

originalBB1399:                                   ; preds = %4578, %originalBB1399alteredBB
  %4587 = load i64, i64* %29, align 8, !dbg !2370
  %4588 = add i64 %4587, 1, !dbg !2370
  store i64 %4588, i64* %29, align 8, !dbg !2370
  %4589 = load i32, i32* @x.35
  %4590 = load i32, i32* @y.36
  %4591 = sub i32 %4589, 1
  %4592 = mul i32 %4589, %4591
  %4593 = urem i32 %4592, 2
  %4594 = icmp eq i32 %4593, 0
  %4595 = icmp slt i32 %4590, 10
  %4596 = or i1 %4594, %4595
  br i1 %4596, label %originalBBpart21413, label %originalBB1399alteredBB

originalBBpart21413:                              ; preds = %originalBB1399
  br label %4597, !dbg !2370

4597:                                             ; preds = %originalBBpart21413
  br label %4598, !dbg !2365

4598:                                             ; preds = %4597
  %4599 = load i32, i32* @x.35
  %4600 = load i32, i32* @y.36
  %4601 = sub i32 %4599, 1
  %4602 = mul i32 %4599, %4601
  %4603 = urem i32 %4602, 2
  %4604 = icmp eq i32 %4603, 0
  %4605 = icmp slt i32 %4600, 10
  %4606 = or i1 %4604, %4605
  br i1 %4606, label %originalBB1415, label %originalBB1415alteredBB

originalBB1415:                                   ; preds = %4598, %originalBB1415alteredBB
  %4607 = load i64, i64* %29, align 8, !dbg !2371
  %4608 = load i64, i64* %20, align 8, !dbg !2371
  %4609 = icmp ult i64 %4607, %4608, !dbg !2371
  %4610 = load i32, i32* @x.35
  %4611 = load i32, i32* @y.36
  %4612 = sub i32 %4610, 1
  %4613 = mul i32 %4610, %4612
  %4614 = urem i32 %4613, 2
  %4615 = icmp eq i32 %4614, 0
  %4616 = icmp slt i32 %4611, 10
  %4617 = or i1 %4615, %4616
  br i1 %4617, label %originalBBpart21417, label %originalBB1415alteredBB

originalBBpart21417:                              ; preds = %originalBB1415
  br i1 %4609, label %4618, label %4622, !dbg !2374

4618:                                             ; preds = %originalBBpart21417
  %4619 = load i8*, i8** %19, align 8, !dbg !2371
  %4620 = load i64, i64* %29, align 8, !dbg !2371
  %4621 = getelementptr inbounds i8, i8* %4619, i64 %4620, !dbg !2371
  store i8 36, i8* %4621, align 1, !dbg !2371
  br label %4622, !dbg !2371

4622:                                             ; preds = %4618, %originalBBpart21417
  %4623 = load i32, i32* @x.35
  %4624 = load i32, i32* @y.36
  %4625 = sub i32 %4623, 1
  %4626 = mul i32 %4623, %4625
  %4627 = urem i32 %4626, 2
  %4628 = icmp eq i32 %4627, 0
  %4629 = icmp slt i32 %4624, 10
  %4630 = or i1 %4628, %4629
  br i1 %4630, label %originalBB1419, label %originalBB1419alteredBB

originalBB1419:                                   ; preds = %4622, %originalBB1419alteredBB
  %4631 = load i64, i64* %29, align 8, !dbg !2374
  %4632 = add i64 %4631, 1, !dbg !2374
  store i64 %4632, i64* %29, align 8, !dbg !2374
  %4633 = load i32, i32* @x.35
  %4634 = load i32, i32* @y.36
  %4635 = sub i32 %4633, 1
  %4636 = mul i32 %4633, %4635
  %4637 = urem i32 %4636, 2
  %4638 = icmp eq i32 %4637, 0
  %4639 = icmp slt i32 %4634, 10
  %4640 = or i1 %4638, %4639
  br i1 %4640, label %originalBBpart21428, label %originalBB1419alteredBB

originalBBpart21428:                              ; preds = %originalBB1419
  br label %4641, !dbg !2374

4641:                                             ; preds = %originalBBpart21428
  %4642 = load i32, i32* @x.35
  %4643 = load i32, i32* @y.36
  %4644 = sub i32 %4642, 1
  %4645 = mul i32 %4642, %4644
  %4646 = urem i32 %4645, 2
  %4647 = icmp eq i32 %4646, 0
  %4648 = icmp slt i32 %4643, 10
  %4649 = or i1 %4647, %4648
  br i1 %4649, label %originalBB1430, label %originalBB1430alteredBB

originalBB1430:                                   ; preds = %4641, %originalBB1430alteredBB
  %4650 = load i32, i32* @x.35
  %4651 = load i32, i32* @y.36
  %4652 = sub i32 %4650, 1
  %4653 = mul i32 %4650, %4652
  %4654 = urem i32 %4653, 2
  %4655 = icmp eq i32 %4654, 0
  %4656 = icmp slt i32 %4651, 10
  %4657 = or i1 %4655, %4656
  br i1 %4657, label %originalBBpart21432, label %originalBB1430alteredBB

originalBBpart21432:                              ; preds = %originalBB1430
  br label %4658, !dbg !2365

4658:                                             ; preds = %originalBBpart21432
  %4659 = load i64, i64* %29, align 8, !dbg !2375
  %4660 = load i64, i64* %20, align 8, !dbg !2375
  %4661 = icmp ult i64 %4659, %4660, !dbg !2375
  br i1 %4661, label %4662, label %4682, !dbg !2378

4662:                                             ; preds = %4658
  %4663 = load i32, i32* @x.35
  %4664 = load i32, i32* @y.36
  %4665 = sub i32 %4663, 1
  %4666 = mul i32 %4663, %4665
  %4667 = urem i32 %4666, 2
  %4668 = icmp eq i32 %4667, 0
  %4669 = icmp slt i32 %4664, 10
  %4670 = or i1 %4668, %4669
  br i1 %4670, label %originalBB1434, label %originalBB1434alteredBB

originalBB1434:                                   ; preds = %4662, %originalBB1434alteredBB
  %4671 = load i8*, i8** %19, align 8, !dbg !2375
  %4672 = load i64, i64* %29, align 8, !dbg !2375
  %4673 = getelementptr inbounds i8, i8* %4671, i64 %4672, !dbg !2375
  store i8 39, i8* %4673, align 1, !dbg !2375
  %4674 = load i32, i32* @x.35
  %4675 = load i32, i32* @y.36
  %4676 = sub i32 %4674, 1
  %4677 = mul i32 %4674, %4676
  %4678 = urem i32 %4677, 2
  %4679 = icmp eq i32 %4678, 0
  %4680 = icmp slt i32 %4675, 10
  %4681 = or i1 %4679, %4680
  br i1 %4681, label %originalBBpart21436, label %originalBB1434alteredBB

originalBBpart21436:                              ; preds = %originalBB1434
  br label %4682, !dbg !2375

4682:                                             ; preds = %originalBBpart21436, %4658
  %4683 = load i32, i32* @x.35
  %4684 = load i32, i32* @y.36
  %4685 = sub i32 %4683, 1
  %4686 = mul i32 %4683, %4685
  %4687 = urem i32 %4686, 2
  %4688 = icmp eq i32 %4687, 0
  %4689 = icmp slt i32 %4684, 10
  %4690 = or i1 %4688, %4689
  br i1 %4690, label %originalBB1438, label %originalBB1438alteredBB

originalBB1438:                                   ; preds = %4682, %originalBB1438alteredBB
  %4691 = load i64, i64* %29, align 8, !dbg !2378
  %4692 = add i64 %4691, 1, !dbg !2378
  store i64 %4692, i64* %29, align 8, !dbg !2378
  %4693 = load i32, i32* @x.35
  %4694 = load i32, i32* @y.36
  %4695 = sub i32 %4693, 1
  %4696 = mul i32 %4693, %4695
  %4697 = urem i32 %4696, 2
  %4698 = icmp eq i32 %4697, 0
  %4699 = icmp slt i32 %4694, 10
  %4700 = or i1 %4698, %4699
  br i1 %4700, label %originalBBpart21454, label %originalBB1438alteredBB

originalBBpart21454:                              ; preds = %originalBB1438
  br label %4701, !dbg !2378

4701:                                             ; preds = %originalBBpart21454
  store i8 1, i8* %36, align 1, !dbg !2365
  br label %4702, !dbg !2365

4702:                                             ; preds = %4701, %originalBBpart21389, %originalBBpart21385
  %4703 = load i32, i32* @x.35
  %4704 = load i32, i32* @y.36
  %4705 = sub i32 %4703, 1
  %4706 = mul i32 %4703, %4705
  %4707 = urem i32 %4706, 2
  %4708 = icmp eq i32 %4707, 0
  %4709 = icmp slt i32 %4704, 10
  %4710 = or i1 %4708, %4709
  br i1 %4710, label %originalBB1456, label %originalBB1456alteredBB

originalBB1456:                                   ; preds = %4702, %originalBB1456alteredBB
  %4711 = load i32, i32* @x.35
  %4712 = load i32, i32* @y.36
  %4713 = sub i32 %4711, 1
  %4714 = mul i32 %4711, %4713
  %4715 = urem i32 %4714, 2
  %4716 = icmp eq i32 %4715, 0
  %4717 = icmp slt i32 %4712, 10
  %4718 = or i1 %4716, %4717
  br i1 %4718, label %originalBBpart21458, label %originalBB1456alteredBB

originalBBpart21458:                              ; preds = %originalBB1456
  br label %4719, !dbg !2362

4719:                                             ; preds = %originalBBpart21458
  %4720 = load i32, i32* @x.35
  %4721 = load i32, i32* @y.36
  %4722 = sub i32 %4720, 1
  %4723 = mul i32 %4720, %4722
  %4724 = urem i32 %4723, 2
  %4725 = icmp eq i32 %4724, 0
  %4726 = icmp slt i32 %4721, 10
  %4727 = or i1 %4725, %4726
  br i1 %4727, label %originalBB1460, label %originalBB1460alteredBB

originalBB1460:                                   ; preds = %4719, %originalBB1460alteredBB
  %4728 = load i64, i64* %29, align 8, !dbg !2379
  %4729 = load i64, i64* %20, align 8, !dbg !2379
  %4730 = icmp ult i64 %4728, %4729, !dbg !2379
  %4731 = load i32, i32* @x.35
  %4732 = load i32, i32* @y.36
  %4733 = sub i32 %4731, 1
  %4734 = mul i32 %4731, %4733
  %4735 = urem i32 %4734, 2
  %4736 = icmp eq i32 %4735, 0
  %4737 = icmp slt i32 %4732, 10
  %4738 = or i1 %4736, %4737
  br i1 %4738, label %originalBBpart21462, label %originalBB1460alteredBB

originalBBpart21462:                              ; preds = %originalBB1460
  br i1 %4730, label %4739, label %4743, !dbg !2382

4739:                                             ; preds = %originalBBpart21462
  %4740 = load i8*, i8** %19, align 8, !dbg !2379
  %4741 = load i64, i64* %29, align 8, !dbg !2379
  %4742 = getelementptr inbounds i8, i8* %4740, i64 %4741, !dbg !2379
  store i8 92, i8* %4742, align 1, !dbg !2379
  br label %4743, !dbg !2379

4743:                                             ; preds = %4739, %originalBBpart21462
  %4744 = load i32, i32* @x.35
  %4745 = load i32, i32* @y.36
  %4746 = sub i32 %4744, 1
  %4747 = mul i32 %4744, %4746
  %4748 = urem i32 %4747, 2
  %4749 = icmp eq i32 %4748, 0
  %4750 = icmp slt i32 %4745, 10
  %4751 = or i1 %4749, %4750
  br i1 %4751, label %originalBB1464, label %originalBB1464alteredBB

originalBB1464:                                   ; preds = %4743, %originalBB1464alteredBB
  %4752 = load i64, i64* %29, align 8, !dbg !2382
  %4753 = add i64 %4752, 1, !dbg !2382
  store i64 %4753, i64* %29, align 8, !dbg !2382
  %4754 = load i32, i32* @x.35
  %4755 = load i32, i32* @y.36
  %4756 = sub i32 %4754, 1
  %4757 = mul i32 %4754, %4756
  %4758 = urem i32 %4757, 2
  %4759 = icmp eq i32 %4758, 0
  %4760 = icmp slt i32 %4755, 10
  %4761 = or i1 %4759, %4760
  br i1 %4761, label %originalBBpart21468, label %originalBB1464alteredBB

originalBBpart21468:                              ; preds = %originalBB1464
  br label %4762, !dbg !2382

4762:                                             ; preds = %originalBBpart21468
  %4763 = load i32, i32* @x.35
  %4764 = load i32, i32* @y.36
  %4765 = sub i32 %4763, 1
  %4766 = mul i32 %4763, %4765
  %4767 = urem i32 %4766, 2
  %4768 = icmp eq i32 %4767, 0
  %4769 = icmp slt i32 %4764, 10
  %4770 = or i1 %4768, %4769
  br i1 %4770, label %originalBB1470, label %originalBB1470alteredBB

originalBB1470:                                   ; preds = %4762, %originalBB1470alteredBB
  %4771 = load i32, i32* @x.35
  %4772 = load i32, i32* @y.36
  %4773 = sub i32 %4771, 1
  %4774 = mul i32 %4771, %4773
  %4775 = urem i32 %4774, 2
  %4776 = icmp eq i32 %4775, 0
  %4777 = icmp slt i32 %4772, 10
  %4778 = or i1 %4776, %4777
  br i1 %4778, label %originalBBpart21472, label %originalBB1470alteredBB

originalBBpart21472:                              ; preds = %originalBB1470
  br label %4779, !dbg !2362

4779:                                             ; preds = %originalBBpart21472
  %4780 = load i32, i32* @x.35
  %4781 = load i32, i32* @y.36
  %4782 = sub i32 %4780, 1
  %4783 = mul i32 %4780, %4782
  %4784 = urem i32 %4783, 2
  %4785 = icmp eq i32 %4784, 0
  %4786 = icmp slt i32 %4781, 10
  %4787 = or i1 %4785, %4786
  br i1 %4787, label %originalBB1474, label %originalBB1474alteredBB

originalBB1474:                                   ; preds = %4779, %originalBB1474alteredBB
  %4788 = load i32, i32* @x.35
  %4789 = load i32, i32* @y.36
  %4790 = sub i32 %4788, 1
  %4791 = mul i32 %4788, %4790
  %4792 = urem i32 %4791, 2
  %4793 = icmp eq i32 %4792, 0
  %4794 = icmp slt i32 %4789, 10
  %4795 = or i1 %4793, %4794
  br i1 %4795, label %originalBBpart21476, label %originalBB1474alteredBB

originalBBpart21476:                              ; preds = %originalBB1474
  br label %4796, !dbg !2362

4796:                                             ; preds = %originalBBpart21476, %originalBBpart21369, %originalBBpart21317, %2204, %2162
  call void @llvm.dbg.label(metadata !2383), !dbg !2384
  br label %4797, !dbg !2385

4797:                                             ; preds = %4796
  %4798 = load i32, i32* @x.35
  %4799 = load i32, i32* @y.36
  %4800 = sub i32 %4798, 1
  %4801 = mul i32 %4798, %4800
  %4802 = urem i32 %4801, 2
  %4803 = icmp eq i32 %4802, 0
  %4804 = icmp slt i32 %4799, 10
  %4805 = or i1 %4803, %4804
  br i1 %4805, label %originalBB1478, label %originalBB1478alteredBB

originalBB1478:                                   ; preds = %4797, %originalBB1478alteredBB
  %4806 = load i8, i8* %36, align 1, !dbg !2386
  %4807 = trunc i8 %4806 to i1, !dbg !2386
  %4808 = load i32, i32* @x.35
  %4809 = load i32, i32* @y.36
  %4810 = sub i32 %4808, 1
  %4811 = mul i32 %4808, %4810
  %4812 = urem i32 %4811, 2
  %4813 = icmp eq i32 %4812, 0
  %4814 = icmp slt i32 %4809, 10
  %4815 = or i1 %4813, %4814
  br i1 %4815, label %originalBBpart21480, label %originalBB1478alteredBB

originalBBpart21480:                              ; preds = %originalBB1478
  br i1 %4807, label %4816, label %4940, !dbg !2386

4816:                                             ; preds = %originalBBpart21480
  %4817 = load i32, i32* @x.35
  %4818 = load i32, i32* @y.36
  %4819 = sub i32 %4817, 1
  %4820 = mul i32 %4817, %4819
  %4821 = urem i32 %4820, 2
  %4822 = icmp eq i32 %4821, 0
  %4823 = icmp slt i32 %4818, 10
  %4824 = or i1 %4822, %4823
  br i1 %4824, label %originalBB1482, label %originalBB1482alteredBB

originalBB1482:                                   ; preds = %4816, %originalBB1482alteredBB
  %4825 = load i8, i8* %42, align 1, !dbg !2386
  %4826 = trunc i8 %4825 to i1, !dbg !2386
  %4827 = load i32, i32* @x.35
  %4828 = load i32, i32* @y.36
  %4829 = sub i32 %4827, 1
  %4830 = mul i32 %4827, %4829
  %4831 = urem i32 %4830, 2
  %4832 = icmp eq i32 %4831, 0
  %4833 = icmp slt i32 %4828, 10
  %4834 = or i1 %4832, %4833
  br i1 %4834, label %originalBBpart21484, label %originalBB1482alteredBB

originalBBpart21484:                              ; preds = %originalBB1482
  br i1 %4826, label %4940, label %4835, !dbg !2389

4835:                                             ; preds = %originalBBpart21484
  br label %4836, !dbg !2390

4836:                                             ; preds = %4835
  %4837 = load i64, i64* %29, align 8, !dbg !2392
  %4838 = load i64, i64* %20, align 8, !dbg !2392
  %4839 = icmp ult i64 %4837, %4838, !dbg !2392
  br i1 %4839, label %4840, label %4860, !dbg !2395

4840:                                             ; preds = %4836
  %4841 = load i32, i32* @x.35
  %4842 = load i32, i32* @y.36
  %4843 = sub i32 %4841, 1
  %4844 = mul i32 %4841, %4843
  %4845 = urem i32 %4844, 2
  %4846 = icmp eq i32 %4845, 0
  %4847 = icmp slt i32 %4842, 10
  %4848 = or i1 %4846, %4847
  br i1 %4848, label %originalBB1486, label %originalBB1486alteredBB

originalBB1486:                                   ; preds = %4840, %originalBB1486alteredBB
  %4849 = load i8*, i8** %19, align 8, !dbg !2392
  %4850 = load i64, i64* %29, align 8, !dbg !2392
  %4851 = getelementptr inbounds i8, i8* %4849, i64 %4850, !dbg !2392
  store i8 39, i8* %4851, align 1, !dbg !2392
  %4852 = load i32, i32* @x.35
  %4853 = load i32, i32* @y.36
  %4854 = sub i32 %4852, 1
  %4855 = mul i32 %4852, %4854
  %4856 = urem i32 %4855, 2
  %4857 = icmp eq i32 %4856, 0
  %4858 = icmp slt i32 %4853, 10
  %4859 = or i1 %4857, %4858
  br i1 %4859, label %originalBBpart21488, label %originalBB1486alteredBB

originalBBpart21488:                              ; preds = %originalBB1486
  br label %4860, !dbg !2392

4860:                                             ; preds = %originalBBpart21488, %4836
  %4861 = load i64, i64* %29, align 8, !dbg !2395
  %4862 = add i64 %4861, 1, !dbg !2395
  store i64 %4862, i64* %29, align 8, !dbg !2395
  br label %4863, !dbg !2395

4863:                                             ; preds = %4860
  %4864 = load i32, i32* @x.35
  %4865 = load i32, i32* @y.36
  %4866 = sub i32 %4864, 1
  %4867 = mul i32 %4864, %4866
  %4868 = urem i32 %4867, 2
  %4869 = icmp eq i32 %4868, 0
  %4870 = icmp slt i32 %4865, 10
  %4871 = or i1 %4869, %4870
  br i1 %4871, label %originalBB1490, label %originalBB1490alteredBB

originalBB1490:                                   ; preds = %4863, %originalBB1490alteredBB
  %4872 = load i32, i32* @x.35
  %4873 = load i32, i32* @y.36
  %4874 = sub i32 %4872, 1
  %4875 = mul i32 %4872, %4874
  %4876 = urem i32 %4875, 2
  %4877 = icmp eq i32 %4876, 0
  %4878 = icmp slt i32 %4873, 10
  %4879 = or i1 %4877, %4878
  br i1 %4879, label %originalBBpart21492, label %originalBB1490alteredBB

originalBBpart21492:                              ; preds = %originalBB1490
  br label %4880, !dbg !2390

4880:                                             ; preds = %originalBBpart21492
  %4881 = load i32, i32* @x.35
  %4882 = load i32, i32* @y.36
  %4883 = sub i32 %4881, 1
  %4884 = mul i32 %4881, %4883
  %4885 = urem i32 %4884, 2
  %4886 = icmp eq i32 %4885, 0
  %4887 = icmp slt i32 %4882, 10
  %4888 = or i1 %4886, %4887
  br i1 %4888, label %originalBB1494, label %originalBB1494alteredBB

originalBB1494:                                   ; preds = %4880, %originalBB1494alteredBB
  %4889 = load i64, i64* %29, align 8, !dbg !2396
  %4890 = load i64, i64* %20, align 8, !dbg !2396
  %4891 = icmp ult i64 %4889, %4890, !dbg !2396
  %4892 = load i32, i32* @x.35
  %4893 = load i32, i32* @y.36
  %4894 = sub i32 %4892, 1
  %4895 = mul i32 %4892, %4894
  %4896 = urem i32 %4895, 2
  %4897 = icmp eq i32 %4896, 0
  %4898 = icmp slt i32 %4893, 10
  %4899 = or i1 %4897, %4898
  br i1 %4899, label %originalBBpart21496, label %originalBB1494alteredBB

originalBBpart21496:                              ; preds = %originalBB1494
  br i1 %4891, label %4900, label %4920, !dbg !2399

4900:                                             ; preds = %originalBBpart21496
  %4901 = load i32, i32* @x.35
  %4902 = load i32, i32* @y.36
  %4903 = sub i32 %4901, 1
  %4904 = mul i32 %4901, %4903
  %4905 = urem i32 %4904, 2
  %4906 = icmp eq i32 %4905, 0
  %4907 = icmp slt i32 %4902, 10
  %4908 = or i1 %4906, %4907
  br i1 %4908, label %originalBB1498, label %originalBB1498alteredBB

originalBB1498:                                   ; preds = %4900, %originalBB1498alteredBB
  %4909 = load i8*, i8** %19, align 8, !dbg !2396
  %4910 = load i64, i64* %29, align 8, !dbg !2396
  %4911 = getelementptr inbounds i8, i8* %4909, i64 %4910, !dbg !2396
  store i8 39, i8* %4911, align 1, !dbg !2396
  %4912 = load i32, i32* @x.35
  %4913 = load i32, i32* @y.36
  %4914 = sub i32 %4912, 1
  %4915 = mul i32 %4912, %4914
  %4916 = urem i32 %4915, 2
  %4917 = icmp eq i32 %4916, 0
  %4918 = icmp slt i32 %4913, 10
  %4919 = or i1 %4917, %4918
  br i1 %4919, label %originalBBpart21500, label %originalBB1498alteredBB

originalBBpart21500:                              ; preds = %originalBB1498
  br label %4920, !dbg !2396

4920:                                             ; preds = %originalBBpart21500, %originalBBpart21496
  %4921 = load i64, i64* %29, align 8, !dbg !2399
  %4922 = add i64 %4921, 1, !dbg !2399
  store i64 %4922, i64* %29, align 8, !dbg !2399
  br label %4923, !dbg !2399

4923:                                             ; preds = %4920
  %4924 = load i32, i32* @x.35
  %4925 = load i32, i32* @y.36
  %4926 = sub i32 %4924, 1
  %4927 = mul i32 %4924, %4926
  %4928 = urem i32 %4927, 2
  %4929 = icmp eq i32 %4928, 0
  %4930 = icmp slt i32 %4925, 10
  %4931 = or i1 %4929, %4930
  br i1 %4931, label %originalBB1502, label %originalBB1502alteredBB

originalBB1502:                                   ; preds = %4923, %originalBB1502alteredBB
  store i8 0, i8* %36, align 1, !dbg !2390
  %4932 = load i32, i32* @x.35
  %4933 = load i32, i32* @y.36
  %4934 = sub i32 %4932, 1
  %4935 = mul i32 %4932, %4934
  %4936 = urem i32 %4935, 2
  %4937 = icmp eq i32 %4936, 0
  %4938 = icmp slt i32 %4933, 10
  %4939 = or i1 %4937, %4938
  br i1 %4939, label %originalBBpart21504, label %originalBB1502alteredBB

originalBBpart21504:                              ; preds = %originalBB1502
  br label %4940, !dbg !2390

4940:                                             ; preds = %originalBBpart21504, %originalBBpart21484, %originalBBpart21480
  %4941 = load i32, i32* @x.35
  %4942 = load i32, i32* @y.36
  %4943 = sub i32 %4941, 1
  %4944 = mul i32 %4941, %4943
  %4945 = urem i32 %4944, 2
  %4946 = icmp eq i32 %4945, 0
  %4947 = icmp slt i32 %4942, 10
  %4948 = or i1 %4946, %4947
  br i1 %4948, label %originalBB1506, label %originalBB1506alteredBB

originalBB1506:                                   ; preds = %4940, %originalBB1506alteredBB
  %4949 = load i32, i32* @x.35
  %4950 = load i32, i32* @y.36
  %4951 = sub i32 %4949, 1
  %4952 = mul i32 %4949, %4951
  %4953 = urem i32 %4952, 2
  %4954 = icmp eq i32 %4953, 0
  %4955 = icmp slt i32 %4950, 10
  %4956 = or i1 %4954, %4955
  br i1 %4956, label %originalBBpart21508, label %originalBB1506alteredBB

originalBBpart21508:                              ; preds = %originalBB1506
  br label %4957, !dbg !2389

4957:                                             ; preds = %originalBBpart21508
  %4958 = load i32, i32* @x.35
  %4959 = load i32, i32* @y.36
  %4960 = sub i32 %4958, 1
  %4961 = mul i32 %4958, %4960
  %4962 = urem i32 %4961, 2
  %4963 = icmp eq i32 %4962, 0
  %4964 = icmp slt i32 %4959, 10
  %4965 = or i1 %4963, %4964
  br i1 %4965, label %originalBB1510, label %originalBB1510alteredBB

originalBB1510:                                   ; preds = %4957, %originalBB1510alteredBB
  %4966 = load i32, i32* @x.35
  %4967 = load i32, i32* @y.36
  %4968 = sub i32 %4966, 1
  %4969 = mul i32 %4966, %4968
  %4970 = urem i32 %4969, 2
  %4971 = icmp eq i32 %4970, 0
  %4972 = icmp slt i32 %4967, 10
  %4973 = or i1 %4971, %4972
  br i1 %4973, label %originalBBpart21512, label %originalBB1510alteredBB

originalBBpart21512:                              ; preds = %originalBB1510
  br label %4974, !dbg !2400

4974:                                             ; preds = %originalBBpart21512
  %4975 = load i64, i64* %29, align 8, !dbg !2401
  %4976 = load i64, i64* %20, align 8, !dbg !2401
  %4977 = trunc i64 %4975 to i32
  %4978 = mul i32 %4977, -2
  %4979 = add i32 %4978, -2
  %4980 = trunc i64 %4976 to i32
  %4981 = mul i32 %4980, 2
  %4982 = add i32 %4981, 3
  %4983 = mul i32 %4979, %4979
  %4984 = mul i32 %4982, %4982
  %4985 = add i32 %4983, %4984
  %4986 = mul i32 %4979, %4982
  %4987 = mul i32 %4986, 2
  %4988 = sub i32 %4985, %4987
  %4989 = mul i32 %4988, 3
  %4990 = add i32 %4989, -1
  %4991 = icmp eq i32 %4990, -4
  br i1 %4991, label %4992, label %5009

4992:                                             ; preds = %4974
  %4993 = load i32, i32* @x.35
  %4994 = load i32, i32* @y.36
  %4995 = sub i32 %4993, 1
  %4996 = mul i32 %4993, %4995
  %4997 = urem i32 %4996, 2
  %4998 = icmp eq i32 %4997, 0
  %4999 = icmp slt i32 %4994, 10
  %5000 = or i1 %4998, %4999
  br i1 %5000, label %originalBB1514, label %originalBB1514alteredBB

originalBB1514:                                   ; preds = %4992, %originalBB1514alteredBB
  %5001 = load i32, i32* @x.35
  %5002 = load i32, i32* @y.36
  %5003 = sub i32 %5001, 1
  %5004 = mul i32 %5001, %5003
  %5005 = urem i32 %5004, 2
  %5006 = icmp eq i32 %5005, 0
  %5007 = icmp slt i32 %5002, 10
  %5008 = or i1 %5006, %5007
  br i1 %5008, label %originalBBpart21516, label %originalBB1514alteredBB

originalBBpart21516:                              ; preds = %originalBB1514
  ret i64 0

5009:                                             ; preds = %4974
  %5010 = load i32, i32* @x.35
  %5011 = load i32, i32* @y.36
  %5012 = sub i32 %5010, 1
  %5013 = mul i32 %5010, %5012
  %5014 = urem i32 %5013, 2
  %5015 = icmp eq i32 %5014, 0
  %5016 = icmp slt i32 %5011, 10
  %5017 = or i1 %5015, %5016
  br i1 %5017, label %originalBB1518, label %originalBB1518alteredBB

originalBB1518:                                   ; preds = %5009, %originalBB1518alteredBB
  %5018 = icmp ult i64 %4975, %4976, !dbg !2401
  %5019 = load i32, i32* @x.35
  %5020 = load i32, i32* @y.36
  %5021 = sub i32 %5019, 1
  %5022 = mul i32 %5019, %5021
  %5023 = urem i32 %5022, 2
  %5024 = icmp eq i32 %5023, 0
  %5025 = icmp slt i32 %5020, 10
  %5026 = or i1 %5024, %5025
  br i1 %5026, label %originalBBpart21520, label %originalBB1518alteredBB

originalBBpart21520:                              ; preds = %originalBB1518
  br i1 %5018, label %5027, label %5048, !dbg !2404

5027:                                             ; preds = %originalBBpart21520
  %5028 = load i32, i32* @x.35
  %5029 = load i32, i32* @y.36
  %5030 = sub i32 %5028, 1
  %5031 = mul i32 %5028, %5030
  %5032 = urem i32 %5031, 2
  %5033 = icmp eq i32 %5032, 0
  %5034 = icmp slt i32 %5029, 10
  %5035 = or i1 %5033, %5034
  br i1 %5035, label %originalBB1522, label %originalBB1522alteredBB

originalBB1522:                                   ; preds = %5027, %originalBB1522alteredBB
  %5036 = load i8, i8* %39, align 1, !dbg !2401
  %5037 = load i8*, i8** %19, align 8, !dbg !2401
  %5038 = load i64, i64* %29, align 8, !dbg !2401
  %5039 = getelementptr inbounds i8, i8* %5037, i64 %5038, !dbg !2401
  store i8 %5036, i8* %5039, align 1, !dbg !2401
  %5040 = load i32, i32* @x.35
  %5041 = load i32, i32* @y.36
  %5042 = sub i32 %5040, 1
  %5043 = mul i32 %5040, %5042
  %5044 = urem i32 %5043, 2
  %5045 = icmp eq i32 %5044, 0
  %5046 = icmp slt i32 %5041, 10
  %5047 = or i1 %5045, %5046
  br i1 %5047, label %originalBBpart21524, label %originalBB1522alteredBB

originalBBpart21524:                              ; preds = %originalBB1522
  br label %5048, !dbg !2401

5048:                                             ; preds = %originalBBpart21524, %originalBBpart21520
  %5049 = load i32, i32* @x.35
  %5050 = load i32, i32* @y.36
  %5051 = sub i32 %5049, 1
  %5052 = mul i32 %5049, %5051
  %5053 = urem i32 %5052, 2
  %5054 = icmp eq i32 %5053, 0
  %5055 = icmp slt i32 %5050, 10
  %5056 = or i1 %5054, %5055
  br i1 %5056, label %originalBB1526, label %originalBB1526alteredBB

originalBB1526:                                   ; preds = %5048, %originalBB1526alteredBB
  %5057 = load i64, i64* %29, align 8, !dbg !2404
  %5058 = add i64 %5057, 1, !dbg !2404
  store i64 %5058, i64* %29, align 8, !dbg !2404
  %5059 = load i32, i32* @x.35
  %5060 = load i32, i32* @y.36
  %5061 = sub i32 %5059, 1
  %5062 = mul i32 %5059, %5061
  %5063 = urem i32 %5062, 2
  %5064 = icmp eq i32 %5063, 0
  %5065 = icmp slt i32 %5060, 10
  %5066 = or i1 %5064, %5065
  br i1 %5066, label %originalBBpart21536, label %originalBB1526alteredBB

originalBBpart21536:                              ; preds = %originalBB1526
  br label %5067, !dbg !2404

5067:                                             ; preds = %originalBBpart21536
  %5068 = load i32, i32* @x.35
  %5069 = load i32, i32* @y.36
  %5070 = sub i32 %5068, 1
  %5071 = mul i32 %5068, %5070
  %5072 = urem i32 %5071, 2
  %5073 = icmp eq i32 %5072, 0
  %5074 = icmp slt i32 %5069, 10
  %5075 = or i1 %5073, %5074
  br i1 %5075, label %originalBB1538, label %originalBB1538alteredBB

originalBB1538:                                   ; preds = %5067, %originalBB1538alteredBB
  %5076 = load i8, i8* %43, align 1, !dbg !2405
  %5077 = trunc i8 %5076 to i1, !dbg !2405
  %5078 = load i32, i32* @x.35
  %5079 = load i32, i32* @y.36
  %5080 = sub i32 %5078, 1
  %5081 = mul i32 %5078, %5080
  %5082 = urem i32 %5081, 2
  %5083 = icmp eq i32 %5082, 0
  %5084 = icmp slt i32 %5079, 10
  %5085 = or i1 %5083, %5084
  br i1 %5085, label %originalBBpart21540, label %originalBB1538alteredBB

originalBBpart21540:                              ; preds = %originalBB1538
  br i1 %5077, label %5103, label %5086, !dbg !2407

5086:                                             ; preds = %originalBBpart21540
  %5087 = load i32, i32* @x.35
  %5088 = load i32, i32* @y.36
  %5089 = sub i32 %5087, 1
  %5090 = mul i32 %5087, %5089
  %5091 = urem i32 %5090, 2
  %5092 = icmp eq i32 %5091, 0
  %5093 = icmp slt i32 %5088, 10
  %5094 = or i1 %5092, %5093
  br i1 %5094, label %originalBB1542, label %originalBB1542alteredBB

originalBB1542:                                   ; preds = %5086, %originalBB1542alteredBB
  store i8 0, i8* %38, align 1, !dbg !2408
  %5095 = load i32, i32* @x.35
  %5096 = load i32, i32* @y.36
  %5097 = sub i32 %5095, 1
  %5098 = mul i32 %5095, %5097
  %5099 = urem i32 %5098, 2
  %5100 = icmp eq i32 %5099, 0
  %5101 = icmp slt i32 %5096, 10
  %5102 = or i1 %5100, %5101
  br i1 %5102, label %originalBBpart21544, label %originalBB1542alteredBB

originalBBpart21544:                              ; preds = %originalBB1542
  br label %5103, !dbg !2409

5103:                                             ; preds = %originalBBpart21544, %originalBBpart21540
  br label %5104, !dbg !2410

5104:                                             ; preds = %5103, %originalBBpart2482
  %5105 = load i64, i64* %28, align 8, !dbg !2411
  %5106 = add i64 %5105, 1, !dbg !2411
  store i64 %5106, i64* %28, align 8, !dbg !2411
  br label %650, !dbg !2412, !llvm.loop !2413

5107:                                             ; preds = %originalBBpart2167
  %5108 = load i64, i64* %29, align 8, !dbg !2415
  %5109 = icmp eq i64 %5108, 0, !dbg !2417
  br i1 %5109, label %5110, label %5149, !dbg !2418

5110:                                             ; preds = %5107
  %5111 = load i32, i32* %23, align 4, !dbg !2419
  %5112 = icmp eq i32 %5111, 2, !dbg !2420
  br i1 %5112, label %5113, label %5149, !dbg !2421

5113:                                             ; preds = %5110
  %5114 = load i32, i32* @x.35
  %5115 = load i32, i32* @y.36
  %5116 = sub i32 %5114, 1
  %5117 = mul i32 %5114, %5116
  %5118 = urem i32 %5117, 2
  %5119 = icmp eq i32 %5118, 0
  %5120 = icmp slt i32 %5115, 10
  %5121 = or i1 %5119, %5120
  br i1 %5121, label %originalBB1546, label %originalBB1546alteredBB

originalBB1546:                                   ; preds = %5113, %originalBB1546alteredBB
  %5122 = load i8, i8* %35, align 1, !dbg !2422
  %5123 = trunc i8 %5122 to i1, !dbg !2422
  %5124 = load i32, i32* @x.35
  %5125 = load i32, i32* @y.36
  %5126 = sub i32 %5124, 1
  %5127 = mul i32 %5124, %5126
  %5128 = urem i32 %5127, 2
  %5129 = icmp eq i32 %5128, 0
  %5130 = icmp slt i32 %5125, 10
  %5131 = or i1 %5129, %5130
  br i1 %5131, label %originalBBpart21548, label %originalBB1546alteredBB

originalBBpart21548:                              ; preds = %originalBB1546
  br i1 %5123, label %5132, label %5149, !dbg !2423

5132:                                             ; preds = %originalBBpart21548
  %5133 = load i32, i32* @x.35
  %5134 = load i32, i32* @y.36
  %5135 = sub i32 %5133, 1
  %5136 = mul i32 %5133, %5135
  %5137 = urem i32 %5136, 2
  %5138 = icmp eq i32 %5137, 0
  %5139 = icmp slt i32 %5134, 10
  %5140 = or i1 %5138, %5139
  br i1 %5140, label %originalBB1550, label %originalBB1550alteredBB

originalBB1550:                                   ; preds = %5132, %originalBB1550alteredBB
  %5141 = load i32, i32* @x.35
  %5142 = load i32, i32* @y.36
  %5143 = sub i32 %5141, 1
  %5144 = mul i32 %5141, %5143
  %5145 = urem i32 %5144, 2
  %5146 = icmp eq i32 %5145, 0
  %5147 = icmp slt i32 %5142, 10
  %5148 = or i1 %5146, %5147
  br i1 %5148, label %originalBBpart21552, label %originalBB1550alteredBB

originalBBpart21552:                              ; preds = %originalBB1550
  br label %5413, !dbg !2424

5149:                                             ; preds = %originalBBpart21548, %5110, %5107
  %5150 = load i32, i32* @x.35
  %5151 = load i32, i32* @y.36
  %5152 = sub i32 %5150, 1
  %5153 = mul i32 %5150, %5152
  %5154 = urem i32 %5153, 2
  %5155 = icmp eq i32 %5154, 0
  %5156 = icmp slt i32 %5151, 10
  %5157 = or i1 %5155, %5156
  br i1 %5157, label %originalBB1554, label %originalBB1554alteredBB

originalBB1554:                                   ; preds = %5149, %originalBB1554alteredBB
  %5158 = load i32, i32* %23, align 4, !dbg !2425
  %5159 = icmp eq i32 %5158, 2, !dbg !2427
  %5160 = load i32, i32* @x.35
  %5161 = load i32, i32* @y.36
  %5162 = sub i32 %5160, 1
  %5163 = mul i32 %5160, %5162
  %5164 = urem i32 %5163, 2
  %5165 = icmp eq i32 %5164, 0
  %5166 = icmp slt i32 %5161, 10
  %5167 = or i1 %5165, %5166
  br i1 %5167, label %originalBBpart21556, label %originalBB1554alteredBB

originalBBpart21556:                              ; preds = %originalBB1554
  br i1 %5159, label %5168, label %5261, !dbg !2428

5168:                                             ; preds = %originalBBpart21556
  %5169 = load i8, i8* %35, align 1, !dbg !2429
  %5170 = trunc i8 %5169 to i1, !dbg !2429
  br i1 %5170, label %5261, label %5171, !dbg !2430

5171:                                             ; preds = %5168
  %5172 = load i8, i8* %37, align 1, !dbg !2431
  %5173 = trunc i8 %5172 to i1, !dbg !2431
  br i1 %5173, label %5174, label %5261, !dbg !2432

5174:                                             ; preds = %5171
  %5175 = load i8, i8* %38, align 1, !dbg !2433
  %5176 = trunc i8 %5175 to i1, !dbg !2433
  br i1 %5176, label %5177, label %5203, !dbg !2436

5177:                                             ; preds = %5174
  %5178 = load i32, i32* @x.35
  %5179 = load i32, i32* @y.36
  %5180 = sub i32 %5178, 1
  %5181 = mul i32 %5178, %5180
  %5182 = urem i32 %5181, 2
  %5183 = icmp eq i32 %5182, 0
  %5184 = icmp slt i32 %5179, 10
  %5185 = or i1 %5183, %5184
  br i1 %5185, label %originalBB1558, label %originalBB1558alteredBB

originalBB1558:                                   ; preds = %5177, %originalBB1558alteredBB
  %5186 = load i8*, i8** %19, align 8, !dbg !2437
  %5187 = load i64, i64* %30, align 8, !dbg !2438
  %5188 = load i8*, i8** %21, align 8, !dbg !2439
  %5189 = load i64, i64* %22, align 8, !dbg !2440
  %5190 = load i32, i32* %24, align 4, !dbg !2441
  %5191 = load i32*, i32** %25, align 8, !dbg !2442
  %5192 = load i8*, i8** %26, align 8, !dbg !2443
  %5193 = load i8*, i8** %27, align 8, !dbg !2444
  %5194 = call i64 @quotearg_buffer_restyled(i8* %5186, i64 %5187, i8* %5188, i64 %5189, i32 5, i32 %5190, i32* %5191, i8* %5192, i8* %5193), !dbg !2445
  store i64 %5194, i64* %18, align 8, !dbg !2446
  %5195 = load i32, i32* @x.35
  %5196 = load i32, i32* @y.36
  %5197 = sub i32 %5195, 1
  %5198 = mul i32 %5195, %5197
  %5199 = urem i32 %5198, 2
  %5200 = icmp eq i32 %5199, 0
  %5201 = icmp slt i32 %5196, 10
  %5202 = or i1 %5200, %5201
  br i1 %5202, label %originalBBpart21560, label %originalBB1558alteredBB

originalBBpart21560:                              ; preds = %originalBB1558
  br label %5495, !dbg !2446

5203:                                             ; preds = %5174
  %5204 = load i64, i64* %20, align 8, !dbg !2447
  %5205 = icmp ne i64 %5204, 0, !dbg !2447
  br i1 %5205, label %5243, label %5206, !dbg !2449

5206:                                             ; preds = %5203
  %5207 = load i32, i32* @x.35
  %5208 = load i32, i32* @y.36
  %5209 = sub i32 %5207, 1
  %5210 = mul i32 %5207, %5209
  %5211 = urem i32 %5210, 2
  %5212 = icmp eq i32 %5211, 0
  %5213 = icmp slt i32 %5208, 10
  %5214 = or i1 %5212, %5213
  br i1 %5214, label %originalBB1562, label %originalBB1562alteredBB

originalBB1562:                                   ; preds = %5206, %originalBB1562alteredBB
  %5215 = load i64, i64* %30, align 8, !dbg !2450
  %5216 = icmp ne i64 %5215, 0, !dbg !2450
  %5217 = load i32, i32* @x.35
  %5218 = load i32, i32* @y.36
  %5219 = sub i32 %5217, 1
  %5220 = mul i32 %5217, %5219
  %5221 = urem i32 %5220, 2
  %5222 = icmp eq i32 %5221, 0
  %5223 = icmp slt i32 %5218, 10
  %5224 = or i1 %5222, %5223
  br i1 %5224, label %originalBBpart21564, label %originalBB1562alteredBB

originalBBpart21564:                              ; preds = %originalBB1562
  br i1 %5216, label %5225, label %5243, !dbg !2451

5225:                                             ; preds = %originalBBpart21564
  %5226 = load i32, i32* @x.35
  %5227 = load i32, i32* @y.36
  %5228 = sub i32 %5226, 1
  %5229 = mul i32 %5226, %5228
  %5230 = urem i32 %5229, 2
  %5231 = icmp eq i32 %5230, 0
  %5232 = icmp slt i32 %5227, 10
  %5233 = or i1 %5231, %5232
  br i1 %5233, label %originalBB1566, label %originalBB1566alteredBB

originalBB1566:                                   ; preds = %5225, %originalBB1566alteredBB
  %5234 = load i64, i64* %30, align 8, !dbg !2452
  store i64 %5234, i64* %20, align 8, !dbg !2454
  store i64 0, i64* %29, align 8, !dbg !2455
  %5235 = load i32, i32* @x.35
  %5236 = load i32, i32* @y.36
  %5237 = sub i32 %5235, 1
  %5238 = mul i32 %5235, %5237
  %5239 = urem i32 %5238, 2
  %5240 = icmp eq i32 %5239, 0
  %5241 = icmp slt i32 %5236, 10
  %5242 = or i1 %5240, %5241
  br i1 %5242, label %originalBBpart21568, label %originalBB1566alteredBB

originalBBpart21568:                              ; preds = %originalBB1566
  br label %66, !dbg !2456

5243:                                             ; preds = %originalBBpart21564, %5203
  %5244 = load i32, i32* @x.35
  %5245 = load i32, i32* @y.36
  %5246 = sub i32 %5244, 1
  %5247 = mul i32 %5244, %5246
  %5248 = urem i32 %5247, 2
  %5249 = icmp eq i32 %5248, 0
  %5250 = icmp slt i32 %5245, 10
  %5251 = or i1 %5249, %5250
  br i1 %5251, label %originalBB1570, label %originalBB1570alteredBB

originalBB1570:                                   ; preds = %5243, %originalBB1570alteredBB
  %5252 = load i32, i32* @x.35
  %5253 = load i32, i32* @y.36
  %5254 = sub i32 %5252, 1
  %5255 = mul i32 %5252, %5254
  %5256 = urem i32 %5255, 2
  %5257 = icmp eq i32 %5256, 0
  %5258 = icmp slt i32 %5253, 10
  %5259 = or i1 %5257, %5258
  br i1 %5259, label %originalBBpart21572, label %originalBB1570alteredBB

originalBBpart21572:                              ; preds = %originalBB1570
  br label %5260

5260:                                             ; preds = %originalBBpart21572
  br label %5261, !dbg !2457

5261:                                             ; preds = %5260, %5171, %5168, %originalBBpart21556
  %5262 = load i8*, i8** %31, align 8, !dbg !2458
  %5263 = icmp ne i8* %5262, null, !dbg !2458
  br i1 %5263, label %5264, label %5355, !dbg !2460

5264:                                             ; preds = %5261
  %5265 = load i8, i8* %35, align 1, !dbg !2461
  %5266 = trunc i8 %5265 to i1, !dbg !2461
  br i1 %5266, label %5355, label %5267, !dbg !2462

5267:                                             ; preds = %5264
  br label %5268, !dbg !2463

5268:                                             ; preds = %originalBBpart21588, %5267
  %5269 = load i8*, i8** %31, align 8, !dbg !2464
  %5270 = load i8, i8* %5269, align 1, !dbg !2467
  %5271 = icmp ne i8 %5270, 0, !dbg !2468
  br i1 %5271, label %5272, label %5354, !dbg !2468

5272:                                             ; preds = %5268
  br label %5273, !dbg !2469

5273:                                             ; preds = %5272
  %5274 = load i32, i32* @x.35
  %5275 = load i32, i32* @y.36
  %5276 = sub i32 %5274, 1
  %5277 = mul i32 %5274, %5276
  %5278 = urem i32 %5277, 2
  %5279 = icmp eq i32 %5278, 0
  %5280 = icmp slt i32 %5275, 10
  %5281 = or i1 %5279, %5280
  br i1 %5281, label %originalBB1574, label %originalBB1574alteredBB

originalBB1574:                                   ; preds = %5273, %originalBB1574alteredBB
  %5282 = load i64, i64* %29, align 8, !dbg !2470
  %5283 = load i64, i64* %20, align 8, !dbg !2470
  %5284 = icmp ult i64 %5282, %5283, !dbg !2470
  %5285 = load i32, i32* @x.35
  %5286 = load i32, i32* @y.36
  %5287 = sub i32 %5285, 1
  %5288 = mul i32 %5285, %5287
  %5289 = urem i32 %5288, 2
  %5290 = icmp eq i32 %5289, 0
  %5291 = icmp slt i32 %5286, 10
  %5292 = or i1 %5290, %5291
  br i1 %5292, label %originalBBpart21576, label %originalBB1574alteredBB

originalBBpart21576:                              ; preds = %originalBB1574
  br i1 %5284, label %5293, label %5315, !dbg !2473

5293:                                             ; preds = %originalBBpart21576
  %5294 = load i32, i32* @x.35
  %5295 = load i32, i32* @y.36
  %5296 = sub i32 %5294, 1
  %5297 = mul i32 %5294, %5296
  %5298 = urem i32 %5297, 2
  %5299 = icmp eq i32 %5298, 0
  %5300 = icmp slt i32 %5295, 10
  %5301 = or i1 %5299, %5300
  br i1 %5301, label %originalBB1578, label %originalBB1578alteredBB

originalBB1578:                                   ; preds = %5293, %originalBB1578alteredBB
  %5302 = load i8*, i8** %31, align 8, !dbg !2470
  %5303 = load i8, i8* %5302, align 1, !dbg !2470
  %5304 = load i8*, i8** %19, align 8, !dbg !2470
  %5305 = load i64, i64* %29, align 8, !dbg !2470
  %5306 = getelementptr inbounds i8, i8* %5304, i64 %5305, !dbg !2470
  store i8 %5303, i8* %5306, align 1, !dbg !2470
  %5307 = load i32, i32* @x.35
  %5308 = load i32, i32* @y.36
  %5309 = sub i32 %5307, 1
  %5310 = mul i32 %5307, %5309
  %5311 = urem i32 %5310, 2
  %5312 = icmp eq i32 %5311, 0
  %5313 = icmp slt i32 %5308, 10
  %5314 = or i1 %5312, %5313
  br i1 %5314, label %originalBBpart21580, label %originalBB1578alteredBB

originalBBpart21580:                              ; preds = %originalBB1578
  br label %5315, !dbg !2470

5315:                                             ; preds = %originalBBpart21580, %originalBBpart21576
  %5316 = load i64, i64* %29, align 8, !dbg !2473
  %5317 = add i64 %5316, 1, !dbg !2473
  store i64 %5317, i64* %29, align 8, !dbg !2473
  br label %5318, !dbg !2473

5318:                                             ; preds = %5315
  %5319 = load i32, i32* @x.35
  %5320 = load i32, i32* @y.36
  %5321 = sub i32 %5319, 1
  %5322 = mul i32 %5319, %5321
  %5323 = urem i32 %5322, 2
  %5324 = icmp eq i32 %5323, 0
  %5325 = icmp slt i32 %5320, 10
  %5326 = or i1 %5324, %5325
  br i1 %5326, label %originalBB1582, label %originalBB1582alteredBB

originalBB1582:                                   ; preds = %5318, %originalBB1582alteredBB
  %5327 = load i32, i32* @x.35
  %5328 = load i32, i32* @y.36
  %5329 = sub i32 %5327, 1
  %5330 = mul i32 %5327, %5329
  %5331 = urem i32 %5330, 2
  %5332 = icmp eq i32 %5331, 0
  %5333 = icmp slt i32 %5328, 10
  %5334 = or i1 %5332, %5333
  br i1 %5334, label %originalBBpart21584, label %originalBB1582alteredBB

originalBBpart21584:                              ; preds = %originalBB1582
  br label %5335, !dbg !2473

5335:                                             ; preds = %originalBBpart21584
  %5336 = load i32, i32* @x.35
  %5337 = load i32, i32* @y.36
  %5338 = sub i32 %5336, 1
  %5339 = mul i32 %5336, %5338
  %5340 = urem i32 %5339, 2
  %5341 = icmp eq i32 %5340, 0
  %5342 = icmp slt i32 %5337, 10
  %5343 = or i1 %5341, %5342
  br i1 %5343, label %originalBB1586, label %originalBB1586alteredBB

originalBB1586:                                   ; preds = %5335, %originalBB1586alteredBB
  %5344 = load i8*, i8** %31, align 8, !dbg !2474
  %5345 = getelementptr inbounds i8, i8* %5344, i32 1, !dbg !2474
  store i8* %5345, i8** %31, align 8, !dbg !2474
  %5346 = load i32, i32* @x.35
  %5347 = load i32, i32* @y.36
  %5348 = sub i32 %5346, 1
  %5349 = mul i32 %5346, %5348
  %5350 = urem i32 %5349, 2
  %5351 = icmp eq i32 %5350, 0
  %5352 = icmp slt i32 %5347, 10
  %5353 = or i1 %5351, %5352
  br i1 %5353, label %originalBBpart21588, label %originalBB1586alteredBB

originalBBpart21588:                              ; preds = %originalBB1586
  br label %5268, !dbg !2475, !llvm.loop !2476

5354:                                             ; preds = %5268
  br label %5355, !dbg !2477

5355:                                             ; preds = %5354, %5264, %5261
  %5356 = load i32, i32* @x.35
  %5357 = load i32, i32* @y.36
  %5358 = sub i32 %5356, 1
  %5359 = mul i32 %5356, %5358
  %5360 = urem i32 %5359, 2
  %5361 = icmp eq i32 %5360, 0
  %5362 = icmp slt i32 %5357, 10
  %5363 = or i1 %5361, %5362
  br i1 %5363, label %originalBB1590, label %originalBB1590alteredBB

originalBB1590:                                   ; preds = %5355, %originalBB1590alteredBB
  %5364 = load i64, i64* %29, align 8, !dbg !2478
  %5365 = load i64, i64* %20, align 8, !dbg !2480
  %5366 = icmp ult i64 %5364, %5365, !dbg !2481
  %5367 = load i32, i32* @x.35
  %5368 = load i32, i32* @y.36
  %5369 = sub i32 %5367, 1
  %5370 = mul i32 %5367, %5369
  %5371 = urem i32 %5370, 2
  %5372 = icmp eq i32 %5371, 0
  %5373 = icmp slt i32 %5368, 10
  %5374 = or i1 %5372, %5373
  br i1 %5374, label %originalBBpart21592, label %originalBB1590alteredBB

originalBBpart21592:                              ; preds = %originalBB1590
  br i1 %5366, label %5375, label %5395, !dbg !2482

5375:                                             ; preds = %originalBBpart21592
  %5376 = load i32, i32* @x.35
  %5377 = load i32, i32* @y.36
  %5378 = sub i32 %5376, 1
  %5379 = mul i32 %5376, %5378
  %5380 = urem i32 %5379, 2
  %5381 = icmp eq i32 %5380, 0
  %5382 = icmp slt i32 %5377, 10
  %5383 = or i1 %5381, %5382
  br i1 %5383, label %originalBB1594, label %originalBB1594alteredBB

originalBB1594:                                   ; preds = %5375, %originalBB1594alteredBB
  %5384 = load i8*, i8** %19, align 8, !dbg !2483
  %5385 = load i64, i64* %29, align 8, !dbg !2484
  %5386 = getelementptr inbounds i8, i8* %5384, i64 %5385, !dbg !2483
  store i8 0, i8* %5386, align 1, !dbg !2485
  %5387 = load i32, i32* @x.35
  %5388 = load i32, i32* @y.36
  %5389 = sub i32 %5387, 1
  %5390 = mul i32 %5387, %5389
  %5391 = urem i32 %5390, 2
  %5392 = icmp eq i32 %5391, 0
  %5393 = icmp slt i32 %5388, 10
  %5394 = or i1 %5392, %5393
  br i1 %5394, label %originalBBpart21596, label %originalBB1594alteredBB

originalBBpart21596:                              ; preds = %originalBB1594
  br label %5395, !dbg !2483

5395:                                             ; preds = %originalBBpart21596, %originalBBpart21592
  %5396 = load i32, i32* @x.35
  %5397 = load i32, i32* @y.36
  %5398 = sub i32 %5396, 1
  %5399 = mul i32 %5396, %5398
  %5400 = urem i32 %5399, 2
  %5401 = icmp eq i32 %5400, 0
  %5402 = icmp slt i32 %5397, 10
  %5403 = or i1 %5401, %5402
  br i1 %5403, label %originalBB1598, label %originalBB1598alteredBB

originalBB1598:                                   ; preds = %5395, %originalBB1598alteredBB
  %5404 = load i64, i64* %29, align 8, !dbg !2486
  store i64 %5404, i64* %18, align 8, !dbg !2487
  %5405 = load i32, i32* @x.35
  %5406 = load i32, i32* @y.36
  %5407 = sub i32 %5405, 1
  %5408 = mul i32 %5405, %5407
  %5409 = urem i32 %5408, 2
  %5410 = icmp eq i32 %5409, 0
  %5411 = icmp slt i32 %5406, 10
  %5412 = or i1 %5410, %5411
  br i1 %5412, label %originalBBpart21600, label %originalBB1598alteredBB

originalBBpart21600:                              ; preds = %originalBB1598
  br label %5495, !dbg !2487

5413:                                             ; preds = %originalBBpart21552, %originalBBpart21381, %originalBBpart21067, %originalBBpart2999, %originalBBpart2756, %originalBBpart2744, %2244, %2161, %originalBBpart2613, %originalBBpart2498, %995, %899
  call void @llvm.dbg.label(metadata !2488), !dbg !2489
  %5414 = load i32, i32* @x.35
  %5415 = load i32, i32* @y.36
  %5416 = sub i32 %5414, 1
  %5417 = mul i32 %5414, %5416
  %5418 = urem i32 %5417, 2
  %5419 = icmp eq i32 %5418, 0
  %5420 = icmp slt i32 %5415, 10
  %5421 = or i1 %5419, %5420
  br i1 %5421, label %originalBB1602, label %originalBB1602alteredBB

originalBB1602:                                   ; preds = %5413, %originalBB1602alteredBB
  %5422 = load i32, i32* %23, align 4, !dbg !2490
  %5423 = icmp eq i32 %5422, 2, !dbg !2492
  %5424 = load i32, i32* @x.35
  %5425 = load i32, i32* @y.36
  %5426 = sub i32 %5424, 1
  %5427 = mul i32 %5424, %5426
  %5428 = urem i32 %5427, 2
  %5429 = icmp eq i32 %5428, 0
  %5430 = icmp slt i32 %5425, 10
  %5431 = or i1 %5429, %5430
  br i1 %5431, label %originalBBpart21604, label %originalBB1602alteredBB

originalBBpart21604:                              ; preds = %originalBB1602
  br i1 %5423, label %5432, label %5468, !dbg !2493

5432:                                             ; preds = %originalBBpart21604
  %5433 = load i32, i32* @x.35
  %5434 = load i32, i32* @y.36
  %5435 = sub i32 %5433, 1
  %5436 = mul i32 %5433, %5435
  %5437 = urem i32 %5436, 2
  %5438 = icmp eq i32 %5437, 0
  %5439 = icmp slt i32 %5434, 10
  %5440 = or i1 %5438, %5439
  br i1 %5440, label %originalBB1606, label %originalBB1606alteredBB

originalBB1606:                                   ; preds = %5432, %originalBB1606alteredBB
  %5441 = load i8, i8* %33, align 1, !dbg !2494
  %5442 = trunc i8 %5441 to i1, !dbg !2494
  %5443 = load i32, i32* @x.35
  %5444 = load i32, i32* @y.36
  %5445 = sub i32 %5443, 1
  %5446 = mul i32 %5443, %5445
  %5447 = urem i32 %5446, 2
  %5448 = icmp eq i32 %5447, 0
  %5449 = icmp slt i32 %5444, 10
  %5450 = or i1 %5448, %5449
  br i1 %5450, label %originalBBpart21608, label %originalBB1606alteredBB

originalBBpart21608:                              ; preds = %originalBB1606
  br i1 %5442, label %5451, label %5468, !dbg !2495

5451:                                             ; preds = %originalBBpart21608
  %5452 = load i32, i32* @x.35
  %5453 = load i32, i32* @y.36
  %5454 = sub i32 %5452, 1
  %5455 = mul i32 %5452, %5454
  %5456 = urem i32 %5455, 2
  %5457 = icmp eq i32 %5456, 0
  %5458 = icmp slt i32 %5453, 10
  %5459 = or i1 %5457, %5458
  br i1 %5459, label %originalBB1610, label %originalBB1610alteredBB

originalBB1610:                                   ; preds = %5451, %originalBB1610alteredBB
  store i32 4, i32* %23, align 4, !dbg !2496
  %5460 = load i32, i32* @x.35
  %5461 = load i32, i32* @y.36
  %5462 = sub i32 %5460, 1
  %5463 = mul i32 %5460, %5462
  %5464 = urem i32 %5463, 2
  %5465 = icmp eq i32 %5464, 0
  %5466 = icmp slt i32 %5461, 10
  %5467 = or i1 %5465, %5466
  br i1 %5467, label %originalBBpart21612, label %originalBB1610alteredBB

originalBBpart21612:                              ; preds = %originalBB1610
  br label %5468, !dbg !2497

5468:                                             ; preds = %originalBBpart21612, %originalBBpart21608, %originalBBpart21604
  %5469 = load i32, i32* @x.35
  %5470 = load i32, i32* @y.36
  %5471 = sub i32 %5469, 1
  %5472 = mul i32 %5469, %5471
  %5473 = urem i32 %5472, 2
  %5474 = icmp eq i32 %5473, 0
  %5475 = icmp slt i32 %5470, 10
  %5476 = or i1 %5474, %5475
  br i1 %5476, label %originalBB1614, label %originalBB1614alteredBB

originalBB1614:                                   ; preds = %5468, %originalBB1614alteredBB
  %5477 = load i8*, i8** %19, align 8, !dbg !2498
  %5478 = load i64, i64* %20, align 8, !dbg !2499
  %5479 = load i8*, i8** %21, align 8, !dbg !2500
  %5480 = load i64, i64* %22, align 8, !dbg !2501
  %5481 = load i32, i32* %23, align 4, !dbg !2502
  %5482 = load i32, i32* %24, align 4, !dbg !2503
  %5483 = and i32 %5482, -3, !dbg !2504
  %5484 = load i8*, i8** %26, align 8, !dbg !2505
  %5485 = load i8*, i8** %27, align 8, !dbg !2506
  %5486 = call i64 @quotearg_buffer_restyled(i8* %5477, i64 %5478, i8* %5479, i64 %5480, i32 %5481, i32 %5483, i32* null, i8* %5484, i8* %5485), !dbg !2507
  store i64 %5486, i64* %18, align 8, !dbg !2508
  %5487 = load i32, i32* @x.35
  %5488 = load i32, i32* @y.36
  %5489 = sub i32 %5487, 1
  %5490 = mul i32 %5487, %5489
  %5491 = urem i32 %5490, 2
  %5492 = icmp eq i32 %5491, 0
  %5493 = icmp slt i32 %5488, 10
  %5494 = or i1 %5492, %5493
  br i1 %5494, label %originalBBpart21618, label %originalBB1614alteredBB

originalBBpart21618:                              ; preds = %originalBB1614
  br label %5495, !dbg !2508

5495:                                             ; preds = %originalBBpart21618, %originalBBpart21600, %originalBBpart21560
  %5496 = load i32, i32* @x.35
  %5497 = load i32, i32* @y.36
  %5498 = sub i32 %5496, 1
  %5499 = mul i32 %5496, %5498
  %5500 = urem i32 %5499, 2
  %5501 = icmp eq i32 %5500, 0
  %5502 = icmp slt i32 %5497, 10
  %5503 = or i1 %5501, %5502
  br i1 %5503, label %originalBB1620, label %originalBB1620alteredBB

originalBB1620:                                   ; preds = %5495, %originalBB1620alteredBB
  %5504 = load i64, i64* %18, align 8, !dbg !2509
  %5505 = load i32, i32* @x.35
  %5506 = load i32, i32* @y.36
  %5507 = sub i32 %5505, 1
  %5508 = mul i32 %5505, %5507
  %5509 = urem i32 %5508, 2
  %5510 = icmp eq i32 %5509, 0
  %5511 = icmp slt i32 %5506, 10
  %5512 = or i1 %5510, %5511
  br i1 %5512, label %originalBBpart21622, label %originalBB1620alteredBB

originalBBpart21622:                              ; preds = %originalBB1620
  ret i64 %5504, !dbg !2509

originalBBalteredBB:                              ; preds = %originalBB, %9
  %5513 = alloca i64, align 8
  %5514 = alloca i8*, align 8
  %5515 = alloca i64, align 8
  %5516 = alloca i8*, align 8
  %5517 = alloca i64, align 8
  %5518 = alloca i32, align 4
  %5519 = alloca i32, align 4
  %5520 = alloca i32*, align 8
  %5521 = alloca i8*, align 8
  %5522 = alloca i8*, align 8
  %5523 = alloca i64, align 8
  %5524 = alloca i64, align 8
  %5525 = alloca i64, align 8
  %5526 = alloca i8*, align 8
  %5527 = alloca i64, align 8
  %5528 = alloca i8, align 1
  %5529 = alloca i8, align 1
  %5530 = alloca i8, align 1
  %5531 = alloca i8, align 1
  %5532 = alloca i8, align 1
  %5533 = alloca i8, align 1
  %5534 = alloca i8, align 1
  %5535 = alloca i8, align 1
  %5536 = alloca i8, align 1
  %5537 = alloca i8, align 1
  %5538 = alloca i8, align 1
  %5539 = alloca i64, align 8
  %5540 = alloca i8, align 1
  %5541 = alloca %struct.__mbstate_t, align 4
  %5542 = alloca i32, align 4
  %5543 = alloca i64, align 8
  %5544 = alloca i64, align 8
  %5545 = alloca i64, align 8
  store i8* %0, i8** %5514, align 8
  call void @llvm.dbg.declare(metadata i8** %5514, metadata !2510, metadata !DIExpression()), !dbg !1630
  store i64 %1, i64* %5515, align 8
  call void @llvm.dbg.declare(metadata i64* %5515, metadata !2542, metadata !DIExpression()), !dbg !1632
  store i8* %2, i8** %5516, align 8
  call void @llvm.dbg.declare(metadata i8** %5516, metadata !2543, metadata !DIExpression()), !dbg !1634
  store i64 %3, i64* %5517, align 8
  call void @llvm.dbg.declare(metadata i64* %5517, metadata !2544, metadata !DIExpression()), !dbg !1636
  store i32 %4, i32* %5518, align 4
  call void @llvm.dbg.declare(metadata i32* %5518, metadata !2545, metadata !DIExpression()), !dbg !1638
  store i32 %5, i32* %5519, align 4
  call void @llvm.dbg.declare(metadata i32* %5519, metadata !2546, metadata !DIExpression()), !dbg !1640
  store i32* %6, i32** %5520, align 8
  call void @llvm.dbg.declare(metadata i32** %5520, metadata !2547, metadata !DIExpression()), !dbg !1642
  store i8* %7, i8** %5521, align 8
  call void @llvm.dbg.declare(metadata i8** %5521, metadata !2548, metadata !DIExpression()), !dbg !1644
  store i8* %8, i8** %5522, align 8
  call void @llvm.dbg.declare(metadata i8** %5522, metadata !2549, metadata !DIExpression()), !dbg !1646
  call void @llvm.dbg.declare(metadata i64* %5523, metadata !2550, metadata !DIExpression()), !dbg !1648
  call void @llvm.dbg.declare(metadata i64* %5524, metadata !2551, metadata !DIExpression()), !dbg !1650
  store i64 0, i64* %5524, align 8, !dbg !1650
  call void @llvm.dbg.declare(metadata i64* %5525, metadata !2552, metadata !DIExpression()), !dbg !1652
  store i64 0, i64* %5525, align 8, !dbg !1652
  call void @llvm.dbg.declare(metadata i8** %5526, metadata !2553, metadata !DIExpression()), !dbg !1654
  store i8* null, i8** %5526, align 8, !dbg !1654
  call void @llvm.dbg.declare(metadata i64* %5527, metadata !2554, metadata !DIExpression()), !dbg !1656
  store i64 0, i64* %5527, align 8, !dbg !1656
  call void @llvm.dbg.declare(metadata i8* %5528, metadata !2555, metadata !DIExpression()), !dbg !1658
  store i8 0, i8* %5528, align 1, !dbg !1658
  call void @llvm.dbg.declare(metadata i8* %5529, metadata !2556, metadata !DIExpression()), !dbg !1660
  %5546 = call i64 @__ctype_get_mb_cur_max() #10, !dbg !1661
  %5547 = icmp eq i64 %5546, 1, !dbg !1662
  %5548 = zext i1 %5547 to i8, !dbg !1660
  store i8 %5548, i8* %5529, align 1, !dbg !1660
  call void @llvm.dbg.declare(metadata i8* %5530, metadata !2557, metadata !DIExpression()), !dbg !1664
  %5549 = load i32, i32* %5519, align 4, !dbg !1665
  %_ = sub i32 %5549, 2
  %gen = mul i32 %_, 2
  %_1 = shl i32 %5549, 2
  %5550 = and i32 %5549, 2, !dbg !1666
  %5551 = icmp ne i32 %5550, 0, !dbg !1667
  %5552 = zext i1 %5551 to i8, !dbg !1664
  store i8 %5552, i8* %5530, align 1, !dbg !1664
  call void @llvm.dbg.declare(metadata i8* %5531, metadata !2558, metadata !DIExpression()), !dbg !1669
  store i8 0, i8* %5531, align 1, !dbg !1669
  call void @llvm.dbg.declare(metadata i8* %5532, metadata !2559, metadata !DIExpression()), !dbg !1671
  store i8 0, i8* %5532, align 1, !dbg !1671
  call void @llvm.dbg.declare(metadata i8* %5533, metadata !2560, metadata !DIExpression()), !dbg !1673
  store i8 1, i8* %5533, align 1, !dbg !1673
  br label %originalBB

originalBB2alteredBB:                             ; preds = %originalBB2, %66
  %5553 = load i32, i32* %23, align 4, !dbg !1677
  br label %originalBB2

originalBB6alteredBB:                             ; preds = %originalBB6, %84
  store i32 5, i32* %23, align 4, !dbg !1679
  store i8 1, i8* %35, align 1, !dbg !1681
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %101
  %5554 = load i8, i8* %35, align 1, !dbg !1683
  %5555 = trunc i8 %5554 to i1, !dbg !1683
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %120
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %137
  %5556 = load i64, i64* %29, align 8, !dbg !1687
  %5557 = load i64, i64* %20, align 8, !dbg !1687
  %5558 = icmp ult i64 %5556, %5557, !dbg !1687
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %157
  %5559 = load i8*, i8** %19, align 8, !dbg !1687
  %5560 = load i64, i64* %29, align 8, !dbg !1687
  %5561 = getelementptr inbounds i8, i8* %5559, i64 %5560, !dbg !1687
  store i8 34, i8* %5561, align 1, !dbg !1687
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %177
  %5562 = load i64, i64* %29, align 8, !dbg !1690
  %_27 = shl i64 %5562, 1
  %_28 = shl i64 %5562, 1
  %_29 = sub i64 0, %5562
  %gen30 = add i64 %_29, 1
  %_31 = sub i64 0, %5562
  %gen32 = add i64 %_31, 1
  %5563 = add i64 %5562, 1, !dbg !1690
  store i64 %5563, i64* %29, align 8, !dbg !1690
  br label %originalBB26

originalBB36alteredBB:                            ; preds = %originalBB36, %197
  store i8 1, i8* %33, align 1, !dbg !1691
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.63, i64 0, i64 0), i8** %31, align 8, !dbg !1692
  store i64 1, i64* %32, align 8, !dbg !1693
  br label %originalBB36

originalBB40alteredBB:                            ; preds = %originalBB40, %215
  %5564 = load i32, i32* %23, align 4, !dbg !1698
  %5565 = icmp ne i32 %5564, 10, !dbg !1701
  br label %originalBB40

originalBB44alteredBB:                            ; preds = %originalBB44, %234
  %5566 = load i32, i32* %23, align 4, !dbg !1703
  %5567 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.64, i64 0, i64 0), i32 %5566), !dbg !1705
  store i8* %5567, i8** %26, align 8, !dbg !1706
  %5568 = load i32, i32* %23, align 4, !dbg !1707
  %5569 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.65, i64 0, i64 0), i32 %5568), !dbg !1708
  store i8* %5569, i8** %27, align 8, !dbg !1709
  br label %originalBB44

originalBB48alteredBB:                            ; preds = %originalBB48, %255
  %5570 = load i8, i8* %35, align 1, !dbg !1711
  %5571 = trunc i8 %5570 to i1, !dbg !1711
  br label %originalBB48

originalBB52alteredBB:                            ; preds = %originalBB52, %274
  %5572 = load i8*, i8** %26, align 8, !dbg !1714
  store i8* %5572, i8** %31, align 8, !dbg !1716
  br label %originalBB52

originalBB56alteredBB:                            ; preds = %originalBB56, %292
  %5573 = load i8*, i8** %31, align 8, !dbg !1718
  %5574 = load i8, i8* %5573, align 1, !dbg !1720
  %5575 = icmp ne i8 %5574, 0, !dbg !1721
  br label %originalBB56

originalBB60alteredBB:                            ; preds = %originalBB60, %312
  br label %originalBB60

originalBB64alteredBB:                            ; preds = %originalBB64, %329
  %5576 = load i64, i64* %29, align 8, !dbg !1723
  %5577 = load i64, i64* %20, align 8, !dbg !1723
  %5578 = icmp ult i64 %5576, %5577, !dbg !1723
  br label %originalBB64

originalBB68alteredBB:                            ; preds = %originalBB68, %355
  %5579 = load i64, i64* %29, align 8, !dbg !1726
  %_69 = shl i64 %5579, 1
  %_70 = sub i64 %5579, 1
  %gen71 = mul i64 %_70, 1
  %_72 = sub i64 %5579, 1
  %gen73 = mul i64 %_72, 1
  %_74 = shl i64 %5579, 1
  %5580 = add i64 %5579, 1, !dbg !1726
  store i64 %5580, i64* %29, align 8, !dbg !1726
  br label %originalBB68

originalBB78alteredBB:                            ; preds = %originalBB78, %374
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %394
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %411
  store i8 1, i8* %33, align 1, !dbg !1731
  %5581 = load i8*, i8** %27, align 8, !dbg !1732
  store i8* %5581, i8** %31, align 8, !dbg !1733
  %5582 = load i8*, i8** %31, align 8, !dbg !1734
  %5583 = call i64 @strlen(i8* %5582) #13, !dbg !1735
  store i64 %5583, i64* %32, align 8, !dbg !1736
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %431
  store i8 1, i8* %33, align 1, !dbg !1738
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %449
  %5584 = load i8, i8* %35, align 1, !dbg !1742
  %5585 = trunc i8 %5584 to i1, !dbg !1742
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %468
  store i8 1, i8* %33, align 1, !dbg !1745
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %485
  br label %originalBB102

originalBB106alteredBB:                           ; preds = %originalBB106, %502
  store i32 2, i32* %23, align 4, !dbg !1748
  %5586 = load i8, i8* %35, align 1, !dbg !1749
  %5587 = trunc i8 %5586 to i1, !dbg !1749
  br label %originalBB106

originalBB110alteredBB:                           ; preds = %originalBB110, %521
  br label %originalBB110

originalBB114alteredBB:                           ; preds = %originalBB114, %542
  %5588 = load i8*, i8** %19, align 8, !dbg !1753
  %5589 = load i64, i64* %29, align 8, !dbg !1753
  %5590 = getelementptr inbounds i8, i8* %5588, i64 %5589, !dbg !1753
  store i8 39, i8* %5590, align 1, !dbg !1753
  br label %originalBB114

originalBB118alteredBB:                           ; preds = %originalBB118, %562
  %5591 = load i64, i64* %29, align 8, !dbg !1756
  %_119 = sub i64 %5591, 1
  %gen120 = mul i64 %_119, 1
  %_121 = sub i64 0, %5591
  %gen122 = add i64 %_121, 1
  %_123 = shl i64 %5591, 1
  %_124 = shl i64 %5591, 1
  %_125 = sub i64 %5591, 1
  %gen126 = mul i64 %_125, 1
  %_127 = sub i64 0, %5591
  %gen128 = add i64 %_127, 1
  %_129 = sub i64 %5591, 1
  %gen130 = mul i64 %_129, 1
  %5592 = add i64 %5591, 1, !dbg !1756
  store i64 %5592, i64* %29, align 8, !dbg !1756
  br label %originalBB118

originalBB134alteredBB:                           ; preds = %originalBB134, %581
  br label %originalBB134

originalBB138alteredBB:                           ; preds = %originalBB138, %598
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.65, i64 0, i64 0), i8** %31, align 8, !dbg !1757
  store i64 1, i64* %32, align 8, !dbg !1758
  br label %originalBB138

originalBB142alteredBB:                           ; preds = %originalBB142, %615
  store i8 0, i8* %35, align 1, !dbg !1760
  br label %originalBB142

originalBB146alteredBB:                           ; preds = %originalBB146, %632
  call void @abort() #12, !dbg !1762
  br label %originalBB146

originalBB150alteredBB:                           ; preds = %originalBB150, %650
  %5593 = load i64, i64* %22, align 8, !dbg !1766
  %5594 = icmp eq i64 %5593, -1, !dbg !1768
  br label %originalBB150

originalBB154alteredBB:                           ; preds = %originalBB154, %669
  %5595 = load i8*, i8** %21, align 8, !dbg !1769
  %5596 = load i64, i64* %28, align 8, !dbg !1770
  %5597 = getelementptr inbounds i8, i8* %5595, i64 %5596, !dbg !1769
  %5598 = load i8, i8* %5597, align 1, !dbg !1769
  %5599 = sext i8 %5598 to i32, !dbg !1769
  %5600 = icmp eq i32 %5599, 0, !dbg !1771
  %5601 = zext i1 %5600 to i32, !dbg !1771
  br label %originalBB154

originalBB158alteredBB:                           ; preds = %originalBB158, %693
  %5602 = load i64, i64* %28, align 8, !dbg !1772
  %5603 = load i64, i64* %22, align 8, !dbg !1773
  %5604 = icmp eq i64 %5602, %5603, !dbg !1774
  %5605 = zext i1 %5604 to i32, !dbg !1774
  br label %originalBB158

originalBB162alteredBB:                           ; preds = %originalBB162, %714
  %5606 = icmp ne i32 %715, 0, !dbg !1775
  %_163 = shl i1 %5606, true
  %_164 = sub i1 %5606, true
  %gen165 = mul i1 %_164, true
  %5607 = xor i1 %5606, true, !dbg !1775
  br label %originalBB162

originalBB169alteredBB:                           ; preds = %originalBB169, %734
  store i8 0, i8* %41, align 1, !dbg !1783
  call void @llvm.dbg.declare(metadata !4, metadata !2561, metadata !DIExpression()), !dbg !1785
  store i8 0, i8* %42, align 1, !dbg !1785
  call void @llvm.dbg.declare(metadata !4, metadata !2596, metadata !DIExpression()), !dbg !1787
  store i8 0, i8* %43, align 1, !dbg !1787
  %5608 = load i8, i8* %33, align 1, !dbg !1788
  %5609 = trunc i8 %5608 to i1, !dbg !1788
  br label %originalBB169

originalBB173alteredBB:                           ; preds = %originalBB173, %753
  %5610 = load i32, i32* %23, align 4, !dbg !1791
  %5611 = icmp ne i32 %5610, 2, !dbg !1792
  br label %originalBB173

originalBB177alteredBB:                           ; preds = %originalBB177, %772
  %5612 = load i64, i64* %32, align 8, !dbg !1794
  %5613 = icmp ne i64 %5612, 0, !dbg !1794
  br label %originalBB177

originalBB181alteredBB:                           ; preds = %originalBB181, %791
  %5614 = load i64, i64* %28, align 8, !dbg !1796
  %5615 = load i64, i64* %32, align 8, !dbg !1797
  %_182 = sub i64 %5614, %5615
  %gen183 = mul i64 %_182, %5615
  %_184 = shl i64 %5614, %5615
  %_185 = sub i64 %5614, %5615
  %gen186 = mul i64 %_185, %5615
  %5616 = add i64 %5614, %5615, !dbg !1798
  %5617 = load i64, i64* %22, align 8, !dbg !1799
  %5618 = icmp eq i64 %5617, -1, !dbg !1800
  br label %originalBB181

originalBB190alteredBB:                           ; preds = %originalBB190, %813
  %5619 = load i64, i64* %32, align 8, !dbg !1802
  %5620 = icmp ult i64 1, %5619, !dbg !1803
  br label %originalBB190

originalBB194alteredBB:                           ; preds = %originalBB194, %832
  %5621 = load i8*, i8** %21, align 8, !dbg !1804
  %5622 = call i64 @strlen(i8* %5621) #13, !dbg !1805
  store i64 %5622, i64* %22, align 8, !dbg !1806
  br label %originalBB194

originalBB198alteredBB:                           ; preds = %originalBB198, %853
  %5623 = icmp ule i64 %802, %854, !dbg !1808
  br label %originalBB198

originalBB202alteredBB:                           ; preds = %originalBB202, %880
  %5624 = load i8, i8* %35, align 1, !dbg !1818
  %5625 = trunc i8 %5624 to i1, !dbg !1818
  br label %originalBB202

originalBB206alteredBB:                           ; preds = %originalBB206, %900
  store i8 1, i8* %41, align 1, !dbg !1823
  br label %originalBB206

originalBB210alteredBB:                           ; preds = %originalBB210, %917
  %5626 = load i8*, i8** %21, align 8, !dbg !1825
  %5627 = load i64, i64* %28, align 8, !dbg !1826
  %5628 = getelementptr inbounds i8, i8* %5626, i64 %5627, !dbg !1825
  %5629 = load i8, i8* %5628, align 1, !dbg !1825
  store i8 %5629, i8* %39, align 1, !dbg !1827
  %5630 = load i8, i8* %39, align 1, !dbg !1828
  %5631 = zext i8 %5630 to i32, !dbg !1828
  br label %originalBB210

originalBB214alteredBB:                           ; preds = %originalBB214, %940
  %5632 = load i8, i8* %33, align 1, !dbg !1830
  %5633 = trunc i8 %5632 to i1, !dbg !1830
  br label %originalBB214

originalBB218alteredBB:                           ; preds = %originalBB218, %959
  br label %originalBB218

originalBB222alteredBB:                           ; preds = %originalBB222, %976
  %5634 = load i8, i8* %35, align 1, !dbg !1836
  %5635 = trunc i8 %5634 to i1, !dbg !1836
  br label %originalBB222

originalBB226alteredBB:                           ; preds = %originalBB226, %999
  %5636 = load i8, i8* %36, align 1, !dbg !1840
  %5637 = trunc i8 %5636 to i1, !dbg !1840
  br label %originalBB226

originalBB230alteredBB:                           ; preds = %originalBB230, %1019
  %5638 = load i64, i64* %29, align 8, !dbg !1844
  %5639 = load i64, i64* %20, align 8, !dbg !1844
  %5640 = icmp ult i64 %5638, %5639, !dbg !1844
  br label %originalBB230

originalBB234alteredBB:                           ; preds = %originalBB234, %1039
  %5641 = load i8*, i8** %19, align 8, !dbg !1844
  %5642 = load i64, i64* %29, align 8, !dbg !1844
  %5643 = getelementptr inbounds i8, i8* %5641, i64 %5642, !dbg !1844
  store i8 39, i8* %5643, align 1, !dbg !1844
  br label %originalBB234

originalBB239alteredBB:                           ; preds = %originalBB239, %1059
  %5644 = load i64, i64* %29, align 8, !dbg !1847
  %_240 = sub i64 0, %5644
  %gen241 = add i64 %_240, 1
  %_242 = sub i64 %5644, 1
  %gen243 = mul i64 %_242, 1
  %_244 = sub i64 %5644, 1
  %gen245 = mul i64 %_244, 1
  %_246 = sub i64 %5644, 1
  %gen247 = mul i64 %_246, 1
  %_248 = sub i64 0, %5644
  %gen249 = add i64 %_248, 1
  %_250 = sub i64 %5644, 1
  %gen251 = mul i64 %_250, 1
  %_252 = shl i64 %5644, 1
  %5645 = add i64 %5644, 1, !dbg !1847
  %5646 = trunc i64 1 to i32
  %5647 = mul i32 %5646, -5
  %_253 = shl i32 %5647, 3
  %_254 = sub i32 %5647, 3
  %gen255 = mul i32 %_254, 3
  %_256 = shl i32 %5647, 3
  %_257 = sub i32 %5647, 3
  %gen258 = mul i32 %_257, 3
  %5648 = add i32 %5647, 3
  %5649 = trunc i64 %5644 to i32
  %5650 = add i32 %5649, 2
  %5651 = trunc i64 %5645 to i32
  %_259 = sub i32 0, %5651
  %gen260 = add i32 %_259, -2
  %5652 = mul i32 %5651, -2
  %_261 = sub i32 0, %5652
  %gen262 = add i32 %_261, 2
  %_263 = sub i32 0, %5652
  %gen264 = add i32 %_263, 2
  %_265 = sub i32 0, %5652
  %gen266 = add i32 %_265, 2
  %_267 = shl i32 %5652, 2
  %_268 = sub i32 %5652, 2
  %gen269 = mul i32 %_268, 2
  %_270 = shl i32 %5652, 2
  %_271 = sub i32 %5652, 2
  %gen272 = mul i32 %_271, 2
  %5653 = add i32 %5652, 2
  %_273 = sub i32 %5648, %5648
  %gen274 = mul i32 %_273, %5648
  %_275 = shl i32 %5648, %5648
  %_276 = sub i32 0, %5648
  %gen277 = add i32 %_276, %5648
  %_278 = sub i32 %5648, %5648
  %gen279 = mul i32 %_278, %5648
  %_280 = sub i32 %5648, %5648
  %gen281 = mul i32 %_280, %5648
  %5654 = mul i32 %5648, %5648
  %_282 = sub i32 %5654, %5654
  %gen283 = mul i32 %_282, %5654
  %5655 = mul i32 %5654, %5654
  %_284 = sub i32 0, %5650
  %gen285 = add i32 %_284, %5650
  %_286 = shl i32 %5650, %5650
  %5656 = mul i32 %5650, %5650
  %_287 = shl i32 %5656, %5656
  %_288 = shl i32 %5656, %5656
  %_289 = sub i32 0, %5656
  %gen290 = add i32 %_289, %5656
  %_291 = sub i32 %5656, %5656
  %gen292 = mul i32 %_291, %5656
  %_293 = shl i32 %5656, %5656
  %_294 = sub i32 %5656, %5656
  %gen295 = mul i32 %_294, %5656
  %_296 = shl i32 %5656, %5656
  %5657 = mul i32 %5656, %5656
  %_297 = sub i32 0, %5653
  %gen298 = add i32 %_297, %5653
  %5658 = mul i32 %5653, %5653
  %_299 = sub i32 0, %5658
  %gen300 = add i32 %_299, %5658
  %_301 = sub i32 %5658, %5658
  %gen302 = mul i32 %_301, %5658
  %_303 = sub i32 0, %5658
  %gen304 = add i32 %_303, %5658
  %_305 = shl i32 %5658, %5658
  %_306 = sub i32 0, %5658
  %gen307 = add i32 %_306, %5658
  %_308 = sub i32 %5658, %5658
  %gen309 = mul i32 %_308, %5658
  %5659 = mul i32 %5658, %5658
  %_310 = shl i32 %5655, %5657
  %_311 = sub i32 %5655, %5657
  %gen312 = mul i32 %_311, %5657
  %_313 = sub i32 %5655, %5657
  %gen314 = mul i32 %_313, %5657
  %_315 = shl i32 %5655, %5657
  %5660 = add i32 %5655, %5657
  %_316 = shl i32 %5660, %5659
  %_317 = sub i32 0, %5660
  %gen318 = add i32 %_317, %5659
  %_319 = sub i32 %5660, %5659
  %gen320 = mul i32 %_319, %5659
  %_321 = shl i32 %5660, %5659
  %_322 = shl i32 %5660, %5659
  %_323 = sub i32 %5660, %5659
  %gen324 = mul i32 %_323, %5659
  %_325 = shl i32 %5660, %5659
  %_326 = sub i32 0, %5660
  %gen327 = add i32 %_326, %5659
  %5661 = sub i32 %5660, %5659
  %_328 = sub i32 %5661, 5
  %gen329 = mul i32 %_328, 5
  %_330 = sub i32 %5661, 5
  %gen331 = mul i32 %_330, 5
  %_332 = shl i32 %5661, 5
  %_333 = shl i32 %5661, 5
  %_334 = sub i32 0, %5661
  %gen335 = add i32 %_334, 5
  %5662 = add i32 %5661, 5
  %5663 = icmp ne i32 %5662, 5
  br label %originalBB239

originalBB339alteredBB:                           ; preds = %originalBB339, %1096
  br label %originalBB339

originalBB343alteredBB:                           ; preds = %originalBB343, %1113
  store i64 %1069, i64* %29, align 8, !dbg !1847
  br label %originalBB343

originalBB347alteredBB:                           ; preds = %originalBB347, %1130
  br label %originalBB347

originalBB351alteredBB:                           ; preds = %originalBB351, %1147
  %5664 = load i64, i64* %29, align 8, !dbg !1848
  %5665 = load i64, i64* %20, align 8, !dbg !1848
  %5666 = icmp ult i64 %5664, %5665, !dbg !1848
  br label %originalBB351

originalBB355alteredBB:                           ; preds = %originalBB355, %1171
  %5667 = load i64, i64* %29, align 8, !dbg !1851
  %_356 = shl i64 %5667, 1
  %_357 = sub i64 0, %5667
  %gen358 = add i64 %_357, 1
  %_359 = shl i64 %5667, 1
  %_360 = sub i64 %5667, 1
  %gen361 = mul i64 %_360, 1
  %_362 = sub i64 %5667, 1
  %gen363 = mul i64 %_362, 1
  %_364 = shl i64 %5667, 1
  %_365 = sub i64 %5667, 1
  %gen366 = mul i64 %_365, 1
  %_367 = sub i64 0, %5667
  %gen368 = add i64 %_367, 1
  %5668 = add i64 %5667, 1, !dbg !1851
  store i64 %5668, i64* %29, align 8, !dbg !1851
  br label %originalBB355

originalBB372alteredBB:                           ; preds = %originalBB372, %1195
  %5669 = load i8*, i8** %19, align 8, !dbg !1852
  %5670 = load i64, i64* %29, align 8, !dbg !1852
  %5671 = getelementptr inbounds i8, i8* %5669, i64 %5670, !dbg !1852
  store i8 39, i8* %5671, align 1, !dbg !1852
  br label %originalBB372

originalBB376alteredBB:                           ; preds = %originalBB376, %1215
  %5672 = load i64, i64* %29, align 8, !dbg !1855
  %_377 = sub i64 0, %5672
  %gen378 = add i64 %_377, 1
  %_379 = sub i64 0, %5672
  %gen380 = add i64 %_379, 1
  %_381 = sub i64 %5672, 1
  %gen382 = mul i64 %_381, 1
  %_383 = shl i64 %5672, 1
  %_384 = sub i64 0, %5672
  %gen385 = add i64 %_384, 1
  %5673 = add i64 %5672, 1, !dbg !1855
  store i64 %5673, i64* %29, align 8, !dbg !1855
  br label %originalBB376

originalBB389alteredBB:                           ; preds = %originalBB389, %1234
  store i8 1, i8* %36, align 1, !dbg !1842
  br label %originalBB389

originalBB393alteredBB:                           ; preds = %originalBB393, %1251
  br label %originalBB393

originalBB397alteredBB:                           ; preds = %originalBB397, %1268
  %5674 = load i64, i64* %29, align 8, !dbg !1856
  %5675 = load i64, i64* %20, align 8, !dbg !1856
  %5676 = icmp ult i64 %5674, %5675, !dbg !1856
  br label %originalBB397

originalBB401alteredBB:                           ; preds = %originalBB401, %1288
  %5677 = load i8*, i8** %19, align 8, !dbg !1856
  %5678 = load i64, i64* %29, align 8, !dbg !1856
  %5679 = getelementptr inbounds i8, i8* %5677, i64 %5678, !dbg !1856
  store i8 92, i8* %5679, align 1, !dbg !1856
  br label %originalBB401

originalBB405alteredBB:                           ; preds = %originalBB405, %1315
  %5680 = load i64, i64* %28, align 8, !dbg !1864
  %_406 = sub i64 %5680, 1
  %gen407 = mul i64 %_406, 1
  %_408 = sub i64 0, %5680
  %gen409 = add i64 %_408, 1
  %5681 = add i64 %5680, 1, !dbg !1865
  %5682 = load i64, i64* %22, align 8, !dbg !1866
  %5683 = icmp ult i64 %5681, %5682, !dbg !1867
  br label %originalBB405

originalBB413alteredBB:                           ; preds = %originalBB413, %1336
  %5684 = load i8*, i8** %21, align 8, !dbg !1869
  %5685 = load i64, i64* %28, align 8, !dbg !1870
  %_414 = shl i64 %5685, 1
  %5686 = add i64 %5685, 1, !dbg !1871
  %5687 = getelementptr inbounds i8, i8* %5684, i64 %5686, !dbg !1869
  %5688 = load i8, i8* %5687, align 1, !dbg !1869
  %5689 = sext i8 %5688 to i32, !dbg !1869
  %5690 = icmp sle i32 48, %5689, !dbg !1872
  br label %originalBB413

originalBB418alteredBB:                           ; preds = %originalBB418, %1360
  %5691 = load i8*, i8** %21, align 8, !dbg !1874
  %5692 = load i64, i64* %28, align 8, !dbg !1875
  %_419 = sub i64 0, %5692
  %gen420 = add i64 %_419, 1
  %_421 = shl i64 %5692, 1
  %_422 = sub i64 %5692, 1
  %gen423 = mul i64 %_422, 1
  %_424 = shl i64 %5692, 1
  %_425 = shl i64 %5692, 1
  %_426 = sub i64 0, %5692
  %gen427 = add i64 %_426, 1
  %5693 = add i64 %5692, 1, !dbg !1876
  %5694 = getelementptr inbounds i8, i8* %5691, i64 %5693, !dbg !1874
  %5695 = load i8, i8* %5694, align 1, !dbg !1874
  %5696 = sext i8 %5695 to i32, !dbg !1874
  %5697 = icmp sle i32 %5696, 57, !dbg !1877
  br label %originalBB418

originalBB431alteredBB:                           ; preds = %originalBB431, %1384
  br label %originalBB431

originalBB435alteredBB:                           ; preds = %originalBB435, %1401
  %5698 = load i64, i64* %29, align 8, !dbg !1881
  %5699 = load i64, i64* %20, align 8, !dbg !1881
  %5700 = icmp ult i64 %5698, %5699, !dbg !1881
  br label %originalBB435

originalBB439alteredBB:                           ; preds = %originalBB439, %1421
  %5701 = load i8*, i8** %19, align 8, !dbg !1881
  %5702 = load i64, i64* %29, align 8, !dbg !1881
  %5703 = getelementptr inbounds i8, i8* %5701, i64 %5702, !dbg !1881
  store i8 48, i8* %5703, align 1, !dbg !1881
  br label %originalBB439

originalBB443alteredBB:                           ; preds = %originalBB443, %1441
  %5704 = load i64, i64* %29, align 8, !dbg !1884
  %_444 = shl i64 %5704, 1
  %_445 = sub i64 %5704, 1
  %gen446 = mul i64 %_445, 1
  %5705 = add i64 %5704, 1, !dbg !1884
  store i64 %5705, i64* %29, align 8, !dbg !1884
  br label %originalBB443

originalBB450alteredBB:                           ; preds = %originalBB450, %1460
  br label %originalBB450

originalBB454alteredBB:                           ; preds = %originalBB454, %1485
  %5706 = load i64, i64* %29, align 8, !dbg !1889
  %_455 = sub i64 0, %5706
  %gen456 = add i64 %_455, 1
  %_457 = sub i64 %5706, 1
  %gen458 = mul i64 %_457, 1
  %5707 = add i64 %5706, 1, !dbg !1889
  store i64 %5707, i64* %29, align 8, !dbg !1889
  br label %originalBB454

originalBB462alteredBB:                           ; preds = %originalBB462, %1504
  br label %originalBB462

originalBB466alteredBB:                           ; preds = %originalBB466, %1522
  %5708 = load i32, i32* %24, align 4, !dbg !1893
  %_467 = sub i32 0, %5708
  %gen468 = add i32 %_467, 1
  %_469 = sub i32 0, %5708
  %gen470 = add i32 %_469, 1
  %_471 = shl i32 %5708, 1
  %_472 = sub i32 0, %5708
  %gen473 = add i32 %_472, 1
  %_474 = sub i32 %5708, 1
  %gen475 = mul i32 %_474, 1
  %_476 = shl i32 %5708, 1
  %5709 = and i32 %5708, 1, !dbg !1895
  %5710 = icmp ne i32 %5709, 0, !dbg !1895
  br label %originalBB466

originalBB480alteredBB:                           ; preds = %originalBB480, %1542
  br label %originalBB480

originalBB484alteredBB:                           ; preds = %originalBB484, %1559
  br label %originalBB484

originalBB488alteredBB:                           ; preds = %originalBB488, %1576
  br label %originalBB488

originalBB492alteredBB:                           ; preds = %originalBB492, %1593
  %5711 = load i32, i32* %23, align 4, !dbg !1899
  br label %originalBB492

originalBB496alteredBB:                           ; preds = %originalBB496, %1614
  br label %originalBB496

originalBB500alteredBB:                           ; preds = %originalBB500, %1631
  br label %originalBB500

originalBB504alteredBB:                           ; preds = %originalBB504, %1648
  %5712 = load i32, i32* %24, align 4, !dbg !1907
  %_505 = shl i32 %5712, 4
  %_506 = shl i32 %5712, 4
  %_507 = shl i32 %5712, 4
  %_508 = shl i32 %5712, 4
  %5713 = and i32 %5712, 4, !dbg !1909
  %5714 = icmp ne i32 %5713, 0, !dbg !1909
  br label %originalBB504

originalBB512alteredBB:                           ; preds = %originalBB512, %1668
  %5715 = load i64, i64* %28, align 8, !dbg !1911
  %_513 = sub i64 %5715, 2
  %gen514 = mul i64 %_513, 2
  %_515 = shl i64 %5715, 2
  %5716 = add i64 %5715, 2, !dbg !1912
  %5717 = load i64, i64* %22, align 8, !dbg !1913
  %5718 = trunc i64 %5717 to i32
  %_516 = shl i32 %5718, -4
  %_517 = sub i32 0, %5718
  %gen518 = add i32 %_517, -4
  %_519 = sub i32 %5718, -4
  %gen520 = mul i32 %_519, -4
  %_521 = shl i32 %5718, -4
  %_522 = sub i32 0, %5718
  %gen523 = add i32 %_522, -4
  %_524 = sub i32 %5718, -4
  %gen525 = mul i32 %_524, -4
  %_526 = shl i32 %5718, -4
  %_527 = sub i32 %5718, -4
  %gen528 = mul i32 %_527, -4
  %5719 = mul i32 %5718, -4
  %5720 = trunc i64 2 to i32
  %_529 = shl i32 %5720, 3
  %5721 = mul i32 %5720, 3
  %_530 = shl i32 %5721, -5
  %_531 = sub i32 0, %5721
  %gen532 = add i32 %_531, -5
  %_533 = sub i32 0, %5721
  %gen534 = add i32 %_533, -5
  %_535 = sub i32 0, %5721
  %gen536 = add i32 %_535, -5
  %5722 = add i32 %5721, -5
  %_537 = shl i32 %5719, %5719
  %_538 = shl i32 %5719, %5719
  %_539 = sub i32 %5719, %5719
  %gen540 = mul i32 %_539, %5719
  %_541 = sub i32 0, %5719
  %gen542 = add i32 %_541, %5719
  %_543 = sub i32 0, %5719
  %gen544 = add i32 %_543, %5719
  %_545 = sub i32 %5719, %5719
  %gen546 = mul i32 %_545, %5719
  %_547 = sub i32 %5719, %5719
  %gen548 = mul i32 %_547, %5719
  %_549 = shl i32 %5719, %5719
  %5723 = mul i32 %5719, %5719
  %_550 = shl i32 %5722, %5722
  %_551 = sub i32 0, %5722
  %gen552 = add i32 %_551, %5722
  %_553 = sub i32 %5722, %5722
  %gen554 = mul i32 %_553, %5722
  %_555 = sub i32 0, %5722
  %gen556 = add i32 %_555, %5722
  %5724 = mul i32 %5722, %5722
  %_557 = shl i32 %5723, %5724
  %_558 = sub i32 0, %5723
  %gen559 = add i32 %_558, %5724
  %5725 = add i32 %5723, %5724
  %_560 = shl i32 %5719, %5722
  %5726 = mul i32 %5719, %5722
  %_561 = sub i32 0, %5726
  %gen562 = add i32 %_561, 2
  %_563 = sub i32 0, %5726
  %gen564 = add i32 %_563, 2
  %_565 = shl i32 %5726, 2
  %5727 = mul i32 %5726, 2
  %_566 = sub i32 %5725, %5727
  %gen567 = mul i32 %_566, %5727
  %_568 = sub i32 %5725, %5727
  %gen569 = mul i32 %_568, %5727
  %_570 = sub i32 %5725, %5727
  %gen571 = mul i32 %_570, %5727
  %_572 = shl i32 %5725, %5727
  %_573 = sub i32 0, %5725
  %gen574 = add i32 %_573, %5727
  %_575 = sub i32 0, %5725
  %gen576 = add i32 %_575, %5727
  %_577 = sub i32 0, %5725
  %gen578 = add i32 %_577, %5727
  %_579 = shl i32 %5725, %5727
  %5728 = sub i32 %5725, %5727
  %_580 = shl i32 %5728, -2
  %_581 = shl i32 %5728, -2
  %_582 = shl i32 %5728, -2
  %_583 = sub i32 %5728, -2
  %gen584 = mul i32 %_583, -2
  %_585 = shl i32 %5728, -2
  %_586 = sub i32 0, %5728
  %gen587 = add i32 %_586, -2
  %_588 = sub i32 %5728, -2
  %gen589 = mul i32 %_588, -2
  %5729 = mul i32 %5728, -2
  %_590 = shl i32 %5729, -4
  %_591 = sub i32 0, %5729
  %gen592 = add i32 %_591, -4
  %_593 = sub i32 0, %5729
  %gen594 = add i32 %_593, -4
  %_595 = shl i32 %5729, -4
  %5730 = add i32 %5729, -4
  %5731 = icmp ne i32 %5730, -2
  br label %originalBB512

originalBB599alteredBB:                           ; preds = %originalBB599, %1702
  br label %originalBB599

originalBB603alteredBB:                           ; preds = %originalBB603, %1719
  %5732 = icmp ult i64 %1678, %1679, !dbg !1914
  br label %originalBB603

originalBB607alteredBB:                           ; preds = %originalBB607, %1755
  %5733 = getelementptr inbounds i8, i8* %1738, i64 %1740, !dbg !1916
  %5734 = load i8, i8* %5733, align 1, !dbg !1916
  %5735 = sext i8 %5734 to i32, !dbg !1916
  %5736 = icmp eq i32 %5735, 63, !dbg !1919
  br label %originalBB607

originalBB611alteredBB:                           ; preds = %originalBB611, %1786
  br label %originalBB611

originalBB615alteredBB:                           ; preds = %originalBB615, %1815
  %5737 = load i8*, i8** %19, align 8, !dbg !1936
  %5738 = load i64, i64* %29, align 8, !dbg !1936
  %5739 = getelementptr inbounds i8, i8* %5737, i64 %5738, !dbg !1936
  store i8 63, i8* %5739, align 1, !dbg !1936
  br label %originalBB615

originalBB619alteredBB:                           ; preds = %originalBB619, %1838
  br label %originalBB619

originalBB623alteredBB:                           ; preds = %originalBB623, %1877
  br label %originalBB623

originalBB627alteredBB:                           ; preds = %originalBB627, %1898
  %5740 = load i8*, i8** %19, align 8, !dbg !1946
  %5741 = load i64, i64* %29, align 8, !dbg !1946
  %5742 = getelementptr inbounds i8, i8* %5740, i64 %5741, !dbg !1946
  store i8 34, i8* %5742, align 1, !dbg !1946
  br label %originalBB627

originalBB631alteredBB:                           ; preds = %originalBB631, %1918
  %5743 = load i64, i64* %29, align 8, !dbg !1949
  %_632 = sub i64 %5743, 1
  %gen633 = mul i64 %_632, 1
  %_634 = shl i64 %5743, 1
  %5744 = add i64 %5743, 1, !dbg !1949
  store i64 %5744, i64* %29, align 8, !dbg !1949
  br label %originalBB631

originalBB638alteredBB:                           ; preds = %originalBB638, %1937
  br label %originalBB638

originalBB642alteredBB:                           ; preds = %originalBB642, %1965
  br label %originalBB642

originalBB646alteredBB:                           ; preds = %originalBB646, %1982
  br label %originalBB646

originalBB650alteredBB:                           ; preds = %originalBB650, %1999
  br label %originalBB650

originalBB654alteredBB:                           ; preds = %originalBB654, %2017
  br label %originalBB654

originalBB658alteredBB:                           ; preds = %originalBB658, %2035
  store i8 97, i8* %40, align 1, !dbg !1961
  br label %originalBB658

originalBB662alteredBB:                           ; preds = %originalBB662, %2052
  store i8 98, i8* %40, align 1, !dbg !1963
  br label %originalBB662

originalBB666alteredBB:                           ; preds = %originalBB666, %2070
  store i8 110, i8* %40, align 1, !dbg !1967
  br label %originalBB666

originalBB670alteredBB:                           ; preds = %originalBB670, %2088
  store i8 116, i8* %40, align 1, !dbg !1971
  br label %originalBB670

originalBB674alteredBB:                           ; preds = %originalBB674, %2105
  store i8 118, i8* %40, align 1, !dbg !1973
  br label %originalBB674

originalBB678alteredBB:                           ; preds = %originalBB678, %2122
  %5745 = load i8, i8* %39, align 1, !dbg !1975
  store i8 %5745, i8* %40, align 1, !dbg !1976
  %5746 = load i32, i32* %23, align 4, !dbg !1977
  %5747 = icmp eq i32 %5746, 2, !dbg !1979
  br label %originalBB678

originalBB682alteredBB:                           ; preds = %originalBB682, %2142
  %5748 = load i8, i8* %35, align 1, !dbg !1981
  %5749 = trunc i8 %5748 to i1, !dbg !1981
  br label %originalBB682

originalBB686alteredBB:                           ; preds = %originalBB686, %2163
  %5750 = load i8, i8* %33, align 1, !dbg !1987
  %5751 = trunc i8 %5750 to i1, !dbg !1987
  br label %originalBB686

originalBB690alteredBB:                           ; preds = %originalBB690, %2182
  %5752 = load i8, i8* %35, align 1, !dbg !1990
  %5753 = trunc i8 %5752 to i1, !dbg !1990
  br label %originalBB690

originalBB694alteredBB:                           ; preds = %originalBB694, %2205
  br label %originalBB694

originalBB698alteredBB:                           ; preds = %originalBB698, %2225
  %5754 = load i8, i8* %35, align 1, !dbg !2001
  %5755 = trunc i8 %5754 to i1, !dbg !2001
  br label %originalBB698

originalBB702alteredBB:                           ; preds = %originalBB702, %2246
  %5756 = load i8, i8* %33, align 1, !dbg !2006
  %5757 = trunc i8 %5756 to i1, !dbg !2006
  br label %originalBB702

originalBB706alteredBB:                           ; preds = %originalBB706, %2267
  br label %originalBB706

originalBB710alteredBB:                           ; preds = %originalBB710, %2284
  %5758 = load i64, i64* %22, align 8, !dbg !2014
  %5759 = icmp eq i64 %5758, -1, !dbg !2016
  br label %originalBB710

originalBB714alteredBB:                           ; preds = %originalBB714, %2312
  br label %originalBB714

originalBB718alteredBB:                           ; preds = %originalBB718, %2329
  br label %originalBB718

originalBB722alteredBB:                           ; preds = %originalBB722, %2346
  %5760 = load i64, i64* %28, align 8, !dbg !2024
  %5761 = icmp ne i64 %5760, 0, !dbg !2026
  br label %originalBB722

originalBB726alteredBB:                           ; preds = %originalBB726, %2365
  br label %originalBB726

originalBB730alteredBB:                           ; preds = %originalBB730, %2383
  store i8 1, i8* %43, align 1, !dbg !2030
  br label %originalBB730

originalBB734alteredBB:                           ; preds = %originalBB734, %2400
  %5762 = load i32, i32* %23, align 4, !dbg !2032
  %5763 = icmp eq i32 %5762, 2, !dbg !2034
  br label %originalBB734

originalBB738alteredBB:                           ; preds = %originalBB738, %2419
  %5764 = load i8, i8* %35, align 1, !dbg !2036
  %5765 = trunc i8 %5764 to i1, !dbg !2036
  br label %originalBB738

originalBB742alteredBB:                           ; preds = %originalBB742, %2438
  br label %originalBB742

originalBB746alteredBB:                           ; preds = %originalBB746, %2455
  br label %originalBB746

originalBB750alteredBB:                           ; preds = %originalBB750, %2472
  store i8 1, i8* %37, align 1, !dbg !2040
  store i8 1, i8* %43, align 1, !dbg !2041
  %5766 = load i32, i32* %23, align 4, !dbg !2042
  %5767 = icmp eq i32 %5766, 2, !dbg !2044
  br label %originalBB750

originalBB754alteredBB:                           ; preds = %originalBB754, %2494
  br label %originalBB754

originalBB758alteredBB:                           ; preds = %originalBB758, %2511
  %5768 = load i64, i64* %20, align 8, !dbg !2051
  %5769 = icmp ne i64 %5768, 0, !dbg !2051
  br label %originalBB758

originalBB762alteredBB:                           ; preds = %originalBB762, %2533
  %5770 = load i64, i64* %20, align 8, !dbg !2056
  store i64 %5770, i64* %30, align 8, !dbg !2058
  store i64 0, i64* %20, align 8, !dbg !2059
  br label %originalBB762

originalBB766alteredBB:                           ; preds = %originalBB766, %2556
  %5771 = load i8*, i8** %19, align 8, !dbg !2062
  %5772 = load i64, i64* %29, align 8, !dbg !2062
  %5773 = getelementptr inbounds i8, i8* %5771, i64 %5772, !dbg !2062
  store i8 39, i8* %5773, align 1, !dbg !2062
  br label %originalBB766

originalBB770alteredBB:                           ; preds = %originalBB770, %2576
  %5774 = load i64, i64* %29, align 8, !dbg !2065
  %5775 = add i64 %5774, 1, !dbg !2065
  store i64 %5775, i64* %29, align 8, !dbg !2065
  br label %originalBB770

originalBB774alteredBB:                           ; preds = %originalBB774, %2595
  br label %originalBB774

originalBB778alteredBB:                           ; preds = %originalBB778, %2612
  %5776 = load i64, i64* %29, align 8, !dbg !2067
  %5777 = load i64, i64* %20, align 8, !dbg !2067
  %5778 = icmp ult i64 %5776, %5777, !dbg !2067
  br label %originalBB778

originalBB782alteredBB:                           ; preds = %originalBB782, %2632
  %5779 = load i8*, i8** %19, align 8, !dbg !2067
  %5780 = load i64, i64* %29, align 8, !dbg !2067
  %5781 = getelementptr inbounds i8, i8* %5779, i64 %5780, !dbg !2067
  store i8 92, i8* %5781, align 1, !dbg !2067
  br label %originalBB782

originalBB786alteredBB:                           ; preds = %originalBB786, %2652
  %5782 = load i64, i64* %29, align 8, !dbg !2070
  %_787 = sub i64 0, %5782
  %gen788 = add i64 %_787, 1
  %_789 = sub i64 0, %5782
  %gen790 = add i64 %_789, 1
  %_791 = shl i64 %5782, 1
  %_792 = shl i64 %5782, 1
  %_793 = shl i64 %5782, 1
  %_794 = shl i64 %5782, 1
  %_795 = sub i64 %5782, 1
  %gen796 = mul i64 %_795, 1
  %_797 = sub i64 0, %5782
  %gen798 = add i64 %_797, 1
  %_799 = shl i64 %5782, 1
  %_800 = sub i64 %5782, 1
  %gen801 = mul i64 %_800, 1
  %5783 = add i64 %5782, 1, !dbg !2070
  store i64 %5783, i64* %29, align 8, !dbg !2070
  br label %originalBB786

originalBB805alteredBB:                           ; preds = %originalBB805, %2672
  %5784 = load i64, i64* %29, align 8, !dbg !2072
  %5785 = load i64, i64* %20, align 8, !dbg !2072
  %5786 = icmp ult i64 %5784, %5785, !dbg !2072
  br label %originalBB805

originalBB809alteredBB:                           ; preds = %originalBB809, %2692
  %5787 = load i8*, i8** %19, align 8, !dbg !2072
  %5788 = load i64, i64* %29, align 8, !dbg !2072
  %5789 = getelementptr inbounds i8, i8* %5787, i64 %5788, !dbg !2072
  store i8 39, i8* %5789, align 1, !dbg !2072
  br label %originalBB809

originalBB813alteredBB:                           ; preds = %originalBB813, %2712
  %5790 = load i64, i64* %29, align 8, !dbg !2075
  %_814 = sub i64 0, %5790
  %gen815 = add i64 %_814, 1
  %_816 = sub i64 0, %5790
  %gen817 = add i64 %_816, 1
  %_818 = shl i64 %5790, 1
  %_819 = sub i64 0, %5790
  %gen820 = add i64 %_819, 1
  %_821 = sub i64 0, %5790
  %gen822 = add i64 %_821, 1
  %_823 = sub i64 0, %5790
  %gen824 = add i64 %_823, 1
  %5791 = add i64 %5790, 1, !dbg !2075
  store i64 %5791, i64* %29, align 8, !dbg !2075
  br label %originalBB813

originalBB828alteredBB:                           ; preds = %originalBB828, %2731
  store i8 0, i8* %36, align 1, !dbg !2076
  br label %originalBB828

originalBB832alteredBB:                           ; preds = %originalBB832, %2749
  store i8 1, i8* %43, align 1, !dbg !2079
  br label %originalBB832

originalBB836alteredBB:                           ; preds = %originalBB836, %2766
  %5792 = load i8, i8* %34, align 1, !dbg !2086
  %5793 = trunc i8 %5792 to i1, !dbg !2086
  br label %originalBB836

originalBB840alteredBB:                           ; preds = %originalBB840, %2785
  store i64 1, i64* %44, align 8, !dbg !2089
  %5794 = call i16** @__ctype_b_loc() #15, !dbg !2091
  %5795 = load i16*, i16** %5794, align 8, !dbg !2091
  %5796 = load i8, i8* %39, align 1, !dbg !2091
  %5797 = zext i8 %5796 to i32, !dbg !2091
  %5798 = sext i32 %5797 to i64, !dbg !2091
  %5799 = getelementptr inbounds i16, i16* %5795, i64 %5798, !dbg !2091
  %5800 = load i16, i16* %5799, align 2, !dbg !2091
  %5801 = zext i16 %5800 to i32, !dbg !2091
  %_841 = sub i32 %5801, 16384
  %gen842 = mul i32 %_841, 16384
  %_843 = sub i32 0, %5801
  %gen844 = add i32 %_843, 16384
  %5802 = and i32 %5801, 16384, !dbg !2091
  %5803 = icmp ne i32 %5802, 0, !dbg !2092
  %5804 = zext i1 %5803 to i8, !dbg !2093
  store i8 %5804, i8* %45, align 1, !dbg !2093
  br label %originalBB840

originalBB848alteredBB:                           ; preds = %originalBB848, %2813
  %5805 = bitcast %struct.__mbstate_t* %46 to i8*, !dbg !2113
  call void @llvm.memset.p0i8.i64(i8* align 4 %5805, i8 0, i64 8, i1 false), !dbg !2113
  store i64 0, i64* %44, align 8, !dbg !2114
  store i8 1, i8* %45, align 1, !dbg !2115
  %5806 = load i64, i64* %22, align 8, !dbg !2116
  %5807 = trunc i64 %5806 to i32
  %_849 = shl i32 %5807, -2
  %_850 = sub i32 %5807, -2
  %gen851 = mul i32 %_850, -2
  %_852 = sub i32 0, %5807
  %gen853 = add i32 %_852, -2
  %_854 = shl i32 %5807, -2
  %_855 = shl i32 %5807, -2
  %5808 = mul i32 %5807, -2
  %_856 = sub i32 %5808, %5808
  %gen857 = mul i32 %_856, %5808
  %_858 = shl i32 %5808, %5808
  %_859 = sub i32 0, %5808
  %gen860 = add i32 %_859, %5808
  %_861 = sub i32 0, %5808
  %gen862 = add i32 %_861, %5808
  %_863 = sub i32 0, %5808
  %gen864 = add i32 %_863, %5808
  %5809 = mul i32 %5808, %5808
  %_865 = shl i32 %5809, %5808
  %_866 = shl i32 %5809, %5808
  %_867 = sub i32 %5809, %5808
  %gen868 = mul i32 %_867, %5808
  %_869 = shl i32 %5809, %5808
  %5810 = sub i32 %5809, %5808
  %_870 = sub i32 0, %5810
  %gen871 = add i32 %_870, 2
  %_872 = sub i32 0, %5810
  %gen873 = add i32 %_872, 2
  %_874 = sub i32 0, %5810
  %gen875 = add i32 %_874, 2
  %_876 = shl i32 %5810, 2
  %_877 = sub i32 0, %5810
  %gen878 = add i32 %_877, 2
  %_879 = sub i32 %5810, 2
  %gen880 = mul i32 %_879, 2
  %5811 = srem i32 %5810, 2
  %5812 = icmp ne i32 %5811, 0
  br label %originalBB848

originalBB884alteredBB:                           ; preds = %originalBB884, %2838
  br label %originalBB884

originalBB888alteredBB:                           ; preds = %originalBB888, %2855
  %5813 = icmp eq i64 %2823, -1, !dbg !2118
  br label %originalBB888

originalBB892alteredBB:                           ; preds = %originalBB892, %2876
  br label %originalBB892

originalBB896alteredBB:                           ; preds = %originalBB896, %2893
  %5814 = load i8*, i8** %21, align 8, !dbg !2131
  %5815 = load i64, i64* %28, align 8, !dbg !2132
  %5816 = load i64, i64* %44, align 8, !dbg !2133
  %_897 = sub i64 %5815, %5816
  %gen898 = mul i64 %_897, %5816
  %_899 = sub i64 %5815, %5816
  %gen900 = mul i64 %_899, %5816
  %_901 = sub i64 0, %5815
  %gen902 = add i64 %_901, %5816
  %_903 = sub i64 %5815, %5816
  %gen904 = mul i64 %_903, %5816
  %_905 = shl i64 %5815, %5816
  %_906 = sub i64 %5815, %5816
  %gen907 = mul i64 %_906, %5816
  %_908 = sub i64 0, %5815
  %gen909 = add i64 %_908, %5816
  %_910 = shl i64 %5815, %5816
  %5817 = add i64 %5815, %5816, !dbg !2134
  %5818 = getelementptr inbounds i8, i8* %5814, i64 %5817, !dbg !2131
  %5819 = load i64, i64* %22, align 8, !dbg !2135
  %5820 = load i64, i64* %28, align 8, !dbg !2136
  %5821 = load i64, i64* %44, align 8, !dbg !2137
  %_911 = sub i64 0, %5820
  %gen912 = add i64 %_911, %5821
  %_913 = sub i64 %5820, %5821
  %gen914 = mul i64 %_913, %5821
  %5822 = add i64 %5820, %5821, !dbg !2138
  %_915 = sub i64 %5819, %5822
  %gen916 = mul i64 %_915, %5822
  %_917 = sub i64 0, %5819
  %gen918 = add i64 %_917, %5822
  %_919 = sub i64 0, %5819
  %gen920 = add i64 %_919, %5822
  %_921 = sub i64 %5819, %5822
  %gen922 = mul i64 %_921, %5822
  %5823 = sub i64 %5819, %5822, !dbg !2139
  %5824 = call i64 @rpl_mbrtowc(i32* %47, i8* %5818, i64 %5823, %struct.__mbstate_t* %46), !dbg !2140
  store i64 %5824, i64* %48, align 8, !dbg !2130
  %5825 = load i64, i64* %48, align 8, !dbg !2141
  %5826 = icmp eq i64 %5825, 0, !dbg !2143
  br label %originalBB896

originalBB926alteredBB:                           ; preds = %originalBB926, %2923
  br label %originalBB926

originalBB930alteredBB:                           ; preds = %originalBB930, %2943
  store i8 0, i8* %45, align 1, !dbg !2150
  br label %originalBB930

originalBB934alteredBB:                           ; preds = %originalBB934, %2960
  %5827 = load i64, i64* %48, align 8, !dbg !2153
  %5828 = icmp eq i64 %5827, -2, !dbg !2155
  br label %originalBB934

originalBB938alteredBB:                           ; preds = %originalBB938, %2979
  store i8 0, i8* %45, align 1, !dbg !2157
  br label %originalBB938

originalBB942alteredBB:                           ; preds = %originalBB942, %2996
  %5829 = load i64, i64* %28, align 8, !dbg !2160
  %5830 = load i64, i64* %44, align 8, !dbg !2161
  %_943 = shl i64 %5829, %5830
  %_944 = shl i64 %5829, %5830
  %_945 = sub i64 %5829, %5830
  %gen946 = mul i64 %_945, %5830
  %5831 = add i64 %5829, %5830, !dbg !2162
  %5832 = load i64, i64* %22, align 8, !dbg !2163
  %5833 = icmp ult i64 %5831, %5832, !dbg !2164
  br label %originalBB942

originalBB950alteredBB:                           ; preds = %originalBB950, %3018
  %5834 = load i8*, i8** %21, align 8, !dbg !2166
  %5835 = load i64, i64* %28, align 8, !dbg !2167
  %5836 = load i64, i64* %44, align 8, !dbg !2168
  %_951 = sub i64 %5835, %5836
  %gen952 = mul i64 %_951, %5836
  %_953 = sub i64 %5835, %5836
  %gen954 = mul i64 %_953, %5836
  %_955 = sub i64 0, %5835
  %gen956 = add i64 %_955, %5836
  %_957 = sub i64 %5835, %5836
  %gen958 = mul i64 %_957, %5836
  %_959 = sub i64 0, %5835
  %gen960 = add i64 %_959, %5836
  %_961 = sub i64 %5835, %5836
  %gen962 = mul i64 %_961, %5836
  %_963 = shl i64 %5835, %5836
  %5837 = add i64 %5835, %5836, !dbg !2169
  %5838 = getelementptr inbounds i8, i8* %5834, i64 %5837, !dbg !2166
  %5839 = load i8, i8* %5838, align 1, !dbg !2166
  %5840 = sext i8 %5839 to i32, !dbg !2166
  %5841 = icmp ne i32 %5840, 0, !dbg !2165
  br label %originalBB950

originalBB967alteredBB:                           ; preds = %originalBB967, %3043
  br label %originalBB967

originalBB971alteredBB:                           ; preds = %originalBB971, %3061
  %5842 = load i64, i64* %44, align 8, !dbg !2171
  %_972 = sub i64 %5842, 1
  %gen973 = mul i64 %_972, 1
  %_974 = shl i64 %5842, 1
  %_975 = sub i64 %5842, 1
  %gen976 = mul i64 %_975, 1
  %_977 = shl i64 %5842, 1
  %5843 = add i64 %5842, 1, !dbg !2171
  store i64 %5843, i64* %44, align 8, !dbg !2171
  br label %originalBB971

originalBB981alteredBB:                           ; preds = %originalBB981, %3080
  br label %originalBB981

originalBB985alteredBB:                           ; preds = %originalBB985, %3097
  %5844 = load i8, i8* %35, align 1, !dbg !2174
  %5845 = trunc i8 %5844 to i1, !dbg !2174
  br label %originalBB985

originalBB989alteredBB:                           ; preds = %originalBB989, %3119
  store i64 1, i64* %49, align 8, !dbg !2184
  br label %originalBB989

originalBB993alteredBB:                           ; preds = %originalBB993, %3136
  %5846 = load i64, i64* %49, align 8, !dbg !2187
  %5847 = load i64, i64* %48, align 8, !dbg !2189
  %5848 = icmp ult i64 %5846, %5847, !dbg !2190
  br label %originalBB993

originalBB997alteredBB:                           ; preds = %originalBB997, %3166
  br label %originalBB997

originalBB1001alteredBB:                          ; preds = %originalBB1001, %3183
  br label %originalBB1001

originalBB1005alteredBB:                          ; preds = %originalBB1005, %3205
  %5849 = load i32, i32* %47, align 4, !dbg !2208
  %5850 = call i32 @iswprint(i32 %5849) #10, !dbg !2210
  %5851 = icmp ne i32 %5850, 0, !dbg !2210
  br label %originalBB1005

originalBB1009alteredBB:                          ; preds = %originalBB1009, %3225
  store i8 0, i8* %45, align 1, !dbg !2212
  br label %originalBB1009

originalBB1013alteredBB:                          ; preds = %originalBB1013, %3242
  %5852 = load i64, i64* %48, align 8, !dbg !2214
  %5853 = load i64, i64* %44, align 8, !dbg !2215
  %_1014 = shl i64 %5853, %5852
  %_1015 = sub i64 %5853, %5852
  %gen1016 = mul i64 %_1015, %5852
  %_1017 = sub i64 %5853, %5852
  %gen1018 = mul i64 %_1017, %5852
  %5854 = add i64 %5853, %5852, !dbg !2215
  store i64 %5854, i64* %44, align 8, !dbg !2215
  br label %originalBB1013

originalBB1022alteredBB:                          ; preds = %originalBB1022, %3263
  br label %originalBB1022

originalBB1026alteredBB:                          ; preds = %originalBB1026, %3280
  br label %originalBB1026

originalBB1030alteredBB:                          ; preds = %originalBB1030, %3301
  br label %originalBB1030

originalBB1034alteredBB:                          ; preds = %originalBB1034, %3318
  %5855 = load i8, i8* %45, align 1, !dbg !2221
  %5856 = trunc i8 %5855 to i1, !dbg !2221
  %5857 = zext i1 %5856 to i8, !dbg !2222
  store i8 %5857, i8* %43, align 1, !dbg !2222
  %5858 = load i64, i64* %44, align 8, !dbg !2223
  %5859 = icmp ult i64 1, %5858, !dbg !2225
  br label %originalBB1034

originalBB1038alteredBB:                          ; preds = %originalBB1038, %3340
  %5860 = load i8, i8* %33, align 1, !dbg !2227
  %5861 = trunc i8 %5860 to i1, !dbg !2227
  br label %originalBB1038

originalBB1042alteredBB:                          ; preds = %originalBB1042, %3359
  %5862 = load i8, i8* %45, align 1, !dbg !2229
  %5863 = trunc i8 %5862 to i1, !dbg !2229
  br label %originalBB1042

originalBB1046alteredBB:                          ; preds = %originalBB1046, %3378
  %5864 = load i64, i64* %28, align 8, !dbg !2234
  %5865 = load i64, i64* %44, align 8, !dbg !2235
  %_1047 = sub i64 %5864, %5865
  %gen1048 = mul i64 %_1047, %5865
  %_1049 = shl i64 %5864, %5865
  %5866 = add i64 %5864, %5865, !dbg !2236
  store i64 %5866, i64* %50, align 8, !dbg !2233
  br label %originalBB1046

originalBB1053alteredBB:                          ; preds = %originalBB1053, %3398
  %5867 = load i8, i8* %33, align 1, !dbg !2238
  %5868 = trunc i8 %5867 to i1, !dbg !2238
  br label %originalBB1053

originalBB1057alteredBB:                          ; preds = %originalBB1057, %3417
  %5869 = load i8, i8* %45, align 1, !dbg !2244
  %5870 = trunc i8 %5869 to i1, !dbg !2244
  br label %originalBB1057

originalBB1061alteredBB:                          ; preds = %originalBB1061, %3436
  br label %originalBB1061

originalBB1065alteredBB:                          ; preds = %originalBB1065, %3456
  br label %originalBB1065

originalBB1069alteredBB:                          ; preds = %originalBB1069, %3473
  store i8 1, i8* %42, align 1, !dbg !2251
  %5871 = load i32, i32* %23, align 4, !dbg !2252
  %5872 = icmp eq i32 %5871, 2, !dbg !2252
  br label %originalBB1069

originalBB1073alteredBB:                          ; preds = %originalBB1073, %3492
  %5873 = load i8, i8* %36, align 1, !dbg !2252
  %5874 = trunc i8 %5873 to i1, !dbg !2252
  br label %originalBB1073

originalBB1077alteredBB:                          ; preds = %originalBB1077, %3511
  br label %originalBB1077

originalBB1081alteredBB:                          ; preds = %originalBB1081, %3532
  %5875 = load i8*, i8** %19, align 8, !dbg !2256
  %5876 = load i64, i64* %29, align 8, !dbg !2256
  %5877 = getelementptr inbounds i8, i8* %5875, i64 %5876, !dbg !2256
  store i8 39, i8* %5877, align 1, !dbg !2256
  br label %originalBB1081

originalBB1085alteredBB:                          ; preds = %originalBB1085, %3552
  %5878 = load i64, i64* %29, align 8, !dbg !2259
  %_1086 = sub i64 %5878, 1
  %gen1087 = mul i64 %_1086, 1
  %_1088 = sub i64 0, %5878
  %gen1089 = add i64 %_1088, 1
  %_1090 = shl i64 %5878, 1
  %_1091 = shl i64 %5878, 1
  %_1092 = sub i64 0, %5878
  %gen1093 = add i64 %_1092, 1
  %5879 = add i64 %5878, 1, !dbg !2259
  store i64 %5879, i64* %29, align 8, !dbg !2259
  br label %originalBB1085

originalBB1097alteredBB:                          ; preds = %originalBB1097, %3571
  br label %originalBB1097

originalBB1101alteredBB:                          ; preds = %originalBB1101, %3599
  br label %originalBB1101

originalBB1105alteredBB:                          ; preds = %originalBB1105, %3616
  %5880 = load i64, i64* %29, align 8, !dbg !2264
  %5881 = load i64, i64* %20, align 8, !dbg !2264
  %5882 = icmp ult i64 %5880, %5881, !dbg !2264
  br label %originalBB1105

originalBB1109alteredBB:                          ; preds = %originalBB1109, %3636
  %5883 = load i8*, i8** %19, align 8, !dbg !2264
  %5884 = load i64, i64* %29, align 8, !dbg !2264
  %5885 = getelementptr inbounds i8, i8* %5883, i64 %5884, !dbg !2264
  store i8 39, i8* %5885, align 1, !dbg !2264
  br label %originalBB1109

originalBB1113alteredBB:                          ; preds = %originalBB1113, %3656
  %5886 = load i64, i64* %29, align 8, !dbg !2267
  %_1114 = shl i64 %5886, 1
  %_1115 = shl i64 %5886, 1
  %5887 = add i64 %5886, 1, !dbg !2267
  store i64 %5887, i64* %29, align 8, !dbg !2267
  br label %originalBB1113

originalBB1119alteredBB:                          ; preds = %originalBB1119, %3676
  br label %originalBB1119

originalBB1123alteredBB:                          ; preds = %originalBB1123, %3701
  %5888 = load i64, i64* %29, align 8, !dbg !2271
  %_1124 = sub i64 %5888, 1
  %gen1125 = mul i64 %_1124, 1
  %_1126 = sub i64 0, %5888
  %gen1127 = add i64 %_1126, 1
  %_1128 = sub i64 %5888, 1
  %gen1129 = mul i64 %_1128, 1
  %_1130 = sub i64 0, %5888
  %gen1131 = add i64 %_1130, 1
  %_1132 = sub i64 %5888, 1
  %gen1133 = mul i64 %_1132, 1
  %_1134 = shl i64 %5888, 1
  %5889 = add i64 %5888, 1, !dbg !2271
  store i64 %5889, i64* %29, align 8, !dbg !2271
  br label %originalBB1123

originalBB1138alteredBB:                          ; preds = %originalBB1138, %3720
  br label %originalBB1138

originalBB1142alteredBB:                          ; preds = %originalBB1142, %3737
  br label %originalBB1142

originalBB1146alteredBB:                          ; preds = %originalBB1146, %3758
  %5890 = load i8, i8* %39, align 1, !dbg !2273
  %5891 = zext i8 %5890 to i32, !dbg !2273
  %_1147 = sub i32 0, %5891
  %gen1148 = add i32 %_1147, 6
  %_1149 = sub i32 0, %5891
  %gen1150 = add i32 %_1149, 6
  %_1151 = sub i32 %5891, 6
  %gen1152 = mul i32 %_1151, 6
  %_1153 = sub i32 %5891, 6
  %gen1154 = mul i32 %_1153, 6
  %_1155 = shl i32 %5891, 6
  %5892 = ashr i32 %5891, 6, !dbg !2273
  %_1156 = sub i32 48, %5892
  %gen1157 = mul i32 %_1156, %5892
  %_1158 = shl i32 48, %5892
  %5893 = add nsw i32 48, %5892, !dbg !2273
  %5894 = trunc i32 %5893 to i8, !dbg !2273
  %5895 = load i8*, i8** %19, align 8, !dbg !2273
  %5896 = load i64, i64* %29, align 8, !dbg !2273
  %5897 = getelementptr inbounds i8, i8* %5895, i64 %5896, !dbg !2273
  store i8 %5894, i8* %5897, align 1, !dbg !2273
  br label %originalBB1146

originalBB1162alteredBB:                          ; preds = %originalBB1162, %3783
  %5898 = load i64, i64* %29, align 8, !dbg !2276
  %_1163 = sub i64 0, %5898
  %gen1164 = add i64 %_1163, 1
  %_1165 = sub i64 %5898, 1
  %gen1166 = mul i64 %_1165, 1
  %_1167 = shl i64 %5898, 1
  %5899 = add i64 %5898, 1, !dbg !2276
  store i64 %5899, i64* %29, align 8, !dbg !2276
  br label %originalBB1162

originalBB1171alteredBB:                          ; preds = %originalBB1171, %3802
  br label %originalBB1171

originalBB1175alteredBB:                          ; preds = %originalBB1175, %3819
  %5900 = load i64, i64* %29, align 8, !dbg !2278
  %5901 = load i64, i64* %20, align 8, !dbg !2278
  %5902 = icmp ult i64 %5900, %5901, !dbg !2278
  br label %originalBB1175

originalBB1179alteredBB:                          ; preds = %originalBB1179, %3849
  %5903 = load i64, i64* %29, align 8, !dbg !2281
  %_1180 = sub i64 %5903, 1
  %gen1181 = mul i64 %_1180, 1
  %_1182 = shl i64 %5903, 1
  %5904 = add i64 %5903, 1, !dbg !2281
  store i64 %5904, i64* %29, align 8, !dbg !2281
  br label %originalBB1179

originalBB1186alteredBB:                          ; preds = %originalBB1186, %3868
  %5905 = load i8, i8* %39, align 1, !dbg !2282
  %5906 = zext i8 %5905 to i32, !dbg !2282
  %_1187 = sub i32 0, %5906
  %gen1188 = add i32 %_1187, 7
  %5907 = and i32 %5906, 7, !dbg !2283
  %_1189 = sub i32 48, %5907
  %gen1190 = mul i32 %_1189, %5907
  %_1191 = sub i32 48, %5907
  %gen1192 = mul i32 %_1191, %5907
  %_1193 = shl i32 48, %5907
  %_1194 = shl i32 48, %5907
  %_1195 = shl i32 48, %5907
  %_1196 = sub i32 48, %5907
  %gen1197 = mul i32 %_1196, %5907
  %5908 = add nsw i32 48, %5907, !dbg !2284
  %5909 = trunc i32 %5908 to i8, !dbg !2285
  store i8 %5909, i8* %39, align 1, !dbg !2286
  br label %originalBB1186

originalBB1201alteredBB:                          ; preds = %originalBB1201, %3893
  br label %originalBB1201

originalBB1205alteredBB:                          ; preds = %originalBB1205, %3910
  %5910 = load i64, i64* %29, align 8, !dbg !2293
  %5911 = load i64, i64* %20, align 8, !dbg !2293
  %5912 = icmp ult i64 %5910, %5911, !dbg !2293
  br label %originalBB1205

originalBB1209alteredBB:                          ; preds = %originalBB1209, %3930
  %5913 = load i8*, i8** %19, align 8, !dbg !2293
  %5914 = load i64, i64* %29, align 8, !dbg !2293
  %5915 = getelementptr inbounds i8, i8* %5913, i64 %5914, !dbg !2293
  store i8 92, i8* %5915, align 1, !dbg !2293
  br label %originalBB1209

originalBB1213alteredBB:                          ; preds = %originalBB1213, %3950
  %5916 = load i64, i64* %29, align 8, !dbg !2296
  %_1214 = sub i64 0, %5916
  %gen1215 = add i64 %_1214, 1
  %_1216 = sub i64 %5916, 1
  %gen1217 = mul i64 %_1216, 1
  %5917 = add i64 %5916, 1, !dbg !2296
  store i64 %5917, i64* %29, align 8, !dbg !2296
  br label %originalBB1213

originalBB1221alteredBB:                          ; preds = %originalBB1221, %3969
  store i8 0, i8* %41, align 1, !dbg !2297
  br label %originalBB1221

originalBB1225alteredBB:                          ; preds = %originalBB1225, %3986
  br label %originalBB1225

originalBB1229alteredBB:                          ; preds = %originalBB1229, %4003
  %5918 = load i64, i64* %50, align 8, !dbg !2299
  %5919 = load i64, i64* %28, align 8, !dbg !2301
  %_1230 = sub i64 0, %5919
  %gen1231 = add i64 %_1230, 1
  %_1232 = sub i64 %5919, 1
  %gen1233 = mul i64 %_1232, 1
  %_1234 = shl i64 %5919, 1
  %_1235 = sub i64 %5919, 1
  %gen1236 = mul i64 %_1235, 1
  %_1237 = sub i64 %5919, 1
  %gen1238 = mul i64 %_1237, 1
  %5920 = add i64 %5919, 1, !dbg !2302
  %5921 = icmp ule i64 %5918, %5920, !dbg !2303
  br label %originalBB1229

originalBB1242alteredBB:                          ; preds = %originalBB1242, %4024
  br label %originalBB1242

originalBB1246alteredBB:                          ; preds = %originalBB1246, %4042
  %5922 = load i8, i8* %36, align 1, !dbg !2307
  %5923 = trunc i8 %5922 to i1, !dbg !2307
  br label %originalBB1246

originalBB1250alteredBB:                          ; preds = %originalBB1250, %4061
  %5924 = load i8, i8* %42, align 1, !dbg !2307
  %5925 = trunc i8 %5924 to i1, !dbg !2307
  br label %originalBB1250

originalBB1254alteredBB:                          ; preds = %originalBB1254, %4085
  %5926 = load i8*, i8** %19, align 8, !dbg !2313
  %5927 = load i64, i64* %29, align 8, !dbg !2313
  %5928 = getelementptr inbounds i8, i8* %5926, i64 %5927, !dbg !2313
  store i8 39, i8* %5928, align 1, !dbg !2313
  br label %originalBB1254

originalBB1258alteredBB:                          ; preds = %originalBB1258, %4105
  %5929 = load i64, i64* %29, align 8, !dbg !2316
  %_1259 = sub i64 0, %5929
  %gen1260 = add i64 %_1259, 1
  %_1261 = shl i64 %5929, 1
  %_1262 = sub i64 0, %5929
  %gen1263 = add i64 %_1262, 1
  %_1264 = sub i64 0, %5929
  %gen1265 = add i64 %_1264, 1
  %_1266 = shl i64 %5929, 1
  %5930 = add i64 %5929, 1, !dbg !2316
  store i64 %5930, i64* %29, align 8, !dbg !2316
  br label %originalBB1258

originalBB1270alteredBB:                          ; preds = %originalBB1270, %4124
  br label %originalBB1270

originalBB1274alteredBB:                          ; preds = %originalBB1274, %4141
  %5931 = load i64, i64* %29, align 8, !dbg !2317
  %5932 = load i64, i64* %20, align 8, !dbg !2317
  %5933 = icmp ult i64 %5931, %5932, !dbg !2317
  br label %originalBB1274

originalBB1278alteredBB:                          ; preds = %originalBB1278, %4161
  %5934 = load i8*, i8** %19, align 8, !dbg !2317
  %5935 = load i64, i64* %29, align 8, !dbg !2317
  %5936 = getelementptr inbounds i8, i8* %5934, i64 %5935, !dbg !2317
  store i8 39, i8* %5936, align 1, !dbg !2317
  br label %originalBB1278

originalBB1282alteredBB:                          ; preds = %originalBB1282, %4181
  %5937 = load i64, i64* %29, align 8, !dbg !2320
  %_1283 = sub i64 0, %5937
  %gen1284 = add i64 %_1283, 1
  %_1285 = shl i64 %5937, 1
  %_1286 = shl i64 %5937, 1
  %_1287 = shl i64 %5937, 1
  %5938 = add i64 %5937, 1, !dbg !2320
  store i64 %5938, i64* %29, align 8, !dbg !2320
  br label %originalBB1282

originalBB1291alteredBB:                          ; preds = %originalBB1291, %4201
  br label %originalBB1291

originalBB1295alteredBB:                          ; preds = %originalBB1295, %4223
  %5939 = load i8, i8* %39, align 1, !dbg !2322
  %5940 = load i8*, i8** %19, align 8, !dbg !2322
  %5941 = load i64, i64* %29, align 8, !dbg !2322
  %5942 = getelementptr inbounds i8, i8* %5940, i64 %5941, !dbg !2322
  store i8 %5939, i8* %5942, align 1, !dbg !2322
  br label %originalBB1295

originalBB1299alteredBB:                          ; preds = %originalBB1299, %4244
  %5943 = load i64, i64* %29, align 8, !dbg !2325
  %_1300 = sub i64 %5943, 1
  %gen1301 = mul i64 %_1300, 1
  %_1302 = sub i64 0, %5943
  %gen1303 = add i64 %_1302, 1
  %_1304 = shl i64 %5943, 1
  %5944 = add i64 %5943, 1, !dbg !2325
  store i64 %5944, i64* %29, align 8, !dbg !2325
  br label %originalBB1299

originalBB1308alteredBB:                          ; preds = %originalBB1308, %4263
  %5945 = load i8*, i8** %21, align 8, !dbg !2326
  %5946 = load i64, i64* %28, align 8, !dbg !2327
  %_1309 = shl i64 %5946, 1
  %_1310 = sub i64 %5946, 1
  %gen1311 = mul i64 %_1310, 1
  %5947 = add i64 %5946, 1, !dbg !2327
  store i64 %5947, i64* %28, align 8, !dbg !2327
  %5948 = getelementptr inbounds i8, i8* %5945, i64 %5947, !dbg !2326
  %5949 = load i8, i8* %5948, align 1, !dbg !2326
  store i8 %5949, i8* %39, align 1, !dbg !2328
  br label %originalBB1308

originalBB1315alteredBB:                          ; preds = %originalBB1315, %4285
  br label %originalBB1315

originalBB1319alteredBB:                          ; preds = %originalBB1319, %4302
  br label %originalBB1319

originalBB1323alteredBB:                          ; preds = %originalBB1323, %4319
  %5950 = load i8, i8* %33, align 1, !dbg !2335
  %5951 = trunc i8 %5950 to i1, !dbg !2335
  br label %originalBB1323

originalBB1327alteredBB:                          ; preds = %originalBB1327, %4341
  %5952 = load i8, i8* %35, align 1, !dbg !2341
  %5953 = trunc i8 %5952 to i1, !dbg !2341
  br label %originalBB1327

originalBB1331alteredBB:                          ; preds = %originalBB1331, %4360
  %5954 = load i32*, i32** %25, align 8, !dbg !2343
  %5955 = icmp ne i32* %5954, null, !dbg !2343
  br label %originalBB1331

originalBB1335alteredBB:                          ; preds = %originalBB1335, %4379
  %5956 = load i32*, i32** %25, align 8, !dbg !2345
  %5957 = load i8, i8* %39, align 1, !dbg !2346
  %5958 = zext i8 %5957 to i64, !dbg !2346
  %_1336 = shl i64 %5958, 32
  %5959 = udiv i64 %5958, 32, !dbg !2347
  %5960 = getelementptr inbounds i32, i32* %5956, i64 %5959, !dbg !2345
  %5961 = load i32, i32* %5960, align 4, !dbg !2345
  %5962 = load i8, i8* %39, align 1, !dbg !2348
  %5963 = zext i8 %5962 to i64, !dbg !2348
  %_1337 = sub i64 %5963, 32
  %gen1338 = mul i64 %_1337, 32
  %_1339 = shl i64 %5963, 32
  %_1340 = shl i64 %5963, 32
  %5964 = urem i64 %5963, 32, !dbg !2349
  %5965 = trunc i64 %5964 to i32, !dbg !2350
  %_1341 = sub i32 0, %5961
  %gen1342 = add i32 %_1341, %5965
  %_1343 = sub i32 %5961, %5965
  %gen1344 = mul i32 %_1343, %5965
  %_1345 = shl i32 %5961, %5965
  %_1346 = shl i32 %5961, %5965
  %5966 = lshr i32 %5961, %5965, !dbg !2350
  %_1347 = shl i32 %5966, 1
  %_1348 = sub i32 0, %5966
  %gen1349 = add i32 %_1348, 1
  %_1350 = sub i32 %5966, 1
  %gen1351 = mul i32 %_1350, 1
  %_1352 = shl i32 %5966, 1
  %_1353 = sub i32 %5966, 1
  %gen1354 = mul i32 %_1353, 1
  %_1355 = shl i32 %5966, 1
  %_1356 = sub i32 0, %5966
  %gen1357 = add i32 %_1356, 1
  %_1358 = sub i32 0, %5966
  %gen1359 = add i32 %_1358, 1
  %5967 = and i32 %5966, 1, !dbg !2351
  %5968 = icmp ne i32 %5967, 0, !dbg !2351
  br label %originalBB1335

originalBB1363alteredBB:                          ; preds = %originalBB1363, %4409
  %5969 = load i8, i8* %41, align 1, !dbg !2353
  %5970 = trunc i8 %5969 to i1, !dbg !2353
  br label %originalBB1363

originalBB1367alteredBB:                          ; preds = %originalBB1367, %4428
  br label %originalBB1367

originalBB1371alteredBB:                          ; preds = %originalBB1371, %4445
  br label %originalBB1371

originalBB1375alteredBB:                          ; preds = %originalBB1375, %4462
  br label %originalBB1375

originalBB1379alteredBB:                          ; preds = %originalBB1379, %4482
  br label %originalBB1379

originalBB1383alteredBB:                          ; preds = %originalBB1383, %4499
  store i8 1, i8* %42, align 1, !dbg !2362
  %5971 = load i32, i32* %23, align 4, !dbg !2363
  %5972 = icmp eq i32 %5971, 2, !dbg !2363
  br label %originalBB1383

originalBB1387alteredBB:                          ; preds = %originalBB1387, %4518
  %5973 = load i8, i8* %36, align 1, !dbg !2363
  %5974 = trunc i8 %5973 to i1, !dbg !2363
  br label %originalBB1387

originalBB1391alteredBB:                          ; preds = %originalBB1391, %4538
  %5975 = load i64, i64* %29, align 8, !dbg !2367
  %5976 = load i64, i64* %20, align 8, !dbg !2367
  %5977 = icmp ult i64 %5975, %5976, !dbg !2367
  br label %originalBB1391

originalBB1395alteredBB:                          ; preds = %originalBB1395, %4558
  %5978 = load i8*, i8** %19, align 8, !dbg !2367
  %5979 = load i64, i64* %29, align 8, !dbg !2367
  %5980 = getelementptr inbounds i8, i8* %5978, i64 %5979, !dbg !2367
  store i8 39, i8* %5980, align 1, !dbg !2367
  br label %originalBB1395

originalBB1399alteredBB:                          ; preds = %originalBB1399, %4578
  %5981 = load i64, i64* %29, align 8, !dbg !2370
  %_1400 = sub i64 %5981, 1
  %gen1401 = mul i64 %_1400, 1
  %_1402 = sub i64 %5981, 1
  %gen1403 = mul i64 %_1402, 1
  %_1404 = sub i64 0, %5981
  %gen1405 = add i64 %_1404, 1
  %_1406 = sub i64 %5981, 1
  %gen1407 = mul i64 %_1406, 1
  %_1408 = sub i64 0, %5981
  %gen1409 = add i64 %_1408, 1
  %_1410 = sub i64 0, %5981
  %gen1411 = add i64 %_1410, 1
  %5982 = add i64 %5981, 1, !dbg !2370
  store i64 %5982, i64* %29, align 8, !dbg !2370
  br label %originalBB1399

originalBB1415alteredBB:                          ; preds = %originalBB1415, %4598
  %5983 = load i64, i64* %29, align 8, !dbg !2371
  %5984 = load i64, i64* %20, align 8, !dbg !2371
  %5985 = icmp ult i64 %5983, %5984, !dbg !2371
  br label %originalBB1415

originalBB1419alteredBB:                          ; preds = %originalBB1419, %4622
  %5986 = load i64, i64* %29, align 8, !dbg !2374
  %_1420 = sub i64 %5986, 1
  %gen1421 = mul i64 %_1420, 1
  %_1422 = shl i64 %5986, 1
  %_1423 = sub i64 %5986, 1
  %gen1424 = mul i64 %_1423, 1
  %_1425 = sub i64 0, %5986
  %gen1426 = add i64 %_1425, 1
  %5987 = add i64 %5986, 1, !dbg !2374
  store i64 %5987, i64* %29, align 8, !dbg !2374
  br label %originalBB1419

originalBB1430alteredBB:                          ; preds = %originalBB1430, %4641
  br label %originalBB1430

originalBB1434alteredBB:                          ; preds = %originalBB1434, %4662
  %5988 = load i8*, i8** %19, align 8, !dbg !2375
  %5989 = load i64, i64* %29, align 8, !dbg !2375
  %5990 = getelementptr inbounds i8, i8* %5988, i64 %5989, !dbg !2375
  store i8 39, i8* %5990, align 1, !dbg !2375
  br label %originalBB1434

originalBB1438alteredBB:                          ; preds = %originalBB1438, %4682
  %5991 = load i64, i64* %29, align 8, !dbg !2378
  %_1439 = sub i64 0, %5991
  %gen1440 = add i64 %_1439, 1
  %_1441 = sub i64 %5991, 1
  %gen1442 = mul i64 %_1441, 1
  %_1443 = sub i64 %5991, 1
  %gen1444 = mul i64 %_1443, 1
  %_1445 = sub i64 0, %5991
  %gen1446 = add i64 %_1445, 1
  %_1447 = sub i64 0, %5991
  %gen1448 = add i64 %_1447, 1
  %_1449 = sub i64 %5991, 1
  %gen1450 = mul i64 %_1449, 1
  %_1451 = sub i64 %5991, 1
  %gen1452 = mul i64 %_1451, 1
  %5992 = add i64 %5991, 1, !dbg !2378
  store i64 %5992, i64* %29, align 8, !dbg !2378
  br label %originalBB1438

originalBB1456alteredBB:                          ; preds = %originalBB1456, %4702
  br label %originalBB1456

originalBB1460alteredBB:                          ; preds = %originalBB1460, %4719
  %5993 = load i64, i64* %29, align 8, !dbg !2379
  %5994 = load i64, i64* %20, align 8, !dbg !2379
  %5995 = icmp ult i64 %5993, %5994, !dbg !2379
  br label %originalBB1460

originalBB1464alteredBB:                          ; preds = %originalBB1464, %4743
  %5996 = load i64, i64* %29, align 8, !dbg !2382
  %_1465 = sub i64 0, %5996
  %gen1466 = add i64 %_1465, 1
  %5997 = add i64 %5996, 1, !dbg !2382
  store i64 %5997, i64* %29, align 8, !dbg !2382
  br label %originalBB1464

originalBB1470alteredBB:                          ; preds = %originalBB1470, %4762
  br label %originalBB1470

originalBB1474alteredBB:                          ; preds = %originalBB1474, %4779
  br label %originalBB1474

originalBB1478alteredBB:                          ; preds = %originalBB1478, %4797
  %5998 = load i8, i8* %36, align 1, !dbg !2386
  %5999 = trunc i8 %5998 to i1, !dbg !2386
  br label %originalBB1478

originalBB1482alteredBB:                          ; preds = %originalBB1482, %4816
  %6000 = load i8, i8* %42, align 1, !dbg !2386
  %6001 = trunc i8 %6000 to i1, !dbg !2386
  br label %originalBB1482

originalBB1486alteredBB:                          ; preds = %originalBB1486, %4840
  %6002 = load i8*, i8** %19, align 8, !dbg !2392
  %6003 = load i64, i64* %29, align 8, !dbg !2392
  %6004 = getelementptr inbounds i8, i8* %6002, i64 %6003, !dbg !2392
  store i8 39, i8* %6004, align 1, !dbg !2392
  br label %originalBB1486

originalBB1490alteredBB:                          ; preds = %originalBB1490, %4863
  br label %originalBB1490

originalBB1494alteredBB:                          ; preds = %originalBB1494, %4880
  %6005 = load i64, i64* %29, align 8, !dbg !2396
  %6006 = load i64, i64* %20, align 8, !dbg !2396
  %6007 = icmp ult i64 %6005, %6006, !dbg !2396
  br label %originalBB1494

originalBB1498alteredBB:                          ; preds = %originalBB1498, %4900
  %6008 = load i8*, i8** %19, align 8, !dbg !2396
  %6009 = load i64, i64* %29, align 8, !dbg !2396
  %6010 = getelementptr inbounds i8, i8* %6008, i64 %6009, !dbg !2396
  store i8 39, i8* %6010, align 1, !dbg !2396
  br label %originalBB1498

originalBB1502alteredBB:                          ; preds = %originalBB1502, %4923
  store i8 0, i8* %36, align 1, !dbg !2390
  br label %originalBB1502

originalBB1506alteredBB:                          ; preds = %originalBB1506, %4940
  br label %originalBB1506

originalBB1510alteredBB:                          ; preds = %originalBB1510, %4957
  br label %originalBB1510

originalBB1514alteredBB:                          ; preds = %originalBB1514, %4992
  br label %originalBB1514

originalBB1518alteredBB:                          ; preds = %originalBB1518, %5009
  %6011 = icmp ult i64 %4975, %4976, !dbg !2401
  br label %originalBB1518

originalBB1522alteredBB:                          ; preds = %originalBB1522, %5027
  %6012 = load i8, i8* %39, align 1, !dbg !2401
  %6013 = load i8*, i8** %19, align 8, !dbg !2401
  %6014 = load i64, i64* %29, align 8, !dbg !2401
  %6015 = getelementptr inbounds i8, i8* %6013, i64 %6014, !dbg !2401
  store i8 %6012, i8* %6015, align 1, !dbg !2401
  br label %originalBB1522

originalBB1526alteredBB:                          ; preds = %originalBB1526, %5048
  %6016 = load i64, i64* %29, align 8, !dbg !2404
  %_1527 = shl i64 %6016, 1
  %_1528 = sub i64 0, %6016
  %gen1529 = add i64 %_1528, 1
  %_1530 = shl i64 %6016, 1
  %_1531 = sub i64 %6016, 1
  %gen1532 = mul i64 %_1531, 1
  %_1533 = sub i64 %6016, 1
  %gen1534 = mul i64 %_1533, 1
  %6017 = add i64 %6016, 1, !dbg !2404
  store i64 %6017, i64* %29, align 8, !dbg !2404
  br label %originalBB1526

originalBB1538alteredBB:                          ; preds = %originalBB1538, %5067
  %6018 = load i8, i8* %43, align 1, !dbg !2405
  %6019 = trunc i8 %6018 to i1, !dbg !2405
  br label %originalBB1538

originalBB1542alteredBB:                          ; preds = %originalBB1542, %5086
  store i8 0, i8* %38, align 1, !dbg !2408
  br label %originalBB1542

originalBB1546alteredBB:                          ; preds = %originalBB1546, %5113
  %6020 = load i8, i8* %35, align 1, !dbg !2422
  %6021 = trunc i8 %6020 to i1, !dbg !2422
  br label %originalBB1546

originalBB1550alteredBB:                          ; preds = %originalBB1550, %5132
  br label %originalBB1550

originalBB1554alteredBB:                          ; preds = %originalBB1554, %5149
  %6022 = load i32, i32* %23, align 4, !dbg !2425
  %6023 = icmp eq i32 %6022, 2, !dbg !2427
  br label %originalBB1554

originalBB1558alteredBB:                          ; preds = %originalBB1558, %5177
  %6024 = load i8*, i8** %19, align 8, !dbg !2437
  %6025 = load i64, i64* %30, align 8, !dbg !2438
  %6026 = load i8*, i8** %21, align 8, !dbg !2439
  %6027 = load i64, i64* %22, align 8, !dbg !2440
  %6028 = load i32, i32* %24, align 4, !dbg !2441
  %6029 = load i32*, i32** %25, align 8, !dbg !2442
  %6030 = load i8*, i8** %26, align 8, !dbg !2443
  %6031 = load i8*, i8** %27, align 8, !dbg !2444
  %6032 = call i64 @quotearg_buffer_restyled(i8* %6024, i64 %6025, i8* %6026, i64 %6027, i32 5, i32 %6028, i32* %6029, i8* %6030, i8* %6031), !dbg !2445
  store i64 %6032, i64* %18, align 8, !dbg !2446
  br label %originalBB1558

originalBB1562alteredBB:                          ; preds = %originalBB1562, %5206
  %6033 = load i64, i64* %30, align 8, !dbg !2450
  %6034 = icmp ne i64 %6033, 0, !dbg !2450
  br label %originalBB1562

originalBB1566alteredBB:                          ; preds = %originalBB1566, %5225
  %6035 = load i64, i64* %30, align 8, !dbg !2452
  store i64 %6035, i64* %20, align 8, !dbg !2454
  store i64 0, i64* %29, align 8, !dbg !2455
  br label %originalBB1566

originalBB1570alteredBB:                          ; preds = %originalBB1570, %5243
  br label %originalBB1570

originalBB1574alteredBB:                          ; preds = %originalBB1574, %5273
  %6036 = load i64, i64* %29, align 8, !dbg !2470
  %6037 = load i64, i64* %20, align 8, !dbg !2470
  %6038 = icmp ult i64 %6036, %6037, !dbg !2470
  br label %originalBB1574

originalBB1578alteredBB:                          ; preds = %originalBB1578, %5293
  %6039 = load i8*, i8** %31, align 8, !dbg !2470
  %6040 = load i8, i8* %6039, align 1, !dbg !2470
  %6041 = load i8*, i8** %19, align 8, !dbg !2470
  %6042 = load i64, i64* %29, align 8, !dbg !2470
  %6043 = getelementptr inbounds i8, i8* %6041, i64 %6042, !dbg !2470
  store i8 %6040, i8* %6043, align 1, !dbg !2470
  br label %originalBB1578

originalBB1582alteredBB:                          ; preds = %originalBB1582, %5318
  br label %originalBB1582

originalBB1586alteredBB:                          ; preds = %originalBB1586, %5335
  %6044 = load i8*, i8** %31, align 8, !dbg !2474
  %6045 = getelementptr inbounds i8, i8* %6044, i32 1, !dbg !2474
  store i8* %6045, i8** %31, align 8, !dbg !2474
  br label %originalBB1586

originalBB1590alteredBB:                          ; preds = %originalBB1590, %5355
  %6046 = load i64, i64* %29, align 8, !dbg !2478
  %6047 = load i64, i64* %20, align 8, !dbg !2480
  %6048 = icmp ult i64 %6046, %6047, !dbg !2481
  br label %originalBB1590

originalBB1594alteredBB:                          ; preds = %originalBB1594, %5375
  %6049 = load i8*, i8** %19, align 8, !dbg !2483
  %6050 = load i64, i64* %29, align 8, !dbg !2484
  %6051 = getelementptr inbounds i8, i8* %6049, i64 %6050, !dbg !2483
  store i8 0, i8* %6051, align 1, !dbg !2485
  br label %originalBB1594

originalBB1598alteredBB:                          ; preds = %originalBB1598, %5395
  %6052 = load i64, i64* %29, align 8, !dbg !2486
  store i64 %6052, i64* %18, align 8, !dbg !2487
  br label %originalBB1598

originalBB1602alteredBB:                          ; preds = %originalBB1602, %5413
  %6053 = load i32, i32* %23, align 4, !dbg !2490
  %6054 = icmp eq i32 %6053, 2, !dbg !2492
  br label %originalBB1602

originalBB1606alteredBB:                          ; preds = %originalBB1606, %5432
  %6055 = load i8, i8* %33, align 1, !dbg !2494
  %6056 = trunc i8 %6055 to i1, !dbg !2494
  br label %originalBB1606

originalBB1610alteredBB:                          ; preds = %originalBB1610, %5451
  store i32 4, i32* %23, align 4, !dbg !2496
  br label %originalBB1610

originalBB1614alteredBB:                          ; preds = %originalBB1614, %5468
  %6057 = load i8*, i8** %19, align 8, !dbg !2498
  %6058 = load i64, i64* %20, align 8, !dbg !2499
  %6059 = load i8*, i8** %21, align 8, !dbg !2500
  %6060 = load i64, i64* %22, align 8, !dbg !2501
  %6061 = load i32, i32* %23, align 4, !dbg !2502
  %6062 = load i32, i32* %24, align 4, !dbg !2503
  %_1615 = sub i32 %6062, -3
  %gen1616 = mul i32 %_1615, -3
  %6063 = and i32 %6062, -3, !dbg !2504
  %6064 = load i8*, i8** %26, align 8, !dbg !2505
  %6065 = load i8*, i8** %27, align 8, !dbg !2506
  %6066 = call i64 @quotearg_buffer_restyled(i8* %6057, i64 %6058, i8* %6059, i64 %6060, i32 %6061, i32 %6063, i32* null, i8* %6064, i8* %6065), !dbg !2507
  store i64 %6066, i64* %18, align 8, !dbg !2508
  br label %originalBB1614

originalBB1620alteredBB:                          ; preds = %originalBB1620, %5495
  %6067 = load i64, i64* %18, align 8, !dbg !2509
  br label %originalBB1620
}

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8*, i32) #4 !dbg !2597 {
  %3 = load i32, i32* @x.37
  %4 = load i32, i32* @y.38
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !2600, metadata !DIExpression()), !dbg !2601
  store i32 %1, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !2602, metadata !DIExpression()), !dbg !2603
  call void @llvm.dbg.declare(metadata i8** %14, metadata !2604, metadata !DIExpression()), !dbg !2605
  %16 = load i8*, i8** %12, align 8, !dbg !2606
  %17 = call i8* @gettext(i8* %16) #10, !dbg !2606
  store i8* %17, i8** %14, align 8, !dbg !2605
  call void @llvm.dbg.declare(metadata i8** %15, metadata !2607, metadata !DIExpression()), !dbg !2608
  %18 = load i8*, i8** %14, align 8, !dbg !2609
  %19 = load i8*, i8** %12, align 8, !dbg !2611
  %20 = icmp ne i8* %18, %19, !dbg !2612
  %21 = load i32, i32* @x.37
  %22 = load i32, i32* @y.38
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %29, label %31, !dbg !2613

29:                                               ; preds = %originalBBpart2
  %30 = load i8*, i8** %14, align 8, !dbg !2614
  store i8* %30, i8** %11, align 8, !dbg !2615
  br label %109, !dbg !2615

31:                                               ; preds = %originalBBpart2
  %32 = load i32, i32* @x.37
  %33 = load i32, i32* @y.38
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = call i8* @locale_charset(), !dbg !2616
  store i8* %40, i8** %15, align 8, !dbg !2617
  %41 = load i8*, i8** %15, align 8, !dbg !2618
  %42 = call i32 @c_strcasecmp(i8* %41, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.66, i64 0, i64 0)) #13, !dbg !2618
  %43 = icmp eq i32 %42, 0, !dbg !2618
  %44 = load i32, i32* @x.37
  %45 = load i32, i32* @y.38
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %43, label %52, label %60, !dbg !2620

52:                                               ; preds = %originalBBpart24
  %53 = load i8*, i8** %12, align 8, !dbg !2621
  %54 = getelementptr inbounds i8, i8* %53, i64 0, !dbg !2621
  %55 = load i8, i8* %54, align 1, !dbg !2621
  %56 = sext i8 %55 to i32, !dbg !2621
  %57 = icmp eq i32 %56, 96, !dbg !2622
  %58 = zext i1 %57 to i64, !dbg !2621
  %59 = select i1 %57, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.67, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.68, i64 0, i64 0), !dbg !2621
  store i8* %59, i8** %11, align 8, !dbg !2623
  br label %109, !dbg !2623

60:                                               ; preds = %originalBBpart24
  %61 = load i32, i32* @x.37
  %62 = load i32, i32* @y.38
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %60, %originalBB6alteredBB
  %69 = load i8*, i8** %15, align 8, !dbg !2624
  %70 = call i32 @c_strcasecmp(i8* %69, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.69, i64 0, i64 0)) #13, !dbg !2624
  %71 = icmp eq i32 %70, 0, !dbg !2624
  %72 = load i32, i32* @x.37
  %73 = load i32, i32* @y.38
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %71, label %80, label %104, !dbg !2626

80:                                               ; preds = %originalBBpart28
  %81 = load i32, i32* @x.37
  %82 = load i32, i32* @y.38
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %80, %originalBB10alteredBB
  %89 = load i8*, i8** %12, align 8, !dbg !2627
  %90 = getelementptr inbounds i8, i8* %89, i64 0, !dbg !2627
  %91 = load i8, i8* %90, align 1, !dbg !2627
  %92 = sext i8 %91 to i32, !dbg !2627
  %93 = icmp eq i32 %92, 96, !dbg !2628
  %94 = zext i1 %93 to i64, !dbg !2627
  %95 = select i1 %93, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.70, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.71, i64 0, i64 0), !dbg !2627
  store i8* %95, i8** %11, align 8, !dbg !2629
  %96 = load i32, i32* @x.37
  %97 = load i32, i32* @y.38
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %109, !dbg !2629

104:                                              ; preds = %originalBBpart28
  %105 = load i32, i32* %13, align 4, !dbg !2630
  %106 = icmp eq i32 %105, 9, !dbg !2631
  %107 = zext i1 %106 to i64, !dbg !2630
  %108 = select i1 %106, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.63, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.65, i64 0, i64 0), !dbg !2630
  store i8* %108, i8** %11, align 8, !dbg !2632
  br label %109, !dbg !2632

109:                                              ; preds = %104, %originalBBpart212, %52, %29
  %110 = load i32, i32* @x.37
  %111 = load i32, i32* @y.38
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %109, %originalBB14alteredBB
  %118 = load i8*, i8** %11, align 8, !dbg !2633
  %119 = load i32, i32* @x.37
  %120 = load i32, i32* @y.38
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret i8* %118, !dbg !2633

originalBBalteredBB:                              ; preds = %originalBB, %2
  %127 = alloca i8*, align 8
  %128 = alloca i8*, align 8
  %129 = alloca i32, align 4
  %130 = alloca i8*, align 8
  %131 = alloca i8*, align 8
  store i8* %0, i8** %128, align 8
  call void @llvm.dbg.declare(metadata i8** %128, metadata !2634, metadata !DIExpression()), !dbg !2601
  store i32 %1, i32* %129, align 4
  call void @llvm.dbg.declare(metadata i32* %129, metadata !2666, metadata !DIExpression()), !dbg !2603
  call void @llvm.dbg.declare(metadata i8** %130, metadata !2667, metadata !DIExpression()), !dbg !2605
  %132 = load i8*, i8** %128, align 8, !dbg !2606
  %133 = call i8* @gettext(i8* %132) #10, !dbg !2606
  store i8* %133, i8** %130, align 8, !dbg !2605
  call void @llvm.dbg.declare(metadata i8** %131, metadata !2668, metadata !DIExpression()), !dbg !2608
  %134 = load i8*, i8** %130, align 8, !dbg !2609
  %135 = load i8*, i8** %128, align 8, !dbg !2611
  %136 = icmp ne i8* %134, %135, !dbg !2612
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %137 = call i8* @locale_charset(), !dbg !2616
  store i8* %137, i8** %15, align 8, !dbg !2617
  %138 = load i8*, i8** %15, align 8, !dbg !2618
  %139 = call i32 @c_strcasecmp(i8* %138, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.66, i64 0, i64 0)) #13, !dbg !2618
  %140 = icmp eq i32 %139, 0, !dbg !2618
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %60
  %141 = load i8*, i8** %15, align 8, !dbg !2624
  %142 = call i32 @c_strcasecmp(i8* %141, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.69, i64 0, i64 0)) #13, !dbg !2624
  %143 = icmp eq i32 %142, 0, !dbg !2624
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %80
  %144 = load i8*, i8** %12, align 8, !dbg !2627
  %145 = getelementptr inbounds i8, i8* %144, i64 0, !dbg !2627
  %146 = load i8, i8* %145, align 1, !dbg !2627
  %147 = sext i8 %146 to i32, !dbg !2627
  %148 = icmp eq i32 %147, 96, !dbg !2628
  %149 = zext i1 %148 to i64, !dbg !2627
  %150 = select i1 %148, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.70, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.71, i64 0, i64 0), !dbg !2627
  store i8* %150, i8** %11, align 8, !dbg !2629
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %109
  %151 = load i8*, i8** %11, align 8, !dbg !2633
  br label %originalBB14
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #8

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.__mbstate_t*) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_style(i32, i8*) #4 !dbg !2669 {
  %3 = load i32, i32* @x.39
  %4 = load i32, i32* @y.40
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !2672, metadata !DIExpression()), !dbg !2673
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !2674, metadata !DIExpression()), !dbg !2675
  %13 = load i32, i32* %11, align 4, !dbg !2676
  %14 = mul i32 %0, -5
  %15 = add i32 %14, -3
  %16 = mul i32 %13, -3
  %17 = add i32 %16, -4
  %18 = mul i32 %13, 3
  %19 = add i32 %18, 1
  %20 = mul i32 %15, %15
  %21 = mul i32 %20, %20
  %22 = mul i32 %17, %17
  %23 = mul i32 %22, %22
  %24 = mul i32 %19, %19
  %25 = mul i32 %24, %24
  %26 = add i32 %21, %23
  %27 = sub i32 %26, %25
  %28 = mul i32 %27, 4
  %29 = add i32 %28, -5
  %30 = icmp eq i32 %29, -5
  %31 = load i32, i32* @x.39
  %32 = load i32, i32* @y.40
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %30, label %40, label %39

39:                                               ; preds = %originalBBpart2
  ret i8* null

40:                                               ; preds = %originalBBpart2
  %41 = load i32, i32* @x.39
  %42 = load i32, i32* @y.40
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB113, label %originalBB113alteredBB

originalBB113:                                    ; preds = %40, %originalBB113alteredBB
  %49 = load i8*, i8** %12, align 8, !dbg !2677
  %50 = call i8* @quotearg_n_style(i32 0, i32 %13, i8* %49), !dbg !2678
  %51 = load i32, i32* @x.39
  %52 = load i32, i32* @y.40
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart2115, label %originalBB113alteredBB

originalBBpart2115:                               ; preds = %originalBB113
  ret i8* %50, !dbg !2679

originalBBalteredBB:                              ; preds = %originalBB, %2
  %59 = alloca i32, align 4
  %60 = alloca i8*, align 8
  store i32 %0, i32* %59, align 4
  call void @llvm.dbg.declare(metadata i32* %59, metadata !2680, metadata !DIExpression()), !dbg !2673
  store i8* %1, i8** %60, align 8
  call void @llvm.dbg.declare(metadata i8** %60, metadata !2712, metadata !DIExpression()), !dbg !2675
  %61 = load i32, i32* %59, align 4, !dbg !2676
  %_ = sub i32 0, %0
  %gen = add i32 %_, -5
  %_1 = sub i32 0, %0
  %gen2 = add i32 %_1, -5
  %_3 = sub i32 0, %0
  %gen4 = add i32 %_3, -5
  %_5 = shl i32 %0, -5
  %_6 = sub i32 0, %0
  %gen7 = add i32 %_6, -5
  %_8 = shl i32 %0, -5
  %_9 = shl i32 %0, -5
  %62 = mul i32 %0, -5
  %_10 = shl i32 %62, -3
  %_11 = shl i32 %62, -3
  %_12 = shl i32 %62, -3
  %_13 = sub i32 0, %62
  %gen14 = add i32 %_13, -3
  %_15 = sub i32 %62, -3
  %gen16 = mul i32 %_15, -3
  %63 = add i32 %62, -3
  %_17 = sub i32 %61, -3
  %gen18 = mul i32 %_17, -3
  %64 = mul i32 %61, -3
  %_19 = sub i32 %64, -4
  %gen20 = mul i32 %_19, -4
  %_21 = shl i32 %64, -4
  %_22 = shl i32 %64, -4
  %_23 = sub i32 %64, -4
  %gen24 = mul i32 %_23, -4
  %_25 = sub i32 0, %64
  %gen26 = add i32 %_25, -4
  %_27 = sub i32 %64, -4
  %gen28 = mul i32 %_27, -4
  %65 = add i32 %64, -4
  %_29 = sub i32 %61, 3
  %gen30 = mul i32 %_29, 3
  %_31 = shl i32 %61, 3
  %_32 = sub i32 0, %61
  %gen33 = add i32 %_32, 3
  %_34 = sub i32 0, %61
  %gen35 = add i32 %_34, 3
  %_36 = sub i32 %61, 3
  %gen37 = mul i32 %_36, 3
  %_38 = sub i32 0, %61
  %gen39 = add i32 %_38, 3
  %_40 = shl i32 %61, 3
  %66 = mul i32 %61, 3
  %_41 = sub i32 0, %66
  %gen42 = add i32 %_41, 1
  %_43 = sub i32 %66, 1
  %gen44 = mul i32 %_43, 1
  %_45 = shl i32 %66, 1
  %_46 = shl i32 %66, 1
  %_47 = sub i32 0, %66
  %gen48 = add i32 %_47, 1
  %_49 = sub i32 %66, 1
  %gen50 = mul i32 %_49, 1
  %67 = add i32 %66, 1
  %_51 = sub i32 0, %63
  %gen52 = add i32 %_51, %63
  %68 = mul i32 %63, %63
  %_53 = sub i32 %68, %68
  %gen54 = mul i32 %_53, %68
  %_55 = shl i32 %68, %68
  %_56 = sub i32 %68, %68
  %gen57 = mul i32 %_56, %68
  %_58 = shl i32 %68, %68
  %_59 = sub i32 0, %68
  %gen60 = add i32 %_59, %68
  %69 = mul i32 %68, %68
  %_61 = sub i32 0, %65
  %gen62 = add i32 %_61, %65
  %_63 = sub i32 %65, %65
  %gen64 = mul i32 %_63, %65
  %_65 = shl i32 %65, %65
  %70 = mul i32 %65, %65
  %_66 = sub i32 0, %70
  %gen67 = add i32 %_66, %70
  %_68 = sub i32 %70, %70
  %gen69 = mul i32 %_68, %70
  %_70 = sub i32 %70, %70
  %gen71 = mul i32 %_70, %70
  %_72 = shl i32 %70, %70
  %71 = mul i32 %70, %70
  %_73 = sub i32 %67, %67
  %gen74 = mul i32 %_73, %67
  %_75 = shl i32 %67, %67
  %_76 = sub i32 %67, %67
  %gen77 = mul i32 %_76, %67
  %_78 = sub i32 %67, %67
  %gen79 = mul i32 %_78, %67
  %_80 = shl i32 %67, %67
  %_81 = sub i32 0, %67
  %gen82 = add i32 %_81, %67
  %_83 = sub i32 %67, %67
  %gen84 = mul i32 %_83, %67
  %72 = mul i32 %67, %67
  %_85 = shl i32 %72, %72
  %_86 = shl i32 %72, %72
  %73 = mul i32 %72, %72
  %_87 = sub i32 0, %69
  %gen88 = add i32 %_87, %71
  %_89 = sub i32 %69, %71
  %gen90 = mul i32 %_89, %71
  %74 = add i32 %69, %71
  %_91 = sub i32 0, %74
  %gen92 = add i32 %_91, %73
  %_93 = shl i32 %74, %73
  %_94 = sub i32 0, %74
  %gen95 = add i32 %_94, %73
  %_96 = shl i32 %74, %73
  %_97 = sub i32 0, %74
  %gen98 = add i32 %_97, %73
  %_99 = sub i32 %74, %73
  %gen100 = mul i32 %_99, %73
  %_101 = sub i32 %74, %73
  %gen102 = mul i32 %_101, %73
  %_103 = sub i32 0, %74
  %gen104 = add i32 %_103, %73
  %75 = sub i32 %74, %73
  %_105 = sub i32 0, %75
  %gen106 = add i32 %_105, 4
  %_107 = shl i32 %75, 4
  %_108 = sub i32 %75, 4
  %gen109 = mul i32 %_108, 4
  %_110 = shl i32 %75, 4
  %76 = mul i32 %75, 4
  %_111 = sub i32 0, %76
  %gen112 = add i32 %_111, -5
  %77 = add i32 %76, -5
  %78 = icmp eq i32 %77, -5
  br label %originalBB

originalBB113alteredBB:                           ; preds = %originalBB113, %40
  %79 = load i8*, i8** %12, align 8, !dbg !2677
  %80 = call i8* @quotearg_n_style(i32 0, i32 %13, i8* %79), !dbg !2678
  br label %originalBB113
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char_mem(i8*, i64, i8 signext) #4 !dbg !2713 {
  %4 = load i32, i32* @x.41
  %5 = load i32, i32* @y.42
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8, align 1
  %15 = alloca %struct.quoting_options, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !2716, metadata !DIExpression()), !dbg !2717
  store i64 %1, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !2718, metadata !DIExpression()), !dbg !2719
  store i8 %2, i8* %14, align 1
  call void @llvm.dbg.declare(metadata i8* %14, metadata !2720, metadata !DIExpression()), !dbg !2721
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %15, metadata !2722, metadata !DIExpression()), !dbg !2723
  %16 = bitcast %struct.quoting_options* %15 to i8*, !dbg !2724
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !2724
  %17 = load i8, i8* %14, align 1, !dbg !2725
  %18 = call i32 @set_char_quoting(%struct.quoting_options* %15, i8 signext %17, i32 1), !dbg !2726
  %19 = load i8*, i8** %12, align 8, !dbg !2727
  %20 = load i64, i64* %13, align 8, !dbg !2728
  %21 = call i8* @quotearg_n_options(i32 0, i8* %19, i64 %20, %struct.quoting_options* %15), !dbg !2729
  %22 = load i32, i32* @x.41
  %23 = load i32, i32* @y.42
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %21, !dbg !2730

originalBBalteredBB:                              ; preds = %originalBB, %3
  %30 = alloca i8*, align 8
  %31 = alloca i64, align 8
  %32 = alloca i8, align 1
  %33 = alloca %struct.quoting_options, align 8
  store i8* %0, i8** %30, align 8
  call void @llvm.dbg.declare(metadata i8** %30, metadata !2731, metadata !DIExpression()), !dbg !2717
  store i64 %1, i64* %31, align 8
  call void @llvm.dbg.declare(metadata i64* %31, metadata !2763, metadata !DIExpression()), !dbg !2719
  store i8 %2, i8* %32, align 1
  call void @llvm.dbg.declare(metadata i8* %32, metadata !2764, metadata !DIExpression()), !dbg !2721
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %33, metadata !2765, metadata !DIExpression()), !dbg !2723
  %34 = bitcast %struct.quoting_options* %33 to i8*, !dbg !2724
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !2724
  %35 = load i8, i8* %32, align 1, !dbg !2725
  %36 = call i32 @set_char_quoting(%struct.quoting_options* %33, i8 signext %35, i32 1), !dbg !2726
  %37 = load i8*, i8** %30, align 8, !dbg !2727
  %38 = load i64, i64* %31, align 8, !dbg !2728
  %39 = call i8* @quotearg_n_options(i32 0, i8* %37, i64 %38, %struct.quoting_options* %33), !dbg !2729
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char(i8*, i8 signext) #4 !dbg !2766 {
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2769, metadata !DIExpression()), !dbg !2770
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !2771, metadata !DIExpression()), !dbg !2772
  %5 = load i8*, i8** %3, align 8, !dbg !2773
  %6 = load i8, i8* %4, align 1, !dbg !2774
  %7 = call i8* @quotearg_char_mem(i8* %5, i64 -1, i8 signext %6), !dbg !2775
  ret i8* %7, !dbg !2776
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_colon(i8*) #4 !dbg !2777 {
  %2 = load i32, i32* @x.45
  %3 = load i32, i32* @y.46
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !2780, metadata !DIExpression()), !dbg !2781
  %11 = load i8*, i8** %10, align 8, !dbg !2782
  %12 = call i8* @quotearg_char(i8* %11, i8 signext 58), !dbg !2783
  %13 = load i32, i32* @x.45
  %14 = load i32, i32* @y.46
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !2784

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i8*, align 8
  store i8* %0, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !2785, metadata !DIExpression()), !dbg !2781
  %22 = load i8*, i8** %21, align 8, !dbg !2782
  %23 = call i8* @quotearg_char(i8* %22, i8 signext 58), !dbg !2783
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n_mem(i32, i8*, i64) #4 !dbg !2817 {
  %4 = load i32, i32* @x.47
  %5 = load i32, i32* @y.48
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !2820, metadata !DIExpression()), !dbg !2821
  store i8* %1, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !2822, metadata !DIExpression()), !dbg !2823
  store i64 %2, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !2824, metadata !DIExpression()), !dbg !2825
  %15 = load i32, i32* %12, align 4, !dbg !2826
  %16 = load i8*, i8** %13, align 8, !dbg !2827
  %17 = load i64, i64* %14, align 8, !dbg !2828
  %18 = call i8* @quotearg_n_options(i32 %15, i8* %16, i64 %17, %struct.quoting_options* @quote_quoting_options), !dbg !2829
  %19 = load i32, i32* @x.47
  %20 = load i32, i32* @y.48
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %18, !dbg !2830

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i64, align 8
  store i32 %0, i32* %27, align 4
  call void @llvm.dbg.declare(metadata i32* %27, metadata !2831, metadata !DIExpression()), !dbg !2821
  store i8* %1, i8** %28, align 8
  call void @llvm.dbg.declare(metadata i8** %28, metadata !2863, metadata !DIExpression()), !dbg !2823
  store i64 %2, i64* %29, align 8
  call void @llvm.dbg.declare(metadata i64* %29, metadata !2864, metadata !DIExpression()), !dbg !2825
  %30 = load i32, i32* %27, align 4, !dbg !2826
  %31 = load i8*, i8** %28, align 8, !dbg !2827
  %32 = load i64, i64* %29, align 8, !dbg !2828
  %33 = call i8* @quotearg_n_options(i32 %30, i8* %31, i64 %32, %struct.quoting_options* @quote_quoting_options), !dbg !2829
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n(i32, i8*) #4 !dbg !2865 {
  %3 = load i32, i32* @x.49
  %4 = load i32, i32* @y.50
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !2868, metadata !DIExpression()), !dbg !2869
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !2870, metadata !DIExpression()), !dbg !2871
  %13 = load i32, i32* %11, align 4, !dbg !2872
  %14 = load i8*, i8** %12, align 8, !dbg !2873
  %15 = call i8* @quote_n_mem(i32 %13, i8* %14, i64 -1), !dbg !2874
  %16 = load i32, i32* @x.49
  %17 = load i32, i32* @y.50
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %15, !dbg !2875

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  store i32 %0, i32* %24, align 4
  call void @llvm.dbg.declare(metadata i32* %24, metadata !2876, metadata !DIExpression()), !dbg !2869
  store i8* %1, i8** %25, align 8
  call void @llvm.dbg.declare(metadata i8** %25, metadata !2908, metadata !DIExpression()), !dbg !2871
  %26 = load i32, i32* %24, align 4, !dbg !2872
  %27 = load i8*, i8** %25, align 8, !dbg !2873
  %28 = call i8* @quote_n_mem(i32 %26, i8* %27, i64 -1), !dbg !2874
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote(i8*) #4 !dbg !2909 {
  %2 = load i32, i32* @x.51
  %3 = load i32, i32* @y.52
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !2912, metadata !DIExpression()), !dbg !2913
  %11 = load i8*, i8** %10, align 8, !dbg !2914
  %12 = call i8* @quote_n(i32 0, i8* %11), !dbg !2915
  %13 = load i32, i32* @x.51
  %14 = load i32, i32* @y.52
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !2916

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i8*, align 8
  store i8* %0, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !2917, metadata !DIExpression()), !dbg !2913
  %22 = load i8*, i8** %21, align 8, !dbg !2914
  %23 = call i8* @quote_n(i32 0, i8* %22), !dbg !2915
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.dev_ino* @get_root_dev_ino(%struct.dev_ino*) #4 !dbg !2949 {
  %2 = alloca %struct.dev_ino*, align 8
  %3 = alloca %struct.dev_ino*, align 8
  %4 = alloca %struct.stat, align 8
  store %struct.dev_ino* %0, %struct.dev_ino** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %3, metadata !2958, metadata !DIExpression()), !dbg !2959
  call void @llvm.dbg.declare(metadata %struct.stat* %4, metadata !2960, metadata !DIExpression()), !dbg !2982
  %5 = call i32 @lstat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.80, i64 0, i64 0), %struct.stat* %4) #10, !dbg !2983
  %6 = icmp ne i32 %5, 0, !dbg !2983
  br i1 %6, label %7, label %8, !dbg !2985

7:                                                ; preds = %1
  store %struct.dev_ino* null, %struct.dev_ino** %2, align 8, !dbg !2986
  br label %34, !dbg !2986

8:                                                ; preds = %1
  %9 = load i32, i32* @x.53
  %10 = load i32, i32* @y.54
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 1, !dbg !2987
  %18 = load i64, i64* %17, align 8, !dbg !2987
  %19 = load %struct.dev_ino*, %struct.dev_ino** %3, align 8, !dbg !2988
  %20 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %19, i32 0, i32 0, !dbg !2989
  store i64 %18, i64* %20, align 8, !dbg !2990
  %21 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !2991
  %22 = load i64, i64* %21, align 8, !dbg !2991
  %23 = load %struct.dev_ino*, %struct.dev_ino** %3, align 8, !dbg !2992
  %24 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %23, i32 0, i32 1, !dbg !2993
  store i64 %22, i64* %24, align 8, !dbg !2994
  %25 = load %struct.dev_ino*, %struct.dev_ino** %3, align 8, !dbg !2995
  store %struct.dev_ino* %25, %struct.dev_ino** %2, align 8, !dbg !2996
  %26 = load i32, i32* @x.53
  %27 = load i32, i32* @y.54
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %34, !dbg !2996

34:                                               ; preds = %originalBBpart2, %7
  %35 = load i32, i32* @x.53
  %36 = load i32, i32* @y.54
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %34, %originalBB1alteredBB
  %43 = load %struct.dev_ino*, %struct.dev_ino** %2, align 8, !dbg !2997
  %44 = load i32, i32* @x.53
  %45 = load i32, i32* @y.54
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret %struct.dev_ino* %43, !dbg !2997

originalBBalteredBB:                              ; preds = %originalBB, %8
  %52 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 1, !dbg !2987
  %53 = load i64, i64* %52, align 8, !dbg !2987
  %54 = load %struct.dev_ino*, %struct.dev_ino** %3, align 8, !dbg !2988
  %55 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %54, i32 0, i32 0, !dbg !2989
  store i64 %53, i64* %55, align 8, !dbg !2990
  %56 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !2991
  %57 = load i64, i64* %56, align 8, !dbg !2991
  %58 = load %struct.dev_ino*, %struct.dev_ino** %3, align 8, !dbg !2992
  %59 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %58, i32 0, i32 1, !dbg !2993
  store i64 %57, i64* %59, align 8, !dbg !2994
  %60 = load %struct.dev_ino*, %struct.dev_ino** %3, align 8, !dbg !2995
  store %struct.dev_ino* %60, %struct.dev_ino** %2, align 8, !dbg !2996
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %34
  %61 = load %struct.dev_ino*, %struct.dev_ino** %2, align 8, !dbg !2997
  br label %originalBB1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_arn(%struct._IO_FILE*, i8*, i8*, i8*, i8**, i64) #4 !dbg !2998 {
  %7 = load i32, i32* @x.55
  %8 = load i32, i32* @y.56
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = alloca %struct._IO_FILE*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8**, align 8
  %20 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %15, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %15, metadata !3055, metadata !DIExpression()), !dbg !3056
  store i8* %1, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !3057, metadata !DIExpression()), !dbg !3058
  store i8* %2, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !3059, metadata !DIExpression()), !dbg !3060
  store i8* %3, i8** %18, align 8
  call void @llvm.dbg.declare(metadata i8** %18, metadata !3061, metadata !DIExpression()), !dbg !3062
  store i8** %4, i8*** %19, align 8
  call void @llvm.dbg.declare(metadata i8*** %19, metadata !3063, metadata !DIExpression()), !dbg !3064
  store i64 %5, i64* %20, align 8
  call void @llvm.dbg.declare(metadata i64* %20, metadata !3065, metadata !DIExpression()), !dbg !3066
  %21 = load i8*, i8** %16, align 8, !dbg !3067
  %22 = icmp ne i8* %21, null, !dbg !3067
  %23 = load i32, i32* @x.55
  %24 = load i32, i32* @y.56
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %53, !dbg !3069

31:                                               ; preds = %originalBBpart2
  %32 = load i32, i32* @x.55
  %33 = load i32, i32* @y.56
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3070
  %41 = load i8*, i8** %16, align 8, !dbg !3071
  %42 = load i8*, i8** %17, align 8, !dbg !3072
  %43 = load i8*, i8** %18, align 8, !dbg !3073
  %44 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.81, i64 0, i64 0), i8* %41, i8* %42, i8* %43), !dbg !3074
  %45 = load i32, i32* @x.55
  %46 = load i32, i32* @y.56
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %58, !dbg !3074

53:                                               ; preds = %originalBBpart2
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3075
  %55 = load i8*, i8** %17, align 8, !dbg !3076
  %56 = load i8*, i8** %18, align 8, !dbg !3077
  %57 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %54, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.82, i64 0, i64 0), i8* %55, i8* %56), !dbg !3078
  br label %58

58:                                               ; preds = %53, %originalBBpart24
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3079
  %60 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.83, i64 0, i64 0)) #10, !dbg !3080
  %61 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %60, i32 2020), !dbg !3081
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3082
  %63 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.84, i64 0, i64 0), %struct._IO_FILE* %62), !dbg !3082
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3083
  %65 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.85, i64 0, i64 0)) #10, !dbg !3084
  %66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %64, i8* %65, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.86, i64 0, i64 0)), !dbg !3085
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3086
  %68 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.84, i64 0, i64 0), %struct._IO_FILE* %67), !dbg !3086
  %69 = load i64, i64* %20, align 8, !dbg !3087
  switch i64 %69, label %354 [
    i64 0, label %70
    i64 1, label %87
    i64 2, label %110
    i64 3, label %136
    i64 4, label %165
    i64 5, label %181
    i64 6, label %216
    i64 7, label %254
    i64 8, label %279
    i64 9, label %307
  ], !dbg !3088

70:                                               ; preds = %58
  %71 = load i32, i32* @x.55
  %72 = load i32, i32* @y.56
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %70, %originalBB6alteredBB
  %79 = load i32, i32* @x.55
  %80 = load i32, i32* @y.56
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %385, !dbg !3089

87:                                               ; preds = %58
  %88 = load i32, i32* @x.55
  %89 = load i32, i32* @y.56
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %87, %originalBB10alteredBB
  %96 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3091
  %97 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.87, i64 0, i64 0)) #10, !dbg !3092
  %98 = load i8**, i8*** %19, align 8, !dbg !3093
  %99 = getelementptr inbounds i8*, i8** %98, i64 0, !dbg !3093
  %100 = load i8*, i8** %99, align 8, !dbg !3093
  %101 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %96, i8* %97, i8* %100), !dbg !3094
  %102 = load i32, i32* @x.55
  %103 = load i32, i32* @y.56
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %385, !dbg !3095

110:                                              ; preds = %58
  %111 = load i32, i32* @x.55
  %112 = load i32, i32* @y.56
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %110, %originalBB14alteredBB
  %119 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3096
  %120 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.88, i64 0, i64 0)) #10, !dbg !3097
  %121 = load i8**, i8*** %19, align 8, !dbg !3098
  %122 = getelementptr inbounds i8*, i8** %121, i64 0, !dbg !3098
  %123 = load i8*, i8** %122, align 8, !dbg !3098
  %124 = load i8**, i8*** %19, align 8, !dbg !3099
  %125 = getelementptr inbounds i8*, i8** %124, i64 1, !dbg !3099
  %126 = load i8*, i8** %125, align 8, !dbg !3099
  %127 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %119, i8* %120, i8* %123, i8* %126), !dbg !3100
  %128 = load i32, i32* @x.55
  %129 = load i32, i32* @y.56
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %385, !dbg !3101

136:                                              ; preds = %58
  %137 = load i32, i32* @x.55
  %138 = load i32, i32* @y.56
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %136, %originalBB18alteredBB
  %145 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3102
  %146 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.89, i64 0, i64 0)) #10, !dbg !3103
  %147 = load i8**, i8*** %19, align 8, !dbg !3104
  %148 = getelementptr inbounds i8*, i8** %147, i64 0, !dbg !3104
  %149 = load i8*, i8** %148, align 8, !dbg !3104
  %150 = load i8**, i8*** %19, align 8, !dbg !3105
  %151 = getelementptr inbounds i8*, i8** %150, i64 1, !dbg !3105
  %152 = load i8*, i8** %151, align 8, !dbg !3105
  %153 = load i8**, i8*** %19, align 8, !dbg !3106
  %154 = getelementptr inbounds i8*, i8** %153, i64 2, !dbg !3106
  %155 = load i8*, i8** %154, align 8, !dbg !3106
  %156 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %145, i8* %146, i8* %149, i8* %152, i8* %155), !dbg !3107
  %157 = load i32, i32* @x.55
  %158 = load i32, i32* @y.56
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %385, !dbg !3108

165:                                              ; preds = %58
  %166 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3109
  %167 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.90, i64 0, i64 0)) #10, !dbg !3110
  %168 = load i8**, i8*** %19, align 8, !dbg !3111
  %169 = getelementptr inbounds i8*, i8** %168, i64 0, !dbg !3111
  %170 = load i8*, i8** %169, align 8, !dbg !3111
  %171 = load i8**, i8*** %19, align 8, !dbg !3112
  %172 = getelementptr inbounds i8*, i8** %171, i64 1, !dbg !3112
  %173 = load i8*, i8** %172, align 8, !dbg !3112
  %174 = load i8**, i8*** %19, align 8, !dbg !3113
  %175 = getelementptr inbounds i8*, i8** %174, i64 2, !dbg !3113
  %176 = load i8*, i8** %175, align 8, !dbg !3113
  %177 = load i8**, i8*** %19, align 8, !dbg !3114
  %178 = getelementptr inbounds i8*, i8** %177, i64 3, !dbg !3114
  %179 = load i8*, i8** %178, align 8, !dbg !3114
  %180 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %166, i8* %167, i8* %170, i8* %173, i8* %176, i8* %179), !dbg !3115
  br label %385, !dbg !3116

181:                                              ; preds = %58
  %182 = load i32, i32* @x.55
  %183 = load i32, i32* @y.56
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %181, %originalBB22alteredBB
  %190 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3117
  %191 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.91, i64 0, i64 0)) #10, !dbg !3118
  %192 = load i8**, i8*** %19, align 8, !dbg !3119
  %193 = getelementptr inbounds i8*, i8** %192, i64 0, !dbg !3119
  %194 = load i8*, i8** %193, align 8, !dbg !3119
  %195 = load i8**, i8*** %19, align 8, !dbg !3120
  %196 = getelementptr inbounds i8*, i8** %195, i64 1, !dbg !3120
  %197 = load i8*, i8** %196, align 8, !dbg !3120
  %198 = load i8**, i8*** %19, align 8, !dbg !3121
  %199 = getelementptr inbounds i8*, i8** %198, i64 2, !dbg !3121
  %200 = load i8*, i8** %199, align 8, !dbg !3121
  %201 = load i8**, i8*** %19, align 8, !dbg !3122
  %202 = getelementptr inbounds i8*, i8** %201, i64 3, !dbg !3122
  %203 = load i8*, i8** %202, align 8, !dbg !3122
  %204 = load i8**, i8*** %19, align 8, !dbg !3123
  %205 = getelementptr inbounds i8*, i8** %204, i64 4, !dbg !3123
  %206 = load i8*, i8** %205, align 8, !dbg !3123
  %207 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %190, i8* %191, i8* %194, i8* %197, i8* %200, i8* %203, i8* %206), !dbg !3124
  %208 = load i32, i32* @x.55
  %209 = load i32, i32* @y.56
  %210 = sub i32 %208, 1
  %211 = mul i32 %208, %210
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %213, %214
  br i1 %215, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %385, !dbg !3125

216:                                              ; preds = %58
  %217 = load i32, i32* @x.55
  %218 = load i32, i32* @y.56
  %219 = sub i32 %217, 1
  %220 = mul i32 %217, %219
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %222, %223
  br i1 %224, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %216, %originalBB26alteredBB
  %225 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3126
  %226 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.92, i64 0, i64 0)) #10, !dbg !3127
  %227 = load i8**, i8*** %19, align 8, !dbg !3128
  %228 = getelementptr inbounds i8*, i8** %227, i64 0, !dbg !3128
  %229 = load i8*, i8** %228, align 8, !dbg !3128
  %230 = load i8**, i8*** %19, align 8, !dbg !3129
  %231 = getelementptr inbounds i8*, i8** %230, i64 1, !dbg !3129
  %232 = load i8*, i8** %231, align 8, !dbg !3129
  %233 = load i8**, i8*** %19, align 8, !dbg !3130
  %234 = getelementptr inbounds i8*, i8** %233, i64 2, !dbg !3130
  %235 = load i8*, i8** %234, align 8, !dbg !3130
  %236 = load i8**, i8*** %19, align 8, !dbg !3131
  %237 = getelementptr inbounds i8*, i8** %236, i64 3, !dbg !3131
  %238 = load i8*, i8** %237, align 8, !dbg !3131
  %239 = load i8**, i8*** %19, align 8, !dbg !3132
  %240 = getelementptr inbounds i8*, i8** %239, i64 4, !dbg !3132
  %241 = load i8*, i8** %240, align 8, !dbg !3132
  %242 = load i8**, i8*** %19, align 8, !dbg !3133
  %243 = getelementptr inbounds i8*, i8** %242, i64 5, !dbg !3133
  %244 = load i8*, i8** %243, align 8, !dbg !3133
  %245 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %225, i8* %226, i8* %229, i8* %232, i8* %235, i8* %238, i8* %241, i8* %244), !dbg !3134
  %246 = load i32, i32* @x.55
  %247 = load i32, i32* @y.56
  %248 = sub i32 %246, 1
  %249 = mul i32 %246, %248
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %251, %252
  br i1 %253, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %385, !dbg !3135

254:                                              ; preds = %58
  %255 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3136
  %256 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.93, i64 0, i64 0)) #10, !dbg !3137
  %257 = load i8**, i8*** %19, align 8, !dbg !3138
  %258 = getelementptr inbounds i8*, i8** %257, i64 0, !dbg !3138
  %259 = load i8*, i8** %258, align 8, !dbg !3138
  %260 = load i8**, i8*** %19, align 8, !dbg !3139
  %261 = getelementptr inbounds i8*, i8** %260, i64 1, !dbg !3139
  %262 = load i8*, i8** %261, align 8, !dbg !3139
  %263 = load i8**, i8*** %19, align 8, !dbg !3140
  %264 = getelementptr inbounds i8*, i8** %263, i64 2, !dbg !3140
  %265 = load i8*, i8** %264, align 8, !dbg !3140
  %266 = load i8**, i8*** %19, align 8, !dbg !3141
  %267 = getelementptr inbounds i8*, i8** %266, i64 3, !dbg !3141
  %268 = load i8*, i8** %267, align 8, !dbg !3141
  %269 = load i8**, i8*** %19, align 8, !dbg !3142
  %270 = getelementptr inbounds i8*, i8** %269, i64 4, !dbg !3142
  %271 = load i8*, i8** %270, align 8, !dbg !3142
  %272 = load i8**, i8*** %19, align 8, !dbg !3143
  %273 = getelementptr inbounds i8*, i8** %272, i64 5, !dbg !3143
  %274 = load i8*, i8** %273, align 8, !dbg !3143
  %275 = load i8**, i8*** %19, align 8, !dbg !3144
  %276 = getelementptr inbounds i8*, i8** %275, i64 6, !dbg !3144
  %277 = load i8*, i8** %276, align 8, !dbg !3144
  %278 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %255, i8* %256, i8* %259, i8* %262, i8* %265, i8* %268, i8* %271, i8* %274, i8* %277), !dbg !3145
  br label %385, !dbg !3146

279:                                              ; preds = %58
  %280 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3147
  %281 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.94, i64 0, i64 0)) #10, !dbg !3148
  %282 = load i8**, i8*** %19, align 8, !dbg !3149
  %283 = getelementptr inbounds i8*, i8** %282, i64 0, !dbg !3149
  %284 = load i8*, i8** %283, align 8, !dbg !3149
  %285 = load i8**, i8*** %19, align 8, !dbg !3150
  %286 = getelementptr inbounds i8*, i8** %285, i64 1, !dbg !3150
  %287 = load i8*, i8** %286, align 8, !dbg !3150
  %288 = load i8**, i8*** %19, align 8, !dbg !3151
  %289 = getelementptr inbounds i8*, i8** %288, i64 2, !dbg !3151
  %290 = load i8*, i8** %289, align 8, !dbg !3151
  %291 = load i8**, i8*** %19, align 8, !dbg !3152
  %292 = getelementptr inbounds i8*, i8** %291, i64 3, !dbg !3152
  %293 = load i8*, i8** %292, align 8, !dbg !3152
  %294 = load i8**, i8*** %19, align 8, !dbg !3153
  %295 = getelementptr inbounds i8*, i8** %294, i64 4, !dbg !3153
  %296 = load i8*, i8** %295, align 8, !dbg !3153
  %297 = load i8**, i8*** %19, align 8, !dbg !3154
  %298 = getelementptr inbounds i8*, i8** %297, i64 5, !dbg !3154
  %299 = load i8*, i8** %298, align 8, !dbg !3154
  %300 = load i8**, i8*** %19, align 8, !dbg !3155
  %301 = getelementptr inbounds i8*, i8** %300, i64 6, !dbg !3155
  %302 = load i8*, i8** %301, align 8, !dbg !3155
  %303 = load i8**, i8*** %19, align 8, !dbg !3156
  %304 = getelementptr inbounds i8*, i8** %303, i64 7, !dbg !3156
  %305 = load i8*, i8** %304, align 8, !dbg !3156
  %306 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %280, i8* %281, i8* %284, i8* %287, i8* %290, i8* %293, i8* %296, i8* %299, i8* %302, i8* %305), !dbg !3157
  br label %385, !dbg !3158

307:                                              ; preds = %58
  %308 = load i32, i32* @x.55
  %309 = load i32, i32* @y.56
  %310 = sub i32 %308, 1
  %311 = mul i32 %308, %310
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %313, %314
  br i1 %315, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %307, %originalBB30alteredBB
  %316 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3159
  %317 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.95, i64 0, i64 0)) #10, !dbg !3160
  %318 = load i8**, i8*** %19, align 8, !dbg !3161
  %319 = getelementptr inbounds i8*, i8** %318, i64 0, !dbg !3161
  %320 = load i8*, i8** %319, align 8, !dbg !3161
  %321 = load i8**, i8*** %19, align 8, !dbg !3162
  %322 = getelementptr inbounds i8*, i8** %321, i64 1, !dbg !3162
  %323 = load i8*, i8** %322, align 8, !dbg !3162
  %324 = load i8**, i8*** %19, align 8, !dbg !3163
  %325 = getelementptr inbounds i8*, i8** %324, i64 2, !dbg !3163
  %326 = load i8*, i8** %325, align 8, !dbg !3163
  %327 = load i8**, i8*** %19, align 8, !dbg !3164
  %328 = getelementptr inbounds i8*, i8** %327, i64 3, !dbg !3164
  %329 = load i8*, i8** %328, align 8, !dbg !3164
  %330 = load i8**, i8*** %19, align 8, !dbg !3165
  %331 = getelementptr inbounds i8*, i8** %330, i64 4, !dbg !3165
  %332 = load i8*, i8** %331, align 8, !dbg !3165
  %333 = load i8**, i8*** %19, align 8, !dbg !3166
  %334 = getelementptr inbounds i8*, i8** %333, i64 5, !dbg !3166
  %335 = load i8*, i8** %334, align 8, !dbg !3166
  %336 = load i8**, i8*** %19, align 8, !dbg !3167
  %337 = getelementptr inbounds i8*, i8** %336, i64 6, !dbg !3167
  %338 = load i8*, i8** %337, align 8, !dbg !3167
  %339 = load i8**, i8*** %19, align 8, !dbg !3168
  %340 = getelementptr inbounds i8*, i8** %339, i64 7, !dbg !3168
  %341 = load i8*, i8** %340, align 8, !dbg !3168
  %342 = load i8**, i8*** %19, align 8, !dbg !3169
  %343 = getelementptr inbounds i8*, i8** %342, i64 8, !dbg !3169
  %344 = load i8*, i8** %343, align 8, !dbg !3169
  %345 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %316, i8* %317, i8* %320, i8* %323, i8* %326, i8* %329, i8* %332, i8* %335, i8* %338, i8* %341, i8* %344), !dbg !3170
  %346 = load i32, i32* @x.55
  %347 = load i32, i32* @y.56
  %348 = sub i32 %346, 1
  %349 = mul i32 %346, %348
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %351, %352
  br i1 %353, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %385, !dbg !3171

354:                                              ; preds = %58
  %355 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3172
  %356 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.96, i64 0, i64 0)) #10, !dbg !3173
  %357 = load i8**, i8*** %19, align 8, !dbg !3174
  %358 = getelementptr inbounds i8*, i8** %357, i64 0, !dbg !3174
  %359 = load i8*, i8** %358, align 8, !dbg !3174
  %360 = load i8**, i8*** %19, align 8, !dbg !3175
  %361 = getelementptr inbounds i8*, i8** %360, i64 1, !dbg !3175
  %362 = load i8*, i8** %361, align 8, !dbg !3175
  %363 = load i8**, i8*** %19, align 8, !dbg !3176
  %364 = getelementptr inbounds i8*, i8** %363, i64 2, !dbg !3176
  %365 = load i8*, i8** %364, align 8, !dbg !3176
  %366 = load i8**, i8*** %19, align 8, !dbg !3177
  %367 = getelementptr inbounds i8*, i8** %366, i64 3, !dbg !3177
  %368 = load i8*, i8** %367, align 8, !dbg !3177
  %369 = load i8**, i8*** %19, align 8, !dbg !3178
  %370 = getelementptr inbounds i8*, i8** %369, i64 4, !dbg !3178
  %371 = load i8*, i8** %370, align 8, !dbg !3178
  %372 = load i8**, i8*** %19, align 8, !dbg !3179
  %373 = getelementptr inbounds i8*, i8** %372, i64 5, !dbg !3179
  %374 = load i8*, i8** %373, align 8, !dbg !3179
  %375 = load i8**, i8*** %19, align 8, !dbg !3180
  %376 = getelementptr inbounds i8*, i8** %375, i64 6, !dbg !3180
  %377 = load i8*, i8** %376, align 8, !dbg !3180
  %378 = load i8**, i8*** %19, align 8, !dbg !3181
  %379 = getelementptr inbounds i8*, i8** %378, i64 7, !dbg !3181
  %380 = load i8*, i8** %379, align 8, !dbg !3181
  %381 = load i8**, i8*** %19, align 8, !dbg !3182
  %382 = getelementptr inbounds i8*, i8** %381, i64 8, !dbg !3182
  %383 = load i8*, i8** %382, align 8, !dbg !3182
  %384 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %355, i8* %356, i8* %359, i8* %362, i8* %365, i8* %368, i8* %371, i8* %374, i8* %377, i8* %380, i8* %383), !dbg !3183
  br label %385, !dbg !3184

385:                                              ; preds = %354, %originalBBpart232, %279, %254, %originalBBpart228, %originalBBpart224, %165, %originalBBpart220, %originalBBpart216, %originalBBpart212, %originalBBpart28
  %386 = load i32, i32* @x.55
  %387 = load i32, i32* @y.56
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %385, %originalBB34alteredBB
  %394 = load i32, i32* @x.55
  %395 = load i32, i32* @y.56
  %396 = sub i32 %394, 1
  %397 = mul i32 %394, %396
  %398 = urem i32 %397, 2
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %395, 10
  %401 = or i1 %399, %400
  br i1 %401, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  ret void, !dbg !3185

originalBBalteredBB:                              ; preds = %originalBB, %6
  %402 = alloca %struct._IO_FILE*, align 8
  %403 = alloca i8*, align 8
  %404 = alloca i8*, align 8
  %405 = alloca i8*, align 8
  %406 = alloca i8**, align 8
  %407 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %402, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %402, metadata !3186, metadata !DIExpression()), !dbg !3056
  store i8* %1, i8** %403, align 8
  call void @llvm.dbg.declare(metadata i8** %403, metadata !3225, metadata !DIExpression()), !dbg !3058
  store i8* %2, i8** %404, align 8
  call void @llvm.dbg.declare(metadata i8** %404, metadata !3226, metadata !DIExpression()), !dbg !3060
  store i8* %3, i8** %405, align 8
  call void @llvm.dbg.declare(metadata i8** %405, metadata !3227, metadata !DIExpression()), !dbg !3062
  store i8** %4, i8*** %406, align 8
  call void @llvm.dbg.declare(metadata i8*** %406, metadata !3228, metadata !DIExpression()), !dbg !3064
  store i64 %5, i64* %407, align 8
  call void @llvm.dbg.declare(metadata i64* %407, metadata !3229, metadata !DIExpression()), !dbg !3066
  %408 = load i8*, i8** %403, align 8, !dbg !3067
  %409 = icmp ne i8* %408, null, !dbg !3067
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %410 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3070
  %411 = load i8*, i8** %16, align 8, !dbg !3071
  %412 = load i8*, i8** %17, align 8, !dbg !3072
  %413 = load i8*, i8** %18, align 8, !dbg !3073
  %414 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %410, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.81, i64 0, i64 0), i8* %411, i8* %412, i8* %413), !dbg !3074
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %70
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %87
  %415 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3091
  %416 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.87, i64 0, i64 0)) #10, !dbg !3092
  %417 = load i8**, i8*** %19, align 8, !dbg !3093
  %418 = getelementptr inbounds i8*, i8** %417, i64 0, !dbg !3093
  %419 = load i8*, i8** %418, align 8, !dbg !3093
  %420 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %415, i8* %416, i8* %419), !dbg !3094
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %110
  %421 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3096
  %422 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.88, i64 0, i64 0)) #10, !dbg !3097
  %423 = load i8**, i8*** %19, align 8, !dbg !3098
  %424 = getelementptr inbounds i8*, i8** %423, i64 0, !dbg !3098
  %425 = load i8*, i8** %424, align 8, !dbg !3098
  %426 = load i8**, i8*** %19, align 8, !dbg !3099
  %427 = getelementptr inbounds i8*, i8** %426, i64 1, !dbg !3099
  %428 = load i8*, i8** %427, align 8, !dbg !3099
  %429 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %421, i8* %422, i8* %425, i8* %428), !dbg !3100
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %136
  %430 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3102
  %431 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.89, i64 0, i64 0)) #10, !dbg !3103
  %432 = load i8**, i8*** %19, align 8, !dbg !3104
  %433 = getelementptr inbounds i8*, i8** %432, i64 0, !dbg !3104
  %434 = load i8*, i8** %433, align 8, !dbg !3104
  %435 = load i8**, i8*** %19, align 8, !dbg !3105
  %436 = getelementptr inbounds i8*, i8** %435, i64 1, !dbg !3105
  %437 = load i8*, i8** %436, align 8, !dbg !3105
  %438 = load i8**, i8*** %19, align 8, !dbg !3106
  %439 = getelementptr inbounds i8*, i8** %438, i64 2, !dbg !3106
  %440 = load i8*, i8** %439, align 8, !dbg !3106
  %441 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %430, i8* %431, i8* %434, i8* %437, i8* %440), !dbg !3107
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %181
  %442 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3117
  %443 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.91, i64 0, i64 0)) #10, !dbg !3118
  %444 = load i8**, i8*** %19, align 8, !dbg !3119
  %445 = getelementptr inbounds i8*, i8** %444, i64 0, !dbg !3119
  %446 = load i8*, i8** %445, align 8, !dbg !3119
  %447 = load i8**, i8*** %19, align 8, !dbg !3120
  %448 = getelementptr inbounds i8*, i8** %447, i64 1, !dbg !3120
  %449 = load i8*, i8** %448, align 8, !dbg !3120
  %450 = load i8**, i8*** %19, align 8, !dbg !3121
  %451 = getelementptr inbounds i8*, i8** %450, i64 2, !dbg !3121
  %452 = load i8*, i8** %451, align 8, !dbg !3121
  %453 = load i8**, i8*** %19, align 8, !dbg !3122
  %454 = getelementptr inbounds i8*, i8** %453, i64 3, !dbg !3122
  %455 = load i8*, i8** %454, align 8, !dbg !3122
  %456 = load i8**, i8*** %19, align 8, !dbg !3123
  %457 = getelementptr inbounds i8*, i8** %456, i64 4, !dbg !3123
  %458 = load i8*, i8** %457, align 8, !dbg !3123
  %459 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %442, i8* %443, i8* %446, i8* %449, i8* %452, i8* %455, i8* %458), !dbg !3124
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %216
  %460 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3126
  %461 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.92, i64 0, i64 0)) #10, !dbg !3127
  %462 = load i8**, i8*** %19, align 8, !dbg !3128
  %463 = getelementptr inbounds i8*, i8** %462, i64 0, !dbg !3128
  %464 = load i8*, i8** %463, align 8, !dbg !3128
  %465 = load i8**, i8*** %19, align 8, !dbg !3129
  %466 = getelementptr inbounds i8*, i8** %465, i64 1, !dbg !3129
  %467 = load i8*, i8** %466, align 8, !dbg !3129
  %468 = load i8**, i8*** %19, align 8, !dbg !3130
  %469 = getelementptr inbounds i8*, i8** %468, i64 2, !dbg !3130
  %470 = load i8*, i8** %469, align 8, !dbg !3130
  %471 = load i8**, i8*** %19, align 8, !dbg !3131
  %472 = getelementptr inbounds i8*, i8** %471, i64 3, !dbg !3131
  %473 = load i8*, i8** %472, align 8, !dbg !3131
  %474 = load i8**, i8*** %19, align 8, !dbg !3132
  %475 = getelementptr inbounds i8*, i8** %474, i64 4, !dbg !3132
  %476 = load i8*, i8** %475, align 8, !dbg !3132
  %477 = load i8**, i8*** %19, align 8, !dbg !3133
  %478 = getelementptr inbounds i8*, i8** %477, i64 5, !dbg !3133
  %479 = load i8*, i8** %478, align 8, !dbg !3133
  %480 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %460, i8* %461, i8* %464, i8* %467, i8* %470, i8* %473, i8* %476, i8* %479), !dbg !3134
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %307
  %481 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3159
  %482 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.95, i64 0, i64 0)) #10, !dbg !3160
  %483 = load i8**, i8*** %19, align 8, !dbg !3161
  %484 = getelementptr inbounds i8*, i8** %483, i64 0, !dbg !3161
  %485 = load i8*, i8** %484, align 8, !dbg !3161
  %486 = load i8**, i8*** %19, align 8, !dbg !3162
  %487 = getelementptr inbounds i8*, i8** %486, i64 1, !dbg !3162
  %488 = load i8*, i8** %487, align 8, !dbg !3162
  %489 = load i8**, i8*** %19, align 8, !dbg !3163
  %490 = getelementptr inbounds i8*, i8** %489, i64 2, !dbg !3163
  %491 = load i8*, i8** %490, align 8, !dbg !3163
  %492 = load i8**, i8*** %19, align 8, !dbg !3164
  %493 = getelementptr inbounds i8*, i8** %492, i64 3, !dbg !3164
  %494 = load i8*, i8** %493, align 8, !dbg !3164
  %495 = load i8**, i8*** %19, align 8, !dbg !3165
  %496 = getelementptr inbounds i8*, i8** %495, i64 4, !dbg !3165
  %497 = load i8*, i8** %496, align 8, !dbg !3165
  %498 = load i8**, i8*** %19, align 8, !dbg !3166
  %499 = getelementptr inbounds i8*, i8** %498, i64 5, !dbg !3166
  %500 = load i8*, i8** %499, align 8, !dbg !3166
  %501 = load i8**, i8*** %19, align 8, !dbg !3167
  %502 = getelementptr inbounds i8*, i8** %501, i64 6, !dbg !3167
  %503 = load i8*, i8** %502, align 8, !dbg !3167
  %504 = load i8**, i8*** %19, align 8, !dbg !3168
  %505 = getelementptr inbounds i8*, i8** %504, i64 7, !dbg !3168
  %506 = load i8*, i8** %505, align 8, !dbg !3168
  %507 = load i8**, i8*** %19, align 8, !dbg !3169
  %508 = getelementptr inbounds i8*, i8** %507, i64 8, !dbg !3169
  %509 = load i8*, i8** %508, align 8, !dbg !3169
  %510 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %481, i8* %482, i8* %485, i8* %488, i8* %491, i8* %494, i8* %497, i8* %500, i8* %503, i8* %506, i8* %509), !dbg !3170
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %385
  br label %originalBB34
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_va(%struct._IO_FILE*, i8*, i8*, i8*, %struct.__va_list_tag*) #4 !dbg !3230 {
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.__va_list_tag*, align 8
  %11 = alloca i64, align 8
  %12 = alloca [10 x i8*], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !3240, metadata !DIExpression()), !dbg !3241
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !3242, metadata !DIExpression()), !dbg !3243
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !3244, metadata !DIExpression()), !dbg !3245
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !3246, metadata !DIExpression()), !dbg !3247
  store %struct.__va_list_tag* %4, %struct.__va_list_tag** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %10, metadata !3248, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.declare(metadata i64* %11, metadata !3250, metadata !DIExpression()), !dbg !3251
  call void @llvm.dbg.declare(metadata [10 x i8*]* %12, metadata !3252, metadata !DIExpression()), !dbg !3254
  store i64 0, i64* %11, align 8, !dbg !3255
  br label %13, !dbg !3257

13:                                               ; preds = %originalBBpart226, %5
  %14 = load i32, i32* @x.57
  %15 = load i32, i32* @y.58
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  %22 = load i64, i64* %11, align 8, !dbg !3258
  %23 = icmp ult i64 %22, 10, !dbg !3260
  %24 = load i32, i32* @x.57
  %25 = load i32, i32* @y.58
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %70, !dbg !3261

32:                                               ; preds = %originalBBpart2
  %33 = load %struct.__va_list_tag*, %struct.__va_list_tag** %10, align 8, !dbg !3262
  %34 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %33, i32 0, i32 0, !dbg !3262
  %35 = load i32, i32* %34, align 8, !dbg !3262
  %36 = icmp ule i32 %35, 40, !dbg !3262
  br i1 %36, label %37, label %59, !dbg !3262

37:                                               ; preds = %32
  %38 = load i32, i32* @x.57
  %39 = load i32, i32* @y.58
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %33, i32 0, i32 3, !dbg !3262
  %47 = load i8*, i8** %46, align 8, !dbg !3262
  %48 = getelementptr i8, i8* %47, i32 %35, !dbg !3262
  %49 = bitcast i8* %48 to i8**, !dbg !3262
  %50 = add i32 %35, 8, !dbg !3262
  store i32 %50, i32* %34, align 8, !dbg !3262
  %51 = load i32, i32* @x.57
  %52 = load i32, i32* @y.58
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart27, label %originalBB1alteredBB

originalBBpart27:                                 ; preds = %originalBB1
  br label %64, !dbg !3262

59:                                               ; preds = %32
  %60 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %33, i32 0, i32 2, !dbg !3262
  %61 = load i8*, i8** %60, align 8, !dbg !3262
  %62 = bitcast i8* %61 to i8**, !dbg !3262
  %63 = getelementptr i8, i8* %61, i32 8, !dbg !3262
  store i8* %63, i8** %60, align 8, !dbg !3262
  br label %64, !dbg !3262

64:                                               ; preds = %59, %originalBBpart27
  %65 = phi i8** [ %49, %originalBBpart27 ], [ %62, %59 ], !dbg !3262
  %66 = load i8*, i8** %65, align 8, !dbg !3262
  %67 = load i64, i64* %11, align 8, !dbg !3263
  %68 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 %67, !dbg !3264
  store i8* %66, i8** %68, align 8, !dbg !3265
  %69 = icmp ne i8* %66, null, !dbg !3266
  br label %70

70:                                               ; preds = %64, %originalBBpart2
  %71 = phi i1 [ false, %originalBBpart2 ], [ %69, %64 ], !dbg !3267
  %72 = load i32, i32* @x.57
  %73 = load i32, i32* @y.58
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB9, label %originalBB9alteredBB

originalBB9:                                      ; preds = %70, %originalBB9alteredBB
  %80 = load i32, i32* @x.57
  %81 = load i32, i32* @y.58
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBBpart211, label %originalBB9alteredBB

originalBBpart211:                                ; preds = %originalBB9
  br i1 %71, label %88, label %124, !dbg !3268

88:                                               ; preds = %originalBBpart211
  %89 = load i32, i32* @x.57
  %90 = load i32, i32* @y.58
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %88, %originalBB13alteredBB
  %97 = load i32, i32* @x.57
  %98 = load i32, i32* @y.58
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  br label %105, !dbg !3268

105:                                              ; preds = %originalBBpart215
  %106 = load i32, i32* @x.57
  %107 = load i32, i32* @y.58
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %105, %originalBB17alteredBB
  %114 = load i64, i64* %11, align 8, !dbg !3269
  %115 = add i64 %114, 1, !dbg !3269
  store i64 %115, i64* %11, align 8, !dbg !3269
  %116 = load i32, i32* @x.57
  %117 = load i32, i32* @y.58
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBBpart226, label %originalBB17alteredBB

originalBBpart226:                                ; preds = %originalBB17
  br label %13, !dbg !3270, !llvm.loop !3271

124:                                              ; preds = %originalBBpart211
  %125 = load i32, i32* @x.57
  %126 = load i32, i32* @y.58
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB28, label %originalBB28alteredBB

originalBB28:                                     ; preds = %124, %originalBB28alteredBB
  %133 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !3273
  %134 = load i8*, i8** %7, align 8, !dbg !3274
  %135 = load i8*, i8** %8, align 8, !dbg !3275
  %136 = load i8*, i8** %9, align 8, !dbg !3276
  %137 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 0, !dbg !3277
  %138 = load i64, i64* %11, align 8, !dbg !3278
  call void @version_etc_arn(%struct._IO_FILE* %133, i8* %134, i8* %135, i8* %136, i8** %137, i64 %138), !dbg !3279
  %139 = load i32, i32* @x.57
  %140 = load i32, i32* @y.58
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBBpart230, label %originalBB28alteredBB

originalBBpart230:                                ; preds = %originalBB28
  ret void, !dbg !3280

originalBBalteredBB:                              ; preds = %originalBB, %13
  %147 = load i64, i64* %11, align 8, !dbg !3258
  %148 = icmp ult i64 %147, 10, !dbg !3260
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %149 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %33, i32 0, i32 3, !dbg !3262
  %150 = load i8*, i8** %149, align 8, !dbg !3262
  %151 = getelementptr i8, i8* %150, i32 %35, !dbg !3262
  %152 = bitcast i8* %151 to i8**, !dbg !3262
  %_ = sub i32 0, %35
  %gen = add i32 %_, 8
  %_2 = shl i32 %35, 8
  %_3 = sub i32 %35, 8
  %gen4 = mul i32 %_3, 8
  %_5 = shl i32 %35, 8
  %153 = add i32 %35, 8, !dbg !3262
  store i32 %153, i32* %34, align 8, !dbg !3262
  br label %originalBB1

originalBB9alteredBB:                             ; preds = %originalBB9, %70
  br label %originalBB9

originalBB13alteredBB:                            ; preds = %originalBB13, %88
  br label %originalBB13

originalBB17alteredBB:                            ; preds = %originalBB17, %105
  %154 = load i64, i64* %11, align 8, !dbg !3269
  %_18 = sub i64 %154, 1
  %gen19 = mul i64 %_18, 1
  %_20 = shl i64 %154, 1
  %_21 = sub i64 0, %154
  %gen22 = add i64 %_21, 1
  %_23 = sub i64 %154, 1
  %gen24 = mul i64 %_23, 1
  %155 = add i64 %154, 1, !dbg !3269
  store i64 %155, i64* %11, align 8, !dbg !3269
  br label %originalBB17

originalBB28alteredBB:                            ; preds = %originalBB28, %124
  %156 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !3273
  %157 = load i8*, i8** %7, align 8, !dbg !3274
  %158 = load i8*, i8** %8, align 8, !dbg !3275
  %159 = load i8*, i8** %9, align 8, !dbg !3276
  %160 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 0, !dbg !3277
  %161 = load i64, i64* %11, align 8, !dbg !3278
  call void @version_etc_arn(%struct._IO_FILE* %156, i8* %157, i8* %158, i8* %159, i8** %160, i64 %161), !dbg !3279
  br label %originalBB28
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc(%struct._IO_FILE*, i8*, i8*, i8*, ...) #4 !dbg !3281 {
  %5 = load i32, i32* @x.59
  %6 = load i32, i32* @y.60
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %struct._IO_FILE*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %13, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %13, metadata !3284, metadata !DIExpression()), !dbg !3285
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !3286, metadata !DIExpression()), !dbg !3287
  store i8* %2, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !3288, metadata !DIExpression()), !dbg !3289
  store i8* %3, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !3290, metadata !DIExpression()), !dbg !3291
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %17, metadata !3292, metadata !DIExpression()), !dbg !3299
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %17, i64 0, i64 0, !dbg !3300
  %19 = bitcast %struct.__va_list_tag* %18 to i8*, !dbg !3300
  call void @llvm.va_start(i8* %19), !dbg !3300
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !3301
  %21 = load i8*, i8** %14, align 8, !dbg !3302
  %22 = load i8*, i8** %15, align 8, !dbg !3303
  %23 = load i8*, i8** %16, align 8, !dbg !3304
  %24 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %17, i64 0, i64 0, !dbg !3305
  call void @version_etc_va(%struct._IO_FILE* %20, i8* %21, i8* %22, i8* %23, %struct.__va_list_tag* %24), !dbg !3306
  %25 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %17, i64 0, i64 0, !dbg !3307
  %26 = bitcast %struct.__va_list_tag* %25 to i8*, !dbg !3307
  call void @llvm.va_end(i8* %26), !dbg !3307
  %27 = load i32, i32* @x.59
  %28 = load i32, i32* @y.60
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !3308

originalBBalteredBB:                              ; preds = %originalBB, %4
  %35 = alloca %struct._IO_FILE*, align 8
  %36 = alloca i8*, align 8
  %37 = alloca i8*, align 8
  %38 = alloca i8*, align 8
  %39 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %35, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %35, metadata !3309, metadata !DIExpression()), !dbg !3285
  store i8* %1, i8** %36, align 8
  call void @llvm.dbg.declare(metadata i8** %36, metadata !3348, metadata !DIExpression()), !dbg !3287
  store i8* %2, i8** %37, align 8
  call void @llvm.dbg.declare(metadata i8** %37, metadata !3349, metadata !DIExpression()), !dbg !3289
  store i8* %3, i8** %38, align 8
  call void @llvm.dbg.declare(metadata i8** %38, metadata !3350, metadata !DIExpression()), !dbg !3291
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %39, metadata !3351, metadata !DIExpression()), !dbg !3299
  %40 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %39, i64 0, i64 0, !dbg !3300
  %41 = bitcast %struct.__va_list_tag* %40 to i8*, !dbg !3300
  call void @llvm.va_start(i8* %41), !dbg !3300
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** %35, align 8, !dbg !3301
  %43 = load i8*, i8** %36, align 8, !dbg !3302
  %44 = load i8*, i8** %37, align 8, !dbg !3303
  %45 = load i8*, i8** %38, align 8, !dbg !3304
  %46 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %39, i64 0, i64 0, !dbg !3305
  call void @version_etc_va(%struct._IO_FILE* %42, i8* %43, i8* %44, i8* %45, %struct.__va_list_tag* %46), !dbg !3306
  %47 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %39, i64 0, i64 0, !dbg !3307
  %48 = bitcast %struct.__va_list_tag* %47 to i8*, !dbg !3307
  call void @llvm.va_end(i8* %48), !dbg !3307
  br label %originalBB
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #10

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #10

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xnmalloc(i64, i64) #4 !dbg !3362 {
  %3 = load i32, i32* @x.61
  %4 = load i32, i32* @y.62
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store i64 %0, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !3366, metadata !DIExpression()), !dbg !3367
  store i64 %1, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !3368, metadata !DIExpression()), !dbg !3369
  %13 = load i64, i64* %12, align 8, !dbg !3370
  %14 = udiv i64 9223372036854775807, %13, !dbg !3370
  %15 = load i64, i64* %11, align 8, !dbg !3370
  %16 = icmp ult i64 %14, %15, !dbg !3370
  %17 = load i32, i32* @x.61
  %18 = load i32, i32* @y.62
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %42, !dbg !3372

25:                                               ; preds = %originalBBpart2
  %26 = load i32, i32* @x.61
  %27 = load i32, i32* @y.62
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %25, %originalBB10alteredBB
  call void @xalloc_die() #14, !dbg !3373
  %34 = load i32, i32* @x.61
  %35 = load i32, i32* @y.62
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  unreachable, !dbg !3373

42:                                               ; preds = %originalBBpart2
  %43 = load i32, i32* @x.61
  %44 = load i32, i32* @y.62
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %42, %originalBB14alteredBB
  %51 = load i64, i64* %11, align 8, !dbg !3374
  %52 = load i64, i64* %12, align 8, !dbg !3375
  %53 = mul i64 %51, %52, !dbg !3376
  %54 = call noalias i8* @xmalloc(i64 %53), !dbg !3377
  %55 = load i32, i32* @x.61
  %56 = load i32, i32* @y.62
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart229, label %originalBB14alteredBB

originalBBpart229:                                ; preds = %originalBB14
  ret i8* %54, !dbg !3378

originalBBalteredBB:                              ; preds = %originalBB, %2
  %63 = alloca i64, align 8
  %64 = alloca i64, align 8
  store i64 %0, i64* %63, align 8
  call void @llvm.dbg.declare(metadata i64* %63, metadata !3379, metadata !DIExpression()), !dbg !3367
  store i64 %1, i64* %64, align 8
  call void @llvm.dbg.declare(metadata i64* %64, metadata !3382, metadata !DIExpression()), !dbg !3369
  %65 = load i64, i64* %64, align 8, !dbg !3370
  %_ = sub i64 0, 9223372036854775807
  %gen = add i64 %_, %65
  %_1 = sub i64 0, 9223372036854775807
  %gen2 = add i64 %_1, %65
  %_3 = sub i64 0, 9223372036854775807
  %gen4 = add i64 %_3, %65
  %_5 = sub i64 9223372036854775807, %65
  %gen6 = mul i64 %_5, %65
  %_7 = sub i64 0, 9223372036854775807
  %gen8 = add i64 %_7, %65
  %_9 = shl i64 9223372036854775807, %65
  %66 = udiv i64 9223372036854775807, %65, !dbg !3370
  %67 = load i64, i64* %63, align 8, !dbg !3370
  %68 = icmp ult i64 %66, %67, !dbg !3370
  br label %originalBB

originalBB10alteredBB:                            ; preds = %originalBB10, %25
  call void @xalloc_die() #14, !dbg !3373
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %42
  %69 = load i64, i64* %11, align 8, !dbg !3374
  %70 = load i64, i64* %12, align 8, !dbg !3375
  %_15 = sub i64 0, %69
  %gen16 = add i64 %_15, %70
  %_17 = sub i64 %69, %70
  %gen18 = mul i64 %_17, %70
  %_19 = sub i64 0, %69
  %gen20 = add i64 %_19, %70
  %_21 = shl i64 %69, %70
  %_22 = sub i64 0, %69
  %gen23 = add i64 %_22, %70
  %_24 = sub i64 0, %69
  %gen25 = add i64 %_24, %70
  %_26 = shl i64 %69, %70
  %_27 = shl i64 %69, %70
  %71 = mul i64 %69, %70, !dbg !3376
  %72 = call noalias i8* @xmalloc(i64 %71), !dbg !3377
  br label %originalBB14
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xmalloc(i64) #4 !dbg !3383 {
  %2 = alloca i64, align 8
  %3 = alloca i8*, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !3387, metadata !DIExpression()), !dbg !3388
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3389, metadata !DIExpression()), !dbg !3390
  %4 = load i64, i64* %2, align 8, !dbg !3391
  %5 = call noalias i8* @malloc(i64 %4) #10, !dbg !3392
  store i8* %5, i8** %3, align 8, !dbg !3390
  %6 = load i8*, i8** %3, align 8, !dbg !3393
  %7 = icmp ne i8* %6, null, !dbg !3393
  br i1 %7, label %44, label %8, !dbg !3395

8:                                                ; preds = %1
  %9 = load i32, i32* @x.63
  %10 = load i32, i32* @y.64
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = load i64, i64* %2, align 8, !dbg !3396
  %18 = icmp ne i64 %17, 0, !dbg !3397
  %19 = load i32, i32* @x.63
  %20 = load i32, i32* @y.64
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %44, !dbg !3398

27:                                               ; preds = %originalBBpart2
  %28 = load i32, i32* @x.63
  %29 = load i32, i32* @y.64
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  call void @xalloc_die() #14, !dbg !3399
  %36 = load i32, i32* @x.63
  %37 = load i32, i32* @y.64
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable, !dbg !3399

44:                                               ; preds = %originalBBpart2, %1
  %45 = load i8*, i8** %3, align 8, !dbg !3400
  ret i8* %45, !dbg !3401

originalBBalteredBB:                              ; preds = %originalBB, %8
  %46 = load i64, i64* %2, align 8, !dbg !3396
  %47 = icmp ne i64 %46, 0, !dbg !3397
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  call void @xalloc_die() #14, !dbg !3399
  br label %originalBB1
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xrealloc(i8*, i64) #4 !dbg !3402 {
  %3 = load i32, i32* @x.65
  %4 = load i32, i32* @y.66
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !3405, metadata !DIExpression()), !dbg !3406
  store i64 %1, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !3407, metadata !DIExpression()), !dbg !3408
  %14 = load i64, i64* %13, align 8, !dbg !3409
  %15 = icmp ne i64 %14, 0, !dbg !3409
  %16 = load i32, i32* @x.65
  %17 = load i32, i32* @y.66
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %45, label %24, !dbg !3411

24:                                               ; preds = %originalBBpart2
  %25 = load i8*, i8** %12, align 8, !dbg !3412
  %26 = icmp ne i8* %25, null, !dbg !3412
  br i1 %26, label %27, label %45, !dbg !3413

27:                                               ; preds = %24
  %28 = load i32, i32* @x.65
  %29 = load i32, i32* @y.66
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load i8*, i8** %12, align 8, !dbg !3414
  call void @free(i8* %36) #10, !dbg !3416
  store i8* null, i8** %11, align 8, !dbg !3417
  %37 = load i32, i32* @x.65
  %38 = load i32, i32* @y.66
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %89, !dbg !3417

45:                                               ; preds = %24, %originalBBpart2
  %46 = load i32, i32* @x.65
  %47 = load i32, i32* @y.66
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %45, %originalBB6alteredBB
  %54 = load i8*, i8** %12, align 8, !dbg !3418
  %55 = load i64, i64* %13, align 8, !dbg !3419
  %56 = call i8* @realloc(i8* %54, i64 %55) #10, !dbg !3420
  store i8* %56, i8** %12, align 8, !dbg !3421
  %57 = load i8*, i8** %12, align 8, !dbg !3422
  %58 = icmp ne i8* %57, null, !dbg !3422
  %59 = load i32, i32* @x.65
  %60 = load i32, i32* @y.66
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %58, label %87, label %67, !dbg !3424

67:                                               ; preds = %originalBBpart28
  %68 = load i32, i32* @x.65
  %69 = load i32, i32* @y.66
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %67, %originalBB10alteredBB
  %76 = load i64, i64* %13, align 8, !dbg !3425
  %77 = icmp ne i64 %76, 0, !dbg !3425
  %78 = load i32, i32* @x.65
  %79 = load i32, i32* @y.66
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %77, label %86, label %87, !dbg !3426

86:                                               ; preds = %originalBBpart212
  call void @xalloc_die() #14, !dbg !3427
  unreachable, !dbg !3427

87:                                               ; preds = %originalBBpart212, %originalBBpart28
  %88 = load i8*, i8** %12, align 8, !dbg !3428
  store i8* %88, i8** %11, align 8, !dbg !3429
  br label %89, !dbg !3429

89:                                               ; preds = %87, %originalBBpart24
  %90 = load i32, i32* @x.65
  %91 = load i32, i32* @y.66
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %89, %originalBB14alteredBB
  %98 = load i8*, i8** %11, align 8, !dbg !3430
  %99 = load i32, i32* @x.65
  %100 = load i32, i32* @y.66
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret i8* %98, !dbg !3430

originalBBalteredBB:                              ; preds = %originalBB, %2
  %107 = alloca i8*, align 8
  %108 = alloca i8*, align 8
  %109 = alloca i64, align 8
  store i8* %0, i8** %108, align 8
  call void @llvm.dbg.declare(metadata i8** %108, metadata !3431, metadata !DIExpression()), !dbg !3406
  store i64 %1, i64* %109, align 8
  call void @llvm.dbg.declare(metadata i64* %109, metadata !3434, metadata !DIExpression()), !dbg !3408
  %110 = load i64, i64* %109, align 8, !dbg !3409
  %111 = icmp ne i64 %110, 0, !dbg !3409
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %112 = load i8*, i8** %12, align 8, !dbg !3414
  call void @free(i8* %112) #10, !dbg !3416
  store i8* null, i8** %11, align 8, !dbg !3417
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %45
  %113 = load i8*, i8** %12, align 8, !dbg !3418
  %114 = load i64, i64* %13, align 8, !dbg !3419
  %115 = call i8* @realloc(i8* %113, i64 %114) #10, !dbg !3420
  store i8* %115, i8** %12, align 8, !dbg !3421
  %116 = load i8*, i8** %12, align 8, !dbg !3422
  %117 = icmp ne i8* %116, null, !dbg !3422
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %67
  %118 = load i64, i64* %13, align 8, !dbg !3425
  %119 = icmp ne i64 %118, 0, !dbg !3425
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %89
  %120 = load i8*, i8** %11, align 8, !dbg !3430
  br label %originalBB14
}

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xcharalloc(i64) #4 !dbg !3435 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !3436, metadata !DIExpression()), !dbg !3437
  %3 = load i64, i64* %2, align 8, !dbg !3438
  %4 = call noalias i8* @xmalloc(i64 %3), !dbg !3438
  ret i8* %4, !dbg !3439
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @xalloc_die() #0 !dbg !3440 {
  %1 = load i32, i32* @x.69
  %2 = load i32, i32* @y.70
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = load volatile i32, i32* @exit_failure, align 4, !dbg !3442
  %10 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.111, i64 0, i64 0)) #10, !dbg !3443
  call void (i32, i32, i8*, ...) @error(i32 %9, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.112, i64 0, i64 0), i8* %10), !dbg !3444
  call void @abort() #12, !dbg !3445
  %11 = load i32, i32* @x.69
  %12 = load i32, i32* @y.70
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable, !dbg !3445

originalBBalteredBB:                              ; preds = %originalBB, %0
  %19 = load volatile i32, i32* @exit_failure, align 4, !dbg !3442
  %20 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.111, i64 0, i64 0)) #10, !dbg !3443
  call void (i32, i32, i8*, ...) @error(i32 %19, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.112, i64 0, i64 0), i8* %20), !dbg !3444
  call void @abort() #12, !dbg !3445
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xgetcwd() #4 !dbg !3446 {
  %1 = load i32, i32* @x.71
  %2 = load i32, i32* @y.72
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !3448, metadata !DIExpression()), !dbg !3449
  %10 = call i8* @getcwd(i8* null, i64 0) #10, !dbg !3450
  store i8* %10, i8** %9, align 8, !dbg !3449
  %11 = load i8*, i8** %9, align 8, !dbg !3451
  %12 = icmp ne i8* %11, null, !dbg !3451
  %13 = load i32, i32* @x.71
  %14 = load i32, i32* @y.72
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %42, label %21, !dbg !3453

21:                                               ; preds = %originalBBpart2
  %22 = load i32, i32* @x.71
  %23 = load i32, i32* @y.72
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  %30 = call i32* @__errno_location() #15, !dbg !3454
  %31 = load i32, i32* %30, align 4, !dbg !3454
  %32 = icmp eq i32 %31, 12, !dbg !3455
  %33 = load i32, i32* @x.71
  %34 = load i32, i32* @y.72
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %32, label %41, label %42, !dbg !3456

41:                                               ; preds = %originalBBpart24
  call void @xalloc_die() #14, !dbg !3457
  unreachable, !dbg !3457

42:                                               ; preds = %originalBBpart24, %originalBBpart2
  %43 = load i8*, i8** %9, align 8, !dbg !3458
  ret i8* %43, !dbg !3459

originalBBalteredBB:                              ; preds = %originalBB, %0
  %44 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %44, metadata !3460, metadata !DIExpression()), !dbg !3449
  %45 = call i8* @getcwd(i8* null, i64 0) #10, !dbg !3450
  store i8* %45, i8** %44, align 8, !dbg !3449
  %46 = load i8*, i8** %44, align 8, !dbg !3451
  %47 = icmp ne i8* %46, null, !dbg !3451
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  %48 = call i32* @__errno_location() #15, !dbg !3454
  %49 = load i32, i32* %48, align 4, !dbg !3454
  %50 = icmp eq i32 %49, 12, !dbg !3455
  br label %originalBB1
}

; Function Attrs: nounwind
declare dso_local i8* @getcwd(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @rpl_mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #4 !dbg !3463 {
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.__mbstate_t*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  store i32* %0, i32** %6, align 8
  call void @llvm.dbg.declare(metadata i32** %6, metadata !3479, metadata !DIExpression()), !dbg !3480
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !3481, metadata !DIExpression()), !dbg !3482
  store i64 %2, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !3483, metadata !DIExpression()), !dbg !3484
  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %9, metadata !3485, metadata !DIExpression()), !dbg !3486
  call void @llvm.dbg.declare(metadata i64* %10, metadata !3487, metadata !DIExpression()), !dbg !3488
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3489, metadata !DIExpression()), !dbg !3490
  %13 = load i32*, i32** %6, align 8, !dbg !3491
  %14 = icmp ne i32* %13, null, !dbg !3491
  br i1 %14, label %32, label %15, !dbg !3493

15:                                               ; preds = %4
  %16 = load i32, i32* @x.73
  %17 = load i32, i32* @y.74
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  store i32* %11, i32** %6, align 8, !dbg !3494
  %24 = load i32, i32* @x.73
  %25 = load i32, i32* @y.74
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %32, !dbg !3495

32:                                               ; preds = %originalBBpart2, %4
  %33 = load i32, i32* @x.73
  %34 = load i32, i32* @y.74
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load i32*, i32** %6, align 8, !dbg !3496
  %42 = load i8*, i8** %7, align 8, !dbg !3497
  %43 = load i64, i64* %8, align 8, !dbg !3498
  %44 = load %struct.__mbstate_t*, %struct.__mbstate_t** %9, align 8, !dbg !3499
  %45 = call i64 @mbrtowc(i32* %41, i8* %42, i64 %43, %struct.__mbstate_t* %44) #10, !dbg !3500
  store i64 %45, i64* %10, align 8, !dbg !3501
  %46 = load i64, i64* %10, align 8, !dbg !3502
  %47 = icmp ule i64 -2, %46, !dbg !3504
  %48 = load i32, i32* @x.73
  %49 = load i32, i32* @y.74
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %47, label %56, label %115, !dbg !3505

56:                                               ; preds = %originalBBpart24
  %57 = load i32, i32* @x.73
  %58 = load i32, i32* @y.74
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %56, %originalBB6alteredBB
  %65 = load i64, i64* %8, align 8, !dbg !3506
  %66 = icmp ne i64 %65, 0, !dbg !3507
  %67 = load i32, i32* @x.73
  %68 = load i32, i32* @y.74
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %66, label %75, label %115, !dbg !3508

75:                                               ; preds = %originalBBpart28
  %76 = load i32, i32* @x.73
  %77 = load i32, i32* @y.74
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %75, %originalBB10alteredBB
  %84 = call zeroext i1 @hard_locale(i32 0), !dbg !3509
  %85 = load i32, i32* @x.73
  %86 = load i32, i32* @y.74
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %84, label %115, label %93, !dbg !3510

93:                                               ; preds = %originalBBpart212
  call void @llvm.dbg.declare(metadata i8* %12, metadata !3511, metadata !DIExpression()), !dbg !3513
  %94 = load i32, i32* @x.73
  %95 = load i32, i32* @y.74
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %93, %originalBB14alteredBB
  %102 = load i8*, i8** %7, align 8, !dbg !3514
  %103 = load i8, i8* %102, align 1, !dbg !3515
  store i8 %103, i8* %12, align 1, !dbg !3513
  %104 = load i8, i8* %12, align 1, !dbg !3516
  %105 = zext i8 %104 to i32, !dbg !3516
  %106 = load i32*, i32** %6, align 8, !dbg !3517
  store i32 %105, i32* %106, align 4, !dbg !3518
  store i64 1, i64* %5, align 8, !dbg !3519
  %107 = load i32, i32* @x.73
  %108 = load i32, i32* @y.74
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %133, !dbg !3519

115:                                              ; preds = %originalBBpart212, %originalBBpart28, %originalBBpart24
  %116 = load i32, i32* @x.73
  %117 = load i32, i32* @y.74
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %115, %originalBB18alteredBB
  %124 = load i64, i64* %10, align 8, !dbg !3520
  store i64 %124, i64* %5, align 8, !dbg !3521
  %125 = load i32, i32* @x.73
  %126 = load i32, i32* @y.74
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %133, !dbg !3521

133:                                              ; preds = %originalBBpart220, %originalBBpart216
  %134 = load i64, i64* %5, align 8, !dbg !3522
  ret i64 %134, !dbg !3522

originalBBalteredBB:                              ; preds = %originalBB, %15
  store i32* %11, i32** %6, align 8, !dbg !3494
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %135 = load i32*, i32** %6, align 8, !dbg !3496
  %136 = load i8*, i8** %7, align 8, !dbg !3497
  %137 = load i64, i64* %8, align 8, !dbg !3498
  %138 = load %struct.__mbstate_t*, %struct.__mbstate_t** %9, align 8, !dbg !3499
  %139 = call i64 @mbrtowc(i32* %135, i8* %136, i64 %137, %struct.__mbstate_t* %138) #10, !dbg !3500
  store i64 %139, i64* %10, align 8, !dbg !3501
  %140 = load i64, i64* %10, align 8, !dbg !3502
  %141 = icmp ule i64 -2, %140, !dbg !3504
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %56
  %142 = load i64, i64* %8, align 8, !dbg !3506
  %143 = icmp ne i64 %142, 0, !dbg !3507
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %75
  %144 = call zeroext i1 @hard_locale(i32 0), !dbg !3509
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %93
  %145 = load i8*, i8** %7, align 8, !dbg !3514
  %146 = load i8, i8* %145, align 1, !dbg !3515
  store i8 %146, i8* %12, align 1, !dbg !3513
  %147 = load i8, i8* %12, align 1, !dbg !3516
  %148 = zext i8 %147 to i32, !dbg !3516
  %149 = load i32*, i32** %6, align 8, !dbg !3517
  store i32 %148, i32* %149, align 4, !dbg !3518
  store i64 1, i64* %5, align 8, !dbg !3519
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %115
  %150 = load i64, i64* %10, align 8, !dbg !3520
  store i64 %150, i64* %5, align 8, !dbg !3521
  br label %originalBB18
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @c_strcasecmp(i8*, i8*) #11 !dbg !3523 {
  %3 = load i32, i32* @x.75
  %4 = load i32, i32* @y.76
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !3527, metadata !DIExpression()), !dbg !3528
  store i8* %1, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !3529, metadata !DIExpression()), !dbg !3530
  call void @llvm.dbg.declare(metadata i8** %14, metadata !3531, metadata !DIExpression()), !dbg !3532
  %18 = load i8*, i8** %12, align 8, !dbg !3533
  store i8* %18, i8** %14, align 8, !dbg !3532
  call void @llvm.dbg.declare(metadata i8** %15, metadata !3534, metadata !DIExpression()), !dbg !3535
  %19 = load i8*, i8** %13, align 8, !dbg !3536
  store i8* %19, i8** %15, align 8, !dbg !3535
  call void @llvm.dbg.declare(metadata i8* %16, metadata !3537, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.declare(metadata i8* %17, metadata !3539, metadata !DIExpression()), !dbg !3540
  %20 = load i8*, i8** %14, align 8, !dbg !3541
  %21 = load i8*, i8** %15, align 8, !dbg !3543
  %22 = icmp eq i8* %20, %21, !dbg !3544
  %23 = load i32, i32* @x.75
  %24 = load i32, i32* @y.76
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %48, !dbg !3545

31:                                               ; preds = %originalBBpart2
  %32 = load i32, i32* @x.75
  %33 = load i32, i32* @y.76
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  store i32 0, i32* %11, align 4, !dbg !3546
  %40 = load i32, i32* @x.75
  %41 = load i32, i32* @y.76
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %161, !dbg !3546

48:                                               ; preds = %originalBBpart2
  br label %49, !dbg !3547

49:                                               ; preds = %originalBBpart220, %48
  %50 = load i32, i32* @x.75
  %51 = load i32, i32* @y.76
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %49, %originalBB6alteredBB
  %58 = load i8*, i8** %14, align 8, !dbg !3548
  %59 = load i8, i8* %58, align 1, !dbg !3550
  %60 = zext i8 %59 to i32, !dbg !3550
  %61 = call i32 @c_tolower(i32 %60), !dbg !3551
  %62 = trunc i32 %61 to i8, !dbg !3551
  store i8 %62, i8* %16, align 1, !dbg !3552
  %63 = load i8*, i8** %15, align 8, !dbg !3553
  %64 = load i8, i8* %63, align 1, !dbg !3554
  %65 = zext i8 %64 to i32, !dbg !3554
  %66 = call i32 @c_tolower(i32 %65), !dbg !3555
  %67 = trunc i32 %66 to i8, !dbg !3555
  store i8 %67, i8* %17, align 1, !dbg !3556
  %68 = load i8, i8* %16, align 1, !dbg !3557
  %69 = zext i8 %68 to i32, !dbg !3557
  %70 = icmp eq i32 %69, 0, !dbg !3559
  %71 = load i32, i32* @x.75
  %72 = load i32, i32* @y.76
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %70, label %79, label %96, !dbg !3560

79:                                               ; preds = %originalBBpart28
  %80 = load i32, i32* @x.75
  %81 = load i32, i32* @y.76
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %79, %originalBB10alteredBB
  %88 = load i32, i32* @x.75
  %89 = load i32, i32* @y.76
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %139, !dbg !3561

96:                                               ; preds = %originalBBpart28
  %97 = load i32, i32* @x.75
  %98 = load i32, i32* @y.76
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %96, %originalBB14alteredBB
  %105 = load i8*, i8** %14, align 8, !dbg !3562
  %106 = getelementptr inbounds i8, i8* %105, i32 1, !dbg !3562
  store i8* %106, i8** %14, align 8, !dbg !3562
  %107 = load i8*, i8** %15, align 8, !dbg !3563
  %108 = getelementptr inbounds i8, i8* %107, i32 1, !dbg !3563
  store i8* %108, i8** %15, align 8, !dbg !3563
  %109 = load i32, i32* @x.75
  %110 = load i32, i32* @y.76
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %117, !dbg !3564

117:                                              ; preds = %originalBBpart216
  %118 = load i32, i32* @x.75
  %119 = load i32, i32* @y.76
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %117, %originalBB18alteredBB
  %126 = load i8, i8* %16, align 1, !dbg !3565
  %127 = zext i8 %126 to i32, !dbg !3565
  %128 = load i8, i8* %17, align 1, !dbg !3566
  %129 = zext i8 %128 to i32, !dbg !3566
  %130 = icmp eq i32 %127, %129, !dbg !3567
  %131 = load i32, i32* @x.75
  %132 = load i32, i32* @y.76
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %130, label %49, label %139, !dbg !3564, !llvm.loop !3568

139:                                              ; preds = %originalBBpart220, %originalBBpart212
  %140 = load i32, i32* @x.75
  %141 = load i32, i32* @y.76
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %139, %originalBB22alteredBB
  %148 = load i8, i8* %16, align 1, !dbg !3570
  %149 = zext i8 %148 to i32, !dbg !3570
  %150 = load i8, i8* %17, align 1, !dbg !3572
  %151 = zext i8 %150 to i32, !dbg !3572
  %152 = sub nsw i32 %149, %151, !dbg !3573
  store i32 %152, i32* %11, align 4, !dbg !3574
  %153 = load i32, i32* @x.75
  %154 = load i32, i32* @y.76
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBBpart227, label %originalBB22alteredBB

originalBBpart227:                                ; preds = %originalBB22
  br label %161, !dbg !3574

161:                                              ; preds = %originalBBpart227, %originalBBpart24
  %162 = load i32, i32* %11, align 4, !dbg !3575
  ret i32 %162, !dbg !3575

originalBBalteredBB:                              ; preds = %originalBB, %2
  %163 = alloca i32, align 4
  %164 = alloca i8*, align 8
  %165 = alloca i8*, align 8
  %166 = alloca i8*, align 8
  %167 = alloca i8*, align 8
  %168 = alloca i8, align 1
  %169 = alloca i8, align 1
  store i8* %0, i8** %164, align 8
  call void @llvm.dbg.declare(metadata i8** %164, metadata !3576, metadata !DIExpression()), !dbg !3528
  store i8* %1, i8** %165, align 8
  call void @llvm.dbg.declare(metadata i8** %165, metadata !3579, metadata !DIExpression()), !dbg !3530
  call void @llvm.dbg.declare(metadata i8** %166, metadata !3580, metadata !DIExpression()), !dbg !3532
  %170 = load i8*, i8** %164, align 8, !dbg !3533
  store i8* %170, i8** %166, align 8, !dbg !3532
  call void @llvm.dbg.declare(metadata i8** %167, metadata !3581, metadata !DIExpression()), !dbg !3535
  %171 = load i8*, i8** %165, align 8, !dbg !3536
  store i8* %171, i8** %167, align 8, !dbg !3535
  call void @llvm.dbg.declare(metadata i8* %168, metadata !3582, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.declare(metadata i8* %169, metadata !3583, metadata !DIExpression()), !dbg !3540
  %172 = load i8*, i8** %166, align 8, !dbg !3541
  %173 = load i8*, i8** %167, align 8, !dbg !3543
  %174 = icmp eq i8* %172, %173, !dbg !3544
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  store i32 0, i32* %11, align 4, !dbg !3546
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  %175 = load i8*, i8** %14, align 8, !dbg !3548
  %176 = load i8, i8* %175, align 1, !dbg !3550
  %177 = zext i8 %176 to i32, !dbg !3550
  %178 = call i32 @c_tolower(i32 %177), !dbg !3551
  %179 = trunc i32 %178 to i8, !dbg !3551
  store i8 %179, i8* %16, align 1, !dbg !3552
  %180 = load i8*, i8** %15, align 8, !dbg !3553
  %181 = load i8, i8* %180, align 1, !dbg !3554
  %182 = zext i8 %181 to i32, !dbg !3554
  %183 = call i32 @c_tolower(i32 %182), !dbg !3555
  %184 = trunc i32 %183 to i8, !dbg !3555
  store i8 %184, i8* %17, align 1, !dbg !3556
  %185 = load i8, i8* %16, align 1, !dbg !3557
  %186 = zext i8 %185 to i32, !dbg !3557
  %187 = icmp eq i32 %186, 0, !dbg !3559
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %79
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %96
  %188 = load i8*, i8** %14, align 8, !dbg !3562
  %189 = getelementptr inbounds i8, i8* %188, i32 1, !dbg !3562
  store i8* %189, i8** %14, align 8, !dbg !3562
  %190 = load i8*, i8** %15, align 8, !dbg !3563
  %191 = getelementptr inbounds i8, i8* %190, i32 1, !dbg !3563
  store i8* %191, i8** %15, align 8, !dbg !3563
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %117
  %192 = load i8, i8* %16, align 1, !dbg !3565
  %193 = zext i8 %192 to i32, !dbg !3565
  %194 = load i8, i8* %17, align 1, !dbg !3566
  %195 = zext i8 %194 to i32, !dbg !3566
  %196 = icmp eq i32 %193, %195, !dbg !3567
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %139
  %197 = load i8, i8* %16, align 1, !dbg !3570
  %198 = zext i8 %197 to i32, !dbg !3570
  %199 = load i8, i8* %17, align 1, !dbg !3572
  %200 = zext i8 %199 to i32, !dbg !3572
  %_ = sub i32 %198, %200
  %gen = mul i32 %_, %200
  %_23 = shl i32 %198, %200
  %_24 = sub i32 0, %198
  %gen25 = add i32 %_24, %200
  %201 = sub nsw i32 %198, %200, !dbg !3573
  store i32 %201, i32* %11, align 4, !dbg !3574
  br label %originalBB22
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @close_stream(%struct._IO_FILE*) #4 !dbg !3584 {
  %2 = load i32, i32* @x.77
  %3 = load i32, i32* @y.78
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %11, metadata !3622, metadata !DIExpression()), !dbg !3623
  call void @llvm.dbg.declare(metadata i8* %12, metadata !3624, metadata !DIExpression()), !dbg !3626
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !3627
  %16 = call i64 @__fpending(%struct._IO_FILE* %15) #10, !dbg !3628
  %17 = icmp ne i64 %16, 0, !dbg !3629
  %18 = zext i1 %17 to i8, !dbg !3626
  store i8 %18, i8* %12, align 1, !dbg !3626
  call void @llvm.dbg.declare(metadata i8* %13, metadata !3630, metadata !DIExpression()), !dbg !3631
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !3632
  %20 = call i32 @ferror_unlocked(%struct._IO_FILE* %19) #10, !dbg !3632
  %21 = icmp ne i32 %20, 0, !dbg !3633
  %22 = zext i1 %21 to i8, !dbg !3631
  store i8 %22, i8* %13, align 1, !dbg !3631
  call void @llvm.dbg.declare(metadata i8* %14, metadata !3634, metadata !DIExpression()), !dbg !3635
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !3636
  %24 = call i32 @rpl_fclose(%struct._IO_FILE* %23), !dbg !3637
  %25 = icmp ne i32 %24, 0, !dbg !3638
  %26 = zext i1 %25 to i8, !dbg !3635
  store i8 %26, i8* %14, align 1, !dbg !3635
  %27 = load i8, i8* %13, align 1, !dbg !3639
  %28 = trunc i8 %27 to i1, !dbg !3639
  %29 = load i32, i32* @x.77
  %30 = load i32, i32* @y.78
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %28, label %63, label %37, !dbg !3641

37:                                               ; preds = %originalBBpart2
  %38 = load i8, i8* %14, align 1, !dbg !3642
  %39 = trunc i8 %38 to i1, !dbg !3642
  br i1 %39, label %40, label %117, !dbg !3643

40:                                               ; preds = %37
  %41 = load i8, i8* %12, align 1, !dbg !3644
  %42 = trunc i8 %41 to i1, !dbg !3644
  br i1 %42, label %63, label %43, !dbg !3645

43:                                               ; preds = %40
  %44 = load i32, i32* @x.77
  %45 = load i32, i32* @y.78
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %43, %originalBB1alteredBB
  %52 = call i32* @__errno_location() #15, !dbg !3646
  %53 = load i32, i32* %52, align 4, !dbg !3646
  %54 = icmp ne i32 %53, 9, !dbg !3647
  %55 = load i32, i32* @x.77
  %56 = load i32, i32* @y.78
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %54, label %63, label %117, !dbg !3648

63:                                               ; preds = %originalBBpart24, %40, %originalBBpart2
  %64 = load i32, i32* @x.77
  %65 = load i32, i32* @y.78
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %63, %originalBB6alteredBB
  %72 = load i8, i8* %14, align 1, !dbg !3649
  %73 = trunc i8 %72 to i1, !dbg !3649
  %74 = load i32, i32* @x.77
  %75 = load i32, i32* @y.78
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %73, label %100, label %82, !dbg !3652

82:                                               ; preds = %originalBBpart28
  %83 = load i32, i32* @x.77
  %84 = load i32, i32* @y.78
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %82, %originalBB10alteredBB
  %91 = call i32* @__errno_location() #15, !dbg !3653
  store i32 0, i32* %91, align 4, !dbg !3654
  %92 = load i32, i32* @x.77
  %93 = load i32, i32* @y.78
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %100, !dbg !3653

100:                                              ; preds = %originalBBpart212, %originalBBpart28
  %101 = load i32, i32* @x.77
  %102 = load i32, i32* @y.78
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %100, %originalBB14alteredBB
  store i32 -1, i32* %10, align 4, !dbg !3655
  %109 = load i32, i32* @x.77
  %110 = load i32, i32* @y.78
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %134, !dbg !3655

117:                                              ; preds = %originalBBpart24, %37
  %118 = load i32, i32* @x.77
  %119 = load i32, i32* @y.78
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %117, %originalBB18alteredBB
  store i32 0, i32* %10, align 4, !dbg !3656
  %126 = load i32, i32* @x.77
  %127 = load i32, i32* @y.78
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %134, !dbg !3656

134:                                              ; preds = %originalBBpart220, %originalBBpart216
  %135 = load i32, i32* @x.77
  %136 = load i32, i32* @y.78
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %134, %originalBB22alteredBB
  %143 = load i32, i32* %10, align 4, !dbg !3657
  %144 = load i32, i32* @x.77
  %145 = load i32, i32* @y.78
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret i32 %143, !dbg !3657

originalBBalteredBB:                              ; preds = %originalBB, %1
  %152 = alloca i32, align 4
  %153 = alloca %struct._IO_FILE*, align 8
  %154 = alloca i8, align 1
  %155 = alloca i8, align 1
  %156 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %153, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %153, metadata !3658, metadata !DIExpression()), !dbg !3623
  call void @llvm.dbg.declare(metadata i8* %154, metadata !3697, metadata !DIExpression()), !dbg !3626
  %157 = load %struct._IO_FILE*, %struct._IO_FILE** %153, align 8, !dbg !3627
  %158 = call i64 @__fpending(%struct._IO_FILE* %157) #10, !dbg !3628
  %159 = icmp ne i64 %158, 0, !dbg !3629
  %160 = zext i1 %159 to i8, !dbg !3626
  store i8 %160, i8* %154, align 1, !dbg !3626
  call void @llvm.dbg.declare(metadata i8* %155, metadata !3698, metadata !DIExpression()), !dbg !3631
  %161 = load %struct._IO_FILE*, %struct._IO_FILE** %153, align 8, !dbg !3632
  %162 = call i32 @ferror_unlocked(%struct._IO_FILE* %161) #10, !dbg !3632
  %163 = icmp ne i32 %162, 0, !dbg !3633
  %164 = zext i1 %163 to i8, !dbg !3631
  store i8 %164, i8* %155, align 1, !dbg !3631
  call void @llvm.dbg.declare(metadata i8* %156, metadata !3699, metadata !DIExpression()), !dbg !3635
  %165 = load %struct._IO_FILE*, %struct._IO_FILE** %153, align 8, !dbg !3636
  %166 = call i32 @rpl_fclose(%struct._IO_FILE* %165), !dbg !3637
  %167 = icmp ne i32 %166, 0, !dbg !3638
  %168 = zext i1 %167 to i8, !dbg !3635
  store i8 %168, i8* %156, align 1, !dbg !3635
  %169 = load i8, i8* %155, align 1, !dbg !3639
  %170 = trunc i8 %169 to i1, !dbg !3639
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %43
  %171 = call i32* @__errno_location() #15, !dbg !3646
  %172 = load i32, i32* %171, align 4, !dbg !3646
  %173 = icmp ne i32 %172, 9, !dbg !3647
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %63
  %174 = load i8, i8* %14, align 1, !dbg !3649
  %175 = trunc i8 %174 to i1, !dbg !3649
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %82
  %176 = call i32* @__errno_location() #15, !dbg !3653
  store i32 0, i32* %176, align 4, !dbg !3654
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %100
  store i32 -1, i32* %10, align 4, !dbg !3655
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %117
  store i32 0, i32* %10, align 4, !dbg !3656
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %134
  %177 = load i32, i32* %10, align 4, !dbg !3657
  br label %originalBB22
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @hard_locale(i32) #4 !dbg !3700 {
  %2 = load i32, i32* @x.79
  %3 = load i32, i32* @y.80
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i1, align 1
  %11 = alloca i32, align 4
  %12 = alloca [257 x i8], align 16
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3704, metadata !DIExpression()), !dbg !3705
  call void @llvm.dbg.declare(metadata [257 x i8]* %12, metadata !3706, metadata !DIExpression()), !dbg !3710
  %13 = load i32, i32* %11, align 4, !dbg !3711
  %14 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !3713
  %15 = call i32 @setlocale_null_r(i32 %13, i8* %14, i64 257), !dbg !3714
  %16 = icmp ne i32 %15, 0, !dbg !3714
  %17 = load i32, i32* @x.79
  %18 = load i32, i32* @y.80
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %42, !dbg !3715

25:                                               ; preds = %originalBBpart2
  %26 = load i32, i32* @x.79
  %27 = load i32, i32* @y.80
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %25, %originalBB1alteredBB
  store i1 false, i1* %10, align 1, !dbg !3716
  %34 = load i32, i32* @x.79
  %35 = load i32, i32* @y.80
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %85, !dbg !3716

42:                                               ; preds = %originalBBpart2
  %43 = load i32, i32* @x.79
  %44 = load i32, i32* @y.80
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %42, %originalBB6alteredBB
  %51 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !3717
  %52 = call i32 @strcmp(i8* %51, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.123, i64 0, i64 0)) #13, !dbg !3718
  %53 = icmp eq i32 %52, 0, !dbg !3719
  %54 = load i32, i32* @x.79
  %55 = load i32, i32* @y.80
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %53, label %82, label %62, !dbg !3720

62:                                               ; preds = %originalBBpart28
  %63 = load i32, i32* @x.79
  %64 = load i32, i32* @y.80
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %62, %originalBB10alteredBB
  %71 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !3721
  %72 = call i32 @strcmp(i8* %71, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.124, i64 0, i64 0)) #13, !dbg !3722
  %73 = icmp eq i32 %72, 0, !dbg !3723
  %74 = load i32, i32* @x.79
  %75 = load i32, i32* @y.80
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %82, !dbg !3720

82:                                               ; preds = %originalBBpart212, %originalBBpart28
  %83 = phi i1 [ true, %originalBBpart28 ], [ %73, %originalBBpart212 ]
  %84 = xor i1 %83, true, !dbg !3724
  store i1 %84, i1* %10, align 1, !dbg !3725
  br label %85, !dbg !3725

85:                                               ; preds = %82, %originalBBpart24
  %86 = load i1, i1* %10, align 1, !dbg !3726
  ret i1 %86, !dbg !3726

originalBBalteredBB:                              ; preds = %originalBB, %1
  %87 = alloca i1, align 1
  %88 = alloca i32, align 4
  %89 = alloca [257 x i8], align 16
  store i32 %0, i32* %88, align 4
  call void @llvm.dbg.declare(metadata i32* %88, metadata !3727, metadata !DIExpression()), !dbg !3705
  call void @llvm.dbg.declare(metadata [257 x i8]* %89, metadata !3730, metadata !DIExpression()), !dbg !3710
  %90 = load i32, i32* %88, align 4, !dbg !3711
  %91 = getelementptr inbounds [257 x i8], [257 x i8]* %89, i64 0, i64 0, !dbg !3713
  %92 = call i32 @setlocale_null_r(i32 %90, i8* %91, i64 257), !dbg !3714
  %93 = icmp ne i32 %92, 0, !dbg !3714
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  store i1 false, i1* %10, align 1, !dbg !3716
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %42
  %94 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !3717
  %95 = call i32 @strcmp(i8* %94, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.123, i64 0, i64 0)) #13, !dbg !3718
  %96 = icmp eq i32 %95, 0, !dbg !3719
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %62
  %97 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !3721
  %98 = call i32 @strcmp(i8* %97, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.124, i64 0, i64 0)) #13, !dbg !3722
  %99 = icmp eq i32 %98, 0, !dbg !3723
  br label %originalBB10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @locale_charset() #4 !dbg !3731 {
  %1 = load i32, i32* @x.81
  %2 = load i32, i32* @y.82
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !3735, metadata !DIExpression()), !dbg !3736
  %10 = call i8* @nl_langinfo(i32 14) #10, !dbg !3737
  store i8* %10, i8** %9, align 8, !dbg !3738
  %11 = load i8*, i8** %9, align 8, !dbg !3739
  %12 = icmp eq i8* %11, null, !dbg !3741
  %13 = load i32, i32* @x.81
  %14 = load i32, i32* @y.82
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %38, !dbg !3742

21:                                               ; preds = %originalBBpart2
  %22 = load i32, i32* @x.81
  %23 = load i32, i32* @y.82
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.127, i64 0, i64 0), i8** %9, align 8, !dbg !3743
  %30 = load i32, i32* @x.81
  %31 = load i32, i32* @y.82
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %38, !dbg !3744

38:                                               ; preds = %originalBBpart24, %originalBBpart2
  %39 = load i32, i32* @x.81
  %40 = load i32, i32* @y.82
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %38, %originalBB6alteredBB
  %47 = load i8*, i8** %9, align 8, !dbg !3745
  %48 = getelementptr inbounds i8, i8* %47, i64 0, !dbg !3745
  %49 = load i8, i8* %48, align 1, !dbg !3745
  %50 = sext i8 %49 to i32, !dbg !3745
  %51 = icmp eq i32 %50, 0, !dbg !3749
  %52 = load i32, i32* @x.81
  %53 = load i32, i32* @y.82
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %51, label %60, label %77, !dbg !3750

60:                                               ; preds = %originalBBpart28
  %61 = load i32, i32* @x.81
  %62 = load i32, i32* @y.82
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %60, %originalBB10alteredBB
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.128, i64 0, i64 0), i8** %9, align 8, !dbg !3751
  %69 = load i32, i32* @x.81
  %70 = load i32, i32* @y.82
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %77, !dbg !3752

77:                                               ; preds = %originalBBpart212, %originalBBpart28
  %78 = load i8*, i8** %9, align 8, !dbg !3753
  ret i8* %78, !dbg !3754

originalBBalteredBB:                              ; preds = %originalBB, %0
  %79 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %79, metadata !3755, metadata !DIExpression()), !dbg !3736
  %80 = call i8* @nl_langinfo(i32 14) #10, !dbg !3737
  store i8* %80, i8** %79, align 8, !dbg !3738
  %81 = load i8*, i8** %79, align 8, !dbg !3739
  %82 = icmp eq i8* %81, null, !dbg !3741
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.127, i64 0, i64 0), i8** %9, align 8, !dbg !3743
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %38
  %83 = load i8*, i8** %9, align 8, !dbg !3745
  %84 = getelementptr inbounds i8, i8* %83, i64 0, !dbg !3745
  %85 = load i8, i8* %84, align 1, !dbg !3745
  %86 = sext i8 %85 to i32, !dbg !3745
  %87 = icmp eq i32 %86, 0, !dbg !3749
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %60
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.128, i64 0, i64 0), i8** %9, align 8, !dbg !3751
  br label %originalBB10
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setlocale_null_r(i32, i8* nonnull, i64) #4 !dbg !3758 {
  %4 = load i32, i32* @x.83
  %5 = load i32, i32* @y.84
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !3762, metadata !DIExpression()), !dbg !3763
  store i8* %1, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !3764, metadata !DIExpression()), !dbg !3765
  store i64 %2, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !3766, metadata !DIExpression()), !dbg !3767
  %15 = load i32, i32* %12, align 4, !dbg !3768
  %16 = load i8*, i8** %13, align 8, !dbg !3769
  %17 = load i64, i64* %14, align 8, !dbg !3770
  %18 = call i32 @setlocale_null_unlocked(i32 %15, i8* %16, i64 %17), !dbg !3771
  %19 = load i32, i32* @x.83
  %20 = load i32, i32* @y.84
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %18, !dbg !3772

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i64, align 8
  store i32 %0, i32* %27, align 4
  call void @llvm.dbg.declare(metadata i32* %27, metadata !3773, metadata !DIExpression()), !dbg !3763
  store i8* %1, i8** %28, align 8
  call void @llvm.dbg.declare(metadata i8** %28, metadata !3776, metadata !DIExpression()), !dbg !3765
  store i64 %2, i64* %29, align 8
  call void @llvm.dbg.declare(metadata i64* %29, metadata !3777, metadata !DIExpression()), !dbg !3767
  %30 = load i32, i32* %27, align 4, !dbg !3768
  %31 = load i8*, i8** %28, align 8, !dbg !3769
  %32 = load i64, i64* %29, align 8, !dbg !3770
  %33 = call i32 @setlocale_null_unlocked(i32 %30, i8* %31, i64 %32), !dbg !3771
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setlocale_null_unlocked(i32, i8*, i64) #4 !dbg !3778 {
  %4 = load i32, i32* @x.85
  %5 = load i32, i32* @y.86
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i64, align 8
  store i32 %0, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !3779, metadata !DIExpression()), !dbg !3780
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !3781, metadata !DIExpression()), !dbg !3782
  store i64 %2, i64* %15, align 8
  %18 = mul i32 %0, -3
  %19 = add i32 %18, 4
  %20 = trunc i64 %2 to i32
  %21 = mul i32 %20, -2
  %22 = add i32 %21, 1
  %23 = mul i32 %19, %19
  %24 = mul i32 %22, %22
  %25 = add i32 %23, %24
  %26 = mul i32 %19, %22
  %27 = mul i32 %26, 2
  %28 = sub i32 %25, %27
  %29 = mul i32 %28, -3
  %30 = add i32 %29, -1
  %31 = icmp eq i32 %30, 2
  %32 = load i32, i32* @x.85
  %33 = load i32, i32* @y.86
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %31, label %40, label %57

40:                                               ; preds = %originalBBpart2
  %41 = load i32, i32* @x.85
  %42 = load i32, i32* @y.86
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB72, label %originalBB72alteredBB

originalBB72:                                     ; preds = %40, %originalBB72alteredBB
  %49 = load i32, i32* @x.85
  %50 = load i32, i32* @y.86
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart274, label %originalBB72alteredBB

originalBBpart274:                                ; preds = %originalBB72
  ret i32 0

57:                                               ; preds = %originalBBpart2
  call void @llvm.dbg.declare(metadata i64* %15, metadata !3783, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.declare(metadata i8** %16, metadata !3785, metadata !DIExpression()), !dbg !3786
  %58 = load i32, i32* @x.85
  %59 = load i32, i32* @y.86
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBB76, label %originalBB76alteredBB

originalBB76:                                     ; preds = %57, %originalBB76alteredBB
  %66 = load i32, i32* %13, align 4, !dbg !3787
  %67 = call i8* @setlocale_null_androidfix(i32 %66), !dbg !3788
  store i8* %67, i8** %16, align 8, !dbg !3786
  %68 = load i8*, i8** %16, align 8, !dbg !3789
  %69 = icmp eq i8* %68, null, !dbg !3791
  %70 = load i32, i32* @x.85
  %71 = load i32, i32* @y.86
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart278, label %originalBB76alteredBB

originalBBpart278:                                ; preds = %originalBB76
  br i1 %69, label %78, label %117, !dbg !3792

78:                                               ; preds = %originalBBpart278
  %79 = load i64, i64* %15, align 8, !dbg !3793
  %80 = icmp ugt i64 %79, 0, !dbg !3796
  br i1 %80, label %81, label %100, !dbg !3797

81:                                               ; preds = %78
  %82 = load i32, i32* @x.85
  %83 = load i32, i32* @y.86
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %81, %originalBB80alteredBB
  %90 = load i8*, i8** %14, align 8, !dbg !3798
  %91 = getelementptr inbounds i8, i8* %90, i64 0, !dbg !3798
  store i8 0, i8* %91, align 1, !dbg !3799
  %92 = load i32, i32* @x.85
  %93 = load i32, i32* @y.86
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart282, label %originalBB80alteredBB

originalBBpart282:                                ; preds = %originalBB80
  br label %100, !dbg !3798

100:                                              ; preds = %originalBBpart282, %78
  %101 = load i32, i32* @x.85
  %102 = load i32, i32* @y.86
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBB84, label %originalBB84alteredBB

originalBB84:                                     ; preds = %100, %originalBB84alteredBB
  store i32 22, i32* %12, align 4, !dbg !3800
  %109 = load i32, i32* @x.85
  %110 = load i32, i32* @y.86
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart286, label %originalBB84alteredBB

originalBBpart286:                                ; preds = %originalBB84
  br label %205, !dbg !3800

117:                                              ; preds = %originalBBpart278
  call void @llvm.dbg.declare(metadata i64* %17, metadata !3801, metadata !DIExpression()), !dbg !3803
  %118 = load i32, i32* @x.85
  %119 = load i32, i32* @y.86
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBB88, label %originalBB88alteredBB

originalBB88:                                     ; preds = %117, %originalBB88alteredBB
  %126 = load i8*, i8** %16, align 8, !dbg !3804
  %127 = call i64 @strlen(i8* %126) #13, !dbg !3805
  store i64 %127, i64* %17, align 8, !dbg !3803
  %128 = load i64, i64* %17, align 8, !dbg !3806
  %129 = load i64, i64* %15, align 8, !dbg !3808
  %130 = icmp ult i64 %128, %129, !dbg !3809
  %131 = load i32, i32* @x.85
  %132 = load i32, i32* @y.86
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart290, label %originalBB88alteredBB

originalBBpart290:                                ; preds = %originalBB88
  br i1 %130, label %139, label %144, !dbg !3810

139:                                              ; preds = %originalBBpart290
  %140 = load i8*, i8** %14, align 8, !dbg !3811
  %141 = load i8*, i8** %16, align 8, !dbg !3813
  %142 = load i64, i64* %17, align 8, !dbg !3814
  %143 = add i64 %142, 1, !dbg !3815
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %140, i8* align 1 %141, i64 %143, i1 false), !dbg !3816
  store i32 0, i32* %12, align 4, !dbg !3817
  br label %205, !dbg !3817

144:                                              ; preds = %originalBBpart290
  %145 = load i32, i32* @x.85
  %146 = load i32, i32* @y.86
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBB92, label %originalBB92alteredBB

originalBB92:                                     ; preds = %144, %originalBB92alteredBB
  %153 = load i64, i64* %15, align 8, !dbg !3818
  %154 = icmp ugt i64 %153, 0, !dbg !3821
  %155 = load i32, i32* @x.85
  %156 = load i32, i32* @y.86
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBBpart294, label %originalBB92alteredBB

originalBBpart294:                                ; preds = %originalBB92
  br i1 %154, label %163, label %188, !dbg !3822

163:                                              ; preds = %originalBBpart294
  %164 = load i32, i32* @x.85
  %165 = load i32, i32* @y.86
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBB96, label %originalBB96alteredBB

originalBB96:                                     ; preds = %163, %originalBB96alteredBB
  %172 = load i8*, i8** %14, align 8, !dbg !3823
  %173 = load i8*, i8** %16, align 8, !dbg !3825
  %174 = load i64, i64* %15, align 8, !dbg !3826
  %175 = sub i64 %174, 1, !dbg !3827
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %172, i8* align 1 %173, i64 %175, i1 false), !dbg !3828
  %176 = load i8*, i8** %14, align 8, !dbg !3829
  %177 = load i64, i64* %15, align 8, !dbg !3830
  %178 = sub i64 %177, 1, !dbg !3831
  %179 = getelementptr inbounds i8, i8* %176, i64 %178, !dbg !3829
  store i8 0, i8* %179, align 1, !dbg !3832
  %180 = load i32, i32* @x.85
  %181 = load i32, i32* @y.86
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBBpart2108, label %originalBB96alteredBB

originalBBpart2108:                               ; preds = %originalBB96
  br label %188, !dbg !3833

188:                                              ; preds = %originalBBpart2108, %originalBBpart294
  %189 = load i32, i32* @x.85
  %190 = load i32, i32* @y.86
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %188, %originalBB110alteredBB
  store i32 34, i32* %12, align 4, !dbg !3834
  %197 = load i32, i32* @x.85
  %198 = load i32, i32* @y.86
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBBpart2112, label %originalBB110alteredBB

originalBBpart2112:                               ; preds = %originalBB110
  br label %205, !dbg !3834

205:                                              ; preds = %originalBBpart2112, %139, %originalBBpart286
  %206 = load i32, i32* %12, align 4, !dbg !3835
  ret i32 %206, !dbg !3835

originalBBalteredBB:                              ; preds = %originalBB, %3
  %207 = alloca i32, align 4
  %208 = alloca i32, align 4
  %209 = alloca i8*, align 8
  %210 = alloca i64, align 8
  %211 = alloca i8*, align 8
  %212 = alloca i64, align 8
  store i32 %0, i32* %208, align 4
  call void @llvm.dbg.declare(metadata i32* %208, metadata !3836, metadata !DIExpression()), !dbg !3780
  store i8* %1, i8** %209, align 8
  call void @llvm.dbg.declare(metadata i8** %209, metadata !3839, metadata !DIExpression()), !dbg !3782
  store i64 %2, i64* %210, align 8
  %_ = shl i32 %0, -3
  %_1 = sub i32 %0, -3
  %gen = mul i32 %_1, -3
  %_2 = sub i32 %0, -3
  %gen3 = mul i32 %_2, -3
  %_4 = shl i32 %0, -3
  %_5 = shl i32 %0, -3
  %213 = mul i32 %0, -3
  %_6 = shl i32 %213, 4
  %_7 = shl i32 %213, 4
  %_8 = sub i32 0, %213
  %gen9 = add i32 %_8, 4
  %_10 = shl i32 %213, 4
  %214 = add i32 %213, 4
  %215 = trunc i64 %2 to i32
  %_11 = sub i32 0, %215
  %gen12 = add i32 %_11, -2
  %216 = mul i32 %215, -2
  %_13 = shl i32 %216, 1
  %217 = add i32 %216, 1
  %_14 = shl i32 %214, %214
  %_15 = shl i32 %214, %214
  %_16 = shl i32 %214, %214
  %_17 = shl i32 %214, %214
  %_18 = sub i32 0, %214
  %gen19 = add i32 %_18, %214
  %218 = mul i32 %214, %214
  %_20 = sub i32 0, %217
  %gen21 = add i32 %_20, %217
  %219 = mul i32 %217, %217
  %_22 = shl i32 %218, %219
  %_23 = sub i32 %218, %219
  %gen24 = mul i32 %_23, %219
  %_25 = shl i32 %218, %219
  %_26 = sub i32 0, %218
  %gen27 = add i32 %_26, %219
  %_28 = sub i32 %218, %219
  %gen29 = mul i32 %_28, %219
  %_30 = sub i32 %218, %219
  %gen31 = mul i32 %_30, %219
  %_32 = sub i32 0, %218
  %gen33 = add i32 %_32, %219
  %_34 = shl i32 %218, %219
  %_35 = sub i32 0, %218
  %gen36 = add i32 %_35, %219
  %220 = add i32 %218, %219
  %_37 = sub i32 0, %214
  %gen38 = add i32 %_37, %217
  %_39 = sub i32 0, %214
  %gen40 = add i32 %_39, %217
  %_41 = shl i32 %214, %217
  %_42 = shl i32 %214, %217
  %_43 = shl i32 %214, %217
  %_44 = sub i32 0, %214
  %gen45 = add i32 %_44, %217
  %_46 = sub i32 0, %214
  %gen47 = add i32 %_46, %217
  %221 = mul i32 %214, %217
  %_48 = sub i32 0, %221
  %gen49 = add i32 %_48, 2
  %_50 = sub i32 0, %221
  %gen51 = add i32 %_50, 2
  %_52 = sub i32 0, %221
  %gen53 = add i32 %_52, 2
  %_54 = sub i32 0, %221
  %gen55 = add i32 %_54, 2
  %_56 = shl i32 %221, 2
  %222 = mul i32 %221, 2
  %_57 = sub i32 0, %220
  %gen58 = add i32 %_57, %222
  %_59 = shl i32 %220, %222
  %_60 = sub i32 %220, %222
  %gen61 = mul i32 %_60, %222
  %_62 = sub i32 0, %220
  %gen63 = add i32 %_62, %222
  %_64 = sub i32 %220, %222
  %gen65 = mul i32 %_64, %222
  %223 = sub i32 %220, %222
  %_66 = sub i32 0, %223
  %gen67 = add i32 %_66, -3
  %224 = mul i32 %223, -3
  %_68 = sub i32 0, %224
  %gen69 = add i32 %_68, -1
  %_70 = sub i32 0, %224
  %gen71 = add i32 %_70, -1
  %225 = add i32 %224, -1
  %226 = icmp eq i32 %225, 2
  br label %originalBB

originalBB72alteredBB:                            ; preds = %originalBB72, %40
  br label %originalBB72

originalBB76alteredBB:                            ; preds = %originalBB76, %57
  %227 = load i32, i32* %13, align 4, !dbg !3787
  %228 = call i8* @setlocale_null_androidfix(i32 %227), !dbg !3788
  store i8* %228, i8** %16, align 8, !dbg !3786
  %229 = load i8*, i8** %16, align 8, !dbg !3789
  %230 = icmp eq i8* %229, null, !dbg !3791
  br label %originalBB76

originalBB80alteredBB:                            ; preds = %originalBB80, %81
  %231 = load i8*, i8** %14, align 8, !dbg !3798
  %232 = getelementptr inbounds i8, i8* %231, i64 0, !dbg !3798
  store i8 0, i8* %232, align 1, !dbg !3799
  br label %originalBB80

originalBB84alteredBB:                            ; preds = %originalBB84, %100
  store i32 22, i32* %12, align 4, !dbg !3800
  br label %originalBB84

originalBB88alteredBB:                            ; preds = %originalBB88, %117
  %233 = load i8*, i8** %16, align 8, !dbg !3804
  %234 = call i64 @strlen(i8* %233) #13, !dbg !3805
  store i64 %234, i64* %17, align 8, !dbg !3803
  %235 = load i64, i64* %17, align 8, !dbg !3806
  %236 = load i64, i64* %15, align 8, !dbg !3808
  %237 = icmp ult i64 %235, %236, !dbg !3809
  br label %originalBB88

originalBB92alteredBB:                            ; preds = %originalBB92, %144
  %238 = load i64, i64* %15, align 8, !dbg !3818
  %239 = icmp ugt i64 %238, 0, !dbg !3821
  br label %originalBB92

originalBB96alteredBB:                            ; preds = %originalBB96, %163
  %240 = load i8*, i8** %14, align 8, !dbg !3823
  %241 = load i8*, i8** %16, align 8, !dbg !3825
  %242 = load i64, i64* %15, align 8, !dbg !3826
  %_97 = sub i64 0, %242
  %gen98 = add i64 %_97, 1
  %_99 = shl i64 %242, 1
  %_100 = shl i64 %242, 1
  %243 = sub i64 %242, 1, !dbg !3827
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %240, i8* align 1 %241, i64 %243, i1 false), !dbg !3828
  %244 = load i8*, i8** %14, align 8, !dbg !3829
  %245 = load i64, i64* %15, align 8, !dbg !3830
  %_101 = sub i64 %245, 1
  %gen102 = mul i64 %_101, 1
  %_103 = sub i64 0, %245
  %gen104 = add i64 %_103, 1
  %_105 = shl i64 %245, 1
  %_106 = shl i64 %245, 1
  %246 = sub i64 %245, 1, !dbg !3831
  %247 = getelementptr inbounds i8, i8* %244, i64 %246, !dbg !3829
  store i8 0, i8* %247, align 1, !dbg !3832
  br label %originalBB96

originalBB110alteredBB:                           ; preds = %originalBB110, %188
  store i32 34, i32* %12, align 4, !dbg !3834
  br label %originalBB110
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @setlocale_null_androidfix(i32) #4 !dbg !3840 {
  %2 = load i32, i32* @x.87
  %3 = load i32, i32* @y.88
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  store i32 %0, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !3843, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.declare(metadata i8** %11, metadata !3845, metadata !DIExpression()), !dbg !3846
  %12 = load i32, i32* %10, align 4, !dbg !3847
  %13 = call i8* @setlocale(i32 %12, i8* null) #10, !dbg !3848
  store i8* %13, i8** %11, align 8, !dbg !3846
  %14 = load i8*, i8** %11, align 8, !dbg !3849
  %15 = load i32, i32* @x.87
  %16 = load i32, i32* @y.88
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %14, !dbg !3850

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca i32, align 4
  %24 = alloca i8*, align 8
  store i32 %0, i32* %23, align 4
  call void @llvm.dbg.declare(metadata i32* %23, metadata !3851, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.declare(metadata i8** %24, metadata !3854, metadata !DIExpression()), !dbg !3846
  %25 = load i32, i32* %23, align 4, !dbg !3847
  %26 = call i8* @setlocale(i32 %25, i8* null) #10, !dbg !3848
  store i8* %26, i8** %24, align 8, !dbg !3846
  %27 = load i8*, i8** %24, align 8, !dbg !3849
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fclose(%struct._IO_FILE* nonnull) #4 !dbg !3855 {
  %2 = load i32, i32* @x.89
  %3 = load i32, i32* @y.90
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %11, metadata !3893, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.declare(metadata i32* %12, metadata !3895, metadata !DIExpression()), !dbg !3896
  store i32 0, i32* %12, align 4, !dbg !3896
  call void @llvm.dbg.declare(metadata i32* %13, metadata !3897, metadata !DIExpression()), !dbg !3898
  call void @llvm.dbg.declare(metadata i32* %14, metadata !3899, metadata !DIExpression()), !dbg !3900
  store i32 0, i32* %14, align 4, !dbg !3900
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !3901
  %16 = call i32 @fileno(%struct._IO_FILE* %15) #10, !dbg !3902
  store i32 %16, i32* %13, align 4, !dbg !3903
  %17 = add i32 %16, 1
  %18 = mul i32 %17, %17
  %19 = sub i32 %18, %17
  %20 = srem i32 %19, 2
  %21 = add i32 %20, -1
  %22 = load i32, i32* @x.89
  %23 = load i32, i32* @y.90
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %30

30:                                               ; preds = %originalBBpart2
  %31 = load i32, i32* @x.89
  %32 = load i32, i32* @y.90
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %30, %originalBB53alteredBB
  %collatzVar = alloca i32
  %39 = load i32, i32* @x.89
  %40 = load i32, i32* @y.90
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart255, label %originalBB53alteredBB

originalBBpart255:                                ; preds = %originalBB53
  br label %47

47:                                               ; preds = %originalBBpart255
  %48 = load i32, i32* @x.89
  %49 = load i32, i32* @y.90
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %47, %originalBB57alteredBB
  %56 = load i32, i32* @inVal0
  %57 = icmp sgt i32 %56, 1
  %58 = load i32, i32* @x.89
  %59 = load i32, i32* @y.90
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart259, label %originalBB57alteredBB

originalBBpart259:                                ; preds = %originalBB57
  br i1 %57, label %83, label %66

66:                                               ; preds = %originalBBpart259
  %67 = load i32, i32* @x.89
  %68 = load i32, i32* @y.90
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %66, %originalBB61alteredBB
  store i32 94, i32* %collatzVar
  %75 = load i32, i32* @x.89
  %76 = load i32, i32* @y.90
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart263, label %originalBB61alteredBB

originalBBpart263:                                ; preds = %originalBB61
  br label %83

83:                                               ; preds = %originalBBpart263, %originalBBpart259
  %84 = load i8**, i8*** @inVal1
  %85 = getelementptr inbounds i8*, i8** %84, i64 1
  %86 = load i8*, i8** %85
  %controle = call i32 @controle(i8* %86, i32 -1)
  store i32 %controle, i32* %collatzVar
  br label %87

87:                                               ; preds = %originalBBpart2104, %originalBBpart296, %83
  %88 = load i32, i32* @x.89
  %89 = load i32, i32* @y.90
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %87, %originalBB65alteredBB
  %96 = load i32, i32* %collatzVar
  %97 = icmp sgt i32 %96, 1
  %98 = load i32, i32* @x.89
  %99 = load i32, i32* @y.90
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBBpart267, label %originalBB65alteredBB

originalBBpart267:                                ; preds = %originalBB65
  br i1 %97, label %106, label %189

106:                                              ; preds = %originalBBpart267
  %107 = load i32, i32* @x.89
  %108 = load i32, i32* @y.90
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %106, %originalBB69alteredBB
  %115 = load i32, i32* %collatzVar
  %116 = srem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = load i32, i32* @x.89
  %119 = load i32, i32* @y.90
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart275, label %originalBB69alteredBB

originalBBpart275:                                ; preds = %originalBB69
  br i1 %117, label %126, label %129

126:                                              ; preds = %originalBBpart275
  %127 = load i32, i32* %collatzVar
  %128 = sdiv i32 %127, 2
  store i32 %128, i32* %collatzVar
  br label %149

129:                                              ; preds = %originalBBpart275
  %130 = load i32, i32* @x.89
  %131 = load i32, i32* @y.90
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB77, label %originalBB77alteredBB

originalBB77:                                     ; preds = %129, %originalBB77alteredBB
  %138 = load i32, i32* %collatzVar
  %139 = mul i32 %138, 3
  %140 = add i32 %139, 1
  store i32 %140, i32* %collatzVar
  %141 = load i32, i32* @x.89
  %142 = load i32, i32* @y.90
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart285, label %originalBB77alteredBB

originalBBpart285:                                ; preds = %originalBB77
  br label %149

149:                                              ; preds = %originalBBpart285, %126
  %150 = load i32, i32* @x.89
  %151 = load i32, i32* @y.90
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBB87, label %originalBB87alteredBB

originalBB87:                                     ; preds = %149, %originalBB87alteredBB
  %158 = load i32, i32* %collatzVar
  %159 = sub i32 %21, %158
  %160 = icmp sgt i32 %159, -3
  %161 = load i32, i32* @x.89
  %162 = load i32, i32* @y.90
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBBpart296, label %originalBB87alteredBB

originalBBpart296:                                ; preds = %originalBB87
  br i1 %160, label %169, label %87

169:                                              ; preds = %originalBBpart296
  %170 = load i32, i32* @x.89
  %171 = load i32, i32* @y.90
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %169, %originalBB98alteredBB
  %178 = load i32, i32* %collatzVar
  %179 = add i32 %21, %178
  %180 = icmp slt i32 %179, 1
  %181 = load i32, i32* @x.89
  %182 = load i32, i32* @y.90
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBBpart2104, label %originalBB98alteredBB

originalBBpart2104:                               ; preds = %originalBB98
  br i1 %180, label %206, label %87

189:                                              ; preds = %originalBBpart267
  %190 = load i32, i32* @x.89
  %191 = load i32, i32* @y.90
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %189, %originalBB106alteredBB
  %198 = load i32, i32* @x.89
  %199 = load i32, i32* @y.90
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  ret i32 0

206:                                              ; preds = %originalBBpart2104
  %207 = load i32, i32* @x.89
  %208 = load i32, i32* @y.90
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %206, %originalBB110alteredBB
  %215 = load i32, i32* %13, align 4, !dbg !3904
  %216 = icmp slt i32 %215, 0, !dbg !3906
  %217 = load i32, i32* @x.89
  %218 = load i32, i32* @y.90
  %219 = sub i32 %217, 1
  %220 = mul i32 %217, %219
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %222, %223
  br i1 %224, label %originalBBpart2112, label %originalBB110alteredBB

originalBBpart2112:                               ; preds = %originalBB110
  br i1 %216, label %225, label %244, !dbg !3907

225:                                              ; preds = %originalBBpart2112
  %226 = load i32, i32* @x.89
  %227 = load i32, i32* @y.90
  %228 = sub i32 %226, 1
  %229 = mul i32 %226, %228
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %227, 10
  %233 = or i1 %231, %232
  br i1 %233, label %originalBB114, label %originalBB114alteredBB

originalBB114:                                    ; preds = %225, %originalBB114alteredBB
  %234 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !3908
  %235 = call i32 @fclose(%struct._IO_FILE* %234), !dbg !3909
  store i32 %235, i32* %10, align 4, !dbg !3910
  %236 = load i32, i32* @x.89
  %237 = load i32, i32* @y.90
  %238 = sub i32 %236, 1
  %239 = mul i32 %236, %238
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %237, 10
  %243 = or i1 %241, %242
  br i1 %243, label %originalBBpart2116, label %originalBB114alteredBB

originalBBpart2116:                               ; preds = %originalBB114
  br label %382, !dbg !3910

244:                                              ; preds = %originalBBpart2112
  %245 = load i32, i32* @x.89
  %246 = load i32, i32* @y.90
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBB118, label %originalBB118alteredBB

originalBB118:                                    ; preds = %244, %originalBB118alteredBB
  %253 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !3911
  %254 = call i32 @__freading(%struct._IO_FILE* %253) #10, !dbg !3911
  %255 = icmp ne i32 %254, 0, !dbg !3911
  %256 = load i32, i32* @x.89
  %257 = load i32, i32* @y.90
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBBpart2120, label %originalBB118alteredBB

originalBBpart2120:                               ; preds = %originalBB118
  br i1 %255, label %264, label %285, !dbg !3913

264:                                              ; preds = %originalBBpart2120
  %265 = load i32, i32* @x.89
  %266 = load i32, i32* @y.90
  %267 = sub i32 %265, 1
  %268 = mul i32 %265, %267
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %270, %271
  br i1 %272, label %originalBB122, label %originalBB122alteredBB

originalBB122:                                    ; preds = %264, %originalBB122alteredBB
  %273 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !3914
  %274 = call i32 @fileno(%struct._IO_FILE* %273) #10, !dbg !3915
  %275 = call i64 @lseek(i32 %274, i64 0, i32 1) #10, !dbg !3916
  %276 = icmp ne i64 %275, -1, !dbg !3917
  %277 = load i32, i32* @x.89
  %278 = load i32, i32* @y.90
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBBpart2124, label %originalBB122alteredBB

originalBBpart2124:                               ; preds = %originalBB122
  br i1 %276, label %285, label %324, !dbg !3918

285:                                              ; preds = %originalBBpart2124, %originalBBpart2120
  %286 = load i32, i32* @x.89
  %287 = load i32, i32* @y.90
  %288 = sub i32 %286, 1
  %289 = mul i32 %286, %288
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %291, %292
  br i1 %293, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %285, %originalBB126alteredBB
  %294 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !3919
  %295 = call i32 @rpl_fflush(%struct._IO_FILE* %294), !dbg !3920
  %296 = icmp ne i32 %295, 0, !dbg !3920
  %297 = load i32, i32* @x.89
  %298 = load i32, i32* @y.90
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBBpart2128, label %originalBB126alteredBB

originalBBpart2128:                               ; preds = %originalBB126
  br i1 %296, label %305, label %324, !dbg !3921

305:                                              ; preds = %originalBBpart2128
  %306 = load i32, i32* @x.89
  %307 = load i32, i32* @y.90
  %308 = sub i32 %306, 1
  %309 = mul i32 %306, %308
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %311, %312
  br i1 %313, label %originalBB130, label %originalBB130alteredBB

originalBB130:                                    ; preds = %305, %originalBB130alteredBB
  %314 = call i32* @__errno_location() #15, !dbg !3922
  %315 = load i32, i32* %314, align 4, !dbg !3922
  store i32 %315, i32* %12, align 4, !dbg !3923
  %316 = load i32, i32* @x.89
  %317 = load i32, i32* @y.90
  %318 = sub i32 %316, 1
  %319 = mul i32 %316, %318
  %320 = urem i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %317, 10
  %323 = or i1 %321, %322
  br i1 %323, label %originalBBpart2132, label %originalBB130alteredBB

originalBBpart2132:                               ; preds = %originalBB130
  br label %324, !dbg !3924

324:                                              ; preds = %originalBBpart2132, %originalBBpart2128, %originalBBpart2124
  %325 = load i32, i32* @x.89
  %326 = load i32, i32* @y.90
  %327 = sub i32 %325, 1
  %328 = mul i32 %325, %327
  %329 = urem i32 %328, 2
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %330, %331
  br i1 %332, label %originalBB134, label %originalBB134alteredBB

originalBB134:                                    ; preds = %324, %originalBB134alteredBB
  %333 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !3925
  %334 = call i32 @fclose(%struct._IO_FILE* %333), !dbg !3926
  store i32 %334, i32* %14, align 4, !dbg !3927
  %335 = load i32, i32* %12, align 4, !dbg !3928
  %336 = icmp ne i32 %335, 0, !dbg !3930
  %337 = load i32, i32* @x.89
  %338 = load i32, i32* @y.90
  %339 = sub i32 %337, 1
  %340 = mul i32 %337, %339
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %342, %343
  br i1 %344, label %originalBBpart2136, label %originalBB134alteredBB

originalBBpart2136:                               ; preds = %originalBB134
  br i1 %336, label %345, label %364, !dbg !3931

345:                                              ; preds = %originalBBpart2136
  %346 = load i32, i32* @x.89
  %347 = load i32, i32* @y.90
  %348 = sub i32 %346, 1
  %349 = mul i32 %346, %348
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %351, %352
  br i1 %353, label %originalBB138, label %originalBB138alteredBB

originalBB138:                                    ; preds = %345, %originalBB138alteredBB
  %354 = load i32, i32* %12, align 4, !dbg !3932
  %355 = call i32* @__errno_location() #15, !dbg !3934
  store i32 %354, i32* %355, align 4, !dbg !3935
  store i32 -1, i32* %14, align 4, !dbg !3936
  %356 = load i32, i32* @x.89
  %357 = load i32, i32* @y.90
  %358 = sub i32 %356, 1
  %359 = mul i32 %356, %358
  %360 = urem i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %361, %362
  br i1 %363, label %originalBBpart2140, label %originalBB138alteredBB

originalBBpart2140:                               ; preds = %originalBB138
  br label %364, !dbg !3937

364:                                              ; preds = %originalBBpart2140, %originalBBpart2136
  %365 = load i32, i32* @x.89
  %366 = load i32, i32* @y.90
  %367 = sub i32 %365, 1
  %368 = mul i32 %365, %367
  %369 = urem i32 %368, 2
  %370 = icmp eq i32 %369, 0
  %371 = icmp slt i32 %366, 10
  %372 = or i1 %370, %371
  br i1 %372, label %originalBB142, label %originalBB142alteredBB

originalBB142:                                    ; preds = %364, %originalBB142alteredBB
  %373 = load i32, i32* %14, align 4, !dbg !3938
  store i32 %373, i32* %10, align 4, !dbg !3939
  %374 = load i32, i32* @x.89
  %375 = load i32, i32* @y.90
  %376 = sub i32 %374, 1
  %377 = mul i32 %374, %376
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %375, 10
  %381 = or i1 %379, %380
  br i1 %381, label %originalBBpart2144, label %originalBB142alteredBB

originalBBpart2144:                               ; preds = %originalBB142
  br label %382, !dbg !3939

382:                                              ; preds = %originalBBpart2144, %originalBBpart2116
  %383 = load i32, i32* @x.89
  %384 = load i32, i32* @y.90
  %385 = sub i32 %383, 1
  %386 = mul i32 %383, %385
  %387 = urem i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %388, %389
  br i1 %390, label %originalBB146, label %originalBB146alteredBB

originalBB146:                                    ; preds = %382, %originalBB146alteredBB
  %391 = load i32, i32* %10, align 4, !dbg !3940
  %392 = load i32, i32* @x.89
  %393 = load i32, i32* @y.90
  %394 = sub i32 %392, 1
  %395 = mul i32 %392, %394
  %396 = urem i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %397, %398
  br i1 %399, label %originalBBpart2148, label %originalBB146alteredBB

originalBBpart2148:                               ; preds = %originalBB146
  ret i32 %391, !dbg !3940

originalBBalteredBB:                              ; preds = %originalBB, %1
  %400 = alloca i32, align 4
  %401 = alloca %struct._IO_FILE*, align 8
  %402 = alloca i32, align 4
  %403 = alloca i32, align 4
  %404 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %401, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %401, metadata !3941, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.declare(metadata i32* %402, metadata !3980, metadata !DIExpression()), !dbg !3896
  store i32 0, i32* %402, align 4, !dbg !3896
  call void @llvm.dbg.declare(metadata i32* %403, metadata !3981, metadata !DIExpression()), !dbg !3898
  call void @llvm.dbg.declare(metadata i32* %404, metadata !3982, metadata !DIExpression()), !dbg !3900
  store i32 0, i32* %404, align 4, !dbg !3900
  %405 = load %struct._IO_FILE*, %struct._IO_FILE** %401, align 8, !dbg !3901
  %406 = call i32 @fileno(%struct._IO_FILE* %405) #10, !dbg !3902
  store i32 %406, i32* %403, align 4, !dbg !3903
  %_ = sub i32 %406, 1
  %gen = mul i32 %_, 1
  %_1 = sub i32 0, %406
  %gen2 = add i32 %_1, 1
  %_3 = shl i32 %406, 1
  %_4 = sub i32 %406, 1
  %gen5 = mul i32 %_4, 1
  %_6 = sub i32 0, %406
  %gen7 = add i32 %_6, 1
  %_8 = sub i32 %406, 1
  %gen9 = mul i32 %_8, 1
  %407 = add i32 %406, 1
  %_10 = sub i32 0, %407
  %gen11 = add i32 %_10, %407
  %_12 = sub i32 %407, %407
  %gen13 = mul i32 %_12, %407
  %_14 = sub i32 0, %407
  %gen15 = add i32 %_14, %407
  %_16 = sub i32 %407, %407
  %gen17 = mul i32 %_16, %407
  %_18 = sub i32 0, %407
  %gen19 = add i32 %_18, %407
  %_20 = shl i32 %407, %407
  %_21 = sub i32 %407, %407
  %gen22 = mul i32 %_21, %407
  %408 = mul i32 %407, %407
  %_23 = shl i32 %408, %407
  %_24 = shl i32 %408, %407
  %_25 = sub i32 %408, %407
  %gen26 = mul i32 %_25, %407
  %_27 = sub i32 %408, %407
  %gen28 = mul i32 %_27, %407
  %_29 = sub i32 %408, %407
  %gen30 = mul i32 %_29, %407
  %_31 = shl i32 %408, %407
  %409 = sub i32 %408, %407
  %_32 = sub i32 0, %409
  %gen33 = add i32 %_32, 2
  %_34 = shl i32 %409, 2
  %_35 = shl i32 %409, 2
  %_36 = sub i32 0, %409
  %gen37 = add i32 %_36, 2
  %_38 = shl i32 %409, 2
  %_39 = sub i32 %409, 2
  %gen40 = mul i32 %_39, 2
  %_41 = shl i32 %409, 2
  %410 = srem i32 %409, 2
  %_42 = shl i32 %410, -1
  %_43 = shl i32 %410, -1
  %_44 = shl i32 %410, -1
  %_45 = sub i32 0, %410
  %gen46 = add i32 %_45, -1
  %_47 = sub i32 %410, -1
  %gen48 = mul i32 %_47, -1
  %_49 = sub i32 0, %410
  %gen50 = add i32 %_49, -1
  %_51 = sub i32 %410, -1
  %gen52 = mul i32 %_51, -1
  %411 = add i32 %410, -1
  br label %originalBB

originalBB53alteredBB:                            ; preds = %originalBB53, %30
  %collatzVaralteredBB = alloca i32
  br label %originalBB53

originalBB57alteredBB:                            ; preds = %originalBB57, %47
  %412 = load i32, i32* @inVal0
  %413 = icmp sgt i32 %412, 1
  br label %originalBB57

originalBB61alteredBB:                            ; preds = %originalBB61, %66
  store i32 94, i32* %collatzVar
  br label %originalBB61

originalBB65alteredBB:                            ; preds = %originalBB65, %87
  %414 = load i32, i32* %collatzVar
  %415 = icmp sgt i32 %414, 1
  br label %originalBB65

originalBB69alteredBB:                            ; preds = %originalBB69, %106
  %416 = load i32, i32* %collatzVar
  %_70 = shl i32 %416, 2
  %_71 = shl i32 %416, 2
  %_72 = sub i32 0, %416
  %gen73 = add i32 %_72, 2
  %417 = srem i32 %416, 2
  %418 = icmp eq i32 %417, 0
  br label %originalBB69

originalBB77alteredBB:                            ; preds = %originalBB77, %129
  %419 = load i32, i32* %collatzVar
  %420 = mul i32 %419, 3
  %_78 = sub i32 0, %420
  %gen79 = add i32 %_78, 1
  %_80 = shl i32 %420, 1
  %_81 = sub i32 0, %420
  %gen82 = add i32 %_81, 1
  %_83 = shl i32 %420, 1
  %421 = add i32 %420, 1
  store i32 %421, i32* %collatzVar
  br label %originalBB77

originalBB87alteredBB:                            ; preds = %originalBB87, %149
  %422 = load i32, i32* %collatzVar
  %_88 = shl i32 %21, %422
  %_89 = shl i32 %21, %422
  %_90 = sub i32 0, %21
  %gen91 = add i32 %_90, %422
  %_92 = sub i32 %21, %422
  %gen93 = mul i32 %_92, %422
  %_94 = shl i32 %21, %422
  %423 = sub i32 %21, %422
  %424 = icmp sgt i32 %423, -3
  br label %originalBB87

originalBB98alteredBB:                            ; preds = %originalBB98, %169
  %425 = load i32, i32* %collatzVar
  %_99 = shl i32 %21, %425
  %_100 = shl i32 %21, %425
  %_101 = sub i32 %21, %425
  %gen102 = mul i32 %_101, %425
  %426 = add i32 %21, %425
  %427 = icmp slt i32 %426, 1
  br label %originalBB98

originalBB106alteredBB:                           ; preds = %originalBB106, %189
  br label %originalBB106

originalBB110alteredBB:                           ; preds = %originalBB110, %206
  %428 = load i32, i32* %13, align 4, !dbg !3904
  %429 = icmp slt i32 %428, 0, !dbg !3906
  br label %originalBB110

originalBB114alteredBB:                           ; preds = %originalBB114, %225
  %430 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !3908
  %431 = call i32 @fclose(%struct._IO_FILE* %430), !dbg !3909
  store i32 %431, i32* %10, align 4, !dbg !3910
  br label %originalBB114

originalBB118alteredBB:                           ; preds = %originalBB118, %244
  %432 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !3911
  %433 = call i32 @__freading(%struct._IO_FILE* %432) #10, !dbg !3911
  %434 = icmp ne i32 %433, 0, !dbg !3911
  br label %originalBB118

originalBB122alteredBB:                           ; preds = %originalBB122, %264
  %435 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !3914
  %436 = call i32 @fileno(%struct._IO_FILE* %435) #10, !dbg !3915
  %437 = call i64 @lseek(i32 %436, i64 0, i32 1) #10, !dbg !3916
  %438 = icmp ne i64 %437, -1, !dbg !3917
  br label %originalBB122

originalBB126alteredBB:                           ; preds = %originalBB126, %285
  %439 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !3919
  %440 = call i32 @rpl_fflush(%struct._IO_FILE* %439), !dbg !3920
  %441 = icmp ne i32 %440, 0, !dbg !3920
  br label %originalBB126

originalBB130alteredBB:                           ; preds = %originalBB130, %305
  %442 = call i32* @__errno_location() #15, !dbg !3922
  %443 = load i32, i32* %442, align 4, !dbg !3922
  store i32 %443, i32* %12, align 4, !dbg !3923
  br label %originalBB130

originalBB134alteredBB:                           ; preds = %originalBB134, %324
  %444 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !3925
  %445 = call i32 @fclose(%struct._IO_FILE* %444), !dbg !3926
  store i32 %445, i32* %14, align 4, !dbg !3927
  %446 = load i32, i32* %12, align 4, !dbg !3928
  %447 = icmp ne i32 %446, 0, !dbg !3930
  br label %originalBB134

originalBB138alteredBB:                           ; preds = %originalBB138, %345
  %448 = load i32, i32* %12, align 4, !dbg !3932
  %449 = call i32* @__errno_location() #15, !dbg !3934
  store i32 %448, i32* %449, align 4, !dbg !3935
  store i32 -1, i32* %14, align 4, !dbg !3936
  br label %originalBB138

originalBB142alteredBB:                           ; preds = %originalBB142, %364
  %450 = load i32, i32* %14, align 4, !dbg !3938
  store i32 %450, i32* %10, align 4, !dbg !3939
  br label %originalBB142

originalBB146alteredBB:                           ; preds = %originalBB146, %382
  %451 = load i32, i32* %10, align 4, !dbg !3940
  br label %originalBB146
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fflush(%struct._IO_FILE*) #4 !dbg !3983 {
  %2 = load i32, i32* @x.91
  %3 = load i32, i32* @y.92
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %11, metadata !4021, metadata !DIExpression()), !dbg !4022
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4023
  %13 = icmp eq %struct._IO_FILE* %12, null, !dbg !4025
  %14 = load i32, i32* @x.91
  %15 = load i32, i32* @y.92
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %13, label %42, label %22, !dbg !4026

22:                                               ; preds = %originalBBpart2
  %23 = load i32, i32* @x.91
  %24 = load i32, i32* @y.92
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %22, %originalBB1alteredBB
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4027
  %32 = call i32 @__freading(%struct._IO_FILE* %31) #10, !dbg !4027
  %33 = icmp ne i32 %32, 0, !dbg !4027
  %34 = load i32, i32* @x.91
  %35 = load i32, i32* @y.92
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %33, label %45, label %42, !dbg !4028

42:                                               ; preds = %originalBBpart24, %originalBBpart2
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4029
  %44 = call i32 @fflush(%struct._IO_FILE* %43), !dbg !4030
  store i32 %44, i32* %10, align 4, !dbg !4031
  br label %65, !dbg !4031

45:                                               ; preds = %originalBBpart24
  %46 = load i32, i32* @x.91
  %47 = load i32, i32* @y.92
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %45, %originalBB6alteredBB
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4032
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %54), !dbg !4033
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4034
  %56 = call i32 @fflush(%struct._IO_FILE* %55), !dbg !4035
  store i32 %56, i32* %10, align 4, !dbg !4036
  %57 = load i32, i32* @x.91
  %58 = load i32, i32* @y.92
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %65, !dbg !4036

65:                                               ; preds = %originalBBpart28, %42
  %66 = load i32, i32* %10, align 4, !dbg !4037
  ret i32 %66, !dbg !4037

originalBBalteredBB:                              ; preds = %originalBB, %1
  %67 = alloca i32, align 4
  %68 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %68, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %68, metadata !4038, metadata !DIExpression()), !dbg !4022
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** %68, align 8, !dbg !4023
  %70 = icmp eq %struct._IO_FILE* %69, null, !dbg !4025
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %22
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4027
  %72 = call i32 @__freading(%struct._IO_FILE* %71) #10, !dbg !4027
  %73 = icmp ne i32 %72, 0, !dbg !4027
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %45
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4032
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %74), !dbg !4033
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4034
  %76 = call i32 @fflush(%struct._IO_FILE* %75), !dbg !4035
  store i32 %76, i32* %10, align 4, !dbg !4036
  br label %originalBB6
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE*) #4 !dbg !4077 {
  %2 = load i32, i32* @x.93
  %3 = load i32, i32* @y.94
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %10, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %10, metadata !4080, metadata !DIExpression()), !dbg !4081
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8, !dbg !4082
  %12 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %11, i32 0, i32 0, !dbg !4084
  %13 = load i32, i32* %12, align 8, !dbg !4084
  %14 = and i32 %13, 256, !dbg !4085
  %15 = icmp ne i32 %14, 0, !dbg !4085
  %16 = load i32, i32* @x.93
  %17 = load i32, i32* @y.94
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %43, !dbg !4086

24:                                               ; preds = %originalBBpart2
  %25 = load i32, i32* @x.93
  %26 = load i32, i32* @y.94
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB8, label %originalBB8alteredBB

originalBB8:                                      ; preds = %24, %originalBB8alteredBB
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8, !dbg !4087
  %34 = call i32 @rpl_fseeko(%struct._IO_FILE* %33, i64 0, i32 1), !dbg !4088
  %35 = load i32, i32* @x.93
  %36 = load i32, i32* @y.94
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart210, label %originalBB8alteredBB

originalBBpart210:                                ; preds = %originalBB8
  br label %43, !dbg !4088

43:                                               ; preds = %originalBBpart210, %originalBBpart2
  ret void, !dbg !4089

originalBBalteredBB:                              ; preds = %originalBB, %1
  %44 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %44, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %44, metadata !4090, metadata !DIExpression()), !dbg !4081
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** %44, align 8, !dbg !4082
  %46 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %45, i32 0, i32 0, !dbg !4084
  %47 = load i32, i32* %46, align 8, !dbg !4084
  %_ = sub i32 0, %47
  %gen = add i32 %_, 256
  %_1 = sub i32 %47, 256
  %gen2 = mul i32 %_1, 256
  %_3 = shl i32 %47, 256
  %_4 = shl i32 %47, 256
  %_5 = shl i32 %47, 256
  %_6 = sub i32 0, %47
  %gen7 = add i32 %_6, 256
  %48 = and i32 %47, 256, !dbg !4085
  %49 = icmp ne i32 %48, 0, !dbg !4085
  br label %originalBB

originalBB8alteredBB:                             ; preds = %originalBB8, %24
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8, !dbg !4087
  %51 = call i32 @rpl_fseeko(%struct._IO_FILE* %50, i64 0, i32 1), !dbg !4088
  br label %originalBB8
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fseeko(%struct._IO_FILE* nonnull, i64, i32) #4 !dbg !4129 {
  %4 = load i32, i32* @x.95
  %5 = load i32, i32* @y.96
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca %struct._IO_FILE*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %13, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %13, metadata !4168, metadata !DIExpression()), !dbg !4169
  store i64 %1, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !4170, metadata !DIExpression()), !dbg !4171
  store i32 %2, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !4172, metadata !DIExpression()), !dbg !4173
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !4174
  %18 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 2, !dbg !4176
  %19 = load i8*, i8** %18, align 8, !dbg !4176
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !4177
  %21 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %20, i32 0, i32 1, !dbg !4178
  %22 = load i8*, i8** %21, align 8, !dbg !4178
  %23 = icmp eq i8* %19, %22, !dbg !4179
  %24 = load i32, i32* @x.95
  %25 = load i32, i32* @y.96
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %142, !dbg !4180

32:                                               ; preds = %originalBBpart2
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !4181
  %34 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %33, i32 0, i32 5, !dbg !4182
  %35 = load i8*, i8** %34, align 8, !dbg !4182
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !4183
  %37 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %36, i32 0, i32 4, !dbg !4184
  %38 = load i8*, i8** %37, align 8, !dbg !4184
  %39 = icmp eq i8* %35, %38, !dbg !4185
  br i1 %39, label %40, label %142, !dbg !4186

40:                                               ; preds = %32
  %41 = load i32, i32* @x.95
  %42 = load i32, i32* @y.96
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %40, %originalBB1alteredBB
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !4187
  %50 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %49, i32 0, i32 9, !dbg !4188
  %51 = load i8*, i8** %50, align 8, !dbg !4188
  %52 = icmp eq i8* %51, null, !dbg !4189
  %53 = load i32, i32* @x.95
  %54 = load i32, i32* @y.96
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %52, label %61, label %142, !dbg !4190

61:                                               ; preds = %originalBBpart24
  call void @llvm.dbg.declare(metadata i64* %16, metadata !4191, metadata !DIExpression()), !dbg !4193
  %62 = load i32, i32* @x.95
  %63 = load i32, i32* @y.96
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %61, %originalBB6alteredBB
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !4194
  %71 = call i32 @fileno(%struct._IO_FILE* %70) #10, !dbg !4195
  %72 = load i64, i64* %14, align 8, !dbg !4196
  %73 = load i32, i32* %15, align 4, !dbg !4197
  %74 = call i64 @lseek(i32 %71, i64 %72, i32 %73) #10, !dbg !4198
  store i64 %74, i64* %16, align 8, !dbg !4193
  %75 = load i64, i64* %16, align 8, !dbg !4199
  %76 = trunc i64 %75 to i32
  %77 = mul i32 %76, -3
  %78 = add i32 %77, -4
  %79 = trunc i64 %72 to i32
  %80 = mul i32 %79, 2
  %81 = add i32 %80, -5
  %82 = mul i32 %78, %78
  %83 = mul i32 %82, 7
  %84 = sub i32 %83, 1
  %85 = mul i32 %81, %81
  %86 = sub i32 %84, %85
  %87 = mul i32 %86, -2
  %88 = add i32 %87, -1
  %89 = icmp ne i32 %88, -1
  %90 = load i32, i32* @x.95
  %91 = load i32, i32* @y.96
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart299, label %originalBB6alteredBB

originalBBpart299:                                ; preds = %originalBB6
  br i1 %89, label %115, label %98

98:                                               ; preds = %originalBBpart299
  %99 = load i32, i32* @x.95
  %100 = load i32, i32* @y.96
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %98, %originalBB101alteredBB
  %107 = load i32, i32* @x.95
  %108 = load i32, i32* @y.96
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  ret i32 0

115:                                              ; preds = %originalBBpart299
  %116 = icmp eq i64 %75, -1, !dbg !4201
  br i1 %116, label %117, label %118, !dbg !4202

117:                                              ; preds = %115
  store i32 -1, i32* %12, align 4, !dbg !4203
  br label %163, !dbg !4203

118:                                              ; preds = %115
  %119 = load i32, i32* @x.95
  %120 = load i32, i32* @y.96
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %118, %originalBB105alteredBB
  %127 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !4205
  %128 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %127, i32 0, i32 0, !dbg !4206
  %129 = load i32, i32* %128, align 8, !dbg !4207
  %130 = and i32 %129, -17, !dbg !4207
  store i32 %130, i32* %128, align 8, !dbg !4207
  %131 = load i64, i64* %16, align 8, !dbg !4208
  %132 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !4209
  %133 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %132, i32 0, i32 21, !dbg !4210
  store i64 %131, i64* %133, align 8, !dbg !4211
  store i32 0, i32* %12, align 4, !dbg !4212
  %134 = load i32, i32* @x.95
  %135 = load i32, i32* @y.96
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBBpart2113, label %originalBB105alteredBB

originalBBpart2113:                               ; preds = %originalBB105
  br label %163, !dbg !4212

142:                                              ; preds = %originalBBpart24, %32, %originalBBpart2
  %143 = load i32, i32* @x.95
  %144 = load i32, i32* @y.96
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBB115, label %originalBB115alteredBB

originalBB115:                                    ; preds = %142, %originalBB115alteredBB
  %151 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !4213
  %152 = load i64, i64* %14, align 8, !dbg !4214
  %153 = load i32, i32* %15, align 4, !dbg !4215
  %154 = call i32 @fseeko(%struct._IO_FILE* %151, i64 %152, i32 %153), !dbg !4216
  store i32 %154, i32* %12, align 4, !dbg !4217
  %155 = load i32, i32* @x.95
  %156 = load i32, i32* @y.96
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBBpart2117, label %originalBB115alteredBB

originalBBpart2117:                               ; preds = %originalBB115
  br label %163, !dbg !4217

163:                                              ; preds = %originalBBpart2117, %originalBBpart2113, %117
  %164 = load i32, i32* @x.95
  %165 = load i32, i32* @y.96
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBB119, label %originalBB119alteredBB

originalBB119:                                    ; preds = %163, %originalBB119alteredBB
  %172 = load i32, i32* %12, align 4, !dbg !4218
  %173 = load i32, i32* @x.95
  %174 = load i32, i32* @y.96
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBBpart2121, label %originalBB119alteredBB

originalBBpart2121:                               ; preds = %originalBB119
  ret i32 %172, !dbg !4218

originalBBalteredBB:                              ; preds = %originalBB, %3
  %181 = alloca i32, align 4
  %182 = alloca %struct._IO_FILE*, align 8
  %183 = alloca i64, align 8
  %184 = alloca i32, align 4
  %185 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %182, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %182, metadata !4219, metadata !DIExpression()), !dbg !4169
  store i64 %1, i64* %183, align 8
  call void @llvm.dbg.declare(metadata i64* %183, metadata !4258, metadata !DIExpression()), !dbg !4171
  store i32 %2, i32* %184, align 4
  call void @llvm.dbg.declare(metadata i32* %184, metadata !4259, metadata !DIExpression()), !dbg !4173
  %186 = load %struct._IO_FILE*, %struct._IO_FILE** %182, align 8, !dbg !4174
  %187 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %186, i32 0, i32 2, !dbg !4176
  %188 = load i8*, i8** %187, align 8, !dbg !4176
  %189 = load %struct._IO_FILE*, %struct._IO_FILE** %182, align 8, !dbg !4177
  %190 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %189, i32 0, i32 1, !dbg !4178
  %191 = load i8*, i8** %190, align 8, !dbg !4178
  %192 = icmp eq i8* %188, %191, !dbg !4179
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %40
  %193 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !4187
  %194 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %193, i32 0, i32 9, !dbg !4188
  %195 = load i8*, i8** %194, align 8, !dbg !4188
  %196 = icmp eq i8* %195, null, !dbg !4189
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %61
  %197 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !4194
  %198 = call i32 @fileno(%struct._IO_FILE* %197) #10, !dbg !4195
  %199 = load i64, i64* %14, align 8, !dbg !4196
  %200 = load i32, i32* %15, align 4, !dbg !4197
  %201 = call i64 @lseek(i32 %198, i64 %199, i32 %200) #10, !dbg !4198
  store i64 %201, i64* %16, align 8, !dbg !4193
  %202 = load i64, i64* %16, align 8, !dbg !4199
  %203 = trunc i64 %202 to i32
  %_ = shl i32 %203, -3
  %_7 = shl i32 %203, -3
  %_8 = sub i32 %203, -3
  %gen = mul i32 %_8, -3
  %_9 = sub i32 %203, -3
  %gen10 = mul i32 %_9, -3
  %_11 = sub i32 0, %203
  %gen12 = add i32 %_11, -3
  %_13 = sub i32 0, %203
  %gen14 = add i32 %_13, -3
  %_15 = sub i32 %203, -3
  %gen16 = mul i32 %_15, -3
  %204 = mul i32 %203, -3
  %_17 = shl i32 %204, -4
  %_18 = shl i32 %204, -4
  %_19 = shl i32 %204, -4
  %_20 = sub i32 %204, -4
  %gen21 = mul i32 %_20, -4
  %_22 = sub i32 %204, -4
  %gen23 = mul i32 %_22, -4
  %205 = add i32 %204, -4
  %206 = trunc i64 %199 to i32
  %_24 = sub i32 %206, 2
  %gen25 = mul i32 %_24, 2
  %_26 = sub i32 0, %206
  %gen27 = add i32 %_26, 2
  %_28 = shl i32 %206, 2
  %_29 = sub i32 %206, 2
  %gen30 = mul i32 %_29, 2
  %_31 = sub i32 %206, 2
  %gen32 = mul i32 %_31, 2
  %207 = mul i32 %206, 2
  %_33 = shl i32 %207, -5
  %_34 = sub i32 %207, -5
  %gen35 = mul i32 %_34, -5
  %_36 = sub i32 0, %207
  %gen37 = add i32 %_36, -5
  %_38 = shl i32 %207, -5
  %_39 = sub i32 0, %207
  %gen40 = add i32 %_39, -5
  %_41 = sub i32 %207, -5
  %gen42 = mul i32 %_41, -5
  %_43 = sub i32 %207, -5
  %gen44 = mul i32 %_43, -5
  %208 = add i32 %207, -5
  %_45 = sub i32 0, %205
  %gen46 = add i32 %_45, %205
  %_47 = sub i32 0, %205
  %gen48 = add i32 %_47, %205
  %_49 = shl i32 %205, %205
  %_50 = shl i32 %205, %205
  %_51 = sub i32 %205, %205
  %gen52 = mul i32 %_51, %205
  %_53 = sub i32 %205, %205
  %gen54 = mul i32 %_53, %205
  %_55 = shl i32 %205, %205
  %_56 = sub i32 0, %205
  %gen57 = add i32 %_56, %205
  %209 = mul i32 %205, %205
  %_58 = sub i32 %209, 7
  %gen59 = mul i32 %_58, 7
  %_60 = sub i32 %209, 7
  %gen61 = mul i32 %_60, 7
  %_62 = shl i32 %209, 7
  %210 = mul i32 %209, 7
  %211 = sub i32 %210, 1
  %_63 = sub i32 0, %208
  %gen64 = add i32 %_63, %208
  %_65 = sub i32 %208, %208
  %gen66 = mul i32 %_65, %208
  %212 = mul i32 %208, %208
  %_67 = sub i32 0, %211
  %gen68 = add i32 %_67, %212
  %_69 = sub i32 %211, %212
  %gen70 = mul i32 %_69, %212
  %_71 = sub i32 0, %211
  %gen72 = add i32 %_71, %212
  %_73 = shl i32 %211, %212
  %_74 = sub i32 %211, %212
  %gen75 = mul i32 %_74, %212
  %_76 = sub i32 %211, %212
  %gen77 = mul i32 %_76, %212
  %213 = sub i32 %211, %212
  %_78 = sub i32 0, %213
  %gen79 = add i32 %_78, -2
  %_80 = sub i32 0, %213
  %gen81 = add i32 %_80, -2
  %_82 = sub i32 0, %213
  %gen83 = add i32 %_82, -2
  %_84 = sub i32 0, %213
  %gen85 = add i32 %_84, -2
  %_86 = sub i32 0, %213
  %gen87 = add i32 %_86, -2
  %_88 = sub i32 %213, -2
  %gen89 = mul i32 %_88, -2
  %214 = mul i32 %213, -2
  %_90 = sub i32 0, %214
  %gen91 = add i32 %_90, -1
  %_92 = shl i32 %214, -1
  %_93 = shl i32 %214, -1
  %_94 = sub i32 %214, -1
  %gen95 = mul i32 %_94, -1
  %_96 = sub i32 0, %214
  %gen97 = add i32 %_96, -1
  %215 = add i32 %214, -1
  %216 = icmp ne i32 %215, -1
  br label %originalBB6

originalBB101alteredBB:                           ; preds = %originalBB101, %98
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %118
  %217 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !4205
  %218 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %217, i32 0, i32 0, !dbg !4206
  %219 = load i32, i32* %218, align 8, !dbg !4207
  %_106 = sub i32 0, %219
  %gen107 = add i32 %_106, -17
  %_108 = shl i32 %219, -17
  %_109 = shl i32 %219, -17
  %_110 = sub i32 %219, -17
  %gen111 = mul i32 %_110, -17
  %220 = and i32 %219, -17, !dbg !4207
  store i32 %220, i32* %218, align 8, !dbg !4207
  %221 = load i64, i64* %16, align 8, !dbg !4208
  %222 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !4209
  %223 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %222, i32 0, i32 21, !dbg !4210
  store i64 %221, i64* %223, align 8, !dbg !4211
  store i32 0, i32* %12, align 4, !dbg !4212
  br label %originalBB105

originalBB115alteredBB:                           ; preds = %originalBB115, %142
  %224 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !4213
  %225 = load i64, i64* %14, align 8, !dbg !4214
  %226 = load i32, i32* %15, align 4, !dbg !4215
  %227 = call i32 @fseeko(%struct._IO_FILE* %224, i64 %225, i32 %226), !dbg !4216
  store i32 %227, i32* %12, align 4, !dbg !4217
  br label %originalBB115

originalBB119alteredBB:                           ; preds = %originalBB119, %163
  %228 = load i32, i32* %12, align 4, !dbg !4218
  br label %originalBB119
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @c_tolower(i32) #4 !dbg !4260 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4264, metadata !DIExpression()), !dbg !4265
  %4 = load i32, i32* %3, align 4, !dbg !4266
  switch i32 %4, label %25 [
    i32 65, label %5
    i32 66, label %5
    i32 67, label %5
    i32 68, label %5
    i32 69, label %5
    i32 70, label %5
    i32 71, label %5
    i32 72, label %5
    i32 73, label %5
    i32 74, label %5
    i32 75, label %5
    i32 76, label %5
    i32 77, label %5
    i32 78, label %5
    i32 79, label %5
    i32 80, label %5
    i32 81, label %5
    i32 82, label %5
    i32 83, label %5
    i32 84, label %5
    i32 85, label %5
    i32 86, label %5
    i32 87, label %5
    i32 88, label %5
    i32 89, label %5
    i32 90, label %5
  ], !dbg !4267

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %6 = load i32, i32* @x.97
  %7 = load i32, i32* @y.98
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = load i32, i32* %3, align 4, !dbg !4268
  %15 = sub nsw i32 %14, 65, !dbg !4270
  %16 = add nsw i32 %15, 97, !dbg !4271
  store i32 %16, i32* %2, align 4, !dbg !4272
  %17 = load i32, i32* @x.97
  %18 = load i32, i32* @y.98
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %43, !dbg !4272

25:                                               ; preds = %1
  %26 = load i32, i32* @x.97
  %27 = load i32, i32* @y.98
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %25, %originalBB13alteredBB
  %34 = load i32, i32* %3, align 4, !dbg !4273
  store i32 %34, i32* %2, align 4, !dbg !4274
  %35 = load i32, i32* @x.97
  %36 = load i32, i32* @y.98
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  br label %43, !dbg !4274

43:                                               ; preds = %originalBBpart215, %originalBBpart2
  %44 = load i32, i32* %2, align 4, !dbg !4275
  ret i32 %44, !dbg !4275

originalBBalteredBB:                              ; preds = %originalBB, %5
  %45 = load i32, i32* %3, align 4, !dbg !4268
  %_ = sub i32 0, %45
  %gen = add i32 %_, 65
  %_1 = sub i32 0, %45
  %gen2 = add i32 %_1, 65
  %46 = sub nsw i32 %45, 65, !dbg !4270
  %_3 = shl i32 %46, 97
  %_4 = sub i32 %46, 97
  %gen5 = mul i32 %_4, 97
  %_6 = sub i32 0, %46
  %gen7 = add i32 %_6, 97
  %_8 = sub i32 0, %46
  %gen9 = add i32 %_8, 97
  %_10 = shl i32 %46, 97
  %_11 = sub i32 %46, 97
  %gen12 = mul i32 %_11, 97
  %47 = add nsw i32 %46, 97, !dbg !4271
  store i32 %47, i32* %2, align 4, !dbg !4272
  br label %originalBB

originalBB13alteredBB:                            ; preds = %originalBB13, %25
  %48 = load i32, i32* %3, align 4, !dbg !4273
  store i32 %48, i32* %2, align 4, !dbg !4274
  br label %originalBB13
}

define private i32 @controle(i8*, i32) {
  %3 = load i32, i32* @inVal0
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %25, label %5

5:                                                ; preds = %2
  %6 = load i32, i32* @x.99
  %7 = load i32, i32* @y.100
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  call void @srand(i32 %1)
  %14 = call i32 @rand()
  %15 = srem i32 %14, 50000
  %16 = add i32 %15, 2
  %17 = load i32, i32* @x.99
  %18 = load i32, i32* @y.100
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %16

25:                                               ; preds = %2
  %26 = getelementptr inbounds [3 x i8], [3 x i8]* @.compVal2, i32 0, i32 0
  %27 = call i32 @strcmp(i8* %26, i8* %0)
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %48

29:                                               ; preds = %25
  %30 = icmp eq i32 %1, 0
  br i1 %30, label %31, label %48

31:                                               ; preds = %29
  %32 = load i32, i32* @x.99
  %33 = load i32, i32* @y.100
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %31, %originalBB14alteredBB
  %40 = load i32, i32* @x.99
  %41 = load i32, i32* @y.100
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret i32 5

48:                                               ; preds = %29, %25
  %49 = load i32, i32* @x.99
  %50 = load i32, i32* @y.100
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %48, %originalBB18alteredBB
  %57 = getelementptr inbounds [1 x i8], [1 x i8]* @.compVal1, i32 0, i32 0
  %58 = call i32 @strcmp(i8* %57, i8* %0)
  %59 = icmp eq i32 %58, 0
  %60 = load i32, i32* @x.99
  %61 = load i32, i32* @y.100
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %59, label %68, label %71

68:                                               ; preds = %originalBBpart220
  %69 = icmp eq i32 %1, -1
  br i1 %69, label %70, label %71

70:                                               ; preds = %68
  ret i32 3

71:                                               ; preds = %68, %originalBBpart220
  %72 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal0, i32 0, i32 0
  %73 = call i32 @strcmp(i8* %72, i8* %0)
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %94

75:                                               ; preds = %71
  %76 = icmp eq i32 %1, 0
  br i1 %76, label %77, label %94

77:                                               ; preds = %75
  %78 = load i32, i32* @x.99
  %79 = load i32, i32* @y.100
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %77, %originalBB22alteredBB
  %86 = load i32, i32* @x.99
  %87 = load i32, i32* @y.100
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret i32 3

94:                                               ; preds = %75, %71
  %95 = load i32, i32* @x.99
  %96 = load i32, i32* @y.100
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %94, %originalBB26alteredBB
  %103 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal0, i32 0, i32 0
  %104 = call i32 @strcmp(i8* %103, i8* %0)
  %105 = icmp eq i32 %104, 0
  %106 = load i32, i32* @x.99
  %107 = load i32, i32* @y.100
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %105, label %114, label %133

114:                                              ; preds = %originalBBpart228
  %115 = load i32, i32* @x.99
  %116 = load i32, i32* @y.100
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %114, %originalBB30alteredBB
  %123 = icmp eq i32 %1, -1
  %124 = load i32, i32* @x.99
  %125 = load i32, i32* @y.100
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %123, label %132, label %133

132:                                              ; preds = %originalBBpart232
  ret i32 5

133:                                              ; preds = %originalBBpart232, %originalBBpart228
  call void @srand(i32 %1)
  %134 = call i32 @rand()
  %135 = srem i32 %134, 50000
  %136 = add i32 %135, 2
  ret i32 %136

originalBBalteredBB:                              ; preds = %originalBB, %5
  call void @srand(i32 %1)
  %137 = call i32 @rand()
  %_ = sub i32 %137, 50000
  %gen = mul i32 %_, 50000
  %_1 = sub i32 %137, 50000
  %gen2 = mul i32 %_1, 50000
  %_3 = sub i32 0, %137
  %gen4 = add i32 %_3, 50000
  %_5 = sub i32 %137, 50000
  %gen6 = mul i32 %_5, 50000
  %138 = srem i32 %137, 50000
  %_7 = shl i32 %138, 2
  %_8 = sub i32 %138, 2
  %gen9 = mul i32 %_8, 2
  %_10 = sub i32 0, %138
  %gen11 = add i32 %_10, 2
  %_12 = sub i32 0, %138
  %gen13 = add i32 %_12, 2
  %139 = add i32 %138, 2
  br label %originalBB

originalBB14alteredBB:                            ; preds = %originalBB14, %31
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %48
  %140 = getelementptr inbounds [1 x i8], [1 x i8]* @.compVal1, i32 0, i32 0
  %141 = call i32 @strcmp(i8* %140, i8* %0)
  %142 = icmp eq i32 %141, 0
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %77
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %94
  %143 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal0, i32 0, i32 0
  %144 = call i32 @strcmp(i8* %143, i8* %0)
  %145 = icmp eq i32 %144, 0
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %114
  %146 = icmp eq i32 %1, -1
  br label %originalBB30
}

declare void @srand(i32)

declare i32 @rand()

attributes #0 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { noreturn }
attributes #15 = { nounwind readnone }

!llvm.dbg.cu = !{!2, !27, !32, !41, !48, !54, !128, !130, !121, !133, !136, !138, !140, !143, !149, !151, !153, !155, !157, !159, !161, !163}
!llvm.ident = !{!165, !165, !165, !165, !165, !165, !165, !165, !165, !165, !165, !165, !165, !165, !165, !165, !165, !165, !165, !165, !165, !165}
!llvm.module.flags = !{!166, !167, !168, !169, !170}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "longopts", scope: !2, file: !3, line: 41, type: !10, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !9, nameTableKind: None)
!3 = !DIFile(filename: "src/pwd.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4 = !{}
!5 = !{!6, !7}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!7 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64)
!8 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!9 = !{!0}
!10 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 1280, elements: !23)
!11 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12)
!12 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !13, line: 50, size: 256, elements: !14)
!13 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/getopt_ext.h", directory: "")
!14 = !{!15, !18, !20, !22}
!15 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12, file: !13, line: 52, baseType: !16, size: 64)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64)
!17 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !12, file: !13, line: 55, baseType: !19, size: 32, offset: 64)
!19 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !12, file: !13, line: 56, baseType: !21, size: 64, offset: 128)
!21 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19, size: 64)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !12, file: !13, line: 57, baseType: !19, size: 32, offset: 192)
!23 = !{!24}
!24 = !DISubrange(count: 5)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "Version", scope: !27, file: !28, line: 2, type: !16, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !29, nameTableKind: None)
!28 = !DIFile(filename: "src/version.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!29 = !{!25}
!30 = !DIGlobalVariableExpression(var: !31, expr: !DIExpression())
!31 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !32, file: !37, line: 56, type: !38, isLocal: true, isDefinition: true)
!32 = distinct !DICompileUnit(language: DW_LANG_C99, file: !33, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !34, nameTableKind: None)
!33 = !DIFile(filename: "./lib/closeout.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!34 = !{!35, !30}
!35 = !DIGlobalVariableExpression(var: !36, expr: !DIExpression())
!36 = distinct !DIGlobalVariable(name: "file_name", scope: !32, file: !37, line: 46, type: !16, isLocal: true, isDefinition: true)
!37 = !DIFile(filename: "lib/closeout.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!38 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!39 = !DIGlobalVariableExpression(var: !40, expr: !DIExpression())
!40 = distinct !DIGlobalVariable(name: "exit_failure", scope: !41, file: !44, line: 24, type: !45, isLocal: false, isDefinition: true)
!41 = distinct !DICompileUnit(language: DW_LANG_C99, file: !42, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !43, nameTableKind: None)
!42 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!43 = !{!39}
!44 = !DIFile(filename: "lib/exitfail.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!45 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !19)
!46 = !DIGlobalVariableExpression(var: !47, expr: !DIExpression())
!47 = distinct !DIGlobalVariable(name: "program_name", scope: !48, file: !51, line: 33, type: !16, isLocal: false, isDefinition: true)
!48 = distinct !DICompileUnit(language: DW_LANG_C99, file: !49, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !50, nameTableKind: None)
!49 = !DIFile(filename: "./lib/progname.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!50 = !{!46}
!51 = !DIFile(filename: "lib/progname.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!52 = !DIGlobalVariableExpression(var: !53, expr: !DIExpression())
!53 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !54, file: !80, line: 116, type: !93, isLocal: true, isDefinition: true)
!54 = distinct !DICompileUnit(language: DW_LANG_C99, file: !55, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !56, retainedTypes: !72, globals: !77, nameTableKind: None)
!55 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!56 = !{!57}
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !58, line: 32, baseType: !59, size: 32, elements: !60)
!58 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!59 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!60 = !{!61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71}
!61 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!62 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!63 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!64 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!65 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!66 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!67 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!68 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!69 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!70 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!71 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!72 = !{!19, !73, !74}
!73 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!74 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !75, line: 46, baseType: !76)
!75 = !DIFile(filename: "/usr/lib/llvm-9/lib/clang/9.0.1/include/stddef.h", directory: "")
!76 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!77 = !{!78, !85, !91, !52, !103, !108, !115, !117}
!78 = !DIGlobalVariableExpression(var: !79, expr: !DIExpression())
!79 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !54, file: !80, line: 85, type: !81, isLocal: false, isDefinition: true)
!80 = !DIFile(filename: "lib/quotearg.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!81 = !DICompositeType(tag: DW_TAG_array_type, baseType: !82, size: 704, elements: !83)
!82 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16)
!83 = !{!84}
!84 = !DISubrange(count: 11)
!85 = !DIGlobalVariableExpression(var: !86, expr: !DIExpression())
!86 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !54, file: !80, line: 101, type: !87, isLocal: false, isDefinition: true)
!87 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 320, elements: !89)
!88 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !57)
!89 = !{!90}
!90 = !DISubrange(count: 10)
!91 = !DIGlobalVariableExpression(var: !92, expr: !DIExpression())
!92 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !54, file: !80, line: 1052, type: !93, isLocal: false, isDefinition: true)
!93 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !80, line: 65, size: 448, elements: !94)
!94 = !{!95, !96, !97, !101, !102}
!95 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !93, file: !80, line: 68, baseType: !57, size: 32)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !93, file: !80, line: 71, baseType: !19, size: 32, offset: 32)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !93, file: !80, line: 75, baseType: !98, size: 256, offset: 64)
!98 = !DICompositeType(tag: DW_TAG_array_type, baseType: !59, size: 256, elements: !99)
!99 = !{!100}
!100 = !DISubrange(count: 8)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !93, file: !80, line: 78, baseType: !16, size: 64, offset: 320)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !93, file: !80, line: 81, baseType: !16, size: 64, offset: 384)
!103 = !DIGlobalVariableExpression(var: !104, expr: !DIExpression())
!104 = distinct !DIGlobalVariable(name: "slot0", scope: !54, file: !80, line: 842, type: !105, isLocal: true, isDefinition: true)
!105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 2048, elements: !106)
!106 = !{!107}
!107 = !DISubrange(count: 256)
!108 = !DIGlobalVariableExpression(var: !109, expr: !DIExpression())
!109 = distinct !DIGlobalVariable(name: "slotvec", scope: !54, file: !80, line: 845, type: !110, isLocal: true, isDefinition: true)
!110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 64)
!111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !80, line: 834, size: 128, elements: !112)
!112 = !{!113, !114}
!113 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !111, file: !80, line: 836, baseType: !74, size: 64)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !111, file: !80, line: 837, baseType: !7, size: 64, offset: 64)
!115 = !DIGlobalVariableExpression(var: !116, expr: !DIExpression())
!116 = distinct !DIGlobalVariable(name: "nslots", scope: !54, file: !80, line: 843, type: !19, isLocal: true, isDefinition: true)
!117 = !DIGlobalVariableExpression(var: !118, expr: !DIExpression())
!118 = distinct !DIGlobalVariable(name: "slotvec0", scope: !54, file: !80, line: 844, type: !111, isLocal: true, isDefinition: true)
!119 = !DIGlobalVariableExpression(var: !120, expr: !DIExpression())
!120 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !121, file: !124, line: 26, type: !125, isLocal: false, isDefinition: true)
!121 = distinct !DICompileUnit(language: DW_LANG_C99, file: !122, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !123, nameTableKind: None)
!122 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!123 = !{!119}
!124 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 376, elements: !126)
!126 = !{!127}
!127 = !DISubrange(count: 47)
!128 = distinct !DICompileUnit(language: DW_LANG_C99, file: !129, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!129 = !DIFile(filename: "./lib/root-dev-ino.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!130 = distinct !DICompileUnit(language: DW_LANG_C99, file: !131, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !132, nameTableKind: None)
!131 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!132 = !{!6}
!133 = distinct !DICompileUnit(language: DW_LANG_C99, file: !134, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !135, nameTableKind: None)
!134 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!135 = !{!74, !7, !6}
!136 = distinct !DICompileUnit(language: DW_LANG_C99, file: !137, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!137 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!138 = distinct !DICompileUnit(language: DW_LANG_C99, file: !139, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!139 = !DIFile(filename: "./lib/xgetcwd.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!140 = distinct !DICompileUnit(language: DW_LANG_C99, file: !141, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !142, nameTableKind: None)
!141 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!142 = !{!74}
!143 = distinct !DICompileUnit(language: DW_LANG_C99, file: !144, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !145, nameTableKind: None)
!144 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!145 = !{!146}
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 64)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !148)
!148 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!149 = distinct !DICompileUnit(language: DW_LANG_C99, file: !150, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!150 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!151 = distinct !DICompileUnit(language: DW_LANG_C99, file: !152, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!152 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!153 = distinct !DICompileUnit(language: DW_LANG_C99, file: !154, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !132, nameTableKind: None)
!154 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!155 = distinct !DICompileUnit(language: DW_LANG_C99, file: !156, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !132, nameTableKind: None)
!156 = !DIFile(filename: "./lib/setlocale_null.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!157 = distinct !DICompileUnit(language: DW_LANG_C99, file: !158, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!158 = !DIFile(filename: "./lib/fclose.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!159 = distinct !DICompileUnit(language: DW_LANG_C99, file: !160, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !132, nameTableKind: None)
!160 = !DIFile(filename: "./lib/fflush.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!161 = distinct !DICompileUnit(language: DW_LANG_C99, file: !162, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !132, nameTableKind: None)
!162 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!163 = distinct !DICompileUnit(language: DW_LANG_C99, file: !164, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!164 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!165 = !{!"clang version 9.0.1-12 "}
!166 = !{i32 2, !"Dwarf Version", i32 4}
!167 = !{i32 2, !"Debug Info Version", i32 3}
!168 = !{i32 1, !"wchar_size", i32 4}
!169 = !{i32 1, !"ThinLTO", i32 0}
!170 = !{i32 1, !"EnableSplitLTOUnit", i32 0}
!171 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 51, type: !172, scopeLine: 52, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!172 = !DISubroutineType(types: !173)
!173 = !{null, !19}
!174 = !DILocalVariable(name: "status", arg: 1, scope: !171, file: !3, line: 51, type: !19)
!175 = !DILocation(line: 51, column: 12, scope: !171)
!176 = !DILocation(line: 53, column: 7, scope: !177)
!177 = distinct !DILexicalBlock(scope: !171, file: !3, line: 53, column: 7)
!178 = !DILocation(line: 53, column: 14, scope: !177)
!179 = !DILocation(line: 53, column: 7, scope: !171)
!180 = !DILocation(line: 54, column: 5, scope: !177)
!181 = !DILocation(line: 54, column: 5, scope: !182)
!182 = distinct !DILexicalBlock(scope: !177, file: !3, line: 54, column: 5)
!183 = !DILocation(line: 57, column: 15, scope: !184)
!184 = distinct !DILexicalBlock(scope: !177, file: !3, line: 56, column: 5)
!185 = !DILocation(line: 57, column: 45, scope: !184)
!186 = !DILocation(line: 57, column: 7, scope: !184)
!187 = !DILocation(line: 58, column: 7, scope: !184)
!188 = !DILocation(line: 62, column: 7, scope: !184)
!189 = !DILocation(line: 66, column: 7, scope: !184)
!190 = !DILocation(line: 67, column: 7, scope: !184)
!191 = !DILocation(line: 68, column: 7, scope: !184)
!192 = !DILocation(line: 71, column: 15, scope: !184)
!193 = !DILocation(line: 71, column: 7, scope: !184)
!194 = !DILocation(line: 72, column: 7, scope: !184)
!195 = !DILocation(line: 74, column: 9, scope: !171)
!196 = !DILocation(line: 74, column: 3, scope: !171)
!197 = !DILocalVariable(name: "status", arg: 1, scope: !198, file: !3, line: 51, type: !19)
!198 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 51, type: !172, scopeLine: 52, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !199, retainedNodes: !4)
!199 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !200, nameTableKind: None)
!200 = !{!201}
!201 = !DIGlobalVariableExpression(var: !202, expr: !DIExpression())
!202 = distinct !DIGlobalVariable(name: "longopts", scope: !199, file: !3, line: 41, type: !203, isLocal: true, isDefinition: true)
!203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 1280, elements: !23)
!204 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !205)
!205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !13, line: 50, size: 256, elements: !206)
!206 = !{!207, !208, !209, !210}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !205, file: !13, line: 52, baseType: !16, size: 64)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !205, file: !13, line: 55, baseType: !19, size: 32, offset: 64)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !205, file: !13, line: 56, baseType: !21, size: 64, offset: 128)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !205, file: !13, line: 57, baseType: !19, size: 32, offset: 192)
!211 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !212, file: !212, line: 634, type: !213, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!212 = !DIFile(filename: "src/system.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!213 = !DISubroutineType(types: !214)
!214 = !{null, !16}
!215 = !DILocalVariable(name: "program", arg: 1, scope: !211, file: !212, line: 634, type: !16)
!216 = !DILocation(line: 634, column: 34, scope: !211)
!217 = !DILocalVariable(name: "infomap", scope: !211, file: !212, line: 636, type: !218)
!218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !219, size: 896, elements: !224)
!219 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !220)
!220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !211, file: !212, line: 636, size: 128, elements: !221)
!221 = !{!222, !223}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !220, file: !212, line: 636, baseType: !16, size: 64)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !220, file: !212, line: 636, baseType: !16, size: 64, offset: 64)
!224 = !{!225}
!225 = !DISubrange(count: 7)
!226 = !DILocation(line: 636, column: 67, scope: !211)
!227 = !DILocalVariable(name: "node", scope: !211, file: !212, line: 646, type: !16)
!228 = !DILocation(line: 646, column: 15, scope: !211)
!229 = !DILocation(line: 646, column: 22, scope: !211)
!230 = !DILocalVariable(name: "map_prog", scope: !211, file: !212, line: 647, type: !231)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64)
!232 = !DILocation(line: 647, column: 25, scope: !211)
!233 = !DILocation(line: 647, column: 36, scope: !211)
!234 = !DILocation(line: 649, column: 3, scope: !211)
!235 = !DILocation(line: 649, column: 10, scope: !211)
!236 = !DILocation(line: 649, column: 20, scope: !211)
!237 = !DILocation(line: 649, column: 28, scope: !211)
!238 = !DILocation(line: 649, column: 33, scope: !211)
!239 = !DILocation(line: 649, column: 31, scope: !211)
!240 = !DILocation(line: 0, scope: !211)
!241 = !DILocation(line: 650, column: 13, scope: !211)
!242 = distinct !{!242, !234, !241}
!243 = !DILocation(line: 652, column: 7, scope: !244)
!244 = distinct !DILexicalBlock(scope: !211, file: !212, line: 652, column: 7)
!245 = !DILocation(line: 652, column: 17, scope: !244)
!246 = !DILocation(line: 652, column: 7, scope: !211)
!247 = !DILocation(line: 653, column: 12, scope: !244)
!248 = !DILocation(line: 653, column: 22, scope: !244)
!249 = !DILocation(line: 653, column: 10, scope: !244)
!250 = !DILocation(line: 653, column: 5, scope: !244)
!251 = !DILocation(line: 655, column: 11, scope: !211)
!252 = !DILocation(line: 655, column: 3, scope: !211)
!253 = !DILocalVariable(name: "lc_messages", scope: !211, file: !212, line: 659, type: !16)
!254 = !DILocation(line: 659, column: 15, scope: !211)
!255 = !DILocation(line: 659, column: 29, scope: !211)
!256 = !DILocation(line: 660, column: 7, scope: !257)
!257 = distinct !DILexicalBlock(scope: !211, file: !212, line: 660, column: 7)
!258 = !DILocation(line: 660, column: 19, scope: !257)
!259 = !DILocation(line: 660, column: 22, scope: !257)
!260 = !DILocation(line: 660, column: 7, scope: !211)
!261 = !DILocation(line: 666, column: 7, scope: !262)
!262 = distinct !DILexicalBlock(scope: !257, file: !212, line: 661, column: 5)
!263 = !DILocation(line: 668, column: 5, scope: !262)
!264 = !DILocation(line: 669, column: 11, scope: !211)
!265 = !DILocation(line: 670, column: 24, scope: !211)
!266 = !DILocation(line: 669, column: 3, scope: !211)
!267 = !DILocation(line: 671, column: 11, scope: !211)
!268 = !DILocation(line: 672, column: 11, scope: !211)
!269 = !DILocation(line: 672, column: 17, scope: !211)
!270 = !DILocation(line: 672, column: 25, scope: !211)
!271 = !DILocation(line: 672, column: 22, scope: !211)
!272 = !DILocation(line: 671, column: 3, scope: !211)
!273 = !DILocation(line: 673, column: 1, scope: !211)
!274 = !DILocalVariable(name: "lc_messages", scope: !275, file: !212, line: 659, type: !16)
!275 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !212, file: !212, line: 634, type: !213, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !276, retainedNodes: !4)
!276 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !277, nameTableKind: None)
!277 = !{!278}
!278 = !DIGlobalVariableExpression(var: !279, expr: !DIExpression())
!279 = distinct !DIGlobalVariable(name: "longopts", scope: !276, file: !3, line: 41, type: !280, isLocal: true, isDefinition: true)
!280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, size: 1280, elements: !23)
!281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !282)
!282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !13, line: 50, size: 256, elements: !283)
!283 = !{!284, !285, !286, !287}
!284 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !282, file: !13, line: 52, baseType: !16, size: 64)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !282, file: !13, line: 55, baseType: !19, size: 32, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !282, file: !13, line: 56, baseType: !21, size: 64, offset: 128)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !282, file: !13, line: 57, baseType: !19, size: 32, offset: 192)
!288 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 327, type: !289, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!289 = !DISubroutineType(types: !290)
!290 = !{!19, !19, !291}
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!292 = !DILocalVariable(name: "argc", arg: 1, scope: !288, file: !3, line: 327, type: !19)
!293 = !DILocation(line: 327, column: 11, scope: !288)
!294 = !DILocalVariable(name: "argv", arg: 2, scope: !288, file: !3, line: 327, type: !291)
!295 = !DILocation(line: 327, column: 24, scope: !288)
!296 = !DILocalVariable(name: "wd", scope: !288, file: !3, line: 329, type: !7)
!297 = !DILocation(line: 329, column: 9, scope: !288)
!298 = !DILocalVariable(name: "logical", scope: !288, file: !3, line: 333, type: !38)
!299 = !DILocation(line: 333, column: 8, scope: !288)
!300 = !DILocation(line: 333, column: 19, scope: !288)
!301 = !DILocation(line: 333, column: 46, scope: !288)
!302 = !DILocation(line: 336, column: 21, scope: !288)
!303 = !DILocation(line: 336, column: 3, scope: !288)
!304 = !DILocation(line: 337, column: 3, scope: !288)
!305 = !DILocation(line: 338, column: 3, scope: !288)
!306 = !DILocation(line: 339, column: 3, scope: !288)
!307 = !DILocation(line: 341, column: 3, scope: !288)
!308 = !DILocation(line: 343, column: 3, scope: !288)
!309 = !DILocalVariable(name: "c", scope: !310, file: !3, line: 345, type: !19)
!310 = distinct !DILexicalBlock(scope: !288, file: !3, line: 344, column: 5)
!311 = !DILocation(line: 345, column: 11, scope: !310)
!312 = !DILocation(line: 345, column: 28, scope: !310)
!313 = !DILocation(line: 345, column: 34, scope: !310)
!314 = !DILocation(line: 345, column: 15, scope: !310)
!315 = !DILocation(line: 346, column: 11, scope: !316)
!316 = distinct !DILexicalBlock(scope: !310, file: !3, line: 346, column: 11)
!317 = !DILocation(line: 346, column: 13, scope: !316)
!318 = !DILocation(line: 347, column: 9, scope: !316)
!319 = !DILocation(line: 348, column: 15, scope: !310)
!320 = !DILocation(line: 348, column: 7, scope: !310)
!321 = !DILocation(line: 351, column: 19, scope: !322)
!322 = distinct !DILexicalBlock(scope: !310, file: !3, line: 349, column: 9)
!323 = !DILocation(line: 352, column: 11, scope: !322)
!324 = !DILocation(line: 354, column: 19, scope: !322)
!325 = !DILocation(line: 355, column: 11, scope: !322)
!326 = !DILocation(line: 357, column: 9, scope: !322)
!327 = !DILocation(line: 359, column: 9, scope: !322)
!328 = !DILocation(line: 362, column: 11, scope: !322)
!329 = distinct !{!329, !308, !330}
!330 = !DILocation(line: 364, column: 5, scope: !288)
!331 = !DILocation(line: 366, column: 7, scope: !332)
!332 = distinct !DILexicalBlock(scope: !288, file: !3, line: 366, column: 7)
!333 = !DILocation(line: 366, column: 16, scope: !332)
!334 = !DILocation(line: 366, column: 14, scope: !332)
!335 = !DILocation(line: 366, column: 7, scope: !288)
!336 = !DILocation(line: 367, column: 18, scope: !332)
!337 = !DILocation(line: 367, column: 5, scope: !332)
!338 = !DILocation(line: 369, column: 7, scope: !339)
!339 = distinct !DILexicalBlock(scope: !288, file: !3, line: 369, column: 7)
!340 = !DILocation(line: 369, column: 7, scope: !288)
!341 = !DILocation(line: 371, column: 12, scope: !342)
!342 = distinct !DILexicalBlock(scope: !339, file: !3, line: 370, column: 5)
!343 = !DILocation(line: 371, column: 10, scope: !342)
!344 = !DILocation(line: 372, column: 11, scope: !345)
!345 = distinct !DILexicalBlock(scope: !342, file: !3, line: 372, column: 11)
!346 = !DILocation(line: 372, column: 11, scope: !342)
!347 = !DILocation(line: 374, column: 17, scope: !348)
!348 = distinct !DILexicalBlock(scope: !345, file: !3, line: 373, column: 9)
!349 = !DILocation(line: 374, column: 11, scope: !348)
!350 = !DILocation(line: 375, column: 11, scope: !348)
!351 = !DILocation(line: 377, column: 5, scope: !342)
!352 = !DILocation(line: 379, column: 8, scope: !288)
!353 = !DILocation(line: 379, column: 6, scope: !288)
!354 = !DILocation(line: 380, column: 7, scope: !355)
!355 = distinct !DILexicalBlock(scope: !288, file: !3, line: 380, column: 7)
!356 = !DILocation(line: 380, column: 10, scope: !355)
!357 = !DILocation(line: 380, column: 7, scope: !288)
!358 = !DILocation(line: 382, column: 13, scope: !359)
!359 = distinct !DILexicalBlock(scope: !355, file: !3, line: 381, column: 5)
!360 = !DILocation(line: 382, column: 7, scope: !359)
!361 = !DILocation(line: 383, column: 13, scope: !359)
!362 = !DILocation(line: 383, column: 7, scope: !359)
!363 = !DILocation(line: 384, column: 5, scope: !359)
!364 = !DILocalVariable(name: "file_name", scope: !365, file: !3, line: 387, type: !366)
!365 = distinct !DILexicalBlock(scope: !355, file: !3, line: 386, column: 5)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_name", file: !3, line: 34, size: 192, elements: !368)
!368 = !{!369, !370, !371}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !367, file: !3, line: 36, baseType: !7, size: 64)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "n_alloc", scope: !367, file: !3, line: 37, baseType: !74, size: 64, offset: 64)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !367, file: !3, line: 38, baseType: !7, size: 64, offset: 128)
!372 = !DILocation(line: 387, column: 25, scope: !365)
!373 = !DILocation(line: 387, column: 37, scope: !365)
!374 = !DILocation(line: 388, column: 22, scope: !365)
!375 = !DILocation(line: 388, column: 7, scope: !365)
!376 = !DILocation(line: 389, column: 13, scope: !365)
!377 = !DILocation(line: 389, column: 24, scope: !365)
!378 = !DILocation(line: 389, column: 7, scope: !365)
!379 = !DILocation(line: 390, column: 23, scope: !365)
!380 = !DILocation(line: 390, column: 7, scope: !365)
!381 = !DILocation(line: 393, column: 3, scope: !288)
!382 = !DILocation(line: 394, column: 1, scope: !288)
!383 = !DILocalVariable(name: "argc", arg: 1, scope: !384, file: !3, line: 327, type: !19)
!384 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 327, type: !289, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !385, retainedNodes: !4)
!385 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !386, nameTableKind: None)
!386 = !{!387}
!387 = !DIGlobalVariableExpression(var: !388, expr: !DIExpression())
!388 = distinct !DIGlobalVariable(name: "longopts", scope: !385, file: !3, line: 41, type: !389, isLocal: true, isDefinition: true)
!389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !390, size: 1280, elements: !23)
!390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !391)
!391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !13, line: 50, size: 256, elements: !392)
!392 = !{!393, !394, !395, !396}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !391, file: !13, line: 52, baseType: !16, size: 64)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !391, file: !13, line: 55, baseType: !19, size: 32, offset: 64)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !391, file: !13, line: 56, baseType: !21, size: 64, offset: 128)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !391, file: !13, line: 57, baseType: !19, size: 32, offset: 192)
!397 = !DILocalVariable(name: "argv", arg: 2, scope: !384, file: !3, line: 327, type: !291)
!398 = !DILocalVariable(name: "wd", scope: !384, file: !3, line: 329, type: !7)
!399 = !DILocalVariable(name: "logical", scope: !384, file: !3, line: 333, type: !38)
!400 = distinct !DISubprogram(name: "logical_getcwd", scope: !3, file: !3, line: 300, type: !401, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!401 = !DISubroutineType(types: !402)
!402 = !{!7}
!403 = !DILocalVariable(name: "st1", scope: !400, file: !3, line: 302, type: !404)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !405, line: 46, size: 1152, elements: !406)
!405 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!406 = !{!407, !410, !412, !414, !416, !418, !420, !421, !422, !425, !427, !429, !437, !438, !439}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !404, file: !405, line: 48, baseType: !408, size: 64)
!408 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !409, line: 145, baseType: !76)
!409 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!410 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !404, file: !405, line: 53, baseType: !411, size: 64, offset: 64)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !409, line: 148, baseType: !76)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !404, file: !405, line: 61, baseType: !413, size: 64, offset: 128)
!413 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !409, line: 151, baseType: !76)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !404, file: !405, line: 62, baseType: !415, size: 32, offset: 192)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !409, line: 150, baseType: !59)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !404, file: !405, line: 64, baseType: !417, size: 32, offset: 224)
!417 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !409, line: 146, baseType: !59)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !404, file: !405, line: 65, baseType: !419, size: 32, offset: 256)
!419 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !409, line: 147, baseType: !59)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !404, file: !405, line: 67, baseType: !19, size: 32, offset: 288)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !404, file: !405, line: 69, baseType: !408, size: 64, offset: 320)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !404, file: !405, line: 74, baseType: !423, size: 64, offset: 384)
!423 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !409, line: 152, baseType: !424)
!424 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !404, file: !405, line: 78, baseType: !426, size: 64, offset: 448)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !409, line: 174, baseType: !424)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !404, file: !405, line: 80, baseType: !428, size: 64, offset: 512)
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !409, line: 179, baseType: !424)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !404, file: !405, line: 91, baseType: !430, size: 128, offset: 576)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !431, line: 10, size: 128, elements: !432)
!431 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!432 = !{!433, !435}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !430, file: !431, line: 12, baseType: !434, size: 64)
!434 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !409, line: 160, baseType: !424)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !430, file: !431, line: 16, baseType: !436, size: 64, offset: 64)
!436 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !409, line: 196, baseType: !424)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !404, file: !405, line: 92, baseType: !430, size: 128, offset: 704)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !404, file: !405, line: 93, baseType: !430, size: 128, offset: 832)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !404, file: !405, line: 106, baseType: !440, size: 192, offset: 960)
!440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !436, size: 192, elements: !441)
!441 = !{!442}
!442 = !DISubrange(count: 3)
!443 = !DILocation(line: 302, column: 15, scope: !400)
!444 = !DILocalVariable(name: "st2", scope: !400, file: !3, line: 303, type: !404)
!445 = !DILocation(line: 303, column: 15, scope: !400)
!446 = !DILocalVariable(name: "wd", scope: !400, file: !3, line: 304, type: !7)
!447 = !DILocation(line: 304, column: 9, scope: !400)
!448 = !DILocation(line: 304, column: 14, scope: !400)
!449 = !DILocalVariable(name: "p", scope: !400, file: !3, line: 305, type: !7)
!450 = !DILocation(line: 305, column: 9, scope: !400)
!451 = !DILocation(line: 308, column: 8, scope: !452)
!452 = distinct !DILexicalBlock(scope: !400, file: !3, line: 308, column: 7)
!453 = !DILocation(line: 308, column: 11, scope: !452)
!454 = !DILocation(line: 308, column: 14, scope: !452)
!455 = !DILocation(line: 308, column: 20, scope: !452)
!456 = !DILocation(line: 308, column: 7, scope: !400)
!457 = !DILocation(line: 309, column: 5, scope: !452)
!458 = !DILocation(line: 310, column: 7, scope: !400)
!459 = !DILocation(line: 310, column: 5, scope: !400)
!460 = !DILocation(line: 311, column: 3, scope: !400)
!461 = !DILocation(line: 311, column: 23, scope: !400)
!462 = !DILocation(line: 311, column: 15, scope: !400)
!463 = !DILocation(line: 311, column: 13, scope: !400)
!464 = !DILocation(line: 313, column: 12, scope: !465)
!465 = distinct !DILexicalBlock(scope: !466, file: !3, line: 313, column: 11)
!466 = distinct !DILexicalBlock(scope: !400, file: !3, line: 312, column: 5)
!467 = !DILocation(line: 313, column: 17, scope: !465)
!468 = !DILocation(line: 313, column: 20, scope: !465)
!469 = !DILocation(line: 313, column: 25, scope: !465)
!470 = !DILocation(line: 314, column: 11, scope: !465)
!471 = !DILocation(line: 314, column: 15, scope: !465)
!472 = !DILocation(line: 314, column: 20, scope: !465)
!473 = !DILocation(line: 314, column: 27, scope: !465)
!474 = !DILocation(line: 314, column: 32, scope: !465)
!475 = !DILocation(line: 314, column: 37, scope: !465)
!476 = !DILocation(line: 314, column: 40, scope: !465)
!477 = !DILocation(line: 314, column: 45, scope: !465)
!478 = !DILocation(line: 313, column: 11, scope: !466)
!479 = !DILocation(line: 315, column: 9, scope: !465)
!480 = !DILocation(line: 316, column: 8, scope: !466)
!481 = distinct !{!481, !460, !482}
!482 = !DILocation(line: 317, column: 5, scope: !400)
!483 = !DILocation(line: 320, column: 13, scope: !484)
!484 = distinct !DILexicalBlock(scope: !400, file: !3, line: 320, column: 7)
!485 = !DILocation(line: 320, column: 7, scope: !484)
!486 = !DILocation(line: 320, column: 23, scope: !484)
!487 = !DILocation(line: 320, column: 31, scope: !484)
!488 = !DILocation(line: 320, column: 48, scope: !484)
!489 = !DILocation(line: 320, column: 56, scope: !484)
!490 = !DILocation(line: 320, column: 7, scope: !400)
!491 = !DILocation(line: 321, column: 12, scope: !484)
!492 = !DILocation(line: 321, column: 5, scope: !484)
!493 = !DILocation(line: 322, column: 3, scope: !400)
!494 = !DILocation(line: 323, column: 1, scope: !400)
!495 = !DILocalVariable(name: "st1", scope: !496, file: !3, line: 302, type: !509)
!496 = distinct !DISubprogram(name: "logical_getcwd", scope: !3, file: !3, line: 300, type: !401, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !497, retainedNodes: !4)
!497 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !498, nameTableKind: None)
!498 = !{!499}
!499 = !DIGlobalVariableExpression(var: !500, expr: !DIExpression())
!500 = distinct !DIGlobalVariable(name: "longopts", scope: !497, file: !3, line: 41, type: !501, isLocal: true, isDefinition: true)
!501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !502, size: 1280, elements: !23)
!502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !503)
!503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !13, line: 50, size: 256, elements: !504)
!504 = !{!505, !506, !507, !508}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !503, file: !13, line: 52, baseType: !16, size: 64)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !503, file: !13, line: 55, baseType: !19, size: 32, offset: 64)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !503, file: !13, line: 56, baseType: !21, size: 64, offset: 128)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !503, file: !13, line: 57, baseType: !19, size: 32, offset: 192)
!509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !405, line: 46, size: 1152, elements: !510)
!510 = !{!511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !527, !528, !529}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !509, file: !405, line: 48, baseType: !408, size: 64)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !509, file: !405, line: 53, baseType: !411, size: 64, offset: 64)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !509, file: !405, line: 61, baseType: !413, size: 64, offset: 128)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !509, file: !405, line: 62, baseType: !415, size: 32, offset: 192)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !509, file: !405, line: 64, baseType: !417, size: 32, offset: 224)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !509, file: !405, line: 65, baseType: !419, size: 32, offset: 256)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !509, file: !405, line: 67, baseType: !19, size: 32, offset: 288)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !509, file: !405, line: 69, baseType: !408, size: 64, offset: 320)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !509, file: !405, line: 74, baseType: !423, size: 64, offset: 384)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !509, file: !405, line: 78, baseType: !426, size: 64, offset: 448)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !509, file: !405, line: 80, baseType: !428, size: 64, offset: 512)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !509, file: !405, line: 91, baseType: !523, size: 128, offset: 576)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !431, line: 10, size: 128, elements: !524)
!524 = !{!525, !526}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !523, file: !431, line: 12, baseType: !434, size: 64)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !523, file: !431, line: 16, baseType: !436, size: 64, offset: 64)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !509, file: !405, line: 92, baseType: !523, size: 128, offset: 704)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !509, file: !405, line: 93, baseType: !523, size: 128, offset: 832)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !509, file: !405, line: 106, baseType: !440, size: 192, offset: 960)
!530 = !DILocalVariable(name: "st2", scope: !496, file: !3, line: 303, type: !509)
!531 = !DILocalVariable(name: "wd", scope: !496, file: !3, line: 304, type: !7)
!532 = !DILocalVariable(name: "p", scope: !496, file: !3, line: 305, type: !7)
!533 = distinct !DISubprogram(name: "file_name_init", scope: !3, file: !3, line: 85, type: !534, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!534 = !DISubroutineType(types: !535)
!535 = !{!366}
!536 = !DILocalVariable(name: "p", scope: !533, file: !3, line: 87, type: !366)
!537 = !DILocation(line: 87, column: 21, scope: !533)
!538 = !DILocation(line: 87, column: 25, scope: !533)
!539 = !DILocation(line: 91, column: 3, scope: !533)
!540 = !DILocation(line: 91, column: 6, scope: !533)
!541 = !DILocation(line: 91, column: 14, scope: !533)
!542 = !DILocation(line: 93, column: 21, scope: !533)
!543 = !DILocation(line: 93, column: 24, scope: !533)
!544 = !DILocation(line: 93, column: 12, scope: !533)
!545 = !DILocation(line: 93, column: 3, scope: !533)
!546 = !DILocation(line: 93, column: 6, scope: !533)
!547 = !DILocation(line: 93, column: 10, scope: !533)
!548 = !DILocation(line: 94, column: 14, scope: !533)
!549 = !DILocation(line: 94, column: 17, scope: !533)
!550 = !DILocation(line: 94, column: 24, scope: !533)
!551 = !DILocation(line: 94, column: 27, scope: !533)
!552 = !DILocation(line: 94, column: 35, scope: !533)
!553 = !DILocation(line: 94, column: 21, scope: !533)
!554 = !DILocation(line: 94, column: 3, scope: !533)
!555 = !DILocation(line: 94, column: 6, scope: !533)
!556 = !DILocation(line: 94, column: 12, scope: !533)
!557 = !DILocation(line: 95, column: 3, scope: !533)
!558 = !DILocation(line: 95, column: 6, scope: !533)
!559 = !DILocation(line: 95, column: 15, scope: !533)
!560 = !DILocation(line: 96, column: 10, scope: !533)
!561 = !DILocation(line: 96, column: 3, scope: !533)
!562 = !DILocalVariable(name: "p", scope: !563, file: !3, line: 87, type: !566)
!563 = distinct !DISubprogram(name: "file_name_init", scope: !3, file: !3, line: 85, type: !564, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !572, retainedNodes: !4)
!564 = !DISubroutineType(types: !565)
!565 = !{!566}
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_name", file: !3, line: 34, size: 192, elements: !568)
!568 = !{!569, !570, !571}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !567, file: !3, line: 36, baseType: !7, size: 64)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "n_alloc", scope: !567, file: !3, line: 37, baseType: !74, size: 64, offset: 64)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !567, file: !3, line: 38, baseType: !7, size: 64, offset: 128)
!572 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !573, nameTableKind: None)
!573 = !{!574}
!574 = !DIGlobalVariableExpression(var: !575, expr: !DIExpression())
!575 = distinct !DIGlobalVariable(name: "longopts", scope: !572, file: !3, line: 41, type: !576, isLocal: true, isDefinition: true)
!576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !577, size: 1280, elements: !23)
!577 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !578)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !13, line: 50, size: 256, elements: !579)
!579 = !{!580, !581, !582, !583}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !578, file: !13, line: 52, baseType: !16, size: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !578, file: !13, line: 55, baseType: !19, size: 32, offset: 64)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !578, file: !13, line: 56, baseType: !21, size: 64, offset: 128)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !578, file: !13, line: 57, baseType: !19, size: 32, offset: 192)
!584 = distinct !DISubprogram(name: "robust_getcwd", scope: !3, file: !3, line: 268, type: !585, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!585 = !DISubroutineType(types: !586)
!586 = !{null, !366}
!587 = !DILocalVariable(name: "file_name", arg: 1, scope: !584, file: !3, line: 268, type: !366)
!588 = !DILocation(line: 268, column: 34, scope: !584)
!589 = !DILocalVariable(name: "height", scope: !584, file: !3, line: 270, type: !74)
!590 = !DILocation(line: 270, column: 10, scope: !584)
!591 = !DILocalVariable(name: "dev_ino_buf", scope: !584, file: !3, line: 271, type: !592)
!592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !593, line: 7, size: 128, elements: !594)
!593 = !DIFile(filename: "./lib/dev-ino.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!594 = !{!595, !598}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !592, file: !593, line: 9, baseType: !596, size: 64)
!596 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !597, line: 47, baseType: !411)
!597 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "")
!598 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !592, file: !593, line: 10, baseType: !599, size: 64, offset: 64)
!599 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !597, line: 59, baseType: !408)
!600 = !DILocation(line: 271, column: 18, scope: !584)
!601 = !DILocalVariable(name: "root_dev_ino", scope: !584, file: !3, line: 272, type: !602)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 64)
!603 = !DILocation(line: 272, column: 19, scope: !584)
!604 = !DILocation(line: 272, column: 34, scope: !584)
!605 = !DILocalVariable(name: "dot_sb", scope: !584, file: !3, line: 273, type: !404)
!606 = !DILocation(line: 273, column: 15, scope: !584)
!607 = !DILocation(line: 275, column: 7, scope: !608)
!608 = distinct !DILexicalBlock(scope: !584, file: !3, line: 275, column: 7)
!609 = !DILocation(line: 275, column: 20, scope: !608)
!610 = !DILocation(line: 275, column: 7, scope: !584)
!611 = !DILocation(line: 276, column: 5, scope: !608)
!612 = !DILocation(line: 279, column: 7, scope: !613)
!613 = distinct !DILexicalBlock(scope: !584, file: !3, line: 279, column: 7)
!614 = !DILocation(line: 279, column: 27, scope: !613)
!615 = !DILocation(line: 279, column: 7, scope: !584)
!616 = !DILocation(line: 280, column: 5, scope: !613)
!617 = !DILocation(line: 282, column: 3, scope: !584)
!618 = !DILocation(line: 285, column: 11, scope: !619)
!619 = distinct !DILexicalBlock(scope: !620, file: !3, line: 285, column: 11)
!620 = distinct !DILexicalBlock(scope: !584, file: !3, line: 283, column: 5)
!621 = !DILocation(line: 285, column: 11, scope: !620)
!622 = !DILocation(line: 286, column: 9, scope: !619)
!623 = !DILocation(line: 288, column: 32, scope: !620)
!624 = !DILocation(line: 288, column: 49, scope: !620)
!625 = !DILocation(line: 288, column: 7, scope: !620)
!626 = distinct !{!626, !617, !627}
!627 = !DILocation(line: 289, column: 5, scope: !584)
!628 = !DILocation(line: 292, column: 7, scope: !629)
!629 = distinct !DILexicalBlock(scope: !584, file: !3, line: 292, column: 7)
!630 = !DILocation(line: 292, column: 18, scope: !629)
!631 = !DILocation(line: 292, column: 27, scope: !629)
!632 = !DILocation(line: 292, column: 7, scope: !584)
!633 = !DILocation(line: 293, column: 24, scope: !629)
!634 = !DILocation(line: 293, column: 5, scope: !629)
!635 = !DILocation(line: 294, column: 1, scope: !584)
!636 = distinct !DISubprogram(name: "file_name_free", scope: !3, file: !3, line: 78, type: !585, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!637 = !DILocalVariable(name: "p", arg: 1, scope: !636, file: !3, line: 78, type: !366)
!638 = !DILocation(line: 78, column: 35, scope: !636)
!639 = !DILocation(line: 80, column: 9, scope: !636)
!640 = !DILocation(line: 80, column: 12, scope: !636)
!641 = !DILocation(line: 80, column: 3, scope: !636)
!642 = !DILocation(line: 81, column: 9, scope: !636)
!643 = !DILocation(line: 81, column: 3, scope: !636)
!644 = !DILocation(line: 82, column: 1, scope: !636)
!645 = !DILocalVariable(name: "p", arg: 1, scope: !646, file: !3, line: 78, type: !649)
!646 = distinct !DISubprogram(name: "file_name_free", scope: !3, file: !3, line: 78, type: !647, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !655, retainedNodes: !4)
!647 = !DISubroutineType(types: !648)
!648 = !{null, !649}
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_name", file: !3, line: 34, size: 192, elements: !651)
!651 = !{!652, !653, !654}
!652 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !650, file: !3, line: 36, baseType: !7, size: 64)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "n_alloc", scope: !650, file: !3, line: 37, baseType: !74, size: 64, offset: 64)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !650, file: !3, line: 38, baseType: !7, size: 64, offset: 128)
!655 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !656, nameTableKind: None)
!656 = !{!657}
!657 = !DIGlobalVariableExpression(var: !658, expr: !DIExpression())
!658 = distinct !DIGlobalVariable(name: "longopts", scope: !655, file: !3, line: 41, type: !659, isLocal: true, isDefinition: true)
!659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !660, size: 1280, elements: !23)
!660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !661)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !13, line: 50, size: 256, elements: !662)
!662 = !{!663, !664, !665, !666}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !661, file: !13, line: 52, baseType: !16, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !661, file: !13, line: 55, baseType: !19, size: 32, offset: 64)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !661, file: !13, line: 56, baseType: !21, size: 64, offset: 128)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !661, file: !13, line: 57, baseType: !19, size: 32, offset: 192)
!667 = distinct !DISubprogram(name: "find_dir_entry", scope: !3, file: !3, line: 153, type: !668, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!668 = !DISubroutineType(types: !669)
!669 = !{null, !670, !366, !74}
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64)
!671 = !DILocalVariable(name: "dot_sb", arg: 1, scope: !667, file: !3, line: 153, type: !670)
!672 = !DILocation(line: 153, column: 30, scope: !667)
!673 = !DILocalVariable(name: "file_name", arg: 2, scope: !667, file: !3, line: 153, type: !366)
!674 = !DILocation(line: 153, column: 56, scope: !667)
!675 = !DILocalVariable(name: "parent_height", arg: 3, scope: !667, file: !3, line: 154, type: !74)
!676 = !DILocation(line: 154, column: 24, scope: !667)
!677 = !DILocalVariable(name: "dirp", scope: !667, file: !3, line: 156, type: !678)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !680, line: 127, baseType: !681)
!680 = !DIFile(filename: "/usr/include/dirent.h", directory: "")
!681 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !680, line: 127, flags: DIFlagFwdDecl)
!682 = !DILocation(line: 156, column: 8, scope: !667)
!683 = !DILocalVariable(name: "fd", scope: !667, file: !3, line: 157, type: !19)
!684 = !DILocation(line: 157, column: 7, scope: !667)
!685 = !DILocalVariable(name: "parent_sb", scope: !667, file: !3, line: 158, type: !404)
!686 = !DILocation(line: 158, column: 15, scope: !667)
!687 = !DILocalVariable(name: "use_lstat", scope: !667, file: !3, line: 159, type: !38)
!688 = !DILocation(line: 159, column: 8, scope: !667)
!689 = !DILocalVariable(name: "found", scope: !667, file: !3, line: 160, type: !38)
!690 = !DILocation(line: 160, column: 8, scope: !667)
!691 = !DILocation(line: 162, column: 10, scope: !667)
!692 = !DILocation(line: 162, column: 8, scope: !667)
!693 = !DILocation(line: 163, column: 7, scope: !694)
!694 = distinct !DILexicalBlock(scope: !667, file: !3, line: 163, column: 7)
!695 = !DILocation(line: 163, column: 12, scope: !694)
!696 = !DILocation(line: 163, column: 7, scope: !667)
!697 = !DILocation(line: 164, column: 5, scope: !694)
!698 = !DILocation(line: 167, column: 15, scope: !667)
!699 = !DILocation(line: 167, column: 8, scope: !667)
!700 = !DILocation(line: 167, column: 6, scope: !667)
!701 = !DILocation(line: 168, column: 13, scope: !702)
!702 = distinct !DILexicalBlock(scope: !667, file: !3, line: 168, column: 7)
!703 = !DILocation(line: 168, column: 10, scope: !702)
!704 = !DILocation(line: 168, column: 8, scope: !702)
!705 = !DILocation(line: 168, column: 26, scope: !702)
!706 = !DILocation(line: 168, column: 18, scope: !702)
!707 = !DILocation(line: 168, column: 32, scope: !702)
!708 = !DILocation(line: 168, column: 46, scope: !702)
!709 = !DILocation(line: 168, column: 7, scope: !667)
!710 = !DILocation(line: 169, column: 5, scope: !702)
!711 = !DILocation(line: 172, column: 13, scope: !712)
!712 = distinct !DILexicalBlock(scope: !667, file: !3, line: 172, column: 7)
!713 = !DILocation(line: 172, column: 10, scope: !712)
!714 = !DILocation(line: 172, column: 8, scope: !712)
!715 = !DILocation(line: 172, column: 25, scope: !712)
!716 = !DILocation(line: 172, column: 18, scope: !712)
!717 = !DILocation(line: 172, column: 43, scope: !712)
!718 = !DILocation(line: 172, column: 67, scope: !712)
!719 = !DILocation(line: 172, column: 7, scope: !667)
!720 = !DILocation(line: 173, column: 5, scope: !712)
!721 = !DILocation(line: 178, column: 26, scope: !667)
!722 = !DILocation(line: 178, column: 36, scope: !667)
!723 = !DILocation(line: 178, column: 44, scope: !667)
!724 = !DILocation(line: 178, column: 33, scope: !667)
!725 = !DILocation(line: 178, column: 13, scope: !667)
!726 = !DILocation(line: 180, column: 9, scope: !667)
!727 = !DILocation(line: 181, column: 3, scope: !667)
!728 = !DILocalVariable(name: "dp", scope: !729, file: !3, line: 183, type: !730)
!729 = distinct !DILexicalBlock(scope: !667, file: !3, line: 182, column: 5)
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !732)
!732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !733, line: 22, size: 2240, elements: !734)
!733 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/dirent.h", directory: "")
!734 = !{!735, !736, !737, !738, !739}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !732, file: !733, line: 25, baseType: !411, size: 64)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !732, file: !733, line: 26, baseType: !423, size: 64, offset: 64)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !732, file: !733, line: 31, baseType: !73, size: 16, offset: 128)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !732, file: !733, line: 32, baseType: !148, size: 8, offset: 144)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !732, file: !733, line: 33, baseType: !105, size: 2048, offset: 152)
!740 = !DILocation(line: 183, column: 28, scope: !729)
!741 = !DILocalVariable(name: "ent_sb", scope: !729, file: !3, line: 184, type: !404)
!742 = !DILocation(line: 184, column: 19, scope: !729)
!743 = !DILocalVariable(name: "ino", scope: !729, file: !3, line: 185, type: !596)
!744 = !DILocation(line: 185, column: 13, scope: !729)
!745 = !DILocation(line: 187, column: 7, scope: !729)
!746 = !DILocation(line: 187, column: 13, scope: !729)
!747 = !DILocation(line: 188, column: 50, scope: !748)
!748 = distinct !DILexicalBlock(scope: !729, file: !3, line: 188, column: 11)
!749 = !DILocation(line: 188, column: 17, scope: !748)
!750 = !DILocation(line: 188, column: 15, scope: !748)
!751 = !DILocation(line: 188, column: 57, scope: !748)
!752 = !DILocation(line: 188, column: 11, scope: !729)
!753 = !DILocation(line: 190, column: 15, scope: !754)
!754 = distinct !DILexicalBlock(scope: !755, file: !3, line: 190, column: 15)
!755 = distinct !DILexicalBlock(scope: !748, file: !3, line: 189, column: 9)
!756 = !DILocation(line: 190, column: 15, scope: !755)
!757 = !DILocalVariable(name: "e", scope: !758, file: !3, line: 193, type: !19)
!758 = distinct !DILexicalBlock(scope: !754, file: !3, line: 191, column: 13)
!759 = !DILocation(line: 193, column: 19, scope: !758)
!760 = !DILocation(line: 193, column: 23, scope: !758)
!761 = !DILocation(line: 194, column: 25, scope: !758)
!762 = !DILocation(line: 194, column: 15, scope: !758)
!763 = !DILocation(line: 195, column: 23, scope: !758)
!764 = !DILocation(line: 195, column: 15, scope: !758)
!765 = !DILocation(line: 195, column: 21, scope: !758)
!766 = !DILocation(line: 198, column: 20, scope: !758)
!767 = !DILocation(line: 199, column: 13, scope: !758)
!768 = !DILocation(line: 200, column: 11, scope: !755)
!769 = !DILocation(line: 203, column: 13, scope: !729)
!770 = !DILocation(line: 203, column: 11, scope: !729)
!771 = !DILocation(line: 205, column: 11, scope: !772)
!772 = distinct !DILexicalBlock(scope: !729, file: !3, line: 205, column: 11)
!773 = !DILocation(line: 205, column: 15, scope: !772)
!774 = !DILocation(line: 205, column: 38, scope: !772)
!775 = !DILocation(line: 205, column: 41, scope: !772)
!776 = !DILocation(line: 205, column: 11, scope: !729)
!777 = !DILocation(line: 207, column: 22, scope: !778)
!778 = distinct !DILexicalBlock(scope: !779, file: !3, line: 207, column: 15)
!779 = distinct !DILexicalBlock(scope: !772, file: !3, line: 206, column: 9)
!780 = !DILocation(line: 207, column: 26, scope: !778)
!781 = !DILocation(line: 207, column: 15, scope: !778)
!782 = !DILocation(line: 207, column: 43, scope: !778)
!783 = !DILocation(line: 207, column: 15, scope: !779)
!784 = !DILocation(line: 210, column: 15, scope: !785)
!785 = distinct !DILexicalBlock(scope: !778, file: !3, line: 208, column: 13)
!786 = distinct !{!786, !727, !787}
!787 = !DILocation(line: 226, column: 5, scope: !667)
!788 = !DILocation(line: 212, column: 24, scope: !779)
!789 = !DILocation(line: 212, column: 15, scope: !779)
!790 = !DILocation(line: 213, column: 9, scope: !779)
!791 = !DILocation(line: 215, column: 11, scope: !792)
!792 = distinct !DILexicalBlock(scope: !729, file: !3, line: 215, column: 11)
!793 = !DILocation(line: 215, column: 18, scope: !792)
!794 = !DILocation(line: 215, column: 26, scope: !792)
!795 = !DILocation(line: 215, column: 15, scope: !792)
!796 = !DILocation(line: 215, column: 11, scope: !729)
!797 = !DILocation(line: 216, column: 9, scope: !792)
!798 = !DILocation(line: 220, column: 14, scope: !799)
!799 = distinct !DILexicalBlock(scope: !729, file: !3, line: 220, column: 12)
!800 = !DILocation(line: 220, column: 24, scope: !799)
!801 = !DILocation(line: 220, column: 34, scope: !799)
!802 = !DILocation(line: 220, column: 44, scope: !799)
!803 = !DILocation(line: 220, column: 52, scope: !799)
!804 = !DILocation(line: 220, column: 41, scope: !799)
!805 = !DILocation(line: 220, column: 12, scope: !729)
!806 = !DILocation(line: 222, column: 30, scope: !807)
!807 = distinct !DILexicalBlock(scope: !799, file: !3, line: 221, column: 9)
!808 = !DILocation(line: 222, column: 41, scope: !807)
!809 = !DILocation(line: 222, column: 45, scope: !807)
!810 = !DILocation(line: 222, column: 53, scope: !807)
!811 = !DILocation(line: 222, column: 11, scope: !807)
!812 = !DILocation(line: 223, column: 17, scope: !807)
!813 = !DILocation(line: 224, column: 11, scope: !807)
!814 = !DILocation(line: 228, column: 7, scope: !815)
!815 = distinct !DILexicalBlock(scope: !667, file: !3, line: 228, column: 7)
!816 = !DILocation(line: 228, column: 12, scope: !815)
!817 = !DILocation(line: 228, column: 20, scope: !815)
!818 = !DILocation(line: 228, column: 33, scope: !815)
!819 = !DILocation(line: 228, column: 23, scope: !815)
!820 = !DILocation(line: 228, column: 39, scope: !815)
!821 = !DILocation(line: 228, column: 7, scope: !667)
!822 = !DILocation(line: 232, column: 7, scope: !823)
!823 = distinct !DILexicalBlock(scope: !815, file: !3, line: 229, column: 5)
!824 = !DILocation(line: 236, column: 10, scope: !825)
!825 = distinct !DILexicalBlock(scope: !667, file: !3, line: 236, column: 8)
!826 = !DILocation(line: 236, column: 8, scope: !667)
!827 = !DILocation(line: 237, column: 5, scope: !825)
!828 = !DILocation(line: 241, column: 4, scope: !667)
!829 = !DILocation(line: 241, column: 13, scope: !667)
!830 = !DILocation(line: 242, column: 1, scope: !667)
!831 = !DILocalVariable(name: "dot_sb", arg: 1, scope: !832, file: !3, line: 153, type: !835)
!832 = distinct !DISubprogram(name: "find_dir_entry", scope: !3, file: !3, line: 153, type: !833, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !863, retainedNodes: !4)
!833 = !DISubroutineType(types: !834)
!834 = !{null, !835, !857, !74}
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !405, line: 46, size: 1152, elements: !837)
!837 = !{!838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !854, !855, !856}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !836, file: !405, line: 48, baseType: !408, size: 64)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !836, file: !405, line: 53, baseType: !411, size: 64, offset: 64)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !836, file: !405, line: 61, baseType: !413, size: 64, offset: 128)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !836, file: !405, line: 62, baseType: !415, size: 32, offset: 192)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !836, file: !405, line: 64, baseType: !417, size: 32, offset: 224)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !836, file: !405, line: 65, baseType: !419, size: 32, offset: 256)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !836, file: !405, line: 67, baseType: !19, size: 32, offset: 288)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !836, file: !405, line: 69, baseType: !408, size: 64, offset: 320)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !836, file: !405, line: 74, baseType: !423, size: 64, offset: 384)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !836, file: !405, line: 78, baseType: !426, size: 64, offset: 448)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !836, file: !405, line: 80, baseType: !428, size: 64, offset: 512)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !836, file: !405, line: 91, baseType: !850, size: 128, offset: 576)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !431, line: 10, size: 128, elements: !851)
!851 = !{!852, !853}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !850, file: !431, line: 12, baseType: !434, size: 64)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !850, file: !431, line: 16, baseType: !436, size: 64, offset: 64)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !836, file: !405, line: 92, baseType: !850, size: 128, offset: 704)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !836, file: !405, line: 93, baseType: !850, size: 128, offset: 832)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !836, file: !405, line: 106, baseType: !440, size: 192, offset: 960)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_name", file: !3, line: 34, size: 192, elements: !859)
!859 = !{!860, !861, !862}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !858, file: !3, line: 36, baseType: !7, size: 64)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "n_alloc", scope: !858, file: !3, line: 37, baseType: !74, size: 64, offset: 64)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !858, file: !3, line: 38, baseType: !7, size: 64, offset: 128)
!863 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !864, nameTableKind: None)
!864 = !{!865}
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "longopts", scope: !863, file: !3, line: 41, type: !867, isLocal: true, isDefinition: true)
!867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !868, size: 1280, elements: !23)
!868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !869)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !13, line: 50, size: 256, elements: !870)
!870 = !{!871, !872, !873, !874}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !869, file: !13, line: 52, baseType: !16, size: 64)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !869, file: !13, line: 55, baseType: !19, size: 32, offset: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !869, file: !13, line: 56, baseType: !21, size: 64, offset: 128)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !869, file: !13, line: 57, baseType: !19, size: 32, offset: 192)
!875 = !DILocalVariable(name: "file_name", arg: 2, scope: !832, file: !3, line: 153, type: !857)
!876 = !DILocalVariable(name: "parent_height", arg: 3, scope: !832, file: !3, line: 154, type: !74)
!877 = !DILocalVariable(name: "dirp", scope: !832, file: !3, line: 156, type: !678)
!878 = !DILocalVariable(name: "fd", scope: !832, file: !3, line: 157, type: !19)
!879 = !DILocalVariable(name: "parent_sb", scope: !832, file: !3, line: 158, type: !836)
!880 = !DILocalVariable(name: "use_lstat", scope: !832, file: !3, line: 159, type: !38)
!881 = !DILocalVariable(name: "found", scope: !832, file: !3, line: 160, type: !38)
!882 = distinct !DISubprogram(name: "file_name_prepend", scope: !3, file: !3, line: 101, type: !883, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!883 = !DISubroutineType(types: !884)
!884 = !{null, !366, !16, !74}
!885 = !DILocalVariable(name: "p", arg: 1, scope: !882, file: !3, line: 101, type: !366)
!886 = !DILocation(line: 101, column: 38, scope: !882)
!887 = !DILocalVariable(name: "s", arg: 2, scope: !882, file: !3, line: 101, type: !16)
!888 = !DILocation(line: 101, column: 53, scope: !882)
!889 = !DILocalVariable(name: "s_len", arg: 3, scope: !882, file: !3, line: 101, type: !74)
!890 = !DILocation(line: 101, column: 63, scope: !882)
!891 = !DILocalVariable(name: "n_free", scope: !882, file: !3, line: 103, type: !74)
!892 = !DILocation(line: 103, column: 10, scope: !882)
!893 = !DILocation(line: 103, column: 19, scope: !882)
!894 = !DILocation(line: 103, column: 22, scope: !882)
!895 = !DILocation(line: 103, column: 30, scope: !882)
!896 = !DILocation(line: 103, column: 33, scope: !882)
!897 = !DILocation(line: 103, column: 28, scope: !882)
!898 = !DILocation(line: 104, column: 7, scope: !899)
!899 = distinct !DILexicalBlock(scope: !882, file: !3, line: 104, column: 7)
!900 = !DILocation(line: 104, column: 20, scope: !899)
!901 = !DILocation(line: 104, column: 18, scope: !899)
!902 = !DILocation(line: 104, column: 14, scope: !899)
!903 = !DILocation(line: 104, column: 7, scope: !882)
!904 = !DILocalVariable(name: "half", scope: !905, file: !3, line: 106, type: !74)
!905 = distinct !DILexicalBlock(scope: !899, file: !3, line: 105, column: 5)
!906 = !DILocation(line: 106, column: 14, scope: !905)
!907 = !DILocation(line: 106, column: 21, scope: !905)
!908 = !DILocation(line: 106, column: 24, scope: !905)
!909 = !DILocation(line: 106, column: 32, scope: !905)
!910 = !DILocation(line: 106, column: 38, scope: !905)
!911 = !DILocation(line: 106, column: 36, scope: !905)
!912 = !DILocalVariable(name: "q", scope: !905, file: !3, line: 111, type: !7)
!913 = !DILocation(line: 111, column: 13, scope: !905)
!914 = !DILocation(line: 111, column: 30, scope: !905)
!915 = !DILocation(line: 111, column: 17, scope: !905)
!916 = !DILocalVariable(name: "n_used", scope: !905, file: !3, line: 112, type: !74)
!917 = !DILocation(line: 112, column: 14, scope: !905)
!918 = !DILocation(line: 112, column: 23, scope: !905)
!919 = !DILocation(line: 112, column: 26, scope: !905)
!920 = !DILocation(line: 112, column: 36, scope: !905)
!921 = !DILocation(line: 112, column: 34, scope: !905)
!922 = !DILocation(line: 113, column: 18, scope: !905)
!923 = !DILocation(line: 113, column: 26, scope: !905)
!924 = !DILocation(line: 113, column: 24, scope: !905)
!925 = !DILocation(line: 113, column: 20, scope: !905)
!926 = !DILocation(line: 113, column: 33, scope: !905)
!927 = !DILocation(line: 113, column: 31, scope: !905)
!928 = !DILocation(line: 113, column: 7, scope: !905)
!929 = !DILocation(line: 113, column: 10, scope: !905)
!930 = !DILocation(line: 113, column: 16, scope: !905)
!931 = !DILocation(line: 114, column: 15, scope: !905)
!932 = !DILocation(line: 114, column: 18, scope: !905)
!933 = !DILocation(line: 114, column: 25, scope: !905)
!934 = !DILocation(line: 114, column: 28, scope: !905)
!935 = !DILocation(line: 114, column: 34, scope: !905)
!936 = !DILocation(line: 114, column: 32, scope: !905)
!937 = !DILocation(line: 114, column: 42, scope: !905)
!938 = !DILocation(line: 114, column: 7, scope: !905)
!939 = !DILocation(line: 115, column: 13, scope: !905)
!940 = !DILocation(line: 115, column: 16, scope: !905)
!941 = !DILocation(line: 115, column: 7, scope: !905)
!942 = !DILocation(line: 116, column: 16, scope: !905)
!943 = !DILocation(line: 116, column: 7, scope: !905)
!944 = !DILocation(line: 116, column: 10, scope: !905)
!945 = !DILocation(line: 116, column: 14, scope: !905)
!946 = !DILocation(line: 117, column: 24, scope: !905)
!947 = !DILocation(line: 117, column: 22, scope: !905)
!948 = !DILocation(line: 117, column: 7, scope: !905)
!949 = !DILocation(line: 117, column: 10, scope: !905)
!950 = !DILocation(line: 117, column: 18, scope: !905)
!951 = !DILocation(line: 118, column: 5, scope: !905)
!952 = !DILocation(line: 120, column: 19, scope: !882)
!953 = !DILocation(line: 120, column: 17, scope: !882)
!954 = !DILocation(line: 120, column: 3, scope: !882)
!955 = !DILocation(line: 120, column: 6, scope: !882)
!956 = !DILocation(line: 120, column: 12, scope: !882)
!957 = !DILocation(line: 121, column: 3, scope: !882)
!958 = !DILocation(line: 121, column: 6, scope: !882)
!959 = !DILocation(line: 121, column: 15, scope: !882)
!960 = !DILocation(line: 122, column: 11, scope: !882)
!961 = !DILocation(line: 122, column: 14, scope: !882)
!962 = !DILocation(line: 122, column: 20, scope: !882)
!963 = !DILocation(line: 122, column: 25, scope: !882)
!964 = !DILocation(line: 122, column: 28, scope: !882)
!965 = !DILocation(line: 122, column: 3, scope: !882)
!966 = !DILocation(line: 123, column: 1, scope: !882)
!967 = !DILocalVariable(name: "p", arg: 1, scope: !968, file: !3, line: 101, type: !971)
!968 = distinct !DISubprogram(name: "file_name_prepend", scope: !3, file: !3, line: 101, type: !969, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !977, retainedNodes: !4)
!969 = !DISubroutineType(types: !970)
!970 = !{null, !971, !16, !74}
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_name", file: !3, line: 34, size: 192, elements: !973)
!973 = !{!974, !975, !976}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !972, file: !3, line: 36, baseType: !7, size: 64)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "n_alloc", scope: !972, file: !3, line: 37, baseType: !74, size: 64, offset: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !972, file: !3, line: 38, baseType: !7, size: 64, offset: 128)
!977 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !978, nameTableKind: None)
!978 = !{!979}
!979 = !DIGlobalVariableExpression(var: !980, expr: !DIExpression())
!980 = distinct !DIGlobalVariable(name: "longopts", scope: !977, file: !3, line: 41, type: !981, isLocal: true, isDefinition: true)
!981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !982, size: 1280, elements: !23)
!982 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !983)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !13, line: 50, size: 256, elements: !984)
!984 = !{!985, !986, !987, !988}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !983, file: !13, line: 52, baseType: !16, size: 64)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !983, file: !13, line: 55, baseType: !19, size: 32, offset: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !983, file: !13, line: 56, baseType: !21, size: 64, offset: 128)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !983, file: !13, line: 57, baseType: !19, size: 32, offset: 192)
!989 = !DILocalVariable(name: "s", arg: 2, scope: !968, file: !3, line: 101, type: !16)
!990 = !DILocalVariable(name: "s_len", arg: 3, scope: !968, file: !3, line: 101, type: !74)
!991 = !DILocalVariable(name: "n_free", scope: !968, file: !3, line: 103, type: !74)
!992 = !DILocalVariable(name: "q", scope: !993, file: !3, line: 111, type: !7)
!993 = distinct !DILexicalBlock(scope: !994, file: !3, line: 105, column: 5)
!994 = distinct !DILexicalBlock(scope: !995, file: !3, line: 104, column: 7)
!995 = distinct !DISubprogram(name: "file_name_prepend", scope: !3, file: !3, line: 101, type: !996, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1004, retainedNodes: !4)
!996 = !DISubroutineType(types: !997)
!997 = !{null, !998, !16, !74}
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_name", file: !3, line: 34, size: 192, elements: !1000)
!1000 = !{!1001, !1002, !1003}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !999, file: !3, line: 36, baseType: !7, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "n_alloc", scope: !999, file: !3, line: 37, baseType: !74, size: 64, offset: 64)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !999, file: !3, line: 38, baseType: !7, size: 64, offset: 128)
!1004 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1005, nameTableKind: None)
!1005 = !{!1006}
!1006 = !DIGlobalVariableExpression(var: !1007, expr: !DIExpression())
!1007 = distinct !DIGlobalVariable(name: "longopts", scope: !1004, file: !3, line: 41, type: !1008, isLocal: true, isDefinition: true)
!1008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1009, size: 1280, elements: !23)
!1009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1010)
!1010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !13, line: 50, size: 256, elements: !1011)
!1011 = !{!1012, !1013, !1014, !1015}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1010, file: !13, line: 52, baseType: !16, size: 64)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1010, file: !13, line: 55, baseType: !19, size: 32, offset: 64)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1010, file: !13, line: 56, baseType: !21, size: 64, offset: 128)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1010, file: !13, line: 57, baseType: !19, size: 32, offset: 192)
!1016 = !DILocalVariable(name: "n_used", scope: !993, file: !3, line: 112, type: !74)
!1017 = distinct !DISubprogram(name: "nth_parent", scope: !3, file: !3, line: 127, type: !1018, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1018 = !DISubroutineType(types: !1019)
!1019 = !{!7, !74}
!1020 = !DILocalVariable(name: "n", arg: 1, scope: !1017, file: !3, line: 127, type: !74)
!1021 = !DILocation(line: 127, column: 20, scope: !1017)
!1022 = !DILocalVariable(name: "buf", scope: !1017, file: !3, line: 129, type: !7)
!1023 = !DILocation(line: 129, column: 9, scope: !1017)
!1024 = !DILocation(line: 129, column: 28, scope: !1017)
!1025 = !DILocation(line: 129, column: 15, scope: !1017)
!1026 = !DILocalVariable(name: "p", scope: !1017, file: !3, line: 130, type: !7)
!1027 = !DILocation(line: 130, column: 9, scope: !1017)
!1028 = !DILocation(line: 130, column: 13, scope: !1017)
!1029 = !DILocalVariable(name: "i", scope: !1030, file: !3, line: 132, type: !74)
!1030 = distinct !DILexicalBlock(scope: !1017, file: !3, line: 132, column: 3)
!1031 = !DILocation(line: 132, column: 15, scope: !1030)
!1032 = !DILocation(line: 132, column: 8, scope: !1030)
!1033 = !DILocation(line: 132, column: 22, scope: !1034)
!1034 = distinct !DILexicalBlock(scope: !1030, file: !3, line: 132, column: 3)
!1035 = !DILocation(line: 132, column: 26, scope: !1034)
!1036 = !DILocation(line: 132, column: 24, scope: !1034)
!1037 = !DILocation(line: 132, column: 3, scope: !1030)
!1038 = !DILocation(line: 134, column: 15, scope: !1039)
!1039 = distinct !DILexicalBlock(scope: !1034, file: !3, line: 133, column: 5)
!1040 = !DILocation(line: 134, column: 7, scope: !1039)
!1041 = !DILocation(line: 135, column: 9, scope: !1039)
!1042 = !DILocation(line: 136, column: 5, scope: !1039)
!1043 = !DILocation(line: 132, column: 30, scope: !1034)
!1044 = !DILocation(line: 132, column: 3, scope: !1034)
!1045 = distinct !{!1045, !1037, !1046}
!1046 = !DILocation(line: 136, column: 5, scope: !1030)
!1047 = !DILocation(line: 137, column: 3, scope: !1017)
!1048 = !DILocation(line: 137, column: 9, scope: !1017)
!1049 = !DILocation(line: 138, column: 10, scope: !1017)
!1050 = !DILocation(line: 138, column: 3, scope: !1017)
!1051 = !DILocalVariable(name: "n", arg: 1, scope: !1052, file: !3, line: 127, type: !74)
!1052 = distinct !DISubprogram(name: "nth_parent", scope: !3, file: !3, line: 127, type: !1018, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1053, retainedNodes: !4)
!1053 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1054, nameTableKind: None)
!1054 = !{!1055}
!1055 = !DIGlobalVariableExpression(var: !1056, expr: !DIExpression())
!1056 = distinct !DIGlobalVariable(name: "longopts", scope: !1053, file: !3, line: 41, type: !1057, isLocal: true, isDefinition: true)
!1057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1058, size: 1280, elements: !23)
!1058 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1059)
!1059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !13, line: 50, size: 256, elements: !1060)
!1060 = !{!1061, !1062, !1063, !1064}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1059, file: !13, line: 52, baseType: !16, size: 64)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1059, file: !13, line: 55, baseType: !19, size: 32, offset: 64)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1059, file: !13, line: 56, baseType: !21, size: 64, offset: 128)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1059, file: !13, line: 57, baseType: !19, size: 32, offset: 192)
!1065 = !DILocalVariable(name: "buf", scope: !1052, file: !3, line: 129, type: !7)
!1066 = !DILocalVariable(name: "p", scope: !1052, file: !3, line: 130, type: !7)
!1067 = !DILocalVariable(name: "i", scope: !1068, file: !3, line: 132, type: !74)
!1068 = distinct !DILexicalBlock(scope: !1052, file: !3, line: 132, column: 3)
!1069 = distinct !DISubprogram(name: "readdir_ignoring_dot_and_dotdot", scope: !212, file: !212, line: 278, type: !1070, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!730, !678}
!1072 = !DILocalVariable(name: "dirp", arg: 1, scope: !1069, file: !212, line: 278, type: !678)
!1073 = !DILocation(line: 278, column: 39, scope: !1069)
!1074 = !DILocation(line: 280, column: 3, scope: !1069)
!1075 = !DILocalVariable(name: "dp", scope: !1076, file: !212, line: 282, type: !730)
!1076 = distinct !DILexicalBlock(scope: !1069, file: !212, line: 281, column: 5)
!1077 = !DILocation(line: 282, column: 28, scope: !1076)
!1078 = !DILocation(line: 282, column: 42, scope: !1076)
!1079 = !DILocation(line: 282, column: 33, scope: !1076)
!1080 = !DILocation(line: 283, column: 11, scope: !1081)
!1081 = distinct !DILexicalBlock(scope: !1076, file: !212, line: 283, column: 11)
!1082 = !DILocation(line: 283, column: 14, scope: !1081)
!1083 = !DILocation(line: 283, column: 22, scope: !1081)
!1084 = !DILocation(line: 283, column: 42, scope: !1081)
!1085 = !DILocation(line: 283, column: 46, scope: !1081)
!1086 = !DILocation(line: 283, column: 27, scope: !1081)
!1087 = !DILocation(line: 283, column: 11, scope: !1076)
!1088 = !DILocation(line: 284, column: 16, scope: !1081)
!1089 = !DILocation(line: 284, column: 9, scope: !1081)
!1090 = distinct !{!1090, !1074, !1091}
!1091 = !DILocation(line: 285, column: 5, scope: !1069)
!1092 = !DILocalVariable(name: "dirp", arg: 1, scope: !1093, file: !212, line: 278, type: !678)
!1093 = distinct !DISubprogram(name: "readdir_ignoring_dot_and_dotdot", scope: !212, file: !212, line: 278, type: !1094, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1105, retainedNodes: !4)
!1094 = !DISubroutineType(types: !1095)
!1095 = !{!1096, !678}
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1098)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !733, line: 22, size: 2240, elements: !1099)
!1099 = !{!1100, !1101, !1102, !1103, !1104}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !1098, file: !733, line: 25, baseType: !411, size: 64)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !1098, file: !733, line: 26, baseType: !423, size: 64, offset: 64)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !1098, file: !733, line: 31, baseType: !73, size: 16, offset: 128)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !1098, file: !733, line: 32, baseType: !148, size: 8, offset: 144)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1098, file: !733, line: 33, baseType: !105, size: 2048, offset: 152)
!1105 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1106, nameTableKind: None)
!1106 = !{!1107}
!1107 = !DIGlobalVariableExpression(var: !1108, expr: !DIExpression())
!1108 = distinct !DIGlobalVariable(name: "longopts", scope: !1105, file: !3, line: 41, type: !1109, isLocal: true, isDefinition: true)
!1109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1110, size: 1280, elements: !23)
!1110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1111)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !13, line: 50, size: 256, elements: !1112)
!1112 = !{!1113, !1114, !1115, !1116}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1111, file: !13, line: 52, baseType: !16, size: 64)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1111, file: !13, line: 55, baseType: !19, size: 32, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1111, file: !13, line: 56, baseType: !21, size: 64, offset: 128)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1111, file: !13, line: 57, baseType: !19, size: 32, offset: 192)
!1117 = distinct !DISubprogram(name: "dot_or_dotdot", scope: !212, file: !212, line: 265, type: !1118, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1118 = !DISubroutineType(types: !1119)
!1119 = !{!38, !16}
!1120 = !DILocalVariable(name: "file_name", arg: 1, scope: !1117, file: !212, line: 265, type: !16)
!1121 = !DILocation(line: 265, column: 28, scope: !1117)
!1122 = !DILocation(line: 267, column: 7, scope: !1123)
!1123 = distinct !DILexicalBlock(scope: !1117, file: !212, line: 267, column: 7)
!1124 = !DILocation(line: 267, column: 20, scope: !1123)
!1125 = !DILocation(line: 267, column: 7, scope: !1117)
!1126 = !DILocalVariable(name: "sep", scope: !1127, file: !212, line: 269, type: !8)
!1127 = distinct !DILexicalBlock(scope: !1123, file: !212, line: 268, column: 5)
!1128 = !DILocation(line: 269, column: 12, scope: !1127)
!1129 = !DILocation(line: 269, column: 18, scope: !1127)
!1130 = !DILocation(line: 269, column: 29, scope: !1127)
!1131 = !DILocation(line: 269, column: 42, scope: !1127)
!1132 = !DILocation(line: 269, column: 50, scope: !1127)
!1133 = !DILocation(line: 270, column: 17, scope: !1127)
!1134 = !DILocation(line: 270, column: 21, scope: !1127)
!1135 = !DILocation(line: 270, column: 24, scope: !1127)
!1136 = !DILocation(line: 270, column: 7, scope: !1127)
!1137 = !DILocation(line: 273, column: 5, scope: !1123)
!1138 = !DILocation(line: 274, column: 1, scope: !1117)
!1139 = !DILocalVariable(name: "file_name", arg: 1, scope: !1140, file: !212, line: 265, type: !16)
!1140 = distinct !DISubprogram(name: "dot_or_dotdot", scope: !212, file: !212, line: 265, type: !1118, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1141, retainedNodes: !4)
!1141 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1142, nameTableKind: None)
!1142 = !{!1143}
!1143 = !DIGlobalVariableExpression(var: !1144, expr: !DIExpression())
!1144 = distinct !DIGlobalVariable(name: "longopts", scope: !1141, file: !3, line: 41, type: !1145, isLocal: true, isDefinition: true)
!1145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1146, size: 1280, elements: !23)
!1146 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1147)
!1147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !13, line: 50, size: 256, elements: !1148)
!1148 = !{!1149, !1150, !1151, !1152}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1147, file: !13, line: 52, baseType: !16, size: 64)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1147, file: !13, line: 55, baseType: !19, size: 32, offset: 64)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1147, file: !13, line: 56, baseType: !21, size: 64, offset: 128)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1147, file: !13, line: 57, baseType: !19, size: 32, offset: 192)
!1153 = distinct !DISubprogram(name: "close_stdout", scope: !37, file: !37, line: 117, type: !1154, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, retainedNodes: !4)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{null}
!1156 = !DILocation(line: 119, column: 21, scope: !1157)
!1157 = distinct !DILexicalBlock(scope: !1153, file: !37, line: 119, column: 7)
!1158 = !DILocation(line: 119, column: 7, scope: !1157)
!1159 = !DILocation(line: 119, column: 29, scope: !1157)
!1160 = !DILocation(line: 120, column: 7, scope: !1157)
!1161 = !DILocation(line: 120, column: 12, scope: !1157)
!1162 = !DILocation(line: 120, column: 25, scope: !1157)
!1163 = !DILocation(line: 120, column: 28, scope: !1157)
!1164 = !DILocation(line: 120, column: 34, scope: !1157)
!1165 = !DILocation(line: 119, column: 7, scope: !1153)
!1166 = !DILocalVariable(name: "write_error", scope: !1167, file: !37, line: 122, type: !16)
!1167 = distinct !DILexicalBlock(scope: !1157, file: !37, line: 121, column: 5)
!1168 = !DILocation(line: 122, column: 19, scope: !1167)
!1169 = !DILocation(line: 122, column: 33, scope: !1167)
!1170 = !DILocation(line: 123, column: 11, scope: !1171)
!1171 = distinct !DILexicalBlock(scope: !1167, file: !37, line: 123, column: 11)
!1172 = !DILocation(line: 123, column: 11, scope: !1167)
!1173 = !DILocation(line: 124, column: 19, scope: !1171)
!1174 = !DILocation(line: 124, column: 52, scope: !1171)
!1175 = !DILocation(line: 124, column: 36, scope: !1171)
!1176 = !DILocation(line: 125, column: 16, scope: !1171)
!1177 = !DILocation(line: 124, column: 9, scope: !1171)
!1178 = !DILocation(line: 127, column: 19, scope: !1171)
!1179 = !DILocation(line: 127, column: 32, scope: !1171)
!1180 = !DILocation(line: 127, column: 9, scope: !1171)
!1181 = !DILocation(line: 129, column: 14, scope: !1167)
!1182 = !DILocation(line: 129, column: 7, scope: !1167)
!1183 = !DILocation(line: 134, column: 42, scope: !1184)
!1184 = distinct !DILexicalBlock(scope: !1153, file: !37, line: 134, column: 7)
!1185 = !DILocation(line: 134, column: 28, scope: !1184)
!1186 = !DILocation(line: 134, column: 50, scope: !1184)
!1187 = !DILocation(line: 134, column: 7, scope: !1153)
!1188 = !DILocation(line: 135, column: 12, scope: !1184)
!1189 = !DILocation(line: 135, column: 5, scope: !1184)
!1190 = !DILocation(line: 136, column: 1, scope: !1153)
!1191 = distinct !DISubprogram(name: "set_program_name", scope: !51, file: !51, line: 39, type: !213, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !48, retainedNodes: !4)
!1192 = !DILocalVariable(name: "argv0", arg: 1, scope: !1191, file: !51, line: 39, type: !16)
!1193 = !DILocation(line: 39, column: 31, scope: !1191)
!1194 = !DILocalVariable(name: "slash", scope: !1191, file: !51, line: 46, type: !16)
!1195 = !DILocation(line: 46, column: 15, scope: !1191)
!1196 = !DILocalVariable(name: "base", scope: !1191, file: !51, line: 47, type: !16)
!1197 = !DILocation(line: 47, column: 15, scope: !1191)
!1198 = !DILocation(line: 51, column: 7, scope: !1199)
!1199 = distinct !DILexicalBlock(scope: !1191, file: !51, line: 51, column: 7)
!1200 = !DILocation(line: 51, column: 13, scope: !1199)
!1201 = !DILocation(line: 51, column: 7, scope: !1191)
!1202 = !DILocation(line: 55, column: 14, scope: !1203)
!1203 = distinct !DILexicalBlock(scope: !1199, file: !51, line: 52, column: 5)
!1204 = !DILocation(line: 54, column: 7, scope: !1203)
!1205 = !DILocation(line: 56, column: 7, scope: !1203)
!1206 = !DILocation(line: 59, column: 20, scope: !1191)
!1207 = !DILocation(line: 59, column: 11, scope: !1191)
!1208 = !DILocation(line: 59, column: 9, scope: !1191)
!1209 = !DILocation(line: 60, column: 11, scope: !1191)
!1210 = !DILocation(line: 60, column: 17, scope: !1191)
!1211 = !DILocation(line: 60, column: 27, scope: !1191)
!1212 = !DILocation(line: 60, column: 33, scope: !1191)
!1213 = !DILocation(line: 60, column: 39, scope: !1191)
!1214 = !DILocation(line: 60, column: 8, scope: !1191)
!1215 = !DILocation(line: 61, column: 7, scope: !1216)
!1216 = distinct !DILexicalBlock(scope: !1191, file: !51, line: 61, column: 7)
!1217 = !DILocation(line: 61, column: 14, scope: !1216)
!1218 = !DILocation(line: 61, column: 12, scope: !1216)
!1219 = !DILocation(line: 61, column: 20, scope: !1216)
!1220 = !DILocation(line: 61, column: 25, scope: !1216)
!1221 = !DILocation(line: 61, column: 37, scope: !1216)
!1222 = !DILocation(line: 61, column: 42, scope: !1216)
!1223 = !DILocation(line: 61, column: 28, scope: !1216)
!1224 = !DILocation(line: 61, column: 61, scope: !1216)
!1225 = !DILocation(line: 61, column: 7, scope: !1191)
!1226 = !DILocation(line: 63, column: 15, scope: !1227)
!1227 = distinct !DILexicalBlock(scope: !1216, file: !51, line: 62, column: 5)
!1228 = !DILocation(line: 63, column: 13, scope: !1227)
!1229 = !DILocation(line: 64, column: 20, scope: !1230)
!1230 = distinct !DILexicalBlock(scope: !1227, file: !51, line: 64, column: 11)
!1231 = !DILocation(line: 64, column: 11, scope: !1230)
!1232 = !DILocation(line: 64, column: 36, scope: !1230)
!1233 = !DILocation(line: 64, column: 11, scope: !1227)
!1234 = !DILocation(line: 66, column: 19, scope: !1235)
!1235 = distinct !DILexicalBlock(scope: !1230, file: !51, line: 65, column: 9)
!1236 = !DILocation(line: 66, column: 24, scope: !1235)
!1237 = !DILocation(line: 66, column: 17, scope: !1235)
!1238 = !DILocation(line: 70, column: 52, scope: !1235)
!1239 = !DILocation(line: 70, column: 41, scope: !1235)
!1240 = !DILocation(line: 72, column: 9, scope: !1235)
!1241 = !DILocation(line: 73, column: 5, scope: !1227)
!1242 = !DILocation(line: 84, column: 18, scope: !1191)
!1243 = !DILocation(line: 84, column: 16, scope: !1191)
!1244 = !DILocation(line: 90, column: 38, scope: !1191)
!1245 = !DILocation(line: 90, column: 27, scope: !1191)
!1246 = !DILocation(line: 92, column: 1, scope: !1191)
!1247 = distinct !DISubprogram(name: "set_char_quoting", scope: !80, file: !80, line: 152, type: !1248, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !54, retainedNodes: !4)
!1248 = !DISubroutineType(types: !1249)
!1249 = !{!19, !1250, !8, !19}
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !93, size: 64)
!1251 = !DILocalVariable(name: "o", arg: 1, scope: !1247, file: !80, line: 152, type: !1250)
!1252 = !DILocation(line: 152, column: 43, scope: !1247)
!1253 = !DILocalVariable(name: "c", arg: 2, scope: !1247, file: !80, line: 152, type: !8)
!1254 = !DILocation(line: 152, column: 51, scope: !1247)
!1255 = !DILocalVariable(name: "i", arg: 3, scope: !1247, file: !80, line: 152, type: !19)
!1256 = !DILocation(line: 152, column: 58, scope: !1247)
!1257 = !DILocalVariable(name: "uc", scope: !1247, file: !80, line: 154, type: !148)
!1258 = !DILocation(line: 154, column: 17, scope: !1247)
!1259 = !DILocation(line: 154, column: 22, scope: !1247)
!1260 = !DILocalVariable(name: "p", scope: !1247, file: !80, line: 155, type: !1261)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 64)
!1262 = !DILocation(line: 155, column: 17, scope: !1247)
!1263 = !DILocation(line: 156, column: 6, scope: !1247)
!1264 = !DILocation(line: 156, column: 10, scope: !1247)
!1265 = !DILocation(line: 156, column: 41, scope: !1247)
!1266 = !DILocation(line: 156, column: 5, scope: !1247)
!1267 = !DILocation(line: 156, column: 59, scope: !1247)
!1268 = !DILocation(line: 156, column: 62, scope: !1247)
!1269 = !DILocation(line: 156, column: 57, scope: !1247)
!1270 = !DILocalVariable(name: "shift", scope: !1247, file: !80, line: 157, type: !19)
!1271 = !DILocation(line: 157, column: 7, scope: !1247)
!1272 = !DILocation(line: 157, column: 15, scope: !1247)
!1273 = !DILocation(line: 157, column: 18, scope: !1247)
!1274 = !DILocalVariable(name: "r", scope: !1247, file: !80, line: 158, type: !19)
!1275 = !DILocation(line: 158, column: 7, scope: !1247)
!1276 = !DILocation(line: 158, column: 13, scope: !1247)
!1277 = !DILocation(line: 158, column: 12, scope: !1247)
!1278 = !DILocation(line: 158, column: 18, scope: !1247)
!1279 = !DILocation(line: 158, column: 15, scope: !1247)
!1280 = !DILocation(line: 158, column: 25, scope: !1247)
!1281 = !DILocation(line: 159, column: 11, scope: !1247)
!1282 = !DILocation(line: 159, column: 13, scope: !1247)
!1283 = !DILocation(line: 159, column: 20, scope: !1247)
!1284 = !DILocation(line: 159, column: 18, scope: !1247)
!1285 = !DILocation(line: 159, column: 26, scope: !1247)
!1286 = !DILocation(line: 159, column: 23, scope: !1247)
!1287 = !DILocation(line: 159, column: 4, scope: !1247)
!1288 = !DILocation(line: 159, column: 6, scope: !1247)
!1289 = !DILocation(line: 160, column: 10, scope: !1247)
!1290 = !DILocation(line: 160, column: 3, scope: !1247)
!1291 = !DILocalVariable(name: "o", arg: 1, scope: !1292, file: !80, line: 152, type: !1295)
!1292 = distinct !DISubprogram(name: "set_char_quoting", scope: !80, file: !80, line: 152, type: !1293, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1303, retainedNodes: !4)
!1293 = !DISubroutineType(types: !1294)
!1294 = !{!19, !1295, !8, !19}
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 64)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !80, line: 65, size: 448, elements: !1297)
!1297 = !{!1298, !1299, !1300, !1301, !1302}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1296, file: !80, line: 68, baseType: !57, size: 32)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1296, file: !80, line: 71, baseType: !19, size: 32, offset: 32)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !1296, file: !80, line: 75, baseType: !98, size: 256, offset: 64)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !1296, file: !80, line: 78, baseType: !16, size: 64, offset: 320)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !1296, file: !80, line: 81, baseType: !16, size: 64, offset: 384)
!1303 = distinct !DICompileUnit(language: DW_LANG_C99, file: !55, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !56, retainedTypes: !72, globals: !1304, nameTableKind: None)
!1304 = !{!1305, !1307, !1309, !1311, !1313, !1315, !1322, !1324}
!1305 = !DIGlobalVariableExpression(var: !1306, expr: !DIExpression())
!1306 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !1303, file: !80, line: 85, type: !81, isLocal: false, isDefinition: true)
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !1303, file: !80, line: 101, type: !87, isLocal: false, isDefinition: true)
!1309 = !DIGlobalVariableExpression(var: !1310, expr: !DIExpression())
!1310 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !1303, file: !80, line: 1052, type: !1296, isLocal: false, isDefinition: true)
!1311 = !DIGlobalVariableExpression(var: !1312, expr: !DIExpression())
!1312 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !1303, file: !80, line: 116, type: !1296, isLocal: true, isDefinition: true)
!1313 = !DIGlobalVariableExpression(var: !1314, expr: !DIExpression())
!1314 = distinct !DIGlobalVariable(name: "slot0", scope: !1303, file: !80, line: 842, type: !105, isLocal: true, isDefinition: true)
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "slotvec", scope: !1303, file: !80, line: 845, type: !1317, isLocal: true, isDefinition: true)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 64)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !80, line: 834, size: 128, elements: !1319)
!1319 = !{!1320, !1321}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1318, file: !80, line: 836, baseType: !74, size: 64)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1318, file: !80, line: 837, baseType: !7, size: 64, offset: 64)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "nslots", scope: !1303, file: !80, line: 843, type: !19, isLocal: true, isDefinition: true)
!1324 = !DIGlobalVariableExpression(var: !1325, expr: !DIExpression())
!1325 = distinct !DIGlobalVariable(name: "slotvec0", scope: !1303, file: !80, line: 844, type: !1318, isLocal: true, isDefinition: true)
!1326 = !DILocalVariable(name: "c", arg: 2, scope: !1292, file: !80, line: 152, type: !8)
!1327 = !DILocalVariable(name: "i", arg: 3, scope: !1292, file: !80, line: 152, type: !19)
!1328 = !DILocalVariable(name: "uc", scope: !1292, file: !80, line: 154, type: !148)
!1329 = !DILocalVariable(name: "p", scope: !1292, file: !80, line: 155, type: !1261)
!1330 = distinct !DISubprogram(name: "quotearg_n_style", scope: !80, file: !80, line: 955, type: !1331, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !54, retainedNodes: !4)
!1331 = !DISubroutineType(types: !1332)
!1332 = !{!7, !19, !57, !16}
!1333 = !DILocalVariable(name: "n", arg: 1, scope: !1330, file: !80, line: 955, type: !19)
!1334 = !DILocation(line: 955, column: 23, scope: !1330)
!1335 = !DILocalVariable(name: "s", arg: 2, scope: !1330, file: !80, line: 955, type: !57)
!1336 = !DILocation(line: 955, column: 45, scope: !1330)
!1337 = !DILocalVariable(name: "arg", arg: 3, scope: !1330, file: !80, line: 955, type: !16)
!1338 = !DILocation(line: 955, column: 60, scope: !1330)
!1339 = !DILocalVariable(name: "o", scope: !1330, file: !80, line: 957, type: !1340)
!1340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !93)
!1341 = !DILocation(line: 957, column: 32, scope: !1330)
!1342 = !DILocation(line: 957, column: 64, scope: !1330)
!1343 = !DILocation(line: 957, column: 36, scope: !1330)
!1344 = !DILocation(line: 958, column: 30, scope: !1330)
!1345 = !DILocation(line: 958, column: 33, scope: !1330)
!1346 = !DILocation(line: 958, column: 10, scope: !1330)
!1347 = !DILocation(line: 958, column: 3, scope: !1330)
!1348 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !80, file: !80, line: 193, type: !1349, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !54, retainedNodes: !4)
!1349 = !DISubroutineType(types: !1350)
!1350 = !{!93, !57}
!1351 = !DILocalVariable(name: "style", arg: 1, scope: !1348, file: !80, line: 193, type: !57)
!1352 = !DILocation(line: 193, column: 48, scope: !1348)
!1353 = !DILocalVariable(name: "o", scope: !1348, file: !80, line: 195, type: !93)
!1354 = !DILocation(line: 195, column: 26, scope: !1348)
!1355 = !DILocation(line: 196, column: 7, scope: !1356)
!1356 = distinct !DILexicalBlock(scope: !1348, file: !80, line: 196, column: 7)
!1357 = !DILocation(line: 196, column: 13, scope: !1356)
!1358 = !DILocation(line: 196, column: 7, scope: !1348)
!1359 = !DILocation(line: 197, column: 5, scope: !1356)
!1360 = !DILocation(line: 198, column: 13, scope: !1348)
!1361 = !DILocation(line: 198, column: 5, scope: !1348)
!1362 = !DILocation(line: 198, column: 11, scope: !1348)
!1363 = !DILocation(line: 199, column: 3, scope: !1348)
!1364 = !DILocalVariable(name: "style", arg: 1, scope: !1365, file: !80, line: 193, type: !57)
!1365 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !80, file: !80, line: 193, type: !1366, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1375, retainedNodes: !4)
!1366 = !DISubroutineType(types: !1367)
!1367 = !{!1368, !57}
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !80, line: 65, size: 448, elements: !1369)
!1369 = !{!1370, !1371, !1372, !1373, !1374}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1368, file: !80, line: 68, baseType: !57, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1368, file: !80, line: 71, baseType: !19, size: 32, offset: 32)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !1368, file: !80, line: 75, baseType: !98, size: 256, offset: 64)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !1368, file: !80, line: 78, baseType: !16, size: 64, offset: 320)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !1368, file: !80, line: 81, baseType: !16, size: 64, offset: 384)
!1375 = distinct !DICompileUnit(language: DW_LANG_C99, file: !55, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !56, retainedTypes: !72, globals: !1376, nameTableKind: None)
!1376 = !{!1377, !1379, !1381, !1383, !1385, !1387, !1394, !1396}
!1377 = !DIGlobalVariableExpression(var: !1378, expr: !DIExpression())
!1378 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !1375, file: !80, line: 85, type: !81, isLocal: false, isDefinition: true)
!1379 = !DIGlobalVariableExpression(var: !1380, expr: !DIExpression())
!1380 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !1375, file: !80, line: 101, type: !87, isLocal: false, isDefinition: true)
!1381 = !DIGlobalVariableExpression(var: !1382, expr: !DIExpression())
!1382 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !1375, file: !80, line: 1052, type: !1368, isLocal: false, isDefinition: true)
!1383 = !DIGlobalVariableExpression(var: !1384, expr: !DIExpression())
!1384 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !1375, file: !80, line: 116, type: !1368, isLocal: true, isDefinition: true)
!1385 = !DIGlobalVariableExpression(var: !1386, expr: !DIExpression())
!1386 = distinct !DIGlobalVariable(name: "slot0", scope: !1375, file: !80, line: 842, type: !105, isLocal: true, isDefinition: true)
!1387 = !DIGlobalVariableExpression(var: !1388, expr: !DIExpression())
!1388 = distinct !DIGlobalVariable(name: "slotvec", scope: !1375, file: !80, line: 845, type: !1389, isLocal: true, isDefinition: true)
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !80, line: 834, size: 128, elements: !1391)
!1391 = !{!1392, !1393}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1390, file: !80, line: 836, baseType: !74, size: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1390, file: !80, line: 837, baseType: !7, size: 64, offset: 64)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "nslots", scope: !1375, file: !80, line: 843, type: !19, isLocal: true, isDefinition: true)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "slotvec0", scope: !1375, file: !80, line: 844, type: !1390, isLocal: true, isDefinition: true)
!1398 = !DILocalVariable(name: "o", scope: !1365, file: !80, line: 195, type: !1368)
!1399 = distinct !DISubprogram(name: "quotearg_n_options", scope: !80, file: !80, line: 877, type: !1400, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !54, retainedNodes: !4)
!1400 = !DISubroutineType(types: !1401)
!1401 = !{!7, !19, !16, !74, !1402}
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!1403 = !DILocalVariable(name: "n", arg: 1, scope: !1399, file: !80, line: 877, type: !19)
!1404 = !DILocation(line: 877, column: 25, scope: !1399)
!1405 = !DILocalVariable(name: "arg", arg: 2, scope: !1399, file: !80, line: 877, type: !16)
!1406 = !DILocation(line: 877, column: 40, scope: !1399)
!1407 = !DILocalVariable(name: "argsize", arg: 3, scope: !1399, file: !80, line: 877, type: !74)
!1408 = !DILocation(line: 877, column: 52, scope: !1399)
!1409 = !DILocalVariable(name: "options", arg: 4, scope: !1399, file: !80, line: 878, type: !1402)
!1410 = !DILocation(line: 878, column: 51, scope: !1399)
!1411 = !DILocalVariable(name: "e", scope: !1399, file: !80, line: 880, type: !19)
!1412 = !DILocation(line: 880, column: 7, scope: !1399)
!1413 = !DILocation(line: 880, column: 11, scope: !1399)
!1414 = !DILocalVariable(name: "sv", scope: !1399, file: !80, line: 882, type: !110)
!1415 = !DILocation(line: 882, column: 19, scope: !1399)
!1416 = !DILocation(line: 882, column: 24, scope: !1399)
!1417 = !DILocation(line: 884, column: 7, scope: !1418)
!1418 = distinct !DILexicalBlock(scope: !1399, file: !80, line: 884, column: 7)
!1419 = !DILocation(line: 884, column: 9, scope: !1418)
!1420 = !DILocation(line: 884, column: 7, scope: !1399)
!1421 = !DILocation(line: 885, column: 5, scope: !1418)
!1422 = !DILocation(line: 887, column: 7, scope: !1423)
!1423 = distinct !DILexicalBlock(scope: !1399, file: !80, line: 887, column: 7)
!1424 = !DILocation(line: 887, column: 17, scope: !1423)
!1425 = !DILocation(line: 887, column: 14, scope: !1423)
!1426 = !DILocation(line: 887, column: 7, scope: !1399)
!1427 = !DILocalVariable(name: "preallocated", scope: !1428, file: !80, line: 889, type: !38)
!1428 = distinct !DILexicalBlock(scope: !1423, file: !80, line: 888, column: 5)
!1429 = !DILocation(line: 889, column: 12, scope: !1428)
!1430 = !DILocation(line: 889, column: 28, scope: !1428)
!1431 = !DILocation(line: 889, column: 31, scope: !1428)
!1432 = !DILocalVariable(name: "nmax", scope: !1428, file: !80, line: 890, type: !19)
!1433 = !DILocation(line: 890, column: 11, scope: !1428)
!1434 = !DILocation(line: 892, column: 11, scope: !1435)
!1435 = distinct !DILexicalBlock(scope: !1428, file: !80, line: 892, column: 11)
!1436 = !DILocation(line: 892, column: 18, scope: !1435)
!1437 = !DILocation(line: 892, column: 16, scope: !1435)
!1438 = !DILocation(line: 892, column: 11, scope: !1428)
!1439 = !DILocation(line: 893, column: 9, scope: !1435)
!1440 = !DILocation(line: 895, column: 32, scope: !1428)
!1441 = !DILocation(line: 895, column: 54, scope: !1428)
!1442 = !DILocation(line: 895, column: 59, scope: !1428)
!1443 = !DILocation(line: 895, column: 61, scope: !1428)
!1444 = !DILocation(line: 895, column: 58, scope: !1428)
!1445 = !DILocation(line: 895, column: 66, scope: !1428)
!1446 = !DILocation(line: 895, column: 22, scope: !1428)
!1447 = !DILocation(line: 895, column: 20, scope: !1428)
!1448 = !DILocation(line: 895, column: 15, scope: !1428)
!1449 = !DILocation(line: 896, column: 11, scope: !1450)
!1450 = distinct !DILexicalBlock(scope: !1428, file: !80, line: 896, column: 11)
!1451 = !DILocation(line: 896, column: 11, scope: !1428)
!1452 = !DILocation(line: 897, column: 10, scope: !1450)
!1453 = !DILocation(line: 897, column: 15, scope: !1450)
!1454 = !DILocation(line: 897, column: 9, scope: !1450)
!1455 = !DILocation(line: 898, column: 15, scope: !1428)
!1456 = !DILocation(line: 898, column: 20, scope: !1428)
!1457 = !DILocation(line: 898, column: 18, scope: !1428)
!1458 = !DILocation(line: 898, column: 7, scope: !1428)
!1459 = !DILocation(line: 898, column: 32, scope: !1428)
!1460 = !DILocation(line: 898, column: 34, scope: !1428)
!1461 = !DILocation(line: 898, column: 40, scope: !1428)
!1462 = !DILocation(line: 898, column: 38, scope: !1428)
!1463 = !DILocation(line: 898, column: 31, scope: !1428)
!1464 = !DILocation(line: 898, column: 48, scope: !1428)
!1465 = !DILocation(line: 899, column: 16, scope: !1428)
!1466 = !DILocation(line: 899, column: 18, scope: !1428)
!1467 = !DILocation(line: 899, column: 14, scope: !1428)
!1468 = !DILocation(line: 900, column: 5, scope: !1428)
!1469 = !DILocalVariable(name: "size", scope: !1470, file: !80, line: 903, type: !74)
!1470 = distinct !DILexicalBlock(scope: !1399, file: !80, line: 902, column: 3)
!1471 = !DILocation(line: 903, column: 12, scope: !1470)
!1472 = !DILocation(line: 903, column: 19, scope: !1470)
!1473 = !DILocation(line: 903, column: 22, scope: !1470)
!1474 = !DILocation(line: 903, column: 25, scope: !1470)
!1475 = !DILocalVariable(name: "val", scope: !1470, file: !80, line: 904, type: !7)
!1476 = !DILocation(line: 904, column: 11, scope: !1470)
!1477 = !DILocation(line: 904, column: 17, scope: !1470)
!1478 = !DILocation(line: 904, column: 20, scope: !1470)
!1479 = !DILocation(line: 904, column: 23, scope: !1470)
!1480 = !DILocalVariable(name: "flags", scope: !1470, file: !80, line: 906, type: !19)
!1481 = !DILocation(line: 906, column: 9, scope: !1470)
!1482 = !DILocation(line: 906, column: 17, scope: !1470)
!1483 = !DILocation(line: 906, column: 26, scope: !1470)
!1484 = !DILocation(line: 906, column: 32, scope: !1470)
!1485 = !DILocalVariable(name: "qsize", scope: !1470, file: !80, line: 907, type: !74)
!1486 = !DILocation(line: 907, column: 12, scope: !1470)
!1487 = !DILocation(line: 907, column: 46, scope: !1470)
!1488 = !DILocation(line: 907, column: 51, scope: !1470)
!1489 = !DILocation(line: 907, column: 57, scope: !1470)
!1490 = !DILocation(line: 907, column: 62, scope: !1470)
!1491 = !DILocation(line: 908, column: 46, scope: !1470)
!1492 = !DILocation(line: 908, column: 55, scope: !1470)
!1493 = !DILocation(line: 908, column: 62, scope: !1470)
!1494 = !DILocation(line: 909, column: 46, scope: !1470)
!1495 = !DILocation(line: 909, column: 55, scope: !1470)
!1496 = !DILocation(line: 910, column: 46, scope: !1470)
!1497 = !DILocation(line: 910, column: 55, scope: !1470)
!1498 = !DILocation(line: 911, column: 46, scope: !1470)
!1499 = !DILocation(line: 911, column: 55, scope: !1470)
!1500 = !DILocation(line: 907, column: 20, scope: !1470)
!1501 = !DILocation(line: 913, column: 9, scope: !1502)
!1502 = distinct !DILexicalBlock(scope: !1470, file: !80, line: 913, column: 9)
!1503 = !DILocation(line: 913, column: 17, scope: !1502)
!1504 = !DILocation(line: 913, column: 14, scope: !1502)
!1505 = !DILocation(line: 913, column: 9, scope: !1470)
!1506 = !DILocation(line: 915, column: 29, scope: !1507)
!1507 = distinct !DILexicalBlock(scope: !1502, file: !80, line: 914, column: 7)
!1508 = !DILocation(line: 915, column: 35, scope: !1507)
!1509 = !DILocation(line: 915, column: 27, scope: !1507)
!1510 = !DILocation(line: 915, column: 9, scope: !1507)
!1511 = !DILocation(line: 915, column: 12, scope: !1507)
!1512 = !DILocation(line: 915, column: 15, scope: !1507)
!1513 = !DILocation(line: 915, column: 20, scope: !1507)
!1514 = !DILocation(line: 916, column: 13, scope: !1515)
!1515 = distinct !DILexicalBlock(scope: !1507, file: !80, line: 916, column: 13)
!1516 = !DILocation(line: 916, column: 17, scope: !1515)
!1517 = !DILocation(line: 916, column: 13, scope: !1507)
!1518 = !DILocation(line: 917, column: 17, scope: !1515)
!1519 = !DILocation(line: 917, column: 11, scope: !1515)
!1520 = !DILocation(line: 918, column: 39, scope: !1507)
!1521 = !DILocation(line: 918, column: 27, scope: !1507)
!1522 = !DILocation(line: 918, column: 25, scope: !1507)
!1523 = !DILocation(line: 918, column: 9, scope: !1507)
!1524 = !DILocation(line: 918, column: 12, scope: !1507)
!1525 = !DILocation(line: 918, column: 15, scope: !1507)
!1526 = !DILocation(line: 918, column: 19, scope: !1507)
!1527 = !DILocation(line: 919, column: 35, scope: !1507)
!1528 = !DILocation(line: 919, column: 40, scope: !1507)
!1529 = !DILocation(line: 919, column: 46, scope: !1507)
!1530 = !DILocation(line: 919, column: 51, scope: !1507)
!1531 = !DILocation(line: 919, column: 60, scope: !1507)
!1532 = !DILocation(line: 919, column: 69, scope: !1507)
!1533 = !DILocation(line: 920, column: 35, scope: !1507)
!1534 = !DILocation(line: 920, column: 42, scope: !1507)
!1535 = !DILocation(line: 920, column: 51, scope: !1507)
!1536 = !DILocation(line: 921, column: 35, scope: !1507)
!1537 = !DILocation(line: 921, column: 44, scope: !1507)
!1538 = !DILocation(line: 922, column: 35, scope: !1507)
!1539 = !DILocation(line: 922, column: 44, scope: !1507)
!1540 = !DILocation(line: 919, column: 9, scope: !1507)
!1541 = !DILocation(line: 923, column: 7, scope: !1507)
!1542 = !DILocation(line: 925, column: 13, scope: !1470)
!1543 = !DILocation(line: 925, column: 5, scope: !1470)
!1544 = !DILocation(line: 925, column: 11, scope: !1470)
!1545 = !DILocation(line: 926, column: 12, scope: !1470)
!1546 = !DILocation(line: 926, column: 5, scope: !1470)
!1547 = !DILocalVariable(name: "nmax", scope: !1548, file: !80, line: 890, type: !19)
!1548 = distinct !DILexicalBlock(scope: !1549, file: !80, line: 888, column: 5)
!1549 = distinct !DILexicalBlock(scope: !1550, file: !80, line: 887, column: 7)
!1550 = distinct !DISubprogram(name: "quotearg_n_options", scope: !80, file: !80, line: 877, type: !1551, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1562, retainedNodes: !4)
!1551 = !DISubroutineType(types: !1552)
!1552 = !{!7, !19, !16, !74, !1553}
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 64)
!1554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1555)
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !80, line: 65, size: 448, elements: !1556)
!1556 = !{!1557, !1558, !1559, !1560, !1561}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1555, file: !80, line: 68, baseType: !57, size: 32)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1555, file: !80, line: 71, baseType: !19, size: 32, offset: 32)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !1555, file: !80, line: 75, baseType: !98, size: 256, offset: 64)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !1555, file: !80, line: 78, baseType: !16, size: 64, offset: 320)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !1555, file: !80, line: 81, baseType: !16, size: 64, offset: 384)
!1562 = distinct !DICompileUnit(language: DW_LANG_C99, file: !55, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !56, retainedTypes: !72, globals: !1563, nameTableKind: None)
!1563 = !{!1564, !1566, !1568, !1570, !1572, !1574, !1581, !1583}
!1564 = !DIGlobalVariableExpression(var: !1565, expr: !DIExpression())
!1565 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !1562, file: !80, line: 85, type: !81, isLocal: false, isDefinition: true)
!1566 = !DIGlobalVariableExpression(var: !1567, expr: !DIExpression())
!1567 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !1562, file: !80, line: 101, type: !87, isLocal: false, isDefinition: true)
!1568 = !DIGlobalVariableExpression(var: !1569, expr: !DIExpression())
!1569 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !1562, file: !80, line: 1052, type: !1555, isLocal: false, isDefinition: true)
!1570 = !DIGlobalVariableExpression(var: !1571, expr: !DIExpression())
!1571 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !1562, file: !80, line: 116, type: !1555, isLocal: true, isDefinition: true)
!1572 = !DIGlobalVariableExpression(var: !1573, expr: !DIExpression())
!1573 = distinct !DIGlobalVariable(name: "slot0", scope: !1562, file: !80, line: 842, type: !105, isLocal: true, isDefinition: true)
!1574 = !DIGlobalVariableExpression(var: !1575, expr: !DIExpression())
!1575 = distinct !DIGlobalVariable(name: "slotvec", scope: !1562, file: !80, line: 845, type: !1576, isLocal: true, isDefinition: true)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64)
!1577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !80, line: 834, size: 128, elements: !1578)
!1578 = !{!1579, !1580}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1577, file: !80, line: 836, baseType: !74, size: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1577, file: !80, line: 837, baseType: !7, size: 64, offset: 64)
!1581 = !DIGlobalVariableExpression(var: !1582, expr: !DIExpression())
!1582 = distinct !DIGlobalVariable(name: "nslots", scope: !1562, file: !80, line: 843, type: !19, isLocal: true, isDefinition: true)
!1583 = !DIGlobalVariableExpression(var: !1584, expr: !DIExpression())
!1584 = distinct !DIGlobalVariable(name: "slotvec0", scope: !1562, file: !80, line: 844, type: !1577, isLocal: true, isDefinition: true)
!1585 = !DILocalVariable(name: "val", scope: !1586, file: !80, line: 904, type: !7)
!1586 = distinct !DILexicalBlock(scope: !1587, file: !80, line: 902, column: 3)
!1587 = distinct !DISubprogram(name: "quotearg_n_options", scope: !80, file: !80, line: 877, type: !1588, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1599, retainedNodes: !4)
!1588 = !DISubroutineType(types: !1589)
!1589 = !{!7, !19, !16, !74, !1590}
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64)
!1591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1592)
!1592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !80, line: 65, size: 448, elements: !1593)
!1593 = !{!1594, !1595, !1596, !1597, !1598}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1592, file: !80, line: 68, baseType: !57, size: 32)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1592, file: !80, line: 71, baseType: !19, size: 32, offset: 32)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !1592, file: !80, line: 75, baseType: !98, size: 256, offset: 64)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !1592, file: !80, line: 78, baseType: !16, size: 64, offset: 320)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !1592, file: !80, line: 81, baseType: !16, size: 64, offset: 384)
!1599 = distinct !DICompileUnit(language: DW_LANG_C99, file: !55, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !56, retainedTypes: !72, globals: !1600, nameTableKind: None)
!1600 = !{!1601, !1603, !1605, !1607, !1609, !1611, !1618, !1620}
!1601 = !DIGlobalVariableExpression(var: !1602, expr: !DIExpression())
!1602 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !1599, file: !80, line: 85, type: !81, isLocal: false, isDefinition: true)
!1603 = !DIGlobalVariableExpression(var: !1604, expr: !DIExpression())
!1604 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !1599, file: !80, line: 101, type: !87, isLocal: false, isDefinition: true)
!1605 = !DIGlobalVariableExpression(var: !1606, expr: !DIExpression())
!1606 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !1599, file: !80, line: 1052, type: !1592, isLocal: false, isDefinition: true)
!1607 = !DIGlobalVariableExpression(var: !1608, expr: !DIExpression())
!1608 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !1599, file: !80, line: 116, type: !1592, isLocal: true, isDefinition: true)
!1609 = !DIGlobalVariableExpression(var: !1610, expr: !DIExpression())
!1610 = distinct !DIGlobalVariable(name: "slot0", scope: !1599, file: !80, line: 842, type: !105, isLocal: true, isDefinition: true)
!1611 = !DIGlobalVariableExpression(var: !1612, expr: !DIExpression())
!1612 = distinct !DIGlobalVariable(name: "slotvec", scope: !1599, file: !80, line: 845, type: !1613, isLocal: true, isDefinition: true)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 64)
!1614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !80, line: 834, size: 128, elements: !1615)
!1615 = !{!1616, !1617}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1614, file: !80, line: 836, baseType: !74, size: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1614, file: !80, line: 837, baseType: !7, size: 64, offset: 64)
!1618 = !DIGlobalVariableExpression(var: !1619, expr: !DIExpression())
!1619 = distinct !DIGlobalVariable(name: "nslots", scope: !1599, file: !80, line: 843, type: !19, isLocal: true, isDefinition: true)
!1620 = !DIGlobalVariableExpression(var: !1621, expr: !DIExpression())
!1621 = distinct !DIGlobalVariable(name: "slotvec0", scope: !1599, file: !80, line: 844, type: !1614, isLocal: true, isDefinition: true)
!1622 = !DILocalVariable(name: "flags", scope: !1586, file: !80, line: 906, type: !19)
!1623 = !DILocalVariable(name: "qsize", scope: !1586, file: !80, line: 907, type: !74)
!1624 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !80, file: !80, line: 256, type: !1625, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !54, retainedNodes: !4)
!1625 = !DISubroutineType(types: !1626)
!1626 = !{!74, !7, !74, !16, !74, !57, !19, !1627, !16, !16}
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64)
!1628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !59)
!1629 = !DILocalVariable(name: "buffer", arg: 1, scope: !1624, file: !80, line: 256, type: !7)
!1630 = !DILocation(line: 256, column: 33, scope: !1624)
!1631 = !DILocalVariable(name: "buffersize", arg: 2, scope: !1624, file: !80, line: 256, type: !74)
!1632 = !DILocation(line: 256, column: 48, scope: !1624)
!1633 = !DILocalVariable(name: "arg", arg: 3, scope: !1624, file: !80, line: 257, type: !16)
!1634 = !DILocation(line: 257, column: 39, scope: !1624)
!1635 = !DILocalVariable(name: "argsize", arg: 4, scope: !1624, file: !80, line: 257, type: !74)
!1636 = !DILocation(line: 257, column: 51, scope: !1624)
!1637 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !1624, file: !80, line: 258, type: !57)
!1638 = !DILocation(line: 258, column: 46, scope: !1624)
!1639 = !DILocalVariable(name: "flags", arg: 6, scope: !1624, file: !80, line: 258, type: !19)
!1640 = !DILocation(line: 258, column: 65, scope: !1624)
!1641 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !1624, file: !80, line: 259, type: !1627)
!1642 = !DILocation(line: 259, column: 47, scope: !1624)
!1643 = !DILocalVariable(name: "left_quote", arg: 8, scope: !1624, file: !80, line: 260, type: !16)
!1644 = !DILocation(line: 260, column: 39, scope: !1624)
!1645 = !DILocalVariable(name: "right_quote", arg: 9, scope: !1624, file: !80, line: 261, type: !16)
!1646 = !DILocation(line: 261, column: 39, scope: !1624)
!1647 = !DILocalVariable(name: "i", scope: !1624, file: !80, line: 263, type: !74)
!1648 = !DILocation(line: 263, column: 10, scope: !1624)
!1649 = !DILocalVariable(name: "len", scope: !1624, file: !80, line: 264, type: !74)
!1650 = !DILocation(line: 264, column: 10, scope: !1624)
!1651 = !DILocalVariable(name: "orig_buffersize", scope: !1624, file: !80, line: 265, type: !74)
!1652 = !DILocation(line: 265, column: 10, scope: !1624)
!1653 = !DILocalVariable(name: "quote_string", scope: !1624, file: !80, line: 266, type: !16)
!1654 = !DILocation(line: 266, column: 15, scope: !1624)
!1655 = !DILocalVariable(name: "quote_string_len", scope: !1624, file: !80, line: 267, type: !74)
!1656 = !DILocation(line: 267, column: 10, scope: !1624)
!1657 = !DILocalVariable(name: "backslash_escapes", scope: !1624, file: !80, line: 268, type: !38)
!1658 = !DILocation(line: 268, column: 8, scope: !1624)
!1659 = !DILocalVariable(name: "unibyte_locale", scope: !1624, file: !80, line: 269, type: !38)
!1660 = !DILocation(line: 269, column: 8, scope: !1624)
!1661 = !DILocation(line: 269, column: 25, scope: !1624)
!1662 = !DILocation(line: 269, column: 36, scope: !1624)
!1663 = !DILocalVariable(name: "elide_outer_quotes", scope: !1624, file: !80, line: 270, type: !38)
!1664 = !DILocation(line: 270, column: 8, scope: !1624)
!1665 = !DILocation(line: 270, column: 30, scope: !1624)
!1666 = !DILocation(line: 270, column: 36, scope: !1624)
!1667 = !DILocation(line: 270, column: 61, scope: !1624)
!1668 = !DILocalVariable(name: "pending_shell_escape_end", scope: !1624, file: !80, line: 271, type: !38)
!1669 = !DILocation(line: 271, column: 8, scope: !1624)
!1670 = !DILocalVariable(name: "encountered_single_quote", scope: !1624, file: !80, line: 272, type: !38)
!1671 = !DILocation(line: 272, column: 8, scope: !1624)
!1672 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !1624, file: !80, line: 273, type: !38)
!1673 = !DILocation(line: 273, column: 8, scope: !1624)
!1674 = !DILocation(line: 273, column: 3, scope: !1624)
!1675 = !DILabel(scope: !1624, name: "process_input", file: !80, line: 314)
!1676 = !DILocation(line: 314, column: 2, scope: !1624)
!1677 = !DILocation(line: 316, column: 11, scope: !1624)
!1678 = !DILocation(line: 316, column: 3, scope: !1624)
!1679 = !DILocation(line: 319, column: 21, scope: !1680)
!1680 = distinct !DILexicalBlock(scope: !1624, file: !80, line: 317, column: 5)
!1681 = !DILocation(line: 320, column: 26, scope: !1680)
!1682 = !DILocation(line: 321, column: 7, scope: !1680)
!1683 = !DILocation(line: 323, column: 12, scope: !1684)
!1684 = distinct !DILexicalBlock(scope: !1680, file: !80, line: 323, column: 11)
!1685 = !DILocation(line: 323, column: 11, scope: !1680)
!1686 = !DILocation(line: 324, column: 9, scope: !1684)
!1687 = !DILocation(line: 324, column: 9, scope: !1688)
!1688 = distinct !DILexicalBlock(scope: !1689, file: !80, line: 324, column: 9)
!1689 = distinct !DILexicalBlock(scope: !1684, file: !80, line: 324, column: 9)
!1690 = !DILocation(line: 324, column: 9, scope: !1689)
!1691 = !DILocation(line: 325, column: 25, scope: !1680)
!1692 = !DILocation(line: 326, column: 20, scope: !1680)
!1693 = !DILocation(line: 327, column: 24, scope: !1680)
!1694 = !DILocation(line: 328, column: 7, scope: !1680)
!1695 = !DILocation(line: 331, column: 25, scope: !1680)
!1696 = !DILocation(line: 332, column: 26, scope: !1680)
!1697 = !DILocation(line: 333, column: 7, scope: !1680)
!1698 = !DILocation(line: 339, column: 13, scope: !1699)
!1699 = distinct !DILexicalBlock(scope: !1700, file: !80, line: 339, column: 13)
!1700 = distinct !DILexicalBlock(scope: !1680, file: !80, line: 338, column: 7)
!1701 = !DILocation(line: 339, column: 27, scope: !1699)
!1702 = !DILocation(line: 339, column: 13, scope: !1700)
!1703 = !DILocation(line: 362, column: 50, scope: !1704)
!1704 = distinct !DILexicalBlock(scope: !1699, file: !80, line: 340, column: 11)
!1705 = !DILocation(line: 362, column: 26, scope: !1704)
!1706 = !DILocation(line: 362, column: 24, scope: !1704)
!1707 = !DILocation(line: 363, column: 51, scope: !1704)
!1708 = !DILocation(line: 363, column: 27, scope: !1704)
!1709 = !DILocation(line: 363, column: 25, scope: !1704)
!1710 = !DILocation(line: 364, column: 11, scope: !1704)
!1711 = !DILocation(line: 365, column: 14, scope: !1712)
!1712 = distinct !DILexicalBlock(scope: !1700, file: !80, line: 365, column: 13)
!1713 = !DILocation(line: 365, column: 13, scope: !1700)
!1714 = !DILocation(line: 366, column: 31, scope: !1715)
!1715 = distinct !DILexicalBlock(scope: !1712, file: !80, line: 366, column: 11)
!1716 = !DILocation(line: 366, column: 29, scope: !1715)
!1717 = !DILocation(line: 366, column: 16, scope: !1715)
!1718 = !DILocation(line: 366, column: 44, scope: !1719)
!1719 = distinct !DILexicalBlock(scope: !1715, file: !80, line: 366, column: 11)
!1720 = !DILocation(line: 366, column: 43, scope: !1719)
!1721 = !DILocation(line: 366, column: 11, scope: !1715)
!1722 = !DILocation(line: 367, column: 13, scope: !1719)
!1723 = !DILocation(line: 367, column: 13, scope: !1724)
!1724 = distinct !DILexicalBlock(scope: !1725, file: !80, line: 367, column: 13)
!1725 = distinct !DILexicalBlock(scope: !1719, file: !80, line: 367, column: 13)
!1726 = !DILocation(line: 367, column: 13, scope: !1725)
!1727 = !DILocation(line: 366, column: 70, scope: !1719)
!1728 = !DILocation(line: 366, column: 11, scope: !1719)
!1729 = distinct !{!1729, !1721, !1730}
!1730 = !DILocation(line: 367, column: 13, scope: !1715)
!1731 = !DILocation(line: 368, column: 27, scope: !1700)
!1732 = !DILocation(line: 369, column: 24, scope: !1700)
!1733 = !DILocation(line: 369, column: 22, scope: !1700)
!1734 = !DILocation(line: 370, column: 36, scope: !1700)
!1735 = !DILocation(line: 370, column: 28, scope: !1700)
!1736 = !DILocation(line: 370, column: 26, scope: !1700)
!1737 = !DILocation(line: 372, column: 7, scope: !1680)
!1738 = !DILocation(line: 375, column: 25, scope: !1680)
!1739 = !DILocation(line: 376, column: 7, scope: !1680)
!1740 = !DILocation(line: 378, column: 26, scope: !1680)
!1741 = !DILocation(line: 379, column: 7, scope: !1680)
!1742 = !DILocation(line: 381, column: 12, scope: !1743)
!1743 = distinct !DILexicalBlock(scope: !1680, file: !80, line: 381, column: 11)
!1744 = !DILocation(line: 381, column: 11, scope: !1680)
!1745 = !DILocation(line: 382, column: 27, scope: !1743)
!1746 = !DILocation(line: 382, column: 9, scope: !1743)
!1747 = !DILocation(line: 383, column: 7, scope: !1680)
!1748 = !DILocation(line: 385, column: 21, scope: !1680)
!1749 = !DILocation(line: 386, column: 12, scope: !1750)
!1750 = distinct !DILexicalBlock(scope: !1680, file: !80, line: 386, column: 11)
!1751 = !DILocation(line: 386, column: 11, scope: !1680)
!1752 = !DILocation(line: 387, column: 9, scope: !1750)
!1753 = !DILocation(line: 387, column: 9, scope: !1754)
!1754 = distinct !DILexicalBlock(scope: !1755, file: !80, line: 387, column: 9)
!1755 = distinct !DILexicalBlock(scope: !1750, file: !80, line: 387, column: 9)
!1756 = !DILocation(line: 387, column: 9, scope: !1755)
!1757 = !DILocation(line: 388, column: 20, scope: !1680)
!1758 = !DILocation(line: 389, column: 24, scope: !1680)
!1759 = !DILocation(line: 390, column: 7, scope: !1680)
!1760 = !DILocation(line: 393, column: 26, scope: !1680)
!1761 = !DILocation(line: 394, column: 7, scope: !1680)
!1762 = !DILocation(line: 397, column: 7, scope: !1680)
!1763 = !DILocation(line: 400, column: 10, scope: !1764)
!1764 = distinct !DILexicalBlock(scope: !1624, file: !80, line: 400, column: 3)
!1765 = !DILocation(line: 400, column: 8, scope: !1764)
!1766 = !DILocation(line: 400, column: 19, scope: !1767)
!1767 = distinct !DILexicalBlock(scope: !1764, file: !80, line: 400, column: 3)
!1768 = !DILocation(line: 400, column: 27, scope: !1767)
!1769 = !DILocation(line: 400, column: 41, scope: !1767)
!1770 = !DILocation(line: 400, column: 45, scope: !1767)
!1771 = !DILocation(line: 400, column: 48, scope: !1767)
!1772 = !DILocation(line: 400, column: 58, scope: !1767)
!1773 = !DILocation(line: 400, column: 63, scope: !1767)
!1774 = !DILocation(line: 400, column: 60, scope: !1767)
!1775 = !DILocation(line: 400, column: 16, scope: !1767)
!1776 = !DILocation(line: 400, column: 3, scope: !1764)
!1777 = !DILocalVariable(name: "c", scope: !1778, file: !80, line: 402, type: !148)
!1778 = distinct !DILexicalBlock(scope: !1767, file: !80, line: 401, column: 5)
!1779 = !DILocation(line: 402, column: 21, scope: !1778)
!1780 = !DILocalVariable(name: "esc", scope: !1778, file: !80, line: 403, type: !148)
!1781 = !DILocation(line: 403, column: 21, scope: !1778)
!1782 = !DILocalVariable(name: "is_right_quote", scope: !1778, file: !80, line: 404, type: !38)
!1783 = !DILocation(line: 404, column: 12, scope: !1778)
!1784 = !DILocalVariable(name: "escaping", scope: !1778, file: !80, line: 405, type: !38)
!1785 = !DILocation(line: 405, column: 12, scope: !1778)
!1786 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !1778, file: !80, line: 406, type: !38)
!1787 = !DILocation(line: 406, column: 12, scope: !1778)
!1788 = !DILocation(line: 408, column: 11, scope: !1789)
!1789 = distinct !DILexicalBlock(scope: !1778, file: !80, line: 408, column: 11)
!1790 = !DILocation(line: 409, column: 11, scope: !1789)
!1791 = !DILocation(line: 409, column: 14, scope: !1789)
!1792 = !DILocation(line: 409, column: 28, scope: !1789)
!1793 = !DILocation(line: 410, column: 11, scope: !1789)
!1794 = !DILocation(line: 410, column: 14, scope: !1789)
!1795 = !DILocation(line: 411, column: 11, scope: !1789)
!1796 = !DILocation(line: 411, column: 15, scope: !1789)
!1797 = !DILocation(line: 411, column: 19, scope: !1789)
!1798 = !DILocation(line: 411, column: 17, scope: !1789)
!1799 = !DILocation(line: 412, column: 19, scope: !1789)
!1800 = !DILocation(line: 412, column: 27, scope: !1789)
!1801 = !DILocation(line: 412, column: 39, scope: !1789)
!1802 = !DILocation(line: 412, column: 46, scope: !1789)
!1803 = !DILocation(line: 412, column: 44, scope: !1789)
!1804 = !DILocation(line: 416, column: 40, scope: !1789)
!1805 = !DILocation(line: 416, column: 32, scope: !1789)
!1806 = !DILocation(line: 416, column: 30, scope: !1789)
!1807 = !DILocation(line: 416, column: 48, scope: !1789)
!1808 = !DILocation(line: 412, column: 15, scope: !1789)
!1809 = !DILocation(line: 417, column: 11, scope: !1789)
!1810 = !DILocation(line: 417, column: 22, scope: !1789)
!1811 = !DILocation(line: 417, column: 28, scope: !1789)
!1812 = !DILocation(line: 417, column: 26, scope: !1789)
!1813 = !DILocation(line: 417, column: 31, scope: !1789)
!1814 = !DILocation(line: 417, column: 45, scope: !1789)
!1815 = !DILocation(line: 417, column: 14, scope: !1789)
!1816 = !DILocation(line: 417, column: 63, scope: !1789)
!1817 = !DILocation(line: 408, column: 11, scope: !1778)
!1818 = !DILocation(line: 419, column: 15, scope: !1819)
!1819 = distinct !DILexicalBlock(scope: !1820, file: !80, line: 419, column: 15)
!1820 = distinct !DILexicalBlock(scope: !1789, file: !80, line: 418, column: 9)
!1821 = !DILocation(line: 419, column: 15, scope: !1820)
!1822 = !DILocation(line: 420, column: 13, scope: !1819)
!1823 = !DILocation(line: 421, column: 26, scope: !1820)
!1824 = !DILocation(line: 422, column: 9, scope: !1820)
!1825 = !DILocation(line: 424, column: 11, scope: !1778)
!1826 = !DILocation(line: 424, column: 15, scope: !1778)
!1827 = !DILocation(line: 424, column: 9, scope: !1778)
!1828 = !DILocation(line: 425, column: 15, scope: !1778)
!1829 = !DILocation(line: 425, column: 7, scope: !1778)
!1830 = !DILocation(line: 428, column: 15, scope: !1831)
!1831 = distinct !DILexicalBlock(scope: !1832, file: !80, line: 428, column: 15)
!1832 = distinct !DILexicalBlock(scope: !1778, file: !80, line: 426, column: 9)
!1833 = !DILocation(line: 428, column: 15, scope: !1832)
!1834 = !DILocation(line: 430, column: 15, scope: !1835)
!1835 = distinct !DILexicalBlock(scope: !1831, file: !80, line: 429, column: 13)
!1836 = !DILocation(line: 430, column: 15, scope: !1837)
!1837 = distinct !DILexicalBlock(scope: !1838, file: !80, line: 430, column: 15)
!1838 = distinct !DILexicalBlock(scope: !1835, file: !80, line: 430, column: 15)
!1839 = !DILocation(line: 430, column: 15, scope: !1838)
!1840 = !DILocation(line: 430, column: 15, scope: !1841)
!1841 = distinct !DILexicalBlock(scope: !1838, file: !80, line: 430, column: 15)
!1842 = !DILocation(line: 430, column: 15, scope: !1843)
!1843 = distinct !DILexicalBlock(scope: !1841, file: !80, line: 430, column: 15)
!1844 = !DILocation(line: 430, column: 15, scope: !1845)
!1845 = distinct !DILexicalBlock(scope: !1846, file: !80, line: 430, column: 15)
!1846 = distinct !DILexicalBlock(scope: !1843, file: !80, line: 430, column: 15)
!1847 = !DILocation(line: 430, column: 15, scope: !1846)
!1848 = !DILocation(line: 430, column: 15, scope: !1849)
!1849 = distinct !DILexicalBlock(scope: !1850, file: !80, line: 430, column: 15)
!1850 = distinct !DILexicalBlock(scope: !1843, file: !80, line: 430, column: 15)
!1851 = !DILocation(line: 430, column: 15, scope: !1850)
!1852 = !DILocation(line: 430, column: 15, scope: !1853)
!1853 = distinct !DILexicalBlock(scope: !1854, file: !80, line: 430, column: 15)
!1854 = distinct !DILexicalBlock(scope: !1843, file: !80, line: 430, column: 15)
!1855 = !DILocation(line: 430, column: 15, scope: !1854)
!1856 = !DILocation(line: 430, column: 15, scope: !1857)
!1857 = distinct !DILexicalBlock(scope: !1858, file: !80, line: 430, column: 15)
!1858 = distinct !DILexicalBlock(scope: !1838, file: !80, line: 430, column: 15)
!1859 = !DILocation(line: 430, column: 15, scope: !1858)
!1860 = !DILocation(line: 437, column: 19, scope: !1861)
!1861 = distinct !DILexicalBlock(scope: !1835, file: !80, line: 437, column: 19)
!1862 = !DILocation(line: 437, column: 33, scope: !1861)
!1863 = !DILocation(line: 438, column: 19, scope: !1861)
!1864 = !DILocation(line: 438, column: 22, scope: !1861)
!1865 = !DILocation(line: 438, column: 24, scope: !1861)
!1866 = !DILocation(line: 438, column: 30, scope: !1861)
!1867 = !DILocation(line: 438, column: 28, scope: !1861)
!1868 = !DILocation(line: 438, column: 38, scope: !1861)
!1869 = !DILocation(line: 438, column: 48, scope: !1861)
!1870 = !DILocation(line: 438, column: 52, scope: !1861)
!1871 = !DILocation(line: 438, column: 54, scope: !1861)
!1872 = !DILocation(line: 438, column: 45, scope: !1861)
!1873 = !DILocation(line: 438, column: 59, scope: !1861)
!1874 = !DILocation(line: 438, column: 62, scope: !1861)
!1875 = !DILocation(line: 438, column: 66, scope: !1861)
!1876 = !DILocation(line: 438, column: 68, scope: !1861)
!1877 = !DILocation(line: 438, column: 73, scope: !1861)
!1878 = !DILocation(line: 437, column: 19, scope: !1835)
!1879 = !DILocation(line: 440, column: 19, scope: !1880)
!1880 = distinct !DILexicalBlock(scope: !1861, file: !80, line: 439, column: 17)
!1881 = !DILocation(line: 440, column: 19, scope: !1882)
!1882 = distinct !DILexicalBlock(scope: !1883, file: !80, line: 440, column: 19)
!1883 = distinct !DILexicalBlock(scope: !1880, file: !80, line: 440, column: 19)
!1884 = !DILocation(line: 440, column: 19, scope: !1883)
!1885 = !DILocation(line: 441, column: 19, scope: !1880)
!1886 = !DILocation(line: 441, column: 19, scope: !1887)
!1887 = distinct !DILexicalBlock(scope: !1888, file: !80, line: 441, column: 19)
!1888 = distinct !DILexicalBlock(scope: !1880, file: !80, line: 441, column: 19)
!1889 = !DILocation(line: 441, column: 19, scope: !1888)
!1890 = !DILocation(line: 442, column: 17, scope: !1880)
!1891 = !DILocation(line: 443, column: 17, scope: !1835)
!1892 = !DILocation(line: 448, column: 13, scope: !1835)
!1893 = !DILocation(line: 449, column: 20, scope: !1894)
!1894 = distinct !DILexicalBlock(scope: !1831, file: !80, line: 449, column: 20)
!1895 = !DILocation(line: 449, column: 26, scope: !1894)
!1896 = !DILocation(line: 449, column: 20, scope: !1831)
!1897 = !DILocation(line: 450, column: 13, scope: !1894)
!1898 = !DILocation(line: 451, column: 11, scope: !1832)
!1899 = !DILocation(line: 454, column: 19, scope: !1832)
!1900 = !DILocation(line: 454, column: 11, scope: !1832)
!1901 = !DILocation(line: 457, column: 19, scope: !1902)
!1902 = distinct !DILexicalBlock(scope: !1903, file: !80, line: 457, column: 19)
!1903 = distinct !DILexicalBlock(scope: !1832, file: !80, line: 455, column: 13)
!1904 = !DILocation(line: 457, column: 19, scope: !1903)
!1905 = !DILocation(line: 458, column: 17, scope: !1902)
!1906 = !DILocation(line: 459, column: 15, scope: !1903)
!1907 = !DILocation(line: 462, column: 20, scope: !1908)
!1908 = distinct !DILexicalBlock(scope: !1903, file: !80, line: 462, column: 19)
!1909 = !DILocation(line: 462, column: 26, scope: !1908)
!1910 = !DILocation(line: 463, column: 19, scope: !1908)
!1911 = !DILocation(line: 463, column: 22, scope: !1908)
!1912 = !DILocation(line: 463, column: 24, scope: !1908)
!1913 = !DILocation(line: 463, column: 30, scope: !1908)
!1914 = !DILocation(line: 463, column: 28, scope: !1908)
!1915 = !DILocation(line: 463, column: 38, scope: !1908)
!1916 = !DILocation(line: 463, column: 41, scope: !1908)
!1917 = !DILocation(line: 463, column: 45, scope: !1908)
!1918 = !DILocation(line: 463, column: 47, scope: !1908)
!1919 = !DILocation(line: 463, column: 52, scope: !1908)
!1920 = !DILocation(line: 462, column: 19, scope: !1903)
!1921 = !DILocation(line: 464, column: 25, scope: !1908)
!1922 = !DILocation(line: 464, column: 29, scope: !1908)
!1923 = !DILocation(line: 464, column: 31, scope: !1908)
!1924 = !DILocation(line: 464, column: 17, scope: !1908)
!1925 = !DILocation(line: 471, column: 25, scope: !1926)
!1926 = distinct !DILexicalBlock(scope: !1927, file: !80, line: 471, column: 25)
!1927 = distinct !DILexicalBlock(scope: !1908, file: !80, line: 465, column: 19)
!1928 = !DILocation(line: 471, column: 25, scope: !1927)
!1929 = !DILocation(line: 472, column: 23, scope: !1926)
!1930 = !DILocation(line: 473, column: 25, scope: !1927)
!1931 = !DILocation(line: 473, column: 29, scope: !1927)
!1932 = !DILocation(line: 473, column: 31, scope: !1927)
!1933 = !DILocation(line: 473, column: 23, scope: !1927)
!1934 = !DILocation(line: 474, column: 23, scope: !1927)
!1935 = !DILocation(line: 475, column: 21, scope: !1927)
!1936 = !DILocation(line: 475, column: 21, scope: !1937)
!1937 = distinct !DILexicalBlock(scope: !1938, file: !80, line: 475, column: 21)
!1938 = distinct !DILexicalBlock(scope: !1927, file: !80, line: 475, column: 21)
!1939 = !DILocation(line: 475, column: 21, scope: !1938)
!1940 = !DILocation(line: 476, column: 21, scope: !1927)
!1941 = !DILocation(line: 476, column: 21, scope: !1942)
!1942 = distinct !DILexicalBlock(scope: !1943, file: !80, line: 476, column: 21)
!1943 = distinct !DILexicalBlock(scope: !1927, file: !80, line: 476, column: 21)
!1944 = !DILocation(line: 476, column: 21, scope: !1943)
!1945 = !DILocation(line: 477, column: 21, scope: !1927)
!1946 = !DILocation(line: 477, column: 21, scope: !1947)
!1947 = distinct !DILexicalBlock(scope: !1948, file: !80, line: 477, column: 21)
!1948 = distinct !DILexicalBlock(scope: !1927, file: !80, line: 477, column: 21)
!1949 = !DILocation(line: 477, column: 21, scope: !1948)
!1950 = !DILocation(line: 478, column: 21, scope: !1927)
!1951 = !DILocation(line: 478, column: 21, scope: !1952)
!1952 = distinct !DILexicalBlock(scope: !1953, file: !80, line: 478, column: 21)
!1953 = distinct !DILexicalBlock(scope: !1927, file: !80, line: 478, column: 21)
!1954 = !DILocation(line: 478, column: 21, scope: !1953)
!1955 = !DILocation(line: 479, column: 21, scope: !1927)
!1956 = !DILocation(line: 482, column: 21, scope: !1927)
!1957 = !DILocation(line: 483, column: 19, scope: !1927)
!1958 = !DILocation(line: 484, column: 15, scope: !1903)
!1959 = !DILocation(line: 487, column: 15, scope: !1903)
!1960 = !DILocation(line: 489, column: 11, scope: !1832)
!1961 = !DILocation(line: 491, column: 24, scope: !1832)
!1962 = !DILocation(line: 491, column: 31, scope: !1832)
!1963 = !DILocation(line: 492, column: 24, scope: !1832)
!1964 = !DILocation(line: 492, column: 31, scope: !1832)
!1965 = !DILocation(line: 493, column: 24, scope: !1832)
!1966 = !DILocation(line: 493, column: 31, scope: !1832)
!1967 = !DILocation(line: 494, column: 24, scope: !1832)
!1968 = !DILocation(line: 494, column: 31, scope: !1832)
!1969 = !DILocation(line: 495, column: 24, scope: !1832)
!1970 = !DILocation(line: 495, column: 31, scope: !1832)
!1971 = !DILocation(line: 496, column: 24, scope: !1832)
!1972 = !DILocation(line: 496, column: 31, scope: !1832)
!1973 = !DILocation(line: 497, column: 24, scope: !1832)
!1974 = !DILocation(line: 497, column: 31, scope: !1832)
!1975 = !DILocation(line: 498, column: 26, scope: !1832)
!1976 = !DILocation(line: 498, column: 24, scope: !1832)
!1977 = !DILocation(line: 500, column: 15, scope: !1978)
!1978 = distinct !DILexicalBlock(scope: !1832, file: !80, line: 500, column: 15)
!1979 = !DILocation(line: 500, column: 29, scope: !1978)
!1980 = !DILocation(line: 500, column: 15, scope: !1832)
!1981 = !DILocation(line: 502, column: 19, scope: !1982)
!1982 = distinct !DILexicalBlock(scope: !1983, file: !80, line: 502, column: 19)
!1983 = distinct !DILexicalBlock(scope: !1978, file: !80, line: 501, column: 13)
!1984 = !DILocation(line: 502, column: 19, scope: !1983)
!1985 = !DILocation(line: 503, column: 17, scope: !1982)
!1986 = !DILocation(line: 504, column: 15, scope: !1983)
!1987 = !DILocation(line: 509, column: 15, scope: !1988)
!1988 = distinct !DILexicalBlock(scope: !1832, file: !80, line: 509, column: 15)
!1989 = !DILocation(line: 509, column: 33, scope: !1988)
!1990 = !DILocation(line: 509, column: 36, scope: !1988)
!1991 = !DILocation(line: 509, column: 55, scope: !1988)
!1992 = !DILocation(line: 509, column: 58, scope: !1988)
!1993 = !DILocation(line: 509, column: 15, scope: !1832)
!1994 = !DILocation(line: 510, column: 13, scope: !1988)
!1995 = !DILabel(scope: !1832, name: "c_and_shell_escape", file: !80, line: 512)
!1996 = !DILocation(line: 512, column: 9, scope: !1832)
!1997 = !DILocation(line: 513, column: 15, scope: !1998)
!1998 = distinct !DILexicalBlock(scope: !1832, file: !80, line: 513, column: 15)
!1999 = !DILocation(line: 513, column: 29, scope: !1998)
!2000 = !DILocation(line: 514, column: 15, scope: !1998)
!2001 = !DILocation(line: 514, column: 18, scope: !1998)
!2002 = !DILocation(line: 513, column: 15, scope: !1832)
!2003 = !DILocation(line: 515, column: 13, scope: !1998)
!2004 = !DILabel(scope: !1832, name: "c_escape", file: !80, line: 517)
!2005 = !DILocation(line: 517, column: 9, scope: !1832)
!2006 = !DILocation(line: 518, column: 15, scope: !2007)
!2007 = distinct !DILexicalBlock(scope: !1832, file: !80, line: 518, column: 15)
!2008 = !DILocation(line: 518, column: 15, scope: !1832)
!2009 = !DILocation(line: 520, column: 19, scope: !2010)
!2010 = distinct !DILexicalBlock(scope: !2007, file: !80, line: 519, column: 13)
!2011 = !DILocation(line: 520, column: 17, scope: !2010)
!2012 = !DILocation(line: 521, column: 15, scope: !2010)
!2013 = !DILocation(line: 523, column: 11, scope: !1832)
!2014 = !DILocation(line: 526, column: 18, scope: !2015)
!2015 = distinct !DILexicalBlock(scope: !1832, file: !80, line: 526, column: 15)
!2016 = !DILocation(line: 526, column: 26, scope: !2015)
!2017 = !DILocation(line: 526, column: 15, scope: !1832)
!2018 = !DILocation(line: 526, column: 40, scope: !2015)
!2019 = !DILocation(line: 526, column: 47, scope: !2015)
!2020 = !DILocation(line: 526, column: 57, scope: !2015)
!2021 = !DILocation(line: 526, column: 65, scope: !2015)
!2022 = !DILocation(line: 527, column: 13, scope: !2015)
!2023 = !DILocation(line: 528, column: 11, scope: !1832)
!2024 = !DILocation(line: 530, column: 15, scope: !2025)
!2025 = distinct !DILexicalBlock(scope: !1832, file: !80, line: 530, column: 15)
!2026 = !DILocation(line: 530, column: 17, scope: !2025)
!2027 = !DILocation(line: 530, column: 15, scope: !1832)
!2028 = !DILocation(line: 531, column: 13, scope: !2025)
!2029 = !DILocation(line: 532, column: 11, scope: !1832)
!2030 = !DILocation(line: 534, column: 36, scope: !1832)
!2031 = !DILocation(line: 535, column: 11, scope: !1832)
!2032 = !DILocation(line: 548, column: 15, scope: !2033)
!2033 = distinct !DILexicalBlock(scope: !1832, file: !80, line: 548, column: 15)
!2034 = !DILocation(line: 548, column: 29, scope: !2033)
!2035 = !DILocation(line: 549, column: 15, scope: !2033)
!2036 = !DILocation(line: 549, column: 18, scope: !2033)
!2037 = !DILocation(line: 548, column: 15, scope: !1832)
!2038 = !DILocation(line: 550, column: 13, scope: !2033)
!2039 = !DILocation(line: 551, column: 11, scope: !1832)
!2040 = !DILocation(line: 554, column: 36, scope: !1832)
!2041 = !DILocation(line: 555, column: 36, scope: !1832)
!2042 = !DILocation(line: 556, column: 15, scope: !2043)
!2043 = distinct !DILexicalBlock(scope: !1832, file: !80, line: 556, column: 15)
!2044 = !DILocation(line: 556, column: 29, scope: !2043)
!2045 = !DILocation(line: 556, column: 15, scope: !1832)
!2046 = !DILocation(line: 558, column: 19, scope: !2047)
!2047 = distinct !DILexicalBlock(scope: !2048, file: !80, line: 558, column: 19)
!2048 = distinct !DILexicalBlock(scope: !2043, file: !80, line: 557, column: 13)
!2049 = !DILocation(line: 558, column: 19, scope: !2048)
!2050 = !DILocation(line: 559, column: 17, scope: !2047)
!2051 = !DILocation(line: 561, column: 19, scope: !2052)
!2052 = distinct !DILexicalBlock(scope: !2048, file: !80, line: 561, column: 19)
!2053 = !DILocation(line: 561, column: 30, scope: !2052)
!2054 = !DILocation(line: 561, column: 35, scope: !2052)
!2055 = !DILocation(line: 561, column: 19, scope: !2048)
!2056 = !DILocation(line: 566, column: 37, scope: !2057)
!2057 = distinct !DILexicalBlock(scope: !2052, file: !80, line: 562, column: 17)
!2058 = !DILocation(line: 566, column: 35, scope: !2057)
!2059 = !DILocation(line: 567, column: 30, scope: !2057)
!2060 = !DILocation(line: 568, column: 17, scope: !2057)
!2061 = !DILocation(line: 570, column: 15, scope: !2048)
!2062 = !DILocation(line: 570, column: 15, scope: !2063)
!2063 = distinct !DILexicalBlock(scope: !2064, file: !80, line: 570, column: 15)
!2064 = distinct !DILexicalBlock(scope: !2048, file: !80, line: 570, column: 15)
!2065 = !DILocation(line: 570, column: 15, scope: !2064)
!2066 = !DILocation(line: 571, column: 15, scope: !2048)
!2067 = !DILocation(line: 571, column: 15, scope: !2068)
!2068 = distinct !DILexicalBlock(scope: !2069, file: !80, line: 571, column: 15)
!2069 = distinct !DILexicalBlock(scope: !2048, file: !80, line: 571, column: 15)
!2070 = !DILocation(line: 571, column: 15, scope: !2069)
!2071 = !DILocation(line: 572, column: 15, scope: !2048)
!2072 = !DILocation(line: 572, column: 15, scope: !2073)
!2073 = distinct !DILexicalBlock(scope: !2074, file: !80, line: 572, column: 15)
!2074 = distinct !DILexicalBlock(scope: !2048, file: !80, line: 572, column: 15)
!2075 = !DILocation(line: 572, column: 15, scope: !2074)
!2076 = !DILocation(line: 573, column: 40, scope: !2048)
!2077 = !DILocation(line: 574, column: 13, scope: !2048)
!2078 = !DILocation(line: 575, column: 11, scope: !1832)
!2079 = !DILocation(line: 599, column: 36, scope: !1832)
!2080 = !DILocation(line: 600, column: 11, scope: !1832)
!2081 = !DILocalVariable(name: "m", scope: !2082, file: !80, line: 610, type: !74)
!2082 = distinct !DILexicalBlock(scope: !1832, file: !80, line: 608, column: 11)
!2083 = !DILocation(line: 610, column: 20, scope: !2082)
!2084 = !DILocalVariable(name: "printable", scope: !2082, file: !80, line: 612, type: !38)
!2085 = !DILocation(line: 612, column: 18, scope: !2082)
!2086 = !DILocation(line: 614, column: 17, scope: !2087)
!2087 = distinct !DILexicalBlock(scope: !2082, file: !80, line: 614, column: 17)
!2088 = !DILocation(line: 614, column: 17, scope: !2082)
!2089 = !DILocation(line: 616, column: 19, scope: !2090)
!2090 = distinct !DILexicalBlock(scope: !2087, file: !80, line: 615, column: 15)
!2091 = !DILocation(line: 617, column: 29, scope: !2090)
!2092 = !DILocation(line: 617, column: 41, scope: !2090)
!2093 = !DILocation(line: 617, column: 27, scope: !2090)
!2094 = !DILocation(line: 618, column: 15, scope: !2090)
!2095 = !DILocalVariable(name: "mbstate", scope: !2096, file: !80, line: 621, type: !2097)
!2096 = distinct !DILexicalBlock(scope: !2087, file: !80, line: 620, column: 15)
!2097 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !2098, line: 6, baseType: !2099)
!2098 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h", directory: "")
!2099 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !2100, line: 21, baseType: !2101)
!2100 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", directory: "")
!2101 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2100, line: 13, size: 64, elements: !2102)
!2102 = !{!2103, !2104}
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2101, file: !2100, line: 15, baseType: !19, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2101, file: !2100, line: 20, baseType: !2105, size: 32, offset: 32)
!2105 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2101, file: !2100, line: 16, size: 32, elements: !2106)
!2106 = !{!2107, !2108}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2105, file: !2100, line: 18, baseType: !59, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2105, file: !2100, line: 19, baseType: !2109, size: 32)
!2109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 32, elements: !2110)
!2110 = !{!2111}
!2111 = !DISubrange(count: 4)
!2112 = !DILocation(line: 621, column: 27, scope: !2096)
!2113 = !DILocation(line: 622, column: 17, scope: !2096)
!2114 = !DILocation(line: 624, column: 19, scope: !2096)
!2115 = !DILocation(line: 625, column: 27, scope: !2096)
!2116 = !DILocation(line: 626, column: 21, scope: !2117)
!2117 = distinct !DILexicalBlock(scope: !2096, file: !80, line: 626, column: 21)
!2118 = !DILocation(line: 626, column: 29, scope: !2117)
!2119 = !DILocation(line: 626, column: 21, scope: !2096)
!2120 = !DILocation(line: 627, column: 37, scope: !2117)
!2121 = !DILocation(line: 627, column: 29, scope: !2117)
!2122 = !DILocation(line: 627, column: 27, scope: !2117)
!2123 = !DILocation(line: 627, column: 19, scope: !2117)
!2124 = !DILocation(line: 629, column: 17, scope: !2096)
!2125 = !DILocalVariable(name: "w", scope: !2126, file: !80, line: 631, type: !2127)
!2126 = distinct !DILexicalBlock(scope: !2096, file: !80, line: 630, column: 19)
!2127 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !75, line: 74, baseType: !19)
!2128 = !DILocation(line: 631, column: 29, scope: !2126)
!2129 = !DILocalVariable(name: "bytes", scope: !2126, file: !80, line: 632, type: !74)
!2130 = !DILocation(line: 632, column: 28, scope: !2126)
!2131 = !DILocation(line: 632, column: 50, scope: !2126)
!2132 = !DILocation(line: 632, column: 54, scope: !2126)
!2133 = !DILocation(line: 632, column: 58, scope: !2126)
!2134 = !DILocation(line: 632, column: 56, scope: !2126)
!2135 = !DILocation(line: 633, column: 45, scope: !2126)
!2136 = !DILocation(line: 633, column: 56, scope: !2126)
!2137 = !DILocation(line: 633, column: 60, scope: !2126)
!2138 = !DILocation(line: 633, column: 58, scope: !2126)
!2139 = !DILocation(line: 633, column: 53, scope: !2126)
!2140 = !DILocation(line: 632, column: 36, scope: !2126)
!2141 = !DILocation(line: 634, column: 25, scope: !2142)
!2142 = distinct !DILexicalBlock(scope: !2126, file: !80, line: 634, column: 25)
!2143 = !DILocation(line: 634, column: 31, scope: !2142)
!2144 = !DILocation(line: 634, column: 25, scope: !2126)
!2145 = !DILocation(line: 635, column: 23, scope: !2142)
!2146 = !DILocation(line: 636, column: 30, scope: !2147)
!2147 = distinct !DILexicalBlock(scope: !2142, file: !80, line: 636, column: 30)
!2148 = !DILocation(line: 636, column: 36, scope: !2147)
!2149 = !DILocation(line: 636, column: 30, scope: !2142)
!2150 = !DILocation(line: 638, column: 35, scope: !2151)
!2151 = distinct !DILexicalBlock(scope: !2147, file: !80, line: 637, column: 23)
!2152 = !DILocation(line: 639, column: 25, scope: !2151)
!2153 = !DILocation(line: 641, column: 30, scope: !2154)
!2154 = distinct !DILexicalBlock(scope: !2147, file: !80, line: 641, column: 30)
!2155 = !DILocation(line: 641, column: 36, scope: !2154)
!2156 = !DILocation(line: 641, column: 30, scope: !2147)
!2157 = !DILocation(line: 643, column: 35, scope: !2158)
!2158 = distinct !DILexicalBlock(scope: !2154, file: !80, line: 642, column: 23)
!2159 = !DILocation(line: 644, column: 25, scope: !2158)
!2160 = !DILocation(line: 644, column: 32, scope: !2158)
!2161 = !DILocation(line: 644, column: 36, scope: !2158)
!2162 = !DILocation(line: 644, column: 34, scope: !2158)
!2163 = !DILocation(line: 644, column: 40, scope: !2158)
!2164 = !DILocation(line: 644, column: 38, scope: !2158)
!2165 = !DILocation(line: 644, column: 48, scope: !2158)
!2166 = !DILocation(line: 644, column: 51, scope: !2158)
!2167 = !DILocation(line: 644, column: 55, scope: !2158)
!2168 = !DILocation(line: 644, column: 59, scope: !2158)
!2169 = !DILocation(line: 644, column: 57, scope: !2158)
!2170 = !DILocation(line: 0, scope: !2158)
!2171 = !DILocation(line: 645, column: 28, scope: !2158)
!2172 = distinct !{!2172, !2159, !2171}
!2173 = !DILocation(line: 646, column: 25, scope: !2158)
!2174 = !DILocation(line: 654, column: 44, scope: !2175)
!2175 = distinct !DILexicalBlock(scope: !2176, file: !80, line: 654, column: 29)
!2176 = distinct !DILexicalBlock(scope: !2154, file: !80, line: 649, column: 23)
!2177 = !DILocation(line: 655, column: 29, scope: !2175)
!2178 = !DILocation(line: 655, column: 32, scope: !2175)
!2179 = !DILocation(line: 655, column: 46, scope: !2175)
!2180 = !DILocation(line: 654, column: 29, scope: !2176)
!2181 = !DILocalVariable(name: "j", scope: !2182, file: !80, line: 657, type: !74)
!2182 = distinct !DILexicalBlock(scope: !2175, file: !80, line: 656, column: 27)
!2183 = !DILocation(line: 657, column: 36, scope: !2182)
!2184 = !DILocation(line: 658, column: 36, scope: !2185)
!2185 = distinct !DILexicalBlock(scope: !2182, file: !80, line: 658, column: 29)
!2186 = !DILocation(line: 658, column: 34, scope: !2185)
!2187 = !DILocation(line: 658, column: 41, scope: !2188)
!2188 = distinct !DILexicalBlock(scope: !2185, file: !80, line: 658, column: 29)
!2189 = !DILocation(line: 658, column: 45, scope: !2188)
!2190 = !DILocation(line: 658, column: 43, scope: !2188)
!2191 = !DILocation(line: 658, column: 29, scope: !2185)
!2192 = !DILocation(line: 659, column: 39, scope: !2188)
!2193 = !DILocation(line: 659, column: 43, scope: !2188)
!2194 = !DILocation(line: 659, column: 47, scope: !2188)
!2195 = !DILocation(line: 659, column: 45, scope: !2188)
!2196 = !DILocation(line: 659, column: 51, scope: !2188)
!2197 = !DILocation(line: 659, column: 49, scope: !2188)
!2198 = !DILocation(line: 659, column: 31, scope: !2188)
!2199 = !DILocation(line: 663, column: 35, scope: !2200)
!2200 = distinct !DILexicalBlock(scope: !2188, file: !80, line: 660, column: 33)
!2201 = !DILocation(line: 666, column: 35, scope: !2200)
!2202 = !DILocation(line: 667, column: 33, scope: !2200)
!2203 = !DILocation(line: 658, column: 53, scope: !2188)
!2204 = !DILocation(line: 658, column: 29, scope: !2188)
!2205 = distinct !{!2205, !2191, !2206}
!2206 = !DILocation(line: 667, column: 33, scope: !2185)
!2207 = !DILocation(line: 668, column: 27, scope: !2182)
!2208 = !DILocation(line: 670, column: 41, scope: !2209)
!2209 = distinct !DILexicalBlock(scope: !2176, file: !80, line: 670, column: 29)
!2210 = !DILocation(line: 670, column: 31, scope: !2209)
!2211 = !DILocation(line: 670, column: 29, scope: !2176)
!2212 = !DILocation(line: 671, column: 37, scope: !2209)
!2213 = !DILocation(line: 671, column: 27, scope: !2209)
!2214 = !DILocation(line: 672, column: 30, scope: !2176)
!2215 = !DILocation(line: 672, column: 27, scope: !2176)
!2216 = !DILocation(line: 674, column: 19, scope: !2126)
!2217 = !DILocation(line: 675, column: 26, scope: !2096)
!2218 = !DILocation(line: 675, column: 24, scope: !2096)
!2219 = distinct !{!2219, !2124, !2220}
!2220 = !DILocation(line: 675, column: 44, scope: !2096)
!2221 = !DILocation(line: 678, column: 40, scope: !2082)
!2222 = !DILocation(line: 678, column: 38, scope: !2082)
!2223 = !DILocation(line: 680, column: 21, scope: !2224)
!2224 = distinct !DILexicalBlock(scope: !2082, file: !80, line: 680, column: 17)
!2225 = !DILocation(line: 680, column: 19, scope: !2224)
!2226 = !DILocation(line: 680, column: 23, scope: !2224)
!2227 = !DILocation(line: 680, column: 27, scope: !2224)
!2228 = !DILocation(line: 680, column: 45, scope: !2224)
!2229 = !DILocation(line: 680, column: 50, scope: !2224)
!2230 = !DILocation(line: 680, column: 17, scope: !2082)
!2231 = !DILocalVariable(name: "ilim", scope: !2232, file: !80, line: 684, type: !74)
!2232 = distinct !DILexicalBlock(scope: !2224, file: !80, line: 681, column: 15)
!2233 = !DILocation(line: 684, column: 24, scope: !2232)
!2234 = !DILocation(line: 684, column: 31, scope: !2232)
!2235 = !DILocation(line: 684, column: 35, scope: !2232)
!2236 = !DILocation(line: 684, column: 33, scope: !2232)
!2237 = !DILocation(line: 686, column: 17, scope: !2232)
!2238 = !DILocation(line: 688, column: 25, scope: !2239)
!2239 = distinct !DILexicalBlock(scope: !2240, file: !80, line: 688, column: 25)
!2240 = distinct !DILexicalBlock(scope: !2241, file: !80, line: 687, column: 19)
!2241 = distinct !DILexicalBlock(scope: !2242, file: !80, line: 686, column: 17)
!2242 = distinct !DILexicalBlock(scope: !2232, file: !80, line: 686, column: 17)
!2243 = !DILocation(line: 688, column: 43, scope: !2239)
!2244 = !DILocation(line: 688, column: 48, scope: !2239)
!2245 = !DILocation(line: 688, column: 25, scope: !2240)
!2246 = !DILocation(line: 690, column: 25, scope: !2247)
!2247 = distinct !DILexicalBlock(scope: !2239, file: !80, line: 689, column: 23)
!2248 = !DILocation(line: 690, column: 25, scope: !2249)
!2249 = distinct !DILexicalBlock(scope: !2250, file: !80, line: 690, column: 25)
!2250 = distinct !DILexicalBlock(scope: !2247, file: !80, line: 690, column: 25)
!2251 = !DILocation(line: 690, column: 25, scope: !2250)
!2252 = !DILocation(line: 690, column: 25, scope: !2253)
!2253 = distinct !DILexicalBlock(scope: !2250, file: !80, line: 690, column: 25)
!2254 = !DILocation(line: 690, column: 25, scope: !2255)
!2255 = distinct !DILexicalBlock(scope: !2253, file: !80, line: 690, column: 25)
!2256 = !DILocation(line: 690, column: 25, scope: !2257)
!2257 = distinct !DILexicalBlock(scope: !2258, file: !80, line: 690, column: 25)
!2258 = distinct !DILexicalBlock(scope: !2255, file: !80, line: 690, column: 25)
!2259 = !DILocation(line: 690, column: 25, scope: !2258)
!2260 = !DILocation(line: 690, column: 25, scope: !2261)
!2261 = distinct !DILexicalBlock(scope: !2262, file: !80, line: 690, column: 25)
!2262 = distinct !DILexicalBlock(scope: !2255, file: !80, line: 690, column: 25)
!2263 = !DILocation(line: 690, column: 25, scope: !2262)
!2264 = !DILocation(line: 690, column: 25, scope: !2265)
!2265 = distinct !DILexicalBlock(scope: !2266, file: !80, line: 690, column: 25)
!2266 = distinct !DILexicalBlock(scope: !2255, file: !80, line: 690, column: 25)
!2267 = !DILocation(line: 690, column: 25, scope: !2266)
!2268 = !DILocation(line: 690, column: 25, scope: !2269)
!2269 = distinct !DILexicalBlock(scope: !2270, file: !80, line: 690, column: 25)
!2270 = distinct !DILexicalBlock(scope: !2250, file: !80, line: 690, column: 25)
!2271 = !DILocation(line: 690, column: 25, scope: !2270)
!2272 = !DILocation(line: 691, column: 25, scope: !2247)
!2273 = !DILocation(line: 691, column: 25, scope: !2274)
!2274 = distinct !DILexicalBlock(scope: !2275, file: !80, line: 691, column: 25)
!2275 = distinct !DILexicalBlock(scope: !2247, file: !80, line: 691, column: 25)
!2276 = !DILocation(line: 691, column: 25, scope: !2275)
!2277 = !DILocation(line: 692, column: 25, scope: !2247)
!2278 = !DILocation(line: 692, column: 25, scope: !2279)
!2279 = distinct !DILexicalBlock(scope: !2280, file: !80, line: 692, column: 25)
!2280 = distinct !DILexicalBlock(scope: !2247, file: !80, line: 692, column: 25)
!2281 = !DILocation(line: 692, column: 25, scope: !2280)
!2282 = !DILocation(line: 693, column: 36, scope: !2247)
!2283 = !DILocation(line: 693, column: 38, scope: !2247)
!2284 = !DILocation(line: 693, column: 33, scope: !2247)
!2285 = !DILocation(line: 693, column: 29, scope: !2247)
!2286 = !DILocation(line: 693, column: 27, scope: !2247)
!2287 = !DILocation(line: 694, column: 23, scope: !2247)
!2288 = !DILocation(line: 695, column: 30, scope: !2289)
!2289 = distinct !DILexicalBlock(scope: !2239, file: !80, line: 695, column: 30)
!2290 = !DILocation(line: 695, column: 30, scope: !2239)
!2291 = !DILocation(line: 697, column: 25, scope: !2292)
!2292 = distinct !DILexicalBlock(scope: !2289, file: !80, line: 696, column: 23)
!2293 = !DILocation(line: 697, column: 25, scope: !2294)
!2294 = distinct !DILexicalBlock(scope: !2295, file: !80, line: 697, column: 25)
!2295 = distinct !DILexicalBlock(scope: !2292, file: !80, line: 697, column: 25)
!2296 = !DILocation(line: 697, column: 25, scope: !2295)
!2297 = !DILocation(line: 698, column: 40, scope: !2292)
!2298 = !DILocation(line: 699, column: 23, scope: !2292)
!2299 = !DILocation(line: 700, column: 25, scope: !2300)
!2300 = distinct !DILexicalBlock(scope: !2240, file: !80, line: 700, column: 25)
!2301 = !DILocation(line: 700, column: 33, scope: !2300)
!2302 = !DILocation(line: 700, column: 35, scope: !2300)
!2303 = !DILocation(line: 700, column: 30, scope: !2300)
!2304 = !DILocation(line: 700, column: 25, scope: !2240)
!2305 = !DILocation(line: 701, column: 23, scope: !2300)
!2306 = !DILocation(line: 702, column: 21, scope: !2240)
!2307 = !DILocation(line: 702, column: 21, scope: !2308)
!2308 = distinct !DILexicalBlock(scope: !2309, file: !80, line: 702, column: 21)
!2309 = distinct !DILexicalBlock(scope: !2240, file: !80, line: 702, column: 21)
!2310 = !DILocation(line: 702, column: 21, scope: !2309)
!2311 = !DILocation(line: 702, column: 21, scope: !2312)
!2312 = distinct !DILexicalBlock(scope: !2308, file: !80, line: 702, column: 21)
!2313 = !DILocation(line: 702, column: 21, scope: !2314)
!2314 = distinct !DILexicalBlock(scope: !2315, file: !80, line: 702, column: 21)
!2315 = distinct !DILexicalBlock(scope: !2312, file: !80, line: 702, column: 21)
!2316 = !DILocation(line: 702, column: 21, scope: !2315)
!2317 = !DILocation(line: 702, column: 21, scope: !2318)
!2318 = distinct !DILexicalBlock(scope: !2319, file: !80, line: 702, column: 21)
!2319 = distinct !DILexicalBlock(scope: !2312, file: !80, line: 702, column: 21)
!2320 = !DILocation(line: 702, column: 21, scope: !2319)
!2321 = !DILocation(line: 703, column: 21, scope: !2240)
!2322 = !DILocation(line: 703, column: 21, scope: !2323)
!2323 = distinct !DILexicalBlock(scope: !2324, file: !80, line: 703, column: 21)
!2324 = distinct !DILexicalBlock(scope: !2240, file: !80, line: 703, column: 21)
!2325 = !DILocation(line: 703, column: 21, scope: !2324)
!2326 = !DILocation(line: 704, column: 25, scope: !2240)
!2327 = !DILocation(line: 704, column: 29, scope: !2240)
!2328 = !DILocation(line: 704, column: 23, scope: !2240)
!2329 = !DILocation(line: 686, column: 17, scope: !2241)
!2330 = distinct !{!2330, !2331, !2332}
!2331 = !DILocation(line: 686, column: 17, scope: !2242)
!2332 = !DILocation(line: 705, column: 19, scope: !2242)
!2333 = !DILocation(line: 707, column: 17, scope: !2232)
!2334 = !DILocation(line: 710, column: 9, scope: !1832)
!2335 = !DILocation(line: 712, column: 16, scope: !2336)
!2336 = distinct !DILexicalBlock(scope: !1778, file: !80, line: 712, column: 11)
!2337 = !DILocation(line: 712, column: 34, scope: !2336)
!2338 = !DILocation(line: 712, column: 37, scope: !2336)
!2339 = !DILocation(line: 712, column: 51, scope: !2336)
!2340 = !DILocation(line: 713, column: 15, scope: !2336)
!2341 = !DILocation(line: 713, column: 18, scope: !2336)
!2342 = !DILocation(line: 714, column: 14, scope: !2336)
!2343 = !DILocation(line: 714, column: 17, scope: !2336)
!2344 = !DILocation(line: 715, column: 14, scope: !2336)
!2345 = !DILocation(line: 715, column: 17, scope: !2336)
!2346 = !DILocation(line: 715, column: 33, scope: !2336)
!2347 = !DILocation(line: 715, column: 35, scope: !2336)
!2348 = !DILocation(line: 715, column: 51, scope: !2336)
!2349 = !DILocation(line: 715, column: 53, scope: !2336)
!2350 = !DILocation(line: 715, column: 47, scope: !2336)
!2351 = !DILocation(line: 715, column: 65, scope: !2336)
!2352 = !DILocation(line: 716, column: 11, scope: !2336)
!2353 = !DILocation(line: 716, column: 15, scope: !2336)
!2354 = !DILocation(line: 712, column: 11, scope: !1778)
!2355 = !DILocation(line: 717, column: 9, scope: !2336)
!2356 = !DILabel(scope: !1778, name: "store_escape", file: !80, line: 719)
!2357 = !DILocation(line: 719, column: 5, scope: !1778)
!2358 = !DILocation(line: 720, column: 7, scope: !1778)
!2359 = !DILocation(line: 720, column: 7, scope: !2360)
!2360 = distinct !DILexicalBlock(scope: !2361, file: !80, line: 720, column: 7)
!2361 = distinct !DILexicalBlock(scope: !1778, file: !80, line: 720, column: 7)
!2362 = !DILocation(line: 720, column: 7, scope: !2361)
!2363 = !DILocation(line: 720, column: 7, scope: !2364)
!2364 = distinct !DILexicalBlock(scope: !2361, file: !80, line: 720, column: 7)
!2365 = !DILocation(line: 720, column: 7, scope: !2366)
!2366 = distinct !DILexicalBlock(scope: !2364, file: !80, line: 720, column: 7)
!2367 = !DILocation(line: 720, column: 7, scope: !2368)
!2368 = distinct !DILexicalBlock(scope: !2369, file: !80, line: 720, column: 7)
!2369 = distinct !DILexicalBlock(scope: !2366, file: !80, line: 720, column: 7)
!2370 = !DILocation(line: 720, column: 7, scope: !2369)
!2371 = !DILocation(line: 720, column: 7, scope: !2372)
!2372 = distinct !DILexicalBlock(scope: !2373, file: !80, line: 720, column: 7)
!2373 = distinct !DILexicalBlock(scope: !2366, file: !80, line: 720, column: 7)
!2374 = !DILocation(line: 720, column: 7, scope: !2373)
!2375 = !DILocation(line: 720, column: 7, scope: !2376)
!2376 = distinct !DILexicalBlock(scope: !2377, file: !80, line: 720, column: 7)
!2377 = distinct !DILexicalBlock(scope: !2366, file: !80, line: 720, column: 7)
!2378 = !DILocation(line: 720, column: 7, scope: !2377)
!2379 = !DILocation(line: 720, column: 7, scope: !2380)
!2380 = distinct !DILexicalBlock(scope: !2381, file: !80, line: 720, column: 7)
!2381 = distinct !DILexicalBlock(scope: !2361, file: !80, line: 720, column: 7)
!2382 = !DILocation(line: 720, column: 7, scope: !2381)
!2383 = !DILabel(scope: !1778, name: "store_c", file: !80, line: 722)
!2384 = !DILocation(line: 722, column: 5, scope: !1778)
!2385 = !DILocation(line: 723, column: 7, scope: !1778)
!2386 = !DILocation(line: 723, column: 7, scope: !2387)
!2387 = distinct !DILexicalBlock(scope: !2388, file: !80, line: 723, column: 7)
!2388 = distinct !DILexicalBlock(scope: !1778, file: !80, line: 723, column: 7)
!2389 = !DILocation(line: 723, column: 7, scope: !2388)
!2390 = !DILocation(line: 723, column: 7, scope: !2391)
!2391 = distinct !DILexicalBlock(scope: !2387, file: !80, line: 723, column: 7)
!2392 = !DILocation(line: 723, column: 7, scope: !2393)
!2393 = distinct !DILexicalBlock(scope: !2394, file: !80, line: 723, column: 7)
!2394 = distinct !DILexicalBlock(scope: !2391, file: !80, line: 723, column: 7)
!2395 = !DILocation(line: 723, column: 7, scope: !2394)
!2396 = !DILocation(line: 723, column: 7, scope: !2397)
!2397 = distinct !DILexicalBlock(scope: !2398, file: !80, line: 723, column: 7)
!2398 = distinct !DILexicalBlock(scope: !2391, file: !80, line: 723, column: 7)
!2399 = !DILocation(line: 723, column: 7, scope: !2398)
!2400 = !DILocation(line: 724, column: 7, scope: !1778)
!2401 = !DILocation(line: 724, column: 7, scope: !2402)
!2402 = distinct !DILexicalBlock(scope: !2403, file: !80, line: 724, column: 7)
!2403 = distinct !DILexicalBlock(scope: !1778, file: !80, line: 724, column: 7)
!2404 = !DILocation(line: 724, column: 7, scope: !2403)
!2405 = !DILocation(line: 726, column: 13, scope: !2406)
!2406 = distinct !DILexicalBlock(scope: !1778, file: !80, line: 726, column: 11)
!2407 = !DILocation(line: 726, column: 11, scope: !1778)
!2408 = !DILocation(line: 727, column: 38, scope: !2406)
!2409 = !DILocation(line: 727, column: 9, scope: !2406)
!2410 = !DILocation(line: 728, column: 5, scope: !1778)
!2411 = !DILocation(line: 400, column: 75, scope: !1767)
!2412 = !DILocation(line: 400, column: 3, scope: !1767)
!2413 = distinct !{!2413, !1776, !2414}
!2414 = !DILocation(line: 728, column: 5, scope: !1764)
!2415 = !DILocation(line: 730, column: 7, scope: !2416)
!2416 = distinct !DILexicalBlock(scope: !1624, file: !80, line: 730, column: 7)
!2417 = !DILocation(line: 730, column: 11, scope: !2416)
!2418 = !DILocation(line: 730, column: 16, scope: !2416)
!2419 = !DILocation(line: 730, column: 19, scope: !2416)
!2420 = !DILocation(line: 730, column: 33, scope: !2416)
!2421 = !DILocation(line: 731, column: 7, scope: !2416)
!2422 = !DILocation(line: 731, column: 10, scope: !2416)
!2423 = !DILocation(line: 730, column: 7, scope: !1624)
!2424 = !DILocation(line: 732, column: 5, scope: !2416)
!2425 = !DILocation(line: 738, column: 7, scope: !2426)
!2426 = distinct !DILexicalBlock(scope: !1624, file: !80, line: 738, column: 7)
!2427 = !DILocation(line: 738, column: 21, scope: !2426)
!2428 = !DILocation(line: 738, column: 51, scope: !2426)
!2429 = !DILocation(line: 738, column: 56, scope: !2426)
!2430 = !DILocation(line: 739, column: 7, scope: !2426)
!2431 = !DILocation(line: 739, column: 10, scope: !2426)
!2432 = !DILocation(line: 738, column: 7, scope: !1624)
!2433 = !DILocation(line: 741, column: 11, scope: !2434)
!2434 = distinct !DILexicalBlock(scope: !2435, file: !80, line: 741, column: 11)
!2435 = distinct !DILexicalBlock(scope: !2426, file: !80, line: 740, column: 5)
!2436 = !DILocation(line: 741, column: 11, scope: !2435)
!2437 = !DILocation(line: 742, column: 42, scope: !2434)
!2438 = !DILocation(line: 742, column: 50, scope: !2434)
!2439 = !DILocation(line: 742, column: 67, scope: !2434)
!2440 = !DILocation(line: 742, column: 72, scope: !2434)
!2441 = !DILocation(line: 744, column: 42, scope: !2434)
!2442 = !DILocation(line: 744, column: 49, scope: !2434)
!2443 = !DILocation(line: 745, column: 42, scope: !2434)
!2444 = !DILocation(line: 745, column: 54, scope: !2434)
!2445 = !DILocation(line: 742, column: 16, scope: !2434)
!2446 = !DILocation(line: 742, column: 9, scope: !2434)
!2447 = !DILocation(line: 746, column: 18, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2434, file: !80, line: 746, column: 16)
!2449 = !DILocation(line: 746, column: 29, scope: !2448)
!2450 = !DILocation(line: 746, column: 32, scope: !2448)
!2451 = !DILocation(line: 746, column: 16, scope: !2434)
!2452 = !DILocation(line: 749, column: 24, scope: !2453)
!2453 = distinct !DILexicalBlock(scope: !2448, file: !80, line: 747, column: 9)
!2454 = !DILocation(line: 749, column: 22, scope: !2453)
!2455 = !DILocation(line: 750, column: 15, scope: !2453)
!2456 = !DILocation(line: 751, column: 11, scope: !2453)
!2457 = !DILocation(line: 753, column: 5, scope: !2435)
!2458 = !DILocation(line: 755, column: 7, scope: !2459)
!2459 = distinct !DILexicalBlock(scope: !1624, file: !80, line: 755, column: 7)
!2460 = !DILocation(line: 755, column: 20, scope: !2459)
!2461 = !DILocation(line: 755, column: 24, scope: !2459)
!2462 = !DILocation(line: 755, column: 7, scope: !1624)
!2463 = !DILocation(line: 756, column: 5, scope: !2459)
!2464 = !DILocation(line: 756, column: 13, scope: !2465)
!2465 = distinct !DILexicalBlock(scope: !2466, file: !80, line: 756, column: 5)
!2466 = distinct !DILexicalBlock(scope: !2459, file: !80, line: 756, column: 5)
!2467 = !DILocation(line: 756, column: 12, scope: !2465)
!2468 = !DILocation(line: 756, column: 5, scope: !2466)
!2469 = !DILocation(line: 757, column: 7, scope: !2465)
!2470 = !DILocation(line: 757, column: 7, scope: !2471)
!2471 = distinct !DILexicalBlock(scope: !2472, file: !80, line: 757, column: 7)
!2472 = distinct !DILexicalBlock(scope: !2465, file: !80, line: 757, column: 7)
!2473 = !DILocation(line: 757, column: 7, scope: !2472)
!2474 = !DILocation(line: 756, column: 39, scope: !2465)
!2475 = !DILocation(line: 756, column: 5, scope: !2465)
!2476 = distinct !{!2476, !2468, !2477}
!2477 = !DILocation(line: 757, column: 7, scope: !2466)
!2478 = !DILocation(line: 759, column: 7, scope: !2479)
!2479 = distinct !DILexicalBlock(scope: !1624, file: !80, line: 759, column: 7)
!2480 = !DILocation(line: 759, column: 13, scope: !2479)
!2481 = !DILocation(line: 759, column: 11, scope: !2479)
!2482 = !DILocation(line: 759, column: 7, scope: !1624)
!2483 = !DILocation(line: 760, column: 5, scope: !2479)
!2484 = !DILocation(line: 760, column: 12, scope: !2479)
!2485 = !DILocation(line: 760, column: 17, scope: !2479)
!2486 = !DILocation(line: 761, column: 10, scope: !1624)
!2487 = !DILocation(line: 761, column: 3, scope: !1624)
!2488 = !DILabel(scope: !1624, name: "force_outer_quoting_style", file: !80, line: 763)
!2489 = !DILocation(line: 763, column: 2, scope: !1624)
!2490 = !DILocation(line: 766, column: 7, scope: !2491)
!2491 = distinct !DILexicalBlock(scope: !1624, file: !80, line: 766, column: 7)
!2492 = !DILocation(line: 766, column: 21, scope: !2491)
!2493 = !DILocation(line: 766, column: 51, scope: !2491)
!2494 = !DILocation(line: 766, column: 54, scope: !2491)
!2495 = !DILocation(line: 766, column: 7, scope: !1624)
!2496 = !DILocation(line: 767, column: 19, scope: !2491)
!2497 = !DILocation(line: 767, column: 5, scope: !2491)
!2498 = !DILocation(line: 768, column: 36, scope: !1624)
!2499 = !DILocation(line: 768, column: 44, scope: !1624)
!2500 = !DILocation(line: 768, column: 56, scope: !1624)
!2501 = !DILocation(line: 768, column: 61, scope: !1624)
!2502 = !DILocation(line: 769, column: 36, scope: !1624)
!2503 = !DILocation(line: 770, column: 36, scope: !1624)
!2504 = !DILocation(line: 770, column: 42, scope: !1624)
!2505 = !DILocation(line: 771, column: 36, scope: !1624)
!2506 = !DILocation(line: 771, column: 48, scope: !1624)
!2507 = !DILocation(line: 768, column: 10, scope: !1624)
!2508 = !DILocation(line: 768, column: 3, scope: !1624)
!2509 = !DILocation(line: 772, column: 1, scope: !1624)
!2510 = !DILocalVariable(name: "buffer", arg: 1, scope: !2511, file: !80, line: 256, type: !7)
!2511 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !80, file: !80, line: 256, type: !1625, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2512, retainedNodes: !4)
!2512 = distinct !DICompileUnit(language: DW_LANG_C99, file: !55, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !56, retainedTypes: !72, globals: !2513, nameTableKind: None)
!2513 = !{!2514, !2516, !2518, !2527, !2529, !2531, !2538, !2540}
!2514 = !DIGlobalVariableExpression(var: !2515, expr: !DIExpression())
!2515 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2512, file: !80, line: 85, type: !81, isLocal: false, isDefinition: true)
!2516 = !DIGlobalVariableExpression(var: !2517, expr: !DIExpression())
!2517 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2512, file: !80, line: 101, type: !87, isLocal: false, isDefinition: true)
!2518 = !DIGlobalVariableExpression(var: !2519, expr: !DIExpression())
!2519 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2512, file: !80, line: 1052, type: !2520, isLocal: false, isDefinition: true)
!2520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !80, line: 65, size: 448, elements: !2521)
!2521 = !{!2522, !2523, !2524, !2525, !2526}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2520, file: !80, line: 68, baseType: !57, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2520, file: !80, line: 71, baseType: !19, size: 32, offset: 32)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2520, file: !80, line: 75, baseType: !98, size: 256, offset: 64)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2520, file: !80, line: 78, baseType: !16, size: 64, offset: 320)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2520, file: !80, line: 81, baseType: !16, size: 64, offset: 384)
!2527 = !DIGlobalVariableExpression(var: !2528, expr: !DIExpression())
!2528 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2512, file: !80, line: 116, type: !2520, isLocal: true, isDefinition: true)
!2529 = !DIGlobalVariableExpression(var: !2530, expr: !DIExpression())
!2530 = distinct !DIGlobalVariable(name: "slot0", scope: !2512, file: !80, line: 842, type: !105, isLocal: true, isDefinition: true)
!2531 = !DIGlobalVariableExpression(var: !2532, expr: !DIExpression())
!2532 = distinct !DIGlobalVariable(name: "slotvec", scope: !2512, file: !80, line: 845, type: !2533, isLocal: true, isDefinition: true)
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2534, size: 64)
!2534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !80, line: 834, size: 128, elements: !2535)
!2535 = !{!2536, !2537}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2534, file: !80, line: 836, baseType: !74, size: 64)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2534, file: !80, line: 837, baseType: !7, size: 64, offset: 64)
!2538 = !DIGlobalVariableExpression(var: !2539, expr: !DIExpression())
!2539 = distinct !DIGlobalVariable(name: "nslots", scope: !2512, file: !80, line: 843, type: !19, isLocal: true, isDefinition: true)
!2540 = !DIGlobalVariableExpression(var: !2541, expr: !DIExpression())
!2541 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2512, file: !80, line: 844, type: !2534, isLocal: true, isDefinition: true)
!2542 = !DILocalVariable(name: "buffersize", arg: 2, scope: !2511, file: !80, line: 256, type: !74)
!2543 = !DILocalVariable(name: "arg", arg: 3, scope: !2511, file: !80, line: 257, type: !16)
!2544 = !DILocalVariable(name: "argsize", arg: 4, scope: !2511, file: !80, line: 257, type: !74)
!2545 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !2511, file: !80, line: 258, type: !57)
!2546 = !DILocalVariable(name: "flags", arg: 6, scope: !2511, file: !80, line: 258, type: !19)
!2547 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !2511, file: !80, line: 259, type: !1627)
!2548 = !DILocalVariable(name: "left_quote", arg: 8, scope: !2511, file: !80, line: 260, type: !16)
!2549 = !DILocalVariable(name: "right_quote", arg: 9, scope: !2511, file: !80, line: 261, type: !16)
!2550 = !DILocalVariable(name: "i", scope: !2511, file: !80, line: 263, type: !74)
!2551 = !DILocalVariable(name: "len", scope: !2511, file: !80, line: 264, type: !74)
!2552 = !DILocalVariable(name: "orig_buffersize", scope: !2511, file: !80, line: 265, type: !74)
!2553 = !DILocalVariable(name: "quote_string", scope: !2511, file: !80, line: 266, type: !16)
!2554 = !DILocalVariable(name: "quote_string_len", scope: !2511, file: !80, line: 267, type: !74)
!2555 = !DILocalVariable(name: "backslash_escapes", scope: !2511, file: !80, line: 268, type: !38)
!2556 = !DILocalVariable(name: "unibyte_locale", scope: !2511, file: !80, line: 269, type: !38)
!2557 = !DILocalVariable(name: "elide_outer_quotes", scope: !2511, file: !80, line: 270, type: !38)
!2558 = !DILocalVariable(name: "pending_shell_escape_end", scope: !2511, file: !80, line: 271, type: !38)
!2559 = !DILocalVariable(name: "encountered_single_quote", scope: !2511, file: !80, line: 272, type: !38)
!2560 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !2511, file: !80, line: 273, type: !38)
!2561 = !DILocalVariable(name: "escaping", scope: !2562, file: !80, line: 405, type: !38)
!2562 = distinct !DILexicalBlock(scope: !2563, file: !80, line: 401, column: 5)
!2563 = distinct !DILexicalBlock(scope: !2564, file: !80, line: 400, column: 3)
!2564 = distinct !DILexicalBlock(scope: !2565, file: !80, line: 400, column: 3)
!2565 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !80, file: !80, line: 256, type: !1625, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2566, retainedNodes: !4)
!2566 = distinct !DICompileUnit(language: DW_LANG_C99, file: !55, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !56, retainedTypes: !72, globals: !2567, nameTableKind: None)
!2567 = !{!2568, !2570, !2572, !2581, !2583, !2585, !2592, !2594}
!2568 = !DIGlobalVariableExpression(var: !2569, expr: !DIExpression())
!2569 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2566, file: !80, line: 85, type: !81, isLocal: false, isDefinition: true)
!2570 = !DIGlobalVariableExpression(var: !2571, expr: !DIExpression())
!2571 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2566, file: !80, line: 101, type: !87, isLocal: false, isDefinition: true)
!2572 = !DIGlobalVariableExpression(var: !2573, expr: !DIExpression())
!2573 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2566, file: !80, line: 1052, type: !2574, isLocal: false, isDefinition: true)
!2574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !80, line: 65, size: 448, elements: !2575)
!2575 = !{!2576, !2577, !2578, !2579, !2580}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2574, file: !80, line: 68, baseType: !57, size: 32)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2574, file: !80, line: 71, baseType: !19, size: 32, offset: 32)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2574, file: !80, line: 75, baseType: !98, size: 256, offset: 64)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2574, file: !80, line: 78, baseType: !16, size: 64, offset: 320)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2574, file: !80, line: 81, baseType: !16, size: 64, offset: 384)
!2581 = !DIGlobalVariableExpression(var: !2582, expr: !DIExpression())
!2582 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2566, file: !80, line: 116, type: !2574, isLocal: true, isDefinition: true)
!2583 = !DIGlobalVariableExpression(var: !2584, expr: !DIExpression())
!2584 = distinct !DIGlobalVariable(name: "slot0", scope: !2566, file: !80, line: 842, type: !105, isLocal: true, isDefinition: true)
!2585 = !DIGlobalVariableExpression(var: !2586, expr: !DIExpression())
!2586 = distinct !DIGlobalVariable(name: "slotvec", scope: !2566, file: !80, line: 845, type: !2587, isLocal: true, isDefinition: true)
!2587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 64)
!2588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !80, line: 834, size: 128, elements: !2589)
!2589 = !{!2590, !2591}
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2588, file: !80, line: 836, baseType: !74, size: 64)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2588, file: !80, line: 837, baseType: !7, size: 64, offset: 64)
!2592 = !DIGlobalVariableExpression(var: !2593, expr: !DIExpression())
!2593 = distinct !DIGlobalVariable(name: "nslots", scope: !2566, file: !80, line: 843, type: !19, isLocal: true, isDefinition: true)
!2594 = !DIGlobalVariableExpression(var: !2595, expr: !DIExpression())
!2595 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2566, file: !80, line: 844, type: !2588, isLocal: true, isDefinition: true)
!2596 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !2562, file: !80, line: 406, type: !38)
!2597 = distinct !DISubprogram(name: "gettext_quote", scope: !80, file: !80, line: 207, type: !2598, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !54, retainedNodes: !4)
!2598 = !DISubroutineType(types: !2599)
!2599 = !{!16, !16, !57}
!2600 = !DILocalVariable(name: "msgid", arg: 1, scope: !2597, file: !80, line: 207, type: !16)
!2601 = !DILocation(line: 207, column: 28, scope: !2597)
!2602 = !DILocalVariable(name: "s", arg: 2, scope: !2597, file: !80, line: 207, type: !57)
!2603 = !DILocation(line: 207, column: 54, scope: !2597)
!2604 = !DILocalVariable(name: "translation", scope: !2597, file: !80, line: 209, type: !16)
!2605 = !DILocation(line: 209, column: 15, scope: !2597)
!2606 = !DILocation(line: 209, column: 29, scope: !2597)
!2607 = !DILocalVariable(name: "locale_code", scope: !2597, file: !80, line: 210, type: !16)
!2608 = !DILocation(line: 210, column: 15, scope: !2597)
!2609 = !DILocation(line: 212, column: 7, scope: !2610)
!2610 = distinct !DILexicalBlock(scope: !2597, file: !80, line: 212, column: 7)
!2611 = !DILocation(line: 212, column: 22, scope: !2610)
!2612 = !DILocation(line: 212, column: 19, scope: !2610)
!2613 = !DILocation(line: 212, column: 7, scope: !2597)
!2614 = !DILocation(line: 213, column: 12, scope: !2610)
!2615 = !DILocation(line: 213, column: 5, scope: !2610)
!2616 = !DILocation(line: 233, column: 17, scope: !2597)
!2617 = !DILocation(line: 233, column: 15, scope: !2597)
!2618 = !DILocation(line: 234, column: 7, scope: !2619)
!2619 = distinct !DILexicalBlock(scope: !2597, file: !80, line: 234, column: 7)
!2620 = !DILocation(line: 234, column: 7, scope: !2597)
!2621 = !DILocation(line: 235, column: 12, scope: !2619)
!2622 = !DILocation(line: 235, column: 21, scope: !2619)
!2623 = !DILocation(line: 235, column: 5, scope: !2619)
!2624 = !DILocation(line: 236, column: 7, scope: !2625)
!2625 = distinct !DILexicalBlock(scope: !2597, file: !80, line: 236, column: 7)
!2626 = !DILocation(line: 236, column: 7, scope: !2597)
!2627 = !DILocation(line: 237, column: 12, scope: !2625)
!2628 = !DILocation(line: 237, column: 21, scope: !2625)
!2629 = !DILocation(line: 237, column: 5, scope: !2625)
!2630 = !DILocation(line: 239, column: 11, scope: !2597)
!2631 = !DILocation(line: 239, column: 13, scope: !2597)
!2632 = !DILocation(line: 239, column: 3, scope: !2597)
!2633 = !DILocation(line: 240, column: 1, scope: !2597)
!2634 = !DILocalVariable(name: "msgid", arg: 1, scope: !2635, file: !80, line: 207, type: !16)
!2635 = distinct !DISubprogram(name: "gettext_quote", scope: !80, file: !80, line: 207, type: !2598, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2636, retainedNodes: !4)
!2636 = distinct !DICompileUnit(language: DW_LANG_C99, file: !55, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !56, retainedTypes: !72, globals: !2637, nameTableKind: None)
!2637 = !{!2638, !2640, !2642, !2651, !2653, !2655, !2662, !2664}
!2638 = !DIGlobalVariableExpression(var: !2639, expr: !DIExpression())
!2639 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2636, file: !80, line: 85, type: !81, isLocal: false, isDefinition: true)
!2640 = !DIGlobalVariableExpression(var: !2641, expr: !DIExpression())
!2641 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2636, file: !80, line: 101, type: !87, isLocal: false, isDefinition: true)
!2642 = !DIGlobalVariableExpression(var: !2643, expr: !DIExpression())
!2643 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2636, file: !80, line: 1052, type: !2644, isLocal: false, isDefinition: true)
!2644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !80, line: 65, size: 448, elements: !2645)
!2645 = !{!2646, !2647, !2648, !2649, !2650}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2644, file: !80, line: 68, baseType: !57, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2644, file: !80, line: 71, baseType: !19, size: 32, offset: 32)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2644, file: !80, line: 75, baseType: !98, size: 256, offset: 64)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2644, file: !80, line: 78, baseType: !16, size: 64, offset: 320)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2644, file: !80, line: 81, baseType: !16, size: 64, offset: 384)
!2651 = !DIGlobalVariableExpression(var: !2652, expr: !DIExpression())
!2652 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2636, file: !80, line: 116, type: !2644, isLocal: true, isDefinition: true)
!2653 = !DIGlobalVariableExpression(var: !2654, expr: !DIExpression())
!2654 = distinct !DIGlobalVariable(name: "slot0", scope: !2636, file: !80, line: 842, type: !105, isLocal: true, isDefinition: true)
!2655 = !DIGlobalVariableExpression(var: !2656, expr: !DIExpression())
!2656 = distinct !DIGlobalVariable(name: "slotvec", scope: !2636, file: !80, line: 845, type: !2657, isLocal: true, isDefinition: true)
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2658, size: 64)
!2658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !80, line: 834, size: 128, elements: !2659)
!2659 = !{!2660, !2661}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2658, file: !80, line: 836, baseType: !74, size: 64)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2658, file: !80, line: 837, baseType: !7, size: 64, offset: 64)
!2662 = !DIGlobalVariableExpression(var: !2663, expr: !DIExpression())
!2663 = distinct !DIGlobalVariable(name: "nslots", scope: !2636, file: !80, line: 843, type: !19, isLocal: true, isDefinition: true)
!2664 = !DIGlobalVariableExpression(var: !2665, expr: !DIExpression())
!2665 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2636, file: !80, line: 844, type: !2658, isLocal: true, isDefinition: true)
!2666 = !DILocalVariable(name: "s", arg: 2, scope: !2635, file: !80, line: 207, type: !57)
!2667 = !DILocalVariable(name: "translation", scope: !2635, file: !80, line: 209, type: !16)
!2668 = !DILocalVariable(name: "locale_code", scope: !2635, file: !80, line: 210, type: !16)
!2669 = distinct !DISubprogram(name: "quotearg_style", scope: !80, file: !80, line: 970, type: !2670, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !54, retainedNodes: !4)
!2670 = !DISubroutineType(types: !2671)
!2671 = !{!7, !57, !16}
!2672 = !DILocalVariable(name: "s", arg: 1, scope: !2669, file: !80, line: 970, type: !57)
!2673 = !DILocation(line: 970, column: 36, scope: !2669)
!2674 = !DILocalVariable(name: "arg", arg: 2, scope: !2669, file: !80, line: 970, type: !16)
!2675 = !DILocation(line: 970, column: 51, scope: !2669)
!2676 = !DILocation(line: 972, column: 31, scope: !2669)
!2677 = !DILocation(line: 972, column: 34, scope: !2669)
!2678 = !DILocation(line: 972, column: 10, scope: !2669)
!2679 = !DILocation(line: 972, column: 3, scope: !2669)
!2680 = !DILocalVariable(name: "s", arg: 1, scope: !2681, file: !80, line: 970, type: !57)
!2681 = distinct !DISubprogram(name: "quotearg_style", scope: !80, file: !80, line: 970, type: !2670, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2682, retainedNodes: !4)
!2682 = distinct !DICompileUnit(language: DW_LANG_C99, file: !55, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !56, retainedTypes: !72, globals: !2683, nameTableKind: None)
!2683 = !{!2684, !2686, !2688, !2697, !2699, !2701, !2708, !2710}
!2684 = !DIGlobalVariableExpression(var: !2685, expr: !DIExpression())
!2685 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2682, file: !80, line: 85, type: !81, isLocal: false, isDefinition: true)
!2686 = !DIGlobalVariableExpression(var: !2687, expr: !DIExpression())
!2687 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2682, file: !80, line: 101, type: !87, isLocal: false, isDefinition: true)
!2688 = !DIGlobalVariableExpression(var: !2689, expr: !DIExpression())
!2689 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2682, file: !80, line: 1052, type: !2690, isLocal: false, isDefinition: true)
!2690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !80, line: 65, size: 448, elements: !2691)
!2691 = !{!2692, !2693, !2694, !2695, !2696}
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2690, file: !80, line: 68, baseType: !57, size: 32)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2690, file: !80, line: 71, baseType: !19, size: 32, offset: 32)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2690, file: !80, line: 75, baseType: !98, size: 256, offset: 64)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2690, file: !80, line: 78, baseType: !16, size: 64, offset: 320)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2690, file: !80, line: 81, baseType: !16, size: 64, offset: 384)
!2697 = !DIGlobalVariableExpression(var: !2698, expr: !DIExpression())
!2698 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2682, file: !80, line: 116, type: !2690, isLocal: true, isDefinition: true)
!2699 = !DIGlobalVariableExpression(var: !2700, expr: !DIExpression())
!2700 = distinct !DIGlobalVariable(name: "slot0", scope: !2682, file: !80, line: 842, type: !105, isLocal: true, isDefinition: true)
!2701 = !DIGlobalVariableExpression(var: !2702, expr: !DIExpression())
!2702 = distinct !DIGlobalVariable(name: "slotvec", scope: !2682, file: !80, line: 845, type: !2703, isLocal: true, isDefinition: true)
!2703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2704, size: 64)
!2704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !80, line: 834, size: 128, elements: !2705)
!2705 = !{!2706, !2707}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2704, file: !80, line: 836, baseType: !74, size: 64)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2704, file: !80, line: 837, baseType: !7, size: 64, offset: 64)
!2708 = !DIGlobalVariableExpression(var: !2709, expr: !DIExpression())
!2709 = distinct !DIGlobalVariable(name: "nslots", scope: !2682, file: !80, line: 843, type: !19, isLocal: true, isDefinition: true)
!2710 = !DIGlobalVariableExpression(var: !2711, expr: !DIExpression())
!2711 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2682, file: !80, line: 844, type: !2704, isLocal: true, isDefinition: true)
!2712 = !DILocalVariable(name: "arg", arg: 2, scope: !2681, file: !80, line: 970, type: !16)
!2713 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !80, file: !80, line: 982, type: !2714, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !54, retainedNodes: !4)
!2714 = !DISubroutineType(types: !2715)
!2715 = !{!7, !16, !74, !8}
!2716 = !DILocalVariable(name: "arg", arg: 1, scope: !2713, file: !80, line: 982, type: !16)
!2717 = !DILocation(line: 982, column: 32, scope: !2713)
!2718 = !DILocalVariable(name: "argsize", arg: 2, scope: !2713, file: !80, line: 982, type: !74)
!2719 = !DILocation(line: 982, column: 44, scope: !2713)
!2720 = !DILocalVariable(name: "ch", arg: 3, scope: !2713, file: !80, line: 982, type: !8)
!2721 = !DILocation(line: 982, column: 58, scope: !2713)
!2722 = !DILocalVariable(name: "options", scope: !2713, file: !80, line: 984, type: !93)
!2723 = !DILocation(line: 984, column: 26, scope: !2713)
!2724 = !DILocation(line: 985, column: 13, scope: !2713)
!2725 = !DILocation(line: 986, column: 31, scope: !2713)
!2726 = !DILocation(line: 986, column: 3, scope: !2713)
!2727 = !DILocation(line: 987, column: 33, scope: !2713)
!2728 = !DILocation(line: 987, column: 38, scope: !2713)
!2729 = !DILocation(line: 987, column: 10, scope: !2713)
!2730 = !DILocation(line: 987, column: 3, scope: !2713)
!2731 = !DILocalVariable(name: "arg", arg: 1, scope: !2732, file: !80, line: 982, type: !16)
!2732 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !80, file: !80, line: 982, type: !2714, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2733, retainedNodes: !4)
!2733 = distinct !DICompileUnit(language: DW_LANG_C99, file: !55, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !56, retainedTypes: !72, globals: !2734, nameTableKind: None)
!2734 = !{!2735, !2737, !2739, !2748, !2750, !2752, !2759, !2761}
!2735 = !DIGlobalVariableExpression(var: !2736, expr: !DIExpression())
!2736 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2733, file: !80, line: 85, type: !81, isLocal: false, isDefinition: true)
!2737 = !DIGlobalVariableExpression(var: !2738, expr: !DIExpression())
!2738 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2733, file: !80, line: 101, type: !87, isLocal: false, isDefinition: true)
!2739 = !DIGlobalVariableExpression(var: !2740, expr: !DIExpression())
!2740 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2733, file: !80, line: 1052, type: !2741, isLocal: false, isDefinition: true)
!2741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !80, line: 65, size: 448, elements: !2742)
!2742 = !{!2743, !2744, !2745, !2746, !2747}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2741, file: !80, line: 68, baseType: !57, size: 32)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2741, file: !80, line: 71, baseType: !19, size: 32, offset: 32)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2741, file: !80, line: 75, baseType: !98, size: 256, offset: 64)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2741, file: !80, line: 78, baseType: !16, size: 64, offset: 320)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2741, file: !80, line: 81, baseType: !16, size: 64, offset: 384)
!2748 = !DIGlobalVariableExpression(var: !2749, expr: !DIExpression())
!2749 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2733, file: !80, line: 116, type: !2741, isLocal: true, isDefinition: true)
!2750 = !DIGlobalVariableExpression(var: !2751, expr: !DIExpression())
!2751 = distinct !DIGlobalVariable(name: "slot0", scope: !2733, file: !80, line: 842, type: !105, isLocal: true, isDefinition: true)
!2752 = !DIGlobalVariableExpression(var: !2753, expr: !DIExpression())
!2753 = distinct !DIGlobalVariable(name: "slotvec", scope: !2733, file: !80, line: 845, type: !2754, isLocal: true, isDefinition: true)
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2755, size: 64)
!2755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !80, line: 834, size: 128, elements: !2756)
!2756 = !{!2757, !2758}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2755, file: !80, line: 836, baseType: !74, size: 64)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2755, file: !80, line: 837, baseType: !7, size: 64, offset: 64)
!2759 = !DIGlobalVariableExpression(var: !2760, expr: !DIExpression())
!2760 = distinct !DIGlobalVariable(name: "nslots", scope: !2733, file: !80, line: 843, type: !19, isLocal: true, isDefinition: true)
!2761 = !DIGlobalVariableExpression(var: !2762, expr: !DIExpression())
!2762 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2733, file: !80, line: 844, type: !2755, isLocal: true, isDefinition: true)
!2763 = !DILocalVariable(name: "argsize", arg: 2, scope: !2732, file: !80, line: 982, type: !74)
!2764 = !DILocalVariable(name: "ch", arg: 3, scope: !2732, file: !80, line: 982, type: !8)
!2765 = !DILocalVariable(name: "options", scope: !2732, file: !80, line: 984, type: !2741)
!2766 = distinct !DISubprogram(name: "quotearg_char", scope: !80, file: !80, line: 991, type: !2767, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !54, retainedNodes: !4)
!2767 = !DISubroutineType(types: !2768)
!2768 = !{!7, !16, !8}
!2769 = !DILocalVariable(name: "arg", arg: 1, scope: !2766, file: !80, line: 991, type: !16)
!2770 = !DILocation(line: 991, column: 28, scope: !2766)
!2771 = !DILocalVariable(name: "ch", arg: 2, scope: !2766, file: !80, line: 991, type: !8)
!2772 = !DILocation(line: 991, column: 38, scope: !2766)
!2773 = !DILocation(line: 993, column: 29, scope: !2766)
!2774 = !DILocation(line: 993, column: 44, scope: !2766)
!2775 = !DILocation(line: 993, column: 10, scope: !2766)
!2776 = !DILocation(line: 993, column: 3, scope: !2766)
!2777 = distinct !DISubprogram(name: "quotearg_colon", scope: !80, file: !80, line: 997, type: !2778, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !54, retainedNodes: !4)
!2778 = !DISubroutineType(types: !2779)
!2779 = !{!7, !16}
!2780 = !DILocalVariable(name: "arg", arg: 1, scope: !2777, file: !80, line: 997, type: !16)
!2781 = !DILocation(line: 997, column: 29, scope: !2777)
!2782 = !DILocation(line: 999, column: 25, scope: !2777)
!2783 = !DILocation(line: 999, column: 10, scope: !2777)
!2784 = !DILocation(line: 999, column: 3, scope: !2777)
!2785 = !DILocalVariable(name: "arg", arg: 1, scope: !2786, file: !80, line: 997, type: !16)
!2786 = distinct !DISubprogram(name: "quotearg_colon", scope: !80, file: !80, line: 997, type: !2778, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2787, retainedNodes: !4)
!2787 = distinct !DICompileUnit(language: DW_LANG_C99, file: !55, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !56, retainedTypes: !72, globals: !2788, nameTableKind: None)
!2788 = !{!2789, !2791, !2793, !2802, !2804, !2806, !2813, !2815}
!2789 = !DIGlobalVariableExpression(var: !2790, expr: !DIExpression())
!2790 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2787, file: !80, line: 85, type: !81, isLocal: false, isDefinition: true)
!2791 = !DIGlobalVariableExpression(var: !2792, expr: !DIExpression())
!2792 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2787, file: !80, line: 101, type: !87, isLocal: false, isDefinition: true)
!2793 = !DIGlobalVariableExpression(var: !2794, expr: !DIExpression())
!2794 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2787, file: !80, line: 1052, type: !2795, isLocal: false, isDefinition: true)
!2795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !80, line: 65, size: 448, elements: !2796)
!2796 = !{!2797, !2798, !2799, !2800, !2801}
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2795, file: !80, line: 68, baseType: !57, size: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2795, file: !80, line: 71, baseType: !19, size: 32, offset: 32)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2795, file: !80, line: 75, baseType: !98, size: 256, offset: 64)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2795, file: !80, line: 78, baseType: !16, size: 64, offset: 320)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2795, file: !80, line: 81, baseType: !16, size: 64, offset: 384)
!2802 = !DIGlobalVariableExpression(var: !2803, expr: !DIExpression())
!2803 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2787, file: !80, line: 116, type: !2795, isLocal: true, isDefinition: true)
!2804 = !DIGlobalVariableExpression(var: !2805, expr: !DIExpression())
!2805 = distinct !DIGlobalVariable(name: "slot0", scope: !2787, file: !80, line: 842, type: !105, isLocal: true, isDefinition: true)
!2806 = !DIGlobalVariableExpression(var: !2807, expr: !DIExpression())
!2807 = distinct !DIGlobalVariable(name: "slotvec", scope: !2787, file: !80, line: 845, type: !2808, isLocal: true, isDefinition: true)
!2808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 64)
!2809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !80, line: 834, size: 128, elements: !2810)
!2810 = !{!2811, !2812}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2809, file: !80, line: 836, baseType: !74, size: 64)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2809, file: !80, line: 837, baseType: !7, size: 64, offset: 64)
!2813 = !DIGlobalVariableExpression(var: !2814, expr: !DIExpression())
!2814 = distinct !DIGlobalVariable(name: "nslots", scope: !2787, file: !80, line: 843, type: !19, isLocal: true, isDefinition: true)
!2815 = !DIGlobalVariableExpression(var: !2816, expr: !DIExpression())
!2816 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2787, file: !80, line: 844, type: !2809, isLocal: true, isDefinition: true)
!2817 = distinct !DISubprogram(name: "quote_n_mem", scope: !80, file: !80, line: 1061, type: !2818, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !54, retainedNodes: !4)
!2818 = !DISubroutineType(types: !2819)
!2819 = !{!16, !19, !16, !74}
!2820 = !DILocalVariable(name: "n", arg: 1, scope: !2817, file: !80, line: 1061, type: !19)
!2821 = !DILocation(line: 1061, column: 18, scope: !2817)
!2822 = !DILocalVariable(name: "arg", arg: 2, scope: !2817, file: !80, line: 1061, type: !16)
!2823 = !DILocation(line: 1061, column: 33, scope: !2817)
!2824 = !DILocalVariable(name: "argsize", arg: 3, scope: !2817, file: !80, line: 1061, type: !74)
!2825 = !DILocation(line: 1061, column: 45, scope: !2817)
!2826 = !DILocation(line: 1063, column: 30, scope: !2817)
!2827 = !DILocation(line: 1063, column: 33, scope: !2817)
!2828 = !DILocation(line: 1063, column: 38, scope: !2817)
!2829 = !DILocation(line: 1063, column: 10, scope: !2817)
!2830 = !DILocation(line: 1063, column: 3, scope: !2817)
!2831 = !DILocalVariable(name: "n", arg: 1, scope: !2832, file: !80, line: 1061, type: !19)
!2832 = distinct !DISubprogram(name: "quote_n_mem", scope: !80, file: !80, line: 1061, type: !2818, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2833, retainedNodes: !4)
!2833 = distinct !DICompileUnit(language: DW_LANG_C99, file: !55, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !56, retainedTypes: !72, globals: !2834, nameTableKind: None)
!2834 = !{!2835, !2837, !2839, !2848, !2850, !2852, !2859, !2861}
!2835 = !DIGlobalVariableExpression(var: !2836, expr: !DIExpression())
!2836 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2833, file: !80, line: 85, type: !81, isLocal: false, isDefinition: true)
!2837 = !DIGlobalVariableExpression(var: !2838, expr: !DIExpression())
!2838 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2833, file: !80, line: 101, type: !87, isLocal: false, isDefinition: true)
!2839 = !DIGlobalVariableExpression(var: !2840, expr: !DIExpression())
!2840 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2833, file: !80, line: 1052, type: !2841, isLocal: false, isDefinition: true)
!2841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !80, line: 65, size: 448, elements: !2842)
!2842 = !{!2843, !2844, !2845, !2846, !2847}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2841, file: !80, line: 68, baseType: !57, size: 32)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2841, file: !80, line: 71, baseType: !19, size: 32, offset: 32)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2841, file: !80, line: 75, baseType: !98, size: 256, offset: 64)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2841, file: !80, line: 78, baseType: !16, size: 64, offset: 320)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2841, file: !80, line: 81, baseType: !16, size: 64, offset: 384)
!2848 = !DIGlobalVariableExpression(var: !2849, expr: !DIExpression())
!2849 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2833, file: !80, line: 116, type: !2841, isLocal: true, isDefinition: true)
!2850 = !DIGlobalVariableExpression(var: !2851, expr: !DIExpression())
!2851 = distinct !DIGlobalVariable(name: "slot0", scope: !2833, file: !80, line: 842, type: !105, isLocal: true, isDefinition: true)
!2852 = !DIGlobalVariableExpression(var: !2853, expr: !DIExpression())
!2853 = distinct !DIGlobalVariable(name: "slotvec", scope: !2833, file: !80, line: 845, type: !2854, isLocal: true, isDefinition: true)
!2854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2855, size: 64)
!2855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !80, line: 834, size: 128, elements: !2856)
!2856 = !{!2857, !2858}
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2855, file: !80, line: 836, baseType: !74, size: 64)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2855, file: !80, line: 837, baseType: !7, size: 64, offset: 64)
!2859 = !DIGlobalVariableExpression(var: !2860, expr: !DIExpression())
!2860 = distinct !DIGlobalVariable(name: "nslots", scope: !2833, file: !80, line: 843, type: !19, isLocal: true, isDefinition: true)
!2861 = !DIGlobalVariableExpression(var: !2862, expr: !DIExpression())
!2862 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2833, file: !80, line: 844, type: !2855, isLocal: true, isDefinition: true)
!2863 = !DILocalVariable(name: "arg", arg: 2, scope: !2832, file: !80, line: 1061, type: !16)
!2864 = !DILocalVariable(name: "argsize", arg: 3, scope: !2832, file: !80, line: 1061, type: !74)
!2865 = distinct !DISubprogram(name: "quote_n", scope: !80, file: !80, line: 1073, type: !2866, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !54, retainedNodes: !4)
!2866 = !DISubroutineType(types: !2867)
!2867 = !{!16, !19, !16}
!2868 = !DILocalVariable(name: "n", arg: 1, scope: !2865, file: !80, line: 1073, type: !19)
!2869 = !DILocation(line: 1073, column: 14, scope: !2865)
!2870 = !DILocalVariable(name: "arg", arg: 2, scope: !2865, file: !80, line: 1073, type: !16)
!2871 = !DILocation(line: 1073, column: 29, scope: !2865)
!2872 = !DILocation(line: 1075, column: 23, scope: !2865)
!2873 = !DILocation(line: 1075, column: 26, scope: !2865)
!2874 = !DILocation(line: 1075, column: 10, scope: !2865)
!2875 = !DILocation(line: 1075, column: 3, scope: !2865)
!2876 = !DILocalVariable(name: "n", arg: 1, scope: !2877, file: !80, line: 1073, type: !19)
!2877 = distinct !DISubprogram(name: "quote_n", scope: !80, file: !80, line: 1073, type: !2866, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2878, retainedNodes: !4)
!2878 = distinct !DICompileUnit(language: DW_LANG_C99, file: !55, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !56, retainedTypes: !72, globals: !2879, nameTableKind: None)
!2879 = !{!2880, !2882, !2884, !2893, !2895, !2897, !2904, !2906}
!2880 = !DIGlobalVariableExpression(var: !2881, expr: !DIExpression())
!2881 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2878, file: !80, line: 85, type: !81, isLocal: false, isDefinition: true)
!2882 = !DIGlobalVariableExpression(var: !2883, expr: !DIExpression())
!2883 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2878, file: !80, line: 101, type: !87, isLocal: false, isDefinition: true)
!2884 = !DIGlobalVariableExpression(var: !2885, expr: !DIExpression())
!2885 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2878, file: !80, line: 1052, type: !2886, isLocal: false, isDefinition: true)
!2886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !80, line: 65, size: 448, elements: !2887)
!2887 = !{!2888, !2889, !2890, !2891, !2892}
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2886, file: !80, line: 68, baseType: !57, size: 32)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2886, file: !80, line: 71, baseType: !19, size: 32, offset: 32)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2886, file: !80, line: 75, baseType: !98, size: 256, offset: 64)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2886, file: !80, line: 78, baseType: !16, size: 64, offset: 320)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2886, file: !80, line: 81, baseType: !16, size: 64, offset: 384)
!2893 = !DIGlobalVariableExpression(var: !2894, expr: !DIExpression())
!2894 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2878, file: !80, line: 116, type: !2886, isLocal: true, isDefinition: true)
!2895 = !DIGlobalVariableExpression(var: !2896, expr: !DIExpression())
!2896 = distinct !DIGlobalVariable(name: "slot0", scope: !2878, file: !80, line: 842, type: !105, isLocal: true, isDefinition: true)
!2897 = !DIGlobalVariableExpression(var: !2898, expr: !DIExpression())
!2898 = distinct !DIGlobalVariable(name: "slotvec", scope: !2878, file: !80, line: 845, type: !2899, isLocal: true, isDefinition: true)
!2899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2900, size: 64)
!2900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !80, line: 834, size: 128, elements: !2901)
!2901 = !{!2902, !2903}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2900, file: !80, line: 836, baseType: !74, size: 64)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2900, file: !80, line: 837, baseType: !7, size: 64, offset: 64)
!2904 = !DIGlobalVariableExpression(var: !2905, expr: !DIExpression())
!2905 = distinct !DIGlobalVariable(name: "nslots", scope: !2878, file: !80, line: 843, type: !19, isLocal: true, isDefinition: true)
!2906 = !DIGlobalVariableExpression(var: !2907, expr: !DIExpression())
!2907 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2878, file: !80, line: 844, type: !2900, isLocal: true, isDefinition: true)
!2908 = !DILocalVariable(name: "arg", arg: 2, scope: !2877, file: !80, line: 1073, type: !16)
!2909 = distinct !DISubprogram(name: "quote", scope: !80, file: !80, line: 1079, type: !2910, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !54, retainedNodes: !4)
!2910 = !DISubroutineType(types: !2911)
!2911 = !{!16, !16}
!2912 = !DILocalVariable(name: "arg", arg: 1, scope: !2909, file: !80, line: 1079, type: !16)
!2913 = !DILocation(line: 1079, column: 20, scope: !2909)
!2914 = !DILocation(line: 1081, column: 22, scope: !2909)
!2915 = !DILocation(line: 1081, column: 10, scope: !2909)
!2916 = !DILocation(line: 1081, column: 3, scope: !2909)
!2917 = !DILocalVariable(name: "arg", arg: 1, scope: !2918, file: !80, line: 1079, type: !16)
!2918 = distinct !DISubprogram(name: "quote", scope: !80, file: !80, line: 1079, type: !2910, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2919, retainedNodes: !4)
!2919 = distinct !DICompileUnit(language: DW_LANG_C99, file: !55, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !56, retainedTypes: !72, globals: !2920, nameTableKind: None)
!2920 = !{!2921, !2923, !2925, !2934, !2936, !2938, !2945, !2947}
!2921 = !DIGlobalVariableExpression(var: !2922, expr: !DIExpression())
!2922 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2919, file: !80, line: 85, type: !81, isLocal: false, isDefinition: true)
!2923 = !DIGlobalVariableExpression(var: !2924, expr: !DIExpression())
!2924 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2919, file: !80, line: 101, type: !87, isLocal: false, isDefinition: true)
!2925 = !DIGlobalVariableExpression(var: !2926, expr: !DIExpression())
!2926 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2919, file: !80, line: 1052, type: !2927, isLocal: false, isDefinition: true)
!2927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !80, line: 65, size: 448, elements: !2928)
!2928 = !{!2929, !2930, !2931, !2932, !2933}
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2927, file: !80, line: 68, baseType: !57, size: 32)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2927, file: !80, line: 71, baseType: !19, size: 32, offset: 32)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2927, file: !80, line: 75, baseType: !98, size: 256, offset: 64)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2927, file: !80, line: 78, baseType: !16, size: 64, offset: 320)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2927, file: !80, line: 81, baseType: !16, size: 64, offset: 384)
!2934 = !DIGlobalVariableExpression(var: !2935, expr: !DIExpression())
!2935 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2919, file: !80, line: 116, type: !2927, isLocal: true, isDefinition: true)
!2936 = !DIGlobalVariableExpression(var: !2937, expr: !DIExpression())
!2937 = distinct !DIGlobalVariable(name: "slot0", scope: !2919, file: !80, line: 842, type: !105, isLocal: true, isDefinition: true)
!2938 = !DIGlobalVariableExpression(var: !2939, expr: !DIExpression())
!2939 = distinct !DIGlobalVariable(name: "slotvec", scope: !2919, file: !80, line: 845, type: !2940, isLocal: true, isDefinition: true)
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2941, size: 64)
!2941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !80, line: 834, size: 128, elements: !2942)
!2942 = !{!2943, !2944}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2941, file: !80, line: 836, baseType: !74, size: 64)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2941, file: !80, line: 837, baseType: !7, size: 64, offset: 64)
!2945 = !DIGlobalVariableExpression(var: !2946, expr: !DIExpression())
!2946 = distinct !DIGlobalVariable(name: "nslots", scope: !2919, file: !80, line: 843, type: !19, isLocal: true, isDefinition: true)
!2947 = !DIGlobalVariableExpression(var: !2948, expr: !DIExpression())
!2948 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2919, file: !80, line: 844, type: !2941, isLocal: true, isDefinition: true)
!2949 = distinct !DISubprogram(name: "get_root_dev_ino", scope: !2950, file: !2950, line: 29, type: !2951, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !128, retainedNodes: !4)
!2950 = !DIFile(filename: "lib/root-dev-ino.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!2951 = !DISubroutineType(types: !2952)
!2952 = !{!2953, !2953}
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2954, size: 64)
!2954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !593, line: 7, size: 128, elements: !2955)
!2955 = !{!2956, !2957}
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2954, file: !593, line: 9, baseType: !596, size: 64)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2954, file: !593, line: 10, baseType: !599, size: 64, offset: 64)
!2958 = !DILocalVariable(name: "root_d_i", arg: 1, scope: !2949, file: !2950, line: 29, type: !2953)
!2959 = !DILocation(line: 29, column: 35, scope: !2949)
!2960 = !DILocalVariable(name: "statbuf", scope: !2949, file: !2950, line: 31, type: !2961)
!2961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !405, line: 46, size: 1152, elements: !2962)
!2962 = !{!2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2979, !2980, !2981}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2961, file: !405, line: 48, baseType: !408, size: 64)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2961, file: !405, line: 53, baseType: !411, size: 64, offset: 64)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2961, file: !405, line: 61, baseType: !413, size: 64, offset: 128)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2961, file: !405, line: 62, baseType: !415, size: 32, offset: 192)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2961, file: !405, line: 64, baseType: !417, size: 32, offset: 224)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2961, file: !405, line: 65, baseType: !419, size: 32, offset: 256)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2961, file: !405, line: 67, baseType: !19, size: 32, offset: 288)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2961, file: !405, line: 69, baseType: !408, size: 64, offset: 320)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2961, file: !405, line: 74, baseType: !423, size: 64, offset: 384)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2961, file: !405, line: 78, baseType: !426, size: 64, offset: 448)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2961, file: !405, line: 80, baseType: !428, size: 64, offset: 512)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2961, file: !405, line: 91, baseType: !2975, size: 128, offset: 576)
!2975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !431, line: 10, size: 128, elements: !2976)
!2976 = !{!2977, !2978}
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2975, file: !431, line: 12, baseType: !434, size: 64)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2975, file: !431, line: 16, baseType: !436, size: 64, offset: 64)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2961, file: !405, line: 92, baseType: !2975, size: 128, offset: 704)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2961, file: !405, line: 93, baseType: !2975, size: 128, offset: 832)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2961, file: !405, line: 106, baseType: !440, size: 192, offset: 960)
!2982 = !DILocation(line: 31, column: 15, scope: !2949)
!2983 = !DILocation(line: 32, column: 7, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2949, file: !2950, line: 32, column: 7)
!2985 = !DILocation(line: 32, column: 7, scope: !2949)
!2986 = !DILocation(line: 33, column: 5, scope: !2984)
!2987 = !DILocation(line: 34, column: 30, scope: !2949)
!2988 = !DILocation(line: 34, column: 3, scope: !2949)
!2989 = !DILocation(line: 34, column: 13, scope: !2949)
!2990 = !DILocation(line: 34, column: 20, scope: !2949)
!2991 = !DILocation(line: 35, column: 30, scope: !2949)
!2992 = !DILocation(line: 35, column: 3, scope: !2949)
!2993 = !DILocation(line: 35, column: 13, scope: !2949)
!2994 = !DILocation(line: 35, column: 20, scope: !2949)
!2995 = !DILocation(line: 36, column: 10, scope: !2949)
!2996 = !DILocation(line: 36, column: 3, scope: !2949)
!2997 = !DILocation(line: 37, column: 1, scope: !2949)
!2998 = distinct !DISubprogram(name: "version_etc_arn", scope: !2999, file: !2999, line: 61, type: !3000, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !130, retainedNodes: !4)
!2999 = !DIFile(filename: "lib/version-etc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3000 = !DISubroutineType(types: !3001)
!3001 = !{null, !3002, !16, !16, !16, !3054, !74}
!3002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3003, size: 64)
!3003 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3004, line: 7, baseType: !3005)
!3004 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!3005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3006, line: 49, size: 1728, elements: !3007)
!3006 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!3007 = !{!3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3023, !3025, !3026, !3027, !3028, !3029, !3031, !3035, !3038, !3040, !3043, !3046, !3047, !3048, !3049, !3050}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3005, file: !3006, line: 51, baseType: !19, size: 32)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3005, file: !3006, line: 54, baseType: !7, size: 64, offset: 64)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3005, file: !3006, line: 55, baseType: !7, size: 64, offset: 128)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3005, file: !3006, line: 56, baseType: !7, size: 64, offset: 192)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3005, file: !3006, line: 57, baseType: !7, size: 64, offset: 256)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3005, file: !3006, line: 58, baseType: !7, size: 64, offset: 320)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3005, file: !3006, line: 59, baseType: !7, size: 64, offset: 384)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3005, file: !3006, line: 60, baseType: !7, size: 64, offset: 448)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3005, file: !3006, line: 61, baseType: !7, size: 64, offset: 512)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3005, file: !3006, line: 64, baseType: !7, size: 64, offset: 576)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3005, file: !3006, line: 65, baseType: !7, size: 64, offset: 640)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3005, file: !3006, line: 66, baseType: !7, size: 64, offset: 704)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3005, file: !3006, line: 68, baseType: !3021, size: 64, offset: 768)
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3022, size: 64)
!3022 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !3006, line: 36, flags: DIFlagFwdDecl)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3005, file: !3006, line: 70, baseType: !3024, size: 64, offset: 832)
!3024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3005, size: 64)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3005, file: !3006, line: 72, baseType: !19, size: 32, offset: 896)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3005, file: !3006, line: 73, baseType: !19, size: 32, offset: 928)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3005, file: !3006, line: 74, baseType: !423, size: 64, offset: 960)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3005, file: !3006, line: 77, baseType: !73, size: 16, offset: 1024)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3005, file: !3006, line: 78, baseType: !3030, size: 8, offset: 1040)
!3030 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3005, file: !3006, line: 79, baseType: !3032, size: 8, offset: 1048)
!3032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 8, elements: !3033)
!3033 = !{!3034}
!3034 = !DISubrange(count: 1)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3005, file: !3006, line: 81, baseType: !3036, size: 64, offset: 1088)
!3036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3037, size: 64)
!3037 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !3006, line: 43, baseType: null)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3005, file: !3006, line: 89, baseType: !3039, size: 64, offset: 1152)
!3039 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !409, line: 153, baseType: !424)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3005, file: !3006, line: 91, baseType: !3041, size: 64, offset: 1216)
!3041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3042, size: 64)
!3042 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !3006, line: 37, flags: DIFlagFwdDecl)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3005, file: !3006, line: 92, baseType: !3044, size: 64, offset: 1280)
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 64)
!3045 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !3006, line: 38, flags: DIFlagFwdDecl)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3005, file: !3006, line: 93, baseType: !3024, size: 64, offset: 1344)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3005, file: !3006, line: 94, baseType: !6, size: 64, offset: 1408)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3005, file: !3006, line: 95, baseType: !74, size: 64, offset: 1472)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3005, file: !3006, line: 96, baseType: !19, size: 32, offset: 1536)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3005, file: !3006, line: 98, baseType: !3051, size: 160, offset: 1568)
!3051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 160, elements: !3052)
!3052 = !{!3053}
!3053 = !DISubrange(count: 20)
!3054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!3055 = !DILocalVariable(name: "stream", arg: 1, scope: !2998, file: !2999, line: 61, type: !3002)
!3056 = !DILocation(line: 61, column: 24, scope: !2998)
!3057 = !DILocalVariable(name: "command_name", arg: 2, scope: !2998, file: !2999, line: 62, type: !16)
!3058 = !DILocation(line: 62, column: 30, scope: !2998)
!3059 = !DILocalVariable(name: "package", arg: 3, scope: !2998, file: !2999, line: 62, type: !16)
!3060 = !DILocation(line: 62, column: 56, scope: !2998)
!3061 = !DILocalVariable(name: "version", arg: 4, scope: !2998, file: !2999, line: 63, type: !16)
!3062 = !DILocation(line: 63, column: 30, scope: !2998)
!3063 = !DILocalVariable(name: "authors", arg: 5, scope: !2998, file: !2999, line: 64, type: !3054)
!3064 = !DILocation(line: 64, column: 39, scope: !2998)
!3065 = !DILocalVariable(name: "n_authors", arg: 6, scope: !2998, file: !2999, line: 64, type: !74)
!3066 = !DILocation(line: 64, column: 55, scope: !2998)
!3067 = !DILocation(line: 66, column: 7, scope: !3068)
!3068 = distinct !DILexicalBlock(scope: !2998, file: !2999, line: 66, column: 7)
!3069 = !DILocation(line: 66, column: 7, scope: !2998)
!3070 = !DILocation(line: 67, column: 14, scope: !3068)
!3071 = !DILocation(line: 67, column: 38, scope: !3068)
!3072 = !DILocation(line: 67, column: 52, scope: !3068)
!3073 = !DILocation(line: 67, column: 61, scope: !3068)
!3074 = !DILocation(line: 67, column: 5, scope: !3068)
!3075 = !DILocation(line: 69, column: 14, scope: !3068)
!3076 = !DILocation(line: 69, column: 33, scope: !3068)
!3077 = !DILocation(line: 69, column: 42, scope: !3068)
!3078 = !DILocation(line: 69, column: 5, scope: !3068)
!3079 = !DILocation(line: 83, column: 12, scope: !2998)
!3080 = !DILocation(line: 83, column: 43, scope: !2998)
!3081 = !DILocation(line: 83, column: 3, scope: !2998)
!3082 = !DILocation(line: 85, column: 3, scope: !2998)
!3083 = !DILocation(line: 88, column: 12, scope: !2998)
!3084 = !DILocation(line: 88, column: 20, scope: !2998)
!3085 = !DILocation(line: 88, column: 3, scope: !2998)
!3086 = !DILocation(line: 95, column: 3, scope: !2998)
!3087 = !DILocation(line: 97, column: 11, scope: !2998)
!3088 = !DILocation(line: 97, column: 3, scope: !2998)
!3089 = !DILocation(line: 102, column: 7, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !2998, file: !2999, line: 98, column: 5)
!3091 = !DILocation(line: 105, column: 16, scope: !3090)
!3092 = !DILocation(line: 105, column: 24, scope: !3090)
!3093 = !DILocation(line: 105, column: 47, scope: !3090)
!3094 = !DILocation(line: 105, column: 7, scope: !3090)
!3095 = !DILocation(line: 106, column: 7, scope: !3090)
!3096 = !DILocation(line: 109, column: 16, scope: !3090)
!3097 = !DILocation(line: 109, column: 24, scope: !3090)
!3098 = !DILocation(line: 109, column: 54, scope: !3090)
!3099 = !DILocation(line: 109, column: 66, scope: !3090)
!3100 = !DILocation(line: 109, column: 7, scope: !3090)
!3101 = !DILocation(line: 110, column: 7, scope: !3090)
!3102 = !DILocation(line: 113, column: 16, scope: !3090)
!3103 = !DILocation(line: 113, column: 24, scope: !3090)
!3104 = !DILocation(line: 114, column: 16, scope: !3090)
!3105 = !DILocation(line: 114, column: 28, scope: !3090)
!3106 = !DILocation(line: 114, column: 40, scope: !3090)
!3107 = !DILocation(line: 113, column: 7, scope: !3090)
!3108 = !DILocation(line: 115, column: 7, scope: !3090)
!3109 = !DILocation(line: 120, column: 16, scope: !3090)
!3110 = !DILocation(line: 120, column: 24, scope: !3090)
!3111 = !DILocation(line: 121, column: 16, scope: !3090)
!3112 = !DILocation(line: 121, column: 28, scope: !3090)
!3113 = !DILocation(line: 121, column: 40, scope: !3090)
!3114 = !DILocation(line: 121, column: 52, scope: !3090)
!3115 = !DILocation(line: 120, column: 7, scope: !3090)
!3116 = !DILocation(line: 122, column: 7, scope: !3090)
!3117 = !DILocation(line: 127, column: 16, scope: !3090)
!3118 = !DILocation(line: 127, column: 24, scope: !3090)
!3119 = !DILocation(line: 128, column: 16, scope: !3090)
!3120 = !DILocation(line: 128, column: 28, scope: !3090)
!3121 = !DILocation(line: 128, column: 40, scope: !3090)
!3122 = !DILocation(line: 128, column: 52, scope: !3090)
!3123 = !DILocation(line: 128, column: 64, scope: !3090)
!3124 = !DILocation(line: 127, column: 7, scope: !3090)
!3125 = !DILocation(line: 129, column: 7, scope: !3090)
!3126 = !DILocation(line: 134, column: 16, scope: !3090)
!3127 = !DILocation(line: 134, column: 24, scope: !3090)
!3128 = !DILocation(line: 135, column: 16, scope: !3090)
!3129 = !DILocation(line: 135, column: 28, scope: !3090)
!3130 = !DILocation(line: 135, column: 40, scope: !3090)
!3131 = !DILocation(line: 135, column: 52, scope: !3090)
!3132 = !DILocation(line: 135, column: 64, scope: !3090)
!3133 = !DILocation(line: 136, column: 16, scope: !3090)
!3134 = !DILocation(line: 134, column: 7, scope: !3090)
!3135 = !DILocation(line: 137, column: 7, scope: !3090)
!3136 = !DILocation(line: 142, column: 16, scope: !3090)
!3137 = !DILocation(line: 142, column: 24, scope: !3090)
!3138 = !DILocation(line: 143, column: 16, scope: !3090)
!3139 = !DILocation(line: 143, column: 28, scope: !3090)
!3140 = !DILocation(line: 143, column: 40, scope: !3090)
!3141 = !DILocation(line: 143, column: 52, scope: !3090)
!3142 = !DILocation(line: 143, column: 64, scope: !3090)
!3143 = !DILocation(line: 144, column: 16, scope: !3090)
!3144 = !DILocation(line: 144, column: 28, scope: !3090)
!3145 = !DILocation(line: 142, column: 7, scope: !3090)
!3146 = !DILocation(line: 145, column: 7, scope: !3090)
!3147 = !DILocation(line: 150, column: 16, scope: !3090)
!3148 = !DILocation(line: 150, column: 24, scope: !3090)
!3149 = !DILocation(line: 152, column: 17, scope: !3090)
!3150 = !DILocation(line: 152, column: 29, scope: !3090)
!3151 = !DILocation(line: 152, column: 41, scope: !3090)
!3152 = !DILocation(line: 152, column: 53, scope: !3090)
!3153 = !DILocation(line: 152, column: 65, scope: !3090)
!3154 = !DILocation(line: 153, column: 17, scope: !3090)
!3155 = !DILocation(line: 153, column: 29, scope: !3090)
!3156 = !DILocation(line: 153, column: 41, scope: !3090)
!3157 = !DILocation(line: 150, column: 7, scope: !3090)
!3158 = !DILocation(line: 154, column: 7, scope: !3090)
!3159 = !DILocation(line: 159, column: 16, scope: !3090)
!3160 = !DILocation(line: 159, column: 24, scope: !3090)
!3161 = !DILocation(line: 161, column: 16, scope: !3090)
!3162 = !DILocation(line: 161, column: 28, scope: !3090)
!3163 = !DILocation(line: 161, column: 40, scope: !3090)
!3164 = !DILocation(line: 161, column: 52, scope: !3090)
!3165 = !DILocation(line: 161, column: 64, scope: !3090)
!3166 = !DILocation(line: 162, column: 16, scope: !3090)
!3167 = !DILocation(line: 162, column: 28, scope: !3090)
!3168 = !DILocation(line: 162, column: 40, scope: !3090)
!3169 = !DILocation(line: 162, column: 52, scope: !3090)
!3170 = !DILocation(line: 159, column: 7, scope: !3090)
!3171 = !DILocation(line: 163, column: 7, scope: !3090)
!3172 = !DILocation(line: 170, column: 16, scope: !3090)
!3173 = !DILocation(line: 170, column: 24, scope: !3090)
!3174 = !DILocation(line: 172, column: 17, scope: !3090)
!3175 = !DILocation(line: 172, column: 29, scope: !3090)
!3176 = !DILocation(line: 172, column: 41, scope: !3090)
!3177 = !DILocation(line: 172, column: 53, scope: !3090)
!3178 = !DILocation(line: 172, column: 65, scope: !3090)
!3179 = !DILocation(line: 173, column: 17, scope: !3090)
!3180 = !DILocation(line: 173, column: 29, scope: !3090)
!3181 = !DILocation(line: 173, column: 41, scope: !3090)
!3182 = !DILocation(line: 173, column: 53, scope: !3090)
!3183 = !DILocation(line: 170, column: 7, scope: !3090)
!3184 = !DILocation(line: 174, column: 7, scope: !3090)
!3185 = !DILocation(line: 176, column: 1, scope: !2998)
!3186 = !DILocalVariable(name: "stream", arg: 1, scope: !3187, file: !2999, line: 61, type: !3190)
!3187 = distinct !DISubprogram(name: "version_etc_arn", scope: !2999, file: !2999, line: 61, type: !3188, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3224, retainedNodes: !4)
!3188 = !DISubroutineType(types: !3189)
!3189 = !{null, !3190, !16, !16, !16, !3054, !74}
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 64)
!3191 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3004, line: 7, baseType: !3192)
!3192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3006, line: 49, size: 1728, elements: !3193)
!3193 = !{!3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223}
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3192, file: !3006, line: 51, baseType: !19, size: 32)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3192, file: !3006, line: 54, baseType: !7, size: 64, offset: 64)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3192, file: !3006, line: 55, baseType: !7, size: 64, offset: 128)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3192, file: !3006, line: 56, baseType: !7, size: 64, offset: 192)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3192, file: !3006, line: 57, baseType: !7, size: 64, offset: 256)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3192, file: !3006, line: 58, baseType: !7, size: 64, offset: 320)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3192, file: !3006, line: 59, baseType: !7, size: 64, offset: 384)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3192, file: !3006, line: 60, baseType: !7, size: 64, offset: 448)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3192, file: !3006, line: 61, baseType: !7, size: 64, offset: 512)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3192, file: !3006, line: 64, baseType: !7, size: 64, offset: 576)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3192, file: !3006, line: 65, baseType: !7, size: 64, offset: 640)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3192, file: !3006, line: 66, baseType: !7, size: 64, offset: 704)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3192, file: !3006, line: 68, baseType: !3021, size: 64, offset: 768)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3192, file: !3006, line: 70, baseType: !3208, size: 64, offset: 832)
!3208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3192, size: 64)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3192, file: !3006, line: 72, baseType: !19, size: 32, offset: 896)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3192, file: !3006, line: 73, baseType: !19, size: 32, offset: 928)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3192, file: !3006, line: 74, baseType: !423, size: 64, offset: 960)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3192, file: !3006, line: 77, baseType: !73, size: 16, offset: 1024)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3192, file: !3006, line: 78, baseType: !3030, size: 8, offset: 1040)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3192, file: !3006, line: 79, baseType: !3032, size: 8, offset: 1048)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3192, file: !3006, line: 81, baseType: !3036, size: 64, offset: 1088)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3192, file: !3006, line: 89, baseType: !3039, size: 64, offset: 1152)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3192, file: !3006, line: 91, baseType: !3041, size: 64, offset: 1216)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3192, file: !3006, line: 92, baseType: !3044, size: 64, offset: 1280)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3192, file: !3006, line: 93, baseType: !3208, size: 64, offset: 1344)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3192, file: !3006, line: 94, baseType: !6, size: 64, offset: 1408)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3192, file: !3006, line: 95, baseType: !74, size: 64, offset: 1472)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3192, file: !3006, line: 96, baseType: !19, size: 32, offset: 1536)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3192, file: !3006, line: 98, baseType: !3051, size: 160, offset: 1568)
!3224 = distinct !DICompileUnit(language: DW_LANG_C99, file: !131, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !132, nameTableKind: None)
!3225 = !DILocalVariable(name: "command_name", arg: 2, scope: !3187, file: !2999, line: 62, type: !16)
!3226 = !DILocalVariable(name: "package", arg: 3, scope: !3187, file: !2999, line: 62, type: !16)
!3227 = !DILocalVariable(name: "version", arg: 4, scope: !3187, file: !2999, line: 63, type: !16)
!3228 = !DILocalVariable(name: "authors", arg: 5, scope: !3187, file: !2999, line: 64, type: !3054)
!3229 = !DILocalVariable(name: "n_authors", arg: 6, scope: !3187, file: !2999, line: 64, type: !74)
!3230 = distinct !DISubprogram(name: "version_etc_va", scope: !2999, file: !2999, line: 199, type: !3231, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !130, retainedNodes: !4)
!3231 = !DISubroutineType(types: !3232)
!3232 = !{null, !3002, !16, !16, !16, !3233}
!3233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3234, size: 64)
!3234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !131, line: 192, size: 192, elements: !3235)
!3235 = !{!3236, !3237, !3238, !3239}
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !3234, file: !131, line: 192, baseType: !59, size: 32)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !3234, file: !131, line: 192, baseType: !59, size: 32, offset: 32)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !3234, file: !131, line: 192, baseType: !6, size: 64, offset: 64)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !3234, file: !131, line: 192, baseType: !6, size: 64, offset: 128)
!3240 = !DILocalVariable(name: "stream", arg: 1, scope: !3230, file: !2999, line: 199, type: !3002)
!3241 = !DILocation(line: 199, column: 23, scope: !3230)
!3242 = !DILocalVariable(name: "command_name", arg: 2, scope: !3230, file: !2999, line: 200, type: !16)
!3243 = !DILocation(line: 200, column: 29, scope: !3230)
!3244 = !DILocalVariable(name: "package", arg: 3, scope: !3230, file: !2999, line: 200, type: !16)
!3245 = !DILocation(line: 200, column: 55, scope: !3230)
!3246 = !DILocalVariable(name: "version", arg: 4, scope: !3230, file: !2999, line: 201, type: !16)
!3247 = !DILocation(line: 201, column: 29, scope: !3230)
!3248 = !DILocalVariable(name: "authors", arg: 5, scope: !3230, file: !2999, line: 201, type: !3233)
!3249 = !DILocation(line: 201, column: 46, scope: !3230)
!3250 = !DILocalVariable(name: "n_authors", scope: !3230, file: !2999, line: 203, type: !74)
!3251 = !DILocation(line: 203, column: 10, scope: !3230)
!3252 = !DILocalVariable(name: "authtab", scope: !3230, file: !2999, line: 204, type: !3253)
!3253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 640, elements: !89)
!3254 = !DILocation(line: 204, column: 15, scope: !3230)
!3255 = !DILocation(line: 206, column: 18, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !3230, file: !2999, line: 206, column: 3)
!3257 = !DILocation(line: 206, column: 8, scope: !3256)
!3258 = !DILocation(line: 207, column: 8, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3256, file: !2999, line: 206, column: 3)
!3260 = !DILocation(line: 207, column: 18, scope: !3259)
!3261 = !DILocation(line: 208, column: 10, scope: !3259)
!3262 = !DILocation(line: 208, column: 35, scope: !3259)
!3263 = !DILocation(line: 208, column: 22, scope: !3259)
!3264 = !DILocation(line: 208, column: 14, scope: !3259)
!3265 = !DILocation(line: 208, column: 33, scope: !3259)
!3266 = !DILocation(line: 208, column: 67, scope: !3259)
!3267 = !DILocation(line: 0, scope: !3259)
!3268 = !DILocation(line: 206, column: 3, scope: !3256)
!3269 = !DILocation(line: 209, column: 17, scope: !3259)
!3270 = !DILocation(line: 206, column: 3, scope: !3259)
!3271 = distinct !{!3271, !3268, !3272}
!3272 = !DILocation(line: 210, column: 5, scope: !3256)
!3273 = !DILocation(line: 211, column: 20, scope: !3230)
!3274 = !DILocation(line: 211, column: 28, scope: !3230)
!3275 = !DILocation(line: 211, column: 42, scope: !3230)
!3276 = !DILocation(line: 211, column: 51, scope: !3230)
!3277 = !DILocation(line: 212, column: 20, scope: !3230)
!3278 = !DILocation(line: 212, column: 29, scope: !3230)
!3279 = !DILocation(line: 211, column: 3, scope: !3230)
!3280 = !DILocation(line: 213, column: 1, scope: !3230)
!3281 = distinct !DISubprogram(name: "version_etc", scope: !2999, file: !2999, line: 230, type: !3282, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !130, retainedNodes: !4)
!3282 = !DISubroutineType(types: !3283)
!3283 = !{null, !3002, !16, !16, !16, null}
!3284 = !DILocalVariable(name: "stream", arg: 1, scope: !3281, file: !2999, line: 230, type: !3002)
!3285 = !DILocation(line: 230, column: 20, scope: !3281)
!3286 = !DILocalVariable(name: "command_name", arg: 2, scope: !3281, file: !2999, line: 231, type: !16)
!3287 = !DILocation(line: 231, column: 26, scope: !3281)
!3288 = !DILocalVariable(name: "package", arg: 3, scope: !3281, file: !2999, line: 231, type: !16)
!3289 = !DILocation(line: 231, column: 52, scope: !3281)
!3290 = !DILocalVariable(name: "version", arg: 4, scope: !3281, file: !2999, line: 232, type: !16)
!3291 = !DILocation(line: 232, column: 26, scope: !3281)
!3292 = !DILocalVariable(name: "authors", scope: !3281, file: !2999, line: 234, type: !3293)
!3293 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3294, line: 52, baseType: !3295)
!3294 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!3295 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3296, line: 32, baseType: !3297)
!3296 = !DIFile(filename: "/usr/lib/llvm-9/lib/clang/9.0.1/include/stdarg.h", directory: "")
!3297 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !131, line: 234, baseType: !3298)
!3298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3234, size: 192, elements: !3033)
!3299 = !DILocation(line: 234, column: 11, scope: !3281)
!3300 = !DILocation(line: 236, column: 3, scope: !3281)
!3301 = !DILocation(line: 237, column: 19, scope: !3281)
!3302 = !DILocation(line: 237, column: 27, scope: !3281)
!3303 = !DILocation(line: 237, column: 41, scope: !3281)
!3304 = !DILocation(line: 237, column: 50, scope: !3281)
!3305 = !DILocation(line: 237, column: 59, scope: !3281)
!3306 = !DILocation(line: 237, column: 3, scope: !3281)
!3307 = !DILocation(line: 238, column: 3, scope: !3281)
!3308 = !DILocation(line: 239, column: 1, scope: !3281)
!3309 = !DILocalVariable(name: "stream", arg: 1, scope: !3310, file: !2999, line: 230, type: !3313)
!3310 = distinct !DISubprogram(name: "version_etc", scope: !2999, file: !2999, line: 230, type: !3311, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3347, retainedNodes: !4)
!3311 = !DISubroutineType(types: !3312)
!3312 = !{null, !3313, !16, !16, !16, null}
!3313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3314, size: 64)
!3314 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3004, line: 7, baseType: !3315)
!3315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3006, line: 49, size: 1728, elements: !3316)
!3316 = !{!3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346}
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3315, file: !3006, line: 51, baseType: !19, size: 32)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3315, file: !3006, line: 54, baseType: !7, size: 64, offset: 64)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3315, file: !3006, line: 55, baseType: !7, size: 64, offset: 128)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3315, file: !3006, line: 56, baseType: !7, size: 64, offset: 192)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3315, file: !3006, line: 57, baseType: !7, size: 64, offset: 256)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3315, file: !3006, line: 58, baseType: !7, size: 64, offset: 320)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3315, file: !3006, line: 59, baseType: !7, size: 64, offset: 384)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3315, file: !3006, line: 60, baseType: !7, size: 64, offset: 448)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3315, file: !3006, line: 61, baseType: !7, size: 64, offset: 512)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3315, file: !3006, line: 64, baseType: !7, size: 64, offset: 576)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3315, file: !3006, line: 65, baseType: !7, size: 64, offset: 640)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3315, file: !3006, line: 66, baseType: !7, size: 64, offset: 704)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3315, file: !3006, line: 68, baseType: !3021, size: 64, offset: 768)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3315, file: !3006, line: 70, baseType: !3331, size: 64, offset: 832)
!3331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3315, size: 64)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3315, file: !3006, line: 72, baseType: !19, size: 32, offset: 896)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3315, file: !3006, line: 73, baseType: !19, size: 32, offset: 928)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3315, file: !3006, line: 74, baseType: !423, size: 64, offset: 960)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3315, file: !3006, line: 77, baseType: !73, size: 16, offset: 1024)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3315, file: !3006, line: 78, baseType: !3030, size: 8, offset: 1040)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3315, file: !3006, line: 79, baseType: !3032, size: 8, offset: 1048)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3315, file: !3006, line: 81, baseType: !3036, size: 64, offset: 1088)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3315, file: !3006, line: 89, baseType: !3039, size: 64, offset: 1152)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3315, file: !3006, line: 91, baseType: !3041, size: 64, offset: 1216)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3315, file: !3006, line: 92, baseType: !3044, size: 64, offset: 1280)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3315, file: !3006, line: 93, baseType: !3331, size: 64, offset: 1344)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3315, file: !3006, line: 94, baseType: !6, size: 64, offset: 1408)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3315, file: !3006, line: 95, baseType: !74, size: 64, offset: 1472)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3315, file: !3006, line: 96, baseType: !19, size: 32, offset: 1536)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3315, file: !3006, line: 98, baseType: !3051, size: 160, offset: 1568)
!3347 = distinct !DICompileUnit(language: DW_LANG_C99, file: !131, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !132, nameTableKind: None)
!3348 = !DILocalVariable(name: "command_name", arg: 2, scope: !3310, file: !2999, line: 231, type: !16)
!3349 = !DILocalVariable(name: "package", arg: 3, scope: !3310, file: !2999, line: 231, type: !16)
!3350 = !DILocalVariable(name: "version", arg: 4, scope: !3310, file: !2999, line: 232, type: !16)
!3351 = !DILocalVariable(name: "authors", scope: !3310, file: !2999, line: 234, type: !3352)
!3352 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3294, line: 52, baseType: !3353)
!3353 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3296, line: 32, baseType: !3354)
!3354 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !131, line: 234, baseType: !3355)
!3355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3356, size: 192, elements: !3033)
!3356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !131, line: 192, size: 192, elements: !3357)
!3357 = !{!3358, !3359, !3360, !3361}
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !3356, file: !131, line: 192, baseType: !59, size: 32)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !3356, file: !131, line: 192, baseType: !59, size: 32, offset: 32)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !3356, file: !131, line: 192, baseType: !6, size: 64, offset: 64)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !3356, file: !131, line: 192, baseType: !6, size: 64, offset: 128)
!3362 = distinct !DISubprogram(name: "xnmalloc", scope: !3363, file: !3363, line: 99, type: !3364, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !133, retainedNodes: !4)
!3363 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3364 = !DISubroutineType(types: !3365)
!3365 = !{!6, !74, !74}
!3366 = !DILocalVariable(name: "n", arg: 1, scope: !3362, file: !3363, line: 99, type: !74)
!3367 = !DILocation(line: 99, column: 18, scope: !3362)
!3368 = !DILocalVariable(name: "s", arg: 2, scope: !3362, file: !3363, line: 99, type: !74)
!3369 = !DILocation(line: 99, column: 28, scope: !3362)
!3370 = !DILocation(line: 101, column: 7, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3362, file: !3363, line: 101, column: 7)
!3372 = !DILocation(line: 101, column: 7, scope: !3362)
!3373 = !DILocation(line: 102, column: 5, scope: !3371)
!3374 = !DILocation(line: 103, column: 19, scope: !3362)
!3375 = !DILocation(line: 103, column: 23, scope: !3362)
!3376 = !DILocation(line: 103, column: 21, scope: !3362)
!3377 = !DILocation(line: 103, column: 10, scope: !3362)
!3378 = !DILocation(line: 103, column: 3, scope: !3362)
!3379 = !DILocalVariable(name: "n", arg: 1, scope: !3380, file: !3363, line: 99, type: !74)
!3380 = distinct !DISubprogram(name: "xnmalloc", scope: !3363, file: !3363, line: 99, type: !3364, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3381, retainedNodes: !4)
!3381 = distinct !DICompileUnit(language: DW_LANG_C99, file: !134, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !135, nameTableKind: None)
!3382 = !DILocalVariable(name: "s", arg: 2, scope: !3380, file: !3363, line: 99, type: !74)
!3383 = distinct !DISubprogram(name: "xmalloc", scope: !3384, file: !3384, line: 39, type: !3385, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !133, retainedNodes: !4)
!3384 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3385 = !DISubroutineType(types: !3386)
!3386 = !{!6, !74}
!3387 = !DILocalVariable(name: "n", arg: 1, scope: !3383, file: !3384, line: 39, type: !74)
!3388 = !DILocation(line: 39, column: 17, scope: !3383)
!3389 = !DILocalVariable(name: "p", scope: !3383, file: !3384, line: 41, type: !6)
!3390 = !DILocation(line: 41, column: 9, scope: !3383)
!3391 = !DILocation(line: 41, column: 21, scope: !3383)
!3392 = !DILocation(line: 41, column: 13, scope: !3383)
!3393 = !DILocation(line: 42, column: 8, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3383, file: !3384, line: 42, column: 7)
!3395 = !DILocation(line: 42, column: 10, scope: !3394)
!3396 = !DILocation(line: 42, column: 13, scope: !3394)
!3397 = !DILocation(line: 42, column: 15, scope: !3394)
!3398 = !DILocation(line: 42, column: 7, scope: !3383)
!3399 = !DILocation(line: 43, column: 5, scope: !3394)
!3400 = !DILocation(line: 44, column: 10, scope: !3383)
!3401 = !DILocation(line: 44, column: 3, scope: !3383)
!3402 = distinct !DISubprogram(name: "xrealloc", scope: !3384, file: !3384, line: 51, type: !3403, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !133, retainedNodes: !4)
!3403 = !DISubroutineType(types: !3404)
!3404 = !{!6, !6, !74}
!3405 = !DILocalVariable(name: "p", arg: 1, scope: !3402, file: !3384, line: 51, type: !6)
!3406 = !DILocation(line: 51, column: 17, scope: !3402)
!3407 = !DILocalVariable(name: "n", arg: 2, scope: !3402, file: !3384, line: 51, type: !74)
!3408 = !DILocation(line: 51, column: 27, scope: !3402)
!3409 = !DILocation(line: 53, column: 8, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3402, file: !3384, line: 53, column: 7)
!3411 = !DILocation(line: 53, column: 10, scope: !3410)
!3412 = !DILocation(line: 53, column: 13, scope: !3410)
!3413 = !DILocation(line: 53, column: 7, scope: !3402)
!3414 = !DILocation(line: 57, column: 13, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3410, file: !3384, line: 54, column: 5)
!3416 = !DILocation(line: 57, column: 7, scope: !3415)
!3417 = !DILocation(line: 58, column: 7, scope: !3415)
!3418 = !DILocation(line: 61, column: 16, scope: !3402)
!3419 = !DILocation(line: 61, column: 19, scope: !3402)
!3420 = !DILocation(line: 61, column: 7, scope: !3402)
!3421 = !DILocation(line: 61, column: 5, scope: !3402)
!3422 = !DILocation(line: 62, column: 8, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3402, file: !3384, line: 62, column: 7)
!3424 = !DILocation(line: 62, column: 10, scope: !3423)
!3425 = !DILocation(line: 62, column: 13, scope: !3423)
!3426 = !DILocation(line: 62, column: 7, scope: !3402)
!3427 = !DILocation(line: 63, column: 5, scope: !3423)
!3428 = !DILocation(line: 64, column: 10, scope: !3402)
!3429 = !DILocation(line: 64, column: 3, scope: !3402)
!3430 = !DILocation(line: 65, column: 1, scope: !3402)
!3431 = !DILocalVariable(name: "p", arg: 1, scope: !3432, file: !3384, line: 51, type: !6)
!3432 = distinct !DISubprogram(name: "xrealloc", scope: !3384, file: !3384, line: 51, type: !3403, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3433, retainedNodes: !4)
!3433 = distinct !DICompileUnit(language: DW_LANG_C99, file: !134, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !135, nameTableKind: None)
!3434 = !DILocalVariable(name: "n", arg: 2, scope: !3432, file: !3384, line: 51, type: !74)
!3435 = distinct !DISubprogram(name: "xcharalloc", scope: !3363, file: !3363, line: 216, type: !1018, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !133, retainedNodes: !4)
!3436 = !DILocalVariable(name: "n", arg: 1, scope: !3435, file: !3363, line: 216, type: !74)
!3437 = !DILocation(line: 216, column: 20, scope: !3435)
!3438 = !DILocation(line: 218, column: 10, scope: !3435)
!3439 = !DILocation(line: 218, column: 3, scope: !3435)
!3440 = distinct !DISubprogram(name: "xalloc_die", scope: !3441, file: !3441, line: 32, type: !1154, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !136, retainedNodes: !4)
!3441 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3442 = !DILocation(line: 34, column: 10, scope: !3440)
!3443 = !DILocation(line: 34, column: 33, scope: !3440)
!3444 = !DILocation(line: 34, column: 3, scope: !3440)
!3445 = !DILocation(line: 40, column: 3, scope: !3440)
!3446 = distinct !DISubprogram(name: "xgetcwd", scope: !3447, file: !3447, line: 35, type: !401, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !138, retainedNodes: !4)
!3447 = !DIFile(filename: "lib/xgetcwd.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3448 = !DILocalVariable(name: "cwd", scope: !3446, file: !3447, line: 37, type: !7)
!3449 = !DILocation(line: 37, column: 9, scope: !3446)
!3450 = !DILocation(line: 37, column: 15, scope: !3446)
!3451 = !DILocation(line: 38, column: 9, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3446, file: !3447, line: 38, column: 7)
!3453 = !DILocation(line: 38, column: 13, scope: !3452)
!3454 = !DILocation(line: 38, column: 16, scope: !3452)
!3455 = !DILocation(line: 38, column: 22, scope: !3452)
!3456 = !DILocation(line: 38, column: 7, scope: !3446)
!3457 = !DILocation(line: 39, column: 5, scope: !3452)
!3458 = !DILocation(line: 40, column: 10, scope: !3446)
!3459 = !DILocation(line: 40, column: 3, scope: !3446)
!3460 = !DILocalVariable(name: "cwd", scope: !3461, file: !3447, line: 37, type: !7)
!3461 = distinct !DISubprogram(name: "xgetcwd", scope: !3447, file: !3447, line: 35, type: !401, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3462, retainedNodes: !4)
!3462 = distinct !DICompileUnit(language: DW_LANG_C99, file: !139, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!3463 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !3464, file: !3464, line: 86, type: !3465, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !140, retainedNodes: !4)
!3464 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3465 = !DISubroutineType(types: !3466)
!3466 = !{!74, !3467, !16, !74, !3468}
!3467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!3468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3469, size: 64)
!3469 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !2098, line: 6, baseType: !3470)
!3470 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !2100, line: 21, baseType: !3471)
!3471 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2100, line: 13, size: 64, elements: !3472)
!3472 = !{!3473, !3474}
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !3471, file: !2100, line: 15, baseType: !19, size: 32)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !3471, file: !2100, line: 20, baseType: !3475, size: 32, offset: 32)
!3475 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3471, file: !2100, line: 16, size: 32, elements: !3476)
!3476 = !{!3477, !3478}
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !3475, file: !2100, line: 18, baseType: !59, size: 32)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !3475, file: !2100, line: 19, baseType: !2109, size: 32)
!3479 = !DILocalVariable(name: "pwc", arg: 1, scope: !3463, file: !3464, line: 86, type: !3467)
!3480 = !DILocation(line: 86, column: 23, scope: !3463)
!3481 = !DILocalVariable(name: "s", arg: 2, scope: !3463, file: !3464, line: 86, type: !16)
!3482 = !DILocation(line: 86, column: 40, scope: !3463)
!3483 = !DILocalVariable(name: "n", arg: 3, scope: !3463, file: !3464, line: 86, type: !74)
!3484 = !DILocation(line: 86, column: 50, scope: !3463)
!3485 = !DILocalVariable(name: "ps", arg: 4, scope: !3463, file: !3464, line: 86, type: !3468)
!3486 = !DILocation(line: 86, column: 64, scope: !3463)
!3487 = !DILocalVariable(name: "ret", scope: !3463, file: !3464, line: 88, type: !74)
!3488 = !DILocation(line: 88, column: 10, scope: !3463)
!3489 = !DILocalVariable(name: "wc", scope: !3463, file: !3464, line: 89, type: !2127)
!3490 = !DILocation(line: 89, column: 11, scope: !3463)
!3491 = !DILocation(line: 105, column: 9, scope: !3492)
!3492 = distinct !DILexicalBlock(scope: !3463, file: !3464, line: 105, column: 7)
!3493 = !DILocation(line: 105, column: 7, scope: !3463)
!3494 = !DILocation(line: 106, column: 9, scope: !3492)
!3495 = !DILocation(line: 106, column: 5, scope: !3492)
!3496 = !DILocation(line: 145, column: 18, scope: !3463)
!3497 = !DILocation(line: 145, column: 23, scope: !3463)
!3498 = !DILocation(line: 145, column: 26, scope: !3463)
!3499 = !DILocation(line: 145, column: 29, scope: !3463)
!3500 = !DILocation(line: 145, column: 9, scope: !3463)
!3501 = !DILocation(line: 145, column: 7, scope: !3463)
!3502 = !DILocation(line: 154, column: 22, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3463, file: !3464, line: 154, column: 7)
!3504 = !DILocation(line: 154, column: 19, scope: !3503)
!3505 = !DILocation(line: 154, column: 26, scope: !3503)
!3506 = !DILocation(line: 154, column: 29, scope: !3503)
!3507 = !DILocation(line: 154, column: 31, scope: !3503)
!3508 = !DILocation(line: 154, column: 36, scope: !3503)
!3509 = !DILocation(line: 154, column: 41, scope: !3503)
!3510 = !DILocation(line: 154, column: 7, scope: !3463)
!3511 = !DILocalVariable(name: "uc", scope: !3512, file: !3464, line: 156, type: !148)
!3512 = distinct !DILexicalBlock(scope: !3503, file: !3464, line: 155, column: 5)
!3513 = !DILocation(line: 156, column: 21, scope: !3512)
!3514 = !DILocation(line: 156, column: 27, scope: !3512)
!3515 = !DILocation(line: 156, column: 26, scope: !3512)
!3516 = !DILocation(line: 157, column: 14, scope: !3512)
!3517 = !DILocation(line: 157, column: 8, scope: !3512)
!3518 = !DILocation(line: 157, column: 12, scope: !3512)
!3519 = !DILocation(line: 158, column: 7, scope: !3512)
!3520 = !DILocation(line: 162, column: 10, scope: !3463)
!3521 = !DILocation(line: 162, column: 3, scope: !3463)
!3522 = !DILocation(line: 163, column: 1, scope: !3463)
!3523 = distinct !DISubprogram(name: "c_strcasecmp", scope: !3524, file: !3524, line: 27, type: !3525, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !143, retainedNodes: !4)
!3524 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3525 = !DISubroutineType(types: !3526)
!3526 = !{!19, !16, !16}
!3527 = !DILocalVariable(name: "s1", arg: 1, scope: !3523, file: !3524, line: 27, type: !16)
!3528 = !DILocation(line: 27, column: 27, scope: !3523)
!3529 = !DILocalVariable(name: "s2", arg: 2, scope: !3523, file: !3524, line: 27, type: !16)
!3530 = !DILocation(line: 27, column: 43, scope: !3523)
!3531 = !DILocalVariable(name: "p1", scope: !3523, file: !3524, line: 29, type: !146)
!3532 = !DILocation(line: 29, column: 33, scope: !3523)
!3533 = !DILocation(line: 29, column: 62, scope: !3523)
!3534 = !DILocalVariable(name: "p2", scope: !3523, file: !3524, line: 30, type: !146)
!3535 = !DILocation(line: 30, column: 33, scope: !3523)
!3536 = !DILocation(line: 30, column: 62, scope: !3523)
!3537 = !DILocalVariable(name: "c1", scope: !3523, file: !3524, line: 31, type: !148)
!3538 = !DILocation(line: 31, column: 17, scope: !3523)
!3539 = !DILocalVariable(name: "c2", scope: !3523, file: !3524, line: 31, type: !148)
!3540 = !DILocation(line: 31, column: 21, scope: !3523)
!3541 = !DILocation(line: 33, column: 7, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3523, file: !3524, line: 33, column: 7)
!3543 = !DILocation(line: 33, column: 13, scope: !3542)
!3544 = !DILocation(line: 33, column: 10, scope: !3542)
!3545 = !DILocation(line: 33, column: 7, scope: !3523)
!3546 = !DILocation(line: 34, column: 5, scope: !3542)
!3547 = !DILocation(line: 36, column: 3, scope: !3523)
!3548 = !DILocation(line: 38, column: 24, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3523, file: !3524, line: 37, column: 5)
!3550 = !DILocation(line: 38, column: 23, scope: !3549)
!3551 = !DILocation(line: 38, column: 12, scope: !3549)
!3552 = !DILocation(line: 38, column: 10, scope: !3549)
!3553 = !DILocation(line: 39, column: 24, scope: !3549)
!3554 = !DILocation(line: 39, column: 23, scope: !3549)
!3555 = !DILocation(line: 39, column: 12, scope: !3549)
!3556 = !DILocation(line: 39, column: 10, scope: !3549)
!3557 = !DILocation(line: 41, column: 11, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3549, file: !3524, line: 41, column: 11)
!3559 = !DILocation(line: 41, column: 14, scope: !3558)
!3560 = !DILocation(line: 41, column: 11, scope: !3549)
!3561 = !DILocation(line: 42, column: 9, scope: !3558)
!3562 = !DILocation(line: 44, column: 7, scope: !3549)
!3563 = !DILocation(line: 45, column: 7, scope: !3549)
!3564 = !DILocation(line: 46, column: 5, scope: !3549)
!3565 = !DILocation(line: 47, column: 10, scope: !3523)
!3566 = !DILocation(line: 47, column: 16, scope: !3523)
!3567 = !DILocation(line: 47, column: 13, scope: !3523)
!3568 = distinct !{!3568, !3547, !3569}
!3569 = !DILocation(line: 47, column: 18, scope: !3523)
!3570 = !DILocation(line: 50, column: 12, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3523, file: !3524, line: 49, column: 7)
!3572 = !DILocation(line: 50, column: 17, scope: !3571)
!3573 = !DILocation(line: 50, column: 15, scope: !3571)
!3574 = !DILocation(line: 50, column: 5, scope: !3571)
!3575 = !DILocation(line: 56, column: 1, scope: !3523)
!3576 = !DILocalVariable(name: "s1", arg: 1, scope: !3577, file: !3524, line: 27, type: !16)
!3577 = distinct !DISubprogram(name: "c_strcasecmp", scope: !3524, file: !3524, line: 27, type: !3525, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3578, retainedNodes: !4)
!3578 = distinct !DICompileUnit(language: DW_LANG_C99, file: !144, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !145, nameTableKind: None)
!3579 = !DILocalVariable(name: "s2", arg: 2, scope: !3577, file: !3524, line: 27, type: !16)
!3580 = !DILocalVariable(name: "p1", scope: !3577, file: !3524, line: 29, type: !146)
!3581 = !DILocalVariable(name: "p2", scope: !3577, file: !3524, line: 30, type: !146)
!3582 = !DILocalVariable(name: "c1", scope: !3577, file: !3524, line: 31, type: !148)
!3583 = !DILocalVariable(name: "c2", scope: !3577, file: !3524, line: 31, type: !148)
!3584 = distinct !DISubprogram(name: "close_stream", scope: !3585, file: !3585, line: 56, type: !3586, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !149, retainedNodes: !4)
!3585 = !DIFile(filename: "lib/close-stream.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3586 = !DISubroutineType(types: !3587)
!3587 = !{!19, !3588}
!3588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3589, size: 64)
!3589 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3004, line: 7, baseType: !3590)
!3590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3006, line: 49, size: 1728, elements: !3591)
!3591 = !{!3592, !3593, !3594, !3595, !3596, !3597, !3598, !3599, !3600, !3601, !3602, !3603, !3604, !3605, !3607, !3608, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3616, !3617, !3618, !3619, !3620, !3621}
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3590, file: !3006, line: 51, baseType: !19, size: 32)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3590, file: !3006, line: 54, baseType: !7, size: 64, offset: 64)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3590, file: !3006, line: 55, baseType: !7, size: 64, offset: 128)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3590, file: !3006, line: 56, baseType: !7, size: 64, offset: 192)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3590, file: !3006, line: 57, baseType: !7, size: 64, offset: 256)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3590, file: !3006, line: 58, baseType: !7, size: 64, offset: 320)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3590, file: !3006, line: 59, baseType: !7, size: 64, offset: 384)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3590, file: !3006, line: 60, baseType: !7, size: 64, offset: 448)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3590, file: !3006, line: 61, baseType: !7, size: 64, offset: 512)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3590, file: !3006, line: 64, baseType: !7, size: 64, offset: 576)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3590, file: !3006, line: 65, baseType: !7, size: 64, offset: 640)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3590, file: !3006, line: 66, baseType: !7, size: 64, offset: 704)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3590, file: !3006, line: 68, baseType: !3021, size: 64, offset: 768)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3590, file: !3006, line: 70, baseType: !3606, size: 64, offset: 832)
!3606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3590, size: 64)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3590, file: !3006, line: 72, baseType: !19, size: 32, offset: 896)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3590, file: !3006, line: 73, baseType: !19, size: 32, offset: 928)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3590, file: !3006, line: 74, baseType: !423, size: 64, offset: 960)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3590, file: !3006, line: 77, baseType: !73, size: 16, offset: 1024)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3590, file: !3006, line: 78, baseType: !3030, size: 8, offset: 1040)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3590, file: !3006, line: 79, baseType: !3032, size: 8, offset: 1048)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3590, file: !3006, line: 81, baseType: !3036, size: 64, offset: 1088)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3590, file: !3006, line: 89, baseType: !3039, size: 64, offset: 1152)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3590, file: !3006, line: 91, baseType: !3041, size: 64, offset: 1216)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3590, file: !3006, line: 92, baseType: !3044, size: 64, offset: 1280)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3590, file: !3006, line: 93, baseType: !3606, size: 64, offset: 1344)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3590, file: !3006, line: 94, baseType: !6, size: 64, offset: 1408)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3590, file: !3006, line: 95, baseType: !74, size: 64, offset: 1472)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3590, file: !3006, line: 96, baseType: !19, size: 32, offset: 1536)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3590, file: !3006, line: 98, baseType: !3051, size: 160, offset: 1568)
!3622 = !DILocalVariable(name: "stream", arg: 1, scope: !3584, file: !3585, line: 56, type: !3588)
!3623 = !DILocation(line: 56, column: 21, scope: !3584)
!3624 = !DILocalVariable(name: "some_pending", scope: !3584, file: !3585, line: 58, type: !3625)
!3625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !38)
!3626 = !DILocation(line: 58, column: 14, scope: !3584)
!3627 = !DILocation(line: 58, column: 42, scope: !3584)
!3628 = !DILocation(line: 58, column: 30, scope: !3584)
!3629 = !DILocation(line: 58, column: 50, scope: !3584)
!3630 = !DILocalVariable(name: "prev_fail", scope: !3584, file: !3585, line: 59, type: !3625)
!3631 = !DILocation(line: 59, column: 14, scope: !3584)
!3632 = !DILocation(line: 59, column: 27, scope: !3584)
!3633 = !DILocation(line: 59, column: 43, scope: !3584)
!3634 = !DILocalVariable(name: "fclose_fail", scope: !3584, file: !3585, line: 60, type: !3625)
!3635 = !DILocation(line: 60, column: 14, scope: !3584)
!3636 = !DILocation(line: 60, column: 37, scope: !3584)
!3637 = !DILocation(line: 60, column: 29, scope: !3584)
!3638 = !DILocation(line: 60, column: 45, scope: !3584)
!3639 = !DILocation(line: 70, column: 7, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3584, file: !3585, line: 70, column: 7)
!3641 = !DILocation(line: 70, column: 17, scope: !3640)
!3642 = !DILocation(line: 70, column: 21, scope: !3640)
!3643 = !DILocation(line: 70, column: 33, scope: !3640)
!3644 = !DILocation(line: 70, column: 37, scope: !3640)
!3645 = !DILocation(line: 70, column: 50, scope: !3640)
!3646 = !DILocation(line: 70, column: 53, scope: !3640)
!3647 = !DILocation(line: 70, column: 59, scope: !3640)
!3648 = !DILocation(line: 70, column: 7, scope: !3584)
!3649 = !DILocation(line: 72, column: 13, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3651, file: !3585, line: 72, column: 11)
!3651 = distinct !DILexicalBlock(scope: !3640, file: !3585, line: 71, column: 5)
!3652 = !DILocation(line: 72, column: 11, scope: !3651)
!3653 = !DILocation(line: 73, column: 9, scope: !3650)
!3654 = !DILocation(line: 73, column: 15, scope: !3650)
!3655 = !DILocation(line: 74, column: 7, scope: !3651)
!3656 = !DILocation(line: 77, column: 3, scope: !3584)
!3657 = !DILocation(line: 78, column: 1, scope: !3584)
!3658 = !DILocalVariable(name: "stream", arg: 1, scope: !3659, file: !3585, line: 56, type: !3662)
!3659 = distinct !DISubprogram(name: "close_stream", scope: !3585, file: !3585, line: 56, type: !3660, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3696, retainedNodes: !4)
!3660 = !DISubroutineType(types: !3661)
!3661 = !{!19, !3662}
!3662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3663, size: 64)
!3663 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3004, line: 7, baseType: !3664)
!3664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3006, line: 49, size: 1728, elements: !3665)
!3665 = !{!3666, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3679, !3681, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695}
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3664, file: !3006, line: 51, baseType: !19, size: 32)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3664, file: !3006, line: 54, baseType: !7, size: 64, offset: 64)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3664, file: !3006, line: 55, baseType: !7, size: 64, offset: 128)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3664, file: !3006, line: 56, baseType: !7, size: 64, offset: 192)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3664, file: !3006, line: 57, baseType: !7, size: 64, offset: 256)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3664, file: !3006, line: 58, baseType: !7, size: 64, offset: 320)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3664, file: !3006, line: 59, baseType: !7, size: 64, offset: 384)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3664, file: !3006, line: 60, baseType: !7, size: 64, offset: 448)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3664, file: !3006, line: 61, baseType: !7, size: 64, offset: 512)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3664, file: !3006, line: 64, baseType: !7, size: 64, offset: 576)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3664, file: !3006, line: 65, baseType: !7, size: 64, offset: 640)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3664, file: !3006, line: 66, baseType: !7, size: 64, offset: 704)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3664, file: !3006, line: 68, baseType: !3021, size: 64, offset: 768)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3664, file: !3006, line: 70, baseType: !3680, size: 64, offset: 832)
!3680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3664, size: 64)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3664, file: !3006, line: 72, baseType: !19, size: 32, offset: 896)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3664, file: !3006, line: 73, baseType: !19, size: 32, offset: 928)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3664, file: !3006, line: 74, baseType: !423, size: 64, offset: 960)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3664, file: !3006, line: 77, baseType: !73, size: 16, offset: 1024)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3664, file: !3006, line: 78, baseType: !3030, size: 8, offset: 1040)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3664, file: !3006, line: 79, baseType: !3032, size: 8, offset: 1048)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3664, file: !3006, line: 81, baseType: !3036, size: 64, offset: 1088)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3664, file: !3006, line: 89, baseType: !3039, size: 64, offset: 1152)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3664, file: !3006, line: 91, baseType: !3041, size: 64, offset: 1216)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3664, file: !3006, line: 92, baseType: !3044, size: 64, offset: 1280)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3664, file: !3006, line: 93, baseType: !3680, size: 64, offset: 1344)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3664, file: !3006, line: 94, baseType: !6, size: 64, offset: 1408)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3664, file: !3006, line: 95, baseType: !74, size: 64, offset: 1472)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3664, file: !3006, line: 96, baseType: !19, size: 32, offset: 1536)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3664, file: !3006, line: 98, baseType: !3051, size: 160, offset: 1568)
!3696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !150, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!3697 = !DILocalVariable(name: "some_pending", scope: !3659, file: !3585, line: 58, type: !3625)
!3698 = !DILocalVariable(name: "prev_fail", scope: !3659, file: !3585, line: 59, type: !3625)
!3699 = !DILocalVariable(name: "fclose_fail", scope: !3659, file: !3585, line: 60, type: !3625)
!3700 = distinct !DISubprogram(name: "hard_locale", scope: !3701, file: !3701, line: 27, type: !3702, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !151, retainedNodes: !4)
!3701 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3702 = !DISubroutineType(types: !3703)
!3703 = !{!38, !19}
!3704 = !DILocalVariable(name: "category", arg: 1, scope: !3700, file: !3701, line: 27, type: !19)
!3705 = !DILocation(line: 27, column: 18, scope: !3700)
!3706 = !DILocalVariable(name: "locale", scope: !3700, file: !3701, line: 29, type: !3707)
!3707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 2056, elements: !3708)
!3708 = !{!3709}
!3709 = !DISubrange(count: 257)
!3710 = !DILocation(line: 29, column: 8, scope: !3700)
!3711 = !DILocation(line: 31, column: 25, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3700, file: !3701, line: 31, column: 7)
!3713 = !DILocation(line: 31, column: 35, scope: !3712)
!3714 = !DILocation(line: 31, column: 7, scope: !3712)
!3715 = !DILocation(line: 31, column: 7, scope: !3700)
!3716 = !DILocation(line: 32, column: 5, scope: !3712)
!3717 = !DILocation(line: 34, column: 20, scope: !3700)
!3718 = !DILocation(line: 34, column: 12, scope: !3700)
!3719 = !DILocation(line: 34, column: 33, scope: !3700)
!3720 = !DILocation(line: 34, column: 38, scope: !3700)
!3721 = !DILocation(line: 34, column: 49, scope: !3700)
!3722 = !DILocation(line: 34, column: 41, scope: !3700)
!3723 = !DILocation(line: 34, column: 66, scope: !3700)
!3724 = !DILocation(line: 34, column: 10, scope: !3700)
!3725 = !DILocation(line: 34, column: 3, scope: !3700)
!3726 = !DILocation(line: 35, column: 1, scope: !3700)
!3727 = !DILocalVariable(name: "category", arg: 1, scope: !3728, file: !3701, line: 27, type: !19)
!3728 = distinct !DISubprogram(name: "hard_locale", scope: !3701, file: !3701, line: 27, type: !3702, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3729, retainedNodes: !4)
!3729 = distinct !DICompileUnit(language: DW_LANG_C99, file: !152, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!3730 = !DILocalVariable(name: "locale", scope: !3728, file: !3701, line: 29, type: !3707)
!3731 = distinct !DISubprogram(name: "locale_charset", scope: !3732, file: !3732, line: 831, type: !3733, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !153, retainedNodes: !4)
!3732 = !DIFile(filename: "lib/localcharset.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3733 = !DISubroutineType(types: !3734)
!3734 = !{!16}
!3735 = !DILocalVariable(name: "codeset", scope: !3731, file: !3732, line: 833, type: !16)
!3736 = !DILocation(line: 833, column: 15, scope: !3731)
!3737 = !DILocation(line: 847, column: 13, scope: !3731)
!3738 = !DILocation(line: 847, column: 11, scope: !3731)
!3739 = !DILocation(line: 911, column: 7, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3731, file: !3732, line: 911, column: 7)
!3741 = !DILocation(line: 911, column: 15, scope: !3740)
!3742 = !DILocation(line: 911, column: 7, scope: !3731)
!3743 = !DILocation(line: 913, column: 13, scope: !3740)
!3744 = !DILocation(line: 913, column: 5, scope: !3740)
!3745 = !DILocation(line: 1070, column: 13, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3747, file: !3732, line: 1070, column: 13)
!3747 = distinct !DILexicalBlock(scope: !3748, file: !3732, line: 1060, column: 7)
!3748 = distinct !DILexicalBlock(scope: !3731, file: !3732, line: 1019, column: 3)
!3749 = !DILocation(line: 1070, column: 24, scope: !3746)
!3750 = !DILocation(line: 1070, column: 13, scope: !3747)
!3751 = !DILocation(line: 1071, column: 19, scope: !3746)
!3752 = !DILocation(line: 1071, column: 11, scope: !3746)
!3753 = !DILocation(line: 1158, column: 10, scope: !3731)
!3754 = !DILocation(line: 1158, column: 3, scope: !3731)
!3755 = !DILocalVariable(name: "codeset", scope: !3756, file: !3732, line: 833, type: !16)
!3756 = distinct !DISubprogram(name: "locale_charset", scope: !3732, file: !3732, line: 831, type: !3733, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3757, retainedNodes: !4)
!3757 = distinct !DICompileUnit(language: DW_LANG_C99, file: !154, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !132, nameTableKind: None)
!3758 = distinct !DISubprogram(name: "setlocale_null_r", scope: !3759, file: !3759, line: 269, type: !3760, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !155, retainedNodes: !4)
!3759 = !DIFile(filename: "lib/setlocale_null.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3760 = !DISubroutineType(types: !3761)
!3761 = !{!19, !19, !7, !74}
!3762 = !DILocalVariable(name: "category", arg: 1, scope: !3758, file: !3759, line: 269, type: !19)
!3763 = !DILocation(line: 269, column: 23, scope: !3758)
!3764 = !DILocalVariable(name: "buf", arg: 2, scope: !3758, file: !3759, line: 269, type: !7)
!3765 = !DILocation(line: 269, column: 39, scope: !3758)
!3766 = !DILocalVariable(name: "bufsize", arg: 3, scope: !3758, file: !3759, line: 269, type: !74)
!3767 = !DILocation(line: 269, column: 51, scope: !3758)
!3768 = !DILocation(line: 274, column: 35, scope: !3758)
!3769 = !DILocation(line: 274, column: 45, scope: !3758)
!3770 = !DILocation(line: 274, column: 50, scope: !3758)
!3771 = !DILocation(line: 274, column: 10, scope: !3758)
!3772 = !DILocation(line: 274, column: 3, scope: !3758)
!3773 = !DILocalVariable(name: "category", arg: 1, scope: !3774, file: !3759, line: 269, type: !19)
!3774 = distinct !DISubprogram(name: "setlocale_null_r", scope: !3759, file: !3759, line: 269, type: !3760, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3775, retainedNodes: !4)
!3775 = distinct !DICompileUnit(language: DW_LANG_C99, file: !156, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !132, nameTableKind: None)
!3776 = !DILocalVariable(name: "buf", arg: 2, scope: !3774, file: !3759, line: 269, type: !7)
!3777 = !DILocalVariable(name: "bufsize", arg: 3, scope: !3774, file: !3759, line: 269, type: !74)
!3778 = distinct !DISubprogram(name: "setlocale_null_unlocked", scope: !3759, file: !3759, line: 91, type: !3760, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !155, retainedNodes: !4)
!3779 = !DILocalVariable(name: "category", arg: 1, scope: !3778, file: !3759, line: 91, type: !19)
!3780 = !DILocation(line: 91, column: 30, scope: !3778)
!3781 = !DILocalVariable(name: "buf", arg: 2, scope: !3778, file: !3759, line: 91, type: !7)
!3782 = !DILocation(line: 91, column: 46, scope: !3778)
!3783 = !DILocalVariable(name: "bufsize", arg: 3, scope: !3778, file: !3759, line: 91, type: !74)
!3784 = !DILocation(line: 91, column: 58, scope: !3778)
!3785 = !DILocalVariable(name: "result", scope: !3778, file: !3759, line: 140, type: !16)
!3786 = !DILocation(line: 140, column: 15, scope: !3778)
!3787 = !DILocation(line: 140, column: 51, scope: !3778)
!3788 = !DILocation(line: 140, column: 24, scope: !3778)
!3789 = !DILocation(line: 142, column: 7, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3778, file: !3759, line: 142, column: 7)
!3791 = !DILocation(line: 142, column: 14, scope: !3790)
!3792 = !DILocation(line: 142, column: 7, scope: !3778)
!3793 = !DILocation(line: 145, column: 11, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3795, file: !3759, line: 145, column: 11)
!3795 = distinct !DILexicalBlock(scope: !3790, file: !3759, line: 143, column: 5)
!3796 = !DILocation(line: 145, column: 19, scope: !3794)
!3797 = !DILocation(line: 145, column: 11, scope: !3795)
!3798 = !DILocation(line: 149, column: 9, scope: !3794)
!3799 = !DILocation(line: 149, column: 16, scope: !3794)
!3800 = !DILocation(line: 150, column: 7, scope: !3795)
!3801 = !DILocalVariable(name: "length", scope: !3802, file: !3759, line: 154, type: !74)
!3802 = distinct !DILexicalBlock(scope: !3790, file: !3759, line: 153, column: 5)
!3803 = !DILocation(line: 154, column: 14, scope: !3802)
!3804 = !DILocation(line: 154, column: 31, scope: !3802)
!3805 = !DILocation(line: 154, column: 23, scope: !3802)
!3806 = !DILocation(line: 155, column: 11, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3802, file: !3759, line: 155, column: 11)
!3808 = !DILocation(line: 155, column: 20, scope: !3807)
!3809 = !DILocation(line: 155, column: 18, scope: !3807)
!3810 = !DILocation(line: 155, column: 11, scope: !3802)
!3811 = !DILocation(line: 157, column: 19, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3807, file: !3759, line: 156, column: 9)
!3813 = !DILocation(line: 157, column: 24, scope: !3812)
!3814 = !DILocation(line: 157, column: 32, scope: !3812)
!3815 = !DILocation(line: 157, column: 39, scope: !3812)
!3816 = !DILocation(line: 157, column: 11, scope: !3812)
!3817 = !DILocation(line: 158, column: 11, scope: !3812)
!3818 = !DILocation(line: 162, column: 15, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3820, file: !3759, line: 162, column: 15)
!3820 = distinct !DILexicalBlock(scope: !3807, file: !3759, line: 161, column: 9)
!3821 = !DILocation(line: 162, column: 23, scope: !3819)
!3822 = !DILocation(line: 162, column: 15, scope: !3820)
!3823 = !DILocation(line: 167, column: 23, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3819, file: !3759, line: 163, column: 13)
!3825 = !DILocation(line: 167, column: 28, scope: !3824)
!3826 = !DILocation(line: 167, column: 36, scope: !3824)
!3827 = !DILocation(line: 167, column: 44, scope: !3824)
!3828 = !DILocation(line: 167, column: 15, scope: !3824)
!3829 = !DILocation(line: 168, column: 15, scope: !3824)
!3830 = !DILocation(line: 168, column: 19, scope: !3824)
!3831 = !DILocation(line: 168, column: 27, scope: !3824)
!3832 = !DILocation(line: 168, column: 32, scope: !3824)
!3833 = !DILocation(line: 169, column: 13, scope: !3824)
!3834 = !DILocation(line: 170, column: 11, scope: !3820)
!3835 = !DILocation(line: 174, column: 1, scope: !3778)
!3836 = !DILocalVariable(name: "category", arg: 1, scope: !3837, file: !3759, line: 91, type: !19)
!3837 = distinct !DISubprogram(name: "setlocale_null_unlocked", scope: !3759, file: !3759, line: 91, type: !3760, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3838, retainedNodes: !4)
!3838 = distinct !DICompileUnit(language: DW_LANG_C99, file: !156, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !132, nameTableKind: None)
!3839 = !DILocalVariable(name: "buf", arg: 2, scope: !3837, file: !3759, line: 91, type: !7)
!3840 = distinct !DISubprogram(name: "setlocale_null_androidfix", scope: !3759, file: !3759, line: 60, type: !3841, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !155, retainedNodes: !4)
!3841 = !DISubroutineType(types: !3842)
!3842 = !{!16, !19}
!3843 = !DILocalVariable(name: "category", arg: 1, scope: !3840, file: !3759, line: 60, type: !19)
!3844 = !DILocation(line: 60, column: 32, scope: !3840)
!3845 = !DILocalVariable(name: "result", scope: !3840, file: !3759, line: 62, type: !16)
!3846 = !DILocation(line: 62, column: 15, scope: !3840)
!3847 = !DILocation(line: 62, column: 35, scope: !3840)
!3848 = !DILocation(line: 62, column: 24, scope: !3840)
!3849 = !DILocation(line: 87, column: 10, scope: !3840)
!3850 = !DILocation(line: 87, column: 3, scope: !3840)
!3851 = !DILocalVariable(name: "category", arg: 1, scope: !3852, file: !3759, line: 60, type: !19)
!3852 = distinct !DISubprogram(name: "setlocale_null_androidfix", scope: !3759, file: !3759, line: 60, type: !3841, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3853, retainedNodes: !4)
!3853 = distinct !DICompileUnit(language: DW_LANG_C99, file: !156, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !132, nameTableKind: None)
!3854 = !DILocalVariable(name: "result", scope: !3852, file: !3759, line: 62, type: !16)
!3855 = distinct !DISubprogram(name: "rpl_fclose", scope: !3856, file: !3856, line: 58, type: !3857, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !157, retainedNodes: !4)
!3856 = !DIFile(filename: "lib/fclose.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3857 = !DISubroutineType(types: !3858)
!3858 = !{!19, !3859}
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 64)
!3860 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3004, line: 7, baseType: !3861)
!3861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3006, line: 49, size: 1728, elements: !3862)
!3862 = !{!3863, !3864, !3865, !3866, !3867, !3868, !3869, !3870, !3871, !3872, !3873, !3874, !3875, !3876, !3878, !3879, !3880, !3881, !3882, !3883, !3884, !3885, !3886, !3887, !3888, !3889, !3890, !3891, !3892}
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3861, file: !3006, line: 51, baseType: !19, size: 32)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3861, file: !3006, line: 54, baseType: !7, size: 64, offset: 64)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3861, file: !3006, line: 55, baseType: !7, size: 64, offset: 128)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3861, file: !3006, line: 56, baseType: !7, size: 64, offset: 192)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3861, file: !3006, line: 57, baseType: !7, size: 64, offset: 256)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3861, file: !3006, line: 58, baseType: !7, size: 64, offset: 320)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3861, file: !3006, line: 59, baseType: !7, size: 64, offset: 384)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3861, file: !3006, line: 60, baseType: !7, size: 64, offset: 448)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3861, file: !3006, line: 61, baseType: !7, size: 64, offset: 512)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3861, file: !3006, line: 64, baseType: !7, size: 64, offset: 576)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3861, file: !3006, line: 65, baseType: !7, size: 64, offset: 640)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3861, file: !3006, line: 66, baseType: !7, size: 64, offset: 704)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3861, file: !3006, line: 68, baseType: !3021, size: 64, offset: 768)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3861, file: !3006, line: 70, baseType: !3877, size: 64, offset: 832)
!3877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3861, size: 64)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3861, file: !3006, line: 72, baseType: !19, size: 32, offset: 896)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3861, file: !3006, line: 73, baseType: !19, size: 32, offset: 928)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3861, file: !3006, line: 74, baseType: !423, size: 64, offset: 960)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3861, file: !3006, line: 77, baseType: !73, size: 16, offset: 1024)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3861, file: !3006, line: 78, baseType: !3030, size: 8, offset: 1040)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3861, file: !3006, line: 79, baseType: !3032, size: 8, offset: 1048)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3861, file: !3006, line: 81, baseType: !3036, size: 64, offset: 1088)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3861, file: !3006, line: 89, baseType: !3039, size: 64, offset: 1152)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3861, file: !3006, line: 91, baseType: !3041, size: 64, offset: 1216)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3861, file: !3006, line: 92, baseType: !3044, size: 64, offset: 1280)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3861, file: !3006, line: 93, baseType: !3877, size: 64, offset: 1344)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3861, file: !3006, line: 94, baseType: !6, size: 64, offset: 1408)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3861, file: !3006, line: 95, baseType: !74, size: 64, offset: 1472)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3861, file: !3006, line: 96, baseType: !19, size: 32, offset: 1536)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3861, file: !3006, line: 98, baseType: !3051, size: 160, offset: 1568)
!3893 = !DILocalVariable(name: "fp", arg: 1, scope: !3855, file: !3856, line: 58, type: !3859)
!3894 = !DILocation(line: 58, column: 19, scope: !3855)
!3895 = !DILocalVariable(name: "saved_errno", scope: !3855, file: !3856, line: 60, type: !19)
!3896 = !DILocation(line: 60, column: 7, scope: !3855)
!3897 = !DILocalVariable(name: "fd", scope: !3855, file: !3856, line: 61, type: !19)
!3898 = !DILocation(line: 61, column: 7, scope: !3855)
!3899 = !DILocalVariable(name: "result", scope: !3855, file: !3856, line: 62, type: !19)
!3900 = !DILocation(line: 62, column: 7, scope: !3855)
!3901 = !DILocation(line: 65, column: 16, scope: !3855)
!3902 = !DILocation(line: 65, column: 8, scope: !3855)
!3903 = !DILocation(line: 65, column: 6, scope: !3855)
!3904 = !DILocation(line: 66, column: 7, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3855, file: !3856, line: 66, column: 7)
!3906 = !DILocation(line: 66, column: 10, scope: !3905)
!3907 = !DILocation(line: 66, column: 7, scope: !3855)
!3908 = !DILocation(line: 67, column: 28, scope: !3905)
!3909 = !DILocation(line: 67, column: 12, scope: !3905)
!3910 = !DILocation(line: 67, column: 5, scope: !3905)
!3911 = !DILocation(line: 72, column: 9, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3855, file: !3856, line: 72, column: 7)
!3913 = !DILocation(line: 72, column: 23, scope: !3912)
!3914 = !DILocation(line: 72, column: 41, scope: !3912)
!3915 = !DILocation(line: 72, column: 33, scope: !3912)
!3916 = !DILocation(line: 72, column: 26, scope: !3912)
!3917 = !DILocation(line: 72, column: 59, scope: !3912)
!3918 = !DILocation(line: 73, column: 7, scope: !3912)
!3919 = !DILocation(line: 73, column: 18, scope: !3912)
!3920 = !DILocation(line: 73, column: 10, scope: !3912)
!3921 = !DILocation(line: 72, column: 7, scope: !3855)
!3922 = !DILocation(line: 74, column: 19, scope: !3912)
!3923 = !DILocation(line: 74, column: 17, scope: !3912)
!3924 = !DILocation(line: 74, column: 5, scope: !3912)
!3925 = !DILocation(line: 100, column: 28, scope: !3855)
!3926 = !DILocation(line: 100, column: 12, scope: !3855)
!3927 = !DILocation(line: 100, column: 10, scope: !3855)
!3928 = !DILocation(line: 105, column: 7, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !3855, file: !3856, line: 105, column: 7)
!3930 = !DILocation(line: 105, column: 19, scope: !3929)
!3931 = !DILocation(line: 105, column: 7, scope: !3855)
!3932 = !DILocation(line: 107, column: 15, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3929, file: !3856, line: 106, column: 5)
!3934 = !DILocation(line: 107, column: 7, scope: !3933)
!3935 = !DILocation(line: 107, column: 13, scope: !3933)
!3936 = !DILocation(line: 108, column: 14, scope: !3933)
!3937 = !DILocation(line: 109, column: 5, scope: !3933)
!3938 = !DILocation(line: 111, column: 10, scope: !3855)
!3939 = !DILocation(line: 111, column: 3, scope: !3855)
!3940 = !DILocation(line: 112, column: 1, scope: !3855)
!3941 = !DILocalVariable(name: "fp", arg: 1, scope: !3942, file: !3856, line: 58, type: !3945)
!3942 = distinct !DISubprogram(name: "rpl_fclose", scope: !3856, file: !3856, line: 58, type: !3943, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3979, retainedNodes: !4)
!3943 = !DISubroutineType(types: !3944)
!3944 = !{!19, !3945}
!3945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3946, size: 64)
!3946 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3004, line: 7, baseType: !3947)
!3947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3006, line: 49, size: 1728, elements: !3948)
!3948 = !{!3949, !3950, !3951, !3952, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962, !3964, !3965, !3966, !3967, !3968, !3969, !3970, !3971, !3972, !3973, !3974, !3975, !3976, !3977, !3978}
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3947, file: !3006, line: 51, baseType: !19, size: 32)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3947, file: !3006, line: 54, baseType: !7, size: 64, offset: 64)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3947, file: !3006, line: 55, baseType: !7, size: 64, offset: 128)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3947, file: !3006, line: 56, baseType: !7, size: 64, offset: 192)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3947, file: !3006, line: 57, baseType: !7, size: 64, offset: 256)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3947, file: !3006, line: 58, baseType: !7, size: 64, offset: 320)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3947, file: !3006, line: 59, baseType: !7, size: 64, offset: 384)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3947, file: !3006, line: 60, baseType: !7, size: 64, offset: 448)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3947, file: !3006, line: 61, baseType: !7, size: 64, offset: 512)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3947, file: !3006, line: 64, baseType: !7, size: 64, offset: 576)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3947, file: !3006, line: 65, baseType: !7, size: 64, offset: 640)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3947, file: !3006, line: 66, baseType: !7, size: 64, offset: 704)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3947, file: !3006, line: 68, baseType: !3021, size: 64, offset: 768)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3947, file: !3006, line: 70, baseType: !3963, size: 64, offset: 832)
!3963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3947, size: 64)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3947, file: !3006, line: 72, baseType: !19, size: 32, offset: 896)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3947, file: !3006, line: 73, baseType: !19, size: 32, offset: 928)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3947, file: !3006, line: 74, baseType: !423, size: 64, offset: 960)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3947, file: !3006, line: 77, baseType: !73, size: 16, offset: 1024)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3947, file: !3006, line: 78, baseType: !3030, size: 8, offset: 1040)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3947, file: !3006, line: 79, baseType: !3032, size: 8, offset: 1048)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3947, file: !3006, line: 81, baseType: !3036, size: 64, offset: 1088)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3947, file: !3006, line: 89, baseType: !3039, size: 64, offset: 1152)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3947, file: !3006, line: 91, baseType: !3041, size: 64, offset: 1216)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3947, file: !3006, line: 92, baseType: !3044, size: 64, offset: 1280)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3947, file: !3006, line: 93, baseType: !3963, size: 64, offset: 1344)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3947, file: !3006, line: 94, baseType: !6, size: 64, offset: 1408)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3947, file: !3006, line: 95, baseType: !74, size: 64, offset: 1472)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3947, file: !3006, line: 96, baseType: !19, size: 32, offset: 1536)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3947, file: !3006, line: 98, baseType: !3051, size: 160, offset: 1568)
!3979 = distinct !DICompileUnit(language: DW_LANG_C99, file: !158, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!3980 = !DILocalVariable(name: "saved_errno", scope: !3942, file: !3856, line: 60, type: !19)
!3981 = !DILocalVariable(name: "fd", scope: !3942, file: !3856, line: 61, type: !19)
!3982 = !DILocalVariable(name: "result", scope: !3942, file: !3856, line: 62, type: !19)
!3983 = distinct !DISubprogram(name: "rpl_fflush", scope: !3984, file: !3984, line: 129, type: !3985, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !159, retainedNodes: !4)
!3984 = !DIFile(filename: "lib/fflush.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3985 = !DISubroutineType(types: !3986)
!3986 = !{!19, !3987}
!3987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3988, size: 64)
!3988 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3004, line: 7, baseType: !3989)
!3989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3006, line: 49, size: 1728, elements: !3990)
!3990 = !{!3991, !3992, !3993, !3994, !3995, !3996, !3997, !3998, !3999, !4000, !4001, !4002, !4003, !4004, !4006, !4007, !4008, !4009, !4010, !4011, !4012, !4013, !4014, !4015, !4016, !4017, !4018, !4019, !4020}
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3989, file: !3006, line: 51, baseType: !19, size: 32)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3989, file: !3006, line: 54, baseType: !7, size: 64, offset: 64)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3989, file: !3006, line: 55, baseType: !7, size: 64, offset: 128)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3989, file: !3006, line: 56, baseType: !7, size: 64, offset: 192)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3989, file: !3006, line: 57, baseType: !7, size: 64, offset: 256)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3989, file: !3006, line: 58, baseType: !7, size: 64, offset: 320)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3989, file: !3006, line: 59, baseType: !7, size: 64, offset: 384)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3989, file: !3006, line: 60, baseType: !7, size: 64, offset: 448)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3989, file: !3006, line: 61, baseType: !7, size: 64, offset: 512)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3989, file: !3006, line: 64, baseType: !7, size: 64, offset: 576)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3989, file: !3006, line: 65, baseType: !7, size: 64, offset: 640)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3989, file: !3006, line: 66, baseType: !7, size: 64, offset: 704)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3989, file: !3006, line: 68, baseType: !3021, size: 64, offset: 768)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3989, file: !3006, line: 70, baseType: !4005, size: 64, offset: 832)
!4005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3989, size: 64)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3989, file: !3006, line: 72, baseType: !19, size: 32, offset: 896)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3989, file: !3006, line: 73, baseType: !19, size: 32, offset: 928)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3989, file: !3006, line: 74, baseType: !423, size: 64, offset: 960)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3989, file: !3006, line: 77, baseType: !73, size: 16, offset: 1024)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3989, file: !3006, line: 78, baseType: !3030, size: 8, offset: 1040)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3989, file: !3006, line: 79, baseType: !3032, size: 8, offset: 1048)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3989, file: !3006, line: 81, baseType: !3036, size: 64, offset: 1088)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3989, file: !3006, line: 89, baseType: !3039, size: 64, offset: 1152)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3989, file: !3006, line: 91, baseType: !3041, size: 64, offset: 1216)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3989, file: !3006, line: 92, baseType: !3044, size: 64, offset: 1280)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3989, file: !3006, line: 93, baseType: !4005, size: 64, offset: 1344)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3989, file: !3006, line: 94, baseType: !6, size: 64, offset: 1408)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3989, file: !3006, line: 95, baseType: !74, size: 64, offset: 1472)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3989, file: !3006, line: 96, baseType: !19, size: 32, offset: 1536)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3989, file: !3006, line: 98, baseType: !3051, size: 160, offset: 1568)
!4021 = !DILocalVariable(name: "stream", arg: 1, scope: !3983, file: !3984, line: 129, type: !3987)
!4022 = !DILocation(line: 129, column: 19, scope: !3983)
!4023 = !DILocation(line: 150, column: 7, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !3983, file: !3984, line: 150, column: 7)
!4025 = !DILocation(line: 150, column: 14, scope: !4024)
!4026 = !DILocation(line: 150, column: 22, scope: !4024)
!4027 = !DILocation(line: 150, column: 27, scope: !4024)
!4028 = !DILocation(line: 150, column: 7, scope: !3983)
!4029 = !DILocation(line: 151, column: 20, scope: !4024)
!4030 = !DILocation(line: 151, column: 12, scope: !4024)
!4031 = !DILocation(line: 151, column: 5, scope: !4024)
!4032 = !DILocation(line: 156, column: 44, scope: !3983)
!4033 = !DILocation(line: 156, column: 3, scope: !3983)
!4034 = !DILocation(line: 158, column: 18, scope: !3983)
!4035 = !DILocation(line: 158, column: 10, scope: !3983)
!4036 = !DILocation(line: 158, column: 3, scope: !3983)
!4037 = !DILocation(line: 235, column: 1, scope: !3983)
!4038 = !DILocalVariable(name: "stream", arg: 1, scope: !4039, file: !3984, line: 129, type: !4042)
!4039 = distinct !DISubprogram(name: "rpl_fflush", scope: !3984, file: !3984, line: 129, type: !4040, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4076, retainedNodes: !4)
!4040 = !DISubroutineType(types: !4041)
!4041 = !{!19, !4042}
!4042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4043, size: 64)
!4043 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3004, line: 7, baseType: !4044)
!4044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3006, line: 49, size: 1728, elements: !4045)
!4045 = !{!4046, !4047, !4048, !4049, !4050, !4051, !4052, !4053, !4054, !4055, !4056, !4057, !4058, !4059, !4061, !4062, !4063, !4064, !4065, !4066, !4067, !4068, !4069, !4070, !4071, !4072, !4073, !4074, !4075}
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4044, file: !3006, line: 51, baseType: !19, size: 32)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4044, file: !3006, line: 54, baseType: !7, size: 64, offset: 64)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4044, file: !3006, line: 55, baseType: !7, size: 64, offset: 128)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4044, file: !3006, line: 56, baseType: !7, size: 64, offset: 192)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4044, file: !3006, line: 57, baseType: !7, size: 64, offset: 256)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4044, file: !3006, line: 58, baseType: !7, size: 64, offset: 320)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4044, file: !3006, line: 59, baseType: !7, size: 64, offset: 384)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4044, file: !3006, line: 60, baseType: !7, size: 64, offset: 448)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4044, file: !3006, line: 61, baseType: !7, size: 64, offset: 512)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4044, file: !3006, line: 64, baseType: !7, size: 64, offset: 576)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4044, file: !3006, line: 65, baseType: !7, size: 64, offset: 640)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4044, file: !3006, line: 66, baseType: !7, size: 64, offset: 704)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4044, file: !3006, line: 68, baseType: !3021, size: 64, offset: 768)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4044, file: !3006, line: 70, baseType: !4060, size: 64, offset: 832)
!4060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4044, size: 64)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4044, file: !3006, line: 72, baseType: !19, size: 32, offset: 896)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4044, file: !3006, line: 73, baseType: !19, size: 32, offset: 928)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4044, file: !3006, line: 74, baseType: !423, size: 64, offset: 960)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4044, file: !3006, line: 77, baseType: !73, size: 16, offset: 1024)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4044, file: !3006, line: 78, baseType: !3030, size: 8, offset: 1040)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4044, file: !3006, line: 79, baseType: !3032, size: 8, offset: 1048)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4044, file: !3006, line: 81, baseType: !3036, size: 64, offset: 1088)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4044, file: !3006, line: 89, baseType: !3039, size: 64, offset: 1152)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4044, file: !3006, line: 91, baseType: !3041, size: 64, offset: 1216)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4044, file: !3006, line: 92, baseType: !3044, size: 64, offset: 1280)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4044, file: !3006, line: 93, baseType: !4060, size: 64, offset: 1344)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4044, file: !3006, line: 94, baseType: !6, size: 64, offset: 1408)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4044, file: !3006, line: 95, baseType: !74, size: 64, offset: 1472)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4044, file: !3006, line: 96, baseType: !19, size: 32, offset: 1536)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4044, file: !3006, line: 98, baseType: !3051, size: 160, offset: 1568)
!4076 = distinct !DICompileUnit(language: DW_LANG_C99, file: !160, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !132, nameTableKind: None)
!4077 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !3984, file: !3984, line: 41, type: !4078, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !159, retainedNodes: !4)
!4078 = !DISubroutineType(types: !4079)
!4079 = !{null, !3987}
!4080 = !DILocalVariable(name: "fp", arg: 1, scope: !4077, file: !3984, line: 41, type: !3987)
!4081 = !DILocation(line: 41, column: 48, scope: !4077)
!4082 = !DILocation(line: 43, column: 7, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4077, file: !3984, line: 43, column: 7)
!4084 = !DILocation(line: 43, column: 11, scope: !4083)
!4085 = !DILocation(line: 43, column: 18, scope: !4083)
!4086 = !DILocation(line: 43, column: 7, scope: !4077)
!4087 = !DILocation(line: 45, column: 13, scope: !4083)
!4088 = !DILocation(line: 45, column: 5, scope: !4083)
!4089 = !DILocation(line: 46, column: 1, scope: !4077)
!4090 = !DILocalVariable(name: "fp", arg: 1, scope: !4091, file: !3984, line: 41, type: !4094)
!4091 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !3984, file: !3984, line: 41, type: !4092, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4128, retainedNodes: !4)
!4092 = !DISubroutineType(types: !4093)
!4093 = !{null, !4094}
!4094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4095, size: 64)
!4095 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3004, line: 7, baseType: !4096)
!4096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3006, line: 49, size: 1728, elements: !4097)
!4097 = !{!4098, !4099, !4100, !4101, !4102, !4103, !4104, !4105, !4106, !4107, !4108, !4109, !4110, !4111, !4113, !4114, !4115, !4116, !4117, !4118, !4119, !4120, !4121, !4122, !4123, !4124, !4125, !4126, !4127}
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4096, file: !3006, line: 51, baseType: !19, size: 32)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4096, file: !3006, line: 54, baseType: !7, size: 64, offset: 64)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4096, file: !3006, line: 55, baseType: !7, size: 64, offset: 128)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4096, file: !3006, line: 56, baseType: !7, size: 64, offset: 192)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4096, file: !3006, line: 57, baseType: !7, size: 64, offset: 256)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4096, file: !3006, line: 58, baseType: !7, size: 64, offset: 320)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4096, file: !3006, line: 59, baseType: !7, size: 64, offset: 384)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4096, file: !3006, line: 60, baseType: !7, size: 64, offset: 448)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4096, file: !3006, line: 61, baseType: !7, size: 64, offset: 512)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4096, file: !3006, line: 64, baseType: !7, size: 64, offset: 576)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4096, file: !3006, line: 65, baseType: !7, size: 64, offset: 640)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4096, file: !3006, line: 66, baseType: !7, size: 64, offset: 704)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4096, file: !3006, line: 68, baseType: !3021, size: 64, offset: 768)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4096, file: !3006, line: 70, baseType: !4112, size: 64, offset: 832)
!4112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4096, size: 64)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4096, file: !3006, line: 72, baseType: !19, size: 32, offset: 896)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4096, file: !3006, line: 73, baseType: !19, size: 32, offset: 928)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4096, file: !3006, line: 74, baseType: !423, size: 64, offset: 960)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4096, file: !3006, line: 77, baseType: !73, size: 16, offset: 1024)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4096, file: !3006, line: 78, baseType: !3030, size: 8, offset: 1040)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4096, file: !3006, line: 79, baseType: !3032, size: 8, offset: 1048)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4096, file: !3006, line: 81, baseType: !3036, size: 64, offset: 1088)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4096, file: !3006, line: 89, baseType: !3039, size: 64, offset: 1152)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4096, file: !3006, line: 91, baseType: !3041, size: 64, offset: 1216)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4096, file: !3006, line: 92, baseType: !3044, size: 64, offset: 1280)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4096, file: !3006, line: 93, baseType: !4112, size: 64, offset: 1344)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4096, file: !3006, line: 94, baseType: !6, size: 64, offset: 1408)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4096, file: !3006, line: 95, baseType: !74, size: 64, offset: 1472)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4096, file: !3006, line: 96, baseType: !19, size: 32, offset: 1536)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4096, file: !3006, line: 98, baseType: !3051, size: 160, offset: 1568)
!4128 = distinct !DICompileUnit(language: DW_LANG_C99, file: !160, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !132, nameTableKind: None)
!4129 = distinct !DISubprogram(name: "rpl_fseeko", scope: !4130, file: !4130, line: 28, type: !4131, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !161, retainedNodes: !4)
!4130 = !DIFile(filename: "lib/fseeko.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4131 = !DISubroutineType(types: !4132)
!4132 = !{!19, !4133, !4167, !19}
!4133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4134, size: 64)
!4134 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3004, line: 7, baseType: !4135)
!4135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3006, line: 49, size: 1728, elements: !4136)
!4136 = !{!4137, !4138, !4139, !4140, !4141, !4142, !4143, !4144, !4145, !4146, !4147, !4148, !4149, !4150, !4152, !4153, !4154, !4155, !4156, !4157, !4158, !4159, !4160, !4161, !4162, !4163, !4164, !4165, !4166}
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4135, file: !3006, line: 51, baseType: !19, size: 32)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4135, file: !3006, line: 54, baseType: !7, size: 64, offset: 64)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4135, file: !3006, line: 55, baseType: !7, size: 64, offset: 128)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4135, file: !3006, line: 56, baseType: !7, size: 64, offset: 192)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4135, file: !3006, line: 57, baseType: !7, size: 64, offset: 256)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4135, file: !3006, line: 58, baseType: !7, size: 64, offset: 320)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4135, file: !3006, line: 59, baseType: !7, size: 64, offset: 384)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4135, file: !3006, line: 60, baseType: !7, size: 64, offset: 448)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4135, file: !3006, line: 61, baseType: !7, size: 64, offset: 512)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4135, file: !3006, line: 64, baseType: !7, size: 64, offset: 576)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4135, file: !3006, line: 65, baseType: !7, size: 64, offset: 640)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4135, file: !3006, line: 66, baseType: !7, size: 64, offset: 704)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4135, file: !3006, line: 68, baseType: !3021, size: 64, offset: 768)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4135, file: !3006, line: 70, baseType: !4151, size: 64, offset: 832)
!4151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4135, size: 64)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4135, file: !3006, line: 72, baseType: !19, size: 32, offset: 896)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4135, file: !3006, line: 73, baseType: !19, size: 32, offset: 928)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4135, file: !3006, line: 74, baseType: !423, size: 64, offset: 960)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4135, file: !3006, line: 77, baseType: !73, size: 16, offset: 1024)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4135, file: !3006, line: 78, baseType: !3030, size: 8, offset: 1040)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4135, file: !3006, line: 79, baseType: !3032, size: 8, offset: 1048)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4135, file: !3006, line: 81, baseType: !3036, size: 64, offset: 1088)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4135, file: !3006, line: 89, baseType: !3039, size: 64, offset: 1152)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4135, file: !3006, line: 91, baseType: !3041, size: 64, offset: 1216)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4135, file: !3006, line: 92, baseType: !3044, size: 64, offset: 1280)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4135, file: !3006, line: 93, baseType: !4151, size: 64, offset: 1344)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4135, file: !3006, line: 94, baseType: !6, size: 64, offset: 1408)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4135, file: !3006, line: 95, baseType: !74, size: 64, offset: 1472)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4135, file: !3006, line: 96, baseType: !19, size: 32, offset: 1536)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4135, file: !3006, line: 98, baseType: !3051, size: 160, offset: 1568)
!4167 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !3294, line: 63, baseType: !423)
!4168 = !DILocalVariable(name: "fp", arg: 1, scope: !4129, file: !4130, line: 28, type: !4133)
!4169 = !DILocation(line: 28, column: 15, scope: !4129)
!4170 = !DILocalVariable(name: "offset", arg: 2, scope: !4129, file: !4130, line: 28, type: !4167)
!4171 = !DILocation(line: 28, column: 25, scope: !4129)
!4172 = !DILocalVariable(name: "whence", arg: 3, scope: !4129, file: !4130, line: 28, type: !19)
!4173 = !DILocation(line: 28, column: 37, scope: !4129)
!4174 = !DILocation(line: 52, column: 7, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4129, file: !4130, line: 52, column: 7)
!4176 = !DILocation(line: 52, column: 11, scope: !4175)
!4177 = !DILocation(line: 52, column: 27, scope: !4175)
!4178 = !DILocation(line: 52, column: 31, scope: !4175)
!4179 = !DILocation(line: 52, column: 24, scope: !4175)
!4180 = !DILocation(line: 53, column: 7, scope: !4175)
!4181 = !DILocation(line: 53, column: 10, scope: !4175)
!4182 = !DILocation(line: 53, column: 14, scope: !4175)
!4183 = !DILocation(line: 53, column: 31, scope: !4175)
!4184 = !DILocation(line: 53, column: 35, scope: !4175)
!4185 = !DILocation(line: 53, column: 28, scope: !4175)
!4186 = !DILocation(line: 54, column: 7, scope: !4175)
!4187 = !DILocation(line: 54, column: 10, scope: !4175)
!4188 = !DILocation(line: 54, column: 14, scope: !4175)
!4189 = !DILocation(line: 54, column: 28, scope: !4175)
!4190 = !DILocation(line: 52, column: 7, scope: !4129)
!4191 = !DILocalVariable(name: "pos", scope: !4192, file: !4130, line: 117, type: !4167)
!4192 = distinct !DILexicalBlock(scope: !4175, file: !4130, line: 113, column: 5)
!4193 = !DILocation(line: 117, column: 13, scope: !4192)
!4194 = !DILocation(line: 117, column: 34, scope: !4192)
!4195 = !DILocation(line: 117, column: 26, scope: !4192)
!4196 = !DILocation(line: 117, column: 39, scope: !4192)
!4197 = !DILocation(line: 117, column: 47, scope: !4192)
!4198 = !DILocation(line: 117, column: 19, scope: !4192)
!4199 = !DILocation(line: 118, column: 11, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4192, file: !4130, line: 118, column: 11)
!4201 = !DILocation(line: 118, column: 15, scope: !4200)
!4202 = !DILocation(line: 118, column: 11, scope: !4192)
!4203 = !DILocation(line: 124, column: 11, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4200, file: !4130, line: 119, column: 9)
!4205 = !DILocation(line: 129, column: 7, scope: !4192)
!4206 = !DILocation(line: 129, column: 11, scope: !4192)
!4207 = !DILocation(line: 129, column: 18, scope: !4192)
!4208 = !DILocation(line: 130, column: 21, scope: !4192)
!4209 = !DILocation(line: 130, column: 7, scope: !4192)
!4210 = !DILocation(line: 130, column: 11, scope: !4192)
!4211 = !DILocation(line: 130, column: 19, scope: !4192)
!4212 = !DILocation(line: 161, column: 7, scope: !4192)
!4213 = !DILocation(line: 163, column: 18, scope: !4129)
!4214 = !DILocation(line: 163, column: 22, scope: !4129)
!4215 = !DILocation(line: 163, column: 30, scope: !4129)
!4216 = !DILocation(line: 163, column: 10, scope: !4129)
!4217 = !DILocation(line: 163, column: 3, scope: !4129)
!4218 = !DILocation(line: 164, column: 1, scope: !4129)
!4219 = !DILocalVariable(name: "fp", arg: 1, scope: !4220, file: !4130, line: 28, type: !4223)
!4220 = distinct !DISubprogram(name: "rpl_fseeko", scope: !4130, file: !4130, line: 28, type: !4221, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4257, retainedNodes: !4)
!4221 = !DISubroutineType(types: !4222)
!4222 = !{!19, !4223, !4167, !19}
!4223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4224, size: 64)
!4224 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3004, line: 7, baseType: !4225)
!4225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3006, line: 49, size: 1728, elements: !4226)
!4226 = !{!4227, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4239, !4240, !4242, !4243, !4244, !4245, !4246, !4247, !4248, !4249, !4250, !4251, !4252, !4253, !4254, !4255, !4256}
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4225, file: !3006, line: 51, baseType: !19, size: 32)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4225, file: !3006, line: 54, baseType: !7, size: 64, offset: 64)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4225, file: !3006, line: 55, baseType: !7, size: 64, offset: 128)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4225, file: !3006, line: 56, baseType: !7, size: 64, offset: 192)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4225, file: !3006, line: 57, baseType: !7, size: 64, offset: 256)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4225, file: !3006, line: 58, baseType: !7, size: 64, offset: 320)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4225, file: !3006, line: 59, baseType: !7, size: 64, offset: 384)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4225, file: !3006, line: 60, baseType: !7, size: 64, offset: 448)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4225, file: !3006, line: 61, baseType: !7, size: 64, offset: 512)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4225, file: !3006, line: 64, baseType: !7, size: 64, offset: 576)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4225, file: !3006, line: 65, baseType: !7, size: 64, offset: 640)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4225, file: !3006, line: 66, baseType: !7, size: 64, offset: 704)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4225, file: !3006, line: 68, baseType: !3021, size: 64, offset: 768)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4225, file: !3006, line: 70, baseType: !4241, size: 64, offset: 832)
!4241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4225, size: 64)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4225, file: !3006, line: 72, baseType: !19, size: 32, offset: 896)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4225, file: !3006, line: 73, baseType: !19, size: 32, offset: 928)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4225, file: !3006, line: 74, baseType: !423, size: 64, offset: 960)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4225, file: !3006, line: 77, baseType: !73, size: 16, offset: 1024)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4225, file: !3006, line: 78, baseType: !3030, size: 8, offset: 1040)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4225, file: !3006, line: 79, baseType: !3032, size: 8, offset: 1048)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4225, file: !3006, line: 81, baseType: !3036, size: 64, offset: 1088)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4225, file: !3006, line: 89, baseType: !3039, size: 64, offset: 1152)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4225, file: !3006, line: 91, baseType: !3041, size: 64, offset: 1216)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4225, file: !3006, line: 92, baseType: !3044, size: 64, offset: 1280)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4225, file: !3006, line: 93, baseType: !4241, size: 64, offset: 1344)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4225, file: !3006, line: 94, baseType: !6, size: 64, offset: 1408)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4225, file: !3006, line: 95, baseType: !74, size: 64, offset: 1472)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4225, file: !3006, line: 96, baseType: !19, size: 32, offset: 1536)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4225, file: !3006, line: 98, baseType: !3051, size: 160, offset: 1568)
!4257 = distinct !DICompileUnit(language: DW_LANG_C99, file: !162, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !132, nameTableKind: None)
!4258 = !DILocalVariable(name: "offset", arg: 2, scope: !4220, file: !4130, line: 28, type: !4167)
!4259 = !DILocalVariable(name: "whence", arg: 3, scope: !4220, file: !4130, line: 28, type: !19)
!4260 = distinct !DISubprogram(name: "c_tolower", scope: !4261, file: !4261, line: 337, type: !4262, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !163, retainedNodes: !4)
!4261 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4262 = !DISubroutineType(types: !4263)
!4263 = !{!19, !19}
!4264 = !DILocalVariable(name: "c", arg: 1, scope: !4260, file: !4261, line: 337, type: !19)
!4265 = !DILocation(line: 337, column: 16, scope: !4260)
!4266 = !DILocation(line: 339, column: 11, scope: !4260)
!4267 = !DILocation(line: 339, column: 3, scope: !4260)
!4268 = !DILocation(line: 342, column: 14, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4260, file: !4261, line: 340, column: 5)
!4270 = !DILocation(line: 342, column: 16, scope: !4269)
!4271 = !DILocation(line: 342, column: 22, scope: !4269)
!4272 = !DILocation(line: 342, column: 7, scope: !4269)
!4273 = !DILocation(line: 344, column: 14, scope: !4269)
!4274 = !DILocation(line: 344, column: 7, scope: !4269)
!4275 = !DILocation(line: 346, column: 1, scope: !4260)
