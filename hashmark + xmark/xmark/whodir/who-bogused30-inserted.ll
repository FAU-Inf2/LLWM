; ModuleID = '<stdin>'
source_filename = "ld-temp.o"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.infomap = type { i8*, i8* }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.addrinfo = type { i32, i32, i32, i32, i32, %struct.sockaddr*, i8*, %struct.addrinfo* }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.utmpx = type { i16, i32, [32 x i8], [4 x i8], [32 x i8], [256 x i8], %struct.__exit_status, i32, %struct.anon, [4 x i32], [20 x i8] }
%struct.__exit_status = type { i16, i16 }
%struct.anon = type { i32, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.__mbstate_t = type { i32, %union.anon }
%union.anon = type { i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [44 x i8] c"Usage: %s [OPTION]... [ FILE | ARG1 ARG2 ]\0A\00", align 1
@.str.2 = private unnamed_addr constant [60 x i8] c"Print information about users who are currently logged in.\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [195 x i8] c"\0A  -a, --all         same as -b -d --login -p -r -t -T -u\0A  -b, --boot        time of last system boot\0A  -d, --dead        print dead processes\0A  -H, --heading     print line of column headings\0A\00", align 1
@.str.4 = private unnamed_addr constant [50 x i8] c"  -l, --login       print system login processes\0A\00", align 1
@.str.5 = private unnamed_addr constant [187 x i8] c"      --lookup      attempt to canonicalize hostnames via DNS\0A  -m                only hostname and user associated with stdin\0A  -p, --process     print active processes spawned by init\0A\00", align 1
@.str.6 = private unnamed_addr constant [223 x i8] c"  -q, --count       all login names and number of users logged on\0A  -r, --runlevel    print current runlevel\0A  -s, --short       print only name, line, and time (default)\0A  -t, --time        print last system clock change\0A\00", align 1
@.str.7 = private unnamed_addr constant [163 x i8] c"  -T, -w, --mesg    add user's message status as +, - or ?\0A  -u, --users       list users logged in\0A      --message     same as -T\0A      --writable    same as -T\0A\00", align 1
@.str.8 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.9 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.10 = private unnamed_addr constant [125 x i8] c"\0AIf FILE is not specified, use %s.  %s as FILE is common.\0AIf ARG1 ARG2 given, -m presumed: 'am i' or 'mom likes' are usual.\0A\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"/var/run/utmp\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"/var/log/wtmp\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"who\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.27, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.33 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.18 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.34 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.36 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.37 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.38 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.39 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.14 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.25 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.26 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.27 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.16 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"abdlmpqrstuwHT\00", align 1
@longopts = internal constant [18 x %struct.option] [%struct.option { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0), i32 0, i32* null, i32 97 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0), i32 0, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i32 0, i32 0), i32 0, i32* null, i32 113 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i32 0, i32 0), i32 0, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i32 0, i32 0), i32 0, i32* null, i32 72 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i32 0, i32 0), i32 0, i32* null, i32 108 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i32 0, i32 0), i32 0, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0), i32 0, i32* null, i32 112 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i32 0, i32 0), i32 0, i32* null, i32 114 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i32 0, i32 0), i32 0, i32* null, i32 115 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i32 0, i32 0), i32 0, i32* null, i32 116 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i32 0, i32 0), i32 0, i32* null, i32 117 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.56, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !0
@need_boottime = internal global i8 0, align 1, !dbg !31
@need_deadprocs = internal global i8 0, align 1, !dbg !33
@need_login = internal global i8 0, align 1, !dbg !35
@need_initspawn = internal global i8 0, align 1, !dbg !37
@need_runlevel = internal global i8 0, align 1, !dbg !41
@need_clockchange = internal global i8 0, align 1, !dbg !39
@need_users = internal global i8 0, align 1, !dbg !43
@include_mesg = internal global i8 0, align 1, !dbg !27
@include_idle = internal global i8 0, align 1, !dbg !23
@include_exit = internal global i8 0, align 1, !dbg !29
@include_heading = internal global i8 0, align 1, !dbg !25
@my_line_only = internal global i8 0, align 1, !dbg !45
@short_list = internal global i8 0, align 1, !dbg !19
@short_output = internal global i8 0, align 1, !dbg !21
@do_lookup = internal global i8 0, align 1, !dbg !16
@.str.19 = private unnamed_addr constant [17 x i8] c"Joseph Arceneaux\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str.21 = private unnamed_addr constant [14 x i8] c"Michael Stone\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"%Y-%m-%d %H:%M\00", align 1
@time_format = internal global i8* null, align 8, !dbg !47
@time_format_width = internal global i32 0, align 4, !dbg !51
@.str.23 = private unnamed_addr constant [12 x i8] c"%b %e %H:%M\00", align 1
@optind = external dso_local global i32, align 4
@.str.24 = private unnamed_addr constant [17 x i8] c"extra operand %s\00", align 1
@.str.57 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"/dev/\00", align 1
@.str.74 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@print_deadprocs.exitstr = internal global i8* null, align 8, !dbg !138
@.str.92 = private unnamed_addr constant [6 x i8] c"term=\00", align 1
@.str.93 = private unnamed_addr constant [6 x i8] c"exit=\00", align 1
@.str.94 = private unnamed_addr constant [10 x i8] c"%s%d %s%d\00", align 1
@print_line.mesg = internal global [3 x i8] c" x\00", align 1, !dbg !54
@.str.69 = private unnamed_addr constant [6 x i8] c" %-6s\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c" %10s\00", align 1
@.str.71 = private unnamed_addr constant [7 x i8] c" %-12s\00", align 1
@.str.73 = private unnamed_addr constant [5 x i8] c"   .\00", align 1
@.str.72 = private unnamed_addr constant [33 x i8] c"%-8.*s%s %-12.*s %-*s%s%s %-8s%s\00", align 1
@time_string.buf = internal global [33 x i8] zeroinitializer, align 16, !dbg !123
@.str.90 = private unnamed_addr constant [4 x i8] c"id=\00", align 1
@.str.91 = private unnamed_addr constant [6 x i8] c"LOGIN\00", align 1
@.str.89 = private unnamed_addr constant [13 x i8] c"clock change\00", align 1
@.str.88 = private unnamed_addr constant [12 x i8] c"system boot\00", align 1
@print_runlevel.runlevline = internal global i8* null, align 8, !dbg !131
@.str.84 = private unnamed_addr constant [10 x i8] c"run-level\00", align 1
@.str.85 = private unnamed_addr constant [6 x i8] c"%s %c\00", align 1
@print_runlevel.comment = internal global i8* null, align 8, !dbg !136
@.str.86 = private unnamed_addr constant [6 x i8] c"last=\00", align 1
@.str.87 = private unnamed_addr constant [5 x i8] c"%s%c\00", align 1
@.str.75 = private unnamed_addr constant [5 x i8] c"%.*s\00", align 1
@.str.76 = private unnamed_addr constant [4 x i8] c"  ?\00", align 1
@print_user.hostlen = internal global i64 0, align 8, !dbg !108
@print_user.hoststr = internal global i8* null, align 8, !dbg !62
@.str.77 = private unnamed_addr constant [8 x i8] c"(%s:%s)\00", align 1
@.str.78 = private unnamed_addr constant [5 x i8] c"(%s)\00", align 1
@idle_string.now = internal global i64 -9223372036854775808, align 8, !dbg !113
@.str.79 = private unnamed_addr constant [6 x i8] c"  .  \00", align 1
@.str.80 = private unnamed_addr constant [30 x i8] c"seconds_idle / (60 * 60) < 24\00", align 1
@.str.81 = private unnamed_addr constant [10 x i8] c"src/who.c\00", align 1
@__PRETTY_FUNCTION__.idle_string = private unnamed_addr constant [40 x i8] c"const char *idle_string(time_t, time_t)\00", align 1
@idle_string.idle_hhmm = internal global [6 x i8] zeroinitializer, align 1, !dbg !118
@.str.82 = private unnamed_addr constant [10 x i8] c"%02d:%02d\00", align 1
@.str.83 = private unnamed_addr constant [6 x i8] c" old \00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c"NAME\00", align 1
@.str.63 = private unnamed_addr constant [5 x i8] c"LINE\00", align 1
@.str.64 = private unnamed_addr constant [5 x i8] c"TIME\00", align 1
@.str.65 = private unnamed_addr constant [5 x i8] c"IDLE\00", align 1
@.str.66 = private unnamed_addr constant [4 x i8] c"PID\00", align 1
@.str.67 = private unnamed_addr constant [8 x i8] c"COMMENT\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"EXIT\00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.59 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.60 = private unnamed_addr constant [14 x i8] c"\0A# users=%lu\0A\00", align 1
@.str.40 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c"boot\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.44 = private unnamed_addr constant [8 x i8] c"heading\00", align 1
@.str.45 = private unnamed_addr constant [6 x i8] c"login\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"lookup\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"message\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"mesg\00", align 1
@.str.49 = private unnamed_addr constant [8 x i8] c"process\00", align 1
@.str.50 = private unnamed_addr constant [9 x i8] c"runlevel\00", align 1
@.str.51 = private unnamed_addr constant [6 x i8] c"short\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"users\00", align 1
@.str.54 = private unnamed_addr constant [9 x i8] c"writable\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@Version = internal global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.95, i32 0, i32 0), align 8, !dbg !153
@.str.95 = private unnamed_addr constant [5 x i8] c"8.32\00", align 1
@last_cherror = internal global i32 0, align 4, !dbg !158
@canon_host_r.hints = internal global %struct.addrinfo zeroinitializer, align 8, !dbg !163
@ignore_EPIPE = internal global i8 0, align 1, !dbg !196
@.str.102 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@file_name = internal global i8* null, align 8, !dbg !201
@.str.1.103 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.104 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = internal global i32 1, align 4, !dbg !204
@.str.109 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.110 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.115 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.116 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.117 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8
@program_name = internal global i8* null, align 8, !dbg !211
@program_invocation_name = external dso_local global i8*, align 8
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !218
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !266
@nslots = internal global i32 1, align 4, !dbg !273
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !275
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !264
@.str.10.120 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.121 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.122 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.123 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.124 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.125 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.126 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.127 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.128 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@quote_quoting_options = internal global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !252
@.str.137 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.138 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.139 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.140 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4.141 = private unnamed_addr constant [171 x i8] c"License GPLv3+: GNU GPL version 3 or later <%s>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\00", align 1
@.str.5.142 = private unnamed_addr constant [34 x i8] c"https://gnu.org/licenses/gpl.html\00", align 1
@.str.6.143 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.7.144 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.8.145 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.9.146 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.10.147 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.11.148 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.12.149 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.13.150 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.14.151 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.15.152 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@version_etc_copyright = internal constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !277
@.str.1.165 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.166 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.179 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.180 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@inVal0 = global i32 0
@inVal1 = global i8** null
@.compVal0 = private global [3 x i8] c"-m\00"
@.compVal1 = private global [4 x i8] c"-ma\00"
@.compVal2 = private global [4 x i8] c"-Hm\00"
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @usage(i32) #0 !dbg !334 {
  %2 = load i32, i32* @x
  %3 = load i32, i32* @y
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  store i32 %0, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !337, metadata !DIExpression()), !dbg !338
  %11 = load i32, i32* %10, align 4, !dbg !339
  %12 = icmp ne i32 %11, 0, !dbg !341
  %13 = load i32, i32* @x
  %14 = load i32, i32* @y
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %60, !dbg !342

21:                                               ; preds = %originalBBpart2
  br label %22, !dbg !343

22:                                               ; preds = %21
  %23 = load i32, i32* @x
  %24 = load i32, i32* @y
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %22, %originalBB1alteredBB
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !344
  %32 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #10, !dbg !344
  %33 = load i8*, i8** @program_name, align 8, !dbg !344
  %34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* %32, i8* %33), !dbg !344
  %35 = load i32, i32* @x
  %36 = load i32, i32* @y
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %43, !dbg !344

43:                                               ; preds = %originalBBpart24
  %44 = load i32, i32* @x
  %45 = load i32, i32* @y
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %43, %originalBB6alteredBB
  %52 = load i32, i32* @x
  %53 = load i32, i32* @y
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %90, !dbg !344

60:                                               ; preds = %originalBBpart2
  %61 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0)) #10, !dbg !346
  %62 = load i8*, i8** @program_name, align 8, !dbg !348
  %63 = call i32 (i8*, ...) @printf(i8* %61, i8* %62), !dbg !349
  %64 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !350
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !350
  %66 = call i32 @fputs_unlocked(i8* %64, %struct._IO_FILE* %65), !dbg !350
  %67 = call i8* @gettext(i8* getelementptr inbounds ([195 x i8], [195 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !351
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !351
  %69 = call i32 @fputs_unlocked(i8* %67, %struct._IO_FILE* %68), !dbg !351
  %70 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i64 0, i64 0)) #10, !dbg !352
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !352
  %72 = call i32 @fputs_unlocked(i8* %70, %struct._IO_FILE* %71), !dbg !352
  %73 = call i8* @gettext(i8* getelementptr inbounds ([187 x i8], [187 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !353
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !353
  %75 = call i32 @fputs_unlocked(i8* %73, %struct._IO_FILE* %74), !dbg !353
  %76 = call i8* @gettext(i8* getelementptr inbounds ([223 x i8], [223 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !354
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !354
  %78 = call i32 @fputs_unlocked(i8* %76, %struct._IO_FILE* %77), !dbg !354
  %79 = call i8* @gettext(i8* getelementptr inbounds ([163 x i8], [163 x i8]* @.str.7, i64 0, i64 0)) #10, !dbg !355
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !355
  %81 = call i32 @fputs_unlocked(i8* %79, %struct._IO_FILE* %80), !dbg !355
  %82 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8, i64 0, i64 0)) #10, !dbg !356
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !356
  %84 = call i32 @fputs_unlocked(i8* %82, %struct._IO_FILE* %83), !dbg !356
  %85 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !357
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !357
  %87 = call i32 @fputs_unlocked(i8* %85, %struct._IO_FILE* %86), !dbg !357
  %88 = call i8* @gettext(i8* getelementptr inbounds ([125 x i8], [125 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !358
  %89 = call i32 (i8*, ...) @printf(i8* %88, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0)), !dbg !359
  call void @emit_ancillary_info(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)), !dbg !360
  br label %90

90:                                               ; preds = %60, %originalBBpart28
  %91 = load i32, i32* %10, align 4, !dbg !361
  call void @exit(i32 %91) #12, !dbg !362
  unreachable, !dbg !362

originalBBalteredBB:                              ; preds = %originalBB, %1
  %92 = alloca i32, align 4
  store i32 %0, i32* %92, align 4
  call void @llvm.dbg.declare(metadata i32* %92, metadata !363, metadata !DIExpression()), !dbg !338
  %93 = load i32, i32* %92, align 4, !dbg !339
  %94 = icmp ne i32 %93, 0, !dbg !341
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %22
  %95 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !344
  %96 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #10, !dbg !344
  %97 = load i8*, i8** @program_name, align 8, !dbg !344
  %98 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %95, i8* %96, i8* %97), !dbg !344
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %43
  br label %originalBB6
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8*) #4 !dbg !465 {
  %2 = alloca i8*, align 8
  %3 = alloca [7 x %struct.infomap], align 16
  %4 = alloca i8*, align 8
  %5 = alloca %struct.infomap*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !469, metadata !DIExpression()), !dbg !470
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %3, metadata !471, metadata !DIExpression()), !dbg !480
  %7 = bitcast [7 x %struct.infomap]* %3 to i8*, !dbg !480
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %7, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !480
  call void @llvm.dbg.declare(metadata i8** %4, metadata !481, metadata !DIExpression()), !dbg !482
  %8 = load i8*, i8** %2, align 8, !dbg !483
  store i8* %8, i8** %4, align 8, !dbg !482
  call void @llvm.dbg.declare(metadata %struct.infomap** %5, metadata !484, metadata !DIExpression()), !dbg !486
  %9 = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %3, i64 0, i64 0, !dbg !487
  store %struct.infomap* %9, %struct.infomap** %5, align 8, !dbg !486
  br label %10, !dbg !488

10:                                               ; preds = %originalBBpart2, %1
  %11 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !489
  %12 = getelementptr inbounds %struct.infomap, %struct.infomap* %11, i32 0, i32 0, !dbg !490
  %13 = load i8*, i8** %12, align 8, !dbg !490
  %14 = icmp ne i8* %13, null, !dbg !489
  br i1 %14, label %15, label %23, !dbg !491

15:                                               ; preds = %10
  %16 = load i8*, i8** %2, align 8, !dbg !492
  %17 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !492
  %18 = getelementptr inbounds %struct.infomap, %struct.infomap* %17, i32 0, i32 0, !dbg !492
  %19 = load i8*, i8** %18, align 8, !dbg !492
  %20 = call i32 @strcmp(i8* %16, i8* %19) #13, !dbg !492
  %21 = icmp eq i32 %20, 0, !dbg !492
  %22 = xor i1 %21, true, !dbg !493
  br label %23

23:                                               ; preds = %15, %10
  %24 = phi i1 [ false, %10 ], [ %22, %15 ], !dbg !494
  br i1 %24, label %25, label %44, !dbg !488

25:                                               ; preds = %23
  %26 = load i32, i32* @x.1
  %27 = load i32, i32* @y.2
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %25, %originalBBalteredBB
  %34 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !495
  %35 = getelementptr inbounds %struct.infomap, %struct.infomap* %34, i32 1, !dbg !495
  store %struct.infomap* %35, %struct.infomap** %5, align 8, !dbg !495
  %36 = load i32, i32* @x.1
  %37 = load i32, i32* @y.2
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %10, !dbg !488, !llvm.loop !496

44:                                               ; preds = %23
  %45 = load i32, i32* @x.1
  %46 = load i32, i32* @y.2
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %44, %originalBB1alteredBB
  %53 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !497
  %54 = getelementptr inbounds %struct.infomap, %struct.infomap* %53, i32 0, i32 1, !dbg !499
  %55 = load i8*, i8** %54, align 8, !dbg !499
  %56 = icmp ne i8* %55, null, !dbg !497
  %57 = load i32, i32* @x.1
  %58 = load i32, i32* @y.2
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %56, label %65, label %85, !dbg !500

65:                                               ; preds = %originalBBpart24
  %66 = load i32, i32* @x.1
  %67 = load i32, i32* @y.2
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %65, %originalBB6alteredBB
  %74 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !501
  %75 = getelementptr inbounds %struct.infomap, %struct.infomap* %74, i32 0, i32 1, !dbg !502
  %76 = load i8*, i8** %75, align 8, !dbg !502
  store i8* %76, i8** %4, align 8, !dbg !503
  %77 = load i32, i32* @x.1
  %78 = load i32, i32* @y.2
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %85, !dbg !504

85:                                               ; preds = %originalBBpart28, %originalBBpart24
  %86 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0)) #10, !dbg !505
  %87 = call i32 (i8*, ...) @printf(i8* %86, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34, i64 0, i64 0)), !dbg !506
  call void @llvm.dbg.declare(metadata i8** %6, metadata !507, metadata !DIExpression()), !dbg !508
  %88 = call i8* @setlocale(i32 5, i8* null) #10, !dbg !509
  store i8* %88, i8** %6, align 8, !dbg !508
  %89 = load i8*, i8** %6, align 8, !dbg !510
  %90 = icmp ne i8* %89, null, !dbg !510
  br i1 %90, label %91, label %99, !dbg !512

91:                                               ; preds = %85
  %92 = load i8*, i8** %6, align 8, !dbg !513
  %93 = call i32 @strncmp(i8* %92, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), i64 3) #13, !dbg !513
  %94 = icmp ne i32 %93, 0, !dbg !513
  br i1 %94, label %95, label %99, !dbg !514

95:                                               ; preds = %91
  %96 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.36, i64 0, i64 0)) #10, !dbg !515
  %97 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !515
  %98 = call i32 @fputs_unlocked(i8* %96, %struct._IO_FILE* %97), !dbg !515
  br label %99, !dbg !517

99:                                               ; preds = %95, %91, %85
  %100 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37, i64 0, i64 0)) #10, !dbg !518
  %101 = load i8*, i8** %2, align 8, !dbg !519
  %102 = call i32 (i8*, ...) @printf(i8* %100, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34, i64 0, i64 0), i8* %101), !dbg !520
  %103 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.38, i64 0, i64 0)) #10, !dbg !521
  %104 = load i8*, i8** %4, align 8, !dbg !522
  %105 = load i8*, i8** %4, align 8, !dbg !523
  %106 = load i8*, i8** %2, align 8, !dbg !524
  %107 = icmp eq i8* %105, %106, !dbg !525
  %108 = zext i1 %107 to i64, !dbg !523
  %109 = select i1 %107, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !523
  %110 = call i32 (i8*, ...) @printf(i8* %103, i8* %104, i8* %109), !dbg !526
  ret void, !dbg !527

originalBBalteredBB:                              ; preds = %originalBB, %25
  %111 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !495
  %112 = getelementptr inbounds %struct.infomap, %struct.infomap* %111, i32 1, !dbg !495
  store %struct.infomap* %112, %struct.infomap** %5, align 8, !dbg !495
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %44
  %113 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !497
  %114 = getelementptr inbounds %struct.infomap, %struct.infomap* %113, i32 0, i32 1, !dbg !499
  %115 = load i8*, i8** %114, align 8, !dbg !499
  %116 = icmp ne i8* %115, null, !dbg !497
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %65
  %117 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !501
  %118 = getelementptr inbounds %struct.infomap, %struct.infomap* %117, i32 0, i32 1, !dbg !502
  %119 = load i8*, i8** %118, align 8, !dbg !502
  store i8* %119, i8** %4, align 8, !dbg !503
  br label %originalBB6
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32, i8**) #4 !dbg !528 {
  %3 = load i32, i32* @x.3
  %4 = load i32, i32* @y.4
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  store i8** %1, i8*** @inVal1
  store i32 %0, i32* @inVal0
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8**, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  store i32 0, i32* %11, align 4
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !532, metadata !DIExpression()), !dbg !533
  store i8** %1, i8*** %13, align 8
  call void @llvm.dbg.declare(metadata i8*** %13, metadata !534, metadata !DIExpression()), !dbg !535
  call void @llvm.dbg.declare(metadata i32* %14, metadata !536, metadata !DIExpression()), !dbg !537
  call void @llvm.dbg.declare(metadata i8* %15, metadata !538, metadata !DIExpression()), !dbg !539
  store i8 1, i8* %15, align 1, !dbg !539
  %16 = load i8**, i8*** %13, align 8, !dbg !540
  %17 = getelementptr inbounds i8*, i8** %16, i64 0, !dbg !540
  %18 = load i8*, i8** %17, align 8, !dbg !540
  call void @set_program_name(i8* %18), !dbg !541
  %19 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)) #10, !dbg !542
  %20 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0)) #10, !dbg !543
  %21 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0)) #10, !dbg !544
  %22 = call i32 @atexit(void ()* @close_stdout) #10, !dbg !545
  %23 = load i32, i32* @x.3
  %24 = load i32, i32* @y.4
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31, !dbg !546

31:                                               ; preds = %originalBBpart224, %originalBBpart2
  %32 = load i32, i32* %12, align 4, !dbg !547
  %33 = load i8**, i8*** %13, align 8, !dbg !548
  %34 = call i32 @getopt_long(i32 %32, i8** %33, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0), %struct.option* getelementptr inbounds ([18 x %struct.option], [18 x %struct.option]* @longopts, i64 0, i64 0), i32* null) #10, !dbg !549
  store i32 %34, i32* %14, align 4, !dbg !550
  %35 = icmp ne i32 %34, -1, !dbg !551
  br i1 %35, label %36, label %154, !dbg !546

36:                                               ; preds = %31
  %37 = load i32, i32* %14, align 4, !dbg !552
  switch i32 %37, label %136 [
    i32 97, label %38
    i32 98, label %55
    i32 100, label %56
    i32 72, label %57
    i32 108, label %74
    i32 109, label %91
    i32 112, label %92
    i32 113, label %93
    i32 114, label %94
    i32 115, label %95
    i32 116, label %112
    i32 84, label %113
    i32 119, label %113
    i32 117, label %130
    i32 128, label %131
    i32 -130, label %132
    i32 -131, label %133
  ], !dbg !554

38:                                               ; preds = %36
  %39 = load i32, i32* @x.3
  %40 = load i32, i32* @y.4
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %38, %originalBB1alteredBB
  store i8 1, i8* @need_boottime, align 1, !dbg !555
  store i8 1, i8* @need_deadprocs, align 1, !dbg !557
  store i8 1, i8* @need_login, align 1, !dbg !558
  store i8 1, i8* @need_initspawn, align 1, !dbg !559
  store i8 1, i8* @need_runlevel, align 1, !dbg !560
  store i8 1, i8* @need_clockchange, align 1, !dbg !561
  store i8 1, i8* @need_users, align 1, !dbg !562
  store i8 1, i8* @include_mesg, align 1, !dbg !563
  store i8 1, i8* @include_idle, align 1, !dbg !564
  store i8 1, i8* @include_exit, align 1, !dbg !565
  store i8 0, i8* %15, align 1, !dbg !566
  %47 = load i32, i32* @x.3
  %48 = load i32, i32* @y.4
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %137, !dbg !567

55:                                               ; preds = %36
  store i8 1, i8* @need_boottime, align 1, !dbg !568
  store i8 0, i8* %15, align 1, !dbg !569
  br label %137, !dbg !570

56:                                               ; preds = %36
  store i8 1, i8* @need_deadprocs, align 1, !dbg !571
  store i8 1, i8* @include_idle, align 1, !dbg !572
  store i8 1, i8* @include_exit, align 1, !dbg !573
  store i8 0, i8* %15, align 1, !dbg !574
  br label %137, !dbg !575

57:                                               ; preds = %36
  %58 = load i32, i32* @x.3
  %59 = load i32, i32* @y.4
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %57, %originalBB6alteredBB
  store i8 1, i8* @include_heading, align 1, !dbg !576
  %66 = load i32, i32* @x.3
  %67 = load i32, i32* @y.4
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %137, !dbg !577

74:                                               ; preds = %36
  %75 = load i32, i32* @x.3
  %76 = load i32, i32* @y.4
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %74, %originalBB10alteredBB
  store i8 1, i8* @need_login, align 1, !dbg !578
  store i8 1, i8* @include_idle, align 1, !dbg !579
  store i8 0, i8* %15, align 1, !dbg !580
  %83 = load i32, i32* @x.3
  %84 = load i32, i32* @y.4
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %137, !dbg !581

91:                                               ; preds = %36
  store i8 1, i8* @my_line_only, align 1, !dbg !582
  br label %137, !dbg !583

92:                                               ; preds = %36
  store i8 1, i8* @need_initspawn, align 1, !dbg !584
  store i8 0, i8* %15, align 1, !dbg !585
  br label %137, !dbg !586

93:                                               ; preds = %36
  store i8 1, i8* @short_list, align 1, !dbg !587
  br label %137, !dbg !588

94:                                               ; preds = %36
  store i8 1, i8* @need_runlevel, align 1, !dbg !589
  store i8 1, i8* @include_idle, align 1, !dbg !590
  store i8 0, i8* %15, align 1, !dbg !591
  br label %137, !dbg !592

95:                                               ; preds = %36
  %96 = load i32, i32* @x.3
  %97 = load i32, i32* @y.4
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %95, %originalBB14alteredBB
  store i8 1, i8* @short_output, align 1, !dbg !593
  %104 = load i32, i32* @x.3
  %105 = load i32, i32* @y.4
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %137, !dbg !594

112:                                              ; preds = %36
  store i8 1, i8* @need_clockchange, align 1, !dbg !595
  store i8 0, i8* %15, align 1, !dbg !596
  br label %137, !dbg !597

113:                                              ; preds = %36, %36
  %114 = load i32, i32* @x.3
  %115 = load i32, i32* @y.4
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %113, %originalBB18alteredBB
  store i8 1, i8* @include_mesg, align 1, !dbg !598
  %122 = load i32, i32* @x.3
  %123 = load i32, i32* @y.4
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %137, !dbg !599

130:                                              ; preds = %36
  store i8 1, i8* @need_users, align 1, !dbg !600
  store i8 1, i8* @include_idle, align 1, !dbg !601
  store i8 0, i8* %15, align 1, !dbg !602
  br label %137, !dbg !603

131:                                              ; preds = %36
  store i8 1, i8* @do_lookup, align 1, !dbg !604
  br label %137, !dbg !605

132:                                              ; preds = %36
  call void @usage(i32 0) #14, !dbg !606
  unreachable, !dbg !606

133:                                              ; preds = %36
  %134 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !607
  %135 = load i8*, i8** @Version, align 8, !dbg !607
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %134, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i8* %135, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i64 0, i64 0), i8* null), !dbg !607
  call void @exit(i32 0) #12, !dbg !607
  unreachable, !dbg !607

136:                                              ; preds = %36
  call void @usage(i32 1) #14, !dbg !608
  unreachable, !dbg !608

137:                                              ; preds = %131, %130, %originalBBpart220, %112, %originalBBpart216, %94, %93, %92, %91, %originalBBpart212, %originalBBpart28, %56, %55, %originalBBpart24
  %138 = load i32, i32* @x.3
  %139 = load i32, i32* @y.4
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %137, %originalBB22alteredBB
  %146 = load i32, i32* @x.3
  %147 = load i32, i32* @y.4
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %31, !dbg !546, !llvm.loop !609

154:                                              ; preds = %31
  %155 = load i8, i8* %15, align 1, !dbg !611
  %156 = trunc i8 %155 to i1, !dbg !611
  br i1 %156, label %157, label %174, !dbg !613

157:                                              ; preds = %154
  %158 = load i32, i32* @x.3
  %159 = load i32, i32* @y.4
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %157, %originalBB26alteredBB
  store i8 1, i8* @need_users, align 1, !dbg !614
  store i8 1, i8* @short_output, align 1, !dbg !616
  %166 = load i32, i32* @x.3
  %167 = load i32, i32* @y.4
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %174, !dbg !617

174:                                              ; preds = %originalBBpart228, %154
  %175 = load i8, i8* @include_exit, align 1, !dbg !618
  %176 = trunc i8 %175 to i1, !dbg !618
  br i1 %176, label %177, label %178, !dbg !620

177:                                              ; preds = %174
  store i8 0, i8* @short_output, align 1, !dbg !621
  br label %178, !dbg !623

178:                                              ; preds = %177, %174
  %179 = call zeroext i1 @hard_locale(i32 2), !dbg !624
  br i1 %179, label %180, label %181, !dbg !626

180:                                              ; preds = %178
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0), i8** @time_format, align 8, !dbg !627
  store i32 16, i32* @time_format_width, align 4, !dbg !629
  br label %182, !dbg !630

181:                                              ; preds = %178
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0), i8** @time_format, align 8, !dbg !631
  store i32 12, i32* @time_format_width, align 4, !dbg !633
  br label %182

182:                                              ; preds = %181, %180
  %183 = load i32, i32* %12, align 4, !dbg !634
  %184 = load i32, i32* @optind, align 4, !dbg !635
  %185 = sub nsw i32 %183, %184, !dbg !636
  switch i32 %185, label %194 [
    i32 2, label %186
    i32 -1, label %187
    i32 0, label %187
    i32 1, label %188
  ], !dbg !637

186:                                              ; preds = %182
  store i8 1, i8* @my_line_only, align 1, !dbg !638
  br label %187, !dbg !640

187:                                              ; preds = %186, %182, %182
  call void @who(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i32 1), !dbg !641
  br label %219, !dbg !642

188:                                              ; preds = %182
  %189 = load i8**, i8*** %13, align 8, !dbg !643
  %190 = load i32, i32* @optind, align 4, !dbg !644
  %191 = sext i32 %190 to i64, !dbg !643
  %192 = getelementptr inbounds i8*, i8** %189, i64 %191, !dbg !643
  %193 = load i8*, i8** %192, align 8, !dbg !643
  call void @who(i8* %193, i32 0), !dbg !645
  br label %219, !dbg !646

194:                                              ; preds = %182
  %195 = load i32, i32* @x.3
  %196 = load i32, i32* @y.4
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %194, %originalBB30alteredBB
  %203 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i64 0, i64 0)) #10, !dbg !647
  %204 = load i8**, i8*** %13, align 8, !dbg !648
  %205 = load i32, i32* @optind, align 4, !dbg !649
  %206 = add nsw i32 %205, 2, !dbg !650
  %207 = sext i32 %206 to i64, !dbg !648
  %208 = getelementptr inbounds i8*, i8** %204, i64 %207, !dbg !648
  %209 = load i8*, i8** %208, align 8, !dbg !648
  %210 = call i8* @quote(i8* %209), !dbg !651
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %203, i8* %210), !dbg !652
  call void @usage(i32 1) #14, !dbg !653
  %211 = load i32, i32* @x.3
  %212 = load i32, i32* @y.4
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBBpart241, label %originalBB30alteredBB

originalBBpart241:                                ; preds = %originalBB30
  unreachable, !dbg !653

219:                                              ; preds = %188, %187
  %220 = load i32, i32* @x.3
  %221 = load i32, i32* @y.4
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %219, %originalBB43alteredBB
  %228 = load i32, i32* @x.3
  %229 = load i32, i32* @y.4
  %230 = sub i32 %228, 1
  %231 = mul i32 %228, %230
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %233, %234
  br i1 %235, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  ret i32 0, !dbg !654

originalBBalteredBB:                              ; preds = %originalBB, %2
  store i8** %1, i8*** @inVal1
  store i32 %0, i32* @inVal0
  %236 = alloca i32, align 4
  %237 = alloca i32, align 4
  %238 = alloca i8**, align 8
  %239 = alloca i32, align 4
  %240 = alloca i8, align 1
  store i32 0, i32* %236, align 4
  store i32 %0, i32* %237, align 4
  call void @llvm.dbg.declare(metadata i32* %237, metadata !655, metadata !DIExpression()), !dbg !533
  store i8** %1, i8*** %238, align 8
  call void @llvm.dbg.declare(metadata i8*** %238, metadata !757, metadata !DIExpression()), !dbg !535
  call void @llvm.dbg.declare(metadata i32* %239, metadata !758, metadata !DIExpression()), !dbg !537
  call void @llvm.dbg.declare(metadata i8* %240, metadata !759, metadata !DIExpression()), !dbg !539
  store i8 1, i8* %240, align 1, !dbg !539
  %241 = load i8**, i8*** %238, align 8, !dbg !540
  %242 = getelementptr inbounds i8*, i8** %241, i64 0, !dbg !540
  %243 = load i8*, i8** %242, align 8, !dbg !540
  call void @set_program_name(i8* %243), !dbg !541
  %244 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)) #10, !dbg !542
  %245 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0)) #10, !dbg !543
  %246 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0)) #10, !dbg !544
  %247 = call i32 @atexit(void ()* @close_stdout) #10, !dbg !545
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %38
  store i8 1, i8* @need_boottime, align 1, !dbg !555
  store i8 1, i8* @need_deadprocs, align 1, !dbg !557
  store i8 1, i8* @need_login, align 1, !dbg !558
  store i8 1, i8* @need_initspawn, align 1, !dbg !559
  store i8 1, i8* @need_runlevel, align 1, !dbg !560
  store i8 1, i8* @need_clockchange, align 1, !dbg !561
  store i8 1, i8* @need_users, align 1, !dbg !562
  store i8 1, i8* @include_mesg, align 1, !dbg !563
  store i8 1, i8* @include_idle, align 1, !dbg !564
  store i8 1, i8* @include_exit, align 1, !dbg !565
  store i8 0, i8* %15, align 1, !dbg !566
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %57
  store i8 1, i8* @include_heading, align 1, !dbg !576
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %74
  store i8 1, i8* @need_login, align 1, !dbg !578
  store i8 1, i8* @include_idle, align 1, !dbg !579
  store i8 0, i8* %15, align 1, !dbg !580
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %95
  store i8 1, i8* @short_output, align 1, !dbg !593
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %113
  store i8 1, i8* @include_mesg, align 1, !dbg !598
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %137
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %157
  store i8 1, i8* @need_users, align 1, !dbg !614
  store i8 1, i8* @short_output, align 1, !dbg !616
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %194
  %248 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i64 0, i64 0)) #10, !dbg !647
  %249 = load i8**, i8*** %13, align 8, !dbg !648
  %250 = load i32, i32* @optind, align 4, !dbg !649
  %_ = sub i32 %250, 2
  %gen = mul i32 %_, 2
  %_31 = sub i32 0, %250
  %gen32 = add i32 %_31, 2
  %_33 = sub i32 0, %250
  %gen34 = add i32 %_33, 2
  %_35 = sub i32 %250, 2
  %gen36 = mul i32 %_35, 2
  %_37 = sub i32 %250, 2
  %gen38 = mul i32 %_37, 2
  %_39 = shl i32 %250, 2
  %251 = add nsw i32 %250, 2, !dbg !650
  %252 = sext i32 %251 to i64, !dbg !648
  %253 = getelementptr inbounds i8*, i8** %249, i64 %252, !dbg !648
  %254 = load i8*, i8** %253, align 8, !dbg !648
  %255 = call i8* @quote(i8* %254), !dbg !651
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %248, i8* %255), !dbg !652
  call void @usage(i32 1) #14, !dbg !653
  br label %originalBB30

originalBB43alteredBB:                            ; preds = %originalBB43, %219
  br label %originalBB43
}

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @who(i8*, i32) #4 !dbg !760 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca %struct.utmpx*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !763, metadata !DIExpression()), !dbg !764
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !765, metadata !DIExpression()), !dbg !766
  call void @llvm.dbg.declare(metadata i64* %5, metadata !767, metadata !DIExpression()), !dbg !768
  call void @llvm.dbg.declare(metadata %struct.utmpx** %6, metadata !769, metadata !DIExpression()), !dbg !771
  %7 = load i8*, i8** %3, align 8, !dbg !772
  %8 = load i32, i32* %4, align 4, !dbg !774
  %9 = call i32 @read_utmp(i8* %7, i64* %5, %struct.utmpx** %6, i32 %8), !dbg !775
  %10 = icmp ne i32 %9, 0, !dbg !776
  br i1 %10, label %11, label %16, !dbg !777

11:                                               ; preds = %2
  %12 = call i32* @__errno_location() #15, !dbg !778
  %13 = load i32, i32* %12, align 4, !dbg !778
  %14 = load i8*, i8** %3, align 8, !dbg !778
  %15 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %14), !dbg !778
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %13, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i64 0, i64 0), i8* %15), !dbg !778
  unreachable, !dbg !778

16:                                               ; preds = %2
  %17 = load i32, i32* @x.5
  %18 = load i32, i32* @y.6
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load i8, i8* @short_list, align 1, !dbg !779
  %26 = trunc i8 %25 to i1, !dbg !779
  %27 = load i32, i32* @x.5
  %28 = load i32, i32* @y.6
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %26, label %35, label %38, !dbg !781

35:                                               ; preds = %originalBBpart2
  %36 = load i64, i64* %5, align 8, !dbg !782
  %37 = load %struct.utmpx*, %struct.utmpx** %6, align 8, !dbg !783
  call void @list_entries_who(i64 %36, %struct.utmpx* %37), !dbg !784
  br label %41, !dbg !784

38:                                               ; preds = %originalBBpart2
  %39 = load i64, i64* %5, align 8, !dbg !785
  %40 = load %struct.utmpx*, %struct.utmpx** %6, align 8, !dbg !786
  call void @scan_entries(i64 %39, %struct.utmpx* %40), !dbg !787
  br label %41

41:                                               ; preds = %38, %35
  %42 = load i32, i32* @x.5
  %43 = load i32, i32* @y.6
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %41, %originalBB1alteredBB
  %50 = load %struct.utmpx*, %struct.utmpx** %6, align 8, !dbg !788
  %51 = bitcast %struct.utmpx* %50 to i8*, !dbg !788
  call void @free(i8* %51) #10, !dbg !789
  %52 = load i32, i32* @x.5
  %53 = load i32, i32* @y.6
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void, !dbg !790

originalBBalteredBB:                              ; preds = %originalBB, %16
  %60 = load i8, i8* @short_list, align 1, !dbg !779
  %61 = trunc i8 %60 to i1, !dbg !779
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %41
  %62 = load %struct.utmpx*, %struct.utmpx** %6, align 8, !dbg !788
  %63 = bitcast %struct.utmpx* %62 to i8*, !dbg !788
  call void @free(i8* %63) #10, !dbg !789
  br label %originalBB1
}

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_entries_who(i64, %struct.utmpx*) #4 !dbg !791 {
  %3 = alloca i64, align 8
  %4 = alloca %struct.utmpx*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !794, metadata !DIExpression()), !dbg !795
  store %struct.utmpx* %1, %struct.utmpx** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %4, metadata !796, metadata !DIExpression()), !dbg !797
  call void @llvm.dbg.declare(metadata i64* %5, metadata !798, metadata !DIExpression()), !dbg !799
  store i64 0, i64* %5, align 8, !dbg !799
  call void @llvm.dbg.declare(metadata i8** %6, metadata !800, metadata !DIExpression()), !dbg !801
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8** %6, align 8, !dbg !801
  br label %8, !dbg !802

8:                                                ; preds = %originalBBpart24, %2
  %9 = load i64, i64* %3, align 8, !dbg !803
  %10 = add i64 %9, -1, !dbg !803
  store i64 %10, i64* %3, align 8, !dbg !803
  %11 = icmp ne i64 %9, 0, !dbg !802
  br i1 %11, label %12, label %69, !dbg !802

12:                                               ; preds = %8
  %13 = load i32, i32* @x.7
  %14 = load i32, i32* @y.8
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !804
  %22 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %21, i32 0, i32 4, !dbg !804
  %23 = getelementptr inbounds [32 x i8], [32 x i8]* %22, i64 0, i64 0, !dbg !804
  %24 = load i8, i8* %23, align 4, !dbg !804
  %25 = sext i8 %24 to i32, !dbg !804
  %26 = icmp ne i32 %25, 0, !dbg !804
  %27 = load i32, i32* @x.7
  %28 = load i32, i32* @y.8
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %26, label %35, label %50, !dbg !804

35:                                               ; preds = %originalBBpart2
  %36 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !804
  %37 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %36, i32 0, i32 0, !dbg !804
  %38 = load i16, i16* %37, align 4, !dbg !804
  %39 = sext i16 %38 to i32, !dbg !804
  %40 = icmp eq i32 %39, 7, !dbg !804
  br i1 %40, label %41, label %50, !dbg !807

41:                                               ; preds = %35
  call void @llvm.dbg.declare(metadata i8** %7, metadata !808, metadata !DIExpression()), !dbg !810
  %42 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !811
  %43 = call i8* @extract_trimmed_name(%struct.utmpx* %42), !dbg !812
  store i8* %43, i8** %7, align 8, !dbg !813
  %44 = load i8*, i8** %6, align 8, !dbg !814
  %45 = load i8*, i8** %7, align 8, !dbg !815
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0), i8* %44, i8* %45), !dbg !816
  %47 = load i8*, i8** %7, align 8, !dbg !817
  call void @free(i8* %47) #10, !dbg !818
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.59, i64 0, i64 0), i8** %6, align 8, !dbg !819
  %48 = load i64, i64* %5, align 8, !dbg !820
  %49 = add i64 %48, 1, !dbg !820
  store i64 %49, i64* %5, align 8, !dbg !820
  br label %50, !dbg !821

50:                                               ; preds = %41, %35, %originalBBpart2
  %51 = load i32, i32* @x.7
  %52 = load i32, i32* @y.8
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %50, %originalBB1alteredBB
  %59 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !822
  %60 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %59, i32 1, !dbg !822
  store %struct.utmpx* %60, %struct.utmpx** %4, align 8, !dbg !822
  %61 = load i32, i32* @x.7
  %62 = load i32, i32* @y.8
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %8, !dbg !802, !llvm.loop !823

69:                                               ; preds = %8
  %70 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.60, i64 0, i64 0)) #10, !dbg !825
  %71 = load i64, i64* %5, align 8, !dbg !826
  %72 = call i32 (i8*, ...) @printf(i8* %70, i64 %71), !dbg !827
  ret void, !dbg !828

originalBBalteredBB:                              ; preds = %originalBB, %12
  %73 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !804
  %74 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %73, i32 0, i32 4, !dbg !804
  %75 = getelementptr inbounds [32 x i8], [32 x i8]* %74, i64 0, i64 0, !dbg !804
  %76 = load i8, i8* %75, align 4, !dbg !804
  %77 = sext i8 %76 to i32, !dbg !804
  %78 = icmp ne i32 %77, 0, !dbg !804
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %50
  %79 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !822
  %80 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %79, i32 1, !dbg !822
  store %struct.utmpx* %80, %struct.utmpx** %4, align 8, !dbg !822
  br label %originalBB1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @scan_entries(i64, %struct.utmpx*) #4 !dbg !829 {
  %3 = alloca i64, align 8
  %4 = alloca %struct.utmpx*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !830, metadata !DIExpression()), !dbg !831
  store %struct.utmpx* %1, %struct.utmpx** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %4, metadata !832, metadata !DIExpression()), !dbg !833
  call void @llvm.dbg.declare(metadata i8** %5, metadata !834, metadata !DIExpression()), !dbg !835
  call void @llvm.dbg.declare(metadata i64* %6, metadata !836, metadata !DIExpression()), !dbg !837
  store i64 -9223372036854775808, i64* %6, align 8, !dbg !837
  %7 = load i8, i8* @include_heading, align 1, !dbg !838
  %8 = trunc i8 %7 to i1, !dbg !838
  br i1 %8, label %9, label %10, !dbg !840

9:                                                ; preds = %2
  call void @print_heading(), !dbg !841
  br label %10, !dbg !841

10:                                               ; preds = %9, %2
  %11 = load i8, i8* @my_line_only, align 1, !dbg !842
  %12 = trunc i8 %11 to i1, !dbg !842
  br i1 %12, label %13, label %152, !dbg !844

13:                                               ; preds = %10
  %14 = call i8* @ttyname(i32 0) #10, !dbg !845
  store i8* %14, i8** %5, align 8, !dbg !847
  %15 = load i8*, i8** %5, align 8, !dbg !848
  %16 = icmp ne i8* %15, null, !dbg !848
  br i1 %16, label %18, label %17, !dbg !850

17:                                               ; preds = %13
  br label %450, !dbg !851

18:                                               ; preds = %13
  %19 = load i8*, i8** %5, align 8, !dbg !852
  %20 = call i32 @strncmp(i8* %19, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0), i64 5) #13, !dbg !852
  br label %21, !dbg !854

21:                                               ; preds = %18
  %22 = load i32, i32* @x.9
  %23 = load i32, i32* @y.10
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %collatzVar = alloca i32
  %30 = load i32, i32* @x.9
  %31 = load i32, i32* @y.10
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %38

38:                                               ; preds = %originalBBpart2
  %39 = load i32, i32* @inVal0
  %40 = icmp sgt i32 %39, 1
  br i1 %40, label %42, label %41

41:                                               ; preds = %38
  store i32 45, i32* %collatzVar
  br label %42

42:                                               ; preds = %41, %38
  %43 = load i32, i32* @x.9
  %44 = load i32, i32* @y.10
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %42, %originalBB1alteredBB
  %51 = load i8**, i8*** @inVal1
  %52 = getelementptr inbounds i8*, i8** %51, i64 1
  %53 = load i8*, i8** %52
  %controle = call i32 @controle(i8* %53, i32 0)
  store i32 %controle, i32* %collatzVar
  %54 = load i32, i32* @x.9
  %55 = load i32, i32* @y.10
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %62

62:                                               ; preds = %112, %originalBBpart229, %originalBBpart24
  %63 = load i32, i32* %collatzVar
  %64 = icmp sgt i32 %63, 1
  br i1 %64, label %65, label %135

65:                                               ; preds = %62
  %66 = load i32, i32* @x.9
  %67 = load i32, i32* @y.10
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %65, %originalBB6alteredBB
  %74 = load i32, i32* %collatzVar
  %75 = srem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = load i32, i32* @x.9
  %78 = load i32, i32* @y.10
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart217, label %originalBB6alteredBB

originalBBpart217:                                ; preds = %originalBB6
  br i1 %76, label %85, label %88

85:                                               ; preds = %originalBBpart217
  %86 = load i32, i32* %collatzVar
  %87 = sdiv i32 %86, 2
  store i32 %87, i32* %collatzVar
  br label %92

88:                                               ; preds = %originalBBpart217
  %89 = load i32, i32* %collatzVar
  %90 = mul i32 %89, 3
  %91 = add i32 %90, 1
  store i32 %91, i32* %collatzVar
  br label %92

92:                                               ; preds = %88, %85
  %93 = load i32, i32* @x.9
  %94 = load i32, i32* @y.10
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %92, %originalBB19alteredBB
  %101 = load i32, i32* %collatzVar
  %102 = sub i32 %20, %101
  %103 = icmp sgt i32 %102, -2
  %104 = load i32, i32* @x.9
  %105 = load i32, i32* @y.10
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBBpart229, label %originalBB19alteredBB

originalBBpart229:                                ; preds = %originalBB19
  br i1 %103, label %112, label %62

112:                                              ; preds = %originalBBpart229
  %113 = load i32, i32* %collatzVar
  %114 = add i32 %20, %113
  %115 = icmp slt i32 %114, 2
  br i1 %115, label %116, label %62

116:                                              ; preds = %112
  %117 = load i32, i32* @x.9
  %118 = load i32, i32* @y.10
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %116, %originalBB31alteredBB
  %125 = load i8*, i8** %5, align 8, !dbg !855
  %126 = getelementptr inbounds i8, i8* %125, i64 5, !dbg !855
  store i8* %126, i8** %5, align 8, !dbg !855
  %127 = load i32, i32* @x.9
  %128 = load i32, i32* @y.10
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br label %135, !dbg !856

135:                                              ; preds = %originalBBpart233, %62
  %136 = load i32, i32* @x.9
  %137 = load i32, i32* @y.10
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %135, %originalBB35alteredBB
  %144 = load i32, i32* @x.9
  %145 = load i32, i32* @y.10
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  br label %152, !dbg !857

152:                                              ; preds = %originalBBpart237, %10
  %153 = load i32, i32* @x.9
  %154 = load i32, i32* @y.10
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %152, %originalBB39alteredBB
  %161 = load i32, i32* @x.9
  %162 = load i32, i32* @y.10
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  br label %169, !dbg !858

169:                                              ; preds = %originalBBpart281, %originalBBpart241
  %170 = load i64, i64* %3, align 8, !dbg !859
  %171 = add i64 %170, -1, !dbg !859
  store i64 %171, i64* %3, align 8, !dbg !859
  %172 = icmp ne i64 %170, 0, !dbg !858
  br i1 %172, label %173, label %450, !dbg !858

173:                                              ; preds = %169
  %174 = load i8, i8* @my_line_only, align 1, !dbg !860
  %175 = trunc i8 %174 to i1, !dbg !860
  br i1 %175, label %176, label %183, !dbg !863

176:                                              ; preds = %173
  %177 = load i8*, i8** %5, align 8, !dbg !864
  %178 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !864
  %179 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %178, i32 0, i32 2, !dbg !864
  %180 = getelementptr inbounds [32 x i8], [32 x i8]* %179, i64 0, i64 0, !dbg !864
  %181 = call i32 @strncmp(i8* %177, i8* %180, i64 32) #13, !dbg !864
  %182 = icmp eq i32 %181, 0, !dbg !864
  br i1 %182, label %183, label %419, !dbg !865

183:                                              ; preds = %176, %173
  %184 = load i8, i8* @need_users, align 1, !dbg !866
  %185 = trunc i8 %184 to i1, !dbg !866
  br i1 %185, label %186, label %218, !dbg !869

186:                                              ; preds = %183
  %187 = load i32, i32* @x.9
  %188 = load i32, i32* @y.10
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %186, %originalBB43alteredBB
  %195 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !870
  %196 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %195, i32 0, i32 4, !dbg !870
  %197 = getelementptr inbounds [32 x i8], [32 x i8]* %196, i64 0, i64 0, !dbg !870
  %198 = load i8, i8* %197, align 4, !dbg !870
  %199 = sext i8 %198 to i32, !dbg !870
  %200 = icmp ne i32 %199, 0, !dbg !870
  %201 = load i32, i32* @x.9
  %202 = load i32, i32* @y.10
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  br i1 %200, label %209, label %218, !dbg !870

209:                                              ; preds = %originalBBpart245
  %210 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !870
  %211 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %210, i32 0, i32 0, !dbg !870
  %212 = load i16, i16* %211, align 4, !dbg !870
  %213 = sext i16 %212 to i32, !dbg !870
  %214 = icmp eq i32 %213, 7, !dbg !870
  br i1 %214, label %215, label %218, !dbg !871

215:                                              ; preds = %209
  %216 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !872
  %217 = load i64, i64* %6, align 8, !dbg !873
  call void @print_user(%struct.utmpx* %216, i64 %217), !dbg !874
  br label %418, !dbg !874

218:                                              ; preds = %209, %originalBBpart245, %183
  %219 = load i8, i8* @need_runlevel, align 1, !dbg !875
  %220 = trunc i8 %219 to i1, !dbg !875
  br i1 %220, label %221, label %229, !dbg !877

221:                                              ; preds = %218
  %222 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !878
  %223 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %222, i32 0, i32 0, !dbg !878
  %224 = load i16, i16* %223, align 4, !dbg !878
  %225 = sext i16 %224 to i32, !dbg !878
  %226 = icmp eq i32 %225, 1, !dbg !878
  br i1 %226, label %227, label %229, !dbg !879

227:                                              ; preds = %221
  %228 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !880
  call void @print_runlevel(%struct.utmpx* %228), !dbg !881
  br label %401, !dbg !881

229:                                              ; preds = %221, %218
  %230 = load i32, i32* @x.9
  %231 = load i32, i32* @y.10
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %229, %originalBB47alteredBB
  %238 = load i8, i8* @need_boottime, align 1, !dbg !882
  %239 = trunc i8 %238 to i1, !dbg !882
  %240 = load i32, i32* @x.9
  %241 = load i32, i32* @y.10
  %242 = sub i32 %240, 1
  %243 = mul i32 %240, %242
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %245, %246
  br i1 %247, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br i1 %239, label %248, label %272, !dbg !884

248:                                              ; preds = %originalBBpart249
  %249 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !885
  %250 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %249, i32 0, i32 0, !dbg !885
  %251 = load i16, i16* %250, align 4, !dbg !885
  %252 = sext i16 %251 to i32, !dbg !885
  %253 = icmp eq i32 %252, 2, !dbg !885
  br i1 %253, label %254, label %272, !dbg !886

254:                                              ; preds = %248
  %255 = load i32, i32* @x.9
  %256 = load i32, i32* @y.10
  %257 = sub i32 %255, 1
  %258 = mul i32 %255, %257
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %260, %261
  br i1 %262, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %254, %originalBB51alteredBB
  %263 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !887
  call void @print_boottime(%struct.utmpx* %263), !dbg !888
  %264 = load i32, i32* @x.9
  %265 = load i32, i32* @y.10
  %266 = sub i32 %264, 1
  %267 = mul i32 %264, %266
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %269, %270
  br i1 %271, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  br label %400, !dbg !888

272:                                              ; preds = %248, %originalBBpart249
  %273 = load i8, i8* @need_clockchange, align 1, !dbg !889
  %274 = trunc i8 %273 to i1, !dbg !889
  br i1 %274, label %275, label %299, !dbg !891

275:                                              ; preds = %272
  %276 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !892
  %277 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %276, i32 0, i32 0, !dbg !892
  %278 = load i16, i16* %277, align 4, !dbg !892
  %279 = sext i16 %278 to i32, !dbg !892
  %280 = icmp eq i32 %279, 3, !dbg !892
  br i1 %280, label %281, label %299, !dbg !893

281:                                              ; preds = %275
  %282 = load i32, i32* @x.9
  %283 = load i32, i32* @y.10
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %281, %originalBB55alteredBB
  %290 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !894
  call void @print_clockchange(%struct.utmpx* %290), !dbg !895
  %291 = load i32, i32* @x.9
  %292 = load i32, i32* @y.10
  %293 = sub i32 %291, 1
  %294 = mul i32 %291, %293
  %295 = urem i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %296, %297
  br i1 %298, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  br label %399, !dbg !895

299:                                              ; preds = %275, %272
  %300 = load i32, i32* @x.9
  %301 = load i32, i32* @y.10
  %302 = sub i32 %300, 1
  %303 = mul i32 %300, %302
  %304 = urem i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %305, %306
  br i1 %307, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %299, %originalBB59alteredBB
  %308 = load i8, i8* @need_initspawn, align 1, !dbg !896
  %309 = trunc i8 %308 to i1, !dbg !896
  %310 = load i32, i32* @x.9
  %311 = load i32, i32* @y.10
  %312 = sub i32 %310, 1
  %313 = mul i32 %310, %312
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %315, %316
  br i1 %317, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  br i1 %309, label %318, label %326, !dbg !898

318:                                              ; preds = %originalBBpart261
  %319 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !899
  %320 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %319, i32 0, i32 0, !dbg !899
  %321 = load i16, i16* %320, align 4, !dbg !899
  %322 = sext i16 %321 to i32, !dbg !899
  %323 = icmp eq i32 %322, 5, !dbg !899
  br i1 %323, label %324, label %326, !dbg !900

324:                                              ; preds = %318
  %325 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !901
  call void @print_initspawn(%struct.utmpx* %325), !dbg !902
  br label %398, !dbg !902

326:                                              ; preds = %318, %originalBBpart261
  %327 = load i8, i8* @need_login, align 1, !dbg !903
  %328 = trunc i8 %327 to i1, !dbg !903
  br i1 %328, label %329, label %353, !dbg !905

329:                                              ; preds = %326
  %330 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !906
  %331 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %330, i32 0, i32 0, !dbg !906
  %332 = load i16, i16* %331, align 4, !dbg !906
  %333 = sext i16 %332 to i32, !dbg !906
  %334 = icmp eq i32 %333, 6, !dbg !906
  br i1 %334, label %335, label %353, !dbg !907

335:                                              ; preds = %329
  %336 = load i32, i32* @x.9
  %337 = load i32, i32* @y.10
  %338 = sub i32 %336, 1
  %339 = mul i32 %336, %338
  %340 = urem i32 %339, 2
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %337, 10
  %343 = or i1 %341, %342
  br i1 %343, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %335, %originalBB63alteredBB
  %344 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !908
  call void @print_login(%struct.utmpx* %344), !dbg !909
  %345 = load i32, i32* @x.9
  %346 = load i32, i32* @y.10
  %347 = sub i32 %345, 1
  %348 = mul i32 %345, %347
  %349 = urem i32 %348, 2
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %346, 10
  %352 = or i1 %350, %351
  br i1 %352, label %originalBBpart265, label %originalBB63alteredBB

originalBBpart265:                                ; preds = %originalBB63
  br label %381, !dbg !909

353:                                              ; preds = %329, %326
  %354 = load i8, i8* @need_deadprocs, align 1, !dbg !910
  %355 = trunc i8 %354 to i1, !dbg !910
  br i1 %355, label %356, label %364, !dbg !912

356:                                              ; preds = %353
  %357 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !913
  %358 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %357, i32 0, i32 0, !dbg !913
  %359 = load i16, i16* %358, align 4, !dbg !913
  %360 = sext i16 %359 to i32, !dbg !913
  %361 = icmp eq i32 %360, 8, !dbg !913
  br i1 %361, label %362, label %364, !dbg !914

362:                                              ; preds = %356
  %363 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !915
  call void @print_deadprocs(%struct.utmpx* %363), !dbg !916
  br label %364, !dbg !916

364:                                              ; preds = %362, %356, %353
  %365 = load i32, i32* @x.9
  %366 = load i32, i32* @y.10
  %367 = sub i32 %365, 1
  %368 = mul i32 %365, %367
  %369 = urem i32 %368, 2
  %370 = icmp eq i32 %369, 0
  %371 = icmp slt i32 %366, 10
  %372 = or i1 %370, %371
  br i1 %372, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %364, %originalBB67alteredBB
  %373 = load i32, i32* @x.9
  %374 = load i32, i32* @y.10
  %375 = sub i32 %373, 1
  %376 = mul i32 %373, %375
  %377 = urem i32 %376, 2
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %374, 10
  %380 = or i1 %378, %379
  br i1 %380, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  br label %381

381:                                              ; preds = %originalBBpart269, %originalBBpart265
  %382 = load i32, i32* @x.9
  %383 = load i32, i32* @y.10
  %384 = sub i32 %382, 1
  %385 = mul i32 %382, %384
  %386 = urem i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %383, 10
  %389 = or i1 %387, %388
  br i1 %389, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %381, %originalBB71alteredBB
  %390 = load i32, i32* @x.9
  %391 = load i32, i32* @y.10
  %392 = sub i32 %390, 1
  %393 = mul i32 %390, %392
  %394 = urem i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %391, 10
  %397 = or i1 %395, %396
  br i1 %397, label %originalBBpart273, label %originalBB71alteredBB

originalBBpart273:                                ; preds = %originalBB71
  br label %398

398:                                              ; preds = %originalBBpart273, %324
  br label %399

399:                                              ; preds = %398, %originalBBpart257
  br label %400

400:                                              ; preds = %399, %originalBBpart253
  br label %401

401:                                              ; preds = %400, %227
  %402 = load i32, i32* @x.9
  %403 = load i32, i32* @y.10
  %404 = sub i32 %402, 1
  %405 = mul i32 %402, %404
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %407, %408
  br i1 %409, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %401, %originalBB75alteredBB
  %410 = load i32, i32* @x.9
  %411 = load i32, i32* @y.10
  %412 = sub i32 %410, 1
  %413 = mul i32 %410, %412
  %414 = urem i32 %413, 2
  %415 = icmp eq i32 %414, 0
  %416 = icmp slt i32 %411, 10
  %417 = or i1 %415, %416
  br i1 %417, label %originalBBpart277, label %originalBB75alteredBB

originalBBpart277:                                ; preds = %originalBB75
  br label %418

418:                                              ; preds = %originalBBpart277, %215
  br label %419, !dbg !917

419:                                              ; preds = %418, %176
  %420 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !918
  %421 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %420, i32 0, i32 0, !dbg !918
  %422 = load i16, i16* %421, align 4, !dbg !918
  %423 = sext i16 %422 to i32, !dbg !918
  %424 = icmp eq i32 %423, 2, !dbg !918
  br i1 %424, label %425, label %431, !dbg !920

425:                                              ; preds = %419
  %426 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !921
  %427 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %426, i32 0, i32 8, !dbg !921
  %428 = getelementptr inbounds %struct.anon, %struct.anon* %427, i32 0, i32 0, !dbg !921
  %429 = load i32, i32* %428, align 4, !dbg !921
  %430 = sext i32 %429 to i64, !dbg !921
  store i64 %430, i64* %6, align 8, !dbg !922
  br label %431, !dbg !923

431:                                              ; preds = %425, %419
  %432 = load i32, i32* @x.9
  %433 = load i32, i32* @y.10
  %434 = sub i32 %432, 1
  %435 = mul i32 %432, %434
  %436 = urem i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = icmp slt i32 %433, 10
  %439 = or i1 %437, %438
  br i1 %439, label %originalBB79, label %originalBB79alteredBB

originalBB79:                                     ; preds = %431, %originalBB79alteredBB
  %440 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !924
  %441 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %440, i32 1, !dbg !924
  store %struct.utmpx* %441, %struct.utmpx** %4, align 8, !dbg !924
  %442 = load i32, i32* @x.9
  %443 = load i32, i32* @y.10
  %444 = sub i32 %442, 1
  %445 = mul i32 %442, %444
  %446 = urem i32 %445, 2
  %447 = icmp eq i32 %446, 0
  %448 = icmp slt i32 %443, 10
  %449 = or i1 %447, %448
  br i1 %449, label %originalBBpart281, label %originalBB79alteredBB

originalBBpart281:                                ; preds = %originalBB79
  br label %169, !dbg !858, !llvm.loop !925

450:                                              ; preds = %169, %17
  %451 = load i32, i32* @x.9
  %452 = load i32, i32* @y.10
  %453 = sub i32 %451, 1
  %454 = mul i32 %451, %453
  %455 = urem i32 %454, 2
  %456 = icmp eq i32 %455, 0
  %457 = icmp slt i32 %452, 10
  %458 = or i1 %456, %457
  br i1 %458, label %originalBB83, label %originalBB83alteredBB

originalBB83:                                     ; preds = %450, %originalBB83alteredBB
  %459 = load i32, i32* @x.9
  %460 = load i32, i32* @y.10
  %461 = sub i32 %459, 1
  %462 = mul i32 %459, %461
  %463 = urem i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %460, 10
  %466 = or i1 %464, %465
  br i1 %466, label %originalBBpart285, label %originalBB83alteredBB

originalBBpart285:                                ; preds = %originalBB83
  ret void, !dbg !927

originalBBalteredBB:                              ; preds = %originalBB, %21
  %collatzVaralteredBB = alloca i32
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  %467 = load i8**, i8*** @inVal1
  %468 = getelementptr inbounds i8*, i8** %467, i64 1
  %469 = load i8*, i8** %468
  %controlealteredBB = call i32 @controle(i8* %469, i32 0)
  store i32 %controlealteredBB, i32* %collatzVar
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %65
  %470 = load i32, i32* %collatzVar
  %_ = shl i32 %470, 2
  %_7 = sub i32 %470, 2
  %gen = mul i32 %_7, 2
  %_8 = sub i32 0, %470
  %gen9 = add i32 %_8, 2
  %_10 = sub i32 0, %470
  %gen11 = add i32 %_10, 2
  %_12 = sub i32 %470, 2
  %gen13 = mul i32 %_12, 2
  %_14 = sub i32 %470, 2
  %gen15 = mul i32 %_14, 2
  %471 = srem i32 %470, 2
  %472 = icmp eq i32 %471, 0
  br label %originalBB6

originalBB19alteredBB:                            ; preds = %originalBB19, %92
  %473 = load i32, i32* %collatzVar
  %_20 = sub i32 0, %20
  %gen21 = add i32 %_20, %473
  %_22 = sub i32 %20, %473
  %gen23 = mul i32 %_22, %473
  %_24 = sub i32 %20, %473
  %gen25 = mul i32 %_24, %473
  %_26 = shl i32 %20, %473
  %_27 = shl i32 %20, %473
  %474 = sub i32 %20, %473
  %475 = icmp sgt i32 %474, -2
  br label %originalBB19

originalBB31alteredBB:                            ; preds = %originalBB31, %116
  %476 = load i8*, i8** %5, align 8, !dbg !855
  %477 = getelementptr inbounds i8, i8* %476, i64 5, !dbg !855
  store i8* %477, i8** %5, align 8, !dbg !855
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %135
  br label %originalBB35

originalBB39alteredBB:                            ; preds = %originalBB39, %152
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %186
  %478 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !870
  %479 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %478, i32 0, i32 4, !dbg !870
  %480 = getelementptr inbounds [32 x i8], [32 x i8]* %479, i64 0, i64 0, !dbg !870
  %481 = load i8, i8* %480, align 4, !dbg !870
  %482 = sext i8 %481 to i32, !dbg !870
  %483 = icmp ne i32 %482, 0, !dbg !870
  br label %originalBB43

originalBB47alteredBB:                            ; preds = %originalBB47, %229
  %484 = load i8, i8* @need_boottime, align 1, !dbg !882
  %485 = trunc i8 %484 to i1, !dbg !882
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %254
  %486 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !887
  call void @print_boottime(%struct.utmpx* %486), !dbg !888
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %281
  %487 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !894
  call void @print_clockchange(%struct.utmpx* %487), !dbg !895
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %299
  %488 = load i8, i8* @need_initspawn, align 1, !dbg !896
  %489 = trunc i8 %488 to i1, !dbg !896
  br label %originalBB59

originalBB63alteredBB:                            ; preds = %originalBB63, %335
  %490 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !908
  call void @print_login(%struct.utmpx* %490), !dbg !909
  br label %originalBB63

originalBB67alteredBB:                            ; preds = %originalBB67, %364
  br label %originalBB67

originalBB71alteredBB:                            ; preds = %originalBB71, %381
  br label %originalBB71

originalBB75alteredBB:                            ; preds = %originalBB75, %401
  br label %originalBB75

originalBB79alteredBB:                            ; preds = %originalBB79, %431
  %491 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !924
  %492 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %491, i32 1, !dbg !924
  store %struct.utmpx* %492, %struct.utmpx** %4, align 8, !dbg !924
  br label %originalBB79

originalBB83alteredBB:                            ; preds = %originalBB83, %450
  br label %originalBB83
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_heading() #4 !dbg !928 {
  %1 = load i32, i32* @x.11
  %2 = load i32, i32* @y.12
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0)) #10, !dbg !931
  %10 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i64 0, i64 0)) #10, !dbg !932
  %11 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i64 0, i64 0)) #10, !dbg !933
  %12 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i64 0, i64 0)) #10, !dbg !934
  %13 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i64 0, i64 0)) #10, !dbg !935
  %14 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i64 0, i64 0)) #10, !dbg !936
  %15 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0)) #10, !dbg !937
  call void @print_line(i32 -1, i8* %9, i8 signext 32, i32 -1, i8* %10, i8* %11, i8* %12, i8* %13, i8* %14, i8* %15), !dbg !938
  %16 = load i32, i32* @x.11
  %17 = load i32, i32* @y.12
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !939

originalBBalteredBB:                              ; preds = %originalBB, %0
  %24 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0)) #10, !dbg !931
  %25 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i64 0, i64 0)) #10, !dbg !932
  %26 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i64 0, i64 0)) #10, !dbg !933
  %27 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i64 0, i64 0)) #10, !dbg !934
  %28 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i64 0, i64 0)) #10, !dbg !935
  %29 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i64 0, i64 0)) #10, !dbg !936
  %30 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0)) #10, !dbg !937
  call void @print_line(i32 -1, i8* %24, i8 signext 32, i32 -1, i8* %25, i8* %26, i8* %27, i8* %28, i8* %29, i8* %30), !dbg !938
  br label %originalBB
}

; Function Attrs: nounwind
declare dso_local i8* @ttyname(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_user(%struct.utmpx*, i64) #4 !dbg !64 {
  %3 = load i32, i32* @x.13
  %4 = load i32, i32* @y.14
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %struct.utmpx*, align 8
  %12 = alloca i64, align 8
  %13 = alloca %struct.stat, align 8
  %14 = alloca i64, align 8
  %15 = alloca i8, align 1
  %16 = alloca [7 x i8], align 1
  %17 = alloca [38 x i8], align 16
  %18 = alloca i8*, align 8
  %19 = alloca [12 x i8], align 1
  %20 = alloca [257 x i8], align 16
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %11, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %11, metadata !940, metadata !DIExpression()), !dbg !941
  store i64 %1, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !942, metadata !DIExpression()), !dbg !943
  call void @llvm.dbg.declare(metadata %struct.stat* %13, metadata !944, metadata !DIExpression()), !dbg !979
  call void @llvm.dbg.declare(metadata i64* %14, metadata !980, metadata !DIExpression()), !dbg !981
  call void @llvm.dbg.declare(metadata i8* %15, metadata !982, metadata !DIExpression()), !dbg !983
  call void @llvm.dbg.declare(metadata [7 x i8]* %16, metadata !984, metadata !DIExpression()), !dbg !986
  call void @llvm.dbg.declare(metadata [38 x i8]* %17, metadata !987, metadata !DIExpression()), !dbg !991
  call void @llvm.dbg.declare(metadata i8** %18, metadata !992, metadata !DIExpression()), !dbg !993
  %23 = getelementptr inbounds [38 x i8], [38 x i8]* %17, i64 0, i64 0, !dbg !994
  store i8* %23, i8** %18, align 8, !dbg !993
  call void @llvm.dbg.declare(metadata [12 x i8]* %19, metadata !995, metadata !DIExpression()), !dbg !999
  %24 = getelementptr inbounds [12 x i8], [12 x i8]* %19, i64 0, i64 0, !dbg !999
  %25 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !999
  %26 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %25, i32 0, i32 1, !dbg !999
  %27 = load i32, i32* %26, align 4, !dbg !999
  %28 = sext i32 %27 to i64, !dbg !999
  %29 = call i32 (i8*, i8*, ...) @sprintf(i8* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %28) #10, !dbg !999
  %30 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1000
  %31 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %30, i32 0, i32 2, !dbg !1000
  %32 = getelementptr inbounds [32 x i8], [32 x i8]* %31, i64 0, i64 0, !dbg !1000
  %33 = load i8, i8* %32, align 4, !dbg !1000
  %34 = sext i8 %33 to i32, !dbg !1000
  %35 = icmp eq i32 %34, 47, !dbg !1000
  %36 = load i32, i32* @x.13
  %37 = load i32, i32* @y.14
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %35, label %63, label %44, !dbg !1002

44:                                               ; preds = %originalBBpart2
  %45 = load i32, i32* @x.13
  %46 = load i32, i32* @y.14
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %44, %originalBB1alteredBB
  %53 = load i8*, i8** %18, align 8, !dbg !1003
  %54 = call i8* @stpcpy(i8* %53, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0)) #10, !dbg !1004
  store i8* %54, i8** %18, align 8, !dbg !1005
  %55 = load i32, i32* @x.13
  %56 = load i32, i32* @y.14
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %63, !dbg !1006

63:                                               ; preds = %originalBBpart24, %originalBBpart2
  %64 = load i8*, i8** %18, align 8, !dbg !1007
  %65 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1008
  %66 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %65, i32 0, i32 2, !dbg !1009
  %67 = getelementptr inbounds [32 x i8], [32 x i8]* %66, i64 0, i64 0, !dbg !1008
  %68 = call i8* @stzncpy(i8* %64, i8* %67, i64 32), !dbg !1010
  %69 = getelementptr inbounds [38 x i8], [38 x i8]* %17, i64 0, i64 0, !dbg !1011
  %70 = call i32 @stat(i8* %69, %struct.stat* %13) #10, !dbg !1013
  %71 = icmp eq i32 %70, 0, !dbg !1014
  br i1 %71, label %72, label %96, !dbg !1015

72:                                               ; preds = %63
  %73 = load i32, i32* @x.13
  %74 = load i32, i32* @y.14
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %72, %originalBB6alteredBB
  %81 = call zeroext i1 @is_tty_writable(%struct.stat* %13), !dbg !1016
  %82 = zext i1 %81 to i64, !dbg !1016
  %83 = select i1 %81, i32 43, i32 45, !dbg !1016
  %84 = trunc i32 %83 to i8, !dbg !1016
  store i8 %84, i8* %15, align 1, !dbg !1018
  %85 = getelementptr inbounds %struct.stat, %struct.stat* %13, i32 0, i32 11, !dbg !1019
  %86 = getelementptr inbounds %struct.timespec, %struct.timespec* %85, i32 0, i32 0, !dbg !1019
  %87 = load i64, i64* %86, align 8, !dbg !1019
  store i64 %87, i64* %14, align 8, !dbg !1020
  %88 = load i32, i32* @x.13
  %89 = load i32, i32* @y.14
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %97, !dbg !1021

96:                                               ; preds = %63
  store i8 63, i8* %15, align 1, !dbg !1022
  store i64 0, i64* %14, align 8, !dbg !1024
  br label %97

97:                                               ; preds = %96, %originalBBpart28
  %98 = load i64, i64* %14, align 8, !dbg !1025
  %99 = icmp ne i64 %98, 0, !dbg !1025
  br i1 %99, label %100, label %106, !dbg !1027

100:                                              ; preds = %97
  %101 = getelementptr inbounds [7 x i8], [7 x i8]* %16, i64 0, i64 0, !dbg !1028
  %102 = load i64, i64* %14, align 8, !dbg !1029
  %103 = load i64, i64* %12, align 8, !dbg !1030
  %104 = call i8* @idle_string(i64 %102, i64 %103), !dbg !1031
  %105 = call i32 (i8*, i8*, ...) @sprintf(i8* %101, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i64 0, i64 0), i32 6, i8* %104) #10, !dbg !1032
  br label %109, !dbg !1032

106:                                              ; preds = %97
  %107 = getelementptr inbounds [7 x i8], [7 x i8]* %16, i64 0, i64 0, !dbg !1033
  %108 = call i32 (i8*, i8*, ...) @sprintf(i8* %107, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i64 0, i64 0)) #10, !dbg !1034
  br label %109

109:                                              ; preds = %106, %100
  %110 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1035
  %111 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %110, i32 0, i32 5, !dbg !1037
  %112 = getelementptr inbounds [256 x i8], [256 x i8]* %111, i64 0, i64 0, !dbg !1035
  %113 = load i8, i8* %112, align 4, !dbg !1035
  %114 = icmp ne i8 %113, 0, !dbg !1035
  br i1 %114, label %115, label %291, !dbg !1038

115:                                              ; preds = %109
  call void @llvm.dbg.declare(metadata [257 x i8]* %20, metadata !1039, metadata !DIExpression()), !dbg !1044
  call void @llvm.dbg.declare(metadata i8** %21, metadata !1045, metadata !DIExpression()), !dbg !1046
  store i8* null, i8** %21, align 8, !dbg !1046
  call void @llvm.dbg.declare(metadata i8** %22, metadata !1047, metadata !DIExpression()), !dbg !1048
  store i8* null, i8** %22, align 8, !dbg !1048
  %116 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1049
  %117 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1050
  %118 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %117, i32 0, i32 5, !dbg !1051
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* %118, i64 0, i64 0, !dbg !1050
  %120 = call i8* @stzncpy(i8* %116, i8* %119, i64 256), !dbg !1052
  %121 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1053
  %122 = call i8* @strchr(i8* %121, i32 58) #13, !dbg !1054
  store i8* %122, i8** %22, align 8, !dbg !1055
  %123 = load i8*, i8** %22, align 8, !dbg !1056
  %124 = icmp ne i8* %123, null, !dbg !1056
  br i1 %124, label %125, label %144, !dbg !1058

125:                                              ; preds = %115
  %126 = load i32, i32* @x.13
  %127 = load i32, i32* @y.14
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %125, %originalBB10alteredBB
  %134 = load i8*, i8** %22, align 8, !dbg !1059
  %135 = getelementptr inbounds i8, i8* %134, i32 1, !dbg !1059
  store i8* %135, i8** %22, align 8, !dbg !1059
  store i8 0, i8* %134, align 1, !dbg !1060
  %136 = load i32, i32* @x.13
  %137 = load i32, i32* @y.14
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %144, !dbg !1061

144:                                              ; preds = %originalBBpart212, %115
  %145 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1062
  %146 = load i8, i8* %145, align 16, !dbg !1062
  %147 = sext i8 %146 to i32, !dbg !1062
  %148 = icmp ne i32 %147, 0, !dbg !1062
  br i1 %148, label %149, label %171, !dbg !1064

149:                                              ; preds = %144
  %150 = load i32, i32* @x.13
  %151 = load i32, i32* @y.14
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %149, %originalBB14alteredBB
  %158 = load i8, i8* @do_lookup, align 1, !dbg !1065
  %159 = trunc i8 %158 to i1, !dbg !1065
  %160 = load i32, i32* @x.13
  %161 = load i32, i32* @y.14
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %159, label %168, label %171, !dbg !1066

168:                                              ; preds = %originalBBpart216
  %169 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1067
  %170 = call noalias i8* @canon_host(i8* %169), !dbg !1069
  store i8* %170, i8** %21, align 8, !dbg !1070
  br label %171, !dbg !1071

171:                                              ; preds = %168, %originalBBpart216, %144
  %172 = load i8*, i8** %21, align 8, !dbg !1072
  %173 = icmp ne i8* %172, null, !dbg !1072
  br i1 %173, label %192, label %174, !dbg !1074

174:                                              ; preds = %171
  %175 = load i32, i32* @x.13
  %176 = load i32, i32* @y.14
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %174, %originalBB18alteredBB
  %183 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1075
  store i8* %183, i8** %21, align 8, !dbg !1076
  %184 = load i32, i32* @x.13
  %185 = load i32, i32* @y.14
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %192, !dbg !1077

192:                                              ; preds = %originalBBpart220, %171
  %193 = load i8*, i8** %22, align 8, !dbg !1078
  %194 = icmp ne i8* %193, null, !dbg !1078
  br i1 %194, label %195, label %219, !dbg !1080

195:                                              ; preds = %192
  %196 = load i64, i64* @print_user.hostlen, align 8, !dbg !1081
  %197 = load i8*, i8** %21, align 8, !dbg !1084
  %198 = call i64 @strlen(i8* %197) #13, !dbg !1085
  %199 = load i8*, i8** %22, align 8, !dbg !1086
  %200 = call i64 @strlen(i8* %199) #13, !dbg !1087
  %201 = add i64 %198, %200, !dbg !1088
  %202 = add i64 %201, 4, !dbg !1089
  %203 = icmp ult i64 %196, %202, !dbg !1090
  br i1 %203, label %204, label %214, !dbg !1091

204:                                              ; preds = %195
  %205 = load i8*, i8** %21, align 8, !dbg !1092
  %206 = call i64 @strlen(i8* %205) #13, !dbg !1094
  %207 = load i8*, i8** %22, align 8, !dbg !1095
  %208 = call i64 @strlen(i8* %207) #13, !dbg !1096
  %209 = add i64 %206, %208, !dbg !1097
  %210 = add i64 %209, 4, !dbg !1098
  store i64 %210, i64* @print_user.hostlen, align 8, !dbg !1099
  %211 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1100
  call void @free(i8* %211) #10, !dbg !1101
  %212 = load i64, i64* @print_user.hostlen, align 8, !dbg !1102
  %213 = call noalias i8* @xmalloc(i64 %212), !dbg !1103
  store i8* %213, i8** @print_user.hoststr, align 8, !dbg !1104
  br label %214, !dbg !1105

214:                                              ; preds = %204, %195
  %215 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1106
  %216 = load i8*, i8** %21, align 8, !dbg !1107
  %217 = load i8*, i8** %22, align 8, !dbg !1108
  %218 = call i32 (i8*, i8*, ...) @sprintf(i8* %215, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i64 0, i64 0), i8* %216, i8* %217) #10, !dbg !1109
  br label %268, !dbg !1110

219:                                              ; preds = %192
  %220 = load i32, i32* @x.13
  %221 = load i32, i32* @y.14
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %219, %originalBB22alteredBB
  %228 = load i64, i64* @print_user.hostlen, align 8, !dbg !1111
  %229 = load i8*, i8** %21, align 8, !dbg !1114
  %230 = call i64 @strlen(i8* %229) #13, !dbg !1115
  %231 = add i64 %230, 3, !dbg !1116
  %232 = icmp ult i64 %228, %231, !dbg !1117
  %233 = load i32, i32* @x.13
  %234 = load i32, i32* @y.14
  %235 = sub i32 %233, 1
  %236 = mul i32 %233, %235
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %238, %239
  br i1 %240, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %232, label %241, label %264, !dbg !1118

241:                                              ; preds = %originalBBpart224
  %242 = load i32, i32* @x.13
  %243 = load i32, i32* @y.14
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %241, %originalBB26alteredBB
  %250 = load i8*, i8** %21, align 8, !dbg !1119
  %251 = call i64 @strlen(i8* %250) #13, !dbg !1121
  %252 = add i64 %251, 3, !dbg !1122
  store i64 %252, i64* @print_user.hostlen, align 8, !dbg !1123
  %253 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1124
  call void @free(i8* %253) #10, !dbg !1125
  %254 = load i64, i64* @print_user.hostlen, align 8, !dbg !1126
  %255 = call noalias i8* @xmalloc(i64 %254), !dbg !1127
  store i8* %255, i8** @print_user.hoststr, align 8, !dbg !1128
  %256 = load i32, i32* @x.13
  %257 = load i32, i32* @y.14
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBBpart239, label %originalBB26alteredBB

originalBBpart239:                                ; preds = %originalBB26
  br label %264, !dbg !1129

264:                                              ; preds = %originalBBpart239, %originalBBpart224
  %265 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1130
  %266 = load i8*, i8** %21, align 8, !dbg !1131
  %267 = call i32 (i8*, i8*, ...) @sprintf(i8* %265, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i64 0, i64 0), i8* %266) #10, !dbg !1132
  br label %268

268:                                              ; preds = %264, %214
  %269 = load i32, i32* @x.13
  %270 = load i32, i32* @y.14
  %271 = sub i32 %269, 1
  %272 = mul i32 %269, %271
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %274, %275
  br i1 %276, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %268, %originalBB41alteredBB
  %277 = load i8*, i8** %21, align 8, !dbg !1133
  %278 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1135
  %279 = icmp ne i8* %277, %278, !dbg !1136
  %280 = load i32, i32* @x.13
  %281 = load i32, i32* @y.14
  %282 = sub i32 %280, 1
  %283 = mul i32 %280, %282
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %285, %286
  br i1 %287, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  br i1 %279, label %288, label %290, !dbg !1137

288:                                              ; preds = %originalBBpart243
  %289 = load i8*, i8** %21, align 8, !dbg !1138
  call void @free(i8* %289) #10, !dbg !1139
  br label %290, !dbg !1139

290:                                              ; preds = %288, %originalBBpart243
  br label %332, !dbg !1140

291:                                              ; preds = %109
  %292 = load i32, i32* @x.13
  %293 = load i32, i32* @y.14
  %294 = sub i32 %292, 1
  %295 = mul i32 %292, %294
  %296 = urem i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %293, 10
  %299 = or i1 %297, %298
  br i1 %299, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %291, %originalBB45alteredBB
  %300 = load i64, i64* @print_user.hostlen, align 8, !dbg !1141
  %301 = icmp ult i64 %300, 1, !dbg !1144
  %302 = load i32, i32* @x.13
  %303 = load i32, i32* @y.14
  %304 = sub i32 %302, 1
  %305 = mul i32 %302, %304
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %303, 10
  %309 = or i1 %307, %308
  br i1 %309, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  br i1 %301, label %310, label %314, !dbg !1145

310:                                              ; preds = %originalBBpart247
  store i64 1, i64* @print_user.hostlen, align 8, !dbg !1146
  %311 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1148
  call void @free(i8* %311) #10, !dbg !1149
  %312 = load i64, i64* @print_user.hostlen, align 8, !dbg !1150
  %313 = call noalias i8* @xmalloc(i64 %312), !dbg !1151
  store i8* %313, i8** @print_user.hoststr, align 8, !dbg !1152
  br label %314, !dbg !1153

314:                                              ; preds = %310, %originalBBpart247
  %315 = load i32, i32* @x.13
  %316 = load i32, i32* @y.14
  %317 = sub i32 %315, 1
  %318 = mul i32 %315, %317
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %320, %321
  br i1 %322, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %314, %originalBB49alteredBB
  %323 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1154
  store i8 0, i8* %323, align 1, !dbg !1155
  %324 = load i32, i32* @x.13
  %325 = load i32, i32* @y.14
  %326 = sub i32 %324, 1
  %327 = mul i32 %324, %326
  %328 = urem i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %329, %330
  br i1 %331, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  br label %332

332:                                              ; preds = %originalBBpart251, %290
  %333 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1156
  %334 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %333, i32 0, i32 4, !dbg !1156
  %335 = getelementptr inbounds [32 x i8], [32 x i8]* %334, i64 0, i64 0, !dbg !1156
  %336 = load i8, i8* %15, align 1, !dbg !1157
  %337 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1158
  %338 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %337, i32 0, i32 2, !dbg !1159
  %339 = getelementptr inbounds [32 x i8], [32 x i8]* %338, i64 0, i64 0, !dbg !1158
  %340 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1160
  %341 = call i8* @time_string(%struct.utmpx* %340), !dbg !1161
  %342 = getelementptr inbounds [7 x i8], [7 x i8]* %16, i64 0, i64 0, !dbg !1162
  %343 = getelementptr inbounds [12 x i8], [12 x i8]* %19, i64 0, i64 0, !dbg !1163
  %344 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1164
  %345 = icmp ne i8* %344, null, !dbg !1164
  br i1 %345, label %346, label %364, !dbg !1164

346:                                              ; preds = %332
  %347 = load i32, i32* @x.13
  %348 = load i32, i32* @y.14
  %349 = sub i32 %347, 1
  %350 = mul i32 %347, %349
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %352, %353
  br i1 %354, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %346, %originalBB53alteredBB
  %355 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1165
  %356 = load i32, i32* @x.13
  %357 = load i32, i32* @y.14
  %358 = sub i32 %356, 1
  %359 = mul i32 %356, %358
  %360 = urem i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %361, %362
  br i1 %363, label %originalBBpart255, label %originalBB53alteredBB

originalBBpart255:                                ; preds = %originalBB53
  br label %381, !dbg !1164

364:                                              ; preds = %332
  %365 = load i32, i32* @x.13
  %366 = load i32, i32* @y.14
  %367 = sub i32 %365, 1
  %368 = mul i32 %365, %367
  %369 = urem i32 %368, 2
  %370 = icmp eq i32 %369, 0
  %371 = icmp slt i32 %366, 10
  %372 = or i1 %370, %371
  br i1 %372, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %364, %originalBB57alteredBB
  %373 = load i32, i32* @x.13
  %374 = load i32, i32* @y.14
  %375 = sub i32 %373, 1
  %376 = mul i32 %373, %375
  %377 = urem i32 %376, 2
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %374, 10
  %380 = or i1 %378, %379
  br i1 %380, label %originalBBpart259, label %originalBB57alteredBB

originalBBpart259:                                ; preds = %originalBB57
  br label %381, !dbg !1164

381:                                              ; preds = %originalBBpart259, %originalBBpart255
  %382 = phi i8* [ %355, %originalBBpart255 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), %originalBBpart259 ], !dbg !1164
  call void @print_line(i32 32, i8* %335, i8 signext %336, i32 32, i8* %339, i8* %341, i8* %342, i8* %343, i8* %382, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1166
  ret void, !dbg !1167

originalBBalteredBB:                              ; preds = %originalBB, %2
  %383 = alloca %struct.utmpx*, align 8
  %384 = alloca i64, align 8
  %385 = alloca %struct.stat, align 8
  %386 = alloca i64, align 8
  %387 = alloca i8, align 1
  %388 = alloca [7 x i8], align 1
  %389 = alloca [38 x i8], align 16
  %390 = alloca i8*, align 8
  %391 = alloca [12 x i8], align 1
  %392 = alloca [257 x i8], align 16
  %393 = alloca i8*, align 8
  %394 = alloca i8*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %383, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %383, metadata !1168, metadata !DIExpression()), !dbg !941
  store i64 %1, i64* %384, align 8
  call void @llvm.dbg.declare(metadata i64* %384, metadata !1269, metadata !DIExpression()), !dbg !943
  call void @llvm.dbg.declare(metadata %struct.stat* %385, metadata !1270, metadata !DIExpression()), !dbg !979
  call void @llvm.dbg.declare(metadata i64* %386, metadata !1292, metadata !DIExpression()), !dbg !981
  call void @llvm.dbg.declare(metadata i8* %387, metadata !1293, metadata !DIExpression()), !dbg !983
  call void @llvm.dbg.declare(metadata [7 x i8]* %388, metadata !1294, metadata !DIExpression()), !dbg !986
  call void @llvm.dbg.declare(metadata [38 x i8]* %389, metadata !1295, metadata !DIExpression()), !dbg !991
  call void @llvm.dbg.declare(metadata i8** %390, metadata !1296, metadata !DIExpression()), !dbg !993
  %395 = getelementptr inbounds [38 x i8], [38 x i8]* %389, i64 0, i64 0, !dbg !994
  store i8* %395, i8** %390, align 8, !dbg !993
  call void @llvm.dbg.declare(metadata [12 x i8]* %391, metadata !1297, metadata !DIExpression()), !dbg !999
  %396 = getelementptr inbounds [12 x i8], [12 x i8]* %391, i64 0, i64 0, !dbg !999
  %397 = load %struct.utmpx*, %struct.utmpx** %383, align 8, !dbg !999
  %398 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %397, i32 0, i32 1, !dbg !999
  %399 = load i32, i32* %398, align 4, !dbg !999
  %400 = sext i32 %399 to i64, !dbg !999
  %401 = call i32 (i8*, i8*, ...) @sprintf(i8* %396, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %400) #10, !dbg !999
  %402 = load %struct.utmpx*, %struct.utmpx** %383, align 8, !dbg !1000
  %403 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %402, i32 0, i32 2, !dbg !1000
  %404 = getelementptr inbounds [32 x i8], [32 x i8]* %403, i64 0, i64 0, !dbg !1000
  %405 = load i8, i8* %404, align 4, !dbg !1000
  %406 = sext i8 %405 to i32, !dbg !1000
  %407 = icmp eq i32 %406, 47, !dbg !1000
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %44
  %408 = load i8*, i8** %18, align 8, !dbg !1003
  %409 = call i8* @stpcpy(i8* %408, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0)) #10, !dbg !1004
  store i8* %409, i8** %18, align 8, !dbg !1005
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %72
  %410 = call zeroext i1 @is_tty_writable(%struct.stat* %13), !dbg !1016
  %411 = zext i1 %410 to i64, !dbg !1016
  %412 = select i1 %410, i32 43, i32 45, !dbg !1016
  %413 = trunc i32 %412 to i8, !dbg !1016
  store i8 %413, i8* %15, align 1, !dbg !1018
  %414 = getelementptr inbounds %struct.stat, %struct.stat* %13, i32 0, i32 11, !dbg !1019
  %415 = getelementptr inbounds %struct.timespec, %struct.timespec* %414, i32 0, i32 0, !dbg !1019
  %416 = load i64, i64* %415, align 8, !dbg !1019
  store i64 %416, i64* %14, align 8, !dbg !1020
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %125
  %417 = load i8*, i8** %22, align 8, !dbg !1059
  %418 = getelementptr inbounds i8, i8* %417, i32 1, !dbg !1059
  store i8* %418, i8** %22, align 8, !dbg !1059
  store i8 0, i8* %417, align 1, !dbg !1060
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %149
  %419 = load i8, i8* @do_lookup, align 1, !dbg !1065
  %420 = trunc i8 %419 to i1, !dbg !1065
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %174
  %421 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1075
  store i8* %421, i8** %21, align 8, !dbg !1076
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %219
  %422 = load i64, i64* @print_user.hostlen, align 8, !dbg !1111
  %423 = load i8*, i8** %21, align 8, !dbg !1114
  %424 = call i64 @strlen(i8* %423) #13, !dbg !1115
  %425 = add i64 %424, 3, !dbg !1116
  %426 = icmp ult i64 %422, %425, !dbg !1117
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %241
  %427 = load i8*, i8** %21, align 8, !dbg !1119
  %428 = call i64 @strlen(i8* %427) #13, !dbg !1121
  %_ = shl i64 %428, 3
  %_27 = sub i64 %428, 3
  %gen = mul i64 %_27, 3
  %_28 = sub i64 %428, 3
  %gen29 = mul i64 %_28, 3
  %_30 = shl i64 %428, 3
  %_31 = sub i64 %428, 3
  %gen32 = mul i64 %_31, 3
  %_33 = sub i64 %428, 3
  %gen34 = mul i64 %_33, 3
  %_35 = sub i64 %428, 3
  %gen36 = mul i64 %_35, 3
  %_37 = shl i64 %428, 3
  %429 = add i64 %428, 3, !dbg !1122
  store i64 %429, i64* @print_user.hostlen, align 8, !dbg !1123
  %430 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1124
  call void @free(i8* %430) #10, !dbg !1125
  %431 = load i64, i64* @print_user.hostlen, align 8, !dbg !1126
  %432 = call noalias i8* @xmalloc(i64 %431), !dbg !1127
  store i8* %432, i8** @print_user.hoststr, align 8, !dbg !1128
  br label %originalBB26

originalBB41alteredBB:                            ; preds = %originalBB41, %268
  %433 = load i8*, i8** %21, align 8, !dbg !1133
  %434 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1135
  %435 = icmp ne i8* %433, %434, !dbg !1136
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %291
  %436 = load i64, i64* @print_user.hostlen, align 8, !dbg !1141
  %437 = icmp ult i64 %436, 1, !dbg !1144
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %314
  %438 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1154
  store i8 0, i8* %438, align 1, !dbg !1155
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %346
  %439 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1165
  br label %originalBB53

originalBB57alteredBB:                            ; preds = %originalBB57, %364
  br label %originalBB57
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_runlevel(%struct.utmpx*) #4 !dbg !133 {
  %2 = alloca %struct.utmpx*, align 8
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  store %struct.utmpx* %0, %struct.utmpx** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %2, metadata !1298, metadata !DIExpression()), !dbg !1299
  call void @llvm.dbg.declare(metadata i8* %3, metadata !1300, metadata !DIExpression()), !dbg !1301
  %5 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !1302
  %6 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %5, i32 0, i32 1, !dbg !1302
  %7 = load i32, i32* %6, align 4, !dbg !1302
  %8 = sdiv i32 %7, 256, !dbg !1303
  %9 = trunc i32 %8 to i8, !dbg !1302
  store i8 %9, i8* %3, align 1, !dbg !1301
  call void @llvm.dbg.declare(metadata i8* %4, metadata !1304, metadata !DIExpression()), !dbg !1305
  %10 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !1306
  %11 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %10, i32 0, i32 1, !dbg !1306
  %12 = load i32, i32* %11, align 4, !dbg !1306
  %13 = srem i32 %12, 256, !dbg !1307
  %14 = trunc i32 %13 to i8, !dbg !1306
  store i8 %14, i8* %4, align 1, !dbg !1305
  %15 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1308
  %16 = icmp ne i8* %15, null, !dbg !1308
  br i1 %16, label %22, label %17, !dbg !1310

17:                                               ; preds = %1
  %18 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i64 0, i64 0)) #10, !dbg !1311
  %19 = call i64 @strlen(i8* %18) #13, !dbg !1312
  %20 = add i64 %19, 3, !dbg !1313
  %21 = call noalias i8* @xmalloc(i64 %20), !dbg !1314
  store i8* %21, i8** @print_runlevel.runlevline, align 8, !dbg !1315
  br label %22, !dbg !1316

22:                                               ; preds = %17, %1
  %23 = load i32, i32* @x.15
  %24 = load i32, i32* @y.16
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %22, %originalBBalteredBB
  %31 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1317
  %32 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i64 0, i64 0)) #10, !dbg !1318
  %33 = load i8, i8* %4, align 1, !dbg !1319
  %34 = zext i8 %33 to i32, !dbg !1319
  %35 = call i32 (i8*, i8*, ...) @sprintf(i8* %31, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i64 0, i64 0), i8* %32, i32 %34) #10, !dbg !1320
  %36 = load i8*, i8** @print_runlevel.comment, align 8, !dbg !1321
  %37 = icmp ne i8* %36, null, !dbg !1321
  %38 = load i32, i32* @x.15
  %39 = load i32, i32* @y.16
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %37, label %51, label %46, !dbg !1323

46:                                               ; preds = %originalBBpart2
  %47 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i64 0, i64 0)) #10, !dbg !1324
  %48 = call i64 @strlen(i8* %47) #13, !dbg !1325
  %49 = add i64 %48, 2, !dbg !1326
  %50 = call noalias i8* @xmalloc(i64 %49), !dbg !1327
  store i8* %50, i8** @print_runlevel.comment, align 8, !dbg !1328
  br label %51, !dbg !1329

51:                                               ; preds = %46, %originalBBpart2
  %52 = load i32, i32* @x.15
  %53 = load i32, i32* @y.16
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %51, %originalBB1alteredBB
  %60 = load i8*, i8** @print_runlevel.comment, align 8, !dbg !1330
  %61 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i64 0, i64 0)) #10, !dbg !1331
  %62 = load i8, i8* %3, align 1, !dbg !1332
  %63 = zext i8 %62 to i32, !dbg !1332
  %64 = icmp eq i32 %63, 78, !dbg !1333
  %65 = load i32, i32* @x.15
  %66 = load i32, i32* @y.16
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %64, label %73, label %90, !dbg !1334

73:                                               ; preds = %originalBBpart24
  %74 = load i32, i32* @x.15
  %75 = load i32, i32* @y.16
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %73, %originalBB6alteredBB
  %82 = load i32, i32* @x.15
  %83 = load i32, i32* @y.16
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %109, !dbg !1334

90:                                               ; preds = %originalBBpart24
  %91 = load i32, i32* @x.15
  %92 = load i32, i32* @y.16
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %90, %originalBB10alteredBB
  %99 = load i8, i8* %3, align 1, !dbg !1335
  %100 = zext i8 %99 to i32, !dbg !1335
  %101 = load i32, i32* @x.15
  %102 = load i32, i32* @y.16
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %109, !dbg !1334

109:                                              ; preds = %originalBBpart212, %originalBBpart28
  %110 = phi i32 [ 83, %originalBBpart28 ], [ %100, %originalBBpart212 ], !dbg !1334
  %111 = call i32 (i8*, i8*, ...) @sprintf(i8* %60, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i64 0, i64 0), i8* %61, i32 %110) #10, !dbg !1336
  %112 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1337
  %113 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !1338
  %114 = call i8* @time_string(%struct.utmpx* %113), !dbg !1339
  %115 = load i8, i8* %3, align 1, !dbg !1340
  %116 = zext i8 %115 to i32, !dbg !1340
  %117 = call zeroext i1 @c_isprint(i32 %116), !dbg !1341
  br i1 %117, label %118, label %136, !dbg !1341

118:                                              ; preds = %109
  %119 = load i32, i32* @x.15
  %120 = load i32, i32* @y.16
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %118, %originalBB14alteredBB
  %127 = load i8*, i8** @print_runlevel.comment, align 8, !dbg !1342
  %128 = load i32, i32* @x.15
  %129 = load i32, i32* @y.16
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %137, !dbg !1341

136:                                              ; preds = %109
  br label %137, !dbg !1341

137:                                              ; preds = %136, %originalBBpart216
  %138 = phi i8* [ %127, %originalBBpart216 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), %136 ], !dbg !1341
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %112, i8* %114, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %138, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1343
  ret void, !dbg !1344

originalBBalteredBB:                              ; preds = %originalBB, %22
  %139 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1317
  %140 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i64 0, i64 0)) #10, !dbg !1318
  %141 = load i8, i8* %4, align 1, !dbg !1319
  %142 = zext i8 %141 to i32, !dbg !1319
  %143 = call i32 (i8*, i8*, ...) @sprintf(i8* %139, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i64 0, i64 0), i8* %140, i32 %142) #10, !dbg !1320
  %144 = load i8*, i8** @print_runlevel.comment, align 8, !dbg !1321
  %145 = icmp ne i8* %144, null, !dbg !1321
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %51
  %146 = load i8*, i8** @print_runlevel.comment, align 8, !dbg !1330
  %147 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i64 0, i64 0)) #10, !dbg !1331
  %148 = load i8, i8* %3, align 1, !dbg !1332
  %149 = zext i8 %148 to i32, !dbg !1332
  %150 = icmp eq i32 %149, 78, !dbg !1333
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %73
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %90
  %151 = load i8, i8* %3, align 1, !dbg !1335
  %152 = zext i8 %151 to i32, !dbg !1335
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %118
  %153 = load i8*, i8** @print_runlevel.comment, align 8, !dbg !1342
  br label %originalBB14
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_boottime(%struct.utmpx*) #4 !dbg !1345 {
  %2 = alloca %struct.utmpx*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %2, metadata !1346, metadata !DIExpression()), !dbg !1347
  %3 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.88, i64 0, i64 0)) #10, !dbg !1348
  %4 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !1349
  %5 = call i8* @time_string(%struct.utmpx* %4), !dbg !1350
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %3, i8* %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1351
  ret void, !dbg !1352
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_clockchange(%struct.utmpx*) #4 !dbg !1353 {
  %2 = alloca %struct.utmpx*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %2, metadata !1354, metadata !DIExpression()), !dbg !1355
  %3 = call i8* @gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.89, i64 0, i64 0)) #10, !dbg !1356
  %4 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !1357
  %5 = call i8* @time_string(%struct.utmpx* %4), !dbg !1358
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %3, i8* %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1359
  ret void, !dbg !1360
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_initspawn(%struct.utmpx*) #4 !dbg !1361 {
  %2 = alloca %struct.utmpx*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca [12 x i8], align 1
  store %struct.utmpx* %0, %struct.utmpx** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %2, metadata !1362, metadata !DIExpression()), !dbg !1363
  call void @llvm.dbg.declare(metadata i8** %3, metadata !1364, metadata !DIExpression()), !dbg !1365
  %5 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !1366
  %6 = call i8* @make_id_equals_comment(%struct.utmpx* %5), !dbg !1367
  store i8* %6, i8** %3, align 8, !dbg !1365
  call void @llvm.dbg.declare(metadata [12 x i8]* %4, metadata !1368, metadata !DIExpression()), !dbg !1369
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* %4, i64 0, i64 0, !dbg !1369
  %8 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !1369
  %9 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %8, i32 0, i32 1, !dbg !1369
  %10 = load i32, i32* %9, align 4, !dbg !1369
  %11 = sext i32 %10 to i64, !dbg !1369
  %12 = call i32 (i8*, i8*, ...) @sprintf(i8* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %11) #10, !dbg !1369
  %13 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !1370
  %14 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %13, i32 0, i32 2, !dbg !1371
  %15 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i64 0, i64 0, !dbg !1370
  %16 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !1372
  %17 = call i8* @time_string(%struct.utmpx* %16), !dbg !1373
  %18 = getelementptr inbounds [12 x i8], [12 x i8]* %4, i64 0, i64 0, !dbg !1374
  %19 = load i8*, i8** %3, align 8, !dbg !1375
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 32, i8* %15, i8* %17, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %18, i8* %19, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1376
  %20 = load i8*, i8** %3, align 8, !dbg !1377
  call void @free(i8* %20) #10, !dbg !1378
  ret void, !dbg !1379
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_login(%struct.utmpx*) #4 !dbg !1380 {
  %2 = alloca %struct.utmpx*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca [12 x i8], align 1
  store %struct.utmpx* %0, %struct.utmpx** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %2, metadata !1381, metadata !DIExpression()), !dbg !1382
  call void @llvm.dbg.declare(metadata i8** %3, metadata !1383, metadata !DIExpression()), !dbg !1384
  %5 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !1385
  %6 = call i8* @make_id_equals_comment(%struct.utmpx* %5), !dbg !1386
  store i8* %6, i8** %3, align 8, !dbg !1384
  call void @llvm.dbg.declare(metadata [12 x i8]* %4, metadata !1387, metadata !DIExpression()), !dbg !1388
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* %4, i64 0, i64 0, !dbg !1388
  %8 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !1388
  %9 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %8, i32 0, i32 1, !dbg !1388
  %10 = load i32, i32* %9, align 4, !dbg !1388
  %11 = sext i32 %10 to i64, !dbg !1388
  %12 = call i32 (i8*, i8*, ...) @sprintf(i8* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %11) #10, !dbg !1388
  %13 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i64 0, i64 0)) #10, !dbg !1389
  %14 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !1390
  %15 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %14, i32 0, i32 2, !dbg !1391
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %15, i64 0, i64 0, !dbg !1390
  %17 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !1392
  %18 = call i8* @time_string(%struct.utmpx* %17), !dbg !1393
  %19 = getelementptr inbounds [12 x i8], [12 x i8]* %4, i64 0, i64 0, !dbg !1394
  %20 = load i8*, i8** %3, align 8, !dbg !1395
  call void @print_line(i32 -1, i8* %13, i8 signext 32, i32 32, i8* %16, i8* %18, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %19, i8* %20, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1396
  %21 = load i8*, i8** %3, align 8, !dbg !1397
  call void @free(i8* %21) #10, !dbg !1398
  ret void, !dbg !1399
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_deadprocs(%struct.utmpx*) #4 !dbg !140 {
  %2 = load i32, i32* @x.25
  %3 = load i32, i32* @y.26
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca [12 x i8], align 1
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !1400, metadata !DIExpression()), !dbg !1401
  call void @llvm.dbg.declare(metadata i8** %11, metadata !1402, metadata !DIExpression()), !dbg !1403
  %13 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1404
  %14 = call i8* @make_id_equals_comment(%struct.utmpx* %13), !dbg !1405
  store i8* %14, i8** %11, align 8, !dbg !1403
  call void @llvm.dbg.declare(metadata [12 x i8]* %12, metadata !1406, metadata !DIExpression()), !dbg !1407
  %15 = getelementptr inbounds [12 x i8], [12 x i8]* %12, i64 0, i64 0, !dbg !1407
  %16 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1407
  %17 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %16, i32 0, i32 1, !dbg !1407
  %18 = load i32, i32* %17, align 4, !dbg !1407
  %19 = sext i32 %18 to i64, !dbg !1407
  %20 = call i32 (i8*, i8*, ...) @sprintf(i8* %15, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %19) #10, !dbg !1407
  %21 = load i8*, i8** @print_deadprocs.exitstr, align 8, !dbg !1408
  %22 = icmp ne i8* %21, null, !dbg !1408
  %23 = load i32, i32* @x.25
  %24 = load i32, i32* @y.26
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %58, label %31, !dbg !1410

31:                                               ; preds = %originalBBpart2
  %32 = load i32, i32* @x.25
  %33 = load i32, i32* @y.26
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0)) #10, !dbg !1411
  %41 = call i64 @strlen(i8* %40) #13, !dbg !1412
  %42 = add i64 %41, 6, !dbg !1413
  %43 = add i64 %42, 1, !dbg !1414
  %44 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0)) #10, !dbg !1415
  %45 = call i64 @strlen(i8* %44) #13, !dbg !1416
  %46 = add i64 %43, %45, !dbg !1417
  %47 = add i64 %46, 6, !dbg !1418
  %48 = add i64 %47, 1, !dbg !1419
  %49 = call noalias i8* @xmalloc(i64 %48), !dbg !1420
  store i8* %49, i8** @print_deadprocs.exitstr, align 8, !dbg !1421
  %50 = load i32, i32* @x.25
  %51 = load i32, i32* @y.26
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart240, label %originalBB1alteredBB

originalBBpart240:                                ; preds = %originalBB1
  br label %58, !dbg !1422

58:                                               ; preds = %originalBBpart240, %originalBBpart2
  %59 = load i8*, i8** @print_deadprocs.exitstr, align 8, !dbg !1423
  %60 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0)) #10, !dbg !1424
  %61 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1425
  %62 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %61, i32 0, i32 6, !dbg !1425
  %63 = getelementptr inbounds %struct.__exit_status, %struct.__exit_status* %62, i32 0, i32 0, !dbg !1425
  %64 = load i16, i16* %63, align 4, !dbg !1425
  %65 = sext i16 %64 to i32, !dbg !1425
  %66 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0)) #10, !dbg !1426
  %67 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1427
  %68 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %67, i32 0, i32 6, !dbg !1427
  %69 = getelementptr inbounds %struct.__exit_status, %struct.__exit_status* %68, i32 0, i32 1, !dbg !1427
  %70 = load i16, i16* %69, align 2, !dbg !1427
  %71 = sext i16 %70 to i32, !dbg !1427
  %72 = call i32 (i8*, i8*, ...) @sprintf(i8* %59, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.94, i64 0, i64 0), i8* %60, i32 %65, i8* %66, i32 %71) #10, !dbg !1428
  %73 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1429
  %74 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %73, i32 0, i32 2, !dbg !1430
  %75 = getelementptr inbounds [32 x i8], [32 x i8]* %74, i64 0, i64 0, !dbg !1429
  %76 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1431
  %77 = call i8* @time_string(%struct.utmpx* %76), !dbg !1432
  %78 = getelementptr inbounds [12 x i8], [12 x i8]* %12, i64 0, i64 0, !dbg !1433
  %79 = load i8*, i8** %11, align 8, !dbg !1434
  %80 = load i8*, i8** @print_deadprocs.exitstr, align 8, !dbg !1435
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 32, i8* %75, i8* %77, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %78, i8* %79, i8* %80), !dbg !1436
  %81 = load i8*, i8** %11, align 8, !dbg !1437
  call void @free(i8* %81) #10, !dbg !1438
  ret void, !dbg !1439

originalBBalteredBB:                              ; preds = %originalBB, %1
  %82 = alloca %struct.utmpx*, align 8
  %83 = alloca i8*, align 8
  %84 = alloca [12 x i8], align 1
  store %struct.utmpx* %0, %struct.utmpx** %82, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %82, metadata !1440, metadata !DIExpression()), !dbg !1401
  call void @llvm.dbg.declare(metadata i8** %83, metadata !1541, metadata !DIExpression()), !dbg !1403
  %85 = load %struct.utmpx*, %struct.utmpx** %82, align 8, !dbg !1404
  %86 = call i8* @make_id_equals_comment(%struct.utmpx* %85), !dbg !1405
  store i8* %86, i8** %83, align 8, !dbg !1403
  call void @llvm.dbg.declare(metadata [12 x i8]* %84, metadata !1542, metadata !DIExpression()), !dbg !1407
  %87 = getelementptr inbounds [12 x i8], [12 x i8]* %84, i64 0, i64 0, !dbg !1407
  %88 = load %struct.utmpx*, %struct.utmpx** %82, align 8, !dbg !1407
  %89 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %88, i32 0, i32 1, !dbg !1407
  %90 = load i32, i32* %89, align 4, !dbg !1407
  %91 = sext i32 %90 to i64, !dbg !1407
  %92 = call i32 (i8*, i8*, ...) @sprintf(i8* %87, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %91) #10, !dbg !1407
  %93 = load i8*, i8** @print_deadprocs.exitstr, align 8, !dbg !1408
  %94 = icmp ne i8* %93, null, !dbg !1408
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %95 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0)) #10, !dbg !1411
  %96 = call i64 @strlen(i8* %95) #13, !dbg !1412
  %_ = sub i64 0, %96
  %gen = add i64 %_, 6
  %97 = add i64 %96, 6, !dbg !1413
  %_2 = shl i64 %97, 1
  %_3 = shl i64 %97, 1
  %_4 = sub i64 0, %97
  %gen5 = add i64 %_4, 1
  %98 = add i64 %97, 1, !dbg !1414
  %99 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0)) #10, !dbg !1415
  %100 = call i64 @strlen(i8* %99) #13, !dbg !1416
  %_6 = sub i64 %98, %100
  %gen7 = mul i64 %_6, %100
  %_8 = sub i64 %98, %100
  %gen9 = mul i64 %_8, %100
  %_10 = sub i64 0, %98
  %gen11 = add i64 %_10, %100
  %_12 = sub i64 0, %98
  %gen13 = add i64 %_12, %100
  %_14 = sub i64 0, %98
  %gen15 = add i64 %_14, %100
  %101 = add i64 %98, %100, !dbg !1417
  %_16 = sub i64 %101, 6
  %gen17 = mul i64 %_16, 6
  %_18 = sub i64 %101, 6
  %gen19 = mul i64 %_18, 6
  %_20 = shl i64 %101, 6
  %_21 = shl i64 %101, 6
  %_22 = sub i64 0, %101
  %gen23 = add i64 %_22, 6
  %_24 = shl i64 %101, 6
  %_25 = sub i64 %101, 6
  %gen26 = mul i64 %_25, 6
  %102 = add i64 %101, 6, !dbg !1418
  %_27 = sub i64 %102, 1
  %gen28 = mul i64 %_27, 1
  %_29 = sub i64 %102, 1
  %gen30 = mul i64 %_29, 1
  %_31 = sub i64 0, %102
  %gen32 = add i64 %_31, 1
  %_33 = sub i64 0, %102
  %gen34 = add i64 %_33, 1
  %_35 = sub i64 %102, 1
  %gen36 = mul i64 %_35, 1
  %_37 = shl i64 %102, 1
  %_38 = shl i64 %102, 1
  %103 = add i64 %102, 1, !dbg !1419
  %104 = call noalias i8* @xmalloc(i64 %103), !dbg !1420
  store i8* %104, i8** @print_deadprocs.exitstr, align 8, !dbg !1421
  br label %originalBB1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @make_id_equals_comment(%struct.utmpx*) #4 !dbg !1543 {
  %2 = alloca %struct.utmpx*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %2, metadata !1546, metadata !DIExpression()), !dbg !1547
  call void @llvm.dbg.declare(metadata i64* %3, metadata !1548, metadata !DIExpression()), !dbg !1549
  store i64 4, i64* %3, align 8, !dbg !1549
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1550, metadata !DIExpression()), !dbg !1551
  %5 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i64 0, i64 0)) #10, !dbg !1552
  %6 = call i64 @strlen(i8* %5) #13, !dbg !1553
  %7 = load i64, i64* %3, align 8, !dbg !1554
  %8 = add i64 %6, %7, !dbg !1555
  %9 = add i64 %8, 1, !dbg !1556
  %10 = call noalias i8* @xmalloc(i64 %9), !dbg !1557
  store i8* %10, i8** %4, align 8, !dbg !1551
  %11 = load i8*, i8** %4, align 8, !dbg !1558
  %12 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i64 0, i64 0)) #10, !dbg !1559
  %13 = call i8* @strcpy(i8* %11, i8* %12) #10, !dbg !1560
  %14 = load i8*, i8** %4, align 8, !dbg !1561
  %15 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !1562
  %16 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %15, i32 0, i32 3, !dbg !1562
  %17 = getelementptr inbounds [4 x i8], [4 x i8]* %16, i64 0, i64 0, !dbg !1562
  %18 = load i64, i64* %3, align 8, !dbg !1563
  %19 = call i8* @strncat(i8* %14, i8* %17, i64 %18) #10, !dbg !1564
  %20 = load i8*, i8** %4, align 8, !dbg !1565
  ret i8* %20, !dbg !1566
}

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @time_string(%struct.utmpx*) #4 !dbg !125 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.utmpx*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.tm*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %3, metadata !1567, metadata !DIExpression()), !dbg !1568
  call void @llvm.dbg.declare(metadata i64* %4, metadata !1569, metadata !DIExpression()), !dbg !1570
  %6 = load %struct.utmpx*, %struct.utmpx** %3, align 8, !dbg !1571
  %7 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %6, i32 0, i32 8, !dbg !1571
  %8 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, !dbg !1571
  %9 = load i32, i32* %8, align 4, !dbg !1571
  %10 = sext i32 %9 to i64, !dbg !1571
  store i64 %10, i64* %4, align 8, !dbg !1570
  call void @llvm.dbg.declare(metadata %struct.tm** %5, metadata !1572, metadata !DIExpression()), !dbg !1588
  %11 = call %struct.tm* @localtime(i64* %4) #10, !dbg !1589
  store %struct.tm* %11, %struct.tm** %5, align 8, !dbg !1588
  %12 = load %struct.tm*, %struct.tm** %5, align 8, !dbg !1590
  %13 = icmp ne %struct.tm* %12, null, !dbg !1590
  br i1 %13, label %14, label %34, !dbg !1592

14:                                               ; preds = %1
  %15 = load i32, i32* @x.29
  %16 = load i32, i32* @y.30
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = load i8*, i8** @time_format, align 8, !dbg !1593
  %24 = load %struct.tm*, %struct.tm** %5, align 8, !dbg !1595
  %25 = call i64 @strftime(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @time_string.buf, i64 0, i64 0), i64 33, i8* %23, %struct.tm* %24) #10, !dbg !1596
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @time_string.buf, i64 0, i64 0), i8** %2, align 8, !dbg !1597
  %26 = load i32, i32* @x.29
  %27 = load i32, i32* @y.30
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %37, !dbg !1597

34:                                               ; preds = %1
  %35 = load i64, i64* %4, align 8, !dbg !1598
  %36 = call i8* @timetostr(i64 %35, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @time_string.buf, i64 0, i64 0)), !dbg !1599
  store i8* %36, i8** %2, align 8, !dbg !1600
  br label %37, !dbg !1600

37:                                               ; preds = %34, %originalBBpart2
  %38 = load i32, i32* @x.29
  %39 = load i32, i32* @y.30
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = load i8*, i8** %2, align 8, !dbg !1601
  %47 = load i32, i32* @x.29
  %48 = load i32, i32* @y.30
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret i8* %46, !dbg !1601

originalBBalteredBB:                              ; preds = %originalBB, %14
  %55 = load i8*, i8** @time_format, align 8, !dbg !1593
  %56 = load %struct.tm*, %struct.tm** %5, align 8, !dbg !1595
  %57 = call i64 @strftime(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @time_string.buf, i64 0, i64 0), i64 33, i8* %55, %struct.tm* %56) #10, !dbg !1596
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @time_string.buf, i64 0, i64 0), i8** %2, align 8, !dbg !1597
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %58 = load i8*, i8** %2, align 8, !dbg !1601
  br label %originalBB1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_line(i32, i8*, i8 signext, i32, i8*, i8*, i8*, i8*, i8*, i8*) #4 !dbg !56 {
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8, align 1
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca [8 x i8], align 1
  %23 = alloca [13 x i8], align 1
  %24 = alloca i8*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i8*, align 8
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !1602, metadata !DIExpression()), !dbg !1603
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !1604, metadata !DIExpression()), !dbg !1605
  store i8 %2, i8* %13, align 1
  call void @llvm.dbg.declare(metadata i8* %13, metadata !1606, metadata !DIExpression()), !dbg !1607
  store i32 %3, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !1608, metadata !DIExpression()), !dbg !1609
  store i8* %4, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !1610, metadata !DIExpression()), !dbg !1611
  store i8* %5, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !1612, metadata !DIExpression()), !dbg !1613
  store i8* %6, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !1614, metadata !DIExpression()), !dbg !1615
  store i8* %7, i8** %18, align 8
  call void @llvm.dbg.declare(metadata i8** %18, metadata !1616, metadata !DIExpression()), !dbg !1617
  store i8* %8, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !1618, metadata !DIExpression()), !dbg !1619
  store i8* %9, i8** %20, align 8
  call void @llvm.dbg.declare(metadata i8** %20, metadata !1620, metadata !DIExpression()), !dbg !1621
  call void @llvm.dbg.declare(metadata i8** %21, metadata !1622, metadata !DIExpression()), !dbg !1623
  call void @llvm.dbg.declare(metadata [8 x i8]* %22, metadata !1624, metadata !DIExpression()), !dbg !1626
  call void @llvm.dbg.declare(metadata [13 x i8]* %23, metadata !1627, metadata !DIExpression()), !dbg !1631
  call void @llvm.dbg.declare(metadata i8** %24, metadata !1632, metadata !DIExpression()), !dbg !1633
  call void @llvm.dbg.declare(metadata i32* %25, metadata !1634, metadata !DIExpression()), !dbg !1635
  %27 = load i8, i8* %13, align 1, !dbg !1636
  store i8 %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @print_line.mesg, i64 0, i64 1), align 1, !dbg !1637
  %28 = load i8, i8* @include_idle, align 1, !dbg !1638
  %29 = trunc i8 %28 to i1, !dbg !1638
  br i1 %29, label %30, label %57, !dbg !1640

30:                                               ; preds = %10
  %31 = load i8, i8* @short_output, align 1, !dbg !1641
  %32 = trunc i8 %31 to i1, !dbg !1641
  br i1 %32, label %57, label %33, !dbg !1642

33:                                               ; preds = %30
  %34 = load i8*, i8** %17, align 8, !dbg !1643
  %35 = call i64 @strlen(i8* %34) #13, !dbg !1644
  %36 = icmp ult i64 %35, 7, !dbg !1645
  br i1 %36, label %37, label %57, !dbg !1646

37:                                               ; preds = %33
  %38 = load i32, i32* @x.31
  %39 = load i32, i32* @y.32
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %37, %originalBBalteredBB
  %46 = getelementptr inbounds [8 x i8], [8 x i8]* %22, i64 0, i64 0, !dbg !1647
  %47 = load i8*, i8** %17, align 8, !dbg !1648
  %48 = call i32 (i8*, i8*, ...) @sprintf(i8* %46, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0), i8* %47) #10, !dbg !1649
  %49 = load i32, i32* @x.31
  %50 = load i32, i32* @y.32
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %75, !dbg !1649

57:                                               ; preds = %33, %30, %10
  %58 = load i32, i32* @x.31
  %59 = load i32, i32* @y.32
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %57, %originalBB1alteredBB
  %66 = getelementptr inbounds [8 x i8], [8 x i8]* %22, i64 0, i64 0, !dbg !1650
  store i8 0, i8* %66, align 1, !dbg !1651
  %67 = load i32, i32* @x.31
  %68 = load i32, i32* @y.32
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %75

75:                                               ; preds = %originalBBpart24, %originalBBpart2
  %76 = load i8, i8* @short_output, align 1, !dbg !1652
  %77 = trunc i8 %76 to i1, !dbg !1652
  br i1 %77, label %102, label %78, !dbg !1654

78:                                               ; preds = %75
  %79 = load i32, i32* @x.31
  %80 = load i32, i32* @y.32
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %78, %originalBB6alteredBB
  %87 = load i8*, i8** %18, align 8, !dbg !1655
  %88 = call i64 @strlen(i8* %87) #13, !dbg !1656
  %89 = icmp ult i64 %88, 12, !dbg !1657
  %90 = load i32, i32* @x.31
  %91 = load i32, i32* @y.32
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %89, label %98, label %102, !dbg !1658

98:                                               ; preds = %originalBBpart28
  %99 = getelementptr inbounds [13 x i8], [13 x i8]* %23, i64 0, i64 0, !dbg !1659
  %100 = load i8*, i8** %18, align 8, !dbg !1660
  %101 = call i32 (i8*, i8*, ...) @sprintf(i8* %99, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), i8* %100) #10, !dbg !1661
  br label %104, !dbg !1661

102:                                              ; preds = %originalBBpart28, %75
  %103 = getelementptr inbounds [13 x i8], [13 x i8]* %23, i64 0, i64 0, !dbg !1662
  store i8 0, i8* %103, align 1, !dbg !1663
  br label %104

104:                                              ; preds = %102, %98
  %105 = load i32, i32* @x.31
  %106 = load i32, i32* @y.32
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %104, %originalBB10alteredBB
  %113 = load i8, i8* @include_exit, align 1, !dbg !1664
  %114 = trunc i8 %113 to i1, !dbg !1664
  %115 = load i32, i32* @x.31
  %116 = load i32, i32* @y.32
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %114, label %123, label %183, !dbg !1664

123:                                              ; preds = %originalBBpart212
  %124 = load i8*, i8** %20, align 8, !dbg !1665
  %125 = call i64 @strlen(i8* %124) #13, !dbg !1665
  %126 = icmp ugt i64 12, %125, !dbg !1665
  br i1 %126, label %127, label %144, !dbg !1665

127:                                              ; preds = %123
  %128 = load i32, i32* @x.31
  %129 = load i32, i32* @y.32
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %127, %originalBB14alteredBB
  %136 = load i32, i32* @x.31
  %137 = load i32, i32* @y.32
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %163, !dbg !1665

144:                                              ; preds = %123
  %145 = load i32, i32* @x.31
  %146 = load i32, i32* @y.32
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %144, %originalBB18alteredBB
  %153 = load i8*, i8** %20, align 8, !dbg !1665
  %154 = call i64 @strlen(i8* %153) #13, !dbg !1665
  %155 = load i32, i32* @x.31
  %156 = load i32, i32* @y.32
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %163, !dbg !1665

163:                                              ; preds = %originalBBpart220, %originalBBpart216
  %164 = phi i64 [ 12, %originalBBpart216 ], [ %154, %originalBBpart220 ], !dbg !1665
  %165 = load i32, i32* @x.31
  %166 = load i32, i32* @y.32
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %163, %originalBB22alteredBB
  %173 = add i64 1, %164, !dbg !1666
  %174 = add i64 %173, 1, !dbg !1667
  %175 = load i32, i32* @x.31
  %176 = load i32, i32* @y.32
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBBpart240, label %originalBB22alteredBB

originalBBpart240:                                ; preds = %originalBB22
  br label %184, !dbg !1664

183:                                              ; preds = %originalBBpart212
  br label %184, !dbg !1664

184:                                              ; preds = %183, %originalBBpart240
  %185 = phi i64 [ %174, %originalBBpart240 ], [ 1, %183 ], !dbg !1664
  %186 = call noalias i8* @xmalloc(i64 %185), !dbg !1668
  store i8* %186, i8** %24, align 8, !dbg !1669
  %187 = load i8, i8* @include_exit, align 1, !dbg !1670
  %188 = trunc i8 %187 to i1, !dbg !1670
  br i1 %188, label %189, label %193, !dbg !1672

189:                                              ; preds = %184
  %190 = load i8*, i8** %24, align 8, !dbg !1673
  %191 = load i8*, i8** %20, align 8, !dbg !1674
  %192 = call i32 (i8*, i8*, ...) @sprintf(i8* %190, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.71, i64 0, i64 0), i8* %191) #10, !dbg !1675
  br label %211, !dbg !1675

193:                                              ; preds = %184
  %194 = load i32, i32* @x.31
  %195 = load i32, i32* @y.32
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %193, %originalBB42alteredBB
  %202 = load i8*, i8** %24, align 8, !dbg !1676
  store i8 0, i8* %202, align 1, !dbg !1677
  %203 = load i32, i32* @x.31
  %204 = load i32, i32* @y.32
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %211

211:                                              ; preds = %originalBBpart244, %189
  %212 = load i32, i32* %11, align 4, !dbg !1678
  %213 = load i8*, i8** %12, align 8, !dbg !1679
  %214 = icmp ne i8* %213, null, !dbg !1679
  br i1 %214, label %215, label %217, !dbg !1679

215:                                              ; preds = %211
  %216 = load i8*, i8** %12, align 8, !dbg !1680
  br label %218, !dbg !1679

217:                                              ; preds = %211
  br label %218, !dbg !1679

218:                                              ; preds = %217, %215
  %219 = phi i8* [ %216, %215 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73, i64 0, i64 0), %217 ], !dbg !1679
  %220 = load i8, i8* @include_mesg, align 1, !dbg !1681
  %221 = trunc i8 %220 to i1, !dbg !1681
  %222 = zext i1 %221 to i64, !dbg !1681
  %223 = select i1 %221, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @print_line.mesg, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !1681
  %224 = load i32, i32* %14, align 4, !dbg !1682
  %225 = load i8*, i8** %15, align 8, !dbg !1683
  %226 = load i32, i32* @time_format_width, align 4, !dbg !1684
  %227 = load i8*, i8** %16, align 8, !dbg !1685
  %228 = getelementptr inbounds [8 x i8], [8 x i8]* %22, i64 0, i64 0, !dbg !1686
  %229 = getelementptr inbounds [13 x i8], [13 x i8]* %23, i64 0, i64 0, !dbg !1687
  %230 = load i8*, i8** %19, align 8, !dbg !1688
  %231 = load i8*, i8** %24, align 8, !dbg !1689
  %232 = call i32 (i8**, i8*, ...) @asprintf(i8** %21, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.72, i64 0, i64 0), i32 %212, i8* %219, i8* %223, i32 %224, i8* %225, i32 %226, i8* %227, i8* %228, i8* %229, i8* %230, i8* %231) #10, !dbg !1690
  store i32 %232, i32* %25, align 4, !dbg !1691
  %233 = load i32, i32* %25, align 4, !dbg !1692
  br label %234, !dbg !1694

234:                                              ; preds = %218
  %collatzVar = alloca i32
  br label %235

235:                                              ; preds = %234
  %236 = load i32, i32* @inVal0
  %237 = icmp sgt i32 %236, 1
  br i1 %237, label %239, label %238

238:                                              ; preds = %235
  store i32 21, i32* %collatzVar
  br label %239

239:                                              ; preds = %238, %235
  %240 = load i8**, i8*** @inVal1
  %241 = getelementptr inbounds i8*, i8** %240, i64 1
  %242 = load i8*, i8** %241
  %controle = call i32 @controle(i8* %242, i32 -1)
  store i32 %controle, i32* %collatzVar
  br label %243

243:                                              ; preds = %293, %289, %239
  %244 = load i32, i32* %collatzVar
  %245 = icmp sgt i32 %244, 1
  br i1 %245, label %246, label %314

246:                                              ; preds = %243
  %247 = load i32, i32* @x.31
  %248 = load i32, i32* @y.32
  %249 = sub i32 %247, 1
  %250 = mul i32 %247, %249
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %252, %253
  br i1 %254, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %246, %originalBB46alteredBB
  %255 = load i32, i32* %collatzVar
  %256 = srem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = load i32, i32* @x.31
  %259 = load i32, i32* @y.32
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %originalBBpart258, label %originalBB46alteredBB

originalBBpart258:                                ; preds = %originalBB46
  br i1 %257, label %266, label %285

266:                                              ; preds = %originalBBpart258
  %267 = load i32, i32* @x.31
  %268 = load i32, i32* @y.32
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %266, %originalBB60alteredBB
  %275 = load i32, i32* %collatzVar
  %276 = sdiv i32 %275, 2
  store i32 %276, i32* %collatzVar
  %277 = load i32, i32* @x.31
  %278 = load i32, i32* @y.32
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBBpart266, label %originalBB60alteredBB

originalBBpart266:                                ; preds = %originalBB60
  br label %289

285:                                              ; preds = %originalBBpart258
  %286 = load i32, i32* %collatzVar
  %287 = mul i32 %286, 3
  %288 = add i32 %287, 1
  store i32 %288, i32* %collatzVar
  br label %289

289:                                              ; preds = %285, %originalBBpart266
  %290 = load i32, i32* %collatzVar
  %291 = sub i32 %233, %290
  %292 = icmp sgt i32 %291, -3
  br i1 %292, label %293, label %243

293:                                              ; preds = %289
  %294 = load i32, i32* %collatzVar
  %295 = add i32 %233, %294
  %296 = icmp slt i32 %295, 1
  br i1 %296, label %297, label %243

297:                                              ; preds = %293
  %298 = load i32, i32* @x.31
  %299 = load i32, i32* @y.32
  %300 = sub i32 %298, 1
  %301 = mul i32 %298, %300
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %303, %304
  br i1 %305, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %297, %originalBB68alteredBB
  call void @xalloc_die() #14, !dbg !1695
  %306 = load i32, i32* @x.31
  %307 = load i32, i32* @y.32
  %308 = sub i32 %306, 1
  %309 = mul i32 %306, %308
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %311, %312
  br i1 %313, label %originalBBpart270, label %originalBB68alteredBB

originalBBpart270:                                ; preds = %originalBB68
  unreachable, !dbg !1695

314:                                              ; preds = %243
  call void @llvm.dbg.declare(metadata i8** %26, metadata !1696, metadata !DIExpression()), !dbg !1698
  %315 = load i8*, i8** %21, align 8, !dbg !1699
  %316 = load i8*, i8** %21, align 8, !dbg !1700
  %317 = call i64 @strlen(i8* %316) #13, !dbg !1701
  %318 = getelementptr inbounds i8, i8* %315, i64 %317, !dbg !1702
  store i8* %318, i8** %26, align 8, !dbg !1698
  br label %319, !dbg !1703

319:                                              ; preds = %325, %314
  %320 = load i8*, i8** %26, align 8, !dbg !1704
  %321 = getelementptr inbounds i8, i8* %320, i32 -1, !dbg !1704
  store i8* %321, i8** %26, align 8, !dbg !1704
  %322 = load i8, i8* %321, align 1, !dbg !1705
  %323 = sext i8 %322 to i32, !dbg !1705
  %324 = icmp eq i32 %323, 32, !dbg !1706
  br i1 %324, label %325, label %326, !dbg !1703

325:                                              ; preds = %319
  br label %319, !dbg !1703, !llvm.loop !1707

326:                                              ; preds = %319
  %327 = load i8*, i8** %26, align 8, !dbg !1709
  %328 = getelementptr inbounds i8, i8* %327, i64 1, !dbg !1710
  store i8 0, i8* %328, align 1, !dbg !1711
  %329 = load i8*, i8** %21, align 8, !dbg !1712
  %330 = call i32 @puts(i8* %329), !dbg !1713
  %331 = load i8*, i8** %21, align 8, !dbg !1714
  call void @free(i8* %331) #10, !dbg !1715
  %332 = load i8*, i8** %24, align 8, !dbg !1716
  call void @free(i8* %332) #10, !dbg !1717
  ret void, !dbg !1718

originalBBalteredBB:                              ; preds = %originalBB, %37
  %333 = getelementptr inbounds [8 x i8], [8 x i8]* %22, i64 0, i64 0, !dbg !1647
  %334 = load i8*, i8** %17, align 8, !dbg !1648
  %335 = call i32 (i8*, i8*, ...) @sprintf(i8* %333, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0), i8* %334) #10, !dbg !1649
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %57
  %336 = getelementptr inbounds [8 x i8], [8 x i8]* %22, i64 0, i64 0, !dbg !1650
  store i8 0, i8* %336, align 1, !dbg !1651
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %78
  %337 = load i8*, i8** %18, align 8, !dbg !1655
  %338 = call i64 @strlen(i8* %337) #13, !dbg !1656
  %339 = icmp ult i64 %338, 12, !dbg !1657
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %104
  %340 = load i8, i8* @include_exit, align 1, !dbg !1664
  %341 = trunc i8 %340 to i1, !dbg !1664
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %127
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %144
  %342 = load i8*, i8** %20, align 8, !dbg !1665
  %343 = call i64 @strlen(i8* %342) #13, !dbg !1665
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %163
  %_ = sub i64 1, %164
  %gen = mul i64 %_, %164
  %_23 = sub i64 1, %164
  %gen24 = mul i64 %_23, %164
  %_25 = shl i64 1, %164
  %_26 = sub i64 1, %164
  %gen27 = mul i64 %_26, %164
  %344 = add i64 1, %164, !dbg !1666
  %_28 = sub i64 0, %344
  %gen29 = add i64 %_28, 1
  %_30 = sub i64 0, %344
  %gen31 = add i64 %_30, 1
  %_32 = sub i64 0, %344
  %gen33 = add i64 %_32, 1
  %_34 = shl i64 %344, 1
  %_35 = sub i64 %344, 1
  %gen36 = mul i64 %_35, 1
  %_37 = shl i64 %344, 1
  %_38 = shl i64 %344, 1
  %345 = add i64 %344, 1, !dbg !1667
  br label %originalBB22

originalBB42alteredBB:                            ; preds = %originalBB42, %193
  %346 = load i8*, i8** %24, align 8, !dbg !1676
  store i8 0, i8* %346, align 1, !dbg !1677
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %246
  %347 = load i32, i32* %collatzVar
  %_47 = sub i32 0, %347
  %gen48 = add i32 %_47, 2
  %_49 = shl i32 %347, 2
  %_50 = shl i32 %347, 2
  %_51 = shl i32 %347, 2
  %_52 = sub i32 0, %347
  %gen53 = add i32 %_52, 2
  %_54 = sub i32 %347, 2
  %gen55 = mul i32 %_54, 2
  %_56 = shl i32 %347, 2
  %348 = srem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  br label %originalBB46

originalBB60alteredBB:                            ; preds = %originalBB60, %266
  %350 = load i32, i32* %collatzVar
  %_61 = shl i32 %350, 2
  %_62 = shl i32 %350, 2
  %_63 = sub i32 %350, 2
  %gen64 = mul i32 %_63, 2
  %351 = sdiv i32 %350, 2
  store i32 %351, i32* %collatzVar
  br label %originalBB60

originalBB68alteredBB:                            ; preds = %originalBB68, %297
  call void @xalloc_die() #14, !dbg !1695
  br label %originalBB68
}

; Function Attrs: nounwind
declare dso_local i32 @asprintf(i8**, i8*, ...) #2

declare dso_local i32 @puts(i8*) #3

; Function Attrs: nounwind
declare dso_local %struct.tm* @localtime(i64*) #2

; Function Attrs: nounwind
declare dso_local i64 @strftime(i8*, i64, i8*, %struct.tm*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @timetostr(i64, i8*) #4 !dbg !1719 {
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !1722, metadata !DIExpression()), !dbg !1723
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1724, metadata !DIExpression()), !dbg !1725
  %5 = load i64, i64* %3, align 8, !dbg !1726
  %6 = load i8*, i8** %4, align 8, !dbg !1727
  %7 = call i8* @imaxtostr(i64 %5, i8* %6), !dbg !1728
  ret i8* %7, !dbg !1729
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @strncat(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @stpcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @stzncpy(i8* noalias, i8* noalias, i64) #4 !dbg !1730 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1735, metadata !DIExpression()), !dbg !1736
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !1737, metadata !DIExpression()), !dbg !1738
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !1739, metadata !DIExpression()), !dbg !1740
  call void @llvm.dbg.declare(metadata i8** %7, metadata !1741, metadata !DIExpression()), !dbg !1742
  %8 = load i8*, i8** %5, align 8, !dbg !1743
  %9 = load i64, i64* %6, align 8, !dbg !1744
  %10 = getelementptr inbounds i8, i8* %8, i64 %9, !dbg !1745
  store i8* %10, i8** %7, align 8, !dbg !1742
  br label %11, !dbg !1746

11:                                               ; preds = %22, %3
  %12 = load i8*, i8** %5, align 8, !dbg !1747
  %13 = load i8*, i8** %7, align 8, !dbg !1748
  %14 = icmp ult i8* %12, %13, !dbg !1749
  br i1 %14, label %15, label %20, !dbg !1750

15:                                               ; preds = %11
  %16 = load i8*, i8** %5, align 8, !dbg !1751
  %17 = load i8, i8* %16, align 1, !dbg !1752
  %18 = sext i8 %17 to i32, !dbg !1752
  %19 = icmp ne i32 %18, 0, !dbg !1750
  br label %20

20:                                               ; preds = %15, %11
  %21 = phi i1 [ false, %11 ], [ %19, %15 ], !dbg !1753
  br i1 %21, label %22, label %28, !dbg !1746

22:                                               ; preds = %20
  %23 = load i8*, i8** %5, align 8, !dbg !1754
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !1754
  store i8* %24, i8** %5, align 8, !dbg !1754
  %25 = load i8, i8* %23, align 1, !dbg !1755
  %26 = load i8*, i8** %4, align 8, !dbg !1756
  %27 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !1756
  store i8* %27, i8** %4, align 8, !dbg !1756
  store i8 %25, i8* %26, align 1, !dbg !1757
  br label %11, !dbg !1746, !llvm.loop !1758

28:                                               ; preds = %20
  %29 = load i32, i32* @x.35
  %30 = load i32, i32* @y.36
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %28, %originalBBalteredBB
  %37 = load i8*, i8** %4, align 8, !dbg !1759
  store i8 0, i8* %37, align 1, !dbg !1760
  %38 = load i8*, i8** %4, align 8, !dbg !1761
  %39 = load i32, i32* @x.35
  %40 = load i32, i32* @y.36
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %38, !dbg !1762

originalBBalteredBB:                              ; preds = %originalBB, %28
  %47 = load i8*, i8** %4, align 8, !dbg !1759
  store i8 0, i8* %47, align 1, !dbg !1760
  %48 = load i8*, i8** %4, align 8, !dbg !1761
  br label %originalBB
}

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_tty_writable(%struct.stat*) #4 !dbg !1763 {
  %2 = alloca %struct.stat*, align 8
  store %struct.stat* %0, %struct.stat** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %2, metadata !1768, metadata !DIExpression()), !dbg !1769
  %3 = load %struct.stat*, %struct.stat** %2, align 8, !dbg !1770
  %4 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !1771
  %5 = load i32, i32* %4, align 8, !dbg !1771
  %6 = and i32 %5, 16, !dbg !1772
  %7 = icmp ne i32 %6, 0, !dbg !1770
  ret i1 %7, !dbg !1773
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @idle_string(i64, i64) #4 !dbg !115 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  store i64 %0, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !1774, metadata !DIExpression()), !dbg !1775
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !1776, metadata !DIExpression()), !dbg !1777
  %7 = load i64, i64* @idle_string.now, align 8, !dbg !1778
  %8 = icmp eq i64 %7, -9223372036854775808, !dbg !1780
  br i1 %8, label %9, label %11, !dbg !1781

9:                                                ; preds = %2
  %10 = call i64 @time(i64* @idle_string.now) #10, !dbg !1782
  br label %11, !dbg !1782

11:                                               ; preds = %9, %2
  %12 = load i64, i64* %5, align 8, !dbg !1783
  %13 = load i64, i64* %4, align 8, !dbg !1785
  %14 = icmp slt i64 %12, %13, !dbg !1786
  br i1 %14, label %15, label %61, !dbg !1787

15:                                               ; preds = %11
  %16 = load i64, i64* @idle_string.now, align 8, !dbg !1788
  %17 = sub nsw i64 %16, 86400, !dbg !1789
  %18 = load i64, i64* %4, align 8, !dbg !1790
  %19 = icmp slt i64 %17, %18, !dbg !1791
  br i1 %19, label %20, label %61, !dbg !1792

20:                                               ; preds = %15
  %21 = load i64, i64* %4, align 8, !dbg !1793
  %22 = load i64, i64* @idle_string.now, align 8, !dbg !1794
  %23 = icmp sle i64 %21, %22, !dbg !1795
  br i1 %23, label %24, label %61, !dbg !1796

24:                                               ; preds = %20
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1797, metadata !DIExpression()), !dbg !1799
  %25 = load i64, i64* @idle_string.now, align 8, !dbg !1800
  %26 = load i64, i64* %4, align 8, !dbg !1801
  %27 = sub nsw i64 %25, %26, !dbg !1802
  %28 = trunc i64 %27 to i32, !dbg !1800
  store i32 %28, i32* %6, align 4, !dbg !1799
  %29 = load i32, i32* %6, align 4, !dbg !1803
  %30 = icmp slt i32 %29, 60, !dbg !1805
  br i1 %30, label %31, label %32, !dbg !1806

31:                                               ; preds = %24
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i64 0, i64 0), i8** %3, align 8, !dbg !1807
  br label %63, !dbg !1807

32:                                               ; preds = %24
  %33 = load i32, i32* @x.39
  %34 = load i32, i32* @y.40
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %32, %originalBBalteredBB
  %41 = load i32, i32* %6, align 4, !dbg !1808
  %42 = sdiv i32 %41, 3600, !dbg !1808
  %43 = icmp slt i32 %42, 24, !dbg !1808
  %44 = load i32, i32* @x.39
  %45 = load i32, i32* @y.40
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %43, label %52, label %53, !dbg !1812

52:                                               ; preds = %originalBBpart2
  br label %54, !dbg !1812

53:                                               ; preds = %originalBBpart2
  call void @__assert_fail(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.81, i64 0, i64 0), i32 205, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__PRETTY_FUNCTION__.idle_string, i64 0, i64 0)) #12, !dbg !1808
  unreachable, !dbg !1808

54:                                               ; preds = %52
  %55 = load i32, i32* %6, align 4, !dbg !1813
  %56 = sdiv i32 %55, 3600, !dbg !1814
  %57 = load i32, i32* %6, align 4, !dbg !1815
  %58 = srem i32 %57, 3600, !dbg !1816
  %59 = sdiv i32 %58, 60, !dbg !1817
  %60 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @idle_string.idle_hhmm, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.82, i64 0, i64 0), i32 %56, i32 %59) #10, !dbg !1818
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @idle_string.idle_hhmm, i64 0, i64 0), i8** %3, align 8, !dbg !1819
  br label %63, !dbg !1819

61:                                               ; preds = %20, %15, %11
  %62 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i64 0, i64 0)) #10, !dbg !1820
  store i8* %62, i8** %3, align 8, !dbg !1821
  br label %63, !dbg !1821

63:                                               ; preds = %61, %54, %31
  %64 = load i8*, i8** %3, align 8, !dbg !1822
  ret i8* %64, !dbg !1822

originalBBalteredBB:                              ; preds = %originalBB, %32
  %65 = load i32, i32* %6, align 4, !dbg !1808
  %_ = sub i32 0, %65
  %gen = add i32 %_, 3600
  %_1 = sub i32 0, %65
  %gen2 = add i32 %_1, 3600
  %_3 = sub i32 0, %65
  %gen4 = add i32 %_3, 3600
  %_5 = shl i32 %65, 3600
  %_6 = shl i32 %65, 3600
  %_7 = sub i32 0, %65
  %gen8 = add i32 %_7, 3600
  %_9 = sub i32 %65, 3600
  %gen10 = mul i32 %_9, 3600
  %_11 = sub i32 %65, 3600
  %gen12 = mul i32 %_11, 3600
  %66 = sdiv i32 %65, 3600, !dbg !1808
  %67 = icmp slt i32 %66, 24, !dbg !1808
  br label %originalBB
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #7

; Function Attrs: nounwind
declare dso_local i64 @time(i64*) #2

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @c_isprint(i32) #4 !dbg !1823 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !1827, metadata !DIExpression()), !dbg !1828
  %4 = load i32, i32* %3, align 4, !dbg !1829
  switch i32 %4, label %22 [
    i32 32, label %5
    i32 48, label %5
    i32 49, label %5
    i32 50, label %5
    i32 51, label %5
    i32 52, label %5
    i32 53, label %5
    i32 54, label %5
    i32 55, label %5
    i32 56, label %5
    i32 57, label %5
    i32 97, label %5
    i32 98, label %5
    i32 99, label %5
    i32 100, label %5
    i32 101, label %5
    i32 102, label %5
    i32 103, label %5
    i32 104, label %5
    i32 105, label %5
    i32 106, label %5
    i32 107, label %5
    i32 108, label %5
    i32 109, label %5
    i32 110, label %5
    i32 111, label %5
    i32 112, label %5
    i32 113, label %5
    i32 114, label %5
    i32 115, label %5
    i32 116, label %5
    i32 117, label %5
    i32 118, label %5
    i32 119, label %5
    i32 120, label %5
    i32 121, label %5
    i32 122, label %5
    i32 33, label %5
    i32 34, label %5
    i32 35, label %5
    i32 36, label %5
    i32 37, label %5
    i32 38, label %5
    i32 39, label %5
    i32 40, label %5
    i32 41, label %5
    i32 42, label %5
    i32 43, label %5
    i32 44, label %5
    i32 45, label %5
    i32 46, label %5
    i32 47, label %5
    i32 58, label %5
    i32 59, label %5
    i32 60, label %5
    i32 61, label %5
    i32 62, label %5
    i32 63, label %5
    i32 64, label %5
    i32 91, label %5
    i32 92, label %5
    i32 93, label %5
    i32 94, label %5
    i32 95, label %5
    i32 96, label %5
    i32 123, label %5
    i32 124, label %5
    i32 125, label %5
    i32 126, label %5
    i32 65, label %5
    i32 66, label %5
    i32 67, label %5
    i32 68, label %5
    i32 69, label %5
    i32 70, label %5
    i32 71, label %5
    i32 72, label %5
    i32 73, label %5
    i32 74, label %5
    i32 75, label %5
    i32 76, label %5
    i32 77, label %5
    i32 78, label %5
    i32 79, label %5
    i32 80, label %5
    i32 81, label %5
    i32 82, label %5
    i32 83, label %5
    i32 84, label %5
    i32 85, label %5
    i32 86, label %5
    i32 87, label %5
    i32 88, label %5
    i32 89, label %5
    i32 90, label %5
  ], !dbg !1830

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %6 = load i32, i32* @x.41
  %7 = load i32, i32* @y.42
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  store i1 true, i1* %2, align 1, !dbg !1831
  %14 = load i32, i32* @x.41
  %15 = load i32, i32* @y.42
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %23, !dbg !1831

22:                                               ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !1833
  br label %23, !dbg !1833

23:                                               ; preds = %22, %originalBBpart2
  %24 = load i1, i1* %2, align 1, !dbg !1834
  ret i1 %24, !dbg !1834

originalBBalteredBB:                              ; preds = %originalBB, %5
  store i1 true, i1* %2, align 1, !dbg !1831
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @c_tolower(i32) #4 !dbg !1835 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !1838, metadata !DIExpression()), !dbg !1839
  %4 = load i32, i32* %3, align 4, !dbg !1840
  switch i32 %4, label %9 [
    i32 65, label %5
    i32 66, label %5
    i32 67, label %5
    i32 68, label %5
    i32 69, label %5
    i32 70, label %5
    i32 71, label %5
    i32 72, label %5
    i32 73, label %5
    i32 74, label %5
    i32 75, label %5
    i32 76, label %5
    i32 77, label %5
    i32 78, label %5
    i32 79, label %5
    i32 80, label %5
    i32 81, label %5
    i32 82, label %5
    i32 83, label %5
    i32 84, label %5
    i32 85, label %5
    i32 86, label %5
    i32 87, label %5
    i32 88, label %5
    i32 89, label %5
    i32 90, label %5
  ], !dbg !1841

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %6 = load i32, i32* %3, align 4, !dbg !1842
  %7 = sub nsw i32 %6, 65, !dbg !1844
  %8 = add nsw i32 %7, 97, !dbg !1845
  store i32 %8, i32* %2, align 4, !dbg !1846
  br label %11, !dbg !1846

9:                                                ; preds = %1
  %10 = load i32, i32* %3, align 4, !dbg !1847
  store i32 %10, i32* %2, align 4, !dbg !1848
  br label %11, !dbg !1848

11:                                               ; preds = %9, %5
  %12 = load i32, i32* %2, align 4, !dbg !1849
  ret i32 %12, !dbg !1849
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @canon_host(i8*) #4 !dbg !1850 {
  %2 = load i32, i32* @x.45
  %3 = load i32, i32* @y.46
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1853, metadata !DIExpression()), !dbg !1854
  %11 = load i8*, i8** %10, align 8, !dbg !1855
  %12 = call noalias i8* @canon_host_r(i8* %11, i32* @last_cherror), !dbg !1856
  %13 = load i32, i32* @x.45
  %14 = load i32, i32* @y.46
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !1857

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i8*, align 8
  store i8* %0, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !1858, metadata !DIExpression()), !dbg !1854
  %22 = load i8*, i8** %21, align 8, !dbg !1855
  %23 = call noalias i8* @canon_host_r(i8* %22, i32* @last_cherror), !dbg !1856
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @canon_host_r(i8*, i32*) #4 !dbg !165 {
  %3 = alloca i8*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.addrinfo*, align 8
  %7 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !1883, metadata !DIExpression()), !dbg !1884
  store i32* %1, i32** %4, align 8
  call void @llvm.dbg.declare(metadata i32** %4, metadata !1885, metadata !DIExpression()), !dbg !1886
  call void @llvm.dbg.declare(metadata i8** %5, metadata !1887, metadata !DIExpression()), !dbg !1888
  store i8* null, i8** %5, align 8, !dbg !1888
  call void @llvm.dbg.declare(metadata %struct.addrinfo** %6, metadata !1889, metadata !DIExpression()), !dbg !1890
  store %struct.addrinfo* null, %struct.addrinfo** %6, align 8, !dbg !1890
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1891, metadata !DIExpression()), !dbg !1892
  store i32 2, i32* getelementptr inbounds (%struct.addrinfo, %struct.addrinfo* @canon_host_r.hints, i32 0, i32 0), align 8, !dbg !1893
  %8 = load i8*, i8** %3, align 8, !dbg !1894
  %9 = call i32 @getaddrinfo(i8* %8, i8* null, %struct.addrinfo* @canon_host_r.hints, %struct.addrinfo** %6), !dbg !1895
  store i32 %9, i32* %7, align 4, !dbg !1896
  %10 = load i32, i32* %7, align 4, !dbg !1897
  %11 = icmp ne i32 %10, 0, !dbg !1897
  br i1 %11, label %83, label %12, !dbg !1899

12:                                               ; preds = %2
  %13 = load i32, i32* @x.47
  %14 = load i32, i32* @y.48
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = load %struct.addrinfo*, %struct.addrinfo** %6, align 8, !dbg !1900
  %22 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %21, i32 0, i32 6, !dbg !1902
  %23 = load i8*, i8** %22, align 8, !dbg !1902
  %24 = icmp ne i8* %23, null, !dbg !1900
  %25 = load i32, i32* @x.47
  %26 = load i32, i32* @y.48
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %24, label %33, label %37, !dbg !1900

33:                                               ; preds = %originalBBpart2
  %34 = load %struct.addrinfo*, %struct.addrinfo** %6, align 8, !dbg !1903
  %35 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %34, i32 0, i32 6, !dbg !1904
  %36 = load i8*, i8** %35, align 8, !dbg !1904
  br label %39, !dbg !1900

37:                                               ; preds = %originalBBpart2
  %38 = load i8*, i8** %3, align 8, !dbg !1905
  br label %39, !dbg !1900

39:                                               ; preds = %37, %33
  %40 = phi i8* [ %36, %33 ], [ %38, %37 ], !dbg !1900
  %41 = load i32, i32* @x.47
  %42 = load i32, i32* @y.48
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %39, %originalBB1alteredBB
  %49 = call noalias i8* @strdup(i8* %40) #10, !dbg !1906
  store i8* %49, i8** %5, align 8, !dbg !1907
  %50 = load i8*, i8** %5, align 8, !dbg !1908
  %51 = icmp ne i8* %50, null, !dbg !1908
  %52 = load i32, i32* @x.47
  %53 = load i32, i32* @y.48
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %51, label %81, label %60, !dbg !1910

60:                                               ; preds = %originalBBpart24
  %61 = load i32, i32* @x.47
  %62 = load i32, i32* @y.48
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %60, %originalBB6alteredBB
  %69 = load i32*, i32** %4, align 8, !dbg !1911
  %70 = icmp ne i32* %69, null, !dbg !1911
  %71 = load i32, i32* @x.47
  %72 = load i32, i32* @y.48
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %70, label %79, label %81, !dbg !1912

79:                                               ; preds = %originalBBpart28
  %80 = load i32*, i32** %4, align 8, !dbg !1913
  store i32 -10, i32* %80, align 4, !dbg !1914
  br label %81, !dbg !1915

81:                                               ; preds = %79, %originalBBpart28, %originalBBpart24
  %82 = load %struct.addrinfo*, %struct.addrinfo** %6, align 8, !dbg !1916
  call void @freeaddrinfo(%struct.addrinfo* %82) #10, !dbg !1917
  br label %90, !dbg !1918

83:                                               ; preds = %2
  %84 = load i32*, i32** %4, align 8, !dbg !1919
  %85 = icmp ne i32* %84, null, !dbg !1919
  br i1 %85, label %86, label %89, !dbg !1921

86:                                               ; preds = %83
  %87 = load i32, i32* %7, align 4, !dbg !1922
  %88 = load i32*, i32** %4, align 8, !dbg !1923
  store i32 %87, i32* %88, align 4, !dbg !1924
  br label %89, !dbg !1925

89:                                               ; preds = %86, %83
  br label %90

90:                                               ; preds = %89, %81
  %91 = load i32, i32* @x.47
  %92 = load i32, i32* @y.48
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %90, %originalBB10alteredBB
  %99 = load i8*, i8** %5, align 8, !dbg !1926
  %100 = load i32, i32* @x.47
  %101 = load i32, i32* @y.48
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret i8* %99, !dbg !1927

originalBBalteredBB:                              ; preds = %originalBB, %12
  %108 = load %struct.addrinfo*, %struct.addrinfo** %6, align 8, !dbg !1900
  %109 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %108, i32 0, i32 6, !dbg !1902
  %110 = load i8*, i8** %109, align 8, !dbg !1902
  %111 = icmp ne i8* %110, null, !dbg !1900
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  %112 = call noalias i8* @strdup(i8* %40) #10, !dbg !1906
  store i8* %112, i8** %5, align 8, !dbg !1907
  %113 = load i8*, i8** %5, align 8, !dbg !1908
  %114 = icmp ne i8* %113, null, !dbg !1908
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %60
  %115 = load i32*, i32** %4, align 8, !dbg !1911
  %116 = icmp ne i32* %115, null, !dbg !1911
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %90
  %117 = load i8*, i8** %5, align 8, !dbg !1926
  br label %originalBB10
}

declare dso_local i32 @getaddrinfo(i8*, i8*, %struct.addrinfo*, %struct.addrinfo**) #3

; Function Attrs: nounwind
declare dso_local noalias i8* @strdup(i8*) #2

; Function Attrs: nounwind
declare dso_local void @freeaddrinfo(%struct.addrinfo*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @close_stdout() #4 !dbg !1928 {
  %1 = alloca i8*, align 8
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1929
  %3 = call i32 @close_stream(%struct._IO_FILE* %2), !dbg !1931
  %4 = icmp ne i32 %3, 0, !dbg !1932
  br i1 %4, label %5, label %28, !dbg !1933

5:                                                ; preds = %0
  %6 = load i8, i8* @ignore_EPIPE, align 1, !dbg !1934
  %7 = trunc i8 %6 to i1, !dbg !1934
  br i1 %7, label %8, label %12, !dbg !1935

8:                                                ; preds = %5
  %9 = call i32* @__errno_location() #15, !dbg !1936
  %10 = load i32, i32* %9, align 4, !dbg !1936
  %11 = icmp eq i32 %10, 32, !dbg !1937
  br i1 %11, label %28, label %12, !dbg !1938

12:                                               ; preds = %8, %5
  call void @llvm.dbg.declare(metadata i8** %1, metadata !1939, metadata !DIExpression()), !dbg !1941
  %13 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.102, i64 0, i64 0)) #10, !dbg !1942
  store i8* %13, i8** %1, align 8, !dbg !1941
  %14 = load i8*, i8** @file_name, align 8, !dbg !1943
  %15 = icmp ne i8* %14, null, !dbg !1943
  br i1 %15, label %16, label %22, !dbg !1945

16:                                               ; preds = %12
  %17 = call i32* @__errno_location() #15, !dbg !1946
  %18 = load i32, i32* %17, align 4, !dbg !1946
  %19 = load i8*, i8** @file_name, align 8, !dbg !1947
  %20 = call i8* @quotearg_colon(i8* %19), !dbg !1948
  %21 = load i8*, i8** %1, align 8, !dbg !1949
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %18, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.103, i64 0, i64 0), i8* %20, i8* %21), !dbg !1950
  br label %26, !dbg !1950

22:                                               ; preds = %12
  %23 = call i32* @__errno_location() #15, !dbg !1951
  %24 = load i32, i32* %23, align 4, !dbg !1951
  %25 = load i8*, i8** %1, align 8, !dbg !1952
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.104, i64 0, i64 0), i8* %25), !dbg !1953
  br label %26

26:                                               ; preds = %22, %16
  %27 = load volatile i32, i32* @exit_failure, align 4, !dbg !1954
  call void @_exit(i32 %27) #14, !dbg !1955
  unreachable, !dbg !1955

28:                                               ; preds = %8, %0
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1956
  %30 = call i32 @close_stream(%struct._IO_FILE* %29), !dbg !1958
  %31 = icmp ne i32 %30, 0, !dbg !1959
  br i1 %31, label %32, label %50, !dbg !1960

32:                                               ; preds = %28
  %33 = load i32, i32* @x.49
  %34 = load i32, i32* @y.50
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %32, %originalBBalteredBB
  %41 = load volatile i32, i32* @exit_failure, align 4, !dbg !1961
  call void @_exit(i32 %41) #14, !dbg !1962
  %42 = load i32, i32* @x.49
  %43 = load i32, i32* @y.50
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable, !dbg !1962

50:                                               ; preds = %28
  %51 = load i32, i32* @x.49
  %52 = load i32, i32* @y.50
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %50, %originalBB1alteredBB
  %59 = load i32, i32* @x.49
  %60 = load i32, i32* @y.50
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void, !dbg !1963

originalBBalteredBB:                              ; preds = %originalBB, %32
  %67 = load volatile i32, i32* @exit_failure, align 4, !dbg !1961
  call void @_exit(i32 %67) #14, !dbg !1962
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %50
  br label %originalBB1
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #9

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @hard_locale(i32) #4 !dbg !1964 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  %4 = alloca [257 x i8], align 16
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !1966, metadata !DIExpression()), !dbg !1967
  call void @llvm.dbg.declare(metadata [257 x i8]* %4, metadata !1968, metadata !DIExpression()), !dbg !1969
  %5 = load i32, i32* %3, align 4, !dbg !1970
  %6 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !1972
  %7 = call i32 @setlocale_null_r(i32 %5, i8* %6, i64 257), !dbg !1973
  %8 = icmp ne i32 %7, 0, !dbg !1973
  br i1 %8, label %9, label %26, !dbg !1974

9:                                                ; preds = %1
  %10 = load i32, i32* @x.51
  %11 = load i32, i32* @y.52
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  store i1 false, i1* %2, align 1, !dbg !1975
  %18 = load i32, i32* @x.51
  %19 = load i32, i32* @y.52
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %148, !dbg !1975

26:                                               ; preds = %1
  %27 = load i32, i32* @x.51
  %28 = load i32, i32* @y.52
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !1976
  %36 = call i32 @strcmp(i8* %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i64 0, i64 0)) #13, !dbg !1977
  %37 = load i32, i32* @x.51
  %38 = load i32, i32* @y.52
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %45, !dbg !1978

45:                                               ; preds = %originalBBpart24
  %collatzVar = alloca i32
  br label %46

46:                                               ; preds = %45
  %47 = load i32, i32* @inVal0
  %48 = icmp sgt i32 %47, 1
  br i1 %48, label %66, label %49

49:                                               ; preds = %46
  %50 = load i32, i32* @x.51
  %51 = load i32, i32* @y.52
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %49, %originalBB6alteredBB
  store i32 3, i32* %collatzVar
  %58 = load i32, i32* @x.51
  %59 = load i32, i32* @y.52
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %66

66:                                               ; preds = %originalBBpart28, %46
  %67 = load i8**, i8*** @inVal1
  %68 = getelementptr inbounds i8*, i8** %67, i64 1
  %69 = load i8*, i8** %68
  %70 = add i32 0, -3
  %controle = call i32 @controle(i8* %69, i32 %70)
  store i32 %controle, i32* %collatzVar
  br label %71

71:                                               ; preds = %originalBBpart240, %117, %66
  %72 = load i32, i32* @x.51
  %73 = load i32, i32* @y.52
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %71, %originalBB10alteredBB
  %80 = load i32, i32* %collatzVar
  %81 = icmp sgt i32 %80, 1
  %82 = load i32, i32* @x.51
  %83 = load i32, i32* @y.52
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %81, label %90, label %141

90:                                               ; preds = %originalBBpart212
  %91 = load i32, i32* %collatzVar
  %92 = srem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %90
  %95 = load i32, i32* %collatzVar
  %96 = sdiv i32 %95, 2
  store i32 %96, i32* %collatzVar
  br label %117

97:                                               ; preds = %90
  %98 = load i32, i32* @x.51
  %99 = load i32, i32* @y.52
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %97, %originalBB14alteredBB
  %106 = load i32, i32* %collatzVar
  %107 = mul i32 %106, 3
  %108 = add i32 %107, 1
  store i32 %108, i32* %collatzVar
  %109 = load i32, i32* @x.51
  %110 = load i32, i32* @y.52
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart227, label %originalBB14alteredBB

originalBBpart227:                                ; preds = %originalBB14
  br label %117

117:                                              ; preds = %originalBBpart227, %94
  %118 = load i32, i32* %collatzVar
  %119 = sub i32 %36, %118
  %120 = icmp sgt i32 %119, -2
  br i1 %120, label %121, label %71

121:                                              ; preds = %117
  %122 = load i32, i32* @x.51
  %123 = load i32, i32* @y.52
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %121, %originalBB29alteredBB
  %130 = load i32, i32* %collatzVar
  %131 = add i32 %36, %130
  %132 = icmp slt i32 %131, 2
  %133 = load i32, i32* @x.51
  %134 = load i32, i32* @y.52
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart240, label %originalBB29alteredBB

originalBBpart240:                                ; preds = %originalBB29
  br i1 %132, label %145, label %71

141:                                              ; preds = %originalBBpart212
  %142 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !1979
  %143 = call i32 @strcmp(i8* %142, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.110, i64 0, i64 0)) #13, !dbg !1980
  %144 = icmp eq i32 %143, 0, !dbg !1981
  br label %145, !dbg !1982

145:                                              ; preds = %141, %originalBBpart240
  %146 = phi i1 [ true, %originalBBpart240 ], [ %144, %141 ]
  %147 = xor i1 %146, true, !dbg !1983
  store i1 %147, i1* %2, align 1, !dbg !1984
  br label %148, !dbg !1984

148:                                              ; preds = %145, %originalBBpart2
  %149 = load i1, i1* %2, align 1, !dbg !1985
  ret i1 %149, !dbg !1985

originalBBalteredBB:                              ; preds = %originalBB, %9
  store i1 false, i1* %2, align 1, !dbg !1975
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %150 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !1976
  %151 = call i32 @strcmp(i8* %150, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i64 0, i64 0)) #13, !dbg !1977
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  store i32 3, i32* %collatzVar
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %71
  %152 = load i32, i32* %collatzVar
  %153 = icmp sgt i32 %152, 1
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %97
  %154 = load i32, i32* %collatzVar
  %_ = sub i32 %154, 3
  %gen = mul i32 %_, 3
  %_15 = sub i32 %154, 3
  %gen16 = mul i32 %_15, 3
  %_17 = shl i32 %154, 3
  %_18 = sub i32 0, %154
  %gen19 = add i32 %_18, 3
  %_20 = sub i32 0, %154
  %gen21 = add i32 %_20, 3
  %155 = mul i32 %154, 3
  %_22 = sub i32 %155, 1
  %gen23 = mul i32 %_22, 1
  %_24 = shl i32 %155, 1
  %_25 = shl i32 %155, 1
  %156 = add i32 %155, 1
  store i32 %156, i32* %collatzVar
  br label %originalBB14

originalBB29alteredBB:                            ; preds = %originalBB29, %121
  %157 = load i32, i32* %collatzVar
  %_30 = shl i32 %36, %157
  %_31 = sub i32 %36, %157
  %gen32 = mul i32 %_31, %157
  %_33 = shl i32 %36, %157
  %_34 = sub i32 %36, %157
  %gen35 = mul i32 %_34, %157
  %_36 = shl i32 %36, %157
  %_37 = sub i32 %36, %157
  %gen38 = mul i32 %_37, %157
  %158 = add i32 %36, %157
  %159 = icmp slt i32 %158, 2
  br label %originalBB29
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @imaxtostr(i64, i8*) #4 !dbg !1986 {
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !1990, metadata !DIExpression()), !dbg !1991
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1992, metadata !DIExpression()), !dbg !1993
  call void @llvm.dbg.declare(metadata i8** %5, metadata !1994, metadata !DIExpression()), !dbg !1995
  %6 = load i8*, i8** %4, align 8, !dbg !1996
  %7 = getelementptr inbounds i8, i8* %6, i64 20, !dbg !1997
  store i8* %7, i8** %5, align 8, !dbg !1995
  %8 = load i8*, i8** %5, align 8, !dbg !1998
  store i8 0, i8* %8, align 1, !dbg !1999
  %9 = load i64, i64* %3, align 8, !dbg !2000
  %10 = icmp slt i64 %9, 0, !dbg !2002
  br i1 %10, label %11, label %74, !dbg !2003

11:                                               ; preds = %2
  %12 = load i32, i32* @x.53
  %13 = load i32, i32* @y.54
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i32, i32* @x.53
  %21 = load i32, i32* @y.54
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %28, !dbg !2004

28:                                               ; preds = %originalBBpart210, %originalBBpart2
  %29 = load i64, i64* %3, align 8, !dbg !2006
  %30 = srem i64 %29, 10, !dbg !2007
  %31 = sub nsw i64 48, %30, !dbg !2008
  %32 = trunc i64 %31 to i8, !dbg !2009
  %33 = load i8*, i8** %5, align 8, !dbg !2010
  %34 = getelementptr inbounds i8, i8* %33, i32 -1, !dbg !2010
  store i8* %34, i8** %5, align 8, !dbg !2010
  store i8 %32, i8* %34, align 1, !dbg !2011
  br label %35, !dbg !2012

35:                                               ; preds = %28
  %36 = load i32, i32* @x.53
  %37 = load i32, i32* @y.54
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %35, %originalBB1alteredBB
  %44 = load i64, i64* %3, align 8, !dbg !2013
  %45 = sdiv i64 %44, 10, !dbg !2013
  store i64 %45, i64* %3, align 8, !dbg !2013
  %46 = icmp ne i64 %45, 0, !dbg !2014
  %47 = load i32, i32* @x.53
  %48 = load i32, i32* @y.54
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart210, label %originalBB1alteredBB

originalBBpart210:                                ; preds = %originalBB1
  br i1 %46, label %28, label %55, !dbg !2012, !llvm.loop !2015

55:                                               ; preds = %originalBBpart210
  %56 = load i32, i32* @x.53
  %57 = load i32, i32* @y.54
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB12, label %originalBB12alteredBB

originalBB12:                                     ; preds = %55, %originalBB12alteredBB
  %64 = load i8*, i8** %5, align 8, !dbg !2017
  %65 = getelementptr inbounds i8, i8* %64, i32 -1, !dbg !2017
  store i8* %65, i8** %5, align 8, !dbg !2017
  store i8 45, i8* %65, align 1, !dbg !2018
  %66 = load i32, i32* @x.53
  %67 = load i32, i32* @y.54
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart214, label %originalBB12alteredBB

originalBBpart214:                                ; preds = %originalBB12
  br label %119, !dbg !2019

74:                                               ; preds = %2
  %75 = load i32, i32* @x.53
  %76 = load i32, i32* @y.54
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %74, %originalBB16alteredBB
  %83 = load i32, i32* @x.53
  %84 = load i32, i32* @y.54
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  br label %91, !dbg !2020

91:                                               ; preds = %98, %originalBBpart218
  %92 = load i64, i64* %3, align 8, !dbg !2022
  %93 = srem i64 %92, 10, !dbg !2023
  %94 = add nsw i64 48, %93, !dbg !2024
  %95 = trunc i64 %94 to i8, !dbg !2025
  %96 = load i8*, i8** %5, align 8, !dbg !2026
  %97 = getelementptr inbounds i8, i8* %96, i32 -1, !dbg !2026
  store i8* %97, i8** %5, align 8, !dbg !2026
  store i8 %95, i8* %97, align 1, !dbg !2027
  br label %98, !dbg !2028

98:                                               ; preds = %91
  %99 = load i64, i64* %3, align 8, !dbg !2029
  %100 = sdiv i64 %99, 10, !dbg !2029
  store i64 %100, i64* %3, align 8, !dbg !2029
  %101 = icmp ne i64 %100, 0, !dbg !2030
  br i1 %101, label %91, label %102, !dbg !2028, !llvm.loop !2031

102:                                              ; preds = %98
  %103 = load i32, i32* @x.53
  %104 = load i32, i32* @y.54
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %102, %originalBB20alteredBB
  %111 = load i32, i32* @x.53
  %112 = load i32, i32* @y.54
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart222, label %originalBB20alteredBB

originalBBpart222:                                ; preds = %originalBB20
  br label %119

119:                                              ; preds = %originalBBpart222, %originalBBpart214
  %120 = load i8*, i8** %5, align 8, !dbg !2033
  ret i8* %120, !dbg !2034

originalBBalteredBB:                              ; preds = %originalBB, %11
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %35
  %121 = load i64, i64* %3, align 8, !dbg !2013
  %_ = sub i64 0, %121
  %gen = add i64 %_, 10
  %_2 = shl i64 %121, 10
  %_3 = shl i64 %121, 10
  %_4 = sub i64 0, %121
  %gen5 = add i64 %_4, 10
  %_6 = sub i64 0, %121
  %gen7 = add i64 %_6, 10
  %_8 = shl i64 %121, 10
  %122 = sdiv i64 %121, 10, !dbg !2013
  store i64 %122, i64* %3, align 8, !dbg !2013
  %123 = icmp ne i64 %122, 0, !dbg !2014
  br label %originalBB1

originalBB12alteredBB:                            ; preds = %originalBB12, %55
  %124 = load i8*, i8** %5, align 8, !dbg !2017
  %125 = getelementptr inbounds i8, i8* %124, i32 -1, !dbg !2017
  store i8* %125, i8** %5, align 8, !dbg !2017
  store i8 45, i8* %125, align 1, !dbg !2018
  br label %originalBB12

originalBB16alteredBB:                            ; preds = %originalBB16, %74
  br label %originalBB16

originalBB20alteredBB:                            ; preds = %originalBB20, %102
  br label %originalBB20
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_program_name(i8*) #4 !dbg !2035 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !2036, metadata !DIExpression()), !dbg !2037
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2038, metadata !DIExpression()), !dbg !2039
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2040, metadata !DIExpression()), !dbg !2041
  %5 = load i8*, i8** %2, align 8, !dbg !2042
  %6 = icmp eq i8* %5, null, !dbg !2044
  br i1 %6, label %7, label %26, !dbg !2045

7:                                                ; preds = %1
  %8 = load i32, i32* @x.55
  %9 = load i32, i32* @y.56
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %7, %originalBBalteredBB
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2046
  %17 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.115, i64 0, i64 0), %struct._IO_FILE* %16), !dbg !2048
  call void @abort() #12, !dbg !2049
  %18 = load i32, i32* @x.55
  %19 = load i32, i32* @y.56
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable, !dbg !2049

26:                                               ; preds = %1
  %27 = load i8*, i8** %2, align 8, !dbg !2050
  %28 = call i8* @strrchr(i8* %27, i32 47) #13, !dbg !2051
  store i8* %28, i8** %3, align 8, !dbg !2052
  %29 = load i8*, i8** %3, align 8, !dbg !2053
  %30 = icmp ne i8* %29, null, !dbg !2054
  br i1 %30, label %31, label %34, !dbg !2053

31:                                               ; preds = %26
  %32 = load i8*, i8** %3, align 8, !dbg !2055
  %33 = getelementptr inbounds i8, i8* %32, i64 1, !dbg !2056
  br label %36, !dbg !2053

34:                                               ; preds = %26
  %35 = load i8*, i8** %2, align 8, !dbg !2057
  br label %36, !dbg !2053

36:                                               ; preds = %34, %31
  %37 = phi i8* [ %33, %31 ], [ %35, %34 ], !dbg !2053
  %38 = load i32, i32* @x.55
  %39 = load i32, i32* @y.56
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %36, %originalBB1alteredBB
  store i8* %37, i8** %4, align 8, !dbg !2058
  %46 = load i8*, i8** %4, align 8, !dbg !2059
  %47 = load i8*, i8** %2, align 8, !dbg !2061
  %48 = ptrtoint i8* %46 to i64, !dbg !2062
  %49 = ptrtoint i8* %47 to i64, !dbg !2062
  %50 = sub i64 %48, %49, !dbg !2062
  %51 = icmp sge i64 %50, 7, !dbg !2063
  %52 = load i32, i32* @x.55
  %53 = load i32, i32* @y.56
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart210, label %originalBB1alteredBB

originalBBpart210:                                ; preds = %originalBB1
  br i1 %51, label %60, label %107, !dbg !2064

60:                                               ; preds = %originalBBpart210
  %61 = load i8*, i8** %4, align 8, !dbg !2065
  %62 = getelementptr inbounds i8, i8* %61, i64 -7, !dbg !2066
  %63 = call i32 @strncmp(i8* %62, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.116, i64 0, i64 0), i64 7) #13, !dbg !2067
  %64 = icmp eq i32 %63, 0, !dbg !2068
  br i1 %64, label %65, label %107, !dbg !2069

65:                                               ; preds = %60
  %66 = load i8*, i8** %4, align 8, !dbg !2070
  store i8* %66, i8** %2, align 8, !dbg !2072
  %67 = load i8*, i8** %4, align 8, !dbg !2073
  %68 = call i32 @strncmp(i8* %67, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.117, i64 0, i64 0), i64 3) #13, !dbg !2075
  %69 = icmp eq i32 %68, 0, !dbg !2076
  br i1 %69, label %70, label %90, !dbg !2077

70:                                               ; preds = %65
  %71 = load i32, i32* @x.55
  %72 = load i32, i32* @y.56
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB12, label %originalBB12alteredBB

originalBB12:                                     ; preds = %70, %originalBB12alteredBB
  %79 = load i8*, i8** %4, align 8, !dbg !2078
  %80 = getelementptr inbounds i8, i8* %79, i64 3, !dbg !2080
  store i8* %80, i8** %2, align 8, !dbg !2081
  %81 = load i8*, i8** %2, align 8, !dbg !2082
  store i8* %81, i8** @program_invocation_short_name, align 8, !dbg !2083
  %82 = load i32, i32* @x.55
  %83 = load i32, i32* @y.56
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart214, label %originalBB12alteredBB

originalBBpart214:                                ; preds = %originalBB12
  br label %90, !dbg !2084

90:                                               ; preds = %originalBBpart214, %65
  %91 = load i32, i32* @x.55
  %92 = load i32, i32* @y.56
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %90, %originalBB16alteredBB
  %99 = load i32, i32* @x.55
  %100 = load i32, i32* @y.56
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  br label %107, !dbg !2085

107:                                              ; preds = %originalBBpart218, %60, %originalBBpart210
  %108 = load i8*, i8** %2, align 8, !dbg !2086
  store i8* %108, i8** @program_name, align 8, !dbg !2087
  %109 = load i8*, i8** %2, align 8, !dbg !2088
  store i8* %109, i8** @program_invocation_name, align 8, !dbg !2089
  ret void, !dbg !2090

originalBBalteredBB:                              ; preds = %originalBB, %7
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2046
  %111 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.115, i64 0, i64 0), %struct._IO_FILE* %110), !dbg !2048
  call void @abort() #12, !dbg !2049
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %36
  store i8* %37, i8** %4, align 8, !dbg !2058
  %112 = load i8*, i8** %4, align 8, !dbg !2059
  %113 = load i8*, i8** %2, align 8, !dbg !2061
  %114 = ptrtoint i8* %112 to i64, !dbg !2062
  %115 = ptrtoint i8* %113 to i64, !dbg !2062
  %_ = shl i64 %114, %115
  %_2 = sub i64 %114, %115
  %gen = mul i64 %_2, %115
  %_3 = sub i64 %114, %115
  %gen4 = mul i64 %_3, %115
  %_5 = sub i64 %114, %115
  %gen6 = mul i64 %_5, %115
  %_7 = sub i64 0, %114
  %gen8 = add i64 %_7, %115
  %116 = sub i64 %114, %115, !dbg !2062
  %117 = icmp sge i64 %116, 7, !dbg !2063
  br label %originalBB1

originalBB12alteredBB:                            ; preds = %originalBB12, %70
  %118 = load i8*, i8** %4, align 8, !dbg !2078
  %119 = getelementptr inbounds i8, i8* %118, i64 3, !dbg !2080
  store i8* %119, i8** %2, align 8, !dbg !2081
  %120 = load i8*, i8** %2, align 8, !dbg !2082
  store i8* %120, i8** @program_invocation_short_name, align 8, !dbg !2083
  br label %originalBB12

originalBB16alteredBB:                            ; preds = %originalBB16, %90
  br label %originalBB16
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #5

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_char_quoting(%struct.quoting_options*, i8 signext, i32) #4 !dbg !2091 {
  %4 = alloca %struct.quoting_options*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %4, metadata !2095, metadata !DIExpression()), !dbg !2096
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !2097, metadata !DIExpression()), !dbg !2098
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !2099, metadata !DIExpression()), !dbg !2100
  call void @llvm.dbg.declare(metadata i8* %7, metadata !2101, metadata !DIExpression()), !dbg !2102
  %11 = load i8, i8* %5, align 1, !dbg !2103
  store i8 %11, i8* %7, align 1, !dbg !2102
  call void @llvm.dbg.declare(metadata i32** %8, metadata !2104, metadata !DIExpression()), !dbg !2106
  %12 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !2107
  %13 = icmp ne %struct.quoting_options* %12, null, !dbg !2107
  br i1 %13, label %14, label %16, !dbg !2107

14:                                               ; preds = %3
  %15 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !2108
  br label %33, !dbg !2107

16:                                               ; preds = %3
  %17 = load i32, i32* @x.57
  %18 = load i32, i32* @y.58
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load i32, i32* @x.57
  %26 = load i32, i32* @y.58
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %33, !dbg !2107

33:                                               ; preds = %originalBBpart2, %14
  %34 = phi %struct.quoting_options* [ %15, %14 ], [ @default_quoting_options, %originalBBpart2 ], !dbg !2107
  %35 = load i32, i32* @x.57
  %36 = load i32, i32* @y.58
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %33, %originalBB1alteredBB
  %43 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %34, i32 0, i32 2, !dbg !2109
  %44 = getelementptr inbounds [8 x i32], [8 x i32]* %43, i64 0, i64 0, !dbg !2110
  %45 = load i8, i8* %7, align 1, !dbg !2111
  %46 = zext i8 %45 to i64, !dbg !2111
  %47 = udiv i64 %46, 32, !dbg !2112
  %48 = getelementptr inbounds i32, i32* %44, i64 %47, !dbg !2113
  store i32* %48, i32** %8, align 8, !dbg !2106
  call void @llvm.dbg.declare(metadata i32* %9, metadata !2114, metadata !DIExpression()), !dbg !2115
  %49 = load i8, i8* %7, align 1, !dbg !2116
  %50 = zext i8 %49 to i64, !dbg !2116
  %51 = urem i64 %50, 32, !dbg !2117
  %52 = trunc i64 %51 to i32, !dbg !2116
  store i32 %52, i32* %9, align 4, !dbg !2115
  call void @llvm.dbg.declare(metadata i32* %10, metadata !2118, metadata !DIExpression()), !dbg !2119
  %53 = load i32*, i32** %8, align 8, !dbg !2120
  %54 = load i32, i32* %53, align 4, !dbg !2121
  %55 = load i32, i32* %9, align 4, !dbg !2122
  %56 = lshr i32 %54, %55, !dbg !2123
  %57 = and i32 %56, 1, !dbg !2124
  store i32 %57, i32* %10, align 4, !dbg !2119
  %58 = load i32, i32* %6, align 4, !dbg !2125
  %59 = and i32 %58, 1, !dbg !2126
  %60 = load i32, i32* %10, align 4, !dbg !2127
  %61 = xor i32 %59, %60, !dbg !2128
  %62 = load i32, i32* %9, align 4, !dbg !2129
  %63 = shl i32 %61, %62, !dbg !2130
  %64 = load i32*, i32** %8, align 8, !dbg !2131
  %65 = load i32, i32* %64, align 4, !dbg !2132
  %66 = xor i32 %65, %63, !dbg !2132
  store i32 %66, i32* %64, align 4, !dbg !2132
  %67 = load i32, i32* %10, align 4, !dbg !2133
  %68 = load i32, i32* @x.57
  %69 = load i32, i32* @y.58
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart255, label %originalBB1alteredBB

originalBBpart255:                                ; preds = %originalBB1
  ret i32 %67, !dbg !2134

originalBBalteredBB:                              ; preds = %originalBB, %16
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %33
  %76 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %34, i32 0, i32 2, !dbg !2109
  %77 = getelementptr inbounds [8 x i32], [8 x i32]* %76, i64 0, i64 0, !dbg !2110
  %78 = load i8, i8* %7, align 1, !dbg !2111
  %79 = zext i8 %78 to i64, !dbg !2111
  %_ = shl i64 %79, 32
  %_2 = sub i64 0, %79
  %gen = add i64 %_2, 32
  %_3 = sub i64 %79, 32
  %gen4 = mul i64 %_3, 32
  %_5 = shl i64 %79, 32
  %_6 = sub i64 0, %79
  %gen7 = add i64 %_6, 32
  %_8 = sub i64 %79, 32
  %gen9 = mul i64 %_8, 32
  %80 = udiv i64 %79, 32, !dbg !2112
  %81 = getelementptr inbounds i32, i32* %77, i64 %80, !dbg !2113
  store i32* %81, i32** %8, align 8, !dbg !2106
  call void @llvm.dbg.declare(metadata !4, metadata !2135, metadata !DIExpression()), !dbg !2115
  %82 = load i8, i8* %7, align 1, !dbg !2116
  %83 = zext i8 %82 to i64, !dbg !2116
  %_10 = sub i64 %83, 32
  %gen11 = mul i64 %_10, 32
  %84 = urem i64 %83, 32, !dbg !2117
  %85 = trunc i64 %84 to i32, !dbg !2116
  store i32 %85, i32* %9, align 4, !dbg !2115
  call void @llvm.dbg.declare(metadata !4, metadata !2170, metadata !DIExpression()), !dbg !2119
  %86 = load i32*, i32** %8, align 8, !dbg !2120
  %87 = load i32, i32* %86, align 4, !dbg !2121
  %88 = load i32, i32* %9, align 4, !dbg !2122
  %89 = lshr i32 %87, %88, !dbg !2123
  %_12 = sub i32 %89, 1
  %gen13 = mul i32 %_12, 1
  %_14 = sub i32 %89, 1
  %gen15 = mul i32 %_14, 1
  %_16 = shl i32 %89, 1
  %_17 = shl i32 %89, 1
  %_18 = sub i32 0, %89
  %gen19 = add i32 %_18, 1
  %90 = and i32 %89, 1, !dbg !2124
  store i32 %90, i32* %10, align 4, !dbg !2119
  %91 = load i32, i32* %6, align 4, !dbg !2125
  %_20 = sub i32 0, %91
  %gen21 = add i32 %_20, 1
  %_22 = sub i32 0, %91
  %gen23 = add i32 %_22, 1
  %_24 = sub i32 %91, 1
  %gen25 = mul i32 %_24, 1
  %_26 = sub i32 0, %91
  %gen27 = add i32 %_26, 1
  %_28 = sub i32 0, %91
  %gen29 = add i32 %_28, 1
  %_30 = sub i32 %91, 1
  %gen31 = mul i32 %_30, 1
  %_32 = sub i32 0, %91
  %gen33 = add i32 %_32, 1
  %_34 = sub i32 0, %91
  %gen35 = add i32 %_34, 1
  %92 = and i32 %91, 1, !dbg !2126
  %93 = load i32, i32* %10, align 4, !dbg !2127
  %_36 = shl i32 %92, %93
  %_37 = sub i32 0, %92
  %gen38 = add i32 %_37, %93
  %_39 = shl i32 %92, %93
  %94 = xor i32 %92, %93, !dbg !2128
  %95 = load i32, i32* %9, align 4, !dbg !2129
  %_40 = shl i32 %94, %95
  %_41 = shl i32 %94, %95
  %_42 = shl i32 %94, %95
  %96 = shl i32 %94, %95, !dbg !2130
  %97 = load i32*, i32** %8, align 8, !dbg !2131
  %98 = load i32, i32* %97, align 4, !dbg !2132
  %_43 = sub i32 %98, %96
  %gen44 = mul i32 %_43, %96
  %_45 = sub i32 0, %98
  %gen46 = add i32 %_45, %96
  %_47 = sub i32 %98, %96
  %gen48 = mul i32 %_47, %96
  %_49 = shl i32 %98, %96
  %_50 = sub i32 0, %98
  %gen51 = add i32 %_50, %96
  %_52 = sub i32 %98, %96
  %gen53 = mul i32 %_52, %96
  %99 = xor i32 %98, %96, !dbg !2132
  store i32 %99, i32* %97, align 4, !dbg !2132
  %100 = load i32, i32* %10, align 4, !dbg !2133
  br label %originalBB1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char_mem(i8*, i64, i8 signext) #4 !dbg !2171 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  %7 = alloca %struct.quoting_options, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2174, metadata !DIExpression()), !dbg !2175
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !2176, metadata !DIExpression()), !dbg !2177
  store i8 %2, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !2178, metadata !DIExpression()), !dbg !2179
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %7, metadata !2180, metadata !DIExpression()), !dbg !2181
  %8 = bitcast %struct.quoting_options* %7 to i8*, !dbg !2182
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !2182
  %9 = load i8, i8* %6, align 1, !dbg !2183
  %10 = call i32 @set_char_quoting(%struct.quoting_options* %7, i8 signext %9, i32 1), !dbg !2184
  %11 = load i8*, i8** %4, align 8, !dbg !2185
  %12 = load i64, i64* %5, align 8, !dbg !2186
  %13 = call i8* @quotearg_n_options(i32 0, i8* %11, i64 %12, %struct.quoting_options* %7), !dbg !2187
  ret i8* %13, !dbg !2188
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32, i8*, i64, %struct.quoting_options*) #4 !dbg !2189 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.quoting_options*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.slotvec*, align 8
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2194, metadata !DIExpression()), !dbg !2195
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !2196, metadata !DIExpression()), !dbg !2197
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !2198, metadata !DIExpression()), !dbg !2199
  store %struct.quoting_options* %3, %struct.quoting_options** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %8, metadata !2200, metadata !DIExpression()), !dbg !2201
  call void @llvm.dbg.declare(metadata i32* %9, metadata !2202, metadata !DIExpression()), !dbg !2203
  %17 = call i32* @__errno_location() #15, !dbg !2204
  %18 = load i32, i32* %17, align 4, !dbg !2204
  store i32 %18, i32* %9, align 4, !dbg !2203
  call void @llvm.dbg.declare(metadata %struct.slotvec** %10, metadata !2205, metadata !DIExpression()), !dbg !2206
  %19 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !2207
  store %struct.slotvec* %19, %struct.slotvec** %10, align 8, !dbg !2206
  %20 = load i32, i32* %5, align 4, !dbg !2208
  %21 = icmp slt i32 %20, 0, !dbg !2210
  br i1 %21, label %22, label %39, !dbg !2211

22:                                               ; preds = %4
  %23 = load i32, i32* @x.61
  %24 = load i32, i32* @y.62
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %22, %originalBBalteredBB
  call void @abort() #12, !dbg !2212
  %31 = load i32, i32* @x.61
  %32 = load i32, i32* @y.62
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable, !dbg !2212

39:                                               ; preds = %4
  %40 = load i32, i32* @nslots, align 4, !dbg !2213
  %41 = load i32, i32* %5, align 4, !dbg !2215
  %42 = icmp sle i32 %40, %41, !dbg !2216
  br i1 %42, label %43, label %165, !dbg !2217

43:                                               ; preds = %39
  call void @llvm.dbg.declare(metadata i8* %11, metadata !2218, metadata !DIExpression()), !dbg !2220
  %44 = load i32, i32* @x.61
  %45 = load i32, i32* @y.62
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %43, %originalBB1alteredBB
  %52 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !2221
  %53 = icmp eq %struct.slotvec* %52, @slotvec0, !dbg !2222
  %54 = zext i1 %53 to i8, !dbg !2220
  store i8 %54, i8* %11, align 1, !dbg !2220
  call void @llvm.dbg.declare(metadata i32* %12, metadata !2223, metadata !DIExpression()), !dbg !2224
  store i32 2147483646, i32* %12, align 4, !dbg !2224
  %55 = load i32, i32* %12, align 4, !dbg !2225
  %56 = load i32, i32* %5, align 4, !dbg !2227
  %57 = icmp slt i32 %55, %56, !dbg !2228
  %58 = load i32, i32* @x.61
  %59 = load i32, i32* @y.62
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %57, label %66, label %83, !dbg !2229

66:                                               ; preds = %originalBBpart24
  %67 = load i32, i32* @x.61
  %68 = load i32, i32* @y.62
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %66, %originalBB6alteredBB
  call void @xalloc_die() #14, !dbg !2230
  %75 = load i32, i32* @x.61
  %76 = load i32, i32* @y.62
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable, !dbg !2230

83:                                               ; preds = %originalBBpart24
  %84 = load i8, i8* %11, align 1, !dbg !2231
  %85 = trunc i8 %84 to i1, !dbg !2231
  br i1 %85, label %86, label %103, !dbg !2231

86:                                               ; preds = %83
  %87 = load i32, i32* @x.61
  %88 = load i32, i32* @y.62
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %86, %originalBB10alteredBB
  %95 = load i32, i32* @x.61
  %96 = load i32, i32* @y.62
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %121, !dbg !2231

103:                                              ; preds = %83
  %104 = load i32, i32* @x.61
  %105 = load i32, i32* @y.62
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %103, %originalBB14alteredBB
  %112 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !2232
  %113 = load i32, i32* @x.61
  %114 = load i32, i32* @y.62
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %121, !dbg !2231

121:                                              ; preds = %originalBBpart216, %originalBBpart212
  %122 = phi %struct.slotvec* [ null, %originalBBpart212 ], [ %112, %originalBBpart216 ], !dbg !2231
  %123 = load i32, i32* @x.61
  %124 = load i32, i32* @y.62
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %121, %originalBB18alteredBB
  %131 = bitcast %struct.slotvec* %122 to i8*, !dbg !2231
  %132 = load i32, i32* %5, align 4, !dbg !2233
  %133 = add nsw i32 %132, 1, !dbg !2234
  %134 = sext i32 %133 to i64, !dbg !2235
  %135 = mul i64 %134, 16, !dbg !2236
  %136 = call i8* @xrealloc(i8* %131, i64 %135), !dbg !2237
  %137 = bitcast i8* %136 to %struct.slotvec*, !dbg !2237
  store %struct.slotvec* %137, %struct.slotvec** %10, align 8, !dbg !2238
  store %struct.slotvec* %137, %struct.slotvec** @slotvec, align 8, !dbg !2239
  %138 = load i8, i8* %11, align 1, !dbg !2240
  %139 = trunc i8 %138 to i1, !dbg !2240
  %140 = load i32, i32* @x.61
  %141 = load i32, i32* @y.62
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBBpart237, label %originalBB18alteredBB

originalBBpart237:                                ; preds = %originalBB18
  br i1 %139, label %148, label %151, !dbg !2242

148:                                              ; preds = %originalBBpart237
  %149 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !2243
  %150 = bitcast %struct.slotvec* %149 to i8*, !dbg !2244
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !2244
  br label %151, !dbg !2245

151:                                              ; preds = %148, %originalBBpart237
  %152 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !2246
  %153 = load i32, i32* @nslots, align 4, !dbg !2247
  %154 = sext i32 %153 to i64, !dbg !2248
  %155 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %152, i64 %154, !dbg !2248
  %156 = bitcast %struct.slotvec* %155 to i8*, !dbg !2249
  %157 = load i32, i32* %5, align 4, !dbg !2250
  %158 = add nsw i32 %157, 1, !dbg !2251
  %159 = load i32, i32* @nslots, align 4, !dbg !2252
  %160 = sub nsw i32 %158, %159, !dbg !2253
  %161 = sext i32 %160 to i64, !dbg !2254
  %162 = mul i64 %161, 16, !dbg !2255
  call void @llvm.memset.p0i8.i64(i8* align 8 %156, i8 0, i64 %162, i1 false), !dbg !2249
  %163 = load i32, i32* %5, align 4, !dbg !2256
  %164 = add nsw i32 %163, 1, !dbg !2257
  store i32 %164, i32* @nslots, align 4, !dbg !2258
  br label %165, !dbg !2259

165:                                              ; preds = %151, %39
  call void @llvm.dbg.declare(metadata i64* %13, metadata !2260, metadata !DIExpression()), !dbg !2262
  %166 = load i32, i32* @x.61
  %167 = load i32, i32* @y.62
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %165, %originalBB39alteredBB
  %174 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !2263
  %175 = load i32, i32* %5, align 4, !dbg !2264
  %176 = sext i32 %175 to i64, !dbg !2263
  %177 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %174, i64 %176, !dbg !2263
  %178 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %177, i32 0, i32 0, !dbg !2265
  %179 = load i64, i64* %178, align 8, !dbg !2265
  store i64 %179, i64* %13, align 8, !dbg !2262
  call void @llvm.dbg.declare(metadata i8** %14, metadata !2266, metadata !DIExpression()), !dbg !2267
  %180 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !2268
  %181 = load i32, i32* %5, align 4, !dbg !2269
  %182 = sext i32 %181 to i64, !dbg !2268
  %183 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %180, i64 %182, !dbg !2268
  %184 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %183, i32 0, i32 1, !dbg !2270
  %185 = load i8*, i8** %184, align 8, !dbg !2270
  store i8* %185, i8** %14, align 8, !dbg !2267
  call void @llvm.dbg.declare(metadata i32* %15, metadata !2271, metadata !DIExpression()), !dbg !2272
  %186 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !2273
  %187 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %186, i32 0, i32 1, !dbg !2274
  %188 = load i32, i32* %187, align 4, !dbg !2274
  %189 = or i32 %188, 1, !dbg !2275
  store i32 %189, i32* %15, align 4, !dbg !2272
  call void @llvm.dbg.declare(metadata i64* %16, metadata !2276, metadata !DIExpression()), !dbg !2277
  %190 = load i8*, i8** %14, align 8, !dbg !2278
  %191 = load i64, i64* %13, align 8, !dbg !2279
  %192 = load i8*, i8** %6, align 8, !dbg !2280
  %193 = load i64, i64* %7, align 8, !dbg !2281
  %194 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !2282
  %195 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %194, i32 0, i32 0, !dbg !2283
  %196 = load i32, i32* %195, align 8, !dbg !2283
  %197 = load i32, i32* %15, align 4, !dbg !2284
  %198 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !2285
  %199 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %198, i32 0, i32 2, !dbg !2286
  %200 = getelementptr inbounds [8 x i32], [8 x i32]* %199, i64 0, i64 0, !dbg !2285
  %201 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !2287
  %202 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %201, i32 0, i32 3, !dbg !2288
  %203 = load i8*, i8** %202, align 8, !dbg !2288
  %204 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !2289
  %205 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %204, i32 0, i32 4, !dbg !2290
  %206 = load i8*, i8** %205, align 8, !dbg !2290
  %207 = call i64 @quotearg_buffer_restyled(i8* %190, i64 %191, i8* %192, i64 %193, i32 %196, i32 %197, i32* %200, i8* %203, i8* %206), !dbg !2291
  store i64 %207, i64* %16, align 8, !dbg !2277
  %208 = load i64, i64* %13, align 8, !dbg !2292
  %209 = load i64, i64* %16, align 8, !dbg !2294
  %210 = icmp ule i64 %208, %209, !dbg !2295
  %211 = load i32, i32* @x.61
  %212 = load i32, i32* @y.62
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBBpart249, label %originalBB39alteredBB

originalBBpart249:                                ; preds = %originalBB39
  br i1 %210, label %219, label %289, !dbg !2296

219:                                              ; preds = %originalBBpart249
  %220 = load i32, i32* @x.61
  %221 = load i32, i32* @y.62
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %219, %originalBB51alteredBB
  %228 = load i64, i64* %16, align 8, !dbg !2297
  %229 = add i64 %228, 1, !dbg !2299
  store i64 %229, i64* %13, align 8, !dbg !2300
  %230 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !2301
  %231 = load i32, i32* %5, align 4, !dbg !2302
  %232 = sext i32 %231 to i64, !dbg !2301
  %233 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %230, i64 %232, !dbg !2301
  %234 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %233, i32 0, i32 0, !dbg !2303
  store i64 %229, i64* %234, align 8, !dbg !2304
  %235 = load i8*, i8** %14, align 8, !dbg !2305
  %236 = icmp ne i8* %235, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !2307
  %237 = load i32, i32* @x.61
  %238 = load i32, i32* @y.62
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBBpart256, label %originalBB51alteredBB

originalBBpart256:                                ; preds = %originalBB51
  br i1 %236, label %245, label %263, !dbg !2308

245:                                              ; preds = %originalBBpart256
  %246 = load i32, i32* @x.61
  %247 = load i32, i32* @y.62
  %248 = sub i32 %246, 1
  %249 = mul i32 %246, %248
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %251, %252
  br i1 %253, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %245, %originalBB58alteredBB
  %254 = load i8*, i8** %14, align 8, !dbg !2309
  call void @free(i8* %254) #10, !dbg !2310
  %255 = load i32, i32* @x.61
  %256 = load i32, i32* @y.62
  %257 = sub i32 %255, 1
  %258 = mul i32 %255, %257
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %260, %261
  br i1 %262, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %263, !dbg !2310

263:                                              ; preds = %originalBBpart260, %originalBBpart256
  %264 = load i64, i64* %13, align 8, !dbg !2311
  %265 = call noalias i8* @xcharalloc(i64 %264), !dbg !2312
  store i8* %265, i8** %14, align 8, !dbg !2313
  %266 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !2314
  %267 = load i32, i32* %5, align 4, !dbg !2315
  %268 = sext i32 %267 to i64, !dbg !2314
  %269 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %266, i64 %268, !dbg !2314
  %270 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %269, i32 0, i32 1, !dbg !2316
  store i8* %265, i8** %270, align 8, !dbg !2317
  %271 = load i8*, i8** %14, align 8, !dbg !2318
  %272 = load i64, i64* %13, align 8, !dbg !2319
  %273 = load i8*, i8** %6, align 8, !dbg !2320
  %274 = load i64, i64* %7, align 8, !dbg !2321
  %275 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !2322
  %276 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %275, i32 0, i32 0, !dbg !2323
  %277 = load i32, i32* %276, align 8, !dbg !2323
  %278 = load i32, i32* %15, align 4, !dbg !2324
  %279 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !2325
  %280 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %279, i32 0, i32 2, !dbg !2326
  %281 = getelementptr inbounds [8 x i32], [8 x i32]* %280, i64 0, i64 0, !dbg !2325
  %282 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !2327
  %283 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %282, i32 0, i32 3, !dbg !2328
  %284 = load i8*, i8** %283, align 8, !dbg !2328
  %285 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !2329
  %286 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %285, i32 0, i32 4, !dbg !2330
  %287 = load i8*, i8** %286, align 8, !dbg !2330
  %288 = call i64 @quotearg_buffer_restyled(i8* %271, i64 %272, i8* %273, i64 %274, i32 %277, i32 %278, i32* %281, i8* %284, i8* %287), !dbg !2331
  br label %289, !dbg !2332

289:                                              ; preds = %263, %originalBBpart249
  %290 = load i32, i32* @x.61
  %291 = load i32, i32* @y.62
  %292 = sub i32 %290, 1
  %293 = mul i32 %290, %292
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %295, %296
  br i1 %297, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %289, %originalBB62alteredBB
  %298 = load i32, i32* %9, align 4, !dbg !2333
  %299 = call i32* @__errno_location() #15, !dbg !2334
  store i32 %298, i32* %299, align 4, !dbg !2335
  %300 = load i8*, i8** %14, align 8, !dbg !2336
  %301 = load i32, i32* @x.61
  %302 = load i32, i32* @y.62
  %303 = sub i32 %301, 1
  %304 = mul i32 %301, %303
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %302, 10
  %308 = or i1 %306, %307
  br i1 %308, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  ret i8* %300, !dbg !2337

originalBBalteredBB:                              ; preds = %originalBB, %22
  call void @abort() #12, !dbg !2212
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %43
  %309 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !2221
  %310 = icmp eq %struct.slotvec* %309, @slotvec0, !dbg !2222
  %311 = zext i1 %310 to i8, !dbg !2220
  store i8 %311, i8* %11, align 1, !dbg !2220
  call void @llvm.dbg.declare(metadata !4, metadata !2338, metadata !DIExpression()), !dbg !2224
  store i32 2147483646, i32* %12, align 4, !dbg !2224
  %312 = load i32, i32* %12, align 4, !dbg !2225
  %313 = load i32, i32* %5, align 4, !dbg !2227
  %314 = icmp slt i32 %312, %313, !dbg !2228
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %66
  call void @xalloc_die() #14, !dbg !2230
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %86
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %103
  %315 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !2232
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %121
  %316 = bitcast %struct.slotvec* %122 to i8*, !dbg !2231
  %317 = load i32, i32* %5, align 4, !dbg !2233
  %_ = shl i32 %317, 1
  %_19 = sub i32 0, %317
  %gen = add i32 %_19, 1
  %_20 = shl i32 %317, 1
  %_21 = sub i32 %317, 1
  %gen22 = mul i32 %_21, 1
  %_23 = sub i32 0, %317
  %gen24 = add i32 %_23, 1
  %_25 = shl i32 %317, 1
  %_26 = sub i32 0, %317
  %gen27 = add i32 %_26, 1
  %318 = add nsw i32 %317, 1, !dbg !2234
  %319 = sext i32 %318 to i64, !dbg !2235
  %_28 = shl i64 %319, 16
  %_29 = sub i64 0, %319
  %gen30 = add i64 %_29, 16
  %_31 = shl i64 %319, 16
  %_32 = sub i64 0, %319
  %gen33 = add i64 %_32, 16
  %_34 = sub i64 0, %319
  %gen35 = add i64 %_34, 16
  %320 = mul i64 %319, 16, !dbg !2236
  %321 = call i8* @xrealloc(i8* %316, i64 %320), !dbg !2237
  %322 = bitcast i8* %321 to %struct.slotvec*, !dbg !2237
  store %struct.slotvec* %322, %struct.slotvec** %10, align 8, !dbg !2238
  store %struct.slotvec* %322, %struct.slotvec** @slotvec, align 8, !dbg !2239
  %323 = load i8, i8* %11, align 1, !dbg !2240
  %324 = trunc i8 %323 to i1, !dbg !2240
  br label %originalBB18

originalBB39alteredBB:                            ; preds = %originalBB39, %165
  %325 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !2263
  %326 = load i32, i32* %5, align 4, !dbg !2264
  %327 = sext i32 %326 to i64, !dbg !2263
  %328 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %325, i64 %327, !dbg !2263
  %329 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %328, i32 0, i32 0, !dbg !2265
  %330 = load i64, i64* %329, align 8, !dbg !2265
  store i64 %330, i64* %13, align 8, !dbg !2262
  call void @llvm.dbg.declare(metadata !4, metadata !2376, metadata !DIExpression()), !dbg !2267
  %331 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !2268
  %332 = load i32, i32* %5, align 4, !dbg !2269
  %333 = sext i32 %332 to i64, !dbg !2268
  %334 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %331, i64 %333, !dbg !2268
  %335 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %334, i32 0, i32 1, !dbg !2270
  %336 = load i8*, i8** %335, align 8, !dbg !2270
  store i8* %336, i8** %14, align 8, !dbg !2267
  call void @llvm.dbg.declare(metadata !4, metadata !2413, metadata !DIExpression()), !dbg !2272
  %337 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !2273
  %338 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %337, i32 0, i32 1, !dbg !2274
  %339 = load i32, i32* %338, align 4, !dbg !2274
  %_40 = sub i32 0, %339
  %gen41 = add i32 %_40, 1
  %_42 = sub i32 0, %339
  %gen43 = add i32 %_42, 1
  %_44 = sub i32 0, %339
  %gen45 = add i32 %_44, 1
  %_46 = sub i32 0, %339
  %gen47 = add i32 %_46, 1
  %340 = or i32 %339, 1, !dbg !2275
  store i32 %340, i32* %15, align 4, !dbg !2272
  call void @llvm.dbg.declare(metadata !4, metadata !2414, metadata !DIExpression()), !dbg !2277
  %341 = load i8*, i8** %14, align 8, !dbg !2278
  %342 = load i64, i64* %13, align 8, !dbg !2279
  %343 = load i8*, i8** %6, align 8, !dbg !2280
  %344 = load i64, i64* %7, align 8, !dbg !2281
  %345 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !2282
  %346 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %345, i32 0, i32 0, !dbg !2283
  %347 = load i32, i32* %346, align 8, !dbg !2283
  %348 = load i32, i32* %15, align 4, !dbg !2284
  %349 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !2285
  %350 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %349, i32 0, i32 2, !dbg !2286
  %351 = getelementptr inbounds [8 x i32], [8 x i32]* %350, i64 0, i64 0, !dbg !2285
  %352 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !2287
  %353 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %352, i32 0, i32 3, !dbg !2288
  %354 = load i8*, i8** %353, align 8, !dbg !2288
  %355 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !2289
  %356 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %355, i32 0, i32 4, !dbg !2290
  %357 = load i8*, i8** %356, align 8, !dbg !2290
  %358 = call i64 @quotearg_buffer_restyled(i8* %341, i64 %342, i8* %343, i64 %344, i32 %347, i32 %348, i32* %351, i8* %354, i8* %357), !dbg !2291
  store i64 %358, i64* %16, align 8, !dbg !2277
  %359 = load i64, i64* %13, align 8, !dbg !2292
  %360 = load i64, i64* %16, align 8, !dbg !2294
  %361 = icmp ule i64 %359, %360, !dbg !2295
  br label %originalBB39

originalBB51alteredBB:                            ; preds = %originalBB51, %219
  %362 = load i64, i64* %16, align 8, !dbg !2297
  %_52 = sub i64 0, %362
  %gen53 = add i64 %_52, 1
  %_54 = shl i64 %362, 1
  %363 = add i64 %362, 1, !dbg !2299
  store i64 %363, i64* %13, align 8, !dbg !2300
  %364 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !2301
  %365 = load i32, i32* %5, align 4, !dbg !2302
  %366 = sext i32 %365 to i64, !dbg !2301
  %367 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %364, i64 %366, !dbg !2301
  %368 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %367, i32 0, i32 0, !dbg !2303
  store i64 %363, i64* %368, align 8, !dbg !2304
  %369 = load i8*, i8** %14, align 8, !dbg !2305
  %370 = icmp ne i8* %369, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !2307
  br label %originalBB51

originalBB58alteredBB:                            ; preds = %originalBB58, %245
  %371 = load i8*, i8** %14, align 8, !dbg !2309
  call void @free(i8* %371) #10, !dbg !2310
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %289
  %372 = load i32, i32* %9, align 4, !dbg !2333
  %373 = call i32* @__errno_location() #15, !dbg !2334
  store i32 %372, i32* %373, align 4, !dbg !2335
  %374 = load i8*, i8** %14, align 8, !dbg !2336
  br label %originalBB62
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8*, i64, i8*, i64, i32, i32, i32*, i8*, i8*) #4 !dbg !2415 {
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i64, align 8
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %28 = alloca i8, align 1
  %29 = alloca i8, align 1
  %30 = alloca i8, align 1
  %31 = alloca i8, align 1
  %32 = alloca i8, align 1
  %33 = alloca i8, align 1
  %34 = alloca i8, align 1
  %35 = alloca i8, align 1
  %36 = alloca i64, align 8
  %37 = alloca i8, align 1
  %38 = alloca %struct.__mbstate_t, align 4
  %39 = alloca i32, align 4
  %40 = alloca i64, align 8
  %41 = alloca i64, align 8
  %42 = alloca i64, align 8
  store i8* %0, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !2420, metadata !DIExpression()), !dbg !2421
  store i64 %1, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !2422, metadata !DIExpression()), !dbg !2423
  store i8* %2, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !2424, metadata !DIExpression()), !dbg !2425
  store i64 %3, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !2426, metadata !DIExpression()), !dbg !2427
  store i32 %4, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !2428, metadata !DIExpression()), !dbg !2429
  store i32 %5, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !2430, metadata !DIExpression()), !dbg !2431
  store i32* %6, i32** %17, align 8
  call void @llvm.dbg.declare(metadata i32** %17, metadata !2432, metadata !DIExpression()), !dbg !2433
  store i8* %7, i8** %18, align 8
  call void @llvm.dbg.declare(metadata i8** %18, metadata !2434, metadata !DIExpression()), !dbg !2435
  store i8* %8, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !2436, metadata !DIExpression()), !dbg !2437
  call void @llvm.dbg.declare(metadata i64* %20, metadata !2438, metadata !DIExpression()), !dbg !2439
  call void @llvm.dbg.declare(metadata i64* %21, metadata !2440, metadata !DIExpression()), !dbg !2441
  store i64 0, i64* %21, align 8, !dbg !2441
  call void @llvm.dbg.declare(metadata i64* %22, metadata !2442, metadata !DIExpression()), !dbg !2443
  store i64 0, i64* %22, align 8, !dbg !2443
  call void @llvm.dbg.declare(metadata i8** %23, metadata !2444, metadata !DIExpression()), !dbg !2445
  store i8* null, i8** %23, align 8, !dbg !2445
  call void @llvm.dbg.declare(metadata i64* %24, metadata !2446, metadata !DIExpression()), !dbg !2447
  store i64 0, i64* %24, align 8, !dbg !2447
  call void @llvm.dbg.declare(metadata i8* %25, metadata !2448, metadata !DIExpression()), !dbg !2449
  store i8 0, i8* %25, align 1, !dbg !2449
  call void @llvm.dbg.declare(metadata i8* %26, metadata !2450, metadata !DIExpression()), !dbg !2451
  %43 = call i64 @__ctype_get_mb_cur_max() #10, !dbg !2452
  %44 = icmp eq i64 %43, 1, !dbg !2453
  %45 = zext i1 %44 to i8, !dbg !2451
  store i8 %45, i8* %26, align 1, !dbg !2451
  call void @llvm.dbg.declare(metadata i8* %27, metadata !2454, metadata !DIExpression()), !dbg !2455
  %46 = load i32, i32* %16, align 4, !dbg !2456
  %47 = and i32 %46, 2, !dbg !2457
  %48 = icmp ne i32 %47, 0, !dbg !2458
  %49 = zext i1 %48 to i8, !dbg !2455
  store i8 %49, i8* %27, align 1, !dbg !2455
  call void @llvm.dbg.declare(metadata i8* %28, metadata !2459, metadata !DIExpression()), !dbg !2460
  store i8 0, i8* %28, align 1, !dbg !2460
  call void @llvm.dbg.declare(metadata i8* %29, metadata !2461, metadata !DIExpression()), !dbg !2462
  store i8 0, i8* %29, align 1, !dbg !2462
  call void @llvm.dbg.declare(metadata i8* %30, metadata !2463, metadata !DIExpression()), !dbg !2464
  store i8 1, i8* %30, align 1, !dbg !2464
  br label %50, !dbg !2465

50:                                               ; preds = %originalBBpart2469, %9
  call void @llvm.dbg.label(metadata !2466), !dbg !2467
  %51 = load i32, i32* %15, align 4, !dbg !2468
  switch i32 %51, label %232 [
    i32 6, label %52
    i32 5, label %53
    i32 7, label %102
    i32 8, label %103
    i32 9, label %103
    i32 10, label %103
    i32 3, label %175
    i32 1, label %176
    i32 4, label %177
    i32 2, label %182
    i32 0, label %231
  ], !dbg !2469

52:                                               ; preds = %50
  store i32 5, i32* %15, align 4, !dbg !2470
  store i8 1, i8* %27, align 1, !dbg !2472
  br label %53, !dbg !2473

53:                                               ; preds = %52, %50
  %54 = load i8, i8* %27, align 1, !dbg !2474
  %55 = trunc i8 %54 to i1, !dbg !2474
  br i1 %55, label %85, label %56, !dbg !2476

56:                                               ; preds = %53
  br label %57, !dbg !2477

57:                                               ; preds = %56
  %58 = load i64, i64* %21, align 8, !dbg !2478
  %59 = load i64, i64* %12, align 8, !dbg !2478
  %60 = icmp ult i64 %58, %59, !dbg !2478
  br i1 %60, label %61, label %81, !dbg !2481

61:                                               ; preds = %57
  %62 = load i32, i32* @x.63
  %63 = load i32, i32* @y.64
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %61, %originalBBalteredBB
  %70 = load i8*, i8** %11, align 8, !dbg !2478
  %71 = load i64, i64* %21, align 8, !dbg !2478
  %72 = getelementptr inbounds i8, i8* %70, i64 %71, !dbg !2478
  store i8 34, i8* %72, align 1, !dbg !2478
  %73 = load i32, i32* @x.63
  %74 = load i32, i32* @y.64
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %81, !dbg !2478

81:                                               ; preds = %originalBBpart2, %57
  %82 = load i64, i64* %21, align 8, !dbg !2481
  %83 = add i64 %82, 1, !dbg !2481
  store i64 %83, i64* %21, align 8, !dbg !2481
  br label %84, !dbg !2481

84:                                               ; preds = %81
  br label %85, !dbg !2481

85:                                               ; preds = %84, %53
  %86 = load i32, i32* @x.63
  %87 = load i32, i32* @y.64
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %85, %originalBB1alteredBB
  store i8 1, i8* %25, align 1, !dbg !2482
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.120, i64 0, i64 0), i8** %23, align 8, !dbg !2483
  store i64 1, i64* %24, align 8, !dbg !2484
  %94 = load i32, i32* @x.63
  %95 = load i32, i32* @y.64
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %233, !dbg !2485

102:                                              ; preds = %50
  store i8 1, i8* %25, align 1, !dbg !2486
  store i8 0, i8* %27, align 1, !dbg !2487
  br label %233, !dbg !2488

103:                                              ; preds = %50, %50, %50
  %104 = load i32, i32* @x.63
  %105 = load i32, i32* @y.64
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %103, %originalBB6alteredBB
  %112 = load i32, i32* %15, align 4, !dbg !2489
  %113 = icmp ne i32 %112, 10, !dbg !2492
  %114 = load i32, i32* @x.63
  %115 = load i32, i32* @y.64
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %113, label %122, label %127, !dbg !2493

122:                                              ; preds = %originalBBpart28
  %123 = load i32, i32* %15, align 4, !dbg !2494
  %124 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.121, i64 0, i64 0), i32 %123), !dbg !2496
  store i8* %124, i8** %18, align 8, !dbg !2497
  %125 = load i32, i32* %15, align 4, !dbg !2498
  %126 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.122, i64 0, i64 0), i32 %125), !dbg !2499
  store i8* %126, i8** %19, align 8, !dbg !2500
  br label %127, !dbg !2501

127:                                              ; preds = %122, %originalBBpart28
  %128 = load i8, i8* %27, align 1, !dbg !2502
  %129 = trunc i8 %128 to i1, !dbg !2502
  br i1 %129, label %171, label %130, !dbg !2504

130:                                              ; preds = %127
  %131 = load i8*, i8** %18, align 8, !dbg !2505
  store i8* %131, i8** %23, align 8, !dbg !2507
  br label %132, !dbg !2508

132:                                              ; preds = %originalBBpart212, %130
  %133 = load i8*, i8** %23, align 8, !dbg !2509
  %134 = load i8, i8* %133, align 1, !dbg !2511
  %135 = icmp ne i8 %134, 0, !dbg !2512
  br i1 %135, label %136, label %170, !dbg !2512

136:                                              ; preds = %132
  br label %137, !dbg !2513

137:                                              ; preds = %136
  %138 = load i64, i64* %21, align 8, !dbg !2514
  %139 = load i64, i64* %12, align 8, !dbg !2514
  %140 = icmp ult i64 %138, %139, !dbg !2514
  br i1 %140, label %141, label %147, !dbg !2517

141:                                              ; preds = %137
  %142 = load i8*, i8** %23, align 8, !dbg !2514
  %143 = load i8, i8* %142, align 1, !dbg !2514
  %144 = load i8*, i8** %11, align 8, !dbg !2514
  %145 = load i64, i64* %21, align 8, !dbg !2514
  %146 = getelementptr inbounds i8, i8* %144, i64 %145, !dbg !2514
  store i8 %143, i8* %146, align 1, !dbg !2514
  br label %147, !dbg !2514

147:                                              ; preds = %141, %137
  %148 = load i64, i64* %21, align 8, !dbg !2517
  %149 = add i64 %148, 1, !dbg !2517
  store i64 %149, i64* %21, align 8, !dbg !2517
  br label %150, !dbg !2517

150:                                              ; preds = %147
  br label %151, !dbg !2517

151:                                              ; preds = %150
  %152 = load i32, i32* @x.63
  %153 = load i32, i32* @y.64
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %151, %originalBB10alteredBB
  %160 = load i8*, i8** %23, align 8, !dbg !2518
  %161 = getelementptr inbounds i8, i8* %160, i32 1, !dbg !2518
  store i8* %161, i8** %23, align 8, !dbg !2518
  %162 = load i32, i32* @x.63
  %163 = load i32, i32* @y.64
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %132, !dbg !2519, !llvm.loop !2520

170:                                              ; preds = %132
  br label %171, !dbg !2521

171:                                              ; preds = %170, %127
  store i8 1, i8* %25, align 1, !dbg !2522
  %172 = load i8*, i8** %19, align 8, !dbg !2523
  store i8* %172, i8** %23, align 8, !dbg !2524
  %173 = load i8*, i8** %23, align 8, !dbg !2525
  %174 = call i64 @strlen(i8* %173) #13, !dbg !2526
  store i64 %174, i64* %24, align 8, !dbg !2527
  br label %233, !dbg !2528

175:                                              ; preds = %50
  store i8 1, i8* %25, align 1, !dbg !2529
  br label %176, !dbg !2530

176:                                              ; preds = %175, %50
  store i8 1, i8* %27, align 1, !dbg !2531
  br label %177, !dbg !2532

177:                                              ; preds = %176, %50
  %178 = load i8, i8* %27, align 1, !dbg !2533
  %179 = trunc i8 %178 to i1, !dbg !2533
  br i1 %179, label %181, label %180, !dbg !2535

180:                                              ; preds = %177
  store i8 1, i8* %25, align 1, !dbg !2536
  br label %181, !dbg !2537

181:                                              ; preds = %180, %177
  br label %182, !dbg !2538

182:                                              ; preds = %181, %50
  store i32 2, i32* %15, align 4, !dbg !2539
  %183 = load i8, i8* %27, align 1, !dbg !2540
  %184 = trunc i8 %183 to i1, !dbg !2540
  br i1 %184, label %230, label %185, !dbg !2542

185:                                              ; preds = %182
  br label %186, !dbg !2543

186:                                              ; preds = %185
  %187 = load i64, i64* %21, align 8, !dbg !2544
  %188 = load i64, i64* %12, align 8, !dbg !2544
  %189 = icmp ult i64 %187, %188, !dbg !2544
  br i1 %189, label %190, label %194, !dbg !2547

190:                                              ; preds = %186
  %191 = load i8*, i8** %11, align 8, !dbg !2544
  %192 = load i64, i64* %21, align 8, !dbg !2544
  %193 = getelementptr inbounds i8, i8* %191, i64 %192, !dbg !2544
  store i8 39, i8* %193, align 1, !dbg !2544
  br label %194, !dbg !2544

194:                                              ; preds = %190, %186
  %195 = load i32, i32* @x.63
  %196 = load i32, i32* @y.64
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %194, %originalBB14alteredBB
  %203 = load i64, i64* %21, align 8, !dbg !2547
  %204 = add i64 %203, 1, !dbg !2547
  store i64 %204, i64* %21, align 8, !dbg !2547
  %205 = load i32, i32* @x.63
  %206 = load i32, i32* @y.64
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBBpart217, label %originalBB14alteredBB

originalBBpart217:                                ; preds = %originalBB14
  br label %213, !dbg !2547

213:                                              ; preds = %originalBBpart217
  %214 = load i32, i32* @x.63
  %215 = load i32, i32* @y.64
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %213, %originalBB19alteredBB
  %222 = load i32, i32* @x.63
  %223 = load i32, i32* @y.64
  %224 = sub i32 %222, 1
  %225 = mul i32 %222, %224
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %227, %228
  br i1 %229, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  br label %230, !dbg !2547

230:                                              ; preds = %originalBBpart221, %182
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.122, i64 0, i64 0), i8** %23, align 8, !dbg !2548
  store i64 1, i64* %24, align 8, !dbg !2549
  br label %233, !dbg !2550

231:                                              ; preds = %50
  store i8 0, i8* %27, align 1, !dbg !2551
  br label %233, !dbg !2552

232:                                              ; preds = %50
  call void @abort() #12, !dbg !2553
  unreachable, !dbg !2553

233:                                              ; preds = %231, %230, %171, %102, %originalBBpart24
  store i64 0, i64* %20, align 8, !dbg !2554
  br label %234, !dbg !2556

234:                                              ; preds = %2425, %233
  %235 = load i32, i32* @x.63
  %236 = load i32, i32* @y.64
  %237 = sub i32 %235, 1
  %238 = mul i32 %235, %237
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %240, %241
  br i1 %242, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %234, %originalBB23alteredBB
  %243 = load i64, i64* %14, align 8, !dbg !2557
  %244 = icmp eq i64 %243, -1, !dbg !2559
  %245 = load i32, i32* @x.63
  %246 = load i32, i32* @y.64
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br i1 %244, label %253, label %277, !dbg !2557

253:                                              ; preds = %originalBBpart225
  %254 = load i32, i32* @x.63
  %255 = load i32, i32* @y.64
  %256 = sub i32 %254, 1
  %257 = mul i32 %254, %256
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %259, %260
  br i1 %261, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %253, %originalBB27alteredBB
  %262 = load i8*, i8** %13, align 8, !dbg !2560
  %263 = load i64, i64* %20, align 8, !dbg !2561
  %264 = getelementptr inbounds i8, i8* %262, i64 %263, !dbg !2560
  %265 = load i8, i8* %264, align 1, !dbg !2560
  %266 = sext i8 %265 to i32, !dbg !2560
  %267 = icmp eq i32 %266, 0, !dbg !2562
  %268 = zext i1 %267 to i32, !dbg !2562
  %269 = load i32, i32* @x.63
  %270 = load i32, i32* @y.64
  %271 = sub i32 %269, 1
  %272 = mul i32 %269, %271
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %274, %275
  br i1 %276, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br label %282, !dbg !2557

277:                                              ; preds = %originalBBpart225
  %278 = load i64, i64* %20, align 8, !dbg !2563
  %279 = load i64, i64* %14, align 8, !dbg !2564
  %280 = icmp eq i64 %278, %279, !dbg !2565
  %281 = zext i1 %280 to i32, !dbg !2565
  br label %282, !dbg !2557

282:                                              ; preds = %277, %originalBBpart229
  %283 = phi i32 [ %268, %originalBBpart229 ], [ %281, %277 ], !dbg !2557
  %284 = icmp ne i32 %283, 0, !dbg !2566
  %285 = xor i1 %284, true, !dbg !2566
  br i1 %285, label %286, label %2428, !dbg !2567

286:                                              ; preds = %282
  call void @llvm.dbg.declare(metadata i8* %31, metadata !2568, metadata !DIExpression()), !dbg !2570
  call void @llvm.dbg.declare(metadata i8* %32, metadata !2571, metadata !DIExpression()), !dbg !2572
  call void @llvm.dbg.declare(metadata i8* %33, metadata !2573, metadata !DIExpression()), !dbg !2574
  store i8 0, i8* %33, align 1, !dbg !2574
  call void @llvm.dbg.declare(metadata i8* %34, metadata !2575, metadata !DIExpression()), !dbg !2576
  store i8 0, i8* %34, align 1, !dbg !2576
  call void @llvm.dbg.declare(metadata i8* %35, metadata !2577, metadata !DIExpression()), !dbg !2578
  store i8 0, i8* %35, align 1, !dbg !2578
  %287 = load i8, i8* %25, align 1, !dbg !2579
  %288 = trunc i8 %287 to i1, !dbg !2579
  br i1 %288, label %289, label %389, !dbg !2581

289:                                              ; preds = %286
  %290 = load i32, i32* %15, align 4, !dbg !2582
  %291 = icmp ne i32 %290, 2, !dbg !2583
  br i1 %291, label %292, label %389, !dbg !2584

292:                                              ; preds = %289
  %293 = load i64, i64* %24, align 8, !dbg !2585
  %294 = icmp ne i64 %293, 0, !dbg !2585
  br i1 %294, label %295, label %389, !dbg !2586

295:                                              ; preds = %292
  %296 = load i32, i32* @x.63
  %297 = load i32, i32* @y.64
  %298 = sub i32 %296, 1
  %299 = mul i32 %296, %298
  %300 = urem i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %301, %302
  br i1 %303, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %295, %originalBB31alteredBB
  %304 = load i64, i64* %20, align 8, !dbg !2587
  %305 = load i64, i64* %24, align 8, !dbg !2588
  %306 = add i64 %304, %305, !dbg !2589
  %307 = load i64, i64* %14, align 8, !dbg !2590
  %308 = icmp eq i64 %307, -1, !dbg !2591
  %309 = load i32, i32* @x.63
  %310 = load i32, i32* @y.64
  %311 = sub i32 %309, 1
  %312 = mul i32 %309, %311
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %314, %315
  br i1 %316, label %originalBBpart237, label %originalBB31alteredBB

originalBBpart237:                                ; preds = %originalBB31
  br i1 %308, label %317, label %355, !dbg !2592

317:                                              ; preds = %originalBBpart237
  %318 = load i32, i32* @x.63
  %319 = load i32, i32* @y.64
  %320 = sub i32 %318, 1
  %321 = mul i32 %318, %320
  %322 = urem i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %319, 10
  %325 = or i1 %323, %324
  br i1 %325, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %317, %originalBB39alteredBB
  %326 = load i64, i64* %24, align 8, !dbg !2593
  %327 = icmp ult i64 1, %326, !dbg !2594
  %328 = load i32, i32* @x.63
  %329 = load i32, i32* @y.64
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  br i1 %327, label %336, label %355, !dbg !2590

336:                                              ; preds = %originalBBpart241
  %337 = load i32, i32* @x.63
  %338 = load i32, i32* @y.64
  %339 = sub i32 %337, 1
  %340 = mul i32 %337, %339
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %342, %343
  br i1 %344, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %336, %originalBB43alteredBB
  %345 = load i8*, i8** %13, align 8, !dbg !2595
  %346 = call i64 @strlen(i8* %345) #13, !dbg !2596
  store i64 %346, i64* %14, align 8, !dbg !2597
  %347 = load i32, i32* @x.63
  %348 = load i32, i32* @y.64
  %349 = sub i32 %347, 1
  %350 = mul i32 %347, %349
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %352, %353
  br i1 %354, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  br label %373, !dbg !2590

355:                                              ; preds = %originalBBpart241, %originalBBpart237
  %356 = load i32, i32* @x.63
  %357 = load i32, i32* @y.64
  %358 = sub i32 %356, 1
  %359 = mul i32 %356, %358
  %360 = urem i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %361, %362
  br i1 %363, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %355, %originalBB47alteredBB
  %364 = load i64, i64* %14, align 8, !dbg !2598
  %365 = load i32, i32* @x.63
  %366 = load i32, i32* @y.64
  %367 = sub i32 %365, 1
  %368 = mul i32 %365, %367
  %369 = urem i32 %368, 2
  %370 = icmp eq i32 %369, 0
  %371 = icmp slt i32 %366, 10
  %372 = or i1 %370, %371
  br i1 %372, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br label %373, !dbg !2590

373:                                              ; preds = %originalBBpart249, %originalBBpart245
  %374 = phi i64 [ %346, %originalBBpart245 ], [ %364, %originalBBpart249 ], !dbg !2590
  %375 = icmp ule i64 %306, %374, !dbg !2599
  br i1 %375, label %376, label %389, !dbg !2600

376:                                              ; preds = %373
  %377 = load i8*, i8** %13, align 8, !dbg !2601
  %378 = load i64, i64* %20, align 8, !dbg !2602
  %379 = getelementptr inbounds i8, i8* %377, i64 %378, !dbg !2603
  %380 = load i8*, i8** %23, align 8, !dbg !2604
  %381 = load i64, i64* %24, align 8, !dbg !2605
  %382 = call i32 @memcmp(i8* %379, i8* %380, i64 %381) #13, !dbg !2606
  %383 = icmp eq i32 %382, 0, !dbg !2607
  br i1 %383, label %384, label %389, !dbg !2608

384:                                              ; preds = %376
  %385 = load i8, i8* %27, align 1, !dbg !2609
  %386 = trunc i8 %385 to i1, !dbg !2609
  br i1 %386, label %387, label %388, !dbg !2612

387:                                              ; preds = %384
  br label %2590, !dbg !2613

388:                                              ; preds = %384
  store i8 1, i8* %33, align 1, !dbg !2614
  br label %389, !dbg !2615

389:                                              ; preds = %388, %376, %373, %292, %289, %286
  %390 = load i32, i32* @x.63
  %391 = load i32, i32* @y.64
  %392 = sub i32 %390, 1
  %393 = mul i32 %390, %392
  %394 = urem i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %391, 10
  %397 = or i1 %395, %396
  br i1 %397, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %389, %originalBB51alteredBB
  %398 = load i8*, i8** %13, align 8, !dbg !2616
  %399 = load i64, i64* %20, align 8, !dbg !2617
  %400 = getelementptr inbounds i8, i8* %398, i64 %399, !dbg !2616
  %401 = load i8, i8* %400, align 1, !dbg !2616
  store i8 %401, i8* %31, align 1, !dbg !2618
  %402 = load i8, i8* %31, align 1, !dbg !2619
  %403 = zext i8 %402 to i32, !dbg !2619
  %404 = load i32, i32* @x.63
  %405 = load i32, i32* @y.64
  %406 = sub i32 %404, 1
  %407 = mul i32 %404, %406
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %405, 10
  %411 = or i1 %409, %410
  br i1 %411, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  switch i32 %403, label %1280 [
    i32 0, label %412
    i32 63, label %661
    i32 7, label %901
    i32 8, label %902
    i32 12, label %903
    i32 10, label %904
    i32 13, label %905
    i32 9, label %906
    i32 11, label %923
    i32 92, label %924
    i32 123, label %1022
    i32 125, label %1022
    i32 35, label %1052
    i32 126, label %1052
    i32 32, label %1089
    i32 33, label %1090
    i32 34, label %1090
    i32 36, label %1090
    i32 38, label %1090
    i32 40, label %1090
    i32 41, label %1090
    i32 42, label %1090
    i32 59, label %1090
    i32 60, label %1090
    i32 61, label %1090
    i32 62, label %1090
    i32 91, label %1090
    i32 94, label %1090
    i32 96, label %1090
    i32 124, label %1090
    i32 39, label %1130
    i32 37, label %1279
    i32 43, label %1279
    i32 44, label %1279
    i32 45, label %1279
    i32 46, label %1279
    i32 47, label %1279
    i32 48, label %1279
    i32 49, label %1279
    i32 50, label %1279
    i32 51, label %1279
    i32 52, label %1279
    i32 53, label %1279
    i32 54, label %1279
    i32 55, label %1279
    i32 56, label %1279
    i32 57, label %1279
    i32 58, label %1279
    i32 65, label %1279
    i32 66, label %1279
    i32 67, label %1279
    i32 68, label %1279
    i32 69, label %1279
    i32 70, label %1279
    i32 71, label %1279
    i32 72, label %1279
    i32 73, label %1279
    i32 74, label %1279
    i32 75, label %1279
    i32 76, label %1279
    i32 77, label %1279
    i32 78, label %1279
    i32 79, label %1279
    i32 80, label %1279
    i32 81, label %1279
    i32 82, label %1279
    i32 83, label %1279
    i32 84, label %1279
    i32 85, label %1279
    i32 86, label %1279
    i32 87, label %1279
    i32 88, label %1279
    i32 89, label %1279
    i32 90, label %1279
    i32 93, label %1279
    i32 95, label %1279
    i32 97, label %1279
    i32 98, label %1279
    i32 99, label %1279
    i32 100, label %1279
    i32 101, label %1279
    i32 102, label %1279
    i32 103, label %1279
    i32 104, label %1279
    i32 105, label %1279
    i32 106, label %1279
    i32 107, label %1279
    i32 108, label %1279
    i32 109, label %1279
    i32 110, label %1279
    i32 111, label %1279
    i32 112, label %1279
    i32 113, label %1279
    i32 114, label %1279
    i32 115, label %1279
    i32 116, label %1279
    i32 117, label %1279
    i32 118, label %1279
    i32 119, label %1279
    i32 120, label %1279
    i32 121, label %1279
    i32 122, label %1279
  ], !dbg !2620

412:                                              ; preds = %originalBBpart253
  %413 = load i8, i8* %25, align 1, !dbg !2621
  %414 = trunc i8 %413 to i1, !dbg !2621
  br i1 %414, label %415, label %654, !dbg !2624

415:                                              ; preds = %412
  br label %416, !dbg !2625

416:                                              ; preds = %415
  %417 = load i8, i8* %27, align 1, !dbg !2627
  %418 = trunc i8 %417 to i1, !dbg !2627
  br i1 %418, label %419, label %420, !dbg !2630

419:                                              ; preds = %416
  br label %2590, !dbg !2627

420:                                              ; preds = %416
  store i8 1, i8* %34, align 1, !dbg !2630
  %421 = load i32, i32* %15, align 4, !dbg !2631
  %422 = icmp eq i32 %421, 2, !dbg !2631
  br i1 %422, label %423, label %511, !dbg !2631

423:                                              ; preds = %420
  %424 = load i32, i32* @x.63
  %425 = load i32, i32* @y.64
  %426 = sub i32 %424, 1
  %427 = mul i32 %424, %426
  %428 = urem i32 %427, 2
  %429 = icmp eq i32 %428, 0
  %430 = icmp slt i32 %425, 10
  %431 = or i1 %429, %430
  br i1 %431, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %423, %originalBB55alteredBB
  %432 = load i8, i8* %28, align 1, !dbg !2631
  %433 = trunc i8 %432 to i1, !dbg !2631
  %434 = load i32, i32* @x.63
  %435 = load i32, i32* @y.64
  %436 = sub i32 %434, 1
  %437 = mul i32 %434, %436
  %438 = urem i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = icmp slt i32 %435, 10
  %441 = or i1 %439, %440
  br i1 %441, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  br i1 %433, label %511, label %442, !dbg !2630

442:                                              ; preds = %originalBBpart257
  br label %443, !dbg !2633

443:                                              ; preds = %442
  %444 = load i64, i64* %21, align 8, !dbg !2635
  %445 = load i64, i64* %12, align 8, !dbg !2635
  %446 = icmp ult i64 %444, %445, !dbg !2635
  br i1 %446, label %447, label %467, !dbg !2638

447:                                              ; preds = %443
  %448 = load i32, i32* @x.63
  %449 = load i32, i32* @y.64
  %450 = sub i32 %448, 1
  %451 = mul i32 %448, %450
  %452 = urem i32 %451, 2
  %453 = icmp eq i32 %452, 0
  %454 = icmp slt i32 %449, 10
  %455 = or i1 %453, %454
  br i1 %455, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %447, %originalBB59alteredBB
  %456 = load i8*, i8** %11, align 8, !dbg !2635
  %457 = load i64, i64* %21, align 8, !dbg !2635
  %458 = getelementptr inbounds i8, i8* %456, i64 %457, !dbg !2635
  store i8 39, i8* %458, align 1, !dbg !2635
  %459 = load i32, i32* @x.63
  %460 = load i32, i32* @y.64
  %461 = sub i32 %459, 1
  %462 = mul i32 %459, %461
  %463 = urem i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %460, 10
  %466 = or i1 %464, %465
  br i1 %466, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  br label %467, !dbg !2635

467:                                              ; preds = %originalBBpart261, %443
  %468 = load i64, i64* %21, align 8, !dbg !2638
  %469 = add i64 %468, 1, !dbg !2638
  store i64 %469, i64* %21, align 8, !dbg !2638
  br label %470, !dbg !2638

470:                                              ; preds = %467
  br label %471, !dbg !2633

471:                                              ; preds = %470
  %472 = load i64, i64* %21, align 8, !dbg !2639
  %473 = load i64, i64* %12, align 8, !dbg !2639
  %474 = icmp ult i64 %472, %473, !dbg !2639
  br i1 %474, label %475, label %495, !dbg !2642

475:                                              ; preds = %471
  %476 = load i32, i32* @x.63
  %477 = load i32, i32* @y.64
  %478 = sub i32 %476, 1
  %479 = mul i32 %476, %478
  %480 = urem i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = icmp slt i32 %477, 10
  %483 = or i1 %481, %482
  br i1 %483, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %475, %originalBB63alteredBB
  %484 = load i8*, i8** %11, align 8, !dbg !2639
  %485 = load i64, i64* %21, align 8, !dbg !2639
  %486 = getelementptr inbounds i8, i8* %484, i64 %485, !dbg !2639
  store i8 36, i8* %486, align 1, !dbg !2639
  %487 = load i32, i32* @x.63
  %488 = load i32, i32* @y.64
  %489 = sub i32 %487, 1
  %490 = mul i32 %487, %489
  %491 = urem i32 %490, 2
  %492 = icmp eq i32 %491, 0
  %493 = icmp slt i32 %488, 10
  %494 = or i1 %492, %493
  br i1 %494, label %originalBBpart265, label %originalBB63alteredBB

originalBBpart265:                                ; preds = %originalBB63
  br label %495, !dbg !2639

495:                                              ; preds = %originalBBpart265, %471
  %496 = load i64, i64* %21, align 8, !dbg !2642
  %497 = add i64 %496, 1, !dbg !2642
  store i64 %497, i64* %21, align 8, !dbg !2642
  br label %498, !dbg !2642

498:                                              ; preds = %495
  br label %499, !dbg !2633

499:                                              ; preds = %498
  %500 = load i64, i64* %21, align 8, !dbg !2643
  %501 = load i64, i64* %12, align 8, !dbg !2643
  %502 = icmp ult i64 %500, %501, !dbg !2643
  br i1 %502, label %503, label %507, !dbg !2646

503:                                              ; preds = %499
  %504 = load i8*, i8** %11, align 8, !dbg !2643
  %505 = load i64, i64* %21, align 8, !dbg !2643
  %506 = getelementptr inbounds i8, i8* %504, i64 %505, !dbg !2643
  store i8 39, i8* %506, align 1, !dbg !2643
  br label %507, !dbg !2643

507:                                              ; preds = %503, %499
  %508 = load i64, i64* %21, align 8, !dbg !2646
  %509 = add i64 %508, 1, !dbg !2646
  store i64 %509, i64* %21, align 8, !dbg !2646
  br label %510, !dbg !2646

510:                                              ; preds = %507
  store i8 1, i8* %28, align 1, !dbg !2633
  br label %511, !dbg !2633

511:                                              ; preds = %510, %originalBBpart257, %420
  br label %512, !dbg !2630

512:                                              ; preds = %511
  %513 = load i64, i64* %21, align 8, !dbg !2647
  %514 = load i64, i64* %12, align 8, !dbg !2647
  %515 = icmp ult i64 %513, %514, !dbg !2647
  br i1 %515, label %516, label %520, !dbg !2650

516:                                              ; preds = %512
  %517 = load i8*, i8** %11, align 8, !dbg !2647
  %518 = load i64, i64* %21, align 8, !dbg !2647
  %519 = getelementptr inbounds i8, i8* %517, i64 %518, !dbg !2647
  store i8 92, i8* %519, align 1, !dbg !2647
  br label %520, !dbg !2647

520:                                              ; preds = %516, %512
  %521 = load i64, i64* %21, align 8, !dbg !2650
  %522 = add i64 %521, 1, !dbg !2650
  store i64 %522, i64* %21, align 8, !dbg !2650
  br label %523, !dbg !2650

523:                                              ; preds = %520
  %524 = load i32, i32* @x.63
  %525 = load i32, i32* @y.64
  %526 = sub i32 %524, 1
  %527 = mul i32 %524, %526
  %528 = urem i32 %527, 2
  %529 = icmp eq i32 %528, 0
  %530 = icmp slt i32 %525, 10
  %531 = or i1 %529, %530
  br i1 %531, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %523, %originalBB67alteredBB
  %532 = load i32, i32* @x.63
  %533 = load i32, i32* @y.64
  %534 = sub i32 %532, 1
  %535 = mul i32 %532, %534
  %536 = urem i32 %535, 2
  %537 = icmp eq i32 %536, 0
  %538 = icmp slt i32 %533, 10
  %539 = or i1 %537, %538
  br i1 %539, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  br label %540, !dbg !2630

540:                                              ; preds = %originalBBpart269
  %541 = load i32, i32* @x.63
  %542 = load i32, i32* @y.64
  %543 = sub i32 %541, 1
  %544 = mul i32 %541, %543
  %545 = urem i32 %544, 2
  %546 = icmp eq i32 %545, 0
  %547 = icmp slt i32 %542, 10
  %548 = or i1 %546, %547
  br i1 %548, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %540, %originalBB71alteredBB
  %549 = load i32, i32* %15, align 4, !dbg !2651
  %550 = icmp ne i32 %549, 2, !dbg !2653
  %551 = load i32, i32* @x.63
  %552 = load i32, i32* @y.64
  %553 = sub i32 %551, 1
  %554 = mul i32 %551, %553
  %555 = urem i32 %554, 2
  %556 = icmp eq i32 %555, 0
  %557 = icmp slt i32 %552, 10
  %558 = or i1 %556, %557
  br i1 %558, label %originalBBpart273, label %originalBB71alteredBB

originalBBpart273:                                ; preds = %originalBB71
  br i1 %550, label %559, label %653, !dbg !2654

559:                                              ; preds = %originalBBpart273
  %560 = load i64, i64* %20, align 8, !dbg !2655
  %561 = add i64 %560, 1, !dbg !2656
  %562 = load i64, i64* %14, align 8, !dbg !2657
  %563 = icmp ult i64 %561, %562, !dbg !2658
  br i1 %563, label %564, label %653, !dbg !2659

564:                                              ; preds = %559
  %565 = load i32, i32* @x.63
  %566 = load i32, i32* @y.64
  %567 = sub i32 %565, 1
  %568 = mul i32 %565, %567
  %569 = urem i32 %568, 2
  %570 = icmp eq i32 %569, 0
  %571 = icmp slt i32 %566, 10
  %572 = or i1 %570, %571
  br i1 %572, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %564, %originalBB75alteredBB
  %573 = load i8*, i8** %13, align 8, !dbg !2660
  %574 = load i64, i64* %20, align 8, !dbg !2661
  %575 = add i64 %574, 1, !dbg !2662
  %576 = getelementptr inbounds i8, i8* %573, i64 %575, !dbg !2660
  %577 = load i8, i8* %576, align 1, !dbg !2660
  %578 = sext i8 %577 to i32, !dbg !2660
  %579 = icmp sle i32 48, %578, !dbg !2663
  %580 = load i32, i32* @x.63
  %581 = load i32, i32* @y.64
  %582 = sub i32 %580, 1
  %583 = mul i32 %580, %582
  %584 = urem i32 %583, 2
  %585 = icmp eq i32 %584, 0
  %586 = icmp slt i32 %581, 10
  %587 = or i1 %585, %586
  br i1 %587, label %originalBBpart284, label %originalBB75alteredBB

originalBBpart284:                                ; preds = %originalBB75
  br i1 %579, label %588, label %653, !dbg !2664

588:                                              ; preds = %originalBBpart284
  %589 = load i8*, i8** %13, align 8, !dbg !2665
  %590 = load i64, i64* %20, align 8, !dbg !2666
  %591 = add i64 %590, 1, !dbg !2667
  %592 = getelementptr inbounds i8, i8* %589, i64 %591, !dbg !2665
  %593 = load i8, i8* %592, align 1, !dbg !2665
  %594 = sext i8 %593 to i32, !dbg !2665
  %595 = icmp sle i32 %594, 57, !dbg !2668
  br i1 %595, label %596, label %653, !dbg !2669

596:                                              ; preds = %588
  br label %597, !dbg !2670

597:                                              ; preds = %596
  %598 = load i64, i64* %21, align 8, !dbg !2672
  %599 = load i64, i64* %12, align 8, !dbg !2672
  %600 = icmp ult i64 %598, %599, !dbg !2672
  br i1 %600, label %601, label %621, !dbg !2675

601:                                              ; preds = %597
  %602 = load i32, i32* @x.63
  %603 = load i32, i32* @y.64
  %604 = sub i32 %602, 1
  %605 = mul i32 %602, %604
  %606 = urem i32 %605, 2
  %607 = icmp eq i32 %606, 0
  %608 = icmp slt i32 %603, 10
  %609 = or i1 %607, %608
  br i1 %609, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %601, %originalBB86alteredBB
  %610 = load i8*, i8** %11, align 8, !dbg !2672
  %611 = load i64, i64* %21, align 8, !dbg !2672
  %612 = getelementptr inbounds i8, i8* %610, i64 %611, !dbg !2672
  store i8 48, i8* %612, align 1, !dbg !2672
  %613 = load i32, i32* @x.63
  %614 = load i32, i32* @y.64
  %615 = sub i32 %613, 1
  %616 = mul i32 %613, %615
  %617 = urem i32 %616, 2
  %618 = icmp eq i32 %617, 0
  %619 = icmp slt i32 %614, 10
  %620 = or i1 %618, %619
  br i1 %620, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br label %621, !dbg !2672

621:                                              ; preds = %originalBBpart288, %597
  %622 = load i64, i64* %21, align 8, !dbg !2675
  %623 = add i64 %622, 1, !dbg !2675
  store i64 %623, i64* %21, align 8, !dbg !2675
  br label %624, !dbg !2675

624:                                              ; preds = %621
  br label %625, !dbg !2676

625:                                              ; preds = %624
  %626 = load i32, i32* @x.63
  %627 = load i32, i32* @y.64
  %628 = sub i32 %626, 1
  %629 = mul i32 %626, %628
  %630 = urem i32 %629, 2
  %631 = icmp eq i32 %630, 0
  %632 = icmp slt i32 %627, 10
  %633 = or i1 %631, %632
  br i1 %633, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %625, %originalBB90alteredBB
  %634 = load i64, i64* %21, align 8, !dbg !2677
  %635 = load i64, i64* %12, align 8, !dbg !2677
  %636 = icmp ult i64 %634, %635, !dbg !2677
  %637 = load i32, i32* @x.63
  %638 = load i32, i32* @y.64
  %639 = sub i32 %637, 1
  %640 = mul i32 %637, %639
  %641 = urem i32 %640, 2
  %642 = icmp eq i32 %641, 0
  %643 = icmp slt i32 %638, 10
  %644 = or i1 %642, %643
  br i1 %644, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br i1 %636, label %645, label %649, !dbg !2680

645:                                              ; preds = %originalBBpart292
  %646 = load i8*, i8** %11, align 8, !dbg !2677
  %647 = load i64, i64* %21, align 8, !dbg !2677
  %648 = getelementptr inbounds i8, i8* %646, i64 %647, !dbg !2677
  store i8 48, i8* %648, align 1, !dbg !2677
  br label %649, !dbg !2677

649:                                              ; preds = %645, %originalBBpart292
  %650 = load i64, i64* %21, align 8, !dbg !2680
  %651 = add i64 %650, 1, !dbg !2680
  store i64 %651, i64* %21, align 8, !dbg !2680
  br label %652, !dbg !2680

652:                                              ; preds = %649
  br label %653, !dbg !2681

653:                                              ; preds = %652, %588, %originalBBpart284, %559, %originalBBpart273
  store i8 48, i8* %31, align 1, !dbg !2682
  br label %660, !dbg !2683

654:                                              ; preds = %412
  %655 = load i32, i32* %16, align 4, !dbg !2684
  %656 = and i32 %655, 1, !dbg !2686
  %657 = icmp ne i32 %656, 0, !dbg !2686
  br i1 %657, label %658, label %659, !dbg !2687

658:                                              ; preds = %654
  br label %2425, !dbg !2688

659:                                              ; preds = %654
  br label %660

660:                                              ; preds = %659, %653
  br label %2057, !dbg !2689

661:                                              ; preds = %originalBBpart253
  %662 = load i32, i32* %15, align 4, !dbg !2690
  switch i32 %662, label %883 [
    i32 2, label %663
    i32 5, label %684
  ], !dbg !2691

663:                                              ; preds = %661
  %664 = load i8, i8* %27, align 1, !dbg !2692
  %665 = trunc i8 %664 to i1, !dbg !2692
  br i1 %665, label %666, label %683, !dbg !2695

666:                                              ; preds = %663
  %667 = load i32, i32* @x.63
  %668 = load i32, i32* @y.64
  %669 = sub i32 %667, 1
  %670 = mul i32 %667, %669
  %671 = urem i32 %670, 2
  %672 = icmp eq i32 %671, 0
  %673 = icmp slt i32 %668, 10
  %674 = or i1 %672, %673
  br i1 %674, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %666, %originalBB94alteredBB
  %675 = load i32, i32* @x.63
  %676 = load i32, i32* @y.64
  %677 = sub i32 %675, 1
  %678 = mul i32 %675, %677
  %679 = urem i32 %678, 2
  %680 = icmp eq i32 %679, 0
  %681 = icmp slt i32 %676, 10
  %682 = or i1 %680, %681
  br i1 %682, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br label %2590, !dbg !2696

683:                                              ; preds = %663
  br label %884, !dbg !2697

684:                                              ; preds = %661
  %685 = load i32, i32* %16, align 4, !dbg !2698
  %686 = and i32 %685, 4, !dbg !2700
  %687 = icmp ne i32 %686, 0, !dbg !2700
  br i1 %687, label %688, label %882, !dbg !2701

688:                                              ; preds = %684
  %689 = load i64, i64* %20, align 8, !dbg !2702
  %690 = add i64 %689, 2, !dbg !2703
  %691 = load i64, i64* %14, align 8, !dbg !2704
  %692 = icmp ult i64 %690, %691, !dbg !2705
  br i1 %692, label %693, label %882, !dbg !2706

693:                                              ; preds = %688
  %694 = load i8*, i8** %13, align 8, !dbg !2707
  %695 = load i64, i64* %20, align 8, !dbg !2708
  %696 = add i64 %695, 1, !dbg !2709
  %697 = getelementptr inbounds i8, i8* %694, i64 %696, !dbg !2707
  %698 = load i8, i8* %697, align 1, !dbg !2707
  %699 = sext i8 %698 to i32, !dbg !2707
  %700 = icmp eq i32 %699, 63, !dbg !2710
  br i1 %700, label %701, label %882, !dbg !2711

701:                                              ; preds = %693
  %702 = load i8*, i8** %13, align 8, !dbg !2712
  %703 = load i64, i64* %20, align 8, !dbg !2713
  %704 = add i64 %703, 2, !dbg !2714
  %705 = getelementptr inbounds i8, i8* %702, i64 %704, !dbg !2712
  %706 = load i8, i8* %705, align 1, !dbg !2712
  %707 = sext i8 %706 to i32, !dbg !2712
  switch i32 %707, label %880 [
    i32 33, label %708
    i32 39, label %708
    i32 40, label %708
    i32 41, label %708
    i32 45, label %708
    i32 47, label %708
    i32 60, label %708
    i32 61, label %708
    i32 62, label %708
  ], !dbg !2715

708:                                              ; preds = %701, %701, %701, %701, %701, %701, %701, %701, %701
  %709 = load i32, i32* @x.63
  %710 = load i32, i32* @y.64
  %711 = sub i32 %709, 1
  %712 = mul i32 %709, %711
  %713 = urem i32 %712, 2
  %714 = icmp eq i32 %713, 0
  %715 = icmp slt i32 %710, 10
  %716 = or i1 %714, %715
  br i1 %716, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %708, %originalBB98alteredBB
  %717 = load i8, i8* %27, align 1, !dbg !2716
  %718 = trunc i8 %717 to i1, !dbg !2716
  %719 = load i32, i32* @x.63
  %720 = load i32, i32* @y.64
  %721 = sub i32 %719, 1
  %722 = mul i32 %719, %721
  %723 = urem i32 %722, 2
  %724 = icmp eq i32 %723, 0
  %725 = icmp slt i32 %720, 10
  %726 = or i1 %724, %725
  br i1 %726, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br i1 %718, label %727, label %744, !dbg !2719

727:                                              ; preds = %originalBBpart2100
  %728 = load i32, i32* @x.63
  %729 = load i32, i32* @y.64
  %730 = sub i32 %728, 1
  %731 = mul i32 %728, %730
  %732 = urem i32 %731, 2
  %733 = icmp eq i32 %732, 0
  %734 = icmp slt i32 %729, 10
  %735 = or i1 %733, %734
  br i1 %735, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %727, %originalBB102alteredBB
  %736 = load i32, i32* @x.63
  %737 = load i32, i32* @y.64
  %738 = sub i32 %736, 1
  %739 = mul i32 %736, %738
  %740 = urem i32 %739, 2
  %741 = icmp eq i32 %740, 0
  %742 = icmp slt i32 %737, 10
  %743 = or i1 %741, %742
  br i1 %743, label %originalBBpart2104, label %originalBB102alteredBB

originalBBpart2104:                               ; preds = %originalBB102
  br label %2590, !dbg !2720

744:                                              ; preds = %originalBBpart2100
  %745 = load i8*, i8** %13, align 8, !dbg !2721
  %746 = load i64, i64* %20, align 8, !dbg !2722
  %747 = add i64 %746, 2, !dbg !2723
  %748 = getelementptr inbounds i8, i8* %745, i64 %747, !dbg !2721
  %749 = load i8, i8* %748, align 1, !dbg !2721
  store i8 %749, i8* %31, align 1, !dbg !2724
  %750 = load i64, i64* %20, align 8, !dbg !2725
  %751 = add i64 %750, 2, !dbg !2725
  store i64 %751, i64* %20, align 8, !dbg !2725
  br label %752, !dbg !2726

752:                                              ; preds = %744
  %753 = load i64, i64* %21, align 8, !dbg !2727
  %754 = load i64, i64* %12, align 8, !dbg !2727
  %755 = icmp ult i64 %753, %754, !dbg !2727
  br i1 %755, label %756, label %760, !dbg !2730

756:                                              ; preds = %752
  %757 = load i8*, i8** %11, align 8, !dbg !2727
  %758 = load i64, i64* %21, align 8, !dbg !2727
  %759 = getelementptr inbounds i8, i8* %757, i64 %758, !dbg !2727
  store i8 63, i8* %759, align 1, !dbg !2727
  br label %760, !dbg !2727

760:                                              ; preds = %756, %752
  %761 = load i32, i32* @x.63
  %762 = load i32, i32* @y.64
  %763 = sub i32 %761, 1
  %764 = mul i32 %761, %763
  %765 = urem i32 %764, 2
  %766 = icmp eq i32 %765, 0
  %767 = icmp slt i32 %762, 10
  %768 = or i1 %766, %767
  br i1 %768, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %760, %originalBB106alteredBB
  %769 = load i64, i64* %21, align 8, !dbg !2730
  %770 = add i64 %769, 1, !dbg !2730
  store i64 %770, i64* %21, align 8, !dbg !2730
  %771 = load i32, i32* @x.63
  %772 = load i32, i32* @y.64
  %773 = sub i32 %771, 1
  %774 = mul i32 %771, %773
  %775 = urem i32 %774, 2
  %776 = icmp eq i32 %775, 0
  %777 = icmp slt i32 %772, 10
  %778 = or i1 %776, %777
  br i1 %778, label %originalBBpart2121, label %originalBB106alteredBB

originalBBpart2121:                               ; preds = %originalBB106
  br label %779, !dbg !2730

779:                                              ; preds = %originalBBpart2121
  br label %780, !dbg !2731

780:                                              ; preds = %779
  %781 = load i32, i32* @x.63
  %782 = load i32, i32* @y.64
  %783 = sub i32 %781, 1
  %784 = mul i32 %781, %783
  %785 = urem i32 %784, 2
  %786 = icmp eq i32 %785, 0
  %787 = icmp slt i32 %782, 10
  %788 = or i1 %786, %787
  br i1 %788, label %originalBB123, label %originalBB123alteredBB

originalBB123:                                    ; preds = %780, %originalBB123alteredBB
  %789 = load i64, i64* %21, align 8, !dbg !2732
  %790 = load i64, i64* %12, align 8, !dbg !2732
  %791 = icmp ult i64 %789, %790, !dbg !2732
  %792 = load i32, i32* @x.63
  %793 = load i32, i32* @y.64
  %794 = sub i32 %792, 1
  %795 = mul i32 %792, %794
  %796 = urem i32 %795, 2
  %797 = icmp eq i32 %796, 0
  %798 = icmp slt i32 %793, 10
  %799 = or i1 %797, %798
  br i1 %799, label %originalBBpart2125, label %originalBB123alteredBB

originalBBpart2125:                               ; preds = %originalBB123
  br i1 %791, label %800, label %804, !dbg !2735

800:                                              ; preds = %originalBBpart2125
  %801 = load i8*, i8** %11, align 8, !dbg !2732
  %802 = load i64, i64* %21, align 8, !dbg !2732
  %803 = getelementptr inbounds i8, i8* %801, i64 %802, !dbg !2732
  store i8 34, i8* %803, align 1, !dbg !2732
  br label %804, !dbg !2732

804:                                              ; preds = %800, %originalBBpart2125
  %805 = load i64, i64* %21, align 8, !dbg !2735
  %806 = add i64 %805, 1, !dbg !2735
  store i64 %806, i64* %21, align 8, !dbg !2735
  br label %807, !dbg !2735

807:                                              ; preds = %804
  br label %808, !dbg !2736

808:                                              ; preds = %807
  %809 = load i64, i64* %21, align 8, !dbg !2737
  %810 = load i64, i64* %12, align 8, !dbg !2737
  %811 = icmp ult i64 %809, %810, !dbg !2737
  br i1 %811, label %812, label %832, !dbg !2740

812:                                              ; preds = %808
  %813 = load i32, i32* @x.63
  %814 = load i32, i32* @y.64
  %815 = sub i32 %813, 1
  %816 = mul i32 %813, %815
  %817 = urem i32 %816, 2
  %818 = icmp eq i32 %817, 0
  %819 = icmp slt i32 %814, 10
  %820 = or i1 %818, %819
  br i1 %820, label %originalBB127, label %originalBB127alteredBB

originalBB127:                                    ; preds = %812, %originalBB127alteredBB
  %821 = load i8*, i8** %11, align 8, !dbg !2737
  %822 = load i64, i64* %21, align 8, !dbg !2737
  %823 = getelementptr inbounds i8, i8* %821, i64 %822, !dbg !2737
  store i8 34, i8* %823, align 1, !dbg !2737
  %824 = load i32, i32* @x.63
  %825 = load i32, i32* @y.64
  %826 = sub i32 %824, 1
  %827 = mul i32 %824, %826
  %828 = urem i32 %827, 2
  %829 = icmp eq i32 %828, 0
  %830 = icmp slt i32 %825, 10
  %831 = or i1 %829, %830
  br i1 %831, label %originalBBpart2129, label %originalBB127alteredBB

originalBBpart2129:                               ; preds = %originalBB127
  br label %832, !dbg !2737

832:                                              ; preds = %originalBBpart2129, %808
  %833 = load i64, i64* %21, align 8, !dbg !2740
  %834 = add i64 %833, 1, !dbg !2740
  store i64 %834, i64* %21, align 8, !dbg !2740
  br label %835, !dbg !2740

835:                                              ; preds = %832
  br label %836, !dbg !2741

836:                                              ; preds = %835
  %837 = load i32, i32* @x.63
  %838 = load i32, i32* @y.64
  %839 = sub i32 %837, 1
  %840 = mul i32 %837, %839
  %841 = urem i32 %840, 2
  %842 = icmp eq i32 %841, 0
  %843 = icmp slt i32 %838, 10
  %844 = or i1 %842, %843
  br i1 %844, label %originalBB131, label %originalBB131alteredBB

originalBB131:                                    ; preds = %836, %originalBB131alteredBB
  %845 = load i64, i64* %21, align 8, !dbg !2742
  %846 = load i64, i64* %12, align 8, !dbg !2742
  %847 = icmp ult i64 %845, %846, !dbg !2742
  %848 = load i32, i32* @x.63
  %849 = load i32, i32* @y.64
  %850 = sub i32 %848, 1
  %851 = mul i32 %848, %850
  %852 = urem i32 %851, 2
  %853 = icmp eq i32 %852, 0
  %854 = icmp slt i32 %849, 10
  %855 = or i1 %853, %854
  br i1 %855, label %originalBBpart2133, label %originalBB131alteredBB

originalBBpart2133:                               ; preds = %originalBB131
  br i1 %847, label %856, label %876, !dbg !2745

856:                                              ; preds = %originalBBpart2133
  %857 = load i32, i32* @x.63
  %858 = load i32, i32* @y.64
  %859 = sub i32 %857, 1
  %860 = mul i32 %857, %859
  %861 = urem i32 %860, 2
  %862 = icmp eq i32 %861, 0
  %863 = icmp slt i32 %858, 10
  %864 = or i1 %862, %863
  br i1 %864, label %originalBB135, label %originalBB135alteredBB

originalBB135:                                    ; preds = %856, %originalBB135alteredBB
  %865 = load i8*, i8** %11, align 8, !dbg !2742
  %866 = load i64, i64* %21, align 8, !dbg !2742
  %867 = getelementptr inbounds i8, i8* %865, i64 %866, !dbg !2742
  store i8 63, i8* %867, align 1, !dbg !2742
  %868 = load i32, i32* @x.63
  %869 = load i32, i32* @y.64
  %870 = sub i32 %868, 1
  %871 = mul i32 %868, %870
  %872 = urem i32 %871, 2
  %873 = icmp eq i32 %872, 0
  %874 = icmp slt i32 %869, 10
  %875 = or i1 %873, %874
  br i1 %875, label %originalBBpart2137, label %originalBB135alteredBB

originalBBpart2137:                               ; preds = %originalBB135
  br label %876, !dbg !2742

876:                                              ; preds = %originalBBpart2137, %originalBBpart2133
  %877 = load i64, i64* %21, align 8, !dbg !2745
  %878 = add i64 %877, 1, !dbg !2745
  store i64 %878, i64* %21, align 8, !dbg !2745
  br label %879, !dbg !2745

879:                                              ; preds = %876
  br label %881, !dbg !2746

880:                                              ; preds = %701
  br label %881, !dbg !2747

881:                                              ; preds = %880, %879
  br label %882, !dbg !2748

882:                                              ; preds = %881, %693, %688, %684
  br label %884, !dbg !2749

883:                                              ; preds = %661
  br label %884, !dbg !2750

884:                                              ; preds = %883, %882, %683
  %885 = load i32, i32* @x.63
  %886 = load i32, i32* @y.64
  %887 = sub i32 %885, 1
  %888 = mul i32 %885, %887
  %889 = urem i32 %888, 2
  %890 = icmp eq i32 %889, 0
  %891 = icmp slt i32 %886, 10
  %892 = or i1 %890, %891
  br i1 %892, label %originalBB139, label %originalBB139alteredBB

originalBB139:                                    ; preds = %884, %originalBB139alteredBB
  %893 = load i32, i32* @x.63
  %894 = load i32, i32* @y.64
  %895 = sub i32 %893, 1
  %896 = mul i32 %893, %895
  %897 = urem i32 %896, 2
  %898 = icmp eq i32 %897, 0
  %899 = icmp slt i32 %894, 10
  %900 = or i1 %898, %899
  br i1 %900, label %originalBBpart2141, label %originalBB139alteredBB

originalBBpart2141:                               ; preds = %originalBB139
  br label %2057, !dbg !2751

901:                                              ; preds = %originalBBpart253
  store i8 97, i8* %32, align 1, !dbg !2752
  br label %1016, !dbg !2753

902:                                              ; preds = %originalBBpart253
  store i8 98, i8* %32, align 1, !dbg !2754
  br label %1016, !dbg !2755

903:                                              ; preds = %originalBBpart253
  store i8 102, i8* %32, align 1, !dbg !2756
  br label %1016, !dbg !2757

904:                                              ; preds = %originalBBpart253
  store i8 110, i8* %32, align 1, !dbg !2758
  br label %992, !dbg !2759

905:                                              ; preds = %originalBBpart253
  store i8 114, i8* %32, align 1, !dbg !2760
  br label %992, !dbg !2761

906:                                              ; preds = %originalBBpart253
  %907 = load i32, i32* @x.63
  %908 = load i32, i32* @y.64
  %909 = sub i32 %907, 1
  %910 = mul i32 %907, %909
  %911 = urem i32 %910, 2
  %912 = icmp eq i32 %911, 0
  %913 = icmp slt i32 %908, 10
  %914 = or i1 %912, %913
  br i1 %914, label %originalBB143, label %originalBB143alteredBB

originalBB143:                                    ; preds = %906, %originalBB143alteredBB
  store i8 116, i8* %32, align 1, !dbg !2762
  %915 = load i32, i32* @x.63
  %916 = load i32, i32* @y.64
  %917 = sub i32 %915, 1
  %918 = mul i32 %915, %917
  %919 = urem i32 %918, 2
  %920 = icmp eq i32 %919, 0
  %921 = icmp slt i32 %916, 10
  %922 = or i1 %920, %921
  br i1 %922, label %originalBBpart2145, label %originalBB143alteredBB

originalBBpart2145:                               ; preds = %originalBB143
  br label %992, !dbg !2763

923:                                              ; preds = %originalBBpart253
  store i8 118, i8* %32, align 1, !dbg !2764
  br label %1016, !dbg !2765

924:                                              ; preds = %originalBBpart253
  %925 = load i32, i32* @x.63
  %926 = load i32, i32* @y.64
  %927 = sub i32 %925, 1
  %928 = mul i32 %925, %927
  %929 = urem i32 %928, 2
  %930 = icmp eq i32 %929, 0
  %931 = icmp slt i32 %926, 10
  %932 = or i1 %930, %931
  br i1 %932, label %originalBB147, label %originalBB147alteredBB

originalBB147:                                    ; preds = %924, %originalBB147alteredBB
  %933 = load i8, i8* %31, align 1, !dbg !2766
  store i8 %933, i8* %32, align 1, !dbg !2767
  %934 = load i32, i32* %15, align 4, !dbg !2768
  %935 = icmp eq i32 %934, 2, !dbg !2770
  %936 = load i32, i32* @x.63
  %937 = load i32, i32* @y.64
  %938 = sub i32 %936, 1
  %939 = mul i32 %936, %938
  %940 = urem i32 %939, 2
  %941 = icmp eq i32 %940, 0
  %942 = icmp slt i32 %937, 10
  %943 = or i1 %941, %942
  br i1 %943, label %originalBBpart2149, label %originalBB147alteredBB

originalBBpart2149:                               ; preds = %originalBB147
  br i1 %935, label %944, label %965, !dbg !2771

944:                                              ; preds = %originalBBpart2149
  %945 = load i8, i8* %27, align 1, !dbg !2772
  %946 = trunc i8 %945 to i1, !dbg !2772
  br i1 %946, label %947, label %964, !dbg !2775

947:                                              ; preds = %944
  %948 = load i32, i32* @x.63
  %949 = load i32, i32* @y.64
  %950 = sub i32 %948, 1
  %951 = mul i32 %948, %950
  %952 = urem i32 %951, 2
  %953 = icmp eq i32 %952, 0
  %954 = icmp slt i32 %949, 10
  %955 = or i1 %953, %954
  br i1 %955, label %originalBB151, label %originalBB151alteredBB

originalBB151:                                    ; preds = %947, %originalBB151alteredBB
  %956 = load i32, i32* @x.63
  %957 = load i32, i32* @y.64
  %958 = sub i32 %956, 1
  %959 = mul i32 %956, %958
  %960 = urem i32 %959, 2
  %961 = icmp eq i32 %960, 0
  %962 = icmp slt i32 %957, 10
  %963 = or i1 %961, %962
  br i1 %963, label %originalBBpart2153, label %originalBB151alteredBB

originalBBpart2153:                               ; preds = %originalBB151
  br label %2590, !dbg !2776

964:                                              ; preds = %944
  br label %2310, !dbg !2777

965:                                              ; preds = %originalBBpart2149
  %966 = load i8, i8* %25, align 1, !dbg !2778
  %967 = trunc i8 %966 to i1, !dbg !2778
  br i1 %967, label %968, label %991, !dbg !2780

968:                                              ; preds = %965
  %969 = load i32, i32* @x.63
  %970 = load i32, i32* @y.64
  %971 = sub i32 %969, 1
  %972 = mul i32 %969, %971
  %973 = urem i32 %972, 2
  %974 = icmp eq i32 %973, 0
  %975 = icmp slt i32 %970, 10
  %976 = or i1 %974, %975
  br i1 %976, label %originalBB155, label %originalBB155alteredBB

originalBB155:                                    ; preds = %968, %originalBB155alteredBB
  %977 = load i8, i8* %27, align 1, !dbg !2781
  %978 = trunc i8 %977 to i1, !dbg !2781
  %979 = load i32, i32* @x.63
  %980 = load i32, i32* @y.64
  %981 = sub i32 %979, 1
  %982 = mul i32 %979, %981
  %983 = urem i32 %982, 2
  %984 = icmp eq i32 %983, 0
  %985 = icmp slt i32 %980, 10
  %986 = or i1 %984, %985
  br i1 %986, label %originalBBpart2157, label %originalBB155alteredBB

originalBBpart2157:                               ; preds = %originalBB155
  br i1 %978, label %987, label %991, !dbg !2782

987:                                              ; preds = %originalBBpart2157
  %988 = load i64, i64* %24, align 8, !dbg !2783
  %989 = icmp ne i64 %988, 0, !dbg !2783
  br i1 %989, label %990, label %991, !dbg !2784

990:                                              ; preds = %987
  br label %2310, !dbg !2785

991:                                              ; preds = %987, %originalBBpart2157, %965
  br label %992, !dbg !2783

992:                                              ; preds = %991, %originalBBpart2145, %905, %904
  call void @llvm.dbg.label(metadata !2786), !dbg !2787
  %993 = load i32, i32* @x.63
  %994 = load i32, i32* @y.64
  %995 = sub i32 %993, 1
  %996 = mul i32 %993, %995
  %997 = urem i32 %996, 2
  %998 = icmp eq i32 %997, 0
  %999 = icmp slt i32 %994, 10
  %1000 = or i1 %998, %999
  br i1 %1000, label %originalBB159, label %originalBB159alteredBB

originalBB159:                                    ; preds = %992, %originalBB159alteredBB
  %1001 = load i32, i32* %15, align 4, !dbg !2788
  %1002 = icmp eq i32 %1001, 2, !dbg !2790
  %1003 = load i32, i32* @x.63
  %1004 = load i32, i32* @y.64
  %1005 = sub i32 %1003, 1
  %1006 = mul i32 %1003, %1005
  %1007 = urem i32 %1006, 2
  %1008 = icmp eq i32 %1007, 0
  %1009 = icmp slt i32 %1004, 10
  %1010 = or i1 %1008, %1009
  br i1 %1010, label %originalBBpart2161, label %originalBB159alteredBB

originalBBpart2161:                               ; preds = %originalBB159
  br i1 %1002, label %1011, label %1015, !dbg !2791

1011:                                             ; preds = %originalBBpart2161
  %1012 = load i8, i8* %27, align 1, !dbg !2792
  %1013 = trunc i8 %1012 to i1, !dbg !2792
  br i1 %1013, label %1014, label %1015, !dbg !2793

1014:                                             ; preds = %1011
  br label %2590, !dbg !2794

1015:                                             ; preds = %1011, %originalBBpart2161
  br label %1016, !dbg !2792

1016:                                             ; preds = %1015, %923, %903, %902, %901
  call void @llvm.dbg.label(metadata !2795), !dbg !2796
  %1017 = load i8, i8* %25, align 1, !dbg !2797
  %1018 = trunc i8 %1017 to i1, !dbg !2797
  br i1 %1018, label %1019, label %1021, !dbg !2799

1019:                                             ; preds = %1016
  %1020 = load i8, i8* %32, align 1, !dbg !2800
  store i8 %1020, i8* %31, align 1, !dbg !2802
  br label %2152, !dbg !2803

1021:                                             ; preds = %1016
  br label %2057, !dbg !2804

1022:                                             ; preds = %originalBBpart253, %originalBBpart253
  %1023 = load i64, i64* %14, align 8, !dbg !2805
  %1024 = icmp eq i64 %1023, -1, !dbg !2807
  br i1 %1024, label %1025, label %1031, !dbg !2808

1025:                                             ; preds = %1022
  %1026 = load i8*, i8** %13, align 8, !dbg !2809
  %1027 = getelementptr inbounds i8, i8* %1026, i64 1, !dbg !2809
  %1028 = load i8, i8* %1027, align 1, !dbg !2809
  %1029 = sext i8 %1028 to i32, !dbg !2809
  %1030 = icmp eq i32 %1029, 0, !dbg !2810
  br i1 %1030, label %1035, label %1034, !dbg !2805

1031:                                             ; preds = %1022
  %1032 = load i64, i64* %14, align 8, !dbg !2811
  %1033 = icmp eq i64 %1032, 1, !dbg !2812
  br i1 %1033, label %1035, label %1034, !dbg !2808

1034:                                             ; preds = %1031, %1025
  br label %2057, !dbg !2813

1035:                                             ; preds = %1031, %1025
  %1036 = load i32, i32* @x.63
  %1037 = load i32, i32* @y.64
  %1038 = sub i32 %1036, 1
  %1039 = mul i32 %1036, %1038
  %1040 = urem i32 %1039, 2
  %1041 = icmp eq i32 %1040, 0
  %1042 = icmp slt i32 %1037, 10
  %1043 = or i1 %1041, %1042
  br i1 %1043, label %originalBB163, label %originalBB163alteredBB

originalBB163:                                    ; preds = %1035, %originalBB163alteredBB
  %1044 = load i32, i32* @x.63
  %1045 = load i32, i32* @y.64
  %1046 = sub i32 %1044, 1
  %1047 = mul i32 %1044, %1046
  %1048 = urem i32 %1047, 2
  %1049 = icmp eq i32 %1048, 0
  %1050 = icmp slt i32 %1045, 10
  %1051 = or i1 %1049, %1050
  br i1 %1051, label %originalBBpart2165, label %originalBB163alteredBB

originalBBpart2165:                               ; preds = %originalBB163
  br label %1052, !dbg !2814

1052:                                             ; preds = %originalBBpart2165, %originalBBpart253, %originalBBpart253
  %1053 = load i32, i32* @x.63
  %1054 = load i32, i32* @y.64
  %1055 = sub i32 %1053, 1
  %1056 = mul i32 %1053, %1055
  %1057 = urem i32 %1056, 2
  %1058 = icmp eq i32 %1057, 0
  %1059 = icmp slt i32 %1054, 10
  %1060 = or i1 %1058, %1059
  br i1 %1060, label %originalBB167, label %originalBB167alteredBB

originalBB167:                                    ; preds = %1052, %originalBB167alteredBB
  %1061 = load i64, i64* %20, align 8, !dbg !2815
  %1062 = icmp ne i64 %1061, 0, !dbg !2817
  %1063 = load i32, i32* @x.63
  %1064 = load i32, i32* @y.64
  %1065 = sub i32 %1063, 1
  %1066 = mul i32 %1063, %1065
  %1067 = urem i32 %1066, 2
  %1068 = icmp eq i32 %1067, 0
  %1069 = icmp slt i32 %1064, 10
  %1070 = or i1 %1068, %1069
  br i1 %1070, label %originalBBpart2169, label %originalBB167alteredBB

originalBBpart2169:                               ; preds = %originalBB167
  br i1 %1062, label %1071, label %1072, !dbg !2818

1071:                                             ; preds = %originalBBpart2169
  br label %2057, !dbg !2819

1072:                                             ; preds = %originalBBpart2169
  %1073 = load i32, i32* @x.63
  %1074 = load i32, i32* @y.64
  %1075 = sub i32 %1073, 1
  %1076 = mul i32 %1073, %1075
  %1077 = urem i32 %1076, 2
  %1078 = icmp eq i32 %1077, 0
  %1079 = icmp slt i32 %1074, 10
  %1080 = or i1 %1078, %1079
  br i1 %1080, label %originalBB171, label %originalBB171alteredBB

originalBB171:                                    ; preds = %1072, %originalBB171alteredBB
  %1081 = load i32, i32* @x.63
  %1082 = load i32, i32* @y.64
  %1083 = sub i32 %1081, 1
  %1084 = mul i32 %1081, %1083
  %1085 = urem i32 %1084, 2
  %1086 = icmp eq i32 %1085, 0
  %1087 = icmp slt i32 %1082, 10
  %1088 = or i1 %1086, %1087
  br i1 %1088, label %originalBBpart2173, label %originalBB171alteredBB

originalBBpart2173:                               ; preds = %originalBB171
  br label %1089, !dbg !2820

1089:                                             ; preds = %originalBBpart2173, %originalBBpart253
  store i8 1, i8* %35, align 1, !dbg !2821
  br label %1090, !dbg !2822

1090:                                             ; preds = %1089, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253
  %1091 = load i32, i32* %15, align 4, !dbg !2823
  %1092 = icmp eq i32 %1091, 2, !dbg !2825
  br i1 %1092, label %1093, label %1113, !dbg !2826

1093:                                             ; preds = %1090
  %1094 = load i8, i8* %27, align 1, !dbg !2827
  %1095 = trunc i8 %1094 to i1, !dbg !2827
  br i1 %1095, label %1096, label %1113, !dbg !2828

1096:                                             ; preds = %1093
  %1097 = load i32, i32* @x.63
  %1098 = load i32, i32* @y.64
  %1099 = sub i32 %1097, 1
  %1100 = mul i32 %1097, %1099
  %1101 = urem i32 %1100, 2
  %1102 = icmp eq i32 %1101, 0
  %1103 = icmp slt i32 %1098, 10
  %1104 = or i1 %1102, %1103
  br i1 %1104, label %originalBB175, label %originalBB175alteredBB

originalBB175:                                    ; preds = %1096, %originalBB175alteredBB
  %1105 = load i32, i32* @x.63
  %1106 = load i32, i32* @y.64
  %1107 = sub i32 %1105, 1
  %1108 = mul i32 %1105, %1107
  %1109 = urem i32 %1108, 2
  %1110 = icmp eq i32 %1109, 0
  %1111 = icmp slt i32 %1106, 10
  %1112 = or i1 %1110, %1111
  br i1 %1112, label %originalBBpart2177, label %originalBB175alteredBB

originalBBpart2177:                               ; preds = %originalBB175
  br label %2590, !dbg !2829

1113:                                             ; preds = %1093, %1090
  %1114 = load i32, i32* @x.63
  %1115 = load i32, i32* @y.64
  %1116 = sub i32 %1114, 1
  %1117 = mul i32 %1114, %1116
  %1118 = urem i32 %1117, 2
  %1119 = icmp eq i32 %1118, 0
  %1120 = icmp slt i32 %1115, 10
  %1121 = or i1 %1119, %1120
  br i1 %1121, label %originalBB179, label %originalBB179alteredBB

originalBB179:                                    ; preds = %1113, %originalBB179alteredBB
  %1122 = load i32, i32* @x.63
  %1123 = load i32, i32* @y.64
  %1124 = sub i32 %1122, 1
  %1125 = mul i32 %1122, %1124
  %1126 = urem i32 %1125, 2
  %1127 = icmp eq i32 %1126, 0
  %1128 = icmp slt i32 %1123, 10
  %1129 = or i1 %1127, %1128
  br i1 %1129, label %originalBBpart2181, label %originalBB179alteredBB

originalBBpart2181:                               ; preds = %originalBB179
  br label %2057, !dbg !2830

1130:                                             ; preds = %originalBBpart253
  store i8 1, i8* %29, align 1, !dbg !2831
  store i8 1, i8* %35, align 1, !dbg !2832
  %1131 = load i32, i32* %15, align 4, !dbg !2833
  %1132 = icmp eq i32 %1131, 2, !dbg !2835
  br i1 %1132, label %1133, label %1262, !dbg !2836

1133:                                             ; preds = %1130
  %1134 = load i32, i32* @x.63
  %1135 = load i32, i32* @y.64
  %1136 = sub i32 %1134, 1
  %1137 = mul i32 %1134, %1136
  %1138 = urem i32 %1137, 2
  %1139 = icmp eq i32 %1138, 0
  %1140 = icmp slt i32 %1135, 10
  %1141 = or i1 %1139, %1140
  br i1 %1141, label %originalBB183, label %originalBB183alteredBB

originalBB183:                                    ; preds = %1133, %originalBB183alteredBB
  %1142 = load i8, i8* %27, align 1, !dbg !2837
  %1143 = trunc i8 %1142 to i1, !dbg !2837
  %1144 = load i32, i32* @x.63
  %1145 = load i32, i32* @y.64
  %1146 = sub i32 %1144, 1
  %1147 = mul i32 %1144, %1146
  %1148 = urem i32 %1147, 2
  %1149 = icmp eq i32 %1148, 0
  %1150 = icmp slt i32 %1145, 10
  %1151 = or i1 %1149, %1150
  br i1 %1151, label %originalBBpart2185, label %originalBB183alteredBB

originalBBpart2185:                               ; preds = %originalBB183
  br i1 %1143, label %1152, label %1169, !dbg !2840

1152:                                             ; preds = %originalBBpart2185
  %1153 = load i32, i32* @x.63
  %1154 = load i32, i32* @y.64
  %1155 = sub i32 %1153, 1
  %1156 = mul i32 %1153, %1155
  %1157 = urem i32 %1156, 2
  %1158 = icmp eq i32 %1157, 0
  %1159 = icmp slt i32 %1154, 10
  %1160 = or i1 %1158, %1159
  br i1 %1160, label %originalBB187, label %originalBB187alteredBB

originalBB187:                                    ; preds = %1152, %originalBB187alteredBB
  %1161 = load i32, i32* @x.63
  %1162 = load i32, i32* @y.64
  %1163 = sub i32 %1161, 1
  %1164 = mul i32 %1161, %1163
  %1165 = urem i32 %1164, 2
  %1166 = icmp eq i32 %1165, 0
  %1167 = icmp slt i32 %1162, 10
  %1168 = or i1 %1166, %1167
  br i1 %1168, label %originalBBpart2189, label %originalBB187alteredBB

originalBBpart2189:                               ; preds = %originalBB187
  br label %2590, !dbg !2841

1169:                                             ; preds = %originalBBpart2185
  %1170 = load i64, i64* %12, align 8, !dbg !2842
  %1171 = icmp ne i64 %1170, 0, !dbg !2842
  br i1 %1171, label %1172, label %1177, !dbg !2844

1172:                                             ; preds = %1169
  %1173 = load i64, i64* %22, align 8, !dbg !2845
  %1174 = icmp ne i64 %1173, 0, !dbg !2845
  br i1 %1174, label %1177, label %1175, !dbg !2846

1175:                                             ; preds = %1172
  %1176 = load i64, i64* %12, align 8, !dbg !2847
  store i64 %1176, i64* %22, align 8, !dbg !2849
  store i64 0, i64* %12, align 8, !dbg !2850
  br label %1177, !dbg !2851

1177:                                             ; preds = %1175, %1172, %1169
  br label %1178, !dbg !2852

1178:                                             ; preds = %1177
  %1179 = load i64, i64* %21, align 8, !dbg !2853
  %1180 = load i64, i64* %12, align 8, !dbg !2853
  %1181 = icmp ult i64 %1179, %1180, !dbg !2853
  br i1 %1181, label %1182, label %1186, !dbg !2856

1182:                                             ; preds = %1178
  %1183 = load i8*, i8** %11, align 8, !dbg !2853
  %1184 = load i64, i64* %21, align 8, !dbg !2853
  %1185 = getelementptr inbounds i8, i8* %1183, i64 %1184, !dbg !2853
  store i8 39, i8* %1185, align 1, !dbg !2853
  br label %1186, !dbg !2853

1186:                                             ; preds = %1182, %1178
  %1187 = load i64, i64* %21, align 8, !dbg !2856
  %1188 = add i64 %1187, 1, !dbg !2856
  store i64 %1188, i64* %21, align 8, !dbg !2856
  br label %1189, !dbg !2856

1189:                                             ; preds = %1186
  br label %1190, !dbg !2857

1190:                                             ; preds = %1189
  %1191 = load i32, i32* @x.63
  %1192 = load i32, i32* @y.64
  %1193 = sub i32 %1191, 1
  %1194 = mul i32 %1191, %1193
  %1195 = urem i32 %1194, 2
  %1196 = icmp eq i32 %1195, 0
  %1197 = icmp slt i32 %1192, 10
  %1198 = or i1 %1196, %1197
  br i1 %1198, label %originalBB191, label %originalBB191alteredBB

originalBB191:                                    ; preds = %1190, %originalBB191alteredBB
  %1199 = load i64, i64* %21, align 8, !dbg !2858
  %1200 = load i64, i64* %12, align 8, !dbg !2858
  %1201 = icmp ult i64 %1199, %1200, !dbg !2858
  %1202 = load i32, i32* @x.63
  %1203 = load i32, i32* @y.64
  %1204 = sub i32 %1202, 1
  %1205 = mul i32 %1202, %1204
  %1206 = urem i32 %1205, 2
  %1207 = icmp eq i32 %1206, 0
  %1208 = icmp slt i32 %1203, 10
  %1209 = or i1 %1207, %1208
  br i1 %1209, label %originalBBpart2193, label %originalBB191alteredBB

originalBBpart2193:                               ; preds = %originalBB191
  br i1 %1201, label %1210, label %1230, !dbg !2861

1210:                                             ; preds = %originalBBpart2193
  %1211 = load i32, i32* @x.63
  %1212 = load i32, i32* @y.64
  %1213 = sub i32 %1211, 1
  %1214 = mul i32 %1211, %1213
  %1215 = urem i32 %1214, 2
  %1216 = icmp eq i32 %1215, 0
  %1217 = icmp slt i32 %1212, 10
  %1218 = or i1 %1216, %1217
  br i1 %1218, label %originalBB195, label %originalBB195alteredBB

originalBB195:                                    ; preds = %1210, %originalBB195alteredBB
  %1219 = load i8*, i8** %11, align 8, !dbg !2858
  %1220 = load i64, i64* %21, align 8, !dbg !2858
  %1221 = getelementptr inbounds i8, i8* %1219, i64 %1220, !dbg !2858
  store i8 92, i8* %1221, align 1, !dbg !2858
  %1222 = load i32, i32* @x.63
  %1223 = load i32, i32* @y.64
  %1224 = sub i32 %1222, 1
  %1225 = mul i32 %1222, %1224
  %1226 = urem i32 %1225, 2
  %1227 = icmp eq i32 %1226, 0
  %1228 = icmp slt i32 %1223, 10
  %1229 = or i1 %1227, %1228
  br i1 %1229, label %originalBBpart2197, label %originalBB195alteredBB

originalBBpart2197:                               ; preds = %originalBB195
  br label %1230, !dbg !2858

1230:                                             ; preds = %originalBBpart2197, %originalBBpart2193
  %1231 = load i32, i32* @x.63
  %1232 = load i32, i32* @y.64
  %1233 = sub i32 %1231, 1
  %1234 = mul i32 %1231, %1233
  %1235 = urem i32 %1234, 2
  %1236 = icmp eq i32 %1235, 0
  %1237 = icmp slt i32 %1232, 10
  %1238 = or i1 %1236, %1237
  br i1 %1238, label %originalBB199, label %originalBB199alteredBB

originalBB199:                                    ; preds = %1230, %originalBB199alteredBB
  %1239 = load i64, i64* %21, align 8, !dbg !2861
  %1240 = add i64 %1239, 1, !dbg !2861
  store i64 %1240, i64* %21, align 8, !dbg !2861
  %1241 = load i32, i32* @x.63
  %1242 = load i32, i32* @y.64
  %1243 = sub i32 %1241, 1
  %1244 = mul i32 %1241, %1243
  %1245 = urem i32 %1244, 2
  %1246 = icmp eq i32 %1245, 0
  %1247 = icmp slt i32 %1242, 10
  %1248 = or i1 %1246, %1247
  br i1 %1248, label %originalBBpart2209, label %originalBB199alteredBB

originalBBpart2209:                               ; preds = %originalBB199
  br label %1249, !dbg !2861

1249:                                             ; preds = %originalBBpart2209
  br label %1250, !dbg !2862

1250:                                             ; preds = %1249
  %1251 = load i64, i64* %21, align 8, !dbg !2863
  %1252 = load i64, i64* %12, align 8, !dbg !2863
  %1253 = icmp ult i64 %1251, %1252, !dbg !2863
  br i1 %1253, label %1254, label %1258, !dbg !2866

1254:                                             ; preds = %1250
  %1255 = load i8*, i8** %11, align 8, !dbg !2863
  %1256 = load i64, i64* %21, align 8, !dbg !2863
  %1257 = getelementptr inbounds i8, i8* %1255, i64 %1256, !dbg !2863
  store i8 39, i8* %1257, align 1, !dbg !2863
  br label %1258, !dbg !2863

1258:                                             ; preds = %1254, %1250
  %1259 = load i64, i64* %21, align 8, !dbg !2866
  %1260 = add i64 %1259, 1, !dbg !2866
  store i64 %1260, i64* %21, align 8, !dbg !2866
  br label %1261, !dbg !2866

1261:                                             ; preds = %1258
  store i8 0, i8* %28, align 1, !dbg !2867
  br label %1262, !dbg !2868

1262:                                             ; preds = %1261, %1130
  %1263 = load i32, i32* @x.63
  %1264 = load i32, i32* @y.64
  %1265 = sub i32 %1263, 1
  %1266 = mul i32 %1263, %1265
  %1267 = urem i32 %1266, 2
  %1268 = icmp eq i32 %1267, 0
  %1269 = icmp slt i32 %1264, 10
  %1270 = or i1 %1268, %1269
  br i1 %1270, label %originalBB211, label %originalBB211alteredBB

originalBB211:                                    ; preds = %1262, %originalBB211alteredBB
  %1271 = load i32, i32* @x.63
  %1272 = load i32, i32* @y.64
  %1273 = sub i32 %1271, 1
  %1274 = mul i32 %1271, %1273
  %1275 = urem i32 %1274, 2
  %1276 = icmp eq i32 %1275, 0
  %1277 = icmp slt i32 %1272, 10
  %1278 = or i1 %1276, %1277
  br i1 %1278, label %originalBBpart2213, label %originalBB211alteredBB

originalBBpart2213:                               ; preds = %originalBB211
  br label %2057, !dbg !2869

1279:                                             ; preds = %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253, %originalBBpart253
  store i8 1, i8* %35, align 1, !dbg !2870
  br label %2057, !dbg !2871

1280:                                             ; preds = %originalBBpart253
  call void @llvm.dbg.declare(metadata i64* %36, metadata !2872, metadata !DIExpression()), !dbg !2874
  call void @llvm.dbg.declare(metadata i8* %37, metadata !2875, metadata !DIExpression()), !dbg !2876
  %1281 = load i8, i8* %26, align 1, !dbg !2877
  %1282 = trunc i8 %1281 to i1, !dbg !2877
  br i1 %1282, label %1283, label %1295, !dbg !2879

1283:                                             ; preds = %1280
  store i64 1, i64* %36, align 8, !dbg !2880
  %1284 = call i16** @__ctype_b_loc() #15, !dbg !2882
  %1285 = load i16*, i16** %1284, align 8, !dbg !2882
  %1286 = load i8, i8* %31, align 1, !dbg !2882
  %1287 = zext i8 %1286 to i32, !dbg !2882
  %1288 = sext i32 %1287 to i64, !dbg !2882
  %1289 = getelementptr inbounds i16, i16* %1285, i64 %1288, !dbg !2882
  %1290 = load i16, i16* %1289, align 2, !dbg !2882
  %1291 = zext i16 %1290 to i32, !dbg !2882
  %1292 = and i32 %1291, 16384, !dbg !2882
  %1293 = icmp ne i32 %1292, 0, !dbg !2883
  %1294 = zext i1 %1293 to i8, !dbg !2884
  store i8 %1294, i8* %37, align 1, !dbg !2884
  br label %1584, !dbg !2885

1295:                                             ; preds = %1280
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %38, metadata !2886, metadata !DIExpression()), !dbg !2900
  %1296 = bitcast %struct.__mbstate_t* %38 to i8*, !dbg !2901
  call void @llvm.memset.p0i8.i64(i8* align 4 %1296, i8 0, i64 8, i1 false), !dbg !2901
  store i64 0, i64* %36, align 8, !dbg !2902
  store i8 1, i8* %37, align 1, !dbg !2903
  %1297 = load i64, i64* %14, align 8, !dbg !2904
  %1298 = icmp eq i64 %1297, -1, !dbg !2906
  br i1 %1298, label %1299, label %1302, !dbg !2907

1299:                                             ; preds = %1295
  %1300 = load i8*, i8** %13, align 8, !dbg !2908
  %1301 = call i64 @strlen(i8* %1300) #13, !dbg !2909
  store i64 %1301, i64* %14, align 8, !dbg !2910
  br label %1302, !dbg !2911

1302:                                             ; preds = %1299, %1295
  %1303 = load i32, i32* @x.63
  %1304 = load i32, i32* @y.64
  %1305 = sub i32 %1303, 1
  %1306 = mul i32 %1303, %1305
  %1307 = urem i32 %1306, 2
  %1308 = icmp eq i32 %1307, 0
  %1309 = icmp slt i32 %1304, 10
  %1310 = or i1 %1308, %1309
  br i1 %1310, label %originalBB215, label %originalBB215alteredBB

originalBB215:                                    ; preds = %1302, %originalBB215alteredBB
  %1311 = load i32, i32* @x.63
  %1312 = load i32, i32* @y.64
  %1313 = sub i32 %1311, 1
  %1314 = mul i32 %1311, %1313
  %1315 = urem i32 %1314, 2
  %1316 = icmp eq i32 %1315, 0
  %1317 = icmp slt i32 %1312, 10
  %1318 = or i1 %1316, %1317
  br i1 %1318, label %originalBBpart2217, label %originalBB215alteredBB

originalBBpart2217:                               ; preds = %originalBB215
  br label %1319, !dbg !2912

1319:                                             ; preds = %1579, %originalBBpart2217
  call void @llvm.dbg.declare(metadata i32* %39, metadata !2913, metadata !DIExpression()), !dbg !2916
  call void @llvm.dbg.declare(metadata i64* %40, metadata !2917, metadata !DIExpression()), !dbg !2918
  %1320 = load i32, i32* @x.63
  %1321 = load i32, i32* @y.64
  %1322 = sub i32 %1320, 1
  %1323 = mul i32 %1320, %1322
  %1324 = urem i32 %1323, 2
  %1325 = icmp eq i32 %1324, 0
  %1326 = icmp slt i32 %1321, 10
  %1327 = or i1 %1325, %1326
  br i1 %1327, label %originalBB219, label %originalBB219alteredBB

originalBB219:                                    ; preds = %1319, %originalBB219alteredBB
  %1328 = load i8*, i8** %13, align 8, !dbg !2919
  %1329 = load i64, i64* %20, align 8, !dbg !2920
  %1330 = load i64, i64* %36, align 8, !dbg !2921
  %1331 = add i64 %1329, %1330, !dbg !2922
  %1332 = getelementptr inbounds i8, i8* %1328, i64 %1331, !dbg !2919
  %1333 = load i64, i64* %14, align 8, !dbg !2923
  %1334 = load i64, i64* %20, align 8, !dbg !2924
  %1335 = load i64, i64* %36, align 8, !dbg !2925
  %1336 = add i64 %1334, %1335, !dbg !2926
  %1337 = sub i64 %1333, %1336, !dbg !2927
  %1338 = call i64 @rpl_mbrtowc(i32* %39, i8* %1332, i64 %1337, %struct.__mbstate_t* %38), !dbg !2928
  store i64 %1338, i64* %40, align 8, !dbg !2918
  %1339 = load i64, i64* %40, align 8, !dbg !2929
  %1340 = icmp eq i64 %1339, 0, !dbg !2931
  %1341 = load i32, i32* @x.63
  %1342 = load i32, i32* @y.64
  %1343 = sub i32 %1341, 1
  %1344 = mul i32 %1341, %1343
  %1345 = urem i32 %1344, 2
  %1346 = icmp eq i32 %1345, 0
  %1347 = icmp slt i32 %1342, 10
  %1348 = or i1 %1346, %1347
  br i1 %1348, label %originalBBpart2248, label %originalBB219alteredBB

originalBBpart2248:                               ; preds = %originalBB219
  br i1 %1340, label %1349, label %1366, !dbg !2932

1349:                                             ; preds = %originalBBpart2248
  %1350 = load i32, i32* @x.63
  %1351 = load i32, i32* @y.64
  %1352 = sub i32 %1350, 1
  %1353 = mul i32 %1350, %1352
  %1354 = urem i32 %1353, 2
  %1355 = icmp eq i32 %1354, 0
  %1356 = icmp slt i32 %1351, 10
  %1357 = or i1 %1355, %1356
  br i1 %1357, label %originalBB250, label %originalBB250alteredBB

originalBB250:                                    ; preds = %1349, %originalBB250alteredBB
  %1358 = load i32, i32* @x.63
  %1359 = load i32, i32* @y.64
  %1360 = sub i32 %1358, 1
  %1361 = mul i32 %1358, %1360
  %1362 = urem i32 %1361, 2
  %1363 = icmp eq i32 %1362, 0
  %1364 = icmp slt i32 %1359, 10
  %1365 = or i1 %1363, %1364
  br i1 %1365, label %originalBBpart2252, label %originalBB250alteredBB

originalBBpart2252:                               ; preds = %originalBB250
  br label %1583, !dbg !2933

1366:                                             ; preds = %originalBBpart2248
  %1367 = load i32, i32* @x.63
  %1368 = load i32, i32* @y.64
  %1369 = sub i32 %1367, 1
  %1370 = mul i32 %1367, %1369
  %1371 = urem i32 %1370, 2
  %1372 = icmp eq i32 %1371, 0
  %1373 = icmp slt i32 %1368, 10
  %1374 = or i1 %1372, %1373
  br i1 %1374, label %originalBB254, label %originalBB254alteredBB

originalBB254:                                    ; preds = %1366, %originalBB254alteredBB
  %1375 = load i64, i64* %40, align 8, !dbg !2934
  %1376 = icmp eq i64 %1375, -1, !dbg !2936
  %1377 = load i32, i32* @x.63
  %1378 = load i32, i32* @y.64
  %1379 = sub i32 %1377, 1
  %1380 = mul i32 %1377, %1379
  %1381 = urem i32 %1380, 2
  %1382 = icmp eq i32 %1381, 0
  %1383 = icmp slt i32 %1378, 10
  %1384 = or i1 %1382, %1383
  br i1 %1384, label %originalBBpart2256, label %originalBB254alteredBB

originalBBpart2256:                               ; preds = %originalBB254
  br i1 %1376, label %1385, label %1386, !dbg !2937

1385:                                             ; preds = %originalBBpart2256
  store i8 0, i8* %37, align 1, !dbg !2938
  br label %1583, !dbg !2940

1386:                                             ; preds = %originalBBpart2256
  %1387 = load i64, i64* %40, align 8, !dbg !2941
  %1388 = icmp eq i64 %1387, -2, !dbg !2943
  br i1 %1388, label %1389, label %1427, !dbg !2944

1389:                                             ; preds = %1386
  store i8 0, i8* %37, align 1, !dbg !2945
  br label %1390, !dbg !2947

1390:                                             ; preds = %1423, %1389
  %1391 = load i32, i32* @x.63
  %1392 = load i32, i32* @y.64
  %1393 = sub i32 %1391, 1
  %1394 = mul i32 %1391, %1393
  %1395 = urem i32 %1394, 2
  %1396 = icmp eq i32 %1395, 0
  %1397 = icmp slt i32 %1392, 10
  %1398 = or i1 %1396, %1397
  br i1 %1398, label %originalBB258, label %originalBB258alteredBB

originalBB258:                                    ; preds = %1390, %originalBB258alteredBB
  %1399 = load i64, i64* %20, align 8, !dbg !2948
  %1400 = load i64, i64* %36, align 8, !dbg !2949
  %1401 = add i64 %1399, %1400, !dbg !2950
  %1402 = load i64, i64* %14, align 8, !dbg !2951
  %1403 = icmp ult i64 %1401, %1402, !dbg !2952
  %1404 = load i32, i32* @x.63
  %1405 = load i32, i32* @y.64
  %1406 = sub i32 %1404, 1
  %1407 = mul i32 %1404, %1406
  %1408 = urem i32 %1407, 2
  %1409 = icmp eq i32 %1408, 0
  %1410 = icmp slt i32 %1405, 10
  %1411 = or i1 %1409, %1410
  br i1 %1411, label %originalBBpart2264, label %originalBB258alteredBB

originalBBpart2264:                               ; preds = %originalBB258
  br i1 %1403, label %1412, label %1421, !dbg !2953

1412:                                             ; preds = %originalBBpart2264
  %1413 = load i8*, i8** %13, align 8, !dbg !2954
  %1414 = load i64, i64* %20, align 8, !dbg !2955
  %1415 = load i64, i64* %36, align 8, !dbg !2956
  %1416 = add i64 %1414, %1415, !dbg !2957
  %1417 = getelementptr inbounds i8, i8* %1413, i64 %1416, !dbg !2954
  %1418 = load i8, i8* %1417, align 1, !dbg !2954
  %1419 = sext i8 %1418 to i32, !dbg !2954
  %1420 = icmp ne i32 %1419, 0, !dbg !2953
  br label %1421

1421:                                             ; preds = %1412, %originalBBpart2264
  %1422 = phi i1 [ false, %originalBBpart2264 ], [ %1420, %1412 ], !dbg !2958
  br i1 %1422, label %1423, label %1426, !dbg !2947

1423:                                             ; preds = %1421
  %1424 = load i64, i64* %36, align 8, !dbg !2959
  %1425 = add i64 %1424, 1, !dbg !2959
  store i64 %1425, i64* %36, align 8, !dbg !2959
  br label %1390, !dbg !2947, !llvm.loop !2960

1426:                                             ; preds = %1421
  br label %1583, !dbg !2961

1427:                                             ; preds = %1386
  %1428 = load i32, i32* @x.63
  %1429 = load i32, i32* @y.64
  %1430 = sub i32 %1428, 1
  %1431 = mul i32 %1428, %1430
  %1432 = urem i32 %1431, 2
  %1433 = icmp eq i32 %1432, 0
  %1434 = icmp slt i32 %1429, 10
  %1435 = or i1 %1433, %1434
  br i1 %1435, label %originalBB266, label %originalBB266alteredBB

originalBB266:                                    ; preds = %1427, %originalBB266alteredBB
  %1436 = load i8, i8* %27, align 1, !dbg !2962
  %1437 = trunc i8 %1436 to i1, !dbg !2962
  %1438 = load i32, i32* @x.63
  %1439 = load i32, i32* @y.64
  %1440 = sub i32 %1438, 1
  %1441 = mul i32 %1438, %1440
  %1442 = urem i32 %1441, 2
  %1443 = icmp eq i32 %1442, 0
  %1444 = icmp slt i32 %1439, 10
  %1445 = or i1 %1443, %1444
  br i1 %1445, label %originalBBpart2268, label %originalBB266alteredBB

originalBBpart2268:                               ; preds = %originalBB266
  br i1 %1437, label %1446, label %1535, !dbg !2965

1446:                                             ; preds = %originalBBpart2268
  %1447 = load i32, i32* @x.63
  %1448 = load i32, i32* @y.64
  %1449 = sub i32 %1447, 1
  %1450 = mul i32 %1447, %1449
  %1451 = urem i32 %1450, 2
  %1452 = icmp eq i32 %1451, 0
  %1453 = icmp slt i32 %1448, 10
  %1454 = or i1 %1452, %1453
  br i1 %1454, label %originalBB270, label %originalBB270alteredBB

originalBB270:                                    ; preds = %1446, %originalBB270alteredBB
  %1455 = load i32, i32* %15, align 4, !dbg !2966
  %1456 = icmp eq i32 %1455, 2, !dbg !2967
  %1457 = load i32, i32* @x.63
  %1458 = load i32, i32* @y.64
  %1459 = sub i32 %1457, 1
  %1460 = mul i32 %1457, %1459
  %1461 = urem i32 %1460, 2
  %1462 = icmp eq i32 %1461, 0
  %1463 = icmp slt i32 %1458, 10
  %1464 = or i1 %1462, %1463
  br i1 %1464, label %originalBBpart2272, label %originalBB270alteredBB

originalBBpart2272:                               ; preds = %originalBB270
  br i1 %1456, label %1465, label %1535, !dbg !2968

1465:                                             ; preds = %originalBBpart2272
  call void @llvm.dbg.declare(metadata i64* %41, metadata !2969, metadata !DIExpression()), !dbg !2971
  store i64 1, i64* %41, align 8, !dbg !2972
  br label %1466, !dbg !2974

1466:                                             ; preds = %1515, %1465
  %1467 = load i64, i64* %41, align 8, !dbg !2975
  %1468 = load i64, i64* %40, align 8, !dbg !2977
  %1469 = icmp ult i64 %1467, %1468, !dbg !2978
  br i1 %1469, label %1470, label %1518, !dbg !2979

1470:                                             ; preds = %1466
  %1471 = load i8*, i8** %13, align 8, !dbg !2980
  %1472 = load i64, i64* %20, align 8, !dbg !2981
  %1473 = load i64, i64* %36, align 8, !dbg !2982
  %1474 = add i64 %1472, %1473, !dbg !2983
  %1475 = load i64, i64* %41, align 8, !dbg !2984
  %1476 = add i64 %1474, %1475, !dbg !2985
  %1477 = getelementptr inbounds i8, i8* %1471, i64 %1476, !dbg !2980
  %1478 = load i8, i8* %1477, align 1, !dbg !2980
  %1479 = sext i8 %1478 to i32, !dbg !2980
  switch i32 %1479, label %1497 [
    i32 91, label %1480
    i32 92, label %1480
    i32 94, label %1480
    i32 96, label %1480
    i32 124, label %1480
  ], !dbg !2986

1480:                                             ; preds = %1470, %1470, %1470, %1470, %1470
  %1481 = load i32, i32* @x.63
  %1482 = load i32, i32* @y.64
  %1483 = sub i32 %1481, 1
  %1484 = mul i32 %1481, %1483
  %1485 = urem i32 %1484, 2
  %1486 = icmp eq i32 %1485, 0
  %1487 = icmp slt i32 %1482, 10
  %1488 = or i1 %1486, %1487
  br i1 %1488, label %originalBB274, label %originalBB274alteredBB

originalBB274:                                    ; preds = %1480, %originalBB274alteredBB
  %1489 = load i32, i32* @x.63
  %1490 = load i32, i32* @y.64
  %1491 = sub i32 %1489, 1
  %1492 = mul i32 %1489, %1491
  %1493 = urem i32 %1492, 2
  %1494 = icmp eq i32 %1493, 0
  %1495 = icmp slt i32 %1490, 10
  %1496 = or i1 %1494, %1495
  br i1 %1496, label %originalBBpart2276, label %originalBB274alteredBB

originalBBpart2276:                               ; preds = %originalBB274
  br label %2590, !dbg !2987

1497:                                             ; preds = %1470
  %1498 = load i32, i32* @x.63
  %1499 = load i32, i32* @y.64
  %1500 = sub i32 %1498, 1
  %1501 = mul i32 %1498, %1500
  %1502 = urem i32 %1501, 2
  %1503 = icmp eq i32 %1502, 0
  %1504 = icmp slt i32 %1499, 10
  %1505 = or i1 %1503, %1504
  br i1 %1505, label %originalBB278, label %originalBB278alteredBB

originalBB278:                                    ; preds = %1497, %originalBB278alteredBB
  %1506 = load i32, i32* @x.63
  %1507 = load i32, i32* @y.64
  %1508 = sub i32 %1506, 1
  %1509 = mul i32 %1506, %1508
  %1510 = urem i32 %1509, 2
  %1511 = icmp eq i32 %1510, 0
  %1512 = icmp slt i32 %1507, 10
  %1513 = or i1 %1511, %1512
  br i1 %1513, label %originalBBpart2280, label %originalBB278alteredBB

originalBBpart2280:                               ; preds = %originalBB278
  br label %1514, !dbg !2989

1514:                                             ; preds = %originalBBpart2280
  br label %1515, !dbg !2990

1515:                                             ; preds = %1514
  %1516 = load i64, i64* %41, align 8, !dbg !2991
  %1517 = add i64 %1516, 1, !dbg !2991
  store i64 %1517, i64* %41, align 8, !dbg !2991
  br label %1466, !dbg !2992, !llvm.loop !2993

1518:                                             ; preds = %1466
  %1519 = load i32, i32* @x.63
  %1520 = load i32, i32* @y.64
  %1521 = sub i32 %1519, 1
  %1522 = mul i32 %1519, %1521
  %1523 = urem i32 %1522, 2
  %1524 = icmp eq i32 %1523, 0
  %1525 = icmp slt i32 %1520, 10
  %1526 = or i1 %1524, %1525
  br i1 %1526, label %originalBB282, label %originalBB282alteredBB

originalBB282:                                    ; preds = %1518, %originalBB282alteredBB
  %1527 = load i32, i32* @x.63
  %1528 = load i32, i32* @y.64
  %1529 = sub i32 %1527, 1
  %1530 = mul i32 %1527, %1529
  %1531 = urem i32 %1530, 2
  %1532 = icmp eq i32 %1531, 0
  %1533 = icmp slt i32 %1528, 10
  %1534 = or i1 %1532, %1533
  br i1 %1534, label %originalBBpart2284, label %originalBB282alteredBB

originalBBpart2284:                               ; preds = %originalBB282
  br label %1535, !dbg !2995

1535:                                             ; preds = %originalBBpart2284, %originalBBpart2272, %originalBBpart2268
  %1536 = load i32, i32* %39, align 4, !dbg !2996
  %1537 = call i32 @iswprint(i32 %1536) #10, !dbg !2998
  %1538 = icmp ne i32 %1537, 0, !dbg !2998
  br i1 %1538, label %1540, label %1539, !dbg !2999

1539:                                             ; preds = %1535
  store i8 0, i8* %37, align 1, !dbg !3000
  br label %1540, !dbg !3001

1540:                                             ; preds = %1539, %1535
  %1541 = load i64, i64* %40, align 8, !dbg !3002
  %1542 = load i64, i64* %36, align 8, !dbg !3003
  %1543 = add i64 %1542, %1541, !dbg !3003
  store i64 %1543, i64* %36, align 8, !dbg !3003
  br label %1544

1544:                                             ; preds = %1540
  br label %1545

1545:                                             ; preds = %1544
  %1546 = load i32, i32* @x.63
  %1547 = load i32, i32* @y.64
  %1548 = sub i32 %1546, 1
  %1549 = mul i32 %1546, %1548
  %1550 = urem i32 %1549, 2
  %1551 = icmp eq i32 %1550, 0
  %1552 = icmp slt i32 %1547, 10
  %1553 = or i1 %1551, %1552
  br i1 %1553, label %originalBB286, label %originalBB286alteredBB

originalBB286:                                    ; preds = %1545, %originalBB286alteredBB
  %1554 = load i32, i32* @x.63
  %1555 = load i32, i32* @y.64
  %1556 = sub i32 %1554, 1
  %1557 = mul i32 %1554, %1556
  %1558 = urem i32 %1557, 2
  %1559 = icmp eq i32 %1558, 0
  %1560 = icmp slt i32 %1555, 10
  %1561 = or i1 %1559, %1560
  br i1 %1561, label %originalBBpart2288, label %originalBB286alteredBB

originalBBpart2288:                               ; preds = %originalBB286
  br label %1562

1562:                                             ; preds = %originalBBpart2288
  %1563 = load i32, i32* @x.63
  %1564 = load i32, i32* @y.64
  %1565 = sub i32 %1563, 1
  %1566 = mul i32 %1563, %1565
  %1567 = urem i32 %1566, 2
  %1568 = icmp eq i32 %1567, 0
  %1569 = icmp slt i32 %1564, 10
  %1570 = or i1 %1568, %1569
  br i1 %1570, label %originalBB290, label %originalBB290alteredBB

originalBB290:                                    ; preds = %1562, %originalBB290alteredBB
  %1571 = load i32, i32* @x.63
  %1572 = load i32, i32* @y.64
  %1573 = sub i32 %1571, 1
  %1574 = mul i32 %1571, %1573
  %1575 = urem i32 %1574, 2
  %1576 = icmp eq i32 %1575, 0
  %1577 = icmp slt i32 %1572, 10
  %1578 = or i1 %1576, %1577
  br i1 %1578, label %originalBBpart2292, label %originalBB290alteredBB

originalBBpart2292:                               ; preds = %originalBB290
  br label %1579, !dbg !3004

1579:                                             ; preds = %originalBBpart2292
  %1580 = call i32 @mbsinit(%struct.__mbstate_t* %38) #13, !dbg !3005
  %1581 = icmp ne i32 %1580, 0, !dbg !3006
  %1582 = xor i1 %1581, true, !dbg !3006
  br i1 %1582, label %1319, label %1583, !dbg !3004, !llvm.loop !3007

1583:                                             ; preds = %1579, %1426, %1385, %originalBBpart2252
  br label %1584

1584:                                             ; preds = %1583, %1283
  %1585 = load i8, i8* %37, align 1, !dbg !3009
  %1586 = trunc i8 %1585 to i1, !dbg !3009
  %1587 = zext i1 %1586 to i8, !dbg !3010
  store i8 %1587, i8* %35, align 1, !dbg !3010
  %1588 = load i64, i64* %36, align 8, !dbg !3011
  %1589 = icmp ult i64 1, %1588, !dbg !3013
  br i1 %1589, label %1612, label %1590, !dbg !3014

1590:                                             ; preds = %1584
  %1591 = load i8, i8* %25, align 1, !dbg !3015
  %1592 = trunc i8 %1591 to i1, !dbg !3015
  br i1 %1592, label %1593, label %2056, !dbg !3016

1593:                                             ; preds = %1590
  %1594 = load i32, i32* @x.63
  %1595 = load i32, i32* @y.64
  %1596 = sub i32 %1594, 1
  %1597 = mul i32 %1594, %1596
  %1598 = urem i32 %1597, 2
  %1599 = icmp eq i32 %1598, 0
  %1600 = icmp slt i32 %1595, 10
  %1601 = or i1 %1599, %1600
  br i1 %1601, label %originalBB294, label %originalBB294alteredBB

originalBB294:                                    ; preds = %1593, %originalBB294alteredBB
  %1602 = load i8, i8* %37, align 1, !dbg !3017
  %1603 = trunc i8 %1602 to i1, !dbg !3017
  %1604 = load i32, i32* @x.63
  %1605 = load i32, i32* @y.64
  %1606 = sub i32 %1604, 1
  %1607 = mul i32 %1604, %1606
  %1608 = urem i32 %1607, 2
  %1609 = icmp eq i32 %1608, 0
  %1610 = icmp slt i32 %1605, 10
  %1611 = or i1 %1609, %1610
  br i1 %1611, label %originalBBpart2296, label %originalBB294alteredBB

originalBBpart2296:                               ; preds = %originalBB294
  br i1 %1603, label %2056, label %1612, !dbg !3018

1612:                                             ; preds = %originalBBpart2296, %1584
  call void @llvm.dbg.declare(metadata i64* %42, metadata !3019, metadata !DIExpression()), !dbg !3021
  %1613 = load i64, i64* %20, align 8, !dbg !3022
  %1614 = load i64, i64* %36, align 8, !dbg !3023
  %1615 = add i64 %1613, %1614, !dbg !3024
  store i64 %1615, i64* %42, align 8, !dbg !3021
  br label %1616, !dbg !3025

1616:                                             ; preds = %2049, %1612
  %1617 = load i8, i8* %25, align 1, !dbg !3026
  %1618 = trunc i8 %1617 to i1, !dbg !3026
  br i1 %1618, label %1619, label %1884, !dbg !3031

1619:                                             ; preds = %1616
  %1620 = load i32, i32* @x.63
  %1621 = load i32, i32* @y.64
  %1622 = sub i32 %1620, 1
  %1623 = mul i32 %1620, %1622
  %1624 = urem i32 %1623, 2
  %1625 = icmp eq i32 %1624, 0
  %1626 = icmp slt i32 %1621, 10
  %1627 = or i1 %1625, %1626
  br i1 %1627, label %originalBB298, label %originalBB298alteredBB

originalBB298:                                    ; preds = %1619, %originalBB298alteredBB
  %1628 = load i8, i8* %37, align 1, !dbg !3032
  %1629 = trunc i8 %1628 to i1, !dbg !3032
  %1630 = load i32, i32* @x.63
  %1631 = load i32, i32* @y.64
  %1632 = sub i32 %1630, 1
  %1633 = mul i32 %1630, %1632
  %1634 = urem i32 %1633, 2
  %1635 = icmp eq i32 %1634, 0
  %1636 = icmp slt i32 %1631, 10
  %1637 = or i1 %1635, %1636
  br i1 %1637, label %originalBBpart2300, label %originalBB298alteredBB

originalBBpart2300:                               ; preds = %originalBB298
  br i1 %1629, label %1884, label %1638, !dbg !3033

1638:                                             ; preds = %originalBBpart2300
  br label %1639, !dbg !3034

1639:                                             ; preds = %1638
  %1640 = load i32, i32* @x.63
  %1641 = load i32, i32* @y.64
  %1642 = sub i32 %1640, 1
  %1643 = mul i32 %1640, %1642
  %1644 = urem i32 %1643, 2
  %1645 = icmp eq i32 %1644, 0
  %1646 = icmp slt i32 %1641, 10
  %1647 = or i1 %1645, %1646
  br i1 %1647, label %originalBB302, label %originalBB302alteredBB

originalBB302:                                    ; preds = %1639, %originalBB302alteredBB
  %1648 = load i8, i8* %27, align 1, !dbg !3036
  %1649 = trunc i8 %1648 to i1, !dbg !3036
  %1650 = load i32, i32* @x.63
  %1651 = load i32, i32* @y.64
  %1652 = sub i32 %1650, 1
  %1653 = mul i32 %1650, %1652
  %1654 = urem i32 %1653, 2
  %1655 = icmp eq i32 %1654, 0
  %1656 = icmp slt i32 %1651, 10
  %1657 = or i1 %1655, %1656
  br i1 %1657, label %originalBBpart2304, label %originalBB302alteredBB

originalBBpart2304:                               ; preds = %originalBB302
  br i1 %1649, label %1658, label %1659, !dbg !3039

1658:                                             ; preds = %originalBBpart2304
  br label %2590, !dbg !3036

1659:                                             ; preds = %originalBBpart2304
  store i8 1, i8* %34, align 1, !dbg !3039
  %1660 = load i32, i32* %15, align 4, !dbg !3040
  %1661 = icmp eq i32 %1660, 2, !dbg !3040
  br i1 %1661, label %1662, label %1798, !dbg !3040

1662:                                             ; preds = %1659
  %1663 = load i8, i8* %28, align 1, !dbg !3040
  %1664 = trunc i8 %1663 to i1, !dbg !3040
  br i1 %1664, label %1798, label %1665, !dbg !3039

1665:                                             ; preds = %1662
  %1666 = load i32, i32* @x.63
  %1667 = load i32, i32* @y.64
  %1668 = sub i32 %1666, 1
  %1669 = mul i32 %1666, %1668
  %1670 = urem i32 %1669, 2
  %1671 = icmp eq i32 %1670, 0
  %1672 = icmp slt i32 %1667, 10
  %1673 = or i1 %1671, %1672
  br i1 %1673, label %originalBB306, label %originalBB306alteredBB

originalBB306:                                    ; preds = %1665, %originalBB306alteredBB
  %1674 = load i32, i32* @x.63
  %1675 = load i32, i32* @y.64
  %1676 = sub i32 %1674, 1
  %1677 = mul i32 %1674, %1676
  %1678 = urem i32 %1677, 2
  %1679 = icmp eq i32 %1678, 0
  %1680 = icmp slt i32 %1675, 10
  %1681 = or i1 %1679, %1680
  br i1 %1681, label %originalBBpart2308, label %originalBB306alteredBB

originalBBpart2308:                               ; preds = %originalBB306
  br label %1682, !dbg !3042

1682:                                             ; preds = %originalBBpart2308
  %1683 = load i32, i32* @x.63
  %1684 = load i32, i32* @y.64
  %1685 = sub i32 %1683, 1
  %1686 = mul i32 %1683, %1685
  %1687 = urem i32 %1686, 2
  %1688 = icmp eq i32 %1687, 0
  %1689 = icmp slt i32 %1684, 10
  %1690 = or i1 %1688, %1689
  br i1 %1690, label %originalBB310, label %originalBB310alteredBB

originalBB310:                                    ; preds = %1682, %originalBB310alteredBB
  %1691 = load i64, i64* %21, align 8, !dbg !3044
  %1692 = load i64, i64* %12, align 8, !dbg !3044
  %1693 = icmp ult i64 %1691, %1692, !dbg !3044
  %1694 = load i32, i32* @x.63
  %1695 = load i32, i32* @y.64
  %1696 = sub i32 %1694, 1
  %1697 = mul i32 %1694, %1696
  %1698 = urem i32 %1697, 2
  %1699 = icmp eq i32 %1698, 0
  %1700 = icmp slt i32 %1695, 10
  %1701 = or i1 %1699, %1700
  br i1 %1701, label %originalBBpart2312, label %originalBB310alteredBB

originalBBpart2312:                               ; preds = %originalBB310
  br i1 %1693, label %1702, label %1706, !dbg !3047

1702:                                             ; preds = %originalBBpart2312
  %1703 = load i8*, i8** %11, align 8, !dbg !3044
  %1704 = load i64, i64* %21, align 8, !dbg !3044
  %1705 = getelementptr inbounds i8, i8* %1703, i64 %1704, !dbg !3044
  store i8 39, i8* %1705, align 1, !dbg !3044
  br label %1706, !dbg !3044

1706:                                             ; preds = %1702, %originalBBpart2312
  %1707 = load i32, i32* @x.63
  %1708 = load i32, i32* @y.64
  %1709 = sub i32 %1707, 1
  %1710 = mul i32 %1707, %1709
  %1711 = urem i32 %1710, 2
  %1712 = icmp eq i32 %1711, 0
  %1713 = icmp slt i32 %1708, 10
  %1714 = or i1 %1712, %1713
  br i1 %1714, label %originalBB314, label %originalBB314alteredBB

originalBB314:                                    ; preds = %1706, %originalBB314alteredBB
  %1715 = load i64, i64* %21, align 8, !dbg !3047
  %1716 = add i64 %1715, 1, !dbg !3047
  store i64 %1716, i64* %21, align 8, !dbg !3047
  %1717 = load i32, i32* @x.63
  %1718 = load i32, i32* @y.64
  %1719 = sub i32 %1717, 1
  %1720 = mul i32 %1717, %1719
  %1721 = urem i32 %1720, 2
  %1722 = icmp eq i32 %1721, 0
  %1723 = icmp slt i32 %1718, 10
  %1724 = or i1 %1722, %1723
  br i1 %1724, label %originalBBpart2323, label %originalBB314alteredBB

originalBBpart2323:                               ; preds = %originalBB314
  br label %1725, !dbg !3047

1725:                                             ; preds = %originalBBpart2323
  %1726 = load i32, i32* @x.63
  %1727 = load i32, i32* @y.64
  %1728 = sub i32 %1726, 1
  %1729 = mul i32 %1726, %1728
  %1730 = urem i32 %1729, 2
  %1731 = icmp eq i32 %1730, 0
  %1732 = icmp slt i32 %1727, 10
  %1733 = or i1 %1731, %1732
  br i1 %1733, label %originalBB325, label %originalBB325alteredBB

originalBB325:                                    ; preds = %1725, %originalBB325alteredBB
  %1734 = load i32, i32* @x.63
  %1735 = load i32, i32* @y.64
  %1736 = sub i32 %1734, 1
  %1737 = mul i32 %1734, %1736
  %1738 = urem i32 %1737, 2
  %1739 = icmp eq i32 %1738, 0
  %1740 = icmp slt i32 %1735, 10
  %1741 = or i1 %1739, %1740
  br i1 %1741, label %originalBBpart2327, label %originalBB325alteredBB

originalBBpart2327:                               ; preds = %originalBB325
  br label %1742, !dbg !3042

1742:                                             ; preds = %originalBBpart2327
  %1743 = load i64, i64* %21, align 8, !dbg !3048
  %1744 = load i64, i64* %12, align 8, !dbg !3048
  %1745 = icmp ult i64 %1743, %1744, !dbg !3048
  br i1 %1745, label %1746, label %1750, !dbg !3051

1746:                                             ; preds = %1742
  %1747 = load i8*, i8** %11, align 8, !dbg !3048
  %1748 = load i64, i64* %21, align 8, !dbg !3048
  %1749 = getelementptr inbounds i8, i8* %1747, i64 %1748, !dbg !3048
  store i8 36, i8* %1749, align 1, !dbg !3048
  br label %1750, !dbg !3048

1750:                                             ; preds = %1746, %1742
  %1751 = load i64, i64* %21, align 8, !dbg !3051
  %1752 = add i64 %1751, 1, !dbg !3051
  store i64 %1752, i64* %21, align 8, !dbg !3051
  br label %1753, !dbg !3051

1753:                                             ; preds = %1750
  br label %1754, !dbg !3042

1754:                                             ; preds = %1753
  %1755 = load i64, i64* %21, align 8, !dbg !3052
  %1756 = load i64, i64* %12, align 8, !dbg !3052
  %1757 = icmp ult i64 %1755, %1756, !dbg !3052
  br i1 %1757, label %1758, label %1778, !dbg !3055

1758:                                             ; preds = %1754
  %1759 = load i32, i32* @x.63
  %1760 = load i32, i32* @y.64
  %1761 = sub i32 %1759, 1
  %1762 = mul i32 %1759, %1761
  %1763 = urem i32 %1762, 2
  %1764 = icmp eq i32 %1763, 0
  %1765 = icmp slt i32 %1760, 10
  %1766 = or i1 %1764, %1765
  br i1 %1766, label %originalBB329, label %originalBB329alteredBB

originalBB329:                                    ; preds = %1758, %originalBB329alteredBB
  %1767 = load i8*, i8** %11, align 8, !dbg !3052
  %1768 = load i64, i64* %21, align 8, !dbg !3052
  %1769 = getelementptr inbounds i8, i8* %1767, i64 %1768, !dbg !3052
  store i8 39, i8* %1769, align 1, !dbg !3052
  %1770 = load i32, i32* @x.63
  %1771 = load i32, i32* @y.64
  %1772 = sub i32 %1770, 1
  %1773 = mul i32 %1770, %1772
  %1774 = urem i32 %1773, 2
  %1775 = icmp eq i32 %1774, 0
  %1776 = icmp slt i32 %1771, 10
  %1777 = or i1 %1775, %1776
  br i1 %1777, label %originalBBpart2331, label %originalBB329alteredBB

originalBBpart2331:                               ; preds = %originalBB329
  br label %1778, !dbg !3052

1778:                                             ; preds = %originalBBpart2331, %1754
  %1779 = load i32, i32* @x.63
  %1780 = load i32, i32* @y.64
  %1781 = sub i32 %1779, 1
  %1782 = mul i32 %1779, %1781
  %1783 = urem i32 %1782, 2
  %1784 = icmp eq i32 %1783, 0
  %1785 = icmp slt i32 %1780, 10
  %1786 = or i1 %1784, %1785
  br i1 %1786, label %originalBB333, label %originalBB333alteredBB

originalBB333:                                    ; preds = %1778, %originalBB333alteredBB
  %1787 = load i64, i64* %21, align 8, !dbg !3055
  %1788 = add i64 %1787, 1, !dbg !3055
  store i64 %1788, i64* %21, align 8, !dbg !3055
  %1789 = load i32, i32* @x.63
  %1790 = load i32, i32* @y.64
  %1791 = sub i32 %1789, 1
  %1792 = mul i32 %1789, %1791
  %1793 = urem i32 %1792, 2
  %1794 = icmp eq i32 %1793, 0
  %1795 = icmp slt i32 %1790, 10
  %1796 = or i1 %1794, %1795
  br i1 %1796, label %originalBBpart2344, label %originalBB333alteredBB

originalBBpart2344:                               ; preds = %originalBB333
  br label %1797, !dbg !3055

1797:                                             ; preds = %originalBBpart2344
  store i8 1, i8* %28, align 1, !dbg !3042
  br label %1798, !dbg !3042

1798:                                             ; preds = %1797, %1662, %1659
  br label %1799, !dbg !3039

1799:                                             ; preds = %1798
  %1800 = load i64, i64* %21, align 8, !dbg !3056
  %1801 = load i64, i64* %12, align 8, !dbg !3056
  %1802 = icmp ult i64 %1800, %1801, !dbg !3056
  br i1 %1802, label %1803, label %1807, !dbg !3059

1803:                                             ; preds = %1799
  %1804 = load i8*, i8** %11, align 8, !dbg !3056
  %1805 = load i64, i64* %21, align 8, !dbg !3056
  %1806 = getelementptr inbounds i8, i8* %1804, i64 %1805, !dbg !3056
  store i8 92, i8* %1806, align 1, !dbg !3056
  br label %1807, !dbg !3056

1807:                                             ; preds = %1803, %1799
  %1808 = load i64, i64* %21, align 8, !dbg !3059
  %1809 = add i64 %1808, 1, !dbg !3059
  store i64 %1809, i64* %21, align 8, !dbg !3059
  br label %1810, !dbg !3059

1810:                                             ; preds = %1807
  br label %1811, !dbg !3039

1811:                                             ; preds = %1810
  br label %1812, !dbg !3060

1812:                                             ; preds = %1811
  %1813 = load i32, i32* @x.63
  %1814 = load i32, i32* @y.64
  %1815 = sub i32 %1813, 1
  %1816 = mul i32 %1813, %1815
  %1817 = urem i32 %1816, 2
  %1818 = icmp eq i32 %1817, 0
  %1819 = icmp slt i32 %1814, 10
  %1820 = or i1 %1818, %1819
  br i1 %1820, label %originalBB346, label %originalBB346alteredBB

originalBB346:                                    ; preds = %1812, %originalBB346alteredBB
  %1821 = load i64, i64* %21, align 8, !dbg !3061
  %1822 = load i64, i64* %12, align 8, !dbg !3061
  %1823 = icmp ult i64 %1821, %1822, !dbg !3061
  %1824 = load i32, i32* @x.63
  %1825 = load i32, i32* @y.64
  %1826 = sub i32 %1824, 1
  %1827 = mul i32 %1824, %1826
  %1828 = urem i32 %1827, 2
  %1829 = icmp eq i32 %1828, 0
  %1830 = icmp slt i32 %1825, 10
  %1831 = or i1 %1829, %1830
  br i1 %1831, label %originalBBpart2348, label %originalBB346alteredBB

originalBBpart2348:                               ; preds = %originalBB346
  br i1 %1823, label %1832, label %1841, !dbg !3064

1832:                                             ; preds = %originalBBpart2348
  %1833 = load i8, i8* %31, align 1, !dbg !3061
  %1834 = zext i8 %1833 to i32, !dbg !3061
  %1835 = ashr i32 %1834, 6, !dbg !3061
  %1836 = add nsw i32 48, %1835, !dbg !3061
  %1837 = trunc i32 %1836 to i8, !dbg !3061
  %1838 = load i8*, i8** %11, align 8, !dbg !3061
  %1839 = load i64, i64* %21, align 8, !dbg !3061
  %1840 = getelementptr inbounds i8, i8* %1838, i64 %1839, !dbg !3061
  store i8 %1837, i8* %1840, align 1, !dbg !3061
  br label %1841, !dbg !3061

1841:                                             ; preds = %1832, %originalBBpart2348
  %1842 = load i64, i64* %21, align 8, !dbg !3064
  %1843 = add i64 %1842, 1, !dbg !3064
  store i64 %1843, i64* %21, align 8, !dbg !3064
  br label %1844, !dbg !3064

1844:                                             ; preds = %1841
  br label %1845, !dbg !3065

1845:                                             ; preds = %1844
  %1846 = load i64, i64* %21, align 8, !dbg !3066
  %1847 = load i64, i64* %12, align 8, !dbg !3066
  %1848 = icmp ult i64 %1846, %1847, !dbg !3066
  br i1 %1848, label %1849, label %1859, !dbg !3069

1849:                                             ; preds = %1845
  %1850 = load i8, i8* %31, align 1, !dbg !3066
  %1851 = zext i8 %1850 to i32, !dbg !3066
  %1852 = ashr i32 %1851, 3, !dbg !3066
  %1853 = and i32 %1852, 7, !dbg !3066
  %1854 = add nsw i32 48, %1853, !dbg !3066
  %1855 = trunc i32 %1854 to i8, !dbg !3066
  %1856 = load i8*, i8** %11, align 8, !dbg !3066
  %1857 = load i64, i64* %21, align 8, !dbg !3066
  %1858 = getelementptr inbounds i8, i8* %1856, i64 %1857, !dbg !3066
  store i8 %1855, i8* %1858, align 1, !dbg !3066
  br label %1859, !dbg !3066

1859:                                             ; preds = %1849, %1845
  %1860 = load i64, i64* %21, align 8, !dbg !3069
  %1861 = add i64 %1860, 1, !dbg !3069
  store i64 %1861, i64* %21, align 8, !dbg !3069
  br label %1862, !dbg !3069

1862:                                             ; preds = %1859
  %1863 = load i32, i32* @x.63
  %1864 = load i32, i32* @y.64
  %1865 = sub i32 %1863, 1
  %1866 = mul i32 %1863, %1865
  %1867 = urem i32 %1866, 2
  %1868 = icmp eq i32 %1867, 0
  %1869 = icmp slt i32 %1864, 10
  %1870 = or i1 %1868, %1869
  br i1 %1870, label %originalBB350, label %originalBB350alteredBB

originalBB350:                                    ; preds = %1862, %originalBB350alteredBB
  %1871 = load i8, i8* %31, align 1, !dbg !3070
  %1872 = zext i8 %1871 to i32, !dbg !3070
  %1873 = and i32 %1872, 7, !dbg !3071
  %1874 = add nsw i32 48, %1873, !dbg !3072
  %1875 = trunc i32 %1874 to i8, !dbg !3073
  store i8 %1875, i8* %31, align 1, !dbg !3074
  %1876 = load i32, i32* @x.63
  %1877 = load i32, i32* @y.64
  %1878 = sub i32 %1876, 1
  %1879 = mul i32 %1876, %1878
  %1880 = urem i32 %1879, 2
  %1881 = icmp eq i32 %1880, 0
  %1882 = icmp slt i32 %1877, 10
  %1883 = or i1 %1881, %1882
  br i1 %1883, label %originalBBpart2364, label %originalBB350alteredBB

originalBBpart2364:                               ; preds = %originalBB350
  br label %1901, !dbg !3075

1884:                                             ; preds = %originalBBpart2300, %1616
  %1885 = load i8, i8* %33, align 1, !dbg !3076
  %1886 = trunc i8 %1885 to i1, !dbg !3076
  br i1 %1886, label %1887, label %1900, !dbg !3078

1887:                                             ; preds = %1884
  br label %1888, !dbg !3079

1888:                                             ; preds = %1887
  %1889 = load i64, i64* %21, align 8, !dbg !3081
  %1890 = load i64, i64* %12, align 8, !dbg !3081
  %1891 = icmp ult i64 %1889, %1890, !dbg !3081
  br i1 %1891, label %1892, label %1896, !dbg !3084

1892:                                             ; preds = %1888
  %1893 = load i8*, i8** %11, align 8, !dbg !3081
  %1894 = load i64, i64* %21, align 8, !dbg !3081
  %1895 = getelementptr inbounds i8, i8* %1893, i64 %1894, !dbg !3081
  store i8 92, i8* %1895, align 1, !dbg !3081
  br label %1896, !dbg !3081

1896:                                             ; preds = %1892, %1888
  %1897 = load i64, i64* %21, align 8, !dbg !3084
  %1898 = add i64 %1897, 1, !dbg !3084
  store i64 %1898, i64* %21, align 8, !dbg !3084
  br label %1899, !dbg !3084

1899:                                             ; preds = %1896
  store i8 0, i8* %33, align 1, !dbg !3085
  br label %1900, !dbg !3086

1900:                                             ; preds = %1899, %1884
  br label %1901

1901:                                             ; preds = %1900, %originalBBpart2364
  %1902 = load i32, i32* @x.63
  %1903 = load i32, i32* @y.64
  %1904 = sub i32 %1902, 1
  %1905 = mul i32 %1902, %1904
  %1906 = urem i32 %1905, 2
  %1907 = icmp eq i32 %1906, 0
  %1908 = icmp slt i32 %1903, 10
  %1909 = or i1 %1907, %1908
  br i1 %1909, label %originalBB366, label %originalBB366alteredBB

originalBB366:                                    ; preds = %1901, %originalBB366alteredBB
  %1910 = load i64, i64* %42, align 8, !dbg !3087
  %1911 = load i64, i64* %20, align 8, !dbg !3089
  %1912 = add i64 %1911, 1, !dbg !3090
  %1913 = icmp ule i64 %1910, %1912, !dbg !3091
  %1914 = load i32, i32* @x.63
  %1915 = load i32, i32* @y.64
  %1916 = sub i32 %1914, 1
  %1917 = mul i32 %1914, %1916
  %1918 = urem i32 %1917, 2
  %1919 = icmp eq i32 %1918, 0
  %1920 = icmp slt i32 %1915, 10
  %1921 = or i1 %1919, %1920
  br i1 %1921, label %originalBBpart2371, label %originalBB366alteredBB

originalBBpart2371:                               ; preds = %originalBB366
  br i1 %1913, label %1922, label %1923, !dbg !3092

1922:                                             ; preds = %originalBBpart2371
  br label %2055, !dbg !3093

1923:                                             ; preds = %originalBBpart2371
  br label %1924, !dbg !3094

1924:                                             ; preds = %1923
  %1925 = load i8, i8* %28, align 1, !dbg !3095
  %1926 = trunc i8 %1925 to i1, !dbg !3095
  br i1 %1926, label %1927, label %2019, !dbg !3095

1927:                                             ; preds = %1924
  %1928 = load i32, i32* @x.63
  %1929 = load i32, i32* @y.64
  %1930 = sub i32 %1928, 1
  %1931 = mul i32 %1928, %1930
  %1932 = urem i32 %1931, 2
  %1933 = icmp eq i32 %1932, 0
  %1934 = icmp slt i32 %1929, 10
  %1935 = or i1 %1933, %1934
  br i1 %1935, label %originalBB373, label %originalBB373alteredBB

originalBB373:                                    ; preds = %1927, %originalBB373alteredBB
  %1936 = load i8, i8* %34, align 1, !dbg !3095
  %1937 = trunc i8 %1936 to i1, !dbg !3095
  %1938 = load i32, i32* @x.63
  %1939 = load i32, i32* @y.64
  %1940 = sub i32 %1938, 1
  %1941 = mul i32 %1938, %1940
  %1942 = urem i32 %1941, 2
  %1943 = icmp eq i32 %1942, 0
  %1944 = icmp slt i32 %1939, 10
  %1945 = or i1 %1943, %1944
  br i1 %1945, label %originalBBpart2375, label %originalBB373alteredBB

originalBBpart2375:                               ; preds = %originalBB373
  br i1 %1937, label %2019, label %1946, !dbg !3098

1946:                                             ; preds = %originalBBpart2375
  %1947 = load i32, i32* @x.63
  %1948 = load i32, i32* @y.64
  %1949 = sub i32 %1947, 1
  %1950 = mul i32 %1947, %1949
  %1951 = urem i32 %1950, 2
  %1952 = icmp eq i32 %1951, 0
  %1953 = icmp slt i32 %1948, 10
  %1954 = or i1 %1952, %1953
  br i1 %1954, label %originalBB377, label %originalBB377alteredBB

originalBB377:                                    ; preds = %1946, %originalBB377alteredBB
  %1955 = load i32, i32* @x.63
  %1956 = load i32, i32* @y.64
  %1957 = sub i32 %1955, 1
  %1958 = mul i32 %1955, %1957
  %1959 = urem i32 %1958, 2
  %1960 = icmp eq i32 %1959, 0
  %1961 = icmp slt i32 %1956, 10
  %1962 = or i1 %1960, %1961
  br i1 %1962, label %originalBBpart2379, label %originalBB377alteredBB

originalBBpart2379:                               ; preds = %originalBB377
  br label %1963, !dbg !3099

1963:                                             ; preds = %originalBBpart2379
  %1964 = load i64, i64* %21, align 8, !dbg !3101
  %1965 = load i64, i64* %12, align 8, !dbg !3101
  %1966 = icmp ult i64 %1964, %1965, !dbg !3101
  br i1 %1966, label %1967, label %1987, !dbg !3104

1967:                                             ; preds = %1963
  %1968 = load i32, i32* @x.63
  %1969 = load i32, i32* @y.64
  %1970 = sub i32 %1968, 1
  %1971 = mul i32 %1968, %1970
  %1972 = urem i32 %1971, 2
  %1973 = icmp eq i32 %1972, 0
  %1974 = icmp slt i32 %1969, 10
  %1975 = or i1 %1973, %1974
  br i1 %1975, label %originalBB381, label %originalBB381alteredBB

originalBB381:                                    ; preds = %1967, %originalBB381alteredBB
  %1976 = load i8*, i8** %11, align 8, !dbg !3101
  %1977 = load i64, i64* %21, align 8, !dbg !3101
  %1978 = getelementptr inbounds i8, i8* %1976, i64 %1977, !dbg !3101
  store i8 39, i8* %1978, align 1, !dbg !3101
  %1979 = load i32, i32* @x.63
  %1980 = load i32, i32* @y.64
  %1981 = sub i32 %1979, 1
  %1982 = mul i32 %1979, %1981
  %1983 = urem i32 %1982, 2
  %1984 = icmp eq i32 %1983, 0
  %1985 = icmp slt i32 %1980, 10
  %1986 = or i1 %1984, %1985
  br i1 %1986, label %originalBBpart2383, label %originalBB381alteredBB

originalBBpart2383:                               ; preds = %originalBB381
  br label %1987, !dbg !3101

1987:                                             ; preds = %originalBBpart2383, %1963
  %1988 = load i32, i32* @x.63
  %1989 = load i32, i32* @y.64
  %1990 = sub i32 %1988, 1
  %1991 = mul i32 %1988, %1990
  %1992 = urem i32 %1991, 2
  %1993 = icmp eq i32 %1992, 0
  %1994 = icmp slt i32 %1989, 10
  %1995 = or i1 %1993, %1994
  br i1 %1995, label %originalBB385, label %originalBB385alteredBB

originalBB385:                                    ; preds = %1987, %originalBB385alteredBB
  %1996 = load i64, i64* %21, align 8, !dbg !3104
  %1997 = add i64 %1996, 1, !dbg !3104
  store i64 %1997, i64* %21, align 8, !dbg !3104
  %1998 = load i32, i32* @x.63
  %1999 = load i32, i32* @y.64
  %2000 = sub i32 %1998, 1
  %2001 = mul i32 %1998, %2000
  %2002 = urem i32 %2001, 2
  %2003 = icmp eq i32 %2002, 0
  %2004 = icmp slt i32 %1999, 10
  %2005 = or i1 %2003, %2004
  br i1 %2005, label %originalBBpart2387, label %originalBB385alteredBB

originalBBpart2387:                               ; preds = %originalBB385
  br label %2006, !dbg !3104

2006:                                             ; preds = %originalBBpart2387
  br label %2007, !dbg !3099

2007:                                             ; preds = %2006
  %2008 = load i64, i64* %21, align 8, !dbg !3105
  %2009 = load i64, i64* %12, align 8, !dbg !3105
  %2010 = icmp ult i64 %2008, %2009, !dbg !3105
  br i1 %2010, label %2011, label %2015, !dbg !3108

2011:                                             ; preds = %2007
  %2012 = load i8*, i8** %11, align 8, !dbg !3105
  %2013 = load i64, i64* %21, align 8, !dbg !3105
  %2014 = getelementptr inbounds i8, i8* %2012, i64 %2013, !dbg !3105
  store i8 39, i8* %2014, align 1, !dbg !3105
  br label %2015, !dbg !3105

2015:                                             ; preds = %2011, %2007
  %2016 = load i64, i64* %21, align 8, !dbg !3108
  %2017 = add i64 %2016, 1, !dbg !3108
  store i64 %2017, i64* %21, align 8, !dbg !3108
  br label %2018, !dbg !3108

2018:                                             ; preds = %2015
  store i8 0, i8* %28, align 1, !dbg !3099
  br label %2019, !dbg !3099

2019:                                             ; preds = %2018, %originalBBpart2375, %1924
  br label %2020, !dbg !3098

2020:                                             ; preds = %2019
  %2021 = load i32, i32* @x.63
  %2022 = load i32, i32* @y.64
  %2023 = sub i32 %2021, 1
  %2024 = mul i32 %2021, %2023
  %2025 = urem i32 %2024, 2
  %2026 = icmp eq i32 %2025, 0
  %2027 = icmp slt i32 %2022, 10
  %2028 = or i1 %2026, %2027
  br i1 %2028, label %originalBB389, label %originalBB389alteredBB

originalBB389:                                    ; preds = %2020, %originalBB389alteredBB
  %2029 = load i32, i32* @x.63
  %2030 = load i32, i32* @y.64
  %2031 = sub i32 %2029, 1
  %2032 = mul i32 %2029, %2031
  %2033 = urem i32 %2032, 2
  %2034 = icmp eq i32 %2033, 0
  %2035 = icmp slt i32 %2030, 10
  %2036 = or i1 %2034, %2035
  br i1 %2036, label %originalBBpart2391, label %originalBB389alteredBB

originalBBpart2391:                               ; preds = %originalBB389
  br label %2037, !dbg !3109

2037:                                             ; preds = %originalBBpart2391
  %2038 = load i64, i64* %21, align 8, !dbg !3110
  %2039 = load i64, i64* %12, align 8, !dbg !3110
  %2040 = icmp ult i64 %2038, %2039, !dbg !3110
  br i1 %2040, label %2041, label %2046, !dbg !3113

2041:                                             ; preds = %2037
  %2042 = load i8, i8* %31, align 1, !dbg !3110
  %2043 = load i8*, i8** %11, align 8, !dbg !3110
  %2044 = load i64, i64* %21, align 8, !dbg !3110
  %2045 = getelementptr inbounds i8, i8* %2043, i64 %2044, !dbg !3110
  store i8 %2042, i8* %2045, align 1, !dbg !3110
  br label %2046, !dbg !3110

2046:                                             ; preds = %2041, %2037
  %2047 = load i64, i64* %21, align 8, !dbg !3113
  %2048 = add i64 %2047, 1, !dbg !3113
  store i64 %2048, i64* %21, align 8, !dbg !3113
  br label %2049, !dbg !3113

2049:                                             ; preds = %2046
  %2050 = load i8*, i8** %13, align 8, !dbg !3114
  %2051 = load i64, i64* %20, align 8, !dbg !3115
  %2052 = add i64 %2051, 1, !dbg !3115
  store i64 %2052, i64* %20, align 8, !dbg !3115
  %2053 = getelementptr inbounds i8, i8* %2050, i64 %2052, !dbg !3114
  %2054 = load i8, i8* %2053, align 1, !dbg !3114
  store i8 %2054, i8* %31, align 1, !dbg !3116
  br label %1616, !dbg !3117, !llvm.loop !3118

2055:                                             ; preds = %1922
  br label %2310, !dbg !3121

2056:                                             ; preds = %originalBBpart2296, %1590
  br label %2057, !dbg !3122

2057:                                             ; preds = %2056, %1279, %originalBBpart2213, %originalBBpart2181, %1071, %1034, %1021, %originalBBpart2141, %660
  %2058 = load i8, i8* %25, align 1, !dbg !3123
  %2059 = trunc i8 %2058 to i1, !dbg !3123
  br i1 %2059, label %2060, label %2063, !dbg !3125

2060:                                             ; preds = %2057
  %2061 = load i32, i32* %15, align 4, !dbg !3126
  %2062 = icmp ne i32 %2061, 2, !dbg !3127
  br i1 %2062, label %2082, label %2063, !dbg !3128

2063:                                             ; preds = %2060, %2057
  %2064 = load i32, i32* @x.63
  %2065 = load i32, i32* @y.64
  %2066 = sub i32 %2064, 1
  %2067 = mul i32 %2064, %2066
  %2068 = urem i32 %2067, 2
  %2069 = icmp eq i32 %2068, 0
  %2070 = icmp slt i32 %2065, 10
  %2071 = or i1 %2069, %2070
  br i1 %2071, label %originalBB393, label %originalBB393alteredBB

originalBB393:                                    ; preds = %2063, %originalBB393alteredBB
  %2072 = load i8, i8* %27, align 1, !dbg !3129
  %2073 = trunc i8 %2072 to i1, !dbg !3129
  %2074 = load i32, i32* @x.63
  %2075 = load i32, i32* @y.64
  %2076 = sub i32 %2074, 1
  %2077 = mul i32 %2074, %2076
  %2078 = urem i32 %2077, 2
  %2079 = icmp eq i32 %2078, 0
  %2080 = icmp slt i32 %2075, 10
  %2081 = or i1 %2079, %2080
  br i1 %2081, label %originalBBpart2395, label %originalBB393alteredBB

originalBBpart2395:                               ; preds = %originalBB393
  br i1 %2073, label %2082, label %2115, !dbg !3130

2082:                                             ; preds = %originalBBpart2395, %2060
  %2083 = load i32*, i32** %17, align 8, !dbg !3131
  %2084 = icmp ne i32* %2083, null, !dbg !3131
  br i1 %2084, label %2085, label %2115, !dbg !3132

2085:                                             ; preds = %2082
  %2086 = load i32, i32* @x.63
  %2087 = load i32, i32* @y.64
  %2088 = sub i32 %2086, 1
  %2089 = mul i32 %2086, %2088
  %2090 = urem i32 %2089, 2
  %2091 = icmp eq i32 %2090, 0
  %2092 = icmp slt i32 %2087, 10
  %2093 = or i1 %2091, %2092
  br i1 %2093, label %originalBB397, label %originalBB397alteredBB

originalBB397:                                    ; preds = %2085, %originalBB397alteredBB
  %2094 = load i32*, i32** %17, align 8, !dbg !3133
  %2095 = load i8, i8* %31, align 1, !dbg !3134
  %2096 = zext i8 %2095 to i64, !dbg !3134
  %2097 = udiv i64 %2096, 32, !dbg !3135
  %2098 = getelementptr inbounds i32, i32* %2094, i64 %2097, !dbg !3133
  %2099 = load i32, i32* %2098, align 4, !dbg !3133
  %2100 = load i8, i8* %31, align 1, !dbg !3136
  %2101 = zext i8 %2100 to i64, !dbg !3136
  %2102 = urem i64 %2101, 32, !dbg !3137
  %2103 = trunc i64 %2102 to i32, !dbg !3138
  %2104 = lshr i32 %2099, %2103, !dbg !3138
  %2105 = and i32 %2104, 1, !dbg !3139
  %2106 = icmp ne i32 %2105, 0, !dbg !3139
  %2107 = load i32, i32* @x.63
  %2108 = load i32, i32* @y.64
  %2109 = sub i32 %2107, 1
  %2110 = mul i32 %2107, %2109
  %2111 = urem i32 %2110, 2
  %2112 = icmp eq i32 %2111, 0
  %2113 = icmp slt i32 %2108, 10
  %2114 = or i1 %2112, %2113
  br i1 %2114, label %originalBBpart2417, label %originalBB397alteredBB

originalBBpart2417:                               ; preds = %originalBB397
  br i1 %2106, label %2135, label %2115, !dbg !3140

2115:                                             ; preds = %originalBBpart2417, %2082, %originalBBpart2395
  %2116 = load i8, i8* %33, align 1, !dbg !3141
  %2117 = trunc i8 %2116 to i1, !dbg !3141
  br i1 %2117, label %2135, label %2118, !dbg !3142

2118:                                             ; preds = %2115
  %2119 = load i32, i32* @x.63
  %2120 = load i32, i32* @y.64
  %2121 = sub i32 %2119, 1
  %2122 = mul i32 %2119, %2121
  %2123 = urem i32 %2122, 2
  %2124 = icmp eq i32 %2123, 0
  %2125 = icmp slt i32 %2120, 10
  %2126 = or i1 %2124, %2125
  br i1 %2126, label %originalBB419, label %originalBB419alteredBB

originalBB419:                                    ; preds = %2118, %originalBB419alteredBB
  %2127 = load i32, i32* @x.63
  %2128 = load i32, i32* @y.64
  %2129 = sub i32 %2127, 1
  %2130 = mul i32 %2127, %2129
  %2131 = urem i32 %2130, 2
  %2132 = icmp eq i32 %2131, 0
  %2133 = icmp slt i32 %2128, 10
  %2134 = or i1 %2132, %2133
  br i1 %2134, label %originalBBpart2421, label %originalBB419alteredBB

originalBBpart2421:                               ; preds = %originalBB419
  br label %2310, !dbg !3143

2135:                                             ; preds = %2115, %originalBBpart2417
  %2136 = load i32, i32* @x.63
  %2137 = load i32, i32* @y.64
  %2138 = sub i32 %2136, 1
  %2139 = mul i32 %2136, %2138
  %2140 = urem i32 %2139, 2
  %2141 = icmp eq i32 %2140, 0
  %2142 = icmp slt i32 %2137, 10
  %2143 = or i1 %2141, %2142
  br i1 %2143, label %originalBB423, label %originalBB423alteredBB

originalBB423:                                    ; preds = %2135, %originalBB423alteredBB
  %2144 = load i32, i32* @x.63
  %2145 = load i32, i32* @y.64
  %2146 = sub i32 %2144, 1
  %2147 = mul i32 %2144, %2146
  %2148 = urem i32 %2147, 2
  %2149 = icmp eq i32 %2148, 0
  %2150 = icmp slt i32 %2145, 10
  %2151 = or i1 %2149, %2150
  br i1 %2151, label %originalBBpart2425, label %originalBB423alteredBB

originalBBpart2425:                               ; preds = %originalBB423
  br label %2152, !dbg !3141

2152:                                             ; preds = %originalBBpart2425, %1019
  call void @llvm.dbg.label(metadata !3144), !dbg !3145
  br label %2153, !dbg !3146

2153:                                             ; preds = %2152
  %2154 = load i32, i32* @x.63
  %2155 = load i32, i32* @y.64
  %2156 = sub i32 %2154, 1
  %2157 = mul i32 %2154, %2156
  %2158 = urem i32 %2157, 2
  %2159 = icmp eq i32 %2158, 0
  %2160 = icmp slt i32 %2155, 10
  %2161 = or i1 %2159, %2160
  br i1 %2161, label %originalBB427, label %originalBB427alteredBB

originalBB427:                                    ; preds = %2153, %originalBB427alteredBB
  %2162 = load i8, i8* %27, align 1, !dbg !3147
  %2163 = trunc i8 %2162 to i1, !dbg !3147
  %2164 = load i32, i32* @x.63
  %2165 = load i32, i32* @y.64
  %2166 = sub i32 %2164, 1
  %2167 = mul i32 %2164, %2166
  %2168 = urem i32 %2167, 2
  %2169 = icmp eq i32 %2168, 0
  %2170 = icmp slt i32 %2165, 10
  %2171 = or i1 %2169, %2170
  br i1 %2171, label %originalBBpart2429, label %originalBB427alteredBB

originalBBpart2429:                               ; preds = %originalBB427
  br i1 %2163, label %2172, label %2173, !dbg !3150

2172:                                             ; preds = %originalBBpart2429
  br label %2590, !dbg !3147

2173:                                             ; preds = %originalBBpart2429
  %2174 = load i32, i32* @x.63
  %2175 = load i32, i32* @y.64
  %2176 = sub i32 %2174, 1
  %2177 = mul i32 %2174, %2176
  %2178 = urem i32 %2177, 2
  %2179 = icmp eq i32 %2178, 0
  %2180 = icmp slt i32 %2175, 10
  %2181 = or i1 %2179, %2180
  br i1 %2181, label %originalBB431, label %originalBB431alteredBB

originalBB431:                                    ; preds = %2173, %originalBB431alteredBB
  store i8 1, i8* %34, align 1, !dbg !3150
  %2182 = load i32, i32* %15, align 4, !dbg !3151
  %2183 = icmp eq i32 %2182, 2, !dbg !3151
  %2184 = load i32, i32* @x.63
  %2185 = load i32, i32* @y.64
  %2186 = sub i32 %2184, 1
  %2187 = mul i32 %2184, %2186
  %2188 = urem i32 %2187, 2
  %2189 = icmp eq i32 %2188, 0
  %2190 = icmp slt i32 %2185, 10
  %2191 = or i1 %2189, %2190
  br i1 %2191, label %originalBBpart2433, label %originalBB431alteredBB

originalBBpart2433:                               ; preds = %originalBB431
  br i1 %2183, label %2192, label %2248, !dbg !3151

2192:                                             ; preds = %originalBBpart2433
  %2193 = load i8, i8* %28, align 1, !dbg !3151
  %2194 = trunc i8 %2193 to i1, !dbg !3151
  br i1 %2194, label %2248, label %2195, !dbg !3150

2195:                                             ; preds = %2192
  br label %2196, !dbg !3153

2196:                                             ; preds = %2195
  %2197 = load i64, i64* %21, align 8, !dbg !3155
  %2198 = load i64, i64* %12, align 8, !dbg !3155
  %2199 = icmp ult i64 %2197, %2198, !dbg !3155
  br i1 %2199, label %2200, label %2204, !dbg !3158

2200:                                             ; preds = %2196
  %2201 = load i8*, i8** %11, align 8, !dbg !3155
  %2202 = load i64, i64* %21, align 8, !dbg !3155
  %2203 = getelementptr inbounds i8, i8* %2201, i64 %2202, !dbg !3155
  store i8 39, i8* %2203, align 1, !dbg !3155
  br label %2204, !dbg !3155

2204:                                             ; preds = %2200, %2196
  %2205 = load i64, i64* %21, align 8, !dbg !3158
  %2206 = add i64 %2205, 1, !dbg !3158
  store i64 %2206, i64* %21, align 8, !dbg !3158
  br label %2207, !dbg !3158

2207:                                             ; preds = %2204
  %2208 = load i32, i32* @x.63
  %2209 = load i32, i32* @y.64
  %2210 = sub i32 %2208, 1
  %2211 = mul i32 %2208, %2210
  %2212 = urem i32 %2211, 2
  %2213 = icmp eq i32 %2212, 0
  %2214 = icmp slt i32 %2209, 10
  %2215 = or i1 %2213, %2214
  br i1 %2215, label %originalBB435, label %originalBB435alteredBB

originalBB435:                                    ; preds = %2207, %originalBB435alteredBB
  %2216 = load i32, i32* @x.63
  %2217 = load i32, i32* @y.64
  %2218 = sub i32 %2216, 1
  %2219 = mul i32 %2216, %2218
  %2220 = urem i32 %2219, 2
  %2221 = icmp eq i32 %2220, 0
  %2222 = icmp slt i32 %2217, 10
  %2223 = or i1 %2221, %2222
  br i1 %2223, label %originalBBpart2437, label %originalBB435alteredBB

originalBBpart2437:                               ; preds = %originalBB435
  br label %2224, !dbg !3153

2224:                                             ; preds = %originalBBpart2437
  %2225 = load i64, i64* %21, align 8, !dbg !3159
  %2226 = load i64, i64* %12, align 8, !dbg !3159
  %2227 = icmp ult i64 %2225, %2226, !dbg !3159
  br i1 %2227, label %2228, label %2232, !dbg !3162

2228:                                             ; preds = %2224
  %2229 = load i8*, i8** %11, align 8, !dbg !3159
  %2230 = load i64, i64* %21, align 8, !dbg !3159
  %2231 = getelementptr inbounds i8, i8* %2229, i64 %2230, !dbg !3159
  store i8 36, i8* %2231, align 1, !dbg !3159
  br label %2232, !dbg !3159

2232:                                             ; preds = %2228, %2224
  %2233 = load i64, i64* %21, align 8, !dbg !3162
  %2234 = add i64 %2233, 1, !dbg !3162
  store i64 %2234, i64* %21, align 8, !dbg !3162
  br label %2235, !dbg !3162

2235:                                             ; preds = %2232
  br label %2236, !dbg !3153

2236:                                             ; preds = %2235
  %2237 = load i64, i64* %21, align 8, !dbg !3163
  %2238 = load i64, i64* %12, align 8, !dbg !3163
  %2239 = icmp ult i64 %2237, %2238, !dbg !3163
  br i1 %2239, label %2240, label %2244, !dbg !3166

2240:                                             ; preds = %2236
  %2241 = load i8*, i8** %11, align 8, !dbg !3163
  %2242 = load i64, i64* %21, align 8, !dbg !3163
  %2243 = getelementptr inbounds i8, i8* %2241, i64 %2242, !dbg !3163
  store i8 39, i8* %2243, align 1, !dbg !3163
  br label %2244, !dbg !3163

2244:                                             ; preds = %2240, %2236
  %2245 = load i64, i64* %21, align 8, !dbg !3166
  %2246 = add i64 %2245, 1, !dbg !3166
  store i64 %2246, i64* %21, align 8, !dbg !3166
  br label %2247, !dbg !3166

2247:                                             ; preds = %2244
  store i8 1, i8* %28, align 1, !dbg !3153
  br label %2248, !dbg !3153

2248:                                             ; preds = %2247, %2192, %originalBBpart2433
  %2249 = load i32, i32* @x.63
  %2250 = load i32, i32* @y.64
  %2251 = sub i32 %2249, 1
  %2252 = mul i32 %2249, %2251
  %2253 = urem i32 %2252, 2
  %2254 = icmp eq i32 %2253, 0
  %2255 = icmp slt i32 %2250, 10
  %2256 = or i1 %2254, %2255
  br i1 %2256, label %originalBB439, label %originalBB439alteredBB

originalBB439:                                    ; preds = %2248, %originalBB439alteredBB
  %2257 = load i32, i32* @x.63
  %2258 = load i32, i32* @y.64
  %2259 = sub i32 %2257, 1
  %2260 = mul i32 %2257, %2259
  %2261 = urem i32 %2260, 2
  %2262 = icmp eq i32 %2261, 0
  %2263 = icmp slt i32 %2258, 10
  %2264 = or i1 %2262, %2263
  br i1 %2264, label %originalBBpart2441, label %originalBB439alteredBB

originalBBpart2441:                               ; preds = %originalBB439
  br label %2265, !dbg !3150

2265:                                             ; preds = %originalBBpart2441
  %2266 = load i32, i32* @x.63
  %2267 = load i32, i32* @y.64
  %2268 = sub i32 %2266, 1
  %2269 = mul i32 %2266, %2268
  %2270 = urem i32 %2269, 2
  %2271 = icmp eq i32 %2270, 0
  %2272 = icmp slt i32 %2267, 10
  %2273 = or i1 %2271, %2272
  br i1 %2273, label %originalBB443, label %originalBB443alteredBB

originalBB443:                                    ; preds = %2265, %originalBB443alteredBB
  %2274 = load i64, i64* %21, align 8, !dbg !3167
  %2275 = load i64, i64* %12, align 8, !dbg !3167
  %2276 = icmp ult i64 %2274, %2275, !dbg !3167
  %2277 = load i32, i32* @x.63
  %2278 = load i32, i32* @y.64
  %2279 = sub i32 %2277, 1
  %2280 = mul i32 %2277, %2279
  %2281 = urem i32 %2280, 2
  %2282 = icmp eq i32 %2281, 0
  %2283 = icmp slt i32 %2278, 10
  %2284 = or i1 %2282, %2283
  br i1 %2284, label %originalBBpart2445, label %originalBB443alteredBB

originalBBpart2445:                               ; preds = %originalBB443
  br i1 %2276, label %2285, label %2289, !dbg !3170

2285:                                             ; preds = %originalBBpart2445
  %2286 = load i8*, i8** %11, align 8, !dbg !3167
  %2287 = load i64, i64* %21, align 8, !dbg !3167
  %2288 = getelementptr inbounds i8, i8* %2286, i64 %2287, !dbg !3167
  store i8 92, i8* %2288, align 1, !dbg !3167
  br label %2289, !dbg !3167

2289:                                             ; preds = %2285, %originalBBpart2445
  %2290 = load i64, i64* %21, align 8, !dbg !3170
  %2291 = add i64 %2290, 1, !dbg !3170
  store i64 %2291, i64* %21, align 8, !dbg !3170
  br label %2292, !dbg !3170

2292:                                             ; preds = %2289
  %2293 = load i32, i32* @x.63
  %2294 = load i32, i32* @y.64
  %2295 = sub i32 %2293, 1
  %2296 = mul i32 %2293, %2295
  %2297 = urem i32 %2296, 2
  %2298 = icmp eq i32 %2297, 0
  %2299 = icmp slt i32 %2294, 10
  %2300 = or i1 %2298, %2299
  br i1 %2300, label %originalBB447, label %originalBB447alteredBB

originalBB447:                                    ; preds = %2292, %originalBB447alteredBB
  %2301 = load i32, i32* @x.63
  %2302 = load i32, i32* @y.64
  %2303 = sub i32 %2301, 1
  %2304 = mul i32 %2301, %2303
  %2305 = urem i32 %2304, 2
  %2306 = icmp eq i32 %2305, 0
  %2307 = icmp slt i32 %2302, 10
  %2308 = or i1 %2306, %2307
  br i1 %2308, label %originalBBpart2449, label %originalBB447alteredBB

originalBBpart2449:                               ; preds = %originalBB447
  br label %2309, !dbg !3150

2309:                                             ; preds = %originalBBpart2449
  br label %2310, !dbg !3150

2310:                                             ; preds = %2309, %originalBBpart2421, %2055, %990, %964
  call void @llvm.dbg.label(metadata !3171), !dbg !3172
  br label %2311, !dbg !3173

2311:                                             ; preds = %2310
  %2312 = load i8, i8* %28, align 1, !dbg !3174
  %2313 = trunc i8 %2312 to i1, !dbg !3174
  br i1 %2313, label %2314, label %2358, !dbg !3174

2314:                                             ; preds = %2311
  %2315 = load i32, i32* @x.63
  %2316 = load i32, i32* @y.64
  %2317 = sub i32 %2315, 1
  %2318 = mul i32 %2315, %2317
  %2319 = urem i32 %2318, 2
  %2320 = icmp eq i32 %2319, 0
  %2321 = icmp slt i32 %2316, 10
  %2322 = or i1 %2320, %2321
  br i1 %2322, label %originalBB451, label %originalBB451alteredBB

originalBB451:                                    ; preds = %2314, %originalBB451alteredBB
  %2323 = load i8, i8* %34, align 1, !dbg !3174
  %2324 = trunc i8 %2323 to i1, !dbg !3174
  %2325 = load i32, i32* @x.63
  %2326 = load i32, i32* @y.64
  %2327 = sub i32 %2325, 1
  %2328 = mul i32 %2325, %2327
  %2329 = urem i32 %2328, 2
  %2330 = icmp eq i32 %2329, 0
  %2331 = icmp slt i32 %2326, 10
  %2332 = or i1 %2330, %2331
  br i1 %2332, label %originalBBpart2453, label %originalBB451alteredBB

originalBBpart2453:                               ; preds = %originalBB451
  br i1 %2324, label %2358, label %2333, !dbg !3177

2333:                                             ; preds = %originalBBpart2453
  br label %2334, !dbg !3178

2334:                                             ; preds = %2333
  %2335 = load i64, i64* %21, align 8, !dbg !3180
  %2336 = load i64, i64* %12, align 8, !dbg !3180
  %2337 = icmp ult i64 %2335, %2336, !dbg !3180
  br i1 %2337, label %2338, label %2342, !dbg !3183

2338:                                             ; preds = %2334
  %2339 = load i8*, i8** %11, align 8, !dbg !3180
  %2340 = load i64, i64* %21, align 8, !dbg !3180
  %2341 = getelementptr inbounds i8, i8* %2339, i64 %2340, !dbg !3180
  store i8 39, i8* %2341, align 1, !dbg !3180
  br label %2342, !dbg !3180

2342:                                             ; preds = %2338, %2334
  %2343 = load i64, i64* %21, align 8, !dbg !3183
  %2344 = add i64 %2343, 1, !dbg !3183
  store i64 %2344, i64* %21, align 8, !dbg !3183
  br label %2345, !dbg !3183

2345:                                             ; preds = %2342
  br label %2346, !dbg !3178

2346:                                             ; preds = %2345
  %2347 = load i64, i64* %21, align 8, !dbg !3184
  %2348 = load i64, i64* %12, align 8, !dbg !3184
  %2349 = icmp ult i64 %2347, %2348, !dbg !3184
  br i1 %2349, label %2350, label %2354, !dbg !3187

2350:                                             ; preds = %2346
  %2351 = load i8*, i8** %11, align 8, !dbg !3184
  %2352 = load i64, i64* %21, align 8, !dbg !3184
  %2353 = getelementptr inbounds i8, i8* %2351, i64 %2352, !dbg !3184
  store i8 39, i8* %2353, align 1, !dbg !3184
  br label %2354, !dbg !3184

2354:                                             ; preds = %2350, %2346
  %2355 = load i64, i64* %21, align 8, !dbg !3187
  %2356 = add i64 %2355, 1, !dbg !3187
  store i64 %2356, i64* %21, align 8, !dbg !3187
  br label %2357, !dbg !3187

2357:                                             ; preds = %2354
  store i8 0, i8* %28, align 1, !dbg !3178
  br label %2358, !dbg !3178

2358:                                             ; preds = %2357, %originalBBpart2453, %2311
  %2359 = load i32, i32* @x.63
  %2360 = load i32, i32* @y.64
  %2361 = sub i32 %2359, 1
  %2362 = mul i32 %2359, %2361
  %2363 = urem i32 %2362, 2
  %2364 = icmp eq i32 %2363, 0
  %2365 = icmp slt i32 %2360, 10
  %2366 = or i1 %2364, %2365
  br i1 %2366, label %originalBB455, label %originalBB455alteredBB

originalBB455:                                    ; preds = %2358, %originalBB455alteredBB
  %2367 = load i32, i32* @x.63
  %2368 = load i32, i32* @y.64
  %2369 = sub i32 %2367, 1
  %2370 = mul i32 %2367, %2369
  %2371 = urem i32 %2370, 2
  %2372 = icmp eq i32 %2371, 0
  %2373 = icmp slt i32 %2368, 10
  %2374 = or i1 %2372, %2373
  br i1 %2374, label %originalBBpart2457, label %originalBB455alteredBB

originalBBpart2457:                               ; preds = %originalBB455
  br label %2375, !dbg !3177

2375:                                             ; preds = %originalBBpart2457
  %2376 = load i32, i32* @x.63
  %2377 = load i32, i32* @y.64
  %2378 = sub i32 %2376, 1
  %2379 = mul i32 %2376, %2378
  %2380 = urem i32 %2379, 2
  %2381 = icmp eq i32 %2380, 0
  %2382 = icmp slt i32 %2377, 10
  %2383 = or i1 %2381, %2382
  br i1 %2383, label %originalBB459, label %originalBB459alteredBB

originalBB459:                                    ; preds = %2375, %originalBB459alteredBB
  %2384 = load i32, i32* @x.63
  %2385 = load i32, i32* @y.64
  %2386 = sub i32 %2384, 1
  %2387 = mul i32 %2384, %2386
  %2388 = urem i32 %2387, 2
  %2389 = icmp eq i32 %2388, 0
  %2390 = icmp slt i32 %2385, 10
  %2391 = or i1 %2389, %2390
  br i1 %2391, label %originalBBpart2461, label %originalBB459alteredBB

originalBBpart2461:                               ; preds = %originalBB459
  br label %2392, !dbg !3188

2392:                                             ; preds = %originalBBpart2461
  %2393 = load i64, i64* %21, align 8, !dbg !3189
  %2394 = load i64, i64* %12, align 8, !dbg !3189
  %2395 = icmp ult i64 %2393, %2394, !dbg !3189
  br i1 %2395, label %2396, label %2401, !dbg !3192

2396:                                             ; preds = %2392
  %2397 = load i8, i8* %31, align 1, !dbg !3189
  %2398 = load i8*, i8** %11, align 8, !dbg !3189
  %2399 = load i64, i64* %21, align 8, !dbg !3189
  %2400 = getelementptr inbounds i8, i8* %2398, i64 %2399, !dbg !3189
  store i8 %2397, i8* %2400, align 1, !dbg !3189
  br label %2401, !dbg !3189

2401:                                             ; preds = %2396, %2392
  %2402 = load i64, i64* %21, align 8, !dbg !3192
  %2403 = add i64 %2402, 1, !dbg !3192
  store i64 %2403, i64* %21, align 8, !dbg !3192
  br label %2404, !dbg !3192

2404:                                             ; preds = %2401
  %2405 = load i8, i8* %35, align 1, !dbg !3193
  %2406 = trunc i8 %2405 to i1, !dbg !3193
  br i1 %2406, label %2424, label %2407, !dbg !3195

2407:                                             ; preds = %2404
  %2408 = load i32, i32* @x.63
  %2409 = load i32, i32* @y.64
  %2410 = sub i32 %2408, 1
  %2411 = mul i32 %2408, %2410
  %2412 = urem i32 %2411, 2
  %2413 = icmp eq i32 %2412, 0
  %2414 = icmp slt i32 %2409, 10
  %2415 = or i1 %2413, %2414
  br i1 %2415, label %originalBB463, label %originalBB463alteredBB

originalBB463:                                    ; preds = %2407, %originalBB463alteredBB
  store i8 0, i8* %30, align 1, !dbg !3196
  %2416 = load i32, i32* @x.63
  %2417 = load i32, i32* @y.64
  %2418 = sub i32 %2416, 1
  %2419 = mul i32 %2416, %2418
  %2420 = urem i32 %2419, 2
  %2421 = icmp eq i32 %2420, 0
  %2422 = icmp slt i32 %2417, 10
  %2423 = or i1 %2421, %2422
  br i1 %2423, label %originalBBpart2465, label %originalBB463alteredBB

originalBBpart2465:                               ; preds = %originalBB463
  br label %2424, !dbg !3197

2424:                                             ; preds = %originalBBpart2465, %2404
  br label %2425, !dbg !3198

2425:                                             ; preds = %2424, %658
  %2426 = load i64, i64* %20, align 8, !dbg !3199
  %2427 = add i64 %2426, 1, !dbg !3199
  store i64 %2427, i64* %20, align 8, !dbg !3199
  br label %234, !dbg !3200, !llvm.loop !3201

2428:                                             ; preds = %282
  %2429 = load i64, i64* %21, align 8, !dbg !3203
  %2430 = icmp eq i64 %2429, 0, !dbg !3205
  br i1 %2430, label %2431, label %2438, !dbg !3206

2431:                                             ; preds = %2428
  %2432 = load i32, i32* %15, align 4, !dbg !3207
  %2433 = icmp eq i32 %2432, 2, !dbg !3208
  br i1 %2433, label %2434, label %2438, !dbg !3209

2434:                                             ; preds = %2431
  %2435 = load i8, i8* %27, align 1, !dbg !3210
  %2436 = trunc i8 %2435 to i1, !dbg !3210
  br i1 %2436, label %2437, label %2438, !dbg !3211

2437:                                             ; preds = %2434
  br label %2590, !dbg !3212

2438:                                             ; preds = %2434, %2431, %2428
  %2439 = load i32, i32* %15, align 4, !dbg !3213
  %2440 = icmp eq i32 %2439, 2, !dbg !3215
  br i1 %2440, label %2441, label %2486, !dbg !3216

2441:                                             ; preds = %2438
  %2442 = load i8, i8* %27, align 1, !dbg !3217
  %2443 = trunc i8 %2442 to i1, !dbg !3217
  br i1 %2443, label %2486, label %2444, !dbg !3218

2444:                                             ; preds = %2441
  %2445 = load i8, i8* %29, align 1, !dbg !3219
  %2446 = trunc i8 %2445 to i1, !dbg !3219
  br i1 %2446, label %2447, label %2486, !dbg !3220

2447:                                             ; preds = %2444
  %2448 = load i8, i8* %30, align 1, !dbg !3221
  %2449 = trunc i8 %2448 to i1, !dbg !3221
  br i1 %2449, label %2450, label %2460, !dbg !3224

2450:                                             ; preds = %2447
  %2451 = load i8*, i8** %11, align 8, !dbg !3225
  %2452 = load i64, i64* %22, align 8, !dbg !3226
  %2453 = load i8*, i8** %13, align 8, !dbg !3227
  %2454 = load i64, i64* %14, align 8, !dbg !3228
  %2455 = load i32, i32* %16, align 4, !dbg !3229
  %2456 = load i32*, i32** %17, align 8, !dbg !3230
  %2457 = load i8*, i8** %18, align 8, !dbg !3231
  %2458 = load i8*, i8** %19, align 8, !dbg !3232
  %2459 = call i64 @quotearg_buffer_restyled(i8* %2451, i64 %2452, i8* %2453, i64 %2454, i32 5, i32 %2455, i32* %2456, i8* %2457, i8* %2458), !dbg !3233
  store i64 %2459, i64* %10, align 8, !dbg !3234
  br label %2624, !dbg !3234

2460:                                             ; preds = %2447
  %2461 = load i64, i64* %12, align 8, !dbg !3235
  %2462 = icmp ne i64 %2461, 0, !dbg !3235
  br i1 %2462, label %2484, label %2463, !dbg !3237

2463:                                             ; preds = %2460
  %2464 = load i64, i64* %22, align 8, !dbg !3238
  %2465 = icmp ne i64 %2464, 0, !dbg !3238
  br i1 %2465, label %2466, label %2484, !dbg !3239

2466:                                             ; preds = %2463
  %2467 = load i32, i32* @x.63
  %2468 = load i32, i32* @y.64
  %2469 = sub i32 %2467, 1
  %2470 = mul i32 %2467, %2469
  %2471 = urem i32 %2470, 2
  %2472 = icmp eq i32 %2471, 0
  %2473 = icmp slt i32 %2468, 10
  %2474 = or i1 %2472, %2473
  br i1 %2474, label %originalBB467, label %originalBB467alteredBB

originalBB467:                                    ; preds = %2466, %originalBB467alteredBB
  %2475 = load i64, i64* %22, align 8, !dbg !3240
  store i64 %2475, i64* %12, align 8, !dbg !3242
  store i64 0, i64* %21, align 8, !dbg !3243
  %2476 = load i32, i32* @x.63
  %2477 = load i32, i32* @y.64
  %2478 = sub i32 %2476, 1
  %2479 = mul i32 %2476, %2478
  %2480 = urem i32 %2479, 2
  %2481 = icmp eq i32 %2480, 0
  %2482 = icmp slt i32 %2477, 10
  %2483 = or i1 %2481, %2482
  br i1 %2483, label %originalBBpart2469, label %originalBB467alteredBB

originalBBpart2469:                               ; preds = %originalBB467
  br label %50, !dbg !3244

2484:                                             ; preds = %2463, %2460
  br label %2485

2485:                                             ; preds = %2484
  br label %2486, !dbg !3245

2486:                                             ; preds = %2485, %2444, %2441, %2438
  %2487 = load i8*, i8** %23, align 8, !dbg !3246
  %2488 = icmp ne i8* %2487, null, !dbg !3246
  br i1 %2488, label %2489, label %2580, !dbg !3248

2489:                                             ; preds = %2486
  %2490 = load i32, i32* @x.63
  %2491 = load i32, i32* @y.64
  %2492 = sub i32 %2490, 1
  %2493 = mul i32 %2490, %2492
  %2494 = urem i32 %2493, 2
  %2495 = icmp eq i32 %2494, 0
  %2496 = icmp slt i32 %2491, 10
  %2497 = or i1 %2495, %2496
  br i1 %2497, label %originalBB471, label %originalBB471alteredBB

originalBB471:                                    ; preds = %2489, %originalBB471alteredBB
  %2498 = load i8, i8* %27, align 1, !dbg !3249
  %2499 = trunc i8 %2498 to i1, !dbg !3249
  %2500 = load i32, i32* @x.63
  %2501 = load i32, i32* @y.64
  %2502 = sub i32 %2500, 1
  %2503 = mul i32 %2500, %2502
  %2504 = urem i32 %2503, 2
  %2505 = icmp eq i32 %2504, 0
  %2506 = icmp slt i32 %2501, 10
  %2507 = or i1 %2505, %2506
  br i1 %2507, label %originalBBpart2473, label %originalBB471alteredBB

originalBBpart2473:                               ; preds = %originalBB471
  br i1 %2499, label %2580, label %2508, !dbg !3250

2508:                                             ; preds = %originalBBpart2473
  br label %2509, !dbg !3251

2509:                                             ; preds = %originalBBpart2481, %2508
  %2510 = load i8*, i8** %23, align 8, !dbg !3252
  %2511 = load i8, i8* %2510, align 1, !dbg !3255
  %2512 = icmp ne i8 %2511, 0, !dbg !3256
  br i1 %2512, label %2513, label %2563, !dbg !3256

2513:                                             ; preds = %2509
  br label %2514, !dbg !3257

2514:                                             ; preds = %2513
  %2515 = load i64, i64* %21, align 8, !dbg !3258
  %2516 = load i64, i64* %12, align 8, !dbg !3258
  %2517 = icmp ult i64 %2515, %2516, !dbg !3258
  br i1 %2517, label %2518, label %2524, !dbg !3261

2518:                                             ; preds = %2514
  %2519 = load i8*, i8** %23, align 8, !dbg !3258
  %2520 = load i8, i8* %2519, align 1, !dbg !3258
  %2521 = load i8*, i8** %11, align 8, !dbg !3258
  %2522 = load i64, i64* %21, align 8, !dbg !3258
  %2523 = getelementptr inbounds i8, i8* %2521, i64 %2522, !dbg !3258
  store i8 %2520, i8* %2523, align 1, !dbg !3258
  br label %2524, !dbg !3258

2524:                                             ; preds = %2518, %2514
  %2525 = load i64, i64* %21, align 8, !dbg !3261
  %2526 = add i64 %2525, 1, !dbg !3261
  store i64 %2526, i64* %21, align 8, !dbg !3261
  br label %2527, !dbg !3261

2527:                                             ; preds = %2524
  %2528 = load i32, i32* @x.63
  %2529 = load i32, i32* @y.64
  %2530 = sub i32 %2528, 1
  %2531 = mul i32 %2528, %2530
  %2532 = urem i32 %2531, 2
  %2533 = icmp eq i32 %2532, 0
  %2534 = icmp slt i32 %2529, 10
  %2535 = or i1 %2533, %2534
  br i1 %2535, label %originalBB475, label %originalBB475alteredBB

originalBB475:                                    ; preds = %2527, %originalBB475alteredBB
  %2536 = load i32, i32* @x.63
  %2537 = load i32, i32* @y.64
  %2538 = sub i32 %2536, 1
  %2539 = mul i32 %2536, %2538
  %2540 = urem i32 %2539, 2
  %2541 = icmp eq i32 %2540, 0
  %2542 = icmp slt i32 %2537, 10
  %2543 = or i1 %2541, %2542
  br i1 %2543, label %originalBBpart2477, label %originalBB475alteredBB

originalBBpart2477:                               ; preds = %originalBB475
  br label %2544, !dbg !3261

2544:                                             ; preds = %originalBBpart2477
  %2545 = load i32, i32* @x.63
  %2546 = load i32, i32* @y.64
  %2547 = sub i32 %2545, 1
  %2548 = mul i32 %2545, %2547
  %2549 = urem i32 %2548, 2
  %2550 = icmp eq i32 %2549, 0
  %2551 = icmp slt i32 %2546, 10
  %2552 = or i1 %2550, %2551
  br i1 %2552, label %originalBB479, label %originalBB479alteredBB

originalBB479:                                    ; preds = %2544, %originalBB479alteredBB
  %2553 = load i8*, i8** %23, align 8, !dbg !3262
  %2554 = getelementptr inbounds i8, i8* %2553, i32 1, !dbg !3262
  store i8* %2554, i8** %23, align 8, !dbg !3262
  %2555 = load i32, i32* @x.63
  %2556 = load i32, i32* @y.64
  %2557 = sub i32 %2555, 1
  %2558 = mul i32 %2555, %2557
  %2559 = urem i32 %2558, 2
  %2560 = icmp eq i32 %2559, 0
  %2561 = icmp slt i32 %2556, 10
  %2562 = or i1 %2560, %2561
  br i1 %2562, label %originalBBpart2481, label %originalBB479alteredBB

originalBBpart2481:                               ; preds = %originalBB479
  br label %2509, !dbg !3263, !llvm.loop !3264

2563:                                             ; preds = %2509
  %2564 = load i32, i32* @x.63
  %2565 = load i32, i32* @y.64
  %2566 = sub i32 %2564, 1
  %2567 = mul i32 %2564, %2566
  %2568 = urem i32 %2567, 2
  %2569 = icmp eq i32 %2568, 0
  %2570 = icmp slt i32 %2565, 10
  %2571 = or i1 %2569, %2570
  br i1 %2571, label %originalBB483, label %originalBB483alteredBB

originalBB483:                                    ; preds = %2563, %originalBB483alteredBB
  %2572 = load i32, i32* @x.63
  %2573 = load i32, i32* @y.64
  %2574 = sub i32 %2572, 1
  %2575 = mul i32 %2572, %2574
  %2576 = urem i32 %2575, 2
  %2577 = icmp eq i32 %2576, 0
  %2578 = icmp slt i32 %2573, 10
  %2579 = or i1 %2577, %2578
  br i1 %2579, label %originalBBpart2485, label %originalBB483alteredBB

originalBBpart2485:                               ; preds = %originalBB483
  br label %2580, !dbg !3265

2580:                                             ; preds = %originalBBpart2485, %originalBBpart2473, %2486
  %2581 = load i64, i64* %21, align 8, !dbg !3266
  %2582 = load i64, i64* %12, align 8, !dbg !3268
  %2583 = icmp ult i64 %2581, %2582, !dbg !3269
  br i1 %2583, label %2584, label %2588, !dbg !3270

2584:                                             ; preds = %2580
  %2585 = load i8*, i8** %11, align 8, !dbg !3271
  %2586 = load i64, i64* %21, align 8, !dbg !3272
  %2587 = getelementptr inbounds i8, i8* %2585, i64 %2586, !dbg !3271
  store i8 0, i8* %2587, align 1, !dbg !3273
  br label %2588, !dbg !3271

2588:                                             ; preds = %2584, %2580
  %2589 = load i64, i64* %21, align 8, !dbg !3274
  store i64 %2589, i64* %10, align 8, !dbg !3275
  br label %2624, !dbg !3275

2590:                                             ; preds = %2437, %2172, %1658, %originalBBpart2276, %originalBBpart2189, %originalBBpart2177, %1014, %originalBBpart2153, %originalBBpart2104, %originalBBpart296, %419, %387
  call void @llvm.dbg.label(metadata !3276), !dbg !3277
  %2591 = load i32, i32* %15, align 4, !dbg !3278
  %2592 = icmp eq i32 %2591, 2, !dbg !3280
  br i1 %2592, label %2593, label %2597, !dbg !3281

2593:                                             ; preds = %2590
  %2594 = load i8, i8* %25, align 1, !dbg !3282
  %2595 = trunc i8 %2594 to i1, !dbg !3282
  br i1 %2595, label %2596, label %2597, !dbg !3283

2596:                                             ; preds = %2593
  store i32 4, i32* %15, align 4, !dbg !3284
  br label %2597, !dbg !3285

2597:                                             ; preds = %2596, %2593, %2590
  %2598 = load i32, i32* @x.63
  %2599 = load i32, i32* @y.64
  %2600 = sub i32 %2598, 1
  %2601 = mul i32 %2598, %2600
  %2602 = urem i32 %2601, 2
  %2603 = icmp eq i32 %2602, 0
  %2604 = icmp slt i32 %2599, 10
  %2605 = or i1 %2603, %2604
  br i1 %2605, label %originalBB487, label %originalBB487alteredBB

originalBB487:                                    ; preds = %2597, %originalBB487alteredBB
  %2606 = load i8*, i8** %11, align 8, !dbg !3286
  %2607 = load i64, i64* %12, align 8, !dbg !3287
  %2608 = load i8*, i8** %13, align 8, !dbg !3288
  %2609 = load i64, i64* %14, align 8, !dbg !3289
  %2610 = load i32, i32* %15, align 4, !dbg !3290
  %2611 = load i32, i32* %16, align 4, !dbg !3291
  %2612 = and i32 %2611, -3, !dbg !3292
  %2613 = load i8*, i8** %18, align 8, !dbg !3293
  %2614 = load i8*, i8** %19, align 8, !dbg !3294
  %2615 = call i64 @quotearg_buffer_restyled(i8* %2606, i64 %2607, i8* %2608, i64 %2609, i32 %2610, i32 %2612, i32* null, i8* %2613, i8* %2614), !dbg !3295
  store i64 %2615, i64* %10, align 8, !dbg !3296
  %2616 = load i32, i32* @x.63
  %2617 = load i32, i32* @y.64
  %2618 = sub i32 %2616, 1
  %2619 = mul i32 %2616, %2618
  %2620 = urem i32 %2619, 2
  %2621 = icmp eq i32 %2620, 0
  %2622 = icmp slt i32 %2617, 10
  %2623 = or i1 %2621, %2622
  br i1 %2623, label %originalBBpart2498, label %originalBB487alteredBB

originalBBpart2498:                               ; preds = %originalBB487
  br label %2624, !dbg !3296

2624:                                             ; preds = %originalBBpart2498, %2588, %2450
  %2625 = load i32, i32* @x.63
  %2626 = load i32, i32* @y.64
  %2627 = sub i32 %2625, 1
  %2628 = mul i32 %2625, %2627
  %2629 = urem i32 %2628, 2
  %2630 = icmp eq i32 %2629, 0
  %2631 = icmp slt i32 %2626, 10
  %2632 = or i1 %2630, %2631
  br i1 %2632, label %originalBB500, label %originalBB500alteredBB

originalBB500:                                    ; preds = %2624, %originalBB500alteredBB
  %2633 = load i64, i64* %10, align 8, !dbg !3297
  %2634 = load i32, i32* @x.63
  %2635 = load i32, i32* @y.64
  %2636 = sub i32 %2634, 1
  %2637 = mul i32 %2634, %2636
  %2638 = urem i32 %2637, 2
  %2639 = icmp eq i32 %2638, 0
  %2640 = icmp slt i32 %2635, 10
  %2641 = or i1 %2639, %2640
  br i1 %2641, label %originalBBpart2502, label %originalBB500alteredBB

originalBBpart2502:                               ; preds = %originalBB500
  ret i64 %2633, !dbg !3297

originalBBalteredBB:                              ; preds = %originalBB, %61
  %2642 = load i8*, i8** %11, align 8, !dbg !2478
  %2643 = load i64, i64* %21, align 8, !dbg !2478
  %2644 = getelementptr inbounds i8, i8* %2642, i64 %2643, !dbg !2478
  store i8 34, i8* %2644, align 1, !dbg !2478
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %85
  store i8 1, i8* %25, align 1, !dbg !2482
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.120, i64 0, i64 0), i8** %23, align 8, !dbg !2483
  store i64 1, i64* %24, align 8, !dbg !2484
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %103
  %2645 = load i32, i32* %15, align 4, !dbg !2489
  %2646 = icmp ne i32 %2645, 10, !dbg !2492
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %151
  %2647 = load i8*, i8** %23, align 8, !dbg !2518
  %2648 = getelementptr inbounds i8, i8* %2647, i32 1, !dbg !2518
  store i8* %2648, i8** %23, align 8, !dbg !2518
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %194
  %2649 = load i64, i64* %21, align 8, !dbg !2547
  %_ = sub i64 0, %2649
  %gen = add i64 %_, 1
  %_15 = shl i64 %2649, 1
  %2650 = add i64 %2649, 1, !dbg !2547
  store i64 %2650, i64* %21, align 8, !dbg !2547
  br label %originalBB14

originalBB19alteredBB:                            ; preds = %originalBB19, %213
  br label %originalBB19

originalBB23alteredBB:                            ; preds = %originalBB23, %234
  %2651 = load i64, i64* %14, align 8, !dbg !2557
  %2652 = icmp eq i64 %2651, -1, !dbg !2559
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %253
  %2653 = load i8*, i8** %13, align 8, !dbg !2560
  %2654 = load i64, i64* %20, align 8, !dbg !2561
  %2655 = getelementptr inbounds i8, i8* %2653, i64 %2654, !dbg !2560
  %2656 = load i8, i8* %2655, align 1, !dbg !2560
  %2657 = sext i8 %2656 to i32, !dbg !2560
  %2658 = icmp eq i32 %2657, 0, !dbg !2562
  %2659 = zext i1 %2658 to i32, !dbg !2562
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %295
  %2660 = load i64, i64* %20, align 8, !dbg !2587
  %2661 = load i64, i64* %24, align 8, !dbg !2588
  %_32 = sub i64 0, %2660
  %gen33 = add i64 %_32, %2661
  %_34 = sub i64 0, %2660
  %gen35 = add i64 %_34, %2661
  %2662 = add i64 %2660, %2661, !dbg !2589
  %2663 = load i64, i64* %14, align 8, !dbg !2590
  %2664 = icmp eq i64 %2663, -1, !dbg !2591
  br label %originalBB31

originalBB39alteredBB:                            ; preds = %originalBB39, %317
  %2665 = load i64, i64* %24, align 8, !dbg !2593
  %2666 = icmp ult i64 1, %2665, !dbg !2594
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %336
  %2667 = load i8*, i8** %13, align 8, !dbg !2595
  %2668 = call i64 @strlen(i8* %2667) #13, !dbg !2596
  store i64 %2668, i64* %14, align 8, !dbg !2597
  br label %originalBB43

originalBB47alteredBB:                            ; preds = %originalBB47, %355
  %2669 = load i64, i64* %14, align 8, !dbg !2598
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %389
  %2670 = load i8*, i8** %13, align 8, !dbg !2616
  %2671 = load i64, i64* %20, align 8, !dbg !2617
  %2672 = getelementptr inbounds i8, i8* %2670, i64 %2671, !dbg !2616
  %2673 = load i8, i8* %2672, align 1, !dbg !2616
  store i8 %2673, i8* %31, align 1, !dbg !2618
  %2674 = load i8, i8* %31, align 1, !dbg !2619
  %2675 = zext i8 %2674 to i32, !dbg !2619
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %423
  %2676 = load i8, i8* %28, align 1, !dbg !2631
  %2677 = trunc i8 %2676 to i1, !dbg !2631
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %447
  %2678 = load i8*, i8** %11, align 8, !dbg !2635
  %2679 = load i64, i64* %21, align 8, !dbg !2635
  %2680 = getelementptr inbounds i8, i8* %2678, i64 %2679, !dbg !2635
  store i8 39, i8* %2680, align 1, !dbg !2635
  br label %originalBB59

originalBB63alteredBB:                            ; preds = %originalBB63, %475
  %2681 = load i8*, i8** %11, align 8, !dbg !2639
  %2682 = load i64, i64* %21, align 8, !dbg !2639
  %2683 = getelementptr inbounds i8, i8* %2681, i64 %2682, !dbg !2639
  store i8 36, i8* %2683, align 1, !dbg !2639
  br label %originalBB63

originalBB67alteredBB:                            ; preds = %originalBB67, %523
  br label %originalBB67

originalBB71alteredBB:                            ; preds = %originalBB71, %540
  %2684 = load i32, i32* %15, align 4, !dbg !2651
  %2685 = icmp ne i32 %2684, 2, !dbg !2653
  br label %originalBB71

originalBB75alteredBB:                            ; preds = %originalBB75, %564
  %2686 = load i8*, i8** %13, align 8, !dbg !2660
  %2687 = load i64, i64* %20, align 8, !dbg !2661
  %_76 = sub i64 0, %2687
  %gen77 = add i64 %_76, 1
  %_78 = sub i64 0, %2687
  %gen79 = add i64 %_78, 1
  %_80 = sub i64 %2687, 1
  %gen81 = mul i64 %_80, 1
  %_82 = shl i64 %2687, 1
  %2688 = add i64 %2687, 1, !dbg !2662
  %2689 = getelementptr inbounds i8, i8* %2686, i64 %2688, !dbg !2660
  %2690 = load i8, i8* %2689, align 1, !dbg !2660
  %2691 = sext i8 %2690 to i32, !dbg !2660
  %2692 = icmp sle i32 48, %2691, !dbg !2663
  br label %originalBB75

originalBB86alteredBB:                            ; preds = %originalBB86, %601
  %2693 = load i8*, i8** %11, align 8, !dbg !2672
  %2694 = load i64, i64* %21, align 8, !dbg !2672
  %2695 = getelementptr inbounds i8, i8* %2693, i64 %2694, !dbg !2672
  store i8 48, i8* %2695, align 1, !dbg !2672
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %625
  %2696 = load i64, i64* %21, align 8, !dbg !2677
  %2697 = load i64, i64* %12, align 8, !dbg !2677
  %2698 = icmp ult i64 %2696, %2697, !dbg !2677
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %666
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %708
  %2699 = load i8, i8* %27, align 1, !dbg !2716
  %2700 = trunc i8 %2699 to i1, !dbg !2716
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %727
  br label %originalBB102

originalBB106alteredBB:                           ; preds = %originalBB106, %760
  %2701 = load i64, i64* %21, align 8, !dbg !2730
  %_107 = shl i64 %2701, 1
  %_108 = sub i64 0, %2701
  %gen109 = add i64 %_108, 1
  %_110 = sub i64 0, %2701
  %gen111 = add i64 %_110, 1
  %_112 = sub i64 %2701, 1
  %gen113 = mul i64 %_112, 1
  %_114 = sub i64 0, %2701
  %gen115 = add i64 %_114, 1
  %_116 = sub i64 0, %2701
  %gen117 = add i64 %_116, 1
  %_118 = sub i64 %2701, 1
  %gen119 = mul i64 %_118, 1
  %2702 = add i64 %2701, 1, !dbg !2730
  store i64 %2702, i64* %21, align 8, !dbg !2730
  br label %originalBB106

originalBB123alteredBB:                           ; preds = %originalBB123, %780
  %2703 = load i64, i64* %21, align 8, !dbg !2732
  %2704 = load i64, i64* %12, align 8, !dbg !2732
  %2705 = icmp ult i64 %2703, %2704, !dbg !2732
  br label %originalBB123

originalBB127alteredBB:                           ; preds = %originalBB127, %812
  %2706 = load i8*, i8** %11, align 8, !dbg !2737
  %2707 = load i64, i64* %21, align 8, !dbg !2737
  %2708 = getelementptr inbounds i8, i8* %2706, i64 %2707, !dbg !2737
  store i8 34, i8* %2708, align 1, !dbg !2737
  br label %originalBB127

originalBB131alteredBB:                           ; preds = %originalBB131, %836
  %2709 = load i64, i64* %21, align 8, !dbg !2742
  %2710 = load i64, i64* %12, align 8, !dbg !2742
  %2711 = icmp ult i64 %2709, %2710, !dbg !2742
  br label %originalBB131

originalBB135alteredBB:                           ; preds = %originalBB135, %856
  %2712 = load i8*, i8** %11, align 8, !dbg !2742
  %2713 = load i64, i64* %21, align 8, !dbg !2742
  %2714 = getelementptr inbounds i8, i8* %2712, i64 %2713, !dbg !2742
  store i8 63, i8* %2714, align 1, !dbg !2742
  br label %originalBB135

originalBB139alteredBB:                           ; preds = %originalBB139, %884
  br label %originalBB139

originalBB143alteredBB:                           ; preds = %originalBB143, %906
  store i8 116, i8* %32, align 1, !dbg !2762
  br label %originalBB143

originalBB147alteredBB:                           ; preds = %originalBB147, %924
  %2715 = load i8, i8* %31, align 1, !dbg !2766
  store i8 %2715, i8* %32, align 1, !dbg !2767
  %2716 = load i32, i32* %15, align 4, !dbg !2768
  %2717 = icmp eq i32 %2716, 2, !dbg !2770
  br label %originalBB147

originalBB151alteredBB:                           ; preds = %originalBB151, %947
  br label %originalBB151

originalBB155alteredBB:                           ; preds = %originalBB155, %968
  %2718 = load i8, i8* %27, align 1, !dbg !2781
  %2719 = trunc i8 %2718 to i1, !dbg !2781
  br label %originalBB155

originalBB159alteredBB:                           ; preds = %originalBB159, %992
  %2720 = load i32, i32* %15, align 4, !dbg !2788
  %2721 = icmp eq i32 %2720, 2, !dbg !2790
  br label %originalBB159

originalBB163alteredBB:                           ; preds = %originalBB163, %1035
  br label %originalBB163

originalBB167alteredBB:                           ; preds = %originalBB167, %1052
  %2722 = load i64, i64* %20, align 8, !dbg !2815
  %2723 = icmp ne i64 %2722, 0, !dbg !2817
  br label %originalBB167

originalBB171alteredBB:                           ; preds = %originalBB171, %1072
  br label %originalBB171

originalBB175alteredBB:                           ; preds = %originalBB175, %1096
  br label %originalBB175

originalBB179alteredBB:                           ; preds = %originalBB179, %1113
  br label %originalBB179

originalBB183alteredBB:                           ; preds = %originalBB183, %1133
  %2724 = load i8, i8* %27, align 1, !dbg !2837
  %2725 = trunc i8 %2724 to i1, !dbg !2837
  br label %originalBB183

originalBB187alteredBB:                           ; preds = %originalBB187, %1152
  br label %originalBB187

originalBB191alteredBB:                           ; preds = %originalBB191, %1190
  %2726 = load i64, i64* %21, align 8, !dbg !2858
  %2727 = load i64, i64* %12, align 8, !dbg !2858
  %2728 = icmp ult i64 %2726, %2727, !dbg !2858
  br label %originalBB191

originalBB195alteredBB:                           ; preds = %originalBB195, %1210
  %2729 = load i8*, i8** %11, align 8, !dbg !2858
  %2730 = load i64, i64* %21, align 8, !dbg !2858
  %2731 = getelementptr inbounds i8, i8* %2729, i64 %2730, !dbg !2858
  store i8 92, i8* %2731, align 1, !dbg !2858
  br label %originalBB195

originalBB199alteredBB:                           ; preds = %originalBB199, %1230
  %2732 = load i64, i64* %21, align 8, !dbg !2861
  %_200 = sub i64 %2732, 1
  %gen201 = mul i64 %_200, 1
  %_202 = sub i64 %2732, 1
  %gen203 = mul i64 %_202, 1
  %_204 = sub i64 %2732, 1
  %gen205 = mul i64 %_204, 1
  %_206 = sub i64 0, %2732
  %gen207 = add i64 %_206, 1
  %2733 = add i64 %2732, 1, !dbg !2861
  store i64 %2733, i64* %21, align 8, !dbg !2861
  br label %originalBB199

originalBB211alteredBB:                           ; preds = %originalBB211, %1262
  br label %originalBB211

originalBB215alteredBB:                           ; preds = %originalBB215, %1302
  br label %originalBB215

originalBB219alteredBB:                           ; preds = %originalBB219, %1319
  %2734 = load i8*, i8** %13, align 8, !dbg !2919
  %2735 = load i64, i64* %20, align 8, !dbg !2920
  %2736 = load i64, i64* %36, align 8, !dbg !2921
  %_220 = sub i64 0, %2735
  %gen221 = add i64 %_220, %2736
  %_222 = sub i64 %2735, %2736
  %gen223 = mul i64 %_222, %2736
  %_224 = shl i64 %2735, %2736
  %_225 = shl i64 %2735, %2736
  %2737 = add i64 %2735, %2736, !dbg !2922
  %2738 = getelementptr inbounds i8, i8* %2734, i64 %2737, !dbg !2919
  %2739 = load i64, i64* %14, align 8, !dbg !2923
  %2740 = load i64, i64* %20, align 8, !dbg !2924
  %2741 = load i64, i64* %36, align 8, !dbg !2925
  %_226 = shl i64 %2740, %2741
  %_227 = sub i64 0, %2740
  %gen228 = add i64 %_227, %2741
  %_229 = sub i64 %2740, %2741
  %gen230 = mul i64 %_229, %2741
  %_231 = sub i64 0, %2740
  %gen232 = add i64 %_231, %2741
  %_233 = sub i64 %2740, %2741
  %gen234 = mul i64 %_233, %2741
  %_235 = shl i64 %2740, %2741
  %_236 = sub i64 0, %2740
  %gen237 = add i64 %_236, %2741
  %2742 = add i64 %2740, %2741, !dbg !2926
  %_238 = shl i64 %2739, %2742
  %_239 = sub i64 0, %2739
  %gen240 = add i64 %_239, %2742
  %_241 = sub i64 %2739, %2742
  %gen242 = mul i64 %_241, %2742
  %_243 = sub i64 %2739, %2742
  %gen244 = mul i64 %_243, %2742
  %_245 = shl i64 %2739, %2742
  %_246 = shl i64 %2739, %2742
  %2743 = sub i64 %2739, %2742, !dbg !2927
  %2744 = call i64 @rpl_mbrtowc(i32* %39, i8* %2738, i64 %2743, %struct.__mbstate_t* %38), !dbg !2928
  store i64 %2744, i64* %40, align 8, !dbg !2918
  %2745 = load i64, i64* %40, align 8, !dbg !2929
  %2746 = icmp eq i64 %2745, 0, !dbg !2931
  br label %originalBB219

originalBB250alteredBB:                           ; preds = %originalBB250, %1349
  br label %originalBB250

originalBB254alteredBB:                           ; preds = %originalBB254, %1366
  %2747 = load i64, i64* %40, align 8, !dbg !2934
  %2748 = icmp eq i64 %2747, -1, !dbg !2936
  br label %originalBB254

originalBB258alteredBB:                           ; preds = %originalBB258, %1390
  %2749 = load i64, i64* %20, align 8, !dbg !2948
  %2750 = load i64, i64* %36, align 8, !dbg !2949
  %_259 = sub i64 %2749, %2750
  %gen260 = mul i64 %_259, %2750
  %_261 = shl i64 %2749, %2750
  %2751 = add i64 %2749, %2750, !dbg !2950
  %2752 = load i64, i64* %14, align 8, !dbg !2951
  %2753 = icmp ult i64 %2751, %2752, !dbg !2952
  br label %originalBB258

originalBB266alteredBB:                           ; preds = %originalBB266, %1427
  %2754 = load i8, i8* %27, align 1, !dbg !2962
  %2755 = trunc i8 %2754 to i1, !dbg !2962
  br label %originalBB266

originalBB270alteredBB:                           ; preds = %originalBB270, %1446
  %2756 = load i32, i32* %15, align 4, !dbg !2966
  %2757 = icmp eq i32 %2756, 2, !dbg !2967
  br label %originalBB270

originalBB274alteredBB:                           ; preds = %originalBB274, %1480
  br label %originalBB274

originalBB278alteredBB:                           ; preds = %originalBB278, %1497
  br label %originalBB278

originalBB282alteredBB:                           ; preds = %originalBB282, %1518
  br label %originalBB282

originalBB286alteredBB:                           ; preds = %originalBB286, %1545
  br label %originalBB286

originalBB290alteredBB:                           ; preds = %originalBB290, %1562
  br label %originalBB290

originalBB294alteredBB:                           ; preds = %originalBB294, %1593
  %2758 = load i8, i8* %37, align 1, !dbg !3017
  %2759 = trunc i8 %2758 to i1, !dbg !3017
  br label %originalBB294

originalBB298alteredBB:                           ; preds = %originalBB298, %1619
  %2760 = load i8, i8* %37, align 1, !dbg !3032
  %2761 = trunc i8 %2760 to i1, !dbg !3032
  br label %originalBB298

originalBB302alteredBB:                           ; preds = %originalBB302, %1639
  %2762 = load i8, i8* %27, align 1, !dbg !3036
  %2763 = trunc i8 %2762 to i1, !dbg !3036
  br label %originalBB302

originalBB306alteredBB:                           ; preds = %originalBB306, %1665
  br label %originalBB306

originalBB310alteredBB:                           ; preds = %originalBB310, %1682
  %2764 = load i64, i64* %21, align 8, !dbg !3044
  %2765 = load i64, i64* %12, align 8, !dbg !3044
  %2766 = icmp ult i64 %2764, %2765, !dbg !3044
  br label %originalBB310

originalBB314alteredBB:                           ; preds = %originalBB314, %1706
  %2767 = load i64, i64* %21, align 8, !dbg !3047
  %_315 = sub i64 0, %2767
  %gen316 = add i64 %_315, 1
  %_317 = shl i64 %2767, 1
  %_318 = shl i64 %2767, 1
  %_319 = shl i64 %2767, 1
  %_320 = sub i64 0, %2767
  %gen321 = add i64 %_320, 1
  %2768 = add i64 %2767, 1, !dbg !3047
  store i64 %2768, i64* %21, align 8, !dbg !3047
  br label %originalBB314

originalBB325alteredBB:                           ; preds = %originalBB325, %1725
  br label %originalBB325

originalBB329alteredBB:                           ; preds = %originalBB329, %1758
  %2769 = load i8*, i8** %11, align 8, !dbg !3052
  %2770 = load i64, i64* %21, align 8, !dbg !3052
  %2771 = getelementptr inbounds i8, i8* %2769, i64 %2770, !dbg !3052
  store i8 39, i8* %2771, align 1, !dbg !3052
  br label %originalBB329

originalBB333alteredBB:                           ; preds = %originalBB333, %1778
  %2772 = load i64, i64* %21, align 8, !dbg !3055
  %_334 = sub i64 0, %2772
  %gen335 = add i64 %_334, 1
  %_336 = shl i64 %2772, 1
  %_337 = sub i64 0, %2772
  %gen338 = add i64 %_337, 1
  %_339 = shl i64 %2772, 1
  %_340 = shl i64 %2772, 1
  %_341 = sub i64 %2772, 1
  %gen342 = mul i64 %_341, 1
  %2773 = add i64 %2772, 1, !dbg !3055
  store i64 %2773, i64* %21, align 8, !dbg !3055
  br label %originalBB333

originalBB346alteredBB:                           ; preds = %originalBB346, %1812
  %2774 = load i64, i64* %21, align 8, !dbg !3061
  %2775 = load i64, i64* %12, align 8, !dbg !3061
  %2776 = icmp ult i64 %2774, %2775, !dbg !3061
  br label %originalBB346

originalBB350alteredBB:                           ; preds = %originalBB350, %1862
  %2777 = load i8, i8* %31, align 1, !dbg !3070
  %2778 = zext i8 %2777 to i32, !dbg !3070
  %_351 = sub i32 0, %2778
  %gen352 = add i32 %_351, 7
  %_353 = shl i32 %2778, 7
  %_354 = shl i32 %2778, 7
  %_355 = sub i32 0, %2778
  %gen356 = add i32 %_355, 7
  %2779 = and i32 %2778, 7, !dbg !3071
  %_357 = sub i32 48, %2779
  %gen358 = mul i32 %_357, %2779
  %_359 = shl i32 48, %2779
  %_360 = sub i32 0, 48
  %gen361 = add i32 %_360, %2779
  %_362 = shl i32 48, %2779
  %2780 = add nsw i32 48, %2779, !dbg !3072
  %2781 = trunc i32 %2780 to i8, !dbg !3073
  store i8 %2781, i8* %31, align 1, !dbg !3074
  br label %originalBB350

originalBB366alteredBB:                           ; preds = %originalBB366, %1901
  %2782 = load i64, i64* %42, align 8, !dbg !3087
  %2783 = load i64, i64* %20, align 8, !dbg !3089
  %_367 = shl i64 %2783, 1
  %_368 = sub i64 %2783, 1
  %gen369 = mul i64 %_368, 1
  %2784 = add i64 %2783, 1, !dbg !3090
  %2785 = icmp ule i64 %2782, %2784, !dbg !3091
  br label %originalBB366

originalBB373alteredBB:                           ; preds = %originalBB373, %1927
  %2786 = load i8, i8* %34, align 1, !dbg !3095
  %2787 = trunc i8 %2786 to i1, !dbg !3095
  br label %originalBB373

originalBB377alteredBB:                           ; preds = %originalBB377, %1946
  br label %originalBB377

originalBB381alteredBB:                           ; preds = %originalBB381, %1967
  %2788 = load i8*, i8** %11, align 8, !dbg !3101
  %2789 = load i64, i64* %21, align 8, !dbg !3101
  %2790 = getelementptr inbounds i8, i8* %2788, i64 %2789, !dbg !3101
  store i8 39, i8* %2790, align 1, !dbg !3101
  br label %originalBB381

originalBB385alteredBB:                           ; preds = %originalBB385, %1987
  %2791 = load i64, i64* %21, align 8, !dbg !3104
  %2792 = add i64 %2791, 1, !dbg !3104
  store i64 %2792, i64* %21, align 8, !dbg !3104
  br label %originalBB385

originalBB389alteredBB:                           ; preds = %originalBB389, %2020
  br label %originalBB389

originalBB393alteredBB:                           ; preds = %originalBB393, %2063
  %2793 = load i8, i8* %27, align 1, !dbg !3129
  %2794 = trunc i8 %2793 to i1, !dbg !3129
  br label %originalBB393

originalBB397alteredBB:                           ; preds = %originalBB397, %2085
  %2795 = load i32*, i32** %17, align 8, !dbg !3133
  %2796 = load i8, i8* %31, align 1, !dbg !3134
  %2797 = zext i8 %2796 to i64, !dbg !3134
  %_398 = sub i64 %2797, 32
  %gen399 = mul i64 %_398, 32
  %_400 = shl i64 %2797, 32
  %_401 = sub i64 0, %2797
  %gen402 = add i64 %_401, 32
  %_403 = sub i64 %2797, 32
  %gen404 = mul i64 %_403, 32
  %_405 = shl i64 %2797, 32
  %_406 = sub i64 0, %2797
  %gen407 = add i64 %_406, 32
  %_408 = sub i64 0, %2797
  %gen409 = add i64 %_408, 32
  %2798 = udiv i64 %2797, 32, !dbg !3135
  %2799 = getelementptr inbounds i32, i32* %2795, i64 %2798, !dbg !3133
  %2800 = load i32, i32* %2799, align 4, !dbg !3133
  %2801 = load i8, i8* %31, align 1, !dbg !3136
  %2802 = zext i8 %2801 to i64, !dbg !3136
  %_410 = sub i64 0, %2802
  %gen411 = add i64 %_410, 32
  %2803 = urem i64 %2802, 32, !dbg !3137
  %2804 = trunc i64 %2803 to i32, !dbg !3138
  %_412 = sub i32 %2800, %2804
  %gen413 = mul i32 %_412, %2804
  %2805 = lshr i32 %2800, %2804, !dbg !3138
  %_414 = sub i32 0, %2805
  %gen415 = add i32 %_414, 1
  %2806 = and i32 %2805, 1, !dbg !3139
  %2807 = icmp ne i32 %2806, 0, !dbg !3139
  br label %originalBB397

originalBB419alteredBB:                           ; preds = %originalBB419, %2118
  br label %originalBB419

originalBB423alteredBB:                           ; preds = %originalBB423, %2135
  br label %originalBB423

originalBB427alteredBB:                           ; preds = %originalBB427, %2153
  %2808 = load i8, i8* %27, align 1, !dbg !3147
  %2809 = trunc i8 %2808 to i1, !dbg !3147
  br label %originalBB427

originalBB431alteredBB:                           ; preds = %originalBB431, %2173
  store i8 1, i8* %34, align 1, !dbg !3150
  %2810 = load i32, i32* %15, align 4, !dbg !3151
  %2811 = icmp eq i32 %2810, 2, !dbg !3151
  br label %originalBB431

originalBB435alteredBB:                           ; preds = %originalBB435, %2207
  br label %originalBB435

originalBB439alteredBB:                           ; preds = %originalBB439, %2248
  br label %originalBB439

originalBB443alteredBB:                           ; preds = %originalBB443, %2265
  %2812 = load i64, i64* %21, align 8, !dbg !3167
  %2813 = load i64, i64* %12, align 8, !dbg !3167
  %2814 = icmp ult i64 %2812, %2813, !dbg !3167
  br label %originalBB443

originalBB447alteredBB:                           ; preds = %originalBB447, %2292
  br label %originalBB447

originalBB451alteredBB:                           ; preds = %originalBB451, %2314
  %2815 = load i8, i8* %34, align 1, !dbg !3174
  %2816 = trunc i8 %2815 to i1, !dbg !3174
  br label %originalBB451

originalBB455alteredBB:                           ; preds = %originalBB455, %2358
  br label %originalBB455

originalBB459alteredBB:                           ; preds = %originalBB459, %2375
  br label %originalBB459

originalBB463alteredBB:                           ; preds = %originalBB463, %2407
  store i8 0, i8* %30, align 1, !dbg !3196
  br label %originalBB463

originalBB467alteredBB:                           ; preds = %originalBB467, %2466
  %2817 = load i64, i64* %22, align 8, !dbg !3240
  store i64 %2817, i64* %12, align 8, !dbg !3242
  store i64 0, i64* %21, align 8, !dbg !3243
  br label %originalBB467

originalBB471alteredBB:                           ; preds = %originalBB471, %2489
  %2818 = load i8, i8* %27, align 1, !dbg !3249
  %2819 = trunc i8 %2818 to i1, !dbg !3249
  br label %originalBB471

originalBB475alteredBB:                           ; preds = %originalBB475, %2527
  br label %originalBB475

originalBB479alteredBB:                           ; preds = %originalBB479, %2544
  %2820 = load i8*, i8** %23, align 8, !dbg !3262
  %2821 = getelementptr inbounds i8, i8* %2820, i32 1, !dbg !3262
  store i8* %2821, i8** %23, align 8, !dbg !3262
  br label %originalBB479

originalBB483alteredBB:                           ; preds = %originalBB483, %2563
  br label %originalBB483

originalBB487alteredBB:                           ; preds = %originalBB487, %2597
  %2822 = load i8*, i8** %11, align 8, !dbg !3286
  %2823 = load i64, i64* %12, align 8, !dbg !3287
  %2824 = load i8*, i8** %13, align 8, !dbg !3288
  %2825 = load i64, i64* %14, align 8, !dbg !3289
  %2826 = load i32, i32* %15, align 4, !dbg !3290
  %2827 = load i32, i32* %16, align 4, !dbg !3291
  %_488 = shl i32 %2827, -3
  %_489 = sub i32 0, %2827
  %gen490 = add i32 %_489, -3
  %_491 = sub i32 0, %2827
  %gen492 = add i32 %_491, -3
  %_493 = sub i32 %2827, -3
  %gen494 = mul i32 %_493, -3
  %_495 = sub i32 %2827, -3
  %gen496 = mul i32 %_495, -3
  %2828 = and i32 %2827, -3, !dbg !3292
  %2829 = load i8*, i8** %18, align 8, !dbg !3293
  %2830 = load i8*, i8** %19, align 8, !dbg !3294
  %2831 = call i64 @quotearg_buffer_restyled(i8* %2822, i64 %2823, i8* %2824, i64 %2825, i32 %2826, i32 %2828, i32* null, i8* %2829, i8* %2830), !dbg !3295
  store i64 %2831, i64* %10, align 8, !dbg !3296
  br label %originalBB487

originalBB500alteredBB:                           ; preds = %originalBB500, %2624
  %2832 = load i64, i64* %10, align 8, !dbg !3297
  br label %originalBB500
}

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8*, i32) #4 !dbg !3298 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3301, metadata !DIExpression()), !dbg !3302
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3303, metadata !DIExpression()), !dbg !3304
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3305, metadata !DIExpression()), !dbg !3306
  %8 = load i8*, i8** %4, align 8, !dbg !3307
  %9 = call i8* @gettext(i8* %8) #10, !dbg !3307
  store i8* %9, i8** %6, align 8, !dbg !3306
  call void @llvm.dbg.declare(metadata i8** %7, metadata !3308, metadata !DIExpression()), !dbg !3309
  %10 = load i8*, i8** %6, align 8, !dbg !3310
  %11 = load i8*, i8** %4, align 8, !dbg !3312
  %12 = icmp ne i8* %10, %11, !dbg !3313
  br i1 %12, label %13, label %15, !dbg !3314

13:                                               ; preds = %2
  %14 = load i8*, i8** %6, align 8, !dbg !3315
  store i8* %14, i8** %3, align 8, !dbg !3316
  br label %77, !dbg !3316

15:                                               ; preds = %2
  %16 = load i32, i32* @x.65
  %17 = load i32, i32* @y.66
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = call i8* @locale_charset(), !dbg !3317
  store i8* %24, i8** %7, align 8, !dbg !3318
  %25 = load i8*, i8** %7, align 8, !dbg !3319
  %26 = call i32 @c_strcasecmp(i8* %25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.123, i64 0, i64 0)) #13, !dbg !3319
  %27 = icmp eq i32 %26, 0, !dbg !3319
  %28 = load i32, i32* @x.65
  %29 = load i32, i32* @y.66
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %27, label %36, label %60, !dbg !3321

36:                                               ; preds = %originalBBpart2
  %37 = load i32, i32* @x.65
  %38 = load i32, i32* @y.66
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %36, %originalBB1alteredBB
  %45 = load i8*, i8** %4, align 8, !dbg !3322
  %46 = getelementptr inbounds i8, i8* %45, i64 0, !dbg !3322
  %47 = load i8, i8* %46, align 1, !dbg !3322
  %48 = sext i8 %47 to i32, !dbg !3322
  %49 = icmp eq i32 %48, 96, !dbg !3323
  %50 = zext i1 %49 to i64, !dbg !3322
  %51 = select i1 %49, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.124, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.125, i64 0, i64 0), !dbg !3322
  store i8* %51, i8** %3, align 8, !dbg !3324
  %52 = load i32, i32* @x.65
  %53 = load i32, i32* @y.66
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %77, !dbg !3324

60:                                               ; preds = %originalBBpart2
  %61 = load i8*, i8** %7, align 8, !dbg !3325
  %62 = call i32 @c_strcasecmp(i8* %61, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.126, i64 0, i64 0)) #13, !dbg !3325
  %63 = icmp eq i32 %62, 0, !dbg !3325
  br i1 %63, label %64, label %72, !dbg !3327

64:                                               ; preds = %60
  %65 = load i8*, i8** %4, align 8, !dbg !3328
  %66 = getelementptr inbounds i8, i8* %65, i64 0, !dbg !3328
  %67 = load i8, i8* %66, align 1, !dbg !3328
  %68 = sext i8 %67 to i32, !dbg !3328
  %69 = icmp eq i32 %68, 96, !dbg !3329
  %70 = zext i1 %69 to i64, !dbg !3328
  %71 = select i1 %69, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.127, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.128, i64 0, i64 0), !dbg !3328
  store i8* %71, i8** %3, align 8, !dbg !3330
  br label %77, !dbg !3330

72:                                               ; preds = %60
  %73 = load i32, i32* %5, align 4, !dbg !3331
  %74 = icmp eq i32 %73, 9, !dbg !3332
  %75 = zext i1 %74 to i64, !dbg !3331
  %76 = select i1 %74, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.120, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.122, i64 0, i64 0), !dbg !3331
  store i8* %76, i8** %3, align 8, !dbg !3333
  br label %77, !dbg !3333

77:                                               ; preds = %72, %64, %originalBBpart24, %13
  %78 = load i8*, i8** %3, align 8, !dbg !3334
  ret i8* %78, !dbg !3334

originalBBalteredBB:                              ; preds = %originalBB, %15
  %79 = call i8* @locale_charset(), !dbg !3317
  store i8* %79, i8** %7, align 8, !dbg !3318
  %80 = load i8*, i8** %7, align 8, !dbg !3319
  %81 = call i32 @c_strcasecmp(i8* %80, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.123, i64 0, i64 0)) #13, !dbg !3319
  %82 = icmp eq i32 %81, 0, !dbg !3319
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %36
  %83 = load i8*, i8** %4, align 8, !dbg !3322
  %84 = getelementptr inbounds i8, i8* %83, i64 0, !dbg !3322
  %85 = load i8, i8* %84, align 1, !dbg !3322
  %86 = sext i8 %85 to i32, !dbg !3322
  %87 = icmp eq i32 %86, 96, !dbg !3323
  %88 = zext i1 %87 to i64, !dbg !3322
  %89 = select i1 %87, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.124, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.125, i64 0, i64 0), !dbg !3322
  store i8* %89, i8** %3, align 8, !dbg !3324
  br label %originalBB1
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #8

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.__mbstate_t*) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char(i8*, i8 signext) #4 !dbg !3335 {
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3338, metadata !DIExpression()), !dbg !3339
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !3340, metadata !DIExpression()), !dbg !3341
  %5 = load i8*, i8** %3, align 8, !dbg !3342
  %6 = load i8, i8* %4, align 1, !dbg !3343
  %7 = call i8* @quotearg_char_mem(i8* %5, i64 -1, i8 signext %6), !dbg !3344
  ret i8* %7, !dbg !3345
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_colon(i8*) #4 !dbg !3346 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !3347, metadata !DIExpression()), !dbg !3348
  %3 = load i8*, i8** %2, align 8, !dbg !3349
  %4 = call i8* @quotearg_char(i8* %3, i8 signext 58), !dbg !3350
  ret i8* %4, !dbg !3351
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_style_colon(i32, i32, i8*) #4 !dbg !3352 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca %struct.quoting_options, align 8
  %8 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3355, metadata !DIExpression()), !dbg !3356
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3357, metadata !DIExpression()), !dbg !3358
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3359, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %7, metadata !3361, metadata !DIExpression()), !dbg !3362
  %9 = load i32, i32* %5, align 4, !dbg !3363
  call void @quoting_options_from_style(%struct.quoting_options* sret %8, i32 %9), !dbg !3364
  %10 = bitcast %struct.quoting_options* %7 to i8*, !dbg !3364
  %11 = bitcast %struct.quoting_options* %8 to i8*, !dbg !3364
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 56, i1 false), !dbg !3364
  %12 = call i32 @set_char_quoting(%struct.quoting_options* %7, i8 signext 58, i32 1), !dbg !3365
  %13 = load i32, i32* %4, align 4, !dbg !3366
  %14 = load i8*, i8** %6, align 8, !dbg !3367
  %15 = call i8* @quotearg_n_options(i32 %13, i8* %14, i64 -1, %struct.quoting_options* %7), !dbg !3368
  ret i8* %15, !dbg !3369
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret, i32) #4 !dbg !3370 {
  %3 = load i32, i32* @x.73
  %4 = load i32, i32* @y.74
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  store i32 %1, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3373, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %0, metadata !3375, metadata !DIExpression()), !dbg !3376
  %12 = bitcast %struct.quoting_options* %0 to i8*, !dbg !3376
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 56, i1 false), !dbg !3376
  %13 = load i32, i32* %11, align 4, !dbg !3377
  %14 = icmp eq i32 %13, 10, !dbg !3379
  %15 = load i32, i32* @x.73
  %16 = load i32, i32* @y.74
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %14, label %23, label %40, !dbg !3380

23:                                               ; preds = %originalBBpart2
  %24 = load i32, i32* @x.73
  %25 = load i32, i32* @y.74
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %23, %originalBB1alteredBB
  call void @abort() #12, !dbg !3381
  %32 = load i32, i32* @x.73
  %33 = load i32, i32* @y.74
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable, !dbg !3381

40:                                               ; preds = %originalBBpart2
  %41 = load i32, i32* %11, align 4, !dbg !3382
  %42 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %0, i32 0, i32 0, !dbg !3383
  store i32 %41, i32* %42, align 8, !dbg !3384
  ret void, !dbg !3385

originalBBalteredBB:                              ; preds = %originalBB, %2
  %43 = alloca i32, align 4
  store i32 %1, i32* %43, align 4
  call void @llvm.dbg.declare(metadata i32* %43, metadata !3386, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.declare(metadata !4, metadata !3420, metadata !DIExpression()), !dbg !3376
  %44 = bitcast %struct.quoting_options* %0 to i8*, !dbg !3376
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 56, i1 false), !dbg !3376
  %45 = load i32, i32* %43, align 4, !dbg !3377
  %46 = icmp eq i32 %45, 10, !dbg !3379
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %23
  call void @abort() #12, !dbg !3381
  br label %originalBB1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n_mem(i32, i8*, i64) #4 !dbg !3421 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3424, metadata !DIExpression()), !dbg !3425
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !3426, metadata !DIExpression()), !dbg !3427
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !3428, metadata !DIExpression()), !dbg !3429
  %7 = load i32, i32* %4, align 4, !dbg !3430
  %8 = load i8*, i8** %5, align 8, !dbg !3431
  %9 = load i64, i64* %6, align 8, !dbg !3432
  %10 = call i8* @quotearg_n_options(i32 %7, i8* %8, i64 %9, %struct.quoting_options* @quote_quoting_options), !dbg !3433
  ret i8* %10, !dbg !3434
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n(i32, i8*) #4 !dbg !3435 {
  %3 = load i32, i32* @x.77
  %4 = load i32, i32* @y.78
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3438, metadata !DIExpression()), !dbg !3439
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !3440, metadata !DIExpression()), !dbg !3441
  %13 = load i32, i32* %11, align 4, !dbg !3442
  %14 = load i8*, i8** %12, align 8, !dbg !3443
  %15 = call i8* @quote_n_mem(i32 %13, i8* %14, i64 -1), !dbg !3444
  %16 = load i32, i32* @x.77
  %17 = load i32, i32* @y.78
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %15, !dbg !3445

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  store i32 %0, i32* %24, align 4
  call void @llvm.dbg.declare(metadata i32* %24, metadata !3446, metadata !DIExpression()), !dbg !3439
  store i8* %1, i8** %25, align 8
  call void @llvm.dbg.declare(metadata i8** %25, metadata !3478, metadata !DIExpression()), !dbg !3441
  %26 = load i32, i32* %24, align 4, !dbg !3442
  %27 = load i8*, i8** %25, align 8, !dbg !3443
  %28 = call i8* @quote_n_mem(i32 %26, i8* %27, i64 -1), !dbg !3444
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote(i8*) #4 !dbg !3479 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !3482, metadata !DIExpression()), !dbg !3483
  %3 = load i8*, i8** %2, align 8, !dbg !3484
  %4 = call i8* @quote_n(i32 0, i8* %3), !dbg !3485
  ret i8* %4, !dbg !3486
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setlocale_null_r(i32, i8* nonnull, i64) #4 !dbg !3487 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3491, metadata !DIExpression()), !dbg !3492
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !3493, metadata !DIExpression()), !dbg !3494
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !3495, metadata !DIExpression()), !dbg !3496
  %7 = load i32, i32* %4, align 4, !dbg !3497
  %8 = load i8*, i8** %5, align 8, !dbg !3498
  %9 = load i64, i64* %6, align 8, !dbg !3499
  %10 = call i32 @setlocale_null_unlocked(i32 %7, i8* %8, i64 %9), !dbg !3500
  ret i32 %10, !dbg !3501
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setlocale_null_unlocked(i32, i8*, i64) #4 !dbg !3502 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3503, metadata !DIExpression()), !dbg !3504
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3505, metadata !DIExpression()), !dbg !3506
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !3507, metadata !DIExpression()), !dbg !3508
  call void @llvm.dbg.declare(metadata i8** %8, metadata !3509, metadata !DIExpression()), !dbg !3510
  %10 = load i32, i32* %5, align 4, !dbg !3511
  %11 = call i8* @setlocale_null_androidfix(i32 %10), !dbg !3512
  store i8* %11, i8** %8, align 8, !dbg !3510
  %12 = load i8*, i8** %8, align 8, !dbg !3513
  %13 = icmp eq i8* %12, null, !dbg !3515
  br i1 %13, label %14, label %37, !dbg !3516

14:                                               ; preds = %3
  %15 = load i32, i32* @x.83
  %16 = load i32, i32* @y.84
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = load i64, i64* %7, align 8, !dbg !3517
  %24 = icmp ugt i64 %23, 0, !dbg !3520
  %25 = load i32, i32* @x.83
  %26 = load i32, i32* @y.84
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %24, label %33, label %36, !dbg !3521

33:                                               ; preds = %originalBBpart2
  %34 = load i8*, i8** %6, align 8, !dbg !3522
  %35 = getelementptr inbounds i8, i8* %34, i64 0, !dbg !3522
  store i8 0, i8* %35, align 1, !dbg !3523
  br label %36, !dbg !3522

36:                                               ; preds = %33, %originalBBpart2
  store i32 22, i32* %4, align 4, !dbg !3524
  br label %77, !dbg !3524

37:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata i64* %9, metadata !3525, metadata !DIExpression()), !dbg !3527
  %38 = load i8*, i8** %8, align 8, !dbg !3528
  %39 = call i64 @strlen(i8* %38) #13, !dbg !3529
  store i64 %39, i64* %9, align 8, !dbg !3527
  %40 = load i64, i64* %9, align 8, !dbg !3530
  %41 = load i64, i64* %7, align 8, !dbg !3532
  %42 = icmp ult i64 %40, %41, !dbg !3533
  br i1 %42, label %43, label %48, !dbg !3534

43:                                               ; preds = %37
  %44 = load i8*, i8** %6, align 8, !dbg !3535
  %45 = load i8*, i8** %8, align 8, !dbg !3537
  %46 = load i64, i64* %9, align 8, !dbg !3538
  %47 = add i64 %46, 1, !dbg !3539
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %45, i64 %47, i1 false), !dbg !3540
  store i32 0, i32* %4, align 4, !dbg !3541
  br label %77, !dbg !3541

48:                                               ; preds = %37
  %49 = load i64, i64* %7, align 8, !dbg !3542
  %50 = icmp ugt i64 %49, 0, !dbg !3545
  br i1 %50, label %51, label %60, !dbg !3546

51:                                               ; preds = %48
  %52 = load i8*, i8** %6, align 8, !dbg !3547
  %53 = load i8*, i8** %8, align 8, !dbg !3549
  %54 = load i64, i64* %7, align 8, !dbg !3550
  %55 = sub i64 %54, 1, !dbg !3551
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %53, i64 %55, i1 false), !dbg !3552
  %56 = load i8*, i8** %6, align 8, !dbg !3553
  %57 = load i64, i64* %7, align 8, !dbg !3554
  %58 = sub i64 %57, 1, !dbg !3555
  %59 = getelementptr inbounds i8, i8* %56, i64 %58, !dbg !3553
  store i8 0, i8* %59, align 1, !dbg !3556
  br label %60, !dbg !3557

60:                                               ; preds = %51, %48
  %61 = load i32, i32* @x.83
  %62 = load i32, i32* @y.84
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %60, %originalBB1alteredBB
  store i32 34, i32* %4, align 4, !dbg !3558
  %69 = load i32, i32* @x.83
  %70 = load i32, i32* @y.84
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %77, !dbg !3558

77:                                               ; preds = %originalBBpart24, %43, %36
  %78 = load i32, i32* @x.83
  %79 = load i32, i32* @y.84
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %77, %originalBB6alteredBB
  %86 = load i32, i32* %4, align 4, !dbg !3559
  %87 = load i32, i32* @x.83
  %88 = load i32, i32* @y.84
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i32 %86, !dbg !3559

originalBBalteredBB:                              ; preds = %originalBB, %14
  %95 = load i64, i64* %7, align 8, !dbg !3517
  %96 = icmp ugt i64 %95, 0, !dbg !3520
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %60
  store i32 34, i32* %4, align 4, !dbg !3558
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %77
  %97 = load i32, i32* %4, align 4, !dbg !3559
  br label %originalBB6
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @setlocale_null_androidfix(i32) #4 !dbg !3560 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3563, metadata !DIExpression()), !dbg !3564
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3565, metadata !DIExpression()), !dbg !3566
  %4 = load i32, i32* %2, align 4, !dbg !3567
  %5 = call i8* @setlocale(i32 %4, i8* null) #10, !dbg !3568
  store i8* %5, i8** %3, align 8, !dbg !3566
  %6 = load i8*, i8** %3, align 8, !dbg !3569
  ret i8* %6, !dbg !3570
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_arn(%struct._IO_FILE*, i8*, i8*, i8*, i8**, i64) #4 !dbg !3571 {
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8**, align 8
  %12 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %7, metadata !3625, metadata !DIExpression()), !dbg !3626
  store i8* %1, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !3627, metadata !DIExpression()), !dbg !3628
  store i8* %2, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !3629, metadata !DIExpression()), !dbg !3630
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !3631, metadata !DIExpression()), !dbg !3632
  store i8** %4, i8*** %11, align 8
  call void @llvm.dbg.declare(metadata i8*** %11, metadata !3633, metadata !DIExpression()), !dbg !3634
  store i64 %5, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !3635, metadata !DIExpression()), !dbg !3636
  %13 = load i8*, i8** %8, align 8, !dbg !3637
  %14 = icmp ne i8* %13, null, !dbg !3637
  br i1 %14, label %15, label %21, !dbg !3639

15:                                               ; preds = %6
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3640
  %17 = load i8*, i8** %8, align 8, !dbg !3641
  %18 = load i8*, i8** %9, align 8, !dbg !3642
  %19 = load i8*, i8** %10, align 8, !dbg !3643
  %20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.137, i64 0, i64 0), i8* %17, i8* %18, i8* %19), !dbg !3644
  br label %26, !dbg !3644

21:                                               ; preds = %6
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3645
  %23 = load i8*, i8** %9, align 8, !dbg !3646
  %24 = load i8*, i8** %10, align 8, !dbg !3647
  %25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.138, i64 0, i64 0), i8* %23, i8* %24), !dbg !3648
  br label %26

26:                                               ; preds = %21, %15
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3649
  %28 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.139, i64 0, i64 0)) #10, !dbg !3650
  %29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %28, i32 2020), !dbg !3651
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3652
  %31 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.140, i64 0, i64 0), %struct._IO_FILE* %30), !dbg !3652
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3653
  %33 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.141, i64 0, i64 0)) #10, !dbg !3654
  %34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* %33, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.142, i64 0, i64 0)), !dbg !3655
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3656
  %36 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.140, i64 0, i64 0), %struct._IO_FILE* %35), !dbg !3656
  %37 = load i64, i64* %12, align 8, !dbg !3657
  switch i64 %37, label %258 [
    i64 0, label %38
    i64 1, label %39
    i64 2, label %46
    i64 3, label %56
    i64 4, label %69
    i64 5, label %85
    i64 6, label %104
    i64 7, label %142
    i64 8, label %167
    i64 9, label %211
  ], !dbg !3658

38:                                               ; preds = %26
  br label %289, !dbg !3659

39:                                               ; preds = %26
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3661
  %41 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.143, i64 0, i64 0)) #10, !dbg !3662
  %42 = load i8**, i8*** %11, align 8, !dbg !3663
  %43 = getelementptr inbounds i8*, i8** %42, i64 0, !dbg !3663
  %44 = load i8*, i8** %43, align 8, !dbg !3663
  %45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* %41, i8* %44), !dbg !3664
  br label %289, !dbg !3665

46:                                               ; preds = %26
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3666
  %48 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.144, i64 0, i64 0)) #10, !dbg !3667
  %49 = load i8**, i8*** %11, align 8, !dbg !3668
  %50 = getelementptr inbounds i8*, i8** %49, i64 0, !dbg !3668
  %51 = load i8*, i8** %50, align 8, !dbg !3668
  %52 = load i8**, i8*** %11, align 8, !dbg !3669
  %53 = getelementptr inbounds i8*, i8** %52, i64 1, !dbg !3669
  %54 = load i8*, i8** %53, align 8, !dbg !3669
  %55 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %47, i8* %48, i8* %51, i8* %54), !dbg !3670
  br label %289, !dbg !3671

56:                                               ; preds = %26
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3672
  %58 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.145, i64 0, i64 0)) #10, !dbg !3673
  %59 = load i8**, i8*** %11, align 8, !dbg !3674
  %60 = getelementptr inbounds i8*, i8** %59, i64 0, !dbg !3674
  %61 = load i8*, i8** %60, align 8, !dbg !3674
  %62 = load i8**, i8*** %11, align 8, !dbg !3675
  %63 = getelementptr inbounds i8*, i8** %62, i64 1, !dbg !3675
  %64 = load i8*, i8** %63, align 8, !dbg !3675
  %65 = load i8**, i8*** %11, align 8, !dbg !3676
  %66 = getelementptr inbounds i8*, i8** %65, i64 2, !dbg !3676
  %67 = load i8*, i8** %66, align 8, !dbg !3676
  %68 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %57, i8* %58, i8* %61, i8* %64, i8* %67), !dbg !3677
  br label %289, !dbg !3678

69:                                               ; preds = %26
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3679
  %71 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.146, i64 0, i64 0)) #10, !dbg !3680
  %72 = load i8**, i8*** %11, align 8, !dbg !3681
  %73 = getelementptr inbounds i8*, i8** %72, i64 0, !dbg !3681
  %74 = load i8*, i8** %73, align 8, !dbg !3681
  %75 = load i8**, i8*** %11, align 8, !dbg !3682
  %76 = getelementptr inbounds i8*, i8** %75, i64 1, !dbg !3682
  %77 = load i8*, i8** %76, align 8, !dbg !3682
  %78 = load i8**, i8*** %11, align 8, !dbg !3683
  %79 = getelementptr inbounds i8*, i8** %78, i64 2, !dbg !3683
  %80 = load i8*, i8** %79, align 8, !dbg !3683
  %81 = load i8**, i8*** %11, align 8, !dbg !3684
  %82 = getelementptr inbounds i8*, i8** %81, i64 3, !dbg !3684
  %83 = load i8*, i8** %82, align 8, !dbg !3684
  %84 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %70, i8* %71, i8* %74, i8* %77, i8* %80, i8* %83), !dbg !3685
  br label %289, !dbg !3686

85:                                               ; preds = %26
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3687
  %87 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.147, i64 0, i64 0)) #10, !dbg !3688
  %88 = load i8**, i8*** %11, align 8, !dbg !3689
  %89 = getelementptr inbounds i8*, i8** %88, i64 0, !dbg !3689
  %90 = load i8*, i8** %89, align 8, !dbg !3689
  %91 = load i8**, i8*** %11, align 8, !dbg !3690
  %92 = getelementptr inbounds i8*, i8** %91, i64 1, !dbg !3690
  %93 = load i8*, i8** %92, align 8, !dbg !3690
  %94 = load i8**, i8*** %11, align 8, !dbg !3691
  %95 = getelementptr inbounds i8*, i8** %94, i64 2, !dbg !3691
  %96 = load i8*, i8** %95, align 8, !dbg !3691
  %97 = load i8**, i8*** %11, align 8, !dbg !3692
  %98 = getelementptr inbounds i8*, i8** %97, i64 3, !dbg !3692
  %99 = load i8*, i8** %98, align 8, !dbg !3692
  %100 = load i8**, i8*** %11, align 8, !dbg !3693
  %101 = getelementptr inbounds i8*, i8** %100, i64 4, !dbg !3693
  %102 = load i8*, i8** %101, align 8, !dbg !3693
  %103 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %86, i8* %87, i8* %90, i8* %93, i8* %96, i8* %99, i8* %102), !dbg !3694
  br label %289, !dbg !3695

104:                                              ; preds = %26
  %105 = load i32, i32* @x.87
  %106 = load i32, i32* @y.88
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %104, %originalBBalteredBB
  %113 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3696
  %114 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.148, i64 0, i64 0)) #10, !dbg !3697
  %115 = load i8**, i8*** %11, align 8, !dbg !3698
  %116 = getelementptr inbounds i8*, i8** %115, i64 0, !dbg !3698
  %117 = load i8*, i8** %116, align 8, !dbg !3698
  %118 = load i8**, i8*** %11, align 8, !dbg !3699
  %119 = getelementptr inbounds i8*, i8** %118, i64 1, !dbg !3699
  %120 = load i8*, i8** %119, align 8, !dbg !3699
  %121 = load i8**, i8*** %11, align 8, !dbg !3700
  %122 = getelementptr inbounds i8*, i8** %121, i64 2, !dbg !3700
  %123 = load i8*, i8** %122, align 8, !dbg !3700
  %124 = load i8**, i8*** %11, align 8, !dbg !3701
  %125 = getelementptr inbounds i8*, i8** %124, i64 3, !dbg !3701
  %126 = load i8*, i8** %125, align 8, !dbg !3701
  %127 = load i8**, i8*** %11, align 8, !dbg !3702
  %128 = getelementptr inbounds i8*, i8** %127, i64 4, !dbg !3702
  %129 = load i8*, i8** %128, align 8, !dbg !3702
  %130 = load i8**, i8*** %11, align 8, !dbg !3703
  %131 = getelementptr inbounds i8*, i8** %130, i64 5, !dbg !3703
  %132 = load i8*, i8** %131, align 8, !dbg !3703
  %133 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %113, i8* %114, i8* %117, i8* %120, i8* %123, i8* %126, i8* %129, i8* %132), !dbg !3704
  %134 = load i32, i32* @x.87
  %135 = load i32, i32* @y.88
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %289, !dbg !3705

142:                                              ; preds = %26
  %143 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3706
  %144 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.149, i64 0, i64 0)) #10, !dbg !3707
  %145 = load i8**, i8*** %11, align 8, !dbg !3708
  %146 = getelementptr inbounds i8*, i8** %145, i64 0, !dbg !3708
  %147 = load i8*, i8** %146, align 8, !dbg !3708
  %148 = load i8**, i8*** %11, align 8, !dbg !3709
  %149 = getelementptr inbounds i8*, i8** %148, i64 1, !dbg !3709
  %150 = load i8*, i8** %149, align 8, !dbg !3709
  %151 = load i8**, i8*** %11, align 8, !dbg !3710
  %152 = getelementptr inbounds i8*, i8** %151, i64 2, !dbg !3710
  %153 = load i8*, i8** %152, align 8, !dbg !3710
  %154 = load i8**, i8*** %11, align 8, !dbg !3711
  %155 = getelementptr inbounds i8*, i8** %154, i64 3, !dbg !3711
  %156 = load i8*, i8** %155, align 8, !dbg !3711
  %157 = load i8**, i8*** %11, align 8, !dbg !3712
  %158 = getelementptr inbounds i8*, i8** %157, i64 4, !dbg !3712
  %159 = load i8*, i8** %158, align 8, !dbg !3712
  %160 = load i8**, i8*** %11, align 8, !dbg !3713
  %161 = getelementptr inbounds i8*, i8** %160, i64 5, !dbg !3713
  %162 = load i8*, i8** %161, align 8, !dbg !3713
  %163 = load i8**, i8*** %11, align 8, !dbg !3714
  %164 = getelementptr inbounds i8*, i8** %163, i64 6, !dbg !3714
  %165 = load i8*, i8** %164, align 8, !dbg !3714
  %166 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %143, i8* %144, i8* %147, i8* %150, i8* %153, i8* %156, i8* %159, i8* %162, i8* %165), !dbg !3715
  br label %289, !dbg !3716

167:                                              ; preds = %26
  %168 = load i32, i32* @x.87
  %169 = load i32, i32* @y.88
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %167, %originalBB1alteredBB
  %176 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3717
  %177 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.150, i64 0, i64 0)) #10, !dbg !3718
  %178 = load i8**, i8*** %11, align 8, !dbg !3719
  %179 = getelementptr inbounds i8*, i8** %178, i64 0, !dbg !3719
  %180 = load i8*, i8** %179, align 8, !dbg !3719
  %181 = load i8**, i8*** %11, align 8, !dbg !3720
  %182 = getelementptr inbounds i8*, i8** %181, i64 1, !dbg !3720
  %183 = load i8*, i8** %182, align 8, !dbg !3720
  %184 = load i8**, i8*** %11, align 8, !dbg !3721
  %185 = getelementptr inbounds i8*, i8** %184, i64 2, !dbg !3721
  %186 = load i8*, i8** %185, align 8, !dbg !3721
  %187 = load i8**, i8*** %11, align 8, !dbg !3722
  %188 = getelementptr inbounds i8*, i8** %187, i64 3, !dbg !3722
  %189 = load i8*, i8** %188, align 8, !dbg !3722
  %190 = load i8**, i8*** %11, align 8, !dbg !3723
  %191 = getelementptr inbounds i8*, i8** %190, i64 4, !dbg !3723
  %192 = load i8*, i8** %191, align 8, !dbg !3723
  %193 = load i8**, i8*** %11, align 8, !dbg !3724
  %194 = getelementptr inbounds i8*, i8** %193, i64 5, !dbg !3724
  %195 = load i8*, i8** %194, align 8, !dbg !3724
  %196 = load i8**, i8*** %11, align 8, !dbg !3725
  %197 = getelementptr inbounds i8*, i8** %196, i64 6, !dbg !3725
  %198 = load i8*, i8** %197, align 8, !dbg !3725
  %199 = load i8**, i8*** %11, align 8, !dbg !3726
  %200 = getelementptr inbounds i8*, i8** %199, i64 7, !dbg !3726
  %201 = load i8*, i8** %200, align 8, !dbg !3726
  %202 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %176, i8* %177, i8* %180, i8* %183, i8* %186, i8* %189, i8* %192, i8* %195, i8* %198, i8* %201), !dbg !3727
  %203 = load i32, i32* @x.87
  %204 = load i32, i32* @y.88
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %289, !dbg !3728

211:                                              ; preds = %26
  %212 = load i32, i32* @x.87
  %213 = load i32, i32* @y.88
  %214 = sub i32 %212, 1
  %215 = mul i32 %212, %214
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %217, %218
  br i1 %219, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %211, %originalBB6alteredBB
  %220 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3729
  %221 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.151, i64 0, i64 0)) #10, !dbg !3730
  %222 = load i8**, i8*** %11, align 8, !dbg !3731
  %223 = getelementptr inbounds i8*, i8** %222, i64 0, !dbg !3731
  %224 = load i8*, i8** %223, align 8, !dbg !3731
  %225 = load i8**, i8*** %11, align 8, !dbg !3732
  %226 = getelementptr inbounds i8*, i8** %225, i64 1, !dbg !3732
  %227 = load i8*, i8** %226, align 8, !dbg !3732
  %228 = load i8**, i8*** %11, align 8, !dbg !3733
  %229 = getelementptr inbounds i8*, i8** %228, i64 2, !dbg !3733
  %230 = load i8*, i8** %229, align 8, !dbg !3733
  %231 = load i8**, i8*** %11, align 8, !dbg !3734
  %232 = getelementptr inbounds i8*, i8** %231, i64 3, !dbg !3734
  %233 = load i8*, i8** %232, align 8, !dbg !3734
  %234 = load i8**, i8*** %11, align 8, !dbg !3735
  %235 = getelementptr inbounds i8*, i8** %234, i64 4, !dbg !3735
  %236 = load i8*, i8** %235, align 8, !dbg !3735
  %237 = load i8**, i8*** %11, align 8, !dbg !3736
  %238 = getelementptr inbounds i8*, i8** %237, i64 5, !dbg !3736
  %239 = load i8*, i8** %238, align 8, !dbg !3736
  %240 = load i8**, i8*** %11, align 8, !dbg !3737
  %241 = getelementptr inbounds i8*, i8** %240, i64 6, !dbg !3737
  %242 = load i8*, i8** %241, align 8, !dbg !3737
  %243 = load i8**, i8*** %11, align 8, !dbg !3738
  %244 = getelementptr inbounds i8*, i8** %243, i64 7, !dbg !3738
  %245 = load i8*, i8** %244, align 8, !dbg !3738
  %246 = load i8**, i8*** %11, align 8, !dbg !3739
  %247 = getelementptr inbounds i8*, i8** %246, i64 8, !dbg !3739
  %248 = load i8*, i8** %247, align 8, !dbg !3739
  %249 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %220, i8* %221, i8* %224, i8* %227, i8* %230, i8* %233, i8* %236, i8* %239, i8* %242, i8* %245, i8* %248), !dbg !3740
  %250 = load i32, i32* @x.87
  %251 = load i32, i32* @y.88
  %252 = sub i32 %250, 1
  %253 = mul i32 %250, %252
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %255, %256
  br i1 %257, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %289, !dbg !3741

258:                                              ; preds = %26
  %259 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3742
  %260 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.152, i64 0, i64 0)) #10, !dbg !3743
  %261 = load i8**, i8*** %11, align 8, !dbg !3744
  %262 = getelementptr inbounds i8*, i8** %261, i64 0, !dbg !3744
  %263 = load i8*, i8** %262, align 8, !dbg !3744
  %264 = load i8**, i8*** %11, align 8, !dbg !3745
  %265 = getelementptr inbounds i8*, i8** %264, i64 1, !dbg !3745
  %266 = load i8*, i8** %265, align 8, !dbg !3745
  %267 = load i8**, i8*** %11, align 8, !dbg !3746
  %268 = getelementptr inbounds i8*, i8** %267, i64 2, !dbg !3746
  %269 = load i8*, i8** %268, align 8, !dbg !3746
  %270 = load i8**, i8*** %11, align 8, !dbg !3747
  %271 = getelementptr inbounds i8*, i8** %270, i64 3, !dbg !3747
  %272 = load i8*, i8** %271, align 8, !dbg !3747
  %273 = load i8**, i8*** %11, align 8, !dbg !3748
  %274 = getelementptr inbounds i8*, i8** %273, i64 4, !dbg !3748
  %275 = load i8*, i8** %274, align 8, !dbg !3748
  %276 = load i8**, i8*** %11, align 8, !dbg !3749
  %277 = getelementptr inbounds i8*, i8** %276, i64 5, !dbg !3749
  %278 = load i8*, i8** %277, align 8, !dbg !3749
  %279 = load i8**, i8*** %11, align 8, !dbg !3750
  %280 = getelementptr inbounds i8*, i8** %279, i64 6, !dbg !3750
  %281 = load i8*, i8** %280, align 8, !dbg !3750
  %282 = load i8**, i8*** %11, align 8, !dbg !3751
  %283 = getelementptr inbounds i8*, i8** %282, i64 7, !dbg !3751
  %284 = load i8*, i8** %283, align 8, !dbg !3751
  %285 = load i8**, i8*** %11, align 8, !dbg !3752
  %286 = getelementptr inbounds i8*, i8** %285, i64 8, !dbg !3752
  %287 = load i8*, i8** %286, align 8, !dbg !3752
  %288 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %259, i8* %260, i8* %263, i8* %266, i8* %269, i8* %272, i8* %275, i8* %278, i8* %281, i8* %284, i8* %287), !dbg !3753
  br label %289, !dbg !3754

289:                                              ; preds = %258, %originalBBpart28, %originalBBpart24, %142, %originalBBpart2, %85, %69, %56, %46, %39, %38
  ret void, !dbg !3755

originalBBalteredBB:                              ; preds = %originalBB, %104
  %290 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3696
  %291 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.148, i64 0, i64 0)) #10, !dbg !3697
  %292 = load i8**, i8*** %11, align 8, !dbg !3698
  %293 = getelementptr inbounds i8*, i8** %292, i64 0, !dbg !3698
  %294 = load i8*, i8** %293, align 8, !dbg !3698
  %295 = load i8**, i8*** %11, align 8, !dbg !3699
  %296 = getelementptr inbounds i8*, i8** %295, i64 1, !dbg !3699
  %297 = load i8*, i8** %296, align 8, !dbg !3699
  %298 = load i8**, i8*** %11, align 8, !dbg !3700
  %299 = getelementptr inbounds i8*, i8** %298, i64 2, !dbg !3700
  %300 = load i8*, i8** %299, align 8, !dbg !3700
  %301 = load i8**, i8*** %11, align 8, !dbg !3701
  %302 = getelementptr inbounds i8*, i8** %301, i64 3, !dbg !3701
  %303 = load i8*, i8** %302, align 8, !dbg !3701
  %304 = load i8**, i8*** %11, align 8, !dbg !3702
  %305 = getelementptr inbounds i8*, i8** %304, i64 4, !dbg !3702
  %306 = load i8*, i8** %305, align 8, !dbg !3702
  %307 = load i8**, i8*** %11, align 8, !dbg !3703
  %308 = getelementptr inbounds i8*, i8** %307, i64 5, !dbg !3703
  %309 = load i8*, i8** %308, align 8, !dbg !3703
  %310 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %290, i8* %291, i8* %294, i8* %297, i8* %300, i8* %303, i8* %306, i8* %309), !dbg !3704
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %167
  %311 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3717
  %312 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.150, i64 0, i64 0)) #10, !dbg !3718
  %313 = load i8**, i8*** %11, align 8, !dbg !3719
  %314 = getelementptr inbounds i8*, i8** %313, i64 0, !dbg !3719
  %315 = load i8*, i8** %314, align 8, !dbg !3719
  %316 = load i8**, i8*** %11, align 8, !dbg !3720
  %317 = getelementptr inbounds i8*, i8** %316, i64 1, !dbg !3720
  %318 = load i8*, i8** %317, align 8, !dbg !3720
  %319 = load i8**, i8*** %11, align 8, !dbg !3721
  %320 = getelementptr inbounds i8*, i8** %319, i64 2, !dbg !3721
  %321 = load i8*, i8** %320, align 8, !dbg !3721
  %322 = load i8**, i8*** %11, align 8, !dbg !3722
  %323 = getelementptr inbounds i8*, i8** %322, i64 3, !dbg !3722
  %324 = load i8*, i8** %323, align 8, !dbg !3722
  %325 = load i8**, i8*** %11, align 8, !dbg !3723
  %326 = getelementptr inbounds i8*, i8** %325, i64 4, !dbg !3723
  %327 = load i8*, i8** %326, align 8, !dbg !3723
  %328 = load i8**, i8*** %11, align 8, !dbg !3724
  %329 = getelementptr inbounds i8*, i8** %328, i64 5, !dbg !3724
  %330 = load i8*, i8** %329, align 8, !dbg !3724
  %331 = load i8**, i8*** %11, align 8, !dbg !3725
  %332 = getelementptr inbounds i8*, i8** %331, i64 6, !dbg !3725
  %333 = load i8*, i8** %332, align 8, !dbg !3725
  %334 = load i8**, i8*** %11, align 8, !dbg !3726
  %335 = getelementptr inbounds i8*, i8** %334, i64 7, !dbg !3726
  %336 = load i8*, i8** %335, align 8, !dbg !3726
  %337 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %311, i8* %312, i8* %315, i8* %318, i8* %321, i8* %324, i8* %327, i8* %330, i8* %333, i8* %336), !dbg !3727
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %211
  %338 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3729
  %339 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.151, i64 0, i64 0)) #10, !dbg !3730
  %340 = load i8**, i8*** %11, align 8, !dbg !3731
  %341 = getelementptr inbounds i8*, i8** %340, i64 0, !dbg !3731
  %342 = load i8*, i8** %341, align 8, !dbg !3731
  %343 = load i8**, i8*** %11, align 8, !dbg !3732
  %344 = getelementptr inbounds i8*, i8** %343, i64 1, !dbg !3732
  %345 = load i8*, i8** %344, align 8, !dbg !3732
  %346 = load i8**, i8*** %11, align 8, !dbg !3733
  %347 = getelementptr inbounds i8*, i8** %346, i64 2, !dbg !3733
  %348 = load i8*, i8** %347, align 8, !dbg !3733
  %349 = load i8**, i8*** %11, align 8, !dbg !3734
  %350 = getelementptr inbounds i8*, i8** %349, i64 3, !dbg !3734
  %351 = load i8*, i8** %350, align 8, !dbg !3734
  %352 = load i8**, i8*** %11, align 8, !dbg !3735
  %353 = getelementptr inbounds i8*, i8** %352, i64 4, !dbg !3735
  %354 = load i8*, i8** %353, align 8, !dbg !3735
  %355 = load i8**, i8*** %11, align 8, !dbg !3736
  %356 = getelementptr inbounds i8*, i8** %355, i64 5, !dbg !3736
  %357 = load i8*, i8** %356, align 8, !dbg !3736
  %358 = load i8**, i8*** %11, align 8, !dbg !3737
  %359 = getelementptr inbounds i8*, i8** %358, i64 6, !dbg !3737
  %360 = load i8*, i8** %359, align 8, !dbg !3737
  %361 = load i8**, i8*** %11, align 8, !dbg !3738
  %362 = getelementptr inbounds i8*, i8** %361, i64 7, !dbg !3738
  %363 = load i8*, i8** %362, align 8, !dbg !3738
  %364 = load i8**, i8*** %11, align 8, !dbg !3739
  %365 = getelementptr inbounds i8*, i8** %364, i64 8, !dbg !3739
  %366 = load i8*, i8** %365, align 8, !dbg !3739
  %367 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %338, i8* %339, i8* %342, i8* %345, i8* %348, i8* %351, i8* %354, i8* %357, i8* %360, i8* %363, i8* %366), !dbg !3740
  br label %originalBB6
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_va(%struct._IO_FILE*, i8*, i8*, i8*, %struct.__va_list_tag*) #4 !dbg !3756 {
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.__va_list_tag*, align 8
  %11 = alloca i64, align 8
  %12 = alloca [10 x i8*], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !3766, metadata !DIExpression()), !dbg !3767
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !3768, metadata !DIExpression()), !dbg !3769
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !3770, metadata !DIExpression()), !dbg !3771
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !3772, metadata !DIExpression()), !dbg !3773
  store %struct.__va_list_tag* %4, %struct.__va_list_tag** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %10, metadata !3774, metadata !DIExpression()), !dbg !3775
  call void @llvm.dbg.declare(metadata i64* %11, metadata !3776, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.declare(metadata [10 x i8*]* %12, metadata !3778, metadata !DIExpression()), !dbg !3780
  store i64 0, i64* %11, align 8, !dbg !3781
  br label %13, !dbg !3783

13:                                               ; preds = %57, %5
  %14 = load i64, i64* %11, align 8, !dbg !3784
  %15 = icmp ult i64 %14, 10, !dbg !3786
  br i1 %15, label %16, label %38, !dbg !3787

16:                                               ; preds = %13
  %17 = load %struct.__va_list_tag*, %struct.__va_list_tag** %10, align 8, !dbg !3788
  %18 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %17, i32 0, i32 0, !dbg !3788
  %19 = load i32, i32* %18, align 8, !dbg !3788
  %20 = icmp ule i32 %19, 40, !dbg !3788
  br i1 %20, label %21, label %27, !dbg !3788

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %17, i32 0, i32 3, !dbg !3788
  %23 = load i8*, i8** %22, align 8, !dbg !3788
  %24 = getelementptr i8, i8* %23, i32 %19, !dbg !3788
  %25 = bitcast i8* %24 to i8**, !dbg !3788
  %26 = add i32 %19, 8, !dbg !3788
  store i32 %26, i32* %18, align 8, !dbg !3788
  br label %32, !dbg !3788

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %17, i32 0, i32 2, !dbg !3788
  %29 = load i8*, i8** %28, align 8, !dbg !3788
  %30 = bitcast i8* %29 to i8**, !dbg !3788
  %31 = getelementptr i8, i8* %29, i32 8, !dbg !3788
  store i8* %31, i8** %28, align 8, !dbg !3788
  br label %32, !dbg !3788

32:                                               ; preds = %27, %21
  %33 = phi i8** [ %25, %21 ], [ %30, %27 ], !dbg !3788
  %34 = load i8*, i8** %33, align 8, !dbg !3788
  %35 = load i64, i64* %11, align 8, !dbg !3789
  %36 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 %35, !dbg !3790
  store i8* %34, i8** %36, align 8, !dbg !3791
  %37 = icmp ne i8* %34, null, !dbg !3792
  br label %38

38:                                               ; preds = %32, %13
  %39 = phi i1 [ false, %13 ], [ %37, %32 ], !dbg !3793
  %40 = load i32, i32* @x.89
  %41 = load i32, i32* @y.90
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %38, %originalBBalteredBB
  %48 = load i32, i32* @x.89
  %49 = load i32, i32* @y.90
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %39, label %56, label %60, !dbg !3794

56:                                               ; preds = %originalBBpart2
  br label %57, !dbg !3794

57:                                               ; preds = %56
  %58 = load i64, i64* %11, align 8, !dbg !3795
  %59 = add i64 %58, 1, !dbg !3795
  store i64 %59, i64* %11, align 8, !dbg !3795
  br label %13, !dbg !3796, !llvm.loop !3797

60:                                               ; preds = %originalBBpart2
  %61 = load i32, i32* @x.89
  %62 = load i32, i32* @y.90
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %60, %originalBB1alteredBB
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !3799
  %70 = load i8*, i8** %7, align 8, !dbg !3800
  %71 = load i8*, i8** %8, align 8, !dbg !3801
  %72 = load i8*, i8** %9, align 8, !dbg !3802
  %73 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 0, !dbg !3803
  %74 = load i64, i64* %11, align 8, !dbg !3804
  call void @version_etc_arn(%struct._IO_FILE* %69, i8* %70, i8* %71, i8* %72, i8** %73, i64 %74), !dbg !3805
  %75 = load i32, i32* @x.89
  %76 = load i32, i32* @y.90
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void, !dbg !3806

originalBBalteredBB:                              ; preds = %originalBB, %38
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %60
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !3799
  %84 = load i8*, i8** %7, align 8, !dbg !3800
  %85 = load i8*, i8** %8, align 8, !dbg !3801
  %86 = load i8*, i8** %9, align 8, !dbg !3802
  %87 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 0, !dbg !3803
  %88 = load i64, i64* %11, align 8, !dbg !3804
  call void @version_etc_arn(%struct._IO_FILE* %83, i8* %84, i8* %85, i8* %86, i8** %87, i64 %88), !dbg !3805
  br label %originalBB1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc(%struct._IO_FILE*, i8*, i8*, i8*, ...) #4 !dbg !3807 {
  %5 = load i32, i32* @x.91
  %6 = load i32, i32* @y.92
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %struct._IO_FILE*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %13, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %13, metadata !3810, metadata !DIExpression()), !dbg !3811
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !3812, metadata !DIExpression()), !dbg !3813
  store i8* %2, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !3814, metadata !DIExpression()), !dbg !3815
  store i8* %3, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !3816, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %17, metadata !3818, metadata !DIExpression()), !dbg !3825
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %17, i64 0, i64 0, !dbg !3826
  %19 = bitcast %struct.__va_list_tag* %18 to i8*, !dbg !3826
  call void @llvm.va_start(i8* %19), !dbg !3826
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !3827
  %21 = load i8*, i8** %14, align 8, !dbg !3828
  %22 = load i8*, i8** %15, align 8, !dbg !3829
  %23 = load i8*, i8** %16, align 8, !dbg !3830
  %24 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %17, i64 0, i64 0, !dbg !3831
  call void @version_etc_va(%struct._IO_FILE* %20, i8* %21, i8* %22, i8* %23, %struct.__va_list_tag* %24), !dbg !3832
  %25 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %17, i64 0, i64 0, !dbg !3833
  %26 = bitcast %struct.__va_list_tag* %25 to i8*, !dbg !3833
  call void @llvm.va_end(i8* %26), !dbg !3833
  %27 = load i32, i32* @x.91
  %28 = load i32, i32* @y.92
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !3834

originalBBalteredBB:                              ; preds = %originalBB, %4
  %35 = alloca %struct._IO_FILE*, align 8
  %36 = alloca i8*, align 8
  %37 = alloca i8*, align 8
  %38 = alloca i8*, align 8
  %39 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %35, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %35, metadata !3835, metadata !DIExpression()), !dbg !3811
  store i8* %1, i8** %36, align 8
  call void @llvm.dbg.declare(metadata i8** %36, metadata !3874, metadata !DIExpression()), !dbg !3813
  store i8* %2, i8** %37, align 8
  call void @llvm.dbg.declare(metadata i8** %37, metadata !3875, metadata !DIExpression()), !dbg !3815
  store i8* %3, i8** %38, align 8
  call void @llvm.dbg.declare(metadata i8** %38, metadata !3876, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %39, metadata !3877, metadata !DIExpression()), !dbg !3825
  %40 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %39, i64 0, i64 0, !dbg !3826
  %41 = bitcast %struct.__va_list_tag* %40 to i8*, !dbg !3826
  call void @llvm.va_start(i8* %41), !dbg !3826
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** %35, align 8, !dbg !3827
  %43 = load i8*, i8** %36, align 8, !dbg !3828
  %44 = load i8*, i8** %37, align 8, !dbg !3829
  %45 = load i8*, i8** %38, align 8, !dbg !3830
  %46 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %39, i64 0, i64 0, !dbg !3831
  call void @version_etc_va(%struct._IO_FILE* %42, i8* %43, i8* %44, i8* %45, %struct.__va_list_tag* %46), !dbg !3832
  %47 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %39, i64 0, i64 0, !dbg !3833
  %48 = bitcast %struct.__va_list_tag* %47 to i8*, !dbg !3833
  call void @llvm.va_end(i8* %48), !dbg !3833
  br label %originalBB
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #10

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #10

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xmalloc(i64) #4 !dbg !3888 {
  %2 = alloca i64, align 8
  %3 = alloca i8*, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !3892, metadata !DIExpression()), !dbg !3893
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3894, metadata !DIExpression()), !dbg !3895
  %4 = load i64, i64* %2, align 8, !dbg !3896
  %5 = call noalias i8* @malloc(i64 %4) #10, !dbg !3897
  store i8* %5, i8** %3, align 8, !dbg !3895
  %6 = load i8*, i8** %3, align 8, !dbg !3898
  %7 = icmp ne i8* %6, null, !dbg !3898
  br i1 %7, label %12, label %8, !dbg !3900

8:                                                ; preds = %1
  %9 = load i64, i64* %2, align 8, !dbg !3901
  %10 = icmp ne i64 %9, 0, !dbg !3902
  br i1 %10, label %11, label %12, !dbg !3903

11:                                               ; preds = %8
  call void @xalloc_die() #14, !dbg !3904
  unreachable, !dbg !3904

12:                                               ; preds = %8, %1
  %13 = load i8*, i8** %3, align 8, !dbg !3905
  ret i8* %13, !dbg !3906
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xrealloc(i8*, i64) #4 !dbg !3907 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3910, metadata !DIExpression()), !dbg !3911
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !3912, metadata !DIExpression()), !dbg !3913
  %6 = load i64, i64* %5, align 8, !dbg !3914
  %7 = icmp ne i64 %6, 0, !dbg !3914
  br i1 %7, label %13, label %8, !dbg !3916

8:                                                ; preds = %2
  %9 = load i8*, i8** %4, align 8, !dbg !3917
  %10 = icmp ne i8* %9, null, !dbg !3917
  br i1 %10, label %11, label %13, !dbg !3918

11:                                               ; preds = %8
  %12 = load i8*, i8** %4, align 8, !dbg !3919
  call void @free(i8* %12) #10, !dbg !3921
  store i8* null, i8** %3, align 8, !dbg !3922
  br label %41, !dbg !3922

13:                                               ; preds = %8, %2
  %14 = load i32, i32* @x.95
  %15 = load i32, i32* @y.96
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  %22 = load i8*, i8** %4, align 8, !dbg !3923
  %23 = load i64, i64* %5, align 8, !dbg !3924
  %24 = call i8* @realloc(i8* %22, i64 %23) #10, !dbg !3925
  store i8* %24, i8** %4, align 8, !dbg !3926
  %25 = load i8*, i8** %4, align 8, !dbg !3927
  %26 = icmp ne i8* %25, null, !dbg !3927
  %27 = load i32, i32* @x.95
  %28 = load i32, i32* @y.96
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %26, label %39, label %35, !dbg !3929

35:                                               ; preds = %originalBBpart2
  %36 = load i64, i64* %5, align 8, !dbg !3930
  %37 = icmp ne i64 %36, 0, !dbg !3930
  br i1 %37, label %38, label %39, !dbg !3931

38:                                               ; preds = %35
  call void @xalloc_die() #14, !dbg !3932
  unreachable, !dbg !3932

39:                                               ; preds = %35, %originalBBpart2
  %40 = load i8*, i8** %4, align 8, !dbg !3933
  store i8* %40, i8** %3, align 8, !dbg !3934
  br label %41, !dbg !3934

41:                                               ; preds = %39, %11
  %42 = load i8*, i8** %3, align 8, !dbg !3935
  ret i8* %42, !dbg !3935

originalBBalteredBB:                              ; preds = %originalBB, %13
  %43 = load i8*, i8** %4, align 8, !dbg !3923
  %44 = load i64, i64* %5, align 8, !dbg !3924
  %45 = call i8* @realloc(i8* %43, i64 %44) #10, !dbg !3925
  store i8* %45, i8** %4, align 8, !dbg !3926
  %46 = load i8*, i8** %4, align 8, !dbg !3927
  %47 = icmp ne i8* %46, null, !dbg !3927
  br label %originalBB
}

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @x2nrealloc(i8*, i64*, i64) #4 !dbg !3936 {
  %4 = alloca i8*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3941, metadata !DIExpression()), !dbg !3942
  store i64* %1, i64** %5, align 8
  call void @llvm.dbg.declare(metadata i64** %5, metadata !3943, metadata !DIExpression()), !dbg !3944
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !3945, metadata !DIExpression()), !dbg !3946
  call void @llvm.dbg.declare(metadata i64* %7, metadata !3947, metadata !DIExpression()), !dbg !3948
  %8 = load i64*, i64** %5, align 8, !dbg !3949
  %9 = load i64, i64* %8, align 8, !dbg !3950
  store i64 %9, i64* %7, align 8, !dbg !3948
  %10 = load i8*, i8** %4, align 8, !dbg !3951
  %11 = icmp ne i8* %10, null, !dbg !3951
  br i1 %11, label %80, label %12, !dbg !3953

12:                                               ; preds = %3
  %13 = load i64, i64* %7, align 8, !dbg !3954
  %14 = icmp ne i64 %13, 0, !dbg !3954
  br i1 %14, label %41, label %15, !dbg !3957

15:                                               ; preds = %12
  %16 = load i32, i32* @x.97
  %17 = load i32, i32* @y.98
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = load i64, i64* %6, align 8, !dbg !3958
  %25 = udiv i64 128, %24, !dbg !3960
  store i64 %25, i64* %7, align 8, !dbg !3961
  %26 = load i64, i64* %7, align 8, !dbg !3962
  %27 = icmp ne i64 %26, 0, !dbg !3963
  %28 = xor i1 %27, true, !dbg !3963
  %29 = zext i1 %28 to i32, !dbg !3963
  %30 = sext i32 %29 to i64, !dbg !3963
  %31 = load i64, i64* %7, align 8, !dbg !3964
  %32 = add i64 %31, %30, !dbg !3964
  store i64 %32, i64* %7, align 8, !dbg !3964
  %33 = load i32, i32* @x.97
  %34 = load i32, i32* @y.98
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %41, !dbg !3965

41:                                               ; preds = %originalBBpart2, %12
  %42 = load i64, i64* %6, align 8, !dbg !3966
  %43 = udiv i64 9223372036854775807, %42, !dbg !3966
  %44 = load i64, i64* %7, align 8, !dbg !3966
  %45 = icmp ult i64 %43, %44, !dbg !3966
  br i1 %45, label %46, label %63, !dbg !3968

46:                                               ; preds = %41
  %47 = load i32, i32* @x.97
  %48 = load i32, i32* @y.98
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %46, %originalBB13alteredBB
  call void @xalloc_die() #14, !dbg !3969
  %55 = load i32, i32* @x.97
  %56 = load i32, i32* @y.98
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  unreachable, !dbg !3969

63:                                               ; preds = %41
  %64 = load i32, i32* @x.97
  %65 = load i32, i32* @y.98
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %63, %originalBB17alteredBB
  %72 = load i32, i32* @x.97
  %73 = load i32, i32* @y.98
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  br label %92, !dbg !3970

80:                                               ; preds = %3
  %81 = load i64, i64* %6, align 8, !dbg !3971
  %82 = udiv i64 6148914691236517204, %81, !dbg !3974
  %83 = load i64, i64* %7, align 8, !dbg !3975
  %84 = icmp ule i64 %82, %83, !dbg !3976
  br i1 %84, label %85, label %86, !dbg !3977

85:                                               ; preds = %80
  call void @xalloc_die() #14, !dbg !3978
  unreachable, !dbg !3978

86:                                               ; preds = %80
  %87 = load i64, i64* %7, align 8, !dbg !3979
  %88 = udiv i64 %87, 2, !dbg !3980
  %89 = add i64 %88, 1, !dbg !3981
  %90 = load i64, i64* %7, align 8, !dbg !3982
  %91 = add i64 %90, %89, !dbg !3982
  store i64 %91, i64* %7, align 8, !dbg !3982
  br label %92

92:                                               ; preds = %86, %originalBBpart219
  %93 = load i64, i64* %7, align 8, !dbg !3983
  %94 = load i64*, i64** %5, align 8, !dbg !3984
  store i64 %93, i64* %94, align 8, !dbg !3985
  %95 = load i8*, i8** %4, align 8, !dbg !3986
  %96 = load i64, i64* %7, align 8, !dbg !3987
  %97 = load i64, i64* %6, align 8, !dbg !3988
  %98 = mul i64 %96, %97, !dbg !3989
  %99 = call i8* @xrealloc(i8* %95, i64 %98), !dbg !3990
  ret i8* %99, !dbg !3991

originalBBalteredBB:                              ; preds = %originalBB, %15
  %100 = load i64, i64* %6, align 8, !dbg !3958
  %_ = sub i64 0, 128
  %gen = add i64 %_, %100
  %101 = udiv i64 128, %100, !dbg !3960
  store i64 %101, i64* %7, align 8, !dbg !3961
  %102 = load i64, i64* %7, align 8, !dbg !3962
  %103 = icmp ne i64 %102, 0, !dbg !3963
  %_1 = sub i1 %103, true
  %gen2 = mul i1 %_1, true
  %_3 = sub i1 false, %103
  %gen4 = add i1 %_3, true
  %_5 = shl i1 %103, true
  %_6 = shl i1 %103, true
  %_7 = shl i1 %103, true
  %104 = xor i1 %103, true, !dbg !3963
  %105 = zext i1 %104 to i32, !dbg !3963
  %106 = sext i32 %105 to i64, !dbg !3963
  %107 = load i64, i64* %7, align 8, !dbg !3964
  %_8 = shl i64 %107, %106
  %_9 = sub i64 %107, %106
  %gen10 = mul i64 %_9, %106
  %_11 = sub i64 0, %107
  %gen12 = add i64 %_11, %106
  %108 = add i64 %107, %106, !dbg !3964
  store i64 %108, i64* %7, align 8, !dbg !3964
  br label %originalBB

originalBB13alteredBB:                            ; preds = %originalBB13, %46
  call void @xalloc_die() #14, !dbg !3969
  br label %originalBB13

originalBB17alteredBB:                            ; preds = %originalBB17, %63
  br label %originalBB17
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xcharalloc(i64) #4 !dbg !3992 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !3995, metadata !DIExpression()), !dbg !3996
  %3 = load i64, i64* %2, align 8, !dbg !3997
  %4 = call noalias i8* @xmalloc(i64 %3), !dbg !3997
  ret i8* %4, !dbg !3998
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @xalloc_die() #0 !dbg !3999 {
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !4001
  %2 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.165, i64 0, i64 0)) #10, !dbg !4002
  call void (i32, i32, i8*, ...) @error(i32 %1, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.166, i64 0, i64 0), i8* %2), !dbg !4003
  call void @abort() #12, !dbg !4004
  unreachable, !dbg !4004
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @rpl_mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #4 !dbg !4005 {
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.__mbstate_t*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  store i32* %0, i32** %6, align 8
  call void @llvm.dbg.declare(metadata i32** %6, metadata !4021, metadata !DIExpression()), !dbg !4022
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4023, metadata !DIExpression()), !dbg !4024
  store i64 %2, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !4025, metadata !DIExpression()), !dbg !4026
  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %9, metadata !4027, metadata !DIExpression()), !dbg !4028
  call void @llvm.dbg.declare(metadata i64* %10, metadata !4029, metadata !DIExpression()), !dbg !4030
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4031, metadata !DIExpression()), !dbg !4032
  %13 = load i32*, i32** %6, align 8, !dbg !4033
  %14 = icmp ne i32* %13, null, !dbg !4033
  br i1 %14, label %16, label %15, !dbg !4035

15:                                               ; preds = %4
  store i32* %11, i32** %6, align 8, !dbg !4036
  br label %16, !dbg !4037

16:                                               ; preds = %15, %4
  %17 = load i32, i32* @x.103
  %18 = load i32, i32* @y.104
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load i32*, i32** %6, align 8, !dbg !4038
  %26 = load i8*, i8** %7, align 8, !dbg !4039
  %27 = load i64, i64* %8, align 8, !dbg !4040
  %28 = load %struct.__mbstate_t*, %struct.__mbstate_t** %9, align 8, !dbg !4041
  %29 = call i64 @mbrtowc(i32* %25, i8* %26, i64 %27, %struct.__mbstate_t* %28) #10, !dbg !4042
  store i64 %29, i64* %10, align 8, !dbg !4043
  %30 = load i64, i64* %10, align 8, !dbg !4044
  %31 = icmp ule i64 -2, %30, !dbg !4046
  %32 = load i32, i32* @x.103
  %33 = load i32, i32* @y.104
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %31, label %40, label %83, !dbg !4047

40:                                               ; preds = %originalBBpart2
  %41 = load i64, i64* %8, align 8, !dbg !4048
  %42 = icmp ne i64 %41, 0, !dbg !4049
  br i1 %42, label %43, label %83, !dbg !4050

43:                                               ; preds = %40
  %44 = load i32, i32* @x.103
  %45 = load i32, i32* @y.104
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %43, %originalBB1alteredBB
  %52 = call zeroext i1 @hard_locale(i32 0), !dbg !4051
  %53 = load i32, i32* @x.103
  %54 = load i32, i32* @y.104
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %52, label %83, label %61, !dbg !4052

61:                                               ; preds = %originalBBpart24
  call void @llvm.dbg.declare(metadata i8* %12, metadata !4053, metadata !DIExpression()), !dbg !4055
  %62 = load i32, i32* @x.103
  %63 = load i32, i32* @y.104
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %61, %originalBB6alteredBB
  %70 = load i8*, i8** %7, align 8, !dbg !4056
  %71 = load i8, i8* %70, align 1, !dbg !4057
  store i8 %71, i8* %12, align 1, !dbg !4055
  %72 = load i8, i8* %12, align 1, !dbg !4058
  %73 = zext i8 %72 to i32, !dbg !4058
  %74 = load i32*, i32** %6, align 8, !dbg !4059
  store i32 %73, i32* %74, align 4, !dbg !4060
  store i64 1, i64* %5, align 8, !dbg !4061
  %75 = load i32, i32* @x.103
  %76 = load i32, i32* @y.104
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %85, !dbg !4061

83:                                               ; preds = %originalBBpart24, %40, %originalBBpart2
  %84 = load i64, i64* %10, align 8, !dbg !4062
  store i64 %84, i64* %5, align 8, !dbg !4063
  br label %85, !dbg !4063

85:                                               ; preds = %83, %originalBBpart28
  %86 = load i64, i64* %5, align 8, !dbg !4064
  ret i64 %86, !dbg !4064

originalBBalteredBB:                              ; preds = %originalBB, %16
  %87 = load i32*, i32** %6, align 8, !dbg !4038
  %88 = load i8*, i8** %7, align 8, !dbg !4039
  %89 = load i64, i64* %8, align 8, !dbg !4040
  %90 = load %struct.__mbstate_t*, %struct.__mbstate_t** %9, align 8, !dbg !4041
  %91 = call i64 @mbrtowc(i32* %87, i8* %88, i64 %89, %struct.__mbstate_t* %90) #10, !dbg !4042
  store i64 %91, i64* %10, align 8, !dbg !4043
  %92 = load i64, i64* %10, align 8, !dbg !4044
  %93 = icmp ule i64 -2, %92, !dbg !4046
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %43
  %94 = call zeroext i1 @hard_locale(i32 0), !dbg !4051
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %61
  %95 = load i8*, i8** %7, align 8, !dbg !4056
  %96 = load i8, i8* %95, align 1, !dbg !4057
  store i8 %96, i8* %12, align 1, !dbg !4055
  %97 = load i8, i8* %12, align 1, !dbg !4058
  %98 = zext i8 %97 to i32, !dbg !4058
  %99 = load i32*, i32** %6, align 8, !dbg !4059
  store i32 %98, i32* %99, align 4, !dbg !4060
  store i64 1, i64* %5, align 8, !dbg !4061
  br label %originalBB6
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @extract_trimmed_name(%struct.utmpx*) #4 !dbg !4065 {
  %2 = alloca %struct.utmpx*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %2, metadata !4093, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4095, metadata !DIExpression()), !dbg !4096
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4097, metadata !DIExpression()), !dbg !4098
  %5 = call noalias i8* @xmalloc(i64 33), !dbg !4099
  store i8* %5, i8** %4, align 8, !dbg !4100
  %6 = load i8*, i8** %4, align 8, !dbg !4101
  %7 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !4102
  %8 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %7, i32 0, i32 4, !dbg !4102
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i64 0, i64 0, !dbg !4102
  %10 = call i8* @strncpy(i8* %6, i8* %9, i64 32) #10, !dbg !4103
  %11 = load i8*, i8** %4, align 8, !dbg !4104
  %12 = getelementptr inbounds i8, i8* %11, i64 32, !dbg !4104
  store i8 0, i8* %12, align 1, !dbg !4105
  %13 = load i8*, i8** %4, align 8, !dbg !4106
  %14 = load i8*, i8** %4, align 8, !dbg !4108
  %15 = call i64 @strlen(i8* %14) #13, !dbg !4109
  %16 = getelementptr inbounds i8, i8* %13, i64 %15, !dbg !4110
  store i8* %16, i8** %3, align 8, !dbg !4111
  br label %17, !dbg !4112

17:                                               ; preds = %30, %1
  %18 = load i8*, i8** %4, align 8, !dbg !4113
  %19 = load i8*, i8** %3, align 8, !dbg !4115
  %20 = icmp ult i8* %18, %19, !dbg !4116
  br i1 %20, label %21, label %27, !dbg !4117

21:                                               ; preds = %17
  %22 = load i8*, i8** %3, align 8, !dbg !4118
  %23 = getelementptr inbounds i8, i8* %22, i64 -1, !dbg !4118
  %24 = load i8, i8* %23, align 1, !dbg !4118
  %25 = sext i8 %24 to i32, !dbg !4118
  %26 = icmp eq i32 %25, 32, !dbg !4119
  br label %27

27:                                               ; preds = %21, %17
  %28 = phi i1 [ false, %17 ], [ %26, %21 ], !dbg !4120
  br i1 %28, label %29, label %33, !dbg !4121

29:                                               ; preds = %27
  br label %30, !dbg !4122

30:                                               ; preds = %29
  %31 = load i8*, i8** %3, align 8, !dbg !4123
  %32 = getelementptr inbounds i8, i8* %31, i32 -1, !dbg !4123
  store i8* %32, i8** %3, align 8, !dbg !4123
  store i8 0, i8* %32, align 1, !dbg !4124
  br label %17, !dbg !4125, !llvm.loop !4126

33:                                               ; preds = %27
  %34 = load i8*, i8** %4, align 8, !dbg !4128
  ret i8* %34, !dbg !4129
}

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @read_utmp(i8*, i64*, %struct.utmpx**, i32) #4 !dbg !4130 {
  %5 = alloca i8*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca %struct.utmpx**, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca %struct.utmpx*, align 8
  %12 = alloca %struct.utmpx*, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4135, metadata !DIExpression()), !dbg !4136
  store i64* %1, i64** %6, align 8
  call void @llvm.dbg.declare(metadata i64** %6, metadata !4137, metadata !DIExpression()), !dbg !4138
  store %struct.utmpx** %2, %struct.utmpx*** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx*** %7, metadata !4139, metadata !DIExpression()), !dbg !4140
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4141, metadata !DIExpression()), !dbg !4142
  call void @llvm.dbg.declare(metadata i64* %9, metadata !4143, metadata !DIExpression()), !dbg !4144
  store i64 0, i64* %9, align 8, !dbg !4144
  call void @llvm.dbg.declare(metadata i64* %10, metadata !4145, metadata !DIExpression()), !dbg !4146
  store i64 0, i64* %10, align 8, !dbg !4146
  call void @llvm.dbg.declare(metadata %struct.utmpx** %11, metadata !4147, metadata !DIExpression()), !dbg !4148
  store %struct.utmpx* null, %struct.utmpx** %11, align 8, !dbg !4148
  call void @llvm.dbg.declare(metadata %struct.utmpx** %12, metadata !4149, metadata !DIExpression()), !dbg !4150
  %13 = load i8*, i8** %5, align 8, !dbg !4151
  %14 = call i32 @utmpxname(i8* %13), !dbg !4152
  call void @setutxent(), !dbg !4153
  br label %15, !dbg !4154

15:                                               ; preds = %71, %4
  %16 = call %struct.utmpx* @getutxent(), !dbg !4155
  store %struct.utmpx* %16, %struct.utmpx** %12, align 8, !dbg !4156
  %17 = icmp ne %struct.utmpx* %16, null, !dbg !4157
  br i1 %17, label %18, label %72, !dbg !4154

18:                                               ; preds = %15
  %19 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !4158
  %20 = load i32, i32* %8, align 4, !dbg !4160
  %21 = call zeroext i1 @desirable_utmp_entry(%struct.utmpx* %19, i32 %20), !dbg !4161
  br i1 %21, label %22, label %71, !dbg !4162

22:                                               ; preds = %18
  %23 = load i32, i32* @x.107
  %24 = load i32, i32* @y.108
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %22, %originalBBalteredBB
  %31 = load i64, i64* %9, align 8, !dbg !4163
  %32 = load i64, i64* %10, align 8, !dbg !4166
  %33 = icmp eq i64 %31, %32, !dbg !4167
  %34 = load i32, i32* @x.107
  %35 = load i32, i32* @y.108
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %33, label %42, label %63, !dbg !4168

42:                                               ; preds = %originalBBpart2
  %43 = load i32, i32* @x.107
  %44 = load i32, i32* @y.108
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %42, %originalBB1alteredBB
  %51 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !4169
  %52 = bitcast %struct.utmpx* %51 to i8*, !dbg !4169
  %53 = call i8* @x2nrealloc(i8* %52, i64* %10, i64 384), !dbg !4170
  %54 = bitcast i8* %53 to %struct.utmpx*, !dbg !4170
  store %struct.utmpx* %54, %struct.utmpx** %11, align 8, !dbg !4171
  %55 = load i32, i32* @x.107
  %56 = load i32, i32* @y.108
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %63, !dbg !4172

63:                                               ; preds = %originalBBpart24, %originalBBpart2
  %64 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !4173
  %65 = load i64, i64* %9, align 8, !dbg !4174
  %66 = add i64 %65, 1, !dbg !4174
  store i64 %66, i64* %9, align 8, !dbg !4174
  %67 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %64, i64 %65, !dbg !4173
  %68 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !4175
  %69 = bitcast %struct.utmpx* %67 to i8*, !dbg !4176
  %70 = bitcast %struct.utmpx* %68 to i8*, !dbg !4176
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %69, i8* align 4 %70, i64 384, i1 false), !dbg !4176
  br label %71, !dbg !4177

71:                                               ; preds = %63, %18
  br label %15, !dbg !4154, !llvm.loop !4178

72:                                               ; preds = %15
  call void @endutxent(), !dbg !4180
  %73 = load i64, i64* %9, align 8, !dbg !4181
  %74 = load i64*, i64** %6, align 8, !dbg !4182
  store i64 %73, i64* %74, align 8, !dbg !4183
  %75 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !4184
  %76 = load %struct.utmpx**, %struct.utmpx*** %7, align 8, !dbg !4185
  store %struct.utmpx* %75, %struct.utmpx** %76, align 8, !dbg !4186
  ret i32 0, !dbg !4187

originalBBalteredBB:                              ; preds = %originalBB, %22
  %77 = load i64, i64* %9, align 8, !dbg !4163
  %78 = load i64, i64* %10, align 8, !dbg !4166
  %79 = icmp eq i64 %77, %78, !dbg !4167
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  %80 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !4169
  %81 = bitcast %struct.utmpx* %80 to i8*, !dbg !4169
  %82 = call i8* @x2nrealloc(i8* %81, i64* %10, i64 384), !dbg !4170
  %83 = bitcast i8* %82 to %struct.utmpx*, !dbg !4170
  store %struct.utmpx* %83, %struct.utmpx** %11, align 8, !dbg !4171
  br label %originalBB1
}

declare dso_local i32 @utmpxname(i8*) #3

declare dso_local void @setutxent() #3

declare dso_local %struct.utmpx* @getutxent() #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @desirable_utmp_entry(%struct.utmpx*, i32) #4 !dbg !4188 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.utmpx*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  store %struct.utmpx* %0, %struct.utmpx** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %4, metadata !4191, metadata !DIExpression()), !dbg !4192
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4193, metadata !DIExpression()), !dbg !4194
  call void @llvm.dbg.declare(metadata i8* %6, metadata !4195, metadata !DIExpression()), !dbg !4196
  %7 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !4197
  %8 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %7, i32 0, i32 4, !dbg !4197
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i64 0, i64 0, !dbg !4197
  %10 = load i8, i8* %9, align 4, !dbg !4197
  %11 = sext i8 %10 to i32, !dbg !4197
  %12 = icmp ne i32 %11, 0, !dbg !4197
  br i1 %12, label %13, label %132, !dbg !4197

13:                                               ; preds = %2
  %14 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !4197
  %15 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %14, i32 0, i32 0, !dbg !4197
  %16 = load i16, i16* %15, align 4, !dbg !4197
  %17 = sext i16 %16 to i32, !dbg !4197
  br label %18, !dbg !4197

18:                                               ; preds = %13
  %19 = load i32, i32* @x.109
  %20 = load i32, i32* @y.110
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %18, %originalBBalteredBB
  %collatzVar = alloca i32
  %27 = load i32, i32* @x.109
  %28 = load i32, i32* @y.110
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %35

35:                                               ; preds = %originalBBpart2
  %36 = load i32, i32* @x.109
  %37 = load i32, i32* @y.110
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %35, %originalBB1alteredBB
  %44 = load i32, i32* @inVal0
  %45 = icmp sgt i32 %44, 1
  %46 = load i32, i32* @x.109
  %47 = load i32, i32* @y.110
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %45, label %55, label %54

54:                                               ; preds = %originalBBpart24
  store i32 52, i32* %collatzVar
  br label %55

55:                                               ; preds = %54, %originalBBpart24
  %56 = load i8**, i8*** @inVal1
  %57 = getelementptr inbounds i8*, i8** %56, i64 1
  %58 = load i8*, i8** %57
  %controle = call i32 @controle(i8* %58, i32 7)
  store i32 %controle, i32* %collatzVar
  br label %59

59:                                               ; preds = %125, %originalBBpart243, %55
  %60 = load i32, i32* %collatzVar
  %61 = icmp sgt i32 %60, 1
  br i1 %61, label %62, label %129

62:                                               ; preds = %59
  %63 = load i32, i32* @x.109
  %64 = load i32, i32* @y.110
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %62, %originalBB6alteredBB
  %71 = load i32, i32* %collatzVar
  %72 = srem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = load i32, i32* @x.109
  %75 = load i32, i32* @y.110
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart216, label %originalBB6alteredBB

originalBBpart216:                                ; preds = %originalBB6
  br i1 %73, label %82, label %85

82:                                               ; preds = %originalBBpart216
  %83 = load i32, i32* %collatzVar
  %84 = sdiv i32 %83, 2
  store i32 %84, i32* %collatzVar
  br label %105

85:                                               ; preds = %originalBBpart216
  %86 = load i32, i32* @x.109
  %87 = load i32, i32* @y.110
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %85, %originalBB18alteredBB
  %94 = load i32, i32* %collatzVar
  %95 = mul i32 %94, 3
  %96 = add i32 %95, 1
  store i32 %96, i32* %collatzVar
  %97 = load i32, i32* @x.109
  %98 = load i32, i32* @y.110
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBBpart237, label %originalBB18alteredBB

originalBBpart237:                                ; preds = %originalBB18
  br label %105

105:                                              ; preds = %originalBBpart237, %82
  %106 = load i32, i32* @x.109
  %107 = load i32, i32* @y.110
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %105, %originalBB39alteredBB
  %114 = load i32, i32* %collatzVar
  %115 = sub i32 %17, %114
  %116 = icmp sgt i32 %115, 5
  %117 = load i32, i32* @x.109
  %118 = load i32, i32* @y.110
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBBpart243, label %originalBB39alteredBB

originalBBpart243:                                ; preds = %originalBB39
  br i1 %116, label %125, label %59

125:                                              ; preds = %originalBBpart243
  %126 = load i32, i32* %collatzVar
  %127 = add i32 %17, %126
  %128 = icmp slt i32 %127, 9
  br i1 %128, label %130, label %59

129:                                              ; preds = %59
  br label %130, !dbg !4197

130:                                              ; preds = %129, %125
  %131 = phi i1 [ true, %125 ], [ false, %129 ]
  br label %132

132:                                              ; preds = %130, %2
  %133 = phi i1 [ false, %2 ], [ %131, %130 ], !dbg !4198
  %134 = load i32, i32* @x.109
  %135 = load i32, i32* @y.110
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %132, %originalBB45alteredBB
  %142 = zext i1 %133 to i8, !dbg !4196
  store i8 %142, i8* %6, align 1, !dbg !4196
  %143 = load i32, i32* %5, align 4, !dbg !4199
  %144 = and i32 %143, 2, !dbg !4201
  %145 = icmp ne i32 %144, 0, !dbg !4201
  %146 = load i32, i32* @x.109
  %147 = load i32, i32* @y.110
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBBpart260, label %originalBB45alteredBB

originalBBpart260:                                ; preds = %originalBB45
  br i1 %145, label %154, label %190, !dbg !4202

154:                                              ; preds = %originalBBpart260
  %155 = load i32, i32* @x.109
  %156 = load i32, i32* @y.110
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %154, %originalBB62alteredBB
  %163 = load i8, i8* %6, align 1, !dbg !4203
  %164 = trunc i8 %163 to i1, !dbg !4203
  %165 = load i32, i32* @x.109
  %166 = load i32, i32* @y.110
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br i1 %164, label %190, label %173, !dbg !4204

173:                                              ; preds = %originalBBpart264
  %174 = load i32, i32* @x.109
  %175 = load i32, i32* @y.110
  %176 = sub i32 %174, 1
  %177 = mul i32 %174, %176
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %179, %180
  br i1 %181, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %173, %originalBB66alteredBB
  store i1 false, i1* %3, align 1, !dbg !4205
  %182 = load i32, i32* @x.109
  %183 = load i32, i32* @y.110
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %246, !dbg !4205

190:                                              ; preds = %originalBBpart264, %originalBBpart260
  %191 = load i32, i32* %5, align 4, !dbg !4206
  %192 = and i32 %191, 1, !dbg !4208
  %193 = icmp ne i32 %192, 0, !dbg !4208
  br i1 %193, label %194, label %229, !dbg !4209

194:                                              ; preds = %190
  %195 = load i8, i8* %6, align 1, !dbg !4210
  %196 = trunc i8 %195 to i1, !dbg !4210
  br i1 %196, label %197, label %229, !dbg !4211

197:                                              ; preds = %194
  %198 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !4212
  %199 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %198, i32 0, i32 1, !dbg !4212
  %200 = load i32, i32* %199, align 4, !dbg !4212
  %201 = icmp slt i32 0, %200, !dbg !4213
  br i1 %201, label %202, label %229, !dbg !4214

202:                                              ; preds = %197
  %203 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !4215
  %204 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %203, i32 0, i32 1, !dbg !4215
  %205 = load i32, i32* %204, align 4, !dbg !4215
  %206 = call i32 @kill(i32 %205, i32 0) #10, !dbg !4216
  %207 = icmp slt i32 %206, 0, !dbg !4217
  br i1 %207, label %208, label %229, !dbg !4218

208:                                              ; preds = %202
  %209 = call i32* @__errno_location() #15, !dbg !4219
  %210 = load i32, i32* %209, align 4, !dbg !4219
  %211 = icmp eq i32 %210, 3, !dbg !4220
  br i1 %211, label %212, label %229, !dbg !4221

212:                                              ; preds = %208
  %213 = load i32, i32* @x.109
  %214 = load i32, i32* @y.110
  %215 = sub i32 %213, 1
  %216 = mul i32 %213, %215
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %218, %219
  br i1 %220, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %212, %originalBB70alteredBB
  store i1 false, i1* %3, align 1, !dbg !4222
  %221 = load i32, i32* @x.109
  %222 = load i32, i32* @y.110
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %246, !dbg !4222

229:                                              ; preds = %208, %202, %197, %194, %190
  %230 = load i32, i32* @x.109
  %231 = load i32, i32* @y.110
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %229, %originalBB74alteredBB
  store i1 true, i1* %3, align 1, !dbg !4223
  %238 = load i32, i32* @x.109
  %239 = load i32, i32* @y.110
  %240 = sub i32 %238, 1
  %241 = mul i32 %238, %240
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %243, %244
  br i1 %245, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br label %246, !dbg !4223

246:                                              ; preds = %originalBBpart276, %originalBBpart272, %originalBBpart268
  %247 = load i1, i1* %3, align 1, !dbg !4224
  ret i1 %247, !dbg !4224

originalBBalteredBB:                              ; preds = %originalBB, %18
  %collatzVaralteredBB = alloca i32
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %35
  %248 = load i32, i32* @inVal0
  %249 = icmp sgt i32 %248, 1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %62
  %250 = load i32, i32* %collatzVar
  %_ = sub i32 %250, 2
  %gen = mul i32 %_, 2
  %_7 = sub i32 0, %250
  %gen8 = add i32 %_7, 2
  %_9 = sub i32 %250, 2
  %gen10 = mul i32 %_9, 2
  %_11 = sub i32 %250, 2
  %gen12 = mul i32 %_11, 2
  %_13 = sub i32 0, %250
  %gen14 = add i32 %_13, 2
  %251 = srem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  br label %originalBB6

originalBB18alteredBB:                            ; preds = %originalBB18, %85
  %253 = load i32, i32* %collatzVar
  %_19 = sub i32 0, %253
  %gen20 = add i32 %_19, 3
  %_21 = sub i32 %253, 3
  %gen22 = mul i32 %_21, 3
  %_23 = sub i32 0, %253
  %gen24 = add i32 %_23, 3
  %254 = mul i32 %253, 3
  %_25 = sub i32 0, %254
  %gen26 = add i32 %_25, 1
  %_27 = shl i32 %254, 1
  %_28 = sub i32 0, %254
  %gen29 = add i32 %_28, 1
  %_30 = sub i32 0, %254
  %gen31 = add i32 %_30, 1
  %_32 = sub i32 0, %254
  %gen33 = add i32 %_32, 1
  %_34 = sub i32 %254, 1
  %gen35 = mul i32 %_34, 1
  %255 = add i32 %254, 1
  store i32 %255, i32* %collatzVar
  br label %originalBB18

originalBB39alteredBB:                            ; preds = %originalBB39, %105
  %256 = load i32, i32* %collatzVar
  %_40 = sub i32 0, %17
  %gen41 = add i32 %_40, %256
  %257 = sub i32 %17, %256
  %258 = icmp sgt i32 %257, 5
  br label %originalBB39

originalBB45alteredBB:                            ; preds = %originalBB45, %132
  %259 = zext i1 %133 to i8, !dbg !4196
  store i8 %259, i8* %6, align 1, !dbg !4196
  %260 = load i32, i32* %5, align 4, !dbg !4199
  %_46 = shl i32 %260, 2
  %_47 = sub i32 0, %260
  %gen48 = add i32 %_47, 2
  %_49 = sub i32 %260, 2
  %gen50 = mul i32 %_49, 2
  %_51 = sub i32 0, %260
  %gen52 = add i32 %_51, 2
  %_53 = shl i32 %260, 2
  %_54 = sub i32 0, %260
  %gen55 = add i32 %_54, 2
  %_56 = shl i32 %260, 2
  %_57 = sub i32 0, %260
  %gen58 = add i32 %_57, 2
  %261 = and i32 %260, 2, !dbg !4201
  %262 = icmp ne i32 %261, 0, !dbg !4201
  br label %originalBB45

originalBB62alteredBB:                            ; preds = %originalBB62, %154
  %263 = load i8, i8* %6, align 1, !dbg !4203
  %264 = trunc i8 %263 to i1, !dbg !4203
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %173
  store i1 false, i1* %3, align 1, !dbg !4205
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %212
  store i1 false, i1* %3, align 1, !dbg !4222
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %229
  store i1 true, i1* %3, align 1, !dbg !4223
  br label %originalBB74
}

declare dso_local void @endutxent() #3

; Function Attrs: nounwind
declare dso_local i32 @kill(i32, i32) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @c_strcasecmp(i8*, i8*) #11 !dbg !4225 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4229, metadata !DIExpression()), !dbg !4230
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4231, metadata !DIExpression()), !dbg !4232
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4233, metadata !DIExpression()), !dbg !4234
  %10 = load i8*, i8** %4, align 8, !dbg !4235
  store i8* %10, i8** %6, align 8, !dbg !4234
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4236, metadata !DIExpression()), !dbg !4237
  %11 = load i8*, i8** %5, align 8, !dbg !4238
  store i8* %11, i8** %7, align 8, !dbg !4237
  call void @llvm.dbg.declare(metadata i8* %8, metadata !4239, metadata !DIExpression()), !dbg !4240
  call void @llvm.dbg.declare(metadata i8* %9, metadata !4241, metadata !DIExpression()), !dbg !4242
  %12 = load i8*, i8** %6, align 8, !dbg !4243
  %13 = load i8*, i8** %7, align 8, !dbg !4245
  %14 = icmp eq i8* %12, %13, !dbg !4246
  br i1 %14, label %15, label %16, !dbg !4247

15:                                               ; preds = %2
  store i32 0, i32* %3, align 4, !dbg !4248
  br label %113, !dbg !4248

16:                                               ; preds = %2
  %17 = load i32, i32* @x.111
  %18 = load i32, i32* @y.112
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load i32, i32* @x.111
  %26 = load i32, i32* @y.112
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %33, !dbg !4249

33:                                               ; preds = %101, %originalBBpart2
  %34 = load i32, i32* @x.111
  %35 = load i32, i32* @y.112
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %33, %originalBB1alteredBB
  %42 = load i8*, i8** %6, align 8, !dbg !4250
  %43 = load i8, i8* %42, align 1, !dbg !4252
  %44 = zext i8 %43 to i32, !dbg !4252
  %45 = call i32 @c_tolower(i32 %44), !dbg !4253
  %46 = trunc i32 %45 to i8, !dbg !4253
  store i8 %46, i8* %8, align 1, !dbg !4254
  %47 = load i8*, i8** %7, align 8, !dbg !4255
  %48 = load i8, i8* %47, align 1, !dbg !4256
  %49 = zext i8 %48 to i32, !dbg !4256
  %50 = call i32 @c_tolower(i32 %49), !dbg !4257
  %51 = trunc i32 %50 to i8, !dbg !4257
  store i8 %51, i8* %9, align 1, !dbg !4258
  %52 = load i8, i8* %8, align 1, !dbg !4259
  %53 = zext i8 %52 to i32, !dbg !4259
  %54 = icmp eq i32 %53, 0, !dbg !4261
  %55 = load i32, i32* @x.111
  %56 = load i32, i32* @y.112
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %54, label %63, label %80, !dbg !4262

63:                                               ; preds = %originalBBpart24
  %64 = load i32, i32* @x.111
  %65 = load i32, i32* @y.112
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %63, %originalBB6alteredBB
  %72 = load i32, i32* @x.111
  %73 = load i32, i32* @y.112
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %107, !dbg !4263

80:                                               ; preds = %originalBBpart24
  %81 = load i32, i32* @x.111
  %82 = load i32, i32* @y.112
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %80, %originalBB10alteredBB
  %89 = load i8*, i8** %6, align 8, !dbg !4264
  %90 = getelementptr inbounds i8, i8* %89, i32 1, !dbg !4264
  store i8* %90, i8** %6, align 8, !dbg !4264
  %91 = load i8*, i8** %7, align 8, !dbg !4265
  %92 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !4265
  store i8* %92, i8** %7, align 8, !dbg !4265
  %93 = load i32, i32* @x.111
  %94 = load i32, i32* @y.112
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %101, !dbg !4266

101:                                              ; preds = %originalBBpart212
  %102 = load i8, i8* %8, align 1, !dbg !4267
  %103 = zext i8 %102 to i32, !dbg !4267
  %104 = load i8, i8* %9, align 1, !dbg !4268
  %105 = zext i8 %104 to i32, !dbg !4268
  %106 = icmp eq i32 %103, %105, !dbg !4269
  br i1 %106, label %33, label %107, !dbg !4266, !llvm.loop !4270

107:                                              ; preds = %101, %originalBBpart28
  %108 = load i8, i8* %8, align 1, !dbg !4272
  %109 = zext i8 %108 to i32, !dbg !4272
  %110 = load i8, i8* %9, align 1, !dbg !4274
  %111 = zext i8 %110 to i32, !dbg !4274
  %112 = sub nsw i32 %109, %111, !dbg !4275
  store i32 %112, i32* %3, align 4, !dbg !4276
  br label %113, !dbg !4276

113:                                              ; preds = %107, %15
  %114 = load i32, i32* @x.111
  %115 = load i32, i32* @y.112
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %113, %originalBB14alteredBB
  %122 = load i32, i32* %3, align 4, !dbg !4277
  %123 = load i32, i32* @x.111
  %124 = load i32, i32* @y.112
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret i32 %122, !dbg !4277

originalBBalteredBB:                              ; preds = %originalBB, %16
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %33
  %131 = load i8*, i8** %6, align 8, !dbg !4250
  %132 = load i8, i8* %131, align 1, !dbg !4252
  %133 = zext i8 %132 to i32, !dbg !4252
  %134 = call i32 @c_tolower(i32 %133), !dbg !4253
  %135 = trunc i32 %134 to i8, !dbg !4253
  store i8 %135, i8* %8, align 1, !dbg !4254
  %136 = load i8*, i8** %7, align 8, !dbg !4255
  %137 = load i8, i8* %136, align 1, !dbg !4256
  %138 = zext i8 %137 to i32, !dbg !4256
  %139 = call i32 @c_tolower(i32 %138), !dbg !4257
  %140 = trunc i32 %139 to i8, !dbg !4257
  store i8 %140, i8* %9, align 1, !dbg !4258
  %141 = load i8, i8* %8, align 1, !dbg !4259
  %142 = zext i8 %141 to i32, !dbg !4259
  %143 = icmp eq i32 %142, 0, !dbg !4261
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %63
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %80
  %144 = load i8*, i8** %6, align 8, !dbg !4264
  %145 = getelementptr inbounds i8, i8* %144, i32 1, !dbg !4264
  store i8* %145, i8** %6, align 8, !dbg !4264
  %146 = load i8*, i8** %7, align 8, !dbg !4265
  %147 = getelementptr inbounds i8, i8* %146, i32 1, !dbg !4265
  store i8* %147, i8** %7, align 8, !dbg !4265
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %113
  %148 = load i32, i32* %3, align 4, !dbg !4277
  br label %originalBB14
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @close_stream(%struct._IO_FILE*) #4 !dbg !4278 {
  %2 = load i32, i32* @x.113
  %3 = load i32, i32* @y.114
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %11, metadata !4316, metadata !DIExpression()), !dbg !4317
  call void @llvm.dbg.declare(metadata i8* %12, metadata !4318, metadata !DIExpression()), !dbg !4320
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4321
  %16 = call i64 @__fpending(%struct._IO_FILE* %15) #10, !dbg !4322
  %17 = icmp ne i64 %16, 0, !dbg !4323
  %18 = zext i1 %17 to i8, !dbg !4320
  store i8 %18, i8* %12, align 1, !dbg !4320
  call void @llvm.dbg.declare(metadata i8* %13, metadata !4324, metadata !DIExpression()), !dbg !4325
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4326
  %20 = call i32 @ferror_unlocked(%struct._IO_FILE* %19) #10, !dbg !4326
  %21 = icmp ne i32 %20, 0, !dbg !4327
  %22 = zext i1 %21 to i8, !dbg !4325
  store i8 %22, i8* %13, align 1, !dbg !4325
  call void @llvm.dbg.declare(metadata i8* %14, metadata !4328, metadata !DIExpression()), !dbg !4329
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4330
  %24 = call i32 @rpl_fclose(%struct._IO_FILE* %23), !dbg !4331
  %25 = icmp ne i32 %24, 0, !dbg !4332
  %26 = zext i1 %25 to i8, !dbg !4329
  store i8 %26, i8* %14, align 1, !dbg !4329
  %27 = load i8, i8* %13, align 1, !dbg !4333
  %28 = trunc i8 %27 to i1, !dbg !4333
  %29 = load i32, i32* @x.113
  %30 = load i32, i32* @y.114
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %28, label %63, label %37, !dbg !4335

37:                                               ; preds = %originalBBpart2
  %38 = load i8, i8* %14, align 1, !dbg !4336
  %39 = trunc i8 %38 to i1, !dbg !4336
  br i1 %39, label %40, label %85, !dbg !4337

40:                                               ; preds = %37
  %41 = load i32, i32* @x.113
  %42 = load i32, i32* @y.114
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %40, %originalBB1alteredBB
  %49 = load i8, i8* %12, align 1, !dbg !4338
  %50 = trunc i8 %49 to i1, !dbg !4338
  %51 = load i32, i32* @x.113
  %52 = load i32, i32* @y.114
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %50, label %63, label %59, !dbg !4339

59:                                               ; preds = %originalBBpart24
  %60 = call i32* @__errno_location() #15, !dbg !4340
  %61 = load i32, i32* %60, align 4, !dbg !4340
  %62 = icmp ne i32 %61, 9, !dbg !4341
  br i1 %62, label %63, label %85, !dbg !4342

63:                                               ; preds = %59, %originalBBpart24, %originalBBpart2
  %64 = load i8, i8* %14, align 1, !dbg !4343
  %65 = trunc i8 %64 to i1, !dbg !4343
  br i1 %65, label %68, label %66, !dbg !4346

66:                                               ; preds = %63
  %67 = call i32* @__errno_location() #15, !dbg !4347
  store i32 0, i32* %67, align 4, !dbg !4348
  br label %68, !dbg !4347

68:                                               ; preds = %66, %63
  %69 = load i32, i32* @x.113
  %70 = load i32, i32* @y.114
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %68, %originalBB6alteredBB
  store i32 -1, i32* %10, align 4, !dbg !4349
  %77 = load i32, i32* @x.113
  %78 = load i32, i32* @y.114
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %102, !dbg !4349

85:                                               ; preds = %59, %37
  %86 = load i32, i32* @x.113
  %87 = load i32, i32* @y.114
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %85, %originalBB10alteredBB
  store i32 0, i32* %10, align 4, !dbg !4350
  %94 = load i32, i32* @x.113
  %95 = load i32, i32* @y.114
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %102, !dbg !4350

102:                                              ; preds = %originalBBpart212, %originalBBpart28
  %103 = load i32, i32* %10, align 4, !dbg !4351
  ret i32 %103, !dbg !4351

originalBBalteredBB:                              ; preds = %originalBB, %1
  %104 = alloca i32, align 4
  %105 = alloca %struct._IO_FILE*, align 8
  %106 = alloca i8, align 1
  %107 = alloca i8, align 1
  %108 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %105, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %105, metadata !4352, metadata !DIExpression()), !dbg !4317
  call void @llvm.dbg.declare(metadata i8* %106, metadata !4391, metadata !DIExpression()), !dbg !4320
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** %105, align 8, !dbg !4321
  %110 = call i64 @__fpending(%struct._IO_FILE* %109) #10, !dbg !4322
  %111 = icmp ne i64 %110, 0, !dbg !4323
  %112 = zext i1 %111 to i8, !dbg !4320
  store i8 %112, i8* %106, align 1, !dbg !4320
  call void @llvm.dbg.declare(metadata i8* %107, metadata !4392, metadata !DIExpression()), !dbg !4325
  %113 = load %struct._IO_FILE*, %struct._IO_FILE** %105, align 8, !dbg !4326
  %114 = call i32 @ferror_unlocked(%struct._IO_FILE* %113) #10, !dbg !4326
  %115 = icmp ne i32 %114, 0, !dbg !4327
  %116 = zext i1 %115 to i8, !dbg !4325
  store i8 %116, i8* %107, align 1, !dbg !4325
  call void @llvm.dbg.declare(metadata i8* %108, metadata !4393, metadata !DIExpression()), !dbg !4329
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** %105, align 8, !dbg !4330
  %118 = call i32 @rpl_fclose(%struct._IO_FILE* %117), !dbg !4331
  %119 = icmp ne i32 %118, 0, !dbg !4332
  %120 = zext i1 %119 to i8, !dbg !4329
  store i8 %120, i8* %108, align 1, !dbg !4329
  %121 = load i8, i8* %107, align 1, !dbg !4333
  %122 = trunc i8 %121 to i1, !dbg !4333
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %40
  %123 = load i8, i8* %12, align 1, !dbg !4338
  %124 = trunc i8 %123 to i1, !dbg !4338
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %68
  store i32 -1, i32* %10, align 4, !dbg !4349
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %85
  store i32 0, i32* %10, align 4, !dbg !4350
  br label %originalBB10
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @locale_charset() #4 !dbg !4394 {
  %1 = load i32, i32* @x.115
  %2 = load i32, i32* @y.116
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !4398, metadata !DIExpression()), !dbg !4399
  %10 = call i8* @nl_langinfo(i32 14) #10, !dbg !4400
  store i8* %10, i8** %9, align 8, !dbg !4401
  %11 = load i8*, i8** %9, align 8, !dbg !4402
  %12 = icmp eq i8* %11, null, !dbg !4404
  %13 = load i32, i32* @x.115
  %14 = load i32, i32* @y.116
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %22, !dbg !4405

21:                                               ; preds = %originalBBpart2
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.179, i64 0, i64 0), i8** %9, align 8, !dbg !4406
  br label %22, !dbg !4407

22:                                               ; preds = %21, %originalBBpart2
  %23 = load i8*, i8** %9, align 8, !dbg !4408
  %24 = getelementptr inbounds i8, i8* %23, i64 0, !dbg !4408
  %25 = load i8, i8* %24, align 1, !dbg !4408
  %26 = sext i8 %25 to i32, !dbg !4408
  %27 = icmp eq i32 %26, 0, !dbg !4412
  br i1 %27, label %28, label %29, !dbg !4413

28:                                               ; preds = %22
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.180, i64 0, i64 0), i8** %9, align 8, !dbg !4414
  br label %29, !dbg !4415

29:                                               ; preds = %28, %22
  %30 = load i32, i32* @x.115
  %31 = load i32, i32* @y.116
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i8*, i8** %9, align 8, !dbg !4416
  %39 = load i32, i32* @x.115
  %40 = load i32, i32* @y.116
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret i8* %38, !dbg !4417

originalBBalteredBB:                              ; preds = %originalBB, %0
  %47 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %47, metadata !4418, metadata !DIExpression()), !dbg !4399
  %48 = call i8* @nl_langinfo(i32 14) #10, !dbg !4400
  store i8* %48, i8** %47, align 8, !dbg !4401
  %49 = load i8*, i8** %47, align 8, !dbg !4402
  %50 = icmp eq i8* %49, null, !dbg !4404
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %51 = load i8*, i8** %9, align 8, !dbg !4416
  br label %originalBB1
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fclose(%struct._IO_FILE* nonnull) #4 !dbg !4421 {
  %2 = load i32, i32* @x.117
  %3 = load i32, i32* @y.118
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %11, metadata !4459, metadata !DIExpression()), !dbg !4460
  call void @llvm.dbg.declare(metadata i32* %12, metadata !4461, metadata !DIExpression()), !dbg !4462
  store i32 0, i32* %12, align 4, !dbg !4462
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4463, metadata !DIExpression()), !dbg !4464
  call void @llvm.dbg.declare(metadata i32* %14, metadata !4465, metadata !DIExpression()), !dbg !4466
  store i32 0, i32* %14, align 4, !dbg !4466
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4467
  %16 = call i32 @fileno(%struct._IO_FILE* %15) #10, !dbg !4468
  store i32 %16, i32* %13, align 4, !dbg !4469
  %17 = load i32, i32* %13, align 4, !dbg !4470
  %18 = icmp slt i32 %17, 0, !dbg !4472
  %19 = load i32, i32* @x.117
  %20 = load i32, i32* @y.118
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %46, !dbg !4473

27:                                               ; preds = %originalBBpart2
  %28 = load i32, i32* @x.117
  %29 = load i32, i32* @y.118
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4474
  %37 = call i32 @fclose(%struct._IO_FILE* %36), !dbg !4475
  store i32 %37, i32* %10, align 4, !dbg !4476
  %38 = load i32, i32* @x.117
  %39 = load i32, i32* @y.118
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %104, !dbg !4476

46:                                               ; preds = %originalBBpart2
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4477
  %48 = call i32 @__freading(%struct._IO_FILE* %47) #10, !dbg !4477
  %49 = icmp ne i32 %48, 0, !dbg !4477
  br i1 %49, label %50, label %71, !dbg !4479

50:                                               ; preds = %46
  %51 = load i32, i32* @x.117
  %52 = load i32, i32* @y.118
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %50, %originalBB6alteredBB
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4480
  %60 = call i32 @fileno(%struct._IO_FILE* %59) #10, !dbg !4481
  %61 = call i64 @lseek(i32 %60, i64 0, i32 1) #10, !dbg !4482
  %62 = icmp ne i64 %61, -1, !dbg !4483
  %63 = load i32, i32* @x.117
  %64 = load i32, i32* @y.118
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %62, label %71, label %78, !dbg !4484

71:                                               ; preds = %originalBBpart28, %46
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4485
  %73 = call i32 @rpl_fflush(%struct._IO_FILE* %72), !dbg !4486
  %74 = icmp ne i32 %73, 0, !dbg !4486
  br i1 %74, label %75, label %78, !dbg !4487

75:                                               ; preds = %71
  %76 = call i32* @__errno_location() #15, !dbg !4488
  %77 = load i32, i32* %76, align 4, !dbg !4488
  store i32 %77, i32* %12, align 4, !dbg !4489
  br label %78, !dbg !4490

78:                                               ; preds = %75, %71, %originalBBpart28
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4491
  %80 = call i32 @fclose(%struct._IO_FILE* %79), !dbg !4492
  store i32 %80, i32* %14, align 4, !dbg !4493
  %81 = load i32, i32* %12, align 4, !dbg !4494
  %82 = icmp ne i32 %81, 0, !dbg !4496
  br i1 %82, label %83, label %102, !dbg !4497

83:                                               ; preds = %78
  %84 = load i32, i32* @x.117
  %85 = load i32, i32* @y.118
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %83, %originalBB10alteredBB
  %92 = load i32, i32* %12, align 4, !dbg !4498
  %93 = call i32* @__errno_location() #15, !dbg !4500
  store i32 %92, i32* %93, align 4, !dbg !4501
  store i32 -1, i32* %14, align 4, !dbg !4502
  %94 = load i32, i32* @x.117
  %95 = load i32, i32* @y.118
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %102, !dbg !4503

102:                                              ; preds = %originalBBpart212, %78
  %103 = load i32, i32* %14, align 4, !dbg !4504
  store i32 %103, i32* %10, align 4, !dbg !4505
  br label %104, !dbg !4505

104:                                              ; preds = %102, %originalBBpart24
  %105 = load i32, i32* %10, align 4, !dbg !4506
  ret i32 %105, !dbg !4506

originalBBalteredBB:                              ; preds = %originalBB, %1
  %106 = alloca i32, align 4
  %107 = alloca %struct._IO_FILE*, align 8
  %108 = alloca i32, align 4
  %109 = alloca i32, align 4
  %110 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %107, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %107, metadata !4507, metadata !DIExpression()), !dbg !4460
  call void @llvm.dbg.declare(metadata i32* %108, metadata !4546, metadata !DIExpression()), !dbg !4462
  store i32 0, i32* %108, align 4, !dbg !4462
  call void @llvm.dbg.declare(metadata i32* %109, metadata !4547, metadata !DIExpression()), !dbg !4464
  call void @llvm.dbg.declare(metadata i32* %110, metadata !4548, metadata !DIExpression()), !dbg !4466
  store i32 0, i32* %110, align 4, !dbg !4466
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** %107, align 8, !dbg !4467
  %112 = call i32 @fileno(%struct._IO_FILE* %111) #10, !dbg !4468
  store i32 %112, i32* %109, align 4, !dbg !4469
  %113 = load i32, i32* %109, align 4, !dbg !4470
  %114 = icmp slt i32 %113, 0, !dbg !4472
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4474
  %116 = call i32 @fclose(%struct._IO_FILE* %115), !dbg !4475
  store i32 %116, i32* %10, align 4, !dbg !4476
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %50
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4480
  %118 = call i32 @fileno(%struct._IO_FILE* %117) #10, !dbg !4481
  %119 = call i64 @lseek(i32 %118, i64 0, i32 1) #10, !dbg !4482
  %120 = icmp ne i64 %119, -1, !dbg !4483
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %83
  %121 = load i32, i32* %12, align 4, !dbg !4498
  %122 = call i32* @__errno_location() #15, !dbg !4500
  store i32 %121, i32* %122, align 4, !dbg !4501
  store i32 -1, i32* %14, align 4, !dbg !4502
  br label %originalBB10
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fflush(%struct._IO_FILE*) #4 !dbg !4549 {
  %2 = alloca i32, align 4
  %3 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %3, metadata !4587, metadata !DIExpression()), !dbg !4588
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4589
  %5 = icmp eq %struct._IO_FILE* %4, null, !dbg !4591
  br i1 %5, label %10, label %6, !dbg !4592

6:                                                ; preds = %1
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4593
  %8 = call i32 @__freading(%struct._IO_FILE* %7) #10, !dbg !4593
  %9 = icmp ne i32 %8, 0, !dbg !4593
  br i1 %9, label %13, label %10, !dbg !4594

10:                                               ; preds = %6, %1
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4595
  %12 = call i32 @fflush(%struct._IO_FILE* %11), !dbg !4596
  store i32 %12, i32* %2, align 4, !dbg !4597
  br label %17, !dbg !4597

13:                                               ; preds = %6
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4598
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %14), !dbg !4599
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4600
  %16 = call i32 @fflush(%struct._IO_FILE* %15), !dbg !4601
  store i32 %16, i32* %2, align 4, !dbg !4602
  br label %17, !dbg !4602

17:                                               ; preds = %13, %10
  %18 = load i32, i32* %2, align 4, !dbg !4603
  ret i32 %18, !dbg !4603
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE*) #4 !dbg !4604 {
  %2 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %2, metadata !4607, metadata !DIExpression()), !dbg !4608
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !dbg !4609
  %4 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %3, i32 0, i32 0, !dbg !4611
  %5 = load i32, i32* %4, align 8, !dbg !4611
  %6 = and i32 %5, 256, !dbg !4612
  %7 = icmp ne i32 %6, 0, !dbg !4612
  br i1 %7, label %8, label %11, !dbg !4613

8:                                                ; preds = %1
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !dbg !4614
  %10 = call i32 @rpl_fseeko(%struct._IO_FILE* %9, i64 0, i32 1), !dbg !4615
  br label %11, !dbg !4615

11:                                               ; preds = %8, %1
  ret void, !dbg !4616
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fseeko(%struct._IO_FILE* nonnull, i64, i32) #4 !dbg !4617 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %5, metadata !4656, metadata !DIExpression()), !dbg !4657
  store i64 %1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !4658, metadata !DIExpression()), !dbg !4659
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4660, metadata !DIExpression()), !dbg !4661
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4662
  %10 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %9, i32 0, i32 2, !dbg !4664
  %11 = load i8*, i8** %10, align 8, !dbg !4664
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4665
  %13 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %12, i32 0, i32 1, !dbg !4666
  %14 = load i8*, i8** %13, align 8, !dbg !4666
  %15 = icmp eq i8* %11, %14, !dbg !4667
  br i1 %15, label %16, label %94, !dbg !4668

16:                                               ; preds = %3
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4669
  %18 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 5, !dbg !4670
  %19 = load i8*, i8** %18, align 8, !dbg !4670
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4671
  %21 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %20, i32 0, i32 4, !dbg !4672
  %22 = load i8*, i8** %21, align 8, !dbg !4672
  %23 = icmp eq i8* %19, %22, !dbg !4673
  br i1 %23, label %24, label %94, !dbg !4674

24:                                               ; preds = %16
  %25 = load i32, i32* @x.123
  %26 = load i32, i32* @y.124
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %24, %originalBBalteredBB
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4675
  %34 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %33, i32 0, i32 9, !dbg !4676
  %35 = load i8*, i8** %34, align 8, !dbg !4676
  %36 = icmp eq i8* %35, null, !dbg !4677
  %37 = load i32, i32* @x.123
  %38 = load i32, i32* @y.124
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %36, label %45, label %94, !dbg !4678

45:                                               ; preds = %originalBBpart2
  call void @llvm.dbg.declare(metadata i64* %8, metadata !4679, metadata !DIExpression()), !dbg !4681
  %46 = load i32, i32* @x.123
  %47 = load i32, i32* @y.124
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %45, %originalBB1alteredBB
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4682
  %55 = call i32 @fileno(%struct._IO_FILE* %54) #10, !dbg !4683
  %56 = load i64, i64* %6, align 8, !dbg !4684
  %57 = load i32, i32* %7, align 4, !dbg !4685
  %58 = call i64 @lseek(i32 %55, i64 %56, i32 %57) #10, !dbg !4686
  store i64 %58, i64* %8, align 8, !dbg !4681
  %59 = load i64, i64* %8, align 8, !dbg !4687
  %60 = icmp eq i64 %59, -1, !dbg !4689
  %61 = load i32, i32* @x.123
  %62 = load i32, i32* @y.124
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %60, label %69, label %86, !dbg !4690

69:                                               ; preds = %originalBBpart24
  %70 = load i32, i32* @x.123
  %71 = load i32, i32* @y.124
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %69, %originalBB6alteredBB
  store i32 -1, i32* %4, align 4, !dbg !4691
  %78 = load i32, i32* @x.123
  %79 = load i32, i32* @y.124
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %99, !dbg !4691

86:                                               ; preds = %originalBBpart24
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4693
  %88 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %87, i32 0, i32 0, !dbg !4694
  %89 = load i32, i32* %88, align 8, !dbg !4695
  %90 = and i32 %89, -17, !dbg !4695
  store i32 %90, i32* %88, align 8, !dbg !4695
  %91 = load i64, i64* %8, align 8, !dbg !4696
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4697
  %93 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %92, i32 0, i32 21, !dbg !4698
  store i64 %91, i64* %93, align 8, !dbg !4699
  store i32 0, i32* %4, align 4, !dbg !4700
  br label %99, !dbg !4700

94:                                               ; preds = %originalBBpart2, %16, %3
  %95 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4701
  %96 = load i64, i64* %6, align 8, !dbg !4702
  %97 = load i32, i32* %7, align 4, !dbg !4703
  %98 = call i32 @fseeko(%struct._IO_FILE* %95, i64 %96, i32 %97), !dbg !4704
  store i32 %98, i32* %4, align 4, !dbg !4705
  br label %99, !dbg !4705

99:                                               ; preds = %94, %86, %originalBBpart28
  %100 = load i32, i32* %4, align 4, !dbg !4706
  ret i32 %100, !dbg !4706

originalBBalteredBB:                              ; preds = %originalBB, %24
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4675
  %102 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %101, i32 0, i32 9, !dbg !4676
  %103 = load i8*, i8** %102, align 8, !dbg !4676
  %104 = icmp eq i8* %103, null, !dbg !4677
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %45
  %105 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4682
  %106 = call i32 @fileno(%struct._IO_FILE* %105) #10, !dbg !4683
  %107 = load i64, i64* %6, align 8, !dbg !4684
  %108 = load i32, i32* %7, align 4, !dbg !4685
  %109 = call i64 @lseek(i32 %106, i64 %107, i32 %108) #10, !dbg !4686
  store i64 %109, i64* %8, align 8, !dbg !4681
  %110 = load i64, i64* %8, align 8, !dbg !4687
  %111 = icmp eq i64 %110, -1, !dbg !4689
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %69
  store i32 -1, i32* %4, align 4, !dbg !4691
  br label %originalBB6
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

define private i32 @controle(i8*, i32) {
  %3 = load i32, i32* @inVal0
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %2
  call void @srand(i32 %1)
  %6 = call i32 @rand()
  %7 = srem i32 %6, 50000
  %8 = add i32 %7, 2
  ret i32 %8

9:                                                ; preds = %2
  %10 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal2, i32 0, i32 0
  %11 = call i32 @strcmp(i8* %10, i8* %0)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %32

13:                                               ; preds = %9
  %14 = load i32, i32* @x.125
  %15 = load i32, i32* @y.126
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  %22 = icmp eq i32 %1, -1
  %23 = load i32, i32* @x.125
  %24 = load i32, i32* @y.126
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %32

31:                                               ; preds = %originalBBpart2
  ret i32 5

32:                                               ; preds = %originalBBpart2, %9
  %33 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal1, i32 0, i32 0
  %34 = call i32 @strcmp(i8* %33, i8* %0)
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %32
  %37 = icmp eq i32 %1, 7
  br i1 %37, label %38, label %39

38:                                               ; preds = %36
  ret i32 3

39:                                               ; preds = %36, %32
  %40 = load i32, i32* @x.125
  %41 = load i32, i32* @y.126
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %39, %originalBB1alteredBB
  %48 = getelementptr inbounds [3 x i8], [3 x i8]* @.compVal0, i32 0, i32 0
  %49 = call i32 @strcmp(i8* %48, i8* %0)
  %50 = icmp eq i32 %49, 0
  %51 = load i32, i32* @x.125
  %52 = load i32, i32* @y.126
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %50, label %59, label %62

59:                                               ; preds = %originalBBpart24
  %60 = icmp eq i32 %1, -3
  br i1 %60, label %61, label %62

61:                                               ; preds = %59
  ret i32 3

62:                                               ; preds = %59, %originalBBpart24
  %63 = load i32, i32* @x.125
  %64 = load i32, i32* @y.126
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %62, %originalBB6alteredBB
  %71 = getelementptr inbounds [3 x i8], [3 x i8]* @.compVal0, i32 0, i32 0
  %72 = call i32 @strcmp(i8* %71, i8* %0)
  %73 = icmp eq i32 %72, 0
  %74 = load i32, i32* @x.125
  %75 = load i32, i32* @y.126
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %73, label %82, label %117

82:                                               ; preds = %originalBBpart28
  %83 = load i32, i32* @x.125
  %84 = load i32, i32* @y.126
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %82, %originalBB10alteredBB
  %91 = icmp eq i32 %1, 0
  %92 = load i32, i32* @x.125
  %93 = load i32, i32* @y.126
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %91, label %100, label %117

100:                                              ; preds = %originalBBpart212
  %101 = load i32, i32* @x.125
  %102 = load i32, i32* @y.126
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %100, %originalBB14alteredBB
  %109 = load i32, i32* @x.125
  %110 = load i32, i32* @y.126
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret i32 5

117:                                              ; preds = %originalBBpart212, %originalBBpart28
  %118 = load i32, i32* @x.125
  %119 = load i32, i32* @y.126
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %117, %originalBB18alteredBB
  call void @srand(i32 %1)
  %126 = call i32 @rand()
  %127 = srem i32 %126, 50000
  %128 = add i32 %127, 2
  %129 = load i32, i32* @x.125
  %130 = load i32, i32* @y.126
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart231, label %originalBB18alteredBB

originalBBpart231:                                ; preds = %originalBB18
  ret i32 %128

originalBBalteredBB:                              ; preds = %originalBB, %13
  %137 = icmp eq i32 %1, -1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  %138 = getelementptr inbounds [3 x i8], [3 x i8]* @.compVal0, i32 0, i32 0
  %139 = call i32 @strcmp(i8* %138, i8* %0)
  %140 = icmp eq i32 %139, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %62
  %141 = getelementptr inbounds [3 x i8], [3 x i8]* @.compVal0, i32 0, i32 0
  %142 = call i32 @strcmp(i8* %141, i8* %0)
  %143 = icmp eq i32 %142, 0
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %82
  %144 = icmp eq i32 %1, 0
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %100
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %117
  call void @srand(i32 %1)
  %145 = call i32 @rand()
  %_ = shl i32 %145, 50000
  %146 = srem i32 %145, 50000
  %_19 = sub i32 %146, 2
  %gen = mul i32 %_19, 2
  %_20 = sub i32 0, %146
  %gen21 = add i32 %_20, 2
  %_22 = sub i32 0, %146
  %gen23 = add i32 %_22, 2
  %_24 = sub i32 0, %146
  %gen25 = add i32 %_24, 2
  %_26 = sub i32 0, %146
  %gen27 = add i32 %_26, 2
  %_28 = shl i32 %146, 2
  %147 = add i32 %146, 2
  br label %originalBB18
}

declare void @srand(i32)

declare i32 @rand()

attributes #0 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { noreturn }
attributes #15 = { nounwind readnone }

!llvm.dbg.cu = !{!2, !155, !286, !160, !198, !206, !288, !290, !213, !220, !296, !299, !279, !301, !304, !306, !309, !312, !318, !320, !322, !324, !326}
!llvm.ident = !{!328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328}
!llvm.module.flags = !{!329, !330, !331, !332, !333}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "longopts", scope: !2, file: !3, line: 162, type: !141, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !15, nameTableKind: None)
!3 = !DIFile(filename: "src/who.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4 = !{}
!5 = !{!6, !8, !9, !13, !14}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!9 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !10, line: 7, baseType: !11)
!10 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!11 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !12, line: 160, baseType: !13)
!12 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!13 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!14 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!15 = !{!16, !19, !21, !23, !25, !27, !29, !31, !33, !35, !37, !39, !41, !43, !45, !47, !51, !0, !54, !62, !108, !113, !118, !123, !131, !136, !138}
!16 = !DIGlobalVariableExpression(var: !17, expr: !DIExpression())
!17 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!18 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!19 = !DIGlobalVariableExpression(var: !20, expr: !DIExpression())
!20 = distinct !DIGlobalVariable(name: "short_list", scope: !2, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!21 = !DIGlobalVariableExpression(var: !22, expr: !DIExpression())
!22 = distinct !DIGlobalVariable(name: "short_output", scope: !2, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!23 = !DIGlobalVariableExpression(var: !24, expr: !DIExpression())
!24 = distinct !DIGlobalVariable(name: "include_idle", scope: !2, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "include_heading", scope: !2, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!27 = !DIGlobalVariableExpression(var: !28, expr: !DIExpression())
!28 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!29 = !DIGlobalVariableExpression(var: !30, expr: !DIExpression())
!30 = distinct !DIGlobalVariable(name: "include_exit", scope: !2, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!31 = !DIGlobalVariableExpression(var: !32, expr: !DIExpression())
!32 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!33 = !DIGlobalVariableExpression(var: !34, expr: !DIExpression())
!34 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!35 = !DIGlobalVariableExpression(var: !36, expr: !DIExpression())
!36 = distinct !DIGlobalVariable(name: "need_login", scope: !2, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!37 = !DIGlobalVariableExpression(var: !38, expr: !DIExpression())
!38 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!39 = !DIGlobalVariableExpression(var: !40, expr: !DIExpression())
!40 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!41 = !DIGlobalVariableExpression(var: !42, expr: !DIExpression())
!42 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!43 = !DIGlobalVariableExpression(var: !44, expr: !DIExpression())
!44 = distinct !DIGlobalVariable(name: "need_users", scope: !2, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!45 = !DIGlobalVariableExpression(var: !46, expr: !DIExpression())
!46 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!47 = !DIGlobalVariableExpression(var: !48, expr: !DIExpression())
!48 = distinct !DIGlobalVariable(name: "time_format", scope: !2, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64)
!50 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!51 = !DIGlobalVariableExpression(var: !52, expr: !DIExpression())
!52 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!53 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!54 = !DIGlobalVariableExpression(var: !55, expr: !DIExpression())
!55 = distinct !DIGlobalVariable(name: "mesg", scope: !56, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!56 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!57 = !DISubroutineType(types: !58)
!58 = !{null, !53, !49, !50, !53, !49, !49, !49, !49, !49, !49}
!59 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 24, elements: !60)
!60 = !{!61}
!61 = !DISubrange(count: 3)
!62 = !DIGlobalVariableExpression(var: !63, expr: !DIExpression())
!63 = distinct !DIGlobalVariable(name: "hoststr", scope: !64, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!64 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !65, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!65 = !DISubroutineType(types: !66)
!66 = !{null, !67, !9}
!67 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !68, size: 64)
!68 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !69)
!69 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !71)
!70 = !DIFile(filename: "./lib/readutmp.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!71 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !73)
!72 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/utmpx.h", directory: "")
!73 = !{!74, !75, !77, !81, !85, !86, !90, !95, !97, !102, !104}
!74 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !71, file: !72, line: 57, baseType: !14, size: 16)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !71, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!76 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !12, line: 154, baseType: !53)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !71, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!78 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 256, elements: !79)
!79 = !{!80}
!80 = !DISubrange(count: 32)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !71, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!82 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 32, elements: !83)
!83 = !{!84}
!84 = !DISubrange(count: 4)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !71, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !71, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!87 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2048, elements: !88)
!88 = !{!89}
!89 = !DISubrange(count: 256)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !71, file: !72, line: 67, baseType: !91, size: 32, offset: 2656)
!91 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !92)
!92 = !{!93, !94}
!93 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !91, file: !72, line: 45, baseType: !14, size: 16)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !91, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !71, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!96 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !12, line: 41, baseType: !53)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !71, file: !72, line: 79, baseType: !98, size: 64, offset: 2720)
!98 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !71, file: !72, line: 75, size: 64, elements: !99)
!99 = !{!100, !101}
!100 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !98, file: !72, line: 77, baseType: !96, size: 32)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !98, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !71, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 128, elements: !83)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !71, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 160, elements: !106)
!106 = !{!107}
!107 = !DISubrange(count: 20)
!108 = !DIGlobalVariableExpression(var: !109, expr: !DIExpression())
!109 = distinct !DIGlobalVariable(name: "hostlen", scope: !64, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !111, line: 46, baseType: !112)
!111 = !DIFile(filename: "/usr/lib/llvm-9/lib/clang/9.0.1/include/stddef.h", directory: "")
!112 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!113 = !DIGlobalVariableExpression(var: !114, expr: !DIExpression())
!114 = distinct !DIGlobalVariable(name: "now", scope: !115, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!115 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!116 = !DISubroutineType(types: !117)
!117 = !{!49, !9, !9}
!118 = !DIGlobalVariableExpression(var: !119, expr: !DIExpression())
!119 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !115, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 48, elements: !121)
!121 = !{!122}
!122 = !DISubrange(count: 6)
!123 = !DIGlobalVariableExpression(var: !124, expr: !DIExpression())
!124 = distinct !DIGlobalVariable(name: "buf", scope: !125, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!125 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !126, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!126 = !DISubroutineType(types: !127)
!127 = !{!49, !67}
!128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 264, elements: !129)
!129 = !{!130}
!130 = !DISubrange(count: 33)
!131 = !DIGlobalVariableExpression(var: !132, expr: !DIExpression())
!132 = distinct !DIGlobalVariable(name: "runlevline", scope: !133, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!133 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !134, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!134 = !DISubroutineType(types: !135)
!135 = !{null, !67}
!136 = !DIGlobalVariableExpression(var: !137, expr: !DIExpression())
!137 = distinct !DIGlobalVariable(name: "comment", scope: !133, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!138 = !DIGlobalVariableExpression(var: !139, expr: !DIExpression())
!139 = distinct !DIGlobalVariable(name: "exitstr", scope: !140, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!140 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !134, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 4608, elements: !151)
!142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !143)
!143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !145)
!144 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/getopt_ext.h", directory: "")
!145 = !{!146, !147, !148, !150}
!146 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !143, file: !144, line: 52, baseType: !49, size: 64)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !143, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !143, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !143, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!151 = !{!152}
!152 = !DISubrange(count: 18)
!153 = !DIGlobalVariableExpression(var: !154, expr: !DIExpression())
!154 = distinct !DIGlobalVariable(name: "Version", scope: !155, file: !156, line: 2, type: !49, isLocal: false, isDefinition: true)
!155 = distinct !DICompileUnit(language: DW_LANG_C99, file: !156, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !157, nameTableKind: None)
!156 = !DIFile(filename: "src/version.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!157 = !{!153}
!158 = !DIGlobalVariableExpression(var: !159, expr: !DIExpression())
!159 = distinct !DIGlobalVariable(name: "last_cherror", scope: !160, file: !166, line: 28, type: !53, isLocal: true, isDefinition: true)
!160 = distinct !DICompileUnit(language: DW_LANG_C99, file: !161, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !162, nameTableKind: None)
!161 = !DIFile(filename: "./lib/canon-host.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!162 = !{!163, !158}
!163 = !DIGlobalVariableExpression(var: !164, expr: !DIExpression())
!164 = distinct !DIGlobalVariable(name: "hints", scope: !165, file: !166, line: 64, type: !169, isLocal: true, isDefinition: true)
!165 = distinct !DISubprogram(name: "canon_host_r", scope: !166, file: !166, line: 61, type: !167, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !160, retainedNodes: !4)
!166 = !DIFile(filename: "lib/canon-host.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!167 = !DISubroutineType(types: !168)
!168 = !{!6, !49, !149}
!169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "addrinfo", file: !170, line: 565, size: 384, elements: !171)
!170 = !DIFile(filename: "/usr/include/netdb.h", directory: "")
!171 = !{!172, !173, !174, !175, !176, !181, !193, !194}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "ai_flags", scope: !169, file: !170, line: 567, baseType: !53, size: 32)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "ai_family", scope: !169, file: !170, line: 568, baseType: !53, size: 32, offset: 32)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "ai_socktype", scope: !169, file: !170, line: 569, baseType: !53, size: 32, offset: 64)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "ai_protocol", scope: !169, file: !170, line: 570, baseType: !53, size: 32, offset: 96)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addrlen", scope: !169, file: !170, line: 571, baseType: !177, size: 32, offset: 128)
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !178, line: 33, baseType: !179)
!178 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket.h", directory: "")
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "__socklen_t", file: !12, line: 209, baseType: !180)
!180 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addr", scope: !169, file: !170, line: 572, baseType: !182, size: 64, offset: 192)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !178, line: 178, size: 128, elements: !184)
!184 = !{!185, !189}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !183, file: !178, line: 180, baseType: !186, size: 16)
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !187, line: 28, baseType: !188)
!187 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sockaddr.h", directory: "")
!188 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !183, file: !178, line: 181, baseType: !190, size: 112, offset: 16)
!190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 112, elements: !191)
!191 = !{!192}
!192 = !DISubrange(count: 14)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "ai_canonname", scope: !169, file: !170, line: 573, baseType: !6, size: 64, offset: 256)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "ai_next", scope: !169, file: !170, line: 574, baseType: !195, size: 64, offset: 320)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 64)
!196 = !DIGlobalVariableExpression(var: !197, expr: !DIExpression())
!197 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !198, file: !203, line: 56, type: !18, isLocal: true, isDefinition: true)
!198 = distinct !DICompileUnit(language: DW_LANG_C99, file: !199, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !200, nameTableKind: None)
!199 = !DIFile(filename: "./lib/closeout.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!200 = !{!201, !196}
!201 = !DIGlobalVariableExpression(var: !202, expr: !DIExpression())
!202 = distinct !DIGlobalVariable(name: "file_name", scope: !198, file: !203, line: 46, type: !49, isLocal: true, isDefinition: true)
!203 = !DIFile(filename: "lib/closeout.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!204 = !DIGlobalVariableExpression(var: !205, expr: !DIExpression())
!205 = distinct !DIGlobalVariable(name: "exit_failure", scope: !206, file: !209, line: 24, type: !210, isLocal: false, isDefinition: true)
!206 = distinct !DICompileUnit(language: DW_LANG_C99, file: !207, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !208, nameTableKind: None)
!207 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!208 = !{!204}
!209 = !DIFile(filename: "lib/exitfail.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!210 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !53)
!211 = !DIGlobalVariableExpression(var: !212, expr: !DIExpression())
!212 = distinct !DIGlobalVariable(name: "program_name", scope: !213, file: !217, line: 33, type: !49, isLocal: false, isDefinition: true)
!213 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, globals: !216, nameTableKind: None)
!214 = !DIFile(filename: "./lib/progname.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!215 = !{!8, !6}
!216 = !{!211}
!217 = !DIFile(filename: "lib/progname.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!218 = !DIGlobalVariableExpression(var: !219, expr: !DIExpression())
!219 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !220, file: !241, line: 116, type: !254, isLocal: true, isDefinition: true)
!220 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !238, nameTableKind: None)
!221 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!222 = !{!223}
!223 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !224, line: 32, baseType: !180, size: 32, elements: !225)
!224 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!225 = !{!226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236}
!226 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!227 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!228 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!229 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!230 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!231 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!232 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!233 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!234 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!235 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!236 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!237 = !{!53, !188, !110}
!238 = !{!239, !246, !252, !218, !264, !266, !273, !275}
!239 = !DIGlobalVariableExpression(var: !240, expr: !DIExpression())
!240 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !220, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!241 = !DIFile(filename: "lib/quotearg.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !243, size: 704, elements: !244)
!243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !49)
!244 = !{!245}
!245 = !DISubrange(count: 11)
!246 = !DIGlobalVariableExpression(var: !247, expr: !DIExpression())
!247 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !220, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !249, size: 320, elements: !250)
!249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !223)
!250 = !{!251}
!251 = !DISubrange(count: 10)
!252 = !DIGlobalVariableExpression(var: !253, expr: !DIExpression())
!253 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !220, file: !241, line: 1052, type: !254, isLocal: false, isDefinition: true)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !255)
!255 = !{!256, !257, !258, !262, !263}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !254, file: !241, line: 68, baseType: !223, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !254, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !254, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !180, size: 256, elements: !260)
!260 = !{!261}
!261 = !DISubrange(count: 8)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !254, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !254, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!264 = !DIGlobalVariableExpression(var: !265, expr: !DIExpression())
!265 = distinct !DIGlobalVariable(name: "slot0", scope: !220, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "slotvec", scope: !220, file: !241, line: 845, type: !268, isLocal: true, isDefinition: true)
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !270)
!270 = !{!271, !272}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !269, file: !241, line: 836, baseType: !110, size: 64)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !269, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!273 = !DIGlobalVariableExpression(var: !274, expr: !DIExpression())
!274 = distinct !DIGlobalVariable(name: "nslots", scope: !220, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!275 = !DIGlobalVariableExpression(var: !276, expr: !DIExpression())
!276 = distinct !DIGlobalVariable(name: "slotvec0", scope: !220, file: !241, line: 844, type: !269, isLocal: true, isDefinition: true)
!277 = !DIGlobalVariableExpression(var: !278, expr: !DIExpression())
!278 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !279, file: !282, line: 26, type: !283, isLocal: false, isDefinition: true)
!279 = distinct !DICompileUnit(language: DW_LANG_C99, file: !280, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !281, nameTableKind: None)
!280 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!281 = !{!277}
!282 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !50, size: 376, elements: !284)
!284 = !{!285}
!285 = !DISubrange(count: 47)
!286 = distinct !DICompileUnit(language: DW_LANG_C99, file: !287, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!287 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!288 = distinct !DICompileUnit(language: DW_LANG_C99, file: !289, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!289 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!290 = distinct !DICompileUnit(language: DW_LANG_C99, file: !291, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !292, nameTableKind: None)
!291 = !DIFile(filename: "./lib/imaxtostr.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!292 = !{!293}
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !294, line: 101, baseType: !295)
!294 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!295 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !12, line: 72, baseType: !13)
!296 = distinct !DICompileUnit(language: DW_LANG_C99, file: !297, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!297 = !DIFile(filename: "./lib/setlocale_null.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!298 = !{!8}
!299 = distinct !DICompileUnit(language: DW_LANG_C99, file: !300, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!300 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!301 = distinct !DICompileUnit(language: DW_LANG_C99, file: !302, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !303, nameTableKind: None)
!302 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!303 = !{!110, !6, !8}
!304 = distinct !DICompileUnit(language: DW_LANG_C99, file: !305, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!305 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!306 = distinct !DICompileUnit(language: DW_LANG_C99, file: !307, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !308, nameTableKind: None)
!307 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!308 = !{!110}
!309 = distinct !DICompileUnit(language: DW_LANG_C99, file: !310, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !311, nameTableKind: None)
!310 = !DIFile(filename: "./lib/readutmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!311 = !{!6, !8}
!312 = distinct !DICompileUnit(language: DW_LANG_C99, file: !313, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !314, nameTableKind: None)
!313 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!314 = !{!315}
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !317)
!317 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!318 = distinct !DICompileUnit(language: DW_LANG_C99, file: !319, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!319 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!320 = distinct !DICompileUnit(language: DW_LANG_C99, file: !321, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!321 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!322 = distinct !DICompileUnit(language: DW_LANG_C99, file: !323, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!323 = !DIFile(filename: "./lib/fclose.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!324 = distinct !DICompileUnit(language: DW_LANG_C99, file: !325, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!325 = !DIFile(filename: "./lib/fflush.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!326 = distinct !DICompileUnit(language: DW_LANG_C99, file: !327, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!327 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!328 = !{!"clang version 9.0.1-12 "}
!329 = !{i32 2, !"Dwarf Version", i32 4}
!330 = !{i32 2, !"Debug Info Version", i32 3}
!331 = !{i32 1, !"wchar_size", i32 4}
!332 = !{i32 1, !"ThinLTO", i32 0}
!333 = !{i32 1, !"EnableSplitLTOUnit", i32 0}
!334 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 638, type: !335, scopeLine: 639, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!335 = !DISubroutineType(types: !336)
!336 = !{null, !53}
!337 = !DILocalVariable(name: "status", arg: 1, scope: !334, file: !3, line: 638, type: !53)
!338 = !DILocation(line: 638, column: 12, scope: !334)
!339 = !DILocation(line: 640, column: 7, scope: !340)
!340 = distinct !DILexicalBlock(scope: !334, file: !3, line: 640, column: 7)
!341 = !DILocation(line: 640, column: 14, scope: !340)
!342 = !DILocation(line: 640, column: 7, scope: !334)
!343 = !DILocation(line: 641, column: 5, scope: !340)
!344 = !DILocation(line: 641, column: 5, scope: !345)
!345 = distinct !DILexicalBlock(scope: !340, file: !3, line: 641, column: 5)
!346 = !DILocation(line: 644, column: 15, scope: !347)
!347 = distinct !DILexicalBlock(scope: !340, file: !3, line: 643, column: 5)
!348 = !DILocation(line: 644, column: 66, scope: !347)
!349 = !DILocation(line: 644, column: 7, scope: !347)
!350 = !DILocation(line: 645, column: 7, scope: !347)
!351 = !DILocation(line: 648, column: 7, scope: !347)
!352 = !DILocation(line: 655, column: 7, scope: !347)
!353 = !DILocation(line: 658, column: 7, scope: !347)
!354 = !DILocation(line: 663, column: 7, scope: !347)
!355 = !DILocation(line: 669, column: 7, scope: !347)
!356 = !DILocation(line: 675, column: 7, scope: !347)
!357 = !DILocation(line: 676, column: 7, scope: !347)
!358 = !DILocation(line: 677, column: 15, scope: !347)
!359 = !DILocation(line: 677, column: 7, scope: !347)
!360 = !DILocation(line: 682, column: 7, scope: !347)
!361 = !DILocation(line: 684, column: 9, scope: !334)
!362 = !DILocation(line: 684, column: 3, scope: !334)
!363 = !DILocalVariable(name: "status", arg: 1, scope: !364, file: !3, line: 638, type: !53)
!364 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 638, type: !335, scopeLine: 639, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !365, retainedNodes: !4)
!365 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !366, nameTableKind: None)
!366 = !{!367, !369, !371, !373, !375, !377, !379, !381, !383, !385, !387, !389, !391, !393, !395, !397, !399, !401, !411, !414, !443, !445, !448, !450, !455, !460, !462}
!367 = !DIGlobalVariableExpression(var: !368, expr: !DIExpression())
!368 = distinct !DIGlobalVariable(name: "do_lookup", scope: !365, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!369 = !DIGlobalVariableExpression(var: !370, expr: !DIExpression())
!370 = distinct !DIGlobalVariable(name: "short_list", scope: !365, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!371 = !DIGlobalVariableExpression(var: !372, expr: !DIExpression())
!372 = distinct !DIGlobalVariable(name: "short_output", scope: !365, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!373 = !DIGlobalVariableExpression(var: !374, expr: !DIExpression())
!374 = distinct !DIGlobalVariable(name: "include_idle", scope: !365, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!375 = !DIGlobalVariableExpression(var: !376, expr: !DIExpression())
!376 = distinct !DIGlobalVariable(name: "include_heading", scope: !365, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!377 = !DIGlobalVariableExpression(var: !378, expr: !DIExpression())
!378 = distinct !DIGlobalVariable(name: "include_mesg", scope: !365, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!379 = !DIGlobalVariableExpression(var: !380, expr: !DIExpression())
!380 = distinct !DIGlobalVariable(name: "include_exit", scope: !365, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!381 = !DIGlobalVariableExpression(var: !382, expr: !DIExpression())
!382 = distinct !DIGlobalVariable(name: "need_boottime", scope: !365, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!383 = !DIGlobalVariableExpression(var: !384, expr: !DIExpression())
!384 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !365, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "need_login", scope: !365, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!387 = !DIGlobalVariableExpression(var: !388, expr: !DIExpression())
!388 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !365, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !365, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!391 = !DIGlobalVariableExpression(var: !392, expr: !DIExpression())
!392 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !365, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!393 = !DIGlobalVariableExpression(var: !394, expr: !DIExpression())
!394 = distinct !DIGlobalVariable(name: "need_users", scope: !365, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "my_line_only", scope: !365, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!397 = !DIGlobalVariableExpression(var: !398, expr: !DIExpression())
!398 = distinct !DIGlobalVariable(name: "time_format", scope: !365, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!399 = !DIGlobalVariableExpression(var: !400, expr: !DIExpression())
!400 = distinct !DIGlobalVariable(name: "time_format_width", scope: !365, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!401 = !DIGlobalVariableExpression(var: !402, expr: !DIExpression())
!402 = distinct !DIGlobalVariable(name: "longopts", scope: !365, file: !3, line: 162, type: !403, isLocal: true, isDefinition: true)
!403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !404, size: 4608, elements: !151)
!404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !405)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !406)
!406 = !{!407, !408, !409, !410}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !405, file: !144, line: 52, baseType: !49, size: 64)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !405, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !405, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !405, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!411 = !DIGlobalVariableExpression(var: !412, expr: !DIExpression())
!412 = distinct !DIGlobalVariable(name: "mesg", scope: !413, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!413 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !365, retainedNodes: !4)
!414 = !DIGlobalVariableExpression(var: !415, expr: !DIExpression())
!415 = distinct !DIGlobalVariable(name: "hoststr", scope: !416, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!416 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !417, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !365, retainedNodes: !4)
!417 = !DISubroutineType(types: !418)
!418 = !{null, !419, !9}
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64)
!420 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !421)
!421 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !422)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !423)
!423 = !{!424, !425, !426, !427, !428, !429, !430, !435, !436, !441, !442}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !422, file: !72, line: 57, baseType: !14, size: 16)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !422, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !422, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !422, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !422, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !422, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !422, file: !72, line: 67, baseType: !431, size: 32, offset: 2656)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !432)
!432 = !{!433, !434}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !431, file: !72, line: 45, baseType: !14, size: 16)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !431, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !422, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !422, file: !72, line: 79, baseType: !437, size: 64, offset: 2720)
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !422, file: !72, line: 75, size: 64, elements: !438)
!438 = !{!439, !440}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !437, file: !72, line: 77, baseType: !96, size: 32)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !437, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !422, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !422, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!443 = !DIGlobalVariableExpression(var: !444, expr: !DIExpression())
!444 = distinct !DIGlobalVariable(name: "hostlen", scope: !416, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!445 = !DIGlobalVariableExpression(var: !446, expr: !DIExpression())
!446 = distinct !DIGlobalVariable(name: "now", scope: !447, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!447 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !365, retainedNodes: !4)
!448 = !DIGlobalVariableExpression(var: !449, expr: !DIExpression())
!449 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !447, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!450 = !DIGlobalVariableExpression(var: !451, expr: !DIExpression())
!451 = distinct !DIGlobalVariable(name: "buf", scope: !452, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!452 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !453, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !365, retainedNodes: !4)
!453 = !DISubroutineType(types: !454)
!454 = !{!49, !419}
!455 = !DIGlobalVariableExpression(var: !456, expr: !DIExpression())
!456 = distinct !DIGlobalVariable(name: "runlevline", scope: !457, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!457 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !458, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !365, retainedNodes: !4)
!458 = !DISubroutineType(types: !459)
!459 = !{null, !419}
!460 = !DIGlobalVariableExpression(var: !461, expr: !DIExpression())
!461 = distinct !DIGlobalVariable(name: "comment", scope: !457, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!462 = !DIGlobalVariableExpression(var: !463, expr: !DIExpression())
!463 = distinct !DIGlobalVariable(name: "exitstr", scope: !464, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!464 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !458, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !365, retainedNodes: !4)
!465 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !466, file: !466, line: 634, type: !467, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!466 = !DIFile(filename: "src/system.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!467 = !DISubroutineType(types: !468)
!468 = !{null, !49}
!469 = !DILocalVariable(name: "program", arg: 1, scope: !465, file: !466, line: 634, type: !49)
!470 = !DILocation(line: 634, column: 34, scope: !465)
!471 = !DILocalVariable(name: "infomap", scope: !465, file: !466, line: 636, type: !472)
!472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 896, elements: !478)
!473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !474)
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !465, file: !466, line: 636, size: 128, elements: !475)
!475 = !{!476, !477}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !474, file: !466, line: 636, baseType: !49, size: 64)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !474, file: !466, line: 636, baseType: !49, size: 64, offset: 64)
!478 = !{!479}
!479 = !DISubrange(count: 7)
!480 = !DILocation(line: 636, column: 67, scope: !465)
!481 = !DILocalVariable(name: "node", scope: !465, file: !466, line: 646, type: !49)
!482 = !DILocation(line: 646, column: 15, scope: !465)
!483 = !DILocation(line: 646, column: 22, scope: !465)
!484 = !DILocalVariable(name: "map_prog", scope: !465, file: !466, line: 647, type: !485)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!486 = !DILocation(line: 647, column: 25, scope: !465)
!487 = !DILocation(line: 647, column: 36, scope: !465)
!488 = !DILocation(line: 649, column: 3, scope: !465)
!489 = !DILocation(line: 649, column: 10, scope: !465)
!490 = !DILocation(line: 649, column: 20, scope: !465)
!491 = !DILocation(line: 649, column: 28, scope: !465)
!492 = !DILocation(line: 649, column: 33, scope: !465)
!493 = !DILocation(line: 649, column: 31, scope: !465)
!494 = !DILocation(line: 0, scope: !465)
!495 = !DILocation(line: 650, column: 13, scope: !465)
!496 = distinct !{!496, !488, !495}
!497 = !DILocation(line: 652, column: 7, scope: !498)
!498 = distinct !DILexicalBlock(scope: !465, file: !466, line: 652, column: 7)
!499 = !DILocation(line: 652, column: 17, scope: !498)
!500 = !DILocation(line: 652, column: 7, scope: !465)
!501 = !DILocation(line: 653, column: 12, scope: !498)
!502 = !DILocation(line: 653, column: 22, scope: !498)
!503 = !DILocation(line: 653, column: 10, scope: !498)
!504 = !DILocation(line: 653, column: 5, scope: !498)
!505 = !DILocation(line: 655, column: 11, scope: !465)
!506 = !DILocation(line: 655, column: 3, scope: !465)
!507 = !DILocalVariable(name: "lc_messages", scope: !465, file: !466, line: 659, type: !49)
!508 = !DILocation(line: 659, column: 15, scope: !465)
!509 = !DILocation(line: 659, column: 29, scope: !465)
!510 = !DILocation(line: 660, column: 7, scope: !511)
!511 = distinct !DILexicalBlock(scope: !465, file: !466, line: 660, column: 7)
!512 = !DILocation(line: 660, column: 19, scope: !511)
!513 = !DILocation(line: 660, column: 22, scope: !511)
!514 = !DILocation(line: 660, column: 7, scope: !465)
!515 = !DILocation(line: 666, column: 7, scope: !516)
!516 = distinct !DILexicalBlock(scope: !511, file: !466, line: 661, column: 5)
!517 = !DILocation(line: 668, column: 5, scope: !516)
!518 = !DILocation(line: 669, column: 11, scope: !465)
!519 = !DILocation(line: 670, column: 24, scope: !465)
!520 = !DILocation(line: 669, column: 3, scope: !465)
!521 = !DILocation(line: 671, column: 11, scope: !465)
!522 = !DILocation(line: 672, column: 11, scope: !465)
!523 = !DILocation(line: 672, column: 17, scope: !465)
!524 = !DILocation(line: 672, column: 25, scope: !465)
!525 = !DILocation(line: 672, column: 22, scope: !465)
!526 = !DILocation(line: 671, column: 3, scope: !465)
!527 = !DILocation(line: 673, column: 1, scope: !465)
!528 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 688, type: !529, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!529 = !DISubroutineType(types: !530)
!530 = !{!53, !53, !531}
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!532 = !DILocalVariable(name: "argc", arg: 1, scope: !528, file: !3, line: 688, type: !53)
!533 = !DILocation(line: 688, column: 11, scope: !528)
!534 = !DILocalVariable(name: "argv", arg: 2, scope: !528, file: !3, line: 688, type: !531)
!535 = !DILocation(line: 688, column: 24, scope: !528)
!536 = !DILocalVariable(name: "optc", scope: !528, file: !3, line: 690, type: !53)
!537 = !DILocation(line: 690, column: 7, scope: !528)
!538 = !DILocalVariable(name: "assumptions", scope: !528, file: !3, line: 691, type: !18)
!539 = !DILocation(line: 691, column: 8, scope: !528)
!540 = !DILocation(line: 694, column: 21, scope: !528)
!541 = !DILocation(line: 694, column: 3, scope: !528)
!542 = !DILocation(line: 695, column: 3, scope: !528)
!543 = !DILocation(line: 696, column: 3, scope: !528)
!544 = !DILocation(line: 697, column: 3, scope: !528)
!545 = !DILocation(line: 699, column: 3, scope: !528)
!546 = !DILocation(line: 701, column: 3, scope: !528)
!547 = !DILocation(line: 701, column: 31, scope: !528)
!548 = !DILocation(line: 701, column: 37, scope: !528)
!549 = !DILocation(line: 701, column: 18, scope: !528)
!550 = !DILocation(line: 701, column: 16, scope: !528)
!551 = !DILocation(line: 702, column: 10, scope: !528)
!552 = !DILocation(line: 704, column: 15, scope: !553)
!553 = distinct !DILexicalBlock(scope: !528, file: !3, line: 703, column: 5)
!554 = !DILocation(line: 704, column: 7, scope: !553)
!555 = !DILocation(line: 707, column: 25, scope: !556)
!556 = distinct !DILexicalBlock(scope: !553, file: !3, line: 705, column: 9)
!557 = !DILocation(line: 708, column: 26, scope: !556)
!558 = !DILocation(line: 709, column: 22, scope: !556)
!559 = !DILocation(line: 710, column: 26, scope: !556)
!560 = !DILocation(line: 711, column: 25, scope: !556)
!561 = !DILocation(line: 712, column: 28, scope: !556)
!562 = !DILocation(line: 713, column: 22, scope: !556)
!563 = !DILocation(line: 714, column: 24, scope: !556)
!564 = !DILocation(line: 715, column: 24, scope: !556)
!565 = !DILocation(line: 716, column: 24, scope: !556)
!566 = !DILocation(line: 717, column: 23, scope: !556)
!567 = !DILocation(line: 718, column: 11, scope: !556)
!568 = !DILocation(line: 721, column: 25, scope: !556)
!569 = !DILocation(line: 722, column: 23, scope: !556)
!570 = !DILocation(line: 723, column: 11, scope: !556)
!571 = !DILocation(line: 726, column: 26, scope: !556)
!572 = !DILocation(line: 727, column: 24, scope: !556)
!573 = !DILocation(line: 728, column: 24, scope: !556)
!574 = !DILocation(line: 729, column: 23, scope: !556)
!575 = !DILocation(line: 730, column: 11, scope: !556)
!576 = !DILocation(line: 733, column: 27, scope: !556)
!577 = !DILocation(line: 734, column: 11, scope: !556)
!578 = !DILocation(line: 737, column: 22, scope: !556)
!579 = !DILocation(line: 738, column: 24, scope: !556)
!580 = !DILocation(line: 739, column: 23, scope: !556)
!581 = !DILocation(line: 740, column: 11, scope: !556)
!582 = !DILocation(line: 743, column: 24, scope: !556)
!583 = !DILocation(line: 744, column: 11, scope: !556)
!584 = !DILocation(line: 747, column: 26, scope: !556)
!585 = !DILocation(line: 748, column: 23, scope: !556)
!586 = !DILocation(line: 749, column: 11, scope: !556)
!587 = !DILocation(line: 752, column: 22, scope: !556)
!588 = !DILocation(line: 753, column: 11, scope: !556)
!589 = !DILocation(line: 756, column: 25, scope: !556)
!590 = !DILocation(line: 757, column: 24, scope: !556)
!591 = !DILocation(line: 758, column: 23, scope: !556)
!592 = !DILocation(line: 759, column: 11, scope: !556)
!593 = !DILocation(line: 762, column: 24, scope: !556)
!594 = !DILocation(line: 763, column: 11, scope: !556)
!595 = !DILocation(line: 766, column: 28, scope: !556)
!596 = !DILocation(line: 767, column: 23, scope: !556)
!597 = !DILocation(line: 768, column: 11, scope: !556)
!598 = !DILocation(line: 772, column: 24, scope: !556)
!599 = !DILocation(line: 773, column: 11, scope: !556)
!600 = !DILocation(line: 776, column: 22, scope: !556)
!601 = !DILocation(line: 777, column: 24, scope: !556)
!602 = !DILocation(line: 778, column: 23, scope: !556)
!603 = !DILocation(line: 779, column: 11, scope: !556)
!604 = !DILocation(line: 782, column: 21, scope: !556)
!605 = !DILocation(line: 783, column: 11, scope: !556)
!606 = !DILocation(line: 785, column: 9, scope: !556)
!607 = !DILocation(line: 787, column: 9, scope: !556)
!608 = !DILocation(line: 790, column: 11, scope: !556)
!609 = distinct !{!609, !546, !610}
!610 = !DILocation(line: 792, column: 5, scope: !528)
!611 = !DILocation(line: 794, column: 7, scope: !612)
!612 = distinct !DILexicalBlock(scope: !528, file: !3, line: 794, column: 7)
!613 = !DILocation(line: 794, column: 7, scope: !528)
!614 = !DILocation(line: 796, column: 18, scope: !615)
!615 = distinct !DILexicalBlock(scope: !612, file: !3, line: 795, column: 5)
!616 = !DILocation(line: 797, column: 20, scope: !615)
!617 = !DILocation(line: 798, column: 5, scope: !615)
!618 = !DILocation(line: 800, column: 7, scope: !619)
!619 = distinct !DILexicalBlock(scope: !528, file: !3, line: 800, column: 7)
!620 = !DILocation(line: 800, column: 7, scope: !528)
!621 = !DILocation(line: 802, column: 20, scope: !622)
!622 = distinct !DILexicalBlock(scope: !619, file: !3, line: 801, column: 5)
!623 = !DILocation(line: 803, column: 5, scope: !622)
!624 = !DILocation(line: 805, column: 7, scope: !625)
!625 = distinct !DILexicalBlock(scope: !528, file: !3, line: 805, column: 7)
!626 = !DILocation(line: 805, column: 7, scope: !528)
!627 = !DILocation(line: 807, column: 19, scope: !628)
!628 = distinct !DILexicalBlock(scope: !625, file: !3, line: 806, column: 5)
!629 = !DILocation(line: 808, column: 25, scope: !628)
!630 = !DILocation(line: 809, column: 5, scope: !628)
!631 = !DILocation(line: 812, column: 19, scope: !632)
!632 = distinct !DILexicalBlock(scope: !625, file: !3, line: 811, column: 5)
!633 = !DILocation(line: 813, column: 25, scope: !632)
!634 = !DILocation(line: 816, column: 11, scope: !528)
!635 = !DILocation(line: 816, column: 18, scope: !528)
!636 = !DILocation(line: 816, column: 16, scope: !528)
!637 = !DILocation(line: 816, column: 3, scope: !528)
!638 = !DILocation(line: 819, column: 20, scope: !639)
!639 = distinct !DILexicalBlock(scope: !528, file: !3, line: 817, column: 5)
!640 = !DILocation(line: 820, column: 7, scope: !639)
!641 = !DILocation(line: 823, column: 7, scope: !639)
!642 = !DILocation(line: 824, column: 7, scope: !639)
!643 = !DILocation(line: 827, column: 12, scope: !639)
!644 = !DILocation(line: 827, column: 17, scope: !639)
!645 = !DILocation(line: 827, column: 7, scope: !639)
!646 = !DILocation(line: 828, column: 7, scope: !639)
!647 = !DILocation(line: 831, column: 20, scope: !639)
!648 = !DILocation(line: 831, column: 50, scope: !639)
!649 = !DILocation(line: 831, column: 55, scope: !639)
!650 = !DILocation(line: 831, column: 62, scope: !639)
!651 = !DILocation(line: 831, column: 43, scope: !639)
!652 = !DILocation(line: 831, column: 7, scope: !639)
!653 = !DILocation(line: 832, column: 7, scope: !639)
!654 = !DILocation(line: 835, column: 3, scope: !528)
!655 = !DILocalVariable(name: "argc", arg: 1, scope: !656, file: !3, line: 688, type: !53)
!656 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 688, type: !529, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !657, retainedNodes: !4)
!657 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !658, nameTableKind: None)
!658 = !{!659, !661, !663, !665, !667, !669, !671, !673, !675, !677, !679, !681, !683, !685, !687, !689, !691, !693, !703, !706, !735, !737, !740, !742, !747, !752, !754}
!659 = !DIGlobalVariableExpression(var: !660, expr: !DIExpression())
!660 = distinct !DIGlobalVariable(name: "do_lookup", scope: !657, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!661 = !DIGlobalVariableExpression(var: !662, expr: !DIExpression())
!662 = distinct !DIGlobalVariable(name: "short_list", scope: !657, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!663 = !DIGlobalVariableExpression(var: !664, expr: !DIExpression())
!664 = distinct !DIGlobalVariable(name: "short_output", scope: !657, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!665 = !DIGlobalVariableExpression(var: !666, expr: !DIExpression())
!666 = distinct !DIGlobalVariable(name: "include_idle", scope: !657, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!667 = !DIGlobalVariableExpression(var: !668, expr: !DIExpression())
!668 = distinct !DIGlobalVariable(name: "include_heading", scope: !657, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!669 = !DIGlobalVariableExpression(var: !670, expr: !DIExpression())
!670 = distinct !DIGlobalVariable(name: "include_mesg", scope: !657, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!671 = !DIGlobalVariableExpression(var: !672, expr: !DIExpression())
!672 = distinct !DIGlobalVariable(name: "include_exit", scope: !657, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!673 = !DIGlobalVariableExpression(var: !674, expr: !DIExpression())
!674 = distinct !DIGlobalVariable(name: "need_boottime", scope: !657, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!675 = !DIGlobalVariableExpression(var: !676, expr: !DIExpression())
!676 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !657, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!677 = !DIGlobalVariableExpression(var: !678, expr: !DIExpression())
!678 = distinct !DIGlobalVariable(name: "need_login", scope: !657, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!679 = !DIGlobalVariableExpression(var: !680, expr: !DIExpression())
!680 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !657, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!681 = !DIGlobalVariableExpression(var: !682, expr: !DIExpression())
!682 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !657, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!683 = !DIGlobalVariableExpression(var: !684, expr: !DIExpression())
!684 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !657, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!685 = !DIGlobalVariableExpression(var: !686, expr: !DIExpression())
!686 = distinct !DIGlobalVariable(name: "need_users", scope: !657, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!687 = !DIGlobalVariableExpression(var: !688, expr: !DIExpression())
!688 = distinct !DIGlobalVariable(name: "my_line_only", scope: !657, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!689 = !DIGlobalVariableExpression(var: !690, expr: !DIExpression())
!690 = distinct !DIGlobalVariable(name: "time_format", scope: !657, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!691 = !DIGlobalVariableExpression(var: !692, expr: !DIExpression())
!692 = distinct !DIGlobalVariable(name: "time_format_width", scope: !657, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!693 = !DIGlobalVariableExpression(var: !694, expr: !DIExpression())
!694 = distinct !DIGlobalVariable(name: "longopts", scope: !657, file: !3, line: 162, type: !695, isLocal: true, isDefinition: true)
!695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !696, size: 4608, elements: !151)
!696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !697)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !698)
!698 = !{!699, !700, !701, !702}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !697, file: !144, line: 52, baseType: !49, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !697, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !697, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !697, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!703 = !DIGlobalVariableExpression(var: !704, expr: !DIExpression())
!704 = distinct !DIGlobalVariable(name: "mesg", scope: !705, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!705 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !657, retainedNodes: !4)
!706 = !DIGlobalVariableExpression(var: !707, expr: !DIExpression())
!707 = distinct !DIGlobalVariable(name: "hoststr", scope: !708, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!708 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !709, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !657, retainedNodes: !4)
!709 = !DISubroutineType(types: !710)
!710 = !{null, !711, !9}
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !713)
!713 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !714)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !715)
!715 = !{!716, !717, !718, !719, !720, !721, !722, !727, !728, !733, !734}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !714, file: !72, line: 57, baseType: !14, size: 16)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !714, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !714, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !714, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !714, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !714, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !714, file: !72, line: 67, baseType: !723, size: 32, offset: 2656)
!723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !724)
!724 = !{!725, !726}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !723, file: !72, line: 45, baseType: !14, size: 16)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !723, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !714, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !714, file: !72, line: 79, baseType: !729, size: 64, offset: 2720)
!729 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !714, file: !72, line: 75, size: 64, elements: !730)
!730 = !{!731, !732}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !729, file: !72, line: 77, baseType: !96, size: 32)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !729, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !714, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !714, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!735 = !DIGlobalVariableExpression(var: !736, expr: !DIExpression())
!736 = distinct !DIGlobalVariable(name: "hostlen", scope: !708, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!737 = !DIGlobalVariableExpression(var: !738, expr: !DIExpression())
!738 = distinct !DIGlobalVariable(name: "now", scope: !739, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!739 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !657, retainedNodes: !4)
!740 = !DIGlobalVariableExpression(var: !741, expr: !DIExpression())
!741 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !739, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!742 = !DIGlobalVariableExpression(var: !743, expr: !DIExpression())
!743 = distinct !DIGlobalVariable(name: "buf", scope: !744, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!744 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !745, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !657, retainedNodes: !4)
!745 = !DISubroutineType(types: !746)
!746 = !{!49, !711}
!747 = !DIGlobalVariableExpression(var: !748, expr: !DIExpression())
!748 = distinct !DIGlobalVariable(name: "runlevline", scope: !749, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!749 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !750, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !657, retainedNodes: !4)
!750 = !DISubroutineType(types: !751)
!751 = !{null, !711}
!752 = !DIGlobalVariableExpression(var: !753, expr: !DIExpression())
!753 = distinct !DIGlobalVariable(name: "comment", scope: !749, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!754 = !DIGlobalVariableExpression(var: !755, expr: !DIExpression())
!755 = distinct !DIGlobalVariable(name: "exitstr", scope: !756, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!756 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !750, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !657, retainedNodes: !4)
!757 = !DILocalVariable(name: "argv", arg: 2, scope: !656, file: !3, line: 688, type: !531)
!758 = !DILocalVariable(name: "optc", scope: !656, file: !3, line: 690, type: !53)
!759 = !DILocalVariable(name: "assumptions", scope: !656, file: !3, line: 691, type: !18)
!760 = distinct !DISubprogram(name: "who", scope: !3, file: !3, line: 621, type: !761, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!761 = !DISubroutineType(types: !762)
!762 = !{null, !49, !53}
!763 = !DILocalVariable(name: "filename", arg: 1, scope: !760, file: !3, line: 621, type: !49)
!764 = !DILocation(line: 621, column: 18, scope: !760)
!765 = !DILocalVariable(name: "options", arg: 2, scope: !760, file: !3, line: 621, type: !53)
!766 = !DILocation(line: 621, column: 32, scope: !760)
!767 = !DILocalVariable(name: "n_users", scope: !760, file: !3, line: 623, type: !110)
!768 = !DILocation(line: 623, column: 10, scope: !760)
!769 = !DILocalVariable(name: "utmp_buf", scope: !760, file: !3, line: 624, type: !770)
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 64)
!771 = !DILocation(line: 624, column: 16, scope: !760)
!772 = !DILocation(line: 626, column: 18, scope: !773)
!773 = distinct !DILexicalBlock(scope: !760, file: !3, line: 626, column: 7)
!774 = !DILocation(line: 626, column: 49, scope: !773)
!775 = !DILocation(line: 626, column: 7, scope: !773)
!776 = !DILocation(line: 626, column: 58, scope: !773)
!777 = !DILocation(line: 626, column: 7, scope: !760)
!778 = !DILocation(line: 627, column: 5, scope: !773)
!779 = !DILocation(line: 629, column: 7, scope: !780)
!780 = distinct !DILexicalBlock(scope: !760, file: !3, line: 629, column: 7)
!781 = !DILocation(line: 629, column: 7, scope: !760)
!782 = !DILocation(line: 630, column: 23, scope: !780)
!783 = !DILocation(line: 630, column: 32, scope: !780)
!784 = !DILocation(line: 630, column: 5, scope: !780)
!785 = !DILocation(line: 632, column: 19, scope: !780)
!786 = !DILocation(line: 632, column: 28, scope: !780)
!787 = !DILocation(line: 632, column: 5, scope: !780)
!788 = !DILocation(line: 634, column: 9, scope: !760)
!789 = !DILocation(line: 634, column: 3, scope: !760)
!790 = !DILocation(line: 635, column: 1, scope: !760)
!791 = distinct !DISubprogram(name: "list_entries_who", scope: !3, file: !3, line: 537, type: !792, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!792 = !DISubroutineType(types: !793)
!793 = !{null, !110, !67}
!794 = !DILocalVariable(name: "n", arg: 1, scope: !791, file: !3, line: 537, type: !110)
!795 = !DILocation(line: 537, column: 26, scope: !791)
!796 = !DILocalVariable(name: "utmp_buf", arg: 2, scope: !791, file: !3, line: 537, type: !67)
!797 = !DILocation(line: 537, column: 48, scope: !791)
!798 = !DILocalVariable(name: "entries", scope: !791, file: !3, line: 539, type: !112)
!799 = !DILocation(line: 539, column: 21, scope: !791)
!800 = !DILocalVariable(name: "separator", scope: !791, file: !3, line: 540, type: !49)
!801 = !DILocation(line: 540, column: 15, scope: !791)
!802 = !DILocation(line: 542, column: 3, scope: !791)
!803 = !DILocation(line: 542, column: 11, scope: !791)
!804 = !DILocation(line: 544, column: 11, scope: !805)
!805 = distinct !DILexicalBlock(scope: !806, file: !3, line: 544, column: 11)
!806 = distinct !DILexicalBlock(scope: !791, file: !3, line: 543, column: 5)
!807 = !DILocation(line: 544, column: 11, scope: !806)
!808 = !DILocalVariable(name: "trimmed_name", scope: !809, file: !3, line: 546, type: !6)
!809 = distinct !DILexicalBlock(scope: !805, file: !3, line: 545, column: 9)
!810 = !DILocation(line: 546, column: 17, scope: !809)
!811 = !DILocation(line: 548, column: 48, scope: !809)
!812 = !DILocation(line: 548, column: 26, scope: !809)
!813 = !DILocation(line: 548, column: 24, scope: !809)
!814 = !DILocation(line: 550, column: 27, scope: !809)
!815 = !DILocation(line: 550, column: 38, scope: !809)
!816 = !DILocation(line: 550, column: 11, scope: !809)
!817 = !DILocation(line: 551, column: 17, scope: !809)
!818 = !DILocation(line: 551, column: 11, scope: !809)
!819 = !DILocation(line: 552, column: 21, scope: !809)
!820 = !DILocation(line: 553, column: 18, scope: !809)
!821 = !DILocation(line: 554, column: 9, scope: !809)
!822 = !DILocation(line: 555, column: 15, scope: !806)
!823 = distinct !{!823, !802, !824}
!824 = !DILocation(line: 556, column: 5, scope: !791)
!825 = !DILocation(line: 557, column: 11, scope: !791)
!826 = !DILocation(line: 557, column: 33, scope: !791)
!827 = !DILocation(line: 557, column: 3, scope: !791)
!828 = !DILocation(line: 558, column: 1, scope: !791)
!829 = distinct !DISubprogram(name: "scan_entries", scope: !3, file: !3, line: 569, type: !792, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!830 = !DILocalVariable(name: "n", arg: 1, scope: !829, file: !3, line: 569, type: !110)
!831 = !DILocation(line: 569, column: 22, scope: !829)
!832 = !DILocalVariable(name: "utmp_buf", arg: 2, scope: !829, file: !3, line: 569, type: !67)
!833 = !DILocation(line: 569, column: 44, scope: !829)
!834 = !DILocalVariable(name: "ttyname_b", scope: !829, file: !3, line: 571, type: !6)
!835 = !DILocation(line: 571, column: 9, scope: !829)
!836 = !DILocalVariable(name: "boottime", scope: !829, file: !3, line: 572, type: !9)
!837 = !DILocation(line: 572, column: 10, scope: !829)
!838 = !DILocation(line: 574, column: 7, scope: !839)
!839 = distinct !DILexicalBlock(scope: !829, file: !3, line: 574, column: 7)
!840 = !DILocation(line: 574, column: 7, scope: !829)
!841 = !DILocation(line: 575, column: 5, scope: !839)
!842 = !DILocation(line: 577, column: 7, scope: !843)
!843 = distinct !DILexicalBlock(scope: !829, file: !3, line: 577, column: 7)
!844 = !DILocation(line: 577, column: 7, scope: !829)
!845 = !DILocation(line: 579, column: 19, scope: !846)
!846 = distinct !DILexicalBlock(scope: !843, file: !3, line: 578, column: 5)
!847 = !DILocation(line: 579, column: 17, scope: !846)
!848 = !DILocation(line: 580, column: 12, scope: !849)
!849 = distinct !DILexicalBlock(scope: !846, file: !3, line: 580, column: 11)
!850 = !DILocation(line: 580, column: 11, scope: !846)
!851 = !DILocation(line: 581, column: 9, scope: !849)
!852 = !DILocation(line: 582, column: 11, scope: !853)
!853 = distinct !DILexicalBlock(scope: !846, file: !3, line: 582, column: 11)
!854 = !DILocation(line: 582, column: 64, scope: !853)
!855 = !DILocation(line: 583, column: 19, scope: !853)
!856 = !DILocation(line: 583, column: 9, scope: !853)
!857 = !DILocation(line: 584, column: 5, scope: !846)
!858 = !DILocation(line: 586, column: 3, scope: !829)
!859 = !DILocation(line: 586, column: 11, scope: !829)
!860 = !DILocation(line: 588, column: 12, scope: !861)
!861 = distinct !DILexicalBlock(scope: !862, file: !3, line: 588, column: 11)
!862 = distinct !DILexicalBlock(scope: !829, file: !3, line: 587, column: 5)
!863 = !DILocation(line: 589, column: 11, scope: !861)
!864 = !DILocation(line: 589, column: 14, scope: !861)
!865 = !DILocation(line: 588, column: 11, scope: !862)
!866 = !DILocation(line: 592, column: 15, scope: !867)
!867 = distinct !DILexicalBlock(scope: !868, file: !3, line: 592, column: 15)
!868 = distinct !DILexicalBlock(scope: !861, file: !3, line: 591, column: 9)
!869 = !DILocation(line: 592, column: 26, scope: !867)
!870 = !DILocation(line: 592, column: 29, scope: !867)
!871 = !DILocation(line: 592, column: 15, scope: !868)
!872 = !DILocation(line: 593, column: 25, scope: !867)
!873 = !DILocation(line: 593, column: 35, scope: !867)
!874 = !DILocation(line: 593, column: 13, scope: !867)
!875 = !DILocation(line: 594, column: 20, scope: !876)
!876 = distinct !DILexicalBlock(scope: !867, file: !3, line: 594, column: 20)
!877 = !DILocation(line: 594, column: 34, scope: !876)
!878 = !DILocation(line: 594, column: 37, scope: !876)
!879 = !DILocation(line: 594, column: 20, scope: !867)
!880 = !DILocation(line: 595, column: 29, scope: !876)
!881 = !DILocation(line: 595, column: 13, scope: !876)
!882 = !DILocation(line: 596, column: 20, scope: !883)
!883 = distinct !DILexicalBlock(scope: !876, file: !3, line: 596, column: 20)
!884 = !DILocation(line: 596, column: 34, scope: !883)
!885 = !DILocation(line: 596, column: 37, scope: !883)
!886 = !DILocation(line: 596, column: 20, scope: !876)
!887 = !DILocation(line: 597, column: 29, scope: !883)
!888 = !DILocation(line: 597, column: 13, scope: !883)
!889 = !DILocation(line: 601, column: 20, scope: !890)
!890 = distinct !DILexicalBlock(scope: !883, file: !3, line: 601, column: 20)
!891 = !DILocation(line: 601, column: 37, scope: !890)
!892 = !DILocation(line: 601, column: 40, scope: !890)
!893 = !DILocation(line: 601, column: 20, scope: !883)
!894 = !DILocation(line: 602, column: 32, scope: !890)
!895 = !DILocation(line: 602, column: 13, scope: !890)
!896 = !DILocation(line: 603, column: 20, scope: !897)
!897 = distinct !DILexicalBlock(scope: !890, file: !3, line: 603, column: 20)
!898 = !DILocation(line: 603, column: 35, scope: !897)
!899 = !DILocation(line: 603, column: 38, scope: !897)
!900 = !DILocation(line: 603, column: 20, scope: !890)
!901 = !DILocation(line: 604, column: 30, scope: !897)
!902 = !DILocation(line: 604, column: 13, scope: !897)
!903 = !DILocation(line: 605, column: 20, scope: !904)
!904 = distinct !DILexicalBlock(scope: !897, file: !3, line: 605, column: 20)
!905 = !DILocation(line: 605, column: 31, scope: !904)
!906 = !DILocation(line: 605, column: 34, scope: !904)
!907 = !DILocation(line: 605, column: 20, scope: !897)
!908 = !DILocation(line: 606, column: 26, scope: !904)
!909 = !DILocation(line: 606, column: 13, scope: !904)
!910 = !DILocation(line: 607, column: 20, scope: !911)
!911 = distinct !DILexicalBlock(scope: !904, file: !3, line: 607, column: 20)
!912 = !DILocation(line: 607, column: 35, scope: !911)
!913 = !DILocation(line: 607, column: 38, scope: !911)
!914 = !DILocation(line: 607, column: 20, scope: !904)
!915 = !DILocation(line: 608, column: 30, scope: !911)
!916 = !DILocation(line: 608, column: 13, scope: !911)
!917 = !DILocation(line: 609, column: 9, scope: !868)
!918 = !DILocation(line: 611, column: 11, scope: !919)
!919 = distinct !DILexicalBlock(scope: !862, file: !3, line: 611, column: 11)
!920 = !DILocation(line: 611, column: 11, scope: !862)
!921 = !DILocation(line: 612, column: 20, scope: !919)
!922 = !DILocation(line: 612, column: 18, scope: !919)
!923 = !DILocation(line: 612, column: 9, scope: !919)
!924 = !DILocation(line: 614, column: 15, scope: !862)
!925 = distinct !{!925, !858, !926}
!926 = !DILocation(line: 615, column: 5, scope: !829)
!927 = !DILocation(line: 616, column: 1, scope: !829)
!928 = distinct !DISubprogram(name: "print_heading", scope: !3, file: !3, line: 561, type: !929, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!929 = !DISubroutineType(types: !930)
!930 = !{null}
!931 = !DILocation(line: 563, column: 19, scope: !928)
!932 = !DILocation(line: 563, column: 39, scope: !928)
!933 = !DILocation(line: 563, column: 50, scope: !928)
!934 = !DILocation(line: 563, column: 61, scope: !928)
!935 = !DILocation(line: 564, column: 15, scope: !928)
!936 = !DILocation(line: 564, column: 25, scope: !928)
!937 = !DILocation(line: 564, column: 39, scope: !928)
!938 = !DILocation(line: 563, column: 3, scope: !928)
!939 = !DILocation(line: 565, column: 1, scope: !928)
!940 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !64, file: !3, line: 333, type: !67)
!941 = !DILocation(line: 333, column: 32, scope: !64)
!942 = !DILocalVariable(name: "boottime", arg: 2, scope: !64, file: !3, line: 333, type: !9)
!943 = !DILocation(line: 333, column: 49, scope: !64)
!944 = !DILocalVariable(name: "stats", scope: !64, file: !3, line: 335, type: !945)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !946, line: 46, size: 1152, elements: !947)
!946 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!947 = !{!948, !950, !952, !954, !956, !958, !960, !961, !962, !964, !966, !968, !975, !976, !977}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !945, file: !946, line: 48, baseType: !949, size: 64)
!949 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !12, line: 145, baseType: !112)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !945, file: !946, line: 53, baseType: !951, size: 64, offset: 64)
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !12, line: 148, baseType: !112)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !945, file: !946, line: 61, baseType: !953, size: 64, offset: 128)
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !12, line: 151, baseType: !112)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !945, file: !946, line: 62, baseType: !955, size: 32, offset: 192)
!955 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !12, line: 150, baseType: !180)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !945, file: !946, line: 64, baseType: !957, size: 32, offset: 224)
!957 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !12, line: 146, baseType: !180)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !945, file: !946, line: 65, baseType: !959, size: 32, offset: 256)
!959 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !12, line: 147, baseType: !180)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !945, file: !946, line: 67, baseType: !53, size: 32, offset: 288)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !945, file: !946, line: 69, baseType: !949, size: 64, offset: 320)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !945, file: !946, line: 74, baseType: !963, size: 64, offset: 384)
!963 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !12, line: 152, baseType: !13)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !945, file: !946, line: 78, baseType: !965, size: 64, offset: 448)
!965 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !12, line: 174, baseType: !13)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !945, file: !946, line: 80, baseType: !967, size: 64, offset: 512)
!967 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !12, line: 179, baseType: !13)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !945, file: !946, line: 91, baseType: !969, size: 128, offset: 576)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !970, line: 10, size: 128, elements: !971)
!970 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!971 = !{!972, !973}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !969, file: !970, line: 12, baseType: !11, size: 64)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !969, file: !970, line: 16, baseType: !974, size: 64, offset: 64)
!974 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !12, line: 196, baseType: !13)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !945, file: !946, line: 92, baseType: !969, size: 128, offset: 704)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !945, file: !946, line: 93, baseType: !969, size: 128, offset: 832)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !945, file: !946, line: 106, baseType: !978, size: 192, offset: 960)
!978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !974, size: 192, elements: !60)
!979 = !DILocation(line: 335, column: 15, scope: !64)
!980 = !DILocalVariable(name: "last_change", scope: !64, file: !3, line: 336, type: !9)
!981 = !DILocation(line: 336, column: 10, scope: !64)
!982 = !DILocalVariable(name: "mesg", scope: !64, file: !3, line: 337, type: !7)
!983 = !DILocation(line: 337, column: 8, scope: !64)
!984 = !DILocalVariable(name: "idlestr", scope: !64, file: !3, line: 338, type: !985)
!985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 56, elements: !478)
!986 = !DILocation(line: 338, column: 8, scope: !64)
!987 = !DILocalVariable(name: "line", scope: !64, file: !3, line: 347, type: !988)
!988 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 304, elements: !989)
!989 = !{!990}
!990 = !DISubrange(count: 38)
!991 = !DILocation(line: 347, column: 8, scope: !64)
!992 = !DILocalVariable(name: "p", scope: !64, file: !3, line: 348, type: !6)
!993 = !DILocation(line: 348, column: 9, scope: !64)
!994 = !DILocation(line: 348, column: 13, scope: !64)
!995 = !DILocalVariable(name: "pidstr", scope: !64, file: !3, line: 349, type: !996)
!996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 96, elements: !997)
!997 = !{!998}
!998 = !DISubrange(count: 12)
!999 = !DILocation(line: 349, column: 3, scope: !64)
!1000 = !DILocation(line: 354, column: 10, scope: !1001)
!1001 = distinct !DILexicalBlock(scope: !64, file: !3, line: 354, column: 8)
!1002 = !DILocation(line: 354, column: 8, scope: !64)
!1003 = !DILocation(line: 355, column: 17, scope: !1001)
!1004 = !DILocation(line: 355, column: 9, scope: !1001)
!1005 = !DILocation(line: 355, column: 7, scope: !1001)
!1006 = !DILocation(line: 355, column: 5, scope: !1001)
!1007 = !DILocation(line: 356, column: 12, scope: !64)
!1008 = !DILocation(line: 356, column: 15, scope: !64)
!1009 = !DILocation(line: 356, column: 25, scope: !64)
!1010 = !DILocation(line: 356, column: 3, scope: !64)
!1011 = !DILocation(line: 358, column: 13, scope: !1012)
!1012 = distinct !DILexicalBlock(scope: !64, file: !3, line: 358, column: 7)
!1013 = !DILocation(line: 358, column: 7, scope: !1012)
!1014 = !DILocation(line: 358, column: 27, scope: !1012)
!1015 = !DILocation(line: 358, column: 7, scope: !64)
!1016 = !DILocation(line: 360, column: 14, scope: !1017)
!1017 = distinct !DILexicalBlock(scope: !1012, file: !3, line: 359, column: 5)
!1018 = !DILocation(line: 360, column: 12, scope: !1017)
!1019 = !DILocation(line: 361, column: 27, scope: !1017)
!1020 = !DILocation(line: 361, column: 19, scope: !1017)
!1021 = !DILocation(line: 362, column: 5, scope: !1017)
!1022 = !DILocation(line: 365, column: 12, scope: !1023)
!1023 = distinct !DILexicalBlock(scope: !1012, file: !3, line: 364, column: 5)
!1024 = !DILocation(line: 366, column: 19, scope: !1023)
!1025 = !DILocation(line: 369, column: 7, scope: !1026)
!1026 = distinct !DILexicalBlock(scope: !64, file: !3, line: 369, column: 7)
!1027 = !DILocation(line: 369, column: 7, scope: !64)
!1028 = !DILocation(line: 370, column: 14, scope: !1026)
!1029 = !DILocation(line: 370, column: 57, scope: !1026)
!1030 = !DILocation(line: 370, column: 70, scope: !1026)
!1031 = !DILocation(line: 370, column: 44, scope: !1026)
!1032 = !DILocation(line: 370, column: 5, scope: !1026)
!1033 = !DILocation(line: 372, column: 14, scope: !1026)
!1034 = !DILocation(line: 372, column: 5, scope: !1026)
!1035 = !DILocation(line: 375, column: 7, scope: !1036)
!1036 = distinct !DILexicalBlock(scope: !64, file: !3, line: 375, column: 7)
!1037 = !DILocation(line: 375, column: 17, scope: !1036)
!1038 = !DILocation(line: 375, column: 7, scope: !64)
!1039 = !DILocalVariable(name: "ut_host", scope: !1040, file: !3, line: 377, type: !1041)
!1040 = distinct !DILexicalBlock(scope: !1036, file: !3, line: 376, column: 5)
!1041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2056, elements: !1042)
!1042 = !{!1043}
!1043 = !DISubrange(count: 257)
!1044 = !DILocation(line: 377, column: 12, scope: !1040)
!1045 = !DILocalVariable(name: "host", scope: !1040, file: !3, line: 378, type: !6)
!1046 = !DILocation(line: 378, column: 13, scope: !1040)
!1047 = !DILocalVariable(name: "display", scope: !1040, file: !3, line: 379, type: !6)
!1048 = !DILocation(line: 379, column: 13, scope: !1040)
!1049 = !DILocation(line: 382, column: 16, scope: !1040)
!1050 = !DILocation(line: 382, column: 25, scope: !1040)
!1051 = !DILocation(line: 382, column: 35, scope: !1040)
!1052 = !DILocation(line: 382, column: 7, scope: !1040)
!1053 = !DILocation(line: 385, column: 25, scope: !1040)
!1054 = !DILocation(line: 385, column: 17, scope: !1040)
!1055 = !DILocation(line: 385, column: 15, scope: !1040)
!1056 = !DILocation(line: 386, column: 11, scope: !1057)
!1057 = distinct !DILexicalBlock(scope: !1040, file: !3, line: 386, column: 11)
!1058 = !DILocation(line: 386, column: 11, scope: !1040)
!1059 = !DILocation(line: 387, column: 17, scope: !1057)
!1060 = !DILocation(line: 387, column: 20, scope: !1057)
!1061 = !DILocation(line: 387, column: 9, scope: !1057)
!1062 = !DILocation(line: 389, column: 11, scope: !1063)
!1063 = distinct !DILexicalBlock(scope: !1040, file: !3, line: 389, column: 11)
!1064 = !DILocation(line: 389, column: 20, scope: !1063)
!1065 = !DILocation(line: 389, column: 23, scope: !1063)
!1066 = !DILocation(line: 389, column: 11, scope: !1040)
!1067 = !DILocation(line: 392, column: 30, scope: !1068)
!1068 = distinct !DILexicalBlock(scope: !1063, file: !3, line: 390, column: 9)
!1069 = !DILocation(line: 392, column: 18, scope: !1068)
!1070 = !DILocation(line: 392, column: 16, scope: !1068)
!1071 = !DILocation(line: 393, column: 9, scope: !1068)
!1072 = !DILocation(line: 395, column: 13, scope: !1073)
!1073 = distinct !DILexicalBlock(scope: !1040, file: !3, line: 395, column: 11)
!1074 = !DILocation(line: 395, column: 11, scope: !1040)
!1075 = !DILocation(line: 396, column: 16, scope: !1073)
!1076 = !DILocation(line: 396, column: 14, scope: !1073)
!1077 = !DILocation(line: 396, column: 9, scope: !1073)
!1078 = !DILocation(line: 398, column: 11, scope: !1079)
!1079 = distinct !DILexicalBlock(scope: !1040, file: !3, line: 398, column: 11)
!1080 = !DILocation(line: 398, column: 11, scope: !1040)
!1081 = !DILocation(line: 400, column: 15, scope: !1082)
!1082 = distinct !DILexicalBlock(scope: !1083, file: !3, line: 400, column: 15)
!1083 = distinct !DILexicalBlock(scope: !1079, file: !3, line: 399, column: 9)
!1084 = !DILocation(line: 400, column: 33, scope: !1082)
!1085 = !DILocation(line: 400, column: 25, scope: !1082)
!1086 = !DILocation(line: 400, column: 49, scope: !1082)
!1087 = !DILocation(line: 400, column: 41, scope: !1082)
!1088 = !DILocation(line: 400, column: 39, scope: !1082)
!1089 = !DILocation(line: 400, column: 58, scope: !1082)
!1090 = !DILocation(line: 400, column: 23, scope: !1082)
!1091 = !DILocation(line: 400, column: 15, scope: !1083)
!1092 = !DILocation(line: 402, column: 33, scope: !1093)
!1093 = distinct !DILexicalBlock(scope: !1082, file: !3, line: 401, column: 13)
!1094 = !DILocation(line: 402, column: 25, scope: !1093)
!1095 = !DILocation(line: 402, column: 49, scope: !1093)
!1096 = !DILocation(line: 402, column: 41, scope: !1093)
!1097 = !DILocation(line: 402, column: 39, scope: !1093)
!1098 = !DILocation(line: 402, column: 58, scope: !1093)
!1099 = !DILocation(line: 402, column: 23, scope: !1093)
!1100 = !DILocation(line: 403, column: 21, scope: !1093)
!1101 = !DILocation(line: 403, column: 15, scope: !1093)
!1102 = !DILocation(line: 404, column: 34, scope: !1093)
!1103 = !DILocation(line: 404, column: 25, scope: !1093)
!1104 = !DILocation(line: 404, column: 23, scope: !1093)
!1105 = !DILocation(line: 405, column: 13, scope: !1093)
!1106 = !DILocation(line: 406, column: 20, scope: !1083)
!1107 = !DILocation(line: 406, column: 40, scope: !1083)
!1108 = !DILocation(line: 406, column: 46, scope: !1083)
!1109 = !DILocation(line: 406, column: 11, scope: !1083)
!1110 = !DILocation(line: 407, column: 9, scope: !1083)
!1111 = !DILocation(line: 410, column: 15, scope: !1112)
!1112 = distinct !DILexicalBlock(scope: !1113, file: !3, line: 410, column: 15)
!1113 = distinct !DILexicalBlock(scope: !1079, file: !3, line: 409, column: 9)
!1114 = !DILocation(line: 410, column: 33, scope: !1112)
!1115 = !DILocation(line: 410, column: 25, scope: !1112)
!1116 = !DILocation(line: 410, column: 39, scope: !1112)
!1117 = !DILocation(line: 410, column: 23, scope: !1112)
!1118 = !DILocation(line: 410, column: 15, scope: !1113)
!1119 = !DILocation(line: 412, column: 33, scope: !1120)
!1120 = distinct !DILexicalBlock(scope: !1112, file: !3, line: 411, column: 13)
!1121 = !DILocation(line: 412, column: 25, scope: !1120)
!1122 = !DILocation(line: 412, column: 39, scope: !1120)
!1123 = !DILocation(line: 412, column: 23, scope: !1120)
!1124 = !DILocation(line: 413, column: 21, scope: !1120)
!1125 = !DILocation(line: 413, column: 15, scope: !1120)
!1126 = !DILocation(line: 414, column: 34, scope: !1120)
!1127 = !DILocation(line: 414, column: 25, scope: !1120)
!1128 = !DILocation(line: 414, column: 23, scope: !1120)
!1129 = !DILocation(line: 415, column: 13, scope: !1120)
!1130 = !DILocation(line: 416, column: 20, scope: !1113)
!1131 = !DILocation(line: 416, column: 37, scope: !1113)
!1132 = !DILocation(line: 416, column: 11, scope: !1113)
!1133 = !DILocation(line: 419, column: 11, scope: !1134)
!1134 = distinct !DILexicalBlock(scope: !1040, file: !3, line: 419, column: 11)
!1135 = !DILocation(line: 419, column: 19, scope: !1134)
!1136 = !DILocation(line: 419, column: 16, scope: !1134)
!1137 = !DILocation(line: 419, column: 11, scope: !1040)
!1138 = !DILocation(line: 420, column: 15, scope: !1134)
!1139 = !DILocation(line: 420, column: 9, scope: !1134)
!1140 = !DILocation(line: 421, column: 5, scope: !1040)
!1141 = !DILocation(line: 424, column: 11, scope: !1142)
!1142 = distinct !DILexicalBlock(scope: !1143, file: !3, line: 424, column: 11)
!1143 = distinct !DILexicalBlock(scope: !1036, file: !3, line: 423, column: 5)
!1144 = !DILocation(line: 424, column: 19, scope: !1142)
!1145 = !DILocation(line: 424, column: 11, scope: !1143)
!1146 = !DILocation(line: 426, column: 19, scope: !1147)
!1147 = distinct !DILexicalBlock(scope: !1142, file: !3, line: 425, column: 9)
!1148 = !DILocation(line: 427, column: 17, scope: !1147)
!1149 = !DILocation(line: 427, column: 11, scope: !1147)
!1150 = !DILocation(line: 428, column: 30, scope: !1147)
!1151 = !DILocation(line: 428, column: 21, scope: !1147)
!1152 = !DILocation(line: 428, column: 19, scope: !1147)
!1153 = !DILocation(line: 429, column: 9, scope: !1147)
!1154 = !DILocation(line: 430, column: 8, scope: !1143)
!1155 = !DILocation(line: 430, column: 16, scope: !1143)
!1156 = !DILocation(line: 434, column: 42, scope: !64)
!1157 = !DILocation(line: 434, column: 62, scope: !64)
!1158 = !DILocation(line: 435, column: 41, scope: !64)
!1159 = !DILocation(line: 435, column: 51, scope: !64)
!1160 = !DILocation(line: 436, column: 28, scope: !64)
!1161 = !DILocation(line: 436, column: 15, scope: !64)
!1162 = !DILocation(line: 436, column: 39, scope: !64)
!1163 = !DILocation(line: 436, column: 48, scope: !64)
!1164 = !DILocation(line: 437, column: 15, scope: !64)
!1165 = !DILocation(line: 437, column: 25, scope: !64)
!1166 = !DILocation(line: 434, column: 3, scope: !64)
!1167 = !DILocation(line: 438, column: 1, scope: !64)
!1168 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1169, file: !3, line: 333, type: !1172)
!1169 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !1170, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1196, retainedNodes: !4)
!1170 = !DISubroutineType(types: !1171)
!1171 = !{null, !1172, !9}
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1174)
!1174 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1175)
!1175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1176)
!1176 = !{!1177, !1178, !1179, !1180, !1181, !1182, !1183, !1188, !1189, !1194, !1195}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1175, file: !72, line: 57, baseType: !14, size: 16)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1175, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1175, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1175, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1175, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1175, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1175, file: !72, line: 67, baseType: !1184, size: 32, offset: 2656)
!1184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !1185)
!1185 = !{!1186, !1187}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !1184, file: !72, line: 45, baseType: !14, size: 16)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !1184, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1175, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1175, file: !72, line: 79, baseType: !1190, size: 64, offset: 2720)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1175, file: !72, line: 75, size: 64, elements: !1191)
!1191 = !{!1192, !1193}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1190, file: !72, line: 77, baseType: !96, size: 32)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1190, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1175, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1175, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!1196 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1197, nameTableKind: None)
!1197 = !{!1198, !1200, !1202, !1204, !1206, !1208, !1210, !1212, !1214, !1216, !1218, !1220, !1222, !1224, !1226, !1228, !1230, !1232, !1242, !1245, !1247, !1249, !1252, !1254, !1259, !1264, !1266}
!1198 = !DIGlobalVariableExpression(var: !1199, expr: !DIExpression())
!1199 = distinct !DIGlobalVariable(name: "do_lookup", scope: !1196, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!1200 = !DIGlobalVariableExpression(var: !1201, expr: !DIExpression())
!1201 = distinct !DIGlobalVariable(name: "short_list", scope: !1196, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!1202 = !DIGlobalVariableExpression(var: !1203, expr: !DIExpression())
!1203 = distinct !DIGlobalVariable(name: "short_output", scope: !1196, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!1204 = !DIGlobalVariableExpression(var: !1205, expr: !DIExpression())
!1205 = distinct !DIGlobalVariable(name: "include_idle", scope: !1196, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!1206 = !DIGlobalVariableExpression(var: !1207, expr: !DIExpression())
!1207 = distinct !DIGlobalVariable(name: "include_heading", scope: !1196, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!1208 = !DIGlobalVariableExpression(var: !1209, expr: !DIExpression())
!1209 = distinct !DIGlobalVariable(name: "include_mesg", scope: !1196, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!1210 = !DIGlobalVariableExpression(var: !1211, expr: !DIExpression())
!1211 = distinct !DIGlobalVariable(name: "include_exit", scope: !1196, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!1212 = !DIGlobalVariableExpression(var: !1213, expr: !DIExpression())
!1213 = distinct !DIGlobalVariable(name: "need_boottime", scope: !1196, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!1214 = !DIGlobalVariableExpression(var: !1215, expr: !DIExpression())
!1215 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !1196, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!1216 = !DIGlobalVariableExpression(var: !1217, expr: !DIExpression())
!1217 = distinct !DIGlobalVariable(name: "need_login", scope: !1196, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!1218 = !DIGlobalVariableExpression(var: !1219, expr: !DIExpression())
!1219 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !1196, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!1220 = !DIGlobalVariableExpression(var: !1221, expr: !DIExpression())
!1221 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !1196, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!1222 = !DIGlobalVariableExpression(var: !1223, expr: !DIExpression())
!1223 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !1196, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!1224 = !DIGlobalVariableExpression(var: !1225, expr: !DIExpression())
!1225 = distinct !DIGlobalVariable(name: "need_users", scope: !1196, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "my_line_only", scope: !1196, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(name: "time_format", scope: !1196, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "time_format_width", scope: !1196, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!1232 = !DIGlobalVariableExpression(var: !1233, expr: !DIExpression())
!1233 = distinct !DIGlobalVariable(name: "longopts", scope: !1196, file: !3, line: 162, type: !1234, isLocal: true, isDefinition: true)
!1234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1235, size: 4608, elements: !151)
!1235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1236)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !1237)
!1237 = !{!1238, !1239, !1240, !1241}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1236, file: !144, line: 52, baseType: !49, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1236, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1236, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1236, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!1242 = !DIGlobalVariableExpression(var: !1243, expr: !DIExpression())
!1243 = distinct !DIGlobalVariable(name: "mesg", scope: !1244, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!1244 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1196, retainedNodes: !4)
!1245 = !DIGlobalVariableExpression(var: !1246, expr: !DIExpression())
!1246 = distinct !DIGlobalVariable(name: "hoststr", scope: !1169, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!1247 = !DIGlobalVariableExpression(var: !1248, expr: !DIExpression())
!1248 = distinct !DIGlobalVariable(name: "hostlen", scope: !1169, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!1249 = !DIGlobalVariableExpression(var: !1250, expr: !DIExpression())
!1250 = distinct !DIGlobalVariable(name: "now", scope: !1251, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!1251 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1196, retainedNodes: !4)
!1252 = !DIGlobalVariableExpression(var: !1253, expr: !DIExpression())
!1253 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !1251, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(name: "buf", scope: !1256, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!1256 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !1257, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1196, retainedNodes: !4)
!1257 = !DISubroutineType(types: !1258)
!1258 = !{!49, !1172}
!1259 = !DIGlobalVariableExpression(var: !1260, expr: !DIExpression())
!1260 = distinct !DIGlobalVariable(name: "runlevline", scope: !1261, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1261 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !1262, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1196, retainedNodes: !4)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{null, !1172}
!1264 = !DIGlobalVariableExpression(var: !1265, expr: !DIExpression())
!1265 = distinct !DIGlobalVariable(name: "comment", scope: !1261, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1266 = !DIGlobalVariableExpression(var: !1267, expr: !DIExpression())
!1267 = distinct !DIGlobalVariable(name: "exitstr", scope: !1268, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!1268 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !1262, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1196, retainedNodes: !4)
!1269 = !DILocalVariable(name: "boottime", arg: 2, scope: !1169, file: !3, line: 333, type: !9)
!1270 = !DILocalVariable(name: "stats", scope: !1169, file: !3, line: 335, type: !1271)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !946, line: 46, size: 1152, elements: !1272)
!1272 = !{!1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1289, !1290, !1291}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1271, file: !946, line: 48, baseType: !949, size: 64)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1271, file: !946, line: 53, baseType: !951, size: 64, offset: 64)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1271, file: !946, line: 61, baseType: !953, size: 64, offset: 128)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1271, file: !946, line: 62, baseType: !955, size: 32, offset: 192)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1271, file: !946, line: 64, baseType: !957, size: 32, offset: 224)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1271, file: !946, line: 65, baseType: !959, size: 32, offset: 256)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1271, file: !946, line: 67, baseType: !53, size: 32, offset: 288)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1271, file: !946, line: 69, baseType: !949, size: 64, offset: 320)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1271, file: !946, line: 74, baseType: !963, size: 64, offset: 384)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1271, file: !946, line: 78, baseType: !965, size: 64, offset: 448)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1271, file: !946, line: 80, baseType: !967, size: 64, offset: 512)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1271, file: !946, line: 91, baseType: !1285, size: 128, offset: 576)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !970, line: 10, size: 128, elements: !1286)
!1286 = !{!1287, !1288}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1285, file: !970, line: 12, baseType: !11, size: 64)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1285, file: !970, line: 16, baseType: !974, size: 64, offset: 64)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1271, file: !946, line: 92, baseType: !1285, size: 128, offset: 704)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1271, file: !946, line: 93, baseType: !1285, size: 128, offset: 832)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1271, file: !946, line: 106, baseType: !978, size: 192, offset: 960)
!1292 = !DILocalVariable(name: "last_change", scope: !1169, file: !3, line: 336, type: !9)
!1293 = !DILocalVariable(name: "mesg", scope: !1169, file: !3, line: 337, type: !7)
!1294 = !DILocalVariable(name: "idlestr", scope: !1169, file: !3, line: 338, type: !985)
!1295 = !DILocalVariable(name: "line", scope: !1169, file: !3, line: 347, type: !988)
!1296 = !DILocalVariable(name: "p", scope: !1169, file: !3, line: 348, type: !6)
!1297 = !DILocalVariable(name: "pidstr", scope: !1169, file: !3, line: 349, type: !996)
!1298 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !133, file: !3, line: 514, type: !67)
!1299 = !DILocation(line: 514, column: 36, scope: !133)
!1300 = !DILocalVariable(name: "last", scope: !133, file: !3, line: 517, type: !317)
!1301 = !DILocation(line: 517, column: 17, scope: !133)
!1302 = !DILocation(line: 517, column: 24, scope: !133)
!1303 = !DILocation(line: 517, column: 42, scope: !133)
!1304 = !DILocalVariable(name: "curr", scope: !133, file: !3, line: 518, type: !317)
!1305 = !DILocation(line: 518, column: 17, scope: !133)
!1306 = !DILocation(line: 518, column: 24, scope: !133)
!1307 = !DILocation(line: 518, column: 42, scope: !133)
!1308 = !DILocation(line: 520, column: 8, scope: !1309)
!1309 = distinct !DILexicalBlock(scope: !133, file: !3, line: 520, column: 7)
!1310 = !DILocation(line: 520, column: 7, scope: !133)
!1311 = !DILocation(line: 521, column: 35, scope: !1309)
!1312 = !DILocation(line: 521, column: 27, scope: !1309)
!1313 = !DILocation(line: 521, column: 51, scope: !1309)
!1314 = !DILocation(line: 521, column: 18, scope: !1309)
!1315 = !DILocation(line: 521, column: 16, scope: !1309)
!1316 = !DILocation(line: 521, column: 5, scope: !1309)
!1317 = !DILocation(line: 522, column: 12, scope: !133)
!1318 = !DILocation(line: 522, column: 33, scope: !133)
!1319 = !DILocation(line: 522, column: 49, scope: !133)
!1320 = !DILocation(line: 522, column: 3, scope: !133)
!1321 = !DILocation(line: 524, column: 8, scope: !1322)
!1322 = distinct !DILexicalBlock(scope: !133, file: !3, line: 524, column: 7)
!1323 = !DILocation(line: 524, column: 7, scope: !133)
!1324 = !DILocation(line: 525, column: 32, scope: !1322)
!1325 = !DILocation(line: 525, column: 24, scope: !1322)
!1326 = !DILocation(line: 525, column: 44, scope: !1322)
!1327 = !DILocation(line: 525, column: 15, scope: !1322)
!1328 = !DILocation(line: 525, column: 13, scope: !1322)
!1329 = !DILocation(line: 525, column: 5, scope: !1322)
!1330 = !DILocation(line: 526, column: 12, scope: !133)
!1331 = !DILocation(line: 526, column: 29, scope: !133)
!1332 = !DILocation(line: 526, column: 42, scope: !133)
!1333 = !DILocation(line: 526, column: 47, scope: !133)
!1334 = !DILocation(line: 526, column: 41, scope: !133)
!1335 = !DILocation(line: 526, column: 63, scope: !133)
!1336 = !DILocation(line: 526, column: 3, scope: !133)
!1337 = !DILocation(line: 528, column: 32, scope: !133)
!1338 = !DILocation(line: 528, column: 57, scope: !133)
!1339 = !DILocation(line: 528, column: 44, scope: !133)
!1340 = !DILocation(line: 529, column: 34, scope: !133)
!1341 = !DILocation(line: 529, column: 23, scope: !133)
!1342 = !DILocation(line: 529, column: 42, scope: !133)
!1343 = !DILocation(line: 528, column: 3, scope: !133)
!1344 = !DILocation(line: 531, column: 3, scope: !133)
!1345 = distinct !DISubprogram(name: "print_boottime", scope: !3, file: !3, line: 441, type: !134, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1346 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1345, file: !3, line: 441, type: !67)
!1347 = !DILocation(line: 441, column: 36, scope: !1345)
!1348 = !DILocation(line: 443, column: 32, scope: !1345)
!1349 = !DILocation(line: 444, column: 28, scope: !1345)
!1350 = !DILocation(line: 444, column: 15, scope: !1345)
!1351 = !DILocation(line: 443, column: 3, scope: !1345)
!1352 = !DILocation(line: 445, column: 1, scope: !1345)
!1353 = distinct !DISubprogram(name: "print_clockchange", scope: !3, file: !3, line: 506, type: !134, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1354 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1353, file: !3, line: 506, type: !67)
!1355 = !DILocation(line: 506, column: 39, scope: !1353)
!1356 = !DILocation(line: 509, column: 32, scope: !1353)
!1357 = !DILocation(line: 510, column: 28, scope: !1353)
!1358 = !DILocation(line: 510, column: 15, scope: !1353)
!1359 = !DILocation(line: 509, column: 3, scope: !1353)
!1360 = !DILocation(line: 511, column: 1, scope: !1353)
!1361 = distinct !DISubprogram(name: "print_initspawn", scope: !3, file: !3, line: 495, type: !134, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1362 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1361, file: !3, line: 495, type: !67)
!1363 = !DILocation(line: 495, column: 37, scope: !1361)
!1364 = !DILocalVariable(name: "comment", scope: !1361, file: !3, line: 497, type: !6)
!1365 = !DILocation(line: 497, column: 9, scope: !1361)
!1366 = !DILocation(line: 497, column: 43, scope: !1361)
!1367 = !DILocation(line: 497, column: 19, scope: !1361)
!1368 = !DILocalVariable(name: "pidstr", scope: !1361, file: !3, line: 498, type: !996)
!1369 = !DILocation(line: 498, column: 3, scope: !1361)
!1370 = !DILocation(line: 500, column: 54, scope: !1361)
!1371 = !DILocation(line: 500, column: 64, scope: !1361)
!1372 = !DILocation(line: 501, column: 28, scope: !1361)
!1373 = !DILocation(line: 501, column: 15, scope: !1361)
!1374 = !DILocation(line: 501, column: 43, scope: !1361)
!1375 = !DILocation(line: 501, column: 51, scope: !1361)
!1376 = !DILocation(line: 500, column: 3, scope: !1361)
!1377 = !DILocation(line: 502, column: 9, scope: !1361)
!1378 = !DILocation(line: 502, column: 3, scope: !1361)
!1379 = !DILocation(line: 503, column: 1, scope: !1361)
!1380 = distinct !DISubprogram(name: "print_login", scope: !3, file: !3, line: 482, type: !134, scopeLine: 483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1381 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1380, file: !3, line: 482, type: !67)
!1382 = !DILocation(line: 482, column: 33, scope: !1380)
!1383 = !DILocalVariable(name: "comment", scope: !1380, file: !3, line: 484, type: !6)
!1384 = !DILocation(line: 484, column: 9, scope: !1380)
!1385 = !DILocation(line: 484, column: 43, scope: !1380)
!1386 = !DILocation(line: 484, column: 19, scope: !1380)
!1387 = !DILocalVariable(name: "pidstr", scope: !1380, file: !3, line: 485, type: !996)
!1388 = !DILocation(line: 485, column: 3, scope: !1380)
!1389 = !DILocation(line: 489, column: 19, scope: !1380)
!1390 = !DILocation(line: 489, column: 62, scope: !1380)
!1391 = !DILocation(line: 489, column: 72, scope: !1380)
!1392 = !DILocation(line: 490, column: 28, scope: !1380)
!1393 = !DILocation(line: 490, column: 15, scope: !1380)
!1394 = !DILocation(line: 490, column: 43, scope: !1380)
!1395 = !DILocation(line: 490, column: 51, scope: !1380)
!1396 = !DILocation(line: 489, column: 3, scope: !1380)
!1397 = !DILocation(line: 491, column: 9, scope: !1380)
!1398 = !DILocation(line: 491, column: 3, scope: !1380)
!1399 = !DILocation(line: 492, column: 1, scope: !1380)
!1400 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !140, file: !3, line: 459, type: !67)
!1401 = !DILocation(line: 459, column: 37, scope: !140)
!1402 = !DILocalVariable(name: "comment", scope: !140, file: !3, line: 462, type: !6)
!1403 = !DILocation(line: 462, column: 9, scope: !140)
!1404 = !DILocation(line: 462, column: 43, scope: !140)
!1405 = !DILocation(line: 462, column: 19, scope: !140)
!1406 = !DILocalVariable(name: "pidstr", scope: !140, file: !3, line: 463, type: !996)
!1407 = !DILocation(line: 463, column: 3, scope: !140)
!1408 = !DILocation(line: 465, column: 8, scope: !1409)
!1409 = distinct !DILexicalBlock(scope: !140, file: !3, line: 465, column: 7)
!1410 = !DILocation(line: 465, column: 7, scope: !140)
!1411 = !DILocation(line: 466, column: 32, scope: !1409)
!1412 = !DILocation(line: 466, column: 24, scope: !1409)
!1413 = !DILocation(line: 467, column: 24, scope: !1409)
!1414 = !DILocation(line: 467, column: 78, scope: !1409)
!1415 = !DILocation(line: 468, column: 34, scope: !1409)
!1416 = !DILocation(line: 468, column: 26, scope: !1409)
!1417 = !DILocation(line: 468, column: 24, scope: !1409)
!1418 = !DILocation(line: 469, column: 24, scope: !1409)
!1419 = !DILocation(line: 470, column: 24, scope: !1409)
!1420 = !DILocation(line: 466, column: 15, scope: !1409)
!1421 = !DILocation(line: 466, column: 13, scope: !1409)
!1422 = !DILocation(line: 466, column: 5, scope: !1409)
!1423 = !DILocation(line: 471, column: 12, scope: !140)
!1424 = !DILocation(line: 471, column: 34, scope: !140)
!1425 = !DILocation(line: 471, column: 46, scope: !140)
!1426 = !DILocation(line: 472, column: 12, scope: !140)
!1427 = !DILocation(line: 472, column: 24, scope: !140)
!1428 = !DILocation(line: 471, column: 3, scope: !140)
!1429 = !DILocation(line: 476, column: 54, scope: !140)
!1430 = !DILocation(line: 476, column: 64, scope: !140)
!1431 = !DILocation(line: 477, column: 28, scope: !140)
!1432 = !DILocation(line: 477, column: 15, scope: !140)
!1433 = !DILocation(line: 477, column: 43, scope: !140)
!1434 = !DILocation(line: 477, column: 51, scope: !140)
!1435 = !DILocation(line: 477, column: 60, scope: !140)
!1436 = !DILocation(line: 476, column: 3, scope: !140)
!1437 = !DILocation(line: 478, column: 9, scope: !140)
!1438 = !DILocation(line: 478, column: 3, scope: !140)
!1439 = !DILocation(line: 479, column: 1, scope: !140)
!1440 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1441, file: !3, line: 459, type: !1444)
!1441 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !1442, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !4)
!1442 = !DISubroutineType(types: !1443)
!1443 = !{null, !1444}
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64)
!1445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1446)
!1446 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1447)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1448)
!1448 = !{!1449, !1450, !1451, !1452, !1453, !1454, !1455, !1460, !1461, !1466, !1467}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1447, file: !72, line: 57, baseType: !14, size: 16)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1447, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1447, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1447, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1447, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1447, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1447, file: !72, line: 67, baseType: !1456, size: 32, offset: 2656)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !1457)
!1457 = !{!1458, !1459}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !1456, file: !72, line: 45, baseType: !14, size: 16)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !1456, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1447, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1447, file: !72, line: 79, baseType: !1462, size: 64, offset: 2720)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1447, file: !72, line: 75, size: 64, elements: !1463)
!1463 = !{!1464, !1465}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1462, file: !72, line: 77, baseType: !96, size: 32)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1462, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1447, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1447, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!1468 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1469, nameTableKind: None)
!1469 = !{!1470, !1472, !1474, !1476, !1478, !1480, !1482, !1484, !1486, !1488, !1490, !1492, !1494, !1496, !1498, !1500, !1502, !1504, !1514, !1517, !1522, !1524, !1527, !1529, !1534, !1537, !1539}
!1470 = !DIGlobalVariableExpression(var: !1471, expr: !DIExpression())
!1471 = distinct !DIGlobalVariable(name: "do_lookup", scope: !1468, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!1472 = !DIGlobalVariableExpression(var: !1473, expr: !DIExpression())
!1473 = distinct !DIGlobalVariable(name: "short_list", scope: !1468, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!1474 = !DIGlobalVariableExpression(var: !1475, expr: !DIExpression())
!1475 = distinct !DIGlobalVariable(name: "short_output", scope: !1468, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!1476 = !DIGlobalVariableExpression(var: !1477, expr: !DIExpression())
!1477 = distinct !DIGlobalVariable(name: "include_idle", scope: !1468, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!1478 = !DIGlobalVariableExpression(var: !1479, expr: !DIExpression())
!1479 = distinct !DIGlobalVariable(name: "include_heading", scope: !1468, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!1480 = !DIGlobalVariableExpression(var: !1481, expr: !DIExpression())
!1481 = distinct !DIGlobalVariable(name: "include_mesg", scope: !1468, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!1482 = !DIGlobalVariableExpression(var: !1483, expr: !DIExpression())
!1483 = distinct !DIGlobalVariable(name: "include_exit", scope: !1468, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!1484 = !DIGlobalVariableExpression(var: !1485, expr: !DIExpression())
!1485 = distinct !DIGlobalVariable(name: "need_boottime", scope: !1468, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!1486 = !DIGlobalVariableExpression(var: !1487, expr: !DIExpression())
!1487 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !1468, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!1488 = !DIGlobalVariableExpression(var: !1489, expr: !DIExpression())
!1489 = distinct !DIGlobalVariable(name: "need_login", scope: !1468, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!1490 = !DIGlobalVariableExpression(var: !1491, expr: !DIExpression())
!1491 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !1468, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!1492 = !DIGlobalVariableExpression(var: !1493, expr: !DIExpression())
!1493 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !1468, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!1494 = !DIGlobalVariableExpression(var: !1495, expr: !DIExpression())
!1495 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !1468, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!1496 = !DIGlobalVariableExpression(var: !1497, expr: !DIExpression())
!1497 = distinct !DIGlobalVariable(name: "need_users", scope: !1468, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!1498 = !DIGlobalVariableExpression(var: !1499, expr: !DIExpression())
!1499 = distinct !DIGlobalVariable(name: "my_line_only", scope: !1468, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!1500 = !DIGlobalVariableExpression(var: !1501, expr: !DIExpression())
!1501 = distinct !DIGlobalVariable(name: "time_format", scope: !1468, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!1502 = !DIGlobalVariableExpression(var: !1503, expr: !DIExpression())
!1503 = distinct !DIGlobalVariable(name: "time_format_width", scope: !1468, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!1504 = !DIGlobalVariableExpression(var: !1505, expr: !DIExpression())
!1505 = distinct !DIGlobalVariable(name: "longopts", scope: !1468, file: !3, line: 162, type: !1506, isLocal: true, isDefinition: true)
!1506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1507, size: 4608, elements: !151)
!1507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1508)
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !1509)
!1509 = !{!1510, !1511, !1512, !1513}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1508, file: !144, line: 52, baseType: !49, size: 64)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1508, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1508, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1508, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!1514 = !DIGlobalVariableExpression(var: !1515, expr: !DIExpression())
!1515 = distinct !DIGlobalVariable(name: "mesg", scope: !1516, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!1516 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !4)
!1517 = !DIGlobalVariableExpression(var: !1518, expr: !DIExpression())
!1518 = distinct !DIGlobalVariable(name: "hoststr", scope: !1519, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!1519 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !1520, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !4)
!1520 = !DISubroutineType(types: !1521)
!1521 = !{null, !1444, !9}
!1522 = !DIGlobalVariableExpression(var: !1523, expr: !DIExpression())
!1523 = distinct !DIGlobalVariable(name: "hostlen", scope: !1519, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!1524 = !DIGlobalVariableExpression(var: !1525, expr: !DIExpression())
!1525 = distinct !DIGlobalVariable(name: "now", scope: !1526, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!1526 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !4)
!1527 = !DIGlobalVariableExpression(var: !1528, expr: !DIExpression())
!1528 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !1526, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!1529 = !DIGlobalVariableExpression(var: !1530, expr: !DIExpression())
!1530 = distinct !DIGlobalVariable(name: "buf", scope: !1531, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!1531 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !1532, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !4)
!1532 = !DISubroutineType(types: !1533)
!1533 = !{!49, !1444}
!1534 = !DIGlobalVariableExpression(var: !1535, expr: !DIExpression())
!1535 = distinct !DIGlobalVariable(name: "runlevline", scope: !1536, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1536 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !1442, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1468, retainedNodes: !4)
!1537 = !DIGlobalVariableExpression(var: !1538, expr: !DIExpression())
!1538 = distinct !DIGlobalVariable(name: "comment", scope: !1536, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1539 = !DIGlobalVariableExpression(var: !1540, expr: !DIExpression())
!1540 = distinct !DIGlobalVariable(name: "exitstr", scope: !1441, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!1541 = !DILocalVariable(name: "comment", scope: !1441, file: !3, line: 462, type: !6)
!1542 = !DILocalVariable(name: "pidstr", scope: !1441, file: !3, line: 463, type: !996)
!1543 = distinct !DISubprogram(name: "make_id_equals_comment", scope: !3, file: !3, line: 448, type: !1544, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1544 = !DISubroutineType(types: !1545)
!1545 = !{!6, !67}
!1546 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1543, file: !3, line: 448, type: !67)
!1547 = !DILocation(line: 448, column: 44, scope: !1543)
!1548 = !DILocalVariable(name: "utmpsize", scope: !1543, file: !3, line: 450, type: !110)
!1549 = !DILocation(line: 450, column: 10, scope: !1543)
!1550 = !DILocalVariable(name: "comment", scope: !1543, file: !3, line: 451, type: !6)
!1551 = !DILocation(line: 451, column: 9, scope: !1543)
!1552 = !DILocation(line: 451, column: 36, scope: !1543)
!1553 = !DILocation(line: 451, column: 28, scope: !1543)
!1554 = !DILocation(line: 451, column: 48, scope: !1543)
!1555 = !DILocation(line: 451, column: 46, scope: !1543)
!1556 = !DILocation(line: 451, column: 57, scope: !1543)
!1557 = !DILocation(line: 451, column: 19, scope: !1543)
!1558 = !DILocation(line: 453, column: 11, scope: !1543)
!1559 = !DILocation(line: 453, column: 20, scope: !1543)
!1560 = !DILocation(line: 453, column: 3, scope: !1543)
!1561 = !DILocation(line: 454, column: 12, scope: !1543)
!1562 = !DILocation(line: 454, column: 21, scope: !1543)
!1563 = !DILocation(line: 454, column: 39, scope: !1543)
!1564 = !DILocation(line: 454, column: 3, scope: !1543)
!1565 = !DILocation(line: 455, column: 10, scope: !1543)
!1566 = !DILocation(line: 455, column: 3, scope: !1543)
!1567 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !125, file: !3, line: 218, type: !67)
!1568 = !DILocation(line: 218, column: 33, scope: !125)
!1569 = !DILocalVariable(name: "t", scope: !125, file: !3, line: 228, type: !9)
!1570 = !DILocation(line: 228, column: 10, scope: !125)
!1571 = !DILocation(line: 228, column: 14, scope: !125)
!1572 = !DILocalVariable(name: "tmp", scope: !125, file: !3, line: 229, type: !1573)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 64)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !1575, line: 7, size: 448, elements: !1576)
!1575 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h", directory: "")
!1576 = !{!1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !1574, file: !1575, line: 9, baseType: !53, size: 32)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !1574, file: !1575, line: 10, baseType: !53, size: 32, offset: 32)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !1574, file: !1575, line: 11, baseType: !53, size: 32, offset: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !1574, file: !1575, line: 12, baseType: !53, size: 32, offset: 96)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !1574, file: !1575, line: 13, baseType: !53, size: 32, offset: 128)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !1574, file: !1575, line: 14, baseType: !53, size: 32, offset: 160)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !1574, file: !1575, line: 15, baseType: !53, size: 32, offset: 192)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !1574, file: !1575, line: 16, baseType: !53, size: 32, offset: 224)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !1574, file: !1575, line: 17, baseType: !53, size: 32, offset: 256)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !1574, file: !1575, line: 20, baseType: !13, size: 64, offset: 320)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !1574, file: !1575, line: 21, baseType: !49, size: 64, offset: 384)
!1588 = !DILocation(line: 229, column: 14, scope: !125)
!1589 = !DILocation(line: 229, column: 20, scope: !125)
!1590 = !DILocation(line: 231, column: 7, scope: !1591)
!1591 = distinct !DILexicalBlock(scope: !125, file: !3, line: 231, column: 7)
!1592 = !DILocation(line: 231, column: 7, scope: !125)
!1593 = !DILocation(line: 233, column: 34, scope: !1594)
!1594 = distinct !DILexicalBlock(scope: !1591, file: !3, line: 232, column: 5)
!1595 = !DILocation(line: 233, column: 47, scope: !1594)
!1596 = !DILocation(line: 233, column: 7, scope: !1594)
!1597 = !DILocation(line: 234, column: 7, scope: !1594)
!1598 = !DILocation(line: 237, column: 23, scope: !1591)
!1599 = !DILocation(line: 237, column: 12, scope: !1591)
!1600 = !DILocation(line: 237, column: 5, scope: !1591)
!1601 = !DILocation(line: 238, column: 1, scope: !125)
!1602 = !DILocalVariable(name: "userlen", arg: 1, scope: !56, file: !3, line: 244, type: !53)
!1603 = !DILocation(line: 244, column: 17, scope: !56)
!1604 = !DILocalVariable(name: "user", arg: 2, scope: !56, file: !3, line: 244, type: !49)
!1605 = !DILocation(line: 244, column: 38, scope: !56)
!1606 = !DILocalVariable(name: "state", arg: 3, scope: !56, file: !3, line: 244, type: !50)
!1607 = !DILocation(line: 244, column: 55, scope: !56)
!1608 = !DILocalVariable(name: "linelen", arg: 4, scope: !56, file: !3, line: 245, type: !53)
!1609 = !DILocation(line: 245, column: 17, scope: !56)
!1610 = !DILocalVariable(name: "line", arg: 5, scope: !56, file: !3, line: 245, type: !49)
!1611 = !DILocation(line: 245, column: 38, scope: !56)
!1612 = !DILocalVariable(name: "time_str", arg: 6, scope: !56, file: !3, line: 246, type: !49)
!1613 = !DILocation(line: 246, column: 25, scope: !56)
!1614 = !DILocalVariable(name: "idle", arg: 7, scope: !56, file: !3, line: 246, type: !49)
!1615 = !DILocation(line: 246, column: 47, scope: !56)
!1616 = !DILocalVariable(name: "pid", arg: 8, scope: !56, file: !3, line: 246, type: !49)
!1617 = !DILocation(line: 246, column: 65, scope: !56)
!1618 = !DILocalVariable(name: "comment", arg: 9, scope: !56, file: !3, line: 247, type: !49)
!1619 = !DILocation(line: 247, column: 25, scope: !56)
!1620 = !DILocalVariable(name: "exitstr", arg: 10, scope: !56, file: !3, line: 247, type: !49)
!1621 = !DILocation(line: 247, column: 46, scope: !56)
!1622 = !DILocalVariable(name: "buf", scope: !56, file: !3, line: 250, type: !6)
!1623 = !DILocation(line: 250, column: 9, scope: !56)
!1624 = !DILocalVariable(name: "x_idle", scope: !56, file: !3, line: 251, type: !1625)
!1625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !260)
!1626 = !DILocation(line: 251, column: 8, scope: !56)
!1627 = !DILocalVariable(name: "x_pid", scope: !56, file: !3, line: 252, type: !1628)
!1628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 104, elements: !1629)
!1629 = !{!1630}
!1630 = !DISubrange(count: 13)
!1631 = !DILocation(line: 252, column: 8, scope: !56)
!1632 = !DILocalVariable(name: "x_exitstr", scope: !56, file: !3, line: 253, type: !6)
!1633 = !DILocation(line: 253, column: 9, scope: !56)
!1634 = !DILocalVariable(name: "err", scope: !56, file: !3, line: 254, type: !53)
!1635 = !DILocation(line: 254, column: 7, scope: !56)
!1636 = !DILocation(line: 256, column: 13, scope: !56)
!1637 = !DILocation(line: 256, column: 11, scope: !56)
!1638 = !DILocation(line: 258, column: 7, scope: !1639)
!1639 = distinct !DILexicalBlock(scope: !56, file: !3, line: 258, column: 7)
!1640 = !DILocation(line: 258, column: 20, scope: !1639)
!1641 = !DILocation(line: 258, column: 24, scope: !1639)
!1642 = !DILocation(line: 258, column: 37, scope: !1639)
!1643 = !DILocation(line: 258, column: 48, scope: !1639)
!1644 = !DILocation(line: 258, column: 40, scope: !1639)
!1645 = !DILocation(line: 258, column: 54, scope: !1639)
!1646 = !DILocation(line: 258, column: 7, scope: !56)
!1647 = !DILocation(line: 259, column: 14, scope: !1639)
!1648 = !DILocation(line: 259, column: 31, scope: !1639)
!1649 = !DILocation(line: 259, column: 5, scope: !1639)
!1650 = !DILocation(line: 261, column: 5, scope: !1639)
!1651 = !DILocation(line: 261, column: 13, scope: !1639)
!1652 = !DILocation(line: 263, column: 8, scope: !1653)
!1653 = distinct !DILexicalBlock(scope: !56, file: !3, line: 263, column: 7)
!1654 = !DILocation(line: 263, column: 21, scope: !1653)
!1655 = !DILocation(line: 263, column: 32, scope: !1653)
!1656 = !DILocation(line: 263, column: 24, scope: !1653)
!1657 = !DILocation(line: 263, column: 37, scope: !1653)
!1658 = !DILocation(line: 263, column: 7, scope: !56)
!1659 = !DILocation(line: 264, column: 14, scope: !1653)
!1660 = !DILocation(line: 264, column: 30, scope: !1653)
!1661 = !DILocation(line: 264, column: 5, scope: !1653)
!1662 = !DILocation(line: 266, column: 5, scope: !1653)
!1663 = !DILocation(line: 266, column: 12, scope: !1653)
!1664 = !DILocation(line: 268, column: 24, scope: !56)
!1665 = !DILocation(line: 268, column: 43, scope: !56)
!1666 = !DILocation(line: 268, column: 41, scope: !56)
!1667 = !DILocation(line: 268, column: 70, scope: !56)
!1668 = !DILocation(line: 268, column: 15, scope: !56)
!1669 = !DILocation(line: 268, column: 13, scope: !56)
!1670 = !DILocation(line: 269, column: 7, scope: !1671)
!1671 = distinct !DILexicalBlock(scope: !56, file: !3, line: 269, column: 7)
!1672 = !DILocation(line: 269, column: 7, scope: !56)
!1673 = !DILocation(line: 270, column: 14, scope: !1671)
!1674 = !DILocation(line: 270, column: 35, scope: !1671)
!1675 = !DILocation(line: 270, column: 5, scope: !1671)
!1676 = !DILocation(line: 272, column: 6, scope: !1671)
!1677 = !DILocation(line: 272, column: 16, scope: !1671)
!1678 = !DILocation(line: 284, column: 19, scope: !56)
!1679 = !DILocation(line: 284, column: 28, scope: !56)
!1680 = !DILocation(line: 284, column: 35, scope: !56)
!1681 = !DILocation(line: 285, column: 19, scope: !56)
!1682 = !DILocation(line: 286, column: 19, scope: !56)
!1683 = !DILocation(line: 286, column: 28, scope: !56)
!1684 = !DILocation(line: 287, column: 19, scope: !56)
!1685 = !DILocation(line: 288, column: 19, scope: !56)
!1686 = !DILocation(line: 289, column: 19, scope: !56)
!1687 = !DILocation(line: 290, column: 19, scope: !56)
!1688 = !DILocation(line: 295, column: 19, scope: !56)
!1689 = !DILocation(line: 296, column: 19, scope: !56)
!1690 = !DILocation(line: 274, column: 9, scope: !56)
!1691 = !DILocation(line: 274, column: 7, scope: !56)
!1692 = !DILocation(line: 298, column: 7, scope: !1693)
!1693 = distinct !DILexicalBlock(scope: !56, file: !3, line: 298, column: 7)
!1694 = !DILocation(line: 298, column: 11, scope: !1693)
!1695 = !DILocation(line: 299, column: 5, scope: !1693)
!1696 = !DILocalVariable(name: "p", scope: !1697, file: !3, line: 303, type: !6)
!1697 = distinct !DILexicalBlock(scope: !56, file: !3, line: 301, column: 3)
!1698 = !DILocation(line: 303, column: 11, scope: !1697)
!1699 = !DILocation(line: 303, column: 15, scope: !1697)
!1700 = !DILocation(line: 303, column: 29, scope: !1697)
!1701 = !DILocation(line: 303, column: 21, scope: !1697)
!1702 = !DILocation(line: 303, column: 19, scope: !1697)
!1703 = !DILocation(line: 304, column: 5, scope: !1697)
!1704 = !DILocation(line: 304, column: 13, scope: !1697)
!1705 = !DILocation(line: 304, column: 12, scope: !1697)
!1706 = !DILocation(line: 304, column: 17, scope: !1697)
!1707 = distinct !{!1707, !1703, !1708}
!1708 = !DILocation(line: 305, column: 18, scope: !1697)
!1709 = !DILocation(line: 306, column: 7, scope: !1697)
!1710 = !DILocation(line: 306, column: 9, scope: !1697)
!1711 = !DILocation(line: 306, column: 14, scope: !1697)
!1712 = !DILocation(line: 309, column: 9, scope: !56)
!1713 = !DILocation(line: 309, column: 3, scope: !56)
!1714 = !DILocation(line: 310, column: 9, scope: !56)
!1715 = !DILocation(line: 310, column: 3, scope: !56)
!1716 = !DILocation(line: 311, column: 9, scope: !56)
!1717 = !DILocation(line: 311, column: 3, scope: !56)
!1718 = !DILocation(line: 312, column: 1, scope: !56)
!1719 = distinct !DISubprogram(name: "timetostr", scope: !466, file: !466, line: 690, type: !1720, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1720 = !DISubroutineType(types: !1721)
!1721 = !{!6, !9, !6}
!1722 = !DILocalVariable(name: "t", arg: 1, scope: !1719, file: !466, line: 690, type: !9)
!1723 = !DILocation(line: 690, column: 19, scope: !1719)
!1724 = !DILocalVariable(name: "buf", arg: 2, scope: !1719, file: !466, line: 690, type: !6)
!1725 = !DILocation(line: 690, column: 28, scope: !1719)
!1726 = !DILocation(line: 693, column: 24, scope: !1719)
!1727 = !DILocation(line: 693, column: 27, scope: !1719)
!1728 = !DILocation(line: 693, column: 13, scope: !1719)
!1729 = !DILocation(line: 692, column: 3, scope: !1719)
!1730 = distinct !DISubprogram(name: "stzncpy", scope: !466, file: !466, line: 741, type: !1731, scopeLine: 742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1731 = !DISubroutineType(types: !1732)
!1732 = !{!6, !1733, !1734, !110}
!1733 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !6)
!1734 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !49)
!1735 = !DILocalVariable(name: "dest", arg: 1, scope: !1730, file: !466, line: 741, type: !1733)
!1736 = !DILocation(line: 741, column: 25, scope: !1730)
!1737 = !DILocalVariable(name: "src", arg: 2, scope: !1730, file: !466, line: 741, type: !1734)
!1738 = !DILocation(line: 741, column: 52, scope: !1730)
!1739 = !DILocalVariable(name: "len", arg: 3, scope: !1730, file: !466, line: 741, type: !110)
!1740 = !DILocation(line: 741, column: 64, scope: !1730)
!1741 = !DILocalVariable(name: "src_end", scope: !1730, file: !466, line: 743, type: !49)
!1742 = !DILocation(line: 743, column: 15, scope: !1730)
!1743 = !DILocation(line: 743, column: 25, scope: !1730)
!1744 = !DILocation(line: 743, column: 31, scope: !1730)
!1745 = !DILocation(line: 743, column: 29, scope: !1730)
!1746 = !DILocation(line: 744, column: 3, scope: !1730)
!1747 = !DILocation(line: 744, column: 10, scope: !1730)
!1748 = !DILocation(line: 744, column: 16, scope: !1730)
!1749 = !DILocation(line: 744, column: 14, scope: !1730)
!1750 = !DILocation(line: 744, column: 24, scope: !1730)
!1751 = !DILocation(line: 744, column: 28, scope: !1730)
!1752 = !DILocation(line: 744, column: 27, scope: !1730)
!1753 = !DILocation(line: 0, scope: !1730)
!1754 = !DILocation(line: 745, column: 19, scope: !1730)
!1755 = !DILocation(line: 745, column: 15, scope: !1730)
!1756 = !DILocation(line: 745, column: 10, scope: !1730)
!1757 = !DILocation(line: 745, column: 13, scope: !1730)
!1758 = distinct !{!1758, !1746, !1754}
!1759 = !DILocation(line: 746, column: 4, scope: !1730)
!1760 = !DILocation(line: 746, column: 9, scope: !1730)
!1761 = !DILocation(line: 747, column: 10, scope: !1730)
!1762 = !DILocation(line: 747, column: 3, scope: !1730)
!1763 = distinct !DISubprogram(name: "is_tty_writable", scope: !3, file: !3, line: 317, type: !1764, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{!18, !1766}
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 64)
!1767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !945)
!1768 = !DILocalVariable(name: "pstat", arg: 1, scope: !1763, file: !3, line: 317, type: !1766)
!1769 = !DILocation(line: 317, column: 37, scope: !1763)
!1770 = !DILocation(line: 327, column: 10, scope: !1763)
!1771 = !DILocation(line: 327, column: 17, scope: !1763)
!1772 = !DILocation(line: 327, column: 25, scope: !1763)
!1773 = !DILocation(line: 327, column: 3, scope: !1763)
!1774 = !DILocalVariable(name: "when", arg: 1, scope: !115, file: !3, line: 188, type: !9)
!1775 = !DILocation(line: 188, column: 21, scope: !115)
!1776 = !DILocalVariable(name: "boottime", arg: 2, scope: !115, file: !3, line: 188, type: !9)
!1777 = !DILocation(line: 188, column: 34, scope: !115)
!1778 = !DILocation(line: 192, column: 7, scope: !1779)
!1779 = distinct !DILexicalBlock(scope: !115, file: !3, line: 192, column: 7)
!1780 = !DILocation(line: 192, column: 11, scope: !1779)
!1781 = !DILocation(line: 192, column: 7, scope: !115)
!1782 = !DILocation(line: 193, column: 5, scope: !1779)
!1783 = !DILocation(line: 195, column: 7, scope: !1784)
!1784 = distinct !DILexicalBlock(scope: !115, file: !3, line: 195, column: 7)
!1785 = !DILocation(line: 195, column: 18, scope: !1784)
!1786 = !DILocation(line: 195, column: 16, scope: !1784)
!1787 = !DILocation(line: 195, column: 23, scope: !1784)
!1788 = !DILocation(line: 195, column: 26, scope: !1784)
!1789 = !DILocation(line: 195, column: 30, scope: !1784)
!1790 = !DILocation(line: 195, column: 47, scope: !1784)
!1791 = !DILocation(line: 195, column: 45, scope: !1784)
!1792 = !DILocation(line: 195, column: 52, scope: !1784)
!1793 = !DILocation(line: 195, column: 55, scope: !1784)
!1794 = !DILocation(line: 195, column: 63, scope: !1784)
!1795 = !DILocation(line: 195, column: 60, scope: !1784)
!1796 = !DILocation(line: 195, column: 7, scope: !115)
!1797 = !DILocalVariable(name: "seconds_idle", scope: !1798, file: !3, line: 197, type: !53)
!1798 = distinct !DILexicalBlock(scope: !1784, file: !3, line: 196, column: 5)
!1799 = !DILocation(line: 197, column: 11, scope: !1798)
!1800 = !DILocation(line: 197, column: 26, scope: !1798)
!1801 = !DILocation(line: 197, column: 32, scope: !1798)
!1802 = !DILocation(line: 197, column: 30, scope: !1798)
!1803 = !DILocation(line: 198, column: 11, scope: !1804)
!1804 = distinct !DILexicalBlock(scope: !1798, file: !3, line: 198, column: 11)
!1805 = !DILocation(line: 198, column: 24, scope: !1804)
!1806 = !DILocation(line: 198, column: 11, scope: !1798)
!1807 = !DILocation(line: 199, column: 9, scope: !1804)
!1808 = !DILocation(line: 205, column: 11, scope: !1809)
!1809 = distinct !DILexicalBlock(scope: !1810, file: !3, line: 205, column: 11)
!1810 = distinct !DILexicalBlock(scope: !1811, file: !3, line: 205, column: 11)
!1811 = distinct !DILexicalBlock(scope: !1804, file: !3, line: 201, column: 9)
!1812 = !DILocation(line: 205, column: 11, scope: !1810)
!1813 = !DILocation(line: 207, column: 20, scope: !1811)
!1814 = !DILocation(line: 207, column: 33, scope: !1811)
!1815 = !DILocation(line: 208, column: 21, scope: !1811)
!1816 = !DILocation(line: 208, column: 34, scope: !1811)
!1817 = !DILocation(line: 208, column: 47, scope: !1811)
!1818 = !DILocation(line: 206, column: 11, scope: !1811)
!1819 = !DILocation(line: 209, column: 11, scope: !1811)
!1820 = !DILocation(line: 213, column: 10, scope: !115)
!1821 = !DILocation(line: 213, column: 3, scope: !115)
!1822 = !DILocation(line: 214, column: 1, scope: !115)
!1823 = distinct !DISubprogram(name: "c_isprint", scope: !1824, file: !1824, line: 272, type: !1825, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !286, retainedNodes: !4)
!1824 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!1825 = !DISubroutineType(types: !1826)
!1826 = !{!18, !53}
!1827 = !DILocalVariable(name: "c", arg: 1, scope: !1823, file: !1824, line: 272, type: !53)
!1828 = !DILocation(line: 272, column: 16, scope: !1823)
!1829 = !DILocation(line: 274, column: 11, scope: !1823)
!1830 = !DILocation(line: 274, column: 3, scope: !1823)
!1831 = !DILocation(line: 281, column: 7, scope: !1832)
!1832 = distinct !DILexicalBlock(scope: !1823, file: !1824, line: 275, column: 5)
!1833 = !DILocation(line: 283, column: 7, scope: !1832)
!1834 = !DILocation(line: 285, column: 1, scope: !1823)
!1835 = distinct !DISubprogram(name: "c_tolower", scope: !1824, file: !1824, line: 337, type: !1836, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !286, retainedNodes: !4)
!1836 = !DISubroutineType(types: !1837)
!1837 = !{!53, !53}
!1838 = !DILocalVariable(name: "c", arg: 1, scope: !1835, file: !1824, line: 337, type: !53)
!1839 = !DILocation(line: 337, column: 16, scope: !1835)
!1840 = !DILocation(line: 339, column: 11, scope: !1835)
!1841 = !DILocation(line: 339, column: 3, scope: !1835)
!1842 = !DILocation(line: 342, column: 14, scope: !1843)
!1843 = distinct !DILexicalBlock(scope: !1835, file: !1824, line: 340, column: 5)
!1844 = !DILocation(line: 342, column: 16, scope: !1843)
!1845 = !DILocation(line: 342, column: 22, scope: !1843)
!1846 = !DILocation(line: 342, column: 7, scope: !1843)
!1847 = !DILocation(line: 344, column: 14, scope: !1843)
!1848 = !DILocation(line: 344, column: 7, scope: !1843)
!1849 = !DILocation(line: 346, column: 1, scope: !1835)
!1850 = distinct !DISubprogram(name: "canon_host", scope: !166, file: !166, line: 33, type: !1851, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !160, retainedNodes: !4)
!1851 = !DISubroutineType(types: !1852)
!1852 = !{!6, !49}
!1853 = !DILocalVariable(name: "host", arg: 1, scope: !1850, file: !166, line: 33, type: !49)
!1854 = !DILocation(line: 33, column: 25, scope: !1850)
!1855 = !DILocation(line: 35, column: 24, scope: !1850)
!1856 = !DILocation(line: 35, column: 10, scope: !1850)
!1857 = !DILocation(line: 35, column: 3, scope: !1850)
!1858 = !DILocalVariable(name: "host", arg: 1, scope: !1859, file: !166, line: 33, type: !49)
!1859 = distinct !DISubprogram(name: "canon_host", scope: !166, file: !166, line: 33, type: !1851, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1860, retainedNodes: !4)
!1860 = distinct !DICompileUnit(language: DW_LANG_C99, file: !161, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !1861, nameTableKind: None)
!1861 = !{!1862, !1881}
!1862 = !DIGlobalVariableExpression(var: !1863, expr: !DIExpression())
!1863 = distinct !DIGlobalVariable(name: "hints", scope: !1864, file: !166, line: 64, type: !1865, isLocal: true, isDefinition: true)
!1864 = distinct !DISubprogram(name: "canon_host_r", scope: !166, file: !166, line: 61, type: !167, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1860, retainedNodes: !4)
!1865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "addrinfo", file: !170, line: 565, size: 384, elements: !1866)
!1866 = !{!1867, !1868, !1869, !1870, !1871, !1872, !1878, !1879}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "ai_flags", scope: !1865, file: !170, line: 567, baseType: !53, size: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "ai_family", scope: !1865, file: !170, line: 568, baseType: !53, size: 32, offset: 32)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "ai_socktype", scope: !1865, file: !170, line: 569, baseType: !53, size: 32, offset: 64)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "ai_protocol", scope: !1865, file: !170, line: 570, baseType: !53, size: 32, offset: 96)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addrlen", scope: !1865, file: !170, line: 571, baseType: !177, size: 32, offset: 128)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addr", scope: !1865, file: !170, line: 572, baseType: !1873, size: 64, offset: 192)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !178, line: 178, size: 128, elements: !1875)
!1875 = !{!1876, !1877}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !1874, file: !178, line: 180, baseType: !186, size: 16)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !1874, file: !178, line: 181, baseType: !190, size: 112, offset: 16)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "ai_canonname", scope: !1865, file: !170, line: 573, baseType: !6, size: 64, offset: 256)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "ai_next", scope: !1865, file: !170, line: 574, baseType: !1880, size: 64, offset: 320)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64)
!1881 = !DIGlobalVariableExpression(var: !1882, expr: !DIExpression())
!1882 = distinct !DIGlobalVariable(name: "last_cherror", scope: !1860, file: !166, line: 28, type: !53, isLocal: true, isDefinition: true)
!1883 = !DILocalVariable(name: "host", arg: 1, scope: !165, file: !166, line: 61, type: !49)
!1884 = !DILocation(line: 61, column: 27, scope: !165)
!1885 = !DILocalVariable(name: "cherror", arg: 2, scope: !165, file: !166, line: 61, type: !149)
!1886 = !DILocation(line: 61, column: 38, scope: !165)
!1887 = !DILocalVariable(name: "retval", scope: !165, file: !166, line: 63, type: !6)
!1888 = !DILocation(line: 63, column: 9, scope: !165)
!1889 = !DILocalVariable(name: "res", scope: !165, file: !166, line: 65, type: !195)
!1890 = !DILocation(line: 65, column: 20, scope: !165)
!1891 = !DILocalVariable(name: "status", scope: !165, file: !166, line: 66, type: !53)
!1892 = !DILocation(line: 66, column: 7, scope: !165)
!1893 = !DILocation(line: 68, column: 18, scope: !165)
!1894 = !DILocation(line: 69, column: 25, scope: !165)
!1895 = !DILocation(line: 69, column: 12, scope: !165)
!1896 = !DILocation(line: 69, column: 10, scope: !165)
!1897 = !DILocation(line: 70, column: 8, scope: !1898)
!1898 = distinct !DILexicalBlock(scope: !165, file: !166, line: 70, column: 7)
!1899 = !DILocation(line: 70, column: 7, scope: !165)
!1900 = !DILocation(line: 75, column: 24, scope: !1901)
!1901 = distinct !DILexicalBlock(scope: !1898, file: !166, line: 71, column: 5)
!1902 = !DILocation(line: 75, column: 29, scope: !1901)
!1903 = !DILocation(line: 75, column: 44, scope: !1901)
!1904 = !DILocation(line: 75, column: 49, scope: !1901)
!1905 = !DILocation(line: 75, column: 64, scope: !1901)
!1906 = !DILocation(line: 75, column: 16, scope: !1901)
!1907 = !DILocation(line: 75, column: 14, scope: !1901)
!1908 = !DILocation(line: 76, column: 12, scope: !1909)
!1909 = distinct !DILexicalBlock(scope: !1901, file: !166, line: 76, column: 11)
!1910 = !DILocation(line: 76, column: 19, scope: !1909)
!1911 = !DILocation(line: 76, column: 22, scope: !1909)
!1912 = !DILocation(line: 76, column: 11, scope: !1901)
!1913 = !DILocation(line: 77, column: 10, scope: !1909)
!1914 = !DILocation(line: 77, column: 18, scope: !1909)
!1915 = !DILocation(line: 77, column: 9, scope: !1909)
!1916 = !DILocation(line: 78, column: 21, scope: !1901)
!1917 = !DILocation(line: 78, column: 7, scope: !1901)
!1918 = !DILocation(line: 79, column: 5, scope: !1901)
!1919 = !DILocation(line: 80, column: 12, scope: !1920)
!1920 = distinct !DILexicalBlock(scope: !1898, file: !166, line: 80, column: 12)
!1921 = !DILocation(line: 80, column: 12, scope: !1898)
!1922 = !DILocation(line: 81, column: 16, scope: !1920)
!1923 = !DILocation(line: 81, column: 6, scope: !1920)
!1924 = !DILocation(line: 81, column: 14, scope: !1920)
!1925 = !DILocation(line: 81, column: 5, scope: !1920)
!1926 = !DILocation(line: 83, column: 10, scope: !165)
!1927 = !DILocation(line: 83, column: 3, scope: !165)
!1928 = distinct !DISubprogram(name: "close_stdout", scope: !203, file: !203, line: 117, type: !929, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !198, retainedNodes: !4)
!1929 = !DILocation(line: 119, column: 21, scope: !1930)
!1930 = distinct !DILexicalBlock(scope: !1928, file: !203, line: 119, column: 7)
!1931 = !DILocation(line: 119, column: 7, scope: !1930)
!1932 = !DILocation(line: 119, column: 29, scope: !1930)
!1933 = !DILocation(line: 120, column: 7, scope: !1930)
!1934 = !DILocation(line: 120, column: 12, scope: !1930)
!1935 = !DILocation(line: 120, column: 25, scope: !1930)
!1936 = !DILocation(line: 120, column: 28, scope: !1930)
!1937 = !DILocation(line: 120, column: 34, scope: !1930)
!1938 = !DILocation(line: 119, column: 7, scope: !1928)
!1939 = !DILocalVariable(name: "write_error", scope: !1940, file: !203, line: 122, type: !49)
!1940 = distinct !DILexicalBlock(scope: !1930, file: !203, line: 121, column: 5)
!1941 = !DILocation(line: 122, column: 19, scope: !1940)
!1942 = !DILocation(line: 122, column: 33, scope: !1940)
!1943 = !DILocation(line: 123, column: 11, scope: !1944)
!1944 = distinct !DILexicalBlock(scope: !1940, file: !203, line: 123, column: 11)
!1945 = !DILocation(line: 123, column: 11, scope: !1940)
!1946 = !DILocation(line: 124, column: 19, scope: !1944)
!1947 = !DILocation(line: 124, column: 52, scope: !1944)
!1948 = !DILocation(line: 124, column: 36, scope: !1944)
!1949 = !DILocation(line: 125, column: 16, scope: !1944)
!1950 = !DILocation(line: 124, column: 9, scope: !1944)
!1951 = !DILocation(line: 127, column: 19, scope: !1944)
!1952 = !DILocation(line: 127, column: 32, scope: !1944)
!1953 = !DILocation(line: 127, column: 9, scope: !1944)
!1954 = !DILocation(line: 129, column: 14, scope: !1940)
!1955 = !DILocation(line: 129, column: 7, scope: !1940)
!1956 = !DILocation(line: 134, column: 42, scope: !1957)
!1957 = distinct !DILexicalBlock(scope: !1928, file: !203, line: 134, column: 7)
!1958 = !DILocation(line: 134, column: 28, scope: !1957)
!1959 = !DILocation(line: 134, column: 50, scope: !1957)
!1960 = !DILocation(line: 134, column: 7, scope: !1928)
!1961 = !DILocation(line: 135, column: 12, scope: !1957)
!1962 = !DILocation(line: 135, column: 5, scope: !1957)
!1963 = !DILocation(line: 136, column: 1, scope: !1928)
!1964 = distinct !DISubprogram(name: "hard_locale", scope: !1965, file: !1965, line: 27, type: !1825, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !288, retainedNodes: !4)
!1965 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!1966 = !DILocalVariable(name: "category", arg: 1, scope: !1964, file: !1965, line: 27, type: !53)
!1967 = !DILocation(line: 27, column: 18, scope: !1964)
!1968 = !DILocalVariable(name: "locale", scope: !1964, file: !1965, line: 29, type: !1041)
!1969 = !DILocation(line: 29, column: 8, scope: !1964)
!1970 = !DILocation(line: 31, column: 25, scope: !1971)
!1971 = distinct !DILexicalBlock(scope: !1964, file: !1965, line: 31, column: 7)
!1972 = !DILocation(line: 31, column: 35, scope: !1971)
!1973 = !DILocation(line: 31, column: 7, scope: !1971)
!1974 = !DILocation(line: 31, column: 7, scope: !1964)
!1975 = !DILocation(line: 32, column: 5, scope: !1971)
!1976 = !DILocation(line: 34, column: 20, scope: !1964)
!1977 = !DILocation(line: 34, column: 12, scope: !1964)
!1978 = !DILocation(line: 34, column: 33, scope: !1964)
!1979 = !DILocation(line: 34, column: 49, scope: !1964)
!1980 = !DILocation(line: 34, column: 41, scope: !1964)
!1981 = !DILocation(line: 34, column: 66, scope: !1964)
!1982 = !DILocation(line: 34, column: 38, scope: !1964)
!1983 = !DILocation(line: 34, column: 10, scope: !1964)
!1984 = !DILocation(line: 34, column: 3, scope: !1964)
!1985 = !DILocation(line: 35, column: 1, scope: !1964)
!1986 = distinct !DISubprogram(name: "imaxtostr", scope: !1987, file: !1987, line: 36, type: !1988, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !290, retainedNodes: !4)
!1987 = !DIFile(filename: "./lib/anytostr.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!1988 = !DISubroutineType(types: !1989)
!1989 = !{!6, !293, !6}
!1990 = !DILocalVariable(name: "i", arg: 1, scope: !1986, file: !1987, line: 36, type: !293)
!1991 = !DILocation(line: 36, column: 19, scope: !1986)
!1992 = !DILocalVariable(name: "buf", arg: 2, scope: !1986, file: !1987, line: 36, type: !6)
!1993 = !DILocation(line: 36, column: 28, scope: !1986)
!1994 = !DILocalVariable(name: "p", scope: !1986, file: !1987, line: 38, type: !6)
!1995 = !DILocation(line: 38, column: 9, scope: !1986)
!1996 = !DILocation(line: 38, column: 13, scope: !1986)
!1997 = !DILocation(line: 38, column: 17, scope: !1986)
!1998 = !DILocation(line: 39, column: 4, scope: !1986)
!1999 = !DILocation(line: 39, column: 6, scope: !1986)
!2000 = !DILocation(line: 41, column: 7, scope: !2001)
!2001 = distinct !DILexicalBlock(scope: !1986, file: !1987, line: 41, column: 7)
!2002 = !DILocation(line: 41, column: 9, scope: !2001)
!2003 = !DILocation(line: 41, column: 7, scope: !1986)
!2004 = !DILocation(line: 43, column: 7, scope: !2005)
!2005 = distinct !DILexicalBlock(scope: !2001, file: !1987, line: 42, column: 5)
!2006 = !DILocation(line: 44, column: 22, scope: !2005)
!2007 = !DILocation(line: 44, column: 24, scope: !2005)
!2008 = !DILocation(line: 44, column: 20, scope: !2005)
!2009 = !DILocation(line: 44, column: 16, scope: !2005)
!2010 = !DILocation(line: 44, column: 10, scope: !2005)
!2011 = !DILocation(line: 44, column: 14, scope: !2005)
!2012 = !DILocation(line: 44, column: 9, scope: !2005)
!2013 = !DILocation(line: 45, column: 17, scope: !2005)
!2014 = !DILocation(line: 45, column: 24, scope: !2005)
!2015 = distinct !{!2015, !2004, !2016}
!2016 = !DILocation(line: 45, column: 28, scope: !2005)
!2017 = !DILocation(line: 47, column: 8, scope: !2005)
!2018 = !DILocation(line: 47, column: 12, scope: !2005)
!2019 = !DILocation(line: 48, column: 5, scope: !2005)
!2020 = !DILocation(line: 51, column: 7, scope: !2021)
!2021 = distinct !DILexicalBlock(scope: !2001, file: !1987, line: 50, column: 5)
!2022 = !DILocation(line: 52, column: 22, scope: !2021)
!2023 = !DILocation(line: 52, column: 24, scope: !2021)
!2024 = !DILocation(line: 52, column: 20, scope: !2021)
!2025 = !DILocation(line: 52, column: 16, scope: !2021)
!2026 = !DILocation(line: 52, column: 10, scope: !2021)
!2027 = !DILocation(line: 52, column: 14, scope: !2021)
!2028 = !DILocation(line: 52, column: 9, scope: !2021)
!2029 = !DILocation(line: 53, column: 17, scope: !2021)
!2030 = !DILocation(line: 53, column: 24, scope: !2021)
!2031 = distinct !{!2031, !2020, !2032}
!2032 = !DILocation(line: 53, column: 28, scope: !2021)
!2033 = !DILocation(line: 56, column: 10, scope: !1986)
!2034 = !DILocation(line: 56, column: 3, scope: !1986)
!2035 = distinct !DISubprogram(name: "set_program_name", scope: !217, file: !217, line: 39, type: !467, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!2036 = !DILocalVariable(name: "argv0", arg: 1, scope: !2035, file: !217, line: 39, type: !49)
!2037 = !DILocation(line: 39, column: 31, scope: !2035)
!2038 = !DILocalVariable(name: "slash", scope: !2035, file: !217, line: 46, type: !49)
!2039 = !DILocation(line: 46, column: 15, scope: !2035)
!2040 = !DILocalVariable(name: "base", scope: !2035, file: !217, line: 47, type: !49)
!2041 = !DILocation(line: 47, column: 15, scope: !2035)
!2042 = !DILocation(line: 51, column: 7, scope: !2043)
!2043 = distinct !DILexicalBlock(scope: !2035, file: !217, line: 51, column: 7)
!2044 = !DILocation(line: 51, column: 13, scope: !2043)
!2045 = !DILocation(line: 51, column: 7, scope: !2035)
!2046 = !DILocation(line: 55, column: 14, scope: !2047)
!2047 = distinct !DILexicalBlock(scope: !2043, file: !217, line: 52, column: 5)
!2048 = !DILocation(line: 54, column: 7, scope: !2047)
!2049 = !DILocation(line: 56, column: 7, scope: !2047)
!2050 = !DILocation(line: 59, column: 20, scope: !2035)
!2051 = !DILocation(line: 59, column: 11, scope: !2035)
!2052 = !DILocation(line: 59, column: 9, scope: !2035)
!2053 = !DILocation(line: 60, column: 11, scope: !2035)
!2054 = !DILocation(line: 60, column: 17, scope: !2035)
!2055 = !DILocation(line: 60, column: 27, scope: !2035)
!2056 = !DILocation(line: 60, column: 33, scope: !2035)
!2057 = !DILocation(line: 60, column: 39, scope: !2035)
!2058 = !DILocation(line: 60, column: 8, scope: !2035)
!2059 = !DILocation(line: 61, column: 7, scope: !2060)
!2060 = distinct !DILexicalBlock(scope: !2035, file: !217, line: 61, column: 7)
!2061 = !DILocation(line: 61, column: 14, scope: !2060)
!2062 = !DILocation(line: 61, column: 12, scope: !2060)
!2063 = !DILocation(line: 61, column: 20, scope: !2060)
!2064 = !DILocation(line: 61, column: 25, scope: !2060)
!2065 = !DILocation(line: 61, column: 37, scope: !2060)
!2066 = !DILocation(line: 61, column: 42, scope: !2060)
!2067 = !DILocation(line: 61, column: 28, scope: !2060)
!2068 = !DILocation(line: 61, column: 61, scope: !2060)
!2069 = !DILocation(line: 61, column: 7, scope: !2035)
!2070 = !DILocation(line: 63, column: 15, scope: !2071)
!2071 = distinct !DILexicalBlock(scope: !2060, file: !217, line: 62, column: 5)
!2072 = !DILocation(line: 63, column: 13, scope: !2071)
!2073 = !DILocation(line: 64, column: 20, scope: !2074)
!2074 = distinct !DILexicalBlock(scope: !2071, file: !217, line: 64, column: 11)
!2075 = !DILocation(line: 64, column: 11, scope: !2074)
!2076 = !DILocation(line: 64, column: 36, scope: !2074)
!2077 = !DILocation(line: 64, column: 11, scope: !2071)
!2078 = !DILocation(line: 66, column: 19, scope: !2079)
!2079 = distinct !DILexicalBlock(scope: !2074, file: !217, line: 65, column: 9)
!2080 = !DILocation(line: 66, column: 24, scope: !2079)
!2081 = !DILocation(line: 66, column: 17, scope: !2079)
!2082 = !DILocation(line: 70, column: 52, scope: !2079)
!2083 = !DILocation(line: 70, column: 41, scope: !2079)
!2084 = !DILocation(line: 72, column: 9, scope: !2079)
!2085 = !DILocation(line: 73, column: 5, scope: !2071)
!2086 = !DILocation(line: 84, column: 18, scope: !2035)
!2087 = !DILocation(line: 84, column: 16, scope: !2035)
!2088 = !DILocation(line: 90, column: 38, scope: !2035)
!2089 = !DILocation(line: 90, column: 27, scope: !2035)
!2090 = !DILocation(line: 92, column: 1, scope: !2035)
!2091 = distinct !DISubprogram(name: "set_char_quoting", scope: !241, file: !241, line: 152, type: !2092, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!2092 = !DISubroutineType(types: !2093)
!2093 = !{!53, !2094, !7, !53}
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!2095 = !DILocalVariable(name: "o", arg: 1, scope: !2091, file: !241, line: 152, type: !2094)
!2096 = !DILocation(line: 152, column: 43, scope: !2091)
!2097 = !DILocalVariable(name: "c", arg: 2, scope: !2091, file: !241, line: 152, type: !7)
!2098 = !DILocation(line: 152, column: 51, scope: !2091)
!2099 = !DILocalVariable(name: "i", arg: 3, scope: !2091, file: !241, line: 152, type: !53)
!2100 = !DILocation(line: 152, column: 58, scope: !2091)
!2101 = !DILocalVariable(name: "uc", scope: !2091, file: !241, line: 154, type: !317)
!2102 = !DILocation(line: 154, column: 17, scope: !2091)
!2103 = !DILocation(line: 154, column: 22, scope: !2091)
!2104 = !DILocalVariable(name: "p", scope: !2091, file: !241, line: 155, type: !2105)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 64)
!2106 = !DILocation(line: 155, column: 17, scope: !2091)
!2107 = !DILocation(line: 156, column: 6, scope: !2091)
!2108 = !DILocation(line: 156, column: 10, scope: !2091)
!2109 = !DILocation(line: 156, column: 41, scope: !2091)
!2110 = !DILocation(line: 156, column: 5, scope: !2091)
!2111 = !DILocation(line: 156, column: 59, scope: !2091)
!2112 = !DILocation(line: 156, column: 62, scope: !2091)
!2113 = !DILocation(line: 156, column: 57, scope: !2091)
!2114 = !DILocalVariable(name: "shift", scope: !2091, file: !241, line: 157, type: !53)
!2115 = !DILocation(line: 157, column: 7, scope: !2091)
!2116 = !DILocation(line: 157, column: 15, scope: !2091)
!2117 = !DILocation(line: 157, column: 18, scope: !2091)
!2118 = !DILocalVariable(name: "r", scope: !2091, file: !241, line: 158, type: !53)
!2119 = !DILocation(line: 158, column: 7, scope: !2091)
!2120 = !DILocation(line: 158, column: 13, scope: !2091)
!2121 = !DILocation(line: 158, column: 12, scope: !2091)
!2122 = !DILocation(line: 158, column: 18, scope: !2091)
!2123 = !DILocation(line: 158, column: 15, scope: !2091)
!2124 = !DILocation(line: 158, column: 25, scope: !2091)
!2125 = !DILocation(line: 159, column: 11, scope: !2091)
!2126 = !DILocation(line: 159, column: 13, scope: !2091)
!2127 = !DILocation(line: 159, column: 20, scope: !2091)
!2128 = !DILocation(line: 159, column: 18, scope: !2091)
!2129 = !DILocation(line: 159, column: 26, scope: !2091)
!2130 = !DILocation(line: 159, column: 23, scope: !2091)
!2131 = !DILocation(line: 159, column: 4, scope: !2091)
!2132 = !DILocation(line: 159, column: 6, scope: !2091)
!2133 = !DILocation(line: 160, column: 10, scope: !2091)
!2134 = !DILocation(line: 160, column: 3, scope: !2091)
!2135 = !DILocalVariable(name: "shift", scope: !2136, file: !241, line: 157, type: !53)
!2136 = distinct !DISubprogram(name: "set_char_quoting", scope: !241, file: !241, line: 152, type: !2137, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2147, retainedNodes: !4)
!2137 = !DISubroutineType(types: !2138)
!2138 = !{!53, !2139, !7, !53}
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 64)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !2141)
!2141 = !{!2142, !2143, !2144, !2145, !2146}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2140, file: !241, line: 68, baseType: !223, size: 32)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2140, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2140, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2140, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2140, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!2147 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !2148, nameTableKind: None)
!2148 = !{!2149, !2151, !2153, !2155, !2157, !2159, !2166, !2168}
!2149 = !DIGlobalVariableExpression(var: !2150, expr: !DIExpression())
!2150 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2147, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!2151 = !DIGlobalVariableExpression(var: !2152, expr: !DIExpression())
!2152 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2147, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!2153 = !DIGlobalVariableExpression(var: !2154, expr: !DIExpression())
!2154 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2147, file: !241, line: 1052, type: !2140, isLocal: false, isDefinition: true)
!2155 = !DIGlobalVariableExpression(var: !2156, expr: !DIExpression())
!2156 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2147, file: !241, line: 116, type: !2140, isLocal: true, isDefinition: true)
!2157 = !DIGlobalVariableExpression(var: !2158, expr: !DIExpression())
!2158 = distinct !DIGlobalVariable(name: "slot0", scope: !2147, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!2159 = !DIGlobalVariableExpression(var: !2160, expr: !DIExpression())
!2160 = distinct !DIGlobalVariable(name: "slotvec", scope: !2147, file: !241, line: 845, type: !2161, isLocal: true, isDefinition: true)
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 64)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !2163)
!2163 = !{!2164, !2165}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2162, file: !241, line: 836, baseType: !110, size: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2162, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!2166 = !DIGlobalVariableExpression(var: !2167, expr: !DIExpression())
!2167 = distinct !DIGlobalVariable(name: "nslots", scope: !2147, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!2168 = !DIGlobalVariableExpression(var: !2169, expr: !DIExpression())
!2169 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2147, file: !241, line: 844, type: !2162, isLocal: true, isDefinition: true)
!2170 = !DILocalVariable(name: "r", scope: !2136, file: !241, line: 158, type: !53)
!2171 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !241, file: !241, line: 982, type: !2172, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!2172 = !DISubroutineType(types: !2173)
!2173 = !{!6, !49, !110, !7}
!2174 = !DILocalVariable(name: "arg", arg: 1, scope: !2171, file: !241, line: 982, type: !49)
!2175 = !DILocation(line: 982, column: 32, scope: !2171)
!2176 = !DILocalVariable(name: "argsize", arg: 2, scope: !2171, file: !241, line: 982, type: !110)
!2177 = !DILocation(line: 982, column: 44, scope: !2171)
!2178 = !DILocalVariable(name: "ch", arg: 3, scope: !2171, file: !241, line: 982, type: !7)
!2179 = !DILocation(line: 982, column: 58, scope: !2171)
!2180 = !DILocalVariable(name: "options", scope: !2171, file: !241, line: 984, type: !254)
!2181 = !DILocation(line: 984, column: 26, scope: !2171)
!2182 = !DILocation(line: 985, column: 13, scope: !2171)
!2183 = !DILocation(line: 986, column: 31, scope: !2171)
!2184 = !DILocation(line: 986, column: 3, scope: !2171)
!2185 = !DILocation(line: 987, column: 33, scope: !2171)
!2186 = !DILocation(line: 987, column: 38, scope: !2171)
!2187 = !DILocation(line: 987, column: 10, scope: !2171)
!2188 = !DILocation(line: 987, column: 3, scope: !2171)
!2189 = distinct !DISubprogram(name: "quotearg_n_options", scope: !241, file: !241, line: 877, type: !2190, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!2190 = !DISubroutineType(types: !2191)
!2191 = !{!6, !53, !49, !110, !2192}
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 64)
!2193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !254)
!2194 = !DILocalVariable(name: "n", arg: 1, scope: !2189, file: !241, line: 877, type: !53)
!2195 = !DILocation(line: 877, column: 25, scope: !2189)
!2196 = !DILocalVariable(name: "arg", arg: 2, scope: !2189, file: !241, line: 877, type: !49)
!2197 = !DILocation(line: 877, column: 40, scope: !2189)
!2198 = !DILocalVariable(name: "argsize", arg: 3, scope: !2189, file: !241, line: 877, type: !110)
!2199 = !DILocation(line: 877, column: 52, scope: !2189)
!2200 = !DILocalVariable(name: "options", arg: 4, scope: !2189, file: !241, line: 878, type: !2192)
!2201 = !DILocation(line: 878, column: 51, scope: !2189)
!2202 = !DILocalVariable(name: "e", scope: !2189, file: !241, line: 880, type: !53)
!2203 = !DILocation(line: 880, column: 7, scope: !2189)
!2204 = !DILocation(line: 880, column: 11, scope: !2189)
!2205 = !DILocalVariable(name: "sv", scope: !2189, file: !241, line: 882, type: !268)
!2206 = !DILocation(line: 882, column: 19, scope: !2189)
!2207 = !DILocation(line: 882, column: 24, scope: !2189)
!2208 = !DILocation(line: 884, column: 7, scope: !2209)
!2209 = distinct !DILexicalBlock(scope: !2189, file: !241, line: 884, column: 7)
!2210 = !DILocation(line: 884, column: 9, scope: !2209)
!2211 = !DILocation(line: 884, column: 7, scope: !2189)
!2212 = !DILocation(line: 885, column: 5, scope: !2209)
!2213 = !DILocation(line: 887, column: 7, scope: !2214)
!2214 = distinct !DILexicalBlock(scope: !2189, file: !241, line: 887, column: 7)
!2215 = !DILocation(line: 887, column: 17, scope: !2214)
!2216 = !DILocation(line: 887, column: 14, scope: !2214)
!2217 = !DILocation(line: 887, column: 7, scope: !2189)
!2218 = !DILocalVariable(name: "preallocated", scope: !2219, file: !241, line: 889, type: !18)
!2219 = distinct !DILexicalBlock(scope: !2214, file: !241, line: 888, column: 5)
!2220 = !DILocation(line: 889, column: 12, scope: !2219)
!2221 = !DILocation(line: 889, column: 28, scope: !2219)
!2222 = !DILocation(line: 889, column: 31, scope: !2219)
!2223 = !DILocalVariable(name: "nmax", scope: !2219, file: !241, line: 890, type: !53)
!2224 = !DILocation(line: 890, column: 11, scope: !2219)
!2225 = !DILocation(line: 892, column: 11, scope: !2226)
!2226 = distinct !DILexicalBlock(scope: !2219, file: !241, line: 892, column: 11)
!2227 = !DILocation(line: 892, column: 18, scope: !2226)
!2228 = !DILocation(line: 892, column: 16, scope: !2226)
!2229 = !DILocation(line: 892, column: 11, scope: !2219)
!2230 = !DILocation(line: 893, column: 9, scope: !2226)
!2231 = !DILocation(line: 895, column: 32, scope: !2219)
!2232 = !DILocation(line: 895, column: 54, scope: !2219)
!2233 = !DILocation(line: 895, column: 59, scope: !2219)
!2234 = !DILocation(line: 895, column: 61, scope: !2219)
!2235 = !DILocation(line: 895, column: 58, scope: !2219)
!2236 = !DILocation(line: 895, column: 66, scope: !2219)
!2237 = !DILocation(line: 895, column: 22, scope: !2219)
!2238 = !DILocation(line: 895, column: 20, scope: !2219)
!2239 = !DILocation(line: 895, column: 15, scope: !2219)
!2240 = !DILocation(line: 896, column: 11, scope: !2241)
!2241 = distinct !DILexicalBlock(scope: !2219, file: !241, line: 896, column: 11)
!2242 = !DILocation(line: 896, column: 11, scope: !2219)
!2243 = !DILocation(line: 897, column: 10, scope: !2241)
!2244 = !DILocation(line: 897, column: 15, scope: !2241)
!2245 = !DILocation(line: 897, column: 9, scope: !2241)
!2246 = !DILocation(line: 898, column: 15, scope: !2219)
!2247 = !DILocation(line: 898, column: 20, scope: !2219)
!2248 = !DILocation(line: 898, column: 18, scope: !2219)
!2249 = !DILocation(line: 898, column: 7, scope: !2219)
!2250 = !DILocation(line: 898, column: 32, scope: !2219)
!2251 = !DILocation(line: 898, column: 34, scope: !2219)
!2252 = !DILocation(line: 898, column: 40, scope: !2219)
!2253 = !DILocation(line: 898, column: 38, scope: !2219)
!2254 = !DILocation(line: 898, column: 31, scope: !2219)
!2255 = !DILocation(line: 898, column: 48, scope: !2219)
!2256 = !DILocation(line: 899, column: 16, scope: !2219)
!2257 = !DILocation(line: 899, column: 18, scope: !2219)
!2258 = !DILocation(line: 899, column: 14, scope: !2219)
!2259 = !DILocation(line: 900, column: 5, scope: !2219)
!2260 = !DILocalVariable(name: "size", scope: !2261, file: !241, line: 903, type: !110)
!2261 = distinct !DILexicalBlock(scope: !2189, file: !241, line: 902, column: 3)
!2262 = !DILocation(line: 903, column: 12, scope: !2261)
!2263 = !DILocation(line: 903, column: 19, scope: !2261)
!2264 = !DILocation(line: 903, column: 22, scope: !2261)
!2265 = !DILocation(line: 903, column: 25, scope: !2261)
!2266 = !DILocalVariable(name: "val", scope: !2261, file: !241, line: 904, type: !6)
!2267 = !DILocation(line: 904, column: 11, scope: !2261)
!2268 = !DILocation(line: 904, column: 17, scope: !2261)
!2269 = !DILocation(line: 904, column: 20, scope: !2261)
!2270 = !DILocation(line: 904, column: 23, scope: !2261)
!2271 = !DILocalVariable(name: "flags", scope: !2261, file: !241, line: 906, type: !53)
!2272 = !DILocation(line: 906, column: 9, scope: !2261)
!2273 = !DILocation(line: 906, column: 17, scope: !2261)
!2274 = !DILocation(line: 906, column: 26, scope: !2261)
!2275 = !DILocation(line: 906, column: 32, scope: !2261)
!2276 = !DILocalVariable(name: "qsize", scope: !2261, file: !241, line: 907, type: !110)
!2277 = !DILocation(line: 907, column: 12, scope: !2261)
!2278 = !DILocation(line: 907, column: 46, scope: !2261)
!2279 = !DILocation(line: 907, column: 51, scope: !2261)
!2280 = !DILocation(line: 907, column: 57, scope: !2261)
!2281 = !DILocation(line: 907, column: 62, scope: !2261)
!2282 = !DILocation(line: 908, column: 46, scope: !2261)
!2283 = !DILocation(line: 908, column: 55, scope: !2261)
!2284 = !DILocation(line: 908, column: 62, scope: !2261)
!2285 = !DILocation(line: 909, column: 46, scope: !2261)
!2286 = !DILocation(line: 909, column: 55, scope: !2261)
!2287 = !DILocation(line: 910, column: 46, scope: !2261)
!2288 = !DILocation(line: 910, column: 55, scope: !2261)
!2289 = !DILocation(line: 911, column: 46, scope: !2261)
!2290 = !DILocation(line: 911, column: 55, scope: !2261)
!2291 = !DILocation(line: 907, column: 20, scope: !2261)
!2292 = !DILocation(line: 913, column: 9, scope: !2293)
!2293 = distinct !DILexicalBlock(scope: !2261, file: !241, line: 913, column: 9)
!2294 = !DILocation(line: 913, column: 17, scope: !2293)
!2295 = !DILocation(line: 913, column: 14, scope: !2293)
!2296 = !DILocation(line: 913, column: 9, scope: !2261)
!2297 = !DILocation(line: 915, column: 29, scope: !2298)
!2298 = distinct !DILexicalBlock(scope: !2293, file: !241, line: 914, column: 7)
!2299 = !DILocation(line: 915, column: 35, scope: !2298)
!2300 = !DILocation(line: 915, column: 27, scope: !2298)
!2301 = !DILocation(line: 915, column: 9, scope: !2298)
!2302 = !DILocation(line: 915, column: 12, scope: !2298)
!2303 = !DILocation(line: 915, column: 15, scope: !2298)
!2304 = !DILocation(line: 915, column: 20, scope: !2298)
!2305 = !DILocation(line: 916, column: 13, scope: !2306)
!2306 = distinct !DILexicalBlock(scope: !2298, file: !241, line: 916, column: 13)
!2307 = !DILocation(line: 916, column: 17, scope: !2306)
!2308 = !DILocation(line: 916, column: 13, scope: !2298)
!2309 = !DILocation(line: 917, column: 17, scope: !2306)
!2310 = !DILocation(line: 917, column: 11, scope: !2306)
!2311 = !DILocation(line: 918, column: 39, scope: !2298)
!2312 = !DILocation(line: 918, column: 27, scope: !2298)
!2313 = !DILocation(line: 918, column: 25, scope: !2298)
!2314 = !DILocation(line: 918, column: 9, scope: !2298)
!2315 = !DILocation(line: 918, column: 12, scope: !2298)
!2316 = !DILocation(line: 918, column: 15, scope: !2298)
!2317 = !DILocation(line: 918, column: 19, scope: !2298)
!2318 = !DILocation(line: 919, column: 35, scope: !2298)
!2319 = !DILocation(line: 919, column: 40, scope: !2298)
!2320 = !DILocation(line: 919, column: 46, scope: !2298)
!2321 = !DILocation(line: 919, column: 51, scope: !2298)
!2322 = !DILocation(line: 919, column: 60, scope: !2298)
!2323 = !DILocation(line: 919, column: 69, scope: !2298)
!2324 = !DILocation(line: 920, column: 35, scope: !2298)
!2325 = !DILocation(line: 920, column: 42, scope: !2298)
!2326 = !DILocation(line: 920, column: 51, scope: !2298)
!2327 = !DILocation(line: 921, column: 35, scope: !2298)
!2328 = !DILocation(line: 921, column: 44, scope: !2298)
!2329 = !DILocation(line: 922, column: 35, scope: !2298)
!2330 = !DILocation(line: 922, column: 44, scope: !2298)
!2331 = !DILocation(line: 919, column: 9, scope: !2298)
!2332 = !DILocation(line: 923, column: 7, scope: !2298)
!2333 = !DILocation(line: 925, column: 13, scope: !2261)
!2334 = !DILocation(line: 925, column: 5, scope: !2261)
!2335 = !DILocation(line: 925, column: 11, scope: !2261)
!2336 = !DILocation(line: 926, column: 12, scope: !2261)
!2337 = !DILocation(line: 926, column: 5, scope: !2261)
!2338 = !DILocalVariable(name: "nmax", scope: !2339, file: !241, line: 890, type: !53)
!2339 = distinct !DILexicalBlock(scope: !2340, file: !241, line: 888, column: 5)
!2340 = distinct !DILexicalBlock(scope: !2341, file: !241, line: 887, column: 7)
!2341 = distinct !DISubprogram(name: "quotearg_n_options", scope: !241, file: !241, line: 877, type: !2342, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2353, retainedNodes: !4)
!2342 = !DISubroutineType(types: !2343)
!2343 = !{!6, !53, !49, !110, !2344}
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2345, size: 64)
!2345 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2346)
!2346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !2347)
!2347 = !{!2348, !2349, !2350, !2351, !2352}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2346, file: !241, line: 68, baseType: !223, size: 32)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2346, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2346, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2346, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2346, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!2353 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !2354, nameTableKind: None)
!2354 = !{!2355, !2357, !2359, !2361, !2363, !2365, !2372, !2374}
!2355 = !DIGlobalVariableExpression(var: !2356, expr: !DIExpression())
!2356 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2353, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!2357 = !DIGlobalVariableExpression(var: !2358, expr: !DIExpression())
!2358 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2353, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!2359 = !DIGlobalVariableExpression(var: !2360, expr: !DIExpression())
!2360 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2353, file: !241, line: 1052, type: !2346, isLocal: false, isDefinition: true)
!2361 = !DIGlobalVariableExpression(var: !2362, expr: !DIExpression())
!2362 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2353, file: !241, line: 116, type: !2346, isLocal: true, isDefinition: true)
!2363 = !DIGlobalVariableExpression(var: !2364, expr: !DIExpression())
!2364 = distinct !DIGlobalVariable(name: "slot0", scope: !2353, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!2365 = !DIGlobalVariableExpression(var: !2366, expr: !DIExpression())
!2366 = distinct !DIGlobalVariable(name: "slotvec", scope: !2353, file: !241, line: 845, type: !2367, isLocal: true, isDefinition: true)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2368, size: 64)
!2368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !2369)
!2369 = !{!2370, !2371}
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2368, file: !241, line: 836, baseType: !110, size: 64)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2368, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!2372 = !DIGlobalVariableExpression(var: !2373, expr: !DIExpression())
!2373 = distinct !DIGlobalVariable(name: "nslots", scope: !2353, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!2374 = !DIGlobalVariableExpression(var: !2375, expr: !DIExpression())
!2375 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2353, file: !241, line: 844, type: !2368, isLocal: true, isDefinition: true)
!2376 = !DILocalVariable(name: "val", scope: !2377, file: !241, line: 904, type: !6)
!2377 = distinct !DILexicalBlock(scope: !2378, file: !241, line: 902, column: 3)
!2378 = distinct !DISubprogram(name: "quotearg_n_options", scope: !241, file: !241, line: 877, type: !2379, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2390, retainedNodes: !4)
!2379 = !DISubroutineType(types: !2380)
!2380 = !{!6, !53, !49, !110, !2381}
!2381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 64)
!2382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2383)
!2383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !2384)
!2384 = !{!2385, !2386, !2387, !2388, !2389}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2383, file: !241, line: 68, baseType: !223, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2383, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2383, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2383, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2383, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!2390 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !2391, nameTableKind: None)
!2391 = !{!2392, !2394, !2396, !2398, !2400, !2402, !2409, !2411}
!2392 = !DIGlobalVariableExpression(var: !2393, expr: !DIExpression())
!2393 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2390, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!2394 = !DIGlobalVariableExpression(var: !2395, expr: !DIExpression())
!2395 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2390, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!2396 = !DIGlobalVariableExpression(var: !2397, expr: !DIExpression())
!2397 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2390, file: !241, line: 1052, type: !2383, isLocal: false, isDefinition: true)
!2398 = !DIGlobalVariableExpression(var: !2399, expr: !DIExpression())
!2399 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2390, file: !241, line: 116, type: !2383, isLocal: true, isDefinition: true)
!2400 = !DIGlobalVariableExpression(var: !2401, expr: !DIExpression())
!2401 = distinct !DIGlobalVariable(name: "slot0", scope: !2390, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!2402 = !DIGlobalVariableExpression(var: !2403, expr: !DIExpression())
!2403 = distinct !DIGlobalVariable(name: "slotvec", scope: !2390, file: !241, line: 845, type: !2404, isLocal: true, isDefinition: true)
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 64)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !2406)
!2406 = !{!2407, !2408}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2405, file: !241, line: 836, baseType: !110, size: 64)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2405, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!2409 = !DIGlobalVariableExpression(var: !2410, expr: !DIExpression())
!2410 = distinct !DIGlobalVariable(name: "nslots", scope: !2390, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!2411 = !DIGlobalVariableExpression(var: !2412, expr: !DIExpression())
!2412 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2390, file: !241, line: 844, type: !2405, isLocal: true, isDefinition: true)
!2413 = !DILocalVariable(name: "flags", scope: !2377, file: !241, line: 906, type: !53)
!2414 = !DILocalVariable(name: "qsize", scope: !2377, file: !241, line: 907, type: !110)
!2415 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !241, file: !241, line: 256, type: !2416, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!2416 = !DISubroutineType(types: !2417)
!2417 = !{!110, !6, !110, !49, !110, !223, !53, !2418, !49, !49}
!2418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2419, size: 64)
!2419 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !180)
!2420 = !DILocalVariable(name: "buffer", arg: 1, scope: !2415, file: !241, line: 256, type: !6)
!2421 = !DILocation(line: 256, column: 33, scope: !2415)
!2422 = !DILocalVariable(name: "buffersize", arg: 2, scope: !2415, file: !241, line: 256, type: !110)
!2423 = !DILocation(line: 256, column: 48, scope: !2415)
!2424 = !DILocalVariable(name: "arg", arg: 3, scope: !2415, file: !241, line: 257, type: !49)
!2425 = !DILocation(line: 257, column: 39, scope: !2415)
!2426 = !DILocalVariable(name: "argsize", arg: 4, scope: !2415, file: !241, line: 257, type: !110)
!2427 = !DILocation(line: 257, column: 51, scope: !2415)
!2428 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !2415, file: !241, line: 258, type: !223)
!2429 = !DILocation(line: 258, column: 46, scope: !2415)
!2430 = !DILocalVariable(name: "flags", arg: 6, scope: !2415, file: !241, line: 258, type: !53)
!2431 = !DILocation(line: 258, column: 65, scope: !2415)
!2432 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !2415, file: !241, line: 259, type: !2418)
!2433 = !DILocation(line: 259, column: 47, scope: !2415)
!2434 = !DILocalVariable(name: "left_quote", arg: 8, scope: !2415, file: !241, line: 260, type: !49)
!2435 = !DILocation(line: 260, column: 39, scope: !2415)
!2436 = !DILocalVariable(name: "right_quote", arg: 9, scope: !2415, file: !241, line: 261, type: !49)
!2437 = !DILocation(line: 261, column: 39, scope: !2415)
!2438 = !DILocalVariable(name: "i", scope: !2415, file: !241, line: 263, type: !110)
!2439 = !DILocation(line: 263, column: 10, scope: !2415)
!2440 = !DILocalVariable(name: "len", scope: !2415, file: !241, line: 264, type: !110)
!2441 = !DILocation(line: 264, column: 10, scope: !2415)
!2442 = !DILocalVariable(name: "orig_buffersize", scope: !2415, file: !241, line: 265, type: !110)
!2443 = !DILocation(line: 265, column: 10, scope: !2415)
!2444 = !DILocalVariable(name: "quote_string", scope: !2415, file: !241, line: 266, type: !49)
!2445 = !DILocation(line: 266, column: 15, scope: !2415)
!2446 = !DILocalVariable(name: "quote_string_len", scope: !2415, file: !241, line: 267, type: !110)
!2447 = !DILocation(line: 267, column: 10, scope: !2415)
!2448 = !DILocalVariable(name: "backslash_escapes", scope: !2415, file: !241, line: 268, type: !18)
!2449 = !DILocation(line: 268, column: 8, scope: !2415)
!2450 = !DILocalVariable(name: "unibyte_locale", scope: !2415, file: !241, line: 269, type: !18)
!2451 = !DILocation(line: 269, column: 8, scope: !2415)
!2452 = !DILocation(line: 269, column: 25, scope: !2415)
!2453 = !DILocation(line: 269, column: 36, scope: !2415)
!2454 = !DILocalVariable(name: "elide_outer_quotes", scope: !2415, file: !241, line: 270, type: !18)
!2455 = !DILocation(line: 270, column: 8, scope: !2415)
!2456 = !DILocation(line: 270, column: 30, scope: !2415)
!2457 = !DILocation(line: 270, column: 36, scope: !2415)
!2458 = !DILocation(line: 270, column: 61, scope: !2415)
!2459 = !DILocalVariable(name: "pending_shell_escape_end", scope: !2415, file: !241, line: 271, type: !18)
!2460 = !DILocation(line: 271, column: 8, scope: !2415)
!2461 = !DILocalVariable(name: "encountered_single_quote", scope: !2415, file: !241, line: 272, type: !18)
!2462 = !DILocation(line: 272, column: 8, scope: !2415)
!2463 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !2415, file: !241, line: 273, type: !18)
!2464 = !DILocation(line: 273, column: 8, scope: !2415)
!2465 = !DILocation(line: 273, column: 3, scope: !2415)
!2466 = !DILabel(scope: !2415, name: "process_input", file: !241, line: 314)
!2467 = !DILocation(line: 314, column: 2, scope: !2415)
!2468 = !DILocation(line: 316, column: 11, scope: !2415)
!2469 = !DILocation(line: 316, column: 3, scope: !2415)
!2470 = !DILocation(line: 319, column: 21, scope: !2471)
!2471 = distinct !DILexicalBlock(scope: !2415, file: !241, line: 317, column: 5)
!2472 = !DILocation(line: 320, column: 26, scope: !2471)
!2473 = !DILocation(line: 321, column: 7, scope: !2471)
!2474 = !DILocation(line: 323, column: 12, scope: !2475)
!2475 = distinct !DILexicalBlock(scope: !2471, file: !241, line: 323, column: 11)
!2476 = !DILocation(line: 323, column: 11, scope: !2471)
!2477 = !DILocation(line: 324, column: 9, scope: !2475)
!2478 = !DILocation(line: 324, column: 9, scope: !2479)
!2479 = distinct !DILexicalBlock(scope: !2480, file: !241, line: 324, column: 9)
!2480 = distinct !DILexicalBlock(scope: !2475, file: !241, line: 324, column: 9)
!2481 = !DILocation(line: 324, column: 9, scope: !2480)
!2482 = !DILocation(line: 325, column: 25, scope: !2471)
!2483 = !DILocation(line: 326, column: 20, scope: !2471)
!2484 = !DILocation(line: 327, column: 24, scope: !2471)
!2485 = !DILocation(line: 328, column: 7, scope: !2471)
!2486 = !DILocation(line: 331, column: 25, scope: !2471)
!2487 = !DILocation(line: 332, column: 26, scope: !2471)
!2488 = !DILocation(line: 333, column: 7, scope: !2471)
!2489 = !DILocation(line: 339, column: 13, scope: !2490)
!2490 = distinct !DILexicalBlock(scope: !2491, file: !241, line: 339, column: 13)
!2491 = distinct !DILexicalBlock(scope: !2471, file: !241, line: 338, column: 7)
!2492 = !DILocation(line: 339, column: 27, scope: !2490)
!2493 = !DILocation(line: 339, column: 13, scope: !2491)
!2494 = !DILocation(line: 362, column: 50, scope: !2495)
!2495 = distinct !DILexicalBlock(scope: !2490, file: !241, line: 340, column: 11)
!2496 = !DILocation(line: 362, column: 26, scope: !2495)
!2497 = !DILocation(line: 362, column: 24, scope: !2495)
!2498 = !DILocation(line: 363, column: 51, scope: !2495)
!2499 = !DILocation(line: 363, column: 27, scope: !2495)
!2500 = !DILocation(line: 363, column: 25, scope: !2495)
!2501 = !DILocation(line: 364, column: 11, scope: !2495)
!2502 = !DILocation(line: 365, column: 14, scope: !2503)
!2503 = distinct !DILexicalBlock(scope: !2491, file: !241, line: 365, column: 13)
!2504 = !DILocation(line: 365, column: 13, scope: !2491)
!2505 = !DILocation(line: 366, column: 31, scope: !2506)
!2506 = distinct !DILexicalBlock(scope: !2503, file: !241, line: 366, column: 11)
!2507 = !DILocation(line: 366, column: 29, scope: !2506)
!2508 = !DILocation(line: 366, column: 16, scope: !2506)
!2509 = !DILocation(line: 366, column: 44, scope: !2510)
!2510 = distinct !DILexicalBlock(scope: !2506, file: !241, line: 366, column: 11)
!2511 = !DILocation(line: 366, column: 43, scope: !2510)
!2512 = !DILocation(line: 366, column: 11, scope: !2506)
!2513 = !DILocation(line: 367, column: 13, scope: !2510)
!2514 = !DILocation(line: 367, column: 13, scope: !2515)
!2515 = distinct !DILexicalBlock(scope: !2516, file: !241, line: 367, column: 13)
!2516 = distinct !DILexicalBlock(scope: !2510, file: !241, line: 367, column: 13)
!2517 = !DILocation(line: 367, column: 13, scope: !2516)
!2518 = !DILocation(line: 366, column: 70, scope: !2510)
!2519 = !DILocation(line: 366, column: 11, scope: !2510)
!2520 = distinct !{!2520, !2512, !2521}
!2521 = !DILocation(line: 367, column: 13, scope: !2506)
!2522 = !DILocation(line: 368, column: 27, scope: !2491)
!2523 = !DILocation(line: 369, column: 24, scope: !2491)
!2524 = !DILocation(line: 369, column: 22, scope: !2491)
!2525 = !DILocation(line: 370, column: 36, scope: !2491)
!2526 = !DILocation(line: 370, column: 28, scope: !2491)
!2527 = !DILocation(line: 370, column: 26, scope: !2491)
!2528 = !DILocation(line: 372, column: 7, scope: !2471)
!2529 = !DILocation(line: 375, column: 25, scope: !2471)
!2530 = !DILocation(line: 376, column: 7, scope: !2471)
!2531 = !DILocation(line: 378, column: 26, scope: !2471)
!2532 = !DILocation(line: 379, column: 7, scope: !2471)
!2533 = !DILocation(line: 381, column: 12, scope: !2534)
!2534 = distinct !DILexicalBlock(scope: !2471, file: !241, line: 381, column: 11)
!2535 = !DILocation(line: 381, column: 11, scope: !2471)
!2536 = !DILocation(line: 382, column: 27, scope: !2534)
!2537 = !DILocation(line: 382, column: 9, scope: !2534)
!2538 = !DILocation(line: 383, column: 7, scope: !2471)
!2539 = !DILocation(line: 385, column: 21, scope: !2471)
!2540 = !DILocation(line: 386, column: 12, scope: !2541)
!2541 = distinct !DILexicalBlock(scope: !2471, file: !241, line: 386, column: 11)
!2542 = !DILocation(line: 386, column: 11, scope: !2471)
!2543 = !DILocation(line: 387, column: 9, scope: !2541)
!2544 = !DILocation(line: 387, column: 9, scope: !2545)
!2545 = distinct !DILexicalBlock(scope: !2546, file: !241, line: 387, column: 9)
!2546 = distinct !DILexicalBlock(scope: !2541, file: !241, line: 387, column: 9)
!2547 = !DILocation(line: 387, column: 9, scope: !2546)
!2548 = !DILocation(line: 388, column: 20, scope: !2471)
!2549 = !DILocation(line: 389, column: 24, scope: !2471)
!2550 = !DILocation(line: 390, column: 7, scope: !2471)
!2551 = !DILocation(line: 393, column: 26, scope: !2471)
!2552 = !DILocation(line: 394, column: 7, scope: !2471)
!2553 = !DILocation(line: 397, column: 7, scope: !2471)
!2554 = !DILocation(line: 400, column: 10, scope: !2555)
!2555 = distinct !DILexicalBlock(scope: !2415, file: !241, line: 400, column: 3)
!2556 = !DILocation(line: 400, column: 8, scope: !2555)
!2557 = !DILocation(line: 400, column: 19, scope: !2558)
!2558 = distinct !DILexicalBlock(scope: !2555, file: !241, line: 400, column: 3)
!2559 = !DILocation(line: 400, column: 27, scope: !2558)
!2560 = !DILocation(line: 400, column: 41, scope: !2558)
!2561 = !DILocation(line: 400, column: 45, scope: !2558)
!2562 = !DILocation(line: 400, column: 48, scope: !2558)
!2563 = !DILocation(line: 400, column: 58, scope: !2558)
!2564 = !DILocation(line: 400, column: 63, scope: !2558)
!2565 = !DILocation(line: 400, column: 60, scope: !2558)
!2566 = !DILocation(line: 400, column: 16, scope: !2558)
!2567 = !DILocation(line: 400, column: 3, scope: !2555)
!2568 = !DILocalVariable(name: "c", scope: !2569, file: !241, line: 402, type: !317)
!2569 = distinct !DILexicalBlock(scope: !2558, file: !241, line: 401, column: 5)
!2570 = !DILocation(line: 402, column: 21, scope: !2569)
!2571 = !DILocalVariable(name: "esc", scope: !2569, file: !241, line: 403, type: !317)
!2572 = !DILocation(line: 403, column: 21, scope: !2569)
!2573 = !DILocalVariable(name: "is_right_quote", scope: !2569, file: !241, line: 404, type: !18)
!2574 = !DILocation(line: 404, column: 12, scope: !2569)
!2575 = !DILocalVariable(name: "escaping", scope: !2569, file: !241, line: 405, type: !18)
!2576 = !DILocation(line: 405, column: 12, scope: !2569)
!2577 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !2569, file: !241, line: 406, type: !18)
!2578 = !DILocation(line: 406, column: 12, scope: !2569)
!2579 = !DILocation(line: 408, column: 11, scope: !2580)
!2580 = distinct !DILexicalBlock(scope: !2569, file: !241, line: 408, column: 11)
!2581 = !DILocation(line: 409, column: 11, scope: !2580)
!2582 = !DILocation(line: 409, column: 14, scope: !2580)
!2583 = !DILocation(line: 409, column: 28, scope: !2580)
!2584 = !DILocation(line: 410, column: 11, scope: !2580)
!2585 = !DILocation(line: 410, column: 14, scope: !2580)
!2586 = !DILocation(line: 411, column: 11, scope: !2580)
!2587 = !DILocation(line: 411, column: 15, scope: !2580)
!2588 = !DILocation(line: 411, column: 19, scope: !2580)
!2589 = !DILocation(line: 411, column: 17, scope: !2580)
!2590 = !DILocation(line: 412, column: 19, scope: !2580)
!2591 = !DILocation(line: 412, column: 27, scope: !2580)
!2592 = !DILocation(line: 412, column: 39, scope: !2580)
!2593 = !DILocation(line: 412, column: 46, scope: !2580)
!2594 = !DILocation(line: 412, column: 44, scope: !2580)
!2595 = !DILocation(line: 416, column: 40, scope: !2580)
!2596 = !DILocation(line: 416, column: 32, scope: !2580)
!2597 = !DILocation(line: 416, column: 30, scope: !2580)
!2598 = !DILocation(line: 416, column: 48, scope: !2580)
!2599 = !DILocation(line: 412, column: 15, scope: !2580)
!2600 = !DILocation(line: 417, column: 11, scope: !2580)
!2601 = !DILocation(line: 417, column: 22, scope: !2580)
!2602 = !DILocation(line: 417, column: 28, scope: !2580)
!2603 = !DILocation(line: 417, column: 26, scope: !2580)
!2604 = !DILocation(line: 417, column: 31, scope: !2580)
!2605 = !DILocation(line: 417, column: 45, scope: !2580)
!2606 = !DILocation(line: 417, column: 14, scope: !2580)
!2607 = !DILocation(line: 417, column: 63, scope: !2580)
!2608 = !DILocation(line: 408, column: 11, scope: !2569)
!2609 = !DILocation(line: 419, column: 15, scope: !2610)
!2610 = distinct !DILexicalBlock(scope: !2611, file: !241, line: 419, column: 15)
!2611 = distinct !DILexicalBlock(scope: !2580, file: !241, line: 418, column: 9)
!2612 = !DILocation(line: 419, column: 15, scope: !2611)
!2613 = !DILocation(line: 420, column: 13, scope: !2610)
!2614 = !DILocation(line: 421, column: 26, scope: !2611)
!2615 = !DILocation(line: 422, column: 9, scope: !2611)
!2616 = !DILocation(line: 424, column: 11, scope: !2569)
!2617 = !DILocation(line: 424, column: 15, scope: !2569)
!2618 = !DILocation(line: 424, column: 9, scope: !2569)
!2619 = !DILocation(line: 425, column: 15, scope: !2569)
!2620 = !DILocation(line: 425, column: 7, scope: !2569)
!2621 = !DILocation(line: 428, column: 15, scope: !2622)
!2622 = distinct !DILexicalBlock(scope: !2623, file: !241, line: 428, column: 15)
!2623 = distinct !DILexicalBlock(scope: !2569, file: !241, line: 426, column: 9)
!2624 = !DILocation(line: 428, column: 15, scope: !2623)
!2625 = !DILocation(line: 430, column: 15, scope: !2626)
!2626 = distinct !DILexicalBlock(scope: !2622, file: !241, line: 429, column: 13)
!2627 = !DILocation(line: 430, column: 15, scope: !2628)
!2628 = distinct !DILexicalBlock(scope: !2629, file: !241, line: 430, column: 15)
!2629 = distinct !DILexicalBlock(scope: !2626, file: !241, line: 430, column: 15)
!2630 = !DILocation(line: 430, column: 15, scope: !2629)
!2631 = !DILocation(line: 430, column: 15, scope: !2632)
!2632 = distinct !DILexicalBlock(scope: !2629, file: !241, line: 430, column: 15)
!2633 = !DILocation(line: 430, column: 15, scope: !2634)
!2634 = distinct !DILexicalBlock(scope: !2632, file: !241, line: 430, column: 15)
!2635 = !DILocation(line: 430, column: 15, scope: !2636)
!2636 = distinct !DILexicalBlock(scope: !2637, file: !241, line: 430, column: 15)
!2637 = distinct !DILexicalBlock(scope: !2634, file: !241, line: 430, column: 15)
!2638 = !DILocation(line: 430, column: 15, scope: !2637)
!2639 = !DILocation(line: 430, column: 15, scope: !2640)
!2640 = distinct !DILexicalBlock(scope: !2641, file: !241, line: 430, column: 15)
!2641 = distinct !DILexicalBlock(scope: !2634, file: !241, line: 430, column: 15)
!2642 = !DILocation(line: 430, column: 15, scope: !2641)
!2643 = !DILocation(line: 430, column: 15, scope: !2644)
!2644 = distinct !DILexicalBlock(scope: !2645, file: !241, line: 430, column: 15)
!2645 = distinct !DILexicalBlock(scope: !2634, file: !241, line: 430, column: 15)
!2646 = !DILocation(line: 430, column: 15, scope: !2645)
!2647 = !DILocation(line: 430, column: 15, scope: !2648)
!2648 = distinct !DILexicalBlock(scope: !2649, file: !241, line: 430, column: 15)
!2649 = distinct !DILexicalBlock(scope: !2629, file: !241, line: 430, column: 15)
!2650 = !DILocation(line: 430, column: 15, scope: !2649)
!2651 = !DILocation(line: 437, column: 19, scope: !2652)
!2652 = distinct !DILexicalBlock(scope: !2626, file: !241, line: 437, column: 19)
!2653 = !DILocation(line: 437, column: 33, scope: !2652)
!2654 = !DILocation(line: 438, column: 19, scope: !2652)
!2655 = !DILocation(line: 438, column: 22, scope: !2652)
!2656 = !DILocation(line: 438, column: 24, scope: !2652)
!2657 = !DILocation(line: 438, column: 30, scope: !2652)
!2658 = !DILocation(line: 438, column: 28, scope: !2652)
!2659 = !DILocation(line: 438, column: 38, scope: !2652)
!2660 = !DILocation(line: 438, column: 48, scope: !2652)
!2661 = !DILocation(line: 438, column: 52, scope: !2652)
!2662 = !DILocation(line: 438, column: 54, scope: !2652)
!2663 = !DILocation(line: 438, column: 45, scope: !2652)
!2664 = !DILocation(line: 438, column: 59, scope: !2652)
!2665 = !DILocation(line: 438, column: 62, scope: !2652)
!2666 = !DILocation(line: 438, column: 66, scope: !2652)
!2667 = !DILocation(line: 438, column: 68, scope: !2652)
!2668 = !DILocation(line: 438, column: 73, scope: !2652)
!2669 = !DILocation(line: 437, column: 19, scope: !2626)
!2670 = !DILocation(line: 440, column: 19, scope: !2671)
!2671 = distinct !DILexicalBlock(scope: !2652, file: !241, line: 439, column: 17)
!2672 = !DILocation(line: 440, column: 19, scope: !2673)
!2673 = distinct !DILexicalBlock(scope: !2674, file: !241, line: 440, column: 19)
!2674 = distinct !DILexicalBlock(scope: !2671, file: !241, line: 440, column: 19)
!2675 = !DILocation(line: 440, column: 19, scope: !2674)
!2676 = !DILocation(line: 441, column: 19, scope: !2671)
!2677 = !DILocation(line: 441, column: 19, scope: !2678)
!2678 = distinct !DILexicalBlock(scope: !2679, file: !241, line: 441, column: 19)
!2679 = distinct !DILexicalBlock(scope: !2671, file: !241, line: 441, column: 19)
!2680 = !DILocation(line: 441, column: 19, scope: !2679)
!2681 = !DILocation(line: 442, column: 17, scope: !2671)
!2682 = !DILocation(line: 443, column: 17, scope: !2626)
!2683 = !DILocation(line: 448, column: 13, scope: !2626)
!2684 = !DILocation(line: 449, column: 20, scope: !2685)
!2685 = distinct !DILexicalBlock(scope: !2622, file: !241, line: 449, column: 20)
!2686 = !DILocation(line: 449, column: 26, scope: !2685)
!2687 = !DILocation(line: 449, column: 20, scope: !2622)
!2688 = !DILocation(line: 450, column: 13, scope: !2685)
!2689 = !DILocation(line: 451, column: 11, scope: !2623)
!2690 = !DILocation(line: 454, column: 19, scope: !2623)
!2691 = !DILocation(line: 454, column: 11, scope: !2623)
!2692 = !DILocation(line: 457, column: 19, scope: !2693)
!2693 = distinct !DILexicalBlock(scope: !2694, file: !241, line: 457, column: 19)
!2694 = distinct !DILexicalBlock(scope: !2623, file: !241, line: 455, column: 13)
!2695 = !DILocation(line: 457, column: 19, scope: !2694)
!2696 = !DILocation(line: 458, column: 17, scope: !2693)
!2697 = !DILocation(line: 459, column: 15, scope: !2694)
!2698 = !DILocation(line: 462, column: 20, scope: !2699)
!2699 = distinct !DILexicalBlock(scope: !2694, file: !241, line: 462, column: 19)
!2700 = !DILocation(line: 462, column: 26, scope: !2699)
!2701 = !DILocation(line: 463, column: 19, scope: !2699)
!2702 = !DILocation(line: 463, column: 22, scope: !2699)
!2703 = !DILocation(line: 463, column: 24, scope: !2699)
!2704 = !DILocation(line: 463, column: 30, scope: !2699)
!2705 = !DILocation(line: 463, column: 28, scope: !2699)
!2706 = !DILocation(line: 463, column: 38, scope: !2699)
!2707 = !DILocation(line: 463, column: 41, scope: !2699)
!2708 = !DILocation(line: 463, column: 45, scope: !2699)
!2709 = !DILocation(line: 463, column: 47, scope: !2699)
!2710 = !DILocation(line: 463, column: 52, scope: !2699)
!2711 = !DILocation(line: 462, column: 19, scope: !2694)
!2712 = !DILocation(line: 464, column: 25, scope: !2699)
!2713 = !DILocation(line: 464, column: 29, scope: !2699)
!2714 = !DILocation(line: 464, column: 31, scope: !2699)
!2715 = !DILocation(line: 464, column: 17, scope: !2699)
!2716 = !DILocation(line: 471, column: 25, scope: !2717)
!2717 = distinct !DILexicalBlock(scope: !2718, file: !241, line: 471, column: 25)
!2718 = distinct !DILexicalBlock(scope: !2699, file: !241, line: 465, column: 19)
!2719 = !DILocation(line: 471, column: 25, scope: !2718)
!2720 = !DILocation(line: 472, column: 23, scope: !2717)
!2721 = !DILocation(line: 473, column: 25, scope: !2718)
!2722 = !DILocation(line: 473, column: 29, scope: !2718)
!2723 = !DILocation(line: 473, column: 31, scope: !2718)
!2724 = !DILocation(line: 473, column: 23, scope: !2718)
!2725 = !DILocation(line: 474, column: 23, scope: !2718)
!2726 = !DILocation(line: 475, column: 21, scope: !2718)
!2727 = !DILocation(line: 475, column: 21, scope: !2728)
!2728 = distinct !DILexicalBlock(scope: !2729, file: !241, line: 475, column: 21)
!2729 = distinct !DILexicalBlock(scope: !2718, file: !241, line: 475, column: 21)
!2730 = !DILocation(line: 475, column: 21, scope: !2729)
!2731 = !DILocation(line: 476, column: 21, scope: !2718)
!2732 = !DILocation(line: 476, column: 21, scope: !2733)
!2733 = distinct !DILexicalBlock(scope: !2734, file: !241, line: 476, column: 21)
!2734 = distinct !DILexicalBlock(scope: !2718, file: !241, line: 476, column: 21)
!2735 = !DILocation(line: 476, column: 21, scope: !2734)
!2736 = !DILocation(line: 477, column: 21, scope: !2718)
!2737 = !DILocation(line: 477, column: 21, scope: !2738)
!2738 = distinct !DILexicalBlock(scope: !2739, file: !241, line: 477, column: 21)
!2739 = distinct !DILexicalBlock(scope: !2718, file: !241, line: 477, column: 21)
!2740 = !DILocation(line: 477, column: 21, scope: !2739)
!2741 = !DILocation(line: 478, column: 21, scope: !2718)
!2742 = !DILocation(line: 478, column: 21, scope: !2743)
!2743 = distinct !DILexicalBlock(scope: !2744, file: !241, line: 478, column: 21)
!2744 = distinct !DILexicalBlock(scope: !2718, file: !241, line: 478, column: 21)
!2745 = !DILocation(line: 478, column: 21, scope: !2744)
!2746 = !DILocation(line: 479, column: 21, scope: !2718)
!2747 = !DILocation(line: 482, column: 21, scope: !2718)
!2748 = !DILocation(line: 483, column: 19, scope: !2718)
!2749 = !DILocation(line: 484, column: 15, scope: !2694)
!2750 = !DILocation(line: 487, column: 15, scope: !2694)
!2751 = !DILocation(line: 489, column: 11, scope: !2623)
!2752 = !DILocation(line: 491, column: 24, scope: !2623)
!2753 = !DILocation(line: 491, column: 31, scope: !2623)
!2754 = !DILocation(line: 492, column: 24, scope: !2623)
!2755 = !DILocation(line: 492, column: 31, scope: !2623)
!2756 = !DILocation(line: 493, column: 24, scope: !2623)
!2757 = !DILocation(line: 493, column: 31, scope: !2623)
!2758 = !DILocation(line: 494, column: 24, scope: !2623)
!2759 = !DILocation(line: 494, column: 31, scope: !2623)
!2760 = !DILocation(line: 495, column: 24, scope: !2623)
!2761 = !DILocation(line: 495, column: 31, scope: !2623)
!2762 = !DILocation(line: 496, column: 24, scope: !2623)
!2763 = !DILocation(line: 496, column: 31, scope: !2623)
!2764 = !DILocation(line: 497, column: 24, scope: !2623)
!2765 = !DILocation(line: 497, column: 31, scope: !2623)
!2766 = !DILocation(line: 498, column: 26, scope: !2623)
!2767 = !DILocation(line: 498, column: 24, scope: !2623)
!2768 = !DILocation(line: 500, column: 15, scope: !2769)
!2769 = distinct !DILexicalBlock(scope: !2623, file: !241, line: 500, column: 15)
!2770 = !DILocation(line: 500, column: 29, scope: !2769)
!2771 = !DILocation(line: 500, column: 15, scope: !2623)
!2772 = !DILocation(line: 502, column: 19, scope: !2773)
!2773 = distinct !DILexicalBlock(scope: !2774, file: !241, line: 502, column: 19)
!2774 = distinct !DILexicalBlock(scope: !2769, file: !241, line: 501, column: 13)
!2775 = !DILocation(line: 502, column: 19, scope: !2774)
!2776 = !DILocation(line: 503, column: 17, scope: !2773)
!2777 = !DILocation(line: 504, column: 15, scope: !2774)
!2778 = !DILocation(line: 509, column: 15, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !2623, file: !241, line: 509, column: 15)
!2780 = !DILocation(line: 509, column: 33, scope: !2779)
!2781 = !DILocation(line: 509, column: 36, scope: !2779)
!2782 = !DILocation(line: 509, column: 55, scope: !2779)
!2783 = !DILocation(line: 509, column: 58, scope: !2779)
!2784 = !DILocation(line: 509, column: 15, scope: !2623)
!2785 = !DILocation(line: 510, column: 13, scope: !2779)
!2786 = !DILabel(scope: !2623, name: "c_and_shell_escape", file: !241, line: 512)
!2787 = !DILocation(line: 512, column: 9, scope: !2623)
!2788 = !DILocation(line: 513, column: 15, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2623, file: !241, line: 513, column: 15)
!2790 = !DILocation(line: 513, column: 29, scope: !2789)
!2791 = !DILocation(line: 514, column: 15, scope: !2789)
!2792 = !DILocation(line: 514, column: 18, scope: !2789)
!2793 = !DILocation(line: 513, column: 15, scope: !2623)
!2794 = !DILocation(line: 515, column: 13, scope: !2789)
!2795 = !DILabel(scope: !2623, name: "c_escape", file: !241, line: 517)
!2796 = !DILocation(line: 517, column: 9, scope: !2623)
!2797 = !DILocation(line: 518, column: 15, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !2623, file: !241, line: 518, column: 15)
!2799 = !DILocation(line: 518, column: 15, scope: !2623)
!2800 = !DILocation(line: 520, column: 19, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2798, file: !241, line: 519, column: 13)
!2802 = !DILocation(line: 520, column: 17, scope: !2801)
!2803 = !DILocation(line: 521, column: 15, scope: !2801)
!2804 = !DILocation(line: 523, column: 11, scope: !2623)
!2805 = !DILocation(line: 526, column: 18, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2623, file: !241, line: 526, column: 15)
!2807 = !DILocation(line: 526, column: 26, scope: !2806)
!2808 = !DILocation(line: 526, column: 15, scope: !2623)
!2809 = !DILocation(line: 526, column: 40, scope: !2806)
!2810 = !DILocation(line: 526, column: 47, scope: !2806)
!2811 = !DILocation(line: 526, column: 57, scope: !2806)
!2812 = !DILocation(line: 526, column: 65, scope: !2806)
!2813 = !DILocation(line: 527, column: 13, scope: !2806)
!2814 = !DILocation(line: 528, column: 11, scope: !2623)
!2815 = !DILocation(line: 530, column: 15, scope: !2816)
!2816 = distinct !DILexicalBlock(scope: !2623, file: !241, line: 530, column: 15)
!2817 = !DILocation(line: 530, column: 17, scope: !2816)
!2818 = !DILocation(line: 530, column: 15, scope: !2623)
!2819 = !DILocation(line: 531, column: 13, scope: !2816)
!2820 = !DILocation(line: 532, column: 11, scope: !2623)
!2821 = !DILocation(line: 534, column: 36, scope: !2623)
!2822 = !DILocation(line: 535, column: 11, scope: !2623)
!2823 = !DILocation(line: 548, column: 15, scope: !2824)
!2824 = distinct !DILexicalBlock(scope: !2623, file: !241, line: 548, column: 15)
!2825 = !DILocation(line: 548, column: 29, scope: !2824)
!2826 = !DILocation(line: 549, column: 15, scope: !2824)
!2827 = !DILocation(line: 549, column: 18, scope: !2824)
!2828 = !DILocation(line: 548, column: 15, scope: !2623)
!2829 = !DILocation(line: 550, column: 13, scope: !2824)
!2830 = !DILocation(line: 551, column: 11, scope: !2623)
!2831 = !DILocation(line: 554, column: 36, scope: !2623)
!2832 = !DILocation(line: 555, column: 36, scope: !2623)
!2833 = !DILocation(line: 556, column: 15, scope: !2834)
!2834 = distinct !DILexicalBlock(scope: !2623, file: !241, line: 556, column: 15)
!2835 = !DILocation(line: 556, column: 29, scope: !2834)
!2836 = !DILocation(line: 556, column: 15, scope: !2623)
!2837 = !DILocation(line: 558, column: 19, scope: !2838)
!2838 = distinct !DILexicalBlock(scope: !2839, file: !241, line: 558, column: 19)
!2839 = distinct !DILexicalBlock(scope: !2834, file: !241, line: 557, column: 13)
!2840 = !DILocation(line: 558, column: 19, scope: !2839)
!2841 = !DILocation(line: 559, column: 17, scope: !2838)
!2842 = !DILocation(line: 561, column: 19, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2839, file: !241, line: 561, column: 19)
!2844 = !DILocation(line: 561, column: 30, scope: !2843)
!2845 = !DILocation(line: 561, column: 35, scope: !2843)
!2846 = !DILocation(line: 561, column: 19, scope: !2839)
!2847 = !DILocation(line: 566, column: 37, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !2843, file: !241, line: 562, column: 17)
!2849 = !DILocation(line: 566, column: 35, scope: !2848)
!2850 = !DILocation(line: 567, column: 30, scope: !2848)
!2851 = !DILocation(line: 568, column: 17, scope: !2848)
!2852 = !DILocation(line: 570, column: 15, scope: !2839)
!2853 = !DILocation(line: 570, column: 15, scope: !2854)
!2854 = distinct !DILexicalBlock(scope: !2855, file: !241, line: 570, column: 15)
!2855 = distinct !DILexicalBlock(scope: !2839, file: !241, line: 570, column: 15)
!2856 = !DILocation(line: 570, column: 15, scope: !2855)
!2857 = !DILocation(line: 571, column: 15, scope: !2839)
!2858 = !DILocation(line: 571, column: 15, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2860, file: !241, line: 571, column: 15)
!2860 = distinct !DILexicalBlock(scope: !2839, file: !241, line: 571, column: 15)
!2861 = !DILocation(line: 571, column: 15, scope: !2860)
!2862 = !DILocation(line: 572, column: 15, scope: !2839)
!2863 = !DILocation(line: 572, column: 15, scope: !2864)
!2864 = distinct !DILexicalBlock(scope: !2865, file: !241, line: 572, column: 15)
!2865 = distinct !DILexicalBlock(scope: !2839, file: !241, line: 572, column: 15)
!2866 = !DILocation(line: 572, column: 15, scope: !2865)
!2867 = !DILocation(line: 573, column: 40, scope: !2839)
!2868 = !DILocation(line: 574, column: 13, scope: !2839)
!2869 = !DILocation(line: 575, column: 11, scope: !2623)
!2870 = !DILocation(line: 599, column: 36, scope: !2623)
!2871 = !DILocation(line: 600, column: 11, scope: !2623)
!2872 = !DILocalVariable(name: "m", scope: !2873, file: !241, line: 610, type: !110)
!2873 = distinct !DILexicalBlock(scope: !2623, file: !241, line: 608, column: 11)
!2874 = !DILocation(line: 610, column: 20, scope: !2873)
!2875 = !DILocalVariable(name: "printable", scope: !2873, file: !241, line: 612, type: !18)
!2876 = !DILocation(line: 612, column: 18, scope: !2873)
!2877 = !DILocation(line: 614, column: 17, scope: !2878)
!2878 = distinct !DILexicalBlock(scope: !2873, file: !241, line: 614, column: 17)
!2879 = !DILocation(line: 614, column: 17, scope: !2873)
!2880 = !DILocation(line: 616, column: 19, scope: !2881)
!2881 = distinct !DILexicalBlock(scope: !2878, file: !241, line: 615, column: 15)
!2882 = !DILocation(line: 617, column: 29, scope: !2881)
!2883 = !DILocation(line: 617, column: 41, scope: !2881)
!2884 = !DILocation(line: 617, column: 27, scope: !2881)
!2885 = !DILocation(line: 618, column: 15, scope: !2881)
!2886 = !DILocalVariable(name: "mbstate", scope: !2887, file: !241, line: 621, type: !2888)
!2887 = distinct !DILexicalBlock(scope: !2878, file: !241, line: 620, column: 15)
!2888 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !2889, line: 6, baseType: !2890)
!2889 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h", directory: "")
!2890 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !2891, line: 21, baseType: !2892)
!2891 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", directory: "")
!2892 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2891, line: 13, size: 64, elements: !2893)
!2893 = !{!2894, !2895}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2892, file: !2891, line: 15, baseType: !53, size: 32)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2892, file: !2891, line: 20, baseType: !2896, size: 32, offset: 32)
!2896 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2892, file: !2891, line: 16, size: 32, elements: !2897)
!2897 = !{!2898, !2899}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2896, file: !2891, line: 18, baseType: !180, size: 32)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2896, file: !2891, line: 19, baseType: !82, size: 32)
!2900 = !DILocation(line: 621, column: 27, scope: !2887)
!2901 = !DILocation(line: 622, column: 17, scope: !2887)
!2902 = !DILocation(line: 624, column: 19, scope: !2887)
!2903 = !DILocation(line: 625, column: 27, scope: !2887)
!2904 = !DILocation(line: 626, column: 21, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2887, file: !241, line: 626, column: 21)
!2906 = !DILocation(line: 626, column: 29, scope: !2905)
!2907 = !DILocation(line: 626, column: 21, scope: !2887)
!2908 = !DILocation(line: 627, column: 37, scope: !2905)
!2909 = !DILocation(line: 627, column: 29, scope: !2905)
!2910 = !DILocation(line: 627, column: 27, scope: !2905)
!2911 = !DILocation(line: 627, column: 19, scope: !2905)
!2912 = !DILocation(line: 629, column: 17, scope: !2887)
!2913 = !DILocalVariable(name: "w", scope: !2914, file: !241, line: 631, type: !2915)
!2914 = distinct !DILexicalBlock(scope: !2887, file: !241, line: 630, column: 19)
!2915 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !111, line: 74, baseType: !53)
!2916 = !DILocation(line: 631, column: 29, scope: !2914)
!2917 = !DILocalVariable(name: "bytes", scope: !2914, file: !241, line: 632, type: !110)
!2918 = !DILocation(line: 632, column: 28, scope: !2914)
!2919 = !DILocation(line: 632, column: 50, scope: !2914)
!2920 = !DILocation(line: 632, column: 54, scope: !2914)
!2921 = !DILocation(line: 632, column: 58, scope: !2914)
!2922 = !DILocation(line: 632, column: 56, scope: !2914)
!2923 = !DILocation(line: 633, column: 45, scope: !2914)
!2924 = !DILocation(line: 633, column: 56, scope: !2914)
!2925 = !DILocation(line: 633, column: 60, scope: !2914)
!2926 = !DILocation(line: 633, column: 58, scope: !2914)
!2927 = !DILocation(line: 633, column: 53, scope: !2914)
!2928 = !DILocation(line: 632, column: 36, scope: !2914)
!2929 = !DILocation(line: 634, column: 25, scope: !2930)
!2930 = distinct !DILexicalBlock(scope: !2914, file: !241, line: 634, column: 25)
!2931 = !DILocation(line: 634, column: 31, scope: !2930)
!2932 = !DILocation(line: 634, column: 25, scope: !2914)
!2933 = !DILocation(line: 635, column: 23, scope: !2930)
!2934 = !DILocation(line: 636, column: 30, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2930, file: !241, line: 636, column: 30)
!2936 = !DILocation(line: 636, column: 36, scope: !2935)
!2937 = !DILocation(line: 636, column: 30, scope: !2930)
!2938 = !DILocation(line: 638, column: 35, scope: !2939)
!2939 = distinct !DILexicalBlock(scope: !2935, file: !241, line: 637, column: 23)
!2940 = !DILocation(line: 639, column: 25, scope: !2939)
!2941 = !DILocation(line: 641, column: 30, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2935, file: !241, line: 641, column: 30)
!2943 = !DILocation(line: 641, column: 36, scope: !2942)
!2944 = !DILocation(line: 641, column: 30, scope: !2935)
!2945 = !DILocation(line: 643, column: 35, scope: !2946)
!2946 = distinct !DILexicalBlock(scope: !2942, file: !241, line: 642, column: 23)
!2947 = !DILocation(line: 644, column: 25, scope: !2946)
!2948 = !DILocation(line: 644, column: 32, scope: !2946)
!2949 = !DILocation(line: 644, column: 36, scope: !2946)
!2950 = !DILocation(line: 644, column: 34, scope: !2946)
!2951 = !DILocation(line: 644, column: 40, scope: !2946)
!2952 = !DILocation(line: 644, column: 38, scope: !2946)
!2953 = !DILocation(line: 644, column: 48, scope: !2946)
!2954 = !DILocation(line: 644, column: 51, scope: !2946)
!2955 = !DILocation(line: 644, column: 55, scope: !2946)
!2956 = !DILocation(line: 644, column: 59, scope: !2946)
!2957 = !DILocation(line: 644, column: 57, scope: !2946)
!2958 = !DILocation(line: 0, scope: !2946)
!2959 = !DILocation(line: 645, column: 28, scope: !2946)
!2960 = distinct !{!2960, !2947, !2959}
!2961 = !DILocation(line: 646, column: 25, scope: !2946)
!2962 = !DILocation(line: 654, column: 44, scope: !2963)
!2963 = distinct !DILexicalBlock(scope: !2964, file: !241, line: 654, column: 29)
!2964 = distinct !DILexicalBlock(scope: !2942, file: !241, line: 649, column: 23)
!2965 = !DILocation(line: 655, column: 29, scope: !2963)
!2966 = !DILocation(line: 655, column: 32, scope: !2963)
!2967 = !DILocation(line: 655, column: 46, scope: !2963)
!2968 = !DILocation(line: 654, column: 29, scope: !2964)
!2969 = !DILocalVariable(name: "j", scope: !2970, file: !241, line: 657, type: !110)
!2970 = distinct !DILexicalBlock(scope: !2963, file: !241, line: 656, column: 27)
!2971 = !DILocation(line: 657, column: 36, scope: !2970)
!2972 = !DILocation(line: 658, column: 36, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2970, file: !241, line: 658, column: 29)
!2974 = !DILocation(line: 658, column: 34, scope: !2973)
!2975 = !DILocation(line: 658, column: 41, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2973, file: !241, line: 658, column: 29)
!2977 = !DILocation(line: 658, column: 45, scope: !2976)
!2978 = !DILocation(line: 658, column: 43, scope: !2976)
!2979 = !DILocation(line: 658, column: 29, scope: !2973)
!2980 = !DILocation(line: 659, column: 39, scope: !2976)
!2981 = !DILocation(line: 659, column: 43, scope: !2976)
!2982 = !DILocation(line: 659, column: 47, scope: !2976)
!2983 = !DILocation(line: 659, column: 45, scope: !2976)
!2984 = !DILocation(line: 659, column: 51, scope: !2976)
!2985 = !DILocation(line: 659, column: 49, scope: !2976)
!2986 = !DILocation(line: 659, column: 31, scope: !2976)
!2987 = !DILocation(line: 663, column: 35, scope: !2988)
!2988 = distinct !DILexicalBlock(scope: !2976, file: !241, line: 660, column: 33)
!2989 = !DILocation(line: 666, column: 35, scope: !2988)
!2990 = !DILocation(line: 667, column: 33, scope: !2988)
!2991 = !DILocation(line: 658, column: 53, scope: !2976)
!2992 = !DILocation(line: 658, column: 29, scope: !2976)
!2993 = distinct !{!2993, !2979, !2994}
!2994 = !DILocation(line: 667, column: 33, scope: !2973)
!2995 = !DILocation(line: 668, column: 27, scope: !2970)
!2996 = !DILocation(line: 670, column: 41, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2964, file: !241, line: 670, column: 29)
!2998 = !DILocation(line: 670, column: 31, scope: !2997)
!2999 = !DILocation(line: 670, column: 29, scope: !2964)
!3000 = !DILocation(line: 671, column: 37, scope: !2997)
!3001 = !DILocation(line: 671, column: 27, scope: !2997)
!3002 = !DILocation(line: 672, column: 30, scope: !2964)
!3003 = !DILocation(line: 672, column: 27, scope: !2964)
!3004 = !DILocation(line: 674, column: 19, scope: !2914)
!3005 = !DILocation(line: 675, column: 26, scope: !2887)
!3006 = !DILocation(line: 675, column: 24, scope: !2887)
!3007 = distinct !{!3007, !2912, !3008}
!3008 = !DILocation(line: 675, column: 44, scope: !2887)
!3009 = !DILocation(line: 678, column: 40, scope: !2873)
!3010 = !DILocation(line: 678, column: 38, scope: !2873)
!3011 = !DILocation(line: 680, column: 21, scope: !3012)
!3012 = distinct !DILexicalBlock(scope: !2873, file: !241, line: 680, column: 17)
!3013 = !DILocation(line: 680, column: 19, scope: !3012)
!3014 = !DILocation(line: 680, column: 23, scope: !3012)
!3015 = !DILocation(line: 680, column: 27, scope: !3012)
!3016 = !DILocation(line: 680, column: 45, scope: !3012)
!3017 = !DILocation(line: 680, column: 50, scope: !3012)
!3018 = !DILocation(line: 680, column: 17, scope: !2873)
!3019 = !DILocalVariable(name: "ilim", scope: !3020, file: !241, line: 684, type: !110)
!3020 = distinct !DILexicalBlock(scope: !3012, file: !241, line: 681, column: 15)
!3021 = !DILocation(line: 684, column: 24, scope: !3020)
!3022 = !DILocation(line: 684, column: 31, scope: !3020)
!3023 = !DILocation(line: 684, column: 35, scope: !3020)
!3024 = !DILocation(line: 684, column: 33, scope: !3020)
!3025 = !DILocation(line: 686, column: 17, scope: !3020)
!3026 = !DILocation(line: 688, column: 25, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !3028, file: !241, line: 688, column: 25)
!3028 = distinct !DILexicalBlock(scope: !3029, file: !241, line: 687, column: 19)
!3029 = distinct !DILexicalBlock(scope: !3030, file: !241, line: 686, column: 17)
!3030 = distinct !DILexicalBlock(scope: !3020, file: !241, line: 686, column: 17)
!3031 = !DILocation(line: 688, column: 43, scope: !3027)
!3032 = !DILocation(line: 688, column: 48, scope: !3027)
!3033 = !DILocation(line: 688, column: 25, scope: !3028)
!3034 = !DILocation(line: 690, column: 25, scope: !3035)
!3035 = distinct !DILexicalBlock(scope: !3027, file: !241, line: 689, column: 23)
!3036 = !DILocation(line: 690, column: 25, scope: !3037)
!3037 = distinct !DILexicalBlock(scope: !3038, file: !241, line: 690, column: 25)
!3038 = distinct !DILexicalBlock(scope: !3035, file: !241, line: 690, column: 25)
!3039 = !DILocation(line: 690, column: 25, scope: !3038)
!3040 = !DILocation(line: 690, column: 25, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !3038, file: !241, line: 690, column: 25)
!3042 = !DILocation(line: 690, column: 25, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !3041, file: !241, line: 690, column: 25)
!3044 = !DILocation(line: 690, column: 25, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3046, file: !241, line: 690, column: 25)
!3046 = distinct !DILexicalBlock(scope: !3043, file: !241, line: 690, column: 25)
!3047 = !DILocation(line: 690, column: 25, scope: !3046)
!3048 = !DILocation(line: 690, column: 25, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !3050, file: !241, line: 690, column: 25)
!3050 = distinct !DILexicalBlock(scope: !3043, file: !241, line: 690, column: 25)
!3051 = !DILocation(line: 690, column: 25, scope: !3050)
!3052 = !DILocation(line: 690, column: 25, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !3054, file: !241, line: 690, column: 25)
!3054 = distinct !DILexicalBlock(scope: !3043, file: !241, line: 690, column: 25)
!3055 = !DILocation(line: 690, column: 25, scope: !3054)
!3056 = !DILocation(line: 690, column: 25, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !3058, file: !241, line: 690, column: 25)
!3058 = distinct !DILexicalBlock(scope: !3038, file: !241, line: 690, column: 25)
!3059 = !DILocation(line: 690, column: 25, scope: !3058)
!3060 = !DILocation(line: 691, column: 25, scope: !3035)
!3061 = !DILocation(line: 691, column: 25, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !3063, file: !241, line: 691, column: 25)
!3063 = distinct !DILexicalBlock(scope: !3035, file: !241, line: 691, column: 25)
!3064 = !DILocation(line: 691, column: 25, scope: !3063)
!3065 = !DILocation(line: 692, column: 25, scope: !3035)
!3066 = !DILocation(line: 692, column: 25, scope: !3067)
!3067 = distinct !DILexicalBlock(scope: !3068, file: !241, line: 692, column: 25)
!3068 = distinct !DILexicalBlock(scope: !3035, file: !241, line: 692, column: 25)
!3069 = !DILocation(line: 692, column: 25, scope: !3068)
!3070 = !DILocation(line: 693, column: 36, scope: !3035)
!3071 = !DILocation(line: 693, column: 38, scope: !3035)
!3072 = !DILocation(line: 693, column: 33, scope: !3035)
!3073 = !DILocation(line: 693, column: 29, scope: !3035)
!3074 = !DILocation(line: 693, column: 27, scope: !3035)
!3075 = !DILocation(line: 694, column: 23, scope: !3035)
!3076 = !DILocation(line: 695, column: 30, scope: !3077)
!3077 = distinct !DILexicalBlock(scope: !3027, file: !241, line: 695, column: 30)
!3078 = !DILocation(line: 695, column: 30, scope: !3027)
!3079 = !DILocation(line: 697, column: 25, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3077, file: !241, line: 696, column: 23)
!3081 = !DILocation(line: 697, column: 25, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !3083, file: !241, line: 697, column: 25)
!3083 = distinct !DILexicalBlock(scope: !3080, file: !241, line: 697, column: 25)
!3084 = !DILocation(line: 697, column: 25, scope: !3083)
!3085 = !DILocation(line: 698, column: 40, scope: !3080)
!3086 = !DILocation(line: 699, column: 23, scope: !3080)
!3087 = !DILocation(line: 700, column: 25, scope: !3088)
!3088 = distinct !DILexicalBlock(scope: !3028, file: !241, line: 700, column: 25)
!3089 = !DILocation(line: 700, column: 33, scope: !3088)
!3090 = !DILocation(line: 700, column: 35, scope: !3088)
!3091 = !DILocation(line: 700, column: 30, scope: !3088)
!3092 = !DILocation(line: 700, column: 25, scope: !3028)
!3093 = !DILocation(line: 701, column: 23, scope: !3088)
!3094 = !DILocation(line: 702, column: 21, scope: !3028)
!3095 = !DILocation(line: 702, column: 21, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !3097, file: !241, line: 702, column: 21)
!3097 = distinct !DILexicalBlock(scope: !3028, file: !241, line: 702, column: 21)
!3098 = !DILocation(line: 702, column: 21, scope: !3097)
!3099 = !DILocation(line: 702, column: 21, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !3096, file: !241, line: 702, column: 21)
!3101 = !DILocation(line: 702, column: 21, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3103, file: !241, line: 702, column: 21)
!3103 = distinct !DILexicalBlock(scope: !3100, file: !241, line: 702, column: 21)
!3104 = !DILocation(line: 702, column: 21, scope: !3103)
!3105 = !DILocation(line: 702, column: 21, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3107, file: !241, line: 702, column: 21)
!3107 = distinct !DILexicalBlock(scope: !3100, file: !241, line: 702, column: 21)
!3108 = !DILocation(line: 702, column: 21, scope: !3107)
!3109 = !DILocation(line: 703, column: 21, scope: !3028)
!3110 = !DILocation(line: 703, column: 21, scope: !3111)
!3111 = distinct !DILexicalBlock(scope: !3112, file: !241, line: 703, column: 21)
!3112 = distinct !DILexicalBlock(scope: !3028, file: !241, line: 703, column: 21)
!3113 = !DILocation(line: 703, column: 21, scope: !3112)
!3114 = !DILocation(line: 704, column: 25, scope: !3028)
!3115 = !DILocation(line: 704, column: 29, scope: !3028)
!3116 = !DILocation(line: 704, column: 23, scope: !3028)
!3117 = !DILocation(line: 686, column: 17, scope: !3029)
!3118 = distinct !{!3118, !3119, !3120}
!3119 = !DILocation(line: 686, column: 17, scope: !3030)
!3120 = !DILocation(line: 705, column: 19, scope: !3030)
!3121 = !DILocation(line: 707, column: 17, scope: !3020)
!3122 = !DILocation(line: 710, column: 9, scope: !2623)
!3123 = !DILocation(line: 712, column: 16, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !2569, file: !241, line: 712, column: 11)
!3125 = !DILocation(line: 712, column: 34, scope: !3124)
!3126 = !DILocation(line: 712, column: 37, scope: !3124)
!3127 = !DILocation(line: 712, column: 51, scope: !3124)
!3128 = !DILocation(line: 713, column: 15, scope: !3124)
!3129 = !DILocation(line: 713, column: 18, scope: !3124)
!3130 = !DILocation(line: 714, column: 14, scope: !3124)
!3131 = !DILocation(line: 714, column: 17, scope: !3124)
!3132 = !DILocation(line: 715, column: 14, scope: !3124)
!3133 = !DILocation(line: 715, column: 17, scope: !3124)
!3134 = !DILocation(line: 715, column: 33, scope: !3124)
!3135 = !DILocation(line: 715, column: 35, scope: !3124)
!3136 = !DILocation(line: 715, column: 51, scope: !3124)
!3137 = !DILocation(line: 715, column: 53, scope: !3124)
!3138 = !DILocation(line: 715, column: 47, scope: !3124)
!3139 = !DILocation(line: 715, column: 65, scope: !3124)
!3140 = !DILocation(line: 716, column: 11, scope: !3124)
!3141 = !DILocation(line: 716, column: 15, scope: !3124)
!3142 = !DILocation(line: 712, column: 11, scope: !2569)
!3143 = !DILocation(line: 717, column: 9, scope: !3124)
!3144 = !DILabel(scope: !2569, name: "store_escape", file: !241, line: 719)
!3145 = !DILocation(line: 719, column: 5, scope: !2569)
!3146 = !DILocation(line: 720, column: 7, scope: !2569)
!3147 = !DILocation(line: 720, column: 7, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !3149, file: !241, line: 720, column: 7)
!3149 = distinct !DILexicalBlock(scope: !2569, file: !241, line: 720, column: 7)
!3150 = !DILocation(line: 720, column: 7, scope: !3149)
!3151 = !DILocation(line: 720, column: 7, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !3149, file: !241, line: 720, column: 7)
!3153 = !DILocation(line: 720, column: 7, scope: !3154)
!3154 = distinct !DILexicalBlock(scope: !3152, file: !241, line: 720, column: 7)
!3155 = !DILocation(line: 720, column: 7, scope: !3156)
!3156 = distinct !DILexicalBlock(scope: !3157, file: !241, line: 720, column: 7)
!3157 = distinct !DILexicalBlock(scope: !3154, file: !241, line: 720, column: 7)
!3158 = !DILocation(line: 720, column: 7, scope: !3157)
!3159 = !DILocation(line: 720, column: 7, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3161, file: !241, line: 720, column: 7)
!3161 = distinct !DILexicalBlock(scope: !3154, file: !241, line: 720, column: 7)
!3162 = !DILocation(line: 720, column: 7, scope: !3161)
!3163 = !DILocation(line: 720, column: 7, scope: !3164)
!3164 = distinct !DILexicalBlock(scope: !3165, file: !241, line: 720, column: 7)
!3165 = distinct !DILexicalBlock(scope: !3154, file: !241, line: 720, column: 7)
!3166 = !DILocation(line: 720, column: 7, scope: !3165)
!3167 = !DILocation(line: 720, column: 7, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3169, file: !241, line: 720, column: 7)
!3169 = distinct !DILexicalBlock(scope: !3149, file: !241, line: 720, column: 7)
!3170 = !DILocation(line: 720, column: 7, scope: !3169)
!3171 = !DILabel(scope: !2569, name: "store_c", file: !241, line: 722)
!3172 = !DILocation(line: 722, column: 5, scope: !2569)
!3173 = !DILocation(line: 723, column: 7, scope: !2569)
!3174 = !DILocation(line: 723, column: 7, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !3176, file: !241, line: 723, column: 7)
!3176 = distinct !DILexicalBlock(scope: !2569, file: !241, line: 723, column: 7)
!3177 = !DILocation(line: 723, column: 7, scope: !3176)
!3178 = !DILocation(line: 723, column: 7, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !3175, file: !241, line: 723, column: 7)
!3180 = !DILocation(line: 723, column: 7, scope: !3181)
!3181 = distinct !DILexicalBlock(scope: !3182, file: !241, line: 723, column: 7)
!3182 = distinct !DILexicalBlock(scope: !3179, file: !241, line: 723, column: 7)
!3183 = !DILocation(line: 723, column: 7, scope: !3182)
!3184 = !DILocation(line: 723, column: 7, scope: !3185)
!3185 = distinct !DILexicalBlock(scope: !3186, file: !241, line: 723, column: 7)
!3186 = distinct !DILexicalBlock(scope: !3179, file: !241, line: 723, column: 7)
!3187 = !DILocation(line: 723, column: 7, scope: !3186)
!3188 = !DILocation(line: 724, column: 7, scope: !2569)
!3189 = !DILocation(line: 724, column: 7, scope: !3190)
!3190 = distinct !DILexicalBlock(scope: !3191, file: !241, line: 724, column: 7)
!3191 = distinct !DILexicalBlock(scope: !2569, file: !241, line: 724, column: 7)
!3192 = !DILocation(line: 724, column: 7, scope: !3191)
!3193 = !DILocation(line: 726, column: 13, scope: !3194)
!3194 = distinct !DILexicalBlock(scope: !2569, file: !241, line: 726, column: 11)
!3195 = !DILocation(line: 726, column: 11, scope: !2569)
!3196 = !DILocation(line: 727, column: 38, scope: !3194)
!3197 = !DILocation(line: 727, column: 9, scope: !3194)
!3198 = !DILocation(line: 728, column: 5, scope: !2569)
!3199 = !DILocation(line: 400, column: 75, scope: !2558)
!3200 = !DILocation(line: 400, column: 3, scope: !2558)
!3201 = distinct !{!3201, !2567, !3202}
!3202 = !DILocation(line: 728, column: 5, scope: !2555)
!3203 = !DILocation(line: 730, column: 7, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !2415, file: !241, line: 730, column: 7)
!3205 = !DILocation(line: 730, column: 11, scope: !3204)
!3206 = !DILocation(line: 730, column: 16, scope: !3204)
!3207 = !DILocation(line: 730, column: 19, scope: !3204)
!3208 = !DILocation(line: 730, column: 33, scope: !3204)
!3209 = !DILocation(line: 731, column: 7, scope: !3204)
!3210 = !DILocation(line: 731, column: 10, scope: !3204)
!3211 = !DILocation(line: 730, column: 7, scope: !2415)
!3212 = !DILocation(line: 732, column: 5, scope: !3204)
!3213 = !DILocation(line: 738, column: 7, scope: !3214)
!3214 = distinct !DILexicalBlock(scope: !2415, file: !241, line: 738, column: 7)
!3215 = !DILocation(line: 738, column: 21, scope: !3214)
!3216 = !DILocation(line: 738, column: 51, scope: !3214)
!3217 = !DILocation(line: 738, column: 56, scope: !3214)
!3218 = !DILocation(line: 739, column: 7, scope: !3214)
!3219 = !DILocation(line: 739, column: 10, scope: !3214)
!3220 = !DILocation(line: 738, column: 7, scope: !2415)
!3221 = !DILocation(line: 741, column: 11, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3223, file: !241, line: 741, column: 11)
!3223 = distinct !DILexicalBlock(scope: !3214, file: !241, line: 740, column: 5)
!3224 = !DILocation(line: 741, column: 11, scope: !3223)
!3225 = !DILocation(line: 742, column: 42, scope: !3222)
!3226 = !DILocation(line: 742, column: 50, scope: !3222)
!3227 = !DILocation(line: 742, column: 67, scope: !3222)
!3228 = !DILocation(line: 742, column: 72, scope: !3222)
!3229 = !DILocation(line: 744, column: 42, scope: !3222)
!3230 = !DILocation(line: 744, column: 49, scope: !3222)
!3231 = !DILocation(line: 745, column: 42, scope: !3222)
!3232 = !DILocation(line: 745, column: 54, scope: !3222)
!3233 = !DILocation(line: 742, column: 16, scope: !3222)
!3234 = !DILocation(line: 742, column: 9, scope: !3222)
!3235 = !DILocation(line: 746, column: 18, scope: !3236)
!3236 = distinct !DILexicalBlock(scope: !3222, file: !241, line: 746, column: 16)
!3237 = !DILocation(line: 746, column: 29, scope: !3236)
!3238 = !DILocation(line: 746, column: 32, scope: !3236)
!3239 = !DILocation(line: 746, column: 16, scope: !3222)
!3240 = !DILocation(line: 749, column: 24, scope: !3241)
!3241 = distinct !DILexicalBlock(scope: !3236, file: !241, line: 747, column: 9)
!3242 = !DILocation(line: 749, column: 22, scope: !3241)
!3243 = !DILocation(line: 750, column: 15, scope: !3241)
!3244 = !DILocation(line: 751, column: 11, scope: !3241)
!3245 = !DILocation(line: 753, column: 5, scope: !3223)
!3246 = !DILocation(line: 755, column: 7, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !2415, file: !241, line: 755, column: 7)
!3248 = !DILocation(line: 755, column: 20, scope: !3247)
!3249 = !DILocation(line: 755, column: 24, scope: !3247)
!3250 = !DILocation(line: 755, column: 7, scope: !2415)
!3251 = !DILocation(line: 756, column: 5, scope: !3247)
!3252 = !DILocation(line: 756, column: 13, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !3254, file: !241, line: 756, column: 5)
!3254 = distinct !DILexicalBlock(scope: !3247, file: !241, line: 756, column: 5)
!3255 = !DILocation(line: 756, column: 12, scope: !3253)
!3256 = !DILocation(line: 756, column: 5, scope: !3254)
!3257 = !DILocation(line: 757, column: 7, scope: !3253)
!3258 = !DILocation(line: 757, column: 7, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3260, file: !241, line: 757, column: 7)
!3260 = distinct !DILexicalBlock(scope: !3253, file: !241, line: 757, column: 7)
!3261 = !DILocation(line: 757, column: 7, scope: !3260)
!3262 = !DILocation(line: 756, column: 39, scope: !3253)
!3263 = !DILocation(line: 756, column: 5, scope: !3253)
!3264 = distinct !{!3264, !3256, !3265}
!3265 = !DILocation(line: 757, column: 7, scope: !3254)
!3266 = !DILocation(line: 759, column: 7, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !2415, file: !241, line: 759, column: 7)
!3268 = !DILocation(line: 759, column: 13, scope: !3267)
!3269 = !DILocation(line: 759, column: 11, scope: !3267)
!3270 = !DILocation(line: 759, column: 7, scope: !2415)
!3271 = !DILocation(line: 760, column: 5, scope: !3267)
!3272 = !DILocation(line: 760, column: 12, scope: !3267)
!3273 = !DILocation(line: 760, column: 17, scope: !3267)
!3274 = !DILocation(line: 761, column: 10, scope: !2415)
!3275 = !DILocation(line: 761, column: 3, scope: !2415)
!3276 = !DILabel(scope: !2415, name: "force_outer_quoting_style", file: !241, line: 763)
!3277 = !DILocation(line: 763, column: 2, scope: !2415)
!3278 = !DILocation(line: 766, column: 7, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !2415, file: !241, line: 766, column: 7)
!3280 = !DILocation(line: 766, column: 21, scope: !3279)
!3281 = !DILocation(line: 766, column: 51, scope: !3279)
!3282 = !DILocation(line: 766, column: 54, scope: !3279)
!3283 = !DILocation(line: 766, column: 7, scope: !2415)
!3284 = !DILocation(line: 767, column: 19, scope: !3279)
!3285 = !DILocation(line: 767, column: 5, scope: !3279)
!3286 = !DILocation(line: 768, column: 36, scope: !2415)
!3287 = !DILocation(line: 768, column: 44, scope: !2415)
!3288 = !DILocation(line: 768, column: 56, scope: !2415)
!3289 = !DILocation(line: 768, column: 61, scope: !2415)
!3290 = !DILocation(line: 769, column: 36, scope: !2415)
!3291 = !DILocation(line: 770, column: 36, scope: !2415)
!3292 = !DILocation(line: 770, column: 42, scope: !2415)
!3293 = !DILocation(line: 771, column: 36, scope: !2415)
!3294 = !DILocation(line: 771, column: 48, scope: !2415)
!3295 = !DILocation(line: 768, column: 10, scope: !2415)
!3296 = !DILocation(line: 768, column: 3, scope: !2415)
!3297 = !DILocation(line: 772, column: 1, scope: !2415)
!3298 = distinct !DISubprogram(name: "gettext_quote", scope: !241, file: !241, line: 207, type: !3299, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!3299 = !DISubroutineType(types: !3300)
!3300 = !{!49, !49, !223}
!3301 = !DILocalVariable(name: "msgid", arg: 1, scope: !3298, file: !241, line: 207, type: !49)
!3302 = !DILocation(line: 207, column: 28, scope: !3298)
!3303 = !DILocalVariable(name: "s", arg: 2, scope: !3298, file: !241, line: 207, type: !223)
!3304 = !DILocation(line: 207, column: 54, scope: !3298)
!3305 = !DILocalVariable(name: "translation", scope: !3298, file: !241, line: 209, type: !49)
!3306 = !DILocation(line: 209, column: 15, scope: !3298)
!3307 = !DILocation(line: 209, column: 29, scope: !3298)
!3308 = !DILocalVariable(name: "locale_code", scope: !3298, file: !241, line: 210, type: !49)
!3309 = !DILocation(line: 210, column: 15, scope: !3298)
!3310 = !DILocation(line: 212, column: 7, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3298, file: !241, line: 212, column: 7)
!3312 = !DILocation(line: 212, column: 22, scope: !3311)
!3313 = !DILocation(line: 212, column: 19, scope: !3311)
!3314 = !DILocation(line: 212, column: 7, scope: !3298)
!3315 = !DILocation(line: 213, column: 12, scope: !3311)
!3316 = !DILocation(line: 213, column: 5, scope: !3311)
!3317 = !DILocation(line: 233, column: 17, scope: !3298)
!3318 = !DILocation(line: 233, column: 15, scope: !3298)
!3319 = !DILocation(line: 234, column: 7, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3298, file: !241, line: 234, column: 7)
!3321 = !DILocation(line: 234, column: 7, scope: !3298)
!3322 = !DILocation(line: 235, column: 12, scope: !3320)
!3323 = !DILocation(line: 235, column: 21, scope: !3320)
!3324 = !DILocation(line: 235, column: 5, scope: !3320)
!3325 = !DILocation(line: 236, column: 7, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3298, file: !241, line: 236, column: 7)
!3327 = !DILocation(line: 236, column: 7, scope: !3298)
!3328 = !DILocation(line: 237, column: 12, scope: !3326)
!3329 = !DILocation(line: 237, column: 21, scope: !3326)
!3330 = !DILocation(line: 237, column: 5, scope: !3326)
!3331 = !DILocation(line: 239, column: 11, scope: !3298)
!3332 = !DILocation(line: 239, column: 13, scope: !3298)
!3333 = !DILocation(line: 239, column: 3, scope: !3298)
!3334 = !DILocation(line: 240, column: 1, scope: !3298)
!3335 = distinct !DISubprogram(name: "quotearg_char", scope: !241, file: !241, line: 991, type: !3336, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!3336 = !DISubroutineType(types: !3337)
!3337 = !{!6, !49, !7}
!3338 = !DILocalVariable(name: "arg", arg: 1, scope: !3335, file: !241, line: 991, type: !49)
!3339 = !DILocation(line: 991, column: 28, scope: !3335)
!3340 = !DILocalVariable(name: "ch", arg: 2, scope: !3335, file: !241, line: 991, type: !7)
!3341 = !DILocation(line: 991, column: 38, scope: !3335)
!3342 = !DILocation(line: 993, column: 29, scope: !3335)
!3343 = !DILocation(line: 993, column: 44, scope: !3335)
!3344 = !DILocation(line: 993, column: 10, scope: !3335)
!3345 = !DILocation(line: 993, column: 3, scope: !3335)
!3346 = distinct !DISubprogram(name: "quotearg_colon", scope: !241, file: !241, line: 997, type: !1851, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!3347 = !DILocalVariable(name: "arg", arg: 1, scope: !3346, file: !241, line: 997, type: !49)
!3348 = !DILocation(line: 997, column: 29, scope: !3346)
!3349 = !DILocation(line: 999, column: 25, scope: !3346)
!3350 = !DILocation(line: 999, column: 10, scope: !3346)
!3351 = !DILocation(line: 999, column: 3, scope: !3346)
!3352 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !241, file: !241, line: 1009, type: !3353, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!3353 = !DISubroutineType(types: !3354)
!3354 = !{!6, !53, !223, !49}
!3355 = !DILocalVariable(name: "n", arg: 1, scope: !3352, file: !241, line: 1009, type: !53)
!3356 = !DILocation(line: 1009, column: 29, scope: !3352)
!3357 = !DILocalVariable(name: "s", arg: 2, scope: !3352, file: !241, line: 1009, type: !223)
!3358 = !DILocation(line: 1009, column: 51, scope: !3352)
!3359 = !DILocalVariable(name: "arg", arg: 3, scope: !3352, file: !241, line: 1009, type: !49)
!3360 = !DILocation(line: 1009, column: 66, scope: !3352)
!3361 = !DILocalVariable(name: "options", scope: !3352, file: !241, line: 1011, type: !254)
!3362 = !DILocation(line: 1011, column: 26, scope: !3352)
!3363 = !DILocation(line: 1012, column: 41, scope: !3352)
!3364 = !DILocation(line: 1012, column: 13, scope: !3352)
!3365 = !DILocation(line: 1013, column: 3, scope: !3352)
!3366 = !DILocation(line: 1014, column: 30, scope: !3352)
!3367 = !DILocation(line: 1014, column: 33, scope: !3352)
!3368 = !DILocation(line: 1014, column: 10, scope: !3352)
!3369 = !DILocation(line: 1014, column: 3, scope: !3352)
!3370 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !241, file: !241, line: 193, type: !3371, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!3371 = !DISubroutineType(types: !3372)
!3372 = !{!254, !223}
!3373 = !DILocalVariable(name: "style", arg: 1, scope: !3370, file: !241, line: 193, type: !223)
!3374 = !DILocation(line: 193, column: 48, scope: !3370)
!3375 = !DILocalVariable(name: "o", scope: !3370, file: !241, line: 195, type: !254)
!3376 = !DILocation(line: 195, column: 26, scope: !3370)
!3377 = !DILocation(line: 196, column: 7, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3370, file: !241, line: 196, column: 7)
!3379 = !DILocation(line: 196, column: 13, scope: !3378)
!3380 = !DILocation(line: 196, column: 7, scope: !3370)
!3381 = !DILocation(line: 197, column: 5, scope: !3378)
!3382 = !DILocation(line: 198, column: 13, scope: !3370)
!3383 = !DILocation(line: 198, column: 5, scope: !3370)
!3384 = !DILocation(line: 198, column: 11, scope: !3370)
!3385 = !DILocation(line: 199, column: 3, scope: !3370)
!3386 = !DILocalVariable(name: "style", arg: 1, scope: !3387, file: !241, line: 193, type: !223)
!3387 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !241, file: !241, line: 193, type: !3388, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3397, retainedNodes: !4)
!3388 = !DISubroutineType(types: !3389)
!3389 = !{!3390, !223}
!3390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !3391)
!3391 = !{!3392, !3393, !3394, !3395, !3396}
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3390, file: !241, line: 68, baseType: !223, size: 32)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3390, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3390, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3390, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3390, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!3397 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !3398, nameTableKind: None)
!3398 = !{!3399, !3401, !3403, !3405, !3407, !3409, !3416, !3418}
!3399 = !DIGlobalVariableExpression(var: !3400, expr: !DIExpression())
!3400 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3397, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!3401 = !DIGlobalVariableExpression(var: !3402, expr: !DIExpression())
!3402 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3397, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!3403 = !DIGlobalVariableExpression(var: !3404, expr: !DIExpression())
!3404 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3397, file: !241, line: 1052, type: !3390, isLocal: false, isDefinition: true)
!3405 = !DIGlobalVariableExpression(var: !3406, expr: !DIExpression())
!3406 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3397, file: !241, line: 116, type: !3390, isLocal: true, isDefinition: true)
!3407 = !DIGlobalVariableExpression(var: !3408, expr: !DIExpression())
!3408 = distinct !DIGlobalVariable(name: "slot0", scope: !3397, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!3409 = !DIGlobalVariableExpression(var: !3410, expr: !DIExpression())
!3410 = distinct !DIGlobalVariable(name: "slotvec", scope: !3397, file: !241, line: 845, type: !3411, isLocal: true, isDefinition: true)
!3411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3412, size: 64)
!3412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !3413)
!3413 = !{!3414, !3415}
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3412, file: !241, line: 836, baseType: !110, size: 64)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3412, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!3416 = !DIGlobalVariableExpression(var: !3417, expr: !DIExpression())
!3417 = distinct !DIGlobalVariable(name: "nslots", scope: !3397, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!3418 = !DIGlobalVariableExpression(var: !3419, expr: !DIExpression())
!3419 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3397, file: !241, line: 844, type: !3412, isLocal: true, isDefinition: true)
!3420 = !DILocalVariable(name: "o", scope: !3387, file: !241, line: 195, type: !3390)
!3421 = distinct !DISubprogram(name: "quote_n_mem", scope: !241, file: !241, line: 1061, type: !3422, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!3422 = !DISubroutineType(types: !3423)
!3423 = !{!49, !53, !49, !110}
!3424 = !DILocalVariable(name: "n", arg: 1, scope: !3421, file: !241, line: 1061, type: !53)
!3425 = !DILocation(line: 1061, column: 18, scope: !3421)
!3426 = !DILocalVariable(name: "arg", arg: 2, scope: !3421, file: !241, line: 1061, type: !49)
!3427 = !DILocation(line: 1061, column: 33, scope: !3421)
!3428 = !DILocalVariable(name: "argsize", arg: 3, scope: !3421, file: !241, line: 1061, type: !110)
!3429 = !DILocation(line: 1061, column: 45, scope: !3421)
!3430 = !DILocation(line: 1063, column: 30, scope: !3421)
!3431 = !DILocation(line: 1063, column: 33, scope: !3421)
!3432 = !DILocation(line: 1063, column: 38, scope: !3421)
!3433 = !DILocation(line: 1063, column: 10, scope: !3421)
!3434 = !DILocation(line: 1063, column: 3, scope: !3421)
!3435 = distinct !DISubprogram(name: "quote_n", scope: !241, file: !241, line: 1073, type: !3436, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!3436 = !DISubroutineType(types: !3437)
!3437 = !{!49, !53, !49}
!3438 = !DILocalVariable(name: "n", arg: 1, scope: !3435, file: !241, line: 1073, type: !53)
!3439 = !DILocation(line: 1073, column: 14, scope: !3435)
!3440 = !DILocalVariable(name: "arg", arg: 2, scope: !3435, file: !241, line: 1073, type: !49)
!3441 = !DILocation(line: 1073, column: 29, scope: !3435)
!3442 = !DILocation(line: 1075, column: 23, scope: !3435)
!3443 = !DILocation(line: 1075, column: 26, scope: !3435)
!3444 = !DILocation(line: 1075, column: 10, scope: !3435)
!3445 = !DILocation(line: 1075, column: 3, scope: !3435)
!3446 = !DILocalVariable(name: "n", arg: 1, scope: !3447, file: !241, line: 1073, type: !53)
!3447 = distinct !DISubprogram(name: "quote_n", scope: !241, file: !241, line: 1073, type: !3436, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3448, retainedNodes: !4)
!3448 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !3449, nameTableKind: None)
!3449 = !{!3450, !3452, !3454, !3463, !3465, !3467, !3474, !3476}
!3450 = !DIGlobalVariableExpression(var: !3451, expr: !DIExpression())
!3451 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3448, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!3452 = !DIGlobalVariableExpression(var: !3453, expr: !DIExpression())
!3453 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3448, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!3454 = !DIGlobalVariableExpression(var: !3455, expr: !DIExpression())
!3455 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3448, file: !241, line: 1052, type: !3456, isLocal: false, isDefinition: true)
!3456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !3457)
!3457 = !{!3458, !3459, !3460, !3461, !3462}
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3456, file: !241, line: 68, baseType: !223, size: 32)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3456, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3456, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3456, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3456, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!3463 = !DIGlobalVariableExpression(var: !3464, expr: !DIExpression())
!3464 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3448, file: !241, line: 116, type: !3456, isLocal: true, isDefinition: true)
!3465 = !DIGlobalVariableExpression(var: !3466, expr: !DIExpression())
!3466 = distinct !DIGlobalVariable(name: "slot0", scope: !3448, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!3467 = !DIGlobalVariableExpression(var: !3468, expr: !DIExpression())
!3468 = distinct !DIGlobalVariable(name: "slotvec", scope: !3448, file: !241, line: 845, type: !3469, isLocal: true, isDefinition: true)
!3469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3470, size: 64)
!3470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !3471)
!3471 = !{!3472, !3473}
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3470, file: !241, line: 836, baseType: !110, size: 64)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3470, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!3474 = !DIGlobalVariableExpression(var: !3475, expr: !DIExpression())
!3475 = distinct !DIGlobalVariable(name: "nslots", scope: !3448, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!3476 = !DIGlobalVariableExpression(var: !3477, expr: !DIExpression())
!3477 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3448, file: !241, line: 844, type: !3470, isLocal: true, isDefinition: true)
!3478 = !DILocalVariable(name: "arg", arg: 2, scope: !3447, file: !241, line: 1073, type: !49)
!3479 = distinct !DISubprogram(name: "quote", scope: !241, file: !241, line: 1079, type: !3480, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!3480 = !DISubroutineType(types: !3481)
!3481 = !{!49, !49}
!3482 = !DILocalVariable(name: "arg", arg: 1, scope: !3479, file: !241, line: 1079, type: !49)
!3483 = !DILocation(line: 1079, column: 20, scope: !3479)
!3484 = !DILocation(line: 1081, column: 22, scope: !3479)
!3485 = !DILocation(line: 1081, column: 10, scope: !3479)
!3486 = !DILocation(line: 1081, column: 3, scope: !3479)
!3487 = distinct !DISubprogram(name: "setlocale_null_r", scope: !3488, file: !3488, line: 269, type: !3489, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !296, retainedNodes: !4)
!3488 = !DIFile(filename: "lib/setlocale_null.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3489 = !DISubroutineType(types: !3490)
!3490 = !{!53, !53, !6, !110}
!3491 = !DILocalVariable(name: "category", arg: 1, scope: !3487, file: !3488, line: 269, type: !53)
!3492 = !DILocation(line: 269, column: 23, scope: !3487)
!3493 = !DILocalVariable(name: "buf", arg: 2, scope: !3487, file: !3488, line: 269, type: !6)
!3494 = !DILocation(line: 269, column: 39, scope: !3487)
!3495 = !DILocalVariable(name: "bufsize", arg: 3, scope: !3487, file: !3488, line: 269, type: !110)
!3496 = !DILocation(line: 269, column: 51, scope: !3487)
!3497 = !DILocation(line: 274, column: 35, scope: !3487)
!3498 = !DILocation(line: 274, column: 45, scope: !3487)
!3499 = !DILocation(line: 274, column: 50, scope: !3487)
!3500 = !DILocation(line: 274, column: 10, scope: !3487)
!3501 = !DILocation(line: 274, column: 3, scope: !3487)
!3502 = distinct !DISubprogram(name: "setlocale_null_unlocked", scope: !3488, file: !3488, line: 91, type: !3489, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !296, retainedNodes: !4)
!3503 = !DILocalVariable(name: "category", arg: 1, scope: !3502, file: !3488, line: 91, type: !53)
!3504 = !DILocation(line: 91, column: 30, scope: !3502)
!3505 = !DILocalVariable(name: "buf", arg: 2, scope: !3502, file: !3488, line: 91, type: !6)
!3506 = !DILocation(line: 91, column: 46, scope: !3502)
!3507 = !DILocalVariable(name: "bufsize", arg: 3, scope: !3502, file: !3488, line: 91, type: !110)
!3508 = !DILocation(line: 91, column: 58, scope: !3502)
!3509 = !DILocalVariable(name: "result", scope: !3502, file: !3488, line: 140, type: !49)
!3510 = !DILocation(line: 140, column: 15, scope: !3502)
!3511 = !DILocation(line: 140, column: 51, scope: !3502)
!3512 = !DILocation(line: 140, column: 24, scope: !3502)
!3513 = !DILocation(line: 142, column: 7, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3502, file: !3488, line: 142, column: 7)
!3515 = !DILocation(line: 142, column: 14, scope: !3514)
!3516 = !DILocation(line: 142, column: 7, scope: !3502)
!3517 = !DILocation(line: 145, column: 11, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3519, file: !3488, line: 145, column: 11)
!3519 = distinct !DILexicalBlock(scope: !3514, file: !3488, line: 143, column: 5)
!3520 = !DILocation(line: 145, column: 19, scope: !3518)
!3521 = !DILocation(line: 145, column: 11, scope: !3519)
!3522 = !DILocation(line: 149, column: 9, scope: !3518)
!3523 = !DILocation(line: 149, column: 16, scope: !3518)
!3524 = !DILocation(line: 150, column: 7, scope: !3519)
!3525 = !DILocalVariable(name: "length", scope: !3526, file: !3488, line: 154, type: !110)
!3526 = distinct !DILexicalBlock(scope: !3514, file: !3488, line: 153, column: 5)
!3527 = !DILocation(line: 154, column: 14, scope: !3526)
!3528 = !DILocation(line: 154, column: 31, scope: !3526)
!3529 = !DILocation(line: 154, column: 23, scope: !3526)
!3530 = !DILocation(line: 155, column: 11, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3526, file: !3488, line: 155, column: 11)
!3532 = !DILocation(line: 155, column: 20, scope: !3531)
!3533 = !DILocation(line: 155, column: 18, scope: !3531)
!3534 = !DILocation(line: 155, column: 11, scope: !3526)
!3535 = !DILocation(line: 157, column: 19, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3531, file: !3488, line: 156, column: 9)
!3537 = !DILocation(line: 157, column: 24, scope: !3536)
!3538 = !DILocation(line: 157, column: 32, scope: !3536)
!3539 = !DILocation(line: 157, column: 39, scope: !3536)
!3540 = !DILocation(line: 157, column: 11, scope: !3536)
!3541 = !DILocation(line: 158, column: 11, scope: !3536)
!3542 = !DILocation(line: 162, column: 15, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3544, file: !3488, line: 162, column: 15)
!3544 = distinct !DILexicalBlock(scope: !3531, file: !3488, line: 161, column: 9)
!3545 = !DILocation(line: 162, column: 23, scope: !3543)
!3546 = !DILocation(line: 162, column: 15, scope: !3544)
!3547 = !DILocation(line: 167, column: 23, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3543, file: !3488, line: 163, column: 13)
!3549 = !DILocation(line: 167, column: 28, scope: !3548)
!3550 = !DILocation(line: 167, column: 36, scope: !3548)
!3551 = !DILocation(line: 167, column: 44, scope: !3548)
!3552 = !DILocation(line: 167, column: 15, scope: !3548)
!3553 = !DILocation(line: 168, column: 15, scope: !3548)
!3554 = !DILocation(line: 168, column: 19, scope: !3548)
!3555 = !DILocation(line: 168, column: 27, scope: !3548)
!3556 = !DILocation(line: 168, column: 32, scope: !3548)
!3557 = !DILocation(line: 169, column: 13, scope: !3548)
!3558 = !DILocation(line: 170, column: 11, scope: !3544)
!3559 = !DILocation(line: 174, column: 1, scope: !3502)
!3560 = distinct !DISubprogram(name: "setlocale_null_androidfix", scope: !3488, file: !3488, line: 60, type: !3561, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !296, retainedNodes: !4)
!3561 = !DISubroutineType(types: !3562)
!3562 = !{!49, !53}
!3563 = !DILocalVariable(name: "category", arg: 1, scope: !3560, file: !3488, line: 60, type: !53)
!3564 = !DILocation(line: 60, column: 32, scope: !3560)
!3565 = !DILocalVariable(name: "result", scope: !3560, file: !3488, line: 62, type: !49)
!3566 = !DILocation(line: 62, column: 15, scope: !3560)
!3567 = !DILocation(line: 62, column: 35, scope: !3560)
!3568 = !DILocation(line: 62, column: 24, scope: !3560)
!3569 = !DILocation(line: 87, column: 10, scope: !3560)
!3570 = !DILocation(line: 87, column: 3, scope: !3560)
!3571 = distinct !DISubprogram(name: "version_etc_arn", scope: !3572, file: !3572, line: 61, type: !3573, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !299, retainedNodes: !4)
!3572 = !DIFile(filename: "lib/version-etc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3573 = !DISubroutineType(types: !3574)
!3574 = !{null, !3575, !49, !49, !49, !3624, !110}
!3575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3576, size: 64)
!3576 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3577, line: 7, baseType: !3578)
!3577 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!3578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3579, line: 49, size: 1728, elements: !3580)
!3579 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!3580 = !{!3581, !3582, !3583, !3584, !3585, !3586, !3587, !3588, !3589, !3590, !3591, !3592, !3593, !3596, !3598, !3599, !3600, !3601, !3602, !3604, !3608, !3611, !3613, !3616, !3619, !3620, !3621, !3622, !3623}
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3578, file: !3579, line: 51, baseType: !53, size: 32)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3578, file: !3579, line: 54, baseType: !6, size: 64, offset: 64)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3578, file: !3579, line: 55, baseType: !6, size: 64, offset: 128)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3578, file: !3579, line: 56, baseType: !6, size: 64, offset: 192)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3578, file: !3579, line: 57, baseType: !6, size: 64, offset: 256)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3578, file: !3579, line: 58, baseType: !6, size: 64, offset: 320)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3578, file: !3579, line: 59, baseType: !6, size: 64, offset: 384)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3578, file: !3579, line: 60, baseType: !6, size: 64, offset: 448)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3578, file: !3579, line: 61, baseType: !6, size: 64, offset: 512)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3578, file: !3579, line: 64, baseType: !6, size: 64, offset: 576)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3578, file: !3579, line: 65, baseType: !6, size: 64, offset: 640)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3578, file: !3579, line: 66, baseType: !6, size: 64, offset: 704)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3578, file: !3579, line: 68, baseType: !3594, size: 64, offset: 768)
!3594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3595, size: 64)
!3595 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !3579, line: 36, flags: DIFlagFwdDecl)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3578, file: !3579, line: 70, baseType: !3597, size: 64, offset: 832)
!3597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3578, size: 64)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3578, file: !3579, line: 72, baseType: !53, size: 32, offset: 896)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3578, file: !3579, line: 73, baseType: !53, size: 32, offset: 928)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3578, file: !3579, line: 74, baseType: !963, size: 64, offset: 960)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3578, file: !3579, line: 77, baseType: !188, size: 16, offset: 1024)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3578, file: !3579, line: 78, baseType: !3603, size: 8, offset: 1040)
!3603 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3578, file: !3579, line: 79, baseType: !3605, size: 8, offset: 1048)
!3605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 8, elements: !3606)
!3606 = !{!3607}
!3607 = !DISubrange(count: 1)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3578, file: !3579, line: 81, baseType: !3609, size: 64, offset: 1088)
!3609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3610, size: 64)
!3610 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !3579, line: 43, baseType: null)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3578, file: !3579, line: 89, baseType: !3612, size: 64, offset: 1152)
!3612 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !12, line: 153, baseType: !13)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3578, file: !3579, line: 91, baseType: !3614, size: 64, offset: 1216)
!3614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3615, size: 64)
!3615 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !3579, line: 37, flags: DIFlagFwdDecl)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3578, file: !3579, line: 92, baseType: !3617, size: 64, offset: 1280)
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3618, size: 64)
!3618 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !3579, line: 38, flags: DIFlagFwdDecl)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3578, file: !3579, line: 93, baseType: !3597, size: 64, offset: 1344)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3578, file: !3579, line: 94, baseType: !8, size: 64, offset: 1408)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3578, file: !3579, line: 95, baseType: !110, size: 64, offset: 1472)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3578, file: !3579, line: 96, baseType: !53, size: 32, offset: 1536)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3578, file: !3579, line: 98, baseType: !105, size: 160, offset: 1568)
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!3625 = !DILocalVariable(name: "stream", arg: 1, scope: !3571, file: !3572, line: 61, type: !3575)
!3626 = !DILocation(line: 61, column: 24, scope: !3571)
!3627 = !DILocalVariable(name: "command_name", arg: 2, scope: !3571, file: !3572, line: 62, type: !49)
!3628 = !DILocation(line: 62, column: 30, scope: !3571)
!3629 = !DILocalVariable(name: "package", arg: 3, scope: !3571, file: !3572, line: 62, type: !49)
!3630 = !DILocation(line: 62, column: 56, scope: !3571)
!3631 = !DILocalVariable(name: "version", arg: 4, scope: !3571, file: !3572, line: 63, type: !49)
!3632 = !DILocation(line: 63, column: 30, scope: !3571)
!3633 = !DILocalVariable(name: "authors", arg: 5, scope: !3571, file: !3572, line: 64, type: !3624)
!3634 = !DILocation(line: 64, column: 39, scope: !3571)
!3635 = !DILocalVariable(name: "n_authors", arg: 6, scope: !3571, file: !3572, line: 64, type: !110)
!3636 = !DILocation(line: 64, column: 55, scope: !3571)
!3637 = !DILocation(line: 66, column: 7, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3571, file: !3572, line: 66, column: 7)
!3639 = !DILocation(line: 66, column: 7, scope: !3571)
!3640 = !DILocation(line: 67, column: 14, scope: !3638)
!3641 = !DILocation(line: 67, column: 38, scope: !3638)
!3642 = !DILocation(line: 67, column: 52, scope: !3638)
!3643 = !DILocation(line: 67, column: 61, scope: !3638)
!3644 = !DILocation(line: 67, column: 5, scope: !3638)
!3645 = !DILocation(line: 69, column: 14, scope: !3638)
!3646 = !DILocation(line: 69, column: 33, scope: !3638)
!3647 = !DILocation(line: 69, column: 42, scope: !3638)
!3648 = !DILocation(line: 69, column: 5, scope: !3638)
!3649 = !DILocation(line: 83, column: 12, scope: !3571)
!3650 = !DILocation(line: 83, column: 43, scope: !3571)
!3651 = !DILocation(line: 83, column: 3, scope: !3571)
!3652 = !DILocation(line: 85, column: 3, scope: !3571)
!3653 = !DILocation(line: 88, column: 12, scope: !3571)
!3654 = !DILocation(line: 88, column: 20, scope: !3571)
!3655 = !DILocation(line: 88, column: 3, scope: !3571)
!3656 = !DILocation(line: 95, column: 3, scope: !3571)
!3657 = !DILocation(line: 97, column: 11, scope: !3571)
!3658 = !DILocation(line: 97, column: 3, scope: !3571)
!3659 = !DILocation(line: 102, column: 7, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3571, file: !3572, line: 98, column: 5)
!3661 = !DILocation(line: 105, column: 16, scope: !3660)
!3662 = !DILocation(line: 105, column: 24, scope: !3660)
!3663 = !DILocation(line: 105, column: 47, scope: !3660)
!3664 = !DILocation(line: 105, column: 7, scope: !3660)
!3665 = !DILocation(line: 106, column: 7, scope: !3660)
!3666 = !DILocation(line: 109, column: 16, scope: !3660)
!3667 = !DILocation(line: 109, column: 24, scope: !3660)
!3668 = !DILocation(line: 109, column: 54, scope: !3660)
!3669 = !DILocation(line: 109, column: 66, scope: !3660)
!3670 = !DILocation(line: 109, column: 7, scope: !3660)
!3671 = !DILocation(line: 110, column: 7, scope: !3660)
!3672 = !DILocation(line: 113, column: 16, scope: !3660)
!3673 = !DILocation(line: 113, column: 24, scope: !3660)
!3674 = !DILocation(line: 114, column: 16, scope: !3660)
!3675 = !DILocation(line: 114, column: 28, scope: !3660)
!3676 = !DILocation(line: 114, column: 40, scope: !3660)
!3677 = !DILocation(line: 113, column: 7, scope: !3660)
!3678 = !DILocation(line: 115, column: 7, scope: !3660)
!3679 = !DILocation(line: 120, column: 16, scope: !3660)
!3680 = !DILocation(line: 120, column: 24, scope: !3660)
!3681 = !DILocation(line: 121, column: 16, scope: !3660)
!3682 = !DILocation(line: 121, column: 28, scope: !3660)
!3683 = !DILocation(line: 121, column: 40, scope: !3660)
!3684 = !DILocation(line: 121, column: 52, scope: !3660)
!3685 = !DILocation(line: 120, column: 7, scope: !3660)
!3686 = !DILocation(line: 122, column: 7, scope: !3660)
!3687 = !DILocation(line: 127, column: 16, scope: !3660)
!3688 = !DILocation(line: 127, column: 24, scope: !3660)
!3689 = !DILocation(line: 128, column: 16, scope: !3660)
!3690 = !DILocation(line: 128, column: 28, scope: !3660)
!3691 = !DILocation(line: 128, column: 40, scope: !3660)
!3692 = !DILocation(line: 128, column: 52, scope: !3660)
!3693 = !DILocation(line: 128, column: 64, scope: !3660)
!3694 = !DILocation(line: 127, column: 7, scope: !3660)
!3695 = !DILocation(line: 129, column: 7, scope: !3660)
!3696 = !DILocation(line: 134, column: 16, scope: !3660)
!3697 = !DILocation(line: 134, column: 24, scope: !3660)
!3698 = !DILocation(line: 135, column: 16, scope: !3660)
!3699 = !DILocation(line: 135, column: 28, scope: !3660)
!3700 = !DILocation(line: 135, column: 40, scope: !3660)
!3701 = !DILocation(line: 135, column: 52, scope: !3660)
!3702 = !DILocation(line: 135, column: 64, scope: !3660)
!3703 = !DILocation(line: 136, column: 16, scope: !3660)
!3704 = !DILocation(line: 134, column: 7, scope: !3660)
!3705 = !DILocation(line: 137, column: 7, scope: !3660)
!3706 = !DILocation(line: 142, column: 16, scope: !3660)
!3707 = !DILocation(line: 142, column: 24, scope: !3660)
!3708 = !DILocation(line: 143, column: 16, scope: !3660)
!3709 = !DILocation(line: 143, column: 28, scope: !3660)
!3710 = !DILocation(line: 143, column: 40, scope: !3660)
!3711 = !DILocation(line: 143, column: 52, scope: !3660)
!3712 = !DILocation(line: 143, column: 64, scope: !3660)
!3713 = !DILocation(line: 144, column: 16, scope: !3660)
!3714 = !DILocation(line: 144, column: 28, scope: !3660)
!3715 = !DILocation(line: 142, column: 7, scope: !3660)
!3716 = !DILocation(line: 145, column: 7, scope: !3660)
!3717 = !DILocation(line: 150, column: 16, scope: !3660)
!3718 = !DILocation(line: 150, column: 24, scope: !3660)
!3719 = !DILocation(line: 152, column: 17, scope: !3660)
!3720 = !DILocation(line: 152, column: 29, scope: !3660)
!3721 = !DILocation(line: 152, column: 41, scope: !3660)
!3722 = !DILocation(line: 152, column: 53, scope: !3660)
!3723 = !DILocation(line: 152, column: 65, scope: !3660)
!3724 = !DILocation(line: 153, column: 17, scope: !3660)
!3725 = !DILocation(line: 153, column: 29, scope: !3660)
!3726 = !DILocation(line: 153, column: 41, scope: !3660)
!3727 = !DILocation(line: 150, column: 7, scope: !3660)
!3728 = !DILocation(line: 154, column: 7, scope: !3660)
!3729 = !DILocation(line: 159, column: 16, scope: !3660)
!3730 = !DILocation(line: 159, column: 24, scope: !3660)
!3731 = !DILocation(line: 161, column: 16, scope: !3660)
!3732 = !DILocation(line: 161, column: 28, scope: !3660)
!3733 = !DILocation(line: 161, column: 40, scope: !3660)
!3734 = !DILocation(line: 161, column: 52, scope: !3660)
!3735 = !DILocation(line: 161, column: 64, scope: !3660)
!3736 = !DILocation(line: 162, column: 16, scope: !3660)
!3737 = !DILocation(line: 162, column: 28, scope: !3660)
!3738 = !DILocation(line: 162, column: 40, scope: !3660)
!3739 = !DILocation(line: 162, column: 52, scope: !3660)
!3740 = !DILocation(line: 159, column: 7, scope: !3660)
!3741 = !DILocation(line: 163, column: 7, scope: !3660)
!3742 = !DILocation(line: 170, column: 16, scope: !3660)
!3743 = !DILocation(line: 170, column: 24, scope: !3660)
!3744 = !DILocation(line: 172, column: 17, scope: !3660)
!3745 = !DILocation(line: 172, column: 29, scope: !3660)
!3746 = !DILocation(line: 172, column: 41, scope: !3660)
!3747 = !DILocation(line: 172, column: 53, scope: !3660)
!3748 = !DILocation(line: 172, column: 65, scope: !3660)
!3749 = !DILocation(line: 173, column: 17, scope: !3660)
!3750 = !DILocation(line: 173, column: 29, scope: !3660)
!3751 = !DILocation(line: 173, column: 41, scope: !3660)
!3752 = !DILocation(line: 173, column: 53, scope: !3660)
!3753 = !DILocation(line: 170, column: 7, scope: !3660)
!3754 = !DILocation(line: 174, column: 7, scope: !3660)
!3755 = !DILocation(line: 176, column: 1, scope: !3571)
!3756 = distinct !DISubprogram(name: "version_etc_va", scope: !3572, file: !3572, line: 199, type: !3757, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !299, retainedNodes: !4)
!3757 = !DISubroutineType(types: !3758)
!3758 = !{null, !3575, !49, !49, !49, !3759}
!3759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3760, size: 64)
!3760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !300, line: 192, size: 192, elements: !3761)
!3761 = !{!3762, !3763, !3764, !3765}
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !3760, file: !300, line: 192, baseType: !180, size: 32)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !3760, file: !300, line: 192, baseType: !180, size: 32, offset: 32)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !3760, file: !300, line: 192, baseType: !8, size: 64, offset: 64)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !3760, file: !300, line: 192, baseType: !8, size: 64, offset: 128)
!3766 = !DILocalVariable(name: "stream", arg: 1, scope: !3756, file: !3572, line: 199, type: !3575)
!3767 = !DILocation(line: 199, column: 23, scope: !3756)
!3768 = !DILocalVariable(name: "command_name", arg: 2, scope: !3756, file: !3572, line: 200, type: !49)
!3769 = !DILocation(line: 200, column: 29, scope: !3756)
!3770 = !DILocalVariable(name: "package", arg: 3, scope: !3756, file: !3572, line: 200, type: !49)
!3771 = !DILocation(line: 200, column: 55, scope: !3756)
!3772 = !DILocalVariable(name: "version", arg: 4, scope: !3756, file: !3572, line: 201, type: !49)
!3773 = !DILocation(line: 201, column: 29, scope: !3756)
!3774 = !DILocalVariable(name: "authors", arg: 5, scope: !3756, file: !3572, line: 201, type: !3759)
!3775 = !DILocation(line: 201, column: 46, scope: !3756)
!3776 = !DILocalVariable(name: "n_authors", scope: !3756, file: !3572, line: 203, type: !110)
!3777 = !DILocation(line: 203, column: 10, scope: !3756)
!3778 = !DILocalVariable(name: "authtab", scope: !3756, file: !3572, line: 204, type: !3779)
!3779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !49, size: 640, elements: !250)
!3780 = !DILocation(line: 204, column: 15, scope: !3756)
!3781 = !DILocation(line: 206, column: 18, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3756, file: !3572, line: 206, column: 3)
!3783 = !DILocation(line: 206, column: 8, scope: !3782)
!3784 = !DILocation(line: 207, column: 8, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3782, file: !3572, line: 206, column: 3)
!3786 = !DILocation(line: 207, column: 18, scope: !3785)
!3787 = !DILocation(line: 208, column: 10, scope: !3785)
!3788 = !DILocation(line: 208, column: 35, scope: !3785)
!3789 = !DILocation(line: 208, column: 22, scope: !3785)
!3790 = !DILocation(line: 208, column: 14, scope: !3785)
!3791 = !DILocation(line: 208, column: 33, scope: !3785)
!3792 = !DILocation(line: 208, column: 67, scope: !3785)
!3793 = !DILocation(line: 0, scope: !3785)
!3794 = !DILocation(line: 206, column: 3, scope: !3782)
!3795 = !DILocation(line: 209, column: 17, scope: !3785)
!3796 = !DILocation(line: 206, column: 3, scope: !3785)
!3797 = distinct !{!3797, !3794, !3798}
!3798 = !DILocation(line: 210, column: 5, scope: !3782)
!3799 = !DILocation(line: 211, column: 20, scope: !3756)
!3800 = !DILocation(line: 211, column: 28, scope: !3756)
!3801 = !DILocation(line: 211, column: 42, scope: !3756)
!3802 = !DILocation(line: 211, column: 51, scope: !3756)
!3803 = !DILocation(line: 212, column: 20, scope: !3756)
!3804 = !DILocation(line: 212, column: 29, scope: !3756)
!3805 = !DILocation(line: 211, column: 3, scope: !3756)
!3806 = !DILocation(line: 213, column: 1, scope: !3756)
!3807 = distinct !DISubprogram(name: "version_etc", scope: !3572, file: !3572, line: 230, type: !3808, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !299, retainedNodes: !4)
!3808 = !DISubroutineType(types: !3809)
!3809 = !{null, !3575, !49, !49, !49, null}
!3810 = !DILocalVariable(name: "stream", arg: 1, scope: !3807, file: !3572, line: 230, type: !3575)
!3811 = !DILocation(line: 230, column: 20, scope: !3807)
!3812 = !DILocalVariable(name: "command_name", arg: 2, scope: !3807, file: !3572, line: 231, type: !49)
!3813 = !DILocation(line: 231, column: 26, scope: !3807)
!3814 = !DILocalVariable(name: "package", arg: 3, scope: !3807, file: !3572, line: 231, type: !49)
!3815 = !DILocation(line: 231, column: 52, scope: !3807)
!3816 = !DILocalVariable(name: "version", arg: 4, scope: !3807, file: !3572, line: 232, type: !49)
!3817 = !DILocation(line: 232, column: 26, scope: !3807)
!3818 = !DILocalVariable(name: "authors", scope: !3807, file: !3572, line: 234, type: !3819)
!3819 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3820, line: 52, baseType: !3821)
!3820 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!3821 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3822, line: 32, baseType: !3823)
!3822 = !DIFile(filename: "/usr/lib/llvm-9/lib/clang/9.0.1/include/stdarg.h", directory: "")
!3823 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !300, line: 234, baseType: !3824)
!3824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3760, size: 192, elements: !3606)
!3825 = !DILocation(line: 234, column: 11, scope: !3807)
!3826 = !DILocation(line: 236, column: 3, scope: !3807)
!3827 = !DILocation(line: 237, column: 19, scope: !3807)
!3828 = !DILocation(line: 237, column: 27, scope: !3807)
!3829 = !DILocation(line: 237, column: 41, scope: !3807)
!3830 = !DILocation(line: 237, column: 50, scope: !3807)
!3831 = !DILocation(line: 237, column: 59, scope: !3807)
!3832 = !DILocation(line: 237, column: 3, scope: !3807)
!3833 = !DILocation(line: 238, column: 3, scope: !3807)
!3834 = !DILocation(line: 239, column: 1, scope: !3807)
!3835 = !DILocalVariable(name: "stream", arg: 1, scope: !3836, file: !3572, line: 230, type: !3839)
!3836 = distinct !DISubprogram(name: "version_etc", scope: !3572, file: !3572, line: 230, type: !3837, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3873, retainedNodes: !4)
!3837 = !DISubroutineType(types: !3838)
!3838 = !{null, !3839, !49, !49, !49, null}
!3839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3840, size: 64)
!3840 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3577, line: 7, baseType: !3841)
!3841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3579, line: 49, size: 1728, elements: !3842)
!3842 = !{!3843, !3844, !3845, !3846, !3847, !3848, !3849, !3850, !3851, !3852, !3853, !3854, !3855, !3856, !3858, !3859, !3860, !3861, !3862, !3863, !3864, !3865, !3866, !3867, !3868, !3869, !3870, !3871, !3872}
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3841, file: !3579, line: 51, baseType: !53, size: 32)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3841, file: !3579, line: 54, baseType: !6, size: 64, offset: 64)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3841, file: !3579, line: 55, baseType: !6, size: 64, offset: 128)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3841, file: !3579, line: 56, baseType: !6, size: 64, offset: 192)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3841, file: !3579, line: 57, baseType: !6, size: 64, offset: 256)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3841, file: !3579, line: 58, baseType: !6, size: 64, offset: 320)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3841, file: !3579, line: 59, baseType: !6, size: 64, offset: 384)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3841, file: !3579, line: 60, baseType: !6, size: 64, offset: 448)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3841, file: !3579, line: 61, baseType: !6, size: 64, offset: 512)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3841, file: !3579, line: 64, baseType: !6, size: 64, offset: 576)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3841, file: !3579, line: 65, baseType: !6, size: 64, offset: 640)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3841, file: !3579, line: 66, baseType: !6, size: 64, offset: 704)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3841, file: !3579, line: 68, baseType: !3594, size: 64, offset: 768)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3841, file: !3579, line: 70, baseType: !3857, size: 64, offset: 832)
!3857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3841, size: 64)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3841, file: !3579, line: 72, baseType: !53, size: 32, offset: 896)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3841, file: !3579, line: 73, baseType: !53, size: 32, offset: 928)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3841, file: !3579, line: 74, baseType: !963, size: 64, offset: 960)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3841, file: !3579, line: 77, baseType: !188, size: 16, offset: 1024)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3841, file: !3579, line: 78, baseType: !3603, size: 8, offset: 1040)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3841, file: !3579, line: 79, baseType: !3605, size: 8, offset: 1048)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3841, file: !3579, line: 81, baseType: !3609, size: 64, offset: 1088)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3841, file: !3579, line: 89, baseType: !3612, size: 64, offset: 1152)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3841, file: !3579, line: 91, baseType: !3614, size: 64, offset: 1216)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3841, file: !3579, line: 92, baseType: !3617, size: 64, offset: 1280)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3841, file: !3579, line: 93, baseType: !3857, size: 64, offset: 1344)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3841, file: !3579, line: 94, baseType: !8, size: 64, offset: 1408)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3841, file: !3579, line: 95, baseType: !110, size: 64, offset: 1472)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3841, file: !3579, line: 96, baseType: !53, size: 32, offset: 1536)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3841, file: !3579, line: 98, baseType: !105, size: 160, offset: 1568)
!3873 = distinct !DICompileUnit(language: DW_LANG_C99, file: !300, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!3874 = !DILocalVariable(name: "command_name", arg: 2, scope: !3836, file: !3572, line: 231, type: !49)
!3875 = !DILocalVariable(name: "package", arg: 3, scope: !3836, file: !3572, line: 231, type: !49)
!3876 = !DILocalVariable(name: "version", arg: 4, scope: !3836, file: !3572, line: 232, type: !49)
!3877 = !DILocalVariable(name: "authors", scope: !3836, file: !3572, line: 234, type: !3878)
!3878 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3820, line: 52, baseType: !3879)
!3879 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3822, line: 32, baseType: !3880)
!3880 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !300, line: 234, baseType: !3881)
!3881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3882, size: 192, elements: !3606)
!3882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !300, line: 192, size: 192, elements: !3883)
!3883 = !{!3884, !3885, !3886, !3887}
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !3882, file: !300, line: 192, baseType: !180, size: 32)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !3882, file: !300, line: 192, baseType: !180, size: 32, offset: 32)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !3882, file: !300, line: 192, baseType: !8, size: 64, offset: 64)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !3882, file: !300, line: 192, baseType: !8, size: 64, offset: 128)
!3888 = distinct !DISubprogram(name: "xmalloc", scope: !3889, file: !3889, line: 39, type: !3890, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !301, retainedNodes: !4)
!3889 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3890 = !DISubroutineType(types: !3891)
!3891 = !{!8, !110}
!3892 = !DILocalVariable(name: "n", arg: 1, scope: !3888, file: !3889, line: 39, type: !110)
!3893 = !DILocation(line: 39, column: 17, scope: !3888)
!3894 = !DILocalVariable(name: "p", scope: !3888, file: !3889, line: 41, type: !8)
!3895 = !DILocation(line: 41, column: 9, scope: !3888)
!3896 = !DILocation(line: 41, column: 21, scope: !3888)
!3897 = !DILocation(line: 41, column: 13, scope: !3888)
!3898 = !DILocation(line: 42, column: 8, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3888, file: !3889, line: 42, column: 7)
!3900 = !DILocation(line: 42, column: 10, scope: !3899)
!3901 = !DILocation(line: 42, column: 13, scope: !3899)
!3902 = !DILocation(line: 42, column: 15, scope: !3899)
!3903 = !DILocation(line: 42, column: 7, scope: !3888)
!3904 = !DILocation(line: 43, column: 5, scope: !3899)
!3905 = !DILocation(line: 44, column: 10, scope: !3888)
!3906 = !DILocation(line: 44, column: 3, scope: !3888)
!3907 = distinct !DISubprogram(name: "xrealloc", scope: !3889, file: !3889, line: 51, type: !3908, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !301, retainedNodes: !4)
!3908 = !DISubroutineType(types: !3909)
!3909 = !{!8, !8, !110}
!3910 = !DILocalVariable(name: "p", arg: 1, scope: !3907, file: !3889, line: 51, type: !8)
!3911 = !DILocation(line: 51, column: 17, scope: !3907)
!3912 = !DILocalVariable(name: "n", arg: 2, scope: !3907, file: !3889, line: 51, type: !110)
!3913 = !DILocation(line: 51, column: 27, scope: !3907)
!3914 = !DILocation(line: 53, column: 8, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3907, file: !3889, line: 53, column: 7)
!3916 = !DILocation(line: 53, column: 10, scope: !3915)
!3917 = !DILocation(line: 53, column: 13, scope: !3915)
!3918 = !DILocation(line: 53, column: 7, scope: !3907)
!3919 = !DILocation(line: 57, column: 13, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3915, file: !3889, line: 54, column: 5)
!3921 = !DILocation(line: 57, column: 7, scope: !3920)
!3922 = !DILocation(line: 58, column: 7, scope: !3920)
!3923 = !DILocation(line: 61, column: 16, scope: !3907)
!3924 = !DILocation(line: 61, column: 19, scope: !3907)
!3925 = !DILocation(line: 61, column: 7, scope: !3907)
!3926 = !DILocation(line: 61, column: 5, scope: !3907)
!3927 = !DILocation(line: 62, column: 8, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3907, file: !3889, line: 62, column: 7)
!3929 = !DILocation(line: 62, column: 10, scope: !3928)
!3930 = !DILocation(line: 62, column: 13, scope: !3928)
!3931 = !DILocation(line: 62, column: 7, scope: !3907)
!3932 = !DILocation(line: 63, column: 5, scope: !3928)
!3933 = !DILocation(line: 64, column: 10, scope: !3907)
!3934 = !DILocation(line: 64, column: 3, scope: !3907)
!3935 = !DILocation(line: 65, column: 1, scope: !3907)
!3936 = distinct !DISubprogram(name: "x2nrealloc", scope: !3937, file: !3937, line: 174, type: !3938, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !301, retainedNodes: !4)
!3937 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3938 = !DISubroutineType(types: !3939)
!3939 = !{!8, !8, !3940, !110}
!3940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64)
!3941 = !DILocalVariable(name: "p", arg: 1, scope: !3936, file: !3937, line: 174, type: !8)
!3942 = !DILocation(line: 174, column: 19, scope: !3936)
!3943 = !DILocalVariable(name: "pn", arg: 2, scope: !3936, file: !3937, line: 174, type: !3940)
!3944 = !DILocation(line: 174, column: 30, scope: !3936)
!3945 = !DILocalVariable(name: "s", arg: 3, scope: !3936, file: !3937, line: 174, type: !110)
!3946 = !DILocation(line: 174, column: 41, scope: !3936)
!3947 = !DILocalVariable(name: "n", scope: !3936, file: !3937, line: 176, type: !110)
!3948 = !DILocation(line: 176, column: 10, scope: !3936)
!3949 = !DILocation(line: 176, column: 15, scope: !3936)
!3950 = !DILocation(line: 176, column: 14, scope: !3936)
!3951 = !DILocation(line: 178, column: 9, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3936, file: !3937, line: 178, column: 7)
!3953 = !DILocation(line: 178, column: 7, scope: !3936)
!3954 = !DILocation(line: 180, column: 13, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3956, file: !3937, line: 180, column: 11)
!3956 = distinct !DILexicalBlock(scope: !3952, file: !3937, line: 179, column: 5)
!3957 = !DILocation(line: 180, column: 11, scope: !3956)
!3958 = !DILocation(line: 188, column: 32, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3955, file: !3937, line: 181, column: 9)
!3960 = !DILocation(line: 188, column: 30, scope: !3959)
!3961 = !DILocation(line: 188, column: 13, scope: !3959)
!3962 = !DILocation(line: 189, column: 17, scope: !3959)
!3963 = !DILocation(line: 189, column: 16, scope: !3959)
!3964 = !DILocation(line: 189, column: 13, scope: !3959)
!3965 = !DILocation(line: 190, column: 9, scope: !3959)
!3966 = !DILocation(line: 191, column: 11, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3956, file: !3937, line: 191, column: 11)
!3968 = !DILocation(line: 191, column: 11, scope: !3956)
!3969 = !DILocation(line: 192, column: 9, scope: !3967)
!3970 = !DILocation(line: 193, column: 5, scope: !3956)
!3971 = !DILocation(line: 200, column: 71, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3973, file: !3937, line: 200, column: 11)
!3973 = distinct !DILexicalBlock(scope: !3952, file: !3937, line: 195, column: 5)
!3974 = !DILocation(line: 200, column: 69, scope: !3972)
!3975 = !DILocation(line: 201, column: 14, scope: !3972)
!3976 = !DILocation(line: 201, column: 11, scope: !3972)
!3977 = !DILocation(line: 200, column: 11, scope: !3973)
!3978 = !DILocation(line: 202, column: 9, scope: !3972)
!3979 = !DILocation(line: 203, column: 12, scope: !3973)
!3980 = !DILocation(line: 203, column: 14, scope: !3973)
!3981 = !DILocation(line: 203, column: 18, scope: !3973)
!3982 = !DILocation(line: 203, column: 9, scope: !3973)
!3983 = !DILocation(line: 206, column: 9, scope: !3936)
!3984 = !DILocation(line: 206, column: 4, scope: !3936)
!3985 = !DILocation(line: 206, column: 7, scope: !3936)
!3986 = !DILocation(line: 207, column: 20, scope: !3936)
!3987 = !DILocation(line: 207, column: 23, scope: !3936)
!3988 = !DILocation(line: 207, column: 27, scope: !3936)
!3989 = !DILocation(line: 207, column: 25, scope: !3936)
!3990 = !DILocation(line: 207, column: 10, scope: !3936)
!3991 = !DILocation(line: 207, column: 3, scope: !3936)
!3992 = distinct !DISubprogram(name: "xcharalloc", scope: !3937, file: !3937, line: 216, type: !3993, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !301, retainedNodes: !4)
!3993 = !DISubroutineType(types: !3994)
!3994 = !{!6, !110}
!3995 = !DILocalVariable(name: "n", arg: 1, scope: !3992, file: !3937, line: 216, type: !110)
!3996 = !DILocation(line: 216, column: 20, scope: !3992)
!3997 = !DILocation(line: 218, column: 10, scope: !3992)
!3998 = !DILocation(line: 218, column: 3, scope: !3992)
!3999 = distinct !DISubprogram(name: "xalloc_die", scope: !4000, file: !4000, line: 32, type: !929, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !304, retainedNodes: !4)
!4000 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4001 = !DILocation(line: 34, column: 10, scope: !3999)
!4002 = !DILocation(line: 34, column: 33, scope: !3999)
!4003 = !DILocation(line: 34, column: 3, scope: !3999)
!4004 = !DILocation(line: 40, column: 3, scope: !3999)
!4005 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !4006, file: !4006, line: 86, type: !4007, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !306, retainedNodes: !4)
!4006 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4007 = !DISubroutineType(types: !4008)
!4008 = !{!110, !4009, !49, !110, !4010}
!4009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2915, size: 64)
!4010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4011, size: 64)
!4011 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !2889, line: 6, baseType: !4012)
!4012 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !2891, line: 21, baseType: !4013)
!4013 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2891, line: 13, size: 64, elements: !4014)
!4014 = !{!4015, !4016}
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !4013, file: !2891, line: 15, baseType: !53, size: 32)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !4013, file: !2891, line: 20, baseType: !4017, size: 32, offset: 32)
!4017 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4013, file: !2891, line: 16, size: 32, elements: !4018)
!4018 = !{!4019, !4020}
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !4017, file: !2891, line: 18, baseType: !180, size: 32)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !4017, file: !2891, line: 19, baseType: !82, size: 32)
!4021 = !DILocalVariable(name: "pwc", arg: 1, scope: !4005, file: !4006, line: 86, type: !4009)
!4022 = !DILocation(line: 86, column: 23, scope: !4005)
!4023 = !DILocalVariable(name: "s", arg: 2, scope: !4005, file: !4006, line: 86, type: !49)
!4024 = !DILocation(line: 86, column: 40, scope: !4005)
!4025 = !DILocalVariable(name: "n", arg: 3, scope: !4005, file: !4006, line: 86, type: !110)
!4026 = !DILocation(line: 86, column: 50, scope: !4005)
!4027 = !DILocalVariable(name: "ps", arg: 4, scope: !4005, file: !4006, line: 86, type: !4010)
!4028 = !DILocation(line: 86, column: 64, scope: !4005)
!4029 = !DILocalVariable(name: "ret", scope: !4005, file: !4006, line: 88, type: !110)
!4030 = !DILocation(line: 88, column: 10, scope: !4005)
!4031 = !DILocalVariable(name: "wc", scope: !4005, file: !4006, line: 89, type: !2915)
!4032 = !DILocation(line: 89, column: 11, scope: !4005)
!4033 = !DILocation(line: 105, column: 9, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4005, file: !4006, line: 105, column: 7)
!4035 = !DILocation(line: 105, column: 7, scope: !4005)
!4036 = !DILocation(line: 106, column: 9, scope: !4034)
!4037 = !DILocation(line: 106, column: 5, scope: !4034)
!4038 = !DILocation(line: 145, column: 18, scope: !4005)
!4039 = !DILocation(line: 145, column: 23, scope: !4005)
!4040 = !DILocation(line: 145, column: 26, scope: !4005)
!4041 = !DILocation(line: 145, column: 29, scope: !4005)
!4042 = !DILocation(line: 145, column: 9, scope: !4005)
!4043 = !DILocation(line: 145, column: 7, scope: !4005)
!4044 = !DILocation(line: 154, column: 22, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !4005, file: !4006, line: 154, column: 7)
!4046 = !DILocation(line: 154, column: 19, scope: !4045)
!4047 = !DILocation(line: 154, column: 26, scope: !4045)
!4048 = !DILocation(line: 154, column: 29, scope: !4045)
!4049 = !DILocation(line: 154, column: 31, scope: !4045)
!4050 = !DILocation(line: 154, column: 36, scope: !4045)
!4051 = !DILocation(line: 154, column: 41, scope: !4045)
!4052 = !DILocation(line: 154, column: 7, scope: !4005)
!4053 = !DILocalVariable(name: "uc", scope: !4054, file: !4006, line: 156, type: !317)
!4054 = distinct !DILexicalBlock(scope: !4045, file: !4006, line: 155, column: 5)
!4055 = !DILocation(line: 156, column: 21, scope: !4054)
!4056 = !DILocation(line: 156, column: 27, scope: !4054)
!4057 = !DILocation(line: 156, column: 26, scope: !4054)
!4058 = !DILocation(line: 157, column: 14, scope: !4054)
!4059 = !DILocation(line: 157, column: 8, scope: !4054)
!4060 = !DILocation(line: 157, column: 12, scope: !4054)
!4061 = !DILocation(line: 158, column: 7, scope: !4054)
!4062 = !DILocation(line: 162, column: 10, scope: !4005)
!4063 = !DILocation(line: 162, column: 3, scope: !4005)
!4064 = !DILocation(line: 163, column: 1, scope: !4005)
!4065 = distinct !DISubprogram(name: "extract_trimmed_name", scope: !4066, file: !4066, line: 49, type: !4067, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !309, retainedNodes: !4)
!4066 = !DIFile(filename: "lib/readutmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4067 = !DISubroutineType(types: !4068)
!4068 = !{!6, !4069}
!4069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4070, size: 64)
!4070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4071)
!4071 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !4072)
!4072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !4073)
!4073 = !{!4074, !4075, !4076, !4077, !4078, !4079, !4080, !4085, !4086, !4091, !4092}
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !4072, file: !72, line: 57, baseType: !14, size: 16)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !4072, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !4072, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !4072, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !4072, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !4072, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !4072, file: !72, line: 67, baseType: !4081, size: 32, offset: 2656)
!4081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !4082)
!4082 = !{!4083, !4084}
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !4081, file: !72, line: 45, baseType: !14, size: 16)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !4081, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !4072, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !4072, file: !72, line: 79, baseType: !4087, size: 64, offset: 2720)
!4087 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4072, file: !72, line: 75, size: 64, elements: !4088)
!4088 = !{!4089, !4090}
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4087, file: !72, line: 77, baseType: !96, size: 32)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !4087, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !4072, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !4072, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!4093 = !DILocalVariable(name: "ut", arg: 1, scope: !4065, file: !4066, line: 49, type: !4069)
!4094 = !DILocation(line: 49, column: 42, scope: !4065)
!4095 = !DILocalVariable(name: "p", scope: !4065, file: !4066, line: 51, type: !6)
!4096 = !DILocation(line: 51, column: 9, scope: !4065)
!4097 = !DILocalVariable(name: "trimmed_name", scope: !4065, file: !4066, line: 51, type: !6)
!4098 = !DILocation(line: 51, column: 13, scope: !4065)
!4099 = !DILocation(line: 53, column: 18, scope: !4065)
!4100 = !DILocation(line: 53, column: 16, scope: !4065)
!4101 = !DILocation(line: 54, column: 12, scope: !4065)
!4102 = !DILocation(line: 54, column: 26, scope: !4065)
!4103 = !DILocation(line: 54, column: 3, scope: !4065)
!4104 = !DILocation(line: 58, column: 3, scope: !4065)
!4105 = !DILocation(line: 58, column: 39, scope: !4065)
!4106 = !DILocation(line: 59, column: 12, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4065, file: !4066, line: 59, column: 3)
!4108 = !DILocation(line: 59, column: 35, scope: !4107)
!4109 = !DILocation(line: 59, column: 27, scope: !4107)
!4110 = !DILocation(line: 59, column: 25, scope: !4107)
!4111 = !DILocation(line: 59, column: 10, scope: !4107)
!4112 = !DILocation(line: 59, column: 8, scope: !4107)
!4113 = !DILocation(line: 60, column: 8, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4107, file: !4066, line: 59, column: 3)
!4115 = !DILocation(line: 60, column: 23, scope: !4114)
!4116 = !DILocation(line: 60, column: 21, scope: !4114)
!4117 = !DILocation(line: 60, column: 25, scope: !4114)
!4118 = !DILocation(line: 60, column: 28, scope: !4114)
!4119 = !DILocation(line: 60, column: 34, scope: !4114)
!4120 = !DILocation(line: 0, scope: !4114)
!4121 = !DILocation(line: 59, column: 3, scope: !4107)
!4122 = !DILocation(line: 62, column: 5, scope: !4114)
!4123 = !DILocation(line: 61, column: 9, scope: !4114)
!4124 = !DILocation(line: 61, column: 13, scope: !4114)
!4125 = !DILocation(line: 59, column: 3, scope: !4114)
!4126 = distinct !{!4126, !4121, !4127}
!4127 = !DILocation(line: 62, column: 5, scope: !4107)
!4128 = !DILocation(line: 63, column: 10, scope: !4065)
!4129 = !DILocation(line: 63, column: 3, scope: !4065)
!4130 = distinct !DISubprogram(name: "read_utmp", scope: !4066, file: !4066, line: 92, type: !4131, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !309, retainedNodes: !4)
!4131 = !DISubroutineType(types: !4132)
!4132 = !{!53, !49, !3940, !4133, !53}
!4133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4134, size: 64)
!4134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4071, size: 64)
!4135 = !DILocalVariable(name: "file", arg: 1, scope: !4130, file: !4066, line: 92, type: !49)
!4136 = !DILocation(line: 92, column: 24, scope: !4130)
!4137 = !DILocalVariable(name: "n_entries", arg: 2, scope: !4130, file: !4066, line: 92, type: !3940)
!4138 = !DILocation(line: 92, column: 38, scope: !4130)
!4139 = !DILocalVariable(name: "utmp_buf", arg: 3, scope: !4130, file: !4066, line: 92, type: !4133)
!4140 = !DILocation(line: 92, column: 63, scope: !4130)
!4141 = !DILocalVariable(name: "options", arg: 4, scope: !4130, file: !4066, line: 93, type: !53)
!4142 = !DILocation(line: 93, column: 16, scope: !4130)
!4143 = !DILocalVariable(name: "n_read", scope: !4130, file: !4066, line: 95, type: !110)
!4144 = !DILocation(line: 95, column: 10, scope: !4130)
!4145 = !DILocalVariable(name: "n_alloc", scope: !4130, file: !4066, line: 96, type: !110)
!4146 = !DILocation(line: 96, column: 10, scope: !4130)
!4147 = !DILocalVariable(name: "utmp", scope: !4130, file: !4066, line: 97, type: !4134)
!4148 = !DILocation(line: 97, column: 16, scope: !4130)
!4149 = !DILocalVariable(name: "u", scope: !4130, file: !4066, line: 98, type: !4134)
!4150 = !DILocation(line: 98, column: 16, scope: !4130)
!4151 = !DILocation(line: 104, column: 32, scope: !4130)
!4152 = !DILocation(line: 104, column: 3, scope: !4130)
!4153 = !DILocation(line: 106, column: 3, scope: !4130)
!4154 = !DILocation(line: 108, column: 3, scope: !4130)
!4155 = !DILocation(line: 108, column: 15, scope: !4130)
!4156 = !DILocation(line: 108, column: 13, scope: !4130)
!4157 = !DILocation(line: 108, column: 32, scope: !4130)
!4158 = !DILocation(line: 109, column: 31, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4130, file: !4066, line: 109, column: 9)
!4160 = !DILocation(line: 109, column: 34, scope: !4159)
!4161 = !DILocation(line: 109, column: 9, scope: !4159)
!4162 = !DILocation(line: 109, column: 9, scope: !4130)
!4163 = !DILocation(line: 111, column: 13, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4165, file: !4066, line: 111, column: 13)
!4165 = distinct !DILexicalBlock(scope: !4159, file: !4066, line: 110, column: 7)
!4166 = !DILocation(line: 111, column: 23, scope: !4164)
!4167 = !DILocation(line: 111, column: 20, scope: !4164)
!4168 = !DILocation(line: 111, column: 13, scope: !4165)
!4169 = !DILocation(line: 112, column: 30, scope: !4164)
!4170 = !DILocation(line: 112, column: 18, scope: !4164)
!4171 = !DILocation(line: 112, column: 16, scope: !4164)
!4172 = !DILocation(line: 112, column: 11, scope: !4164)
!4173 = !DILocation(line: 114, column: 9, scope: !4165)
!4174 = !DILocation(line: 114, column: 20, scope: !4165)
!4175 = !DILocation(line: 114, column: 27, scope: !4165)
!4176 = !DILocation(line: 114, column: 26, scope: !4165)
!4177 = !DILocation(line: 115, column: 7, scope: !4165)
!4178 = distinct !{!4178, !4154, !4179}
!4179 = !DILocation(line: 115, column: 7, scope: !4130)
!4180 = !DILocation(line: 117, column: 3, scope: !4130)
!4181 = !DILocation(line: 119, column: 16, scope: !4130)
!4182 = !DILocation(line: 119, column: 4, scope: !4130)
!4183 = !DILocation(line: 119, column: 14, scope: !4130)
!4184 = !DILocation(line: 120, column: 15, scope: !4130)
!4185 = !DILocation(line: 120, column: 4, scope: !4130)
!4186 = !DILocation(line: 120, column: 13, scope: !4130)
!4187 = !DILocation(line: 122, column: 3, scope: !4130)
!4188 = distinct !DISubprogram(name: "desirable_utmp_entry", scope: !4066, file: !4066, line: 69, type: !4189, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !309, retainedNodes: !4)
!4189 = !DISubroutineType(types: !4190)
!4190 = !{!18, !4069, !53}
!4191 = !DILocalVariable(name: "u", arg: 1, scope: !4188, file: !4066, line: 69, type: !4069)
!4192 = !DILocation(line: 69, column: 42, scope: !4188)
!4193 = !DILocalVariable(name: "options", arg: 2, scope: !4188, file: !4066, line: 69, type: !53)
!4194 = !DILocation(line: 69, column: 49, scope: !4188)
!4195 = !DILocalVariable(name: "user_proc", scope: !4188, file: !4066, line: 71, type: !18)
!4196 = !DILocation(line: 71, column: 8, scope: !4188)
!4197 = !DILocation(line: 71, column: 20, scope: !4188)
!4198 = !DILocation(line: 0, scope: !4188)
!4199 = !DILocation(line: 72, column: 8, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4188, file: !4066, line: 72, column: 7)
!4201 = !DILocation(line: 72, column: 16, scope: !4200)
!4202 = !DILocation(line: 72, column: 42, scope: !4200)
!4203 = !DILocation(line: 72, column: 46, scope: !4200)
!4204 = !DILocation(line: 72, column: 7, scope: !4188)
!4205 = !DILocation(line: 73, column: 5, scope: !4200)
!4206 = !DILocation(line: 74, column: 8, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4188, file: !4066, line: 74, column: 7)
!4208 = !DILocation(line: 74, column: 16, scope: !4207)
!4209 = !DILocation(line: 75, column: 7, scope: !4207)
!4210 = !DILocation(line: 75, column: 10, scope: !4207)
!4211 = !DILocation(line: 76, column: 7, scope: !4207)
!4212 = !DILocation(line: 76, column: 14, scope: !4207)
!4213 = !DILocation(line: 76, column: 12, scope: !4207)
!4214 = !DILocation(line: 77, column: 7, scope: !4207)
!4215 = !DILocation(line: 77, column: 17, scope: !4207)
!4216 = !DILocation(line: 77, column: 11, scope: !4207)
!4217 = !DILocation(line: 77, column: 32, scope: !4207)
!4218 = !DILocation(line: 77, column: 36, scope: !4207)
!4219 = !DILocation(line: 77, column: 39, scope: !4207)
!4220 = !DILocation(line: 77, column: 45, scope: !4207)
!4221 = !DILocation(line: 74, column: 7, scope: !4188)
!4222 = !DILocation(line: 78, column: 5, scope: !4207)
!4223 = !DILocation(line: 79, column: 3, scope: !4188)
!4224 = !DILocation(line: 80, column: 1, scope: !4188)
!4225 = distinct !DISubprogram(name: "c_strcasecmp", scope: !4226, file: !4226, line: 27, type: !4227, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !312, retainedNodes: !4)
!4226 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4227 = !DISubroutineType(types: !4228)
!4228 = !{!53, !49, !49}
!4229 = !DILocalVariable(name: "s1", arg: 1, scope: !4225, file: !4226, line: 27, type: !49)
!4230 = !DILocation(line: 27, column: 27, scope: !4225)
!4231 = !DILocalVariable(name: "s2", arg: 2, scope: !4225, file: !4226, line: 27, type: !49)
!4232 = !DILocation(line: 27, column: 43, scope: !4225)
!4233 = !DILocalVariable(name: "p1", scope: !4225, file: !4226, line: 29, type: !315)
!4234 = !DILocation(line: 29, column: 33, scope: !4225)
!4235 = !DILocation(line: 29, column: 62, scope: !4225)
!4236 = !DILocalVariable(name: "p2", scope: !4225, file: !4226, line: 30, type: !315)
!4237 = !DILocation(line: 30, column: 33, scope: !4225)
!4238 = !DILocation(line: 30, column: 62, scope: !4225)
!4239 = !DILocalVariable(name: "c1", scope: !4225, file: !4226, line: 31, type: !317)
!4240 = !DILocation(line: 31, column: 17, scope: !4225)
!4241 = !DILocalVariable(name: "c2", scope: !4225, file: !4226, line: 31, type: !317)
!4242 = !DILocation(line: 31, column: 21, scope: !4225)
!4243 = !DILocation(line: 33, column: 7, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4225, file: !4226, line: 33, column: 7)
!4245 = !DILocation(line: 33, column: 13, scope: !4244)
!4246 = !DILocation(line: 33, column: 10, scope: !4244)
!4247 = !DILocation(line: 33, column: 7, scope: !4225)
!4248 = !DILocation(line: 34, column: 5, scope: !4244)
!4249 = !DILocation(line: 36, column: 3, scope: !4225)
!4250 = !DILocation(line: 38, column: 24, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4225, file: !4226, line: 37, column: 5)
!4252 = !DILocation(line: 38, column: 23, scope: !4251)
!4253 = !DILocation(line: 38, column: 12, scope: !4251)
!4254 = !DILocation(line: 38, column: 10, scope: !4251)
!4255 = !DILocation(line: 39, column: 24, scope: !4251)
!4256 = !DILocation(line: 39, column: 23, scope: !4251)
!4257 = !DILocation(line: 39, column: 12, scope: !4251)
!4258 = !DILocation(line: 39, column: 10, scope: !4251)
!4259 = !DILocation(line: 41, column: 11, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4251, file: !4226, line: 41, column: 11)
!4261 = !DILocation(line: 41, column: 14, scope: !4260)
!4262 = !DILocation(line: 41, column: 11, scope: !4251)
!4263 = !DILocation(line: 42, column: 9, scope: !4260)
!4264 = !DILocation(line: 44, column: 7, scope: !4251)
!4265 = !DILocation(line: 45, column: 7, scope: !4251)
!4266 = !DILocation(line: 46, column: 5, scope: !4251)
!4267 = !DILocation(line: 47, column: 10, scope: !4225)
!4268 = !DILocation(line: 47, column: 16, scope: !4225)
!4269 = !DILocation(line: 47, column: 13, scope: !4225)
!4270 = distinct !{!4270, !4249, !4271}
!4271 = !DILocation(line: 47, column: 18, scope: !4225)
!4272 = !DILocation(line: 50, column: 12, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4225, file: !4226, line: 49, column: 7)
!4274 = !DILocation(line: 50, column: 17, scope: !4273)
!4275 = !DILocation(line: 50, column: 15, scope: !4273)
!4276 = !DILocation(line: 50, column: 5, scope: !4273)
!4277 = !DILocation(line: 56, column: 1, scope: !4225)
!4278 = distinct !DISubprogram(name: "close_stream", scope: !4279, file: !4279, line: 56, type: !4280, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !318, retainedNodes: !4)
!4279 = !DIFile(filename: "lib/close-stream.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4280 = !DISubroutineType(types: !4281)
!4281 = !{!53, !4282}
!4282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4283, size: 64)
!4283 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3577, line: 7, baseType: !4284)
!4284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3579, line: 49, size: 1728, elements: !4285)
!4285 = !{!4286, !4287, !4288, !4289, !4290, !4291, !4292, !4293, !4294, !4295, !4296, !4297, !4298, !4299, !4301, !4302, !4303, !4304, !4305, !4306, !4307, !4308, !4309, !4310, !4311, !4312, !4313, !4314, !4315}
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4284, file: !3579, line: 51, baseType: !53, size: 32)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4284, file: !3579, line: 54, baseType: !6, size: 64, offset: 64)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4284, file: !3579, line: 55, baseType: !6, size: 64, offset: 128)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4284, file: !3579, line: 56, baseType: !6, size: 64, offset: 192)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4284, file: !3579, line: 57, baseType: !6, size: 64, offset: 256)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4284, file: !3579, line: 58, baseType: !6, size: 64, offset: 320)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4284, file: !3579, line: 59, baseType: !6, size: 64, offset: 384)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4284, file: !3579, line: 60, baseType: !6, size: 64, offset: 448)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4284, file: !3579, line: 61, baseType: !6, size: 64, offset: 512)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4284, file: !3579, line: 64, baseType: !6, size: 64, offset: 576)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4284, file: !3579, line: 65, baseType: !6, size: 64, offset: 640)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4284, file: !3579, line: 66, baseType: !6, size: 64, offset: 704)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4284, file: !3579, line: 68, baseType: !3594, size: 64, offset: 768)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4284, file: !3579, line: 70, baseType: !4300, size: 64, offset: 832)
!4300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4284, size: 64)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4284, file: !3579, line: 72, baseType: !53, size: 32, offset: 896)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4284, file: !3579, line: 73, baseType: !53, size: 32, offset: 928)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4284, file: !3579, line: 74, baseType: !963, size: 64, offset: 960)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4284, file: !3579, line: 77, baseType: !188, size: 16, offset: 1024)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4284, file: !3579, line: 78, baseType: !3603, size: 8, offset: 1040)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4284, file: !3579, line: 79, baseType: !3605, size: 8, offset: 1048)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4284, file: !3579, line: 81, baseType: !3609, size: 64, offset: 1088)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4284, file: !3579, line: 89, baseType: !3612, size: 64, offset: 1152)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4284, file: !3579, line: 91, baseType: !3614, size: 64, offset: 1216)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4284, file: !3579, line: 92, baseType: !3617, size: 64, offset: 1280)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4284, file: !3579, line: 93, baseType: !4300, size: 64, offset: 1344)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4284, file: !3579, line: 94, baseType: !8, size: 64, offset: 1408)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4284, file: !3579, line: 95, baseType: !110, size: 64, offset: 1472)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4284, file: !3579, line: 96, baseType: !53, size: 32, offset: 1536)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4284, file: !3579, line: 98, baseType: !105, size: 160, offset: 1568)
!4316 = !DILocalVariable(name: "stream", arg: 1, scope: !4278, file: !4279, line: 56, type: !4282)
!4317 = !DILocation(line: 56, column: 21, scope: !4278)
!4318 = !DILocalVariable(name: "some_pending", scope: !4278, file: !4279, line: 58, type: !4319)
!4319 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18)
!4320 = !DILocation(line: 58, column: 14, scope: !4278)
!4321 = !DILocation(line: 58, column: 42, scope: !4278)
!4322 = !DILocation(line: 58, column: 30, scope: !4278)
!4323 = !DILocation(line: 58, column: 50, scope: !4278)
!4324 = !DILocalVariable(name: "prev_fail", scope: !4278, file: !4279, line: 59, type: !4319)
!4325 = !DILocation(line: 59, column: 14, scope: !4278)
!4326 = !DILocation(line: 59, column: 27, scope: !4278)
!4327 = !DILocation(line: 59, column: 43, scope: !4278)
!4328 = !DILocalVariable(name: "fclose_fail", scope: !4278, file: !4279, line: 60, type: !4319)
!4329 = !DILocation(line: 60, column: 14, scope: !4278)
!4330 = !DILocation(line: 60, column: 37, scope: !4278)
!4331 = !DILocation(line: 60, column: 29, scope: !4278)
!4332 = !DILocation(line: 60, column: 45, scope: !4278)
!4333 = !DILocation(line: 70, column: 7, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4278, file: !4279, line: 70, column: 7)
!4335 = !DILocation(line: 70, column: 17, scope: !4334)
!4336 = !DILocation(line: 70, column: 21, scope: !4334)
!4337 = !DILocation(line: 70, column: 33, scope: !4334)
!4338 = !DILocation(line: 70, column: 37, scope: !4334)
!4339 = !DILocation(line: 70, column: 50, scope: !4334)
!4340 = !DILocation(line: 70, column: 53, scope: !4334)
!4341 = !DILocation(line: 70, column: 59, scope: !4334)
!4342 = !DILocation(line: 70, column: 7, scope: !4278)
!4343 = !DILocation(line: 72, column: 13, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4345, file: !4279, line: 72, column: 11)
!4345 = distinct !DILexicalBlock(scope: !4334, file: !4279, line: 71, column: 5)
!4346 = !DILocation(line: 72, column: 11, scope: !4345)
!4347 = !DILocation(line: 73, column: 9, scope: !4344)
!4348 = !DILocation(line: 73, column: 15, scope: !4344)
!4349 = !DILocation(line: 74, column: 7, scope: !4345)
!4350 = !DILocation(line: 77, column: 3, scope: !4278)
!4351 = !DILocation(line: 78, column: 1, scope: !4278)
!4352 = !DILocalVariable(name: "stream", arg: 1, scope: !4353, file: !4279, line: 56, type: !4356)
!4353 = distinct !DISubprogram(name: "close_stream", scope: !4279, file: !4279, line: 56, type: !4354, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4390, retainedNodes: !4)
!4354 = !DISubroutineType(types: !4355)
!4355 = !{!53, !4356}
!4356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4357, size: 64)
!4357 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3577, line: 7, baseType: !4358)
!4358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3579, line: 49, size: 1728, elements: !4359)
!4359 = !{!4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368, !4369, !4370, !4371, !4372, !4373, !4375, !4376, !4377, !4378, !4379, !4380, !4381, !4382, !4383, !4384, !4385, !4386, !4387, !4388, !4389}
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4358, file: !3579, line: 51, baseType: !53, size: 32)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4358, file: !3579, line: 54, baseType: !6, size: 64, offset: 64)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4358, file: !3579, line: 55, baseType: !6, size: 64, offset: 128)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4358, file: !3579, line: 56, baseType: !6, size: 64, offset: 192)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4358, file: !3579, line: 57, baseType: !6, size: 64, offset: 256)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4358, file: !3579, line: 58, baseType: !6, size: 64, offset: 320)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4358, file: !3579, line: 59, baseType: !6, size: 64, offset: 384)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4358, file: !3579, line: 60, baseType: !6, size: 64, offset: 448)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4358, file: !3579, line: 61, baseType: !6, size: 64, offset: 512)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4358, file: !3579, line: 64, baseType: !6, size: 64, offset: 576)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4358, file: !3579, line: 65, baseType: !6, size: 64, offset: 640)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4358, file: !3579, line: 66, baseType: !6, size: 64, offset: 704)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4358, file: !3579, line: 68, baseType: !3594, size: 64, offset: 768)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4358, file: !3579, line: 70, baseType: !4374, size: 64, offset: 832)
!4374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4358, size: 64)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4358, file: !3579, line: 72, baseType: !53, size: 32, offset: 896)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4358, file: !3579, line: 73, baseType: !53, size: 32, offset: 928)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4358, file: !3579, line: 74, baseType: !963, size: 64, offset: 960)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4358, file: !3579, line: 77, baseType: !188, size: 16, offset: 1024)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4358, file: !3579, line: 78, baseType: !3603, size: 8, offset: 1040)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4358, file: !3579, line: 79, baseType: !3605, size: 8, offset: 1048)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4358, file: !3579, line: 81, baseType: !3609, size: 64, offset: 1088)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4358, file: !3579, line: 89, baseType: !3612, size: 64, offset: 1152)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4358, file: !3579, line: 91, baseType: !3614, size: 64, offset: 1216)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4358, file: !3579, line: 92, baseType: !3617, size: 64, offset: 1280)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4358, file: !3579, line: 93, baseType: !4374, size: 64, offset: 1344)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4358, file: !3579, line: 94, baseType: !8, size: 64, offset: 1408)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4358, file: !3579, line: 95, baseType: !110, size: 64, offset: 1472)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4358, file: !3579, line: 96, baseType: !53, size: 32, offset: 1536)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4358, file: !3579, line: 98, baseType: !105, size: 160, offset: 1568)
!4390 = distinct !DICompileUnit(language: DW_LANG_C99, file: !319, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!4391 = !DILocalVariable(name: "some_pending", scope: !4353, file: !4279, line: 58, type: !4319)
!4392 = !DILocalVariable(name: "prev_fail", scope: !4353, file: !4279, line: 59, type: !4319)
!4393 = !DILocalVariable(name: "fclose_fail", scope: !4353, file: !4279, line: 60, type: !4319)
!4394 = distinct !DISubprogram(name: "locale_charset", scope: !4395, file: !4395, line: 831, type: !4396, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !320, retainedNodes: !4)
!4395 = !DIFile(filename: "lib/localcharset.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4396 = !DISubroutineType(types: !4397)
!4397 = !{!49}
!4398 = !DILocalVariable(name: "codeset", scope: !4394, file: !4395, line: 833, type: !49)
!4399 = !DILocation(line: 833, column: 15, scope: !4394)
!4400 = !DILocation(line: 847, column: 13, scope: !4394)
!4401 = !DILocation(line: 847, column: 11, scope: !4394)
!4402 = !DILocation(line: 911, column: 7, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4394, file: !4395, line: 911, column: 7)
!4404 = !DILocation(line: 911, column: 15, scope: !4403)
!4405 = !DILocation(line: 911, column: 7, scope: !4394)
!4406 = !DILocation(line: 913, column: 13, scope: !4403)
!4407 = !DILocation(line: 913, column: 5, scope: !4403)
!4408 = !DILocation(line: 1070, column: 13, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4410, file: !4395, line: 1070, column: 13)
!4410 = distinct !DILexicalBlock(scope: !4411, file: !4395, line: 1060, column: 7)
!4411 = distinct !DILexicalBlock(scope: !4394, file: !4395, line: 1019, column: 3)
!4412 = !DILocation(line: 1070, column: 24, scope: !4409)
!4413 = !DILocation(line: 1070, column: 13, scope: !4410)
!4414 = !DILocation(line: 1071, column: 19, scope: !4409)
!4415 = !DILocation(line: 1071, column: 11, scope: !4409)
!4416 = !DILocation(line: 1158, column: 10, scope: !4394)
!4417 = !DILocation(line: 1158, column: 3, scope: !4394)
!4418 = !DILocalVariable(name: "codeset", scope: !4419, file: !4395, line: 833, type: !49)
!4419 = distinct !DISubprogram(name: "locale_charset", scope: !4395, file: !4395, line: 831, type: !4396, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4420, retainedNodes: !4)
!4420 = distinct !DICompileUnit(language: DW_LANG_C99, file: !321, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!4421 = distinct !DISubprogram(name: "rpl_fclose", scope: !4422, file: !4422, line: 58, type: !4423, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !322, retainedNodes: !4)
!4422 = !DIFile(filename: "lib/fclose.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4423 = !DISubroutineType(types: !4424)
!4424 = !{!53, !4425}
!4425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4426, size: 64)
!4426 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3577, line: 7, baseType: !4427)
!4427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3579, line: 49, size: 1728, elements: !4428)
!4428 = !{!4429, !4430, !4431, !4432, !4433, !4434, !4435, !4436, !4437, !4438, !4439, !4440, !4441, !4442, !4444, !4445, !4446, !4447, !4448, !4449, !4450, !4451, !4452, !4453, !4454, !4455, !4456, !4457, !4458}
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4427, file: !3579, line: 51, baseType: !53, size: 32)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4427, file: !3579, line: 54, baseType: !6, size: 64, offset: 64)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4427, file: !3579, line: 55, baseType: !6, size: 64, offset: 128)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4427, file: !3579, line: 56, baseType: !6, size: 64, offset: 192)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4427, file: !3579, line: 57, baseType: !6, size: 64, offset: 256)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4427, file: !3579, line: 58, baseType: !6, size: 64, offset: 320)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4427, file: !3579, line: 59, baseType: !6, size: 64, offset: 384)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4427, file: !3579, line: 60, baseType: !6, size: 64, offset: 448)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4427, file: !3579, line: 61, baseType: !6, size: 64, offset: 512)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4427, file: !3579, line: 64, baseType: !6, size: 64, offset: 576)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4427, file: !3579, line: 65, baseType: !6, size: 64, offset: 640)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4427, file: !3579, line: 66, baseType: !6, size: 64, offset: 704)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4427, file: !3579, line: 68, baseType: !3594, size: 64, offset: 768)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4427, file: !3579, line: 70, baseType: !4443, size: 64, offset: 832)
!4443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4427, size: 64)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4427, file: !3579, line: 72, baseType: !53, size: 32, offset: 896)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4427, file: !3579, line: 73, baseType: !53, size: 32, offset: 928)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4427, file: !3579, line: 74, baseType: !963, size: 64, offset: 960)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4427, file: !3579, line: 77, baseType: !188, size: 16, offset: 1024)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4427, file: !3579, line: 78, baseType: !3603, size: 8, offset: 1040)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4427, file: !3579, line: 79, baseType: !3605, size: 8, offset: 1048)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4427, file: !3579, line: 81, baseType: !3609, size: 64, offset: 1088)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4427, file: !3579, line: 89, baseType: !3612, size: 64, offset: 1152)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4427, file: !3579, line: 91, baseType: !3614, size: 64, offset: 1216)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4427, file: !3579, line: 92, baseType: !3617, size: 64, offset: 1280)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4427, file: !3579, line: 93, baseType: !4443, size: 64, offset: 1344)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4427, file: !3579, line: 94, baseType: !8, size: 64, offset: 1408)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4427, file: !3579, line: 95, baseType: !110, size: 64, offset: 1472)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4427, file: !3579, line: 96, baseType: !53, size: 32, offset: 1536)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4427, file: !3579, line: 98, baseType: !105, size: 160, offset: 1568)
!4459 = !DILocalVariable(name: "fp", arg: 1, scope: !4421, file: !4422, line: 58, type: !4425)
!4460 = !DILocation(line: 58, column: 19, scope: !4421)
!4461 = !DILocalVariable(name: "saved_errno", scope: !4421, file: !4422, line: 60, type: !53)
!4462 = !DILocation(line: 60, column: 7, scope: !4421)
!4463 = !DILocalVariable(name: "fd", scope: !4421, file: !4422, line: 61, type: !53)
!4464 = !DILocation(line: 61, column: 7, scope: !4421)
!4465 = !DILocalVariable(name: "result", scope: !4421, file: !4422, line: 62, type: !53)
!4466 = !DILocation(line: 62, column: 7, scope: !4421)
!4467 = !DILocation(line: 65, column: 16, scope: !4421)
!4468 = !DILocation(line: 65, column: 8, scope: !4421)
!4469 = !DILocation(line: 65, column: 6, scope: !4421)
!4470 = !DILocation(line: 66, column: 7, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4421, file: !4422, line: 66, column: 7)
!4472 = !DILocation(line: 66, column: 10, scope: !4471)
!4473 = !DILocation(line: 66, column: 7, scope: !4421)
!4474 = !DILocation(line: 67, column: 28, scope: !4471)
!4475 = !DILocation(line: 67, column: 12, scope: !4471)
!4476 = !DILocation(line: 67, column: 5, scope: !4471)
!4477 = !DILocation(line: 72, column: 9, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4421, file: !4422, line: 72, column: 7)
!4479 = !DILocation(line: 72, column: 23, scope: !4478)
!4480 = !DILocation(line: 72, column: 41, scope: !4478)
!4481 = !DILocation(line: 72, column: 33, scope: !4478)
!4482 = !DILocation(line: 72, column: 26, scope: !4478)
!4483 = !DILocation(line: 72, column: 59, scope: !4478)
!4484 = !DILocation(line: 73, column: 7, scope: !4478)
!4485 = !DILocation(line: 73, column: 18, scope: !4478)
!4486 = !DILocation(line: 73, column: 10, scope: !4478)
!4487 = !DILocation(line: 72, column: 7, scope: !4421)
!4488 = !DILocation(line: 74, column: 19, scope: !4478)
!4489 = !DILocation(line: 74, column: 17, scope: !4478)
!4490 = !DILocation(line: 74, column: 5, scope: !4478)
!4491 = !DILocation(line: 100, column: 28, scope: !4421)
!4492 = !DILocation(line: 100, column: 12, scope: !4421)
!4493 = !DILocation(line: 100, column: 10, scope: !4421)
!4494 = !DILocation(line: 105, column: 7, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4421, file: !4422, line: 105, column: 7)
!4496 = !DILocation(line: 105, column: 19, scope: !4495)
!4497 = !DILocation(line: 105, column: 7, scope: !4421)
!4498 = !DILocation(line: 107, column: 15, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4495, file: !4422, line: 106, column: 5)
!4500 = !DILocation(line: 107, column: 7, scope: !4499)
!4501 = !DILocation(line: 107, column: 13, scope: !4499)
!4502 = !DILocation(line: 108, column: 14, scope: !4499)
!4503 = !DILocation(line: 109, column: 5, scope: !4499)
!4504 = !DILocation(line: 111, column: 10, scope: !4421)
!4505 = !DILocation(line: 111, column: 3, scope: !4421)
!4506 = !DILocation(line: 112, column: 1, scope: !4421)
!4507 = !DILocalVariable(name: "fp", arg: 1, scope: !4508, file: !4422, line: 58, type: !4511)
!4508 = distinct !DISubprogram(name: "rpl_fclose", scope: !4422, file: !4422, line: 58, type: !4509, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4545, retainedNodes: !4)
!4509 = !DISubroutineType(types: !4510)
!4510 = !{!53, !4511}
!4511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4512, size: 64)
!4512 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3577, line: 7, baseType: !4513)
!4513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3579, line: 49, size: 1728, elements: !4514)
!4514 = !{!4515, !4516, !4517, !4518, !4519, !4520, !4521, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4530, !4531, !4532, !4533, !4534, !4535, !4536, !4537, !4538, !4539, !4540, !4541, !4542, !4543, !4544}
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4513, file: !3579, line: 51, baseType: !53, size: 32)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4513, file: !3579, line: 54, baseType: !6, size: 64, offset: 64)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4513, file: !3579, line: 55, baseType: !6, size: 64, offset: 128)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4513, file: !3579, line: 56, baseType: !6, size: 64, offset: 192)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4513, file: !3579, line: 57, baseType: !6, size: 64, offset: 256)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4513, file: !3579, line: 58, baseType: !6, size: 64, offset: 320)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4513, file: !3579, line: 59, baseType: !6, size: 64, offset: 384)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4513, file: !3579, line: 60, baseType: !6, size: 64, offset: 448)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4513, file: !3579, line: 61, baseType: !6, size: 64, offset: 512)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4513, file: !3579, line: 64, baseType: !6, size: 64, offset: 576)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4513, file: !3579, line: 65, baseType: !6, size: 64, offset: 640)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4513, file: !3579, line: 66, baseType: !6, size: 64, offset: 704)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4513, file: !3579, line: 68, baseType: !3594, size: 64, offset: 768)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4513, file: !3579, line: 70, baseType: !4529, size: 64, offset: 832)
!4529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4513, size: 64)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4513, file: !3579, line: 72, baseType: !53, size: 32, offset: 896)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4513, file: !3579, line: 73, baseType: !53, size: 32, offset: 928)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4513, file: !3579, line: 74, baseType: !963, size: 64, offset: 960)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4513, file: !3579, line: 77, baseType: !188, size: 16, offset: 1024)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4513, file: !3579, line: 78, baseType: !3603, size: 8, offset: 1040)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4513, file: !3579, line: 79, baseType: !3605, size: 8, offset: 1048)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4513, file: !3579, line: 81, baseType: !3609, size: 64, offset: 1088)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4513, file: !3579, line: 89, baseType: !3612, size: 64, offset: 1152)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4513, file: !3579, line: 91, baseType: !3614, size: 64, offset: 1216)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4513, file: !3579, line: 92, baseType: !3617, size: 64, offset: 1280)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4513, file: !3579, line: 93, baseType: !4529, size: 64, offset: 1344)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4513, file: !3579, line: 94, baseType: !8, size: 64, offset: 1408)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4513, file: !3579, line: 95, baseType: !110, size: 64, offset: 1472)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4513, file: !3579, line: 96, baseType: !53, size: 32, offset: 1536)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4513, file: !3579, line: 98, baseType: !105, size: 160, offset: 1568)
!4545 = distinct !DICompileUnit(language: DW_LANG_C99, file: !323, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!4546 = !DILocalVariable(name: "saved_errno", scope: !4508, file: !4422, line: 60, type: !53)
!4547 = !DILocalVariable(name: "fd", scope: !4508, file: !4422, line: 61, type: !53)
!4548 = !DILocalVariable(name: "result", scope: !4508, file: !4422, line: 62, type: !53)
!4549 = distinct !DISubprogram(name: "rpl_fflush", scope: !4550, file: !4550, line: 129, type: !4551, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !324, retainedNodes: !4)
!4550 = !DIFile(filename: "lib/fflush.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4551 = !DISubroutineType(types: !4552)
!4552 = !{!53, !4553}
!4553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4554, size: 64)
!4554 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3577, line: 7, baseType: !4555)
!4555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3579, line: 49, size: 1728, elements: !4556)
!4556 = !{!4557, !4558, !4559, !4560, !4561, !4562, !4563, !4564, !4565, !4566, !4567, !4568, !4569, !4570, !4572, !4573, !4574, !4575, !4576, !4577, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586}
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4555, file: !3579, line: 51, baseType: !53, size: 32)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4555, file: !3579, line: 54, baseType: !6, size: 64, offset: 64)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4555, file: !3579, line: 55, baseType: !6, size: 64, offset: 128)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4555, file: !3579, line: 56, baseType: !6, size: 64, offset: 192)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4555, file: !3579, line: 57, baseType: !6, size: 64, offset: 256)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4555, file: !3579, line: 58, baseType: !6, size: 64, offset: 320)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4555, file: !3579, line: 59, baseType: !6, size: 64, offset: 384)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4555, file: !3579, line: 60, baseType: !6, size: 64, offset: 448)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4555, file: !3579, line: 61, baseType: !6, size: 64, offset: 512)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4555, file: !3579, line: 64, baseType: !6, size: 64, offset: 576)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4555, file: !3579, line: 65, baseType: !6, size: 64, offset: 640)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4555, file: !3579, line: 66, baseType: !6, size: 64, offset: 704)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4555, file: !3579, line: 68, baseType: !3594, size: 64, offset: 768)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4555, file: !3579, line: 70, baseType: !4571, size: 64, offset: 832)
!4571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4555, size: 64)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4555, file: !3579, line: 72, baseType: !53, size: 32, offset: 896)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4555, file: !3579, line: 73, baseType: !53, size: 32, offset: 928)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4555, file: !3579, line: 74, baseType: !963, size: 64, offset: 960)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4555, file: !3579, line: 77, baseType: !188, size: 16, offset: 1024)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4555, file: !3579, line: 78, baseType: !3603, size: 8, offset: 1040)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4555, file: !3579, line: 79, baseType: !3605, size: 8, offset: 1048)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4555, file: !3579, line: 81, baseType: !3609, size: 64, offset: 1088)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4555, file: !3579, line: 89, baseType: !3612, size: 64, offset: 1152)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4555, file: !3579, line: 91, baseType: !3614, size: 64, offset: 1216)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4555, file: !3579, line: 92, baseType: !3617, size: 64, offset: 1280)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4555, file: !3579, line: 93, baseType: !4571, size: 64, offset: 1344)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4555, file: !3579, line: 94, baseType: !8, size: 64, offset: 1408)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4555, file: !3579, line: 95, baseType: !110, size: 64, offset: 1472)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4555, file: !3579, line: 96, baseType: !53, size: 32, offset: 1536)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4555, file: !3579, line: 98, baseType: !105, size: 160, offset: 1568)
!4587 = !DILocalVariable(name: "stream", arg: 1, scope: !4549, file: !4550, line: 129, type: !4553)
!4588 = !DILocation(line: 129, column: 19, scope: !4549)
!4589 = !DILocation(line: 150, column: 7, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4549, file: !4550, line: 150, column: 7)
!4591 = !DILocation(line: 150, column: 14, scope: !4590)
!4592 = !DILocation(line: 150, column: 22, scope: !4590)
!4593 = !DILocation(line: 150, column: 27, scope: !4590)
!4594 = !DILocation(line: 150, column: 7, scope: !4549)
!4595 = !DILocation(line: 151, column: 20, scope: !4590)
!4596 = !DILocation(line: 151, column: 12, scope: !4590)
!4597 = !DILocation(line: 151, column: 5, scope: !4590)
!4598 = !DILocation(line: 156, column: 44, scope: !4549)
!4599 = !DILocation(line: 156, column: 3, scope: !4549)
!4600 = !DILocation(line: 158, column: 18, scope: !4549)
!4601 = !DILocation(line: 158, column: 10, scope: !4549)
!4602 = !DILocation(line: 158, column: 3, scope: !4549)
!4603 = !DILocation(line: 235, column: 1, scope: !4549)
!4604 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !4550, file: !4550, line: 41, type: !4605, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !324, retainedNodes: !4)
!4605 = !DISubroutineType(types: !4606)
!4606 = !{null, !4553}
!4607 = !DILocalVariable(name: "fp", arg: 1, scope: !4604, file: !4550, line: 41, type: !4553)
!4608 = !DILocation(line: 41, column: 48, scope: !4604)
!4609 = !DILocation(line: 43, column: 7, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4604, file: !4550, line: 43, column: 7)
!4611 = !DILocation(line: 43, column: 11, scope: !4610)
!4612 = !DILocation(line: 43, column: 18, scope: !4610)
!4613 = !DILocation(line: 43, column: 7, scope: !4604)
!4614 = !DILocation(line: 45, column: 13, scope: !4610)
!4615 = !DILocation(line: 45, column: 5, scope: !4610)
!4616 = !DILocation(line: 46, column: 1, scope: !4604)
!4617 = distinct !DISubprogram(name: "rpl_fseeko", scope: !4618, file: !4618, line: 28, type: !4619, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !326, retainedNodes: !4)
!4618 = !DIFile(filename: "lib/fseeko.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4619 = !DISubroutineType(types: !4620)
!4620 = !{!53, !4621, !4655, !53}
!4621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4622, size: 64)
!4622 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3577, line: 7, baseType: !4623)
!4623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3579, line: 49, size: 1728, elements: !4624)
!4624 = !{!4625, !4626, !4627, !4628, !4629, !4630, !4631, !4632, !4633, !4634, !4635, !4636, !4637, !4638, !4640, !4641, !4642, !4643, !4644, !4645, !4646, !4647, !4648, !4649, !4650, !4651, !4652, !4653, !4654}
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4623, file: !3579, line: 51, baseType: !53, size: 32)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4623, file: !3579, line: 54, baseType: !6, size: 64, offset: 64)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4623, file: !3579, line: 55, baseType: !6, size: 64, offset: 128)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4623, file: !3579, line: 56, baseType: !6, size: 64, offset: 192)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4623, file: !3579, line: 57, baseType: !6, size: 64, offset: 256)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4623, file: !3579, line: 58, baseType: !6, size: 64, offset: 320)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4623, file: !3579, line: 59, baseType: !6, size: 64, offset: 384)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4623, file: !3579, line: 60, baseType: !6, size: 64, offset: 448)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4623, file: !3579, line: 61, baseType: !6, size: 64, offset: 512)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4623, file: !3579, line: 64, baseType: !6, size: 64, offset: 576)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4623, file: !3579, line: 65, baseType: !6, size: 64, offset: 640)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4623, file: !3579, line: 66, baseType: !6, size: 64, offset: 704)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4623, file: !3579, line: 68, baseType: !3594, size: 64, offset: 768)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4623, file: !3579, line: 70, baseType: !4639, size: 64, offset: 832)
!4639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4623, size: 64)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4623, file: !3579, line: 72, baseType: !53, size: 32, offset: 896)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4623, file: !3579, line: 73, baseType: !53, size: 32, offset: 928)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4623, file: !3579, line: 74, baseType: !963, size: 64, offset: 960)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4623, file: !3579, line: 77, baseType: !188, size: 16, offset: 1024)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4623, file: !3579, line: 78, baseType: !3603, size: 8, offset: 1040)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4623, file: !3579, line: 79, baseType: !3605, size: 8, offset: 1048)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4623, file: !3579, line: 81, baseType: !3609, size: 64, offset: 1088)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4623, file: !3579, line: 89, baseType: !3612, size: 64, offset: 1152)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4623, file: !3579, line: 91, baseType: !3614, size: 64, offset: 1216)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4623, file: !3579, line: 92, baseType: !3617, size: 64, offset: 1280)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4623, file: !3579, line: 93, baseType: !4639, size: 64, offset: 1344)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4623, file: !3579, line: 94, baseType: !8, size: 64, offset: 1408)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4623, file: !3579, line: 95, baseType: !110, size: 64, offset: 1472)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4623, file: !3579, line: 96, baseType: !53, size: 32, offset: 1536)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4623, file: !3579, line: 98, baseType: !105, size: 160, offset: 1568)
!4655 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !3820, line: 63, baseType: !963)
!4656 = !DILocalVariable(name: "fp", arg: 1, scope: !4617, file: !4618, line: 28, type: !4621)
!4657 = !DILocation(line: 28, column: 15, scope: !4617)
!4658 = !DILocalVariable(name: "offset", arg: 2, scope: !4617, file: !4618, line: 28, type: !4655)
!4659 = !DILocation(line: 28, column: 25, scope: !4617)
!4660 = !DILocalVariable(name: "whence", arg: 3, scope: !4617, file: !4618, line: 28, type: !53)
!4661 = !DILocation(line: 28, column: 37, scope: !4617)
!4662 = !DILocation(line: 52, column: 7, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4617, file: !4618, line: 52, column: 7)
!4664 = !DILocation(line: 52, column: 11, scope: !4663)
!4665 = !DILocation(line: 52, column: 27, scope: !4663)
!4666 = !DILocation(line: 52, column: 31, scope: !4663)
!4667 = !DILocation(line: 52, column: 24, scope: !4663)
!4668 = !DILocation(line: 53, column: 7, scope: !4663)
!4669 = !DILocation(line: 53, column: 10, scope: !4663)
!4670 = !DILocation(line: 53, column: 14, scope: !4663)
!4671 = !DILocation(line: 53, column: 31, scope: !4663)
!4672 = !DILocation(line: 53, column: 35, scope: !4663)
!4673 = !DILocation(line: 53, column: 28, scope: !4663)
!4674 = !DILocation(line: 54, column: 7, scope: !4663)
!4675 = !DILocation(line: 54, column: 10, scope: !4663)
!4676 = !DILocation(line: 54, column: 14, scope: !4663)
!4677 = !DILocation(line: 54, column: 28, scope: !4663)
!4678 = !DILocation(line: 52, column: 7, scope: !4617)
!4679 = !DILocalVariable(name: "pos", scope: !4680, file: !4618, line: 117, type: !4655)
!4680 = distinct !DILexicalBlock(scope: !4663, file: !4618, line: 113, column: 5)
!4681 = !DILocation(line: 117, column: 13, scope: !4680)
!4682 = !DILocation(line: 117, column: 34, scope: !4680)
!4683 = !DILocation(line: 117, column: 26, scope: !4680)
!4684 = !DILocation(line: 117, column: 39, scope: !4680)
!4685 = !DILocation(line: 117, column: 47, scope: !4680)
!4686 = !DILocation(line: 117, column: 19, scope: !4680)
!4687 = !DILocation(line: 118, column: 11, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4680, file: !4618, line: 118, column: 11)
!4689 = !DILocation(line: 118, column: 15, scope: !4688)
!4690 = !DILocation(line: 118, column: 11, scope: !4680)
!4691 = !DILocation(line: 124, column: 11, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4688, file: !4618, line: 119, column: 9)
!4693 = !DILocation(line: 129, column: 7, scope: !4680)
!4694 = !DILocation(line: 129, column: 11, scope: !4680)
!4695 = !DILocation(line: 129, column: 18, scope: !4680)
!4696 = !DILocation(line: 130, column: 21, scope: !4680)
!4697 = !DILocation(line: 130, column: 7, scope: !4680)
!4698 = !DILocation(line: 130, column: 11, scope: !4680)
!4699 = !DILocation(line: 130, column: 19, scope: !4680)
!4700 = !DILocation(line: 161, column: 7, scope: !4680)
!4701 = !DILocation(line: 163, column: 18, scope: !4617)
!4702 = !DILocation(line: 163, column: 22, scope: !4617)
!4703 = !DILocation(line: 163, column: 30, scope: !4617)
!4704 = !DILocation(line: 163, column: 10, scope: !4617)
!4705 = !DILocation(line: 163, column: 3, scope: !4617)
!4706 = !DILocation(line: 164, column: 1, scope: !4617)
