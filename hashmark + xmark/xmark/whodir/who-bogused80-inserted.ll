; ModuleID = '<stdin>'
source_filename = "ld-temp.o"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.infomap = type { i8*, i8* }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.addrinfo = type { i32, i32, i32, i32, i32, %struct.sockaddr*, i8*, %struct.addrinfo* }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.utmpx = type { i16, i32, [32 x i8], [4 x i8], [32 x i8], [256 x i8], %struct.__exit_status, i32, %struct.anon, [4 x i32], [20 x i8] }
%struct.__exit_status = type { i16, i16 }
%struct.anon = type { i32, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.__mbstate_t = type { i32, %union.anon }
%union.anon = type { i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [44 x i8] c"Usage: %s [OPTION]... [ FILE | ARG1 ARG2 ]\0A\00", align 1
@.str.2 = private unnamed_addr constant [60 x i8] c"Print information about users who are currently logged in.\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [195 x i8] c"\0A  -a, --all         same as -b -d --login -p -r -t -T -u\0A  -b, --boot        time of last system boot\0A  -d, --dead        print dead processes\0A  -H, --heading     print line of column headings\0A\00", align 1
@.str.4 = private unnamed_addr constant [50 x i8] c"  -l, --login       print system login processes\0A\00", align 1
@.str.5 = private unnamed_addr constant [187 x i8] c"      --lookup      attempt to canonicalize hostnames via DNS\0A  -m                only hostname and user associated with stdin\0A  -p, --process     print active processes spawned by init\0A\00", align 1
@.str.6 = private unnamed_addr constant [223 x i8] c"  -q, --count       all login names and number of users logged on\0A  -r, --runlevel    print current runlevel\0A  -s, --short       print only name, line, and time (default)\0A  -t, --time        print last system clock change\0A\00", align 1
@.str.7 = private unnamed_addr constant [163 x i8] c"  -T, -w, --mesg    add user's message status as +, - or ?\0A  -u, --users       list users logged in\0A      --message     same as -T\0A      --writable    same as -T\0A\00", align 1
@.str.8 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.9 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.10 = private unnamed_addr constant [125 x i8] c"\0AIf FILE is not specified, use %s.  %s as FILE is common.\0AIf ARG1 ARG2 given, -m presumed: 'am i' or 'mom likes' are usual.\0A\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"/var/run/utmp\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"/var/log/wtmp\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"who\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.27, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.33 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.18 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.34 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.36 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.37 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.38 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.39 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.14 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.25 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.26 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.27 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.16 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"abdlmpqrstuwHT\00", align 1
@longopts = internal constant [18 x %struct.option] [%struct.option { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0), i32 0, i32* null, i32 97 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0), i32 0, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i32 0, i32 0), i32 0, i32* null, i32 113 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i32 0, i32 0), i32 0, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i32 0, i32 0), i32 0, i32* null, i32 72 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i32 0, i32 0), i32 0, i32* null, i32 108 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i32 0, i32 0), i32 0, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0), i32 0, i32* null, i32 112 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i32 0, i32 0), i32 0, i32* null, i32 114 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i32 0, i32 0), i32 0, i32* null, i32 115 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i32 0, i32 0), i32 0, i32* null, i32 116 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i32 0, i32 0), i32 0, i32* null, i32 117 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.56, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !0
@need_boottime = internal global i8 0, align 1, !dbg !31
@need_deadprocs = internal global i8 0, align 1, !dbg !33
@need_login = internal global i8 0, align 1, !dbg !35
@need_initspawn = internal global i8 0, align 1, !dbg !37
@need_runlevel = internal global i8 0, align 1, !dbg !41
@need_clockchange = internal global i8 0, align 1, !dbg !39
@need_users = internal global i8 0, align 1, !dbg !43
@include_mesg = internal global i8 0, align 1, !dbg !27
@include_idle = internal global i8 0, align 1, !dbg !23
@include_exit = internal global i8 0, align 1, !dbg !29
@include_heading = internal global i8 0, align 1, !dbg !25
@my_line_only = internal global i8 0, align 1, !dbg !45
@short_list = internal global i8 0, align 1, !dbg !19
@short_output = internal global i8 0, align 1, !dbg !21
@do_lookup = internal global i8 0, align 1, !dbg !16
@.str.19 = private unnamed_addr constant [17 x i8] c"Joseph Arceneaux\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str.21 = private unnamed_addr constant [14 x i8] c"Michael Stone\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"%Y-%m-%d %H:%M\00", align 1
@time_format = internal global i8* null, align 8, !dbg !47
@time_format_width = internal global i32 0, align 4, !dbg !51
@.str.23 = private unnamed_addr constant [12 x i8] c"%b %e %H:%M\00", align 1
@optind = external dso_local global i32, align 4
@.str.24 = private unnamed_addr constant [17 x i8] c"extra operand %s\00", align 1
@.str.57 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"/dev/\00", align 1
@.str.74 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@print_deadprocs.exitstr = internal global i8* null, align 8, !dbg !138
@.str.92 = private unnamed_addr constant [6 x i8] c"term=\00", align 1
@.str.93 = private unnamed_addr constant [6 x i8] c"exit=\00", align 1
@.str.94 = private unnamed_addr constant [10 x i8] c"%s%d %s%d\00", align 1
@print_line.mesg = internal global [3 x i8] c" x\00", align 1, !dbg !54
@.str.69 = private unnamed_addr constant [6 x i8] c" %-6s\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c" %10s\00", align 1
@.str.71 = private unnamed_addr constant [7 x i8] c" %-12s\00", align 1
@.str.73 = private unnamed_addr constant [5 x i8] c"   .\00", align 1
@.str.72 = private unnamed_addr constant [33 x i8] c"%-8.*s%s %-12.*s %-*s%s%s %-8s%s\00", align 1
@time_string.buf = internal global [33 x i8] zeroinitializer, align 16, !dbg !123
@.str.90 = private unnamed_addr constant [4 x i8] c"id=\00", align 1
@.str.91 = private unnamed_addr constant [6 x i8] c"LOGIN\00", align 1
@.str.89 = private unnamed_addr constant [13 x i8] c"clock change\00", align 1
@.str.88 = private unnamed_addr constant [12 x i8] c"system boot\00", align 1
@print_runlevel.runlevline = internal global i8* null, align 8, !dbg !131
@.str.84 = private unnamed_addr constant [10 x i8] c"run-level\00", align 1
@.str.85 = private unnamed_addr constant [6 x i8] c"%s %c\00", align 1
@print_runlevel.comment = internal global i8* null, align 8, !dbg !136
@.str.86 = private unnamed_addr constant [6 x i8] c"last=\00", align 1
@.str.87 = private unnamed_addr constant [5 x i8] c"%s%c\00", align 1
@.str.75 = private unnamed_addr constant [5 x i8] c"%.*s\00", align 1
@.str.76 = private unnamed_addr constant [4 x i8] c"  ?\00", align 1
@print_user.hostlen = internal global i64 0, align 8, !dbg !108
@print_user.hoststr = internal global i8* null, align 8, !dbg !62
@.str.77 = private unnamed_addr constant [8 x i8] c"(%s:%s)\00", align 1
@.str.78 = private unnamed_addr constant [5 x i8] c"(%s)\00", align 1
@idle_string.now = internal global i64 -9223372036854775808, align 8, !dbg !113
@.str.79 = private unnamed_addr constant [6 x i8] c"  .  \00", align 1
@.str.80 = private unnamed_addr constant [30 x i8] c"seconds_idle / (60 * 60) < 24\00", align 1
@.str.81 = private unnamed_addr constant [10 x i8] c"src/who.c\00", align 1
@__PRETTY_FUNCTION__.idle_string = private unnamed_addr constant [40 x i8] c"const char *idle_string(time_t, time_t)\00", align 1
@idle_string.idle_hhmm = internal global [6 x i8] zeroinitializer, align 1, !dbg !118
@.str.82 = private unnamed_addr constant [10 x i8] c"%02d:%02d\00", align 1
@.str.83 = private unnamed_addr constant [6 x i8] c" old \00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c"NAME\00", align 1
@.str.63 = private unnamed_addr constant [5 x i8] c"LINE\00", align 1
@.str.64 = private unnamed_addr constant [5 x i8] c"TIME\00", align 1
@.str.65 = private unnamed_addr constant [5 x i8] c"IDLE\00", align 1
@.str.66 = private unnamed_addr constant [4 x i8] c"PID\00", align 1
@.str.67 = private unnamed_addr constant [8 x i8] c"COMMENT\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"EXIT\00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.59 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.60 = private unnamed_addr constant [14 x i8] c"\0A# users=%lu\0A\00", align 1
@.str.40 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c"boot\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.44 = private unnamed_addr constant [8 x i8] c"heading\00", align 1
@.str.45 = private unnamed_addr constant [6 x i8] c"login\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"lookup\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"message\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"mesg\00", align 1
@.str.49 = private unnamed_addr constant [8 x i8] c"process\00", align 1
@.str.50 = private unnamed_addr constant [9 x i8] c"runlevel\00", align 1
@.str.51 = private unnamed_addr constant [6 x i8] c"short\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"users\00", align 1
@.str.54 = private unnamed_addr constant [9 x i8] c"writable\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@Version = internal global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.95, i32 0, i32 0), align 8, !dbg !153
@.str.95 = private unnamed_addr constant [5 x i8] c"8.32\00", align 1
@last_cherror = internal global i32 0, align 4, !dbg !158
@canon_host_r.hints = internal global %struct.addrinfo zeroinitializer, align 8, !dbg !163
@ignore_EPIPE = internal global i8 0, align 1, !dbg !196
@.str.102 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@file_name = internal global i8* null, align 8, !dbg !201
@.str.1.103 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.104 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = internal global i32 1, align 4, !dbg !204
@.str.109 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.110 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.115 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.116 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.117 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8
@program_name = internal global i8* null, align 8, !dbg !211
@program_invocation_name = external dso_local global i8*, align 8
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !218
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !266
@nslots = internal global i32 1, align 4, !dbg !273
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !275
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !264
@.str.10.120 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.121 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.122 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.123 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.124 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.125 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.126 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.127 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.128 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@quote_quoting_options = internal global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !252
@.str.137 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.138 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.139 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.140 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4.141 = private unnamed_addr constant [171 x i8] c"License GPLv3+: GNU GPL version 3 or later <%s>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\00", align 1
@.str.5.142 = private unnamed_addr constant [34 x i8] c"https://gnu.org/licenses/gpl.html\00", align 1
@.str.6.143 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.7.144 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.8.145 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.9.146 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.10.147 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.11.148 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.12.149 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.13.150 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.14.151 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.15.152 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@version_etc_copyright = internal constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !277
@.str.1.165 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.166 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.179 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.180 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@inVal0 = global i32 0
@inVal1 = global i8** null
@.compVal0 = private global [3 x i8] c"-m\00"
@.compVal1 = private global [4 x i8] c"-ma\00"
@.compVal2 = private global [4 x i8] c"-Hm\00"
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @usage(i32) #0 !dbg !334 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !337, metadata !DIExpression()), !dbg !338
  %3 = load i32, i32* %2, align 4, !dbg !339
  %4 = icmp ne i32 %3, 0, !dbg !341
  br i1 %4, label %5, label %60, !dbg !342

5:                                                ; preds = %1
  %6 = load i32, i32* @x
  %7 = load i32, i32* @y
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = load i32, i32* @x
  %15 = load i32, i32* @y
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %22, !dbg !343

22:                                               ; preds = %originalBBpart2
  %23 = load i32, i32* @x
  %24 = load i32, i32* @y
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %22, %originalBB1alteredBB
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !344
  %32 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #10, !dbg !344
  %33 = load i8*, i8** @program_name, align 8, !dbg !344
  %34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* %32, i8* %33), !dbg !344
  %35 = load i32, i32* @x
  %36 = load i32, i32* @y
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %43, !dbg !344

43:                                               ; preds = %originalBBpart24
  %44 = load i32, i32* @x
  %45 = load i32, i32* @y
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %43, %originalBB6alteredBB
  %52 = load i32, i32* @x
  %53 = load i32, i32* @y
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %106, !dbg !344

60:                                               ; preds = %1
  %61 = load i32, i32* @x
  %62 = load i32, i32* @y
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %60, %originalBB10alteredBB
  %69 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0)) #10, !dbg !346
  %70 = load i8*, i8** @program_name, align 8, !dbg !348
  %71 = call i32 (i8*, ...) @printf(i8* %69, i8* %70), !dbg !349
  %72 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !350
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !350
  %74 = call i32 @fputs_unlocked(i8* %72, %struct._IO_FILE* %73), !dbg !350
  %75 = call i8* @gettext(i8* getelementptr inbounds ([195 x i8], [195 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !351
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !351
  %77 = call i32 @fputs_unlocked(i8* %75, %struct._IO_FILE* %76), !dbg !351
  %78 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i64 0, i64 0)) #10, !dbg !352
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !352
  %80 = call i32 @fputs_unlocked(i8* %78, %struct._IO_FILE* %79), !dbg !352
  %81 = call i8* @gettext(i8* getelementptr inbounds ([187 x i8], [187 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !353
  %82 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !353
  %83 = call i32 @fputs_unlocked(i8* %81, %struct._IO_FILE* %82), !dbg !353
  %84 = call i8* @gettext(i8* getelementptr inbounds ([223 x i8], [223 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !354
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !354
  %86 = call i32 @fputs_unlocked(i8* %84, %struct._IO_FILE* %85), !dbg !354
  %87 = call i8* @gettext(i8* getelementptr inbounds ([163 x i8], [163 x i8]* @.str.7, i64 0, i64 0)) #10, !dbg !355
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !355
  %89 = call i32 @fputs_unlocked(i8* %87, %struct._IO_FILE* %88), !dbg !355
  %90 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8, i64 0, i64 0)) #10, !dbg !356
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !356
  %92 = call i32 @fputs_unlocked(i8* %90, %struct._IO_FILE* %91), !dbg !356
  %93 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !357
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !357
  %95 = call i32 @fputs_unlocked(i8* %93, %struct._IO_FILE* %94), !dbg !357
  %96 = call i8* @gettext(i8* getelementptr inbounds ([125 x i8], [125 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !358
  %97 = call i32 (i8*, ...) @printf(i8* %96, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0)), !dbg !359
  call void @emit_ancillary_info(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)), !dbg !360
  %98 = load i32, i32* @x
  %99 = load i32, i32* @y
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %106

106:                                              ; preds = %originalBBpart212, %originalBBpart28
  %107 = load i32, i32* @x
  %108 = load i32, i32* @y
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %106, %originalBB14alteredBB
  %115 = load i32, i32* %2, align 4, !dbg !361
  call void @exit(i32 %115) #12, !dbg !362
  %116 = load i32, i32* @x
  %117 = load i32, i32* @y
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  unreachable, !dbg !362

originalBBalteredBB:                              ; preds = %originalBB, %5
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %22
  %124 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !344
  %125 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #10, !dbg !344
  %126 = load i8*, i8** @program_name, align 8, !dbg !344
  %127 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %124, i8* %125, i8* %126), !dbg !344
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %43
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %60
  %128 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0)) #10, !dbg !346
  %129 = load i8*, i8** @program_name, align 8, !dbg !348
  %130 = call i32 (i8*, ...) @printf(i8* %128, i8* %129), !dbg !349
  %131 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !350
  %132 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !350
  %133 = call i32 @fputs_unlocked(i8* %131, %struct._IO_FILE* %132), !dbg !350
  %134 = call i8* @gettext(i8* getelementptr inbounds ([195 x i8], [195 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !351
  %135 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !351
  %136 = call i32 @fputs_unlocked(i8* %134, %struct._IO_FILE* %135), !dbg !351
  %137 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i64 0, i64 0)) #10, !dbg !352
  %138 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !352
  %139 = call i32 @fputs_unlocked(i8* %137, %struct._IO_FILE* %138), !dbg !352
  %140 = call i8* @gettext(i8* getelementptr inbounds ([187 x i8], [187 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !353
  %141 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !353
  %142 = call i32 @fputs_unlocked(i8* %140, %struct._IO_FILE* %141), !dbg !353
  %143 = call i8* @gettext(i8* getelementptr inbounds ([223 x i8], [223 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !354
  %144 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !354
  %145 = call i32 @fputs_unlocked(i8* %143, %struct._IO_FILE* %144), !dbg !354
  %146 = call i8* @gettext(i8* getelementptr inbounds ([163 x i8], [163 x i8]* @.str.7, i64 0, i64 0)) #10, !dbg !355
  %147 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !355
  %148 = call i32 @fputs_unlocked(i8* %146, %struct._IO_FILE* %147), !dbg !355
  %149 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8, i64 0, i64 0)) #10, !dbg !356
  %150 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !356
  %151 = call i32 @fputs_unlocked(i8* %149, %struct._IO_FILE* %150), !dbg !356
  %152 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !357
  %153 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !357
  %154 = call i32 @fputs_unlocked(i8* %152, %struct._IO_FILE* %153), !dbg !357
  %155 = call i8* @gettext(i8* getelementptr inbounds ([125 x i8], [125 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !358
  %156 = call i32 (i8*, ...) @printf(i8* %155, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0)), !dbg !359
  call void @emit_ancillary_info(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)), !dbg !360
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %106
  %157 = load i32, i32* %2, align 4, !dbg !361
  call void @exit(i32 %157) #12, !dbg !362
  br label %originalBB14
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8*) #4 !dbg !363 {
  %2 = load i32, i32* @x.1
  %3 = load i32, i32* @y.2
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  %11 = alloca [7 x %struct.infomap], align 16
  %12 = alloca i8*, align 8
  %13 = alloca %struct.infomap*, align 8
  %14 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !367, metadata !DIExpression()), !dbg !368
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %11, metadata !369, metadata !DIExpression()), !dbg !378
  %15 = bitcast [7 x %struct.infomap]* %11 to i8*, !dbg !378
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %15, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !378
  call void @llvm.dbg.declare(metadata i8** %12, metadata !379, metadata !DIExpression()), !dbg !380
  %16 = load i8*, i8** %10, align 8, !dbg !381
  store i8* %16, i8** %12, align 8, !dbg !380
  call void @llvm.dbg.declare(metadata %struct.infomap** %13, metadata !382, metadata !DIExpression()), !dbg !384
  %17 = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %11, i64 0, i64 0, !dbg !385
  store %struct.infomap* %17, %struct.infomap** %13, align 8, !dbg !384
  %18 = load i32, i32* @x.1
  %19 = load i32, i32* @y.2
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %26, !dbg !386

26:                                               ; preds = %originalBBpart212, %originalBBpart2
  %27 = load i32, i32* @x.1
  %28 = load i32, i32* @y.2
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !387
  %36 = getelementptr inbounds %struct.infomap, %struct.infomap* %35, i32 0, i32 0, !dbg !388
  %37 = load i8*, i8** %36, align 8, !dbg !388
  %38 = icmp ne i8* %37, null, !dbg !387
  %39 = load i32, i32* @x.1
  %40 = load i32, i32* @y.2
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %38, label %47, label %71, !dbg !389

47:                                               ; preds = %originalBBpart24
  %48 = load i32, i32* @x.1
  %49 = load i32, i32* @y.2
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %47, %originalBB6alteredBB
  %56 = load i8*, i8** %10, align 8, !dbg !390
  %57 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !390
  %58 = getelementptr inbounds %struct.infomap, %struct.infomap* %57, i32 0, i32 0, !dbg !390
  %59 = load i8*, i8** %58, align 8, !dbg !390
  %60 = call i32 @strcmp(i8* %56, i8* %59) #13, !dbg !390
  %61 = icmp eq i32 %60, 0, !dbg !390
  %62 = xor i1 %61, true, !dbg !391
  %63 = load i32, i32* @x.1
  %64 = load i32, i32* @y.2
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %71

71:                                               ; preds = %originalBBpart28, %originalBBpart24
  %72 = phi i1 [ false, %originalBBpart24 ], [ %62, %originalBBpart28 ], !dbg !392
  br i1 %72, label %73, label %92, !dbg !386

73:                                               ; preds = %71
  %74 = load i32, i32* @x.1
  %75 = load i32, i32* @y.2
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %73, %originalBB10alteredBB
  %82 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !393
  %83 = getelementptr inbounds %struct.infomap, %struct.infomap* %82, i32 1, !dbg !393
  store %struct.infomap* %83, %struct.infomap** %13, align 8, !dbg !393
  %84 = load i32, i32* @x.1
  %85 = load i32, i32* @y.2
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %26, !dbg !386, !llvm.loop !394

92:                                               ; preds = %71
  %93 = load i32, i32* @x.1
  %94 = load i32, i32* @y.2
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %92, %originalBB14alteredBB
  %101 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !395
  %102 = getelementptr inbounds %struct.infomap, %struct.infomap* %101, i32 0, i32 1, !dbg !397
  %103 = load i8*, i8** %102, align 8, !dbg !397
  %104 = icmp ne i8* %103, null, !dbg !395
  %105 = load i32, i32* @x.1
  %106 = load i32, i32* @y.2
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %104, label %113, label %133, !dbg !398

113:                                              ; preds = %originalBBpart216
  %114 = load i32, i32* @x.1
  %115 = load i32, i32* @y.2
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %113, %originalBB18alteredBB
  %122 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !399
  %123 = getelementptr inbounds %struct.infomap, %struct.infomap* %122, i32 0, i32 1, !dbg !400
  %124 = load i8*, i8** %123, align 8, !dbg !400
  store i8* %124, i8** %12, align 8, !dbg !401
  %125 = load i32, i32* @x.1
  %126 = load i32, i32* @y.2
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %133, !dbg !402

133:                                              ; preds = %originalBBpart220, %originalBBpart216
  %134 = load i32, i32* @x.1
  %135 = load i32, i32* @y.2
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %133, %originalBB22alteredBB
  %142 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0)) #10, !dbg !403
  %143 = call i32 (i8*, ...) @printf(i8* %142, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34, i64 0, i64 0)), !dbg !404
  call void @llvm.dbg.declare(metadata i8** %14, metadata !405, metadata !DIExpression()), !dbg !406
  %144 = call i8* @setlocale(i32 5, i8* null) #10, !dbg !407
  store i8* %144, i8** %14, align 8, !dbg !406
  %145 = load i8*, i8** %14, align 8, !dbg !408
  %146 = icmp ne i8* %145, null, !dbg !408
  %147 = load i32, i32* @x.1
  %148 = load i32, i32* @y.2
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %146, label %155, label %195, !dbg !410

155:                                              ; preds = %originalBBpart224
  %156 = load i32, i32* @x.1
  %157 = load i32, i32* @y.2
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %155, %originalBB26alteredBB
  %164 = load i8*, i8** %14, align 8, !dbg !411
  %165 = call i32 @strncmp(i8* %164, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), i64 3) #13, !dbg !411
  %166 = icmp ne i32 %165, 0, !dbg !411
  %167 = load i32, i32* @x.1
  %168 = load i32, i32* @y.2
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %166, label %175, label %195, !dbg !412

175:                                              ; preds = %originalBBpart228
  %176 = load i32, i32* @x.1
  %177 = load i32, i32* @y.2
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %175, %originalBB30alteredBB
  %184 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.36, i64 0, i64 0)) #10, !dbg !413
  %185 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !413
  %186 = call i32 @fputs_unlocked(i8* %184, %struct._IO_FILE* %185), !dbg !413
  %187 = load i32, i32* @x.1
  %188 = load i32, i32* @y.2
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %195, !dbg !415

195:                                              ; preds = %originalBBpart232, %originalBBpart228, %originalBBpart224
  %196 = load i32, i32* @x.1
  %197 = load i32, i32* @y.2
  %198 = sub i32 %196, 1
  %199 = mul i32 %196, %198
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %201, %202
  br i1 %203, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %195, %originalBB34alteredBB
  %204 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37, i64 0, i64 0)) #10, !dbg !416
  %205 = load i8*, i8** %10, align 8, !dbg !417
  %206 = call i32 (i8*, ...) @printf(i8* %204, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34, i64 0, i64 0), i8* %205), !dbg !418
  %207 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.38, i64 0, i64 0)) #10, !dbg !419
  %208 = load i8*, i8** %12, align 8, !dbg !420
  %209 = load i8*, i8** %12, align 8, !dbg !421
  %210 = load i8*, i8** %10, align 8, !dbg !422
  %211 = icmp eq i8* %209, %210, !dbg !423
  %212 = zext i1 %211 to i64, !dbg !421
  %213 = select i1 %211, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !421
  %214 = call i32 (i8*, ...) @printf(i8* %207, i8* %208, i8* %213), !dbg !424
  %215 = load i32, i32* @x.1
  %216 = load i32, i32* @y.2
  %217 = sub i32 %215, 1
  %218 = mul i32 %215, %217
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %220, %221
  br i1 %222, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  ret void, !dbg !425

originalBBalteredBB:                              ; preds = %originalBB, %1
  %223 = alloca i8*, align 8
  %224 = alloca [7 x %struct.infomap], align 16
  %225 = alloca i8*, align 8
  %226 = alloca %struct.infomap*, align 8
  %227 = alloca i8*, align 8
  store i8* %0, i8** %223, align 8
  call void @llvm.dbg.declare(metadata i8** %223, metadata !426, metadata !DIExpression()), !dbg !368
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %224, metadata !528, metadata !DIExpression()), !dbg !378
  %228 = bitcast [7 x %struct.infomap]* %224 to i8*, !dbg !378
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %228, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !378
  call void @llvm.dbg.declare(metadata i8** %225, metadata !535, metadata !DIExpression()), !dbg !380
  %229 = load i8*, i8** %223, align 8, !dbg !381
  store i8* %229, i8** %225, align 8, !dbg !380
  call void @llvm.dbg.declare(metadata %struct.infomap** %226, metadata !536, metadata !DIExpression()), !dbg !384
  %230 = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %224, i64 0, i64 0, !dbg !385
  store %struct.infomap* %230, %struct.infomap** %226, align 8, !dbg !384
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %231 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !387
  %232 = getelementptr inbounds %struct.infomap, %struct.infomap* %231, i32 0, i32 0, !dbg !388
  %233 = load i8*, i8** %232, align 8, !dbg !388
  %234 = icmp ne i8* %233, null, !dbg !387
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %47
  %235 = load i8*, i8** %10, align 8, !dbg !390
  %236 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !390
  %237 = getelementptr inbounds %struct.infomap, %struct.infomap* %236, i32 0, i32 0, !dbg !390
  %238 = load i8*, i8** %237, align 8, !dbg !390
  %239 = call i32 @strcmp(i8* %235, i8* %238) #13, !dbg !390
  %240 = icmp eq i32 %239, 0, !dbg !390
  %241 = xor i1 %240, true, !dbg !391
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %73
  %242 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !393
  %243 = getelementptr inbounds %struct.infomap, %struct.infomap* %242, i32 1, !dbg !393
  store %struct.infomap* %243, %struct.infomap** %13, align 8, !dbg !393
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %92
  %244 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !395
  %245 = getelementptr inbounds %struct.infomap, %struct.infomap* %244, i32 0, i32 1, !dbg !397
  %246 = load i8*, i8** %245, align 8, !dbg !397
  %247 = icmp ne i8* %246, null, !dbg !395
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %113
  %248 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !399
  %249 = getelementptr inbounds %struct.infomap, %struct.infomap* %248, i32 0, i32 1, !dbg !400
  %250 = load i8*, i8** %249, align 8, !dbg !400
  store i8* %250, i8** %12, align 8, !dbg !401
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %133
  %251 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0)) #10, !dbg !403
  %252 = call i32 (i8*, ...) @printf(i8* %251, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34, i64 0, i64 0)), !dbg !404
  call void @llvm.dbg.declare(metadata !4, metadata !538, metadata !DIExpression()), !dbg !406
  %253 = call i8* @setlocale(i32 5, i8* null) #10, !dbg !407
  store i8* %253, i8** %14, align 8, !dbg !406
  %254 = load i8*, i8** %14, align 8, !dbg !408
  %255 = icmp ne i8* %254, null, !dbg !408
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %155
  %256 = load i8*, i8** %14, align 8, !dbg !411
  %257 = call i32 @strncmp(i8* %256, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), i64 3) #13, !dbg !411
  %258 = icmp ne i32 %257, 0, !dbg !411
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %175
  %259 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.36, i64 0, i64 0)) #10, !dbg !413
  %260 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !413
  %261 = call i32 @fputs_unlocked(i8* %259, %struct._IO_FILE* %260), !dbg !413
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %195
  %262 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37, i64 0, i64 0)) #10, !dbg !416
  %263 = load i8*, i8** %10, align 8, !dbg !417
  %264 = call i32 (i8*, ...) @printf(i8* %262, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34, i64 0, i64 0), i8* %263), !dbg !418
  %265 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.38, i64 0, i64 0)) #10, !dbg !419
  %266 = load i8*, i8** %12, align 8, !dbg !420
  %267 = load i8*, i8** %12, align 8, !dbg !421
  %268 = load i8*, i8** %10, align 8, !dbg !422
  %269 = icmp eq i8* %267, %268, !dbg !423
  %270 = zext i1 %269 to i64, !dbg !421
  %271 = select i1 %269, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !421
  %272 = call i32 (i8*, ...) @printf(i8* %265, i8* %266, i8* %271), !dbg !424
  br label %originalBB34
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32, i8**) #4 !dbg !640 {
  %3 = load i32, i32* @x.3
  %4 = load i32, i32* @y.4
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  store i8** %1, i8*** @inVal1
  store i32 %0, i32* @inVal0
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8**, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  store i32 0, i32* %11, align 4
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !644, metadata !DIExpression()), !dbg !645
  store i8** %1, i8*** %13, align 8
  call void @llvm.dbg.declare(metadata i8*** %13, metadata !646, metadata !DIExpression()), !dbg !647
  call void @llvm.dbg.declare(metadata i32* %14, metadata !648, metadata !DIExpression()), !dbg !649
  call void @llvm.dbg.declare(metadata i8* %15, metadata !650, metadata !DIExpression()), !dbg !651
  store i8 1, i8* %15, align 1, !dbg !651
  %16 = load i8**, i8*** %13, align 8, !dbg !652
  %17 = getelementptr inbounds i8*, i8** %16, i64 0, !dbg !652
  %18 = load i8*, i8** %17, align 8, !dbg !652
  call void @set_program_name(i8* %18), !dbg !653
  %19 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)) #10, !dbg !654
  %20 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0)) #10, !dbg !655
  %21 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0)) #10, !dbg !656
  %22 = call i32 @atexit(void ()* @close_stdout) #10, !dbg !657
  %23 = load i32, i32* @x.3
  %24 = load i32, i32* @y.4
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31, !dbg !658

31:                                               ; preds = %originalBBpart256, %originalBBpart2
  %32 = load i32, i32* %12, align 4, !dbg !659
  %33 = load i8**, i8*** %13, align 8, !dbg !660
  %34 = call i32 @getopt_long(i32 %32, i8** %33, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0), %struct.option* getelementptr inbounds ([18 x %struct.option], [18 x %struct.option]* @longopts, i64 0, i64 0), i32* null) #10, !dbg !661
  store i32 %34, i32* %14, align 4, !dbg !662
  %35 = icmp ne i32 %34, -1, !dbg !663
  br i1 %35, label %36, label %282, !dbg !658

36:                                               ; preds = %31
  %37 = load i32, i32* @x.3
  %38 = load i32, i32* @y.4
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %36, %originalBB1alteredBB
  %45 = load i32, i32* %14, align 4, !dbg !664
  %46 = load i32, i32* @x.3
  %47 = load i32, i32* @y.4
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  switch i32 %45, label %264 [
    i32 97, label %54
    i32 98, label %71
    i32 100, label %72
    i32 72, label %73
    i32 108, label %90
    i32 109, label %107
    i32 112, label %124
    i32 113, label %141
    i32 114, label %158
    i32 115, label %159
    i32 116, label %176
    i32 84, label %193
    i32 119, label %193
    i32 117, label %210
    i32 128, label %227
    i32 -130, label %244
    i32 -131, label %245
  ], !dbg !666

54:                                               ; preds = %originalBBpart24
  %55 = load i32, i32* @x.3
  %56 = load i32, i32* @y.4
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %54, %originalBB6alteredBB
  store i8 1, i8* @need_boottime, align 1, !dbg !667
  store i8 1, i8* @need_deadprocs, align 1, !dbg !669
  store i8 1, i8* @need_login, align 1, !dbg !670
  store i8 1, i8* @need_initspawn, align 1, !dbg !671
  store i8 1, i8* @need_runlevel, align 1, !dbg !672
  store i8 1, i8* @need_clockchange, align 1, !dbg !673
  store i8 1, i8* @need_users, align 1, !dbg !674
  store i8 1, i8* @include_mesg, align 1, !dbg !675
  store i8 1, i8* @include_idle, align 1, !dbg !676
  store i8 1, i8* @include_exit, align 1, !dbg !677
  store i8 0, i8* %15, align 1, !dbg !678
  %63 = load i32, i32* @x.3
  %64 = load i32, i32* @y.4
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %265, !dbg !679

71:                                               ; preds = %originalBBpart24
  store i8 1, i8* @need_boottime, align 1, !dbg !680
  store i8 0, i8* %15, align 1, !dbg !681
  br label %265, !dbg !682

72:                                               ; preds = %originalBBpart24
  store i8 1, i8* @need_deadprocs, align 1, !dbg !683
  store i8 1, i8* @include_idle, align 1, !dbg !684
  store i8 1, i8* @include_exit, align 1, !dbg !685
  store i8 0, i8* %15, align 1, !dbg !686
  br label %265, !dbg !687

73:                                               ; preds = %originalBBpart24
  %74 = load i32, i32* @x.3
  %75 = load i32, i32* @y.4
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %73, %originalBB10alteredBB
  store i8 1, i8* @include_heading, align 1, !dbg !688
  %82 = load i32, i32* @x.3
  %83 = load i32, i32* @y.4
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %265, !dbg !689

90:                                               ; preds = %originalBBpart24
  %91 = load i32, i32* @x.3
  %92 = load i32, i32* @y.4
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %90, %originalBB14alteredBB
  store i8 1, i8* @need_login, align 1, !dbg !690
  store i8 1, i8* @include_idle, align 1, !dbg !691
  store i8 0, i8* %15, align 1, !dbg !692
  %99 = load i32, i32* @x.3
  %100 = load i32, i32* @y.4
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %265, !dbg !693

107:                                              ; preds = %originalBBpart24
  %108 = load i32, i32* @x.3
  %109 = load i32, i32* @y.4
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %107, %originalBB18alteredBB
  store i8 1, i8* @my_line_only, align 1, !dbg !694
  %116 = load i32, i32* @x.3
  %117 = load i32, i32* @y.4
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %265, !dbg !695

124:                                              ; preds = %originalBBpart24
  %125 = load i32, i32* @x.3
  %126 = load i32, i32* @y.4
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %124, %originalBB22alteredBB
  store i8 1, i8* @need_initspawn, align 1, !dbg !696
  store i8 0, i8* %15, align 1, !dbg !697
  %133 = load i32, i32* @x.3
  %134 = load i32, i32* @y.4
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %265, !dbg !698

141:                                              ; preds = %originalBBpart24
  %142 = load i32, i32* @x.3
  %143 = load i32, i32* @y.4
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %141, %originalBB26alteredBB
  store i8 1, i8* @short_list, align 1, !dbg !699
  %150 = load i32, i32* @x.3
  %151 = load i32, i32* @y.4
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %265, !dbg !700

158:                                              ; preds = %originalBBpart24
  store i8 1, i8* @need_runlevel, align 1, !dbg !701
  store i8 1, i8* @include_idle, align 1, !dbg !702
  store i8 0, i8* %15, align 1, !dbg !703
  br label %265, !dbg !704

159:                                              ; preds = %originalBBpart24
  %160 = load i32, i32* @x.3
  %161 = load i32, i32* @y.4
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %159, %originalBB30alteredBB
  store i8 1, i8* @short_output, align 1, !dbg !705
  %168 = load i32, i32* @x.3
  %169 = load i32, i32* @y.4
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %265, !dbg !706

176:                                              ; preds = %originalBBpart24
  %177 = load i32, i32* @x.3
  %178 = load i32, i32* @y.4
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %176, %originalBB34alteredBB
  store i8 1, i8* @need_clockchange, align 1, !dbg !707
  store i8 0, i8* %15, align 1, !dbg !708
  %185 = load i32, i32* @x.3
  %186 = load i32, i32* @y.4
  %187 = sub i32 %185, 1
  %188 = mul i32 %185, %187
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %190, %191
  br i1 %192, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %265, !dbg !709

193:                                              ; preds = %originalBBpart24, %originalBBpart24
  %194 = load i32, i32* @x.3
  %195 = load i32, i32* @y.4
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %193, %originalBB38alteredBB
  store i8 1, i8* @include_mesg, align 1, !dbg !710
  %202 = load i32, i32* @x.3
  %203 = load i32, i32* @y.4
  %204 = sub i32 %202, 1
  %205 = mul i32 %202, %204
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %207, %208
  br i1 %209, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %265, !dbg !711

210:                                              ; preds = %originalBBpart24
  %211 = load i32, i32* @x.3
  %212 = load i32, i32* @y.4
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %210, %originalBB42alteredBB
  store i8 1, i8* @need_users, align 1, !dbg !712
  store i8 1, i8* @include_idle, align 1, !dbg !713
  store i8 0, i8* %15, align 1, !dbg !714
  %219 = load i32, i32* @x.3
  %220 = load i32, i32* @y.4
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %265, !dbg !715

227:                                              ; preds = %originalBBpart24
  %228 = load i32, i32* @x.3
  %229 = load i32, i32* @y.4
  %230 = sub i32 %228, 1
  %231 = mul i32 %228, %230
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %233, %234
  br i1 %235, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %227, %originalBB46alteredBB
  store i8 1, i8* @do_lookup, align 1, !dbg !716
  %236 = load i32, i32* @x.3
  %237 = load i32, i32* @y.4
  %238 = sub i32 %236, 1
  %239 = mul i32 %236, %238
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %237, 10
  %243 = or i1 %241, %242
  br i1 %243, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %265, !dbg !717

244:                                              ; preds = %originalBBpart24
  call void @usage(i32 0) #14, !dbg !718
  unreachable, !dbg !718

245:                                              ; preds = %originalBBpart24
  %246 = load i32, i32* @x.3
  %247 = load i32, i32* @y.4
  %248 = sub i32 %246, 1
  %249 = mul i32 %246, %248
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %251, %252
  br i1 %253, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %245, %originalBB50alteredBB
  %254 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !719
  %255 = load i8*, i8** @Version, align 8, !dbg !719
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %254, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i8* %255, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i64 0, i64 0), i8* null), !dbg !719
  call void @exit(i32 0) #12, !dbg !719
  %256 = load i32, i32* @x.3
  %257 = load i32, i32* @y.4
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  unreachable, !dbg !719

264:                                              ; preds = %originalBBpart24
  call void @usage(i32 1) #14, !dbg !720
  unreachable, !dbg !720

265:                                              ; preds = %originalBBpart248, %originalBBpart244, %originalBBpart240, %originalBBpart236, %originalBBpart232, %158, %originalBBpart228, %originalBBpart224, %originalBBpart220, %originalBBpart216, %originalBBpart212, %72, %71, %originalBBpart28
  %266 = load i32, i32* @x.3
  %267 = load i32, i32* @y.4
  %268 = sub i32 %266, 1
  %269 = mul i32 %266, %268
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %271, %272
  br i1 %273, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %265, %originalBB54alteredBB
  %274 = load i32, i32* @x.3
  %275 = load i32, i32* @y.4
  %276 = sub i32 %274, 1
  %277 = mul i32 %274, %276
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %279, %280
  br i1 %281, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %31, !dbg !658, !llvm.loop !721

282:                                              ; preds = %31
  %283 = load i32, i32* @x.3
  %284 = load i32, i32* @y.4
  %285 = sub i32 %283, 1
  %286 = mul i32 %283, %285
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %288, %289
  br i1 %290, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %282, %originalBB58alteredBB
  %291 = load i8, i8* %15, align 1, !dbg !723
  %292 = trunc i8 %291 to i1, !dbg !723
  %293 = load i32, i32* @x.3
  %294 = load i32, i32* @y.4
  %295 = sub i32 %293, 1
  %296 = mul i32 %293, %295
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %298, %299
  br i1 %300, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br i1 %292, label %301, label %318, !dbg !725

301:                                              ; preds = %originalBBpart260
  %302 = load i32, i32* @x.3
  %303 = load i32, i32* @y.4
  %304 = sub i32 %302, 1
  %305 = mul i32 %302, %304
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %303, 10
  %309 = or i1 %307, %308
  br i1 %309, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %301, %originalBB62alteredBB
  store i8 1, i8* @need_users, align 1, !dbg !726
  store i8 1, i8* @short_output, align 1, !dbg !728
  %310 = load i32, i32* @x.3
  %311 = load i32, i32* @y.4
  %312 = sub i32 %310, 1
  %313 = mul i32 %310, %312
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %315, %316
  br i1 %317, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %318, !dbg !729

318:                                              ; preds = %originalBBpart264, %originalBBpart260
  %319 = load i8, i8* @include_exit, align 1, !dbg !730
  %320 = trunc i8 %319 to i1, !dbg !730
  br i1 %320, label %321, label %322, !dbg !732

321:                                              ; preds = %318
  store i8 0, i8* @short_output, align 1, !dbg !733
  br label %322, !dbg !735

322:                                              ; preds = %321, %318
  %323 = load i32, i32* @x.3
  %324 = load i32, i32* @y.4
  %325 = sub i32 %323, 1
  %326 = mul i32 %323, %325
  %327 = urem i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %328, %329
  br i1 %330, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %322, %originalBB66alteredBB
  %331 = call zeroext i1 @hard_locale(i32 2), !dbg !736
  %332 = load i32, i32* @x.3
  %333 = load i32, i32* @y.4
  %334 = sub i32 %332, 1
  %335 = mul i32 %332, %334
  %336 = urem i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %333, 10
  %339 = or i1 %337, %338
  br i1 %339, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br i1 %331, label %340, label %357, !dbg !738

340:                                              ; preds = %originalBBpart268
  %341 = load i32, i32* @x.3
  %342 = load i32, i32* @y.4
  %343 = sub i32 %341, 1
  %344 = mul i32 %341, %343
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %346, %347
  br i1 %348, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %340, %originalBB70alteredBB
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0), i8** @time_format, align 8, !dbg !739
  store i32 16, i32* @time_format_width, align 4, !dbg !741
  %349 = load i32, i32* @x.3
  %350 = load i32, i32* @y.4
  %351 = sub i32 %349, 1
  %352 = mul i32 %349, %351
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %350, 10
  %356 = or i1 %354, %355
  br i1 %356, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %374, !dbg !742

357:                                              ; preds = %originalBBpart268
  %358 = load i32, i32* @x.3
  %359 = load i32, i32* @y.4
  %360 = sub i32 %358, 1
  %361 = mul i32 %358, %360
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %363, %364
  br i1 %365, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %357, %originalBB74alteredBB
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0), i8** @time_format, align 8, !dbg !743
  store i32 12, i32* @time_format_width, align 4, !dbg !745
  %366 = load i32, i32* @x.3
  %367 = load i32, i32* @y.4
  %368 = sub i32 %366, 1
  %369 = mul i32 %366, %368
  %370 = urem i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %371, %372
  br i1 %373, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br label %374

374:                                              ; preds = %originalBBpart276, %originalBBpart272
  %375 = load i32, i32* @x.3
  %376 = load i32, i32* @y.4
  %377 = sub i32 %375, 1
  %378 = mul i32 %375, %377
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %380, %381
  br i1 %382, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %374, %originalBB78alteredBB
  %383 = load i32, i32* %12, align 4, !dbg !746
  %384 = load i32, i32* @optind, align 4, !dbg !747
  %385 = sub nsw i32 %383, %384, !dbg !748
  %386 = load i32, i32* @x.3
  %387 = load i32, i32* @y.4
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBBpart284, label %originalBB78alteredBB

originalBBpart284:                                ; preds = %originalBB78
  switch i32 %385, label %434 [
    i32 2, label %394
    i32 -1, label %411
    i32 0, label %411
    i32 1, label %428
  ], !dbg !749

394:                                              ; preds = %originalBBpart284
  %395 = load i32, i32* @x.3
  %396 = load i32, i32* @y.4
  %397 = sub i32 %395, 1
  %398 = mul i32 %395, %397
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %400, %401
  br i1 %402, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %394, %originalBB86alteredBB
  store i8 1, i8* @my_line_only, align 1, !dbg !750
  %403 = load i32, i32* @x.3
  %404 = load i32, i32* @y.4
  %405 = sub i32 %403, 1
  %406 = mul i32 %403, %405
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %404, 10
  %410 = or i1 %408, %409
  br i1 %410, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br label %411, !dbg !752

411:                                              ; preds = %originalBBpart288, %originalBBpart284, %originalBBpart284
  %412 = load i32, i32* @x.3
  %413 = load i32, i32* @y.4
  %414 = sub i32 %412, 1
  %415 = mul i32 %412, %414
  %416 = urem i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %413, 10
  %419 = or i1 %417, %418
  br i1 %419, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %411, %originalBB90alteredBB
  call void @who(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i32 1), !dbg !753
  %420 = load i32, i32* @x.3
  %421 = load i32, i32* @y.4
  %422 = sub i32 %420, 1
  %423 = mul i32 %420, %422
  %424 = urem i32 %423, 2
  %425 = icmp eq i32 %424, 0
  %426 = icmp slt i32 %421, 10
  %427 = or i1 %425, %426
  br i1 %427, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br label %459, !dbg !754

428:                                              ; preds = %originalBBpart284
  %429 = load i8**, i8*** %13, align 8, !dbg !755
  %430 = load i32, i32* @optind, align 4, !dbg !756
  %431 = sext i32 %430 to i64, !dbg !755
  %432 = getelementptr inbounds i8*, i8** %429, i64 %431, !dbg !755
  %433 = load i8*, i8** %432, align 8, !dbg !755
  call void @who(i8* %433, i32 0), !dbg !757
  br label %459, !dbg !758

434:                                              ; preds = %originalBBpart284
  %435 = load i32, i32* @x.3
  %436 = load i32, i32* @y.4
  %437 = sub i32 %435, 1
  %438 = mul i32 %435, %437
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %440, %441
  br i1 %442, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %434, %originalBB94alteredBB
  %443 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i64 0, i64 0)) #10, !dbg !759
  %444 = load i8**, i8*** %13, align 8, !dbg !760
  %445 = load i32, i32* @optind, align 4, !dbg !761
  %446 = add nsw i32 %445, 2, !dbg !762
  %447 = sext i32 %446 to i64, !dbg !760
  %448 = getelementptr inbounds i8*, i8** %444, i64 %447, !dbg !760
  %449 = load i8*, i8** %448, align 8, !dbg !760
  %450 = call i8* @quote(i8* %449), !dbg !763
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %443, i8* %450), !dbg !764
  call void @usage(i32 1) #14, !dbg !765
  %451 = load i32, i32* @x.3
  %452 = load i32, i32* @y.4
  %453 = sub i32 %451, 1
  %454 = mul i32 %451, %453
  %455 = urem i32 %454, 2
  %456 = icmp eq i32 %455, 0
  %457 = icmp slt i32 %452, 10
  %458 = or i1 %456, %457
  br i1 %458, label %originalBBpart2104, label %originalBB94alteredBB

originalBBpart2104:                               ; preds = %originalBB94
  unreachable, !dbg !765

459:                                              ; preds = %428, %originalBBpart292
  %460 = load i32, i32* @x.3
  %461 = load i32, i32* @y.4
  %462 = sub i32 %460, 1
  %463 = mul i32 %460, %462
  %464 = urem i32 %463, 2
  %465 = icmp eq i32 %464, 0
  %466 = icmp slt i32 %461, 10
  %467 = or i1 %465, %466
  br i1 %467, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %459, %originalBB106alteredBB
  %468 = load i32, i32* @x.3
  %469 = load i32, i32* @y.4
  %470 = sub i32 %468, 1
  %471 = mul i32 %468, %470
  %472 = urem i32 %471, 2
  %473 = icmp eq i32 %472, 0
  %474 = icmp slt i32 %469, 10
  %475 = or i1 %473, %474
  br i1 %475, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  ret i32 0, !dbg !766

originalBBalteredBB:                              ; preds = %originalBB, %2
  store i8** %1, i8*** @inVal1
  store i32 %0, i32* @inVal0
  %476 = alloca i32, align 4
  %477 = alloca i32, align 4
  %478 = alloca i8**, align 8
  %479 = alloca i32, align 4
  %480 = alloca i8, align 1
  store i32 0, i32* %476, align 4
  store i32 %0, i32* %477, align 4
  call void @llvm.dbg.declare(metadata i32* %477, metadata !767, metadata !DIExpression()), !dbg !645
  store i8** %1, i8*** %478, align 8
  call void @llvm.dbg.declare(metadata i8*** %478, metadata !869, metadata !DIExpression()), !dbg !647
  call void @llvm.dbg.declare(metadata i32* %479, metadata !870, metadata !DIExpression()), !dbg !649
  call void @llvm.dbg.declare(metadata i8* %480, metadata !871, metadata !DIExpression()), !dbg !651
  store i8 1, i8* %480, align 1, !dbg !651
  %481 = load i8**, i8*** %478, align 8, !dbg !652
  %482 = getelementptr inbounds i8*, i8** %481, i64 0, !dbg !652
  %483 = load i8*, i8** %482, align 8, !dbg !652
  call void @set_program_name(i8* %483), !dbg !653
  %484 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)) #10, !dbg !654
  %485 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0)) #10, !dbg !655
  %486 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0)) #10, !dbg !656
  %487 = call i32 @atexit(void ()* @close_stdout) #10, !dbg !657
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %36
  %488 = load i32, i32* %14, align 4, !dbg !664
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %54
  store i8 1, i8* @need_boottime, align 1, !dbg !667
  store i8 1, i8* @need_deadprocs, align 1, !dbg !669
  store i8 1, i8* @need_login, align 1, !dbg !670
  store i8 1, i8* @need_initspawn, align 1, !dbg !671
  store i8 1, i8* @need_runlevel, align 1, !dbg !672
  store i8 1, i8* @need_clockchange, align 1, !dbg !673
  store i8 1, i8* @need_users, align 1, !dbg !674
  store i8 1, i8* @include_mesg, align 1, !dbg !675
  store i8 1, i8* @include_idle, align 1, !dbg !676
  store i8 1, i8* @include_exit, align 1, !dbg !677
  store i8 0, i8* %15, align 1, !dbg !678
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %73
  store i8 1, i8* @include_heading, align 1, !dbg !688
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %90
  store i8 1, i8* @need_login, align 1, !dbg !690
  store i8 1, i8* @include_idle, align 1, !dbg !691
  store i8 0, i8* %15, align 1, !dbg !692
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %107
  store i8 1, i8* @my_line_only, align 1, !dbg !694
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %124
  store i8 1, i8* @need_initspawn, align 1, !dbg !696
  store i8 0, i8* %15, align 1, !dbg !697
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %141
  store i8 1, i8* @short_list, align 1, !dbg !699
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %159
  store i8 1, i8* @short_output, align 1, !dbg !705
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %176
  store i8 1, i8* @need_clockchange, align 1, !dbg !707
  store i8 0, i8* %15, align 1, !dbg !708
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %193
  store i8 1, i8* @include_mesg, align 1, !dbg !710
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %210
  store i8 1, i8* @need_users, align 1, !dbg !712
  store i8 1, i8* @include_idle, align 1, !dbg !713
  store i8 0, i8* %15, align 1, !dbg !714
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %227
  store i8 1, i8* @do_lookup, align 1, !dbg !716
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %245
  %489 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !719
  %490 = load i8*, i8** @Version, align 8, !dbg !719
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %489, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i8* %490, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i64 0, i64 0), i8* null), !dbg !719
  call void @exit(i32 0) #12, !dbg !719
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %265
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %282
  %491 = load i8, i8* %15, align 1, !dbg !723
  %492 = trunc i8 %491 to i1, !dbg !723
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %301
  store i8 1, i8* @need_users, align 1, !dbg !726
  store i8 1, i8* @short_output, align 1, !dbg !728
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %322
  %493 = call zeroext i1 @hard_locale(i32 2), !dbg !736
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %340
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0), i8** @time_format, align 8, !dbg !739
  store i32 16, i32* @time_format_width, align 4, !dbg !741
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %357
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0), i8** @time_format, align 8, !dbg !743
  store i32 12, i32* @time_format_width, align 4, !dbg !745
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %374
  %494 = load i32, i32* %12, align 4, !dbg !746
  %495 = load i32, i32* @optind, align 4, !dbg !747
  %_ = sub i32 0, %494
  %gen = add i32 %_, %495
  %_79 = shl i32 %494, %495
  %_80 = shl i32 %494, %495
  %_81 = sub i32 %494, %495
  %gen82 = mul i32 %_81, %495
  %496 = sub nsw i32 %494, %495, !dbg !748
  br label %originalBB78

originalBB86alteredBB:                            ; preds = %originalBB86, %394
  store i8 1, i8* @my_line_only, align 1, !dbg !750
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %411
  call void @who(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i32 1), !dbg !753
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %434
  %497 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i64 0, i64 0)) #10, !dbg !759
  %498 = load i8**, i8*** %13, align 8, !dbg !760
  %499 = load i32, i32* @optind, align 4, !dbg !761
  %_95 = sub i32 %499, 2
  %gen96 = mul i32 %_95, 2
  %_97 = shl i32 %499, 2
  %_98 = sub i32 0, %499
  %gen99 = add i32 %_98, 2
  %_100 = sub i32 0, %499
  %gen101 = add i32 %_100, 2
  %_102 = shl i32 %499, 2
  %500 = add nsw i32 %499, 2, !dbg !762
  %501 = sext i32 %500 to i64, !dbg !760
  %502 = getelementptr inbounds i8*, i8** %498, i64 %501, !dbg !760
  %503 = load i8*, i8** %502, align 8, !dbg !760
  %504 = call i8* @quote(i8* %503), !dbg !763
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %497, i8* %504), !dbg !764
  call void @usage(i32 1) #14, !dbg !765
  br label %originalBB94

originalBB106alteredBB:                           ; preds = %originalBB106, %459
  br label %originalBB106
}

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @who(i8*, i32) #4 !dbg !872 {
  %3 = load i32, i32* @x.5
  %4 = load i32, i32* @y.6
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca %struct.utmpx*, align 8
  store i8* %0, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !875, metadata !DIExpression()), !dbg !876
  store i32 %1, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !877, metadata !DIExpression()), !dbg !878
  call void @llvm.dbg.declare(metadata i64* %13, metadata !879, metadata !DIExpression()), !dbg !880
  call void @llvm.dbg.declare(metadata %struct.utmpx** %14, metadata !881, metadata !DIExpression()), !dbg !883
  %15 = load i8*, i8** %11, align 8, !dbg !884
  %16 = load i32, i32* %12, align 4, !dbg !886
  %17 = call i32 @read_utmp(i8* %15, i64* %13, %struct.utmpx** %14, i32 %16), !dbg !887
  %18 = icmp ne i32 %17, 0, !dbg !888
  %19 = load i32, i32* @x.5
  %20 = load i32, i32* @y.6
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %32, !dbg !889

27:                                               ; preds = %originalBBpart2
  %28 = call i32* @__errno_location() #15, !dbg !890
  %29 = load i32, i32* %28, align 4, !dbg !890
  %30 = load i8*, i8** %11, align 8, !dbg !890
  %31 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %30), !dbg !890
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %29, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i64 0, i64 0), i8* %31), !dbg !890
  unreachable, !dbg !890

32:                                               ; preds = %originalBBpart2
  %33 = load i32, i32* @x.5
  %34 = load i32, i32* @y.6
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load i8, i8* @short_list, align 1, !dbg !891
  %42 = trunc i8 %41 to i1, !dbg !891
  %43 = load i32, i32* @x.5
  %44 = load i32, i32* @y.6
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %42, label %51, label %54, !dbg !893

51:                                               ; preds = %originalBBpart24
  %52 = load i64, i64* %13, align 8, !dbg !894
  %53 = load %struct.utmpx*, %struct.utmpx** %14, align 8, !dbg !895
  call void @list_entries_who(i64 %52, %struct.utmpx* %53), !dbg !896
  br label %73, !dbg !896

54:                                               ; preds = %originalBBpart24
  %55 = load i32, i32* @x.5
  %56 = load i32, i32* @y.6
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %54, %originalBB6alteredBB
  %63 = load i64, i64* %13, align 8, !dbg !897
  %64 = load %struct.utmpx*, %struct.utmpx** %14, align 8, !dbg !898
  call void @scan_entries(i64 %63, %struct.utmpx* %64), !dbg !899
  %65 = load i32, i32* @x.5
  %66 = load i32, i32* @y.6
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %73

73:                                               ; preds = %originalBBpart28, %51
  %74 = load i32, i32* @x.5
  %75 = load i32, i32* @y.6
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %73, %originalBB10alteredBB
  %82 = load %struct.utmpx*, %struct.utmpx** %14, align 8, !dbg !900
  %83 = bitcast %struct.utmpx* %82 to i8*, !dbg !900
  call void @free(i8* %83) #10, !dbg !901
  %84 = load i32, i32* @x.5
  %85 = load i32, i32* @y.6
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret void, !dbg !902

originalBBalteredBB:                              ; preds = %originalBB, %2
  %92 = alloca i8*, align 8
  %93 = alloca i32, align 4
  %94 = alloca i64, align 8
  %95 = alloca %struct.utmpx*, align 8
  store i8* %0, i8** %92, align 8
  call void @llvm.dbg.declare(metadata i8** %92, metadata !903, metadata !DIExpression()), !dbg !876
  store i32 %1, i32* %93, align 4
  call void @llvm.dbg.declare(metadata i32* %93, metadata !1005, metadata !DIExpression()), !dbg !878
  call void @llvm.dbg.declare(metadata i64* %94, metadata !1006, metadata !DIExpression()), !dbg !880
  call void @llvm.dbg.declare(metadata %struct.utmpx** %95, metadata !1007, metadata !DIExpression()), !dbg !883
  %96 = load i8*, i8** %92, align 8, !dbg !884
  %97 = load i32, i32* %93, align 4, !dbg !886
  %98 = call i32 @read_utmp(i8* %96, i64* %94, %struct.utmpx** %95, i32 %97), !dbg !887
  %99 = icmp ne i32 %98, 0, !dbg !888
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %100 = load i8, i8* @short_list, align 1, !dbg !891
  %101 = trunc i8 %100 to i1, !dbg !891
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %54
  %102 = load i64, i64* %13, align 8, !dbg !897
  %103 = load %struct.utmpx*, %struct.utmpx** %14, align 8, !dbg !898
  call void @scan_entries(i64 %102, %struct.utmpx* %103), !dbg !899
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %73
  %104 = load %struct.utmpx*, %struct.utmpx** %14, align 8, !dbg !900
  %105 = bitcast %struct.utmpx* %104 to i8*, !dbg !900
  call void @free(i8* %105) #10, !dbg !901
  br label %originalBB10
}

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_entries_who(i64, %struct.utmpx*) #4 !dbg !1009 {
  %3 = load i32, i32* @x.7
  %4 = load i32, i32* @y.8
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i64, align 8
  %12 = alloca %struct.utmpx*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  store i64 %0, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !1012, metadata !DIExpression()), !dbg !1013
  store %struct.utmpx* %1, %struct.utmpx** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %12, metadata !1014, metadata !DIExpression()), !dbg !1015
  call void @llvm.dbg.declare(metadata i64* %13, metadata !1016, metadata !DIExpression()), !dbg !1017
  store i64 0, i64* %13, align 8, !dbg !1017
  call void @llvm.dbg.declare(metadata i8** %14, metadata !1018, metadata !DIExpression()), !dbg !1019
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8** %14, align 8, !dbg !1019
  %16 = load i32, i32* @x.7
  %17 = load i32, i32* @y.8
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %24, !dbg !1020

24:                                               ; preds = %originalBBpart230, %originalBBpart2
  %25 = load i32, i32* @x.7
  %26 = load i32, i32* @y.8
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = load i64, i64* %11, align 8, !dbg !1021
  %34 = add i64 %33, -1, !dbg !1021
  store i64 %34, i64* %11, align 8, !dbg !1021
  %35 = icmp ne i64 %33, 0, !dbg !1020
  %36 = load i32, i32* @x.7
  %37 = load i32, i32* @y.8
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart213, label %originalBB1alteredBB

originalBBpart213:                                ; preds = %originalBB1
  br i1 %35, label %44, label %117, !dbg !1020

44:                                               ; preds = %originalBBpart213
  %45 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1022
  %46 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %45, i32 0, i32 4, !dbg !1022
  %47 = getelementptr inbounds [32 x i8], [32 x i8]* %46, i64 0, i64 0, !dbg !1022
  %48 = load i8, i8* %47, align 4, !dbg !1022
  %49 = sext i8 %48 to i32, !dbg !1022
  %50 = icmp ne i32 %49, 0, !dbg !1022
  br i1 %50, label %51, label %98, !dbg !1022

51:                                               ; preds = %44
  %52 = load i32, i32* @x.7
  %53 = load i32, i32* @y.8
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %51, %originalBB15alteredBB
  %60 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1022
  %61 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %60, i32 0, i32 0, !dbg !1022
  %62 = load i16, i16* %61, align 4, !dbg !1022
  %63 = sext i16 %62 to i32, !dbg !1022
  %64 = icmp eq i32 %63, 7, !dbg !1022
  %65 = load i32, i32* @x.7
  %66 = load i32, i32* @y.8
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart217, label %originalBB15alteredBB

originalBBpart217:                                ; preds = %originalBB15
  br i1 %64, label %73, label %98, !dbg !1025

73:                                               ; preds = %originalBBpart217
  call void @llvm.dbg.declare(metadata i8** %15, metadata !1026, metadata !DIExpression()), !dbg !1028
  %74 = load i32, i32* @x.7
  %75 = load i32, i32* @y.8
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %73, %originalBB19alteredBB
  %82 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1029
  %83 = call i8* @extract_trimmed_name(%struct.utmpx* %82), !dbg !1030
  store i8* %83, i8** %15, align 8, !dbg !1031
  %84 = load i8*, i8** %14, align 8, !dbg !1032
  %85 = load i8*, i8** %15, align 8, !dbg !1033
  %86 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0), i8* %84, i8* %85), !dbg !1034
  %87 = load i8*, i8** %15, align 8, !dbg !1035
  call void @free(i8* %87) #10, !dbg !1036
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.59, i64 0, i64 0), i8** %14, align 8, !dbg !1037
  %88 = load i64, i64* %13, align 8, !dbg !1038
  %89 = add i64 %88, 1, !dbg !1038
  store i64 %89, i64* %13, align 8, !dbg !1038
  %90 = load i32, i32* @x.7
  %91 = load i32, i32* @y.8
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart226, label %originalBB19alteredBB

originalBBpart226:                                ; preds = %originalBB19
  br label %98, !dbg !1039

98:                                               ; preds = %originalBBpart226, %originalBBpart217, %44
  %99 = load i32, i32* @x.7
  %100 = load i32, i32* @y.8
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB28, label %originalBB28alteredBB

originalBB28:                                     ; preds = %98, %originalBB28alteredBB
  %107 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1040
  %108 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %107, i32 1, !dbg !1040
  store %struct.utmpx* %108, %struct.utmpx** %12, align 8, !dbg !1040
  %109 = load i32, i32* @x.7
  %110 = load i32, i32* @y.8
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart230, label %originalBB28alteredBB

originalBBpart230:                                ; preds = %originalBB28
  br label %24, !dbg !1020, !llvm.loop !1041

117:                                              ; preds = %originalBBpart213
  %118 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.60, i64 0, i64 0)) #10, !dbg !1043
  %119 = load i64, i64* %13, align 8, !dbg !1044
  %120 = call i32 (i8*, ...) @printf(i8* %118, i64 %119), !dbg !1045
  ret void, !dbg !1046

originalBBalteredBB:                              ; preds = %originalBB, %2
  %121 = alloca i64, align 8
  %122 = alloca %struct.utmpx*, align 8
  %123 = alloca i64, align 8
  %124 = alloca i8*, align 8
  %125 = alloca i8*, align 8
  store i64 %0, i64* %121, align 8
  call void @llvm.dbg.declare(metadata i64* %121, metadata !1047, metadata !DIExpression()), !dbg !1013
  store %struct.utmpx* %1, %struct.utmpx** %122, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %122, metadata !1151, metadata !DIExpression()), !dbg !1015
  call void @llvm.dbg.declare(metadata i64* %123, metadata !1152, metadata !DIExpression()), !dbg !1017
  store i64 0, i64* %123, align 8, !dbg !1017
  call void @llvm.dbg.declare(metadata i8** %124, metadata !1153, metadata !DIExpression()), !dbg !1019
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8** %124, align 8, !dbg !1019
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %126 = load i64, i64* %11, align 8, !dbg !1021
  %_ = sub i64 0, %126
  %gen = add i64 %_, -1
  %_2 = sub i64 %126, -1
  %gen3 = mul i64 %_2, -1
  %_4 = shl i64 %126, -1
  %_5 = shl i64 %126, -1
  %_6 = sub i64 0, %126
  %gen7 = add i64 %_6, -1
  %_8 = sub i64 %126, -1
  %gen9 = mul i64 %_8, -1
  %_10 = sub i64 0, %126
  %gen11 = add i64 %_10, -1
  %127 = add i64 %126, -1, !dbg !1021
  store i64 %127, i64* %11, align 8, !dbg !1021
  %128 = icmp ne i64 %126, 0, !dbg !1020
  br label %originalBB1

originalBB15alteredBB:                            ; preds = %originalBB15, %51
  %129 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1022
  %130 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %129, i32 0, i32 0, !dbg !1022
  %131 = load i16, i16* %130, align 4, !dbg !1022
  %132 = sext i16 %131 to i32, !dbg !1022
  %133 = icmp eq i32 %132, 7, !dbg !1022
  br label %originalBB15

originalBB19alteredBB:                            ; preds = %originalBB19, %73
  %134 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1029
  %135 = call i8* @extract_trimmed_name(%struct.utmpx* %134), !dbg !1030
  store i8* %135, i8** %15, align 8, !dbg !1031
  %136 = load i8*, i8** %14, align 8, !dbg !1032
  %137 = load i8*, i8** %15, align 8, !dbg !1033
  %138 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0), i8* %136, i8* %137), !dbg !1034
  %139 = load i8*, i8** %15, align 8, !dbg !1035
  call void @free(i8* %139) #10, !dbg !1036
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.59, i64 0, i64 0), i8** %14, align 8, !dbg !1037
  %140 = load i64, i64* %13, align 8, !dbg !1038
  %_20 = shl i64 %140, 1
  %_21 = sub i64 0, %140
  %gen22 = add i64 %_21, 1
  %_23 = sub i64 0, %140
  %gen24 = add i64 %_23, 1
  %141 = add i64 %140, 1, !dbg !1038
  store i64 %141, i64* %13, align 8, !dbg !1038
  br label %originalBB19

originalBB28alteredBB:                            ; preds = %originalBB28, %98
  %142 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1040
  %143 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %142, i32 1, !dbg !1040
  store %struct.utmpx* %143, %struct.utmpx** %12, align 8, !dbg !1040
  br label %originalBB28
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @scan_entries(i64, %struct.utmpx*) #4 !dbg !1154 {
  %3 = load i32, i32* @x.9
  %4 = load i32, i32* @y.10
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i64, align 8
  %12 = alloca %struct.utmpx*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  store i64 %0, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !1155, metadata !DIExpression()), !dbg !1156
  store %struct.utmpx* %1, %struct.utmpx** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %12, metadata !1157, metadata !DIExpression()), !dbg !1158
  call void @llvm.dbg.declare(metadata i8** %13, metadata !1159, metadata !DIExpression()), !dbg !1160
  call void @llvm.dbg.declare(metadata i64* %14, metadata !1161, metadata !DIExpression()), !dbg !1162
  store i64 -9223372036854775808, i64* %14, align 8, !dbg !1162
  %15 = load i8, i8* @include_heading, align 1, !dbg !1163
  %16 = trunc i8 %15 to i1, !dbg !1163
  %17 = load i32, i32* @x.9
  %18 = load i32, i32* @y.10
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %26, !dbg !1165

25:                                               ; preds = %originalBBpart2
  call void @print_heading(), !dbg !1166
  br label %26, !dbg !1166

26:                                               ; preds = %25, %originalBBpart2
  %27 = load i32, i32* @x.9
  %28 = load i32, i32* @y.10
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = load i8, i8* @my_line_only, align 1, !dbg !1167
  %36 = trunc i8 %35 to i1, !dbg !1167
  %37 = load i32, i32* @x.9
  %38 = load i32, i32* @y.10
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %36, label %45, label %248, !dbg !1169

45:                                               ; preds = %originalBBpart24
  %46 = load i32, i32* @x.9
  %47 = load i32, i32* @y.10
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %45, %originalBB6alteredBB
  %54 = call i8* @ttyname(i32 0) #10, !dbg !1170
  store i8* %54, i8** %13, align 8, !dbg !1172
  %55 = load i8*, i8** %13, align 8, !dbg !1173
  %56 = icmp ne i8* %55, null, !dbg !1173
  %57 = load i32, i32* @x.9
  %58 = load i32, i32* @y.10
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %56, label %82, label %65, !dbg !1175

65:                                               ; preds = %originalBBpart28
  %66 = load i32, i32* @x.9
  %67 = load i32, i32* @y.10
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %65, %originalBB10alteredBB
  %74 = load i32, i32* @x.9
  %75 = load i32, i32* @y.10
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %866, !dbg !1176

82:                                               ; preds = %originalBBpart28
  %83 = load i8*, i8** %13, align 8, !dbg !1177
  %84 = call i32 @strncmp(i8* %83, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0), i64 5) #13, !dbg !1177
  br label %85, !dbg !1179

85:                                               ; preds = %82
  %86 = load i32, i32* @x.9
  %87 = load i32, i32* @y.10
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %85, %originalBB14alteredBB
  %collatzVar = alloca i32
  %94 = load i32, i32* @x.9
  %95 = load i32, i32* @y.10
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %102

102:                                              ; preds = %originalBBpart216
  %103 = load i32, i32* @inVal0
  %104 = icmp sgt i32 %103, 1
  br i1 %104, label %106, label %105

105:                                              ; preds = %102
  store i32 45, i32* %collatzVar
  br label %106

106:                                              ; preds = %105, %102
  %107 = load i32, i32* @x.9
  %108 = load i32, i32* @y.10
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %106, %originalBB18alteredBB
  %115 = load i8**, i8*** @inVal1
  %116 = getelementptr inbounds i8*, i8** %115, i64 1
  %117 = load i8*, i8** %116
  %controle = call i32 @controle(i8* %117, i32 0)
  store i32 %controle, i32* %collatzVar
  %118 = load i32, i32* @x.9
  %119 = load i32, i32* @y.10
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %126

126:                                              ; preds = %208, %originalBBpart260, %originalBBpart220
  %127 = load i32, i32* @x.9
  %128 = load i32, i32* @y.10
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %126, %originalBB22alteredBB
  %135 = load i32, i32* %collatzVar
  %136 = icmp sgt i32 %135, 1
  %137 = load i32, i32* @x.9
  %138 = load i32, i32* @y.10
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %136, label %145, label %231

145:                                              ; preds = %originalBBpart224
  %146 = load i32, i32* %collatzVar
  %147 = srem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %168

149:                                              ; preds = %145
  %150 = load i32, i32* @x.9
  %151 = load i32, i32* @y.10
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %149, %originalBB26alteredBB
  %158 = load i32, i32* %collatzVar
  %159 = sdiv i32 %158, 2
  store i32 %159, i32* %collatzVar
  %160 = load i32, i32* @x.9
  %161 = load i32, i32* @y.10
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBBpart238, label %originalBB26alteredBB

originalBBpart238:                                ; preds = %originalBB26
  br label %188

168:                                              ; preds = %145
  %169 = load i32, i32* @x.9
  %170 = load i32, i32* @y.10
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB40, label %originalBB40alteredBB

originalBB40:                                     ; preds = %168, %originalBB40alteredBB
  %177 = load i32, i32* %collatzVar
  %178 = mul i32 %177, 3
  %179 = add i32 %178, 1
  store i32 %179, i32* %collatzVar
  %180 = load i32, i32* @x.9
  %181 = load i32, i32* @y.10
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBBpart254, label %originalBB40alteredBB

originalBBpart254:                                ; preds = %originalBB40
  br label %188

188:                                              ; preds = %originalBBpart254, %originalBBpart238
  %189 = load i32, i32* @x.9
  %190 = load i32, i32* @y.10
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %188, %originalBB56alteredBB
  %197 = load i32, i32* %collatzVar
  %198 = sub i32 %84, %197
  %199 = icmp sgt i32 %198, -2
  %200 = load i32, i32* @x.9
  %201 = load i32, i32* @y.10
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBBpart260, label %originalBB56alteredBB

originalBBpart260:                                ; preds = %originalBB56
  br i1 %199, label %208, label %126

208:                                              ; preds = %originalBBpart260
  %209 = load i32, i32* %collatzVar
  %210 = add i32 %84, %209
  %211 = icmp slt i32 %210, 2
  br i1 %211, label %212, label %126

212:                                              ; preds = %208
  %213 = load i32, i32* @x.9
  %214 = load i32, i32* @y.10
  %215 = sub i32 %213, 1
  %216 = mul i32 %213, %215
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %218, %219
  br i1 %220, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %212, %originalBB62alteredBB
  %221 = load i8*, i8** %13, align 8, !dbg !1180
  %222 = getelementptr inbounds i8, i8* %221, i64 5, !dbg !1180
  store i8* %222, i8** %13, align 8, !dbg !1180
  %223 = load i32, i32* @x.9
  %224 = load i32, i32* @y.10
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %231, !dbg !1181

231:                                              ; preds = %originalBBpart264, %originalBBpart224
  %232 = load i32, i32* @x.9
  %233 = load i32, i32* @y.10
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %231, %originalBB66alteredBB
  %240 = load i32, i32* @x.9
  %241 = load i32, i32* @y.10
  %242 = sub i32 %240, 1
  %243 = mul i32 %240, %242
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %245, %246
  br i1 %247, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %248, !dbg !1182

248:                                              ; preds = %originalBBpart268, %originalBBpart24
  %249 = load i32, i32* @x.9
  %250 = load i32, i32* @y.10
  %251 = sub i32 %249, 1
  %252 = mul i32 %249, %251
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %254, %255
  br i1 %256, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %248, %originalBB70alteredBB
  %257 = load i32, i32* @x.9
  %258 = load i32, i32* @y.10
  %259 = sub i32 %257, 1
  %260 = mul i32 %257, %259
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %258, 10
  %264 = or i1 %262, %263
  br i1 %264, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %265, !dbg !1183

265:                                              ; preds = %originalBBpart2199, %originalBBpart272
  %266 = load i32, i32* @x.9
  %267 = load i32, i32* @y.10
  %268 = sub i32 %266, 1
  %269 = mul i32 %266, %268
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %271, %272
  br i1 %273, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %265, %originalBB74alteredBB
  %274 = load i64, i64* %11, align 8, !dbg !1184
  %275 = add i64 %274, -1, !dbg !1184
  store i64 %275, i64* %11, align 8, !dbg !1184
  %276 = icmp ne i64 %274, 0, !dbg !1183
  %277 = load i32, i32* @x.9
  %278 = load i32, i32* @y.10
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBBpart283, label %originalBB74alteredBB

originalBBpart283:                                ; preds = %originalBB74
  br i1 %276, label %285, label %866, !dbg !1183

285:                                              ; preds = %originalBBpart283
  %286 = load i32, i32* @x.9
  %287 = load i32, i32* @y.10
  %288 = sub i32 %286, 1
  %289 = mul i32 %286, %288
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %291, %292
  br i1 %293, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %285, %originalBB85alteredBB
  %294 = load i8, i8* @my_line_only, align 1, !dbg !1185
  %295 = trunc i8 %294 to i1, !dbg !1185
  %296 = load i32, i32* @x.9
  %297 = load i32, i32* @y.10
  %298 = sub i32 %296, 1
  %299 = mul i32 %296, %298
  %300 = urem i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %301, %302
  br i1 %303, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  br i1 %295, label %304, label %327, !dbg !1188

304:                                              ; preds = %originalBBpart287
  %305 = load i32, i32* @x.9
  %306 = load i32, i32* @y.10
  %307 = sub i32 %305, 1
  %308 = mul i32 %305, %307
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %310, %311
  br i1 %312, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %304, %originalBB89alteredBB
  %313 = load i8*, i8** %13, align 8, !dbg !1189
  %314 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1189
  %315 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %314, i32 0, i32 2, !dbg !1189
  %316 = getelementptr inbounds [32 x i8], [32 x i8]* %315, i64 0, i64 0, !dbg !1189
  %317 = call i32 @strncmp(i8* %313, i8* %316, i64 32) #13, !dbg !1189
  %318 = icmp eq i32 %317, 0, !dbg !1189
  %319 = load i32, i32* @x.9
  %320 = load i32, i32* @y.10
  %321 = sub i32 %319, 1
  %322 = mul i32 %319, %321
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %324, %325
  br i1 %326, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  br i1 %318, label %327, label %803, !dbg !1190

327:                                              ; preds = %originalBBpart291, %originalBBpart287
  %328 = load i32, i32* @x.9
  %329 = load i32, i32* @y.10
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %327, %originalBB93alteredBB
  %336 = load i8, i8* @need_users, align 1, !dbg !1191
  %337 = trunc i8 %336 to i1, !dbg !1191
  %338 = load i32, i32* @x.9
  %339 = load i32, i32* @y.10
  %340 = sub i32 %338, 1
  %341 = mul i32 %338, %340
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %343, %344
  br i1 %345, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  br i1 %337, label %346, label %410, !dbg !1194

346:                                              ; preds = %originalBBpart295
  %347 = load i32, i32* @x.9
  %348 = load i32, i32* @y.10
  %349 = sub i32 %347, 1
  %350 = mul i32 %347, %349
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %352, %353
  br i1 %354, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %346, %originalBB97alteredBB
  %355 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1195
  %356 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %355, i32 0, i32 4, !dbg !1195
  %357 = getelementptr inbounds [32 x i8], [32 x i8]* %356, i64 0, i64 0, !dbg !1195
  %358 = load i8, i8* %357, align 4, !dbg !1195
  %359 = sext i8 %358 to i32, !dbg !1195
  %360 = icmp ne i32 %359, 0, !dbg !1195
  %361 = load i32, i32* @x.9
  %362 = load i32, i32* @y.10
  %363 = sub i32 %361, 1
  %364 = mul i32 %361, %363
  %365 = urem i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = icmp slt i32 %362, 10
  %368 = or i1 %366, %367
  br i1 %368, label %originalBBpart299, label %originalBB97alteredBB

originalBBpart299:                                ; preds = %originalBB97
  br i1 %360, label %369, label %410, !dbg !1195

369:                                              ; preds = %originalBBpart299
  %370 = load i32, i32* @x.9
  %371 = load i32, i32* @y.10
  %372 = sub i32 %370, 1
  %373 = mul i32 %370, %372
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %371, 10
  %377 = or i1 %375, %376
  br i1 %377, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %369, %originalBB101alteredBB
  %378 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1195
  %379 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %378, i32 0, i32 0, !dbg !1195
  %380 = load i16, i16* %379, align 4, !dbg !1195
  %381 = sext i16 %380 to i32, !dbg !1195
  %382 = icmp eq i32 %381, 7, !dbg !1195
  %383 = load i32, i32* @x.9
  %384 = load i32, i32* @y.10
  %385 = sub i32 %383, 1
  %386 = mul i32 %383, %385
  %387 = urem i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %388, %389
  br i1 %390, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  br i1 %382, label %391, label %410, !dbg !1196

391:                                              ; preds = %originalBBpart2103
  %392 = load i32, i32* @x.9
  %393 = load i32, i32* @y.10
  %394 = sub i32 %392, 1
  %395 = mul i32 %392, %394
  %396 = urem i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %397, %398
  br i1 %399, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %391, %originalBB105alteredBB
  %400 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1197
  %401 = load i64, i64* %14, align 8, !dbg !1198
  call void @print_user(%struct.utmpx* %400, i64 %401), !dbg !1199
  %402 = load i32, i32* @x.9
  %403 = load i32, i32* @y.10
  %404 = sub i32 %402, 1
  %405 = mul i32 %402, %404
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %407, %408
  br i1 %409, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  br label %786, !dbg !1199

410:                                              ; preds = %originalBBpart2103, %originalBBpart299, %originalBBpart295
  %411 = load i32, i32* @x.9
  %412 = load i32, i32* @y.10
  %413 = sub i32 %411, 1
  %414 = mul i32 %411, %413
  %415 = urem i32 %414, 2
  %416 = icmp eq i32 %415, 0
  %417 = icmp slt i32 %412, 10
  %418 = or i1 %416, %417
  br i1 %418, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %410, %originalBB109alteredBB
  %419 = load i8, i8* @need_runlevel, align 1, !dbg !1200
  %420 = trunc i8 %419 to i1, !dbg !1200
  %421 = load i32, i32* @x.9
  %422 = load i32, i32* @y.10
  %423 = sub i32 %421, 1
  %424 = mul i32 %421, %423
  %425 = urem i32 %424, 2
  %426 = icmp eq i32 %425, 0
  %427 = icmp slt i32 %422, 10
  %428 = or i1 %426, %427
  br i1 %428, label %originalBBpart2111, label %originalBB109alteredBB

originalBBpart2111:                               ; preds = %originalBB109
  br i1 %420, label %429, label %469, !dbg !1202

429:                                              ; preds = %originalBBpart2111
  %430 = load i32, i32* @x.9
  %431 = load i32, i32* @y.10
  %432 = sub i32 %430, 1
  %433 = mul i32 %430, %432
  %434 = urem i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = icmp slt i32 %431, 10
  %437 = or i1 %435, %436
  br i1 %437, label %originalBB113, label %originalBB113alteredBB

originalBB113:                                    ; preds = %429, %originalBB113alteredBB
  %438 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1203
  %439 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %438, i32 0, i32 0, !dbg !1203
  %440 = load i16, i16* %439, align 4, !dbg !1203
  %441 = sext i16 %440 to i32, !dbg !1203
  %442 = icmp eq i32 %441, 1, !dbg !1203
  %443 = load i32, i32* @x.9
  %444 = load i32, i32* @y.10
  %445 = sub i32 %443, 1
  %446 = mul i32 %443, %445
  %447 = urem i32 %446, 2
  %448 = icmp eq i32 %447, 0
  %449 = icmp slt i32 %444, 10
  %450 = or i1 %448, %449
  br i1 %450, label %originalBBpart2115, label %originalBB113alteredBB

originalBBpart2115:                               ; preds = %originalBB113
  br i1 %442, label %451, label %469, !dbg !1204

451:                                              ; preds = %originalBBpart2115
  %452 = load i32, i32* @x.9
  %453 = load i32, i32* @y.10
  %454 = sub i32 %452, 1
  %455 = mul i32 %452, %454
  %456 = urem i32 %455, 2
  %457 = icmp eq i32 %456, 0
  %458 = icmp slt i32 %453, 10
  %459 = or i1 %457, %458
  br i1 %459, label %originalBB117, label %originalBB117alteredBB

originalBB117:                                    ; preds = %451, %originalBB117alteredBB
  %460 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1205
  call void @print_runlevel(%struct.utmpx* %460), !dbg !1206
  %461 = load i32, i32* @x.9
  %462 = load i32, i32* @y.10
  %463 = sub i32 %461, 1
  %464 = mul i32 %461, %463
  %465 = urem i32 %464, 2
  %466 = icmp eq i32 %465, 0
  %467 = icmp slt i32 %462, 10
  %468 = or i1 %466, %467
  br i1 %468, label %originalBBpart2119, label %originalBB117alteredBB

originalBBpart2119:                               ; preds = %originalBB117
  br label %769, !dbg !1206

469:                                              ; preds = %originalBBpart2115, %originalBBpart2111
  %470 = load i8, i8* @need_boottime, align 1, !dbg !1207
  %471 = trunc i8 %470 to i1, !dbg !1207
  br i1 %471, label %472, label %496, !dbg !1209

472:                                              ; preds = %469
  %473 = load i32, i32* @x.9
  %474 = load i32, i32* @y.10
  %475 = sub i32 %473, 1
  %476 = mul i32 %473, %475
  %477 = urem i32 %476, 2
  %478 = icmp eq i32 %477, 0
  %479 = icmp slt i32 %474, 10
  %480 = or i1 %478, %479
  br i1 %480, label %originalBB121, label %originalBB121alteredBB

originalBB121:                                    ; preds = %472, %originalBB121alteredBB
  %481 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1210
  %482 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %481, i32 0, i32 0, !dbg !1210
  %483 = load i16, i16* %482, align 4, !dbg !1210
  %484 = sext i16 %483 to i32, !dbg !1210
  %485 = icmp eq i32 %484, 2, !dbg !1210
  %486 = load i32, i32* @x.9
  %487 = load i32, i32* @y.10
  %488 = sub i32 %486, 1
  %489 = mul i32 %486, %488
  %490 = urem i32 %489, 2
  %491 = icmp eq i32 %490, 0
  %492 = icmp slt i32 %487, 10
  %493 = or i1 %491, %492
  br i1 %493, label %originalBBpart2123, label %originalBB121alteredBB

originalBBpart2123:                               ; preds = %originalBB121
  br i1 %485, label %494, label %496, !dbg !1211

494:                                              ; preds = %originalBBpart2123
  %495 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1212
  call void @print_boottime(%struct.utmpx* %495), !dbg !1213
  br label %752, !dbg !1213

496:                                              ; preds = %originalBBpart2123, %469
  %497 = load i32, i32* @x.9
  %498 = load i32, i32* @y.10
  %499 = sub i32 %497, 1
  %500 = mul i32 %497, %499
  %501 = urem i32 %500, 2
  %502 = icmp eq i32 %501, 0
  %503 = icmp slt i32 %498, 10
  %504 = or i1 %502, %503
  br i1 %504, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %496, %originalBB125alteredBB
  %505 = load i8, i8* @need_clockchange, align 1, !dbg !1214
  %506 = trunc i8 %505 to i1, !dbg !1214
  %507 = load i32, i32* @x.9
  %508 = load i32, i32* @y.10
  %509 = sub i32 %507, 1
  %510 = mul i32 %507, %509
  %511 = urem i32 %510, 2
  %512 = icmp eq i32 %511, 0
  %513 = icmp slt i32 %508, 10
  %514 = or i1 %512, %513
  br i1 %514, label %originalBBpart2127, label %originalBB125alteredBB

originalBBpart2127:                               ; preds = %originalBB125
  br i1 %506, label %515, label %555, !dbg !1216

515:                                              ; preds = %originalBBpart2127
  %516 = load i32, i32* @x.9
  %517 = load i32, i32* @y.10
  %518 = sub i32 %516, 1
  %519 = mul i32 %516, %518
  %520 = urem i32 %519, 2
  %521 = icmp eq i32 %520, 0
  %522 = icmp slt i32 %517, 10
  %523 = or i1 %521, %522
  br i1 %523, label %originalBB129, label %originalBB129alteredBB

originalBB129:                                    ; preds = %515, %originalBB129alteredBB
  %524 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1217
  %525 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %524, i32 0, i32 0, !dbg !1217
  %526 = load i16, i16* %525, align 4, !dbg !1217
  %527 = sext i16 %526 to i32, !dbg !1217
  %528 = icmp eq i32 %527, 3, !dbg !1217
  %529 = load i32, i32* @x.9
  %530 = load i32, i32* @y.10
  %531 = sub i32 %529, 1
  %532 = mul i32 %529, %531
  %533 = urem i32 %532, 2
  %534 = icmp eq i32 %533, 0
  %535 = icmp slt i32 %530, 10
  %536 = or i1 %534, %535
  br i1 %536, label %originalBBpart2131, label %originalBB129alteredBB

originalBBpart2131:                               ; preds = %originalBB129
  br i1 %528, label %537, label %555, !dbg !1218

537:                                              ; preds = %originalBBpart2131
  %538 = load i32, i32* @x.9
  %539 = load i32, i32* @y.10
  %540 = sub i32 %538, 1
  %541 = mul i32 %538, %540
  %542 = urem i32 %541, 2
  %543 = icmp eq i32 %542, 0
  %544 = icmp slt i32 %539, 10
  %545 = or i1 %543, %544
  br i1 %545, label %originalBB133, label %originalBB133alteredBB

originalBB133:                                    ; preds = %537, %originalBB133alteredBB
  %546 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1219
  call void @print_clockchange(%struct.utmpx* %546), !dbg !1220
  %547 = load i32, i32* @x.9
  %548 = load i32, i32* @y.10
  %549 = sub i32 %547, 1
  %550 = mul i32 %547, %549
  %551 = urem i32 %550, 2
  %552 = icmp eq i32 %551, 0
  %553 = icmp slt i32 %548, 10
  %554 = or i1 %552, %553
  br i1 %554, label %originalBBpart2135, label %originalBB133alteredBB

originalBBpart2135:                               ; preds = %originalBB133
  br label %735, !dbg !1220

555:                                              ; preds = %originalBBpart2131, %originalBBpart2127
  %556 = load i8, i8* @need_initspawn, align 1, !dbg !1221
  %557 = trunc i8 %556 to i1, !dbg !1221
  br i1 %557, label %558, label %598, !dbg !1223

558:                                              ; preds = %555
  %559 = load i32, i32* @x.9
  %560 = load i32, i32* @y.10
  %561 = sub i32 %559, 1
  %562 = mul i32 %559, %561
  %563 = urem i32 %562, 2
  %564 = icmp eq i32 %563, 0
  %565 = icmp slt i32 %560, 10
  %566 = or i1 %564, %565
  br i1 %566, label %originalBB137, label %originalBB137alteredBB

originalBB137:                                    ; preds = %558, %originalBB137alteredBB
  %567 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1224
  %568 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %567, i32 0, i32 0, !dbg !1224
  %569 = load i16, i16* %568, align 4, !dbg !1224
  %570 = sext i16 %569 to i32, !dbg !1224
  %571 = icmp eq i32 %570, 5, !dbg !1224
  %572 = load i32, i32* @x.9
  %573 = load i32, i32* @y.10
  %574 = sub i32 %572, 1
  %575 = mul i32 %572, %574
  %576 = urem i32 %575, 2
  %577 = icmp eq i32 %576, 0
  %578 = icmp slt i32 %573, 10
  %579 = or i1 %577, %578
  br i1 %579, label %originalBBpart2139, label %originalBB137alteredBB

originalBBpart2139:                               ; preds = %originalBB137
  br i1 %571, label %580, label %598, !dbg !1225

580:                                              ; preds = %originalBBpart2139
  %581 = load i32, i32* @x.9
  %582 = load i32, i32* @y.10
  %583 = sub i32 %581, 1
  %584 = mul i32 %581, %583
  %585 = urem i32 %584, 2
  %586 = icmp eq i32 %585, 0
  %587 = icmp slt i32 %582, 10
  %588 = or i1 %586, %587
  br i1 %588, label %originalBB141, label %originalBB141alteredBB

originalBB141:                                    ; preds = %580, %originalBB141alteredBB
  %589 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1226
  call void @print_initspawn(%struct.utmpx* %589), !dbg !1227
  %590 = load i32, i32* @x.9
  %591 = load i32, i32* @y.10
  %592 = sub i32 %590, 1
  %593 = mul i32 %590, %592
  %594 = urem i32 %593, 2
  %595 = icmp eq i32 %594, 0
  %596 = icmp slt i32 %591, 10
  %597 = or i1 %595, %596
  br i1 %597, label %originalBBpart2143, label %originalBB141alteredBB

originalBBpart2143:                               ; preds = %originalBB141
  br label %718, !dbg !1227

598:                                              ; preds = %originalBBpart2139, %555
  %599 = load i32, i32* @x.9
  %600 = load i32, i32* @y.10
  %601 = sub i32 %599, 1
  %602 = mul i32 %599, %601
  %603 = urem i32 %602, 2
  %604 = icmp eq i32 %603, 0
  %605 = icmp slt i32 %600, 10
  %606 = or i1 %604, %605
  br i1 %606, label %originalBB145, label %originalBB145alteredBB

originalBB145:                                    ; preds = %598, %originalBB145alteredBB
  %607 = load i8, i8* @need_login, align 1, !dbg !1228
  %608 = trunc i8 %607 to i1, !dbg !1228
  %609 = load i32, i32* @x.9
  %610 = load i32, i32* @y.10
  %611 = sub i32 %609, 1
  %612 = mul i32 %609, %611
  %613 = urem i32 %612, 2
  %614 = icmp eq i32 %613, 0
  %615 = icmp slt i32 %610, 10
  %616 = or i1 %614, %615
  br i1 %616, label %originalBBpart2147, label %originalBB145alteredBB

originalBBpart2147:                               ; preds = %originalBB145
  br i1 %608, label %617, label %657, !dbg !1230

617:                                              ; preds = %originalBBpart2147
  %618 = load i32, i32* @x.9
  %619 = load i32, i32* @y.10
  %620 = sub i32 %618, 1
  %621 = mul i32 %618, %620
  %622 = urem i32 %621, 2
  %623 = icmp eq i32 %622, 0
  %624 = icmp slt i32 %619, 10
  %625 = or i1 %623, %624
  br i1 %625, label %originalBB149, label %originalBB149alteredBB

originalBB149:                                    ; preds = %617, %originalBB149alteredBB
  %626 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1231
  %627 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %626, i32 0, i32 0, !dbg !1231
  %628 = load i16, i16* %627, align 4, !dbg !1231
  %629 = sext i16 %628 to i32, !dbg !1231
  %630 = icmp eq i32 %629, 6, !dbg !1231
  %631 = load i32, i32* @x.9
  %632 = load i32, i32* @y.10
  %633 = sub i32 %631, 1
  %634 = mul i32 %631, %633
  %635 = urem i32 %634, 2
  %636 = icmp eq i32 %635, 0
  %637 = icmp slt i32 %632, 10
  %638 = or i1 %636, %637
  br i1 %638, label %originalBBpart2151, label %originalBB149alteredBB

originalBBpart2151:                               ; preds = %originalBB149
  br i1 %630, label %639, label %657, !dbg !1232

639:                                              ; preds = %originalBBpart2151
  %640 = load i32, i32* @x.9
  %641 = load i32, i32* @y.10
  %642 = sub i32 %640, 1
  %643 = mul i32 %640, %642
  %644 = urem i32 %643, 2
  %645 = icmp eq i32 %644, 0
  %646 = icmp slt i32 %641, 10
  %647 = or i1 %645, %646
  br i1 %647, label %originalBB153, label %originalBB153alteredBB

originalBB153:                                    ; preds = %639, %originalBB153alteredBB
  %648 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1233
  call void @print_login(%struct.utmpx* %648), !dbg !1234
  %649 = load i32, i32* @x.9
  %650 = load i32, i32* @y.10
  %651 = sub i32 %649, 1
  %652 = mul i32 %649, %651
  %653 = urem i32 %652, 2
  %654 = icmp eq i32 %653, 0
  %655 = icmp slt i32 %650, 10
  %656 = or i1 %654, %655
  br i1 %656, label %originalBBpart2155, label %originalBB153alteredBB

originalBBpart2155:                               ; preds = %originalBB153
  br label %717, !dbg !1234

657:                                              ; preds = %originalBBpart2151, %originalBBpart2147
  %658 = load i32, i32* @x.9
  %659 = load i32, i32* @y.10
  %660 = sub i32 %658, 1
  %661 = mul i32 %658, %660
  %662 = urem i32 %661, 2
  %663 = icmp eq i32 %662, 0
  %664 = icmp slt i32 %659, 10
  %665 = or i1 %663, %664
  br i1 %665, label %originalBB157, label %originalBB157alteredBB

originalBB157:                                    ; preds = %657, %originalBB157alteredBB
  %666 = load i8, i8* @need_deadprocs, align 1, !dbg !1235
  %667 = trunc i8 %666 to i1, !dbg !1235
  %668 = load i32, i32* @x.9
  %669 = load i32, i32* @y.10
  %670 = sub i32 %668, 1
  %671 = mul i32 %668, %670
  %672 = urem i32 %671, 2
  %673 = icmp eq i32 %672, 0
  %674 = icmp slt i32 %669, 10
  %675 = or i1 %673, %674
  br i1 %675, label %originalBBpart2159, label %originalBB157alteredBB

originalBBpart2159:                               ; preds = %originalBB157
  br i1 %667, label %676, label %700, !dbg !1237

676:                                              ; preds = %originalBBpart2159
  %677 = load i32, i32* @x.9
  %678 = load i32, i32* @y.10
  %679 = sub i32 %677, 1
  %680 = mul i32 %677, %679
  %681 = urem i32 %680, 2
  %682 = icmp eq i32 %681, 0
  %683 = icmp slt i32 %678, 10
  %684 = or i1 %682, %683
  br i1 %684, label %originalBB161, label %originalBB161alteredBB

originalBB161:                                    ; preds = %676, %originalBB161alteredBB
  %685 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1238
  %686 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %685, i32 0, i32 0, !dbg !1238
  %687 = load i16, i16* %686, align 4, !dbg !1238
  %688 = sext i16 %687 to i32, !dbg !1238
  %689 = icmp eq i32 %688, 8, !dbg !1238
  %690 = load i32, i32* @x.9
  %691 = load i32, i32* @y.10
  %692 = sub i32 %690, 1
  %693 = mul i32 %690, %692
  %694 = urem i32 %693, 2
  %695 = icmp eq i32 %694, 0
  %696 = icmp slt i32 %691, 10
  %697 = or i1 %695, %696
  br i1 %697, label %originalBBpart2163, label %originalBB161alteredBB

originalBBpart2163:                               ; preds = %originalBB161
  br i1 %689, label %698, label %700, !dbg !1239

698:                                              ; preds = %originalBBpart2163
  %699 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1240
  call void @print_deadprocs(%struct.utmpx* %699), !dbg !1241
  br label %700, !dbg !1241

700:                                              ; preds = %698, %originalBBpart2163, %originalBBpart2159
  %701 = load i32, i32* @x.9
  %702 = load i32, i32* @y.10
  %703 = sub i32 %701, 1
  %704 = mul i32 %701, %703
  %705 = urem i32 %704, 2
  %706 = icmp eq i32 %705, 0
  %707 = icmp slt i32 %702, 10
  %708 = or i1 %706, %707
  br i1 %708, label %originalBB165, label %originalBB165alteredBB

originalBB165:                                    ; preds = %700, %originalBB165alteredBB
  %709 = load i32, i32* @x.9
  %710 = load i32, i32* @y.10
  %711 = sub i32 %709, 1
  %712 = mul i32 %709, %711
  %713 = urem i32 %712, 2
  %714 = icmp eq i32 %713, 0
  %715 = icmp slt i32 %710, 10
  %716 = or i1 %714, %715
  br i1 %716, label %originalBBpart2167, label %originalBB165alteredBB

originalBBpart2167:                               ; preds = %originalBB165
  br label %717

717:                                              ; preds = %originalBBpart2167, %originalBBpart2155
  br label %718

718:                                              ; preds = %717, %originalBBpart2143
  %719 = load i32, i32* @x.9
  %720 = load i32, i32* @y.10
  %721 = sub i32 %719, 1
  %722 = mul i32 %719, %721
  %723 = urem i32 %722, 2
  %724 = icmp eq i32 %723, 0
  %725 = icmp slt i32 %720, 10
  %726 = or i1 %724, %725
  br i1 %726, label %originalBB169, label %originalBB169alteredBB

originalBB169:                                    ; preds = %718, %originalBB169alteredBB
  %727 = load i32, i32* @x.9
  %728 = load i32, i32* @y.10
  %729 = sub i32 %727, 1
  %730 = mul i32 %727, %729
  %731 = urem i32 %730, 2
  %732 = icmp eq i32 %731, 0
  %733 = icmp slt i32 %728, 10
  %734 = or i1 %732, %733
  br i1 %734, label %originalBBpart2171, label %originalBB169alteredBB

originalBBpart2171:                               ; preds = %originalBB169
  br label %735

735:                                              ; preds = %originalBBpart2171, %originalBBpart2135
  %736 = load i32, i32* @x.9
  %737 = load i32, i32* @y.10
  %738 = sub i32 %736, 1
  %739 = mul i32 %736, %738
  %740 = urem i32 %739, 2
  %741 = icmp eq i32 %740, 0
  %742 = icmp slt i32 %737, 10
  %743 = or i1 %741, %742
  br i1 %743, label %originalBB173, label %originalBB173alteredBB

originalBB173:                                    ; preds = %735, %originalBB173alteredBB
  %744 = load i32, i32* @x.9
  %745 = load i32, i32* @y.10
  %746 = sub i32 %744, 1
  %747 = mul i32 %744, %746
  %748 = urem i32 %747, 2
  %749 = icmp eq i32 %748, 0
  %750 = icmp slt i32 %745, 10
  %751 = or i1 %749, %750
  br i1 %751, label %originalBBpart2175, label %originalBB173alteredBB

originalBBpart2175:                               ; preds = %originalBB173
  br label %752

752:                                              ; preds = %originalBBpart2175, %494
  %753 = load i32, i32* @x.9
  %754 = load i32, i32* @y.10
  %755 = sub i32 %753, 1
  %756 = mul i32 %753, %755
  %757 = urem i32 %756, 2
  %758 = icmp eq i32 %757, 0
  %759 = icmp slt i32 %754, 10
  %760 = or i1 %758, %759
  br i1 %760, label %originalBB177, label %originalBB177alteredBB

originalBB177:                                    ; preds = %752, %originalBB177alteredBB
  %761 = load i32, i32* @x.9
  %762 = load i32, i32* @y.10
  %763 = sub i32 %761, 1
  %764 = mul i32 %761, %763
  %765 = urem i32 %764, 2
  %766 = icmp eq i32 %765, 0
  %767 = icmp slt i32 %762, 10
  %768 = or i1 %766, %767
  br i1 %768, label %originalBBpart2179, label %originalBB177alteredBB

originalBBpart2179:                               ; preds = %originalBB177
  br label %769

769:                                              ; preds = %originalBBpart2179, %originalBBpart2119
  %770 = load i32, i32* @x.9
  %771 = load i32, i32* @y.10
  %772 = sub i32 %770, 1
  %773 = mul i32 %770, %772
  %774 = urem i32 %773, 2
  %775 = icmp eq i32 %774, 0
  %776 = icmp slt i32 %771, 10
  %777 = or i1 %775, %776
  br i1 %777, label %originalBB181, label %originalBB181alteredBB

originalBB181:                                    ; preds = %769, %originalBB181alteredBB
  %778 = load i32, i32* @x.9
  %779 = load i32, i32* @y.10
  %780 = sub i32 %778, 1
  %781 = mul i32 %778, %780
  %782 = urem i32 %781, 2
  %783 = icmp eq i32 %782, 0
  %784 = icmp slt i32 %779, 10
  %785 = or i1 %783, %784
  br i1 %785, label %originalBBpart2183, label %originalBB181alteredBB

originalBBpart2183:                               ; preds = %originalBB181
  br label %786

786:                                              ; preds = %originalBBpart2183, %originalBBpart2107
  %787 = load i32, i32* @x.9
  %788 = load i32, i32* @y.10
  %789 = sub i32 %787, 1
  %790 = mul i32 %787, %789
  %791 = urem i32 %790, 2
  %792 = icmp eq i32 %791, 0
  %793 = icmp slt i32 %788, 10
  %794 = or i1 %792, %793
  br i1 %794, label %originalBB185, label %originalBB185alteredBB

originalBB185:                                    ; preds = %786, %originalBB185alteredBB
  %795 = load i32, i32* @x.9
  %796 = load i32, i32* @y.10
  %797 = sub i32 %795, 1
  %798 = mul i32 %795, %797
  %799 = urem i32 %798, 2
  %800 = icmp eq i32 %799, 0
  %801 = icmp slt i32 %796, 10
  %802 = or i1 %800, %801
  br i1 %802, label %originalBBpart2187, label %originalBB185alteredBB

originalBBpart2187:                               ; preds = %originalBB185
  br label %803, !dbg !1242

803:                                              ; preds = %originalBBpart2187, %originalBBpart291
  %804 = load i32, i32* @x.9
  %805 = load i32, i32* @y.10
  %806 = sub i32 %804, 1
  %807 = mul i32 %804, %806
  %808 = urem i32 %807, 2
  %809 = icmp eq i32 %808, 0
  %810 = icmp slt i32 %805, 10
  %811 = or i1 %809, %810
  br i1 %811, label %originalBB189, label %originalBB189alteredBB

originalBB189:                                    ; preds = %803, %originalBB189alteredBB
  %812 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1243
  %813 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %812, i32 0, i32 0, !dbg !1243
  %814 = load i16, i16* %813, align 4, !dbg !1243
  %815 = sext i16 %814 to i32, !dbg !1243
  %816 = icmp eq i32 %815, 2, !dbg !1243
  %817 = load i32, i32* @x.9
  %818 = load i32, i32* @y.10
  %819 = sub i32 %817, 1
  %820 = mul i32 %817, %819
  %821 = urem i32 %820, 2
  %822 = icmp eq i32 %821, 0
  %823 = icmp slt i32 %818, 10
  %824 = or i1 %822, %823
  br i1 %824, label %originalBBpart2191, label %originalBB189alteredBB

originalBBpart2191:                               ; preds = %originalBB189
  br i1 %816, label %825, label %847, !dbg !1245

825:                                              ; preds = %originalBBpart2191
  %826 = load i32, i32* @x.9
  %827 = load i32, i32* @y.10
  %828 = sub i32 %826, 1
  %829 = mul i32 %826, %828
  %830 = urem i32 %829, 2
  %831 = icmp eq i32 %830, 0
  %832 = icmp slt i32 %827, 10
  %833 = or i1 %831, %832
  br i1 %833, label %originalBB193, label %originalBB193alteredBB

originalBB193:                                    ; preds = %825, %originalBB193alteredBB
  %834 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1246
  %835 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %834, i32 0, i32 8, !dbg !1246
  %836 = getelementptr inbounds %struct.anon, %struct.anon* %835, i32 0, i32 0, !dbg !1246
  %837 = load i32, i32* %836, align 4, !dbg !1246
  %838 = sext i32 %837 to i64, !dbg !1246
  store i64 %838, i64* %14, align 8, !dbg !1247
  %839 = load i32, i32* @x.9
  %840 = load i32, i32* @y.10
  %841 = sub i32 %839, 1
  %842 = mul i32 %839, %841
  %843 = urem i32 %842, 2
  %844 = icmp eq i32 %843, 0
  %845 = icmp slt i32 %840, 10
  %846 = or i1 %844, %845
  br i1 %846, label %originalBBpart2195, label %originalBB193alteredBB

originalBBpart2195:                               ; preds = %originalBB193
  br label %847, !dbg !1248

847:                                              ; preds = %originalBBpart2195, %originalBBpart2191
  %848 = load i32, i32* @x.9
  %849 = load i32, i32* @y.10
  %850 = sub i32 %848, 1
  %851 = mul i32 %848, %850
  %852 = urem i32 %851, 2
  %853 = icmp eq i32 %852, 0
  %854 = icmp slt i32 %849, 10
  %855 = or i1 %853, %854
  br i1 %855, label %originalBB197, label %originalBB197alteredBB

originalBB197:                                    ; preds = %847, %originalBB197alteredBB
  %856 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1249
  %857 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %856, i32 1, !dbg !1249
  store %struct.utmpx* %857, %struct.utmpx** %12, align 8, !dbg !1249
  %858 = load i32, i32* @x.9
  %859 = load i32, i32* @y.10
  %860 = sub i32 %858, 1
  %861 = mul i32 %858, %860
  %862 = urem i32 %861, 2
  %863 = icmp eq i32 %862, 0
  %864 = icmp slt i32 %859, 10
  %865 = or i1 %863, %864
  br i1 %865, label %originalBBpart2199, label %originalBB197alteredBB

originalBBpart2199:                               ; preds = %originalBB197
  br label %265, !dbg !1183, !llvm.loop !1250

866:                                              ; preds = %originalBBpart283, %originalBBpart212
  %867 = load i32, i32* @x.9
  %868 = load i32, i32* @y.10
  %869 = sub i32 %867, 1
  %870 = mul i32 %867, %869
  %871 = urem i32 %870, 2
  %872 = icmp eq i32 %871, 0
  %873 = icmp slt i32 %868, 10
  %874 = or i1 %872, %873
  br i1 %874, label %originalBB201, label %originalBB201alteredBB

originalBB201:                                    ; preds = %866, %originalBB201alteredBB
  %875 = load i32, i32* @x.9
  %876 = load i32, i32* @y.10
  %877 = sub i32 %875, 1
  %878 = mul i32 %875, %877
  %879 = urem i32 %878, 2
  %880 = icmp eq i32 %879, 0
  %881 = icmp slt i32 %876, 10
  %882 = or i1 %880, %881
  br i1 %882, label %originalBBpart2203, label %originalBB201alteredBB

originalBBpart2203:                               ; preds = %originalBB201
  ret void, !dbg !1252

originalBBalteredBB:                              ; preds = %originalBB, %2
  %883 = alloca i64, align 8
  %884 = alloca %struct.utmpx*, align 8
  %885 = alloca i8*, align 8
  %886 = alloca i64, align 8
  store i64 %0, i64* %883, align 8
  call void @llvm.dbg.declare(metadata i64* %883, metadata !1253, metadata !DIExpression()), !dbg !1156
  store %struct.utmpx* %1, %struct.utmpx** %884, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %884, metadata !1357, metadata !DIExpression()), !dbg !1158
  call void @llvm.dbg.declare(metadata i8** %885, metadata !1358, metadata !DIExpression()), !dbg !1160
  call void @llvm.dbg.declare(metadata i64* %886, metadata !1359, metadata !DIExpression()), !dbg !1162
  store i64 -9223372036854775808, i64* %886, align 8, !dbg !1162
  %887 = load i8, i8* @include_heading, align 1, !dbg !1163
  %888 = trunc i8 %887 to i1, !dbg !1163
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %889 = load i8, i8* @my_line_only, align 1, !dbg !1167
  %890 = trunc i8 %889 to i1, !dbg !1167
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %45
  %891 = call i8* @ttyname(i32 0) #10, !dbg !1170
  store i8* %891, i8** %13, align 8, !dbg !1172
  %892 = load i8*, i8** %13, align 8, !dbg !1173
  %893 = icmp ne i8* %892, null, !dbg !1173
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %65
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %85
  %collatzVaralteredBB = alloca i32
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %106
  %894 = load i8**, i8*** @inVal1
  %895 = getelementptr inbounds i8*, i8** %894, i64 1
  %896 = load i8*, i8** %895
  %controlealteredBB = call i32 @controle(i8* %896, i32 0)
  store i32 %controlealteredBB, i32* %collatzVar
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %126
  %897 = load i32, i32* %collatzVar
  %898 = icmp sgt i32 %897, 1
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %149
  %899 = load i32, i32* %collatzVar
  %_ = sub i32 %899, 2
  %gen = mul i32 %_, 2
  %_27 = sub i32 0, %899
  %gen28 = add i32 %_27, 2
  %_29 = sub i32 0, %899
  %gen30 = add i32 %_29, 2
  %_31 = shl i32 %899, 2
  %_32 = sub i32 %899, 2
  %gen33 = mul i32 %_32, 2
  %_34 = shl i32 %899, 2
  %_35 = sub i32 0, %899
  %gen36 = add i32 %_35, 2
  %900 = sdiv i32 %899, 2
  store i32 %900, i32* %collatzVar
  br label %originalBB26

originalBB40alteredBB:                            ; preds = %originalBB40, %168
  %901 = load i32, i32* %collatzVar
  %_41 = sub i32 %901, 3
  %gen42 = mul i32 %_41, 3
  %_43 = shl i32 %901, 3
  %_44 = sub i32 %901, 3
  %gen45 = mul i32 %_44, 3
  %902 = mul i32 %901, 3
  %_46 = shl i32 %902, 1
  %_47 = sub i32 %902, 1
  %gen48 = mul i32 %_47, 1
  %_49 = sub i32 0, %902
  %gen50 = add i32 %_49, 1
  %_51 = shl i32 %902, 1
  %_52 = shl i32 %902, 1
  %903 = add i32 %902, 1
  store i32 %903, i32* %collatzVar
  br label %originalBB40

originalBB56alteredBB:                            ; preds = %originalBB56, %188
  %904 = load i32, i32* %collatzVar
  %_57 = sub i32 0, %84
  %gen58 = add i32 %_57, %904
  %905 = sub i32 %84, %904
  %906 = icmp sgt i32 %905, -2
  br label %originalBB56

originalBB62alteredBB:                            ; preds = %originalBB62, %212
  %907 = load i8*, i8** %13, align 8, !dbg !1180
  %908 = getelementptr inbounds i8, i8* %907, i64 5, !dbg !1180
  store i8* %908, i8** %13, align 8, !dbg !1180
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %231
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %248
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %265
  %909 = load i64, i64* %11, align 8, !dbg !1184
  %_75 = sub i64 0, %909
  %gen76 = add i64 %_75, -1
  %_77 = sub i64 %909, -1
  %gen78 = mul i64 %_77, -1
  %_79 = shl i64 %909, -1
  %_80 = sub i64 0, %909
  %gen81 = add i64 %_80, -1
  %910 = add i64 %909, -1, !dbg !1184
  store i64 %910, i64* %11, align 8, !dbg !1184
  %911 = icmp ne i64 %909, 0, !dbg !1183
  br label %originalBB74

originalBB85alteredBB:                            ; preds = %originalBB85, %285
  %912 = load i8, i8* @my_line_only, align 1, !dbg !1185
  %913 = trunc i8 %912 to i1, !dbg !1185
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %304
  %914 = load i8*, i8** %13, align 8, !dbg !1189
  %915 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1189
  %916 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %915, i32 0, i32 2, !dbg !1189
  %917 = getelementptr inbounds [32 x i8], [32 x i8]* %916, i64 0, i64 0, !dbg !1189
  %918 = call i32 @strncmp(i8* %914, i8* %917, i64 32) #13, !dbg !1189
  %919 = icmp eq i32 %918, 0, !dbg !1189
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %327
  %920 = load i8, i8* @need_users, align 1, !dbg !1191
  %921 = trunc i8 %920 to i1, !dbg !1191
  br label %originalBB93

originalBB97alteredBB:                            ; preds = %originalBB97, %346
  %922 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1195
  %923 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %922, i32 0, i32 4, !dbg !1195
  %924 = getelementptr inbounds [32 x i8], [32 x i8]* %923, i64 0, i64 0, !dbg !1195
  %925 = load i8, i8* %924, align 4, !dbg !1195
  %926 = sext i8 %925 to i32, !dbg !1195
  %927 = icmp ne i32 %926, 0, !dbg !1195
  br label %originalBB97

originalBB101alteredBB:                           ; preds = %originalBB101, %369
  %928 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1195
  %929 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %928, i32 0, i32 0, !dbg !1195
  %930 = load i16, i16* %929, align 4, !dbg !1195
  %931 = sext i16 %930 to i32, !dbg !1195
  %932 = icmp eq i32 %931, 7, !dbg !1195
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %391
  %933 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1197
  %934 = load i64, i64* %14, align 8, !dbg !1198
  call void @print_user(%struct.utmpx* %933, i64 %934), !dbg !1199
  br label %originalBB105

originalBB109alteredBB:                           ; preds = %originalBB109, %410
  %935 = load i8, i8* @need_runlevel, align 1, !dbg !1200
  %936 = trunc i8 %935 to i1, !dbg !1200
  br label %originalBB109

originalBB113alteredBB:                           ; preds = %originalBB113, %429
  %937 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1203
  %938 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %937, i32 0, i32 0, !dbg !1203
  %939 = load i16, i16* %938, align 4, !dbg !1203
  %940 = sext i16 %939 to i32, !dbg !1203
  %941 = icmp eq i32 %940, 1, !dbg !1203
  br label %originalBB113

originalBB117alteredBB:                           ; preds = %originalBB117, %451
  %942 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1205
  call void @print_runlevel(%struct.utmpx* %942), !dbg !1206
  br label %originalBB117

originalBB121alteredBB:                           ; preds = %originalBB121, %472
  %943 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1210
  %944 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %943, i32 0, i32 0, !dbg !1210
  %945 = load i16, i16* %944, align 4, !dbg !1210
  %946 = sext i16 %945 to i32, !dbg !1210
  %947 = icmp eq i32 %946, 2, !dbg !1210
  br label %originalBB121

originalBB125alteredBB:                           ; preds = %originalBB125, %496
  %948 = load i8, i8* @need_clockchange, align 1, !dbg !1214
  %949 = trunc i8 %948 to i1, !dbg !1214
  br label %originalBB125

originalBB129alteredBB:                           ; preds = %originalBB129, %515
  %950 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1217
  %951 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %950, i32 0, i32 0, !dbg !1217
  %952 = load i16, i16* %951, align 4, !dbg !1217
  %953 = sext i16 %952 to i32, !dbg !1217
  %954 = icmp eq i32 %953, 3, !dbg !1217
  br label %originalBB129

originalBB133alteredBB:                           ; preds = %originalBB133, %537
  %955 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1219
  call void @print_clockchange(%struct.utmpx* %955), !dbg !1220
  br label %originalBB133

originalBB137alteredBB:                           ; preds = %originalBB137, %558
  %956 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1224
  %957 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %956, i32 0, i32 0, !dbg !1224
  %958 = load i16, i16* %957, align 4, !dbg !1224
  %959 = sext i16 %958 to i32, !dbg !1224
  %960 = icmp eq i32 %959, 5, !dbg !1224
  br label %originalBB137

originalBB141alteredBB:                           ; preds = %originalBB141, %580
  %961 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1226
  call void @print_initspawn(%struct.utmpx* %961), !dbg !1227
  br label %originalBB141

originalBB145alteredBB:                           ; preds = %originalBB145, %598
  %962 = load i8, i8* @need_login, align 1, !dbg !1228
  %963 = trunc i8 %962 to i1, !dbg !1228
  br label %originalBB145

originalBB149alteredBB:                           ; preds = %originalBB149, %617
  %964 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1231
  %965 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %964, i32 0, i32 0, !dbg !1231
  %966 = load i16, i16* %965, align 4, !dbg !1231
  %967 = sext i16 %966 to i32, !dbg !1231
  %968 = icmp eq i32 %967, 6, !dbg !1231
  br label %originalBB149

originalBB153alteredBB:                           ; preds = %originalBB153, %639
  %969 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1233
  call void @print_login(%struct.utmpx* %969), !dbg !1234
  br label %originalBB153

originalBB157alteredBB:                           ; preds = %originalBB157, %657
  %970 = load i8, i8* @need_deadprocs, align 1, !dbg !1235
  %971 = trunc i8 %970 to i1, !dbg !1235
  br label %originalBB157

originalBB161alteredBB:                           ; preds = %originalBB161, %676
  %972 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1238
  %973 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %972, i32 0, i32 0, !dbg !1238
  %974 = load i16, i16* %973, align 4, !dbg !1238
  %975 = sext i16 %974 to i32, !dbg !1238
  %976 = icmp eq i32 %975, 8, !dbg !1238
  br label %originalBB161

originalBB165alteredBB:                           ; preds = %originalBB165, %700
  br label %originalBB165

originalBB169alteredBB:                           ; preds = %originalBB169, %718
  br label %originalBB169

originalBB173alteredBB:                           ; preds = %originalBB173, %735
  br label %originalBB173

originalBB177alteredBB:                           ; preds = %originalBB177, %752
  br label %originalBB177

originalBB181alteredBB:                           ; preds = %originalBB181, %769
  br label %originalBB181

originalBB185alteredBB:                           ; preds = %originalBB185, %786
  br label %originalBB185

originalBB189alteredBB:                           ; preds = %originalBB189, %803
  %977 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1243
  %978 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %977, i32 0, i32 0, !dbg !1243
  %979 = load i16, i16* %978, align 4, !dbg !1243
  %980 = sext i16 %979 to i32, !dbg !1243
  %981 = icmp eq i32 %980, 2, !dbg !1243
  br label %originalBB189

originalBB193alteredBB:                           ; preds = %originalBB193, %825
  %982 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1246
  %983 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %982, i32 0, i32 8, !dbg !1246
  %984 = getelementptr inbounds %struct.anon, %struct.anon* %983, i32 0, i32 0, !dbg !1246
  %985 = load i32, i32* %984, align 4, !dbg !1246
  %986 = sext i32 %985 to i64, !dbg !1246
  store i64 %986, i64* %14, align 8, !dbg !1247
  br label %originalBB193

originalBB197alteredBB:                           ; preds = %originalBB197, %847
  %987 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1249
  %988 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %987, i32 1, !dbg !1249
  store %struct.utmpx* %988, %struct.utmpx** %12, align 8, !dbg !1249
  br label %originalBB197

originalBB201alteredBB:                           ; preds = %originalBB201, %866
  br label %originalBB201
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_heading() #4 !dbg !1360 {
  %1 = load i32, i32* @x.11
  %2 = load i32, i32* @y.12
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0)) #10, !dbg !1363
  %10 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i64 0, i64 0)) #10, !dbg !1364
  %11 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i64 0, i64 0)) #10, !dbg !1365
  %12 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i64 0, i64 0)) #10, !dbg !1366
  %13 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i64 0, i64 0)) #10, !dbg !1367
  %14 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i64 0, i64 0)) #10, !dbg !1368
  %15 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0)) #10, !dbg !1369
  call void @print_line(i32 -1, i8* %9, i8 signext 32, i32 -1, i8* %10, i8* %11, i8* %12, i8* %13, i8* %14, i8* %15), !dbg !1370
  %16 = load i32, i32* @x.11
  %17 = load i32, i32* @y.12
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !1371

originalBBalteredBB:                              ; preds = %originalBB, %0
  %24 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0)) #10, !dbg !1363
  %25 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i64 0, i64 0)) #10, !dbg !1364
  %26 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i64 0, i64 0)) #10, !dbg !1365
  %27 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i64 0, i64 0)) #10, !dbg !1366
  %28 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i64 0, i64 0)) #10, !dbg !1367
  %29 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i64 0, i64 0)) #10, !dbg !1368
  %30 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0)) #10, !dbg !1369
  call void @print_line(i32 -1, i8* %24, i8 signext 32, i32 -1, i8* %25, i8* %26, i8* %27, i8* %28, i8* %29, i8* %30), !dbg !1370
  br label %originalBB
}

; Function Attrs: nounwind
declare dso_local i8* @ttyname(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_user(%struct.utmpx*, i64) #4 !dbg !64 {
  %3 = load i32, i32* @x.13
  %4 = load i32, i32* @y.14
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %struct.utmpx*, align 8
  %12 = alloca i64, align 8
  %13 = alloca %struct.stat, align 8
  %14 = alloca i64, align 8
  %15 = alloca i8, align 1
  %16 = alloca [7 x i8], align 1
  %17 = alloca [38 x i8], align 16
  %18 = alloca i8*, align 8
  %19 = alloca [12 x i8], align 1
  %20 = alloca [257 x i8], align 16
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %11, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %11, metadata !1372, metadata !DIExpression()), !dbg !1373
  store i64 %1, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !1374, metadata !DIExpression()), !dbg !1375
  call void @llvm.dbg.declare(metadata %struct.stat* %13, metadata !1376, metadata !DIExpression()), !dbg !1411
  call void @llvm.dbg.declare(metadata i64* %14, metadata !1412, metadata !DIExpression()), !dbg !1413
  call void @llvm.dbg.declare(metadata i8* %15, metadata !1414, metadata !DIExpression()), !dbg !1415
  call void @llvm.dbg.declare(metadata [7 x i8]* %16, metadata !1416, metadata !DIExpression()), !dbg !1418
  call void @llvm.dbg.declare(metadata [38 x i8]* %17, metadata !1419, metadata !DIExpression()), !dbg !1423
  call void @llvm.dbg.declare(metadata i8** %18, metadata !1424, metadata !DIExpression()), !dbg !1425
  %23 = getelementptr inbounds [38 x i8], [38 x i8]* %17, i64 0, i64 0, !dbg !1426
  store i8* %23, i8** %18, align 8, !dbg !1425
  call void @llvm.dbg.declare(metadata [12 x i8]* %19, metadata !1427, metadata !DIExpression()), !dbg !1431
  %24 = getelementptr inbounds [12 x i8], [12 x i8]* %19, i64 0, i64 0, !dbg !1431
  %25 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1431
  %26 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %25, i32 0, i32 1, !dbg !1431
  %27 = load i32, i32* %26, align 4, !dbg !1431
  %28 = sext i32 %27 to i64, !dbg !1431
  %29 = call i32 (i8*, i8*, ...) @sprintf(i8* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %28) #10, !dbg !1431
  %30 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1432
  %31 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %30, i32 0, i32 2, !dbg !1432
  %32 = getelementptr inbounds [32 x i8], [32 x i8]* %31, i64 0, i64 0, !dbg !1432
  %33 = load i8, i8* %32, align 4, !dbg !1432
  %34 = sext i8 %33 to i32, !dbg !1432
  %35 = icmp eq i32 %34, 47, !dbg !1432
  %36 = load i32, i32* @x.13
  %37 = load i32, i32* @y.14
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %35, label %63, label %44, !dbg !1434

44:                                               ; preds = %originalBBpart2
  %45 = load i32, i32* @x.13
  %46 = load i32, i32* @y.14
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %44, %originalBB1alteredBB
  %53 = load i8*, i8** %18, align 8, !dbg !1435
  %54 = call i8* @stpcpy(i8* %53, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0)) #10, !dbg !1436
  store i8* %54, i8** %18, align 8, !dbg !1437
  %55 = load i32, i32* @x.13
  %56 = load i32, i32* @y.14
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %63, !dbg !1438

63:                                               ; preds = %originalBBpart24, %originalBBpart2
  %64 = load i32, i32* @x.13
  %65 = load i32, i32* @y.14
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %63, %originalBB6alteredBB
  %72 = load i8*, i8** %18, align 8, !dbg !1439
  %73 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1440
  %74 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %73, i32 0, i32 2, !dbg !1441
  %75 = getelementptr inbounds [32 x i8], [32 x i8]* %74, i64 0, i64 0, !dbg !1440
  %76 = call i8* @stzncpy(i8* %72, i8* %75, i64 32), !dbg !1442
  %77 = getelementptr inbounds [38 x i8], [38 x i8]* %17, i64 0, i64 0, !dbg !1443
  %78 = call i32 @stat(i8* %77, %struct.stat* %13) #10, !dbg !1445
  %79 = icmp eq i32 %78, 0, !dbg !1446
  %80 = load i32, i32* @x.13
  %81 = load i32, i32* @y.14
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %79, label %88, label %112, !dbg !1447

88:                                               ; preds = %originalBBpart28
  %89 = load i32, i32* @x.13
  %90 = load i32, i32* @y.14
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %88, %originalBB10alteredBB
  %97 = call zeroext i1 @is_tty_writable(%struct.stat* %13), !dbg !1448
  %98 = zext i1 %97 to i64, !dbg !1448
  %99 = select i1 %97, i32 43, i32 45, !dbg !1448
  %100 = trunc i32 %99 to i8, !dbg !1448
  store i8 %100, i8* %15, align 1, !dbg !1450
  %101 = getelementptr inbounds %struct.stat, %struct.stat* %13, i32 0, i32 11, !dbg !1451
  %102 = getelementptr inbounds %struct.timespec, %struct.timespec* %101, i32 0, i32 0, !dbg !1451
  %103 = load i64, i64* %102, align 8, !dbg !1451
  store i64 %103, i64* %14, align 8, !dbg !1452
  %104 = load i32, i32* @x.13
  %105 = load i32, i32* @y.14
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %129, !dbg !1453

112:                                              ; preds = %originalBBpart28
  %113 = load i32, i32* @x.13
  %114 = load i32, i32* @y.14
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %112, %originalBB14alteredBB
  store i8 63, i8* %15, align 1, !dbg !1454
  store i64 0, i64* %14, align 8, !dbg !1456
  %121 = load i32, i32* @x.13
  %122 = load i32, i32* @y.14
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %129

129:                                              ; preds = %originalBBpart216, %originalBBpart212
  %130 = load i32, i32* @x.13
  %131 = load i32, i32* @y.14
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %129, %originalBB18alteredBB
  %138 = load i64, i64* %14, align 8, !dbg !1457
  %139 = icmp ne i64 %138, 0, !dbg !1457
  %140 = load i32, i32* @x.13
  %141 = load i32, i32* @y.14
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %139, label %148, label %170, !dbg !1459

148:                                              ; preds = %originalBBpart220
  %149 = load i32, i32* @x.13
  %150 = load i32, i32* @y.14
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %148, %originalBB22alteredBB
  %157 = getelementptr inbounds [7 x i8], [7 x i8]* %16, i64 0, i64 0, !dbg !1460
  %158 = load i64, i64* %14, align 8, !dbg !1461
  %159 = load i64, i64* %12, align 8, !dbg !1462
  %160 = call i8* @idle_string(i64 %158, i64 %159), !dbg !1463
  %161 = call i32 (i8*, i8*, ...) @sprintf(i8* %157, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i64 0, i64 0), i32 6, i8* %160) #10, !dbg !1464
  %162 = load i32, i32* @x.13
  %163 = load i32, i32* @y.14
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %189, !dbg !1464

170:                                              ; preds = %originalBBpart220
  %171 = load i32, i32* @x.13
  %172 = load i32, i32* @y.14
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %170, %originalBB26alteredBB
  %179 = getelementptr inbounds [7 x i8], [7 x i8]* %16, i64 0, i64 0, !dbg !1465
  %180 = call i32 (i8*, i8*, ...) @sprintf(i8* %179, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i64 0, i64 0)) #10, !dbg !1466
  %181 = load i32, i32* @x.13
  %182 = load i32, i32* @y.14
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %189

189:                                              ; preds = %originalBBpart228, %originalBBpart224
  %190 = load i32, i32* @x.13
  %191 = load i32, i32* @y.14
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %189, %originalBB30alteredBB
  %198 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1467
  %199 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %198, i32 0, i32 5, !dbg !1469
  %200 = getelementptr inbounds [256 x i8], [256 x i8]* %199, i64 0, i64 0, !dbg !1467
  %201 = load i8, i8* %200, align 4, !dbg !1467
  %202 = icmp ne i8 %201, 0, !dbg !1467
  %203 = load i32, i32* @x.13
  %204 = load i32, i32* @y.14
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %202, label %211, label %483, !dbg !1470

211:                                              ; preds = %originalBBpart232
  call void @llvm.dbg.declare(metadata [257 x i8]* %20, metadata !1471, metadata !DIExpression()), !dbg !1476
  call void @llvm.dbg.declare(metadata i8** %21, metadata !1477, metadata !DIExpression()), !dbg !1478
  store i8* null, i8** %21, align 8, !dbg !1478
  call void @llvm.dbg.declare(metadata i8** %22, metadata !1479, metadata !DIExpression()), !dbg !1480
  store i8* null, i8** %22, align 8, !dbg !1480
  %212 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1481
  %213 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1482
  %214 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %213, i32 0, i32 5, !dbg !1483
  %215 = getelementptr inbounds [256 x i8], [256 x i8]* %214, i64 0, i64 0, !dbg !1482
  %216 = call i8* @stzncpy(i8* %212, i8* %215, i64 256), !dbg !1484
  %217 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1485
  %218 = call i8* @strchr(i8* %217, i32 58) #13, !dbg !1486
  store i8* %218, i8** %22, align 8, !dbg !1487
  %219 = load i8*, i8** %22, align 8, !dbg !1488
  %220 = icmp ne i8* %219, null, !dbg !1488
  br i1 %220, label %221, label %240, !dbg !1490

221:                                              ; preds = %211
  %222 = load i32, i32* @x.13
  %223 = load i32, i32* @y.14
  %224 = sub i32 %222, 1
  %225 = mul i32 %222, %224
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %227, %228
  br i1 %229, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %221, %originalBB34alteredBB
  %230 = load i8*, i8** %22, align 8, !dbg !1491
  %231 = getelementptr inbounds i8, i8* %230, i32 1, !dbg !1491
  store i8* %231, i8** %22, align 8, !dbg !1491
  store i8 0, i8* %230, align 1, !dbg !1492
  %232 = load i32, i32* @x.13
  %233 = load i32, i32* @y.14
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %240, !dbg !1493

240:                                              ; preds = %originalBBpart236, %211
  %241 = load i32, i32* @x.13
  %242 = load i32, i32* @y.14
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %240, %originalBB38alteredBB
  %249 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1494
  %250 = load i8, i8* %249, align 16, !dbg !1494
  %251 = sext i8 %250 to i32, !dbg !1494
  %252 = icmp ne i32 %251, 0, !dbg !1494
  %253 = load i32, i32* @x.13
  %254 = load i32, i32* @y.14
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %252, label %261, label %299, !dbg !1496

261:                                              ; preds = %originalBBpart240
  %262 = load i32, i32* @x.13
  %263 = load i32, i32* @y.14
  %264 = sub i32 %262, 1
  %265 = mul i32 %262, %264
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %267, %268
  br i1 %269, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %261, %originalBB42alteredBB
  %270 = load i8, i8* @do_lookup, align 1, !dbg !1497
  %271 = trunc i8 %270 to i1, !dbg !1497
  %272 = load i32, i32* @x.13
  %273 = load i32, i32* @y.14
  %274 = sub i32 %272, 1
  %275 = mul i32 %272, %274
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %277, %278
  br i1 %279, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br i1 %271, label %280, label %299, !dbg !1498

280:                                              ; preds = %originalBBpart244
  %281 = load i32, i32* @x.13
  %282 = load i32, i32* @y.14
  %283 = sub i32 %281, 1
  %284 = mul i32 %281, %283
  %285 = urem i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %286, %287
  br i1 %288, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %280, %originalBB46alteredBB
  %289 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1499
  %290 = call noalias i8* @canon_host(i8* %289), !dbg !1501
  store i8* %290, i8** %21, align 8, !dbg !1502
  %291 = load i32, i32* @x.13
  %292 = load i32, i32* @y.14
  %293 = sub i32 %291, 1
  %294 = mul i32 %291, %293
  %295 = urem i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %296, %297
  br i1 %298, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %299, !dbg !1503

299:                                              ; preds = %originalBBpart248, %originalBBpart244, %originalBBpart240
  %300 = load i8*, i8** %21, align 8, !dbg !1504
  %301 = icmp ne i8* %300, null, !dbg !1504
  br i1 %301, label %320, label %302, !dbg !1506

302:                                              ; preds = %299
  %303 = load i32, i32* @x.13
  %304 = load i32, i32* @y.14
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %302, %originalBB50alteredBB
  %311 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1507
  store i8* %311, i8** %21, align 8, !dbg !1508
  %312 = load i32, i32* @x.13
  %313 = load i32, i32* @y.14
  %314 = sub i32 %312, 1
  %315 = mul i32 %312, %314
  %316 = urem i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %317, %318
  br i1 %319, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %320, !dbg !1509

320:                                              ; preds = %originalBBpart252, %299
  %321 = load i8*, i8** %22, align 8, !dbg !1510
  %322 = icmp ne i8* %321, null, !dbg !1510
  br i1 %322, label %323, label %395, !dbg !1512

323:                                              ; preds = %320
  %324 = load i32, i32* @x.13
  %325 = load i32, i32* @y.14
  %326 = sub i32 %324, 1
  %327 = mul i32 %324, %326
  %328 = urem i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %329, %330
  br i1 %331, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %323, %originalBB54alteredBB
  %332 = load i64, i64* @print_user.hostlen, align 8, !dbg !1513
  %333 = load i8*, i8** %21, align 8, !dbg !1516
  %334 = call i64 @strlen(i8* %333) #13, !dbg !1517
  %335 = load i8*, i8** %22, align 8, !dbg !1518
  %336 = call i64 @strlen(i8* %335) #13, !dbg !1519
  %337 = add i64 %334, %336, !dbg !1520
  %338 = add i64 %337, 4, !dbg !1521
  %339 = icmp ult i64 %332, %338, !dbg !1522
  %340 = load i32, i32* @x.13
  %341 = load i32, i32* @y.14
  %342 = sub i32 %340, 1
  %343 = mul i32 %340, %342
  %344 = urem i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %345, %346
  br i1 %347, label %originalBBpart281, label %originalBB54alteredBB

originalBBpart281:                                ; preds = %originalBB54
  br i1 %339, label %348, label %374, !dbg !1523

348:                                              ; preds = %originalBBpart281
  %349 = load i32, i32* @x.13
  %350 = load i32, i32* @y.14
  %351 = sub i32 %349, 1
  %352 = mul i32 %349, %351
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %350, 10
  %356 = or i1 %354, %355
  br i1 %356, label %originalBB83, label %originalBB83alteredBB

originalBB83:                                     ; preds = %348, %originalBB83alteredBB
  %357 = load i8*, i8** %21, align 8, !dbg !1524
  %358 = call i64 @strlen(i8* %357) #13, !dbg !1526
  %359 = load i8*, i8** %22, align 8, !dbg !1527
  %360 = call i64 @strlen(i8* %359) #13, !dbg !1528
  %361 = add i64 %358, %360, !dbg !1529
  %362 = add i64 %361, 4, !dbg !1530
  store i64 %362, i64* @print_user.hostlen, align 8, !dbg !1531
  %363 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1532
  call void @free(i8* %363) #10, !dbg !1533
  %364 = load i64, i64* @print_user.hostlen, align 8, !dbg !1534
  %365 = call noalias i8* @xmalloc(i64 %364), !dbg !1535
  store i8* %365, i8** @print_user.hoststr, align 8, !dbg !1536
  %366 = load i32, i32* @x.13
  %367 = load i32, i32* @y.14
  %368 = sub i32 %366, 1
  %369 = mul i32 %366, %368
  %370 = urem i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %371, %372
  br i1 %373, label %originalBBpart2104, label %originalBB83alteredBB

originalBBpart2104:                               ; preds = %originalBB83
  br label %374, !dbg !1537

374:                                              ; preds = %originalBBpart2104, %originalBBpart281
  %375 = load i32, i32* @x.13
  %376 = load i32, i32* @y.14
  %377 = sub i32 %375, 1
  %378 = mul i32 %375, %377
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %380, %381
  br i1 %382, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %374, %originalBB106alteredBB
  %383 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1538
  %384 = load i8*, i8** %21, align 8, !dbg !1539
  %385 = load i8*, i8** %22, align 8, !dbg !1540
  %386 = call i32 (i8*, i8*, ...) @sprintf(i8* %383, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i64 0, i64 0), i8* %384, i8* %385) #10, !dbg !1541
  %387 = load i32, i32* @x.13
  %388 = load i32, i32* @y.14
  %389 = sub i32 %387, 1
  %390 = mul i32 %387, %389
  %391 = urem i32 %390, 2
  %392 = icmp eq i32 %391, 0
  %393 = icmp slt i32 %388, 10
  %394 = or i1 %392, %393
  br i1 %394, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  br label %444, !dbg !1542

395:                                              ; preds = %320
  %396 = load i32, i32* @x.13
  %397 = load i32, i32* @y.14
  %398 = sub i32 %396, 1
  %399 = mul i32 %396, %398
  %400 = urem i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = icmp slt i32 %397, 10
  %403 = or i1 %401, %402
  br i1 %403, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %395, %originalBB110alteredBB
  %404 = load i64, i64* @print_user.hostlen, align 8, !dbg !1543
  %405 = load i8*, i8** %21, align 8, !dbg !1546
  %406 = call i64 @strlen(i8* %405) #13, !dbg !1547
  %407 = add i64 %406, 3, !dbg !1548
  %408 = icmp ult i64 %404, %407, !dbg !1549
  %409 = load i32, i32* @x.13
  %410 = load i32, i32* @y.14
  %411 = sub i32 %409, 1
  %412 = mul i32 %409, %411
  %413 = urem i32 %412, 2
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %410, 10
  %416 = or i1 %414, %415
  br i1 %416, label %originalBBpart2113, label %originalBB110alteredBB

originalBBpart2113:                               ; preds = %originalBB110
  br i1 %408, label %417, label %440, !dbg !1550

417:                                              ; preds = %originalBBpart2113
  %418 = load i32, i32* @x.13
  %419 = load i32, i32* @y.14
  %420 = sub i32 %418, 1
  %421 = mul i32 %418, %420
  %422 = urem i32 %421, 2
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %419, 10
  %425 = or i1 %423, %424
  br i1 %425, label %originalBB115, label %originalBB115alteredBB

originalBB115:                                    ; preds = %417, %originalBB115alteredBB
  %426 = load i8*, i8** %21, align 8, !dbg !1551
  %427 = call i64 @strlen(i8* %426) #13, !dbg !1553
  %428 = add i64 %427, 3, !dbg !1554
  store i64 %428, i64* @print_user.hostlen, align 8, !dbg !1555
  %429 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1556
  call void @free(i8* %429) #10, !dbg !1557
  %430 = load i64, i64* @print_user.hostlen, align 8, !dbg !1558
  %431 = call noalias i8* @xmalloc(i64 %430), !dbg !1559
  store i8* %431, i8** @print_user.hoststr, align 8, !dbg !1560
  %432 = load i32, i32* @x.13
  %433 = load i32, i32* @y.14
  %434 = sub i32 %432, 1
  %435 = mul i32 %432, %434
  %436 = urem i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = icmp slt i32 %433, 10
  %439 = or i1 %437, %438
  br i1 %439, label %originalBBpart2120, label %originalBB115alteredBB

originalBBpart2120:                               ; preds = %originalBB115
  br label %440, !dbg !1561

440:                                              ; preds = %originalBBpart2120, %originalBBpart2113
  %441 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1562
  %442 = load i8*, i8** %21, align 8, !dbg !1563
  %443 = call i32 (i8*, i8*, ...) @sprintf(i8* %441, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i64 0, i64 0), i8* %442) #10, !dbg !1564
  br label %444

444:                                              ; preds = %440, %originalBBpart2108
  %445 = load i32, i32* @x.13
  %446 = load i32, i32* @y.14
  %447 = sub i32 %445, 1
  %448 = mul i32 %445, %447
  %449 = urem i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %446, 10
  %452 = or i1 %450, %451
  br i1 %452, label %originalBB122, label %originalBB122alteredBB

originalBB122:                                    ; preds = %444, %originalBB122alteredBB
  %453 = load i8*, i8** %21, align 8, !dbg !1565
  %454 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1567
  %455 = icmp ne i8* %453, %454, !dbg !1568
  %456 = load i32, i32* @x.13
  %457 = load i32, i32* @y.14
  %458 = sub i32 %456, 1
  %459 = mul i32 %456, %458
  %460 = urem i32 %459, 2
  %461 = icmp eq i32 %460, 0
  %462 = icmp slt i32 %457, 10
  %463 = or i1 %461, %462
  br i1 %463, label %originalBBpart2124, label %originalBB122alteredBB

originalBBpart2124:                               ; preds = %originalBB122
  br i1 %455, label %464, label %466, !dbg !1569

464:                                              ; preds = %originalBBpart2124
  %465 = load i8*, i8** %21, align 8, !dbg !1570
  call void @free(i8* %465) #10, !dbg !1571
  br label %466, !dbg !1571

466:                                              ; preds = %464, %originalBBpart2124
  %467 = load i32, i32* @x.13
  %468 = load i32, i32* @y.14
  %469 = sub i32 %467, 1
  %470 = mul i32 %467, %469
  %471 = urem i32 %470, 2
  %472 = icmp eq i32 %471, 0
  %473 = icmp slt i32 %468, 10
  %474 = or i1 %472, %473
  br i1 %474, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %466, %originalBB126alteredBB
  %475 = load i32, i32* @x.13
  %476 = load i32, i32* @y.14
  %477 = sub i32 %475, 1
  %478 = mul i32 %475, %477
  %479 = urem i32 %478, 2
  %480 = icmp eq i32 %479, 0
  %481 = icmp slt i32 %476, 10
  %482 = or i1 %480, %481
  br i1 %482, label %originalBBpart2128, label %originalBB126alteredBB

originalBBpart2128:                               ; preds = %originalBB126
  br label %524, !dbg !1572

483:                                              ; preds = %originalBBpart232
  %484 = load i64, i64* @print_user.hostlen, align 8, !dbg !1573
  %485 = icmp ult i64 %484, 1, !dbg !1576
  br i1 %485, label %486, label %506, !dbg !1577

486:                                              ; preds = %483
  %487 = load i32, i32* @x.13
  %488 = load i32, i32* @y.14
  %489 = sub i32 %487, 1
  %490 = mul i32 %487, %489
  %491 = urem i32 %490, 2
  %492 = icmp eq i32 %491, 0
  %493 = icmp slt i32 %488, 10
  %494 = or i1 %492, %493
  br i1 %494, label %originalBB130, label %originalBB130alteredBB

originalBB130:                                    ; preds = %486, %originalBB130alteredBB
  store i64 1, i64* @print_user.hostlen, align 8, !dbg !1578
  %495 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1580
  call void @free(i8* %495) #10, !dbg !1581
  %496 = load i64, i64* @print_user.hostlen, align 8, !dbg !1582
  %497 = call noalias i8* @xmalloc(i64 %496), !dbg !1583
  store i8* %497, i8** @print_user.hoststr, align 8, !dbg !1584
  %498 = load i32, i32* @x.13
  %499 = load i32, i32* @y.14
  %500 = sub i32 %498, 1
  %501 = mul i32 %498, %500
  %502 = urem i32 %501, 2
  %503 = icmp eq i32 %502, 0
  %504 = icmp slt i32 %499, 10
  %505 = or i1 %503, %504
  br i1 %505, label %originalBBpart2132, label %originalBB130alteredBB

originalBBpart2132:                               ; preds = %originalBB130
  br label %506, !dbg !1585

506:                                              ; preds = %originalBBpart2132, %483
  %507 = load i32, i32* @x.13
  %508 = load i32, i32* @y.14
  %509 = sub i32 %507, 1
  %510 = mul i32 %507, %509
  %511 = urem i32 %510, 2
  %512 = icmp eq i32 %511, 0
  %513 = icmp slt i32 %508, 10
  %514 = or i1 %512, %513
  br i1 %514, label %originalBB134, label %originalBB134alteredBB

originalBB134:                                    ; preds = %506, %originalBB134alteredBB
  %515 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1586
  store i8 0, i8* %515, align 1, !dbg !1587
  %516 = load i32, i32* @x.13
  %517 = load i32, i32* @y.14
  %518 = sub i32 %516, 1
  %519 = mul i32 %516, %518
  %520 = urem i32 %519, 2
  %521 = icmp eq i32 %520, 0
  %522 = icmp slt i32 %517, 10
  %523 = or i1 %521, %522
  br i1 %523, label %originalBBpart2136, label %originalBB134alteredBB

originalBBpart2136:                               ; preds = %originalBB134
  br label %524

524:                                              ; preds = %originalBBpart2136, %originalBBpart2128
  %525 = load i32, i32* @x.13
  %526 = load i32, i32* @y.14
  %527 = sub i32 %525, 1
  %528 = mul i32 %525, %527
  %529 = urem i32 %528, 2
  %530 = icmp eq i32 %529, 0
  %531 = icmp slt i32 %526, 10
  %532 = or i1 %530, %531
  br i1 %532, label %originalBB138, label %originalBB138alteredBB

originalBB138:                                    ; preds = %524, %originalBB138alteredBB
  %533 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1588
  %534 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %533, i32 0, i32 4, !dbg !1588
  %535 = getelementptr inbounds [32 x i8], [32 x i8]* %534, i64 0, i64 0, !dbg !1588
  %536 = load i8, i8* %15, align 1, !dbg !1589
  %537 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1590
  %538 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %537, i32 0, i32 2, !dbg !1591
  %539 = getelementptr inbounds [32 x i8], [32 x i8]* %538, i64 0, i64 0, !dbg !1590
  %540 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1592
  %541 = call i8* @time_string(%struct.utmpx* %540), !dbg !1593
  %542 = getelementptr inbounds [7 x i8], [7 x i8]* %16, i64 0, i64 0, !dbg !1594
  %543 = getelementptr inbounds [12 x i8], [12 x i8]* %19, i64 0, i64 0, !dbg !1595
  %544 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1596
  %545 = icmp ne i8* %544, null, !dbg !1596
  %546 = load i32, i32* @x.13
  %547 = load i32, i32* @y.14
  %548 = sub i32 %546, 1
  %549 = mul i32 %546, %548
  %550 = urem i32 %549, 2
  %551 = icmp eq i32 %550, 0
  %552 = icmp slt i32 %547, 10
  %553 = or i1 %551, %552
  br i1 %553, label %originalBBpart2140, label %originalBB138alteredBB

originalBBpart2140:                               ; preds = %originalBB138
  br i1 %545, label %554, label %572, !dbg !1596

554:                                              ; preds = %originalBBpart2140
  %555 = load i32, i32* @x.13
  %556 = load i32, i32* @y.14
  %557 = sub i32 %555, 1
  %558 = mul i32 %555, %557
  %559 = urem i32 %558, 2
  %560 = icmp eq i32 %559, 0
  %561 = icmp slt i32 %556, 10
  %562 = or i1 %560, %561
  br i1 %562, label %originalBB142, label %originalBB142alteredBB

originalBB142:                                    ; preds = %554, %originalBB142alteredBB
  %563 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1597
  %564 = load i32, i32* @x.13
  %565 = load i32, i32* @y.14
  %566 = sub i32 %564, 1
  %567 = mul i32 %564, %566
  %568 = urem i32 %567, 2
  %569 = icmp eq i32 %568, 0
  %570 = icmp slt i32 %565, 10
  %571 = or i1 %569, %570
  br i1 %571, label %originalBBpart2144, label %originalBB142alteredBB

originalBBpart2144:                               ; preds = %originalBB142
  br label %589, !dbg !1596

572:                                              ; preds = %originalBBpart2140
  %573 = load i32, i32* @x.13
  %574 = load i32, i32* @y.14
  %575 = sub i32 %573, 1
  %576 = mul i32 %573, %575
  %577 = urem i32 %576, 2
  %578 = icmp eq i32 %577, 0
  %579 = icmp slt i32 %574, 10
  %580 = or i1 %578, %579
  br i1 %580, label %originalBB146, label %originalBB146alteredBB

originalBB146:                                    ; preds = %572, %originalBB146alteredBB
  %581 = load i32, i32* @x.13
  %582 = load i32, i32* @y.14
  %583 = sub i32 %581, 1
  %584 = mul i32 %581, %583
  %585 = urem i32 %584, 2
  %586 = icmp eq i32 %585, 0
  %587 = icmp slt i32 %582, 10
  %588 = or i1 %586, %587
  br i1 %588, label %originalBBpart2148, label %originalBB146alteredBB

originalBBpart2148:                               ; preds = %originalBB146
  br label %589, !dbg !1596

589:                                              ; preds = %originalBBpart2148, %originalBBpart2144
  %590 = phi i8* [ %563, %originalBBpart2144 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), %originalBBpart2148 ], !dbg !1596
  %591 = load i32, i32* @x.13
  %592 = load i32, i32* @y.14
  %593 = sub i32 %591, 1
  %594 = mul i32 %591, %593
  %595 = urem i32 %594, 2
  %596 = icmp eq i32 %595, 0
  %597 = icmp slt i32 %592, 10
  %598 = or i1 %596, %597
  br i1 %598, label %originalBB150, label %originalBB150alteredBB

originalBB150:                                    ; preds = %589, %originalBB150alteredBB
  call void @print_line(i32 32, i8* %535, i8 signext %536, i32 32, i8* %539, i8* %541, i8* %542, i8* %543, i8* %590, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1598
  %599 = load i32, i32* @x.13
  %600 = load i32, i32* @y.14
  %601 = sub i32 %599, 1
  %602 = mul i32 %599, %601
  %603 = urem i32 %602, 2
  %604 = icmp eq i32 %603, 0
  %605 = icmp slt i32 %600, 10
  %606 = or i1 %604, %605
  br i1 %606, label %originalBBpart2152, label %originalBB150alteredBB

originalBBpart2152:                               ; preds = %originalBB150
  ret void, !dbg !1599

originalBBalteredBB:                              ; preds = %originalBB, %2
  %607 = alloca %struct.utmpx*, align 8
  %608 = alloca i64, align 8
  %609 = alloca %struct.stat, align 8
  %610 = alloca i64, align 8
  %611 = alloca i8, align 1
  %612 = alloca [7 x i8], align 1
  %613 = alloca [38 x i8], align 16
  %614 = alloca i8*, align 8
  %615 = alloca [12 x i8], align 1
  %616 = alloca [257 x i8], align 16
  %617 = alloca i8*, align 8
  %618 = alloca i8*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %607, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %607, metadata !1600, metadata !DIExpression()), !dbg !1373
  store i64 %1, i64* %608, align 8
  call void @llvm.dbg.declare(metadata i64* %608, metadata !1701, metadata !DIExpression()), !dbg !1375
  call void @llvm.dbg.declare(metadata %struct.stat* %609, metadata !1702, metadata !DIExpression()), !dbg !1411
  call void @llvm.dbg.declare(metadata i64* %610, metadata !1724, metadata !DIExpression()), !dbg !1413
  call void @llvm.dbg.declare(metadata i8* %611, metadata !1725, metadata !DIExpression()), !dbg !1415
  call void @llvm.dbg.declare(metadata [7 x i8]* %612, metadata !1726, metadata !DIExpression()), !dbg !1418
  call void @llvm.dbg.declare(metadata [38 x i8]* %613, metadata !1727, metadata !DIExpression()), !dbg !1423
  call void @llvm.dbg.declare(metadata i8** %614, metadata !1728, metadata !DIExpression()), !dbg !1425
  %619 = getelementptr inbounds [38 x i8], [38 x i8]* %613, i64 0, i64 0, !dbg !1426
  store i8* %619, i8** %614, align 8, !dbg !1425
  call void @llvm.dbg.declare(metadata [12 x i8]* %615, metadata !1729, metadata !DIExpression()), !dbg !1431
  %620 = getelementptr inbounds [12 x i8], [12 x i8]* %615, i64 0, i64 0, !dbg !1431
  %621 = load %struct.utmpx*, %struct.utmpx** %607, align 8, !dbg !1431
  %622 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %621, i32 0, i32 1, !dbg !1431
  %623 = load i32, i32* %622, align 4, !dbg !1431
  %624 = sext i32 %623 to i64, !dbg !1431
  %625 = call i32 (i8*, i8*, ...) @sprintf(i8* %620, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %624) #10, !dbg !1431
  %626 = load %struct.utmpx*, %struct.utmpx** %607, align 8, !dbg !1432
  %627 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %626, i32 0, i32 2, !dbg !1432
  %628 = getelementptr inbounds [32 x i8], [32 x i8]* %627, i64 0, i64 0, !dbg !1432
  %629 = load i8, i8* %628, align 4, !dbg !1432
  %630 = sext i8 %629 to i32, !dbg !1432
  %631 = icmp eq i32 %630, 47, !dbg !1432
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %44
  %632 = load i8*, i8** %18, align 8, !dbg !1435
  %633 = call i8* @stpcpy(i8* %632, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0)) #10, !dbg !1436
  store i8* %633, i8** %18, align 8, !dbg !1437
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %63
  %634 = load i8*, i8** %18, align 8, !dbg !1439
  %635 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1440
  %636 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %635, i32 0, i32 2, !dbg !1441
  %637 = getelementptr inbounds [32 x i8], [32 x i8]* %636, i64 0, i64 0, !dbg !1440
  %638 = call i8* @stzncpy(i8* %634, i8* %637, i64 32), !dbg !1442
  %639 = getelementptr inbounds [38 x i8], [38 x i8]* %17, i64 0, i64 0, !dbg !1443
  %640 = call i32 @stat(i8* %639, %struct.stat* %13) #10, !dbg !1445
  %641 = icmp eq i32 %640, 0, !dbg !1446
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %88
  %642 = call zeroext i1 @is_tty_writable(%struct.stat* %13), !dbg !1448
  %643 = zext i1 %642 to i64, !dbg !1448
  %644 = select i1 %642, i32 43, i32 45, !dbg !1448
  %645 = trunc i32 %644 to i8, !dbg !1448
  store i8 %645, i8* %15, align 1, !dbg !1450
  %646 = getelementptr inbounds %struct.stat, %struct.stat* %13, i32 0, i32 11, !dbg !1451
  %647 = getelementptr inbounds %struct.timespec, %struct.timespec* %646, i32 0, i32 0, !dbg !1451
  %648 = load i64, i64* %647, align 8, !dbg !1451
  store i64 %648, i64* %14, align 8, !dbg !1452
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %112
  store i8 63, i8* %15, align 1, !dbg !1454
  store i64 0, i64* %14, align 8, !dbg !1456
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %129
  %649 = load i64, i64* %14, align 8, !dbg !1457
  %650 = icmp ne i64 %649, 0, !dbg !1457
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %148
  %651 = getelementptr inbounds [7 x i8], [7 x i8]* %16, i64 0, i64 0, !dbg !1460
  %652 = load i64, i64* %14, align 8, !dbg !1461
  %653 = load i64, i64* %12, align 8, !dbg !1462
  %654 = call i8* @idle_string(i64 %652, i64 %653), !dbg !1463
  %655 = call i32 (i8*, i8*, ...) @sprintf(i8* %651, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i64 0, i64 0), i32 6, i8* %654) #10, !dbg !1464
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %170
  %656 = getelementptr inbounds [7 x i8], [7 x i8]* %16, i64 0, i64 0, !dbg !1465
  %657 = call i32 (i8*, i8*, ...) @sprintf(i8* %656, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i64 0, i64 0)) #10, !dbg !1466
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %189
  %658 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1467
  %659 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %658, i32 0, i32 5, !dbg !1469
  %660 = getelementptr inbounds [256 x i8], [256 x i8]* %659, i64 0, i64 0, !dbg !1467
  %661 = load i8, i8* %660, align 4, !dbg !1467
  %662 = icmp ne i8 %661, 0, !dbg !1467
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %221
  %663 = load i8*, i8** %22, align 8, !dbg !1491
  %664 = getelementptr inbounds i8, i8* %663, i32 1, !dbg !1491
  store i8* %664, i8** %22, align 8, !dbg !1491
  store i8 0, i8* %663, align 1, !dbg !1492
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %240
  %665 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1494
  %666 = load i8, i8* %665, align 16, !dbg !1494
  %667 = sext i8 %666 to i32, !dbg !1494
  %668 = icmp ne i32 %667, 0, !dbg !1494
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %261
  %669 = load i8, i8* @do_lookup, align 1, !dbg !1497
  %670 = trunc i8 %669 to i1, !dbg !1497
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %280
  %671 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1499
  %672 = call noalias i8* @canon_host(i8* %671), !dbg !1501
  store i8* %672, i8** %21, align 8, !dbg !1502
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %302
  %673 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1507
  store i8* %673, i8** %21, align 8, !dbg !1508
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %323
  %674 = load i64, i64* @print_user.hostlen, align 8, !dbg !1513
  %675 = load i8*, i8** %21, align 8, !dbg !1516
  %676 = call i64 @strlen(i8* %675) #13, !dbg !1517
  %677 = load i8*, i8** %22, align 8, !dbg !1518
  %678 = call i64 @strlen(i8* %677) #13, !dbg !1519
  %_ = sub i64 0, %676
  %gen = add i64 %_, %678
  %_55 = sub i64 0, %676
  %gen56 = add i64 %_55, %678
  %_57 = sub i64 %676, %678
  %gen58 = mul i64 %_57, %678
  %_59 = sub i64 %676, %678
  %gen60 = mul i64 %_59, %678
  %_61 = shl i64 %676, %678
  %_62 = sub i64 %676, %678
  %gen63 = mul i64 %_62, %678
  %_64 = shl i64 %676, %678
  %_65 = shl i64 %676, %678
  %679 = add i64 %676, %678, !dbg !1520
  %_66 = sub i64 0, %679
  %gen67 = add i64 %_66, 4
  %_68 = shl i64 %679, 4
  %_69 = sub i64 %679, 4
  %gen70 = mul i64 %_69, 4
  %_71 = sub i64 0, %679
  %gen72 = add i64 %_71, 4
  %_73 = sub i64 %679, 4
  %gen74 = mul i64 %_73, 4
  %_75 = shl i64 %679, 4
  %_76 = shl i64 %679, 4
  %_77 = sub i64 %679, 4
  %gen78 = mul i64 %_77, 4
  %_79 = shl i64 %679, 4
  %680 = add i64 %679, 4, !dbg !1521
  %681 = icmp ult i64 %674, %680, !dbg !1522
  br label %originalBB54

originalBB83alteredBB:                            ; preds = %originalBB83, %348
  %682 = load i8*, i8** %21, align 8, !dbg !1524
  %683 = call i64 @strlen(i8* %682) #13, !dbg !1526
  %684 = load i8*, i8** %22, align 8, !dbg !1527
  %685 = call i64 @strlen(i8* %684) #13, !dbg !1528
  %_84 = sub i64 %683, %685
  %gen85 = mul i64 %_84, %685
  %_86 = sub i64 %683, %685
  %gen87 = mul i64 %_86, %685
  %_88 = sub i64 %683, %685
  %gen89 = mul i64 %_88, %685
  %_90 = sub i64 0, %683
  %gen91 = add i64 %_90, %685
  %686 = add i64 %683, %685, !dbg !1529
  %_92 = sub i64 0, %686
  %gen93 = add i64 %_92, 4
  %_94 = sub i64 0, %686
  %gen95 = add i64 %_94, 4
  %_96 = sub i64 %686, 4
  %gen97 = mul i64 %_96, 4
  %_98 = sub i64 %686, 4
  %gen99 = mul i64 %_98, 4
  %_100 = shl i64 %686, 4
  %_101 = sub i64 %686, 4
  %gen102 = mul i64 %_101, 4
  %687 = add i64 %686, 4, !dbg !1530
  store i64 %687, i64* @print_user.hostlen, align 8, !dbg !1531
  %688 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1532
  call void @free(i8* %688) #10, !dbg !1533
  %689 = load i64, i64* @print_user.hostlen, align 8, !dbg !1534
  %690 = call noalias i8* @xmalloc(i64 %689), !dbg !1535
  store i8* %690, i8** @print_user.hoststr, align 8, !dbg !1536
  br label %originalBB83

originalBB106alteredBB:                           ; preds = %originalBB106, %374
  %691 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1538
  %692 = load i8*, i8** %21, align 8, !dbg !1539
  %693 = load i8*, i8** %22, align 8, !dbg !1540
  %694 = call i32 (i8*, i8*, ...) @sprintf(i8* %691, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i64 0, i64 0), i8* %692, i8* %693) #10, !dbg !1541
  br label %originalBB106

originalBB110alteredBB:                           ; preds = %originalBB110, %395
  %695 = load i64, i64* @print_user.hostlen, align 8, !dbg !1543
  %696 = load i8*, i8** %21, align 8, !dbg !1546
  %697 = call i64 @strlen(i8* %696) #13, !dbg !1547
  %_111 = shl i64 %697, 3
  %698 = add i64 %697, 3, !dbg !1548
  %699 = icmp ult i64 %695, %698, !dbg !1549
  br label %originalBB110

originalBB115alteredBB:                           ; preds = %originalBB115, %417
  %700 = load i8*, i8** %21, align 8, !dbg !1551
  %701 = call i64 @strlen(i8* %700) #13, !dbg !1553
  %_116 = shl i64 %701, 3
  %_117 = sub i64 0, %701
  %gen118 = add i64 %_117, 3
  %702 = add i64 %701, 3, !dbg !1554
  store i64 %702, i64* @print_user.hostlen, align 8, !dbg !1555
  %703 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1556
  call void @free(i8* %703) #10, !dbg !1557
  %704 = load i64, i64* @print_user.hostlen, align 8, !dbg !1558
  %705 = call noalias i8* @xmalloc(i64 %704), !dbg !1559
  store i8* %705, i8** @print_user.hoststr, align 8, !dbg !1560
  br label %originalBB115

originalBB122alteredBB:                           ; preds = %originalBB122, %444
  %706 = load i8*, i8** %21, align 8, !dbg !1565
  %707 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1567
  %708 = icmp ne i8* %706, %707, !dbg !1568
  br label %originalBB122

originalBB126alteredBB:                           ; preds = %originalBB126, %466
  br label %originalBB126

originalBB130alteredBB:                           ; preds = %originalBB130, %486
  store i64 1, i64* @print_user.hostlen, align 8, !dbg !1578
  %709 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1580
  call void @free(i8* %709) #10, !dbg !1581
  %710 = load i64, i64* @print_user.hostlen, align 8, !dbg !1582
  %711 = call noalias i8* @xmalloc(i64 %710), !dbg !1583
  store i8* %711, i8** @print_user.hoststr, align 8, !dbg !1584
  br label %originalBB130

originalBB134alteredBB:                           ; preds = %originalBB134, %506
  %712 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1586
  store i8 0, i8* %712, align 1, !dbg !1587
  br label %originalBB134

originalBB138alteredBB:                           ; preds = %originalBB138, %524
  %713 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1588
  %714 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %713, i32 0, i32 4, !dbg !1588
  %715 = getelementptr inbounds [32 x i8], [32 x i8]* %714, i64 0, i64 0, !dbg !1588
  %716 = load i8, i8* %15, align 1, !dbg !1589
  %717 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1590
  %718 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %717, i32 0, i32 2, !dbg !1591
  %719 = getelementptr inbounds [32 x i8], [32 x i8]* %718, i64 0, i64 0, !dbg !1590
  %720 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1592
  %721 = call i8* @time_string(%struct.utmpx* %720), !dbg !1593
  %722 = getelementptr inbounds [7 x i8], [7 x i8]* %16, i64 0, i64 0, !dbg !1594
  %723 = getelementptr inbounds [12 x i8], [12 x i8]* %19, i64 0, i64 0, !dbg !1595
  %724 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1596
  %725 = icmp ne i8* %724, null, !dbg !1596
  br label %originalBB138

originalBB142alteredBB:                           ; preds = %originalBB142, %554
  %726 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1597
  br label %originalBB142

originalBB146alteredBB:                           ; preds = %originalBB146, %572
  br label %originalBB146

originalBB150alteredBB:                           ; preds = %originalBB150, %589
  call void @print_line(i32 32, i8* %535, i8 signext %536, i32 32, i8* %539, i8* %541, i8* %542, i8* %543, i8* %590, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1598
  br label %originalBB150
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_runlevel(%struct.utmpx*) #4 !dbg !133 {
  %2 = load i32, i32* @x.15
  %3 = load i32, i32* @y.16
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !1730, metadata !DIExpression()), !dbg !1731
  call void @llvm.dbg.declare(metadata i8* %11, metadata !1732, metadata !DIExpression()), !dbg !1733
  %13 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1734
  %14 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %13, i32 0, i32 1, !dbg !1734
  %15 = load i32, i32* %14, align 4, !dbg !1734
  %16 = sdiv i32 %15, 256, !dbg !1735
  %17 = trunc i32 %16 to i8, !dbg !1734
  store i8 %17, i8* %11, align 1, !dbg !1733
  call void @llvm.dbg.declare(metadata i8* %12, metadata !1736, metadata !DIExpression()), !dbg !1737
  %18 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1738
  %19 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %18, i32 0, i32 1, !dbg !1738
  %20 = load i32, i32* %19, align 4, !dbg !1738
  %21 = srem i32 %20, 256, !dbg !1739
  %22 = trunc i32 %21 to i8, !dbg !1738
  store i8 %22, i8* %12, align 1, !dbg !1737
  %23 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1740
  %24 = icmp ne i8* %23, null, !dbg !1740
  %25 = load i32, i32* @x.15
  %26 = load i32, i32* @y.16
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %24, label %54, label %33, !dbg !1742

33:                                               ; preds = %originalBBpart2
  %34 = load i32, i32* @x.15
  %35 = load i32, i32* @y.16
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %33, %originalBB14alteredBB
  %42 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i64 0, i64 0)) #10, !dbg !1743
  %43 = call i64 @strlen(i8* %42) #13, !dbg !1744
  %44 = add i64 %43, 3, !dbg !1745
  %45 = call noalias i8* @xmalloc(i64 %44), !dbg !1746
  store i8* %45, i8** @print_runlevel.runlevline, align 8, !dbg !1747
  %46 = load i32, i32* @x.15
  %47 = load i32, i32* @y.16
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart228, label %originalBB14alteredBB

originalBBpart228:                                ; preds = %originalBB14
  br label %54, !dbg !1748

54:                                               ; preds = %originalBBpart228, %originalBBpart2
  %55 = load i32, i32* @x.15
  %56 = load i32, i32* @y.16
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %54, %originalBB30alteredBB
  %63 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1749
  %64 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i64 0, i64 0)) #10, !dbg !1750
  %65 = load i8, i8* %12, align 1, !dbg !1751
  %66 = zext i8 %65 to i32, !dbg !1751
  %67 = call i32 (i8*, i8*, ...) @sprintf(i8* %63, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i64 0, i64 0), i8* %64, i32 %66) #10, !dbg !1752
  %68 = load i8*, i8** @print_runlevel.comment, align 8, !dbg !1753
  %69 = icmp ne i8* %68, null, !dbg !1753
  %70 = load i32, i32* @x.15
  %71 = load i32, i32* @y.16
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %69, label %99, label %78, !dbg !1755

78:                                               ; preds = %originalBBpart232
  %79 = load i32, i32* @x.15
  %80 = load i32, i32* @y.16
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %78, %originalBB34alteredBB
  %87 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i64 0, i64 0)) #10, !dbg !1756
  %88 = call i64 @strlen(i8* %87) #13, !dbg !1757
  %89 = add i64 %88, 2, !dbg !1758
  %90 = call noalias i8* @xmalloc(i64 %89), !dbg !1759
  store i8* %90, i8** @print_runlevel.comment, align 8, !dbg !1760
  %91 = load i32, i32* @x.15
  %92 = load i32, i32* @y.16
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart240, label %originalBB34alteredBB

originalBBpart240:                                ; preds = %originalBB34
  br label %99, !dbg !1761

99:                                               ; preds = %originalBBpart240, %originalBBpart232
  %100 = load i8*, i8** @print_runlevel.comment, align 8, !dbg !1762
  %101 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i64 0, i64 0)) #10, !dbg !1763
  %102 = load i8, i8* %11, align 1, !dbg !1764
  %103 = zext i8 %102 to i32, !dbg !1764
  %104 = icmp eq i32 %103, 78, !dbg !1765
  br i1 %104, label %105, label %122, !dbg !1766

105:                                              ; preds = %99
  %106 = load i32, i32* @x.15
  %107 = load i32, i32* @y.16
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %105, %originalBB42alteredBB
  %114 = load i32, i32* @x.15
  %115 = load i32, i32* @y.16
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %141, !dbg !1766

122:                                              ; preds = %99
  %123 = load i32, i32* @x.15
  %124 = load i32, i32* @y.16
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %122, %originalBB46alteredBB
  %131 = load i8, i8* %11, align 1, !dbg !1767
  %132 = zext i8 %131 to i32, !dbg !1767
  %133 = load i32, i32* @x.15
  %134 = load i32, i32* @y.16
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %141, !dbg !1766

141:                                              ; preds = %originalBBpart248, %originalBBpart244
  %142 = phi i32 [ 83, %originalBBpart244 ], [ %132, %originalBBpart248 ], !dbg !1766
  %143 = load i32, i32* @x.15
  %144 = load i32, i32* @y.16
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %141, %originalBB50alteredBB
  %151 = call i32 (i8*, i8*, ...) @sprintf(i8* %100, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i64 0, i64 0), i8* %101, i32 %142) #10, !dbg !1768
  %152 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1769
  %153 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1770
  %154 = call i8* @time_string(%struct.utmpx* %153), !dbg !1771
  %155 = load i8, i8* %11, align 1, !dbg !1772
  %156 = zext i8 %155 to i32, !dbg !1772
  %157 = call zeroext i1 @c_isprint(i32 %156), !dbg !1773
  %158 = load i32, i32* @x.15
  %159 = load i32, i32* @y.16
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br i1 %157, label %166, label %184, !dbg !1773

166:                                              ; preds = %originalBBpart252
  %167 = load i32, i32* @x.15
  %168 = load i32, i32* @y.16
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %166, %originalBB54alteredBB
  %175 = load i8*, i8** @print_runlevel.comment, align 8, !dbg !1774
  %176 = load i32, i32* @x.15
  %177 = load i32, i32* @y.16
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %185, !dbg !1773

184:                                              ; preds = %originalBBpart252
  br label %185, !dbg !1773

185:                                              ; preds = %184, %originalBBpart256
  %186 = phi i8* [ %175, %originalBBpart256 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), %184 ], !dbg !1773
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %152, i8* %154, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %186, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1775
  ret void, !dbg !1776

originalBBalteredBB:                              ; preds = %originalBB, %1
  %187 = alloca %struct.utmpx*, align 8
  %188 = alloca i8, align 1
  %189 = alloca i8, align 1
  store %struct.utmpx* %0, %struct.utmpx** %187, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %187, metadata !1777, metadata !DIExpression()), !dbg !1731
  call void @llvm.dbg.declare(metadata i8* %188, metadata !1878, metadata !DIExpression()), !dbg !1733
  %190 = load %struct.utmpx*, %struct.utmpx** %187, align 8, !dbg !1734
  %191 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %190, i32 0, i32 1, !dbg !1734
  %192 = load i32, i32* %191, align 4, !dbg !1734
  %_ = sub i32 0, %192
  %gen = add i32 %_, 256
  %_1 = sub i32 %192, 256
  %gen2 = mul i32 %_1, 256
  %_3 = sub i32 0, %192
  %gen4 = add i32 %_3, 256
  %_5 = shl i32 %192, 256
  %_6 = shl i32 %192, 256
  %_7 = sub i32 0, %192
  %gen8 = add i32 %_7, 256
  %193 = sdiv i32 %192, 256, !dbg !1735
  %194 = trunc i32 %193 to i8, !dbg !1734
  store i8 %194, i8* %188, align 1, !dbg !1733
  call void @llvm.dbg.declare(metadata i8* %189, metadata !1879, metadata !DIExpression()), !dbg !1737
  %195 = load %struct.utmpx*, %struct.utmpx** %187, align 8, !dbg !1738
  %196 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %195, i32 0, i32 1, !dbg !1738
  %197 = load i32, i32* %196, align 4, !dbg !1738
  %_9 = sub i32 %197, 256
  %gen10 = mul i32 %_9, 256
  %_11 = shl i32 %197, 256
  %_12 = shl i32 %197, 256
  %_13 = shl i32 %197, 256
  %198 = srem i32 %197, 256, !dbg !1739
  %199 = trunc i32 %198 to i8, !dbg !1738
  store i8 %199, i8* %189, align 1, !dbg !1737
  %200 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1740
  %201 = icmp ne i8* %200, null, !dbg !1740
  br label %originalBB

originalBB14alteredBB:                            ; preds = %originalBB14, %33
  %202 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i64 0, i64 0)) #10, !dbg !1743
  %203 = call i64 @strlen(i8* %202) #13, !dbg !1744
  %_15 = sub i64 0, %203
  %gen16 = add i64 %_15, 3
  %_17 = sub i64 %203, 3
  %gen18 = mul i64 %_17, 3
  %_19 = sub i64 %203, 3
  %gen20 = mul i64 %_19, 3
  %_21 = sub i64 0, %203
  %gen22 = add i64 %_21, 3
  %_23 = shl i64 %203, 3
  %_24 = sub i64 %203, 3
  %gen25 = mul i64 %_24, 3
  %_26 = shl i64 %203, 3
  %204 = add i64 %203, 3, !dbg !1745
  %205 = call noalias i8* @xmalloc(i64 %204), !dbg !1746
  store i8* %205, i8** @print_runlevel.runlevline, align 8, !dbg !1747
  br label %originalBB14

originalBB30alteredBB:                            ; preds = %originalBB30, %54
  %206 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1749
  %207 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i64 0, i64 0)) #10, !dbg !1750
  %208 = load i8, i8* %12, align 1, !dbg !1751
  %209 = zext i8 %208 to i32, !dbg !1751
  %210 = call i32 (i8*, i8*, ...) @sprintf(i8* %206, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i64 0, i64 0), i8* %207, i32 %209) #10, !dbg !1752
  %211 = load i8*, i8** @print_runlevel.comment, align 8, !dbg !1753
  %212 = icmp ne i8* %211, null, !dbg !1753
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %78
  %213 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i64 0, i64 0)) #10, !dbg !1756
  %214 = call i64 @strlen(i8* %213) #13, !dbg !1757
  %_35 = sub i64 %214, 2
  %gen36 = mul i64 %_35, 2
  %_37 = sub i64 %214, 2
  %gen38 = mul i64 %_37, 2
  %215 = add i64 %214, 2, !dbg !1758
  %216 = call noalias i8* @xmalloc(i64 %215), !dbg !1759
  store i8* %216, i8** @print_runlevel.comment, align 8, !dbg !1760
  br label %originalBB34

originalBB42alteredBB:                            ; preds = %originalBB42, %105
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %122
  %217 = load i8, i8* %11, align 1, !dbg !1767
  %218 = zext i8 %217 to i32, !dbg !1767
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %141
  %219 = call i32 (i8*, i8*, ...) @sprintf(i8* %100, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i64 0, i64 0), i8* %101, i32 %142) #10, !dbg !1768
  %220 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1769
  %221 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1770
  %222 = call i8* @time_string(%struct.utmpx* %221), !dbg !1771
  %223 = load i8, i8* %11, align 1, !dbg !1772
  %224 = zext i8 %223 to i32, !dbg !1772
  %225 = call zeroext i1 @c_isprint(i32 %224), !dbg !1773
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %166
  %226 = load i8*, i8** @print_runlevel.comment, align 8, !dbg !1774
  br label %originalBB54
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_boottime(%struct.utmpx*) #4 !dbg !1880 {
  %2 = load i32, i32* @x.17
  %3 = load i32, i32* @y.18
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !1881, metadata !DIExpression()), !dbg !1882
  %11 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.88, i64 0, i64 0)) #10, !dbg !1883
  %12 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1884
  %13 = call i8* @time_string(%struct.utmpx* %12), !dbg !1885
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %11, i8* %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1886
  %14 = load i32, i32* @x.17
  %15 = load i32, i32* @y.18
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !1887

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %struct.utmpx*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %22, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %22, metadata !1888, metadata !DIExpression()), !dbg !1882
  %23 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.88, i64 0, i64 0)) #10, !dbg !1883
  %24 = load %struct.utmpx*, %struct.utmpx** %22, align 8, !dbg !1884
  %25 = call i8* @time_string(%struct.utmpx* %24), !dbg !1885
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %23, i8* %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1886
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_clockchange(%struct.utmpx*) #4 !dbg !1990 {
  %2 = load i32, i32* @x.19
  %3 = load i32, i32* @y.20
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !1991, metadata !DIExpression()), !dbg !1992
  %11 = call i8* @gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.89, i64 0, i64 0)) #10, !dbg !1993
  %12 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1994
  %13 = call i8* @time_string(%struct.utmpx* %12), !dbg !1995
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %11, i8* %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1996
  %14 = load i32, i32* @x.19
  %15 = load i32, i32* @y.20
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !1997

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %struct.utmpx*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %22, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %22, metadata !1998, metadata !DIExpression()), !dbg !1992
  %23 = call i8* @gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.89, i64 0, i64 0)) #10, !dbg !1993
  %24 = load %struct.utmpx*, %struct.utmpx** %22, align 8, !dbg !1994
  %25 = call i8* @time_string(%struct.utmpx* %24), !dbg !1995
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %23, i8* %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1996
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_initspawn(%struct.utmpx*) #4 !dbg !2100 {
  %2 = alloca %struct.utmpx*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca [12 x i8], align 1
  store %struct.utmpx* %0, %struct.utmpx** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %2, metadata !2101, metadata !DIExpression()), !dbg !2102
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2103, metadata !DIExpression()), !dbg !2104
  %5 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !2105
  %6 = call i8* @make_id_equals_comment(%struct.utmpx* %5), !dbg !2106
  store i8* %6, i8** %3, align 8, !dbg !2104
  call void @llvm.dbg.declare(metadata [12 x i8]* %4, metadata !2107, metadata !DIExpression()), !dbg !2108
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* %4, i64 0, i64 0, !dbg !2108
  %8 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !2108
  %9 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %8, i32 0, i32 1, !dbg !2108
  %10 = load i32, i32* %9, align 4, !dbg !2108
  %11 = sext i32 %10 to i64, !dbg !2108
  %12 = call i32 (i8*, i8*, ...) @sprintf(i8* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %11) #10, !dbg !2108
  %13 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !2109
  %14 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %13, i32 0, i32 2, !dbg !2110
  %15 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i64 0, i64 0, !dbg !2109
  %16 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !2111
  %17 = call i8* @time_string(%struct.utmpx* %16), !dbg !2112
  %18 = getelementptr inbounds [12 x i8], [12 x i8]* %4, i64 0, i64 0, !dbg !2113
  %19 = load i8*, i8** %3, align 8, !dbg !2114
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 32, i8* %15, i8* %17, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %18, i8* %19, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !2115
  %20 = load i8*, i8** %3, align 8, !dbg !2116
  call void @free(i8* %20) #10, !dbg !2117
  ret void, !dbg !2118
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_login(%struct.utmpx*) #4 !dbg !2119 {
  %2 = load i32, i32* @x.23
  %3 = load i32, i32* @y.24
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca [12 x i8], align 1
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !2120, metadata !DIExpression()), !dbg !2121
  call void @llvm.dbg.declare(metadata i8** %11, metadata !2122, metadata !DIExpression()), !dbg !2123
  %13 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2124
  %14 = call i8* @make_id_equals_comment(%struct.utmpx* %13), !dbg !2125
  store i8* %14, i8** %11, align 8, !dbg !2123
  call void @llvm.dbg.declare(metadata [12 x i8]* %12, metadata !2126, metadata !DIExpression()), !dbg !2127
  %15 = getelementptr inbounds [12 x i8], [12 x i8]* %12, i64 0, i64 0, !dbg !2127
  %16 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2127
  %17 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %16, i32 0, i32 1, !dbg !2127
  %18 = load i32, i32* %17, align 4, !dbg !2127
  %19 = sext i32 %18 to i64, !dbg !2127
  %20 = call i32 (i8*, i8*, ...) @sprintf(i8* %15, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %19) #10, !dbg !2127
  %21 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i64 0, i64 0)) #10, !dbg !2128
  %22 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2129
  %23 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %22, i32 0, i32 2, !dbg !2130
  %24 = getelementptr inbounds [32 x i8], [32 x i8]* %23, i64 0, i64 0, !dbg !2129
  %25 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2131
  %26 = call i8* @time_string(%struct.utmpx* %25), !dbg !2132
  %27 = getelementptr inbounds [12 x i8], [12 x i8]* %12, i64 0, i64 0, !dbg !2133
  %28 = load i8*, i8** %11, align 8, !dbg !2134
  call void @print_line(i32 -1, i8* %21, i8 signext 32, i32 32, i8* %24, i8* %26, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %27, i8* %28, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !2135
  %29 = load i8*, i8** %11, align 8, !dbg !2136
  call void @free(i8* %29) #10, !dbg !2137
  %30 = load i32, i32* @x.23
  %31 = load i32, i32* @y.24
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !2138

originalBBalteredBB:                              ; preds = %originalBB, %1
  %38 = alloca %struct.utmpx*, align 8
  %39 = alloca i8*, align 8
  %40 = alloca [12 x i8], align 1
  store %struct.utmpx* %0, %struct.utmpx** %38, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %38, metadata !2139, metadata !DIExpression()), !dbg !2121
  call void @llvm.dbg.declare(metadata i8** %39, metadata !2241, metadata !DIExpression()), !dbg !2123
  %41 = load %struct.utmpx*, %struct.utmpx** %38, align 8, !dbg !2124
  %42 = call i8* @make_id_equals_comment(%struct.utmpx* %41), !dbg !2125
  store i8* %42, i8** %39, align 8, !dbg !2123
  call void @llvm.dbg.declare(metadata [12 x i8]* %40, metadata !2242, metadata !DIExpression()), !dbg !2127
  %43 = getelementptr inbounds [12 x i8], [12 x i8]* %40, i64 0, i64 0, !dbg !2127
  %44 = load %struct.utmpx*, %struct.utmpx** %38, align 8, !dbg !2127
  %45 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %44, i32 0, i32 1, !dbg !2127
  %46 = load i32, i32* %45, align 4, !dbg !2127
  %47 = sext i32 %46 to i64, !dbg !2127
  %48 = call i32 (i8*, i8*, ...) @sprintf(i8* %43, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %47) #10, !dbg !2127
  %49 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i64 0, i64 0)) #10, !dbg !2128
  %50 = load %struct.utmpx*, %struct.utmpx** %38, align 8, !dbg !2129
  %51 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %50, i32 0, i32 2, !dbg !2130
  %52 = getelementptr inbounds [32 x i8], [32 x i8]* %51, i64 0, i64 0, !dbg !2129
  %53 = load %struct.utmpx*, %struct.utmpx** %38, align 8, !dbg !2131
  %54 = call i8* @time_string(%struct.utmpx* %53), !dbg !2132
  %55 = getelementptr inbounds [12 x i8], [12 x i8]* %40, i64 0, i64 0, !dbg !2133
  %56 = load i8*, i8** %39, align 8, !dbg !2134
  call void @print_line(i32 -1, i8* %49, i8 signext 32, i32 32, i8* %52, i8* %54, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %55, i8* %56, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !2135
  %57 = load i8*, i8** %39, align 8, !dbg !2136
  call void @free(i8* %57) #10, !dbg !2137
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_deadprocs(%struct.utmpx*) #4 !dbg !140 {
  %2 = load i32, i32* @x.25
  %3 = load i32, i32* @y.26
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca [12 x i8], align 1
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !2243, metadata !DIExpression()), !dbg !2244
  call void @llvm.dbg.declare(metadata i8** %11, metadata !2245, metadata !DIExpression()), !dbg !2246
  %13 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2247
  %14 = call i8* @make_id_equals_comment(%struct.utmpx* %13), !dbg !2248
  store i8* %14, i8** %11, align 8, !dbg !2246
  call void @llvm.dbg.declare(metadata [12 x i8]* %12, metadata !2249, metadata !DIExpression()), !dbg !2250
  %15 = getelementptr inbounds [12 x i8], [12 x i8]* %12, i64 0, i64 0, !dbg !2250
  %16 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2250
  %17 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %16, i32 0, i32 1, !dbg !2250
  %18 = load i32, i32* %17, align 4, !dbg !2250
  %19 = sext i32 %18 to i64, !dbg !2250
  %20 = call i32 (i8*, i8*, ...) @sprintf(i8* %15, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %19) #10, !dbg !2250
  %21 = load i8*, i8** @print_deadprocs.exitstr, align 8, !dbg !2251
  %22 = icmp ne i8* %21, null, !dbg !2251
  %23 = load i32, i32* @x.25
  %24 = load i32, i32* @y.26
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %42, label %31, !dbg !2253

31:                                               ; preds = %originalBBpart2
  %32 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0)) #10, !dbg !2254
  %33 = call i64 @strlen(i8* %32) #13, !dbg !2255
  %34 = add i64 %33, 6, !dbg !2256
  %35 = add i64 %34, 1, !dbg !2257
  %36 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0)) #10, !dbg !2258
  %37 = call i64 @strlen(i8* %36) #13, !dbg !2259
  %38 = add i64 %35, %37, !dbg !2260
  %39 = add i64 %38, 6, !dbg !2261
  %40 = add i64 %39, 1, !dbg !2262
  %41 = call noalias i8* @xmalloc(i64 %40), !dbg !2263
  store i8* %41, i8** @print_deadprocs.exitstr, align 8, !dbg !2264
  br label %42, !dbg !2265

42:                                               ; preds = %31, %originalBBpart2
  %43 = load i32, i32* @x.25
  %44 = load i32, i32* @y.26
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %42, %originalBB1alteredBB
  %51 = load i8*, i8** @print_deadprocs.exitstr, align 8, !dbg !2266
  %52 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0)) #10, !dbg !2267
  %53 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2268
  %54 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %53, i32 0, i32 6, !dbg !2268
  %55 = getelementptr inbounds %struct.__exit_status, %struct.__exit_status* %54, i32 0, i32 0, !dbg !2268
  %56 = load i16, i16* %55, align 4, !dbg !2268
  %57 = sext i16 %56 to i32, !dbg !2268
  %58 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0)) #10, !dbg !2269
  %59 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2270
  %60 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %59, i32 0, i32 6, !dbg !2270
  %61 = getelementptr inbounds %struct.__exit_status, %struct.__exit_status* %60, i32 0, i32 1, !dbg !2270
  %62 = load i16, i16* %61, align 2, !dbg !2270
  %63 = sext i16 %62 to i32, !dbg !2270
  %64 = call i32 (i8*, i8*, ...) @sprintf(i8* %51, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.94, i64 0, i64 0), i8* %52, i32 %57, i8* %58, i32 %63) #10, !dbg !2271
  %65 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2272
  %66 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %65, i32 0, i32 2, !dbg !2273
  %67 = getelementptr inbounds [32 x i8], [32 x i8]* %66, i64 0, i64 0, !dbg !2272
  %68 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2274
  %69 = call i8* @time_string(%struct.utmpx* %68), !dbg !2275
  %70 = getelementptr inbounds [12 x i8], [12 x i8]* %12, i64 0, i64 0, !dbg !2276
  %71 = load i8*, i8** %11, align 8, !dbg !2277
  %72 = load i8*, i8** @print_deadprocs.exitstr, align 8, !dbg !2278
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 32, i8* %67, i8* %69, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %70, i8* %71, i8* %72), !dbg !2279
  %73 = load i8*, i8** %11, align 8, !dbg !2280
  call void @free(i8* %73) #10, !dbg !2281
  %74 = load i32, i32* @x.25
  %75 = load i32, i32* @y.26
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void, !dbg !2282

originalBBalteredBB:                              ; preds = %originalBB, %1
  %82 = alloca %struct.utmpx*, align 8
  %83 = alloca i8*, align 8
  %84 = alloca [12 x i8], align 1
  store %struct.utmpx* %0, %struct.utmpx** %82, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %82, metadata !2283, metadata !DIExpression()), !dbg !2244
  call void @llvm.dbg.declare(metadata i8** %83, metadata !2384, metadata !DIExpression()), !dbg !2246
  %85 = load %struct.utmpx*, %struct.utmpx** %82, align 8, !dbg !2247
  %86 = call i8* @make_id_equals_comment(%struct.utmpx* %85), !dbg !2248
  store i8* %86, i8** %83, align 8, !dbg !2246
  call void @llvm.dbg.declare(metadata [12 x i8]* %84, metadata !2385, metadata !DIExpression()), !dbg !2250
  %87 = getelementptr inbounds [12 x i8], [12 x i8]* %84, i64 0, i64 0, !dbg !2250
  %88 = load %struct.utmpx*, %struct.utmpx** %82, align 8, !dbg !2250
  %89 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %88, i32 0, i32 1, !dbg !2250
  %90 = load i32, i32* %89, align 4, !dbg !2250
  %91 = sext i32 %90 to i64, !dbg !2250
  %92 = call i32 (i8*, i8*, ...) @sprintf(i8* %87, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %91) #10, !dbg !2250
  %93 = load i8*, i8** @print_deadprocs.exitstr, align 8, !dbg !2251
  %94 = icmp ne i8* %93, null, !dbg !2251
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  %95 = load i8*, i8** @print_deadprocs.exitstr, align 8, !dbg !2266
  %96 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0)) #10, !dbg !2267
  %97 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2268
  %98 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %97, i32 0, i32 6, !dbg !2268
  %99 = getelementptr inbounds %struct.__exit_status, %struct.__exit_status* %98, i32 0, i32 0, !dbg !2268
  %100 = load i16, i16* %99, align 4, !dbg !2268
  %101 = sext i16 %100 to i32, !dbg !2268
  %102 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0)) #10, !dbg !2269
  %103 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2270
  %104 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %103, i32 0, i32 6, !dbg !2270
  %105 = getelementptr inbounds %struct.__exit_status, %struct.__exit_status* %104, i32 0, i32 1, !dbg !2270
  %106 = load i16, i16* %105, align 2, !dbg !2270
  %107 = sext i16 %106 to i32, !dbg !2270
  %108 = call i32 (i8*, i8*, ...) @sprintf(i8* %95, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.94, i64 0, i64 0), i8* %96, i32 %101, i8* %102, i32 %107) #10, !dbg !2271
  %109 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2272
  %110 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %109, i32 0, i32 2, !dbg !2273
  %111 = getelementptr inbounds [32 x i8], [32 x i8]* %110, i64 0, i64 0, !dbg !2272
  %112 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2274
  %113 = call i8* @time_string(%struct.utmpx* %112), !dbg !2275
  %114 = getelementptr inbounds [12 x i8], [12 x i8]* %12, i64 0, i64 0, !dbg !2276
  %115 = load i8*, i8** %11, align 8, !dbg !2277
  %116 = load i8*, i8** @print_deadprocs.exitstr, align 8, !dbg !2278
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 32, i8* %111, i8* %113, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %114, i8* %115, i8* %116), !dbg !2279
  %117 = load i8*, i8** %11, align 8, !dbg !2280
  call void @free(i8* %117) #10, !dbg !2281
  br label %originalBB1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @make_id_equals_comment(%struct.utmpx*) #4 !dbg !2386 {
  %2 = load i32, i32* @x.27
  %3 = load i32, i32* @y.28
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !2389, metadata !DIExpression()), !dbg !2390
  call void @llvm.dbg.declare(metadata i64* %11, metadata !2391, metadata !DIExpression()), !dbg !2392
  store i64 4, i64* %11, align 8, !dbg !2392
  call void @llvm.dbg.declare(metadata i8** %12, metadata !2393, metadata !DIExpression()), !dbg !2394
  %13 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i64 0, i64 0)) #10, !dbg !2395
  %14 = call i64 @strlen(i8* %13) #13, !dbg !2396
  %15 = load i64, i64* %11, align 8, !dbg !2397
  %16 = add i64 %14, %15, !dbg !2398
  %17 = add i64 %16, 1, !dbg !2399
  %18 = call noalias i8* @xmalloc(i64 %17), !dbg !2400
  store i8* %18, i8** %12, align 8, !dbg !2394
  %19 = load i8*, i8** %12, align 8, !dbg !2401
  %20 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i64 0, i64 0)) #10, !dbg !2402
  %21 = call i8* @strcpy(i8* %19, i8* %20) #10, !dbg !2403
  %22 = load i8*, i8** %12, align 8, !dbg !2404
  %23 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2405
  %24 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %23, i32 0, i32 3, !dbg !2405
  %25 = getelementptr inbounds [4 x i8], [4 x i8]* %24, i64 0, i64 0, !dbg !2405
  %26 = load i64, i64* %11, align 8, !dbg !2406
  %27 = call i8* @strncat(i8* %22, i8* %25, i64 %26) #10, !dbg !2407
  %28 = load i8*, i8** %12, align 8, !dbg !2408
  %29 = load i32, i32* @x.27
  %30 = load i32, i32* @y.28
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %28, !dbg !2409

originalBBalteredBB:                              ; preds = %originalBB, %1
  %37 = alloca %struct.utmpx*, align 8
  %38 = alloca i64, align 8
  %39 = alloca i8*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %37, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %37, metadata !2410, metadata !DIExpression()), !dbg !2390
  call void @llvm.dbg.declare(metadata i64* %38, metadata !2514, metadata !DIExpression()), !dbg !2392
  store i64 4, i64* %38, align 8, !dbg !2392
  call void @llvm.dbg.declare(metadata i8** %39, metadata !2515, metadata !DIExpression()), !dbg !2394
  %40 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i64 0, i64 0)) #10, !dbg !2395
  %41 = call i64 @strlen(i8* %40) #13, !dbg !2396
  %42 = load i64, i64* %38, align 8, !dbg !2397
  %_ = shl i64 %41, %42
  %43 = add i64 %41, %42, !dbg !2398
  %_1 = shl i64 %43, 1
  %_2 = shl i64 %43, 1
  %_3 = shl i64 %43, 1
  %_4 = sub i64 0, %43
  %gen = add i64 %_4, 1
  %_5 = shl i64 %43, 1
  %_6 = shl i64 %43, 1
  %_7 = shl i64 %43, 1
  %_8 = sub i64 0, %43
  %gen9 = add i64 %_8, 1
  %_10 = shl i64 %43, 1
  %_11 = sub i64 %43, 1
  %gen12 = mul i64 %_11, 1
  %44 = add i64 %43, 1, !dbg !2399
  %45 = call noalias i8* @xmalloc(i64 %44), !dbg !2400
  store i8* %45, i8** %39, align 8, !dbg !2394
  %46 = load i8*, i8** %39, align 8, !dbg !2401
  %47 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i64 0, i64 0)) #10, !dbg !2402
  %48 = call i8* @strcpy(i8* %46, i8* %47) #10, !dbg !2403
  %49 = load i8*, i8** %39, align 8, !dbg !2404
  %50 = load %struct.utmpx*, %struct.utmpx** %37, align 8, !dbg !2405
  %51 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %50, i32 0, i32 3, !dbg !2405
  %52 = getelementptr inbounds [4 x i8], [4 x i8]* %51, i64 0, i64 0, !dbg !2405
  %53 = load i64, i64* %38, align 8, !dbg !2406
  %54 = call i8* @strncat(i8* %49, i8* %52, i64 %53) #10, !dbg !2407
  %55 = load i8*, i8** %39, align 8, !dbg !2408
  br label %originalBB
}

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @time_string(%struct.utmpx*) #4 !dbg !125 {
  %2 = load i32, i32* @x.29
  %3 = load i32, i32* @y.30
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  %11 = alloca %struct.utmpx*, align 8
  %12 = alloca i64, align 8
  %13 = alloca %struct.tm*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %11, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %11, metadata !2516, metadata !DIExpression()), !dbg !2517
  call void @llvm.dbg.declare(metadata i64* %12, metadata !2518, metadata !DIExpression()), !dbg !2519
  %14 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !2520
  %15 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %14, i32 0, i32 8, !dbg !2520
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %15, i32 0, i32 0, !dbg !2520
  %17 = load i32, i32* %16, align 4, !dbg !2520
  %18 = sext i32 %17 to i64, !dbg !2520
  store i64 %18, i64* %12, align 8, !dbg !2519
  call void @llvm.dbg.declare(metadata %struct.tm** %13, metadata !2521, metadata !DIExpression()), !dbg !2537
  %19 = call %struct.tm* @localtime(i64* %12) #10, !dbg !2538
  store %struct.tm* %19, %struct.tm** %13, align 8, !dbg !2537
  %20 = load %struct.tm*, %struct.tm** %13, align 8, !dbg !2539
  %21 = icmp ne %struct.tm* %20, null, !dbg !2539
  %22 = load i32, i32* @x.29
  %23 = load i32, i32* @y.30
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %50, !dbg !2541

30:                                               ; preds = %originalBBpart2
  %31 = load i32, i32* @x.29
  %32 = load i32, i32* @y.30
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load i8*, i8** @time_format, align 8, !dbg !2542
  %40 = load %struct.tm*, %struct.tm** %13, align 8, !dbg !2544
  %41 = call i64 @strftime(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @time_string.buf, i64 0, i64 0), i64 33, i8* %39, %struct.tm* %40) #10, !dbg !2545
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @time_string.buf, i64 0, i64 0), i8** %10, align 8, !dbg !2546
  %42 = load i32, i32* @x.29
  %43 = load i32, i32* @y.30
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %53, !dbg !2546

50:                                               ; preds = %originalBBpart2
  %51 = load i64, i64* %12, align 8, !dbg !2547
  %52 = call i8* @timetostr(i64 %51, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @time_string.buf, i64 0, i64 0)), !dbg !2548
  store i8* %52, i8** %10, align 8, !dbg !2549
  br label %53, !dbg !2549

53:                                               ; preds = %50, %originalBBpart24
  %54 = load i32, i32* @x.29
  %55 = load i32, i32* @y.30
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %53, %originalBB6alteredBB
  %62 = load i8*, i8** %10, align 8, !dbg !2550
  %63 = load i32, i32* @x.29
  %64 = load i32, i32* @y.30
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i8* %62, !dbg !2550

originalBBalteredBB:                              ; preds = %originalBB, %1
  %71 = alloca i8*, align 8
  %72 = alloca %struct.utmpx*, align 8
  %73 = alloca i64, align 8
  %74 = alloca %struct.tm*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %72, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %72, metadata !2551, metadata !DIExpression()), !dbg !2517
  call void @llvm.dbg.declare(metadata i64* %73, metadata !2652, metadata !DIExpression()), !dbg !2519
  %75 = load %struct.utmpx*, %struct.utmpx** %72, align 8, !dbg !2520
  %76 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %75, i32 0, i32 8, !dbg !2520
  %77 = getelementptr inbounds %struct.anon, %struct.anon* %76, i32 0, i32 0, !dbg !2520
  %78 = load i32, i32* %77, align 4, !dbg !2520
  %79 = sext i32 %78 to i64, !dbg !2520
  store i64 %79, i64* %73, align 8, !dbg !2519
  call void @llvm.dbg.declare(metadata %struct.tm** %74, metadata !2653, metadata !DIExpression()), !dbg !2537
  %80 = call %struct.tm* @localtime(i64* %73) #10, !dbg !2538
  store %struct.tm* %80, %struct.tm** %74, align 8, !dbg !2537
  %81 = load %struct.tm*, %struct.tm** %74, align 8, !dbg !2539
  %82 = icmp ne %struct.tm* %81, null, !dbg !2539
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %83 = load i8*, i8** @time_format, align 8, !dbg !2542
  %84 = load %struct.tm*, %struct.tm** %13, align 8, !dbg !2544
  %85 = call i64 @strftime(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @time_string.buf, i64 0, i64 0), i64 33, i8* %83, %struct.tm* %84) #10, !dbg !2545
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @time_string.buf, i64 0, i64 0), i8** %10, align 8, !dbg !2546
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %53
  %86 = load i8*, i8** %10, align 8, !dbg !2550
  br label %originalBB6
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_line(i32, i8*, i8 signext, i32, i8*, i8*, i8*, i8*, i8*, i8*) #4 !dbg !56 {
  %11 = load i32, i32* @x.31
  %12 = load i32, i32* @y.32
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i8, align 1
  %22 = alloca i32, align 4
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i8*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i8*, align 8
  %29 = alloca i8*, align 8
  %30 = alloca [8 x i8], align 1
  %31 = alloca [13 x i8], align 1
  %32 = alloca i8*, align 8
  %33 = alloca i32, align 4
  %34 = alloca i8*, align 8
  store i32 %0, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !2668, metadata !DIExpression()), !dbg !2669
  store i8* %1, i8** %20, align 8
  call void @llvm.dbg.declare(metadata i8** %20, metadata !2670, metadata !DIExpression()), !dbg !2671
  store i8 %2, i8* %21, align 1
  call void @llvm.dbg.declare(metadata i8* %21, metadata !2672, metadata !DIExpression()), !dbg !2673
  store i32 %3, i32* %22, align 4
  call void @llvm.dbg.declare(metadata i32* %22, metadata !2674, metadata !DIExpression()), !dbg !2675
  store i8* %4, i8** %23, align 8
  call void @llvm.dbg.declare(metadata i8** %23, metadata !2676, metadata !DIExpression()), !dbg !2677
  store i8* %5, i8** %24, align 8
  call void @llvm.dbg.declare(metadata i8** %24, metadata !2678, metadata !DIExpression()), !dbg !2679
  store i8* %6, i8** %25, align 8
  call void @llvm.dbg.declare(metadata i8** %25, metadata !2680, metadata !DIExpression()), !dbg !2681
  store i8* %7, i8** %26, align 8
  call void @llvm.dbg.declare(metadata i8** %26, metadata !2682, metadata !DIExpression()), !dbg !2683
  store i8* %8, i8** %27, align 8
  call void @llvm.dbg.declare(metadata i8** %27, metadata !2684, metadata !DIExpression()), !dbg !2685
  store i8* %9, i8** %28, align 8
  call void @llvm.dbg.declare(metadata i8** %28, metadata !2686, metadata !DIExpression()), !dbg !2687
  call void @llvm.dbg.declare(metadata i8** %29, metadata !2688, metadata !DIExpression()), !dbg !2689
  call void @llvm.dbg.declare(metadata [8 x i8]* %30, metadata !2690, metadata !DIExpression()), !dbg !2692
  call void @llvm.dbg.declare(metadata [13 x i8]* %31, metadata !2693, metadata !DIExpression()), !dbg !2697
  call void @llvm.dbg.declare(metadata i8** %32, metadata !2698, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.declare(metadata i32* %33, metadata !2700, metadata !DIExpression()), !dbg !2701
  %35 = load i8, i8* %21, align 1, !dbg !2702
  store i8 %35, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @print_line.mesg, i64 0, i64 1), align 1, !dbg !2703
  %36 = load i8, i8* @include_idle, align 1, !dbg !2704
  %37 = trunc i8 %36 to i1, !dbg !2704
  %38 = load i32, i32* @x.31
  %39 = load i32, i32* @y.32
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %37, label %46, label %89, !dbg !2706

46:                                               ; preds = %originalBBpart2
  %47 = load i8, i8* @short_output, align 1, !dbg !2707
  %48 = trunc i8 %47 to i1, !dbg !2707
  br i1 %48, label %89, label %49, !dbg !2708

49:                                               ; preds = %46
  %50 = load i32, i32* @x.31
  %51 = load i32, i32* @y.32
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %49, %originalBB1alteredBB
  %58 = load i8*, i8** %25, align 8, !dbg !2709
  %59 = call i64 @strlen(i8* %58) #13, !dbg !2710
  %60 = icmp ult i64 %59, 7, !dbg !2711
  %61 = load i32, i32* @x.31
  %62 = load i32, i32* @y.32
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %60, label %69, label %89, !dbg !2712

69:                                               ; preds = %originalBBpart24
  %70 = load i32, i32* @x.31
  %71 = load i32, i32* @y.32
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %69, %originalBB6alteredBB
  %78 = getelementptr inbounds [8 x i8], [8 x i8]* %30, i64 0, i64 0, !dbg !2713
  %79 = load i8*, i8** %25, align 8, !dbg !2714
  %80 = call i32 (i8*, i8*, ...) @sprintf(i8* %78, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0), i8* %79) #10, !dbg !2715
  %81 = load i32, i32* @x.31
  %82 = load i32, i32* @y.32
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %107, !dbg !2715

89:                                               ; preds = %originalBBpart24, %46, %originalBBpart2
  %90 = load i32, i32* @x.31
  %91 = load i32, i32* @y.32
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %89, %originalBB10alteredBB
  %98 = getelementptr inbounds [8 x i8], [8 x i8]* %30, i64 0, i64 0, !dbg !2716
  store i8 0, i8* %98, align 1, !dbg !2717
  %99 = load i32, i32* @x.31
  %100 = load i32, i32* @y.32
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %107

107:                                              ; preds = %originalBBpart212, %originalBBpart28
  %108 = load i8, i8* @short_output, align 1, !dbg !2718
  %109 = trunc i8 %108 to i1, !dbg !2718
  br i1 %109, label %134, label %110, !dbg !2720

110:                                              ; preds = %107
  %111 = load i8*, i8** %26, align 8, !dbg !2721
  %112 = call i64 @strlen(i8* %111) #13, !dbg !2722
  %113 = icmp ult i64 %112, 12, !dbg !2723
  br i1 %113, label %114, label %134, !dbg !2724

114:                                              ; preds = %110
  %115 = load i32, i32* @x.31
  %116 = load i32, i32* @y.32
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %114, %originalBB14alteredBB
  %123 = getelementptr inbounds [13 x i8], [13 x i8]* %31, i64 0, i64 0, !dbg !2725
  %124 = load i8*, i8** %26, align 8, !dbg !2726
  %125 = call i32 (i8*, i8*, ...) @sprintf(i8* %123, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), i8* %124) #10, !dbg !2727
  %126 = load i32, i32* @x.31
  %127 = load i32, i32* @y.32
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %152, !dbg !2727

134:                                              ; preds = %110, %107
  %135 = load i32, i32* @x.31
  %136 = load i32, i32* @y.32
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %134, %originalBB18alteredBB
  %143 = getelementptr inbounds [13 x i8], [13 x i8]* %31, i64 0, i64 0, !dbg !2728
  store i8 0, i8* %143, align 1, !dbg !2729
  %144 = load i32, i32* @x.31
  %145 = load i32, i32* @y.32
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %152

152:                                              ; preds = %originalBBpart220, %originalBBpart216
  %153 = load i32, i32* @x.31
  %154 = load i32, i32* @y.32
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %152, %originalBB22alteredBB
  %161 = load i8, i8* @include_exit, align 1, !dbg !2730
  %162 = trunc i8 %161 to i1, !dbg !2730
  %163 = load i32, i32* @x.31
  %164 = load i32, i32* @y.32
  %165 = sub i32 %163, 1
  %166 = mul i32 %163, %165
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %168, %169
  br i1 %170, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %162, label %171, label %247, !dbg !2730

171:                                              ; preds = %originalBBpart224
  %172 = load i32, i32* @x.31
  %173 = load i32, i32* @y.32
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %171, %originalBB26alteredBB
  %180 = load i8*, i8** %28, align 8, !dbg !2731
  %181 = call i64 @strlen(i8* %180) #13, !dbg !2731
  %182 = icmp ugt i64 12, %181, !dbg !2731
  %183 = load i32, i32* @x.31
  %184 = load i32, i32* @y.32
  %185 = sub i32 %183, 1
  %186 = mul i32 %183, %185
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %188, %189
  br i1 %190, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %182, label %191, label %208, !dbg !2731

191:                                              ; preds = %originalBBpart228
  %192 = load i32, i32* @x.31
  %193 = load i32, i32* @y.32
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %191, %originalBB30alteredBB
  %200 = load i32, i32* @x.31
  %201 = load i32, i32* @y.32
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %227, !dbg !2731

208:                                              ; preds = %originalBBpart228
  %209 = load i32, i32* @x.31
  %210 = load i32, i32* @y.32
  %211 = sub i32 %209, 1
  %212 = mul i32 %209, %211
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %214, %215
  br i1 %216, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %208, %originalBB34alteredBB
  %217 = load i8*, i8** %28, align 8, !dbg !2731
  %218 = call i64 @strlen(i8* %217) #13, !dbg !2731
  %219 = load i32, i32* @x.31
  %220 = load i32, i32* @y.32
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %227, !dbg !2731

227:                                              ; preds = %originalBBpart236, %originalBBpart232
  %228 = phi i64 [ 12, %originalBBpart232 ], [ %218, %originalBBpart236 ], !dbg !2731
  %229 = load i32, i32* @x.31
  %230 = load i32, i32* @y.32
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %227, %originalBB38alteredBB
  %237 = add i64 1, %228, !dbg !2732
  %238 = add i64 %237, 1, !dbg !2733
  %239 = load i32, i32* @x.31
  %240 = load i32, i32* @y.32
  %241 = sub i32 %239, 1
  %242 = mul i32 %239, %241
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %244, %245
  br i1 %246, label %originalBBpart245, label %originalBB38alteredBB

originalBBpart245:                                ; preds = %originalBB38
  br label %264, !dbg !2730

247:                                              ; preds = %originalBBpart224
  %248 = load i32, i32* @x.31
  %249 = load i32, i32* @y.32
  %250 = sub i32 %248, 1
  %251 = mul i32 %248, %250
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %253, %254
  br i1 %255, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %247, %originalBB47alteredBB
  %256 = load i32, i32* @x.31
  %257 = load i32, i32* @y.32
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br label %264, !dbg !2730

264:                                              ; preds = %originalBBpart249, %originalBBpart245
  %265 = phi i64 [ %238, %originalBBpart245 ], [ 1, %originalBBpart249 ], !dbg !2730
  %266 = load i32, i32* @x.31
  %267 = load i32, i32* @y.32
  %268 = sub i32 %266, 1
  %269 = mul i32 %266, %268
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %271, %272
  br i1 %273, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %264, %originalBB51alteredBB
  %274 = call noalias i8* @xmalloc(i64 %265), !dbg !2734
  store i8* %274, i8** %32, align 8, !dbg !2735
  %275 = load i8, i8* @include_exit, align 1, !dbg !2736
  %276 = trunc i8 %275 to i1, !dbg !2736
  %277 = load i32, i32* @x.31
  %278 = load i32, i32* @y.32
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  br i1 %276, label %285, label %305, !dbg !2738

285:                                              ; preds = %originalBBpart253
  %286 = load i32, i32* @x.31
  %287 = load i32, i32* @y.32
  %288 = sub i32 %286, 1
  %289 = mul i32 %286, %288
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %291, %292
  br i1 %293, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %285, %originalBB55alteredBB
  %294 = load i8*, i8** %32, align 8, !dbg !2739
  %295 = load i8*, i8** %28, align 8, !dbg !2740
  %296 = call i32 (i8*, i8*, ...) @sprintf(i8* %294, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.71, i64 0, i64 0), i8* %295) #10, !dbg !2741
  %297 = load i32, i32* @x.31
  %298 = load i32, i32* @y.32
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  br label %323, !dbg !2741

305:                                              ; preds = %originalBBpart253
  %306 = load i32, i32* @x.31
  %307 = load i32, i32* @y.32
  %308 = sub i32 %306, 1
  %309 = mul i32 %306, %308
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %311, %312
  br i1 %313, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %305, %originalBB59alteredBB
  %314 = load i8*, i8** %32, align 8, !dbg !2742
  store i8 0, i8* %314, align 1, !dbg !2743
  %315 = load i32, i32* @x.31
  %316 = load i32, i32* @y.32
  %317 = sub i32 %315, 1
  %318 = mul i32 %315, %317
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %320, %321
  br i1 %322, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  br label %323

323:                                              ; preds = %originalBBpart261, %originalBBpart257
  %324 = load i32, i32* %19, align 4, !dbg !2744
  %325 = load i8*, i8** %20, align 8, !dbg !2745
  %326 = icmp ne i8* %325, null, !dbg !2745
  br i1 %326, label %327, label %345, !dbg !2745

327:                                              ; preds = %323
  %328 = load i32, i32* @x.31
  %329 = load i32, i32* @y.32
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %327, %originalBB63alteredBB
  %336 = load i8*, i8** %20, align 8, !dbg !2746
  %337 = load i32, i32* @x.31
  %338 = load i32, i32* @y.32
  %339 = sub i32 %337, 1
  %340 = mul i32 %337, %339
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %342, %343
  br i1 %344, label %originalBBpart265, label %originalBB63alteredBB

originalBBpart265:                                ; preds = %originalBB63
  br label %346, !dbg !2745

345:                                              ; preds = %323
  br label %346, !dbg !2745

346:                                              ; preds = %345, %originalBBpart265
  %347 = phi i8* [ %336, %originalBBpart265 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73, i64 0, i64 0), %345 ], !dbg !2745
  %348 = load i8, i8* @include_mesg, align 1, !dbg !2747
  %349 = trunc i8 %348 to i1, !dbg !2747
  %350 = zext i1 %349 to i64, !dbg !2747
  %351 = select i1 %349, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @print_line.mesg, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !2747
  %352 = load i32, i32* %22, align 4, !dbg !2748
  %353 = load i8*, i8** %23, align 8, !dbg !2749
  %354 = load i32, i32* @time_format_width, align 4, !dbg !2750
  %355 = load i8*, i8** %24, align 8, !dbg !2751
  %356 = getelementptr inbounds [8 x i8], [8 x i8]* %30, i64 0, i64 0, !dbg !2752
  %357 = getelementptr inbounds [13 x i8], [13 x i8]* %31, i64 0, i64 0, !dbg !2753
  %358 = load i8*, i8** %27, align 8, !dbg !2754
  %359 = load i8*, i8** %32, align 8, !dbg !2755
  %360 = call i32 (i8**, i8*, ...) @asprintf(i8** %29, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.72, i64 0, i64 0), i32 %324, i8* %347, i8* %351, i32 %352, i8* %353, i32 %354, i8* %355, i8* %356, i8* %357, i8* %358, i8* %359) #10, !dbg !2756
  store i32 %360, i32* %33, align 4, !dbg !2757
  %361 = load i32, i32* %33, align 4, !dbg !2758
  br label %362, !dbg !2760

362:                                              ; preds = %346
  %collatzVar = alloca i32
  br label %363

363:                                              ; preds = %362
  %364 = load i32, i32* @x.31
  %365 = load i32, i32* @y.32
  %366 = sub i32 %364, 1
  %367 = mul i32 %364, %366
  %368 = urem i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %369, %370
  br i1 %371, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %363, %originalBB67alteredBB
  %372 = load i32, i32* @inVal0
  %373 = icmp sgt i32 %372, 1
  %374 = load i32, i32* @x.31
  %375 = load i32, i32* @y.32
  %376 = sub i32 %374, 1
  %377 = mul i32 %374, %376
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %375, 10
  %381 = or i1 %379, %380
  br i1 %381, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  br i1 %373, label %399, label %382

382:                                              ; preds = %originalBBpart269
  %383 = load i32, i32* @x.31
  %384 = load i32, i32* @y.32
  %385 = sub i32 %383, 1
  %386 = mul i32 %383, %385
  %387 = urem i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %388, %389
  br i1 %390, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %382, %originalBB71alteredBB
  store i32 21, i32* %collatzVar
  %391 = load i32, i32* @x.31
  %392 = load i32, i32* @y.32
  %393 = sub i32 %391, 1
  %394 = mul i32 %391, %393
  %395 = urem i32 %394, 2
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %392, 10
  %398 = or i1 %396, %397
  br i1 %398, label %originalBBpart273, label %originalBB71alteredBB

originalBBpart273:                                ; preds = %originalBB71
  br label %399

399:                                              ; preds = %originalBBpart273, %originalBBpart269
  %400 = load i32, i32* @x.31
  %401 = load i32, i32* @y.32
  %402 = sub i32 %400, 1
  %403 = mul i32 %400, %402
  %404 = urem i32 %403, 2
  %405 = icmp eq i32 %404, 0
  %406 = icmp slt i32 %401, 10
  %407 = or i1 %405, %406
  br i1 %407, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %399, %originalBB75alteredBB
  %408 = load i8**, i8*** @inVal1
  %409 = getelementptr inbounds i8*, i8** %408, i64 1
  %410 = load i8*, i8** %409
  %controle = call i32 @controle(i8* %410, i32 -1)
  store i32 %controle, i32* %collatzVar
  %411 = load i32, i32* @x.31
  %412 = load i32, i32* @y.32
  %413 = sub i32 %411, 1
  %414 = mul i32 %411, %413
  %415 = urem i32 %414, 2
  %416 = icmp eq i32 %415, 0
  %417 = icmp slt i32 %412, 10
  %418 = or i1 %416, %417
  br i1 %418, label %originalBBpart277, label %originalBB75alteredBB

originalBBpart277:                                ; preds = %originalBB75
  br label %419

419:                                              ; preds = %originalBBpart2148, %originalBBpart2131, %originalBBpart277
  %420 = load i32, i32* @x.31
  %421 = load i32, i32* @y.32
  %422 = sub i32 %420, 1
  %423 = mul i32 %420, %422
  %424 = urem i32 %423, 2
  %425 = icmp eq i32 %424, 0
  %426 = icmp slt i32 %421, 10
  %427 = or i1 %425, %426
  br i1 %427, label %originalBB79, label %originalBB79alteredBB

originalBB79:                                     ; preds = %419, %originalBB79alteredBB
  %428 = load i32, i32* %collatzVar
  %429 = icmp sgt i32 %428, 1
  %430 = load i32, i32* @x.31
  %431 = load i32, i32* @y.32
  %432 = sub i32 %430, 1
  %433 = mul i32 %430, %432
  %434 = urem i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = icmp slt i32 %431, 10
  %437 = or i1 %435, %436
  br i1 %437, label %originalBBpart281, label %originalBB79alteredBB

originalBBpart281:                                ; preds = %originalBB79
  br i1 %429, label %438, label %554

438:                                              ; preds = %originalBBpart281
  %439 = load i32, i32* @x.31
  %440 = load i32, i32* @y.32
  %441 = sub i32 %439, 1
  %442 = mul i32 %439, %441
  %443 = urem i32 %442, 2
  %444 = icmp eq i32 %443, 0
  %445 = icmp slt i32 %440, 10
  %446 = or i1 %444, %445
  br i1 %446, label %originalBB83, label %originalBB83alteredBB

originalBB83:                                     ; preds = %438, %originalBB83alteredBB
  %447 = load i32, i32* %collatzVar
  %448 = srem i32 %447, 2
  %449 = icmp eq i32 %448, 0
  %450 = load i32, i32* @x.31
  %451 = load i32, i32* @y.32
  %452 = sub i32 %450, 1
  %453 = mul i32 %450, %452
  %454 = urem i32 %453, 2
  %455 = icmp eq i32 %454, 0
  %456 = icmp slt i32 %451, 10
  %457 = or i1 %455, %456
  br i1 %457, label %originalBBpart285, label %originalBB83alteredBB

originalBBpart285:                                ; preds = %originalBB83
  br i1 %449, label %458, label %477

458:                                              ; preds = %originalBBpart285
  %459 = load i32, i32* @x.31
  %460 = load i32, i32* @y.32
  %461 = sub i32 %459, 1
  %462 = mul i32 %459, %461
  %463 = urem i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %460, 10
  %466 = or i1 %464, %465
  br i1 %466, label %originalBB87, label %originalBB87alteredBB

originalBB87:                                     ; preds = %458, %originalBB87alteredBB
  %467 = load i32, i32* %collatzVar
  %468 = sdiv i32 %467, 2
  store i32 %468, i32* %collatzVar
  %469 = load i32, i32* @x.31
  %470 = load i32, i32* @y.32
  %471 = sub i32 %469, 1
  %472 = mul i32 %469, %471
  %473 = urem i32 %472, 2
  %474 = icmp eq i32 %473, 0
  %475 = icmp slt i32 %470, 10
  %476 = or i1 %474, %475
  br i1 %476, label %originalBBpart2102, label %originalBB87alteredBB

originalBBpart2102:                               ; preds = %originalBB87
  br label %497

477:                                              ; preds = %originalBBpart285
  %478 = load i32, i32* @x.31
  %479 = load i32, i32* @y.32
  %480 = sub i32 %478, 1
  %481 = mul i32 %478, %480
  %482 = urem i32 %481, 2
  %483 = icmp eq i32 %482, 0
  %484 = icmp slt i32 %479, 10
  %485 = or i1 %483, %484
  br i1 %485, label %originalBB104, label %originalBB104alteredBB

originalBB104:                                    ; preds = %477, %originalBB104alteredBB
  %486 = load i32, i32* %collatzVar
  %487 = mul i32 %486, 3
  %488 = add i32 %487, 1
  store i32 %488, i32* %collatzVar
  %489 = load i32, i32* @x.31
  %490 = load i32, i32* @y.32
  %491 = sub i32 %489, 1
  %492 = mul i32 %489, %491
  %493 = urem i32 %492, 2
  %494 = icmp eq i32 %493, 0
  %495 = icmp slt i32 %490, 10
  %496 = or i1 %494, %495
  br i1 %496, label %originalBBpart2114, label %originalBB104alteredBB

originalBBpart2114:                               ; preds = %originalBB104
  br label %497

497:                                              ; preds = %originalBBpart2114, %originalBBpart2102
  %498 = load i32, i32* @x.31
  %499 = load i32, i32* @y.32
  %500 = sub i32 %498, 1
  %501 = mul i32 %498, %500
  %502 = urem i32 %501, 2
  %503 = icmp eq i32 %502, 0
  %504 = icmp slt i32 %499, 10
  %505 = or i1 %503, %504
  br i1 %505, label %originalBB116, label %originalBB116alteredBB

originalBB116:                                    ; preds = %497, %originalBB116alteredBB
  %506 = load i32, i32* %collatzVar
  %507 = sub i32 %361, %506
  %508 = icmp sgt i32 %507, -3
  %509 = load i32, i32* @x.31
  %510 = load i32, i32* @y.32
  %511 = sub i32 %509, 1
  %512 = mul i32 %509, %511
  %513 = urem i32 %512, 2
  %514 = icmp eq i32 %513, 0
  %515 = icmp slt i32 %510, 10
  %516 = or i1 %514, %515
  br i1 %516, label %originalBBpart2131, label %originalBB116alteredBB

originalBBpart2131:                               ; preds = %originalBB116
  br i1 %508, label %517, label %419

517:                                              ; preds = %originalBBpart2131
  %518 = load i32, i32* @x.31
  %519 = load i32, i32* @y.32
  %520 = sub i32 %518, 1
  %521 = mul i32 %518, %520
  %522 = urem i32 %521, 2
  %523 = icmp eq i32 %522, 0
  %524 = icmp slt i32 %519, 10
  %525 = or i1 %523, %524
  br i1 %525, label %originalBB133, label %originalBB133alteredBB

originalBB133:                                    ; preds = %517, %originalBB133alteredBB
  %526 = load i32, i32* %collatzVar
  %527 = add i32 %361, %526
  %528 = icmp slt i32 %527, 1
  %529 = load i32, i32* @x.31
  %530 = load i32, i32* @y.32
  %531 = sub i32 %529, 1
  %532 = mul i32 %529, %531
  %533 = urem i32 %532, 2
  %534 = icmp eq i32 %533, 0
  %535 = icmp slt i32 %530, 10
  %536 = or i1 %534, %535
  br i1 %536, label %originalBBpart2148, label %originalBB133alteredBB

originalBBpart2148:                               ; preds = %originalBB133
  br i1 %528, label %537, label %419

537:                                              ; preds = %originalBBpart2148
  %538 = load i32, i32* @x.31
  %539 = load i32, i32* @y.32
  %540 = sub i32 %538, 1
  %541 = mul i32 %538, %540
  %542 = urem i32 %541, 2
  %543 = icmp eq i32 %542, 0
  %544 = icmp slt i32 %539, 10
  %545 = or i1 %543, %544
  br i1 %545, label %originalBB150, label %originalBB150alteredBB

originalBB150:                                    ; preds = %537, %originalBB150alteredBB
  call void @xalloc_die() #14, !dbg !2761
  %546 = load i32, i32* @x.31
  %547 = load i32, i32* @y.32
  %548 = sub i32 %546, 1
  %549 = mul i32 %546, %548
  %550 = urem i32 %549, 2
  %551 = icmp eq i32 %550, 0
  %552 = icmp slt i32 %547, 10
  %553 = or i1 %551, %552
  br i1 %553, label %originalBBpart2152, label %originalBB150alteredBB

originalBBpart2152:                               ; preds = %originalBB150
  unreachable, !dbg !2761

554:                                              ; preds = %originalBBpart281
  call void @llvm.dbg.declare(metadata i8** %34, metadata !2762, metadata !DIExpression()), !dbg !2764
  %555 = load i32, i32* @x.31
  %556 = load i32, i32* @y.32
  %557 = sub i32 %555, 1
  %558 = mul i32 %555, %557
  %559 = urem i32 %558, 2
  %560 = icmp eq i32 %559, 0
  %561 = icmp slt i32 %556, 10
  %562 = or i1 %560, %561
  br i1 %562, label %originalBB154, label %originalBB154alteredBB

originalBB154:                                    ; preds = %554, %originalBB154alteredBB
  %563 = load i8*, i8** %29, align 8, !dbg !2765
  %564 = load i8*, i8** %29, align 8, !dbg !2766
  %565 = call i64 @strlen(i8* %564) #13, !dbg !2767
  %566 = getelementptr inbounds i8, i8* %563, i64 %565, !dbg !2768
  store i8* %566, i8** %34, align 8, !dbg !2764
  %567 = load i32, i32* @x.31
  %568 = load i32, i32* @y.32
  %569 = sub i32 %567, 1
  %570 = mul i32 %567, %569
  %571 = urem i32 %570, 2
  %572 = icmp eq i32 %571, 0
  %573 = icmp slt i32 %568, 10
  %574 = or i1 %572, %573
  br i1 %574, label %originalBBpart2156, label %originalBB154alteredBB

originalBBpart2156:                               ; preds = %originalBB154
  br label %575, !dbg !2769

575:                                              ; preds = %originalBBpart2164, %originalBBpart2156
  %576 = load i32, i32* @x.31
  %577 = load i32, i32* @y.32
  %578 = sub i32 %576, 1
  %579 = mul i32 %576, %578
  %580 = urem i32 %579, 2
  %581 = icmp eq i32 %580, 0
  %582 = icmp slt i32 %577, 10
  %583 = or i1 %581, %582
  br i1 %583, label %originalBB158, label %originalBB158alteredBB

originalBB158:                                    ; preds = %575, %originalBB158alteredBB
  %584 = load i8*, i8** %34, align 8, !dbg !2770
  %585 = getelementptr inbounds i8, i8* %584, i32 -1, !dbg !2770
  store i8* %585, i8** %34, align 8, !dbg !2770
  %586 = load i8, i8* %585, align 1, !dbg !2771
  %587 = sext i8 %586 to i32, !dbg !2771
  %588 = icmp eq i32 %587, 32, !dbg !2772
  %589 = load i32, i32* @x.31
  %590 = load i32, i32* @y.32
  %591 = sub i32 %589, 1
  %592 = mul i32 %589, %591
  %593 = urem i32 %592, 2
  %594 = icmp eq i32 %593, 0
  %595 = icmp slt i32 %590, 10
  %596 = or i1 %594, %595
  br i1 %596, label %originalBBpart2160, label %originalBB158alteredBB

originalBBpart2160:                               ; preds = %originalBB158
  br i1 %588, label %597, label %614, !dbg !2769

597:                                              ; preds = %originalBBpart2160
  %598 = load i32, i32* @x.31
  %599 = load i32, i32* @y.32
  %600 = sub i32 %598, 1
  %601 = mul i32 %598, %600
  %602 = urem i32 %601, 2
  %603 = icmp eq i32 %602, 0
  %604 = icmp slt i32 %599, 10
  %605 = or i1 %603, %604
  br i1 %605, label %originalBB162, label %originalBB162alteredBB

originalBB162:                                    ; preds = %597, %originalBB162alteredBB
  %606 = load i32, i32* @x.31
  %607 = load i32, i32* @y.32
  %608 = sub i32 %606, 1
  %609 = mul i32 %606, %608
  %610 = urem i32 %609, 2
  %611 = icmp eq i32 %610, 0
  %612 = icmp slt i32 %607, 10
  %613 = or i1 %611, %612
  br i1 %613, label %originalBBpart2164, label %originalBB162alteredBB

originalBBpart2164:                               ; preds = %originalBB162
  br label %575, !dbg !2769, !llvm.loop !2773

614:                                              ; preds = %originalBBpart2160
  %615 = load i32, i32* @x.31
  %616 = load i32, i32* @y.32
  %617 = sub i32 %615, 1
  %618 = mul i32 %615, %617
  %619 = urem i32 %618, 2
  %620 = icmp eq i32 %619, 0
  %621 = icmp slt i32 %616, 10
  %622 = or i1 %620, %621
  br i1 %622, label %originalBB166, label %originalBB166alteredBB

originalBB166:                                    ; preds = %614, %originalBB166alteredBB
  %623 = load i8*, i8** %34, align 8, !dbg !2775
  %624 = getelementptr inbounds i8, i8* %623, i64 1, !dbg !2776
  store i8 0, i8* %624, align 1, !dbg !2777
  %625 = load i8*, i8** %29, align 8, !dbg !2778
  %626 = call i32 @puts(i8* %625), !dbg !2779
  %627 = load i8*, i8** %29, align 8, !dbg !2780
  call void @free(i8* %627) #10, !dbg !2781
  %628 = load i8*, i8** %32, align 8, !dbg !2782
  call void @free(i8* %628) #10, !dbg !2783
  %629 = load i32, i32* @x.31
  %630 = load i32, i32* @y.32
  %631 = sub i32 %629, 1
  %632 = mul i32 %629, %631
  %633 = urem i32 %632, 2
  %634 = icmp eq i32 %633, 0
  %635 = icmp slt i32 %630, 10
  %636 = or i1 %634, %635
  br i1 %636, label %originalBBpart2168, label %originalBB166alteredBB

originalBBpart2168:                               ; preds = %originalBB166
  ret void, !dbg !2784

originalBBalteredBB:                              ; preds = %originalBB, %10
  %637 = alloca i32, align 4
  %638 = alloca i8*, align 8
  %639 = alloca i8, align 1
  %640 = alloca i32, align 4
  %641 = alloca i8*, align 8
  %642 = alloca i8*, align 8
  %643 = alloca i8*, align 8
  %644 = alloca i8*, align 8
  %645 = alloca i8*, align 8
  %646 = alloca i8*, align 8
  %647 = alloca i8*, align 8
  %648 = alloca [8 x i8], align 1
  %649 = alloca [13 x i8], align 1
  %650 = alloca i8*, align 8
  %651 = alloca i32, align 4
  %652 = alloca i8*, align 8
  store i32 %0, i32* %637, align 4
  call void @llvm.dbg.declare(metadata i32* %637, metadata !2785, metadata !DIExpression()), !dbg !2669
  store i8* %1, i8** %638, align 8
  call void @llvm.dbg.declare(metadata i8** %638, metadata !2886, metadata !DIExpression()), !dbg !2671
  store i8 %2, i8* %639, align 1
  call void @llvm.dbg.declare(metadata i8* %639, metadata !2887, metadata !DIExpression()), !dbg !2673
  store i32 %3, i32* %640, align 4
  call void @llvm.dbg.declare(metadata i32* %640, metadata !2888, metadata !DIExpression()), !dbg !2675
  store i8* %4, i8** %641, align 8
  call void @llvm.dbg.declare(metadata i8** %641, metadata !2889, metadata !DIExpression()), !dbg !2677
  store i8* %5, i8** %642, align 8
  call void @llvm.dbg.declare(metadata i8** %642, metadata !2890, metadata !DIExpression()), !dbg !2679
  store i8* %6, i8** %643, align 8
  call void @llvm.dbg.declare(metadata i8** %643, metadata !2891, metadata !DIExpression()), !dbg !2681
  store i8* %7, i8** %644, align 8
  call void @llvm.dbg.declare(metadata i8** %644, metadata !2892, metadata !DIExpression()), !dbg !2683
  store i8* %8, i8** %645, align 8
  call void @llvm.dbg.declare(metadata i8** %645, metadata !2893, metadata !DIExpression()), !dbg !2685
  store i8* %9, i8** %646, align 8
  call void @llvm.dbg.declare(metadata i8** %646, metadata !2894, metadata !DIExpression()), !dbg !2687
  call void @llvm.dbg.declare(metadata i8** %647, metadata !2895, metadata !DIExpression()), !dbg !2689
  call void @llvm.dbg.declare(metadata [8 x i8]* %648, metadata !2896, metadata !DIExpression()), !dbg !2692
  call void @llvm.dbg.declare(metadata [13 x i8]* %649, metadata !2897, metadata !DIExpression()), !dbg !2697
  call void @llvm.dbg.declare(metadata i8** %650, metadata !2898, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.declare(metadata i32* %651, metadata !2899, metadata !DIExpression()), !dbg !2701
  %653 = load i8, i8* %639, align 1, !dbg !2702
  store i8 %653, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @print_line.mesg, i64 0, i64 1), align 1, !dbg !2703
  %654 = load i8, i8* @include_idle, align 1, !dbg !2704
  %655 = trunc i8 %654 to i1, !dbg !2704
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %49
  %656 = load i8*, i8** %25, align 8, !dbg !2709
  %657 = call i64 @strlen(i8* %656) #13, !dbg !2710
  %658 = icmp ult i64 %657, 7, !dbg !2711
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %69
  %659 = getelementptr inbounds [8 x i8], [8 x i8]* %30, i64 0, i64 0, !dbg !2713
  %660 = load i8*, i8** %25, align 8, !dbg !2714
  %661 = call i32 (i8*, i8*, ...) @sprintf(i8* %659, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0), i8* %660) #10, !dbg !2715
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %89
  %662 = getelementptr inbounds [8 x i8], [8 x i8]* %30, i64 0, i64 0, !dbg !2716
  store i8 0, i8* %662, align 1, !dbg !2717
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %114
  %663 = getelementptr inbounds [13 x i8], [13 x i8]* %31, i64 0, i64 0, !dbg !2725
  %664 = load i8*, i8** %26, align 8, !dbg !2726
  %665 = call i32 (i8*, i8*, ...) @sprintf(i8* %663, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), i8* %664) #10, !dbg !2727
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %134
  %666 = getelementptr inbounds [13 x i8], [13 x i8]* %31, i64 0, i64 0, !dbg !2728
  store i8 0, i8* %666, align 1, !dbg !2729
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %152
  %667 = load i8, i8* @include_exit, align 1, !dbg !2730
  %668 = trunc i8 %667 to i1, !dbg !2730
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %171
  %669 = load i8*, i8** %28, align 8, !dbg !2731
  %670 = call i64 @strlen(i8* %669) #13, !dbg !2731
  %671 = icmp ugt i64 12, %670, !dbg !2731
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %191
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %208
  %672 = load i8*, i8** %28, align 8, !dbg !2731
  %673 = call i64 @strlen(i8* %672) #13, !dbg !2731
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %227
  %_ = sub i64 0, 1
  %gen = add i64 %_, %228
  %_39 = sub i64 0, 1
  %gen40 = add i64 %_39, %228
  %674 = add i64 1, %228, !dbg !2732
  %_41 = shl i64 %674, 1
  %_42 = sub i64 %674, 1
  %gen43 = mul i64 %_42, 1
  %675 = add i64 %674, 1, !dbg !2733
  br label %originalBB38

originalBB47alteredBB:                            ; preds = %originalBB47, %247
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %264
  %676 = call noalias i8* @xmalloc(i64 %265), !dbg !2734
  store i8* %676, i8** %32, align 8, !dbg !2735
  %677 = load i8, i8* @include_exit, align 1, !dbg !2736
  %678 = trunc i8 %677 to i1, !dbg !2736
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %285
  %679 = load i8*, i8** %32, align 8, !dbg !2739
  %680 = load i8*, i8** %28, align 8, !dbg !2740
  %681 = call i32 (i8*, i8*, ...) @sprintf(i8* %679, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.71, i64 0, i64 0), i8* %680) #10, !dbg !2741
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %305
  %682 = load i8*, i8** %32, align 8, !dbg !2742
  store i8 0, i8* %682, align 1, !dbg !2743
  br label %originalBB59

originalBB63alteredBB:                            ; preds = %originalBB63, %327
  %683 = load i8*, i8** %20, align 8, !dbg !2746
  br label %originalBB63

originalBB67alteredBB:                            ; preds = %originalBB67, %363
  %684 = load i32, i32* @inVal0
  %685 = icmp sgt i32 %684, 1
  br label %originalBB67

originalBB71alteredBB:                            ; preds = %originalBB71, %382
  store i32 21, i32* %collatzVar
  br label %originalBB71

originalBB75alteredBB:                            ; preds = %originalBB75, %399
  %686 = load i8**, i8*** @inVal1
  %687 = getelementptr inbounds i8*, i8** %686, i64 1
  %688 = load i8*, i8** %687
  %controlealteredBB = call i32 @controle(i8* %688, i32 -1)
  store i32 %controlealteredBB, i32* %collatzVar
  br label %originalBB75

originalBB79alteredBB:                            ; preds = %originalBB79, %419
  %689 = load i32, i32* %collatzVar
  %690 = icmp sgt i32 %689, 1
  br label %originalBB79

originalBB83alteredBB:                            ; preds = %originalBB83, %438
  %691 = load i32, i32* %collatzVar
  %692 = srem i32 %691, 2
  %693 = icmp eq i32 %692, 0
  br label %originalBB83

originalBB87alteredBB:                            ; preds = %originalBB87, %458
  %694 = load i32, i32* %collatzVar
  %_88 = sub i32 0, %694
  %gen89 = add i32 %_88, 2
  %_90 = shl i32 %694, 2
  %_91 = sub i32 0, %694
  %gen92 = add i32 %_91, 2
  %_93 = shl i32 %694, 2
  %_94 = shl i32 %694, 2
  %_95 = sub i32 0, %694
  %gen96 = add i32 %_95, 2
  %_97 = shl i32 %694, 2
  %_98 = sub i32 %694, 2
  %gen99 = mul i32 %_98, 2
  %_100 = shl i32 %694, 2
  %695 = sdiv i32 %694, 2
  store i32 %695, i32* %collatzVar
  br label %originalBB87

originalBB104alteredBB:                           ; preds = %originalBB104, %477
  %696 = load i32, i32* %collatzVar
  %_105 = shl i32 %696, 3
  %_106 = shl i32 %696, 3
  %_107 = sub i32 %696, 3
  %gen108 = mul i32 %_107, 3
  %_109 = shl i32 %696, 3
  %697 = mul i32 %696, 3
  %_110 = shl i32 %697, 1
  %_111 = sub i32 0, %697
  %gen112 = add i32 %_111, 1
  %698 = add i32 %697, 1
  store i32 %698, i32* %collatzVar
  br label %originalBB104

originalBB116alteredBB:                           ; preds = %originalBB116, %497
  %699 = load i32, i32* %collatzVar
  %_117 = sub i32 0, %361
  %gen118 = add i32 %_117, %699
  %_119 = sub i32 %361, %699
  %gen120 = mul i32 %_119, %699
  %_121 = sub i32 %361, %699
  %gen122 = mul i32 %_121, %699
  %_123 = sub i32 %361, %699
  %gen124 = mul i32 %_123, %699
  %_125 = sub i32 0, %361
  %gen126 = add i32 %_125, %699
  %_127 = sub i32 %361, %699
  %gen128 = mul i32 %_127, %699
  %_129 = shl i32 %361, %699
  %700 = sub i32 %361, %699
  %701 = icmp sgt i32 %700, -3
  br label %originalBB116

originalBB133alteredBB:                           ; preds = %originalBB133, %517
  %702 = load i32, i32* %collatzVar
  %_134 = shl i32 %361, %702
  %_135 = sub i32 %361, %702
  %gen136 = mul i32 %_135, %702
  %_137 = sub i32 0, %361
  %gen138 = add i32 %_137, %702
  %_139 = sub i32 %361, %702
  %gen140 = mul i32 %_139, %702
  %_141 = shl i32 %361, %702
  %_142 = sub i32 %361, %702
  %gen143 = mul i32 %_142, %702
  %_144 = sub i32 0, %361
  %gen145 = add i32 %_144, %702
  %_146 = shl i32 %361, %702
  %703 = add i32 %361, %702
  %704 = icmp slt i32 %703, 1
  br label %originalBB133

originalBB150alteredBB:                           ; preds = %originalBB150, %537
  call void @xalloc_die() #14, !dbg !2761
  br label %originalBB150

originalBB154alteredBB:                           ; preds = %originalBB154, %554
  %705 = load i8*, i8** %29, align 8, !dbg !2765
  %706 = load i8*, i8** %29, align 8, !dbg !2766
  %707 = call i64 @strlen(i8* %706) #13, !dbg !2767
  %708 = getelementptr inbounds i8, i8* %705, i64 %707, !dbg !2768
  store i8* %708, i8** %34, align 8, !dbg !2764
  br label %originalBB154

originalBB158alteredBB:                           ; preds = %originalBB158, %575
  %709 = load i8*, i8** %34, align 8, !dbg !2770
  %710 = getelementptr inbounds i8, i8* %709, i32 -1, !dbg !2770
  store i8* %710, i8** %34, align 8, !dbg !2770
  %711 = load i8, i8* %710, align 1, !dbg !2771
  %712 = sext i8 %711 to i32, !dbg !2771
  %713 = icmp eq i32 %712, 32, !dbg !2772
  br label %originalBB158

originalBB162alteredBB:                           ; preds = %originalBB162, %597
  br label %originalBB162

originalBB166alteredBB:                           ; preds = %originalBB166, %614
  %714 = load i8*, i8** %34, align 8, !dbg !2775
  %715 = getelementptr inbounds i8, i8* %714, i64 1, !dbg !2776
  store i8 0, i8* %715, align 1, !dbg !2777
  %716 = load i8*, i8** %29, align 8, !dbg !2778
  %717 = call i32 @puts(i8* %716), !dbg !2779
  %718 = load i8*, i8** %29, align 8, !dbg !2780
  call void @free(i8* %718) #10, !dbg !2781
  %719 = load i8*, i8** %32, align 8, !dbg !2782
  call void @free(i8* %719) #10, !dbg !2783
  br label %originalBB166
}

; Function Attrs: nounwind
declare dso_local i32 @asprintf(i8**, i8*, ...) #2

declare dso_local i32 @puts(i8*) #3

; Function Attrs: nounwind
declare dso_local %struct.tm* @localtime(i64*) #2

; Function Attrs: nounwind
declare dso_local i64 @strftime(i8*, i64, i8*, %struct.tm*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @timetostr(i64, i8*) #4 !dbg !2900 {
  %3 = load i32, i32* @x.33
  %4 = load i32, i32* @y.34
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  store i64 %0, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !2903, metadata !DIExpression()), !dbg !2904
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !2905, metadata !DIExpression()), !dbg !2906
  %13 = load i64, i64* %11, align 8, !dbg !2907
  %14 = load i8*, i8** %12, align 8, !dbg !2908
  %15 = call i8* @imaxtostr(i64 %13, i8* %14), !dbg !2909
  %16 = load i32, i32* @x.33
  %17 = load i32, i32* @y.34
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %15, !dbg !2910

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca i64, align 8
  %25 = alloca i8*, align 8
  store i64 %0, i64* %24, align 8
  call void @llvm.dbg.declare(metadata i64* %24, metadata !2911, metadata !DIExpression()), !dbg !2904
  store i8* %1, i8** %25, align 8
  call void @llvm.dbg.declare(metadata i8** %25, metadata !3013, metadata !DIExpression()), !dbg !2906
  %26 = load i64, i64* %24, align 8, !dbg !2907
  %27 = load i8*, i8** %25, align 8, !dbg !2908
  %28 = call i8* @imaxtostr(i64 %26, i8* %27), !dbg !2909
  br label %originalBB
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @strncat(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @stpcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @stzncpy(i8* noalias, i8* noalias, i64) #4 !dbg !3014 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3019, metadata !DIExpression()), !dbg !3020
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !3021, metadata !DIExpression()), !dbg !3022
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !3023, metadata !DIExpression()), !dbg !3024
  call void @llvm.dbg.declare(metadata i8** %7, metadata !3025, metadata !DIExpression()), !dbg !3026
  %8 = load i8*, i8** %5, align 8, !dbg !3027
  %9 = load i64, i64* %6, align 8, !dbg !3028
  %10 = getelementptr inbounds i8, i8* %8, i64 %9, !dbg !3029
  store i8* %10, i8** %7, align 8, !dbg !3026
  br label %11, !dbg !3030

11:                                               ; preds = %originalBBpart28, %3
  %12 = load i8*, i8** %5, align 8, !dbg !3031
  %13 = load i8*, i8** %7, align 8, !dbg !3032
  %14 = icmp ult i8* %12, %13, !dbg !3033
  br i1 %14, label %15, label %36, !dbg !3034

15:                                               ; preds = %11
  %16 = load i32, i32* @x.35
  %17 = load i32, i32* @y.36
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = load i8*, i8** %5, align 8, !dbg !3035
  %25 = load i8, i8* %24, align 1, !dbg !3036
  %26 = sext i8 %25 to i32, !dbg !3036
  %27 = icmp ne i32 %26, 0, !dbg !3034
  %28 = load i32, i32* @x.35
  %29 = load i32, i32* @y.36
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %36

36:                                               ; preds = %originalBBpart2, %11
  %37 = phi i1 [ false, %11 ], [ %27, %originalBBpart2 ], !dbg !3037
  %38 = load i32, i32* @x.35
  %39 = load i32, i32* @y.36
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %36, %originalBB1alteredBB
  %46 = load i32, i32* @x.35
  %47 = load i32, i32* @y.36
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %37, label %54, label %76, !dbg !3030

54:                                               ; preds = %originalBBpart24
  %55 = load i32, i32* @x.35
  %56 = load i32, i32* @y.36
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %54, %originalBB6alteredBB
  %63 = load i8*, i8** %5, align 8, !dbg !3038
  %64 = getelementptr inbounds i8, i8* %63, i32 1, !dbg !3038
  store i8* %64, i8** %5, align 8, !dbg !3038
  %65 = load i8, i8* %63, align 1, !dbg !3039
  %66 = load i8*, i8** %4, align 8, !dbg !3040
  %67 = getelementptr inbounds i8, i8* %66, i32 1, !dbg !3040
  store i8* %67, i8** %4, align 8, !dbg !3040
  store i8 %65, i8* %66, align 1, !dbg !3041
  %68 = load i32, i32* @x.35
  %69 = load i32, i32* @y.36
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %11, !dbg !3030, !llvm.loop !3042

76:                                               ; preds = %originalBBpart24
  %77 = load i32, i32* @x.35
  %78 = load i32, i32* @y.36
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %76, %originalBB10alteredBB
  %85 = load i8*, i8** %4, align 8, !dbg !3043
  store i8 0, i8* %85, align 1, !dbg !3044
  %86 = load i8*, i8** %4, align 8, !dbg !3045
  %87 = load i32, i32* @x.35
  %88 = load i32, i32* @y.36
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret i8* %86, !dbg !3046

originalBBalteredBB:                              ; preds = %originalBB, %15
  %95 = load i8*, i8** %5, align 8, !dbg !3035
  %96 = load i8, i8* %95, align 1, !dbg !3036
  %97 = sext i8 %96 to i32, !dbg !3036
  %98 = icmp ne i32 %97, 0, !dbg !3034
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %36
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %54
  %99 = load i8*, i8** %5, align 8, !dbg !3038
  %100 = getelementptr inbounds i8, i8* %99, i32 1, !dbg !3038
  store i8* %100, i8** %5, align 8, !dbg !3038
  %101 = load i8, i8* %99, align 1, !dbg !3039
  %102 = load i8*, i8** %4, align 8, !dbg !3040
  %103 = getelementptr inbounds i8, i8* %102, i32 1, !dbg !3040
  store i8* %103, i8** %4, align 8, !dbg !3040
  store i8 %101, i8* %102, align 1, !dbg !3041
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %76
  %104 = load i8*, i8** %4, align 8, !dbg !3043
  store i8 0, i8* %104, align 1, !dbg !3044
  %105 = load i8*, i8** %4, align 8, !dbg !3045
  br label %originalBB10
}

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_tty_writable(%struct.stat*) #4 !dbg !3047 {
  %2 = load i32, i32* @x.37
  %3 = load i32, i32* @y.38
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.stat*, align 8
  store %struct.stat* %0, %struct.stat** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %10, metadata !3052, metadata !DIExpression()), !dbg !3053
  %11 = load %struct.stat*, %struct.stat** %10, align 8, !dbg !3054
  %12 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 3, !dbg !3055
  %13 = load i32, i32* %12, align 8, !dbg !3055
  %14 = and i32 %13, 16, !dbg !3056
  %15 = icmp ne i32 %14, 0, !dbg !3054
  %16 = load i32, i32* @x.37
  %17 = load i32, i32* @y.38
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i1 %15, !dbg !3057

originalBBalteredBB:                              ; preds = %originalBB, %1
  %24 = alloca %struct.stat*, align 8
  store %struct.stat* %0, %struct.stat** %24, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %24, metadata !3058, metadata !DIExpression()), !dbg !3053
  %25 = load %struct.stat*, %struct.stat** %24, align 8, !dbg !3054
  %26 = getelementptr inbounds %struct.stat, %struct.stat* %25, i32 0, i32 3, !dbg !3055
  %27 = load i32, i32* %26, align 8, !dbg !3055
  %_ = sub i32 %27, 16
  %gen = mul i32 %_, 16
  %_1 = shl i32 %27, 16
  %28 = and i32 %27, 16, !dbg !3056
  %29 = icmp ne i32 %28, 0, !dbg !3054
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @idle_string(i64, i64) #4 !dbg !115 {
  %3 = load i32, i32* @x.39
  %4 = load i32, i32* @y.40
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  store i64 %0, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !3185, metadata !DIExpression()), !dbg !3186
  store i64 %1, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !3187, metadata !DIExpression()), !dbg !3188
  %15 = load i64, i64* @idle_string.now, align 8, !dbg !3189
  %16 = icmp eq i64 %15, -9223372036854775808, !dbg !3191
  %17 = load i32, i32* @x.39
  %18 = load i32, i32* @y.40
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %27, !dbg !3192

25:                                               ; preds = %originalBBpart2
  %26 = call i64 @time(i64* @idle_string.now) #10, !dbg !3193
  br label %27, !dbg !3193

27:                                               ; preds = %25, %originalBBpart2
  %28 = load i32, i32* @x.39
  %29 = load i32, i32* @y.40
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load i64, i64* %13, align 8, !dbg !3194
  %37 = load i64, i64* %12, align 8, !dbg !3196
  %38 = icmp slt i64 %36, %37, !dbg !3197
  %39 = load i32, i32* @x.39
  %40 = load i32, i32* @y.40
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %38, label %47, label %173, !dbg !3198

47:                                               ; preds = %originalBBpart24
  %48 = load i32, i32* @x.39
  %49 = load i32, i32* @y.40
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %47, %originalBB6alteredBB
  %56 = load i64, i64* @idle_string.now, align 8, !dbg !3199
  %57 = sub nsw i64 %56, 86400, !dbg !3200
  %58 = load i64, i64* %12, align 8, !dbg !3201
  %59 = icmp slt i64 %57, %58, !dbg !3202
  %60 = load i32, i32* @x.39
  %61 = load i32, i32* @y.40
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart211, label %originalBB6alteredBB

originalBBpart211:                                ; preds = %originalBB6
  br i1 %59, label %68, label %173, !dbg !3203

68:                                               ; preds = %originalBBpart211
  %69 = load i32, i32* @x.39
  %70 = load i32, i32* @y.40
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %68, %originalBB13alteredBB
  %77 = load i64, i64* %12, align 8, !dbg !3204
  %78 = load i64, i64* @idle_string.now, align 8, !dbg !3205
  %79 = icmp sle i64 %77, %78, !dbg !3206
  %80 = load i32, i32* @x.39
  %81 = load i32, i32* @y.40
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  br i1 %79, label %88, label %173, !dbg !3207

88:                                               ; preds = %originalBBpart215
  call void @llvm.dbg.declare(metadata i32* %14, metadata !3208, metadata !DIExpression()), !dbg !3210
  %89 = load i32, i32* @x.39
  %90 = load i32, i32* @y.40
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %88, %originalBB17alteredBB
  %97 = load i64, i64* @idle_string.now, align 8, !dbg !3211
  %98 = load i64, i64* %12, align 8, !dbg !3212
  %99 = sub nsw i64 %97, %98, !dbg !3213
  %100 = trunc i64 %99 to i32, !dbg !3211
  store i32 %100, i32* %14, align 4, !dbg !3210
  %101 = load i32, i32* %14, align 4, !dbg !3214
  %102 = icmp slt i32 %101, 60, !dbg !3216
  %103 = load i32, i32* @x.39
  %104 = load i32, i32* @y.40
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart234, label %originalBB17alteredBB

originalBBpart234:                                ; preds = %originalBB17
  br i1 %102, label %111, label %128, !dbg !3217

111:                                              ; preds = %originalBBpart234
  %112 = load i32, i32* @x.39
  %113 = load i32, i32* @y.40
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBB36, label %originalBB36alteredBB

originalBB36:                                     ; preds = %111, %originalBB36alteredBB
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i64 0, i64 0), i8** %11, align 8, !dbg !3218
  %120 = load i32, i32* @x.39
  %121 = load i32, i32* @y.40
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBBpart238, label %originalBB36alteredBB

originalBBpart238:                                ; preds = %originalBB36
  br label %175, !dbg !3218

128:                                              ; preds = %originalBBpart234
  %129 = load i32, i32* %14, align 4, !dbg !3219
  %130 = sdiv i32 %129, 3600, !dbg !3219
  %131 = icmp slt i32 %130, 24, !dbg !3219
  br i1 %131, label %132, label %149, !dbg !3223

132:                                              ; preds = %128
  %133 = load i32, i32* @x.39
  %134 = load i32, i32* @y.40
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB40, label %originalBB40alteredBB

originalBB40:                                     ; preds = %132, %originalBB40alteredBB
  %141 = load i32, i32* @x.39
  %142 = load i32, i32* @y.40
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart242, label %originalBB40alteredBB

originalBBpart242:                                ; preds = %originalBB40
  br label %150, !dbg !3223

149:                                              ; preds = %128
  call void @__assert_fail(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.81, i64 0, i64 0), i32 205, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__PRETTY_FUNCTION__.idle_string, i64 0, i64 0)) #12, !dbg !3219
  unreachable, !dbg !3219

150:                                              ; preds = %originalBBpart242
  %151 = load i32, i32* @x.39
  %152 = load i32, i32* @y.40
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBB44, label %originalBB44alteredBB

originalBB44:                                     ; preds = %150, %originalBB44alteredBB
  %159 = load i32, i32* %14, align 4, !dbg !3224
  %160 = sdiv i32 %159, 3600, !dbg !3225
  %161 = load i32, i32* %14, align 4, !dbg !3226
  %162 = srem i32 %161, 3600, !dbg !3227
  %163 = sdiv i32 %162, 60, !dbg !3228
  %164 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @idle_string.idle_hhmm, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.82, i64 0, i64 0), i32 %160, i32 %163) #10, !dbg !3229
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @idle_string.idle_hhmm, i64 0, i64 0), i8** %11, align 8, !dbg !3230
  %165 = load i32, i32* @x.39
  %166 = load i32, i32* @y.40
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBBpart271, label %originalBB44alteredBB

originalBBpart271:                                ; preds = %originalBB44
  br label %175, !dbg !3230

173:                                              ; preds = %originalBBpart215, %originalBBpart211, %originalBBpart24
  %174 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i64 0, i64 0)) #10, !dbg !3231
  store i8* %174, i8** %11, align 8, !dbg !3232
  br label %175, !dbg !3232

175:                                              ; preds = %173, %originalBBpart271, %originalBBpart238
  %176 = load i32, i32* @x.39
  %177 = load i32, i32* @y.40
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBB73, label %originalBB73alteredBB

originalBB73:                                     ; preds = %175, %originalBB73alteredBB
  %184 = load i8*, i8** %11, align 8, !dbg !3233
  %185 = load i32, i32* @x.39
  %186 = load i32, i32* @y.40
  %187 = sub i32 %185, 1
  %188 = mul i32 %185, %187
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %190, %191
  br i1 %192, label %originalBBpart275, label %originalBB73alteredBB

originalBBpart275:                                ; preds = %originalBB73
  ret i8* %184, !dbg !3233

originalBBalteredBB:                              ; preds = %originalBB, %2
  %193 = alloca i8*, align 8
  %194 = alloca i64, align 8
  %195 = alloca i64, align 8
  %196 = alloca i32, align 4
  store i64 %0, i64* %194, align 8
  call void @llvm.dbg.declare(metadata i64* %194, metadata !3234, metadata !DIExpression()), !dbg !3186
  store i64 %1, i64* %195, align 8
  call void @llvm.dbg.declare(metadata i64* %195, metadata !3335, metadata !DIExpression()), !dbg !3188
  %197 = load i64, i64* @idle_string.now, align 8, !dbg !3189
  %198 = icmp eq i64 %197, -9223372036854775808, !dbg !3191
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %199 = load i64, i64* %13, align 8, !dbg !3194
  %200 = load i64, i64* %12, align 8, !dbg !3196
  %201 = icmp slt i64 %199, %200, !dbg !3197
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %47
  %202 = load i64, i64* @idle_string.now, align 8, !dbg !3199
  %_ = shl i64 %202, 86400
  %_7 = sub i64 %202, 86400
  %gen = mul i64 %_7, 86400
  %_8 = sub i64 0, %202
  %gen9 = add i64 %_8, 86400
  %203 = sub nsw i64 %202, 86400, !dbg !3200
  %204 = load i64, i64* %12, align 8, !dbg !3201
  %205 = icmp slt i64 %203, %204, !dbg !3202
  br label %originalBB6

originalBB13alteredBB:                            ; preds = %originalBB13, %68
  %206 = load i64, i64* %12, align 8, !dbg !3204
  %207 = load i64, i64* @idle_string.now, align 8, !dbg !3205
  %208 = icmp sle i64 %206, %207, !dbg !3206
  br label %originalBB13

originalBB17alteredBB:                            ; preds = %originalBB17, %88
  %209 = load i64, i64* @idle_string.now, align 8, !dbg !3211
  %210 = load i64, i64* %12, align 8, !dbg !3212
  %_18 = sub i64 0, %209
  %gen19 = add i64 %_18, %210
  %_20 = sub i64 0, %209
  %gen21 = add i64 %_20, %210
  %_22 = sub i64 0, %209
  %gen23 = add i64 %_22, %210
  %_24 = sub i64 %209, %210
  %gen25 = mul i64 %_24, %210
  %_26 = sub i64 0, %209
  %gen27 = add i64 %_26, %210
  %_28 = sub i64 0, %209
  %gen29 = add i64 %_28, %210
  %_30 = sub i64 0, %209
  %gen31 = add i64 %_30, %210
  %_32 = shl i64 %209, %210
  %211 = sub nsw i64 %209, %210, !dbg !3213
  %212 = trunc i64 %211 to i32, !dbg !3211
  store i32 %212, i32* %14, align 4, !dbg !3210
  %213 = load i32, i32* %14, align 4, !dbg !3214
  %214 = icmp slt i32 %213, 60, !dbg !3216
  br label %originalBB17

originalBB36alteredBB:                            ; preds = %originalBB36, %111
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i64 0, i64 0), i8** %11, align 8, !dbg !3218
  br label %originalBB36

originalBB40alteredBB:                            ; preds = %originalBB40, %132
  br label %originalBB40

originalBB44alteredBB:                            ; preds = %originalBB44, %150
  %215 = load i32, i32* %14, align 4, !dbg !3224
  %_45 = sub i32 0, %215
  %gen46 = add i32 %_45, 3600
  %_47 = sub i32 %215, 3600
  %gen48 = mul i32 %_47, 3600
  %_49 = sub i32 %215, 3600
  %gen50 = mul i32 %_49, 3600
  %_51 = sub i32 %215, 3600
  %gen52 = mul i32 %_51, 3600
  %_53 = sub i32 0, %215
  %gen54 = add i32 %_53, 3600
  %216 = sdiv i32 %215, 3600, !dbg !3225
  %217 = load i32, i32* %14, align 4, !dbg !3226
  %_55 = sub i32 %217, 3600
  %gen56 = mul i32 %_55, 3600
  %_57 = sub i32 0, %217
  %gen58 = add i32 %_57, 3600
  %_59 = sub i32 0, %217
  %gen60 = add i32 %_59, 3600
  %_61 = shl i32 %217, 3600
  %_62 = sub i32 0, %217
  %gen63 = add i32 %_62, 3600
  %_64 = sub i32 %217, 3600
  %gen65 = mul i32 %_64, 3600
  %_66 = sub i32 0, %217
  %gen67 = add i32 %_66, 3600
  %218 = srem i32 %217, 3600, !dbg !3227
  %_68 = sub i32 0, %218
  %gen69 = add i32 %_68, 60
  %219 = sdiv i32 %218, 60, !dbg !3228
  %220 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @idle_string.idle_hhmm, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.82, i64 0, i64 0), i32 %216, i32 %219) #10, !dbg !3229
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @idle_string.idle_hhmm, i64 0, i64 0), i8** %11, align 8, !dbg !3230
  br label %originalBB44

originalBB73alteredBB:                            ; preds = %originalBB73, %175
  %221 = load i8*, i8** %11, align 8, !dbg !3233
  br label %originalBB73
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #7

; Function Attrs: nounwind
declare dso_local i64 @time(i64*) #2

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @c_isprint(i32) #4 !dbg !3336 {
  %2 = load i32, i32* @x.41
  %3 = load i32, i32* @y.42
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i1, align 1
  %11 = alloca i32, align 4
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3340, metadata !DIExpression()), !dbg !3341
  %12 = load i32, i32* %11, align 4, !dbg !3342
  %13 = load i32, i32* @x.41
  %14 = load i32, i32* @y.42
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  switch i32 %12, label %38 [
    i32 32, label %21
    i32 48, label %21
    i32 49, label %21
    i32 50, label %21
    i32 51, label %21
    i32 52, label %21
    i32 53, label %21
    i32 54, label %21
    i32 55, label %21
    i32 56, label %21
    i32 57, label %21
    i32 97, label %21
    i32 98, label %21
    i32 99, label %21
    i32 100, label %21
    i32 101, label %21
    i32 102, label %21
    i32 103, label %21
    i32 104, label %21
    i32 105, label %21
    i32 106, label %21
    i32 107, label %21
    i32 108, label %21
    i32 109, label %21
    i32 110, label %21
    i32 111, label %21
    i32 112, label %21
    i32 113, label %21
    i32 114, label %21
    i32 115, label %21
    i32 116, label %21
    i32 117, label %21
    i32 118, label %21
    i32 119, label %21
    i32 120, label %21
    i32 121, label %21
    i32 122, label %21
    i32 33, label %21
    i32 34, label %21
    i32 35, label %21
    i32 36, label %21
    i32 37, label %21
    i32 38, label %21
    i32 39, label %21
    i32 40, label %21
    i32 41, label %21
    i32 42, label %21
    i32 43, label %21
    i32 44, label %21
    i32 45, label %21
    i32 46, label %21
    i32 47, label %21
    i32 58, label %21
    i32 59, label %21
    i32 60, label %21
    i32 61, label %21
    i32 62, label %21
    i32 63, label %21
    i32 64, label %21
    i32 91, label %21
    i32 92, label %21
    i32 93, label %21
    i32 94, label %21
    i32 95, label %21
    i32 96, label %21
    i32 123, label %21
    i32 124, label %21
    i32 125, label %21
    i32 126, label %21
    i32 65, label %21
    i32 66, label %21
    i32 67, label %21
    i32 68, label %21
    i32 69, label %21
    i32 70, label %21
    i32 71, label %21
    i32 72, label %21
    i32 73, label %21
    i32 74, label %21
    i32 75, label %21
    i32 76, label %21
    i32 77, label %21
    i32 78, label %21
    i32 79, label %21
    i32 80, label %21
    i32 81, label %21
    i32 82, label %21
    i32 83, label %21
    i32 84, label %21
    i32 85, label %21
    i32 86, label %21
    i32 87, label %21
    i32 88, label %21
    i32 89, label %21
    i32 90, label %21
  ], !dbg !3343

21:                                               ; preds = %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2
  %22 = load i32, i32* @x.41
  %23 = load i32, i32* @y.42
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  store i1 true, i1* %10, align 1, !dbg !3344
  %30 = load i32, i32* @x.41
  %31 = load i32, i32* @y.42
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %55, !dbg !3344

38:                                               ; preds = %originalBBpart2
  %39 = load i32, i32* @x.41
  %40 = load i32, i32* @y.42
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %38, %originalBB6alteredBB
  store i1 false, i1* %10, align 1, !dbg !3346
  %47 = load i32, i32* @x.41
  %48 = load i32, i32* @y.42
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %55, !dbg !3346

55:                                               ; preds = %originalBBpart28, %originalBBpart24
  %56 = load i1, i1* %10, align 1, !dbg !3347
  ret i1 %56, !dbg !3347

originalBBalteredBB:                              ; preds = %originalBB, %1
  %57 = alloca i1, align 1
  %58 = alloca i32, align 4
  store i32 %0, i32* %58, align 4
  call void @llvm.dbg.declare(metadata i32* %58, metadata !3348, metadata !DIExpression()), !dbg !3341
  %59 = load i32, i32* %58, align 4, !dbg !3342
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  store i1 true, i1* %10, align 1, !dbg !3344
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %38
  store i1 false, i1* %10, align 1, !dbg !3346
  br label %originalBB6
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @c_tolower(i32) #4 !dbg !3351 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3354, metadata !DIExpression()), !dbg !3355
  %4 = load i32, i32* %3, align 4, !dbg !3356
  switch i32 %4, label %25 [
    i32 65, label %5
    i32 66, label %5
    i32 67, label %5
    i32 68, label %5
    i32 69, label %5
    i32 70, label %5
    i32 71, label %5
    i32 72, label %5
    i32 73, label %5
    i32 74, label %5
    i32 75, label %5
    i32 76, label %5
    i32 77, label %5
    i32 78, label %5
    i32 79, label %5
    i32 80, label %5
    i32 81, label %5
    i32 82, label %5
    i32 83, label %5
    i32 84, label %5
    i32 85, label %5
    i32 86, label %5
    i32 87, label %5
    i32 88, label %5
    i32 89, label %5
    i32 90, label %5
  ], !dbg !3357

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %6 = load i32, i32* @x.43
  %7 = load i32, i32* @y.44
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = load i32, i32* %3, align 4, !dbg !3358
  %15 = sub nsw i32 %14, 65, !dbg !3360
  %16 = add nsw i32 %15, 97, !dbg !3361
  store i32 %16, i32* %2, align 4, !dbg !3362
  %17 = load i32, i32* @x.43
  %18 = load i32, i32* @y.44
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %43, !dbg !3362

25:                                               ; preds = %1
  %26 = load i32, i32* @x.43
  %27 = load i32, i32* @y.44
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %25, %originalBB17alteredBB
  %34 = load i32, i32* %3, align 4, !dbg !3363
  store i32 %34, i32* %2, align 4, !dbg !3364
  %35 = load i32, i32* @x.43
  %36 = load i32, i32* @y.44
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  br label %43, !dbg !3364

43:                                               ; preds = %originalBBpart219, %originalBBpart2
  %44 = load i32, i32* @x.43
  %45 = load i32, i32* @y.44
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %43, %originalBB21alteredBB
  %52 = load i32, i32* %2, align 4, !dbg !3365
  %53 = load i32, i32* @x.43
  %54 = load i32, i32* @y.44
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  ret i32 %52, !dbg !3365

originalBBalteredBB:                              ; preds = %originalBB, %5
  %61 = load i32, i32* %3, align 4, !dbg !3358
  %_ = sub i32 0, %61
  %gen = add i32 %_, 65
  %_1 = sub i32 %61, 65
  %gen2 = mul i32 %_1, 65
  %_3 = shl i32 %61, 65
  %_4 = sub i32 0, %61
  %gen5 = add i32 %_4, 65
  %_6 = sub i32 0, %61
  %gen7 = add i32 %_6, 65
  %_8 = sub i32 %61, 65
  %gen9 = mul i32 %_8, 65
  %_10 = shl i32 %61, 65
  %_11 = sub i32 %61, 65
  %gen12 = mul i32 %_11, 65
  %62 = sub nsw i32 %61, 65, !dbg !3360
  %_13 = sub i32 0, %62
  %gen14 = add i32 %_13, 97
  %_15 = sub i32 0, %62
  %gen16 = add i32 %_15, 97
  %63 = add nsw i32 %62, 97, !dbg !3361
  store i32 %63, i32* %2, align 4, !dbg !3362
  br label %originalBB

originalBB17alteredBB:                            ; preds = %originalBB17, %25
  %64 = load i32, i32* %3, align 4, !dbg !3363
  store i32 %64, i32* %2, align 4, !dbg !3364
  br label %originalBB17

originalBB21alteredBB:                            ; preds = %originalBB21, %43
  %65 = load i32, i32* %2, align 4, !dbg !3365
  br label %originalBB21
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @canon_host(i8*) #4 !dbg !3366 {
  %2 = load i32, i32* @x.45
  %3 = load i32, i32* @y.46
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !3369, metadata !DIExpression()), !dbg !3370
  %11 = load i8*, i8** %10, align 8, !dbg !3371
  %12 = call noalias i8* @canon_host_r(i8* %11, i32* @last_cherror), !dbg !3372
  %13 = load i32, i32* @x.45
  %14 = load i32, i32* @y.46
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !3373

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i8*, align 8
  store i8* %0, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !3374, metadata !DIExpression()), !dbg !3370
  %22 = load i8*, i8** %21, align 8, !dbg !3371
  %23 = call noalias i8* @canon_host_r(i8* %22, i32* @last_cherror), !dbg !3372
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @canon_host_r(i8*, i32*) #4 !dbg !165 {
  %3 = load i32, i32* @x.47
  %4 = load i32, i32* @y.48
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca %struct.addrinfo*, align 8
  %15 = alloca i32, align 4
  store i8* %0, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !3399, metadata !DIExpression()), !dbg !3400
  store i32* %1, i32** %12, align 8
  call void @llvm.dbg.declare(metadata i32** %12, metadata !3401, metadata !DIExpression()), !dbg !3402
  call void @llvm.dbg.declare(metadata i8** %13, metadata !3403, metadata !DIExpression()), !dbg !3404
  store i8* null, i8** %13, align 8, !dbg !3404
  call void @llvm.dbg.declare(metadata %struct.addrinfo** %14, metadata !3405, metadata !DIExpression()), !dbg !3406
  store %struct.addrinfo* null, %struct.addrinfo** %14, align 8, !dbg !3406
  call void @llvm.dbg.declare(metadata i32* %15, metadata !3407, metadata !DIExpression()), !dbg !3408
  store i32 2, i32* getelementptr inbounds (%struct.addrinfo, %struct.addrinfo* @canon_host_r.hints, i32 0, i32 0), align 8, !dbg !3409
  %16 = load i8*, i8** %11, align 8, !dbg !3410
  %17 = call i32 @getaddrinfo(i8* %16, i8* null, %struct.addrinfo* @canon_host_r.hints, %struct.addrinfo** %14), !dbg !3411
  store i32 %17, i32* %15, align 4, !dbg !3412
  %18 = load i32, i32* %15, align 4, !dbg !3413
  %19 = icmp ne i32 %18, 0, !dbg !3413
  %20 = load i32, i32* @x.47
  %21 = load i32, i32* @y.48
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %115, label %28, !dbg !3415

28:                                               ; preds = %originalBBpart2
  %29 = load %struct.addrinfo*, %struct.addrinfo** %14, align 8, !dbg !3416
  %30 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %29, i32 0, i32 6, !dbg !3418
  %31 = load i8*, i8** %30, align 8, !dbg !3418
  %32 = icmp ne i8* %31, null, !dbg !3416
  br i1 %32, label %33, label %53, !dbg !3416

33:                                               ; preds = %28
  %34 = load i32, i32* @x.47
  %35 = load i32, i32* @y.48
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %33, %originalBB1alteredBB
  %42 = load %struct.addrinfo*, %struct.addrinfo** %14, align 8, !dbg !3419
  %43 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %42, i32 0, i32 6, !dbg !3420
  %44 = load i8*, i8** %43, align 8, !dbg !3420
  %45 = load i32, i32* @x.47
  %46 = load i32, i32* @y.48
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %71, !dbg !3416

53:                                               ; preds = %28
  %54 = load i32, i32* @x.47
  %55 = load i32, i32* @y.48
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %53, %originalBB6alteredBB
  %62 = load i8*, i8** %11, align 8, !dbg !3421
  %63 = load i32, i32* @x.47
  %64 = load i32, i32* @y.48
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %71, !dbg !3416

71:                                               ; preds = %originalBBpart28, %originalBBpart24
  %72 = phi i8* [ %44, %originalBBpart24 ], [ %62, %originalBBpart28 ], !dbg !3416
  %73 = call noalias i8* @strdup(i8* %72) #10, !dbg !3422
  store i8* %73, i8** %13, align 8, !dbg !3423
  %74 = load i8*, i8** %13, align 8, !dbg !3424
  %75 = icmp ne i8* %74, null, !dbg !3424
  br i1 %75, label %113, label %76, !dbg !3426

76:                                               ; preds = %71
  %77 = load i32, i32* @x.47
  %78 = load i32, i32* @y.48
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %76, %originalBB10alteredBB
  %85 = load i32*, i32** %12, align 8, !dbg !3427
  %86 = icmp ne i32* %85, null, !dbg !3427
  %87 = load i32, i32* @x.47
  %88 = load i32, i32* @y.48
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %86, label %95, label %113, !dbg !3428

95:                                               ; preds = %originalBBpart212
  %96 = load i32, i32* @x.47
  %97 = load i32, i32* @y.48
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %95, %originalBB14alteredBB
  %104 = load i32*, i32** %12, align 8, !dbg !3429
  store i32 -10, i32* %104, align 4, !dbg !3430
  %105 = load i32, i32* @x.47
  %106 = load i32, i32* @y.48
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %113, !dbg !3431

113:                                              ; preds = %originalBBpart216, %originalBBpart212, %71
  %114 = load %struct.addrinfo*, %struct.addrinfo** %14, align 8, !dbg !3432
  call void @freeaddrinfo(%struct.addrinfo* %114) #10, !dbg !3433
  br label %170, !dbg !3434

115:                                              ; preds = %originalBBpart2
  %116 = load i32, i32* @x.47
  %117 = load i32, i32* @y.48
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %115, %originalBB18alteredBB
  %124 = load i32*, i32** %12, align 8, !dbg !3435
  %125 = icmp ne i32* %124, null, !dbg !3435
  %126 = load i32, i32* @x.47
  %127 = load i32, i32* @y.48
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %125, label %134, label %153, !dbg !3437

134:                                              ; preds = %originalBBpart220
  %135 = load i32, i32* @x.47
  %136 = load i32, i32* @y.48
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %134, %originalBB22alteredBB
  %143 = load i32, i32* %15, align 4, !dbg !3438
  %144 = load i32*, i32** %12, align 8, !dbg !3439
  store i32 %143, i32* %144, align 4, !dbg !3440
  %145 = load i32, i32* @x.47
  %146 = load i32, i32* @y.48
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %153, !dbg !3441

153:                                              ; preds = %originalBBpart224, %originalBBpart220
  %154 = load i32, i32* @x.47
  %155 = load i32, i32* @y.48
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %153, %originalBB26alteredBB
  %162 = load i32, i32* @x.47
  %163 = load i32, i32* @y.48
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %170

170:                                              ; preds = %originalBBpart228, %113
  %171 = load i8*, i8** %13, align 8, !dbg !3442
  ret i8* %171, !dbg !3443

originalBBalteredBB:                              ; preds = %originalBB, %2
  %172 = alloca i8*, align 8
  %173 = alloca i32*, align 8
  %174 = alloca i8*, align 8
  %175 = alloca %struct.addrinfo*, align 8
  %176 = alloca i32, align 4
  store i8* %0, i8** %172, align 8
  call void @llvm.dbg.declare(metadata i8** %172, metadata !3444, metadata !DIExpression()), !dbg !3400
  store i32* %1, i32** %173, align 8
  call void @llvm.dbg.declare(metadata i32** %173, metadata !3468, metadata !DIExpression()), !dbg !3402
  call void @llvm.dbg.declare(metadata i8** %174, metadata !3469, metadata !DIExpression()), !dbg !3404
  store i8* null, i8** %174, align 8, !dbg !3404
  call void @llvm.dbg.declare(metadata %struct.addrinfo** %175, metadata !3470, metadata !DIExpression()), !dbg !3406
  store %struct.addrinfo* null, %struct.addrinfo** %175, align 8, !dbg !3406
  call void @llvm.dbg.declare(metadata i32* %176, metadata !3471, metadata !DIExpression()), !dbg !3408
  store i32 2, i32* getelementptr inbounds (%struct.addrinfo, %struct.addrinfo* @canon_host_r.hints, i32 0, i32 0), align 8, !dbg !3409
  %177 = load i8*, i8** %172, align 8, !dbg !3410
  %178 = call i32 @getaddrinfo(i8* %177, i8* null, %struct.addrinfo* @canon_host_r.hints, %struct.addrinfo** %175), !dbg !3411
  store i32 %178, i32* %176, align 4, !dbg !3412
  %179 = load i32, i32* %176, align 4, !dbg !3413
  %180 = icmp ne i32 %179, 0, !dbg !3413
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %33
  %181 = load %struct.addrinfo*, %struct.addrinfo** %14, align 8, !dbg !3419
  %182 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %181, i32 0, i32 6, !dbg !3420
  %183 = load i8*, i8** %182, align 8, !dbg !3420
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %53
  %184 = load i8*, i8** %11, align 8, !dbg !3421
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %76
  %185 = load i32*, i32** %12, align 8, !dbg !3427
  %186 = icmp ne i32* %185, null, !dbg !3427
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %95
  %187 = load i32*, i32** %12, align 8, !dbg !3429
  store i32 -10, i32* %187, align 4, !dbg !3430
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %115
  %188 = load i32*, i32** %12, align 8, !dbg !3435
  %189 = icmp ne i32* %188, null, !dbg !3435
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %134
  %190 = load i32, i32* %15, align 4, !dbg !3438
  %191 = load i32*, i32** %12, align 8, !dbg !3439
  store i32 %190, i32* %191, align 4, !dbg !3440
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %153
  br label %originalBB26
}

declare dso_local i32 @getaddrinfo(i8*, i8*, %struct.addrinfo*, %struct.addrinfo**) #3

; Function Attrs: nounwind
declare dso_local noalias i8* @strdup(i8*) #2

; Function Attrs: nounwind
declare dso_local void @freeaddrinfo(%struct.addrinfo*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @close_stdout() #4 !dbg !3472 {
  %1 = alloca i8*, align 8
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3473
  %3 = call i32 @close_stream(%struct._IO_FILE* %2), !dbg !3475
  %4 = icmp ne i32 %3, 0, !dbg !3476
  br i1 %4, label %5, label %92, !dbg !3477

5:                                                ; preds = %0
  %6 = load i8, i8* @ignore_EPIPE, align 1, !dbg !3478
  %7 = trunc i8 %6 to i1, !dbg !3478
  br i1 %7, label %8, label %28, !dbg !3479

8:                                                ; preds = %5
  %9 = load i32, i32* @x.49
  %10 = load i32, i32* @y.50
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = call i32* @__errno_location() #15, !dbg !3480
  %18 = load i32, i32* %17, align 4, !dbg !3480
  %19 = icmp eq i32 %18, 32, !dbg !3481
  %20 = load i32, i32* @x.49
  %21 = load i32, i32* @y.50
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %92, label %28, !dbg !3482

28:                                               ; preds = %originalBBpart2, %5
  call void @llvm.dbg.declare(metadata i8** %1, metadata !3483, metadata !DIExpression()), !dbg !3485
  %29 = load i32, i32* @x.49
  %30 = load i32, i32* @y.50
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.102, i64 0, i64 0)) #10, !dbg !3486
  store i8* %37, i8** %1, align 8, !dbg !3485
  %38 = load i8*, i8** @file_name, align 8, !dbg !3487
  %39 = icmp ne i8* %38, null, !dbg !3487
  %40 = load i32, i32* @x.49
  %41 = load i32, i32* @y.50
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %39, label %48, label %70, !dbg !3489

48:                                               ; preds = %originalBBpart24
  %49 = load i32, i32* @x.49
  %50 = load i32, i32* @y.50
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %48, %originalBB6alteredBB
  %57 = call i32* @__errno_location() #15, !dbg !3490
  %58 = load i32, i32* %57, align 4, !dbg !3490
  %59 = load i8*, i8** @file_name, align 8, !dbg !3491
  %60 = call i8* @quotearg_colon(i8* %59), !dbg !3492
  %61 = load i8*, i8** %1, align 8, !dbg !3493
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %58, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.103, i64 0, i64 0), i8* %60, i8* %61), !dbg !3494
  %62 = load i32, i32* @x.49
  %63 = load i32, i32* @y.50
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %74, !dbg !3494

70:                                               ; preds = %originalBBpart24
  %71 = call i32* @__errno_location() #15, !dbg !3495
  %72 = load i32, i32* %71, align 4, !dbg !3495
  %73 = load i8*, i8** %1, align 8, !dbg !3496
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %72, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.104, i64 0, i64 0), i8* %73), !dbg !3497
  br label %74

74:                                               ; preds = %70, %originalBBpart28
  %75 = load i32, i32* @x.49
  %76 = load i32, i32* @y.50
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %74, %originalBB10alteredBB
  %83 = load volatile i32, i32* @exit_failure, align 4, !dbg !3498
  call void @_exit(i32 %83) #14, !dbg !3499
  %84 = load i32, i32* @x.49
  %85 = load i32, i32* @y.50
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  unreachable, !dbg !3499

92:                                               ; preds = %originalBBpart2, %0
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3500
  %94 = call i32 @close_stream(%struct._IO_FILE* %93), !dbg !3502
  %95 = icmp ne i32 %94, 0, !dbg !3503
  br i1 %95, label %96, label %114, !dbg !3504

96:                                               ; preds = %92
  %97 = load i32, i32* @x.49
  %98 = load i32, i32* @y.50
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %96, %originalBB14alteredBB
  %105 = load volatile i32, i32* @exit_failure, align 4, !dbg !3505
  call void @_exit(i32 %105) #14, !dbg !3506
  %106 = load i32, i32* @x.49
  %107 = load i32, i32* @y.50
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  unreachable, !dbg !3506

114:                                              ; preds = %92
  %115 = load i32, i32* @x.49
  %116 = load i32, i32* @y.50
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %114, %originalBB18alteredBB
  %123 = load i32, i32* @x.49
  %124 = load i32, i32* @y.50
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  ret void, !dbg !3507

originalBBalteredBB:                              ; preds = %originalBB, %8
  %131 = call i32* @__errno_location() #15, !dbg !3480
  %132 = load i32, i32* %131, align 4, !dbg !3480
  %133 = icmp eq i32 %132, 32, !dbg !3481
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %134 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.102, i64 0, i64 0)) #10, !dbg !3486
  store i8* %134, i8** %1, align 8, !dbg !3485
  %135 = load i8*, i8** @file_name, align 8, !dbg !3487
  %136 = icmp ne i8* %135, null, !dbg !3487
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  %137 = call i32* @__errno_location() #15, !dbg !3490
  %138 = load i32, i32* %137, align 4, !dbg !3490
  %139 = load i8*, i8** @file_name, align 8, !dbg !3491
  %140 = call i8* @quotearg_colon(i8* %139), !dbg !3492
  %141 = load i8*, i8** %1, align 8, !dbg !3493
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %138, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.103, i64 0, i64 0), i8* %140, i8* %141), !dbg !3494
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %74
  %142 = load volatile i32, i32* @exit_failure, align 4, !dbg !3498
  call void @_exit(i32 %142) #14, !dbg !3499
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %96
  %143 = load volatile i32, i32* @exit_failure, align 4, !dbg !3505
  call void @_exit(i32 %143) #14, !dbg !3506
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %114
  br label %originalBB18
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #9

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @hard_locale(i32) #4 !dbg !3508 {
  %2 = load i32, i32* @x.51
  %3 = load i32, i32* @y.52
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i1, align 1
  %11 = alloca i32, align 4
  %12 = alloca [257 x i8], align 16
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3510, metadata !DIExpression()), !dbg !3511
  call void @llvm.dbg.declare(metadata [257 x i8]* %12, metadata !3512, metadata !DIExpression()), !dbg !3513
  %13 = load i32, i32* %11, align 4, !dbg !3514
  %14 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !3516
  %15 = call i32 @setlocale_null_r(i32 %13, i8* %14, i64 257), !dbg !3517
  %16 = icmp ne i32 %15, 0, !dbg !3517
  %17 = load i32, i32* @x.51
  %18 = load i32, i32* @y.52
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %26, !dbg !3518

25:                                               ; preds = %originalBBpart2
  store i1 false, i1* %10, align 1, !dbg !3519
  br label %276, !dbg !3519

26:                                               ; preds = %originalBBpart2
  %27 = load i32, i32* @x.51
  %28 = load i32, i32* @y.52
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !3520
  %36 = call i32 @strcmp(i8* %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i64 0, i64 0)) #13, !dbg !3521
  %37 = load i32, i32* @x.51
  %38 = load i32, i32* @y.52
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %45, !dbg !3522

45:                                               ; preds = %originalBBpart24
  %46 = load i32, i32* @x.51
  %47 = load i32, i32* @y.52
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %45, %originalBB6alteredBB
  %collatzVar = alloca i32
  %54 = load i32, i32* @x.51
  %55 = load i32, i32* @y.52
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %62

62:                                               ; preds = %originalBBpart28
  %63 = load i32, i32* @x.51
  %64 = load i32, i32* @y.52
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %62, %originalBB10alteredBB
  %71 = load i32, i32* @inVal0
  %72 = icmp sgt i32 %71, 1
  %73 = load i32, i32* @x.51
  %74 = load i32, i32* @y.52
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %72, label %98, label %81

81:                                               ; preds = %originalBBpart212
  %82 = load i32, i32* @x.51
  %83 = load i32, i32* @y.52
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %81, %originalBB14alteredBB
  store i32 3, i32* %collatzVar
  %90 = load i32, i32* @x.51
  %91 = load i32, i32* @y.52
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %98

98:                                               ; preds = %originalBBpart216, %originalBBpart212
  %99 = load i32, i32* @x.51
  %100 = load i32, i32* @y.52
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %98, %originalBB18alteredBB
  %107 = load i8**, i8*** @inVal1
  %108 = getelementptr inbounds i8*, i8** %107, i64 1
  %109 = load i8*, i8** %108
  %110 = add i32 0, -3
  %controle = call i32 @controle(i8* %109, i32 %110)
  store i32 %controle, i32* %collatzVar
  %111 = load i32, i32* @x.51
  %112 = load i32, i32* @y.52
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %119

119:                                              ; preds = %originalBBpart292, %originalBBpart279, %originalBBpart220
  %120 = load i32, i32* @x.51
  %121 = load i32, i32* @y.52
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %119, %originalBB22alteredBB
  %128 = load i32, i32* %collatzVar
  %129 = icmp sgt i32 %128, 1
  %130 = load i32, i32* @x.51
  %131 = load i32, i32* @y.52
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %129, label %138, label %237

138:                                              ; preds = %originalBBpart224
  %139 = load i32, i32* @x.51
  %140 = load i32, i32* @y.52
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %138, %originalBB26alteredBB
  %147 = load i32, i32* %collatzVar
  %148 = srem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = load i32, i32* @x.51
  %151 = load i32, i32* @y.52
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBBpart229, label %originalBB26alteredBB

originalBBpart229:                                ; preds = %originalBB26
  br i1 %149, label %158, label %177

158:                                              ; preds = %originalBBpart229
  %159 = load i32, i32* @x.51
  %160 = load i32, i32* @y.52
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %158, %originalBB31alteredBB
  %167 = load i32, i32* %collatzVar
  %168 = sdiv i32 %167, 2
  store i32 %168, i32* %collatzVar
  %169 = load i32, i32* @x.51
  %170 = load i32, i32* @y.52
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBBpart243, label %originalBB31alteredBB

originalBBpart243:                                ; preds = %originalBB31
  br label %197

177:                                              ; preds = %originalBBpart229
  %178 = load i32, i32* @x.51
  %179 = load i32, i32* @y.52
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %177, %originalBB45alteredBB
  %186 = load i32, i32* %collatzVar
  %187 = mul i32 %186, 3
  %188 = add i32 %187, 1
  store i32 %188, i32* %collatzVar
  %189 = load i32, i32* @x.51
  %190 = load i32, i32* @y.52
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBBpart259, label %originalBB45alteredBB

originalBBpart259:                                ; preds = %originalBB45
  br label %197

197:                                              ; preds = %originalBBpart259, %originalBBpart243
  %198 = load i32, i32* @x.51
  %199 = load i32, i32* @y.52
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %197, %originalBB61alteredBB
  %206 = load i32, i32* %collatzVar
  %207 = sub i32 %36, %206
  %208 = icmp sgt i32 %207, -2
  %209 = load i32, i32* @x.51
  %210 = load i32, i32* @y.52
  %211 = sub i32 %209, 1
  %212 = mul i32 %209, %211
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %214, %215
  br i1 %216, label %originalBBpart279, label %originalBB61alteredBB

originalBBpart279:                                ; preds = %originalBB61
  br i1 %208, label %217, label %119

217:                                              ; preds = %originalBBpart279
  %218 = load i32, i32* @x.51
  %219 = load i32, i32* @y.52
  %220 = sub i32 %218, 1
  %221 = mul i32 %218, %220
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %223, %224
  br i1 %225, label %originalBB81, label %originalBB81alteredBB

originalBB81:                                     ; preds = %217, %originalBB81alteredBB
  %226 = load i32, i32* %collatzVar
  %227 = add i32 %36, %226
  %228 = icmp slt i32 %227, 2
  %229 = load i32, i32* @x.51
  %230 = load i32, i32* @y.52
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBBpart292, label %originalBB81alteredBB

originalBBpart292:                                ; preds = %originalBB81
  br i1 %228, label %257, label %119

237:                                              ; preds = %originalBBpart224
  %238 = load i32, i32* @x.51
  %239 = load i32, i32* @y.52
  %240 = sub i32 %238, 1
  %241 = mul i32 %238, %240
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %243, %244
  br i1 %245, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %237, %originalBB94alteredBB
  %246 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !3523
  %247 = call i32 @strcmp(i8* %246, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.110, i64 0, i64 0)) #13, !dbg !3524
  %248 = icmp eq i32 %247, 0, !dbg !3525
  %249 = load i32, i32* @x.51
  %250 = load i32, i32* @y.52
  %251 = sub i32 %249, 1
  %252 = mul i32 %249, %251
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %254, %255
  br i1 %256, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br label %257, !dbg !3526

257:                                              ; preds = %originalBBpart296, %originalBBpart292
  %258 = phi i1 [ true, %originalBBpart292 ], [ %248, %originalBBpart296 ]
  %259 = load i32, i32* @x.51
  %260 = load i32, i32* @y.52
  %261 = sub i32 %259, 1
  %262 = mul i32 %259, %261
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %264, %265
  br i1 %266, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %257, %originalBB98alteredBB
  %267 = xor i1 %258, true, !dbg !3527
  store i1 %267, i1* %10, align 1, !dbg !3528
  %268 = load i32, i32* @x.51
  %269 = load i32, i32* @y.52
  %270 = sub i32 %268, 1
  %271 = mul i32 %268, %270
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %273, %274
  br i1 %275, label %originalBBpart2110, label %originalBB98alteredBB

originalBBpart2110:                               ; preds = %originalBB98
  br label %276, !dbg !3528

276:                                              ; preds = %originalBBpart2110, %25
  %277 = load i32, i32* @x.51
  %278 = load i32, i32* @y.52
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBB112, label %originalBB112alteredBB

originalBB112:                                    ; preds = %276, %originalBB112alteredBB
  %285 = load i1, i1* %10, align 1, !dbg !3529
  %286 = load i32, i32* @x.51
  %287 = load i32, i32* @y.52
  %288 = sub i32 %286, 1
  %289 = mul i32 %286, %288
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %291, %292
  br i1 %293, label %originalBBpart2114, label %originalBB112alteredBB

originalBBpart2114:                               ; preds = %originalBB112
  ret i1 %285, !dbg !3529

originalBBalteredBB:                              ; preds = %originalBB, %1
  %294 = alloca i1, align 1
  %295 = alloca i32, align 4
  %296 = alloca [257 x i8], align 16
  store i32 %0, i32* %295, align 4
  call void @llvm.dbg.declare(metadata i32* %295, metadata !3530, metadata !DIExpression()), !dbg !3511
  call void @llvm.dbg.declare(metadata [257 x i8]* %296, metadata !3533, metadata !DIExpression()), !dbg !3513
  %297 = load i32, i32* %295, align 4, !dbg !3514
  %298 = getelementptr inbounds [257 x i8], [257 x i8]* %296, i64 0, i64 0, !dbg !3516
  %299 = call i32 @setlocale_null_r(i32 %297, i8* %298, i64 257), !dbg !3517
  %300 = icmp ne i32 %299, 0, !dbg !3517
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %301 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !3520
  %302 = call i32 @strcmp(i8* %301, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i64 0, i64 0)) #13, !dbg !3521
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %45
  %collatzVaralteredBB = alloca i32
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %62
  %303 = load i32, i32* @inVal0
  %304 = icmp sgt i32 %303, 1
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %81
  store i32 3, i32* %collatzVar
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %98
  %305 = load i8**, i8*** @inVal1
  %306 = getelementptr inbounds i8*, i8** %305, i64 1
  %307 = load i8*, i8** %306
  %308 = add i32 0, -3
  %controlealteredBB = call i32 @controle(i8* %307, i32 %308)
  store i32 %controlealteredBB, i32* %collatzVar
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %119
  %309 = load i32, i32* %collatzVar
  %310 = icmp sgt i32 %309, 1
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %138
  %311 = load i32, i32* %collatzVar
  %_ = sub i32 0, %311
  %gen = add i32 %_, 2
  %_27 = shl i32 %311, 2
  %312 = srem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  br label %originalBB26

originalBB31alteredBB:                            ; preds = %originalBB31, %158
  %314 = load i32, i32* %collatzVar
  %_32 = sub i32 0, %314
  %gen33 = add i32 %_32, 2
  %_34 = sub i32 %314, 2
  %gen35 = mul i32 %_34, 2
  %_36 = sub i32 0, %314
  %gen37 = add i32 %_36, 2
  %_38 = sub i32 0, %314
  %gen39 = add i32 %_38, 2
  %_40 = sub i32 %314, 2
  %gen41 = mul i32 %_40, 2
  %315 = sdiv i32 %314, 2
  store i32 %315, i32* %collatzVar
  br label %originalBB31

originalBB45alteredBB:                            ; preds = %originalBB45, %177
  %316 = load i32, i32* %collatzVar
  %_46 = shl i32 %316, 3
  %_47 = sub i32 0, %316
  %gen48 = add i32 %_47, 3
  %_49 = sub i32 0, %316
  %gen50 = add i32 %_49, 3
  %317 = mul i32 %316, 3
  %_51 = sub i32 %317, 1
  %gen52 = mul i32 %_51, 1
  %_53 = sub i32 %317, 1
  %gen54 = mul i32 %_53, 1
  %_55 = sub i32 0, %317
  %gen56 = add i32 %_55, 1
  %_57 = shl i32 %317, 1
  %318 = add i32 %317, 1
  store i32 %318, i32* %collatzVar
  br label %originalBB45

originalBB61alteredBB:                            ; preds = %originalBB61, %197
  %319 = load i32, i32* %collatzVar
  %_62 = sub i32 0, %36
  %gen63 = add i32 %_62, %319
  %_64 = sub i32 0, %36
  %gen65 = add i32 %_64, %319
  %_66 = shl i32 %36, %319
  %_67 = sub i32 %36, %319
  %gen68 = mul i32 %_67, %319
  %_69 = shl i32 %36, %319
  %_70 = shl i32 %36, %319
  %_71 = sub i32 %36, %319
  %gen72 = mul i32 %_71, %319
  %_73 = sub i32 %36, %319
  %gen74 = mul i32 %_73, %319
  %_75 = sub i32 %36, %319
  %gen76 = mul i32 %_75, %319
  %_77 = shl i32 %36, %319
  %320 = sub i32 %36, %319
  %321 = icmp sgt i32 %320, -2
  br label %originalBB61

originalBB81alteredBB:                            ; preds = %originalBB81, %217
  %322 = load i32, i32* %collatzVar
  %_82 = sub i32 %36, %322
  %gen83 = mul i32 %_82, %322
  %_84 = shl i32 %36, %322
  %_85 = shl i32 %36, %322
  %_86 = shl i32 %36, %322
  %_87 = sub i32 %36, %322
  %gen88 = mul i32 %_87, %322
  %_89 = sub i32 0, %36
  %gen90 = add i32 %_89, %322
  %323 = add i32 %36, %322
  %324 = icmp slt i32 %323, 2
  br label %originalBB81

originalBB94alteredBB:                            ; preds = %originalBB94, %237
  %325 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !3523
  %326 = call i32 @strcmp(i8* %325, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.110, i64 0, i64 0)) #13, !dbg !3524
  %327 = icmp eq i32 %326, 0, !dbg !3525
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %257
  %_99 = shl i1 %258, true
  %_100 = sub i1 false, %258
  %gen101 = add i1 %_100, true
  %_102 = sub i1 false, %258
  %gen103 = add i1 %_102, true
  %_104 = sub i1 %258, true
  %gen105 = mul i1 %_104, true
  %_106 = sub i1 %258, true
  %gen107 = mul i1 %_106, true
  %_108 = shl i1 %258, true
  %328 = xor i1 %258, true, !dbg !3527
  store i1 %328, i1* %10, align 1, !dbg !3528
  br label %originalBB98

originalBB112alteredBB:                           ; preds = %originalBB112, %276
  %329 = load i1, i1* %10, align 1, !dbg !3529
  br label %originalBB112
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @imaxtostr(i64, i8*) #4 !dbg !3534 {
  %3 = load i32, i32* @x.53
  %4 = load i32, i32* @y.54
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  store i64 %0, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !3538, metadata !DIExpression()), !dbg !3539
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !3540, metadata !DIExpression()), !dbg !3541
  call void @llvm.dbg.declare(metadata i8** %13, metadata !3542, metadata !DIExpression()), !dbg !3543
  %14 = load i8*, i8** %12, align 8, !dbg !3544
  %15 = getelementptr inbounds i8, i8* %14, i64 20, !dbg !3545
  store i8* %15, i8** %13, align 8, !dbg !3543
  %16 = load i8*, i8** %13, align 8, !dbg !3546
  store i8 0, i8* %16, align 1, !dbg !3547
  %17 = load i64, i64* %11, align 8, !dbg !3548
  %18 = icmp slt i64 %17, 0, !dbg !3550
  %19 = load i32, i32* @x.53
  %20 = load i32, i32* @y.54
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %90, !dbg !3551

27:                                               ; preds = %originalBBpart2
  %28 = load i32, i32* @x.53
  %29 = load i32, i32* @y.54
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load i32, i32* @x.53
  %37 = load i32, i32* @y.54
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %44, !dbg !3552

44:                                               ; preds = %originalBBpart210, %originalBBpart24
  %45 = load i64, i64* %11, align 8, !dbg !3554
  %46 = srem i64 %45, 10, !dbg !3555
  %47 = sub nsw i64 48, %46, !dbg !3556
  %48 = trunc i64 %47 to i8, !dbg !3557
  %49 = load i8*, i8** %13, align 8, !dbg !3558
  %50 = getelementptr inbounds i8, i8* %49, i32 -1, !dbg !3558
  store i8* %50, i8** %13, align 8, !dbg !3558
  store i8 %48, i8* %50, align 1, !dbg !3559
  br label %51, !dbg !3560

51:                                               ; preds = %44
  %52 = load i32, i32* @x.53
  %53 = load i32, i32* @y.54
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %51, %originalBB6alteredBB
  %60 = load i64, i64* %11, align 8, !dbg !3561
  %61 = sdiv i64 %60, 10, !dbg !3561
  store i64 %61, i64* %11, align 8, !dbg !3561
  %62 = icmp ne i64 %61, 0, !dbg !3562
  %63 = load i32, i32* @x.53
  %64 = load i32, i32* @y.54
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart210, label %originalBB6alteredBB

originalBBpart210:                                ; preds = %originalBB6
  br i1 %62, label %44, label %71, !dbg !3560, !llvm.loop !3563

71:                                               ; preds = %originalBBpart210
  %72 = load i32, i32* @x.53
  %73 = load i32, i32* @y.54
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB12, label %originalBB12alteredBB

originalBB12:                                     ; preds = %71, %originalBB12alteredBB
  %80 = load i8*, i8** %13, align 8, !dbg !3565
  %81 = getelementptr inbounds i8, i8* %80, i32 -1, !dbg !3565
  store i8* %81, i8** %13, align 8, !dbg !3565
  store i8 45, i8* %81, align 1, !dbg !3566
  %82 = load i32, i32* @x.53
  %83 = load i32, i32* @y.54
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart214, label %originalBB12alteredBB

originalBBpart214:                                ; preds = %originalBB12
  br label %151, !dbg !3567

90:                                               ; preds = %originalBBpart2
  %91 = load i32, i32* @x.53
  %92 = load i32, i32* @y.54
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %90, %originalBB16alteredBB
  %99 = load i32, i32* @x.53
  %100 = load i32, i32* @y.54
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  br label %107, !dbg !3568

107:                                              ; preds = %originalBBpart247, %originalBBpart218
  %108 = load i32, i32* @x.53
  %109 = load i32, i32* @y.54
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %107, %originalBB20alteredBB
  %116 = load i64, i64* %11, align 8, !dbg !3570
  %117 = srem i64 %116, 10, !dbg !3571
  %118 = add nsw i64 48, %117, !dbg !3572
  %119 = trunc i64 %118 to i8, !dbg !3573
  %120 = load i8*, i8** %13, align 8, !dbg !3574
  %121 = getelementptr inbounds i8, i8* %120, i32 -1, !dbg !3574
  store i8* %121, i8** %13, align 8, !dbg !3574
  store i8 %119, i8* %121, align 1, !dbg !3575
  %122 = load i32, i32* @x.53
  %123 = load i32, i32* @y.54
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBBpart237, label %originalBB20alteredBB

originalBBpart237:                                ; preds = %originalBB20
  br label %130, !dbg !3576

130:                                              ; preds = %originalBBpart237
  %131 = load i32, i32* @x.53
  %132 = load i32, i32* @y.54
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %130, %originalBB39alteredBB
  %139 = load i64, i64* %11, align 8, !dbg !3577
  %140 = sdiv i64 %139, 10, !dbg !3577
  store i64 %140, i64* %11, align 8, !dbg !3577
  %141 = icmp ne i64 %140, 0, !dbg !3578
  %142 = load i32, i32* @x.53
  %143 = load i32, i32* @y.54
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBBpart247, label %originalBB39alteredBB

originalBBpart247:                                ; preds = %originalBB39
  br i1 %141, label %107, label %150, !dbg !3576, !llvm.loop !3579

150:                                              ; preds = %originalBBpart247
  br label %151

151:                                              ; preds = %150, %originalBBpart214
  %152 = load i8*, i8** %13, align 8, !dbg !3581
  ret i8* %152, !dbg !3582

originalBBalteredBB:                              ; preds = %originalBB, %2
  %153 = alloca i64, align 8
  %154 = alloca i8*, align 8
  %155 = alloca i8*, align 8
  store i64 %0, i64* %153, align 8
  call void @llvm.dbg.declare(metadata i64* %153, metadata !3583, metadata !DIExpression()), !dbg !3539
  store i8* %1, i8** %154, align 8
  call void @llvm.dbg.declare(metadata i8** %154, metadata !3586, metadata !DIExpression()), !dbg !3541
  call void @llvm.dbg.declare(metadata i8** %155, metadata !3587, metadata !DIExpression()), !dbg !3543
  %156 = load i8*, i8** %154, align 8, !dbg !3544
  %157 = getelementptr inbounds i8, i8* %156, i64 20, !dbg !3545
  store i8* %157, i8** %155, align 8, !dbg !3543
  %158 = load i8*, i8** %155, align 8, !dbg !3546
  store i8 0, i8* %158, align 1, !dbg !3547
  %159 = load i64, i64* %153, align 8, !dbg !3548
  %160 = icmp slt i64 %159, 0, !dbg !3550
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %51
  %161 = load i64, i64* %11, align 8, !dbg !3561
  %_ = shl i64 %161, 10
  %_7 = shl i64 %161, 10
  %_8 = shl i64 %161, 10
  %162 = sdiv i64 %161, 10, !dbg !3561
  store i64 %162, i64* %11, align 8, !dbg !3561
  %163 = icmp ne i64 %162, 0, !dbg !3562
  br label %originalBB6

originalBB12alteredBB:                            ; preds = %originalBB12, %71
  %164 = load i8*, i8** %13, align 8, !dbg !3565
  %165 = getelementptr inbounds i8, i8* %164, i32 -1, !dbg !3565
  store i8* %165, i8** %13, align 8, !dbg !3565
  store i8 45, i8* %165, align 1, !dbg !3566
  br label %originalBB12

originalBB16alteredBB:                            ; preds = %originalBB16, %90
  br label %originalBB16

originalBB20alteredBB:                            ; preds = %originalBB20, %107
  %166 = load i64, i64* %11, align 8, !dbg !3570
  %_21 = sub i64 %166, 10
  %gen = mul i64 %_21, 10
  %_22 = sub i64 %166, 10
  %gen23 = mul i64 %_22, 10
  %_24 = sub i64 %166, 10
  %gen25 = mul i64 %_24, 10
  %_26 = sub i64 %166, 10
  %gen27 = mul i64 %_26, 10
  %_28 = sub i64 0, %166
  %gen29 = add i64 %_28, 10
  %167 = srem i64 %166, 10, !dbg !3571
  %_30 = sub i64 48, %167
  %gen31 = mul i64 %_30, %167
  %_32 = sub i64 0, 48
  %gen33 = add i64 %_32, %167
  %_34 = sub i64 48, %167
  %gen35 = mul i64 %_34, %167
  %168 = add nsw i64 48, %167, !dbg !3572
  %169 = trunc i64 %168 to i8, !dbg !3573
  %170 = load i8*, i8** %13, align 8, !dbg !3574
  %171 = getelementptr inbounds i8, i8* %170, i32 -1, !dbg !3574
  store i8* %171, i8** %13, align 8, !dbg !3574
  store i8 %169, i8* %171, align 1, !dbg !3575
  br label %originalBB20

originalBB39alteredBB:                            ; preds = %originalBB39, %130
  %172 = load i64, i64* %11, align 8, !dbg !3577
  %_40 = sub i64 %172, 10
  %gen41 = mul i64 %_40, 10
  %_42 = shl i64 %172, 10
  %_43 = shl i64 %172, 10
  %_44 = sub i64 %172, 10
  %gen45 = mul i64 %_44, 10
  %173 = sdiv i64 %172, 10, !dbg !3577
  store i64 %173, i64* %11, align 8, !dbg !3577
  %174 = icmp ne i64 %173, 0, !dbg !3578
  br label %originalBB39
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_program_name(i8*) #4 !dbg !3588 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !3589, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3591, metadata !DIExpression()), !dbg !3592
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3593, metadata !DIExpression()), !dbg !3594
  %5 = load i8*, i8** %2, align 8, !dbg !3595
  %6 = icmp eq i8* %5, null, !dbg !3597
  br i1 %6, label %7, label %26, !dbg !3598

7:                                                ; preds = %1
  %8 = load i32, i32* @x.55
  %9 = load i32, i32* @y.56
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %7, %originalBBalteredBB
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3599
  %17 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.115, i64 0, i64 0), %struct._IO_FILE* %16), !dbg !3601
  call void @abort() #12, !dbg !3602
  %18 = load i32, i32* @x.55
  %19 = load i32, i32* @y.56
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable, !dbg !3602

26:                                               ; preds = %1
  %27 = load i32, i32* @x.55
  %28 = load i32, i32* @y.56
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = load i8*, i8** %2, align 8, !dbg !3603
  %36 = call i8* @strrchr(i8* %35, i32 47) #13, !dbg !3604
  store i8* %36, i8** %3, align 8, !dbg !3605
  %37 = load i8*, i8** %3, align 8, !dbg !3606
  %38 = icmp ne i8* %37, null, !dbg !3607
  %39 = load i32, i32* @x.55
  %40 = load i32, i32* @y.56
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %38, label %47, label %50, !dbg !3606

47:                                               ; preds = %originalBBpart24
  %48 = load i8*, i8** %3, align 8, !dbg !3608
  %49 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !3609
  br label %68, !dbg !3606

50:                                               ; preds = %originalBBpart24
  %51 = load i32, i32* @x.55
  %52 = load i32, i32* @y.56
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %50, %originalBB6alteredBB
  %59 = load i8*, i8** %2, align 8, !dbg !3610
  %60 = load i32, i32* @x.55
  %61 = load i32, i32* @y.56
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %68, !dbg !3606

68:                                               ; preds = %originalBBpart28, %47
  %69 = phi i8* [ %49, %47 ], [ %59, %originalBBpart28 ], !dbg !3606
  %70 = load i32, i32* @x.55
  %71 = load i32, i32* @y.56
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %68, %originalBB10alteredBB
  store i8* %69, i8** %4, align 8, !dbg !3611
  %78 = load i8*, i8** %4, align 8, !dbg !3612
  %79 = load i8*, i8** %2, align 8, !dbg !3614
  %80 = ptrtoint i8* %78 to i64, !dbg !3615
  %81 = ptrtoint i8* %79 to i64, !dbg !3615
  %82 = sub i64 %80, %81, !dbg !3615
  %83 = icmp sge i64 %82, 7, !dbg !3616
  %84 = load i32, i32* @x.55
  %85 = load i32, i32* @y.56
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart214, label %originalBB10alteredBB

originalBBpart214:                                ; preds = %originalBB10
  br i1 %83, label %92, label %171, !dbg !3617

92:                                               ; preds = %originalBBpart214
  %93 = load i32, i32* @x.55
  %94 = load i32, i32* @y.56
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %92, %originalBB16alteredBB
  %101 = load i8*, i8** %4, align 8, !dbg !3618
  %102 = getelementptr inbounds i8, i8* %101, i64 -7, !dbg !3619
  %103 = call i32 @strncmp(i8* %102, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.116, i64 0, i64 0), i64 7) #13, !dbg !3620
  %104 = icmp eq i32 %103, 0, !dbg !3621
  %105 = load i32, i32* @x.55
  %106 = load i32, i32* @y.56
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  br i1 %104, label %113, label %171, !dbg !3622

113:                                              ; preds = %originalBBpart218
  %114 = load i32, i32* @x.55
  %115 = load i32, i32* @y.56
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %113, %originalBB20alteredBB
  %122 = load i8*, i8** %4, align 8, !dbg !3623
  store i8* %122, i8** %2, align 8, !dbg !3625
  %123 = load i8*, i8** %4, align 8, !dbg !3626
  %124 = call i32 @strncmp(i8* %123, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.117, i64 0, i64 0), i64 3) #13, !dbg !3628
  %125 = icmp eq i32 %124, 0, !dbg !3629
  %126 = load i32, i32* @x.55
  %127 = load i32, i32* @y.56
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart222, label %originalBB20alteredBB

originalBBpart222:                                ; preds = %originalBB20
  br i1 %125, label %134, label %154, !dbg !3630

134:                                              ; preds = %originalBBpart222
  %135 = load i32, i32* @x.55
  %136 = load i32, i32* @y.56
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %134, %originalBB24alteredBB
  %143 = load i8*, i8** %4, align 8, !dbg !3631
  %144 = getelementptr inbounds i8, i8* %143, i64 3, !dbg !3633
  store i8* %144, i8** %2, align 8, !dbg !3634
  %145 = load i8*, i8** %2, align 8, !dbg !3635
  store i8* %145, i8** @program_invocation_short_name, align 8, !dbg !3636
  %146 = load i32, i32* @x.55
  %147 = load i32, i32* @y.56
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBBpart227, label %originalBB24alteredBB

originalBBpart227:                                ; preds = %originalBB24
  br label %154, !dbg !3637

154:                                              ; preds = %originalBBpart227, %originalBBpart222
  %155 = load i32, i32* @x.55
  %156 = load i32, i32* @y.56
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %154, %originalBB29alteredBB
  %163 = load i32, i32* @x.55
  %164 = load i32, i32* @y.56
  %165 = sub i32 %163, 1
  %166 = mul i32 %163, %165
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %168, %169
  br i1 %170, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br label %171, !dbg !3638

171:                                              ; preds = %originalBBpart231, %originalBBpart218, %originalBBpart214
  %172 = load i32, i32* @x.55
  %173 = load i32, i32* @y.56
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %171, %originalBB33alteredBB
  %180 = load i8*, i8** %2, align 8, !dbg !3639
  store i8* %180, i8** @program_name, align 8, !dbg !3640
  %181 = load i8*, i8** %2, align 8, !dbg !3641
  store i8* %181, i8** @program_invocation_name, align 8, !dbg !3642
  %182 = load i32, i32* @x.55
  %183 = load i32, i32* @y.56
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  ret void, !dbg !3643

originalBBalteredBB:                              ; preds = %originalBB, %7
  %190 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3599
  %191 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.115, i64 0, i64 0), %struct._IO_FILE* %190), !dbg !3601
  call void @abort() #12, !dbg !3602
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %192 = load i8*, i8** %2, align 8, !dbg !3603
  %193 = call i8* @strrchr(i8* %192, i32 47) #13, !dbg !3604
  store i8* %193, i8** %3, align 8, !dbg !3605
  %194 = load i8*, i8** %3, align 8, !dbg !3606
  %195 = icmp ne i8* %194, null, !dbg !3607
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %50
  %196 = load i8*, i8** %2, align 8, !dbg !3610
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %68
  store i8* %69, i8** %4, align 8, !dbg !3611
  %197 = load i8*, i8** %4, align 8, !dbg !3612
  %198 = load i8*, i8** %2, align 8, !dbg !3614
  %199 = ptrtoint i8* %197 to i64, !dbg !3615
  %200 = ptrtoint i8* %198 to i64, !dbg !3615
  %_ = sub i64 %199, %200
  %gen = mul i64 %_, %200
  %_11 = sub i64 %199, %200
  %gen12 = mul i64 %_11, %200
  %201 = sub i64 %199, %200, !dbg !3615
  %202 = icmp sge i64 %201, 7, !dbg !3616
  br label %originalBB10

originalBB16alteredBB:                            ; preds = %originalBB16, %92
  %203 = load i8*, i8** %4, align 8, !dbg !3618
  %204 = getelementptr inbounds i8, i8* %203, i64 -7, !dbg !3619
  %205 = call i32 @strncmp(i8* %204, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.116, i64 0, i64 0), i64 7) #13, !dbg !3620
  %206 = icmp eq i32 %205, 0, !dbg !3621
  br label %originalBB16

originalBB20alteredBB:                            ; preds = %originalBB20, %113
  %207 = load i8*, i8** %4, align 8, !dbg !3623
  store i8* %207, i8** %2, align 8, !dbg !3625
  %208 = load i8*, i8** %4, align 8, !dbg !3626
  %209 = call i32 @strncmp(i8* %208, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.117, i64 0, i64 0), i64 3) #13, !dbg !3628
  %210 = icmp eq i32 %209, 0, !dbg !3629
  br label %originalBB20

originalBB24alteredBB:                            ; preds = %originalBB24, %134
  %211 = load i8*, i8** %4, align 8, !dbg !3631
  %212 = getelementptr inbounds i8, i8* %211, i64 3, !dbg !3633
  store i8* %212, i8** %2, align 8, !dbg !3634
  %213 = load i8*, i8** %2, align 8, !dbg !3635
  store i8* %213, i8** @program_invocation_short_name, align 8, !dbg !3636
  br label %originalBB24

originalBB29alteredBB:                            ; preds = %originalBB29, %154
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %171
  %214 = load i8*, i8** %2, align 8, !dbg !3639
  store i8* %214, i8** @program_name, align 8, !dbg !3640
  %215 = load i8*, i8** %2, align 8, !dbg !3641
  store i8* %215, i8** @program_invocation_name, align 8, !dbg !3642
  br label %originalBB33
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #5

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_char_quoting(%struct.quoting_options*, i8 signext, i32) #4 !dbg !3644 {
  %4 = load i32, i32* @x.57
  %5 = load i32, i32* @y.58
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %struct.quoting_options*, align 8
  %13 = alloca i8, align 1
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  %16 = alloca i32*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %12, metadata !3648, metadata !DIExpression()), !dbg !3649
  store i8 %1, i8* %13, align 1
  call void @llvm.dbg.declare(metadata i8* %13, metadata !3650, metadata !DIExpression()), !dbg !3651
  store i32 %2, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !3652, metadata !DIExpression()), !dbg !3653
  call void @llvm.dbg.declare(metadata i8* %15, metadata !3654, metadata !DIExpression()), !dbg !3655
  %19 = load i8, i8* %13, align 1, !dbg !3656
  store i8 %19, i8* %15, align 1, !dbg !3655
  call void @llvm.dbg.declare(metadata i32** %16, metadata !3657, metadata !DIExpression()), !dbg !3659
  %20 = load %struct.quoting_options*, %struct.quoting_options** %12, align 8, !dbg !3660
  %21 = icmp ne %struct.quoting_options* %20, null, !dbg !3660
  %22 = load i32, i32* @x.57
  %23 = load i32, i32* @y.58
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %48, !dbg !3660

30:                                               ; preds = %originalBBpart2
  %31 = load i32, i32* @x.57
  %32 = load i32, i32* @y.58
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load %struct.quoting_options*, %struct.quoting_options** %12, align 8, !dbg !3661
  %40 = load i32, i32* @x.57
  %41 = load i32, i32* @y.58
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %49, !dbg !3660

48:                                               ; preds = %originalBBpart2
  br label %49, !dbg !3660

49:                                               ; preds = %48, %originalBBpart24
  %50 = phi %struct.quoting_options* [ %39, %originalBBpart24 ], [ @default_quoting_options, %48 ], !dbg !3660
  %51 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %50, i32 0, i32 2, !dbg !3662
  %52 = getelementptr inbounds [8 x i32], [8 x i32]* %51, i64 0, i64 0, !dbg !3663
  %53 = load i8, i8* %15, align 1, !dbg !3664
  %54 = zext i8 %53 to i64, !dbg !3664
  %55 = udiv i64 %54, 32, !dbg !3665
  %56 = getelementptr inbounds i32, i32* %52, i64 %55, !dbg !3666
  store i32* %56, i32** %16, align 8, !dbg !3659
  call void @llvm.dbg.declare(metadata i32* %17, metadata !3667, metadata !DIExpression()), !dbg !3668
  %57 = load i8, i8* %15, align 1, !dbg !3669
  %58 = zext i8 %57 to i64, !dbg !3669
  %59 = urem i64 %58, 32, !dbg !3670
  %60 = trunc i64 %59 to i32, !dbg !3669
  store i32 %60, i32* %17, align 4, !dbg !3668
  call void @llvm.dbg.declare(metadata i32* %18, metadata !3671, metadata !DIExpression()), !dbg !3672
  %61 = load i32*, i32** %16, align 8, !dbg !3673
  %62 = load i32, i32* %61, align 4, !dbg !3674
  %63 = load i32, i32* %17, align 4, !dbg !3675
  %64 = lshr i32 %62, %63, !dbg !3676
  %65 = and i32 %64, 1, !dbg !3677
  store i32 %65, i32* %18, align 4, !dbg !3672
  %66 = load i32, i32* %14, align 4, !dbg !3678
  %67 = and i32 %66, 1, !dbg !3679
  %68 = load i32, i32* %18, align 4, !dbg !3680
  %69 = xor i32 %67, %68, !dbg !3681
  %70 = load i32, i32* %17, align 4, !dbg !3682
  %71 = shl i32 %69, %70, !dbg !3683
  %72 = load i32*, i32** %16, align 8, !dbg !3684
  %73 = load i32, i32* %72, align 4, !dbg !3685
  %74 = xor i32 %73, %71, !dbg !3685
  store i32 %74, i32* %72, align 4, !dbg !3685
  %75 = load i32, i32* %18, align 4, !dbg !3686
  ret i32 %75, !dbg !3687

originalBBalteredBB:                              ; preds = %originalBB, %3
  %76 = alloca %struct.quoting_options*, align 8
  %77 = alloca i8, align 1
  %78 = alloca i32, align 4
  %79 = alloca i8, align 1
  %80 = alloca i32*, align 8
  %81 = alloca i32, align 4
  %82 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %76, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %76, metadata !3688, metadata !DIExpression()), !dbg !3649
  store i8 %1, i8* %77, align 1
  call void @llvm.dbg.declare(metadata i8* %77, metadata !3723, metadata !DIExpression()), !dbg !3651
  store i32 %2, i32* %78, align 4
  call void @llvm.dbg.declare(metadata i32* %78, metadata !3724, metadata !DIExpression()), !dbg !3653
  call void @llvm.dbg.declare(metadata i8* %79, metadata !3725, metadata !DIExpression()), !dbg !3655
  %83 = load i8, i8* %77, align 1, !dbg !3656
  store i8 %83, i8* %79, align 1, !dbg !3655
  call void @llvm.dbg.declare(metadata i32** %80, metadata !3726, metadata !DIExpression()), !dbg !3659
  %84 = load %struct.quoting_options*, %struct.quoting_options** %76, align 8, !dbg !3660
  %85 = icmp ne %struct.quoting_options* %84, null, !dbg !3660
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %86 = load %struct.quoting_options*, %struct.quoting_options** %12, align 8, !dbg !3661
  br label %originalBB1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char_mem(i8*, i64, i8 signext) #4 !dbg !3727 {
  %4 = load i32, i32* @x.59
  %5 = load i32, i32* @y.60
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8, align 1
  %15 = alloca %struct.quoting_options, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !3730, metadata !DIExpression()), !dbg !3731
  store i64 %1, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !3732, metadata !DIExpression()), !dbg !3733
  store i8 %2, i8* %14, align 1
  call void @llvm.dbg.declare(metadata i8* %14, metadata !3734, metadata !DIExpression()), !dbg !3735
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %15, metadata !3736, metadata !DIExpression()), !dbg !3737
  %16 = bitcast %struct.quoting_options* %15 to i8*, !dbg !3738
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !3738
  %17 = load i8, i8* %14, align 1, !dbg !3739
  %18 = call i32 @set_char_quoting(%struct.quoting_options* %15, i8 signext %17, i32 1), !dbg !3740
  %19 = load i8*, i8** %12, align 8, !dbg !3741
  %20 = load i64, i64* %13, align 8, !dbg !3742
  %21 = call i8* @quotearg_n_options(i32 0, i8* %19, i64 %20, %struct.quoting_options* %15), !dbg !3743
  %22 = load i32, i32* @x.59
  %23 = load i32, i32* @y.60
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %21, !dbg !3744

originalBBalteredBB:                              ; preds = %originalBB, %3
  %30 = alloca i8*, align 8
  %31 = alloca i64, align 8
  %32 = alloca i8, align 1
  %33 = alloca %struct.quoting_options, align 8
  store i8* %0, i8** %30, align 8
  call void @llvm.dbg.declare(metadata i8** %30, metadata !3745, metadata !DIExpression()), !dbg !3731
  store i64 %1, i64* %31, align 8
  call void @llvm.dbg.declare(metadata i64* %31, metadata !3777, metadata !DIExpression()), !dbg !3733
  store i8 %2, i8* %32, align 1
  call void @llvm.dbg.declare(metadata i8* %32, metadata !3778, metadata !DIExpression()), !dbg !3735
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %33, metadata !3779, metadata !DIExpression()), !dbg !3737
  %34 = bitcast %struct.quoting_options* %33 to i8*, !dbg !3738
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !3738
  %35 = load i8, i8* %32, align 1, !dbg !3739
  %36 = call i32 @set_char_quoting(%struct.quoting_options* %33, i8 signext %35, i32 1), !dbg !3740
  %37 = load i8*, i8** %30, align 8, !dbg !3741
  %38 = load i64, i64* %31, align 8, !dbg !3742
  %39 = call i8* @quotearg_n_options(i32 0, i8* %37, i64 %38, %struct.quoting_options* %33), !dbg !3743
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32, i8*, i64, %struct.quoting_options*) #4 !dbg !3780 {
  %5 = load i32, i32* @x.61
  %6 = load i32, i32* @y.62
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca %struct.quoting_options*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct.slotvec*, align 8
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i64, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i32, align 4
  %24 = alloca i64, align 8
  store i32 %0, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !3785, metadata !DIExpression()), !dbg !3786
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !3787, metadata !DIExpression()), !dbg !3788
  store i64 %2, i64* %15, align 8
  call void @llvm.dbg.declare(metadata i64* %15, metadata !3789, metadata !DIExpression()), !dbg !3790
  store %struct.quoting_options* %3, %struct.quoting_options** %16, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %16, metadata !3791, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.declare(metadata i32* %17, metadata !3793, metadata !DIExpression()), !dbg !3794
  %25 = call i32* @__errno_location() #15, !dbg !3795
  %26 = load i32, i32* %25, align 4, !dbg !3795
  store i32 %26, i32* %17, align 4, !dbg !3794
  call void @llvm.dbg.declare(metadata %struct.slotvec** %18, metadata !3796, metadata !DIExpression()), !dbg !3797
  %27 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !3798
  store %struct.slotvec* %27, %struct.slotvec** %18, align 8, !dbg !3797
  %28 = load i32, i32* %13, align 4, !dbg !3799
  %29 = icmp slt i32 %28, 0, !dbg !3801
  %30 = load i32, i32* @x.61
  %31 = load i32, i32* @y.62
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %29, label %38, label %55, !dbg !3802

38:                                               ; preds = %originalBBpart2
  %39 = load i32, i32* @x.61
  %40 = load i32, i32* @y.62
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %38, %originalBB1alteredBB
  call void @abort() #12, !dbg !3803
  %47 = load i32, i32* @x.61
  %48 = load i32, i32* @y.62
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable, !dbg !3803

55:                                               ; preds = %originalBBpart2
  %56 = load i32, i32* @x.61
  %57 = load i32, i32* @y.62
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %55, %originalBB6alteredBB
  %64 = load i32, i32* @nslots, align 4, !dbg !3804
  %65 = load i32, i32* %13, align 4, !dbg !3806
  %66 = icmp sle i32 %64, %65, !dbg !3807
  %67 = load i32, i32* @x.61
  %68 = load i32, i32* @y.62
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %66, label %75, label %213, !dbg !3808

75:                                               ; preds = %originalBBpart28
  call void @llvm.dbg.declare(metadata i8* %19, metadata !3809, metadata !DIExpression()), !dbg !3811
  %76 = load i32, i32* @x.61
  %77 = load i32, i32* @y.62
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %75, %originalBB10alteredBB
  %84 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3812
  %85 = icmp eq %struct.slotvec* %84, @slotvec0, !dbg !3813
  %86 = zext i1 %85 to i8, !dbg !3811
  store i8 %86, i8* %19, align 1, !dbg !3811
  call void @llvm.dbg.declare(metadata i32* %20, metadata !3814, metadata !DIExpression()), !dbg !3815
  store i32 2147483646, i32* %20, align 4, !dbg !3815
  %87 = load i32, i32* %20, align 4, !dbg !3816
  %88 = load i32, i32* %13, align 4, !dbg !3818
  %89 = icmp slt i32 %87, %88, !dbg !3819
  %90 = load i32, i32* @x.61
  %91 = load i32, i32* @y.62
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %89, label %98, label %115, !dbg !3820

98:                                               ; preds = %originalBBpart212
  %99 = load i32, i32* @x.61
  %100 = load i32, i32* @y.62
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %98, %originalBB14alteredBB
  call void @xalloc_die() #14, !dbg !3821
  %107 = load i32, i32* @x.61
  %108 = load i32, i32* @y.62
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  unreachable, !dbg !3821

115:                                              ; preds = %originalBBpart212
  %116 = load i32, i32* @x.61
  %117 = load i32, i32* @y.62
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %115, %originalBB18alteredBB
  %124 = load i8, i8* %19, align 1, !dbg !3822
  %125 = trunc i8 %124 to i1, !dbg !3822
  %126 = load i32, i32* @x.61
  %127 = load i32, i32* @y.62
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %125, label %134, label %151, !dbg !3822

134:                                              ; preds = %originalBBpart220
  %135 = load i32, i32* @x.61
  %136 = load i32, i32* @y.62
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %134, %originalBB22alteredBB
  %143 = load i32, i32* @x.61
  %144 = load i32, i32* @y.62
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %153, !dbg !3822

151:                                              ; preds = %originalBBpart220
  %152 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3823
  br label %153, !dbg !3822

153:                                              ; preds = %151, %originalBBpart224
  %154 = phi %struct.slotvec* [ null, %originalBBpart224 ], [ %152, %151 ], !dbg !3822
  %155 = bitcast %struct.slotvec* %154 to i8*, !dbg !3822
  %156 = load i32, i32* %13, align 4, !dbg !3824
  %157 = add nsw i32 %156, 1, !dbg !3825
  %158 = sext i32 %157 to i64, !dbg !3826
  %159 = mul i64 %158, 16, !dbg !3827
  %160 = call i8* @xrealloc(i8* %155, i64 %159), !dbg !3828
  %161 = bitcast i8* %160 to %struct.slotvec*, !dbg !3828
  store %struct.slotvec* %161, %struct.slotvec** %18, align 8, !dbg !3829
  store %struct.slotvec* %161, %struct.slotvec** @slotvec, align 8, !dbg !3830
  %162 = load i8, i8* %19, align 1, !dbg !3831
  %163 = trunc i8 %162 to i1, !dbg !3831
  br i1 %163, label %164, label %183, !dbg !3833

164:                                              ; preds = %153
  %165 = load i32, i32* @x.61
  %166 = load i32, i32* @y.62
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %164, %originalBB26alteredBB
  %173 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3834
  %174 = bitcast %struct.slotvec* %173 to i8*, !dbg !3835
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %174, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !3835
  %175 = load i32, i32* @x.61
  %176 = load i32, i32* @y.62
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %183, !dbg !3836

183:                                              ; preds = %originalBBpart228, %153
  %184 = load i32, i32* @x.61
  %185 = load i32, i32* @y.62
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %183, %originalBB30alteredBB
  %192 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3837
  %193 = load i32, i32* @nslots, align 4, !dbg !3838
  %194 = sext i32 %193 to i64, !dbg !3839
  %195 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %192, i64 %194, !dbg !3839
  %196 = bitcast %struct.slotvec* %195 to i8*, !dbg !3840
  %197 = load i32, i32* %13, align 4, !dbg !3841
  %198 = add nsw i32 %197, 1, !dbg !3842
  %199 = load i32, i32* @nslots, align 4, !dbg !3843
  %200 = sub nsw i32 %198, %199, !dbg !3844
  %201 = sext i32 %200 to i64, !dbg !3845
  %202 = mul i64 %201, 16, !dbg !3846
  call void @llvm.memset.p0i8.i64(i8* align 8 %196, i8 0, i64 %202, i1 false), !dbg !3840
  %203 = load i32, i32* %13, align 4, !dbg !3847
  %204 = add nsw i32 %203, 1, !dbg !3848
  store i32 %204, i32* @nslots, align 4, !dbg !3849
  %205 = load i32, i32* @x.61
  %206 = load i32, i32* @y.62
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBBpart266, label %originalBB30alteredBB

originalBBpart266:                                ; preds = %originalBB30
  br label %213, !dbg !3850

213:                                              ; preds = %originalBBpart266, %originalBBpart28
  call void @llvm.dbg.declare(metadata i64* %21, metadata !3851, metadata !DIExpression()), !dbg !3853
  %214 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3854
  %215 = load i32, i32* %13, align 4, !dbg !3855
  %216 = sext i32 %215 to i64, !dbg !3854
  %217 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %214, i64 %216, !dbg !3854
  %218 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %217, i32 0, i32 0, !dbg !3856
  %219 = load i64, i64* %218, align 8, !dbg !3856
  store i64 %219, i64* %21, align 8, !dbg !3853
  call void @llvm.dbg.declare(metadata i8** %22, metadata !3857, metadata !DIExpression()), !dbg !3858
  %220 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3859
  %221 = load i32, i32* %13, align 4, !dbg !3860
  %222 = sext i32 %221 to i64, !dbg !3859
  %223 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %220, i64 %222, !dbg !3859
  %224 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %223, i32 0, i32 1, !dbg !3861
  %225 = load i8*, i8** %224, align 8, !dbg !3861
  store i8* %225, i8** %22, align 8, !dbg !3858
  call void @llvm.dbg.declare(metadata i32* %23, metadata !3862, metadata !DIExpression()), !dbg !3863
  %226 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3864
  %227 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %226, i32 0, i32 1, !dbg !3865
  %228 = load i32, i32* %227, align 4, !dbg !3865
  %229 = or i32 %228, 1, !dbg !3866
  store i32 %229, i32* %23, align 4, !dbg !3863
  call void @llvm.dbg.declare(metadata i64* %24, metadata !3867, metadata !DIExpression()), !dbg !3868
  %230 = load i8*, i8** %22, align 8, !dbg !3869
  %231 = load i64, i64* %21, align 8, !dbg !3870
  %232 = load i8*, i8** %14, align 8, !dbg !3871
  %233 = load i64, i64* %15, align 8, !dbg !3872
  %234 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3873
  %235 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %234, i32 0, i32 0, !dbg !3874
  %236 = load i32, i32* %235, align 8, !dbg !3874
  %237 = load i32, i32* %23, align 4, !dbg !3875
  %238 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3876
  %239 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %238, i32 0, i32 2, !dbg !3877
  %240 = getelementptr inbounds [8 x i32], [8 x i32]* %239, i64 0, i64 0, !dbg !3876
  %241 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3878
  %242 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %241, i32 0, i32 3, !dbg !3879
  %243 = load i8*, i8** %242, align 8, !dbg !3879
  %244 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3880
  %245 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %244, i32 0, i32 4, !dbg !3881
  %246 = load i8*, i8** %245, align 8, !dbg !3881
  %247 = call i64 @quotearg_buffer_restyled(i8* %230, i64 %231, i8* %232, i64 %233, i32 %236, i32 %237, i32* %240, i8* %243, i8* %246), !dbg !3882
  store i64 %247, i64* %24, align 8, !dbg !3868
  %248 = load i64, i64* %21, align 8, !dbg !3883
  %249 = load i64, i64* %24, align 8, !dbg !3885
  %250 = icmp ule i64 %248, %249, !dbg !3886
  br i1 %250, label %251, label %305, !dbg !3887

251:                                              ; preds = %213
  %252 = load i64, i64* %24, align 8, !dbg !3888
  %253 = add i64 %252, 1, !dbg !3890
  store i64 %253, i64* %21, align 8, !dbg !3891
  %254 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3892
  %255 = load i32, i32* %13, align 4, !dbg !3893
  %256 = sext i32 %255 to i64, !dbg !3892
  %257 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %254, i64 %256, !dbg !3892
  %258 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %257, i32 0, i32 0, !dbg !3894
  store i64 %253, i64* %258, align 8, !dbg !3895
  %259 = load i8*, i8** %22, align 8, !dbg !3896
  %260 = icmp ne i8* %259, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !3898
  br i1 %260, label %261, label %279, !dbg !3899

261:                                              ; preds = %251
  %262 = load i32, i32* @x.61
  %263 = load i32, i32* @y.62
  %264 = sub i32 %262, 1
  %265 = mul i32 %262, %264
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %267, %268
  br i1 %269, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %261, %originalBB68alteredBB
  %270 = load i8*, i8** %22, align 8, !dbg !3900
  call void @free(i8* %270) #10, !dbg !3901
  %271 = load i32, i32* @x.61
  %272 = load i32, i32* @y.62
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBBpart270, label %originalBB68alteredBB

originalBBpart270:                                ; preds = %originalBB68
  br label %279, !dbg !3901

279:                                              ; preds = %originalBBpart270, %251
  %280 = load i64, i64* %21, align 8, !dbg !3902
  %281 = call noalias i8* @xcharalloc(i64 %280), !dbg !3903
  store i8* %281, i8** %22, align 8, !dbg !3904
  %282 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3905
  %283 = load i32, i32* %13, align 4, !dbg !3906
  %284 = sext i32 %283 to i64, !dbg !3905
  %285 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %282, i64 %284, !dbg !3905
  %286 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %285, i32 0, i32 1, !dbg !3907
  store i8* %281, i8** %286, align 8, !dbg !3908
  %287 = load i8*, i8** %22, align 8, !dbg !3909
  %288 = load i64, i64* %21, align 8, !dbg !3910
  %289 = load i8*, i8** %14, align 8, !dbg !3911
  %290 = load i64, i64* %15, align 8, !dbg !3912
  %291 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3913
  %292 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %291, i32 0, i32 0, !dbg !3914
  %293 = load i32, i32* %292, align 8, !dbg !3914
  %294 = load i32, i32* %23, align 4, !dbg !3915
  %295 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3916
  %296 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %295, i32 0, i32 2, !dbg !3917
  %297 = getelementptr inbounds [8 x i32], [8 x i32]* %296, i64 0, i64 0, !dbg !3916
  %298 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3918
  %299 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %298, i32 0, i32 3, !dbg !3919
  %300 = load i8*, i8** %299, align 8, !dbg !3919
  %301 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3920
  %302 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %301, i32 0, i32 4, !dbg !3921
  %303 = load i8*, i8** %302, align 8, !dbg !3921
  %304 = call i64 @quotearg_buffer_restyled(i8* %287, i64 %288, i8* %289, i64 %290, i32 %293, i32 %294, i32* %297, i8* %300, i8* %303), !dbg !3922
  br label %305, !dbg !3923

305:                                              ; preds = %279, %213
  %306 = load i32, i32* @x.61
  %307 = load i32, i32* @y.62
  %308 = sub i32 %306, 1
  %309 = mul i32 %306, %308
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %311, %312
  br i1 %313, label %originalBB72, label %originalBB72alteredBB

originalBB72:                                     ; preds = %305, %originalBB72alteredBB
  %314 = load i32, i32* %17, align 4, !dbg !3924
  %315 = call i32* @__errno_location() #15, !dbg !3925
  store i32 %314, i32* %315, align 4, !dbg !3926
  %316 = load i8*, i8** %22, align 8, !dbg !3927
  %317 = load i32, i32* @x.61
  %318 = load i32, i32* @y.62
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBBpart274, label %originalBB72alteredBB

originalBBpart274:                                ; preds = %originalBB72
  ret i8* %316, !dbg !3928

originalBBalteredBB:                              ; preds = %originalBB, %4
  %325 = alloca i32, align 4
  %326 = alloca i8*, align 8
  %327 = alloca i64, align 8
  %328 = alloca %struct.quoting_options*, align 8
  %329 = alloca i32, align 4
  %330 = alloca %struct.slotvec*, align 8
  %331 = alloca i8, align 1
  %332 = alloca i32, align 4
  %333 = alloca i64, align 8
  %334 = alloca i8*, align 8
  %335 = alloca i32, align 4
  %336 = alloca i64, align 8
  store i32 %0, i32* %325, align 4
  call void @llvm.dbg.declare(metadata i32* %325, metadata !3929, metadata !DIExpression()), !dbg !3786
  store i8* %1, i8** %326, align 8
  call void @llvm.dbg.declare(metadata i8** %326, metadata !3965, metadata !DIExpression()), !dbg !3788
  store i64 %2, i64* %327, align 8
  call void @llvm.dbg.declare(metadata i64* %327, metadata !3966, metadata !DIExpression()), !dbg !3790
  store %struct.quoting_options* %3, %struct.quoting_options** %328, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %328, metadata !3967, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.declare(metadata i32* %329, metadata !3968, metadata !DIExpression()), !dbg !3794
  %337 = call i32* @__errno_location() #15, !dbg !3795
  %338 = load i32, i32* %337, align 4, !dbg !3795
  store i32 %338, i32* %329, align 4, !dbg !3794
  call void @llvm.dbg.declare(metadata %struct.slotvec** %330, metadata !3969, metadata !DIExpression()), !dbg !3797
  %339 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !3798
  store %struct.slotvec* %339, %struct.slotvec** %330, align 8, !dbg !3797
  %340 = load i32, i32* %325, align 4, !dbg !3799
  %341 = icmp slt i32 %340, 0, !dbg !3801
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %38
  call void @abort() #12, !dbg !3803
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %55
  %342 = load i32, i32* @nslots, align 4, !dbg !3804
  %343 = load i32, i32* %13, align 4, !dbg !3806
  %344 = icmp sle i32 %342, %343, !dbg !3807
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %75
  %345 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3812
  %346 = icmp eq %struct.slotvec* %345, @slotvec0, !dbg !3813
  %347 = zext i1 %346 to i8, !dbg !3811
  store i8 %347, i8* %19, align 1, !dbg !3811
  call void @llvm.dbg.declare(metadata !4, metadata !3970, metadata !DIExpression()), !dbg !3815
  store i32 2147483646, i32* %20, align 4, !dbg !3815
  %348 = load i32, i32* %20, align 4, !dbg !3816
  %349 = load i32, i32* %13, align 4, !dbg !3818
  %350 = icmp slt i32 %348, %349, !dbg !3819
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %98
  call void @xalloc_die() #14, !dbg !3821
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %115
  %351 = load i8, i8* %19, align 1, !dbg !3822
  %352 = trunc i8 %351 to i1, !dbg !3822
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %134
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %164
  %353 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3834
  %354 = bitcast %struct.slotvec* %353 to i8*, !dbg !3835
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %354, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !3835
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %183
  %355 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3837
  %356 = load i32, i32* @nslots, align 4, !dbg !3838
  %357 = sext i32 %356 to i64, !dbg !3839
  %358 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %355, i64 %357, !dbg !3839
  %359 = bitcast %struct.slotvec* %358 to i8*, !dbg !3840
  %360 = load i32, i32* %13, align 4, !dbg !3841
  %_ = sub i32 0, %360
  %gen = add i32 %_, 1
  %_31 = sub i32 %360, 1
  %gen32 = mul i32 %_31, 1
  %_33 = shl i32 %360, 1
  %_34 = sub i32 %360, 1
  %gen35 = mul i32 %_34, 1
  %_36 = shl i32 %360, 1
  %361 = add nsw i32 %360, 1, !dbg !3842
  %362 = load i32, i32* @nslots, align 4, !dbg !3843
  %_37 = shl i32 %361, %362
  %_38 = sub i32 0, %361
  %gen39 = add i32 %_38, %362
  %_40 = shl i32 %361, %362
  %_41 = sub i32 0, %361
  %gen42 = add i32 %_41, %362
  %_43 = sub i32 %361, %362
  %gen44 = mul i32 %_43, %362
  %_45 = sub i32 %361, %362
  %gen46 = mul i32 %_45, %362
  %_47 = sub i32 %361, %362
  %gen48 = mul i32 %_47, %362
  %_49 = shl i32 %361, %362
  %_50 = shl i32 %361, %362
  %363 = sub nsw i32 %361, %362, !dbg !3844
  %364 = sext i32 %363 to i64, !dbg !3845
  %_51 = shl i64 %364, 16
  %_52 = shl i64 %364, 16
  %_53 = shl i64 %364, 16
  %365 = mul i64 %364, 16, !dbg !3846
  call void @llvm.memset.p0i8.i64(i8* align 8 %359, i8 0, i64 %365, i1 false), !dbg !3840
  %366 = load i32, i32* %13, align 4, !dbg !3847
  %_54 = sub i32 %366, 1
  %gen55 = mul i32 %_54, 1
  %_56 = sub i32 0, %366
  %gen57 = add i32 %_56, 1
  %_58 = sub i32 %366, 1
  %gen59 = mul i32 %_58, 1
  %_60 = shl i32 %366, 1
  %_61 = sub i32 0, %366
  %gen62 = add i32 %_61, 1
  %_63 = shl i32 %366, 1
  %_64 = shl i32 %366, 1
  %367 = add nsw i32 %366, 1, !dbg !3848
  store i32 %367, i32* @nslots, align 4, !dbg !3849
  br label %originalBB30

originalBB68alteredBB:                            ; preds = %originalBB68, %261
  %368 = load i8*, i8** %22, align 8, !dbg !3900
  call void @free(i8* %368) #10, !dbg !3901
  br label %originalBB68

originalBB72alteredBB:                            ; preds = %originalBB72, %305
  %369 = load i32, i32* %17, align 4, !dbg !3924
  %370 = call i32* @__errno_location() #15, !dbg !3925
  store i32 %369, i32* %370, align 4, !dbg !3926
  %371 = load i8*, i8** %22, align 8, !dbg !3927
  br label %originalBB72
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8*, i64, i8*, i64, i32, i32, i32*, i8*, i8*) #4 !dbg !4008 {
  %10 = load i32, i32* @x.63
  %11 = load i32, i32* @y.64
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  %18 = alloca i64, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i64, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca i64, align 8
  %31 = alloca i8*, align 8
  %32 = alloca i64, align 8
  %33 = alloca i8, align 1
  %34 = alloca i8, align 1
  %35 = alloca i8, align 1
  %36 = alloca i8, align 1
  %37 = alloca i8, align 1
  %38 = alloca i8, align 1
  %39 = alloca i8, align 1
  %40 = alloca i8, align 1
  %41 = alloca i8, align 1
  %42 = alloca i8, align 1
  %43 = alloca i8, align 1
  %44 = alloca i64, align 8
  %45 = alloca i8, align 1
  %46 = alloca %struct.__mbstate_t, align 4
  %47 = alloca i32, align 4
  %48 = alloca i64, align 8
  %49 = alloca i64, align 8
  %50 = alloca i64, align 8
  store i8* %0, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !4013, metadata !DIExpression()), !dbg !4014
  store i64 %1, i64* %20, align 8
  call void @llvm.dbg.declare(metadata i64* %20, metadata !4015, metadata !DIExpression()), !dbg !4016
  store i8* %2, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !4017, metadata !DIExpression()), !dbg !4018
  store i64 %3, i64* %22, align 8
  call void @llvm.dbg.declare(metadata i64* %22, metadata !4019, metadata !DIExpression()), !dbg !4020
  store i32 %4, i32* %23, align 4
  call void @llvm.dbg.declare(metadata i32* %23, metadata !4021, metadata !DIExpression()), !dbg !4022
  store i32 %5, i32* %24, align 4
  call void @llvm.dbg.declare(metadata i32* %24, metadata !4023, metadata !DIExpression()), !dbg !4024
  store i32* %6, i32** %25, align 8
  call void @llvm.dbg.declare(metadata i32** %25, metadata !4025, metadata !DIExpression()), !dbg !4026
  store i8* %7, i8** %26, align 8
  call void @llvm.dbg.declare(metadata i8** %26, metadata !4027, metadata !DIExpression()), !dbg !4028
  store i8* %8, i8** %27, align 8
  call void @llvm.dbg.declare(metadata i8** %27, metadata !4029, metadata !DIExpression()), !dbg !4030
  call void @llvm.dbg.declare(metadata i64* %28, metadata !4031, metadata !DIExpression()), !dbg !4032
  call void @llvm.dbg.declare(metadata i64* %29, metadata !4033, metadata !DIExpression()), !dbg !4034
  store i64 0, i64* %29, align 8, !dbg !4034
  call void @llvm.dbg.declare(metadata i64* %30, metadata !4035, metadata !DIExpression()), !dbg !4036
  store i64 0, i64* %30, align 8, !dbg !4036
  call void @llvm.dbg.declare(metadata i8** %31, metadata !4037, metadata !DIExpression()), !dbg !4038
  store i8* null, i8** %31, align 8, !dbg !4038
  call void @llvm.dbg.declare(metadata i64* %32, metadata !4039, metadata !DIExpression()), !dbg !4040
  store i64 0, i64* %32, align 8, !dbg !4040
  call void @llvm.dbg.declare(metadata i8* %33, metadata !4041, metadata !DIExpression()), !dbg !4042
  store i8 0, i8* %33, align 1, !dbg !4042
  call void @llvm.dbg.declare(metadata i8* %34, metadata !4043, metadata !DIExpression()), !dbg !4044
  %51 = call i64 @__ctype_get_mb_cur_max() #10, !dbg !4045
  %52 = icmp eq i64 %51, 1, !dbg !4046
  %53 = zext i1 %52 to i8, !dbg !4044
  store i8 %53, i8* %34, align 1, !dbg !4044
  call void @llvm.dbg.declare(metadata i8* %35, metadata !4047, metadata !DIExpression()), !dbg !4048
  %54 = load i32, i32* %24, align 4, !dbg !4049
  %55 = and i32 %54, 2, !dbg !4050
  %56 = icmp ne i32 %55, 0, !dbg !4051
  %57 = zext i1 %56 to i8, !dbg !4048
  store i8 %57, i8* %35, align 1, !dbg !4048
  call void @llvm.dbg.declare(metadata i8* %36, metadata !4052, metadata !DIExpression()), !dbg !4053
  store i8 0, i8* %36, align 1, !dbg !4053
  call void @llvm.dbg.declare(metadata i8* %37, metadata !4054, metadata !DIExpression()), !dbg !4055
  store i8 0, i8* %37, align 1, !dbg !4055
  call void @llvm.dbg.declare(metadata i8* %38, metadata !4056, metadata !DIExpression()), !dbg !4057
  store i8 1, i8* %38, align 1, !dbg !4057
  %58 = load i32, i32* @x.63
  %59 = load i32, i32* @y.64
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %66, !dbg !4058

66:                                               ; preds = %5698, %originalBBpart2
  call void @llvm.dbg.label(metadata !4059), !dbg !4060
  %67 = load i32, i32* @x.63
  %68 = load i32, i32* @y.64
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %66, %originalBB6alteredBB
  %75 = load i32, i32* %23, align 4, !dbg !4061
  %76 = load i32, i32* @x.63
  %77 = load i32, i32* @y.64
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  switch i32 %75, label %632 [
    i32 6, label %84
    i32 5, label %101
    i32 7, label %198
    i32 8, label %215
    i32 9, label %215
    i32 10, label %215
    i32 3, label %431
    i32 1, label %448
    i32 4, label %465
    i32 2, label %502
    i32 0, label %631
  ], !dbg !4062

84:                                               ; preds = %originalBBpart28
  %85 = load i32, i32* @x.63
  %86 = load i32, i32* @y.64
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %84, %originalBB10alteredBB
  store i32 5, i32* %23, align 4, !dbg !4063
  store i8 1, i8* %35, align 1, !dbg !4065
  %93 = load i32, i32* @x.63
  %94 = load i32, i32* @y.64
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %101, !dbg !4066

101:                                              ; preds = %originalBBpart212, %originalBBpart28
  %102 = load i32, i32* @x.63
  %103 = load i32, i32* @y.64
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %101, %originalBB14alteredBB
  %110 = load i8, i8* %35, align 1, !dbg !4067
  %111 = trunc i8 %110 to i1, !dbg !4067
  %112 = load i32, i32* @x.63
  %113 = load i32, i32* @y.64
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %111, label %181, label %120, !dbg !4069

120:                                              ; preds = %originalBBpart216
  %121 = load i32, i32* @x.63
  %122 = load i32, i32* @y.64
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %120, %originalBB18alteredBB
  %129 = load i32, i32* @x.63
  %130 = load i32, i32* @y.64
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %137, !dbg !4070

137:                                              ; preds = %originalBBpart220
  %138 = load i32, i32* @x.63
  %139 = load i32, i32* @y.64
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %137, %originalBB22alteredBB
  %146 = load i64, i64* %29, align 8, !dbg !4071
  %147 = load i64, i64* %20, align 8, !dbg !4071
  %148 = icmp ult i64 %146, %147, !dbg !4071
  %149 = load i32, i32* @x.63
  %150 = load i32, i32* @y.64
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %148, label %157, label %177, !dbg !4074

157:                                              ; preds = %originalBBpart224
  %158 = load i32, i32* @x.63
  %159 = load i32, i32* @y.64
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %157, %originalBB26alteredBB
  %166 = load i8*, i8** %19, align 8, !dbg !4071
  %167 = load i64, i64* %29, align 8, !dbg !4071
  %168 = getelementptr inbounds i8, i8* %166, i64 %167, !dbg !4071
  store i8 34, i8* %168, align 1, !dbg !4071
  %169 = load i32, i32* @x.63
  %170 = load i32, i32* @y.64
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %177, !dbg !4071

177:                                              ; preds = %originalBBpart228, %originalBBpart224
  %178 = load i64, i64* %29, align 8, !dbg !4074
  %179 = add i64 %178, 1, !dbg !4074
  store i64 %179, i64* %29, align 8, !dbg !4074
  br label %180, !dbg !4074

180:                                              ; preds = %177
  br label %181, !dbg !4074

181:                                              ; preds = %180, %originalBBpart216
  %182 = load i32, i32* @x.63
  %183 = load i32, i32* @y.64
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %181, %originalBB30alteredBB
  store i8 1, i8* %33, align 1, !dbg !4075
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.120, i64 0, i64 0), i8** %31, align 8, !dbg !4076
  store i64 1, i64* %32, align 8, !dbg !4077
  %190 = load i32, i32* @x.63
  %191 = load i32, i32* @y.64
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %649, !dbg !4078

198:                                              ; preds = %originalBBpart28
  %199 = load i32, i32* @x.63
  %200 = load i32, i32* @y.64
  %201 = sub i32 %199, 1
  %202 = mul i32 %199, %201
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %204, %205
  br i1 %206, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %198, %originalBB34alteredBB
  store i8 1, i8* %33, align 1, !dbg !4079
  store i8 0, i8* %35, align 1, !dbg !4080
  %207 = load i32, i32* @x.63
  %208 = load i32, i32* @y.64
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %649, !dbg !4081

215:                                              ; preds = %originalBBpart28, %originalBBpart28, %originalBBpart28
  %216 = load i32, i32* @x.63
  %217 = load i32, i32* @y.64
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %215, %originalBB38alteredBB
  %224 = load i32, i32* %23, align 4, !dbg !4082
  %225 = icmp ne i32 %224, 10, !dbg !4085
  %226 = load i32, i32* @x.63
  %227 = load i32, i32* @y.64
  %228 = sub i32 %226, 1
  %229 = mul i32 %226, %228
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %227, 10
  %233 = or i1 %231, %232
  br i1 %233, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %225, label %234, label %255, !dbg !4086

234:                                              ; preds = %originalBBpart240
  %235 = load i32, i32* @x.63
  %236 = load i32, i32* @y.64
  %237 = sub i32 %235, 1
  %238 = mul i32 %235, %237
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %240, %241
  br i1 %242, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %234, %originalBB42alteredBB
  %243 = load i32, i32* %23, align 4, !dbg !4087
  %244 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.121, i64 0, i64 0), i32 %243), !dbg !4089
  store i8* %244, i8** %26, align 8, !dbg !4090
  %245 = load i32, i32* %23, align 4, !dbg !4091
  %246 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.122, i64 0, i64 0), i32 %245), !dbg !4092
  store i8* %246, i8** %27, align 8, !dbg !4093
  %247 = load i32, i32* @x.63
  %248 = load i32, i32* @y.64
  %249 = sub i32 %247, 1
  %250 = mul i32 %247, %249
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %252, %253
  br i1 %254, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %255, !dbg !4094

255:                                              ; preds = %originalBBpart244, %originalBBpart240
  %256 = load i32, i32* @x.63
  %257 = load i32, i32* @y.64
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %255, %originalBB46alteredBB
  %264 = load i8, i8* %35, align 1, !dbg !4095
  %265 = trunc i8 %264 to i1, !dbg !4095
  %266 = load i32, i32* @x.63
  %267 = load i32, i32* @y.64
  %268 = sub i32 %266, 1
  %269 = mul i32 %266, %268
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %271, %272
  br i1 %273, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br i1 %265, label %411, label %274, !dbg !4097

274:                                              ; preds = %originalBBpart248
  %275 = load i32, i32* @x.63
  %276 = load i32, i32* @y.64
  %277 = sub i32 %275, 1
  %278 = mul i32 %275, %277
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %280, %281
  br i1 %282, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %274, %originalBB50alteredBB
  %283 = load i8*, i8** %26, align 8, !dbg !4098
  store i8* %283, i8** %31, align 8, !dbg !4100
  %284 = load i32, i32* @x.63
  %285 = load i32, i32* @y.64
  %286 = sub i32 %284, 1
  %287 = mul i32 %284, %286
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %289, %290
  br i1 %291, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %292, !dbg !4101

292:                                              ; preds = %originalBBpart276, %originalBBpart252
  %293 = load i32, i32* @x.63
  %294 = load i32, i32* @y.64
  %295 = sub i32 %293, 1
  %296 = mul i32 %293, %295
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %298, %299
  br i1 %300, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %292, %originalBB54alteredBB
  %301 = load i8*, i8** %31, align 8, !dbg !4102
  %302 = load i8, i8* %301, align 1, !dbg !4104
  %303 = icmp ne i8 %302, 0, !dbg !4105
  %304 = load i32, i32* @x.63
  %305 = load i32, i32* @y.64
  %306 = sub i32 %304, 1
  %307 = mul i32 %304, %306
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %309, %310
  br i1 %311, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br i1 %303, label %312, label %410, !dbg !4105

312:                                              ; preds = %originalBBpart256
  %313 = load i32, i32* @x.63
  %314 = load i32, i32* @y.64
  %315 = sub i32 %313, 1
  %316 = mul i32 %313, %315
  %317 = urem i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %314, 10
  %320 = or i1 %318, %319
  br i1 %320, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %312, %originalBB58alteredBB
  %321 = load i32, i32* @x.63
  %322 = load i32, i32* @y.64
  %323 = sub i32 %321, 1
  %324 = mul i32 %321, %323
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %322, 10
  %328 = or i1 %326, %327
  br i1 %328, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %329, !dbg !4106

329:                                              ; preds = %originalBBpart260
  %330 = load i32, i32* @x.63
  %331 = load i32, i32* @y.64
  %332 = sub i32 %330, 1
  %333 = mul i32 %330, %332
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %335, %336
  br i1 %337, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %329, %originalBB62alteredBB
  %338 = load i64, i64* %29, align 8, !dbg !4107
  %339 = load i64, i64* %20, align 8, !dbg !4107
  %340 = icmp ult i64 %338, %339, !dbg !4107
  %341 = load i32, i32* @x.63
  %342 = load i32, i32* @y.64
  %343 = sub i32 %341, 1
  %344 = mul i32 %341, %343
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %346, %347
  br i1 %348, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br i1 %340, label %349, label %371, !dbg !4110

349:                                              ; preds = %originalBBpart264
  %350 = load i32, i32* @x.63
  %351 = load i32, i32* @y.64
  %352 = sub i32 %350, 1
  %353 = mul i32 %350, %352
  %354 = urem i32 %353, 2
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %351, 10
  %357 = or i1 %355, %356
  br i1 %357, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %349, %originalBB66alteredBB
  %358 = load i8*, i8** %31, align 8, !dbg !4107
  %359 = load i8, i8* %358, align 1, !dbg !4107
  %360 = load i8*, i8** %19, align 8, !dbg !4107
  %361 = load i64, i64* %29, align 8, !dbg !4107
  %362 = getelementptr inbounds i8, i8* %360, i64 %361, !dbg !4107
  store i8 %359, i8* %362, align 1, !dbg !4107
  %363 = load i32, i32* @x.63
  %364 = load i32, i32* @y.64
  %365 = sub i32 %363, 1
  %366 = mul i32 %363, %365
  %367 = urem i32 %366, 2
  %368 = icmp eq i32 %367, 0
  %369 = icmp slt i32 %364, 10
  %370 = or i1 %368, %369
  br i1 %370, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %371, !dbg !4107

371:                                              ; preds = %originalBBpart268, %originalBBpart264
  %372 = load i64, i64* %29, align 8, !dbg !4110
  %373 = add i64 %372, 1, !dbg !4110
  store i64 %373, i64* %29, align 8, !dbg !4110
  br label %374, !dbg !4110

374:                                              ; preds = %371
  %375 = load i32, i32* @x.63
  %376 = load i32, i32* @y.64
  %377 = sub i32 %375, 1
  %378 = mul i32 %375, %377
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %380, %381
  br i1 %382, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %374, %originalBB70alteredBB
  %383 = load i32, i32* @x.63
  %384 = load i32, i32* @y.64
  %385 = sub i32 %383, 1
  %386 = mul i32 %383, %385
  %387 = urem i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %388, %389
  br i1 %390, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %391, !dbg !4110

391:                                              ; preds = %originalBBpart272
  %392 = load i32, i32* @x.63
  %393 = load i32, i32* @y.64
  %394 = sub i32 %392, 1
  %395 = mul i32 %392, %394
  %396 = urem i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %397, %398
  br i1 %399, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %391, %originalBB74alteredBB
  %400 = load i8*, i8** %31, align 8, !dbg !4111
  %401 = getelementptr inbounds i8, i8* %400, i32 1, !dbg !4111
  store i8* %401, i8** %31, align 8, !dbg !4111
  %402 = load i32, i32* @x.63
  %403 = load i32, i32* @y.64
  %404 = sub i32 %402, 1
  %405 = mul i32 %402, %404
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %407, %408
  br i1 %409, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br label %292, !dbg !4112, !llvm.loop !4113

410:                                              ; preds = %originalBBpart256
  br label %411, !dbg !4114

411:                                              ; preds = %410, %originalBBpart248
  %412 = load i32, i32* @x.63
  %413 = load i32, i32* @y.64
  %414 = sub i32 %412, 1
  %415 = mul i32 %412, %414
  %416 = urem i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %413, 10
  %419 = or i1 %417, %418
  br i1 %419, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %411, %originalBB78alteredBB
  store i8 1, i8* %33, align 1, !dbg !4115
  %420 = load i8*, i8** %27, align 8, !dbg !4116
  store i8* %420, i8** %31, align 8, !dbg !4117
  %421 = load i8*, i8** %31, align 8, !dbg !4118
  %422 = call i64 @strlen(i8* %421) #13, !dbg !4119
  store i64 %422, i64* %32, align 8, !dbg !4120
  %423 = load i32, i32* @x.63
  %424 = load i32, i32* @y.64
  %425 = sub i32 %423, 1
  %426 = mul i32 %423, %425
  %427 = urem i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %424, 10
  %430 = or i1 %428, %429
  br i1 %430, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br label %649, !dbg !4121

431:                                              ; preds = %originalBBpart28
  %432 = load i32, i32* @x.63
  %433 = load i32, i32* @y.64
  %434 = sub i32 %432, 1
  %435 = mul i32 %432, %434
  %436 = urem i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = icmp slt i32 %433, 10
  %439 = or i1 %437, %438
  br i1 %439, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %431, %originalBB82alteredBB
  store i8 1, i8* %33, align 1, !dbg !4122
  %440 = load i32, i32* @x.63
  %441 = load i32, i32* @y.64
  %442 = sub i32 %440, 1
  %443 = mul i32 %440, %442
  %444 = urem i32 %443, 2
  %445 = icmp eq i32 %444, 0
  %446 = icmp slt i32 %441, 10
  %447 = or i1 %445, %446
  br i1 %447, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br label %448, !dbg !4123

448:                                              ; preds = %originalBBpart284, %originalBBpart28
  %449 = load i32, i32* @x.63
  %450 = load i32, i32* @y.64
  %451 = sub i32 %449, 1
  %452 = mul i32 %449, %451
  %453 = urem i32 %452, 2
  %454 = icmp eq i32 %453, 0
  %455 = icmp slt i32 %450, 10
  %456 = or i1 %454, %455
  br i1 %456, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %448, %originalBB86alteredBB
  store i8 1, i8* %35, align 1, !dbg !4124
  %457 = load i32, i32* @x.63
  %458 = load i32, i32* @y.64
  %459 = sub i32 %457, 1
  %460 = mul i32 %457, %459
  %461 = urem i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = icmp slt i32 %458, 10
  %464 = or i1 %462, %463
  br i1 %464, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br label %465, !dbg !4125

465:                                              ; preds = %originalBBpart288, %originalBBpart28
  %466 = load i32, i32* @x.63
  %467 = load i32, i32* @y.64
  %468 = sub i32 %466, 1
  %469 = mul i32 %466, %468
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %467, 10
  %473 = or i1 %471, %472
  br i1 %473, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %465, %originalBB90alteredBB
  %474 = load i8, i8* %35, align 1, !dbg !4126
  %475 = trunc i8 %474 to i1, !dbg !4126
  %476 = load i32, i32* @x.63
  %477 = load i32, i32* @y.64
  %478 = sub i32 %476, 1
  %479 = mul i32 %476, %478
  %480 = urem i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = icmp slt i32 %477, 10
  %483 = or i1 %481, %482
  br i1 %483, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br i1 %475, label %501, label %484, !dbg !4128

484:                                              ; preds = %originalBBpart292
  %485 = load i32, i32* @x.63
  %486 = load i32, i32* @y.64
  %487 = sub i32 %485, 1
  %488 = mul i32 %485, %487
  %489 = urem i32 %488, 2
  %490 = icmp eq i32 %489, 0
  %491 = icmp slt i32 %486, 10
  %492 = or i1 %490, %491
  br i1 %492, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %484, %originalBB94alteredBB
  store i8 1, i8* %33, align 1, !dbg !4129
  %493 = load i32, i32* @x.63
  %494 = load i32, i32* @y.64
  %495 = sub i32 %493, 1
  %496 = mul i32 %493, %495
  %497 = urem i32 %496, 2
  %498 = icmp eq i32 %497, 0
  %499 = icmp slt i32 %494, 10
  %500 = or i1 %498, %499
  br i1 %500, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br label %501, !dbg !4130

501:                                              ; preds = %originalBBpart296, %originalBBpart292
  br label %502, !dbg !4131

502:                                              ; preds = %501, %originalBBpart28
  %503 = load i32, i32* @x.63
  %504 = load i32, i32* @y.64
  %505 = sub i32 %503, 1
  %506 = mul i32 %503, %505
  %507 = urem i32 %506, 2
  %508 = icmp eq i32 %507, 0
  %509 = icmp slt i32 %504, 10
  %510 = or i1 %508, %509
  br i1 %510, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %502, %originalBB98alteredBB
  store i32 2, i32* %23, align 4, !dbg !4132
  %511 = load i8, i8* %35, align 1, !dbg !4133
  %512 = trunc i8 %511 to i1, !dbg !4133
  %513 = load i32, i32* @x.63
  %514 = load i32, i32* @y.64
  %515 = sub i32 %513, 1
  %516 = mul i32 %513, %515
  %517 = urem i32 %516, 2
  %518 = icmp eq i32 %517, 0
  %519 = icmp slt i32 %514, 10
  %520 = or i1 %518, %519
  br i1 %520, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br i1 %512, label %614, label %521, !dbg !4135

521:                                              ; preds = %originalBBpart2100
  %522 = load i32, i32* @x.63
  %523 = load i32, i32* @y.64
  %524 = sub i32 %522, 1
  %525 = mul i32 %522, %524
  %526 = urem i32 %525, 2
  %527 = icmp eq i32 %526, 0
  %528 = icmp slt i32 %523, 10
  %529 = or i1 %527, %528
  br i1 %529, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %521, %originalBB102alteredBB
  %530 = load i32, i32* @x.63
  %531 = load i32, i32* @y.64
  %532 = sub i32 %530, 1
  %533 = mul i32 %530, %532
  %534 = urem i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %531, 10
  %537 = or i1 %535, %536
  br i1 %537, label %originalBBpart2104, label %originalBB102alteredBB

originalBBpart2104:                               ; preds = %originalBB102
  br label %538, !dbg !4136

538:                                              ; preds = %originalBBpart2104
  %539 = load i32, i32* @x.63
  %540 = load i32, i32* @y.64
  %541 = sub i32 %539, 1
  %542 = mul i32 %539, %541
  %543 = urem i32 %542, 2
  %544 = icmp eq i32 %543, 0
  %545 = icmp slt i32 %540, 10
  %546 = or i1 %544, %545
  br i1 %546, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %538, %originalBB106alteredBB
  %547 = load i64, i64* %29, align 8, !dbg !4137
  %548 = load i64, i64* %20, align 8, !dbg !4137
  %549 = icmp ult i64 %547, %548, !dbg !4137
  %550 = load i32, i32* @x.63
  %551 = load i32, i32* @y.64
  %552 = sub i32 %550, 1
  %553 = mul i32 %550, %552
  %554 = urem i32 %553, 2
  %555 = icmp eq i32 %554, 0
  %556 = icmp slt i32 %551, 10
  %557 = or i1 %555, %556
  br i1 %557, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  br i1 %549, label %558, label %578, !dbg !4140

558:                                              ; preds = %originalBBpart2108
  %559 = load i32, i32* @x.63
  %560 = load i32, i32* @y.64
  %561 = sub i32 %559, 1
  %562 = mul i32 %559, %561
  %563 = urem i32 %562, 2
  %564 = icmp eq i32 %563, 0
  %565 = icmp slt i32 %560, 10
  %566 = or i1 %564, %565
  br i1 %566, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %558, %originalBB110alteredBB
  %567 = load i8*, i8** %19, align 8, !dbg !4137
  %568 = load i64, i64* %29, align 8, !dbg !4137
  %569 = getelementptr inbounds i8, i8* %567, i64 %568, !dbg !4137
  store i8 39, i8* %569, align 1, !dbg !4137
  %570 = load i32, i32* @x.63
  %571 = load i32, i32* @y.64
  %572 = sub i32 %570, 1
  %573 = mul i32 %570, %572
  %574 = urem i32 %573, 2
  %575 = icmp eq i32 %574, 0
  %576 = icmp slt i32 %571, 10
  %577 = or i1 %575, %576
  br i1 %577, label %originalBBpart2112, label %originalBB110alteredBB

originalBBpart2112:                               ; preds = %originalBB110
  br label %578, !dbg !4137

578:                                              ; preds = %originalBBpart2112, %originalBBpart2108
  %579 = load i32, i32* @x.63
  %580 = load i32, i32* @y.64
  %581 = sub i32 %579, 1
  %582 = mul i32 %579, %581
  %583 = urem i32 %582, 2
  %584 = icmp eq i32 %583, 0
  %585 = icmp slt i32 %580, 10
  %586 = or i1 %584, %585
  br i1 %586, label %originalBB114, label %originalBB114alteredBB

originalBB114:                                    ; preds = %578, %originalBB114alteredBB
  %587 = load i64, i64* %29, align 8, !dbg !4140
  %588 = add i64 %587, 1, !dbg !4140
  store i64 %588, i64* %29, align 8, !dbg !4140
  %589 = load i32, i32* @x.63
  %590 = load i32, i32* @y.64
  %591 = sub i32 %589, 1
  %592 = mul i32 %589, %591
  %593 = urem i32 %592, 2
  %594 = icmp eq i32 %593, 0
  %595 = icmp slt i32 %590, 10
  %596 = or i1 %594, %595
  br i1 %596, label %originalBBpart2123, label %originalBB114alteredBB

originalBBpart2123:                               ; preds = %originalBB114
  br label %597, !dbg !4140

597:                                              ; preds = %originalBBpart2123
  %598 = load i32, i32* @x.63
  %599 = load i32, i32* @y.64
  %600 = sub i32 %598, 1
  %601 = mul i32 %598, %600
  %602 = urem i32 %601, 2
  %603 = icmp eq i32 %602, 0
  %604 = icmp slt i32 %599, 10
  %605 = or i1 %603, %604
  br i1 %605, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %597, %originalBB125alteredBB
  %606 = load i32, i32* @x.63
  %607 = load i32, i32* @y.64
  %608 = sub i32 %606, 1
  %609 = mul i32 %606, %608
  %610 = urem i32 %609, 2
  %611 = icmp eq i32 %610, 0
  %612 = icmp slt i32 %607, 10
  %613 = or i1 %611, %612
  br i1 %613, label %originalBBpart2127, label %originalBB125alteredBB

originalBBpart2127:                               ; preds = %originalBB125
  br label %614, !dbg !4140

614:                                              ; preds = %originalBBpart2127, %originalBBpart2100
  %615 = load i32, i32* @x.63
  %616 = load i32, i32* @y.64
  %617 = sub i32 %615, 1
  %618 = mul i32 %615, %617
  %619 = urem i32 %618, 2
  %620 = icmp eq i32 %619, 0
  %621 = icmp slt i32 %616, 10
  %622 = or i1 %620, %621
  br i1 %622, label %originalBB129, label %originalBB129alteredBB

originalBB129:                                    ; preds = %614, %originalBB129alteredBB
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.122, i64 0, i64 0), i8** %31, align 8, !dbg !4141
  store i64 1, i64* %32, align 8, !dbg !4142
  %623 = load i32, i32* @x.63
  %624 = load i32, i32* @y.64
  %625 = sub i32 %623, 1
  %626 = mul i32 %623, %625
  %627 = urem i32 %626, 2
  %628 = icmp eq i32 %627, 0
  %629 = icmp slt i32 %624, 10
  %630 = or i1 %628, %629
  br i1 %630, label %originalBBpart2131, label %originalBB129alteredBB

originalBBpart2131:                               ; preds = %originalBB129
  br label %649, !dbg !4143

631:                                              ; preds = %originalBBpart28
  store i8 0, i8* %35, align 1, !dbg !4144
  br label %649, !dbg !4145

632:                                              ; preds = %originalBBpart28
  %633 = load i32, i32* @x.63
  %634 = load i32, i32* @y.64
  %635 = sub i32 %633, 1
  %636 = mul i32 %633, %635
  %637 = urem i32 %636, 2
  %638 = icmp eq i32 %637, 0
  %639 = icmp slt i32 %634, 10
  %640 = or i1 %638, %639
  br i1 %640, label %originalBB133, label %originalBB133alteredBB

originalBB133:                                    ; preds = %632, %originalBB133alteredBB
  call void @abort() #12, !dbg !4146
  %641 = load i32, i32* @x.63
  %642 = load i32, i32* @y.64
  %643 = sub i32 %641, 1
  %644 = mul i32 %641, %643
  %645 = urem i32 %644, 2
  %646 = icmp eq i32 %645, 0
  %647 = icmp slt i32 %642, 10
  %648 = or i1 %646, %647
  br i1 %648, label %originalBBpart2135, label %originalBB133alteredBB

originalBBpart2135:                               ; preds = %originalBB133
  unreachable, !dbg !4146

649:                                              ; preds = %631, %originalBBpart2131, %originalBBpart280, %originalBBpart236, %originalBBpart232
  %650 = load i32, i32* @x.63
  %651 = load i32, i32* @y.64
  %652 = sub i32 %650, 1
  %653 = mul i32 %650, %652
  %654 = urem i32 %653, 2
  %655 = icmp eq i32 %654, 0
  %656 = icmp slt i32 %651, 10
  %657 = or i1 %655, %656
  br i1 %657, label %originalBB137, label %originalBB137alteredBB

originalBB137:                                    ; preds = %649, %originalBB137alteredBB
  store i64 0, i64* %28, align 8, !dbg !4147
  %658 = load i32, i32* @x.63
  %659 = load i32, i32* @y.64
  %660 = sub i32 %658, 1
  %661 = mul i32 %658, %660
  %662 = urem i32 %661, 2
  %663 = icmp eq i32 %662, 0
  %664 = icmp slt i32 %659, 10
  %665 = or i1 %663, %664
  br i1 %665, label %originalBBpart2139, label %originalBB137alteredBB

originalBBpart2139:                               ; preds = %originalBB137
  br label %666, !dbg !4149

666:                                              ; preds = %originalBBpart21495, %originalBBpart2139
  %667 = load i32, i32* @x.63
  %668 = load i32, i32* @y.64
  %669 = sub i32 %667, 1
  %670 = mul i32 %667, %669
  %671 = urem i32 %670, 2
  %672 = icmp eq i32 %671, 0
  %673 = icmp slt i32 %668, 10
  %674 = or i1 %672, %673
  br i1 %674, label %originalBB141, label %originalBB141alteredBB

originalBB141:                                    ; preds = %666, %originalBB141alteredBB
  %675 = load i64, i64* %22, align 8, !dbg !4150
  %676 = icmp eq i64 %675, -1, !dbg !4152
  %677 = load i32, i32* @x.63
  %678 = load i32, i32* @y.64
  %679 = sub i32 %677, 1
  %680 = mul i32 %677, %679
  %681 = urem i32 %680, 2
  %682 = icmp eq i32 %681, 0
  %683 = icmp slt i32 %678, 10
  %684 = or i1 %682, %683
  br i1 %684, label %originalBBpart2143, label %originalBB141alteredBB

originalBBpart2143:                               ; preds = %originalBB141
  br i1 %676, label %685, label %709, !dbg !4150

685:                                              ; preds = %originalBBpart2143
  %686 = load i32, i32* @x.63
  %687 = load i32, i32* @y.64
  %688 = sub i32 %686, 1
  %689 = mul i32 %686, %688
  %690 = urem i32 %689, 2
  %691 = icmp eq i32 %690, 0
  %692 = icmp slt i32 %687, 10
  %693 = or i1 %691, %692
  br i1 %693, label %originalBB145, label %originalBB145alteredBB

originalBB145:                                    ; preds = %685, %originalBB145alteredBB
  %694 = load i8*, i8** %21, align 8, !dbg !4153
  %695 = load i64, i64* %28, align 8, !dbg !4154
  %696 = getelementptr inbounds i8, i8* %694, i64 %695, !dbg !4153
  %697 = load i8, i8* %696, align 1, !dbg !4153
  %698 = sext i8 %697 to i32, !dbg !4153
  %699 = icmp eq i32 %698, 0, !dbg !4155
  %700 = zext i1 %699 to i32, !dbg !4155
  %701 = load i32, i32* @x.63
  %702 = load i32, i32* @y.64
  %703 = sub i32 %701, 1
  %704 = mul i32 %701, %703
  %705 = urem i32 %704, 2
  %706 = icmp eq i32 %705, 0
  %707 = icmp slt i32 %702, 10
  %708 = or i1 %706, %707
  br i1 %708, label %originalBBpart2147, label %originalBB145alteredBB

originalBBpart2147:                               ; preds = %originalBB145
  br label %730, !dbg !4150

709:                                              ; preds = %originalBBpart2143
  %710 = load i32, i32* @x.63
  %711 = load i32, i32* @y.64
  %712 = sub i32 %710, 1
  %713 = mul i32 %710, %712
  %714 = urem i32 %713, 2
  %715 = icmp eq i32 %714, 0
  %716 = icmp slt i32 %711, 10
  %717 = or i1 %715, %716
  br i1 %717, label %originalBB149, label %originalBB149alteredBB

originalBB149:                                    ; preds = %709, %originalBB149alteredBB
  %718 = load i64, i64* %28, align 8, !dbg !4156
  %719 = load i64, i64* %22, align 8, !dbg !4157
  %720 = icmp eq i64 %718, %719, !dbg !4158
  %721 = zext i1 %720 to i32, !dbg !4158
  %722 = load i32, i32* @x.63
  %723 = load i32, i32* @y.64
  %724 = sub i32 %722, 1
  %725 = mul i32 %722, %724
  %726 = urem i32 %725, 2
  %727 = icmp eq i32 %726, 0
  %728 = icmp slt i32 %723, 10
  %729 = or i1 %727, %728
  br i1 %729, label %originalBBpart2151, label %originalBB149alteredBB

originalBBpart2151:                               ; preds = %originalBB149
  br label %730, !dbg !4150

730:                                              ; preds = %originalBBpart2151, %originalBBpart2147
  %731 = phi i32 [ %700, %originalBBpart2147 ], [ %721, %originalBBpart2151 ], !dbg !4150
  %732 = icmp ne i32 %731, 0, !dbg !4159
  %733 = xor i1 %732, true, !dbg !4159
  br i1 %733, label %734, label %5516, !dbg !4160

734:                                              ; preds = %730
  call void @llvm.dbg.declare(metadata i8* %39, metadata !4161, metadata !DIExpression()), !dbg !4163
  call void @llvm.dbg.declare(metadata i8* %40, metadata !4164, metadata !DIExpression()), !dbg !4165
  call void @llvm.dbg.declare(metadata i8* %41, metadata !4166, metadata !DIExpression()), !dbg !4167
  %735 = load i32, i32* @x.63
  %736 = load i32, i32* @y.64
  %737 = sub i32 %735, 1
  %738 = mul i32 %735, %737
  %739 = urem i32 %738, 2
  %740 = icmp eq i32 %739, 0
  %741 = icmp slt i32 %736, 10
  %742 = or i1 %740, %741
  br i1 %742, label %originalBB153, label %originalBB153alteredBB

originalBB153:                                    ; preds = %734, %originalBB153alteredBB
  store i8 0, i8* %41, align 1, !dbg !4167
  call void @llvm.dbg.declare(metadata i8* %42, metadata !4168, metadata !DIExpression()), !dbg !4169
  store i8 0, i8* %42, align 1, !dbg !4169
  call void @llvm.dbg.declare(metadata i8* %43, metadata !4170, metadata !DIExpression()), !dbg !4171
  store i8 0, i8* %43, align 1, !dbg !4171
  %743 = load i8, i8* %33, align 1, !dbg !4172
  %744 = trunc i8 %743 to i1, !dbg !4172
  %745 = load i32, i32* @x.63
  %746 = load i32, i32* @y.64
  %747 = sub i32 %745, 1
  %748 = mul i32 %745, %747
  %749 = urem i32 %748, 2
  %750 = icmp eq i32 %749, 0
  %751 = icmp slt i32 %746, 10
  %752 = or i1 %750, %751
  br i1 %752, label %originalBBpart2155, label %originalBB153alteredBB

originalBBpart2155:                               ; preds = %originalBB153
  br i1 %744, label %753, label %949, !dbg !4174

753:                                              ; preds = %originalBBpart2155
  %754 = load i32, i32* @x.63
  %755 = load i32, i32* @y.64
  %756 = sub i32 %754, 1
  %757 = mul i32 %754, %756
  %758 = urem i32 %757, 2
  %759 = icmp eq i32 %758, 0
  %760 = icmp slt i32 %755, 10
  %761 = or i1 %759, %760
  br i1 %761, label %originalBB157, label %originalBB157alteredBB

originalBB157:                                    ; preds = %753, %originalBB157alteredBB
  %762 = load i32, i32* %23, align 4, !dbg !4175
  %763 = icmp ne i32 %762, 2, !dbg !4176
  %764 = load i32, i32* @x.63
  %765 = load i32, i32* @y.64
  %766 = sub i32 %764, 1
  %767 = mul i32 %764, %766
  %768 = urem i32 %767, 2
  %769 = icmp eq i32 %768, 0
  %770 = icmp slt i32 %765, 10
  %771 = or i1 %769, %770
  br i1 %771, label %originalBBpart2159, label %originalBB157alteredBB

originalBBpart2159:                               ; preds = %originalBB157
  br i1 %763, label %772, label %949, !dbg !4177

772:                                              ; preds = %originalBBpart2159
  %773 = load i32, i32* @x.63
  %774 = load i32, i32* @y.64
  %775 = sub i32 %773, 1
  %776 = mul i32 %773, %775
  %777 = urem i32 %776, 2
  %778 = icmp eq i32 %777, 0
  %779 = icmp slt i32 %774, 10
  %780 = or i1 %778, %779
  br i1 %780, label %originalBB161, label %originalBB161alteredBB

originalBB161:                                    ; preds = %772, %originalBB161alteredBB
  %781 = load i64, i64* %32, align 8, !dbg !4178
  %782 = icmp ne i64 %781, 0, !dbg !4178
  %783 = load i32, i32* @x.63
  %784 = load i32, i32* @y.64
  %785 = sub i32 %783, 1
  %786 = mul i32 %783, %785
  %787 = urem i32 %786, 2
  %788 = icmp eq i32 %787, 0
  %789 = icmp slt i32 %784, 10
  %790 = or i1 %788, %789
  br i1 %790, label %originalBBpart2163, label %originalBB161alteredBB

originalBBpart2163:                               ; preds = %originalBB161
  br i1 %782, label %791, label %949, !dbg !4179

791:                                              ; preds = %originalBBpart2163
  %792 = load i64, i64* %28, align 8, !dbg !4180
  %793 = load i64, i64* %32, align 8, !dbg !4181
  %794 = add i64 %792, %793, !dbg !4182
  %795 = load i64, i64* %22, align 8, !dbg !4183
  %796 = icmp eq i64 %795, -1, !dbg !4184
  br i1 %796, label %797, label %835, !dbg !4185

797:                                              ; preds = %791
  %798 = load i32, i32* @x.63
  %799 = load i32, i32* @y.64
  %800 = sub i32 %798, 1
  %801 = mul i32 %798, %800
  %802 = urem i32 %801, 2
  %803 = icmp eq i32 %802, 0
  %804 = icmp slt i32 %799, 10
  %805 = or i1 %803, %804
  br i1 %805, label %originalBB165, label %originalBB165alteredBB

originalBB165:                                    ; preds = %797, %originalBB165alteredBB
  %806 = load i64, i64* %32, align 8, !dbg !4186
  %807 = icmp ult i64 1, %806, !dbg !4187
  %808 = load i32, i32* @x.63
  %809 = load i32, i32* @y.64
  %810 = sub i32 %808, 1
  %811 = mul i32 %808, %810
  %812 = urem i32 %811, 2
  %813 = icmp eq i32 %812, 0
  %814 = icmp slt i32 %809, 10
  %815 = or i1 %813, %814
  br i1 %815, label %originalBBpart2167, label %originalBB165alteredBB

originalBBpart2167:                               ; preds = %originalBB165
  br i1 %807, label %816, label %835, !dbg !4183

816:                                              ; preds = %originalBBpart2167
  %817 = load i32, i32* @x.63
  %818 = load i32, i32* @y.64
  %819 = sub i32 %817, 1
  %820 = mul i32 %817, %819
  %821 = urem i32 %820, 2
  %822 = icmp eq i32 %821, 0
  %823 = icmp slt i32 %818, 10
  %824 = or i1 %822, %823
  br i1 %824, label %originalBB169, label %originalBB169alteredBB

originalBB169:                                    ; preds = %816, %originalBB169alteredBB
  %825 = load i8*, i8** %21, align 8, !dbg !4188
  %826 = call i64 @strlen(i8* %825) #13, !dbg !4189
  store i64 %826, i64* %22, align 8, !dbg !4190
  %827 = load i32, i32* @x.63
  %828 = load i32, i32* @y.64
  %829 = sub i32 %827, 1
  %830 = mul i32 %827, %829
  %831 = urem i32 %830, 2
  %832 = icmp eq i32 %831, 0
  %833 = icmp slt i32 %828, 10
  %834 = or i1 %832, %833
  br i1 %834, label %originalBBpart2171, label %originalBB169alteredBB

originalBBpart2171:                               ; preds = %originalBB169
  br label %853, !dbg !4183

835:                                              ; preds = %originalBBpart2167, %791
  %836 = load i32, i32* @x.63
  %837 = load i32, i32* @y.64
  %838 = sub i32 %836, 1
  %839 = mul i32 %836, %838
  %840 = urem i32 %839, 2
  %841 = icmp eq i32 %840, 0
  %842 = icmp slt i32 %837, 10
  %843 = or i1 %841, %842
  br i1 %843, label %originalBB173, label %originalBB173alteredBB

originalBB173:                                    ; preds = %835, %originalBB173alteredBB
  %844 = load i64, i64* %22, align 8, !dbg !4191
  %845 = load i32, i32* @x.63
  %846 = load i32, i32* @y.64
  %847 = sub i32 %845, 1
  %848 = mul i32 %845, %847
  %849 = urem i32 %848, 2
  %850 = icmp eq i32 %849, 0
  %851 = icmp slt i32 %846, 10
  %852 = or i1 %850, %851
  br i1 %852, label %originalBBpart2175, label %originalBB173alteredBB

originalBBpart2175:                               ; preds = %originalBB173
  br label %853, !dbg !4183

853:                                              ; preds = %originalBBpart2175, %originalBBpart2171
  %854 = phi i64 [ %826, %originalBBpart2171 ], [ %844, %originalBBpart2175 ], !dbg !4183
  %855 = load i32, i32* @x.63
  %856 = load i32, i32* @y.64
  %857 = sub i32 %855, 1
  %858 = mul i32 %855, %857
  %859 = urem i32 %858, 2
  %860 = icmp eq i32 %859, 0
  %861 = icmp slt i32 %856, 10
  %862 = or i1 %860, %861
  br i1 %862, label %originalBB177, label %originalBB177alteredBB

originalBB177:                                    ; preds = %853, %originalBB177alteredBB
  %863 = icmp ule i64 %794, %854, !dbg !4192
  %864 = load i32, i32* @x.63
  %865 = load i32, i32* @y.64
  %866 = sub i32 %864, 1
  %867 = mul i32 %864, %866
  %868 = urem i32 %867, 2
  %869 = icmp eq i32 %868, 0
  %870 = icmp slt i32 %865, 10
  %871 = or i1 %869, %870
  br i1 %871, label %originalBBpart2179, label %originalBB177alteredBB

originalBBpart2179:                               ; preds = %originalBB177
  br i1 %863, label %872, label %949, !dbg !4193

872:                                              ; preds = %originalBBpart2179
  %873 = load i32, i32* @x.63
  %874 = load i32, i32* @y.64
  %875 = sub i32 %873, 1
  %876 = mul i32 %873, %875
  %877 = urem i32 %876, 2
  %878 = icmp eq i32 %877, 0
  %879 = icmp slt i32 %874, 10
  %880 = or i1 %878, %879
  br i1 %880, label %originalBB181, label %originalBB181alteredBB

originalBB181:                                    ; preds = %872, %originalBB181alteredBB
  %881 = load i8*, i8** %21, align 8, !dbg !4194
  %882 = load i64, i64* %28, align 8, !dbg !4195
  %883 = getelementptr inbounds i8, i8* %881, i64 %882, !dbg !4196
  %884 = load i8*, i8** %31, align 8, !dbg !4197
  %885 = load i64, i64* %32, align 8, !dbg !4198
  %886 = call i32 @memcmp(i8* %883, i8* %884, i64 %885) #13, !dbg !4199
  %887 = icmp eq i32 %886, 0, !dbg !4200
  %888 = load i32, i32* @x.63
  %889 = load i32, i32* @y.64
  %890 = sub i32 %888, 1
  %891 = mul i32 %888, %890
  %892 = urem i32 %891, 2
  %893 = icmp eq i32 %892, 0
  %894 = icmp slt i32 %889, 10
  %895 = or i1 %893, %894
  br i1 %895, label %originalBBpart2183, label %originalBB181alteredBB

originalBBpart2183:                               ; preds = %originalBB181
  br i1 %887, label %896, label %949, !dbg !4201

896:                                              ; preds = %originalBBpart2183
  %897 = load i32, i32* @x.63
  %898 = load i32, i32* @y.64
  %899 = sub i32 %897, 1
  %900 = mul i32 %897, %899
  %901 = urem i32 %900, 2
  %902 = icmp eq i32 %901, 0
  %903 = icmp slt i32 %898, 10
  %904 = or i1 %902, %903
  br i1 %904, label %originalBB185, label %originalBB185alteredBB

originalBB185:                                    ; preds = %896, %originalBB185alteredBB
  %905 = load i8, i8* %35, align 1, !dbg !4202
  %906 = trunc i8 %905 to i1, !dbg !4202
  %907 = load i32, i32* @x.63
  %908 = load i32, i32* @y.64
  %909 = sub i32 %907, 1
  %910 = mul i32 %907, %909
  %911 = urem i32 %910, 2
  %912 = icmp eq i32 %911, 0
  %913 = icmp slt i32 %908, 10
  %914 = or i1 %912, %913
  br i1 %914, label %originalBBpart2187, label %originalBB185alteredBB

originalBBpart2187:                               ; preds = %originalBB185
  br i1 %906, label %915, label %932, !dbg !4205

915:                                              ; preds = %originalBBpart2187
  %916 = load i32, i32* @x.63
  %917 = load i32, i32* @y.64
  %918 = sub i32 %916, 1
  %919 = mul i32 %916, %918
  %920 = urem i32 %919, 2
  %921 = icmp eq i32 %920, 0
  %922 = icmp slt i32 %917, 10
  %923 = or i1 %921, %922
  br i1 %923, label %originalBB189, label %originalBB189alteredBB

originalBB189:                                    ; preds = %915, %originalBB189alteredBB
  %924 = load i32, i32* @x.63
  %925 = load i32, i32* @y.64
  %926 = sub i32 %924, 1
  %927 = mul i32 %924, %926
  %928 = urem i32 %927, 2
  %929 = icmp eq i32 %928, 0
  %930 = icmp slt i32 %925, 10
  %931 = or i1 %929, %930
  br i1 %931, label %originalBBpart2191, label %originalBB189alteredBB

originalBBpart2191:                               ; preds = %originalBB189
  br label %5982, !dbg !4206

932:                                              ; preds = %originalBBpart2187
  %933 = load i32, i32* @x.63
  %934 = load i32, i32* @y.64
  %935 = sub i32 %933, 1
  %936 = mul i32 %933, %935
  %937 = urem i32 %936, 2
  %938 = icmp eq i32 %937, 0
  %939 = icmp slt i32 %934, 10
  %940 = or i1 %938, %939
  br i1 %940, label %originalBB193, label %originalBB193alteredBB

originalBB193:                                    ; preds = %932, %originalBB193alteredBB
  store i8 1, i8* %41, align 1, !dbg !4207
  %941 = load i32, i32* @x.63
  %942 = load i32, i32* @y.64
  %943 = sub i32 %941, 1
  %944 = mul i32 %941, %943
  %945 = urem i32 %944, 2
  %946 = icmp eq i32 %945, 0
  %947 = icmp slt i32 %942, 10
  %948 = or i1 %946, %947
  br i1 %948, label %originalBBpart2195, label %originalBB193alteredBB

originalBBpart2195:                               ; preds = %originalBB193
  br label %949, !dbg !4208

949:                                              ; preds = %originalBBpart2195, %originalBBpart2183, %originalBBpart2179, %originalBBpart2163, %originalBBpart2159, %originalBBpart2155
  %950 = load i32, i32* @x.63
  %951 = load i32, i32* @y.64
  %952 = sub i32 %950, 1
  %953 = mul i32 %950, %952
  %954 = urem i32 %953, 2
  %955 = icmp eq i32 %954, 0
  %956 = icmp slt i32 %951, 10
  %957 = or i1 %955, %956
  br i1 %957, label %originalBB197, label %originalBB197alteredBB

originalBB197:                                    ; preds = %949, %originalBB197alteredBB
  %958 = load i8*, i8** %21, align 8, !dbg !4209
  %959 = load i64, i64* %28, align 8, !dbg !4210
  %960 = getelementptr inbounds i8, i8* %958, i64 %959, !dbg !4209
  %961 = load i8, i8* %960, align 1, !dbg !4209
  store i8 %961, i8* %39, align 1, !dbg !4211
  %962 = load i8, i8* %39, align 1, !dbg !4212
  %963 = zext i8 %962 to i32, !dbg !4212
  %964 = load i32, i32* @x.63
  %965 = load i32, i32* @y.64
  %966 = sub i32 %964, 1
  %967 = mul i32 %964, %966
  %968 = urem i32 %967, 2
  %969 = icmp eq i32 %968, 0
  %970 = icmp slt i32 %965, 10
  %971 = or i1 %969, %970
  br i1 %971, label %originalBBpart2199, label %originalBB197alteredBB

originalBBpart2199:                               ; preds = %originalBB197
  switch i32 %963, label %3040 [
    i32 0, label %972
    i32 63, label %1669
    i32 7, label %2165
    i32 8, label %2182
    i32 12, label %2199
    i32 10, label %2216
    i32 13, label %2217
    i32 9, label %2218
    i32 11, label %2235
    i32 92, label %2252
    i32 123, label %2510
    i32 125, label %2510
    i32 35, label %2604
    i32 126, label %2604
    i32 32, label %2641
    i32 33, label %2642
    i32 34, label %2642
    i32 36, label %2642
    i32 38, label %2642
    i32 40, label %2642
    i32 41, label %2642
    i32 42, label %2642
    i32 59, label %2642
    i32 60, label %2642
    i32 61, label %2642
    i32 62, label %2642
    i32 91, label %2642
    i32 94, label %2642
    i32 96, label %2642
    i32 124, label %2642
    i32 39, label %2714
    i32 37, label %3023
    i32 43, label %3023
    i32 44, label %3023
    i32 45, label %3023
    i32 46, label %3023
    i32 47, label %3023
    i32 48, label %3023
    i32 49, label %3023
    i32 50, label %3023
    i32 51, label %3023
    i32 52, label %3023
    i32 53, label %3023
    i32 54, label %3023
    i32 55, label %3023
    i32 56, label %3023
    i32 57, label %3023
    i32 58, label %3023
    i32 65, label %3023
    i32 66, label %3023
    i32 67, label %3023
    i32 68, label %3023
    i32 69, label %3023
    i32 70, label %3023
    i32 71, label %3023
    i32 72, label %3023
    i32 73, label %3023
    i32 74, label %3023
    i32 75, label %3023
    i32 76, label %3023
    i32 77, label %3023
    i32 78, label %3023
    i32 79, label %3023
    i32 80, label %3023
    i32 81, label %3023
    i32 82, label %3023
    i32 83, label %3023
    i32 84, label %3023
    i32 85, label %3023
    i32 86, label %3023
    i32 87, label %3023
    i32 88, label %3023
    i32 89, label %3023
    i32 90, label %3023
    i32 93, label %3023
    i32 95, label %3023
    i32 97, label %3023
    i32 98, label %3023
    i32 99, label %3023
    i32 100, label %3023
    i32 101, label %3023
    i32 102, label %3023
    i32 103, label %3023
    i32 104, label %3023
    i32 105, label %3023
    i32 106, label %3023
    i32 107, label %3023
    i32 108, label %3023
    i32 109, label %3023
    i32 110, label %3023
    i32 111, label %3023
    i32 112, label %3023
    i32 113, label %3023
    i32 114, label %3023
    i32 115, label %3023
    i32 116, label %3023
    i32 117, label %3023
    i32 118, label %3023
    i32 119, label %3023
    i32 120, label %3023
    i32 121, label %3023
    i32 122, label %3023
  ], !dbg !4213

972:                                              ; preds = %originalBBpart2199
  %973 = load i32, i32* @x.63
  %974 = load i32, i32* @y.64
  %975 = sub i32 %973, 1
  %976 = mul i32 %973, %975
  %977 = urem i32 %976, 2
  %978 = icmp eq i32 %977, 0
  %979 = icmp slt i32 %974, 10
  %980 = or i1 %978, %979
  br i1 %980, label %originalBB201, label %originalBB201alteredBB

originalBB201:                                    ; preds = %972, %originalBB201alteredBB
  %981 = load i8, i8* %33, align 1, !dbg !4214
  %982 = trunc i8 %981 to i1, !dbg !4214
  %983 = load i32, i32* @x.63
  %984 = load i32, i32* @y.64
  %985 = sub i32 %983, 1
  %986 = mul i32 %983, %985
  %987 = urem i32 %986, 2
  %988 = icmp eq i32 %987, 0
  %989 = icmp slt i32 %984, 10
  %990 = or i1 %988, %989
  br i1 %990, label %originalBBpart2203, label %originalBB201alteredBB

originalBBpart2203:                               ; preds = %originalBB201
  br i1 %982, label %991, label %1614, !dbg !4217

991:                                              ; preds = %originalBBpart2203
  %992 = load i32, i32* @x.63
  %993 = load i32, i32* @y.64
  %994 = sub i32 %992, 1
  %995 = mul i32 %992, %994
  %996 = urem i32 %995, 2
  %997 = icmp eq i32 %996, 0
  %998 = icmp slt i32 %993, 10
  %999 = or i1 %997, %998
  br i1 %999, label %originalBB205, label %originalBB205alteredBB

originalBB205:                                    ; preds = %991, %originalBB205alteredBB
  %1000 = load i32, i32* @x.63
  %1001 = load i32, i32* @y.64
  %1002 = sub i32 %1000, 1
  %1003 = mul i32 %1000, %1002
  %1004 = urem i32 %1003, 2
  %1005 = icmp eq i32 %1004, 0
  %1006 = icmp slt i32 %1001, 10
  %1007 = or i1 %1005, %1006
  br i1 %1007, label %originalBBpart2207, label %originalBB205alteredBB

originalBBpart2207:                               ; preds = %originalBB205
  br label %1008, !dbg !4218

1008:                                             ; preds = %originalBBpart2207
  %1009 = load i32, i32* @x.63
  %1010 = load i32, i32* @y.64
  %1011 = sub i32 %1009, 1
  %1012 = mul i32 %1009, %1011
  %1013 = urem i32 %1012, 2
  %1014 = icmp eq i32 %1013, 0
  %1015 = icmp slt i32 %1010, 10
  %1016 = or i1 %1014, %1015
  br i1 %1016, label %originalBB209, label %originalBB209alteredBB

originalBB209:                                    ; preds = %1008, %originalBB209alteredBB
  %1017 = load i8, i8* %35, align 1, !dbg !4220
  %1018 = trunc i8 %1017 to i1, !dbg !4220
  %1019 = load i32, i32* @x.63
  %1020 = load i32, i32* @y.64
  %1021 = sub i32 %1019, 1
  %1022 = mul i32 %1019, %1021
  %1023 = urem i32 %1022, 2
  %1024 = icmp eq i32 %1023, 0
  %1025 = icmp slt i32 %1020, 10
  %1026 = or i1 %1024, %1025
  br i1 %1026, label %originalBBpart2211, label %originalBB209alteredBB

originalBBpart2211:                               ; preds = %originalBB209
  br i1 %1018, label %1027, label %1044, !dbg !4223

1027:                                             ; preds = %originalBBpart2211
  %1028 = load i32, i32* @x.63
  %1029 = load i32, i32* @y.64
  %1030 = sub i32 %1028, 1
  %1031 = mul i32 %1028, %1030
  %1032 = urem i32 %1031, 2
  %1033 = icmp eq i32 %1032, 0
  %1034 = icmp slt i32 %1029, 10
  %1035 = or i1 %1033, %1034
  br i1 %1035, label %originalBB213, label %originalBB213alteredBB

originalBB213:                                    ; preds = %1027, %originalBB213alteredBB
  %1036 = load i32, i32* @x.63
  %1037 = load i32, i32* @y.64
  %1038 = sub i32 %1036, 1
  %1039 = mul i32 %1036, %1038
  %1040 = urem i32 %1039, 2
  %1041 = icmp eq i32 %1040, 0
  %1042 = icmp slt i32 %1037, 10
  %1043 = or i1 %1041, %1042
  br i1 %1043, label %originalBBpart2215, label %originalBB213alteredBB

originalBBpart2215:                               ; preds = %originalBB213
  br label %5982, !dbg !4220

1044:                                             ; preds = %originalBBpart2211
  store i8 1, i8* %42, align 1, !dbg !4223
  %1045 = load i32, i32* %23, align 4, !dbg !4224
  %1046 = icmp eq i32 %1045, 2, !dbg !4224
  br i1 %1046, label %1047, label %1279, !dbg !4224

1047:                                             ; preds = %1044
  %1048 = load i8, i8* %36, align 1, !dbg !4224
  %1049 = trunc i8 %1048 to i1, !dbg !4224
  br i1 %1049, label %1279, label %1050, !dbg !4223

1050:                                             ; preds = %1047
  %1051 = load i32, i32* @x.63
  %1052 = load i32, i32* @y.64
  %1053 = sub i32 %1051, 1
  %1054 = mul i32 %1051, %1053
  %1055 = urem i32 %1054, 2
  %1056 = icmp eq i32 %1055, 0
  %1057 = icmp slt i32 %1052, 10
  %1058 = or i1 %1056, %1057
  br i1 %1058, label %originalBB217, label %originalBB217alteredBB

originalBB217:                                    ; preds = %1050, %originalBB217alteredBB
  %1059 = load i32, i32* @x.63
  %1060 = load i32, i32* @y.64
  %1061 = sub i32 %1059, 1
  %1062 = mul i32 %1059, %1061
  %1063 = urem i32 %1062, 2
  %1064 = icmp eq i32 %1063, 0
  %1065 = icmp slt i32 %1060, 10
  %1066 = or i1 %1064, %1065
  br i1 %1066, label %originalBBpart2219, label %originalBB217alteredBB

originalBBpart2219:                               ; preds = %originalBB217
  br label %1067, !dbg !4226

1067:                                             ; preds = %originalBBpart2219
  %1068 = load i32, i32* @x.63
  %1069 = load i32, i32* @y.64
  %1070 = sub i32 %1068, 1
  %1071 = mul i32 %1068, %1070
  %1072 = urem i32 %1071, 2
  %1073 = icmp eq i32 %1072, 0
  %1074 = icmp slt i32 %1069, 10
  %1075 = or i1 %1073, %1074
  br i1 %1075, label %originalBB221, label %originalBB221alteredBB

originalBB221:                                    ; preds = %1067, %originalBB221alteredBB
  %1076 = load i64, i64* %29, align 8, !dbg !4228
  %1077 = load i64, i64* %20, align 8, !dbg !4228
  %1078 = icmp ult i64 %1076, %1077, !dbg !4228
  %1079 = load i32, i32* @x.63
  %1080 = load i32, i32* @y.64
  %1081 = sub i32 %1079, 1
  %1082 = mul i32 %1079, %1081
  %1083 = urem i32 %1082, 2
  %1084 = icmp eq i32 %1083, 0
  %1085 = icmp slt i32 %1080, 10
  %1086 = or i1 %1084, %1085
  br i1 %1086, label %originalBBpart2223, label %originalBB221alteredBB

originalBBpart2223:                               ; preds = %originalBB221
  br i1 %1078, label %1087, label %1091, !dbg !4231

1087:                                             ; preds = %originalBBpart2223
  %1088 = load i8*, i8** %19, align 8, !dbg !4228
  %1089 = load i64, i64* %29, align 8, !dbg !4228
  %1090 = getelementptr inbounds i8, i8* %1088, i64 %1089, !dbg !4228
  store i8 39, i8* %1090, align 1, !dbg !4228
  br label %1091, !dbg !4228

1091:                                             ; preds = %1087, %originalBBpart2223
  %1092 = load i32, i32* @x.63
  %1093 = load i32, i32* @y.64
  %1094 = sub i32 %1092, 1
  %1095 = mul i32 %1092, %1094
  %1096 = urem i32 %1095, 2
  %1097 = icmp eq i32 %1096, 0
  %1098 = icmp slt i32 %1093, 10
  %1099 = or i1 %1097, %1098
  br i1 %1099, label %originalBB225, label %originalBB225alteredBB

originalBB225:                                    ; preds = %1091, %originalBB225alteredBB
  %1100 = load i64, i64* %29, align 8, !dbg !4231
  %1101 = add i64 %1100, 1, !dbg !4231
  store i64 %1101, i64* %29, align 8, !dbg !4231
  %1102 = load i32, i32* @x.63
  %1103 = load i32, i32* @y.64
  %1104 = sub i32 %1102, 1
  %1105 = mul i32 %1102, %1104
  %1106 = urem i32 %1105, 2
  %1107 = icmp eq i32 %1106, 0
  %1108 = icmp slt i32 %1103, 10
  %1109 = or i1 %1107, %1108
  br i1 %1109, label %originalBBpart2232, label %originalBB225alteredBB

originalBBpart2232:                               ; preds = %originalBB225
  br label %1110, !dbg !4231

1110:                                             ; preds = %originalBBpart2232
  %1111 = load i32, i32* @x.63
  %1112 = load i32, i32* @y.64
  %1113 = sub i32 %1111, 1
  %1114 = mul i32 %1111, %1113
  %1115 = urem i32 %1114, 2
  %1116 = icmp eq i32 %1115, 0
  %1117 = icmp slt i32 %1112, 10
  %1118 = or i1 %1116, %1117
  br i1 %1118, label %originalBB234, label %originalBB234alteredBB

originalBB234:                                    ; preds = %1110, %originalBB234alteredBB
  %1119 = load i32, i32* @x.63
  %1120 = load i32, i32* @y.64
  %1121 = sub i32 %1119, 1
  %1122 = mul i32 %1119, %1121
  %1123 = urem i32 %1122, 2
  %1124 = icmp eq i32 %1123, 0
  %1125 = icmp slt i32 %1120, 10
  %1126 = or i1 %1124, %1125
  br i1 %1126, label %originalBBpart2236, label %originalBB234alteredBB

originalBBpart2236:                               ; preds = %originalBB234
  br label %1127, !dbg !4226

1127:                                             ; preds = %originalBBpart2236
  %1128 = load i32, i32* @x.63
  %1129 = load i32, i32* @y.64
  %1130 = sub i32 %1128, 1
  %1131 = mul i32 %1128, %1130
  %1132 = urem i32 %1131, 2
  %1133 = icmp eq i32 %1132, 0
  %1134 = icmp slt i32 %1129, 10
  %1135 = or i1 %1133, %1134
  br i1 %1135, label %originalBB238, label %originalBB238alteredBB

originalBB238:                                    ; preds = %1127, %originalBB238alteredBB
  %1136 = load i64, i64* %29, align 8, !dbg !4232
  %1137 = load i64, i64* %20, align 8, !dbg !4232
  %1138 = icmp ult i64 %1136, %1137, !dbg !4232
  %1139 = load i32, i32* @x.63
  %1140 = load i32, i32* @y.64
  %1141 = sub i32 %1139, 1
  %1142 = mul i32 %1139, %1141
  %1143 = urem i32 %1142, 2
  %1144 = icmp eq i32 %1143, 0
  %1145 = icmp slt i32 %1140, 10
  %1146 = or i1 %1144, %1145
  br i1 %1146, label %originalBBpart2240, label %originalBB238alteredBB

originalBBpart2240:                               ; preds = %originalBB238
  br i1 %1138, label %1147, label %1167, !dbg !4235

1147:                                             ; preds = %originalBBpart2240
  %1148 = load i32, i32* @x.63
  %1149 = load i32, i32* @y.64
  %1150 = sub i32 %1148, 1
  %1151 = mul i32 %1148, %1150
  %1152 = urem i32 %1151, 2
  %1153 = icmp eq i32 %1152, 0
  %1154 = icmp slt i32 %1149, 10
  %1155 = or i1 %1153, %1154
  br i1 %1155, label %originalBB242, label %originalBB242alteredBB

originalBB242:                                    ; preds = %1147, %originalBB242alteredBB
  %1156 = load i8*, i8** %19, align 8, !dbg !4232
  %1157 = load i64, i64* %29, align 8, !dbg !4232
  %1158 = getelementptr inbounds i8, i8* %1156, i64 %1157, !dbg !4232
  store i8 36, i8* %1158, align 1, !dbg !4232
  %1159 = load i32, i32* @x.63
  %1160 = load i32, i32* @y.64
  %1161 = sub i32 %1159, 1
  %1162 = mul i32 %1159, %1161
  %1163 = urem i32 %1162, 2
  %1164 = icmp eq i32 %1163, 0
  %1165 = icmp slt i32 %1160, 10
  %1166 = or i1 %1164, %1165
  br i1 %1166, label %originalBBpart2244, label %originalBB242alteredBB

originalBBpart2244:                               ; preds = %originalBB242
  br label %1167, !dbg !4232

1167:                                             ; preds = %originalBBpart2244, %originalBBpart2240
  %1168 = load i32, i32* @x.63
  %1169 = load i32, i32* @y.64
  %1170 = sub i32 %1168, 1
  %1171 = mul i32 %1168, %1170
  %1172 = urem i32 %1171, 2
  %1173 = icmp eq i32 %1172, 0
  %1174 = icmp slt i32 %1169, 10
  %1175 = or i1 %1173, %1174
  br i1 %1175, label %originalBB246, label %originalBB246alteredBB

originalBB246:                                    ; preds = %1167, %originalBB246alteredBB
  %1176 = load i64, i64* %29, align 8, !dbg !4235
  %1177 = add i64 %1176, 1, !dbg !4235
  store i64 %1177, i64* %29, align 8, !dbg !4235
  %1178 = load i32, i32* @x.63
  %1179 = load i32, i32* @y.64
  %1180 = sub i32 %1178, 1
  %1181 = mul i32 %1178, %1180
  %1182 = urem i32 %1181, 2
  %1183 = icmp eq i32 %1182, 0
  %1184 = icmp slt i32 %1179, 10
  %1185 = or i1 %1183, %1184
  br i1 %1185, label %originalBBpart2256, label %originalBB246alteredBB

originalBBpart2256:                               ; preds = %originalBB246
  br label %1186, !dbg !4235

1186:                                             ; preds = %originalBBpart2256
  %1187 = load i32, i32* @x.63
  %1188 = load i32, i32* @y.64
  %1189 = sub i32 %1187, 1
  %1190 = mul i32 %1187, %1189
  %1191 = urem i32 %1190, 2
  %1192 = icmp eq i32 %1191, 0
  %1193 = icmp slt i32 %1188, 10
  %1194 = or i1 %1192, %1193
  br i1 %1194, label %originalBB258, label %originalBB258alteredBB

originalBB258:                                    ; preds = %1186, %originalBB258alteredBB
  %1195 = load i32, i32* @x.63
  %1196 = load i32, i32* @y.64
  %1197 = sub i32 %1195, 1
  %1198 = mul i32 %1195, %1197
  %1199 = urem i32 %1198, 2
  %1200 = icmp eq i32 %1199, 0
  %1201 = icmp slt i32 %1196, 10
  %1202 = or i1 %1200, %1201
  br i1 %1202, label %originalBBpart2260, label %originalBB258alteredBB

originalBBpart2260:                               ; preds = %originalBB258
  br label %1203, !dbg !4226

1203:                                             ; preds = %originalBBpart2260
  %1204 = load i32, i32* @x.63
  %1205 = load i32, i32* @y.64
  %1206 = sub i32 %1204, 1
  %1207 = mul i32 %1204, %1206
  %1208 = urem i32 %1207, 2
  %1209 = icmp eq i32 %1208, 0
  %1210 = icmp slt i32 %1205, 10
  %1211 = or i1 %1209, %1210
  br i1 %1211, label %originalBB262, label %originalBB262alteredBB

originalBB262:                                    ; preds = %1203, %originalBB262alteredBB
  %1212 = load i64, i64* %29, align 8, !dbg !4236
  %1213 = load i64, i64* %20, align 8, !dbg !4236
  %1214 = icmp ult i64 %1212, %1213, !dbg !4236
  %1215 = load i32, i32* @x.63
  %1216 = load i32, i32* @y.64
  %1217 = sub i32 %1215, 1
  %1218 = mul i32 %1215, %1217
  %1219 = urem i32 %1218, 2
  %1220 = icmp eq i32 %1219, 0
  %1221 = icmp slt i32 %1216, 10
  %1222 = or i1 %1220, %1221
  br i1 %1222, label %originalBBpart2264, label %originalBB262alteredBB

originalBBpart2264:                               ; preds = %originalBB262
  br i1 %1214, label %1223, label %1243, !dbg !4239

1223:                                             ; preds = %originalBBpart2264
  %1224 = load i32, i32* @x.63
  %1225 = load i32, i32* @y.64
  %1226 = sub i32 %1224, 1
  %1227 = mul i32 %1224, %1226
  %1228 = urem i32 %1227, 2
  %1229 = icmp eq i32 %1228, 0
  %1230 = icmp slt i32 %1225, 10
  %1231 = or i1 %1229, %1230
  br i1 %1231, label %originalBB266, label %originalBB266alteredBB

originalBB266:                                    ; preds = %1223, %originalBB266alteredBB
  %1232 = load i8*, i8** %19, align 8, !dbg !4236
  %1233 = load i64, i64* %29, align 8, !dbg !4236
  %1234 = getelementptr inbounds i8, i8* %1232, i64 %1233, !dbg !4236
  store i8 39, i8* %1234, align 1, !dbg !4236
  %1235 = load i32, i32* @x.63
  %1236 = load i32, i32* @y.64
  %1237 = sub i32 %1235, 1
  %1238 = mul i32 %1235, %1237
  %1239 = urem i32 %1238, 2
  %1240 = icmp eq i32 %1239, 0
  %1241 = icmp slt i32 %1236, 10
  %1242 = or i1 %1240, %1241
  br i1 %1242, label %originalBBpart2268, label %originalBB266alteredBB

originalBBpart2268:                               ; preds = %originalBB266
  br label %1243, !dbg !4236

1243:                                             ; preds = %originalBBpart2268, %originalBBpart2264
  %1244 = load i32, i32* @x.63
  %1245 = load i32, i32* @y.64
  %1246 = sub i32 %1244, 1
  %1247 = mul i32 %1244, %1246
  %1248 = urem i32 %1247, 2
  %1249 = icmp eq i32 %1248, 0
  %1250 = icmp slt i32 %1245, 10
  %1251 = or i1 %1249, %1250
  br i1 %1251, label %originalBB270, label %originalBB270alteredBB

originalBB270:                                    ; preds = %1243, %originalBB270alteredBB
  %1252 = load i64, i64* %29, align 8, !dbg !4239
  %1253 = add i64 %1252, 1, !dbg !4239
  store i64 %1253, i64* %29, align 8, !dbg !4239
  %1254 = load i32, i32* @x.63
  %1255 = load i32, i32* @y.64
  %1256 = sub i32 %1254, 1
  %1257 = mul i32 %1254, %1256
  %1258 = urem i32 %1257, 2
  %1259 = icmp eq i32 %1258, 0
  %1260 = icmp slt i32 %1255, 10
  %1261 = or i1 %1259, %1260
  br i1 %1261, label %originalBBpart2280, label %originalBB270alteredBB

originalBBpart2280:                               ; preds = %originalBB270
  br label %1262, !dbg !4239

1262:                                             ; preds = %originalBBpart2280
  %1263 = load i32, i32* @x.63
  %1264 = load i32, i32* @y.64
  %1265 = sub i32 %1263, 1
  %1266 = mul i32 %1263, %1265
  %1267 = urem i32 %1266, 2
  %1268 = icmp eq i32 %1267, 0
  %1269 = icmp slt i32 %1264, 10
  %1270 = or i1 %1268, %1269
  br i1 %1270, label %originalBB282, label %originalBB282alteredBB

originalBB282:                                    ; preds = %1262, %originalBB282alteredBB
  store i8 1, i8* %36, align 1, !dbg !4226
  %1271 = load i32, i32* @x.63
  %1272 = load i32, i32* @y.64
  %1273 = sub i32 %1271, 1
  %1274 = mul i32 %1271, %1273
  %1275 = urem i32 %1274, 2
  %1276 = icmp eq i32 %1275, 0
  %1277 = icmp slt i32 %1272, 10
  %1278 = or i1 %1276, %1277
  br i1 %1278, label %originalBBpart2284, label %originalBB282alteredBB

originalBBpart2284:                               ; preds = %originalBB282
  br label %1279, !dbg !4226

1279:                                             ; preds = %originalBBpart2284, %1047, %1044
  %1280 = load i32, i32* @x.63
  %1281 = load i32, i32* @y.64
  %1282 = sub i32 %1280, 1
  %1283 = mul i32 %1280, %1282
  %1284 = urem i32 %1283, 2
  %1285 = icmp eq i32 %1284, 0
  %1286 = icmp slt i32 %1281, 10
  %1287 = or i1 %1285, %1286
  br i1 %1287, label %originalBB286, label %originalBB286alteredBB

originalBB286:                                    ; preds = %1279, %originalBB286alteredBB
  %1288 = load i32, i32* @x.63
  %1289 = load i32, i32* @y.64
  %1290 = sub i32 %1288, 1
  %1291 = mul i32 %1288, %1290
  %1292 = urem i32 %1291, 2
  %1293 = icmp eq i32 %1292, 0
  %1294 = icmp slt i32 %1289, 10
  %1295 = or i1 %1293, %1294
  br i1 %1295, label %originalBBpart2288, label %originalBB286alteredBB

originalBBpart2288:                               ; preds = %originalBB286
  br label %1296, !dbg !4223

1296:                                             ; preds = %originalBBpart2288
  %1297 = load i32, i32* @x.63
  %1298 = load i32, i32* @y.64
  %1299 = sub i32 %1297, 1
  %1300 = mul i32 %1297, %1299
  %1301 = urem i32 %1300, 2
  %1302 = icmp eq i32 %1301, 0
  %1303 = icmp slt i32 %1298, 10
  %1304 = or i1 %1302, %1303
  br i1 %1304, label %originalBB290, label %originalBB290alteredBB

originalBB290:                                    ; preds = %1296, %originalBB290alteredBB
  %1305 = load i64, i64* %29, align 8, !dbg !4240
  %1306 = load i64, i64* %20, align 8, !dbg !4240
  %1307 = icmp ult i64 %1305, %1306, !dbg !4240
  %1308 = load i32, i32* @x.63
  %1309 = load i32, i32* @y.64
  %1310 = sub i32 %1308, 1
  %1311 = mul i32 %1308, %1310
  %1312 = urem i32 %1311, 2
  %1313 = icmp eq i32 %1312, 0
  %1314 = icmp slt i32 %1309, 10
  %1315 = or i1 %1313, %1314
  br i1 %1315, label %originalBBpart2292, label %originalBB290alteredBB

originalBBpart2292:                               ; preds = %originalBB290
  br i1 %1307, label %1316, label %1336, !dbg !4243

1316:                                             ; preds = %originalBBpart2292
  %1317 = load i32, i32* @x.63
  %1318 = load i32, i32* @y.64
  %1319 = sub i32 %1317, 1
  %1320 = mul i32 %1317, %1319
  %1321 = urem i32 %1320, 2
  %1322 = icmp eq i32 %1321, 0
  %1323 = icmp slt i32 %1318, 10
  %1324 = or i1 %1322, %1323
  br i1 %1324, label %originalBB294, label %originalBB294alteredBB

originalBB294:                                    ; preds = %1316, %originalBB294alteredBB
  %1325 = load i8*, i8** %19, align 8, !dbg !4240
  %1326 = load i64, i64* %29, align 8, !dbg !4240
  %1327 = getelementptr inbounds i8, i8* %1325, i64 %1326, !dbg !4240
  store i8 92, i8* %1327, align 1, !dbg !4240
  %1328 = load i32, i32* @x.63
  %1329 = load i32, i32* @y.64
  %1330 = sub i32 %1328, 1
  %1331 = mul i32 %1328, %1330
  %1332 = urem i32 %1331, 2
  %1333 = icmp eq i32 %1332, 0
  %1334 = icmp slt i32 %1329, 10
  %1335 = or i1 %1333, %1334
  br i1 %1335, label %originalBBpart2296, label %originalBB294alteredBB

originalBBpart2296:                               ; preds = %originalBB294
  br label %1336, !dbg !4240

1336:                                             ; preds = %originalBBpart2296, %originalBBpart2292
  %1337 = load i32, i32* @x.63
  %1338 = load i32, i32* @y.64
  %1339 = sub i32 %1337, 1
  %1340 = mul i32 %1337, %1339
  %1341 = urem i32 %1340, 2
  %1342 = icmp eq i32 %1341, 0
  %1343 = icmp slt i32 %1338, 10
  %1344 = or i1 %1342, %1343
  br i1 %1344, label %originalBB298, label %originalBB298alteredBB

originalBB298:                                    ; preds = %1336, %originalBB298alteredBB
  %1345 = load i64, i64* %29, align 8, !dbg !4243
  %1346 = add i64 %1345, 1, !dbg !4243
  store i64 %1346, i64* %29, align 8, !dbg !4243
  %1347 = load i32, i32* @x.63
  %1348 = load i32, i32* @y.64
  %1349 = sub i32 %1347, 1
  %1350 = mul i32 %1347, %1349
  %1351 = urem i32 %1350, 2
  %1352 = icmp eq i32 %1351, 0
  %1353 = icmp slt i32 %1348, 10
  %1354 = or i1 %1352, %1353
  br i1 %1354, label %originalBBpart2309, label %originalBB298alteredBB

originalBBpart2309:                               ; preds = %originalBB298
  br label %1355, !dbg !4243

1355:                                             ; preds = %originalBBpart2309
  %1356 = load i32, i32* @x.63
  %1357 = load i32, i32* @y.64
  %1358 = sub i32 %1356, 1
  %1359 = mul i32 %1356, %1358
  %1360 = urem i32 %1359, 2
  %1361 = icmp eq i32 %1360, 0
  %1362 = icmp slt i32 %1357, 10
  %1363 = or i1 %1361, %1362
  br i1 %1363, label %originalBB311, label %originalBB311alteredBB

originalBB311:                                    ; preds = %1355, %originalBB311alteredBB
  %1364 = load i32, i32* @x.63
  %1365 = load i32, i32* @y.64
  %1366 = sub i32 %1364, 1
  %1367 = mul i32 %1364, %1366
  %1368 = urem i32 %1367, 2
  %1369 = icmp eq i32 %1368, 0
  %1370 = icmp slt i32 %1365, 10
  %1371 = or i1 %1369, %1370
  br i1 %1371, label %originalBBpart2313, label %originalBB311alteredBB

originalBBpart2313:                               ; preds = %originalBB311
  br label %1372, !dbg !4223

1372:                                             ; preds = %originalBBpart2313
  %1373 = load i32, i32* @x.63
  %1374 = load i32, i32* @y.64
  %1375 = sub i32 %1373, 1
  %1376 = mul i32 %1373, %1375
  %1377 = urem i32 %1376, 2
  %1378 = icmp eq i32 %1377, 0
  %1379 = icmp slt i32 %1374, 10
  %1380 = or i1 %1378, %1379
  br i1 %1380, label %originalBB315, label %originalBB315alteredBB

originalBB315:                                    ; preds = %1372, %originalBB315alteredBB
  %1381 = load i32, i32* %23, align 4, !dbg !4244
  %1382 = icmp ne i32 %1381, 2, !dbg !4246
  %1383 = load i32, i32* @x.63
  %1384 = load i32, i32* @y.64
  %1385 = sub i32 %1383, 1
  %1386 = mul i32 %1383, %1385
  %1387 = urem i32 %1386, 2
  %1388 = icmp eq i32 %1387, 0
  %1389 = icmp slt i32 %1384, 10
  %1390 = or i1 %1388, %1389
  br i1 %1390, label %originalBBpart2317, label %originalBB315alteredBB

originalBBpart2317:                               ; preds = %originalBB315
  br i1 %1382, label %1391, label %1613, !dbg !4247

1391:                                             ; preds = %originalBBpart2317
  %1392 = load i32, i32* @x.63
  %1393 = load i32, i32* @y.64
  %1394 = sub i32 %1392, 1
  %1395 = mul i32 %1392, %1394
  %1396 = urem i32 %1395, 2
  %1397 = icmp eq i32 %1396, 0
  %1398 = icmp slt i32 %1393, 10
  %1399 = or i1 %1397, %1398
  br i1 %1399, label %originalBB319, label %originalBB319alteredBB

originalBB319:                                    ; preds = %1391, %originalBB319alteredBB
  %1400 = load i64, i64* %28, align 8, !dbg !4248
  %1401 = add i64 %1400, 1, !dbg !4249
  %1402 = load i64, i64* %22, align 8, !dbg !4250
  %1403 = icmp ult i64 %1401, %1402, !dbg !4251
  %1404 = load i32, i32* @x.63
  %1405 = load i32, i32* @y.64
  %1406 = sub i32 %1404, 1
  %1407 = mul i32 %1404, %1406
  %1408 = urem i32 %1407, 2
  %1409 = icmp eq i32 %1408, 0
  %1410 = icmp slt i32 %1405, 10
  %1411 = or i1 %1409, %1410
  br i1 %1411, label %originalBBpart2327, label %originalBB319alteredBB

originalBBpart2327:                               ; preds = %originalBB319
  br i1 %1403, label %1412, label %1613, !dbg !4252

1412:                                             ; preds = %originalBBpart2327
  %1413 = load i32, i32* @x.63
  %1414 = load i32, i32* @y.64
  %1415 = sub i32 %1413, 1
  %1416 = mul i32 %1413, %1415
  %1417 = urem i32 %1416, 2
  %1418 = icmp eq i32 %1417, 0
  %1419 = icmp slt i32 %1414, 10
  %1420 = or i1 %1418, %1419
  br i1 %1420, label %originalBB329, label %originalBB329alteredBB

originalBB329:                                    ; preds = %1412, %originalBB329alteredBB
  %1421 = load i8*, i8** %21, align 8, !dbg !4253
  %1422 = load i64, i64* %28, align 8, !dbg !4254
  %1423 = add i64 %1422, 1, !dbg !4255
  %1424 = getelementptr inbounds i8, i8* %1421, i64 %1423, !dbg !4253
  %1425 = load i8, i8* %1424, align 1, !dbg !4253
  %1426 = sext i8 %1425 to i32, !dbg !4253
  %1427 = icmp sle i32 48, %1426, !dbg !4256
  %1428 = load i32, i32* @x.63
  %1429 = load i32, i32* @y.64
  %1430 = sub i32 %1428, 1
  %1431 = mul i32 %1428, %1430
  %1432 = urem i32 %1431, 2
  %1433 = icmp eq i32 %1432, 0
  %1434 = icmp slt i32 %1429, 10
  %1435 = or i1 %1433, %1434
  br i1 %1435, label %originalBBpart2333, label %originalBB329alteredBB

originalBBpart2333:                               ; preds = %originalBB329
  br i1 %1427, label %1436, label %1613, !dbg !4257

1436:                                             ; preds = %originalBBpart2333
  %1437 = load i32, i32* @x.63
  %1438 = load i32, i32* @y.64
  %1439 = sub i32 %1437, 1
  %1440 = mul i32 %1437, %1439
  %1441 = urem i32 %1440, 2
  %1442 = icmp eq i32 %1441, 0
  %1443 = icmp slt i32 %1438, 10
  %1444 = or i1 %1442, %1443
  br i1 %1444, label %originalBB335, label %originalBB335alteredBB

originalBB335:                                    ; preds = %1436, %originalBB335alteredBB
  %1445 = load i8*, i8** %21, align 8, !dbg !4258
  %1446 = load i64, i64* %28, align 8, !dbg !4259
  %1447 = add i64 %1446, 1, !dbg !4260
  %1448 = getelementptr inbounds i8, i8* %1445, i64 %1447, !dbg !4258
  %1449 = load i8, i8* %1448, align 1, !dbg !4258
  %1450 = sext i8 %1449 to i32, !dbg !4258
  %1451 = icmp sle i32 %1450, 57, !dbg !4261
  %1452 = load i32, i32* @x.63
  %1453 = load i32, i32* @y.64
  %1454 = sub i32 %1452, 1
  %1455 = mul i32 %1452, %1454
  %1456 = urem i32 %1455, 2
  %1457 = icmp eq i32 %1456, 0
  %1458 = icmp slt i32 %1453, 10
  %1459 = or i1 %1457, %1458
  br i1 %1459, label %originalBBpart2351, label %originalBB335alteredBB

originalBBpart2351:                               ; preds = %originalBB335
  br i1 %1451, label %1460, label %1613, !dbg !4262

1460:                                             ; preds = %originalBBpart2351
  %1461 = load i32, i32* @x.63
  %1462 = load i32, i32* @y.64
  %1463 = sub i32 %1461, 1
  %1464 = mul i32 %1461, %1463
  %1465 = urem i32 %1464, 2
  %1466 = icmp eq i32 %1465, 0
  %1467 = icmp slt i32 %1462, 10
  %1468 = or i1 %1466, %1467
  br i1 %1468, label %originalBB353, label %originalBB353alteredBB

originalBB353:                                    ; preds = %1460, %originalBB353alteredBB
  %1469 = load i32, i32* @x.63
  %1470 = load i32, i32* @y.64
  %1471 = sub i32 %1469, 1
  %1472 = mul i32 %1469, %1471
  %1473 = urem i32 %1472, 2
  %1474 = icmp eq i32 %1473, 0
  %1475 = icmp slt i32 %1470, 10
  %1476 = or i1 %1474, %1475
  br i1 %1476, label %originalBBpart2355, label %originalBB353alteredBB

originalBBpart2355:                               ; preds = %originalBB353
  br label %1477, !dbg !4263

1477:                                             ; preds = %originalBBpart2355
  %1478 = load i32, i32* @x.63
  %1479 = load i32, i32* @y.64
  %1480 = sub i32 %1478, 1
  %1481 = mul i32 %1478, %1480
  %1482 = urem i32 %1481, 2
  %1483 = icmp eq i32 %1482, 0
  %1484 = icmp slt i32 %1479, 10
  %1485 = or i1 %1483, %1484
  br i1 %1485, label %originalBB357, label %originalBB357alteredBB

originalBB357:                                    ; preds = %1477, %originalBB357alteredBB
  %1486 = load i64, i64* %29, align 8, !dbg !4265
  %1487 = load i64, i64* %20, align 8, !dbg !4265
  %1488 = icmp ult i64 %1486, %1487, !dbg !4265
  %1489 = load i32, i32* @x.63
  %1490 = load i32, i32* @y.64
  %1491 = sub i32 %1489, 1
  %1492 = mul i32 %1489, %1491
  %1493 = urem i32 %1492, 2
  %1494 = icmp eq i32 %1493, 0
  %1495 = icmp slt i32 %1490, 10
  %1496 = or i1 %1494, %1495
  br i1 %1496, label %originalBBpart2359, label %originalBB357alteredBB

originalBBpart2359:                               ; preds = %originalBB357
  br i1 %1488, label %1497, label %1517, !dbg !4268

1497:                                             ; preds = %originalBBpart2359
  %1498 = load i32, i32* @x.63
  %1499 = load i32, i32* @y.64
  %1500 = sub i32 %1498, 1
  %1501 = mul i32 %1498, %1500
  %1502 = urem i32 %1501, 2
  %1503 = icmp eq i32 %1502, 0
  %1504 = icmp slt i32 %1499, 10
  %1505 = or i1 %1503, %1504
  br i1 %1505, label %originalBB361, label %originalBB361alteredBB

originalBB361:                                    ; preds = %1497, %originalBB361alteredBB
  %1506 = load i8*, i8** %19, align 8, !dbg !4265
  %1507 = load i64, i64* %29, align 8, !dbg !4265
  %1508 = getelementptr inbounds i8, i8* %1506, i64 %1507, !dbg !4265
  store i8 48, i8* %1508, align 1, !dbg !4265
  %1509 = load i32, i32* @x.63
  %1510 = load i32, i32* @y.64
  %1511 = sub i32 %1509, 1
  %1512 = mul i32 %1509, %1511
  %1513 = urem i32 %1512, 2
  %1514 = icmp eq i32 %1513, 0
  %1515 = icmp slt i32 %1510, 10
  %1516 = or i1 %1514, %1515
  br i1 %1516, label %originalBBpart2363, label %originalBB361alteredBB

originalBBpart2363:                               ; preds = %originalBB361
  br label %1517, !dbg !4265

1517:                                             ; preds = %originalBBpart2363, %originalBBpart2359
  %1518 = load i32, i32* @x.63
  %1519 = load i32, i32* @y.64
  %1520 = sub i32 %1518, 1
  %1521 = mul i32 %1518, %1520
  %1522 = urem i32 %1521, 2
  %1523 = icmp eq i32 %1522, 0
  %1524 = icmp slt i32 %1519, 10
  %1525 = or i1 %1523, %1524
  br i1 %1525, label %originalBB365, label %originalBB365alteredBB

originalBB365:                                    ; preds = %1517, %originalBB365alteredBB
  %1526 = load i64, i64* %29, align 8, !dbg !4268
  %1527 = add i64 %1526, 1, !dbg !4268
  store i64 %1527, i64* %29, align 8, !dbg !4268
  %1528 = load i32, i32* @x.63
  %1529 = load i32, i32* @y.64
  %1530 = sub i32 %1528, 1
  %1531 = mul i32 %1528, %1530
  %1532 = urem i32 %1531, 2
  %1533 = icmp eq i32 %1532, 0
  %1534 = icmp slt i32 %1529, 10
  %1535 = or i1 %1533, %1534
  br i1 %1535, label %originalBBpart2375, label %originalBB365alteredBB

originalBBpart2375:                               ; preds = %originalBB365
  br label %1536, !dbg !4268

1536:                                             ; preds = %originalBBpart2375
  br label %1537, !dbg !4269

1537:                                             ; preds = %1536
  %1538 = load i32, i32* @x.63
  %1539 = load i32, i32* @y.64
  %1540 = sub i32 %1538, 1
  %1541 = mul i32 %1538, %1540
  %1542 = urem i32 %1541, 2
  %1543 = icmp eq i32 %1542, 0
  %1544 = icmp slt i32 %1539, 10
  %1545 = or i1 %1543, %1544
  br i1 %1545, label %originalBB377, label %originalBB377alteredBB

originalBB377:                                    ; preds = %1537, %originalBB377alteredBB
  %1546 = load i64, i64* %29, align 8, !dbg !4270
  %1547 = load i64, i64* %20, align 8, !dbg !4270
  %1548 = icmp ult i64 %1546, %1547, !dbg !4270
  %1549 = load i32, i32* @x.63
  %1550 = load i32, i32* @y.64
  %1551 = sub i32 %1549, 1
  %1552 = mul i32 %1549, %1551
  %1553 = urem i32 %1552, 2
  %1554 = icmp eq i32 %1553, 0
  %1555 = icmp slt i32 %1550, 10
  %1556 = or i1 %1554, %1555
  br i1 %1556, label %originalBBpart2379, label %originalBB377alteredBB

originalBBpart2379:                               ; preds = %originalBB377
  br i1 %1548, label %1557, label %1577, !dbg !4273

1557:                                             ; preds = %originalBBpart2379
  %1558 = load i32, i32* @x.63
  %1559 = load i32, i32* @y.64
  %1560 = sub i32 %1558, 1
  %1561 = mul i32 %1558, %1560
  %1562 = urem i32 %1561, 2
  %1563 = icmp eq i32 %1562, 0
  %1564 = icmp slt i32 %1559, 10
  %1565 = or i1 %1563, %1564
  br i1 %1565, label %originalBB381, label %originalBB381alteredBB

originalBB381:                                    ; preds = %1557, %originalBB381alteredBB
  %1566 = load i8*, i8** %19, align 8, !dbg !4270
  %1567 = load i64, i64* %29, align 8, !dbg !4270
  %1568 = getelementptr inbounds i8, i8* %1566, i64 %1567, !dbg !4270
  store i8 48, i8* %1568, align 1, !dbg !4270
  %1569 = load i32, i32* @x.63
  %1570 = load i32, i32* @y.64
  %1571 = sub i32 %1569, 1
  %1572 = mul i32 %1569, %1571
  %1573 = urem i32 %1572, 2
  %1574 = icmp eq i32 %1573, 0
  %1575 = icmp slt i32 %1570, 10
  %1576 = or i1 %1574, %1575
  br i1 %1576, label %originalBBpart2383, label %originalBB381alteredBB

originalBBpart2383:                               ; preds = %originalBB381
  br label %1577, !dbg !4270

1577:                                             ; preds = %originalBBpart2383, %originalBBpart2379
  %1578 = load i32, i32* @x.63
  %1579 = load i32, i32* @y.64
  %1580 = sub i32 %1578, 1
  %1581 = mul i32 %1578, %1580
  %1582 = urem i32 %1581, 2
  %1583 = icmp eq i32 %1582, 0
  %1584 = icmp slt i32 %1579, 10
  %1585 = or i1 %1583, %1584
  br i1 %1585, label %originalBB385, label %originalBB385alteredBB

originalBB385:                                    ; preds = %1577, %originalBB385alteredBB
  %1586 = load i64, i64* %29, align 8, !dbg !4273
  %1587 = add i64 %1586, 1, !dbg !4273
  store i64 %1587, i64* %29, align 8, !dbg !4273
  %1588 = load i32, i32* @x.63
  %1589 = load i32, i32* @y.64
  %1590 = sub i32 %1588, 1
  %1591 = mul i32 %1588, %1590
  %1592 = urem i32 %1591, 2
  %1593 = icmp eq i32 %1592, 0
  %1594 = icmp slt i32 %1589, 10
  %1595 = or i1 %1593, %1594
  br i1 %1595, label %originalBBpart2395, label %originalBB385alteredBB

originalBBpart2395:                               ; preds = %originalBB385
  br label %1596, !dbg !4273

1596:                                             ; preds = %originalBBpart2395
  %1597 = load i32, i32* @x.63
  %1598 = load i32, i32* @y.64
  %1599 = sub i32 %1597, 1
  %1600 = mul i32 %1597, %1599
  %1601 = urem i32 %1600, 2
  %1602 = icmp eq i32 %1601, 0
  %1603 = icmp slt i32 %1598, 10
  %1604 = or i1 %1602, %1603
  br i1 %1604, label %originalBB397, label %originalBB397alteredBB

originalBB397:                                    ; preds = %1596, %originalBB397alteredBB
  %1605 = load i32, i32* @x.63
  %1606 = load i32, i32* @y.64
  %1607 = sub i32 %1605, 1
  %1608 = mul i32 %1605, %1607
  %1609 = urem i32 %1608, 2
  %1610 = icmp eq i32 %1609, 0
  %1611 = icmp slt i32 %1606, 10
  %1612 = or i1 %1610, %1611
  br i1 %1612, label %originalBBpart2399, label %originalBB397alteredBB

originalBBpart2399:                               ; preds = %originalBB397
  br label %1613, !dbg !4274

1613:                                             ; preds = %originalBBpart2399, %originalBBpart2351, %originalBBpart2333, %originalBBpart2327, %originalBBpart2317
  store i8 48, i8* %39, align 1, !dbg !4275
  br label %1652, !dbg !4276

1614:                                             ; preds = %originalBBpart2203
  %1615 = load i32, i32* @x.63
  %1616 = load i32, i32* @y.64
  %1617 = sub i32 %1615, 1
  %1618 = mul i32 %1615, %1617
  %1619 = urem i32 %1618, 2
  %1620 = icmp eq i32 %1619, 0
  %1621 = icmp slt i32 %1616, 10
  %1622 = or i1 %1620, %1621
  br i1 %1622, label %originalBB401, label %originalBB401alteredBB

originalBB401:                                    ; preds = %1614, %originalBB401alteredBB
  %1623 = load i32, i32* %24, align 4, !dbg !4277
  %1624 = and i32 %1623, 1, !dbg !4279
  %1625 = icmp ne i32 %1624, 0, !dbg !4279
  %1626 = load i32, i32* @x.63
  %1627 = load i32, i32* @y.64
  %1628 = sub i32 %1626, 1
  %1629 = mul i32 %1626, %1628
  %1630 = urem i32 %1629, 2
  %1631 = icmp eq i32 %1630, 0
  %1632 = icmp slt i32 %1627, 10
  %1633 = or i1 %1631, %1632
  br i1 %1633, label %originalBBpart2407, label %originalBB401alteredBB

originalBBpart2407:                               ; preds = %originalBB401
  br i1 %1625, label %1634, label %1635, !dbg !4280

1634:                                             ; preds = %originalBBpart2407
  br label %5497, !dbg !4281

1635:                                             ; preds = %originalBBpart2407
  %1636 = load i32, i32* @x.63
  %1637 = load i32, i32* @y.64
  %1638 = sub i32 %1636, 1
  %1639 = mul i32 %1636, %1638
  %1640 = urem i32 %1639, 2
  %1641 = icmp eq i32 %1640, 0
  %1642 = icmp slt i32 %1637, 10
  %1643 = or i1 %1641, %1642
  br i1 %1643, label %originalBB409, label %originalBB409alteredBB

originalBB409:                                    ; preds = %1635, %originalBB409alteredBB
  %1644 = load i32, i32* @x.63
  %1645 = load i32, i32* @y.64
  %1646 = sub i32 %1644, 1
  %1647 = mul i32 %1644, %1646
  %1648 = urem i32 %1647, 2
  %1649 = icmp eq i32 %1648, 0
  %1650 = icmp slt i32 %1645, 10
  %1651 = or i1 %1649, %1650
  br i1 %1651, label %originalBBpart2411, label %originalBB409alteredBB

originalBBpart2411:                               ; preds = %originalBB409
  br label %1652

1652:                                             ; preds = %originalBBpart2411, %1613
  %1653 = load i32, i32* @x.63
  %1654 = load i32, i32* @y.64
  %1655 = sub i32 %1653, 1
  %1656 = mul i32 %1653, %1655
  %1657 = urem i32 %1656, 2
  %1658 = icmp eq i32 %1657, 0
  %1659 = icmp slt i32 %1654, 10
  %1660 = or i1 %1658, %1659
  br i1 %1660, label %originalBB413, label %originalBB413alteredBB

originalBB413:                                    ; preds = %1652, %originalBB413alteredBB
  %1661 = load i32, i32* @x.63
  %1662 = load i32, i32* @y.64
  %1663 = sub i32 %1661, 1
  %1664 = mul i32 %1661, %1663
  %1665 = urem i32 %1664, 2
  %1666 = icmp eq i32 %1665, 0
  %1667 = icmp slt i32 %1662, 10
  %1668 = or i1 %1666, %1667
  br i1 %1668, label %originalBBpart2415, label %originalBB413alteredBB

originalBBpart2415:                               ; preds = %originalBB413
  br label %4729, !dbg !4282

1669:                                             ; preds = %originalBBpart2199
  %1670 = load i32, i32* @x.63
  %1671 = load i32, i32* @y.64
  %1672 = sub i32 %1670, 1
  %1673 = mul i32 %1670, %1672
  %1674 = urem i32 %1673, 2
  %1675 = icmp eq i32 %1674, 0
  %1676 = icmp slt i32 %1671, 10
  %1677 = or i1 %1675, %1676
  br i1 %1677, label %originalBB417, label %originalBB417alteredBB

originalBB417:                                    ; preds = %1669, %originalBB417alteredBB
  %1678 = load i32, i32* %23, align 4, !dbg !4283
  %1679 = load i32, i32* @x.63
  %1680 = load i32, i32* @y.64
  %1681 = sub i32 %1679, 1
  %1682 = mul i32 %1679, %1681
  %1683 = urem i32 %1682, 2
  %1684 = icmp eq i32 %1683, 0
  %1685 = icmp slt i32 %1680, 10
  %1686 = or i1 %1684, %1685
  br i1 %1686, label %originalBBpart2419, label %originalBB417alteredBB

originalBBpart2419:                               ; preds = %originalBB417
  switch i32 %1678, label %2147 [
    i32 2, label %1687
    i32 5, label %1740
  ], !dbg !4284

1687:                                             ; preds = %originalBBpart2419
  %1688 = load i32, i32* @x.63
  %1689 = load i32, i32* @y.64
  %1690 = sub i32 %1688, 1
  %1691 = mul i32 %1688, %1690
  %1692 = urem i32 %1691, 2
  %1693 = icmp eq i32 %1692, 0
  %1694 = icmp slt i32 %1689, 10
  %1695 = or i1 %1693, %1694
  br i1 %1695, label %originalBB421, label %originalBB421alteredBB

originalBB421:                                    ; preds = %1687, %originalBB421alteredBB
  %1696 = load i8, i8* %35, align 1, !dbg !4285
  %1697 = trunc i8 %1696 to i1, !dbg !4285
  %1698 = load i32, i32* @x.63
  %1699 = load i32, i32* @y.64
  %1700 = sub i32 %1698, 1
  %1701 = mul i32 %1698, %1700
  %1702 = urem i32 %1701, 2
  %1703 = icmp eq i32 %1702, 0
  %1704 = icmp slt i32 %1699, 10
  %1705 = or i1 %1703, %1704
  br i1 %1705, label %originalBBpart2423, label %originalBB421alteredBB

originalBBpart2423:                               ; preds = %originalBB421
  br i1 %1697, label %1706, label %1723, !dbg !4288

1706:                                             ; preds = %originalBBpart2423
  %1707 = load i32, i32* @x.63
  %1708 = load i32, i32* @y.64
  %1709 = sub i32 %1707, 1
  %1710 = mul i32 %1707, %1709
  %1711 = urem i32 %1710, 2
  %1712 = icmp eq i32 %1711, 0
  %1713 = icmp slt i32 %1708, 10
  %1714 = or i1 %1712, %1713
  br i1 %1714, label %originalBB425, label %originalBB425alteredBB

originalBB425:                                    ; preds = %1706, %originalBB425alteredBB
  %1715 = load i32, i32* @x.63
  %1716 = load i32, i32* @y.64
  %1717 = sub i32 %1715, 1
  %1718 = mul i32 %1715, %1717
  %1719 = urem i32 %1718, 2
  %1720 = icmp eq i32 %1719, 0
  %1721 = icmp slt i32 %1716, 10
  %1722 = or i1 %1720, %1721
  br i1 %1722, label %originalBBpart2427, label %originalBB425alteredBB

originalBBpart2427:                               ; preds = %originalBB425
  br label %5982, !dbg !4289

1723:                                             ; preds = %originalBBpart2423
  %1724 = load i32, i32* @x.63
  %1725 = load i32, i32* @y.64
  %1726 = sub i32 %1724, 1
  %1727 = mul i32 %1724, %1726
  %1728 = urem i32 %1727, 2
  %1729 = icmp eq i32 %1728, 0
  %1730 = icmp slt i32 %1725, 10
  %1731 = or i1 %1729, %1730
  br i1 %1731, label %originalBB429, label %originalBB429alteredBB

originalBB429:                                    ; preds = %1723, %originalBB429alteredBB
  %1732 = load i32, i32* @x.63
  %1733 = load i32, i32* @y.64
  %1734 = sub i32 %1732, 1
  %1735 = mul i32 %1732, %1734
  %1736 = urem i32 %1735, 2
  %1737 = icmp eq i32 %1736, 0
  %1738 = icmp slt i32 %1733, 10
  %1739 = or i1 %1737, %1738
  br i1 %1739, label %originalBBpart2431, label %originalBB429alteredBB

originalBBpart2431:                               ; preds = %originalBB429
  br label %2148, !dbg !4290

1740:                                             ; preds = %originalBBpart2419
  %1741 = load i32, i32* @x.63
  %1742 = load i32, i32* @y.64
  %1743 = sub i32 %1741, 1
  %1744 = mul i32 %1741, %1743
  %1745 = urem i32 %1744, 2
  %1746 = icmp eq i32 %1745, 0
  %1747 = icmp slt i32 %1742, 10
  %1748 = or i1 %1746, %1747
  br i1 %1748, label %originalBB433, label %originalBB433alteredBB

originalBB433:                                    ; preds = %1740, %originalBB433alteredBB
  %1749 = load i32, i32* %24, align 4, !dbg !4291
  %1750 = and i32 %1749, 4, !dbg !4293
  %1751 = icmp ne i32 %1750, 0, !dbg !4293
  %1752 = load i32, i32* @x.63
  %1753 = load i32, i32* @y.64
  %1754 = sub i32 %1752, 1
  %1755 = mul i32 %1752, %1754
  %1756 = urem i32 %1755, 2
  %1757 = icmp eq i32 %1756, 0
  %1758 = icmp slt i32 %1753, 10
  %1759 = or i1 %1757, %1758
  br i1 %1759, label %originalBBpart2443, label %originalBB433alteredBB

originalBBpart2443:                               ; preds = %originalBB433
  br i1 %1751, label %1760, label %2146, !dbg !4294

1760:                                             ; preds = %originalBBpart2443
  %1761 = load i64, i64* %28, align 8, !dbg !4295
  %1762 = add i64 %1761, 2, !dbg !4296
  %1763 = load i64, i64* %22, align 8, !dbg !4297
  %1764 = icmp ult i64 %1762, %1763, !dbg !4298
  br i1 %1764, label %1765, label %2146, !dbg !4299

1765:                                             ; preds = %1760
  %1766 = load i8*, i8** %21, align 8, !dbg !4300
  %1767 = load i64, i64* %28, align 8, !dbg !4301
  %1768 = add i64 %1767, 1, !dbg !4302
  %1769 = getelementptr inbounds i8, i8* %1766, i64 %1768, !dbg !4300
  %1770 = load i8, i8* %1769, align 1, !dbg !4300
  %1771 = sext i8 %1770 to i32, !dbg !4300
  %1772 = icmp eq i32 %1771, 63, !dbg !4303
  br i1 %1772, label %1773, label %2146, !dbg !4304

1773:                                             ; preds = %1765
  %1774 = load i32, i32* @x.63
  %1775 = load i32, i32* @y.64
  %1776 = sub i32 %1774, 1
  %1777 = mul i32 %1774, %1776
  %1778 = urem i32 %1777, 2
  %1779 = icmp eq i32 %1778, 0
  %1780 = icmp slt i32 %1775, 10
  %1781 = or i1 %1779, %1780
  br i1 %1781, label %originalBB445, label %originalBB445alteredBB

originalBB445:                                    ; preds = %1773, %originalBB445alteredBB
  %1782 = load i8*, i8** %21, align 8, !dbg !4305
  %1783 = load i64, i64* %28, align 8, !dbg !4306
  %1784 = add i64 %1783, 2, !dbg !4307
  %1785 = getelementptr inbounds i8, i8* %1782, i64 %1784, !dbg !4305
  %1786 = load i8, i8* %1785, align 1, !dbg !4305
  %1787 = sext i8 %1786 to i32, !dbg !4305
  %1788 = load i32, i32* @x.63
  %1789 = load i32, i32* @y.64
  %1790 = sub i32 %1788, 1
  %1791 = mul i32 %1788, %1790
  %1792 = urem i32 %1791, 2
  %1793 = icmp eq i32 %1792, 0
  %1794 = icmp slt i32 %1789, 10
  %1795 = or i1 %1793, %1794
  br i1 %1795, label %originalBBpart2454, label %originalBB445alteredBB

originalBBpart2454:                               ; preds = %originalBB445
  switch i32 %1787, label %2112 [
    i32 33, label %1796
    i32 39, label %1796
    i32 40, label %1796
    i32 41, label %1796
    i32 45, label %1796
    i32 47, label %1796
    i32 60, label %1796
    i32 61, label %1796
    i32 62, label %1796
  ], !dbg !4308

1796:                                             ; preds = %originalBBpart2454, %originalBBpart2454, %originalBBpart2454, %originalBBpart2454, %originalBBpart2454, %originalBBpart2454, %originalBBpart2454, %originalBBpart2454, %originalBBpart2454
  %1797 = load i32, i32* @x.63
  %1798 = load i32, i32* @y.64
  %1799 = sub i32 %1797, 1
  %1800 = mul i32 %1797, %1799
  %1801 = urem i32 %1800, 2
  %1802 = icmp eq i32 %1801, 0
  %1803 = icmp slt i32 %1798, 10
  %1804 = or i1 %1802, %1803
  br i1 %1804, label %originalBB456, label %originalBB456alteredBB

originalBB456:                                    ; preds = %1796, %originalBB456alteredBB
  %1805 = load i8, i8* %35, align 1, !dbg !4309
  %1806 = trunc i8 %1805 to i1, !dbg !4309
  %1807 = load i32, i32* @x.63
  %1808 = load i32, i32* @y.64
  %1809 = sub i32 %1807, 1
  %1810 = mul i32 %1807, %1809
  %1811 = urem i32 %1810, 2
  %1812 = icmp eq i32 %1811, 0
  %1813 = icmp slt i32 %1808, 10
  %1814 = or i1 %1812, %1813
  br i1 %1814, label %originalBBpart2458, label %originalBB456alteredBB

originalBBpart2458:                               ; preds = %originalBB456
  br i1 %1806, label %1815, label %1816, !dbg !4312

1815:                                             ; preds = %originalBBpart2458
  br label %5982, !dbg !4313

1816:                                             ; preds = %originalBBpart2458
  %1817 = load i32, i32* @x.63
  %1818 = load i32, i32* @y.64
  %1819 = sub i32 %1817, 1
  %1820 = mul i32 %1817, %1819
  %1821 = urem i32 %1820, 2
  %1822 = icmp eq i32 %1821, 0
  %1823 = icmp slt i32 %1818, 10
  %1824 = or i1 %1822, %1823
  br i1 %1824, label %originalBB460, label %originalBB460alteredBB

originalBB460:                                    ; preds = %1816, %originalBB460alteredBB
  %1825 = load i8*, i8** %21, align 8, !dbg !4314
  %1826 = load i64, i64* %28, align 8, !dbg !4315
  %1827 = add i64 %1826, 2, !dbg !4316
  %1828 = getelementptr inbounds i8, i8* %1825, i64 %1827, !dbg !4314
  %1829 = load i8, i8* %1828, align 1, !dbg !4314
  store i8 %1829, i8* %39, align 1, !dbg !4317
  %1830 = load i64, i64* %28, align 8, !dbg !4318
  %1831 = add i64 %1830, 2, !dbg !4318
  store i64 %1831, i64* %28, align 8, !dbg !4318
  %1832 = load i32, i32* @x.63
  %1833 = load i32, i32* @y.64
  %1834 = sub i32 %1832, 1
  %1835 = mul i32 %1832, %1834
  %1836 = urem i32 %1835, 2
  %1837 = icmp eq i32 %1836, 0
  %1838 = icmp slt i32 %1833, 10
  %1839 = or i1 %1837, %1838
  br i1 %1839, label %originalBBpart2483, label %originalBB460alteredBB

originalBBpart2483:                               ; preds = %originalBB460
  br label %1840, !dbg !4319

1840:                                             ; preds = %originalBBpart2483
  %1841 = load i64, i64* %29, align 8, !dbg !4320
  %1842 = load i64, i64* %20, align 8, !dbg !4320
  %1843 = icmp ult i64 %1841, %1842, !dbg !4320
  br i1 %1843, label %1844, label %1864, !dbg !4323

1844:                                             ; preds = %1840
  %1845 = load i32, i32* @x.63
  %1846 = load i32, i32* @y.64
  %1847 = sub i32 %1845, 1
  %1848 = mul i32 %1845, %1847
  %1849 = urem i32 %1848, 2
  %1850 = icmp eq i32 %1849, 0
  %1851 = icmp slt i32 %1846, 10
  %1852 = or i1 %1850, %1851
  br i1 %1852, label %originalBB485, label %originalBB485alteredBB

originalBB485:                                    ; preds = %1844, %originalBB485alteredBB
  %1853 = load i8*, i8** %19, align 8, !dbg !4320
  %1854 = load i64, i64* %29, align 8, !dbg !4320
  %1855 = getelementptr inbounds i8, i8* %1853, i64 %1854, !dbg !4320
  store i8 63, i8* %1855, align 1, !dbg !4320
  %1856 = load i32, i32* @x.63
  %1857 = load i32, i32* @y.64
  %1858 = sub i32 %1856, 1
  %1859 = mul i32 %1856, %1858
  %1860 = urem i32 %1859, 2
  %1861 = icmp eq i32 %1860, 0
  %1862 = icmp slt i32 %1857, 10
  %1863 = or i1 %1861, %1862
  br i1 %1863, label %originalBBpart2487, label %originalBB485alteredBB

originalBBpart2487:                               ; preds = %originalBB485
  br label %1864, !dbg !4320

1864:                                             ; preds = %originalBBpart2487, %1840
  %1865 = load i32, i32* @x.63
  %1866 = load i32, i32* @y.64
  %1867 = sub i32 %1865, 1
  %1868 = mul i32 %1865, %1867
  %1869 = urem i32 %1868, 2
  %1870 = icmp eq i32 %1869, 0
  %1871 = icmp slt i32 %1866, 10
  %1872 = or i1 %1870, %1871
  br i1 %1872, label %originalBB489, label %originalBB489alteredBB

originalBB489:                                    ; preds = %1864, %originalBB489alteredBB
  %1873 = load i64, i64* %29, align 8, !dbg !4323
  %1874 = add i64 %1873, 1, !dbg !4323
  store i64 %1874, i64* %29, align 8, !dbg !4323
  %1875 = load i32, i32* @x.63
  %1876 = load i32, i32* @y.64
  %1877 = sub i32 %1875, 1
  %1878 = mul i32 %1875, %1877
  %1879 = urem i32 %1878, 2
  %1880 = icmp eq i32 %1879, 0
  %1881 = icmp slt i32 %1876, 10
  %1882 = or i1 %1880, %1881
  br i1 %1882, label %originalBBpart2500, label %originalBB489alteredBB

originalBBpart2500:                               ; preds = %originalBB489
  br label %1883, !dbg !4323

1883:                                             ; preds = %originalBBpart2500
  %1884 = load i32, i32* @x.63
  %1885 = load i32, i32* @y.64
  %1886 = sub i32 %1884, 1
  %1887 = mul i32 %1884, %1886
  %1888 = urem i32 %1887, 2
  %1889 = icmp eq i32 %1888, 0
  %1890 = icmp slt i32 %1885, 10
  %1891 = or i1 %1889, %1890
  br i1 %1891, label %originalBB502, label %originalBB502alteredBB

originalBB502:                                    ; preds = %1883, %originalBB502alteredBB
  %1892 = load i32, i32* @x.63
  %1893 = load i32, i32* @y.64
  %1894 = sub i32 %1892, 1
  %1895 = mul i32 %1892, %1894
  %1896 = urem i32 %1895, 2
  %1897 = icmp eq i32 %1896, 0
  %1898 = icmp slt i32 %1893, 10
  %1899 = or i1 %1897, %1898
  br i1 %1899, label %originalBBpart2504, label %originalBB502alteredBB

originalBBpart2504:                               ; preds = %originalBB502
  br label %1900, !dbg !4324

1900:                                             ; preds = %originalBBpart2504
  %1901 = load i32, i32* @x.63
  %1902 = load i32, i32* @y.64
  %1903 = sub i32 %1901, 1
  %1904 = mul i32 %1901, %1903
  %1905 = urem i32 %1904, 2
  %1906 = icmp eq i32 %1905, 0
  %1907 = icmp slt i32 %1902, 10
  %1908 = or i1 %1906, %1907
  br i1 %1908, label %originalBB506, label %originalBB506alteredBB

originalBB506:                                    ; preds = %1900, %originalBB506alteredBB
  %1909 = load i64, i64* %29, align 8, !dbg !4325
  %1910 = load i64, i64* %20, align 8, !dbg !4325
  %1911 = icmp ult i64 %1909, %1910, !dbg !4325
  %1912 = load i32, i32* @x.63
  %1913 = load i32, i32* @y.64
  %1914 = sub i32 %1912, 1
  %1915 = mul i32 %1912, %1914
  %1916 = urem i32 %1915, 2
  %1917 = icmp eq i32 %1916, 0
  %1918 = icmp slt i32 %1913, 10
  %1919 = or i1 %1917, %1918
  br i1 %1919, label %originalBBpart2508, label %originalBB506alteredBB

originalBBpart2508:                               ; preds = %originalBB506
  br i1 %1911, label %1920, label %1940, !dbg !4328

1920:                                             ; preds = %originalBBpart2508
  %1921 = load i32, i32* @x.63
  %1922 = load i32, i32* @y.64
  %1923 = sub i32 %1921, 1
  %1924 = mul i32 %1921, %1923
  %1925 = urem i32 %1924, 2
  %1926 = icmp eq i32 %1925, 0
  %1927 = icmp slt i32 %1922, 10
  %1928 = or i1 %1926, %1927
  br i1 %1928, label %originalBB510, label %originalBB510alteredBB

originalBB510:                                    ; preds = %1920, %originalBB510alteredBB
  %1929 = load i8*, i8** %19, align 8, !dbg !4325
  %1930 = load i64, i64* %29, align 8, !dbg !4325
  %1931 = getelementptr inbounds i8, i8* %1929, i64 %1930, !dbg !4325
  store i8 34, i8* %1931, align 1, !dbg !4325
  %1932 = load i32, i32* @x.63
  %1933 = load i32, i32* @y.64
  %1934 = sub i32 %1932, 1
  %1935 = mul i32 %1932, %1934
  %1936 = urem i32 %1935, 2
  %1937 = icmp eq i32 %1936, 0
  %1938 = icmp slt i32 %1933, 10
  %1939 = or i1 %1937, %1938
  br i1 %1939, label %originalBBpart2512, label %originalBB510alteredBB

originalBBpart2512:                               ; preds = %originalBB510
  br label %1940, !dbg !4325

1940:                                             ; preds = %originalBBpart2512, %originalBBpart2508
  %1941 = load i32, i32* @x.63
  %1942 = load i32, i32* @y.64
  %1943 = sub i32 %1941, 1
  %1944 = mul i32 %1941, %1943
  %1945 = urem i32 %1944, 2
  %1946 = icmp eq i32 %1945, 0
  %1947 = icmp slt i32 %1942, 10
  %1948 = or i1 %1946, %1947
  br i1 %1948, label %originalBB514, label %originalBB514alteredBB

originalBB514:                                    ; preds = %1940, %originalBB514alteredBB
  %1949 = load i64, i64* %29, align 8, !dbg !4328
  %1950 = add i64 %1949, 1, !dbg !4328
  store i64 %1950, i64* %29, align 8, !dbg !4328
  %1951 = load i32, i32* @x.63
  %1952 = load i32, i32* @y.64
  %1953 = sub i32 %1951, 1
  %1954 = mul i32 %1951, %1953
  %1955 = urem i32 %1954, 2
  %1956 = icmp eq i32 %1955, 0
  %1957 = icmp slt i32 %1952, 10
  %1958 = or i1 %1956, %1957
  br i1 %1958, label %originalBBpart2524, label %originalBB514alteredBB

originalBBpart2524:                               ; preds = %originalBB514
  br label %1959, !dbg !4328

1959:                                             ; preds = %originalBBpart2524
  %1960 = load i32, i32* @x.63
  %1961 = load i32, i32* @y.64
  %1962 = sub i32 %1960, 1
  %1963 = mul i32 %1960, %1962
  %1964 = urem i32 %1963, 2
  %1965 = icmp eq i32 %1964, 0
  %1966 = icmp slt i32 %1961, 10
  %1967 = or i1 %1965, %1966
  br i1 %1967, label %originalBB526, label %originalBB526alteredBB

originalBB526:                                    ; preds = %1959, %originalBB526alteredBB
  %1968 = load i32, i32* @x.63
  %1969 = load i32, i32* @y.64
  %1970 = sub i32 %1968, 1
  %1971 = mul i32 %1968, %1970
  %1972 = urem i32 %1971, 2
  %1973 = icmp eq i32 %1972, 0
  %1974 = icmp slt i32 %1969, 10
  %1975 = or i1 %1973, %1974
  br i1 %1975, label %originalBBpart2528, label %originalBB526alteredBB

originalBBpart2528:                               ; preds = %originalBB526
  br label %1976, !dbg !4329

1976:                                             ; preds = %originalBBpart2528
  %1977 = load i32, i32* @x.63
  %1978 = load i32, i32* @y.64
  %1979 = sub i32 %1977, 1
  %1980 = mul i32 %1977, %1979
  %1981 = urem i32 %1980, 2
  %1982 = icmp eq i32 %1981, 0
  %1983 = icmp slt i32 %1978, 10
  %1984 = or i1 %1982, %1983
  br i1 %1984, label %originalBB530, label %originalBB530alteredBB

originalBB530:                                    ; preds = %1976, %originalBB530alteredBB
  %1985 = load i64, i64* %29, align 8, !dbg !4330
  %1986 = load i64, i64* %20, align 8, !dbg !4330
  %1987 = icmp ult i64 %1985, %1986, !dbg !4330
  %1988 = load i32, i32* @x.63
  %1989 = load i32, i32* @y.64
  %1990 = sub i32 %1988, 1
  %1991 = mul i32 %1988, %1990
  %1992 = urem i32 %1991, 2
  %1993 = icmp eq i32 %1992, 0
  %1994 = icmp slt i32 %1989, 10
  %1995 = or i1 %1993, %1994
  br i1 %1995, label %originalBBpart2532, label %originalBB530alteredBB

originalBBpart2532:                               ; preds = %originalBB530
  br i1 %1987, label %1996, label %2016, !dbg !4333

1996:                                             ; preds = %originalBBpart2532
  %1997 = load i32, i32* @x.63
  %1998 = load i32, i32* @y.64
  %1999 = sub i32 %1997, 1
  %2000 = mul i32 %1997, %1999
  %2001 = urem i32 %2000, 2
  %2002 = icmp eq i32 %2001, 0
  %2003 = icmp slt i32 %1998, 10
  %2004 = or i1 %2002, %2003
  br i1 %2004, label %originalBB534, label %originalBB534alteredBB

originalBB534:                                    ; preds = %1996, %originalBB534alteredBB
  %2005 = load i8*, i8** %19, align 8, !dbg !4330
  %2006 = load i64, i64* %29, align 8, !dbg !4330
  %2007 = getelementptr inbounds i8, i8* %2005, i64 %2006, !dbg !4330
  store i8 34, i8* %2007, align 1, !dbg !4330
  %2008 = load i32, i32* @x.63
  %2009 = load i32, i32* @y.64
  %2010 = sub i32 %2008, 1
  %2011 = mul i32 %2008, %2010
  %2012 = urem i32 %2011, 2
  %2013 = icmp eq i32 %2012, 0
  %2014 = icmp slt i32 %2009, 10
  %2015 = or i1 %2013, %2014
  br i1 %2015, label %originalBBpart2536, label %originalBB534alteredBB

originalBBpart2536:                               ; preds = %originalBB534
  br label %2016, !dbg !4330

2016:                                             ; preds = %originalBBpart2536, %originalBBpart2532
  %2017 = load i32, i32* @x.63
  %2018 = load i32, i32* @y.64
  %2019 = sub i32 %2017, 1
  %2020 = mul i32 %2017, %2019
  %2021 = urem i32 %2020, 2
  %2022 = icmp eq i32 %2021, 0
  %2023 = icmp slt i32 %2018, 10
  %2024 = or i1 %2022, %2023
  br i1 %2024, label %originalBB538, label %originalBB538alteredBB

originalBB538:                                    ; preds = %2016, %originalBB538alteredBB
  %2025 = load i64, i64* %29, align 8, !dbg !4333
  %2026 = add i64 %2025, 1, !dbg !4333
  store i64 %2026, i64* %29, align 8, !dbg !4333
  %2027 = load i32, i32* @x.63
  %2028 = load i32, i32* @y.64
  %2029 = sub i32 %2027, 1
  %2030 = mul i32 %2027, %2029
  %2031 = urem i32 %2030, 2
  %2032 = icmp eq i32 %2031, 0
  %2033 = icmp slt i32 %2028, 10
  %2034 = or i1 %2032, %2033
  br i1 %2034, label %originalBBpart2544, label %originalBB538alteredBB

originalBBpart2544:                               ; preds = %originalBB538
  br label %2035, !dbg !4333

2035:                                             ; preds = %originalBBpart2544
  %2036 = load i32, i32* @x.63
  %2037 = load i32, i32* @y.64
  %2038 = sub i32 %2036, 1
  %2039 = mul i32 %2036, %2038
  %2040 = urem i32 %2039, 2
  %2041 = icmp eq i32 %2040, 0
  %2042 = icmp slt i32 %2037, 10
  %2043 = or i1 %2041, %2042
  br i1 %2043, label %originalBB546, label %originalBB546alteredBB

originalBB546:                                    ; preds = %2035, %originalBB546alteredBB
  %2044 = load i32, i32* @x.63
  %2045 = load i32, i32* @y.64
  %2046 = sub i32 %2044, 1
  %2047 = mul i32 %2044, %2046
  %2048 = urem i32 %2047, 2
  %2049 = icmp eq i32 %2048, 0
  %2050 = icmp slt i32 %2045, 10
  %2051 = or i1 %2049, %2050
  br i1 %2051, label %originalBBpart2548, label %originalBB546alteredBB

originalBBpart2548:                               ; preds = %originalBB546
  br label %2052, !dbg !4334

2052:                                             ; preds = %originalBBpart2548
  %2053 = load i32, i32* @x.63
  %2054 = load i32, i32* @y.64
  %2055 = sub i32 %2053, 1
  %2056 = mul i32 %2053, %2055
  %2057 = urem i32 %2056, 2
  %2058 = icmp eq i32 %2057, 0
  %2059 = icmp slt i32 %2054, 10
  %2060 = or i1 %2058, %2059
  br i1 %2060, label %originalBB550, label %originalBB550alteredBB

originalBB550:                                    ; preds = %2052, %originalBB550alteredBB
  %2061 = load i64, i64* %29, align 8, !dbg !4335
  %2062 = load i64, i64* %20, align 8, !dbg !4335
  %2063 = icmp ult i64 %2061, %2062, !dbg !4335
  %2064 = load i32, i32* @x.63
  %2065 = load i32, i32* @y.64
  %2066 = sub i32 %2064, 1
  %2067 = mul i32 %2064, %2066
  %2068 = urem i32 %2067, 2
  %2069 = icmp eq i32 %2068, 0
  %2070 = icmp slt i32 %2065, 10
  %2071 = or i1 %2069, %2070
  br i1 %2071, label %originalBBpart2552, label %originalBB550alteredBB

originalBBpart2552:                               ; preds = %originalBB550
  br i1 %2063, label %2072, label %2092, !dbg !4338

2072:                                             ; preds = %originalBBpart2552
  %2073 = load i32, i32* @x.63
  %2074 = load i32, i32* @y.64
  %2075 = sub i32 %2073, 1
  %2076 = mul i32 %2073, %2075
  %2077 = urem i32 %2076, 2
  %2078 = icmp eq i32 %2077, 0
  %2079 = icmp slt i32 %2074, 10
  %2080 = or i1 %2078, %2079
  br i1 %2080, label %originalBB554, label %originalBB554alteredBB

originalBB554:                                    ; preds = %2072, %originalBB554alteredBB
  %2081 = load i8*, i8** %19, align 8, !dbg !4335
  %2082 = load i64, i64* %29, align 8, !dbg !4335
  %2083 = getelementptr inbounds i8, i8* %2081, i64 %2082, !dbg !4335
  store i8 63, i8* %2083, align 1, !dbg !4335
  %2084 = load i32, i32* @x.63
  %2085 = load i32, i32* @y.64
  %2086 = sub i32 %2084, 1
  %2087 = mul i32 %2084, %2086
  %2088 = urem i32 %2087, 2
  %2089 = icmp eq i32 %2088, 0
  %2090 = icmp slt i32 %2085, 10
  %2091 = or i1 %2089, %2090
  br i1 %2091, label %originalBBpart2556, label %originalBB554alteredBB

originalBBpart2556:                               ; preds = %originalBB554
  br label %2092, !dbg !4335

2092:                                             ; preds = %originalBBpart2556, %originalBBpart2552
  %2093 = load i32, i32* @x.63
  %2094 = load i32, i32* @y.64
  %2095 = sub i32 %2093, 1
  %2096 = mul i32 %2093, %2095
  %2097 = urem i32 %2096, 2
  %2098 = icmp eq i32 %2097, 0
  %2099 = icmp slt i32 %2094, 10
  %2100 = or i1 %2098, %2099
  br i1 %2100, label %originalBB558, label %originalBB558alteredBB

originalBB558:                                    ; preds = %2092, %originalBB558alteredBB
  %2101 = load i64, i64* %29, align 8, !dbg !4338
  %2102 = add i64 %2101, 1, !dbg !4338
  store i64 %2102, i64* %29, align 8, !dbg !4338
  %2103 = load i32, i32* @x.63
  %2104 = load i32, i32* @y.64
  %2105 = sub i32 %2103, 1
  %2106 = mul i32 %2103, %2105
  %2107 = urem i32 %2106, 2
  %2108 = icmp eq i32 %2107, 0
  %2109 = icmp slt i32 %2104, 10
  %2110 = or i1 %2108, %2109
  br i1 %2110, label %originalBBpart2564, label %originalBB558alteredBB

originalBBpart2564:                               ; preds = %originalBB558
  br label %2111, !dbg !4338

2111:                                             ; preds = %originalBBpart2564
  br label %2129, !dbg !4339

2112:                                             ; preds = %originalBBpart2454
  %2113 = load i32, i32* @x.63
  %2114 = load i32, i32* @y.64
  %2115 = sub i32 %2113, 1
  %2116 = mul i32 %2113, %2115
  %2117 = urem i32 %2116, 2
  %2118 = icmp eq i32 %2117, 0
  %2119 = icmp slt i32 %2114, 10
  %2120 = or i1 %2118, %2119
  br i1 %2120, label %originalBB566, label %originalBB566alteredBB

originalBB566:                                    ; preds = %2112, %originalBB566alteredBB
  %2121 = load i32, i32* @x.63
  %2122 = load i32, i32* @y.64
  %2123 = sub i32 %2121, 1
  %2124 = mul i32 %2121, %2123
  %2125 = urem i32 %2124, 2
  %2126 = icmp eq i32 %2125, 0
  %2127 = icmp slt i32 %2122, 10
  %2128 = or i1 %2126, %2127
  br i1 %2128, label %originalBBpart2568, label %originalBB566alteredBB

originalBBpart2568:                               ; preds = %originalBB566
  br label %2129, !dbg !4340

2129:                                             ; preds = %originalBBpart2568, %2111
  %2130 = load i32, i32* @x.63
  %2131 = load i32, i32* @y.64
  %2132 = sub i32 %2130, 1
  %2133 = mul i32 %2130, %2132
  %2134 = urem i32 %2133, 2
  %2135 = icmp eq i32 %2134, 0
  %2136 = icmp slt i32 %2131, 10
  %2137 = or i1 %2135, %2136
  br i1 %2137, label %originalBB570, label %originalBB570alteredBB

originalBB570:                                    ; preds = %2129, %originalBB570alteredBB
  %2138 = load i32, i32* @x.63
  %2139 = load i32, i32* @y.64
  %2140 = sub i32 %2138, 1
  %2141 = mul i32 %2138, %2140
  %2142 = urem i32 %2141, 2
  %2143 = icmp eq i32 %2142, 0
  %2144 = icmp slt i32 %2139, 10
  %2145 = or i1 %2143, %2144
  br i1 %2145, label %originalBBpart2572, label %originalBB570alteredBB

originalBBpart2572:                               ; preds = %originalBB570
  br label %2146, !dbg !4341

2146:                                             ; preds = %originalBBpart2572, %1765, %1760, %originalBBpart2443
  br label %2148, !dbg !4342

2147:                                             ; preds = %originalBBpart2419
  br label %2148, !dbg !4343

2148:                                             ; preds = %2147, %2146, %originalBBpart2431
  %2149 = load i32, i32* @x.63
  %2150 = load i32, i32* @y.64
  %2151 = sub i32 %2149, 1
  %2152 = mul i32 %2149, %2151
  %2153 = urem i32 %2152, 2
  %2154 = icmp eq i32 %2153, 0
  %2155 = icmp slt i32 %2150, 10
  %2156 = or i1 %2154, %2155
  br i1 %2156, label %originalBB574, label %originalBB574alteredBB

originalBB574:                                    ; preds = %2148, %originalBB574alteredBB
  %2157 = load i32, i32* @x.63
  %2158 = load i32, i32* @y.64
  %2159 = sub i32 %2157, 1
  %2160 = mul i32 %2157, %2159
  %2161 = urem i32 %2160, 2
  %2162 = icmp eq i32 %2161, 0
  %2163 = icmp slt i32 %2158, 10
  %2164 = or i1 %2162, %2163
  br i1 %2164, label %originalBBpart2576, label %originalBB574alteredBB

originalBBpart2576:                               ; preds = %originalBB574
  br label %4729, !dbg !4344

2165:                                             ; preds = %originalBBpart2199
  %2166 = load i32, i32* @x.63
  %2167 = load i32, i32* @y.64
  %2168 = sub i32 %2166, 1
  %2169 = mul i32 %2166, %2168
  %2170 = urem i32 %2169, 2
  %2171 = icmp eq i32 %2170, 0
  %2172 = icmp slt i32 %2167, 10
  %2173 = or i1 %2171, %2172
  br i1 %2173, label %originalBB578, label %originalBB578alteredBB

originalBB578:                                    ; preds = %2165, %originalBB578alteredBB
  store i8 97, i8* %40, align 1, !dbg !4345
  %2174 = load i32, i32* @x.63
  %2175 = load i32, i32* @y.64
  %2176 = sub i32 %2174, 1
  %2177 = mul i32 %2174, %2176
  %2178 = urem i32 %2177, 2
  %2179 = icmp eq i32 %2178, 0
  %2180 = icmp slt i32 %2175, 10
  %2181 = or i1 %2179, %2180
  br i1 %2181, label %originalBBpart2580, label %originalBB578alteredBB

originalBBpart2580:                               ; preds = %originalBB578
  br label %2456, !dbg !4346

2182:                                             ; preds = %originalBBpart2199
  %2183 = load i32, i32* @x.63
  %2184 = load i32, i32* @y.64
  %2185 = sub i32 %2183, 1
  %2186 = mul i32 %2183, %2185
  %2187 = urem i32 %2186, 2
  %2188 = icmp eq i32 %2187, 0
  %2189 = icmp slt i32 %2184, 10
  %2190 = or i1 %2188, %2189
  br i1 %2190, label %originalBB582, label %originalBB582alteredBB

originalBB582:                                    ; preds = %2182, %originalBB582alteredBB
  store i8 98, i8* %40, align 1, !dbg !4347
  %2191 = load i32, i32* @x.63
  %2192 = load i32, i32* @y.64
  %2193 = sub i32 %2191, 1
  %2194 = mul i32 %2191, %2193
  %2195 = urem i32 %2194, 2
  %2196 = icmp eq i32 %2195, 0
  %2197 = icmp slt i32 %2192, 10
  %2198 = or i1 %2196, %2197
  br i1 %2198, label %originalBBpart2584, label %originalBB582alteredBB

originalBBpart2584:                               ; preds = %originalBB582
  br label %2456, !dbg !4348

2199:                                             ; preds = %originalBBpart2199
  %2200 = load i32, i32* @x.63
  %2201 = load i32, i32* @y.64
  %2202 = sub i32 %2200, 1
  %2203 = mul i32 %2200, %2202
  %2204 = urem i32 %2203, 2
  %2205 = icmp eq i32 %2204, 0
  %2206 = icmp slt i32 %2201, 10
  %2207 = or i1 %2205, %2206
  br i1 %2207, label %originalBB586, label %originalBB586alteredBB

originalBB586:                                    ; preds = %2199, %originalBB586alteredBB
  store i8 102, i8* %40, align 1, !dbg !4349
  %2208 = load i32, i32* @x.63
  %2209 = load i32, i32* @y.64
  %2210 = sub i32 %2208, 1
  %2211 = mul i32 %2208, %2210
  %2212 = urem i32 %2211, 2
  %2213 = icmp eq i32 %2212, 0
  %2214 = icmp slt i32 %2209, 10
  %2215 = or i1 %2213, %2214
  br i1 %2215, label %originalBBpart2588, label %originalBB586alteredBB

originalBBpart2588:                               ; preds = %originalBB586
  br label %2456, !dbg !4350

2216:                                             ; preds = %originalBBpart2199
  store i8 110, i8* %40, align 1, !dbg !4351
  br label %2384, !dbg !4352

2217:                                             ; preds = %originalBBpart2199
  store i8 114, i8* %40, align 1, !dbg !4353
  br label %2384, !dbg !4354

2218:                                             ; preds = %originalBBpart2199
  %2219 = load i32, i32* @x.63
  %2220 = load i32, i32* @y.64
  %2221 = sub i32 %2219, 1
  %2222 = mul i32 %2219, %2221
  %2223 = urem i32 %2222, 2
  %2224 = icmp eq i32 %2223, 0
  %2225 = icmp slt i32 %2220, 10
  %2226 = or i1 %2224, %2225
  br i1 %2226, label %originalBB590, label %originalBB590alteredBB

originalBB590:                                    ; preds = %2218, %originalBB590alteredBB
  store i8 116, i8* %40, align 1, !dbg !4355
  %2227 = load i32, i32* @x.63
  %2228 = load i32, i32* @y.64
  %2229 = sub i32 %2227, 1
  %2230 = mul i32 %2227, %2229
  %2231 = urem i32 %2230, 2
  %2232 = icmp eq i32 %2231, 0
  %2233 = icmp slt i32 %2228, 10
  %2234 = or i1 %2232, %2233
  br i1 %2234, label %originalBBpart2592, label %originalBB590alteredBB

originalBBpart2592:                               ; preds = %originalBB590
  br label %2384, !dbg !4356

2235:                                             ; preds = %originalBBpart2199
  %2236 = load i32, i32* @x.63
  %2237 = load i32, i32* @y.64
  %2238 = sub i32 %2236, 1
  %2239 = mul i32 %2236, %2238
  %2240 = urem i32 %2239, 2
  %2241 = icmp eq i32 %2240, 0
  %2242 = icmp slt i32 %2237, 10
  %2243 = or i1 %2241, %2242
  br i1 %2243, label %originalBB594, label %originalBB594alteredBB

originalBB594:                                    ; preds = %2235, %originalBB594alteredBB
  store i8 118, i8* %40, align 1, !dbg !4357
  %2244 = load i32, i32* @x.63
  %2245 = load i32, i32* @y.64
  %2246 = sub i32 %2244, 1
  %2247 = mul i32 %2244, %2246
  %2248 = urem i32 %2247, 2
  %2249 = icmp eq i32 %2248, 0
  %2250 = icmp slt i32 %2245, 10
  %2251 = or i1 %2249, %2250
  br i1 %2251, label %originalBBpart2596, label %originalBB594alteredBB

originalBBpart2596:                               ; preds = %originalBB594
  br label %2456, !dbg !4358

2252:                                             ; preds = %originalBBpart2199
  %2253 = load i8, i8* %39, align 1, !dbg !4359
  store i8 %2253, i8* %40, align 1, !dbg !4360
  %2254 = load i32, i32* %23, align 4, !dbg !4361
  %2255 = icmp eq i32 %2254, 2, !dbg !4363
  br i1 %2255, label %2256, label %2309, !dbg !4364

2256:                                             ; preds = %2252
  %2257 = load i32, i32* @x.63
  %2258 = load i32, i32* @y.64
  %2259 = sub i32 %2257, 1
  %2260 = mul i32 %2257, %2259
  %2261 = urem i32 %2260, 2
  %2262 = icmp eq i32 %2261, 0
  %2263 = icmp slt i32 %2258, 10
  %2264 = or i1 %2262, %2263
  br i1 %2264, label %originalBB598, label %originalBB598alteredBB

originalBB598:                                    ; preds = %2256, %originalBB598alteredBB
  %2265 = load i8, i8* %35, align 1, !dbg !4365
  %2266 = trunc i8 %2265 to i1, !dbg !4365
  %2267 = load i32, i32* @x.63
  %2268 = load i32, i32* @y.64
  %2269 = sub i32 %2267, 1
  %2270 = mul i32 %2267, %2269
  %2271 = urem i32 %2270, 2
  %2272 = icmp eq i32 %2271, 0
  %2273 = icmp slt i32 %2268, 10
  %2274 = or i1 %2272, %2273
  br i1 %2274, label %originalBBpart2600, label %originalBB598alteredBB

originalBBpart2600:                               ; preds = %originalBB598
  br i1 %2266, label %2275, label %2292, !dbg !4368

2275:                                             ; preds = %originalBBpart2600
  %2276 = load i32, i32* @x.63
  %2277 = load i32, i32* @y.64
  %2278 = sub i32 %2276, 1
  %2279 = mul i32 %2276, %2278
  %2280 = urem i32 %2279, 2
  %2281 = icmp eq i32 %2280, 0
  %2282 = icmp slt i32 %2277, 10
  %2283 = or i1 %2281, %2282
  br i1 %2283, label %originalBB602, label %originalBB602alteredBB

originalBB602:                                    ; preds = %2275, %originalBB602alteredBB
  %2284 = load i32, i32* @x.63
  %2285 = load i32, i32* @y.64
  %2286 = sub i32 %2284, 1
  %2287 = mul i32 %2284, %2286
  %2288 = urem i32 %2287, 2
  %2289 = icmp eq i32 %2288, 0
  %2290 = icmp slt i32 %2285, 10
  %2291 = or i1 %2289, %2290
  br i1 %2291, label %originalBBpart2604, label %originalBB602alteredBB

originalBBpart2604:                               ; preds = %originalBB602
  br label %5982, !dbg !4369

2292:                                             ; preds = %originalBBpart2600
  %2293 = load i32, i32* @x.63
  %2294 = load i32, i32* @y.64
  %2295 = sub i32 %2293, 1
  %2296 = mul i32 %2293, %2295
  %2297 = urem i32 %2296, 2
  %2298 = icmp eq i32 %2297, 0
  %2299 = icmp slt i32 %2294, 10
  %2300 = or i1 %2298, %2299
  br i1 %2300, label %originalBB606, label %originalBB606alteredBB

originalBB606:                                    ; preds = %2292, %originalBB606alteredBB
  %2301 = load i32, i32* @x.63
  %2302 = load i32, i32* @y.64
  %2303 = sub i32 %2301, 1
  %2304 = mul i32 %2301, %2303
  %2305 = urem i32 %2304, 2
  %2306 = icmp eq i32 %2305, 0
  %2307 = icmp slt i32 %2302, 10
  %2308 = or i1 %2306, %2307
  br i1 %2308, label %originalBBpart2608, label %originalBB606alteredBB

originalBBpart2608:                               ; preds = %originalBB606
  br label %5238, !dbg !4370

2309:                                             ; preds = %2252
  %2310 = load i32, i32* @x.63
  %2311 = load i32, i32* @y.64
  %2312 = sub i32 %2310, 1
  %2313 = mul i32 %2310, %2312
  %2314 = urem i32 %2313, 2
  %2315 = icmp eq i32 %2314, 0
  %2316 = icmp slt i32 %2311, 10
  %2317 = or i1 %2315, %2316
  br i1 %2317, label %originalBB610, label %originalBB610alteredBB

originalBB610:                                    ; preds = %2309, %originalBB610alteredBB
  %2318 = load i8, i8* %33, align 1, !dbg !4371
  %2319 = trunc i8 %2318 to i1, !dbg !4371
  %2320 = load i32, i32* @x.63
  %2321 = load i32, i32* @y.64
  %2322 = sub i32 %2320, 1
  %2323 = mul i32 %2320, %2322
  %2324 = urem i32 %2323, 2
  %2325 = icmp eq i32 %2324, 0
  %2326 = icmp slt i32 %2321, 10
  %2327 = or i1 %2325, %2326
  br i1 %2327, label %originalBBpart2612, label %originalBB610alteredBB

originalBBpart2612:                               ; preds = %originalBB610
  br i1 %2319, label %2328, label %2367, !dbg !4373

2328:                                             ; preds = %originalBBpart2612
  %2329 = load i32, i32* @x.63
  %2330 = load i32, i32* @y.64
  %2331 = sub i32 %2329, 1
  %2332 = mul i32 %2329, %2331
  %2333 = urem i32 %2332, 2
  %2334 = icmp eq i32 %2333, 0
  %2335 = icmp slt i32 %2330, 10
  %2336 = or i1 %2334, %2335
  br i1 %2336, label %originalBB614, label %originalBB614alteredBB

originalBB614:                                    ; preds = %2328, %originalBB614alteredBB
  %2337 = load i8, i8* %35, align 1, !dbg !4374
  %2338 = trunc i8 %2337 to i1, !dbg !4374
  %2339 = load i32, i32* @x.63
  %2340 = load i32, i32* @y.64
  %2341 = sub i32 %2339, 1
  %2342 = mul i32 %2339, %2341
  %2343 = urem i32 %2342, 2
  %2344 = icmp eq i32 %2343, 0
  %2345 = icmp slt i32 %2340, 10
  %2346 = or i1 %2344, %2345
  br i1 %2346, label %originalBBpart2616, label %originalBB614alteredBB

originalBBpart2616:                               ; preds = %originalBB614
  br i1 %2338, label %2347, label %2367, !dbg !4375

2347:                                             ; preds = %originalBBpart2616
  %2348 = load i64, i64* %32, align 8, !dbg !4376
  %2349 = icmp ne i64 %2348, 0, !dbg !4376
  br i1 %2349, label %2350, label %2367, !dbg !4377

2350:                                             ; preds = %2347
  %2351 = load i32, i32* @x.63
  %2352 = load i32, i32* @y.64
  %2353 = sub i32 %2351, 1
  %2354 = mul i32 %2351, %2353
  %2355 = urem i32 %2354, 2
  %2356 = icmp eq i32 %2355, 0
  %2357 = icmp slt i32 %2352, 10
  %2358 = or i1 %2356, %2357
  br i1 %2358, label %originalBB618, label %originalBB618alteredBB

originalBB618:                                    ; preds = %2350, %originalBB618alteredBB
  %2359 = load i32, i32* @x.63
  %2360 = load i32, i32* @y.64
  %2361 = sub i32 %2359, 1
  %2362 = mul i32 %2359, %2361
  %2363 = urem i32 %2362, 2
  %2364 = icmp eq i32 %2363, 0
  %2365 = icmp slt i32 %2360, 10
  %2366 = or i1 %2364, %2365
  br i1 %2366, label %originalBBpart2620, label %originalBB618alteredBB

originalBBpart2620:                               ; preds = %originalBB618
  br label %5238, !dbg !4378

2367:                                             ; preds = %2347, %originalBBpart2616, %originalBBpart2612
  %2368 = load i32, i32* @x.63
  %2369 = load i32, i32* @y.64
  %2370 = sub i32 %2368, 1
  %2371 = mul i32 %2368, %2370
  %2372 = urem i32 %2371, 2
  %2373 = icmp eq i32 %2372, 0
  %2374 = icmp slt i32 %2369, 10
  %2375 = or i1 %2373, %2374
  br i1 %2375, label %originalBB622, label %originalBB622alteredBB

originalBB622:                                    ; preds = %2367, %originalBB622alteredBB
  %2376 = load i32, i32* @x.63
  %2377 = load i32, i32* @y.64
  %2378 = sub i32 %2376, 1
  %2379 = mul i32 %2376, %2378
  %2380 = urem i32 %2379, 2
  %2381 = icmp eq i32 %2380, 0
  %2382 = icmp slt i32 %2377, 10
  %2383 = or i1 %2381, %2382
  br i1 %2383, label %originalBBpart2624, label %originalBB622alteredBB

originalBBpart2624:                               ; preds = %originalBB622
  br label %2384, !dbg !4376

2384:                                             ; preds = %originalBBpart2624, %originalBBpart2592, %2217, %2216
  call void @llvm.dbg.label(metadata !4379), !dbg !4380
  %2385 = load i32, i32* @x.63
  %2386 = load i32, i32* @y.64
  %2387 = sub i32 %2385, 1
  %2388 = mul i32 %2385, %2387
  %2389 = urem i32 %2388, 2
  %2390 = icmp eq i32 %2389, 0
  %2391 = icmp slt i32 %2386, 10
  %2392 = or i1 %2390, %2391
  br i1 %2392, label %originalBB626, label %originalBB626alteredBB

originalBB626:                                    ; preds = %2384, %originalBB626alteredBB
  %2393 = load i32, i32* %23, align 4, !dbg !4381
  %2394 = icmp eq i32 %2393, 2, !dbg !4383
  %2395 = load i32, i32* @x.63
  %2396 = load i32, i32* @y.64
  %2397 = sub i32 %2395, 1
  %2398 = mul i32 %2395, %2397
  %2399 = urem i32 %2398, 2
  %2400 = icmp eq i32 %2399, 0
  %2401 = icmp slt i32 %2396, 10
  %2402 = or i1 %2400, %2401
  br i1 %2402, label %originalBBpart2628, label %originalBB626alteredBB

originalBBpart2628:                               ; preds = %originalBB626
  br i1 %2394, label %2403, label %2439, !dbg !4384

2403:                                             ; preds = %originalBBpart2628
  %2404 = load i32, i32* @x.63
  %2405 = load i32, i32* @y.64
  %2406 = sub i32 %2404, 1
  %2407 = mul i32 %2404, %2406
  %2408 = urem i32 %2407, 2
  %2409 = icmp eq i32 %2408, 0
  %2410 = icmp slt i32 %2405, 10
  %2411 = or i1 %2409, %2410
  br i1 %2411, label %originalBB630, label %originalBB630alteredBB

originalBB630:                                    ; preds = %2403, %originalBB630alteredBB
  %2412 = load i8, i8* %35, align 1, !dbg !4385
  %2413 = trunc i8 %2412 to i1, !dbg !4385
  %2414 = load i32, i32* @x.63
  %2415 = load i32, i32* @y.64
  %2416 = sub i32 %2414, 1
  %2417 = mul i32 %2414, %2416
  %2418 = urem i32 %2417, 2
  %2419 = icmp eq i32 %2418, 0
  %2420 = icmp slt i32 %2415, 10
  %2421 = or i1 %2419, %2420
  br i1 %2421, label %originalBBpart2632, label %originalBB630alteredBB

originalBBpart2632:                               ; preds = %originalBB630
  br i1 %2413, label %2422, label %2439, !dbg !4386

2422:                                             ; preds = %originalBBpart2632
  %2423 = load i32, i32* @x.63
  %2424 = load i32, i32* @y.64
  %2425 = sub i32 %2423, 1
  %2426 = mul i32 %2423, %2425
  %2427 = urem i32 %2426, 2
  %2428 = icmp eq i32 %2427, 0
  %2429 = icmp slt i32 %2424, 10
  %2430 = or i1 %2428, %2429
  br i1 %2430, label %originalBB634, label %originalBB634alteredBB

originalBB634:                                    ; preds = %2422, %originalBB634alteredBB
  %2431 = load i32, i32* @x.63
  %2432 = load i32, i32* @y.64
  %2433 = sub i32 %2431, 1
  %2434 = mul i32 %2431, %2433
  %2435 = urem i32 %2434, 2
  %2436 = icmp eq i32 %2435, 0
  %2437 = icmp slt i32 %2432, 10
  %2438 = or i1 %2436, %2437
  br i1 %2438, label %originalBBpart2636, label %originalBB634alteredBB

originalBBpart2636:                               ; preds = %originalBB634
  br label %5982, !dbg !4387

2439:                                             ; preds = %originalBBpart2632, %originalBBpart2628
  %2440 = load i32, i32* @x.63
  %2441 = load i32, i32* @y.64
  %2442 = sub i32 %2440, 1
  %2443 = mul i32 %2440, %2442
  %2444 = urem i32 %2443, 2
  %2445 = icmp eq i32 %2444, 0
  %2446 = icmp slt i32 %2441, 10
  %2447 = or i1 %2445, %2446
  br i1 %2447, label %originalBB638, label %originalBB638alteredBB

originalBB638:                                    ; preds = %2439, %originalBB638alteredBB
  %2448 = load i32, i32* @x.63
  %2449 = load i32, i32* @y.64
  %2450 = sub i32 %2448, 1
  %2451 = mul i32 %2448, %2450
  %2452 = urem i32 %2451, 2
  %2453 = icmp eq i32 %2452, 0
  %2454 = icmp slt i32 %2449, 10
  %2455 = or i1 %2453, %2454
  br i1 %2455, label %originalBBpart2640, label %originalBB638alteredBB

originalBBpart2640:                               ; preds = %originalBB638
  br label %2456, !dbg !4385

2456:                                             ; preds = %originalBBpart2640, %originalBBpart2596, %originalBBpart2588, %originalBBpart2584, %originalBBpart2580
  call void @llvm.dbg.label(metadata !4388), !dbg !4389
  %2457 = load i32, i32* @x.63
  %2458 = load i32, i32* @y.64
  %2459 = sub i32 %2457, 1
  %2460 = mul i32 %2457, %2459
  %2461 = urem i32 %2460, 2
  %2462 = icmp eq i32 %2461, 0
  %2463 = icmp slt i32 %2458, 10
  %2464 = or i1 %2462, %2463
  br i1 %2464, label %originalBB642, label %originalBB642alteredBB

originalBB642:                                    ; preds = %2456, %originalBB642alteredBB
  %2465 = load i8, i8* %33, align 1, !dbg !4390
  %2466 = trunc i8 %2465 to i1, !dbg !4390
  %2467 = load i32, i32* @x.63
  %2468 = load i32, i32* @y.64
  %2469 = sub i32 %2467, 1
  %2470 = mul i32 %2467, %2469
  %2471 = urem i32 %2470, 2
  %2472 = icmp eq i32 %2471, 0
  %2473 = icmp slt i32 %2468, 10
  %2474 = or i1 %2472, %2473
  br i1 %2474, label %originalBBpart2644, label %originalBB642alteredBB

originalBBpart2644:                               ; preds = %originalBB642
  br i1 %2466, label %2475, label %2493, !dbg !4392

2475:                                             ; preds = %originalBBpart2644
  %2476 = load i32, i32* @x.63
  %2477 = load i32, i32* @y.64
  %2478 = sub i32 %2476, 1
  %2479 = mul i32 %2476, %2478
  %2480 = urem i32 %2479, 2
  %2481 = icmp eq i32 %2480, 0
  %2482 = icmp slt i32 %2477, 10
  %2483 = or i1 %2481, %2482
  br i1 %2483, label %originalBB646, label %originalBB646alteredBB

originalBB646:                                    ; preds = %2475, %originalBB646alteredBB
  %2484 = load i8, i8* %40, align 1, !dbg !4393
  store i8 %2484, i8* %39, align 1, !dbg !4395
  %2485 = load i32, i32* @x.63
  %2486 = load i32, i32* @y.64
  %2487 = sub i32 %2485, 1
  %2488 = mul i32 %2485, %2487
  %2489 = urem i32 %2488, 2
  %2490 = icmp eq i32 %2489, 0
  %2491 = icmp slt i32 %2486, 10
  %2492 = or i1 %2490, %2491
  br i1 %2492, label %originalBBpart2648, label %originalBB646alteredBB

originalBBpart2648:                               ; preds = %originalBB646
  br label %4872, !dbg !4396

2493:                                             ; preds = %originalBBpart2644
  %2494 = load i32, i32* @x.63
  %2495 = load i32, i32* @y.64
  %2496 = sub i32 %2494, 1
  %2497 = mul i32 %2494, %2496
  %2498 = urem i32 %2497, 2
  %2499 = icmp eq i32 %2498, 0
  %2500 = icmp slt i32 %2495, 10
  %2501 = or i1 %2499, %2500
  br i1 %2501, label %originalBB650, label %originalBB650alteredBB

originalBB650:                                    ; preds = %2493, %originalBB650alteredBB
  %2502 = load i32, i32* @x.63
  %2503 = load i32, i32* @y.64
  %2504 = sub i32 %2502, 1
  %2505 = mul i32 %2502, %2504
  %2506 = urem i32 %2505, 2
  %2507 = icmp eq i32 %2506, 0
  %2508 = icmp slt i32 %2503, 10
  %2509 = or i1 %2507, %2508
  br i1 %2509, label %originalBBpart2652, label %originalBB650alteredBB

originalBBpart2652:                               ; preds = %originalBB650
  br label %4729, !dbg !4397

2510:                                             ; preds = %originalBBpart2199, %originalBBpart2199
  %2511 = load i32, i32* @x.63
  %2512 = load i32, i32* @y.64
  %2513 = sub i32 %2511, 1
  %2514 = mul i32 %2511, %2513
  %2515 = urem i32 %2514, 2
  %2516 = icmp eq i32 %2515, 0
  %2517 = icmp slt i32 %2512, 10
  %2518 = or i1 %2516, %2517
  br i1 %2518, label %originalBB654, label %originalBB654alteredBB

originalBB654:                                    ; preds = %2510, %originalBB654alteredBB
  %2519 = load i64, i64* %22, align 8, !dbg !4398
  %2520 = icmp eq i64 %2519, -1, !dbg !4400
  %2521 = load i32, i32* @x.63
  %2522 = load i32, i32* @y.64
  %2523 = sub i32 %2521, 1
  %2524 = mul i32 %2521, %2523
  %2525 = urem i32 %2524, 2
  %2526 = icmp eq i32 %2525, 0
  %2527 = icmp slt i32 %2522, 10
  %2528 = or i1 %2526, %2527
  br i1 %2528, label %originalBBpart2656, label %originalBB654alteredBB

originalBBpart2656:                               ; preds = %originalBB654
  br i1 %2520, label %2529, label %2551, !dbg !4401

2529:                                             ; preds = %originalBBpart2656
  %2530 = load i32, i32* @x.63
  %2531 = load i32, i32* @y.64
  %2532 = sub i32 %2530, 1
  %2533 = mul i32 %2530, %2532
  %2534 = urem i32 %2533, 2
  %2535 = icmp eq i32 %2534, 0
  %2536 = icmp slt i32 %2531, 10
  %2537 = or i1 %2535, %2536
  br i1 %2537, label %originalBB658, label %originalBB658alteredBB

originalBB658:                                    ; preds = %2529, %originalBB658alteredBB
  %2538 = load i8*, i8** %21, align 8, !dbg !4402
  %2539 = getelementptr inbounds i8, i8* %2538, i64 1, !dbg !4402
  %2540 = load i8, i8* %2539, align 1, !dbg !4402
  %2541 = sext i8 %2540 to i32, !dbg !4402
  %2542 = icmp eq i32 %2541, 0, !dbg !4403
  %2543 = load i32, i32* @x.63
  %2544 = load i32, i32* @y.64
  %2545 = sub i32 %2543, 1
  %2546 = mul i32 %2543, %2545
  %2547 = urem i32 %2546, 2
  %2548 = icmp eq i32 %2547, 0
  %2549 = icmp slt i32 %2544, 10
  %2550 = or i1 %2548, %2549
  br i1 %2550, label %originalBBpart2660, label %originalBB658alteredBB

originalBBpart2660:                               ; preds = %originalBB658
  br i1 %2542, label %2587, label %2570, !dbg !4398

2551:                                             ; preds = %originalBBpart2656
  %2552 = load i32, i32* @x.63
  %2553 = load i32, i32* @y.64
  %2554 = sub i32 %2552, 1
  %2555 = mul i32 %2552, %2554
  %2556 = urem i32 %2555, 2
  %2557 = icmp eq i32 %2556, 0
  %2558 = icmp slt i32 %2553, 10
  %2559 = or i1 %2557, %2558
  br i1 %2559, label %originalBB662, label %originalBB662alteredBB

originalBB662:                                    ; preds = %2551, %originalBB662alteredBB
  %2560 = load i64, i64* %22, align 8, !dbg !4404
  %2561 = icmp eq i64 %2560, 1, !dbg !4405
  %2562 = load i32, i32* @x.63
  %2563 = load i32, i32* @y.64
  %2564 = sub i32 %2562, 1
  %2565 = mul i32 %2562, %2564
  %2566 = urem i32 %2565, 2
  %2567 = icmp eq i32 %2566, 0
  %2568 = icmp slt i32 %2563, 10
  %2569 = or i1 %2567, %2568
  br i1 %2569, label %originalBBpart2664, label %originalBB662alteredBB

originalBBpart2664:                               ; preds = %originalBB662
  br i1 %2561, label %2587, label %2570, !dbg !4401

2570:                                             ; preds = %originalBBpart2664, %originalBBpart2660
  %2571 = load i32, i32* @x.63
  %2572 = load i32, i32* @y.64
  %2573 = sub i32 %2571, 1
  %2574 = mul i32 %2571, %2573
  %2575 = urem i32 %2574, 2
  %2576 = icmp eq i32 %2575, 0
  %2577 = icmp slt i32 %2572, 10
  %2578 = or i1 %2576, %2577
  br i1 %2578, label %originalBB666, label %originalBB666alteredBB

originalBB666:                                    ; preds = %2570, %originalBB666alteredBB
  %2579 = load i32, i32* @x.63
  %2580 = load i32, i32* @y.64
  %2581 = sub i32 %2579, 1
  %2582 = mul i32 %2579, %2581
  %2583 = urem i32 %2582, 2
  %2584 = icmp eq i32 %2583, 0
  %2585 = icmp slt i32 %2580, 10
  %2586 = or i1 %2584, %2585
  br i1 %2586, label %originalBBpart2668, label %originalBB666alteredBB

originalBBpart2668:                               ; preds = %originalBB666
  br label %4729, !dbg !4406

2587:                                             ; preds = %originalBBpart2664, %originalBBpart2660
  %2588 = load i32, i32* @x.63
  %2589 = load i32, i32* @y.64
  %2590 = sub i32 %2588, 1
  %2591 = mul i32 %2588, %2590
  %2592 = urem i32 %2591, 2
  %2593 = icmp eq i32 %2592, 0
  %2594 = icmp slt i32 %2589, 10
  %2595 = or i1 %2593, %2594
  br i1 %2595, label %originalBB670, label %originalBB670alteredBB

originalBB670:                                    ; preds = %2587, %originalBB670alteredBB
  %2596 = load i32, i32* @x.63
  %2597 = load i32, i32* @y.64
  %2598 = sub i32 %2596, 1
  %2599 = mul i32 %2596, %2598
  %2600 = urem i32 %2599, 2
  %2601 = icmp eq i32 %2600, 0
  %2602 = icmp slt i32 %2597, 10
  %2603 = or i1 %2601, %2602
  br i1 %2603, label %originalBBpart2672, label %originalBB670alteredBB

originalBBpart2672:                               ; preds = %originalBB670
  br label %2604, !dbg !4407

2604:                                             ; preds = %originalBBpart2672, %originalBBpart2199, %originalBBpart2199
  %2605 = load i64, i64* %28, align 8, !dbg !4408
  %2606 = icmp ne i64 %2605, 0, !dbg !4410
  br i1 %2606, label %2607, label %2624, !dbg !4411

2607:                                             ; preds = %2604
  %2608 = load i32, i32* @x.63
  %2609 = load i32, i32* @y.64
  %2610 = sub i32 %2608, 1
  %2611 = mul i32 %2608, %2610
  %2612 = urem i32 %2611, 2
  %2613 = icmp eq i32 %2612, 0
  %2614 = icmp slt i32 %2609, 10
  %2615 = or i1 %2613, %2614
  br i1 %2615, label %originalBB674, label %originalBB674alteredBB

originalBB674:                                    ; preds = %2607, %originalBB674alteredBB
  %2616 = load i32, i32* @x.63
  %2617 = load i32, i32* @y.64
  %2618 = sub i32 %2616, 1
  %2619 = mul i32 %2616, %2618
  %2620 = urem i32 %2619, 2
  %2621 = icmp eq i32 %2620, 0
  %2622 = icmp slt i32 %2617, 10
  %2623 = or i1 %2621, %2622
  br i1 %2623, label %originalBBpart2676, label %originalBB674alteredBB

originalBBpart2676:                               ; preds = %originalBB674
  br label %4729, !dbg !4412

2624:                                             ; preds = %2604
  %2625 = load i32, i32* @x.63
  %2626 = load i32, i32* @y.64
  %2627 = sub i32 %2625, 1
  %2628 = mul i32 %2625, %2627
  %2629 = urem i32 %2628, 2
  %2630 = icmp eq i32 %2629, 0
  %2631 = icmp slt i32 %2626, 10
  %2632 = or i1 %2630, %2631
  br i1 %2632, label %originalBB678, label %originalBB678alteredBB

originalBB678:                                    ; preds = %2624, %originalBB678alteredBB
  %2633 = load i32, i32* @x.63
  %2634 = load i32, i32* @y.64
  %2635 = sub i32 %2633, 1
  %2636 = mul i32 %2633, %2635
  %2637 = urem i32 %2636, 2
  %2638 = icmp eq i32 %2637, 0
  %2639 = icmp slt i32 %2634, 10
  %2640 = or i1 %2638, %2639
  br i1 %2640, label %originalBBpart2680, label %originalBB678alteredBB

originalBBpart2680:                               ; preds = %originalBB678
  br label %2641, !dbg !4413

2641:                                             ; preds = %originalBBpart2680, %originalBBpart2199
  store i8 1, i8* %43, align 1, !dbg !4414
  br label %2642, !dbg !4415

2642:                                             ; preds = %2641, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199
  %2643 = load i32, i32* @x.63
  %2644 = load i32, i32* @y.64
  %2645 = sub i32 %2643, 1
  %2646 = mul i32 %2643, %2645
  %2647 = urem i32 %2646, 2
  %2648 = icmp eq i32 %2647, 0
  %2649 = icmp slt i32 %2644, 10
  %2650 = or i1 %2648, %2649
  br i1 %2650, label %originalBB682, label %originalBB682alteredBB

originalBB682:                                    ; preds = %2642, %originalBB682alteredBB
  %2651 = load i32, i32* %23, align 4, !dbg !4416
  %2652 = icmp eq i32 %2651, 2, !dbg !4418
  %2653 = load i32, i32* @x.63
  %2654 = load i32, i32* @y.64
  %2655 = sub i32 %2653, 1
  %2656 = mul i32 %2653, %2655
  %2657 = urem i32 %2656, 2
  %2658 = icmp eq i32 %2657, 0
  %2659 = icmp slt i32 %2654, 10
  %2660 = or i1 %2658, %2659
  br i1 %2660, label %originalBBpart2684, label %originalBB682alteredBB

originalBBpart2684:                               ; preds = %originalBB682
  br i1 %2652, label %2661, label %2697, !dbg !4419

2661:                                             ; preds = %originalBBpart2684
  %2662 = load i32, i32* @x.63
  %2663 = load i32, i32* @y.64
  %2664 = sub i32 %2662, 1
  %2665 = mul i32 %2662, %2664
  %2666 = urem i32 %2665, 2
  %2667 = icmp eq i32 %2666, 0
  %2668 = icmp slt i32 %2663, 10
  %2669 = or i1 %2667, %2668
  br i1 %2669, label %originalBB686, label %originalBB686alteredBB

originalBB686:                                    ; preds = %2661, %originalBB686alteredBB
  %2670 = load i8, i8* %35, align 1, !dbg !4420
  %2671 = trunc i8 %2670 to i1, !dbg !4420
  %2672 = load i32, i32* @x.63
  %2673 = load i32, i32* @y.64
  %2674 = sub i32 %2672, 1
  %2675 = mul i32 %2672, %2674
  %2676 = urem i32 %2675, 2
  %2677 = icmp eq i32 %2676, 0
  %2678 = icmp slt i32 %2673, 10
  %2679 = or i1 %2677, %2678
  br i1 %2679, label %originalBBpart2688, label %originalBB686alteredBB

originalBBpart2688:                               ; preds = %originalBB686
  br i1 %2671, label %2680, label %2697, !dbg !4421

2680:                                             ; preds = %originalBBpart2688
  %2681 = load i32, i32* @x.63
  %2682 = load i32, i32* @y.64
  %2683 = sub i32 %2681, 1
  %2684 = mul i32 %2681, %2683
  %2685 = urem i32 %2684, 2
  %2686 = icmp eq i32 %2685, 0
  %2687 = icmp slt i32 %2682, 10
  %2688 = or i1 %2686, %2687
  br i1 %2688, label %originalBB690, label %originalBB690alteredBB

originalBB690:                                    ; preds = %2680, %originalBB690alteredBB
  %2689 = load i32, i32* @x.63
  %2690 = load i32, i32* @y.64
  %2691 = sub i32 %2689, 1
  %2692 = mul i32 %2689, %2691
  %2693 = urem i32 %2692, 2
  %2694 = icmp eq i32 %2693, 0
  %2695 = icmp slt i32 %2690, 10
  %2696 = or i1 %2694, %2695
  br i1 %2696, label %originalBBpart2692, label %originalBB690alteredBB

originalBBpart2692:                               ; preds = %originalBB690
  br label %5982, !dbg !4422

2697:                                             ; preds = %originalBBpart2688, %originalBBpart2684
  %2698 = load i32, i32* @x.63
  %2699 = load i32, i32* @y.64
  %2700 = sub i32 %2698, 1
  %2701 = mul i32 %2698, %2700
  %2702 = urem i32 %2701, 2
  %2703 = icmp eq i32 %2702, 0
  %2704 = icmp slt i32 %2699, 10
  %2705 = or i1 %2703, %2704
  br i1 %2705, label %originalBB694, label %originalBB694alteredBB

originalBB694:                                    ; preds = %2697, %originalBB694alteredBB
  %2706 = load i32, i32* @x.63
  %2707 = load i32, i32* @y.64
  %2708 = sub i32 %2706, 1
  %2709 = mul i32 %2706, %2708
  %2710 = urem i32 %2709, 2
  %2711 = icmp eq i32 %2710, 0
  %2712 = icmp slt i32 %2707, 10
  %2713 = or i1 %2711, %2712
  br i1 %2713, label %originalBBpart2696, label %originalBB694alteredBB

originalBBpart2696:                               ; preds = %originalBB694
  br label %4729, !dbg !4423

2714:                                             ; preds = %originalBBpart2199
  %2715 = load i32, i32* @x.63
  %2716 = load i32, i32* @y.64
  %2717 = sub i32 %2715, 1
  %2718 = mul i32 %2715, %2717
  %2719 = urem i32 %2718, 2
  %2720 = icmp eq i32 %2719, 0
  %2721 = icmp slt i32 %2716, 10
  %2722 = or i1 %2720, %2721
  br i1 %2722, label %originalBB698, label %originalBB698alteredBB

originalBB698:                                    ; preds = %2714, %originalBB698alteredBB
  store i8 1, i8* %37, align 1, !dbg !4424
  store i8 1, i8* %43, align 1, !dbg !4425
  %2723 = load i32, i32* %23, align 4, !dbg !4426
  %2724 = icmp eq i32 %2723, 2, !dbg !4428
  %2725 = load i32, i32* @x.63
  %2726 = load i32, i32* @y.64
  %2727 = sub i32 %2725, 1
  %2728 = mul i32 %2725, %2727
  %2729 = urem i32 %2728, 2
  %2730 = icmp eq i32 %2729, 0
  %2731 = icmp slt i32 %2726, 10
  %2732 = or i1 %2730, %2731
  br i1 %2732, label %originalBBpart2700, label %originalBB698alteredBB

originalBBpart2700:                               ; preds = %originalBB698
  br i1 %2724, label %2733, label %3006, !dbg !4429

2733:                                             ; preds = %originalBBpart2700
  %2734 = load i8, i8* %35, align 1, !dbg !4430
  %2735 = trunc i8 %2734 to i1, !dbg !4430
  br i1 %2735, label %2736, label %2753, !dbg !4433

2736:                                             ; preds = %2733
  %2737 = load i32, i32* @x.63
  %2738 = load i32, i32* @y.64
  %2739 = sub i32 %2737, 1
  %2740 = mul i32 %2737, %2739
  %2741 = urem i32 %2740, 2
  %2742 = icmp eq i32 %2741, 0
  %2743 = icmp slt i32 %2738, 10
  %2744 = or i1 %2742, %2743
  br i1 %2744, label %originalBB702, label %originalBB702alteredBB

originalBB702:                                    ; preds = %2736, %originalBB702alteredBB
  %2745 = load i32, i32* @x.63
  %2746 = load i32, i32* @y.64
  %2747 = sub i32 %2745, 1
  %2748 = mul i32 %2745, %2747
  %2749 = urem i32 %2748, 2
  %2750 = icmp eq i32 %2749, 0
  %2751 = icmp slt i32 %2746, 10
  %2752 = or i1 %2750, %2751
  br i1 %2752, label %originalBBpart2704, label %originalBB702alteredBB

originalBBpart2704:                               ; preds = %originalBB702
  br label %5982, !dbg !4434

2753:                                             ; preds = %2733
  %2754 = load i32, i32* @x.63
  %2755 = load i32, i32* @y.64
  %2756 = sub i32 %2754, 1
  %2757 = mul i32 %2754, %2756
  %2758 = urem i32 %2757, 2
  %2759 = icmp eq i32 %2758, 0
  %2760 = icmp slt i32 %2755, 10
  %2761 = or i1 %2759, %2760
  br i1 %2761, label %originalBB706, label %originalBB706alteredBB

originalBB706:                                    ; preds = %2753, %originalBB706alteredBB
  %2762 = load i64, i64* %20, align 8, !dbg !4435
  %2763 = icmp ne i64 %2762, 0, !dbg !4435
  %2764 = load i32, i32* @x.63
  %2765 = load i32, i32* @y.64
  %2766 = sub i32 %2764, 1
  %2767 = mul i32 %2764, %2766
  %2768 = urem i32 %2767, 2
  %2769 = icmp eq i32 %2768, 0
  %2770 = icmp slt i32 %2765, 10
  %2771 = or i1 %2769, %2770
  br i1 %2771, label %originalBBpart2708, label %originalBB706alteredBB

originalBBpart2708:                               ; preds = %originalBB706
  br i1 %2763, label %2772, label %2793, !dbg !4437

2772:                                             ; preds = %originalBBpart2708
  %2773 = load i32, i32* @x.63
  %2774 = load i32, i32* @y.64
  %2775 = sub i32 %2773, 1
  %2776 = mul i32 %2773, %2775
  %2777 = urem i32 %2776, 2
  %2778 = icmp eq i32 %2777, 0
  %2779 = icmp slt i32 %2774, 10
  %2780 = or i1 %2778, %2779
  br i1 %2780, label %originalBB710, label %originalBB710alteredBB

originalBB710:                                    ; preds = %2772, %originalBB710alteredBB
  %2781 = load i64, i64* %30, align 8, !dbg !4438
  %2782 = icmp ne i64 %2781, 0, !dbg !4438
  %2783 = load i32, i32* @x.63
  %2784 = load i32, i32* @y.64
  %2785 = sub i32 %2783, 1
  %2786 = mul i32 %2783, %2785
  %2787 = urem i32 %2786, 2
  %2788 = icmp eq i32 %2787, 0
  %2789 = icmp slt i32 %2784, 10
  %2790 = or i1 %2788, %2789
  br i1 %2790, label %originalBBpart2712, label %originalBB710alteredBB

originalBBpart2712:                               ; preds = %originalBB710
  br i1 %2782, label %2793, label %2791, !dbg !4439

2791:                                             ; preds = %originalBBpart2712
  %2792 = load i64, i64* %20, align 8, !dbg !4440
  store i64 %2792, i64* %30, align 8, !dbg !4442
  store i64 0, i64* %20, align 8, !dbg !4443
  br label %2793, !dbg !4444

2793:                                             ; preds = %2791, %originalBBpart2712, %originalBBpart2708
  %2794 = load i32, i32* @x.63
  %2795 = load i32, i32* @y.64
  %2796 = sub i32 %2794, 1
  %2797 = mul i32 %2794, %2796
  %2798 = urem i32 %2797, 2
  %2799 = icmp eq i32 %2798, 0
  %2800 = icmp slt i32 %2795, 10
  %2801 = or i1 %2799, %2800
  br i1 %2801, label %originalBB714, label %originalBB714alteredBB

originalBB714:                                    ; preds = %2793, %originalBB714alteredBB
  %2802 = load i32, i32* @x.63
  %2803 = load i32, i32* @y.64
  %2804 = sub i32 %2802, 1
  %2805 = mul i32 %2802, %2804
  %2806 = urem i32 %2805, 2
  %2807 = icmp eq i32 %2806, 0
  %2808 = icmp slt i32 %2803, 10
  %2809 = or i1 %2807, %2808
  br i1 %2809, label %originalBBpart2716, label %originalBB714alteredBB

originalBBpart2716:                               ; preds = %originalBB714
  br label %2810, !dbg !4445

2810:                                             ; preds = %originalBBpart2716
  %2811 = load i32, i32* @x.63
  %2812 = load i32, i32* @y.64
  %2813 = sub i32 %2811, 1
  %2814 = mul i32 %2811, %2813
  %2815 = urem i32 %2814, 2
  %2816 = icmp eq i32 %2815, 0
  %2817 = icmp slt i32 %2812, 10
  %2818 = or i1 %2816, %2817
  br i1 %2818, label %originalBB718, label %originalBB718alteredBB

originalBB718:                                    ; preds = %2810, %originalBB718alteredBB
  %2819 = load i64, i64* %29, align 8, !dbg !4446
  %2820 = load i64, i64* %20, align 8, !dbg !4446
  %2821 = icmp ult i64 %2819, %2820, !dbg !4446
  %2822 = load i32, i32* @x.63
  %2823 = load i32, i32* @y.64
  %2824 = sub i32 %2822, 1
  %2825 = mul i32 %2822, %2824
  %2826 = urem i32 %2825, 2
  %2827 = icmp eq i32 %2826, 0
  %2828 = icmp slt i32 %2823, 10
  %2829 = or i1 %2827, %2828
  br i1 %2829, label %originalBBpart2720, label %originalBB718alteredBB

originalBBpart2720:                               ; preds = %originalBB718
  br i1 %2821, label %2830, label %2850, !dbg !4449

2830:                                             ; preds = %originalBBpart2720
  %2831 = load i32, i32* @x.63
  %2832 = load i32, i32* @y.64
  %2833 = sub i32 %2831, 1
  %2834 = mul i32 %2831, %2833
  %2835 = urem i32 %2834, 2
  %2836 = icmp eq i32 %2835, 0
  %2837 = icmp slt i32 %2832, 10
  %2838 = or i1 %2836, %2837
  br i1 %2838, label %originalBB722, label %originalBB722alteredBB

originalBB722:                                    ; preds = %2830, %originalBB722alteredBB
  %2839 = load i8*, i8** %19, align 8, !dbg !4446
  %2840 = load i64, i64* %29, align 8, !dbg !4446
  %2841 = getelementptr inbounds i8, i8* %2839, i64 %2840, !dbg !4446
  store i8 39, i8* %2841, align 1, !dbg !4446
  %2842 = load i32, i32* @x.63
  %2843 = load i32, i32* @y.64
  %2844 = sub i32 %2842, 1
  %2845 = mul i32 %2842, %2844
  %2846 = urem i32 %2845, 2
  %2847 = icmp eq i32 %2846, 0
  %2848 = icmp slt i32 %2843, 10
  %2849 = or i1 %2847, %2848
  br i1 %2849, label %originalBBpart2724, label %originalBB722alteredBB

originalBBpart2724:                               ; preds = %originalBB722
  br label %2850, !dbg !4446

2850:                                             ; preds = %originalBBpart2724, %originalBBpart2720
  %2851 = load i32, i32* @x.63
  %2852 = load i32, i32* @y.64
  %2853 = sub i32 %2851, 1
  %2854 = mul i32 %2851, %2853
  %2855 = urem i32 %2854, 2
  %2856 = icmp eq i32 %2855, 0
  %2857 = icmp slt i32 %2852, 10
  %2858 = or i1 %2856, %2857
  br i1 %2858, label %originalBB726, label %originalBB726alteredBB

originalBB726:                                    ; preds = %2850, %originalBB726alteredBB
  %2859 = load i64, i64* %29, align 8, !dbg !4449
  %2860 = add i64 %2859, 1, !dbg !4449
  store i64 %2860, i64* %29, align 8, !dbg !4449
  %2861 = load i32, i32* @x.63
  %2862 = load i32, i32* @y.64
  %2863 = sub i32 %2861, 1
  %2864 = mul i32 %2861, %2863
  %2865 = urem i32 %2864, 2
  %2866 = icmp eq i32 %2865, 0
  %2867 = icmp slt i32 %2862, 10
  %2868 = or i1 %2866, %2867
  br i1 %2868, label %originalBBpart2731, label %originalBB726alteredBB

originalBBpart2731:                               ; preds = %originalBB726
  br label %2869, !dbg !4449

2869:                                             ; preds = %originalBBpart2731
  %2870 = load i32, i32* @x.63
  %2871 = load i32, i32* @y.64
  %2872 = sub i32 %2870, 1
  %2873 = mul i32 %2870, %2872
  %2874 = urem i32 %2873, 2
  %2875 = icmp eq i32 %2874, 0
  %2876 = icmp slt i32 %2871, 10
  %2877 = or i1 %2875, %2876
  br i1 %2877, label %originalBB733, label %originalBB733alteredBB

originalBB733:                                    ; preds = %2869, %originalBB733alteredBB
  %2878 = load i32, i32* @x.63
  %2879 = load i32, i32* @y.64
  %2880 = sub i32 %2878, 1
  %2881 = mul i32 %2878, %2880
  %2882 = urem i32 %2881, 2
  %2883 = icmp eq i32 %2882, 0
  %2884 = icmp slt i32 %2879, 10
  %2885 = or i1 %2883, %2884
  br i1 %2885, label %originalBBpart2735, label %originalBB733alteredBB

originalBBpart2735:                               ; preds = %originalBB733
  br label %2886, !dbg !4450

2886:                                             ; preds = %originalBBpart2735
  %2887 = load i32, i32* @x.63
  %2888 = load i32, i32* @y.64
  %2889 = sub i32 %2887, 1
  %2890 = mul i32 %2887, %2889
  %2891 = urem i32 %2890, 2
  %2892 = icmp eq i32 %2891, 0
  %2893 = icmp slt i32 %2888, 10
  %2894 = or i1 %2892, %2893
  br i1 %2894, label %originalBB737, label %originalBB737alteredBB

originalBB737:                                    ; preds = %2886, %originalBB737alteredBB
  %2895 = load i64, i64* %29, align 8, !dbg !4451
  %2896 = load i64, i64* %20, align 8, !dbg !4451
  %2897 = icmp ult i64 %2895, %2896, !dbg !4451
  %2898 = load i32, i32* @x.63
  %2899 = load i32, i32* @y.64
  %2900 = sub i32 %2898, 1
  %2901 = mul i32 %2898, %2900
  %2902 = urem i32 %2901, 2
  %2903 = icmp eq i32 %2902, 0
  %2904 = icmp slt i32 %2899, 10
  %2905 = or i1 %2903, %2904
  br i1 %2905, label %originalBBpart2739, label %originalBB737alteredBB

originalBBpart2739:                               ; preds = %originalBB737
  br i1 %2897, label %2906, label %2926, !dbg !4454

2906:                                             ; preds = %originalBBpart2739
  %2907 = load i32, i32* @x.63
  %2908 = load i32, i32* @y.64
  %2909 = sub i32 %2907, 1
  %2910 = mul i32 %2907, %2909
  %2911 = urem i32 %2910, 2
  %2912 = icmp eq i32 %2911, 0
  %2913 = icmp slt i32 %2908, 10
  %2914 = or i1 %2912, %2913
  br i1 %2914, label %originalBB741, label %originalBB741alteredBB

originalBB741:                                    ; preds = %2906, %originalBB741alteredBB
  %2915 = load i8*, i8** %19, align 8, !dbg !4451
  %2916 = load i64, i64* %29, align 8, !dbg !4451
  %2917 = getelementptr inbounds i8, i8* %2915, i64 %2916, !dbg !4451
  store i8 92, i8* %2917, align 1, !dbg !4451
  %2918 = load i32, i32* @x.63
  %2919 = load i32, i32* @y.64
  %2920 = sub i32 %2918, 1
  %2921 = mul i32 %2918, %2920
  %2922 = urem i32 %2921, 2
  %2923 = icmp eq i32 %2922, 0
  %2924 = icmp slt i32 %2919, 10
  %2925 = or i1 %2923, %2924
  br i1 %2925, label %originalBBpart2743, label %originalBB741alteredBB

originalBBpart2743:                               ; preds = %originalBB741
  br label %2926, !dbg !4451

2926:                                             ; preds = %originalBBpart2743, %originalBBpart2739
  %2927 = load i32, i32* @x.63
  %2928 = load i32, i32* @y.64
  %2929 = sub i32 %2927, 1
  %2930 = mul i32 %2927, %2929
  %2931 = urem i32 %2930, 2
  %2932 = icmp eq i32 %2931, 0
  %2933 = icmp slt i32 %2928, 10
  %2934 = or i1 %2932, %2933
  br i1 %2934, label %originalBB745, label %originalBB745alteredBB

originalBB745:                                    ; preds = %2926, %originalBB745alteredBB
  %2935 = load i64, i64* %29, align 8, !dbg !4454
  %2936 = add i64 %2935, 1, !dbg !4454
  store i64 %2936, i64* %29, align 8, !dbg !4454
  %2937 = load i32, i32* @x.63
  %2938 = load i32, i32* @y.64
  %2939 = sub i32 %2937, 1
  %2940 = mul i32 %2937, %2939
  %2941 = urem i32 %2940, 2
  %2942 = icmp eq i32 %2941, 0
  %2943 = icmp slt i32 %2938, 10
  %2944 = or i1 %2942, %2943
  br i1 %2944, label %originalBBpart2757, label %originalBB745alteredBB

originalBBpart2757:                               ; preds = %originalBB745
  br label %2945, !dbg !4454

2945:                                             ; preds = %originalBBpart2757
  br label %2946, !dbg !4455

2946:                                             ; preds = %2945
  %2947 = load i32, i32* @x.63
  %2948 = load i32, i32* @y.64
  %2949 = sub i32 %2947, 1
  %2950 = mul i32 %2947, %2949
  %2951 = urem i32 %2950, 2
  %2952 = icmp eq i32 %2951, 0
  %2953 = icmp slt i32 %2948, 10
  %2954 = or i1 %2952, %2953
  br i1 %2954, label %originalBB759, label %originalBB759alteredBB

originalBB759:                                    ; preds = %2946, %originalBB759alteredBB
  %2955 = load i64, i64* %29, align 8, !dbg !4456
  %2956 = load i64, i64* %20, align 8, !dbg !4456
  %2957 = icmp ult i64 %2955, %2956, !dbg !4456
  %2958 = load i32, i32* @x.63
  %2959 = load i32, i32* @y.64
  %2960 = sub i32 %2958, 1
  %2961 = mul i32 %2958, %2960
  %2962 = urem i32 %2961, 2
  %2963 = icmp eq i32 %2962, 0
  %2964 = icmp slt i32 %2959, 10
  %2965 = or i1 %2963, %2964
  br i1 %2965, label %originalBBpart2761, label %originalBB759alteredBB

originalBBpart2761:                               ; preds = %originalBB759
  br i1 %2957, label %2966, label %2986, !dbg !4459

2966:                                             ; preds = %originalBBpart2761
  %2967 = load i32, i32* @x.63
  %2968 = load i32, i32* @y.64
  %2969 = sub i32 %2967, 1
  %2970 = mul i32 %2967, %2969
  %2971 = urem i32 %2970, 2
  %2972 = icmp eq i32 %2971, 0
  %2973 = icmp slt i32 %2968, 10
  %2974 = or i1 %2972, %2973
  br i1 %2974, label %originalBB763, label %originalBB763alteredBB

originalBB763:                                    ; preds = %2966, %originalBB763alteredBB
  %2975 = load i8*, i8** %19, align 8, !dbg !4456
  %2976 = load i64, i64* %29, align 8, !dbg !4456
  %2977 = getelementptr inbounds i8, i8* %2975, i64 %2976, !dbg !4456
  store i8 39, i8* %2977, align 1, !dbg !4456
  %2978 = load i32, i32* @x.63
  %2979 = load i32, i32* @y.64
  %2980 = sub i32 %2978, 1
  %2981 = mul i32 %2978, %2980
  %2982 = urem i32 %2981, 2
  %2983 = icmp eq i32 %2982, 0
  %2984 = icmp slt i32 %2979, 10
  %2985 = or i1 %2983, %2984
  br i1 %2985, label %originalBBpart2765, label %originalBB763alteredBB

originalBBpart2765:                               ; preds = %originalBB763
  br label %2986, !dbg !4456

2986:                                             ; preds = %originalBBpart2765, %originalBBpart2761
  %2987 = load i64, i64* %29, align 8, !dbg !4459
  %2988 = add i64 %2987, 1, !dbg !4459
  store i64 %2988, i64* %29, align 8, !dbg !4459
  br label %2989, !dbg !4459

2989:                                             ; preds = %2986
  %2990 = load i32, i32* @x.63
  %2991 = load i32, i32* @y.64
  %2992 = sub i32 %2990, 1
  %2993 = mul i32 %2990, %2992
  %2994 = urem i32 %2993, 2
  %2995 = icmp eq i32 %2994, 0
  %2996 = icmp slt i32 %2991, 10
  %2997 = or i1 %2995, %2996
  br i1 %2997, label %originalBB767, label %originalBB767alteredBB

originalBB767:                                    ; preds = %2989, %originalBB767alteredBB
  store i8 0, i8* %36, align 1, !dbg !4460
  %2998 = load i32, i32* @x.63
  %2999 = load i32, i32* @y.64
  %3000 = sub i32 %2998, 1
  %3001 = mul i32 %2998, %3000
  %3002 = urem i32 %3001, 2
  %3003 = icmp eq i32 %3002, 0
  %3004 = icmp slt i32 %2999, 10
  %3005 = or i1 %3003, %3004
  br i1 %3005, label %originalBBpart2769, label %originalBB767alteredBB

originalBBpart2769:                               ; preds = %originalBB767
  br label %3006, !dbg !4461

3006:                                             ; preds = %originalBBpart2769, %originalBBpart2700
  %3007 = load i32, i32* @x.63
  %3008 = load i32, i32* @y.64
  %3009 = sub i32 %3007, 1
  %3010 = mul i32 %3007, %3009
  %3011 = urem i32 %3010, 2
  %3012 = icmp eq i32 %3011, 0
  %3013 = icmp slt i32 %3008, 10
  %3014 = or i1 %3012, %3013
  br i1 %3014, label %originalBB771, label %originalBB771alteredBB

originalBB771:                                    ; preds = %3006, %originalBB771alteredBB
  %3015 = load i32, i32* @x.63
  %3016 = load i32, i32* @y.64
  %3017 = sub i32 %3015, 1
  %3018 = mul i32 %3015, %3017
  %3019 = urem i32 %3018, 2
  %3020 = icmp eq i32 %3019, 0
  %3021 = icmp slt i32 %3016, 10
  %3022 = or i1 %3020, %3021
  br i1 %3022, label %originalBBpart2773, label %originalBB771alteredBB

originalBBpart2773:                               ; preds = %originalBB771
  br label %4729, !dbg !4462

3023:                                             ; preds = %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199, %originalBBpart2199
  %3024 = load i32, i32* @x.63
  %3025 = load i32, i32* @y.64
  %3026 = sub i32 %3024, 1
  %3027 = mul i32 %3024, %3026
  %3028 = urem i32 %3027, 2
  %3029 = icmp eq i32 %3028, 0
  %3030 = icmp slt i32 %3025, 10
  %3031 = or i1 %3029, %3030
  br i1 %3031, label %originalBB775, label %originalBB775alteredBB

originalBB775:                                    ; preds = %3023, %originalBB775alteredBB
  store i8 1, i8* %43, align 1, !dbg !4463
  %3032 = load i32, i32* @x.63
  %3033 = load i32, i32* @y.64
  %3034 = sub i32 %3032, 1
  %3035 = mul i32 %3032, %3034
  %3036 = urem i32 %3035, 2
  %3037 = icmp eq i32 %3036, 0
  %3038 = icmp slt i32 %3033, 10
  %3039 = or i1 %3037, %3038
  br i1 %3039, label %originalBBpart2777, label %originalBB775alteredBB

originalBBpart2777:                               ; preds = %originalBB775
  br label %4729, !dbg !4464

3040:                                             ; preds = %originalBBpart2199
  call void @llvm.dbg.declare(metadata i64* %44, metadata !4465, metadata !DIExpression()), !dbg !4467
  call void @llvm.dbg.declare(metadata i8* %45, metadata !4468, metadata !DIExpression()), !dbg !4469
  %3041 = load i32, i32* @x.63
  %3042 = load i32, i32* @y.64
  %3043 = sub i32 %3041, 1
  %3044 = mul i32 %3041, %3043
  %3045 = urem i32 %3044, 2
  %3046 = icmp eq i32 %3045, 0
  %3047 = icmp slt i32 %3042, 10
  %3048 = or i1 %3046, %3047
  br i1 %3048, label %originalBB779, label %originalBB779alteredBB

originalBB779:                                    ; preds = %3040, %originalBB779alteredBB
  %3049 = load i8, i8* %34, align 1, !dbg !4470
  %3050 = trunc i8 %3049 to i1, !dbg !4470
  %3051 = load i32, i32* @x.63
  %3052 = load i32, i32* @y.64
  %3053 = sub i32 %3051, 1
  %3054 = mul i32 %3051, %3053
  %3055 = urem i32 %3054, 2
  %3056 = icmp eq i32 %3055, 0
  %3057 = icmp slt i32 %3052, 10
  %3058 = or i1 %3056, %3057
  br i1 %3058, label %originalBBpart2781, label %originalBB779alteredBB

originalBBpart2781:                               ; preds = %originalBB779
  br i1 %3050, label %3059, label %3087, !dbg !4472

3059:                                             ; preds = %originalBBpart2781
  %3060 = load i32, i32* @x.63
  %3061 = load i32, i32* @y.64
  %3062 = sub i32 %3060, 1
  %3063 = mul i32 %3060, %3062
  %3064 = urem i32 %3063, 2
  %3065 = icmp eq i32 %3064, 0
  %3066 = icmp slt i32 %3061, 10
  %3067 = or i1 %3065, %3066
  br i1 %3067, label %originalBB783, label %originalBB783alteredBB

originalBB783:                                    ; preds = %3059, %originalBB783alteredBB
  store i64 1, i64* %44, align 8, !dbg !4473
  %3068 = call i16** @__ctype_b_loc() #15, !dbg !4475
  %3069 = load i16*, i16** %3068, align 8, !dbg !4475
  %3070 = load i8, i8* %39, align 1, !dbg !4475
  %3071 = zext i8 %3070 to i32, !dbg !4475
  %3072 = sext i32 %3071 to i64, !dbg !4475
  %3073 = getelementptr inbounds i16, i16* %3069, i64 %3072, !dbg !4475
  %3074 = load i16, i16* %3073, align 2, !dbg !4475
  %3075 = zext i16 %3074 to i32, !dbg !4475
  %3076 = and i32 %3075, 16384, !dbg !4475
  %3077 = icmp ne i32 %3076, 0, !dbg !4476
  %3078 = zext i1 %3077 to i8, !dbg !4477
  store i8 %3078, i8* %45, align 1, !dbg !4477
  %3079 = load i32, i32* @x.63
  %3080 = load i32, i32* @y.64
  %3081 = sub i32 %3079, 1
  %3082 = mul i32 %3079, %3081
  %3083 = urem i32 %3082, 2
  %3084 = icmp eq i32 %3083, 0
  %3085 = icmp slt i32 %3080, 10
  %3086 = or i1 %3084, %3085
  br i1 %3086, label %originalBBpart2796, label %originalBB783alteredBB

originalBBpart2796:                               ; preds = %originalBB783
  br label %3616, !dbg !4478

3087:                                             ; preds = %originalBBpart2781
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %46, metadata !4479, metadata !DIExpression()), !dbg !4493
  %3088 = bitcast %struct.__mbstate_t* %46 to i8*, !dbg !4494
  call void @llvm.memset.p0i8.i64(i8* align 4 %3088, i8 0, i64 8, i1 false), !dbg !4494
  store i64 0, i64* %44, align 8, !dbg !4495
  store i8 1, i8* %45, align 1, !dbg !4496
  %3089 = load i64, i64* %22, align 8, !dbg !4497
  %3090 = icmp eq i64 %3089, -1, !dbg !4499
  br i1 %3090, label %3091, label %3110, !dbg !4500

3091:                                             ; preds = %3087
  %3092 = load i32, i32* @x.63
  %3093 = load i32, i32* @y.64
  %3094 = sub i32 %3092, 1
  %3095 = mul i32 %3092, %3094
  %3096 = urem i32 %3095, 2
  %3097 = icmp eq i32 %3096, 0
  %3098 = icmp slt i32 %3093, 10
  %3099 = or i1 %3097, %3098
  br i1 %3099, label %originalBB798, label %originalBB798alteredBB

originalBB798:                                    ; preds = %3091, %originalBB798alteredBB
  %3100 = load i8*, i8** %21, align 8, !dbg !4501
  %3101 = call i64 @strlen(i8* %3100) #13, !dbg !4502
  store i64 %3101, i64* %22, align 8, !dbg !4503
  %3102 = load i32, i32* @x.63
  %3103 = load i32, i32* @y.64
  %3104 = sub i32 %3102, 1
  %3105 = mul i32 %3102, %3104
  %3106 = urem i32 %3105, 2
  %3107 = icmp eq i32 %3106, 0
  %3108 = icmp slt i32 %3103, 10
  %3109 = or i1 %3107, %3108
  br i1 %3109, label %originalBBpart2800, label %originalBB798alteredBB

originalBBpart2800:                               ; preds = %originalBB798
  br label %3110, !dbg !4504

3110:                                             ; preds = %originalBBpart2800, %3087
  br label %3111, !dbg !4505

3111:                                             ; preds = %originalBBpart2950, %3110
  call void @llvm.dbg.declare(metadata i32* %47, metadata !4506, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.declare(metadata i64* %48, metadata !4510, metadata !DIExpression()), !dbg !4511
  %3112 = load i8*, i8** %21, align 8, !dbg !4512
  %3113 = load i64, i64* %28, align 8, !dbg !4513
  %3114 = load i64, i64* %44, align 8, !dbg !4514
  %3115 = add i64 %3113, %3114, !dbg !4515
  %3116 = getelementptr inbounds i8, i8* %3112, i64 %3115, !dbg !4512
  %3117 = load i64, i64* %22, align 8, !dbg !4516
  %3118 = load i64, i64* %28, align 8, !dbg !4517
  %3119 = load i64, i64* %44, align 8, !dbg !4518
  %3120 = add i64 %3118, %3119, !dbg !4519
  %3121 = sub i64 %3117, %3120, !dbg !4520
  %3122 = call i64 @rpl_mbrtowc(i32* %47, i8* %3116, i64 %3121, %struct.__mbstate_t* %46), !dbg !4521
  store i64 %3122, i64* %48, align 8, !dbg !4511
  %3123 = load i64, i64* %48, align 8, !dbg !4522
  %3124 = icmp eq i64 %3123, 0, !dbg !4524
  br i1 %3124, label %3125, label %3142, !dbg !4525

3125:                                             ; preds = %3111
  %3126 = load i32, i32* @x.63
  %3127 = load i32, i32* @y.64
  %3128 = sub i32 %3126, 1
  %3129 = mul i32 %3126, %3128
  %3130 = urem i32 %3129, 2
  %3131 = icmp eq i32 %3130, 0
  %3132 = icmp slt i32 %3127, 10
  %3133 = or i1 %3131, %3132
  br i1 %3133, label %originalBB802, label %originalBB802alteredBB

originalBB802:                                    ; preds = %3125, %originalBB802alteredBB
  %3134 = load i32, i32* @x.63
  %3135 = load i32, i32* @y.64
  %3136 = sub i32 %3134, 1
  %3137 = mul i32 %3134, %3136
  %3138 = urem i32 %3137, 2
  %3139 = icmp eq i32 %3138, 0
  %3140 = icmp slt i32 %3135, 10
  %3141 = or i1 %3139, %3140
  br i1 %3141, label %originalBBpart2804, label %originalBB802alteredBB

originalBBpart2804:                               ; preds = %originalBB802
  br label %3599, !dbg !4526

3142:                                             ; preds = %3111
  %3143 = load i32, i32* @x.63
  %3144 = load i32, i32* @y.64
  %3145 = sub i32 %3143, 1
  %3146 = mul i32 %3143, %3145
  %3147 = urem i32 %3146, 2
  %3148 = icmp eq i32 %3147, 0
  %3149 = icmp slt i32 %3144, 10
  %3150 = or i1 %3148, %3149
  br i1 %3150, label %originalBB806, label %originalBB806alteredBB

originalBB806:                                    ; preds = %3142, %originalBB806alteredBB
  %3151 = load i64, i64* %48, align 8, !dbg !4527
  %3152 = icmp eq i64 %3151, -1, !dbg !4529
  %3153 = load i32, i32* @x.63
  %3154 = load i32, i32* @y.64
  %3155 = sub i32 %3153, 1
  %3156 = mul i32 %3153, %3155
  %3157 = urem i32 %3156, 2
  %3158 = icmp eq i32 %3157, 0
  %3159 = icmp slt i32 %3154, 10
  %3160 = or i1 %3158, %3159
  br i1 %3160, label %originalBBpart2808, label %originalBB806alteredBB

originalBBpart2808:                               ; preds = %originalBB806
  br i1 %3152, label %3161, label %3178, !dbg !4530

3161:                                             ; preds = %originalBBpart2808
  %3162 = load i32, i32* @x.63
  %3163 = load i32, i32* @y.64
  %3164 = sub i32 %3162, 1
  %3165 = mul i32 %3162, %3164
  %3166 = urem i32 %3165, 2
  %3167 = icmp eq i32 %3166, 0
  %3168 = icmp slt i32 %3163, 10
  %3169 = or i1 %3167, %3168
  br i1 %3169, label %originalBB810, label %originalBB810alteredBB

originalBB810:                                    ; preds = %3161, %originalBB810alteredBB
  store i8 0, i8* %45, align 1, !dbg !4531
  %3170 = load i32, i32* @x.63
  %3171 = load i32, i32* @y.64
  %3172 = sub i32 %3170, 1
  %3173 = mul i32 %3170, %3172
  %3174 = urem i32 %3173, 2
  %3175 = icmp eq i32 %3174, 0
  %3176 = icmp slt i32 %3171, 10
  %3177 = or i1 %3175, %3176
  br i1 %3177, label %originalBBpart2812, label %originalBB810alteredBB

originalBBpart2812:                               ; preds = %originalBB810
  br label %3599, !dbg !4533

3178:                                             ; preds = %originalBBpart2808
  %3179 = load i32, i32* @x.63
  %3180 = load i32, i32* @y.64
  %3181 = sub i32 %3179, 1
  %3182 = mul i32 %3179, %3181
  %3183 = urem i32 %3182, 2
  %3184 = icmp eq i32 %3183, 0
  %3185 = icmp slt i32 %3180, 10
  %3186 = or i1 %3184, %3185
  br i1 %3186, label %originalBB814, label %originalBB814alteredBB

originalBB814:                                    ; preds = %3178, %originalBB814alteredBB
  %3187 = load i64, i64* %48, align 8, !dbg !4534
  %3188 = icmp eq i64 %3187, -2, !dbg !4536
  %3189 = load i32, i32* @x.63
  %3190 = load i32, i32* @y.64
  %3191 = sub i32 %3189, 1
  %3192 = mul i32 %3189, %3191
  %3193 = urem i32 %3192, 2
  %3194 = icmp eq i32 %3193, 0
  %3195 = icmp slt i32 %3190, 10
  %3196 = or i1 %3194, %3195
  br i1 %3196, label %originalBBpart2816, label %originalBB814alteredBB

originalBBpart2816:                               ; preds = %originalBB814
  br i1 %3188, label %3197, label %3315, !dbg !4537

3197:                                             ; preds = %originalBBpart2816
  %3198 = load i32, i32* @x.63
  %3199 = load i32, i32* @y.64
  %3200 = sub i32 %3198, 1
  %3201 = mul i32 %3198, %3200
  %3202 = urem i32 %3201, 2
  %3203 = icmp eq i32 %3202, 0
  %3204 = icmp slt i32 %3199, 10
  %3205 = or i1 %3203, %3204
  br i1 %3205, label %originalBB818, label %originalBB818alteredBB

originalBB818:                                    ; preds = %3197, %originalBB818alteredBB
  store i8 0, i8* %45, align 1, !dbg !4538
  %3206 = load i32, i32* @x.63
  %3207 = load i32, i32* @y.64
  %3208 = sub i32 %3206, 1
  %3209 = mul i32 %3206, %3208
  %3210 = urem i32 %3209, 2
  %3211 = icmp eq i32 %3210, 0
  %3212 = icmp slt i32 %3207, 10
  %3213 = or i1 %3211, %3212
  br i1 %3213, label %originalBBpart2820, label %originalBB818alteredBB

originalBBpart2820:                               ; preds = %originalBB818
  br label %3214, !dbg !4540

3214:                                             ; preds = %originalBBpart2860, %originalBBpart2820
  %3215 = load i32, i32* @x.63
  %3216 = load i32, i32* @y.64
  %3217 = sub i32 %3215, 1
  %3218 = mul i32 %3215, %3217
  %3219 = urem i32 %3218, 2
  %3220 = icmp eq i32 %3219, 0
  %3221 = icmp slt i32 %3216, 10
  %3222 = or i1 %3220, %3221
  br i1 %3222, label %originalBB822, label %originalBB822alteredBB

originalBB822:                                    ; preds = %3214, %originalBB822alteredBB
  %3223 = load i64, i64* %28, align 8, !dbg !4541
  %3224 = load i64, i64* %44, align 8, !dbg !4542
  %3225 = add i64 %3223, %3224, !dbg !4543
  %3226 = load i64, i64* %22, align 8, !dbg !4544
  %3227 = icmp ult i64 %3225, %3226, !dbg !4545
  %3228 = load i32, i32* @x.63
  %3229 = load i32, i32* @y.64
  %3230 = sub i32 %3228, 1
  %3231 = mul i32 %3228, %3230
  %3232 = urem i32 %3231, 2
  %3233 = icmp eq i32 %3232, 0
  %3234 = icmp slt i32 %3229, 10
  %3235 = or i1 %3233, %3234
  br i1 %3235, label %originalBBpart2831, label %originalBB822alteredBB

originalBBpart2831:                               ; preds = %originalBB822
  br i1 %3227, label %3236, label %3261, !dbg !4546

3236:                                             ; preds = %originalBBpart2831
  %3237 = load i32, i32* @x.63
  %3238 = load i32, i32* @y.64
  %3239 = sub i32 %3237, 1
  %3240 = mul i32 %3237, %3239
  %3241 = urem i32 %3240, 2
  %3242 = icmp eq i32 %3241, 0
  %3243 = icmp slt i32 %3238, 10
  %3244 = or i1 %3242, %3243
  br i1 %3244, label %originalBB833, label %originalBB833alteredBB

originalBB833:                                    ; preds = %3236, %originalBB833alteredBB
  %3245 = load i8*, i8** %21, align 8, !dbg !4547
  %3246 = load i64, i64* %28, align 8, !dbg !4548
  %3247 = load i64, i64* %44, align 8, !dbg !4549
  %3248 = add i64 %3246, %3247, !dbg !4550
  %3249 = getelementptr inbounds i8, i8* %3245, i64 %3248, !dbg !4547
  %3250 = load i8, i8* %3249, align 1, !dbg !4547
  %3251 = sext i8 %3250 to i32, !dbg !4547
  %3252 = icmp ne i32 %3251, 0, !dbg !4546
  %3253 = load i32, i32* @x.63
  %3254 = load i32, i32* @y.64
  %3255 = sub i32 %3253, 1
  %3256 = mul i32 %3253, %3255
  %3257 = urem i32 %3256, 2
  %3258 = icmp eq i32 %3257, 0
  %3259 = icmp slt i32 %3254, 10
  %3260 = or i1 %3258, %3259
  br i1 %3260, label %originalBBpart2843, label %originalBB833alteredBB

originalBBpart2843:                               ; preds = %originalBB833
  br label %3261

3261:                                             ; preds = %originalBBpart2843, %originalBBpart2831
  %3262 = phi i1 [ false, %originalBBpart2831 ], [ %3252, %originalBBpart2843 ], !dbg !4551
  %3263 = load i32, i32* @x.63
  %3264 = load i32, i32* @y.64
  %3265 = sub i32 %3263, 1
  %3266 = mul i32 %3263, %3265
  %3267 = urem i32 %3266, 2
  %3268 = icmp eq i32 %3267, 0
  %3269 = icmp slt i32 %3264, 10
  %3270 = or i1 %3268, %3269
  br i1 %3270, label %originalBB845, label %originalBB845alteredBB

originalBB845:                                    ; preds = %3261, %originalBB845alteredBB
  %3271 = load i32, i32* @x.63
  %3272 = load i32, i32* @y.64
  %3273 = sub i32 %3271, 1
  %3274 = mul i32 %3271, %3273
  %3275 = urem i32 %3274, 2
  %3276 = icmp eq i32 %3275, 0
  %3277 = icmp slt i32 %3272, 10
  %3278 = or i1 %3276, %3277
  br i1 %3278, label %originalBBpart2847, label %originalBB845alteredBB

originalBBpart2847:                               ; preds = %originalBB845
  br i1 %3262, label %3279, label %3298, !dbg !4540

3279:                                             ; preds = %originalBBpart2847
  %3280 = load i32, i32* @x.63
  %3281 = load i32, i32* @y.64
  %3282 = sub i32 %3280, 1
  %3283 = mul i32 %3280, %3282
  %3284 = urem i32 %3283, 2
  %3285 = icmp eq i32 %3284, 0
  %3286 = icmp slt i32 %3281, 10
  %3287 = or i1 %3285, %3286
  br i1 %3287, label %originalBB849, label %originalBB849alteredBB

originalBB849:                                    ; preds = %3279, %originalBB849alteredBB
  %3288 = load i64, i64* %44, align 8, !dbg !4552
  %3289 = add i64 %3288, 1, !dbg !4552
  store i64 %3289, i64* %44, align 8, !dbg !4552
  %3290 = load i32, i32* @x.63
  %3291 = load i32, i32* @y.64
  %3292 = sub i32 %3290, 1
  %3293 = mul i32 %3290, %3292
  %3294 = urem i32 %3293, 2
  %3295 = icmp eq i32 %3294, 0
  %3296 = icmp slt i32 %3291, 10
  %3297 = or i1 %3295, %3296
  br i1 %3297, label %originalBBpart2860, label %originalBB849alteredBB

originalBBpart2860:                               ; preds = %originalBB849
  br label %3214, !dbg !4540, !llvm.loop !4553

3298:                                             ; preds = %originalBBpart2847
  %3299 = load i32, i32* @x.63
  %3300 = load i32, i32* @y.64
  %3301 = sub i32 %3299, 1
  %3302 = mul i32 %3299, %3301
  %3303 = urem i32 %3302, 2
  %3304 = icmp eq i32 %3303, 0
  %3305 = icmp slt i32 %3300, 10
  %3306 = or i1 %3304, %3305
  br i1 %3306, label %originalBB862, label %originalBB862alteredBB

originalBB862:                                    ; preds = %3298, %originalBB862alteredBB
  %3307 = load i32, i32* @x.63
  %3308 = load i32, i32* @y.64
  %3309 = sub i32 %3307, 1
  %3310 = mul i32 %3307, %3309
  %3311 = urem i32 %3310, 2
  %3312 = icmp eq i32 %3311, 0
  %3313 = icmp slt i32 %3308, 10
  %3314 = or i1 %3312, %3313
  br i1 %3314, label %originalBBpart2864, label %originalBB862alteredBB

originalBBpart2864:                               ; preds = %originalBB862
  br label %3599, !dbg !4554

3315:                                             ; preds = %originalBBpart2816
  %3316 = load i32, i32* @x.63
  %3317 = load i32, i32* @y.64
  %3318 = sub i32 %3316, 1
  %3319 = mul i32 %3316, %3318
  %3320 = urem i32 %3319, 2
  %3321 = icmp eq i32 %3320, 0
  %3322 = icmp slt i32 %3317, 10
  %3323 = or i1 %3321, %3322
  br i1 %3323, label %originalBB866, label %originalBB866alteredBB

originalBB866:                                    ; preds = %3315, %originalBB866alteredBB
  %3324 = load i8, i8* %35, align 1, !dbg !4555
  %3325 = trunc i8 %3324 to i1, !dbg !4555
  %3326 = load i32, i32* @x.63
  %3327 = load i32, i32* @y.64
  %3328 = sub i32 %3326, 1
  %3329 = mul i32 %3326, %3328
  %3330 = urem i32 %3329, 2
  %3331 = icmp eq i32 %3330, 0
  %3332 = icmp slt i32 %3327, 10
  %3333 = or i1 %3331, %3332
  br i1 %3333, label %originalBBpart2868, label %originalBB866alteredBB

originalBBpart2868:                               ; preds = %originalBB866
  br i1 %3325, label %3334, label %3471, !dbg !4558

3334:                                             ; preds = %originalBBpart2868
  %3335 = load i32, i32* @x.63
  %3336 = load i32, i32* @y.64
  %3337 = sub i32 %3335, 1
  %3338 = mul i32 %3335, %3337
  %3339 = urem i32 %3338, 2
  %3340 = icmp eq i32 %3339, 0
  %3341 = icmp slt i32 %3336, 10
  %3342 = or i1 %3340, %3341
  br i1 %3342, label %originalBB870, label %originalBB870alteredBB

originalBB870:                                    ; preds = %3334, %originalBB870alteredBB
  %3343 = load i32, i32* %23, align 4, !dbg !4559
  %3344 = icmp eq i32 %3343, 2, !dbg !4560
  %3345 = load i32, i32* @x.63
  %3346 = load i32, i32* @y.64
  %3347 = sub i32 %3345, 1
  %3348 = mul i32 %3345, %3347
  %3349 = urem i32 %3348, 2
  %3350 = icmp eq i32 %3349, 0
  %3351 = icmp slt i32 %3346, 10
  %3352 = or i1 %3350, %3351
  br i1 %3352, label %originalBBpart2872, label %originalBB870alteredBB

originalBBpart2872:                               ; preds = %originalBB870
  br i1 %3344, label %3353, label %3471, !dbg !4561

3353:                                             ; preds = %originalBBpart2872
  call void @llvm.dbg.declare(metadata i64* %49, metadata !4562, metadata !DIExpression()), !dbg !4564
  %3354 = load i32, i32* @x.63
  %3355 = load i32, i32* @y.64
  %3356 = sub i32 %3354, 1
  %3357 = mul i32 %3354, %3356
  %3358 = urem i32 %3357, 2
  %3359 = icmp eq i32 %3358, 0
  %3360 = icmp slt i32 %3355, 10
  %3361 = or i1 %3359, %3360
  br i1 %3361, label %originalBB874, label %originalBB874alteredBB

originalBB874:                                    ; preds = %3353, %originalBB874alteredBB
  store i64 1, i64* %49, align 8, !dbg !4565
  %3362 = load i32, i32* @x.63
  %3363 = load i32, i32* @y.64
  %3364 = sub i32 %3362, 1
  %3365 = mul i32 %3362, %3364
  %3366 = urem i32 %3365, 2
  %3367 = icmp eq i32 %3366, 0
  %3368 = icmp slt i32 %3363, 10
  %3369 = or i1 %3367, %3368
  br i1 %3369, label %originalBBpart2876, label %originalBB874alteredBB

originalBBpart2876:                               ; preds = %originalBB874
  br label %3370, !dbg !4567

3370:                                             ; preds = %3451, %originalBBpart2876
  %3371 = load i64, i64* %49, align 8, !dbg !4568
  %3372 = load i64, i64* %48, align 8, !dbg !4570
  %3373 = icmp ult i64 %3371, %3372, !dbg !4571
  br i1 %3373, label %3374, label %3454, !dbg !4572

3374:                                             ; preds = %3370
  %3375 = load i32, i32* @x.63
  %3376 = load i32, i32* @y.64
  %3377 = sub i32 %3375, 1
  %3378 = mul i32 %3375, %3377
  %3379 = urem i32 %3378, 2
  %3380 = icmp eq i32 %3379, 0
  %3381 = icmp slt i32 %3376, 10
  %3382 = or i1 %3380, %3381
  br i1 %3382, label %originalBB878, label %originalBB878alteredBB

originalBB878:                                    ; preds = %3374, %originalBB878alteredBB
  %3383 = load i8*, i8** %21, align 8, !dbg !4573
  %3384 = load i64, i64* %28, align 8, !dbg !4574
  %3385 = load i64, i64* %44, align 8, !dbg !4575
  %3386 = add i64 %3384, %3385, !dbg !4576
  %3387 = load i64, i64* %49, align 8, !dbg !4577
  %3388 = add i64 %3386, %3387, !dbg !4578
  %3389 = getelementptr inbounds i8, i8* %3383, i64 %3388, !dbg !4573
  %3390 = load i8, i8* %3389, align 1, !dbg !4573
  %3391 = sext i8 %3390 to i32, !dbg !4573
  %3392 = load i32, i32* @x.63
  %3393 = load i32, i32* @y.64
  %3394 = sub i32 %3392, 1
  %3395 = mul i32 %3392, %3394
  %3396 = urem i32 %3395, 2
  %3397 = icmp eq i32 %3396, 0
  %3398 = icmp slt i32 %3393, 10
  %3399 = or i1 %3397, %3398
  br i1 %3399, label %originalBBpart2895, label %originalBB878alteredBB

originalBBpart2895:                               ; preds = %originalBB878
  switch i32 %3391, label %3417 [
    i32 91, label %3400
    i32 92, label %3400
    i32 94, label %3400
    i32 96, label %3400
    i32 124, label %3400
  ], !dbg !4579

3400:                                             ; preds = %originalBBpart2895, %originalBBpart2895, %originalBBpart2895, %originalBBpart2895, %originalBBpart2895
  %3401 = load i32, i32* @x.63
  %3402 = load i32, i32* @y.64
  %3403 = sub i32 %3401, 1
  %3404 = mul i32 %3401, %3403
  %3405 = urem i32 %3404, 2
  %3406 = icmp eq i32 %3405, 0
  %3407 = icmp slt i32 %3402, 10
  %3408 = or i1 %3406, %3407
  br i1 %3408, label %originalBB897, label %originalBB897alteredBB

originalBB897:                                    ; preds = %3400, %originalBB897alteredBB
  %3409 = load i32, i32* @x.63
  %3410 = load i32, i32* @y.64
  %3411 = sub i32 %3409, 1
  %3412 = mul i32 %3409, %3411
  %3413 = urem i32 %3412, 2
  %3414 = icmp eq i32 %3413, 0
  %3415 = icmp slt i32 %3410, 10
  %3416 = or i1 %3414, %3415
  br i1 %3416, label %originalBBpart2899, label %originalBB897alteredBB

originalBBpart2899:                               ; preds = %originalBB897
  br label %5982, !dbg !4580

3417:                                             ; preds = %originalBBpart2895
  %3418 = load i32, i32* @x.63
  %3419 = load i32, i32* @y.64
  %3420 = sub i32 %3418, 1
  %3421 = mul i32 %3418, %3420
  %3422 = urem i32 %3421, 2
  %3423 = icmp eq i32 %3422, 0
  %3424 = icmp slt i32 %3419, 10
  %3425 = or i1 %3423, %3424
  br i1 %3425, label %originalBB901, label %originalBB901alteredBB

originalBB901:                                    ; preds = %3417, %originalBB901alteredBB
  %3426 = load i32, i32* @x.63
  %3427 = load i32, i32* @y.64
  %3428 = sub i32 %3426, 1
  %3429 = mul i32 %3426, %3428
  %3430 = urem i32 %3429, 2
  %3431 = icmp eq i32 %3430, 0
  %3432 = icmp slt i32 %3427, 10
  %3433 = or i1 %3431, %3432
  br i1 %3433, label %originalBBpart2903, label %originalBB901alteredBB

originalBBpart2903:                               ; preds = %originalBB901
  br label %3434, !dbg !4582

3434:                                             ; preds = %originalBBpart2903
  %3435 = load i32, i32* @x.63
  %3436 = load i32, i32* @y.64
  %3437 = sub i32 %3435, 1
  %3438 = mul i32 %3435, %3437
  %3439 = urem i32 %3438, 2
  %3440 = icmp eq i32 %3439, 0
  %3441 = icmp slt i32 %3436, 10
  %3442 = or i1 %3440, %3441
  br i1 %3442, label %originalBB905, label %originalBB905alteredBB

originalBB905:                                    ; preds = %3434, %originalBB905alteredBB
  %3443 = load i32, i32* @x.63
  %3444 = load i32, i32* @y.64
  %3445 = sub i32 %3443, 1
  %3446 = mul i32 %3443, %3445
  %3447 = urem i32 %3446, 2
  %3448 = icmp eq i32 %3447, 0
  %3449 = icmp slt i32 %3444, 10
  %3450 = or i1 %3448, %3449
  br i1 %3450, label %originalBBpart2907, label %originalBB905alteredBB

originalBBpart2907:                               ; preds = %originalBB905
  br label %3451, !dbg !4583

3451:                                             ; preds = %originalBBpart2907
  %3452 = load i64, i64* %49, align 8, !dbg !4584
  %3453 = add i64 %3452, 1, !dbg !4584
  store i64 %3453, i64* %49, align 8, !dbg !4584
  br label %3370, !dbg !4585, !llvm.loop !4586

3454:                                             ; preds = %3370
  %3455 = load i32, i32* @x.63
  %3456 = load i32, i32* @y.64
  %3457 = sub i32 %3455, 1
  %3458 = mul i32 %3455, %3457
  %3459 = urem i32 %3458, 2
  %3460 = icmp eq i32 %3459, 0
  %3461 = icmp slt i32 %3456, 10
  %3462 = or i1 %3460, %3461
  br i1 %3462, label %originalBB909, label %originalBB909alteredBB

originalBB909:                                    ; preds = %3454, %originalBB909alteredBB
  %3463 = load i32, i32* @x.63
  %3464 = load i32, i32* @y.64
  %3465 = sub i32 %3463, 1
  %3466 = mul i32 %3463, %3465
  %3467 = urem i32 %3466, 2
  %3468 = icmp eq i32 %3467, 0
  %3469 = icmp slt i32 %3464, 10
  %3470 = or i1 %3468, %3469
  br i1 %3470, label %originalBBpart2911, label %originalBB909alteredBB

originalBBpart2911:                               ; preds = %originalBB909
  br label %3471, !dbg !4588

3471:                                             ; preds = %originalBBpart2911, %originalBBpart2872, %originalBBpart2868
  %3472 = load i32, i32* @x.63
  %3473 = load i32, i32* @y.64
  %3474 = sub i32 %3472, 1
  %3475 = mul i32 %3472, %3474
  %3476 = urem i32 %3475, 2
  %3477 = icmp eq i32 %3476, 0
  %3478 = icmp slt i32 %3473, 10
  %3479 = or i1 %3477, %3478
  br i1 %3479, label %originalBB913, label %originalBB913alteredBB

originalBB913:                                    ; preds = %3471, %originalBB913alteredBB
  %3480 = load i32, i32* %47, align 4, !dbg !4589
  %3481 = call i32 @iswprint(i32 %3480) #10, !dbg !4591
  %3482 = icmp ne i32 %3481, 0, !dbg !4591
  %3483 = load i32, i32* @x.63
  %3484 = load i32, i32* @y.64
  %3485 = sub i32 %3483, 1
  %3486 = mul i32 %3483, %3485
  %3487 = urem i32 %3486, 2
  %3488 = icmp eq i32 %3487, 0
  %3489 = icmp slt i32 %3484, 10
  %3490 = or i1 %3488, %3489
  br i1 %3490, label %originalBBpart2915, label %originalBB913alteredBB

originalBBpart2915:                               ; preds = %originalBB913
  br i1 %3482, label %3508, label %3491, !dbg !4592

3491:                                             ; preds = %originalBBpart2915
  %3492 = load i32, i32* @x.63
  %3493 = load i32, i32* @y.64
  %3494 = sub i32 %3492, 1
  %3495 = mul i32 %3492, %3494
  %3496 = urem i32 %3495, 2
  %3497 = icmp eq i32 %3496, 0
  %3498 = icmp slt i32 %3493, 10
  %3499 = or i1 %3497, %3498
  br i1 %3499, label %originalBB917, label %originalBB917alteredBB

originalBB917:                                    ; preds = %3491, %originalBB917alteredBB
  store i8 0, i8* %45, align 1, !dbg !4593
  %3500 = load i32, i32* @x.63
  %3501 = load i32, i32* @y.64
  %3502 = sub i32 %3500, 1
  %3503 = mul i32 %3500, %3502
  %3504 = urem i32 %3503, 2
  %3505 = icmp eq i32 %3504, 0
  %3506 = icmp slt i32 %3501, 10
  %3507 = or i1 %3505, %3506
  br i1 %3507, label %originalBBpart2919, label %originalBB917alteredBB

originalBBpart2919:                               ; preds = %originalBB917
  br label %3508, !dbg !4594

3508:                                             ; preds = %originalBBpart2919, %originalBBpart2915
  %3509 = load i32, i32* @x.63
  %3510 = load i32, i32* @y.64
  %3511 = sub i32 %3509, 1
  %3512 = mul i32 %3509, %3511
  %3513 = urem i32 %3512, 2
  %3514 = icmp eq i32 %3513, 0
  %3515 = icmp slt i32 %3510, 10
  %3516 = or i1 %3514, %3515
  br i1 %3516, label %originalBB921, label %originalBB921alteredBB

originalBB921:                                    ; preds = %3508, %originalBB921alteredBB
  %3517 = load i64, i64* %48, align 8, !dbg !4595
  %3518 = load i64, i64* %44, align 8, !dbg !4596
  %3519 = add i64 %3518, %3517, !dbg !4596
  store i64 %3519, i64* %44, align 8, !dbg !4596
  %3520 = load i32, i32* @x.63
  %3521 = load i32, i32* @y.64
  %3522 = sub i32 %3520, 1
  %3523 = mul i32 %3520, %3522
  %3524 = urem i32 %3523, 2
  %3525 = icmp eq i32 %3524, 0
  %3526 = icmp slt i32 %3521, 10
  %3527 = or i1 %3525, %3526
  br i1 %3527, label %originalBBpart2930, label %originalBB921alteredBB

originalBBpart2930:                               ; preds = %originalBB921
  br label %3528

3528:                                             ; preds = %originalBBpart2930
  %3529 = load i32, i32* @x.63
  %3530 = load i32, i32* @y.64
  %3531 = sub i32 %3529, 1
  %3532 = mul i32 %3529, %3531
  %3533 = urem i32 %3532, 2
  %3534 = icmp eq i32 %3533, 0
  %3535 = icmp slt i32 %3530, 10
  %3536 = or i1 %3534, %3535
  br i1 %3536, label %originalBB932, label %originalBB932alteredBB

originalBB932:                                    ; preds = %3528, %originalBB932alteredBB
  %3537 = load i32, i32* @x.63
  %3538 = load i32, i32* @y.64
  %3539 = sub i32 %3537, 1
  %3540 = mul i32 %3537, %3539
  %3541 = urem i32 %3540, 2
  %3542 = icmp eq i32 %3541, 0
  %3543 = icmp slt i32 %3538, 10
  %3544 = or i1 %3542, %3543
  br i1 %3544, label %originalBBpart2934, label %originalBB932alteredBB

originalBBpart2934:                               ; preds = %originalBB932
  br label %3545

3545:                                             ; preds = %originalBBpart2934
  %3546 = load i32, i32* @x.63
  %3547 = load i32, i32* @y.64
  %3548 = sub i32 %3546, 1
  %3549 = mul i32 %3546, %3548
  %3550 = urem i32 %3549, 2
  %3551 = icmp eq i32 %3550, 0
  %3552 = icmp slt i32 %3547, 10
  %3553 = or i1 %3551, %3552
  br i1 %3553, label %originalBB936, label %originalBB936alteredBB

originalBB936:                                    ; preds = %3545, %originalBB936alteredBB
  %3554 = load i32, i32* @x.63
  %3555 = load i32, i32* @y.64
  %3556 = sub i32 %3554, 1
  %3557 = mul i32 %3554, %3556
  %3558 = urem i32 %3557, 2
  %3559 = icmp eq i32 %3558, 0
  %3560 = icmp slt i32 %3555, 10
  %3561 = or i1 %3559, %3560
  br i1 %3561, label %originalBBpart2938, label %originalBB936alteredBB

originalBBpart2938:                               ; preds = %originalBB936
  br label %3562

3562:                                             ; preds = %originalBBpart2938
  %3563 = load i32, i32* @x.63
  %3564 = load i32, i32* @y.64
  %3565 = sub i32 %3563, 1
  %3566 = mul i32 %3563, %3565
  %3567 = urem i32 %3566, 2
  %3568 = icmp eq i32 %3567, 0
  %3569 = icmp slt i32 %3564, 10
  %3570 = or i1 %3568, %3569
  br i1 %3570, label %originalBB940, label %originalBB940alteredBB

originalBB940:                                    ; preds = %3562, %originalBB940alteredBB
  %3571 = load i32, i32* @x.63
  %3572 = load i32, i32* @y.64
  %3573 = sub i32 %3571, 1
  %3574 = mul i32 %3571, %3573
  %3575 = urem i32 %3574, 2
  %3576 = icmp eq i32 %3575, 0
  %3577 = icmp slt i32 %3572, 10
  %3578 = or i1 %3576, %3577
  br i1 %3578, label %originalBBpart2942, label %originalBB940alteredBB

originalBBpart2942:                               ; preds = %originalBB940
  br label %3579, !dbg !4597

3579:                                             ; preds = %originalBBpart2942
  %3580 = load i32, i32* @x.63
  %3581 = load i32, i32* @y.64
  %3582 = sub i32 %3580, 1
  %3583 = mul i32 %3580, %3582
  %3584 = urem i32 %3583, 2
  %3585 = icmp eq i32 %3584, 0
  %3586 = icmp slt i32 %3581, 10
  %3587 = or i1 %3585, %3586
  br i1 %3587, label %originalBB944, label %originalBB944alteredBB

originalBB944:                                    ; preds = %3579, %originalBB944alteredBB
  %3588 = call i32 @mbsinit(%struct.__mbstate_t* %46) #13, !dbg !4598
  %3589 = icmp ne i32 %3588, 0, !dbg !4599
  %3590 = xor i1 %3589, true, !dbg !4599
  %3591 = load i32, i32* @x.63
  %3592 = load i32, i32* @y.64
  %3593 = sub i32 %3591, 1
  %3594 = mul i32 %3591, %3593
  %3595 = urem i32 %3594, 2
  %3596 = icmp eq i32 %3595, 0
  %3597 = icmp slt i32 %3592, 10
  %3598 = or i1 %3596, %3597
  br i1 %3598, label %originalBBpart2950, label %originalBB944alteredBB

originalBBpart2950:                               ; preds = %originalBB944
  br i1 %3590, label %3111, label %3599, !dbg !4597, !llvm.loop !4600

3599:                                             ; preds = %originalBBpart2950, %originalBBpart2864, %originalBBpart2812, %originalBBpart2804
  %3600 = load i32, i32* @x.63
  %3601 = load i32, i32* @y.64
  %3602 = sub i32 %3600, 1
  %3603 = mul i32 %3600, %3602
  %3604 = urem i32 %3603, 2
  %3605 = icmp eq i32 %3604, 0
  %3606 = icmp slt i32 %3601, 10
  %3607 = or i1 %3605, %3606
  br i1 %3607, label %originalBB952, label %originalBB952alteredBB

originalBB952:                                    ; preds = %3599, %originalBB952alteredBB
  %3608 = load i32, i32* @x.63
  %3609 = load i32, i32* @y.64
  %3610 = sub i32 %3608, 1
  %3611 = mul i32 %3608, %3610
  %3612 = urem i32 %3611, 2
  %3613 = icmp eq i32 %3612, 0
  %3614 = icmp slt i32 %3609, 10
  %3615 = or i1 %3613, %3614
  br i1 %3615, label %originalBBpart2954, label %originalBB952alteredBB

originalBBpart2954:                               ; preds = %originalBB952
  br label %3616

3616:                                             ; preds = %originalBBpart2954, %originalBBpart2796
  %3617 = load i32, i32* @x.63
  %3618 = load i32, i32* @y.64
  %3619 = sub i32 %3617, 1
  %3620 = mul i32 %3617, %3619
  %3621 = urem i32 %3620, 2
  %3622 = icmp eq i32 %3621, 0
  %3623 = icmp slt i32 %3618, 10
  %3624 = or i1 %3622, %3623
  br i1 %3624, label %originalBB956, label %originalBB956alteredBB

originalBB956:                                    ; preds = %3616, %originalBB956alteredBB
  %3625 = load i8, i8* %45, align 1, !dbg !4602
  %3626 = trunc i8 %3625 to i1, !dbg !4602
  %3627 = zext i1 %3626 to i8, !dbg !4603
  store i8 %3627, i8* %43, align 1, !dbg !4603
  %3628 = load i64, i64* %44, align 8, !dbg !4604
  %3629 = icmp ult i64 1, %3628, !dbg !4606
  %3630 = load i32, i32* @x.63
  %3631 = load i32, i32* @y.64
  %3632 = sub i32 %3630, 1
  %3633 = mul i32 %3630, %3632
  %3634 = urem i32 %3633, 2
  %3635 = icmp eq i32 %3634, 0
  %3636 = icmp slt i32 %3631, 10
  %3637 = or i1 %3635, %3636
  br i1 %3637, label %originalBBpart2958, label %originalBB956alteredBB

originalBBpart2958:                               ; preds = %originalBB956
  br i1 %3629, label %3676, label %3638, !dbg !4607

3638:                                             ; preds = %originalBBpart2958
  %3639 = load i32, i32* @x.63
  %3640 = load i32, i32* @y.64
  %3641 = sub i32 %3639, 1
  %3642 = mul i32 %3639, %3641
  %3643 = urem i32 %3642, 2
  %3644 = icmp eq i32 %3643, 0
  %3645 = icmp slt i32 %3640, 10
  %3646 = or i1 %3644, %3645
  br i1 %3646, label %originalBB960, label %originalBB960alteredBB

originalBB960:                                    ; preds = %3638, %originalBB960alteredBB
  %3647 = load i8, i8* %33, align 1, !dbg !4608
  %3648 = trunc i8 %3647 to i1, !dbg !4608
  %3649 = load i32, i32* @x.63
  %3650 = load i32, i32* @y.64
  %3651 = sub i32 %3649, 1
  %3652 = mul i32 %3649, %3651
  %3653 = urem i32 %3652, 2
  %3654 = icmp eq i32 %3653, 0
  %3655 = icmp slt i32 %3650, 10
  %3656 = or i1 %3654, %3655
  br i1 %3656, label %originalBBpart2962, label %originalBB960alteredBB

originalBBpart2962:                               ; preds = %originalBB960
  br i1 %3648, label %3657, label %4712, !dbg !4609

3657:                                             ; preds = %originalBBpart2962
  %3658 = load i32, i32* @x.63
  %3659 = load i32, i32* @y.64
  %3660 = sub i32 %3658, 1
  %3661 = mul i32 %3658, %3660
  %3662 = urem i32 %3661, 2
  %3663 = icmp eq i32 %3662, 0
  %3664 = icmp slt i32 %3659, 10
  %3665 = or i1 %3663, %3664
  br i1 %3665, label %originalBB964, label %originalBB964alteredBB

originalBB964:                                    ; preds = %3657, %originalBB964alteredBB
  %3666 = load i8, i8* %45, align 1, !dbg !4610
  %3667 = trunc i8 %3666 to i1, !dbg !4610
  %3668 = load i32, i32* @x.63
  %3669 = load i32, i32* @y.64
  %3670 = sub i32 %3668, 1
  %3671 = mul i32 %3668, %3670
  %3672 = urem i32 %3671, 2
  %3673 = icmp eq i32 %3672, 0
  %3674 = icmp slt i32 %3669, 10
  %3675 = or i1 %3673, %3674
  br i1 %3675, label %originalBBpart2966, label %originalBB964alteredBB

originalBBpart2966:                               ; preds = %originalBB964
  br i1 %3667, label %4712, label %3676, !dbg !4611

3676:                                             ; preds = %originalBBpart2966, %originalBBpart2958
  call void @llvm.dbg.declare(metadata i64* %50, metadata !4612, metadata !DIExpression()), !dbg !4614
  %3677 = load i32, i32* @x.63
  %3678 = load i32, i32* @y.64
  %3679 = sub i32 %3677, 1
  %3680 = mul i32 %3677, %3679
  %3681 = urem i32 %3680, 2
  %3682 = icmp eq i32 %3681, 0
  %3683 = icmp slt i32 %3678, 10
  %3684 = or i1 %3682, %3683
  br i1 %3684, label %originalBB968, label %originalBB968alteredBB

originalBB968:                                    ; preds = %3676, %originalBB968alteredBB
  %3685 = load i64, i64* %28, align 8, !dbg !4615
  %3686 = load i64, i64* %44, align 8, !dbg !4616
  %3687 = add i64 %3685, %3686, !dbg !4617
  store i64 %3687, i64* %50, align 8, !dbg !4614
  %3688 = load i32, i32* @x.63
  %3689 = load i32, i32* @y.64
  %3690 = sub i32 %3688, 1
  %3691 = mul i32 %3688, %3690
  %3692 = urem i32 %3691, 2
  %3693 = icmp eq i32 %3692, 0
  %3694 = icmp slt i32 %3689, 10
  %3695 = or i1 %3693, %3694
  br i1 %3695, label %originalBBpart2983, label %originalBB968alteredBB

originalBBpart2983:                               ; preds = %originalBB968
  br label %3696, !dbg !4618

3696:                                             ; preds = %originalBBpart21270, %originalBBpart2983
  %3697 = load i32, i32* @x.63
  %3698 = load i32, i32* @y.64
  %3699 = sub i32 %3697, 1
  %3700 = mul i32 %3697, %3699
  %3701 = urem i32 %3700, 2
  %3702 = icmp eq i32 %3701, 0
  %3703 = icmp slt i32 %3698, 10
  %3704 = or i1 %3702, %3703
  br i1 %3704, label %originalBB985, label %originalBB985alteredBB

originalBB985:                                    ; preds = %3696, %originalBB985alteredBB
  %3705 = load i8, i8* %33, align 1, !dbg !4619
  %3706 = trunc i8 %3705 to i1, !dbg !4619
  %3707 = load i32, i32* @x.63
  %3708 = load i32, i32* @y.64
  %3709 = sub i32 %3707, 1
  %3710 = mul i32 %3707, %3709
  %3711 = urem i32 %3710, 2
  %3712 = icmp eq i32 %3711, 0
  %3713 = icmp slt i32 %3708, 10
  %3714 = or i1 %3712, %3713
  br i1 %3714, label %originalBBpart2987, label %originalBB985alteredBB

originalBBpart2987:                               ; preds = %originalBB985
  br i1 %3706, label %3715, label %4252, !dbg !4624

3715:                                             ; preds = %originalBBpart2987
  %3716 = load i32, i32* @x.63
  %3717 = load i32, i32* @y.64
  %3718 = sub i32 %3716, 1
  %3719 = mul i32 %3716, %3718
  %3720 = urem i32 %3719, 2
  %3721 = icmp eq i32 %3720, 0
  %3722 = icmp slt i32 %3717, 10
  %3723 = or i1 %3721, %3722
  br i1 %3723, label %originalBB989, label %originalBB989alteredBB

originalBB989:                                    ; preds = %3715, %originalBB989alteredBB
  %3724 = load i8, i8* %45, align 1, !dbg !4625
  %3725 = trunc i8 %3724 to i1, !dbg !4625
  %3726 = load i32, i32* @x.63
  %3727 = load i32, i32* @y.64
  %3728 = sub i32 %3726, 1
  %3729 = mul i32 %3726, %3728
  %3730 = urem i32 %3729, 2
  %3731 = icmp eq i32 %3730, 0
  %3732 = icmp slt i32 %3727, 10
  %3733 = or i1 %3731, %3732
  br i1 %3733, label %originalBBpart2991, label %originalBB989alteredBB

originalBBpart2991:                               ; preds = %originalBB989
  br i1 %3725, label %4252, label %3734, !dbg !4626

3734:                                             ; preds = %originalBBpart2991
  %3735 = load i32, i32* @x.63
  %3736 = load i32, i32* @y.64
  %3737 = sub i32 %3735, 1
  %3738 = mul i32 %3735, %3737
  %3739 = urem i32 %3738, 2
  %3740 = icmp eq i32 %3739, 0
  %3741 = icmp slt i32 %3736, 10
  %3742 = or i1 %3740, %3741
  br i1 %3742, label %originalBB993, label %originalBB993alteredBB

originalBB993:                                    ; preds = %3734, %originalBB993alteredBB
  %3743 = load i32, i32* @x.63
  %3744 = load i32, i32* @y.64
  %3745 = sub i32 %3743, 1
  %3746 = mul i32 %3743, %3745
  %3747 = urem i32 %3746, 2
  %3748 = icmp eq i32 %3747, 0
  %3749 = icmp slt i32 %3744, 10
  %3750 = or i1 %3748, %3749
  br i1 %3750, label %originalBBpart2995, label %originalBB993alteredBB

originalBBpart2995:                               ; preds = %originalBB993
  br label %3751, !dbg !4627

3751:                                             ; preds = %originalBBpart2995
  %3752 = load i8, i8* %35, align 1, !dbg !4629
  %3753 = trunc i8 %3752 to i1, !dbg !4629
  br i1 %3753, label %3754, label %3771, !dbg !4632

3754:                                             ; preds = %3751
  %3755 = load i32, i32* @x.63
  %3756 = load i32, i32* @y.64
  %3757 = sub i32 %3755, 1
  %3758 = mul i32 %3755, %3757
  %3759 = urem i32 %3758, 2
  %3760 = icmp eq i32 %3759, 0
  %3761 = icmp slt i32 %3756, 10
  %3762 = or i1 %3760, %3761
  br i1 %3762, label %originalBB997, label %originalBB997alteredBB

originalBB997:                                    ; preds = %3754, %originalBB997alteredBB
  %3763 = load i32, i32* @x.63
  %3764 = load i32, i32* @y.64
  %3765 = sub i32 %3763, 1
  %3766 = mul i32 %3763, %3765
  %3767 = urem i32 %3766, 2
  %3768 = icmp eq i32 %3767, 0
  %3769 = icmp slt i32 %3764, 10
  %3770 = or i1 %3768, %3769
  br i1 %3770, label %originalBBpart2999, label %originalBB997alteredBB

originalBBpart2999:                               ; preds = %originalBB997
  br label %5982, !dbg !4629

3771:                                             ; preds = %3751
  %3772 = load i32, i32* @x.63
  %3773 = load i32, i32* @y.64
  %3774 = sub i32 %3772, 1
  %3775 = mul i32 %3772, %3774
  %3776 = urem i32 %3775, 2
  %3777 = icmp eq i32 %3776, 0
  %3778 = icmp slt i32 %3773, 10
  %3779 = or i1 %3777, %3778
  br i1 %3779, label %originalBB1001, label %originalBB1001alteredBB

originalBB1001:                                   ; preds = %3771, %originalBB1001alteredBB
  store i8 1, i8* %42, align 1, !dbg !4632
  %3780 = load i32, i32* %23, align 4, !dbg !4633
  %3781 = icmp eq i32 %3780, 2, !dbg !4633
  %3782 = load i32, i32* @x.63
  %3783 = load i32, i32* @y.64
  %3784 = sub i32 %3782, 1
  %3785 = mul i32 %3782, %3784
  %3786 = urem i32 %3785, 2
  %3787 = icmp eq i32 %3786, 0
  %3788 = icmp slt i32 %3783, 10
  %3789 = or i1 %3787, %3788
  br i1 %3789, label %originalBBpart21003, label %originalBB1001alteredBB

originalBBpart21003:                              ; preds = %originalBB1001
  br i1 %3781, label %3790, label %4006, !dbg !4633

3790:                                             ; preds = %originalBBpart21003
  %3791 = load i8, i8* %36, align 1, !dbg !4633
  %3792 = trunc i8 %3791 to i1, !dbg !4633
  br i1 %3792, label %4006, label %3793, !dbg !4632

3793:                                             ; preds = %3790
  br label %3794, !dbg !4635

3794:                                             ; preds = %3793
  %3795 = load i32, i32* @x.63
  %3796 = load i32, i32* @y.64
  %3797 = sub i32 %3795, 1
  %3798 = mul i32 %3795, %3797
  %3799 = urem i32 %3798, 2
  %3800 = icmp eq i32 %3799, 0
  %3801 = icmp slt i32 %3796, 10
  %3802 = or i1 %3800, %3801
  br i1 %3802, label %originalBB1005, label %originalBB1005alteredBB

originalBB1005:                                   ; preds = %3794, %originalBB1005alteredBB
  %3803 = load i64, i64* %29, align 8, !dbg !4637
  %3804 = load i64, i64* %20, align 8, !dbg !4637
  %3805 = icmp ult i64 %3803, %3804, !dbg !4637
  %3806 = load i32, i32* @x.63
  %3807 = load i32, i32* @y.64
  %3808 = sub i32 %3806, 1
  %3809 = mul i32 %3806, %3808
  %3810 = urem i32 %3809, 2
  %3811 = icmp eq i32 %3810, 0
  %3812 = icmp slt i32 %3807, 10
  %3813 = or i1 %3811, %3812
  br i1 %3813, label %originalBBpart21007, label %originalBB1005alteredBB

originalBBpart21007:                              ; preds = %originalBB1005
  br i1 %3805, label %3814, label %3834, !dbg !4640

3814:                                             ; preds = %originalBBpart21007
  %3815 = load i32, i32* @x.63
  %3816 = load i32, i32* @y.64
  %3817 = sub i32 %3815, 1
  %3818 = mul i32 %3815, %3817
  %3819 = urem i32 %3818, 2
  %3820 = icmp eq i32 %3819, 0
  %3821 = icmp slt i32 %3816, 10
  %3822 = or i1 %3820, %3821
  br i1 %3822, label %originalBB1009, label %originalBB1009alteredBB

originalBB1009:                                   ; preds = %3814, %originalBB1009alteredBB
  %3823 = load i8*, i8** %19, align 8, !dbg !4637
  %3824 = load i64, i64* %29, align 8, !dbg !4637
  %3825 = getelementptr inbounds i8, i8* %3823, i64 %3824, !dbg !4637
  store i8 39, i8* %3825, align 1, !dbg !4637
  %3826 = load i32, i32* @x.63
  %3827 = load i32, i32* @y.64
  %3828 = sub i32 %3826, 1
  %3829 = mul i32 %3826, %3828
  %3830 = urem i32 %3829, 2
  %3831 = icmp eq i32 %3830, 0
  %3832 = icmp slt i32 %3827, 10
  %3833 = or i1 %3831, %3832
  br i1 %3833, label %originalBBpart21011, label %originalBB1009alteredBB

originalBBpart21011:                              ; preds = %originalBB1009
  br label %3834, !dbg !4637

3834:                                             ; preds = %originalBBpart21011, %originalBBpart21007
  %3835 = load i32, i32* @x.63
  %3836 = load i32, i32* @y.64
  %3837 = sub i32 %3835, 1
  %3838 = mul i32 %3835, %3837
  %3839 = urem i32 %3838, 2
  %3840 = icmp eq i32 %3839, 0
  %3841 = icmp slt i32 %3836, 10
  %3842 = or i1 %3840, %3841
  br i1 %3842, label %originalBB1013, label %originalBB1013alteredBB

originalBB1013:                                   ; preds = %3834, %originalBB1013alteredBB
  %3843 = load i64, i64* %29, align 8, !dbg !4640
  %3844 = add i64 %3843, 1, !dbg !4640
  store i64 %3844, i64* %29, align 8, !dbg !4640
  %3845 = load i32, i32* @x.63
  %3846 = load i32, i32* @y.64
  %3847 = sub i32 %3845, 1
  %3848 = mul i32 %3845, %3847
  %3849 = urem i32 %3848, 2
  %3850 = icmp eq i32 %3849, 0
  %3851 = icmp slt i32 %3846, 10
  %3852 = or i1 %3850, %3851
  br i1 %3852, label %originalBBpart21019, label %originalBB1013alteredBB

originalBBpart21019:                              ; preds = %originalBB1013
  br label %3853, !dbg !4640

3853:                                             ; preds = %originalBBpart21019
  %3854 = load i32, i32* @x.63
  %3855 = load i32, i32* @y.64
  %3856 = sub i32 %3854, 1
  %3857 = mul i32 %3854, %3856
  %3858 = urem i32 %3857, 2
  %3859 = icmp eq i32 %3858, 0
  %3860 = icmp slt i32 %3855, 10
  %3861 = or i1 %3859, %3860
  br i1 %3861, label %originalBB1021, label %originalBB1021alteredBB

originalBB1021:                                   ; preds = %3853, %originalBB1021alteredBB
  %3862 = load i32, i32* @x.63
  %3863 = load i32, i32* @y.64
  %3864 = sub i32 %3862, 1
  %3865 = mul i32 %3862, %3864
  %3866 = urem i32 %3865, 2
  %3867 = icmp eq i32 %3866, 0
  %3868 = icmp slt i32 %3863, 10
  %3869 = or i1 %3867, %3868
  br i1 %3869, label %originalBBpart21023, label %originalBB1021alteredBB

originalBBpart21023:                              ; preds = %originalBB1021
  br label %3870, !dbg !4635

3870:                                             ; preds = %originalBBpart21023
  %3871 = load i32, i32* @x.63
  %3872 = load i32, i32* @y.64
  %3873 = sub i32 %3871, 1
  %3874 = mul i32 %3871, %3873
  %3875 = urem i32 %3874, 2
  %3876 = icmp eq i32 %3875, 0
  %3877 = icmp slt i32 %3872, 10
  %3878 = or i1 %3876, %3877
  br i1 %3878, label %originalBB1025, label %originalBB1025alteredBB

originalBB1025:                                   ; preds = %3870, %originalBB1025alteredBB
  %3879 = load i64, i64* %29, align 8, !dbg !4641
  %3880 = load i64, i64* %20, align 8, !dbg !4641
  %3881 = icmp ult i64 %3879, %3880, !dbg !4641
  %3882 = load i32, i32* @x.63
  %3883 = load i32, i32* @y.64
  %3884 = sub i32 %3882, 1
  %3885 = mul i32 %3882, %3884
  %3886 = urem i32 %3885, 2
  %3887 = icmp eq i32 %3886, 0
  %3888 = icmp slt i32 %3883, 10
  %3889 = or i1 %3887, %3888
  br i1 %3889, label %originalBBpart21027, label %originalBB1025alteredBB

originalBBpart21027:                              ; preds = %originalBB1025
  br i1 %3881, label %3890, label %3910, !dbg !4644

3890:                                             ; preds = %originalBBpart21027
  %3891 = load i32, i32* @x.63
  %3892 = load i32, i32* @y.64
  %3893 = sub i32 %3891, 1
  %3894 = mul i32 %3891, %3893
  %3895 = urem i32 %3894, 2
  %3896 = icmp eq i32 %3895, 0
  %3897 = icmp slt i32 %3892, 10
  %3898 = or i1 %3896, %3897
  br i1 %3898, label %originalBB1029, label %originalBB1029alteredBB

originalBB1029:                                   ; preds = %3890, %originalBB1029alteredBB
  %3899 = load i8*, i8** %19, align 8, !dbg !4641
  %3900 = load i64, i64* %29, align 8, !dbg !4641
  %3901 = getelementptr inbounds i8, i8* %3899, i64 %3900, !dbg !4641
  store i8 36, i8* %3901, align 1, !dbg !4641
  %3902 = load i32, i32* @x.63
  %3903 = load i32, i32* @y.64
  %3904 = sub i32 %3902, 1
  %3905 = mul i32 %3902, %3904
  %3906 = urem i32 %3905, 2
  %3907 = icmp eq i32 %3906, 0
  %3908 = icmp slt i32 %3903, 10
  %3909 = or i1 %3907, %3908
  br i1 %3909, label %originalBBpart21031, label %originalBB1029alteredBB

originalBBpart21031:                              ; preds = %originalBB1029
  br label %3910, !dbg !4641

3910:                                             ; preds = %originalBBpart21031, %originalBBpart21027
  %3911 = load i64, i64* %29, align 8, !dbg !4644
  %3912 = add i64 %3911, 1, !dbg !4644
  store i64 %3912, i64* %29, align 8, !dbg !4644
  br label %3913, !dbg !4644

3913:                                             ; preds = %3910
  %3914 = load i32, i32* @x.63
  %3915 = load i32, i32* @y.64
  %3916 = sub i32 %3914, 1
  %3917 = mul i32 %3914, %3916
  %3918 = urem i32 %3917, 2
  %3919 = icmp eq i32 %3918, 0
  %3920 = icmp slt i32 %3915, 10
  %3921 = or i1 %3919, %3920
  br i1 %3921, label %originalBB1033, label %originalBB1033alteredBB

originalBB1033:                                   ; preds = %3913, %originalBB1033alteredBB
  %3922 = load i32, i32* @x.63
  %3923 = load i32, i32* @y.64
  %3924 = sub i32 %3922, 1
  %3925 = mul i32 %3922, %3924
  %3926 = urem i32 %3925, 2
  %3927 = icmp eq i32 %3926, 0
  %3928 = icmp slt i32 %3923, 10
  %3929 = or i1 %3927, %3928
  br i1 %3929, label %originalBBpart21035, label %originalBB1033alteredBB

originalBBpart21035:                              ; preds = %originalBB1033
  br label %3930, !dbg !4635

3930:                                             ; preds = %originalBBpart21035
  %3931 = load i32, i32* @x.63
  %3932 = load i32, i32* @y.64
  %3933 = sub i32 %3931, 1
  %3934 = mul i32 %3931, %3933
  %3935 = urem i32 %3934, 2
  %3936 = icmp eq i32 %3935, 0
  %3937 = icmp slt i32 %3932, 10
  %3938 = or i1 %3936, %3937
  br i1 %3938, label %originalBB1037, label %originalBB1037alteredBB

originalBB1037:                                   ; preds = %3930, %originalBB1037alteredBB
  %3939 = load i64, i64* %29, align 8, !dbg !4645
  %3940 = load i64, i64* %20, align 8, !dbg !4645
  %3941 = icmp ult i64 %3939, %3940, !dbg !4645
  %3942 = load i32, i32* @x.63
  %3943 = load i32, i32* @y.64
  %3944 = sub i32 %3942, 1
  %3945 = mul i32 %3942, %3944
  %3946 = urem i32 %3945, 2
  %3947 = icmp eq i32 %3946, 0
  %3948 = icmp slt i32 %3943, 10
  %3949 = or i1 %3947, %3948
  br i1 %3949, label %originalBBpart21039, label %originalBB1037alteredBB

originalBBpart21039:                              ; preds = %originalBB1037
  br i1 %3941, label %3950, label %3970, !dbg !4648

3950:                                             ; preds = %originalBBpart21039
  %3951 = load i32, i32* @x.63
  %3952 = load i32, i32* @y.64
  %3953 = sub i32 %3951, 1
  %3954 = mul i32 %3951, %3953
  %3955 = urem i32 %3954, 2
  %3956 = icmp eq i32 %3955, 0
  %3957 = icmp slt i32 %3952, 10
  %3958 = or i1 %3956, %3957
  br i1 %3958, label %originalBB1041, label %originalBB1041alteredBB

originalBB1041:                                   ; preds = %3950, %originalBB1041alteredBB
  %3959 = load i8*, i8** %19, align 8, !dbg !4645
  %3960 = load i64, i64* %29, align 8, !dbg !4645
  %3961 = getelementptr inbounds i8, i8* %3959, i64 %3960, !dbg !4645
  store i8 39, i8* %3961, align 1, !dbg !4645
  %3962 = load i32, i32* @x.63
  %3963 = load i32, i32* @y.64
  %3964 = sub i32 %3962, 1
  %3965 = mul i32 %3962, %3964
  %3966 = urem i32 %3965, 2
  %3967 = icmp eq i32 %3966, 0
  %3968 = icmp slt i32 %3963, 10
  %3969 = or i1 %3967, %3968
  br i1 %3969, label %originalBBpart21043, label %originalBB1041alteredBB

originalBBpart21043:                              ; preds = %originalBB1041
  br label %3970, !dbg !4645

3970:                                             ; preds = %originalBBpart21043, %originalBBpart21039
  %3971 = load i32, i32* @x.63
  %3972 = load i32, i32* @y.64
  %3973 = sub i32 %3971, 1
  %3974 = mul i32 %3971, %3973
  %3975 = urem i32 %3974, 2
  %3976 = icmp eq i32 %3975, 0
  %3977 = icmp slt i32 %3972, 10
  %3978 = or i1 %3976, %3977
  br i1 %3978, label %originalBB1045, label %originalBB1045alteredBB

originalBB1045:                                   ; preds = %3970, %originalBB1045alteredBB
  %3979 = load i64, i64* %29, align 8, !dbg !4648
  %3980 = add i64 %3979, 1, !dbg !4648
  store i64 %3980, i64* %29, align 8, !dbg !4648
  %3981 = load i32, i32* @x.63
  %3982 = load i32, i32* @y.64
  %3983 = sub i32 %3981, 1
  %3984 = mul i32 %3981, %3983
  %3985 = urem i32 %3984, 2
  %3986 = icmp eq i32 %3985, 0
  %3987 = icmp slt i32 %3982, 10
  %3988 = or i1 %3986, %3987
  br i1 %3988, label %originalBBpart21059, label %originalBB1045alteredBB

originalBBpart21059:                              ; preds = %originalBB1045
  br label %3989, !dbg !4648

3989:                                             ; preds = %originalBBpart21059
  %3990 = load i32, i32* @x.63
  %3991 = load i32, i32* @y.64
  %3992 = sub i32 %3990, 1
  %3993 = mul i32 %3990, %3992
  %3994 = urem i32 %3993, 2
  %3995 = icmp eq i32 %3994, 0
  %3996 = icmp slt i32 %3991, 10
  %3997 = or i1 %3995, %3996
  br i1 %3997, label %originalBB1061, label %originalBB1061alteredBB

originalBB1061:                                   ; preds = %3989, %originalBB1061alteredBB
  store i8 1, i8* %36, align 1, !dbg !4635
  %3998 = load i32, i32* @x.63
  %3999 = load i32, i32* @y.64
  %4000 = sub i32 %3998, 1
  %4001 = mul i32 %3998, %4000
  %4002 = urem i32 %4001, 2
  %4003 = icmp eq i32 %4002, 0
  %4004 = icmp slt i32 %3999, 10
  %4005 = or i1 %4003, %4004
  br i1 %4005, label %originalBBpart21063, label %originalBB1061alteredBB

originalBBpart21063:                              ; preds = %originalBB1061
  br label %4006, !dbg !4635

4006:                                             ; preds = %originalBBpart21063, %3790, %originalBBpart21003
  %4007 = load i32, i32* @x.63
  %4008 = load i32, i32* @y.64
  %4009 = sub i32 %4007, 1
  %4010 = mul i32 %4007, %4009
  %4011 = urem i32 %4010, 2
  %4012 = icmp eq i32 %4011, 0
  %4013 = icmp slt i32 %4008, 10
  %4014 = or i1 %4012, %4013
  br i1 %4014, label %originalBB1065, label %originalBB1065alteredBB

originalBB1065:                                   ; preds = %4006, %originalBB1065alteredBB
  %4015 = load i32, i32* @x.63
  %4016 = load i32, i32* @y.64
  %4017 = sub i32 %4015, 1
  %4018 = mul i32 %4015, %4017
  %4019 = urem i32 %4018, 2
  %4020 = icmp eq i32 %4019, 0
  %4021 = icmp slt i32 %4016, 10
  %4022 = or i1 %4020, %4021
  br i1 %4022, label %originalBBpart21067, label %originalBB1065alteredBB

originalBBpart21067:                              ; preds = %originalBB1065
  br label %4023, !dbg !4632

4023:                                             ; preds = %originalBBpart21067
  %4024 = load i32, i32* @x.63
  %4025 = load i32, i32* @y.64
  %4026 = sub i32 %4024, 1
  %4027 = mul i32 %4024, %4026
  %4028 = urem i32 %4027, 2
  %4029 = icmp eq i32 %4028, 0
  %4030 = icmp slt i32 %4025, 10
  %4031 = or i1 %4029, %4030
  br i1 %4031, label %originalBB1069, label %originalBB1069alteredBB

originalBB1069:                                   ; preds = %4023, %originalBB1069alteredBB
  %4032 = load i64, i64* %29, align 8, !dbg !4649
  %4033 = load i64, i64* %20, align 8, !dbg !4649
  %4034 = icmp ult i64 %4032, %4033, !dbg !4649
  %4035 = load i32, i32* @x.63
  %4036 = load i32, i32* @y.64
  %4037 = sub i32 %4035, 1
  %4038 = mul i32 %4035, %4037
  %4039 = urem i32 %4038, 2
  %4040 = icmp eq i32 %4039, 0
  %4041 = icmp slt i32 %4036, 10
  %4042 = or i1 %4040, %4041
  br i1 %4042, label %originalBBpart21071, label %originalBB1069alteredBB

originalBBpart21071:                              ; preds = %originalBB1069
  br i1 %4034, label %4043, label %4063, !dbg !4652

4043:                                             ; preds = %originalBBpart21071
  %4044 = load i32, i32* @x.63
  %4045 = load i32, i32* @y.64
  %4046 = sub i32 %4044, 1
  %4047 = mul i32 %4044, %4046
  %4048 = urem i32 %4047, 2
  %4049 = icmp eq i32 %4048, 0
  %4050 = icmp slt i32 %4045, 10
  %4051 = or i1 %4049, %4050
  br i1 %4051, label %originalBB1073, label %originalBB1073alteredBB

originalBB1073:                                   ; preds = %4043, %originalBB1073alteredBB
  %4052 = load i8*, i8** %19, align 8, !dbg !4649
  %4053 = load i64, i64* %29, align 8, !dbg !4649
  %4054 = getelementptr inbounds i8, i8* %4052, i64 %4053, !dbg !4649
  store i8 92, i8* %4054, align 1, !dbg !4649
  %4055 = load i32, i32* @x.63
  %4056 = load i32, i32* @y.64
  %4057 = sub i32 %4055, 1
  %4058 = mul i32 %4055, %4057
  %4059 = urem i32 %4058, 2
  %4060 = icmp eq i32 %4059, 0
  %4061 = icmp slt i32 %4056, 10
  %4062 = or i1 %4060, %4061
  br i1 %4062, label %originalBBpart21075, label %originalBB1073alteredBB

originalBBpart21075:                              ; preds = %originalBB1073
  br label %4063, !dbg !4649

4063:                                             ; preds = %originalBBpart21075, %originalBBpart21071
  %4064 = load i32, i32* @x.63
  %4065 = load i32, i32* @y.64
  %4066 = sub i32 %4064, 1
  %4067 = mul i32 %4064, %4066
  %4068 = urem i32 %4067, 2
  %4069 = icmp eq i32 %4068, 0
  %4070 = icmp slt i32 %4065, 10
  %4071 = or i1 %4069, %4070
  br i1 %4071, label %originalBB1077, label %originalBB1077alteredBB

originalBB1077:                                   ; preds = %4063, %originalBB1077alteredBB
  %4072 = load i64, i64* %29, align 8, !dbg !4652
  %4073 = add i64 %4072, 1, !dbg !4652
  store i64 %4073, i64* %29, align 8, !dbg !4652
  %4074 = load i32, i32* @x.63
  %4075 = load i32, i32* @y.64
  %4076 = sub i32 %4074, 1
  %4077 = mul i32 %4074, %4076
  %4078 = urem i32 %4077, 2
  %4079 = icmp eq i32 %4078, 0
  %4080 = icmp slt i32 %4075, 10
  %4081 = or i1 %4079, %4080
  br i1 %4081, label %originalBBpart21082, label %originalBB1077alteredBB

originalBBpart21082:                              ; preds = %originalBB1077
  br label %4082, !dbg !4652

4082:                                             ; preds = %originalBBpart21082
  %4083 = load i32, i32* @x.63
  %4084 = load i32, i32* @y.64
  %4085 = sub i32 %4083, 1
  %4086 = mul i32 %4083, %4085
  %4087 = urem i32 %4086, 2
  %4088 = icmp eq i32 %4087, 0
  %4089 = icmp slt i32 %4084, 10
  %4090 = or i1 %4088, %4089
  br i1 %4090, label %originalBB1084, label %originalBB1084alteredBB

originalBB1084:                                   ; preds = %4082, %originalBB1084alteredBB
  %4091 = load i32, i32* @x.63
  %4092 = load i32, i32* @y.64
  %4093 = sub i32 %4091, 1
  %4094 = mul i32 %4091, %4093
  %4095 = urem i32 %4094, 2
  %4096 = icmp eq i32 %4095, 0
  %4097 = icmp slt i32 %4092, 10
  %4098 = or i1 %4096, %4097
  br i1 %4098, label %originalBBpart21086, label %originalBB1084alteredBB

originalBBpart21086:                              ; preds = %originalBB1084
  br label %4099, !dbg !4632

4099:                                             ; preds = %originalBBpart21086
  %4100 = load i32, i32* @x.63
  %4101 = load i32, i32* @y.64
  %4102 = sub i32 %4100, 1
  %4103 = mul i32 %4100, %4102
  %4104 = urem i32 %4103, 2
  %4105 = icmp eq i32 %4104, 0
  %4106 = icmp slt i32 %4101, 10
  %4107 = or i1 %4105, %4106
  br i1 %4107, label %originalBB1088, label %originalBB1088alteredBB

originalBB1088:                                   ; preds = %4099, %originalBB1088alteredBB
  %4108 = load i32, i32* @x.63
  %4109 = load i32, i32* @y.64
  %4110 = sub i32 %4108, 1
  %4111 = mul i32 %4108, %4110
  %4112 = urem i32 %4111, 2
  %4113 = icmp eq i32 %4112, 0
  %4114 = icmp slt i32 %4109, 10
  %4115 = or i1 %4113, %4114
  br i1 %4115, label %originalBBpart21090, label %originalBB1088alteredBB

originalBBpart21090:                              ; preds = %originalBB1088
  br label %4116, !dbg !4653

4116:                                             ; preds = %originalBBpart21090
  %4117 = load i32, i32* @x.63
  %4118 = load i32, i32* @y.64
  %4119 = sub i32 %4117, 1
  %4120 = mul i32 %4117, %4119
  %4121 = urem i32 %4120, 2
  %4122 = icmp eq i32 %4121, 0
  %4123 = icmp slt i32 %4118, 10
  %4124 = or i1 %4122, %4123
  br i1 %4124, label %originalBB1092, label %originalBB1092alteredBB

originalBB1092:                                   ; preds = %4116, %originalBB1092alteredBB
  %4125 = load i64, i64* %29, align 8, !dbg !4654
  %4126 = load i64, i64* %20, align 8, !dbg !4654
  %4127 = icmp ult i64 %4125, %4126, !dbg !4654
  %4128 = load i32, i32* @x.63
  %4129 = load i32, i32* @y.64
  %4130 = sub i32 %4128, 1
  %4131 = mul i32 %4128, %4130
  %4132 = urem i32 %4131, 2
  %4133 = icmp eq i32 %4132, 0
  %4134 = icmp slt i32 %4129, 10
  %4135 = or i1 %4133, %4134
  br i1 %4135, label %originalBBpart21094, label %originalBB1092alteredBB

originalBBpart21094:                              ; preds = %originalBB1092
  br i1 %4127, label %4136, label %4161, !dbg !4657

4136:                                             ; preds = %originalBBpart21094
  %4137 = load i32, i32* @x.63
  %4138 = load i32, i32* @y.64
  %4139 = sub i32 %4137, 1
  %4140 = mul i32 %4137, %4139
  %4141 = urem i32 %4140, 2
  %4142 = icmp eq i32 %4141, 0
  %4143 = icmp slt i32 %4138, 10
  %4144 = or i1 %4142, %4143
  br i1 %4144, label %originalBB1096, label %originalBB1096alteredBB

originalBB1096:                                   ; preds = %4136, %originalBB1096alteredBB
  %4145 = load i8, i8* %39, align 1, !dbg !4654
  %4146 = zext i8 %4145 to i32, !dbg !4654
  %4147 = ashr i32 %4146, 6, !dbg !4654
  %4148 = add nsw i32 48, %4147, !dbg !4654
  %4149 = trunc i32 %4148 to i8, !dbg !4654
  %4150 = load i8*, i8** %19, align 8, !dbg !4654
  %4151 = load i64, i64* %29, align 8, !dbg !4654
  %4152 = getelementptr inbounds i8, i8* %4150, i64 %4151, !dbg !4654
  store i8 %4149, i8* %4152, align 1, !dbg !4654
  %4153 = load i32, i32* @x.63
  %4154 = load i32, i32* @y.64
  %4155 = sub i32 %4153, 1
  %4156 = mul i32 %4153, %4155
  %4157 = urem i32 %4156, 2
  %4158 = icmp eq i32 %4157, 0
  %4159 = icmp slt i32 %4154, 10
  %4160 = or i1 %4158, %4159
  br i1 %4160, label %originalBBpart21109, label %originalBB1096alteredBB

originalBBpart21109:                              ; preds = %originalBB1096
  br label %4161, !dbg !4654

4161:                                             ; preds = %originalBBpart21109, %originalBBpart21094
  %4162 = load i32, i32* @x.63
  %4163 = load i32, i32* @y.64
  %4164 = sub i32 %4162, 1
  %4165 = mul i32 %4162, %4164
  %4166 = urem i32 %4165, 2
  %4167 = icmp eq i32 %4166, 0
  %4168 = icmp slt i32 %4163, 10
  %4169 = or i1 %4167, %4168
  br i1 %4169, label %originalBB1111, label %originalBB1111alteredBB

originalBB1111:                                   ; preds = %4161, %originalBB1111alteredBB
  %4170 = load i64, i64* %29, align 8, !dbg !4657
  %4171 = add i64 %4170, 1, !dbg !4657
  store i64 %4171, i64* %29, align 8, !dbg !4657
  %4172 = load i32, i32* @x.63
  %4173 = load i32, i32* @y.64
  %4174 = sub i32 %4172, 1
  %4175 = mul i32 %4172, %4174
  %4176 = urem i32 %4175, 2
  %4177 = icmp eq i32 %4176, 0
  %4178 = icmp slt i32 %4173, 10
  %4179 = or i1 %4177, %4178
  br i1 %4179, label %originalBBpart21120, label %originalBB1111alteredBB

originalBBpart21120:                              ; preds = %originalBB1111
  br label %4180, !dbg !4657

4180:                                             ; preds = %originalBBpart21120
  br label %4181, !dbg !4658

4181:                                             ; preds = %4180
  %4182 = load i32, i32* @x.63
  %4183 = load i32, i32* @y.64
  %4184 = sub i32 %4182, 1
  %4185 = mul i32 %4182, %4184
  %4186 = urem i32 %4185, 2
  %4187 = icmp eq i32 %4186, 0
  %4188 = icmp slt i32 %4183, 10
  %4189 = or i1 %4187, %4188
  br i1 %4189, label %originalBB1122, label %originalBB1122alteredBB

originalBB1122:                                   ; preds = %4181, %originalBB1122alteredBB
  %4190 = load i64, i64* %29, align 8, !dbg !4659
  %4191 = load i64, i64* %20, align 8, !dbg !4659
  %4192 = icmp ult i64 %4190, %4191, !dbg !4659
  %4193 = load i32, i32* @x.63
  %4194 = load i32, i32* @y.64
  %4195 = sub i32 %4193, 1
  %4196 = mul i32 %4193, %4195
  %4197 = urem i32 %4196, 2
  %4198 = icmp eq i32 %4197, 0
  %4199 = icmp slt i32 %4194, 10
  %4200 = or i1 %4198, %4199
  br i1 %4200, label %originalBBpart21124, label %originalBB1122alteredBB

originalBBpart21124:                              ; preds = %originalBB1122
  br i1 %4192, label %4201, label %4211, !dbg !4662

4201:                                             ; preds = %originalBBpart21124
  %4202 = load i8, i8* %39, align 1, !dbg !4659
  %4203 = zext i8 %4202 to i32, !dbg !4659
  %4204 = ashr i32 %4203, 3, !dbg !4659
  %4205 = and i32 %4204, 7, !dbg !4659
  %4206 = add nsw i32 48, %4205, !dbg !4659
  %4207 = trunc i32 %4206 to i8, !dbg !4659
  %4208 = load i8*, i8** %19, align 8, !dbg !4659
  %4209 = load i64, i64* %29, align 8, !dbg !4659
  %4210 = getelementptr inbounds i8, i8* %4208, i64 %4209, !dbg !4659
  store i8 %4207, i8* %4210, align 1, !dbg !4659
  br label %4211, !dbg !4659

4211:                                             ; preds = %4201, %originalBBpart21124
  %4212 = load i32, i32* @x.63
  %4213 = load i32, i32* @y.64
  %4214 = sub i32 %4212, 1
  %4215 = mul i32 %4212, %4214
  %4216 = urem i32 %4215, 2
  %4217 = icmp eq i32 %4216, 0
  %4218 = icmp slt i32 %4213, 10
  %4219 = or i1 %4217, %4218
  br i1 %4219, label %originalBB1126, label %originalBB1126alteredBB

originalBB1126:                                   ; preds = %4211, %originalBB1126alteredBB
  %4220 = load i64, i64* %29, align 8, !dbg !4662
  %4221 = add i64 %4220, 1, !dbg !4662
  store i64 %4221, i64* %29, align 8, !dbg !4662
  %4222 = load i32, i32* @x.63
  %4223 = load i32, i32* @y.64
  %4224 = sub i32 %4222, 1
  %4225 = mul i32 %4222, %4224
  %4226 = urem i32 %4225, 2
  %4227 = icmp eq i32 %4226, 0
  %4228 = icmp slt i32 %4223, 10
  %4229 = or i1 %4227, %4228
  br i1 %4229, label %originalBBpart21133, label %originalBB1126alteredBB

originalBBpart21133:                              ; preds = %originalBB1126
  br label %4230, !dbg !4662

4230:                                             ; preds = %originalBBpart21133
  %4231 = load i32, i32* @x.63
  %4232 = load i32, i32* @y.64
  %4233 = sub i32 %4231, 1
  %4234 = mul i32 %4231, %4233
  %4235 = urem i32 %4234, 2
  %4236 = icmp eq i32 %4235, 0
  %4237 = icmp slt i32 %4232, 10
  %4238 = or i1 %4236, %4237
  br i1 %4238, label %originalBB1135, label %originalBB1135alteredBB

originalBB1135:                                   ; preds = %4230, %originalBB1135alteredBB
  %4239 = load i8, i8* %39, align 1, !dbg !4663
  %4240 = zext i8 %4239 to i32, !dbg !4663
  %4241 = and i32 %4240, 7, !dbg !4664
  %4242 = add nsw i32 48, %4241, !dbg !4665
  %4243 = trunc i32 %4242 to i8, !dbg !4666
  store i8 %4243, i8* %39, align 1, !dbg !4667
  %4244 = load i32, i32* @x.63
  %4245 = load i32, i32* @y.64
  %4246 = sub i32 %4244, 1
  %4247 = mul i32 %4244, %4246
  %4248 = urem i32 %4247, 2
  %4249 = icmp eq i32 %4248, 0
  %4250 = icmp slt i32 %4245, 10
  %4251 = or i1 %4249, %4250
  br i1 %4251, label %originalBBpart21139, label %originalBB1135alteredBB

originalBBpart21139:                              ; preds = %originalBB1135
  br label %4365, !dbg !4668

4252:                                             ; preds = %originalBBpart2991, %originalBBpart2987
  %4253 = load i32, i32* @x.63
  %4254 = load i32, i32* @y.64
  %4255 = sub i32 %4253, 1
  %4256 = mul i32 %4253, %4255
  %4257 = urem i32 %4256, 2
  %4258 = icmp eq i32 %4257, 0
  %4259 = icmp slt i32 %4254, 10
  %4260 = or i1 %4258, %4259
  br i1 %4260, label %originalBB1141, label %originalBB1141alteredBB

originalBB1141:                                   ; preds = %4252, %originalBB1141alteredBB
  %4261 = load i8, i8* %41, align 1, !dbg !4669
  %4262 = trunc i8 %4261 to i1, !dbg !4669
  %4263 = load i32, i32* @x.63
  %4264 = load i32, i32* @y.64
  %4265 = sub i32 %4263, 1
  %4266 = mul i32 %4263, %4265
  %4267 = urem i32 %4266, 2
  %4268 = icmp eq i32 %4267, 0
  %4269 = icmp slt i32 %4264, 10
  %4270 = or i1 %4268, %4269
  br i1 %4270, label %originalBBpart21143, label %originalBB1141alteredBB

originalBBpart21143:                              ; preds = %originalBB1141
  br i1 %4262, label %4271, label %4348, !dbg !4671

4271:                                             ; preds = %originalBBpart21143
  %4272 = load i32, i32* @x.63
  %4273 = load i32, i32* @y.64
  %4274 = sub i32 %4272, 1
  %4275 = mul i32 %4272, %4274
  %4276 = urem i32 %4275, 2
  %4277 = icmp eq i32 %4276, 0
  %4278 = icmp slt i32 %4273, 10
  %4279 = or i1 %4277, %4278
  br i1 %4279, label %originalBB1145, label %originalBB1145alteredBB

originalBB1145:                                   ; preds = %4271, %originalBB1145alteredBB
  %4280 = load i32, i32* @x.63
  %4281 = load i32, i32* @y.64
  %4282 = sub i32 %4280, 1
  %4283 = mul i32 %4280, %4282
  %4284 = urem i32 %4283, 2
  %4285 = icmp eq i32 %4284, 0
  %4286 = icmp slt i32 %4281, 10
  %4287 = or i1 %4285, %4286
  br i1 %4287, label %originalBBpart21147, label %originalBB1145alteredBB

originalBBpart21147:                              ; preds = %originalBB1145
  br label %4288, !dbg !4672

4288:                                             ; preds = %originalBBpart21147
  %4289 = load i32, i32* @x.63
  %4290 = load i32, i32* @y.64
  %4291 = sub i32 %4289, 1
  %4292 = mul i32 %4289, %4291
  %4293 = urem i32 %4292, 2
  %4294 = icmp eq i32 %4293, 0
  %4295 = icmp slt i32 %4290, 10
  %4296 = or i1 %4294, %4295
  br i1 %4296, label %originalBB1149, label %originalBB1149alteredBB

originalBB1149:                                   ; preds = %4288, %originalBB1149alteredBB
  %4297 = load i64, i64* %29, align 8, !dbg !4674
  %4298 = load i64, i64* %20, align 8, !dbg !4674
  %4299 = icmp ult i64 %4297, %4298, !dbg !4674
  %4300 = load i32, i32* @x.63
  %4301 = load i32, i32* @y.64
  %4302 = sub i32 %4300, 1
  %4303 = mul i32 %4300, %4302
  %4304 = urem i32 %4303, 2
  %4305 = icmp eq i32 %4304, 0
  %4306 = icmp slt i32 %4301, 10
  %4307 = or i1 %4305, %4306
  br i1 %4307, label %originalBBpart21151, label %originalBB1149alteredBB

originalBBpart21151:                              ; preds = %originalBB1149
  br i1 %4299, label %4308, label %4312, !dbg !4677

4308:                                             ; preds = %originalBBpart21151
  %4309 = load i8*, i8** %19, align 8, !dbg !4674
  %4310 = load i64, i64* %29, align 8, !dbg !4674
  %4311 = getelementptr inbounds i8, i8* %4309, i64 %4310, !dbg !4674
  store i8 92, i8* %4311, align 1, !dbg !4674
  br label %4312, !dbg !4674

4312:                                             ; preds = %4308, %originalBBpart21151
  %4313 = load i32, i32* @x.63
  %4314 = load i32, i32* @y.64
  %4315 = sub i32 %4313, 1
  %4316 = mul i32 %4313, %4315
  %4317 = urem i32 %4316, 2
  %4318 = icmp eq i32 %4317, 0
  %4319 = icmp slt i32 %4314, 10
  %4320 = or i1 %4318, %4319
  br i1 %4320, label %originalBB1153, label %originalBB1153alteredBB

originalBB1153:                                   ; preds = %4312, %originalBB1153alteredBB
  %4321 = load i64, i64* %29, align 8, !dbg !4677
  %4322 = add i64 %4321, 1, !dbg !4677
  store i64 %4322, i64* %29, align 8, !dbg !4677
  %4323 = load i32, i32* @x.63
  %4324 = load i32, i32* @y.64
  %4325 = sub i32 %4323, 1
  %4326 = mul i32 %4323, %4325
  %4327 = urem i32 %4326, 2
  %4328 = icmp eq i32 %4327, 0
  %4329 = icmp slt i32 %4324, 10
  %4330 = or i1 %4328, %4329
  br i1 %4330, label %originalBBpart21164, label %originalBB1153alteredBB

originalBBpart21164:                              ; preds = %originalBB1153
  br label %4331, !dbg !4677

4331:                                             ; preds = %originalBBpart21164
  %4332 = load i32, i32* @x.63
  %4333 = load i32, i32* @y.64
  %4334 = sub i32 %4332, 1
  %4335 = mul i32 %4332, %4334
  %4336 = urem i32 %4335, 2
  %4337 = icmp eq i32 %4336, 0
  %4338 = icmp slt i32 %4333, 10
  %4339 = or i1 %4337, %4338
  br i1 %4339, label %originalBB1166, label %originalBB1166alteredBB

originalBB1166:                                   ; preds = %4331, %originalBB1166alteredBB
  store i8 0, i8* %41, align 1, !dbg !4678
  %4340 = load i32, i32* @x.63
  %4341 = load i32, i32* @y.64
  %4342 = sub i32 %4340, 1
  %4343 = mul i32 %4340, %4342
  %4344 = urem i32 %4343, 2
  %4345 = icmp eq i32 %4344, 0
  %4346 = icmp slt i32 %4341, 10
  %4347 = or i1 %4345, %4346
  br i1 %4347, label %originalBBpart21168, label %originalBB1166alteredBB

originalBBpart21168:                              ; preds = %originalBB1166
  br label %4348, !dbg !4679

4348:                                             ; preds = %originalBBpart21168, %originalBBpart21143
  %4349 = load i32, i32* @x.63
  %4350 = load i32, i32* @y.64
  %4351 = sub i32 %4349, 1
  %4352 = mul i32 %4349, %4351
  %4353 = urem i32 %4352, 2
  %4354 = icmp eq i32 %4353, 0
  %4355 = icmp slt i32 %4350, 10
  %4356 = or i1 %4354, %4355
  br i1 %4356, label %originalBB1170, label %originalBB1170alteredBB

originalBB1170:                                   ; preds = %4348, %originalBB1170alteredBB
  %4357 = load i32, i32* @x.63
  %4358 = load i32, i32* @y.64
  %4359 = sub i32 %4357, 1
  %4360 = mul i32 %4357, %4359
  %4361 = urem i32 %4360, 2
  %4362 = icmp eq i32 %4361, 0
  %4363 = icmp slt i32 %4358, 10
  %4364 = or i1 %4362, %4363
  br i1 %4364, label %originalBBpart21172, label %originalBB1170alteredBB

originalBBpart21172:                              ; preds = %originalBB1170
  br label %4365

4365:                                             ; preds = %originalBBpart21172, %originalBBpart21139
  %4366 = load i32, i32* @x.63
  %4367 = load i32, i32* @y.64
  %4368 = sub i32 %4366, 1
  %4369 = mul i32 %4366, %4368
  %4370 = urem i32 %4369, 2
  %4371 = icmp eq i32 %4370, 0
  %4372 = icmp slt i32 %4367, 10
  %4373 = or i1 %4371, %4372
  br i1 %4373, label %originalBB1174, label %originalBB1174alteredBB

originalBB1174:                                   ; preds = %4365, %originalBB1174alteredBB
  %4374 = load i64, i64* %50, align 8, !dbg !4680
  %4375 = load i64, i64* %28, align 8, !dbg !4682
  %4376 = add i64 %4375, 1, !dbg !4683
  %4377 = icmp ule i64 %4374, %4376, !dbg !4684
  %4378 = load i32, i32* @x.63
  %4379 = load i32, i32* @y.64
  %4380 = sub i32 %4378, 1
  %4381 = mul i32 %4378, %4380
  %4382 = urem i32 %4381, 2
  %4383 = icmp eq i32 %4382, 0
  %4384 = icmp slt i32 %4379, 10
  %4385 = or i1 %4383, %4384
  br i1 %4385, label %originalBBpart21185, label %originalBB1174alteredBB

originalBBpart21185:                              ; preds = %originalBB1174
  br i1 %4377, label %4386, label %4403, !dbg !4685

4386:                                             ; preds = %originalBBpart21185
  %4387 = load i32, i32* @x.63
  %4388 = load i32, i32* @y.64
  %4389 = sub i32 %4387, 1
  %4390 = mul i32 %4387, %4389
  %4391 = urem i32 %4390, 2
  %4392 = icmp eq i32 %4391, 0
  %4393 = icmp slt i32 %4388, 10
  %4394 = or i1 %4392, %4393
  br i1 %4394, label %originalBB1187, label %originalBB1187alteredBB

originalBB1187:                                   ; preds = %4386, %originalBB1187alteredBB
  %4395 = load i32, i32* @x.63
  %4396 = load i32, i32* @y.64
  %4397 = sub i32 %4395, 1
  %4398 = mul i32 %4395, %4397
  %4399 = urem i32 %4398, 2
  %4400 = icmp eq i32 %4399, 0
  %4401 = icmp slt i32 %4396, 10
  %4402 = or i1 %4400, %4401
  br i1 %4402, label %originalBBpart21189, label %originalBB1187alteredBB

originalBBpart21189:                              ; preds = %originalBB1187
  br label %4695, !dbg !4686

4403:                                             ; preds = %originalBBpart21185
  %4404 = load i32, i32* @x.63
  %4405 = load i32, i32* @y.64
  %4406 = sub i32 %4404, 1
  %4407 = mul i32 %4404, %4406
  %4408 = urem i32 %4407, 2
  %4409 = icmp eq i32 %4408, 0
  %4410 = icmp slt i32 %4405, 10
  %4411 = or i1 %4409, %4410
  br i1 %4411, label %originalBB1191, label %originalBB1191alteredBB

originalBB1191:                                   ; preds = %4403, %originalBB1191alteredBB
  %4412 = load i32, i32* @x.63
  %4413 = load i32, i32* @y.64
  %4414 = sub i32 %4412, 1
  %4415 = mul i32 %4412, %4414
  %4416 = urem i32 %4415, 2
  %4417 = icmp eq i32 %4416, 0
  %4418 = icmp slt i32 %4413, 10
  %4419 = or i1 %4417, %4418
  br i1 %4419, label %originalBBpart21193, label %originalBB1191alteredBB

originalBBpart21193:                              ; preds = %originalBB1191
  br label %4420, !dbg !4687

4420:                                             ; preds = %originalBBpart21193
  %4421 = load i32, i32* @x.63
  %4422 = load i32, i32* @y.64
  %4423 = sub i32 %4421, 1
  %4424 = mul i32 %4421, %4423
  %4425 = urem i32 %4424, 2
  %4426 = icmp eq i32 %4425, 0
  %4427 = icmp slt i32 %4422, 10
  %4428 = or i1 %4426, %4427
  br i1 %4428, label %originalBB1195, label %originalBB1195alteredBB

originalBB1195:                                   ; preds = %4420, %originalBB1195alteredBB
  %4429 = load i8, i8* %36, align 1, !dbg !4688
  %4430 = trunc i8 %4429 to i1, !dbg !4688
  %4431 = load i32, i32* @x.63
  %4432 = load i32, i32* @y.64
  %4433 = sub i32 %4431, 1
  %4434 = mul i32 %4431, %4433
  %4435 = urem i32 %4434, 2
  %4436 = icmp eq i32 %4435, 0
  %4437 = icmp slt i32 %4432, 10
  %4438 = or i1 %4436, %4437
  br i1 %4438, label %originalBBpart21197, label %originalBB1195alteredBB

originalBBpart21197:                              ; preds = %originalBB1195
  br i1 %4430, label %4439, label %4611, !dbg !4688

4439:                                             ; preds = %originalBBpart21197
  %4440 = load i32, i32* @x.63
  %4441 = load i32, i32* @y.64
  %4442 = sub i32 %4440, 1
  %4443 = mul i32 %4440, %4442
  %4444 = urem i32 %4443, 2
  %4445 = icmp eq i32 %4444, 0
  %4446 = icmp slt i32 %4441, 10
  %4447 = or i1 %4445, %4446
  br i1 %4447, label %originalBB1199, label %originalBB1199alteredBB

originalBB1199:                                   ; preds = %4439, %originalBB1199alteredBB
  %4448 = load i8, i8* %42, align 1, !dbg !4688
  %4449 = trunc i8 %4448 to i1, !dbg !4688
  %4450 = load i32, i32* @x.63
  %4451 = load i32, i32* @y.64
  %4452 = sub i32 %4450, 1
  %4453 = mul i32 %4450, %4452
  %4454 = urem i32 %4453, 2
  %4455 = icmp eq i32 %4454, 0
  %4456 = icmp slt i32 %4451, 10
  %4457 = or i1 %4455, %4456
  br i1 %4457, label %originalBBpart21201, label %originalBB1199alteredBB

originalBBpart21201:                              ; preds = %originalBB1199
  br i1 %4449, label %4611, label %4458, !dbg !4691

4458:                                             ; preds = %originalBBpart21201
  %4459 = load i32, i32* @x.63
  %4460 = load i32, i32* @y.64
  %4461 = sub i32 %4459, 1
  %4462 = mul i32 %4459, %4461
  %4463 = urem i32 %4462, 2
  %4464 = icmp eq i32 %4463, 0
  %4465 = icmp slt i32 %4460, 10
  %4466 = or i1 %4464, %4465
  br i1 %4466, label %originalBB1203, label %originalBB1203alteredBB

originalBB1203:                                   ; preds = %4458, %originalBB1203alteredBB
  %4467 = load i32, i32* @x.63
  %4468 = load i32, i32* @y.64
  %4469 = sub i32 %4467, 1
  %4470 = mul i32 %4467, %4469
  %4471 = urem i32 %4470, 2
  %4472 = icmp eq i32 %4471, 0
  %4473 = icmp slt i32 %4468, 10
  %4474 = or i1 %4472, %4473
  br i1 %4474, label %originalBBpart21205, label %originalBB1203alteredBB

originalBBpart21205:                              ; preds = %originalBB1203
  br label %4475, !dbg !4692

4475:                                             ; preds = %originalBBpart21205
  %4476 = load i32, i32* @x.63
  %4477 = load i32, i32* @y.64
  %4478 = sub i32 %4476, 1
  %4479 = mul i32 %4476, %4478
  %4480 = urem i32 %4479, 2
  %4481 = icmp eq i32 %4480, 0
  %4482 = icmp slt i32 %4477, 10
  %4483 = or i1 %4481, %4482
  br i1 %4483, label %originalBB1207, label %originalBB1207alteredBB

originalBB1207:                                   ; preds = %4475, %originalBB1207alteredBB
  %4484 = load i64, i64* %29, align 8, !dbg !4694
  %4485 = load i64, i64* %20, align 8, !dbg !4694
  %4486 = icmp ult i64 %4484, %4485, !dbg !4694
  %4487 = load i32, i32* @x.63
  %4488 = load i32, i32* @y.64
  %4489 = sub i32 %4487, 1
  %4490 = mul i32 %4487, %4489
  %4491 = urem i32 %4490, 2
  %4492 = icmp eq i32 %4491, 0
  %4493 = icmp slt i32 %4488, 10
  %4494 = or i1 %4492, %4493
  br i1 %4494, label %originalBBpart21209, label %originalBB1207alteredBB

originalBBpart21209:                              ; preds = %originalBB1207
  br i1 %4486, label %4495, label %4499, !dbg !4697

4495:                                             ; preds = %originalBBpart21209
  %4496 = load i8*, i8** %19, align 8, !dbg !4694
  %4497 = load i64, i64* %29, align 8, !dbg !4694
  %4498 = getelementptr inbounds i8, i8* %4496, i64 %4497, !dbg !4694
  store i8 39, i8* %4498, align 1, !dbg !4694
  br label %4499, !dbg !4694

4499:                                             ; preds = %4495, %originalBBpart21209
  %4500 = load i32, i32* @x.63
  %4501 = load i32, i32* @y.64
  %4502 = sub i32 %4500, 1
  %4503 = mul i32 %4500, %4502
  %4504 = urem i32 %4503, 2
  %4505 = icmp eq i32 %4504, 0
  %4506 = icmp slt i32 %4501, 10
  %4507 = or i1 %4505, %4506
  br i1 %4507, label %originalBB1211, label %originalBB1211alteredBB

originalBB1211:                                   ; preds = %4499, %originalBB1211alteredBB
  %4508 = load i64, i64* %29, align 8, !dbg !4697
  %4509 = add i64 %4508, 1, !dbg !4697
  store i64 %4509, i64* %29, align 8, !dbg !4697
  %4510 = load i32, i32* @x.63
  %4511 = load i32, i32* @y.64
  %4512 = sub i32 %4510, 1
  %4513 = mul i32 %4510, %4512
  %4514 = urem i32 %4513, 2
  %4515 = icmp eq i32 %4514, 0
  %4516 = icmp slt i32 %4511, 10
  %4517 = or i1 %4515, %4516
  br i1 %4517, label %originalBBpart21217, label %originalBB1211alteredBB

originalBBpart21217:                              ; preds = %originalBB1211
  br label %4518, !dbg !4697

4518:                                             ; preds = %originalBBpart21217
  %4519 = load i32, i32* @x.63
  %4520 = load i32, i32* @y.64
  %4521 = sub i32 %4519, 1
  %4522 = mul i32 %4519, %4521
  %4523 = urem i32 %4522, 2
  %4524 = icmp eq i32 %4523, 0
  %4525 = icmp slt i32 %4520, 10
  %4526 = or i1 %4524, %4525
  br i1 %4526, label %originalBB1219, label %originalBB1219alteredBB

originalBB1219:                                   ; preds = %4518, %originalBB1219alteredBB
  %4527 = load i32, i32* @x.63
  %4528 = load i32, i32* @y.64
  %4529 = sub i32 %4527, 1
  %4530 = mul i32 %4527, %4529
  %4531 = urem i32 %4530, 2
  %4532 = icmp eq i32 %4531, 0
  %4533 = icmp slt i32 %4528, 10
  %4534 = or i1 %4532, %4533
  br i1 %4534, label %originalBBpart21221, label %originalBB1219alteredBB

originalBBpart21221:                              ; preds = %originalBB1219
  br label %4535, !dbg !4692

4535:                                             ; preds = %originalBBpart21221
  %4536 = load i32, i32* @x.63
  %4537 = load i32, i32* @y.64
  %4538 = sub i32 %4536, 1
  %4539 = mul i32 %4536, %4538
  %4540 = urem i32 %4539, 2
  %4541 = icmp eq i32 %4540, 0
  %4542 = icmp slt i32 %4537, 10
  %4543 = or i1 %4541, %4542
  br i1 %4543, label %originalBB1223, label %originalBB1223alteredBB

originalBB1223:                                   ; preds = %4535, %originalBB1223alteredBB
  %4544 = load i64, i64* %29, align 8, !dbg !4698
  %4545 = load i64, i64* %20, align 8, !dbg !4698
  %4546 = icmp ult i64 %4544, %4545, !dbg !4698
  %4547 = load i32, i32* @x.63
  %4548 = load i32, i32* @y.64
  %4549 = sub i32 %4547, 1
  %4550 = mul i32 %4547, %4549
  %4551 = urem i32 %4550, 2
  %4552 = icmp eq i32 %4551, 0
  %4553 = icmp slt i32 %4548, 10
  %4554 = or i1 %4552, %4553
  br i1 %4554, label %originalBBpart21225, label %originalBB1223alteredBB

originalBBpart21225:                              ; preds = %originalBB1223
  br i1 %4546, label %4555, label %4575, !dbg !4701

4555:                                             ; preds = %originalBBpart21225
  %4556 = load i32, i32* @x.63
  %4557 = load i32, i32* @y.64
  %4558 = sub i32 %4556, 1
  %4559 = mul i32 %4556, %4558
  %4560 = urem i32 %4559, 2
  %4561 = icmp eq i32 %4560, 0
  %4562 = icmp slt i32 %4557, 10
  %4563 = or i1 %4561, %4562
  br i1 %4563, label %originalBB1227, label %originalBB1227alteredBB

originalBB1227:                                   ; preds = %4555, %originalBB1227alteredBB
  %4564 = load i8*, i8** %19, align 8, !dbg !4698
  %4565 = load i64, i64* %29, align 8, !dbg !4698
  %4566 = getelementptr inbounds i8, i8* %4564, i64 %4565, !dbg !4698
  store i8 39, i8* %4566, align 1, !dbg !4698
  %4567 = load i32, i32* @x.63
  %4568 = load i32, i32* @y.64
  %4569 = sub i32 %4567, 1
  %4570 = mul i32 %4567, %4569
  %4571 = urem i32 %4570, 2
  %4572 = icmp eq i32 %4571, 0
  %4573 = icmp slt i32 %4568, 10
  %4574 = or i1 %4572, %4573
  br i1 %4574, label %originalBBpart21229, label %originalBB1227alteredBB

originalBBpart21229:                              ; preds = %originalBB1227
  br label %4575, !dbg !4698

4575:                                             ; preds = %originalBBpart21229, %originalBBpart21225
  %4576 = load i32, i32* @x.63
  %4577 = load i32, i32* @y.64
  %4578 = sub i32 %4576, 1
  %4579 = mul i32 %4576, %4578
  %4580 = urem i32 %4579, 2
  %4581 = icmp eq i32 %4580, 0
  %4582 = icmp slt i32 %4577, 10
  %4583 = or i1 %4581, %4582
  br i1 %4583, label %originalBB1231, label %originalBB1231alteredBB

originalBB1231:                                   ; preds = %4575, %originalBB1231alteredBB
  %4584 = load i64, i64* %29, align 8, !dbg !4701
  %4585 = add i64 %4584, 1, !dbg !4701
  store i64 %4585, i64* %29, align 8, !dbg !4701
  %4586 = load i32, i32* @x.63
  %4587 = load i32, i32* @y.64
  %4588 = sub i32 %4586, 1
  %4589 = mul i32 %4586, %4588
  %4590 = urem i32 %4589, 2
  %4591 = icmp eq i32 %4590, 0
  %4592 = icmp slt i32 %4587, 10
  %4593 = or i1 %4591, %4592
  br i1 %4593, label %originalBBpart21243, label %originalBB1231alteredBB

originalBBpart21243:                              ; preds = %originalBB1231
  br label %4594, !dbg !4701

4594:                                             ; preds = %originalBBpart21243
  %4595 = load i32, i32* @x.63
  %4596 = load i32, i32* @y.64
  %4597 = sub i32 %4595, 1
  %4598 = mul i32 %4595, %4597
  %4599 = urem i32 %4598, 2
  %4600 = icmp eq i32 %4599, 0
  %4601 = icmp slt i32 %4596, 10
  %4602 = or i1 %4600, %4601
  br i1 %4602, label %originalBB1245, label %originalBB1245alteredBB

originalBB1245:                                   ; preds = %4594, %originalBB1245alteredBB
  store i8 0, i8* %36, align 1, !dbg !4692
  %4603 = load i32, i32* @x.63
  %4604 = load i32, i32* @y.64
  %4605 = sub i32 %4603, 1
  %4606 = mul i32 %4603, %4605
  %4607 = urem i32 %4606, 2
  %4608 = icmp eq i32 %4607, 0
  %4609 = icmp slt i32 %4604, 10
  %4610 = or i1 %4608, %4609
  br i1 %4610, label %originalBBpart21247, label %originalBB1245alteredBB

originalBBpart21247:                              ; preds = %originalBB1245
  br label %4611, !dbg !4692

4611:                                             ; preds = %originalBBpart21247, %originalBBpart21201, %originalBBpart21197
  %4612 = load i32, i32* @x.63
  %4613 = load i32, i32* @y.64
  %4614 = sub i32 %4612, 1
  %4615 = mul i32 %4612, %4614
  %4616 = urem i32 %4615, 2
  %4617 = icmp eq i32 %4616, 0
  %4618 = icmp slt i32 %4613, 10
  %4619 = or i1 %4617, %4618
  br i1 %4619, label %originalBB1249, label %originalBB1249alteredBB

originalBB1249:                                   ; preds = %4611, %originalBB1249alteredBB
  %4620 = load i32, i32* @x.63
  %4621 = load i32, i32* @y.64
  %4622 = sub i32 %4620, 1
  %4623 = mul i32 %4620, %4622
  %4624 = urem i32 %4623, 2
  %4625 = icmp eq i32 %4624, 0
  %4626 = icmp slt i32 %4621, 10
  %4627 = or i1 %4625, %4626
  br i1 %4627, label %originalBBpart21251, label %originalBB1249alteredBB

originalBBpart21251:                              ; preds = %originalBB1249
  br label %4628, !dbg !4691

4628:                                             ; preds = %originalBBpart21251
  br label %4629, !dbg !4702

4629:                                             ; preds = %4628
  %4630 = load i32, i32* @x.63
  %4631 = load i32, i32* @y.64
  %4632 = sub i32 %4630, 1
  %4633 = mul i32 %4630, %4632
  %4634 = urem i32 %4633, 2
  %4635 = icmp eq i32 %4634, 0
  %4636 = icmp slt i32 %4631, 10
  %4637 = or i1 %4635, %4636
  br i1 %4637, label %originalBB1253, label %originalBB1253alteredBB

originalBB1253:                                   ; preds = %4629, %originalBB1253alteredBB
  %4638 = load i64, i64* %29, align 8, !dbg !4703
  %4639 = load i64, i64* %20, align 8, !dbg !4703
  %4640 = icmp ult i64 %4638, %4639, !dbg !4703
  %4641 = load i32, i32* @x.63
  %4642 = load i32, i32* @y.64
  %4643 = sub i32 %4641, 1
  %4644 = mul i32 %4641, %4643
  %4645 = urem i32 %4644, 2
  %4646 = icmp eq i32 %4645, 0
  %4647 = icmp slt i32 %4642, 10
  %4648 = or i1 %4646, %4647
  br i1 %4648, label %originalBBpart21255, label %originalBB1253alteredBB

originalBBpart21255:                              ; preds = %originalBB1253
  br i1 %4640, label %4649, label %4654, !dbg !4706

4649:                                             ; preds = %originalBBpart21255
  %4650 = load i8, i8* %39, align 1, !dbg !4703
  %4651 = load i8*, i8** %19, align 8, !dbg !4703
  %4652 = load i64, i64* %29, align 8, !dbg !4703
  %4653 = getelementptr inbounds i8, i8* %4651, i64 %4652, !dbg !4703
  store i8 %4650, i8* %4653, align 1, !dbg !4703
  br label %4654, !dbg !4703

4654:                                             ; preds = %4649, %originalBBpart21255
  %4655 = load i32, i32* @x.63
  %4656 = load i32, i32* @y.64
  %4657 = sub i32 %4655, 1
  %4658 = mul i32 %4655, %4657
  %4659 = urem i32 %4658, 2
  %4660 = icmp eq i32 %4659, 0
  %4661 = icmp slt i32 %4656, 10
  %4662 = or i1 %4660, %4661
  br i1 %4662, label %originalBB1257, label %originalBB1257alteredBB

originalBB1257:                                   ; preds = %4654, %originalBB1257alteredBB
  %4663 = load i64, i64* %29, align 8, !dbg !4706
  %4664 = add i64 %4663, 1, !dbg !4706
  store i64 %4664, i64* %29, align 8, !dbg !4706
  %4665 = load i32, i32* @x.63
  %4666 = load i32, i32* @y.64
  %4667 = sub i32 %4665, 1
  %4668 = mul i32 %4665, %4667
  %4669 = urem i32 %4668, 2
  %4670 = icmp eq i32 %4669, 0
  %4671 = icmp slt i32 %4666, 10
  %4672 = or i1 %4670, %4671
  br i1 %4672, label %originalBBpart21261, label %originalBB1257alteredBB

originalBBpart21261:                              ; preds = %originalBB1257
  br label %4673, !dbg !4706

4673:                                             ; preds = %originalBBpart21261
  %4674 = load i32, i32* @x.63
  %4675 = load i32, i32* @y.64
  %4676 = sub i32 %4674, 1
  %4677 = mul i32 %4674, %4676
  %4678 = urem i32 %4677, 2
  %4679 = icmp eq i32 %4678, 0
  %4680 = icmp slt i32 %4675, 10
  %4681 = or i1 %4679, %4680
  br i1 %4681, label %originalBB1263, label %originalBB1263alteredBB

originalBB1263:                                   ; preds = %4673, %originalBB1263alteredBB
  %4682 = load i8*, i8** %21, align 8, !dbg !4707
  %4683 = load i64, i64* %28, align 8, !dbg !4708
  %4684 = add i64 %4683, 1, !dbg !4708
  store i64 %4684, i64* %28, align 8, !dbg !4708
  %4685 = getelementptr inbounds i8, i8* %4682, i64 %4684, !dbg !4707
  %4686 = load i8, i8* %4685, align 1, !dbg !4707
  store i8 %4686, i8* %39, align 1, !dbg !4709
  %4687 = load i32, i32* @x.63
  %4688 = load i32, i32* @y.64
  %4689 = sub i32 %4687, 1
  %4690 = mul i32 %4687, %4689
  %4691 = urem i32 %4690, 2
  %4692 = icmp eq i32 %4691, 0
  %4693 = icmp slt i32 %4688, 10
  %4694 = or i1 %4692, %4693
  br i1 %4694, label %originalBBpart21270, label %originalBB1263alteredBB

originalBBpart21270:                              ; preds = %originalBB1263
  br label %3696, !dbg !4710, !llvm.loop !4711

4695:                                             ; preds = %originalBBpart21189
  %4696 = load i32, i32* @x.63
  %4697 = load i32, i32* @y.64
  %4698 = sub i32 %4696, 1
  %4699 = mul i32 %4696, %4698
  %4700 = urem i32 %4699, 2
  %4701 = icmp eq i32 %4700, 0
  %4702 = icmp slt i32 %4697, 10
  %4703 = or i1 %4701, %4702
  br i1 %4703, label %originalBB1272, label %originalBB1272alteredBB

originalBB1272:                                   ; preds = %4695, %originalBB1272alteredBB
  %4704 = load i32, i32* @x.63
  %4705 = load i32, i32* @y.64
  %4706 = sub i32 %4704, 1
  %4707 = mul i32 %4704, %4706
  %4708 = urem i32 %4707, 2
  %4709 = icmp eq i32 %4708, 0
  %4710 = icmp slt i32 %4705, 10
  %4711 = or i1 %4709, %4710
  br i1 %4711, label %originalBBpart21274, label %originalBB1272alteredBB

originalBBpart21274:                              ; preds = %originalBB1272
  br label %5238, !dbg !4714

4712:                                             ; preds = %originalBBpart2966, %originalBBpart2962
  %4713 = load i32, i32* @x.63
  %4714 = load i32, i32* @y.64
  %4715 = sub i32 %4713, 1
  %4716 = mul i32 %4713, %4715
  %4717 = urem i32 %4716, 2
  %4718 = icmp eq i32 %4717, 0
  %4719 = icmp slt i32 %4714, 10
  %4720 = or i1 %4718, %4719
  br i1 %4720, label %originalBB1276, label %originalBB1276alteredBB

originalBB1276:                                   ; preds = %4712, %originalBB1276alteredBB
  %4721 = load i32, i32* @x.63
  %4722 = load i32, i32* @y.64
  %4723 = sub i32 %4721, 1
  %4724 = mul i32 %4721, %4723
  %4725 = urem i32 %4724, 2
  %4726 = icmp eq i32 %4725, 0
  %4727 = icmp slt i32 %4722, 10
  %4728 = or i1 %4726, %4727
  br i1 %4728, label %originalBBpart21278, label %originalBB1276alteredBB

originalBBpart21278:                              ; preds = %originalBB1276
  br label %4729, !dbg !4715

4729:                                             ; preds = %originalBBpart21278, %originalBBpart2777, %originalBBpart2773, %originalBBpart2696, %originalBBpart2676, %originalBBpart2668, %originalBBpart2652, %originalBBpart2576, %originalBBpart2415
  %4730 = load i32, i32* @x.63
  %4731 = load i32, i32* @y.64
  %4732 = sub i32 %4730, 1
  %4733 = mul i32 %4730, %4732
  %4734 = urem i32 %4733, 2
  %4735 = icmp eq i32 %4734, 0
  %4736 = icmp slt i32 %4731, 10
  %4737 = or i1 %4735, %4736
  br i1 %4737, label %originalBB1280, label %originalBB1280alteredBB

originalBB1280:                                   ; preds = %4729, %originalBB1280alteredBB
  %4738 = load i8, i8* %33, align 1, !dbg !4716
  %4739 = trunc i8 %4738 to i1, !dbg !4716
  %4740 = load i32, i32* @x.63
  %4741 = load i32, i32* @y.64
  %4742 = sub i32 %4740, 1
  %4743 = mul i32 %4740, %4742
  %4744 = urem i32 %4743, 2
  %4745 = icmp eq i32 %4744, 0
  %4746 = icmp slt i32 %4741, 10
  %4747 = or i1 %4745, %4746
  br i1 %4747, label %originalBBpart21282, label %originalBB1280alteredBB

originalBBpart21282:                              ; preds = %originalBB1280
  br i1 %4739, label %4748, label %4751, !dbg !4718

4748:                                             ; preds = %originalBBpart21282
  %4749 = load i32, i32* %23, align 4, !dbg !4719
  %4750 = icmp ne i32 %4749, 2, !dbg !4720
  br i1 %4750, label %4770, label %4751, !dbg !4721

4751:                                             ; preds = %4748, %originalBBpart21282
  %4752 = load i32, i32* @x.63
  %4753 = load i32, i32* @y.64
  %4754 = sub i32 %4752, 1
  %4755 = mul i32 %4752, %4754
  %4756 = urem i32 %4755, 2
  %4757 = icmp eq i32 %4756, 0
  %4758 = icmp slt i32 %4753, 10
  %4759 = or i1 %4757, %4758
  br i1 %4759, label %originalBB1284, label %originalBB1284alteredBB

originalBB1284:                                   ; preds = %4751, %originalBB1284alteredBB
  %4760 = load i8, i8* %35, align 1, !dbg !4722
  %4761 = trunc i8 %4760 to i1, !dbg !4722
  %4762 = load i32, i32* @x.63
  %4763 = load i32, i32* @y.64
  %4764 = sub i32 %4762, 1
  %4765 = mul i32 %4762, %4764
  %4766 = urem i32 %4765, 2
  %4767 = icmp eq i32 %4766, 0
  %4768 = icmp slt i32 %4763, 10
  %4769 = or i1 %4767, %4768
  br i1 %4769, label %originalBBpart21286, label %originalBB1284alteredBB

originalBBpart21286:                              ; preds = %originalBB1284
  br i1 %4761, label %4770, label %4819, !dbg !4723

4770:                                             ; preds = %originalBBpart21286, %4748
  %4771 = load i32, i32* @x.63
  %4772 = load i32, i32* @y.64
  %4773 = sub i32 %4771, 1
  %4774 = mul i32 %4771, %4773
  %4775 = urem i32 %4774, 2
  %4776 = icmp eq i32 %4775, 0
  %4777 = icmp slt i32 %4772, 10
  %4778 = or i1 %4776, %4777
  br i1 %4778, label %originalBB1288, label %originalBB1288alteredBB

originalBB1288:                                   ; preds = %4770, %originalBB1288alteredBB
  %4779 = load i32*, i32** %25, align 8, !dbg !4724
  %4780 = icmp ne i32* %4779, null, !dbg !4724
  %4781 = load i32, i32* @x.63
  %4782 = load i32, i32* @y.64
  %4783 = sub i32 %4781, 1
  %4784 = mul i32 %4781, %4783
  %4785 = urem i32 %4784, 2
  %4786 = icmp eq i32 %4785, 0
  %4787 = icmp slt i32 %4782, 10
  %4788 = or i1 %4786, %4787
  br i1 %4788, label %originalBBpart21290, label %originalBB1288alteredBB

originalBBpart21290:                              ; preds = %originalBB1288
  br i1 %4780, label %4789, label %4819, !dbg !4725

4789:                                             ; preds = %originalBBpart21290
  %4790 = load i32, i32* @x.63
  %4791 = load i32, i32* @y.64
  %4792 = sub i32 %4790, 1
  %4793 = mul i32 %4790, %4792
  %4794 = urem i32 %4793, 2
  %4795 = icmp eq i32 %4794, 0
  %4796 = icmp slt i32 %4791, 10
  %4797 = or i1 %4795, %4796
  br i1 %4797, label %originalBB1292, label %originalBB1292alteredBB

originalBB1292:                                   ; preds = %4789, %originalBB1292alteredBB
  %4798 = load i32*, i32** %25, align 8, !dbg !4726
  %4799 = load i8, i8* %39, align 1, !dbg !4727
  %4800 = zext i8 %4799 to i64, !dbg !4727
  %4801 = udiv i64 %4800, 32, !dbg !4728
  %4802 = getelementptr inbounds i32, i32* %4798, i64 %4801, !dbg !4726
  %4803 = load i32, i32* %4802, align 4, !dbg !4726
  %4804 = load i8, i8* %39, align 1, !dbg !4729
  %4805 = zext i8 %4804 to i64, !dbg !4729
  %4806 = urem i64 %4805, 32, !dbg !4730
  %4807 = trunc i64 %4806 to i32, !dbg !4731
  %4808 = lshr i32 %4803, %4807, !dbg !4731
  %4809 = and i32 %4808, 1, !dbg !4732
  %4810 = icmp ne i32 %4809, 0, !dbg !4732
  %4811 = load i32, i32* @x.63
  %4812 = load i32, i32* @y.64
  %4813 = sub i32 %4811, 1
  %4814 = mul i32 %4811, %4813
  %4815 = urem i32 %4814, 2
  %4816 = icmp eq i32 %4815, 0
  %4817 = icmp slt i32 %4812, 10
  %4818 = or i1 %4816, %4817
  br i1 %4818, label %originalBBpart21332, label %originalBB1292alteredBB

originalBBpart21332:                              ; preds = %originalBB1292
  br i1 %4810, label %4855, label %4819, !dbg !4733

4819:                                             ; preds = %originalBBpart21332, %originalBBpart21290, %originalBBpart21286
  %4820 = load i32, i32* @x.63
  %4821 = load i32, i32* @y.64
  %4822 = sub i32 %4820, 1
  %4823 = mul i32 %4820, %4822
  %4824 = urem i32 %4823, 2
  %4825 = icmp eq i32 %4824, 0
  %4826 = icmp slt i32 %4821, 10
  %4827 = or i1 %4825, %4826
  br i1 %4827, label %originalBB1334, label %originalBB1334alteredBB

originalBB1334:                                   ; preds = %4819, %originalBB1334alteredBB
  %4828 = load i8, i8* %41, align 1, !dbg !4734
  %4829 = trunc i8 %4828 to i1, !dbg !4734
  %4830 = load i32, i32* @x.63
  %4831 = load i32, i32* @y.64
  %4832 = sub i32 %4830, 1
  %4833 = mul i32 %4830, %4832
  %4834 = urem i32 %4833, 2
  %4835 = icmp eq i32 %4834, 0
  %4836 = icmp slt i32 %4831, 10
  %4837 = or i1 %4835, %4836
  br i1 %4837, label %originalBBpart21336, label %originalBB1334alteredBB

originalBBpart21336:                              ; preds = %originalBB1334
  br i1 %4829, label %4855, label %4838, !dbg !4735

4838:                                             ; preds = %originalBBpart21336
  %4839 = load i32, i32* @x.63
  %4840 = load i32, i32* @y.64
  %4841 = sub i32 %4839, 1
  %4842 = mul i32 %4839, %4841
  %4843 = urem i32 %4842, 2
  %4844 = icmp eq i32 %4843, 0
  %4845 = icmp slt i32 %4840, 10
  %4846 = or i1 %4844, %4845
  br i1 %4846, label %originalBB1338, label %originalBB1338alteredBB

originalBB1338:                                   ; preds = %4838, %originalBB1338alteredBB
  %4847 = load i32, i32* @x.63
  %4848 = load i32, i32* @y.64
  %4849 = sub i32 %4847, 1
  %4850 = mul i32 %4847, %4849
  %4851 = urem i32 %4850, 2
  %4852 = icmp eq i32 %4851, 0
  %4853 = icmp slt i32 %4848, 10
  %4854 = or i1 %4852, %4853
  br i1 %4854, label %originalBBpart21340, label %originalBB1338alteredBB

originalBBpart21340:                              ; preds = %originalBB1338
  br label %5238, !dbg !4736

4855:                                             ; preds = %originalBBpart21336, %originalBBpart21332
  %4856 = load i32, i32* @x.63
  %4857 = load i32, i32* @y.64
  %4858 = sub i32 %4856, 1
  %4859 = mul i32 %4856, %4858
  %4860 = urem i32 %4859, 2
  %4861 = icmp eq i32 %4860, 0
  %4862 = icmp slt i32 %4857, 10
  %4863 = or i1 %4861, %4862
  br i1 %4863, label %originalBB1342, label %originalBB1342alteredBB

originalBB1342:                                   ; preds = %4855, %originalBB1342alteredBB
  %4864 = load i32, i32* @x.63
  %4865 = load i32, i32* @y.64
  %4866 = sub i32 %4864, 1
  %4867 = mul i32 %4864, %4866
  %4868 = urem i32 %4867, 2
  %4869 = icmp eq i32 %4868, 0
  %4870 = icmp slt i32 %4865, 10
  %4871 = or i1 %4869, %4870
  br i1 %4871, label %originalBBpart21344, label %originalBB1342alteredBB

originalBBpart21344:                              ; preds = %originalBB1342
  br label %4872, !dbg !4734

4872:                                             ; preds = %originalBBpart21344, %originalBBpart2648
  call void @llvm.dbg.label(metadata !4737), !dbg !4738
  %4873 = load i32, i32* @x.63
  %4874 = load i32, i32* @y.64
  %4875 = sub i32 %4873, 1
  %4876 = mul i32 %4873, %4875
  %4877 = urem i32 %4876, 2
  %4878 = icmp eq i32 %4877, 0
  %4879 = icmp slt i32 %4874, 10
  %4880 = or i1 %4878, %4879
  br i1 %4880, label %originalBB1346, label %originalBB1346alteredBB

originalBB1346:                                   ; preds = %4872, %originalBB1346alteredBB
  %4881 = load i32, i32* @x.63
  %4882 = load i32, i32* @y.64
  %4883 = sub i32 %4881, 1
  %4884 = mul i32 %4881, %4883
  %4885 = urem i32 %4884, 2
  %4886 = icmp eq i32 %4885, 0
  %4887 = icmp slt i32 %4882, 10
  %4888 = or i1 %4886, %4887
  br i1 %4888, label %originalBBpart21348, label %originalBB1346alteredBB

originalBBpart21348:                              ; preds = %originalBB1346
  br label %4889, !dbg !4739

4889:                                             ; preds = %originalBBpart21348
  %4890 = load i32, i32* @x.63
  %4891 = load i32, i32* @y.64
  %4892 = sub i32 %4890, 1
  %4893 = mul i32 %4890, %4892
  %4894 = urem i32 %4893, 2
  %4895 = icmp eq i32 %4894, 0
  %4896 = icmp slt i32 %4891, 10
  %4897 = or i1 %4895, %4896
  br i1 %4897, label %originalBB1350, label %originalBB1350alteredBB

originalBB1350:                                   ; preds = %4889, %originalBB1350alteredBB
  %4898 = load i8, i8* %35, align 1, !dbg !4740
  %4899 = trunc i8 %4898 to i1, !dbg !4740
  %4900 = load i32, i32* @x.63
  %4901 = load i32, i32* @y.64
  %4902 = sub i32 %4900, 1
  %4903 = mul i32 %4900, %4902
  %4904 = urem i32 %4903, 2
  %4905 = icmp eq i32 %4904, 0
  %4906 = icmp slt i32 %4901, 10
  %4907 = or i1 %4905, %4906
  br i1 %4907, label %originalBBpart21352, label %originalBB1350alteredBB

originalBBpart21352:                              ; preds = %originalBB1350
  br i1 %4899, label %4908, label %4925, !dbg !4743

4908:                                             ; preds = %originalBBpart21352
  %4909 = load i32, i32* @x.63
  %4910 = load i32, i32* @y.64
  %4911 = sub i32 %4909, 1
  %4912 = mul i32 %4909, %4911
  %4913 = urem i32 %4912, 2
  %4914 = icmp eq i32 %4913, 0
  %4915 = icmp slt i32 %4910, 10
  %4916 = or i1 %4914, %4915
  br i1 %4916, label %originalBB1354, label %originalBB1354alteredBB

originalBB1354:                                   ; preds = %4908, %originalBB1354alteredBB
  %4917 = load i32, i32* @x.63
  %4918 = load i32, i32* @y.64
  %4919 = sub i32 %4917, 1
  %4920 = mul i32 %4917, %4919
  %4921 = urem i32 %4920, 2
  %4922 = icmp eq i32 %4921, 0
  %4923 = icmp slt i32 %4918, 10
  %4924 = or i1 %4922, %4923
  br i1 %4924, label %originalBBpart21356, label %originalBB1354alteredBB

originalBBpart21356:                              ; preds = %originalBB1354
  br label %5982, !dbg !4740

4925:                                             ; preds = %originalBBpart21352
  %4926 = load i32, i32* @x.63
  %4927 = load i32, i32* @y.64
  %4928 = sub i32 %4926, 1
  %4929 = mul i32 %4926, %4928
  %4930 = urem i32 %4929, 2
  %4931 = icmp eq i32 %4930, 0
  %4932 = icmp slt i32 %4927, 10
  %4933 = or i1 %4931, %4932
  br i1 %4933, label %originalBB1358, label %originalBB1358alteredBB

originalBB1358:                                   ; preds = %4925, %originalBB1358alteredBB
  store i8 1, i8* %42, align 1, !dbg !4743
  %4934 = load i32, i32* %23, align 4, !dbg !4744
  %4935 = icmp eq i32 %4934, 2, !dbg !4744
  %4936 = load i32, i32* @x.63
  %4937 = load i32, i32* @y.64
  %4938 = sub i32 %4936, 1
  %4939 = mul i32 %4936, %4938
  %4940 = urem i32 %4939, 2
  %4941 = icmp eq i32 %4940, 0
  %4942 = icmp slt i32 %4937, 10
  %4943 = or i1 %4941, %4942
  br i1 %4943, label %originalBBpart21360, label %originalBB1358alteredBB

originalBBpart21360:                              ; preds = %originalBB1358
  br i1 %4935, label %4944, label %5128, !dbg !4744

4944:                                             ; preds = %originalBBpart21360
  %4945 = load i32, i32* @x.63
  %4946 = load i32, i32* @y.64
  %4947 = sub i32 %4945, 1
  %4948 = mul i32 %4945, %4947
  %4949 = urem i32 %4948, 2
  %4950 = icmp eq i32 %4949, 0
  %4951 = icmp slt i32 %4946, 10
  %4952 = or i1 %4950, %4951
  br i1 %4952, label %originalBB1362, label %originalBB1362alteredBB

originalBB1362:                                   ; preds = %4944, %originalBB1362alteredBB
  %4953 = load i8, i8* %36, align 1, !dbg !4744
  %4954 = trunc i8 %4953 to i1, !dbg !4744
  %4955 = load i32, i32* @x.63
  %4956 = load i32, i32* @y.64
  %4957 = sub i32 %4955, 1
  %4958 = mul i32 %4955, %4957
  %4959 = urem i32 %4958, 2
  %4960 = icmp eq i32 %4959, 0
  %4961 = icmp slt i32 %4956, 10
  %4962 = or i1 %4960, %4961
  br i1 %4962, label %originalBBpart21364, label %originalBB1362alteredBB

originalBBpart21364:                              ; preds = %originalBB1362
  br i1 %4954, label %5128, label %4963, !dbg !4743

4963:                                             ; preds = %originalBBpart21364
  %4964 = load i32, i32* @x.63
  %4965 = load i32, i32* @y.64
  %4966 = sub i32 %4964, 1
  %4967 = mul i32 %4964, %4966
  %4968 = urem i32 %4967, 2
  %4969 = icmp eq i32 %4968, 0
  %4970 = icmp slt i32 %4965, 10
  %4971 = or i1 %4969, %4970
  br i1 %4971, label %originalBB1366, label %originalBB1366alteredBB

originalBB1366:                                   ; preds = %4963, %originalBB1366alteredBB
  %4972 = load i32, i32* @x.63
  %4973 = load i32, i32* @y.64
  %4974 = sub i32 %4972, 1
  %4975 = mul i32 %4972, %4974
  %4976 = urem i32 %4975, 2
  %4977 = icmp eq i32 %4976, 0
  %4978 = icmp slt i32 %4973, 10
  %4979 = or i1 %4977, %4978
  br i1 %4979, label %originalBBpart21368, label %originalBB1366alteredBB

originalBBpart21368:                              ; preds = %originalBB1366
  br label %4980, !dbg !4746

4980:                                             ; preds = %originalBBpart21368
  %4981 = load i32, i32* @x.63
  %4982 = load i32, i32* @y.64
  %4983 = sub i32 %4981, 1
  %4984 = mul i32 %4981, %4983
  %4985 = urem i32 %4984, 2
  %4986 = icmp eq i32 %4985, 0
  %4987 = icmp slt i32 %4982, 10
  %4988 = or i1 %4986, %4987
  br i1 %4988, label %originalBB1370, label %originalBB1370alteredBB

originalBB1370:                                   ; preds = %4980, %originalBB1370alteredBB
  %4989 = load i64, i64* %29, align 8, !dbg !4748
  %4990 = load i64, i64* %20, align 8, !dbg !4748
  %4991 = icmp ult i64 %4989, %4990, !dbg !4748
  %4992 = load i32, i32* @x.63
  %4993 = load i32, i32* @y.64
  %4994 = sub i32 %4992, 1
  %4995 = mul i32 %4992, %4994
  %4996 = urem i32 %4995, 2
  %4997 = icmp eq i32 %4996, 0
  %4998 = icmp slt i32 %4993, 10
  %4999 = or i1 %4997, %4998
  br i1 %4999, label %originalBBpart21372, label %originalBB1370alteredBB

originalBBpart21372:                              ; preds = %originalBB1370
  br i1 %4991, label %5000, label %5020, !dbg !4751

5000:                                             ; preds = %originalBBpart21372
  %5001 = load i32, i32* @x.63
  %5002 = load i32, i32* @y.64
  %5003 = sub i32 %5001, 1
  %5004 = mul i32 %5001, %5003
  %5005 = urem i32 %5004, 2
  %5006 = icmp eq i32 %5005, 0
  %5007 = icmp slt i32 %5002, 10
  %5008 = or i1 %5006, %5007
  br i1 %5008, label %originalBB1374, label %originalBB1374alteredBB

originalBB1374:                                   ; preds = %5000, %originalBB1374alteredBB
  %5009 = load i8*, i8** %19, align 8, !dbg !4748
  %5010 = load i64, i64* %29, align 8, !dbg !4748
  %5011 = getelementptr inbounds i8, i8* %5009, i64 %5010, !dbg !4748
  store i8 39, i8* %5011, align 1, !dbg !4748
  %5012 = load i32, i32* @x.63
  %5013 = load i32, i32* @y.64
  %5014 = sub i32 %5012, 1
  %5015 = mul i32 %5012, %5014
  %5016 = urem i32 %5015, 2
  %5017 = icmp eq i32 %5016, 0
  %5018 = icmp slt i32 %5013, 10
  %5019 = or i1 %5017, %5018
  br i1 %5019, label %originalBBpart21376, label %originalBB1374alteredBB

originalBBpart21376:                              ; preds = %originalBB1374
  br label %5020, !dbg !4748

5020:                                             ; preds = %originalBBpart21376, %originalBBpart21372
  %5021 = load i32, i32* @x.63
  %5022 = load i32, i32* @y.64
  %5023 = sub i32 %5021, 1
  %5024 = mul i32 %5021, %5023
  %5025 = urem i32 %5024, 2
  %5026 = icmp eq i32 %5025, 0
  %5027 = icmp slt i32 %5022, 10
  %5028 = or i1 %5026, %5027
  br i1 %5028, label %originalBB1378, label %originalBB1378alteredBB

originalBB1378:                                   ; preds = %5020, %originalBB1378alteredBB
  %5029 = load i64, i64* %29, align 8, !dbg !4751
  %5030 = add i64 %5029, 1, !dbg !4751
  store i64 %5030, i64* %29, align 8, !dbg !4751
  %5031 = load i32, i32* @x.63
  %5032 = load i32, i32* @y.64
  %5033 = sub i32 %5031, 1
  %5034 = mul i32 %5031, %5033
  %5035 = urem i32 %5034, 2
  %5036 = icmp eq i32 %5035, 0
  %5037 = icmp slt i32 %5032, 10
  %5038 = or i1 %5036, %5037
  br i1 %5038, label %originalBBpart21384, label %originalBB1378alteredBB

originalBBpart21384:                              ; preds = %originalBB1378
  br label %5039, !dbg !4751

5039:                                             ; preds = %originalBBpart21384
  %5040 = load i32, i32* @x.63
  %5041 = load i32, i32* @y.64
  %5042 = sub i32 %5040, 1
  %5043 = mul i32 %5040, %5042
  %5044 = urem i32 %5043, 2
  %5045 = icmp eq i32 %5044, 0
  %5046 = icmp slt i32 %5041, 10
  %5047 = or i1 %5045, %5046
  br i1 %5047, label %originalBB1386, label %originalBB1386alteredBB

originalBB1386:                                   ; preds = %5039, %originalBB1386alteredBB
  %5048 = load i32, i32* @x.63
  %5049 = load i32, i32* @y.64
  %5050 = sub i32 %5048, 1
  %5051 = mul i32 %5048, %5050
  %5052 = urem i32 %5051, 2
  %5053 = icmp eq i32 %5052, 0
  %5054 = icmp slt i32 %5049, 10
  %5055 = or i1 %5053, %5054
  br i1 %5055, label %originalBBpart21388, label %originalBB1386alteredBB

originalBBpart21388:                              ; preds = %originalBB1386
  br label %5056, !dbg !4746

5056:                                             ; preds = %originalBBpart21388
  %5057 = load i64, i64* %29, align 8, !dbg !4752
  %5058 = load i64, i64* %20, align 8, !dbg !4752
  %5059 = icmp ult i64 %5057, %5058, !dbg !4752
  br i1 %5059, label %5060, label %5080, !dbg !4755

5060:                                             ; preds = %5056
  %5061 = load i32, i32* @x.63
  %5062 = load i32, i32* @y.64
  %5063 = sub i32 %5061, 1
  %5064 = mul i32 %5061, %5063
  %5065 = urem i32 %5064, 2
  %5066 = icmp eq i32 %5065, 0
  %5067 = icmp slt i32 %5062, 10
  %5068 = or i1 %5066, %5067
  br i1 %5068, label %originalBB1390, label %originalBB1390alteredBB

originalBB1390:                                   ; preds = %5060, %originalBB1390alteredBB
  %5069 = load i8*, i8** %19, align 8, !dbg !4752
  %5070 = load i64, i64* %29, align 8, !dbg !4752
  %5071 = getelementptr inbounds i8, i8* %5069, i64 %5070, !dbg !4752
  store i8 36, i8* %5071, align 1, !dbg !4752
  %5072 = load i32, i32* @x.63
  %5073 = load i32, i32* @y.64
  %5074 = sub i32 %5072, 1
  %5075 = mul i32 %5072, %5074
  %5076 = urem i32 %5075, 2
  %5077 = icmp eq i32 %5076, 0
  %5078 = icmp slt i32 %5073, 10
  %5079 = or i1 %5077, %5078
  br i1 %5079, label %originalBBpart21392, label %originalBB1390alteredBB

originalBBpart21392:                              ; preds = %originalBB1390
  br label %5080, !dbg !4752

5080:                                             ; preds = %originalBBpart21392, %5056
  %5081 = load i64, i64* %29, align 8, !dbg !4755
  %5082 = add i64 %5081, 1, !dbg !4755
  store i64 %5082, i64* %29, align 8, !dbg !4755
  br label %5083, !dbg !4755

5083:                                             ; preds = %5080
  br label %5084, !dbg !4746

5084:                                             ; preds = %5083
  %5085 = load i32, i32* @x.63
  %5086 = load i32, i32* @y.64
  %5087 = sub i32 %5085, 1
  %5088 = mul i32 %5085, %5087
  %5089 = urem i32 %5088, 2
  %5090 = icmp eq i32 %5089, 0
  %5091 = icmp slt i32 %5086, 10
  %5092 = or i1 %5090, %5091
  br i1 %5092, label %originalBB1394, label %originalBB1394alteredBB

originalBB1394:                                   ; preds = %5084, %originalBB1394alteredBB
  %5093 = load i64, i64* %29, align 8, !dbg !4756
  %5094 = load i64, i64* %20, align 8, !dbg !4756
  %5095 = icmp ult i64 %5093, %5094, !dbg !4756
  %5096 = load i32, i32* @x.63
  %5097 = load i32, i32* @y.64
  %5098 = sub i32 %5096, 1
  %5099 = mul i32 %5096, %5098
  %5100 = urem i32 %5099, 2
  %5101 = icmp eq i32 %5100, 0
  %5102 = icmp slt i32 %5097, 10
  %5103 = or i1 %5101, %5102
  br i1 %5103, label %originalBBpart21396, label %originalBB1394alteredBB

originalBBpart21396:                              ; preds = %originalBB1394
  br i1 %5095, label %5104, label %5108, !dbg !4759

5104:                                             ; preds = %originalBBpart21396
  %5105 = load i8*, i8** %19, align 8, !dbg !4756
  %5106 = load i64, i64* %29, align 8, !dbg !4756
  %5107 = getelementptr inbounds i8, i8* %5105, i64 %5106, !dbg !4756
  store i8 39, i8* %5107, align 1, !dbg !4756
  br label %5108, !dbg !4756

5108:                                             ; preds = %5104, %originalBBpart21396
  %5109 = load i64, i64* %29, align 8, !dbg !4759
  %5110 = add i64 %5109, 1, !dbg !4759
  store i64 %5110, i64* %29, align 8, !dbg !4759
  br label %5111, !dbg !4759

5111:                                             ; preds = %5108
  %5112 = load i32, i32* @x.63
  %5113 = load i32, i32* @y.64
  %5114 = sub i32 %5112, 1
  %5115 = mul i32 %5112, %5114
  %5116 = urem i32 %5115, 2
  %5117 = icmp eq i32 %5116, 0
  %5118 = icmp slt i32 %5113, 10
  %5119 = or i1 %5117, %5118
  br i1 %5119, label %originalBB1398, label %originalBB1398alteredBB

originalBB1398:                                   ; preds = %5111, %originalBB1398alteredBB
  store i8 1, i8* %36, align 1, !dbg !4746
  %5120 = load i32, i32* @x.63
  %5121 = load i32, i32* @y.64
  %5122 = sub i32 %5120, 1
  %5123 = mul i32 %5120, %5122
  %5124 = urem i32 %5123, 2
  %5125 = icmp eq i32 %5124, 0
  %5126 = icmp slt i32 %5121, 10
  %5127 = or i1 %5125, %5126
  br i1 %5127, label %originalBBpart21400, label %originalBB1398alteredBB

originalBBpart21400:                              ; preds = %originalBB1398
  br label %5128, !dbg !4746

5128:                                             ; preds = %originalBBpart21400, %originalBBpart21364, %originalBBpart21360
  %5129 = load i32, i32* @x.63
  %5130 = load i32, i32* @y.64
  %5131 = sub i32 %5129, 1
  %5132 = mul i32 %5129, %5131
  %5133 = urem i32 %5132, 2
  %5134 = icmp eq i32 %5133, 0
  %5135 = icmp slt i32 %5130, 10
  %5136 = or i1 %5134, %5135
  br i1 %5136, label %originalBB1402, label %originalBB1402alteredBB

originalBB1402:                                   ; preds = %5128, %originalBB1402alteredBB
  %5137 = load i32, i32* @x.63
  %5138 = load i32, i32* @y.64
  %5139 = sub i32 %5137, 1
  %5140 = mul i32 %5137, %5139
  %5141 = urem i32 %5140, 2
  %5142 = icmp eq i32 %5141, 0
  %5143 = icmp slt i32 %5138, 10
  %5144 = or i1 %5142, %5143
  br i1 %5144, label %originalBBpart21404, label %originalBB1402alteredBB

originalBBpart21404:                              ; preds = %originalBB1402
  br label %5145, !dbg !4743

5145:                                             ; preds = %originalBBpart21404
  %5146 = load i32, i32* @x.63
  %5147 = load i32, i32* @y.64
  %5148 = sub i32 %5146, 1
  %5149 = mul i32 %5146, %5148
  %5150 = urem i32 %5149, 2
  %5151 = icmp eq i32 %5150, 0
  %5152 = icmp slt i32 %5147, 10
  %5153 = or i1 %5151, %5152
  br i1 %5153, label %originalBB1406, label %originalBB1406alteredBB

originalBB1406:                                   ; preds = %5145, %originalBB1406alteredBB
  %5154 = load i64, i64* %29, align 8, !dbg !4760
  %5155 = load i64, i64* %20, align 8, !dbg !4760
  %5156 = icmp ult i64 %5154, %5155, !dbg !4760
  %5157 = load i32, i32* @x.63
  %5158 = load i32, i32* @y.64
  %5159 = sub i32 %5157, 1
  %5160 = mul i32 %5157, %5159
  %5161 = urem i32 %5160, 2
  %5162 = icmp eq i32 %5161, 0
  %5163 = icmp slt i32 %5158, 10
  %5164 = or i1 %5162, %5163
  br i1 %5164, label %originalBBpart21408, label %originalBB1406alteredBB

originalBBpart21408:                              ; preds = %originalBB1406
  br i1 %5156, label %5165, label %5185, !dbg !4763

5165:                                             ; preds = %originalBBpart21408
  %5166 = load i32, i32* @x.63
  %5167 = load i32, i32* @y.64
  %5168 = sub i32 %5166, 1
  %5169 = mul i32 %5166, %5168
  %5170 = urem i32 %5169, 2
  %5171 = icmp eq i32 %5170, 0
  %5172 = icmp slt i32 %5167, 10
  %5173 = or i1 %5171, %5172
  br i1 %5173, label %originalBB1410, label %originalBB1410alteredBB

originalBB1410:                                   ; preds = %5165, %originalBB1410alteredBB
  %5174 = load i8*, i8** %19, align 8, !dbg !4760
  %5175 = load i64, i64* %29, align 8, !dbg !4760
  %5176 = getelementptr inbounds i8, i8* %5174, i64 %5175, !dbg !4760
  store i8 92, i8* %5176, align 1, !dbg !4760
  %5177 = load i32, i32* @x.63
  %5178 = load i32, i32* @y.64
  %5179 = sub i32 %5177, 1
  %5180 = mul i32 %5177, %5179
  %5181 = urem i32 %5180, 2
  %5182 = icmp eq i32 %5181, 0
  %5183 = icmp slt i32 %5178, 10
  %5184 = or i1 %5182, %5183
  br i1 %5184, label %originalBBpart21412, label %originalBB1410alteredBB

originalBBpart21412:                              ; preds = %originalBB1410
  br label %5185, !dbg !4760

5185:                                             ; preds = %originalBBpart21412, %originalBBpart21408
  %5186 = load i32, i32* @x.63
  %5187 = load i32, i32* @y.64
  %5188 = sub i32 %5186, 1
  %5189 = mul i32 %5186, %5188
  %5190 = urem i32 %5189, 2
  %5191 = icmp eq i32 %5190, 0
  %5192 = icmp slt i32 %5187, 10
  %5193 = or i1 %5191, %5192
  br i1 %5193, label %originalBB1414, label %originalBB1414alteredBB

originalBB1414:                                   ; preds = %5185, %originalBB1414alteredBB
  %5194 = load i64, i64* %29, align 8, !dbg !4763
  %5195 = add i64 %5194, 1, !dbg !4763
  store i64 %5195, i64* %29, align 8, !dbg !4763
  %5196 = load i32, i32* @x.63
  %5197 = load i32, i32* @y.64
  %5198 = sub i32 %5196, 1
  %5199 = mul i32 %5196, %5198
  %5200 = urem i32 %5199, 2
  %5201 = icmp eq i32 %5200, 0
  %5202 = icmp slt i32 %5197, 10
  %5203 = or i1 %5201, %5202
  br i1 %5203, label %originalBBpart21416, label %originalBB1414alteredBB

originalBBpart21416:                              ; preds = %originalBB1414
  br label %5204, !dbg !4763

5204:                                             ; preds = %originalBBpart21416
  %5205 = load i32, i32* @x.63
  %5206 = load i32, i32* @y.64
  %5207 = sub i32 %5205, 1
  %5208 = mul i32 %5205, %5207
  %5209 = urem i32 %5208, 2
  %5210 = icmp eq i32 %5209, 0
  %5211 = icmp slt i32 %5206, 10
  %5212 = or i1 %5210, %5211
  br i1 %5212, label %originalBB1418, label %originalBB1418alteredBB

originalBB1418:                                   ; preds = %5204, %originalBB1418alteredBB
  %5213 = load i32, i32* @x.63
  %5214 = load i32, i32* @y.64
  %5215 = sub i32 %5213, 1
  %5216 = mul i32 %5213, %5215
  %5217 = urem i32 %5216, 2
  %5218 = icmp eq i32 %5217, 0
  %5219 = icmp slt i32 %5214, 10
  %5220 = or i1 %5218, %5219
  br i1 %5220, label %originalBBpart21420, label %originalBB1418alteredBB

originalBBpart21420:                              ; preds = %originalBB1418
  br label %5221, !dbg !4743

5221:                                             ; preds = %originalBBpart21420
  %5222 = load i32, i32* @x.63
  %5223 = load i32, i32* @y.64
  %5224 = sub i32 %5222, 1
  %5225 = mul i32 %5222, %5224
  %5226 = urem i32 %5225, 2
  %5227 = icmp eq i32 %5226, 0
  %5228 = icmp slt i32 %5223, 10
  %5229 = or i1 %5227, %5228
  br i1 %5229, label %originalBB1422, label %originalBB1422alteredBB

originalBB1422:                                   ; preds = %5221, %originalBB1422alteredBB
  %5230 = load i32, i32* @x.63
  %5231 = load i32, i32* @y.64
  %5232 = sub i32 %5230, 1
  %5233 = mul i32 %5230, %5232
  %5234 = urem i32 %5233, 2
  %5235 = icmp eq i32 %5234, 0
  %5236 = icmp slt i32 %5231, 10
  %5237 = or i1 %5235, %5236
  br i1 %5237, label %originalBBpart21424, label %originalBB1422alteredBB

originalBBpart21424:                              ; preds = %originalBB1422
  br label %5238, !dbg !4743

5238:                                             ; preds = %originalBBpart21424, %originalBBpart21340, %originalBBpart21274, %originalBBpart2620, %originalBBpart2608
  call void @llvm.dbg.label(metadata !4764), !dbg !4765
  br label %5239, !dbg !4766

5239:                                             ; preds = %5238
  %5240 = load i8, i8* %36, align 1, !dbg !4767
  %5241 = trunc i8 %5240 to i1, !dbg !4767
  br i1 %5241, label %5242, label %5366, !dbg !4767

5242:                                             ; preds = %5239
  %5243 = load i32, i32* @x.63
  %5244 = load i32, i32* @y.64
  %5245 = sub i32 %5243, 1
  %5246 = mul i32 %5243, %5245
  %5247 = urem i32 %5246, 2
  %5248 = icmp eq i32 %5247, 0
  %5249 = icmp slt i32 %5244, 10
  %5250 = or i1 %5248, %5249
  br i1 %5250, label %originalBB1426, label %originalBB1426alteredBB

originalBB1426:                                   ; preds = %5242, %originalBB1426alteredBB
  %5251 = load i8, i8* %42, align 1, !dbg !4767
  %5252 = trunc i8 %5251 to i1, !dbg !4767
  %5253 = load i32, i32* @x.63
  %5254 = load i32, i32* @y.64
  %5255 = sub i32 %5253, 1
  %5256 = mul i32 %5253, %5255
  %5257 = urem i32 %5256, 2
  %5258 = icmp eq i32 %5257, 0
  %5259 = icmp slt i32 %5254, 10
  %5260 = or i1 %5258, %5259
  br i1 %5260, label %originalBBpart21428, label %originalBB1426alteredBB

originalBBpart21428:                              ; preds = %originalBB1426
  br i1 %5252, label %5366, label %5261, !dbg !4770

5261:                                             ; preds = %originalBBpart21428
  %5262 = load i32, i32* @x.63
  %5263 = load i32, i32* @y.64
  %5264 = sub i32 %5262, 1
  %5265 = mul i32 %5262, %5264
  %5266 = urem i32 %5265, 2
  %5267 = icmp eq i32 %5266, 0
  %5268 = icmp slt i32 %5263, 10
  %5269 = or i1 %5267, %5268
  br i1 %5269, label %originalBB1430, label %originalBB1430alteredBB

originalBB1430:                                   ; preds = %5261, %originalBB1430alteredBB
  %5270 = load i32, i32* @x.63
  %5271 = load i32, i32* @y.64
  %5272 = sub i32 %5270, 1
  %5273 = mul i32 %5270, %5272
  %5274 = urem i32 %5273, 2
  %5275 = icmp eq i32 %5274, 0
  %5276 = icmp slt i32 %5271, 10
  %5277 = or i1 %5275, %5276
  br i1 %5277, label %originalBBpart21432, label %originalBB1430alteredBB

originalBBpart21432:                              ; preds = %originalBB1430
  br label %5278, !dbg !4771

5278:                                             ; preds = %originalBBpart21432
  %5279 = load i32, i32* @x.63
  %5280 = load i32, i32* @y.64
  %5281 = sub i32 %5279, 1
  %5282 = mul i32 %5279, %5281
  %5283 = urem i32 %5282, 2
  %5284 = icmp eq i32 %5283, 0
  %5285 = icmp slt i32 %5280, 10
  %5286 = or i1 %5284, %5285
  br i1 %5286, label %originalBB1434, label %originalBB1434alteredBB

originalBB1434:                                   ; preds = %5278, %originalBB1434alteredBB
  %5287 = load i64, i64* %29, align 8, !dbg !4773
  %5288 = load i64, i64* %20, align 8, !dbg !4773
  %5289 = icmp ult i64 %5287, %5288, !dbg !4773
  %5290 = load i32, i32* @x.63
  %5291 = load i32, i32* @y.64
  %5292 = sub i32 %5290, 1
  %5293 = mul i32 %5290, %5292
  %5294 = urem i32 %5293, 2
  %5295 = icmp eq i32 %5294, 0
  %5296 = icmp slt i32 %5291, 10
  %5297 = or i1 %5295, %5296
  br i1 %5297, label %originalBBpart21436, label %originalBB1434alteredBB

originalBBpart21436:                              ; preds = %originalBB1434
  br i1 %5289, label %5298, label %5302, !dbg !4776

5298:                                             ; preds = %originalBBpart21436
  %5299 = load i8*, i8** %19, align 8, !dbg !4773
  %5300 = load i64, i64* %29, align 8, !dbg !4773
  %5301 = getelementptr inbounds i8, i8* %5299, i64 %5300, !dbg !4773
  store i8 39, i8* %5301, align 1, !dbg !4773
  br label %5302, !dbg !4773

5302:                                             ; preds = %5298, %originalBBpart21436
  %5303 = load i32, i32* @x.63
  %5304 = load i32, i32* @y.64
  %5305 = sub i32 %5303, 1
  %5306 = mul i32 %5303, %5305
  %5307 = urem i32 %5306, 2
  %5308 = icmp eq i32 %5307, 0
  %5309 = icmp slt i32 %5304, 10
  %5310 = or i1 %5308, %5309
  br i1 %5310, label %originalBB1438, label %originalBB1438alteredBB

originalBB1438:                                   ; preds = %5302, %originalBB1438alteredBB
  %5311 = load i64, i64* %29, align 8, !dbg !4776
  %5312 = add i64 %5311, 1, !dbg !4776
  store i64 %5312, i64* %29, align 8, !dbg !4776
  %5313 = load i32, i32* @x.63
  %5314 = load i32, i32* @y.64
  %5315 = sub i32 %5313, 1
  %5316 = mul i32 %5313, %5315
  %5317 = urem i32 %5316, 2
  %5318 = icmp eq i32 %5317, 0
  %5319 = icmp slt i32 %5314, 10
  %5320 = or i1 %5318, %5319
  br i1 %5320, label %originalBBpart21445, label %originalBB1438alteredBB

originalBBpart21445:                              ; preds = %originalBB1438
  br label %5321, !dbg !4776

5321:                                             ; preds = %originalBBpart21445
  br label %5322, !dbg !4771

5322:                                             ; preds = %5321
  %5323 = load i64, i64* %29, align 8, !dbg !4777
  %5324 = load i64, i64* %20, align 8, !dbg !4777
  %5325 = icmp ult i64 %5323, %5324, !dbg !4777
  br i1 %5325, label %5326, label %5330, !dbg !4780

5326:                                             ; preds = %5322
  %5327 = load i8*, i8** %19, align 8, !dbg !4777
  %5328 = load i64, i64* %29, align 8, !dbg !4777
  %5329 = getelementptr inbounds i8, i8* %5327, i64 %5328, !dbg !4777
  store i8 39, i8* %5329, align 1, !dbg !4777
  br label %5330, !dbg !4777

5330:                                             ; preds = %5326, %5322
  %5331 = load i32, i32* @x.63
  %5332 = load i32, i32* @y.64
  %5333 = sub i32 %5331, 1
  %5334 = mul i32 %5331, %5333
  %5335 = urem i32 %5334, 2
  %5336 = icmp eq i32 %5335, 0
  %5337 = icmp slt i32 %5332, 10
  %5338 = or i1 %5336, %5337
  br i1 %5338, label %originalBB1447, label %originalBB1447alteredBB

originalBB1447:                                   ; preds = %5330, %originalBB1447alteredBB
  %5339 = load i64, i64* %29, align 8, !dbg !4780
  %5340 = add i64 %5339, 1, !dbg !4780
  store i64 %5340, i64* %29, align 8, !dbg !4780
  %5341 = load i32, i32* @x.63
  %5342 = load i32, i32* @y.64
  %5343 = sub i32 %5341, 1
  %5344 = mul i32 %5341, %5343
  %5345 = urem i32 %5344, 2
  %5346 = icmp eq i32 %5345, 0
  %5347 = icmp slt i32 %5342, 10
  %5348 = or i1 %5346, %5347
  br i1 %5348, label %originalBBpart21457, label %originalBB1447alteredBB

originalBBpart21457:                              ; preds = %originalBB1447
  br label %5349, !dbg !4780

5349:                                             ; preds = %originalBBpart21457
  %5350 = load i32, i32* @x.63
  %5351 = load i32, i32* @y.64
  %5352 = sub i32 %5350, 1
  %5353 = mul i32 %5350, %5352
  %5354 = urem i32 %5353, 2
  %5355 = icmp eq i32 %5354, 0
  %5356 = icmp slt i32 %5351, 10
  %5357 = or i1 %5355, %5356
  br i1 %5357, label %originalBB1459, label %originalBB1459alteredBB

originalBB1459:                                   ; preds = %5349, %originalBB1459alteredBB
  store i8 0, i8* %36, align 1, !dbg !4771
  %5358 = load i32, i32* @x.63
  %5359 = load i32, i32* @y.64
  %5360 = sub i32 %5358, 1
  %5361 = mul i32 %5358, %5360
  %5362 = urem i32 %5361, 2
  %5363 = icmp eq i32 %5362, 0
  %5364 = icmp slt i32 %5359, 10
  %5365 = or i1 %5363, %5364
  br i1 %5365, label %originalBBpart21461, label %originalBB1459alteredBB

originalBBpart21461:                              ; preds = %originalBB1459
  br label %5366, !dbg !4771

5366:                                             ; preds = %originalBBpart21461, %originalBBpart21428, %5239
  %5367 = load i32, i32* @x.63
  %5368 = load i32, i32* @y.64
  %5369 = sub i32 %5367, 1
  %5370 = mul i32 %5367, %5369
  %5371 = urem i32 %5370, 2
  %5372 = icmp eq i32 %5371, 0
  %5373 = icmp slt i32 %5368, 10
  %5374 = or i1 %5372, %5373
  br i1 %5374, label %originalBB1463, label %originalBB1463alteredBB

originalBB1463:                                   ; preds = %5366, %originalBB1463alteredBB
  %5375 = load i32, i32* @x.63
  %5376 = load i32, i32* @y.64
  %5377 = sub i32 %5375, 1
  %5378 = mul i32 %5375, %5377
  %5379 = urem i32 %5378, 2
  %5380 = icmp eq i32 %5379, 0
  %5381 = icmp slt i32 %5376, 10
  %5382 = or i1 %5380, %5381
  br i1 %5382, label %originalBBpart21465, label %originalBB1463alteredBB

originalBBpart21465:                              ; preds = %originalBB1463
  br label %5383, !dbg !4770

5383:                                             ; preds = %originalBBpart21465
  %5384 = load i32, i32* @x.63
  %5385 = load i32, i32* @y.64
  %5386 = sub i32 %5384, 1
  %5387 = mul i32 %5384, %5386
  %5388 = urem i32 %5387, 2
  %5389 = icmp eq i32 %5388, 0
  %5390 = icmp slt i32 %5385, 10
  %5391 = or i1 %5389, %5390
  br i1 %5391, label %originalBB1467, label %originalBB1467alteredBB

originalBB1467:                                   ; preds = %5383, %originalBB1467alteredBB
  %5392 = load i32, i32* @x.63
  %5393 = load i32, i32* @y.64
  %5394 = sub i32 %5392, 1
  %5395 = mul i32 %5392, %5394
  %5396 = urem i32 %5395, 2
  %5397 = icmp eq i32 %5396, 0
  %5398 = icmp slt i32 %5393, 10
  %5399 = or i1 %5397, %5398
  br i1 %5399, label %originalBBpart21469, label %originalBB1467alteredBB

originalBBpart21469:                              ; preds = %originalBB1467
  br label %5400, !dbg !4781

5400:                                             ; preds = %originalBBpart21469
  %5401 = load i32, i32* @x.63
  %5402 = load i32, i32* @y.64
  %5403 = sub i32 %5401, 1
  %5404 = mul i32 %5401, %5403
  %5405 = urem i32 %5404, 2
  %5406 = icmp eq i32 %5405, 0
  %5407 = icmp slt i32 %5402, 10
  %5408 = or i1 %5406, %5407
  br i1 %5408, label %originalBB1471, label %originalBB1471alteredBB

originalBB1471:                                   ; preds = %5400, %originalBB1471alteredBB
  %5409 = load i64, i64* %29, align 8, !dbg !4782
  %5410 = load i64, i64* %20, align 8, !dbg !4782
  %5411 = icmp ult i64 %5409, %5410, !dbg !4782
  %5412 = load i32, i32* @x.63
  %5413 = load i32, i32* @y.64
  %5414 = sub i32 %5412, 1
  %5415 = mul i32 %5412, %5414
  %5416 = urem i32 %5415, 2
  %5417 = icmp eq i32 %5416, 0
  %5418 = icmp slt i32 %5413, 10
  %5419 = or i1 %5417, %5418
  br i1 %5419, label %originalBBpart21473, label %originalBB1471alteredBB

originalBBpart21473:                              ; preds = %originalBB1471
  br i1 %5411, label %5420, label %5441, !dbg !4785

5420:                                             ; preds = %originalBBpart21473
  %5421 = load i32, i32* @x.63
  %5422 = load i32, i32* @y.64
  %5423 = sub i32 %5421, 1
  %5424 = mul i32 %5421, %5423
  %5425 = urem i32 %5424, 2
  %5426 = icmp eq i32 %5425, 0
  %5427 = icmp slt i32 %5422, 10
  %5428 = or i1 %5426, %5427
  br i1 %5428, label %originalBB1475, label %originalBB1475alteredBB

originalBB1475:                                   ; preds = %5420, %originalBB1475alteredBB
  %5429 = load i8, i8* %39, align 1, !dbg !4782
  %5430 = load i8*, i8** %19, align 8, !dbg !4782
  %5431 = load i64, i64* %29, align 8, !dbg !4782
  %5432 = getelementptr inbounds i8, i8* %5430, i64 %5431, !dbg !4782
  store i8 %5429, i8* %5432, align 1, !dbg !4782
  %5433 = load i32, i32* @x.63
  %5434 = load i32, i32* @y.64
  %5435 = sub i32 %5433, 1
  %5436 = mul i32 %5433, %5435
  %5437 = urem i32 %5436, 2
  %5438 = icmp eq i32 %5437, 0
  %5439 = icmp slt i32 %5434, 10
  %5440 = or i1 %5438, %5439
  br i1 %5440, label %originalBBpart21477, label %originalBB1475alteredBB

originalBBpart21477:                              ; preds = %originalBB1475
  br label %5441, !dbg !4782

5441:                                             ; preds = %originalBBpart21477, %originalBBpart21473
  %5442 = load i64, i64* %29, align 8, !dbg !4785
  %5443 = add i64 %5442, 1, !dbg !4785
  store i64 %5443, i64* %29, align 8, !dbg !4785
  br label %5444, !dbg !4785

5444:                                             ; preds = %5441
  %5445 = load i32, i32* @x.63
  %5446 = load i32, i32* @y.64
  %5447 = sub i32 %5445, 1
  %5448 = mul i32 %5445, %5447
  %5449 = urem i32 %5448, 2
  %5450 = icmp eq i32 %5449, 0
  %5451 = icmp slt i32 %5446, 10
  %5452 = or i1 %5450, %5451
  br i1 %5452, label %originalBB1479, label %originalBB1479alteredBB

originalBB1479:                                   ; preds = %5444, %originalBB1479alteredBB
  %5453 = load i8, i8* %43, align 1, !dbg !4786
  %5454 = trunc i8 %5453 to i1, !dbg !4786
  %5455 = load i32, i32* @x.63
  %5456 = load i32, i32* @y.64
  %5457 = sub i32 %5455, 1
  %5458 = mul i32 %5455, %5457
  %5459 = urem i32 %5458, 2
  %5460 = icmp eq i32 %5459, 0
  %5461 = icmp slt i32 %5456, 10
  %5462 = or i1 %5460, %5461
  br i1 %5462, label %originalBBpart21481, label %originalBB1479alteredBB

originalBBpart21481:                              ; preds = %originalBB1479
  br i1 %5454, label %5480, label %5463, !dbg !4788

5463:                                             ; preds = %originalBBpart21481
  %5464 = load i32, i32* @x.63
  %5465 = load i32, i32* @y.64
  %5466 = sub i32 %5464, 1
  %5467 = mul i32 %5464, %5466
  %5468 = urem i32 %5467, 2
  %5469 = icmp eq i32 %5468, 0
  %5470 = icmp slt i32 %5465, 10
  %5471 = or i1 %5469, %5470
  br i1 %5471, label %originalBB1483, label %originalBB1483alteredBB

originalBB1483:                                   ; preds = %5463, %originalBB1483alteredBB
  store i8 0, i8* %38, align 1, !dbg !4789
  %5472 = load i32, i32* @x.63
  %5473 = load i32, i32* @y.64
  %5474 = sub i32 %5472, 1
  %5475 = mul i32 %5472, %5474
  %5476 = urem i32 %5475, 2
  %5477 = icmp eq i32 %5476, 0
  %5478 = icmp slt i32 %5473, 10
  %5479 = or i1 %5477, %5478
  br i1 %5479, label %originalBBpart21485, label %originalBB1483alteredBB

originalBBpart21485:                              ; preds = %originalBB1483
  br label %5480, !dbg !4790

5480:                                             ; preds = %originalBBpart21485, %originalBBpart21481
  %5481 = load i32, i32* @x.63
  %5482 = load i32, i32* @y.64
  %5483 = sub i32 %5481, 1
  %5484 = mul i32 %5481, %5483
  %5485 = urem i32 %5484, 2
  %5486 = icmp eq i32 %5485, 0
  %5487 = icmp slt i32 %5482, 10
  %5488 = or i1 %5486, %5487
  br i1 %5488, label %originalBB1487, label %originalBB1487alteredBB

originalBB1487:                                   ; preds = %5480, %originalBB1487alteredBB
  %5489 = load i32, i32* @x.63
  %5490 = load i32, i32* @y.64
  %5491 = sub i32 %5489, 1
  %5492 = mul i32 %5489, %5491
  %5493 = urem i32 %5492, 2
  %5494 = icmp eq i32 %5493, 0
  %5495 = icmp slt i32 %5490, 10
  %5496 = or i1 %5494, %5495
  br i1 %5496, label %originalBBpart21489, label %originalBB1487alteredBB

originalBBpart21489:                              ; preds = %originalBB1487
  br label %5497, !dbg !4791

5497:                                             ; preds = %originalBBpart21489, %1634
  %5498 = load i32, i32* @x.63
  %5499 = load i32, i32* @y.64
  %5500 = sub i32 %5498, 1
  %5501 = mul i32 %5498, %5500
  %5502 = urem i32 %5501, 2
  %5503 = icmp eq i32 %5502, 0
  %5504 = icmp slt i32 %5499, 10
  %5505 = or i1 %5503, %5504
  br i1 %5505, label %originalBB1491, label %originalBB1491alteredBB

originalBB1491:                                   ; preds = %5497, %originalBB1491alteredBB
  %5506 = load i64, i64* %28, align 8, !dbg !4792
  %5507 = add i64 %5506, 1, !dbg !4792
  store i64 %5507, i64* %28, align 8, !dbg !4792
  %5508 = load i32, i32* @x.63
  %5509 = load i32, i32* @y.64
  %5510 = sub i32 %5508, 1
  %5511 = mul i32 %5508, %5510
  %5512 = urem i32 %5511, 2
  %5513 = icmp eq i32 %5512, 0
  %5514 = icmp slt i32 %5509, 10
  %5515 = or i1 %5513, %5514
  br i1 %5515, label %originalBBpart21495, label %originalBB1491alteredBB

originalBBpart21495:                              ; preds = %originalBB1491
  br label %666, !dbg !4793, !llvm.loop !4794

5516:                                             ; preds = %730
  %5517 = load i32, i32* @x.63
  %5518 = load i32, i32* @y.64
  %5519 = sub i32 %5517, 1
  %5520 = mul i32 %5517, %5519
  %5521 = urem i32 %5520, 2
  %5522 = icmp eq i32 %5521, 0
  %5523 = icmp slt i32 %5518, 10
  %5524 = or i1 %5522, %5523
  br i1 %5524, label %originalBB1497, label %originalBB1497alteredBB

originalBB1497:                                   ; preds = %5516, %originalBB1497alteredBB
  %5525 = load i64, i64* %29, align 8, !dbg !4796
  %5526 = icmp eq i64 %5525, 0, !dbg !4798
  %5527 = load i32, i32* @x.63
  %5528 = load i32, i32* @y.64
  %5529 = sub i32 %5527, 1
  %5530 = mul i32 %5527, %5529
  %5531 = urem i32 %5530, 2
  %5532 = icmp eq i32 %5531, 0
  %5533 = icmp slt i32 %5528, 10
  %5534 = or i1 %5532, %5533
  br i1 %5534, label %originalBBpart21499, label %originalBB1497alteredBB

originalBBpart21499:                              ; preds = %originalBB1497
  br i1 %5526, label %5535, label %5590, !dbg !4799

5535:                                             ; preds = %originalBBpart21499
  %5536 = load i32, i32* @x.63
  %5537 = load i32, i32* @y.64
  %5538 = sub i32 %5536, 1
  %5539 = mul i32 %5536, %5538
  %5540 = urem i32 %5539, 2
  %5541 = icmp eq i32 %5540, 0
  %5542 = icmp slt i32 %5537, 10
  %5543 = or i1 %5541, %5542
  br i1 %5543, label %originalBB1501, label %originalBB1501alteredBB

originalBB1501:                                   ; preds = %5535, %originalBB1501alteredBB
  %5544 = load i32, i32* %23, align 4, !dbg !4800
  %5545 = icmp eq i32 %5544, 2, !dbg !4801
  %5546 = load i32, i32* @x.63
  %5547 = load i32, i32* @y.64
  %5548 = sub i32 %5546, 1
  %5549 = mul i32 %5546, %5548
  %5550 = urem i32 %5549, 2
  %5551 = icmp eq i32 %5550, 0
  %5552 = icmp slt i32 %5547, 10
  %5553 = or i1 %5551, %5552
  br i1 %5553, label %originalBBpart21503, label %originalBB1501alteredBB

originalBBpart21503:                              ; preds = %originalBB1501
  br i1 %5545, label %5554, label %5590, !dbg !4802

5554:                                             ; preds = %originalBBpart21503
  %5555 = load i32, i32* @x.63
  %5556 = load i32, i32* @y.64
  %5557 = sub i32 %5555, 1
  %5558 = mul i32 %5555, %5557
  %5559 = urem i32 %5558, 2
  %5560 = icmp eq i32 %5559, 0
  %5561 = icmp slt i32 %5556, 10
  %5562 = or i1 %5560, %5561
  br i1 %5562, label %originalBB1505, label %originalBB1505alteredBB

originalBB1505:                                   ; preds = %5554, %originalBB1505alteredBB
  %5563 = load i8, i8* %35, align 1, !dbg !4803
  %5564 = trunc i8 %5563 to i1, !dbg !4803
  %5565 = load i32, i32* @x.63
  %5566 = load i32, i32* @y.64
  %5567 = sub i32 %5565, 1
  %5568 = mul i32 %5565, %5567
  %5569 = urem i32 %5568, 2
  %5570 = icmp eq i32 %5569, 0
  %5571 = icmp slt i32 %5566, 10
  %5572 = or i1 %5570, %5571
  br i1 %5572, label %originalBBpart21507, label %originalBB1505alteredBB

originalBBpart21507:                              ; preds = %originalBB1505
  br i1 %5564, label %5573, label %5590, !dbg !4804

5573:                                             ; preds = %originalBBpart21507
  %5574 = load i32, i32* @x.63
  %5575 = load i32, i32* @y.64
  %5576 = sub i32 %5574, 1
  %5577 = mul i32 %5574, %5576
  %5578 = urem i32 %5577, 2
  %5579 = icmp eq i32 %5578, 0
  %5580 = icmp slt i32 %5575, 10
  %5581 = or i1 %5579, %5580
  br i1 %5581, label %originalBB1509, label %originalBB1509alteredBB

originalBB1509:                                   ; preds = %5573, %originalBB1509alteredBB
  %5582 = load i32, i32* @x.63
  %5583 = load i32, i32* @y.64
  %5584 = sub i32 %5582, 1
  %5585 = mul i32 %5582, %5584
  %5586 = urem i32 %5585, 2
  %5587 = icmp eq i32 %5586, 0
  %5588 = icmp slt i32 %5583, 10
  %5589 = or i1 %5587, %5588
  br i1 %5589, label %originalBBpart21511, label %originalBB1509alteredBB

originalBBpart21511:                              ; preds = %originalBB1509
  br label %5982, !dbg !4805

5590:                                             ; preds = %originalBBpart21507, %originalBBpart21503, %originalBBpart21499
  %5591 = load i32, i32* @x.63
  %5592 = load i32, i32* @y.64
  %5593 = sub i32 %5591, 1
  %5594 = mul i32 %5591, %5593
  %5595 = urem i32 %5594, 2
  %5596 = icmp eq i32 %5595, 0
  %5597 = icmp slt i32 %5592, 10
  %5598 = or i1 %5596, %5597
  br i1 %5598, label %originalBB1513, label %originalBB1513alteredBB

originalBB1513:                                   ; preds = %5590, %originalBB1513alteredBB
  %5599 = load i32, i32* %23, align 4, !dbg !4806
  %5600 = icmp eq i32 %5599, 2, !dbg !4808
  %5601 = load i32, i32* @x.63
  %5602 = load i32, i32* @y.64
  %5603 = sub i32 %5601, 1
  %5604 = mul i32 %5601, %5603
  %5605 = urem i32 %5604, 2
  %5606 = icmp eq i32 %5605, 0
  %5607 = icmp slt i32 %5602, 10
  %5608 = or i1 %5606, %5607
  br i1 %5608, label %originalBBpart21515, label %originalBB1513alteredBB

originalBBpart21515:                              ; preds = %originalBB1513
  br i1 %5600, label %5609, label %5734, !dbg !4809

5609:                                             ; preds = %originalBBpart21515
  %5610 = load i32, i32* @x.63
  %5611 = load i32, i32* @y.64
  %5612 = sub i32 %5610, 1
  %5613 = mul i32 %5610, %5612
  %5614 = urem i32 %5613, 2
  %5615 = icmp eq i32 %5614, 0
  %5616 = icmp slt i32 %5611, 10
  %5617 = or i1 %5615, %5616
  br i1 %5617, label %originalBB1517, label %originalBB1517alteredBB

originalBB1517:                                   ; preds = %5609, %originalBB1517alteredBB
  %5618 = load i8, i8* %35, align 1, !dbg !4810
  %5619 = trunc i8 %5618 to i1, !dbg !4810
  %5620 = load i32, i32* @x.63
  %5621 = load i32, i32* @y.64
  %5622 = sub i32 %5620, 1
  %5623 = mul i32 %5620, %5622
  %5624 = urem i32 %5623, 2
  %5625 = icmp eq i32 %5624, 0
  %5626 = icmp slt i32 %5621, 10
  %5627 = or i1 %5625, %5626
  br i1 %5627, label %originalBBpart21519, label %originalBB1517alteredBB

originalBBpart21519:                              ; preds = %originalBB1517
  br i1 %5619, label %5734, label %5628, !dbg !4811

5628:                                             ; preds = %originalBBpart21519
  %5629 = load i8, i8* %37, align 1, !dbg !4812
  %5630 = trunc i8 %5629 to i1, !dbg !4812
  br i1 %5630, label %5631, label %5734, !dbg !4813

5631:                                             ; preds = %5628
  %5632 = load i8, i8* %38, align 1, !dbg !4814
  %5633 = trunc i8 %5632 to i1, !dbg !4814
  br i1 %5633, label %5634, label %5660, !dbg !4817

5634:                                             ; preds = %5631
  %5635 = load i32, i32* @x.63
  %5636 = load i32, i32* @y.64
  %5637 = sub i32 %5635, 1
  %5638 = mul i32 %5635, %5637
  %5639 = urem i32 %5638, 2
  %5640 = icmp eq i32 %5639, 0
  %5641 = icmp slt i32 %5636, 10
  %5642 = or i1 %5640, %5641
  br i1 %5642, label %originalBB1521, label %originalBB1521alteredBB

originalBB1521:                                   ; preds = %5634, %originalBB1521alteredBB
  %5643 = load i8*, i8** %19, align 8, !dbg !4818
  %5644 = load i64, i64* %30, align 8, !dbg !4819
  %5645 = load i8*, i8** %21, align 8, !dbg !4820
  %5646 = load i64, i64* %22, align 8, !dbg !4821
  %5647 = load i32, i32* %24, align 4, !dbg !4822
  %5648 = load i32*, i32** %25, align 8, !dbg !4823
  %5649 = load i8*, i8** %26, align 8, !dbg !4824
  %5650 = load i8*, i8** %27, align 8, !dbg !4825
  %5651 = call i64 @quotearg_buffer_restyled(i8* %5643, i64 %5644, i8* %5645, i64 %5646, i32 5, i32 %5647, i32* %5648, i8* %5649, i8* %5650), !dbg !4826
  store i64 %5651, i64* %18, align 8, !dbg !4827
  %5652 = load i32, i32* @x.63
  %5653 = load i32, i32* @y.64
  %5654 = sub i32 %5652, 1
  %5655 = mul i32 %5652, %5654
  %5656 = urem i32 %5655, 2
  %5657 = icmp eq i32 %5656, 0
  %5658 = icmp slt i32 %5653, 10
  %5659 = or i1 %5657, %5658
  br i1 %5659, label %originalBBpart21523, label %originalBB1521alteredBB

originalBBpart21523:                              ; preds = %originalBB1521
  br label %6048, !dbg !4827

5660:                                             ; preds = %5631
  %5661 = load i32, i32* @x.63
  %5662 = load i32, i32* @y.64
  %5663 = sub i32 %5661, 1
  %5664 = mul i32 %5661, %5663
  %5665 = urem i32 %5664, 2
  %5666 = icmp eq i32 %5665, 0
  %5667 = icmp slt i32 %5662, 10
  %5668 = or i1 %5666, %5667
  br i1 %5668, label %originalBB1525, label %originalBB1525alteredBB

originalBB1525:                                   ; preds = %5660, %originalBB1525alteredBB
  %5669 = load i64, i64* %20, align 8, !dbg !4828
  %5670 = icmp ne i64 %5669, 0, !dbg !4828
  %5671 = load i32, i32* @x.63
  %5672 = load i32, i32* @y.64
  %5673 = sub i32 %5671, 1
  %5674 = mul i32 %5671, %5673
  %5675 = urem i32 %5674, 2
  %5676 = icmp eq i32 %5675, 0
  %5677 = icmp slt i32 %5672, 10
  %5678 = or i1 %5676, %5677
  br i1 %5678, label %originalBBpart21527, label %originalBB1525alteredBB

originalBBpart21527:                              ; preds = %originalBB1525
  br i1 %5670, label %5700, label %5679, !dbg !4830

5679:                                             ; preds = %originalBBpart21527
  %5680 = load i32, i32* @x.63
  %5681 = load i32, i32* @y.64
  %5682 = sub i32 %5680, 1
  %5683 = mul i32 %5680, %5682
  %5684 = urem i32 %5683, 2
  %5685 = icmp eq i32 %5684, 0
  %5686 = icmp slt i32 %5681, 10
  %5687 = or i1 %5685, %5686
  br i1 %5687, label %originalBB1529, label %originalBB1529alteredBB

originalBB1529:                                   ; preds = %5679, %originalBB1529alteredBB
  %5688 = load i64, i64* %30, align 8, !dbg !4831
  %5689 = icmp ne i64 %5688, 0, !dbg !4831
  %5690 = load i32, i32* @x.63
  %5691 = load i32, i32* @y.64
  %5692 = sub i32 %5690, 1
  %5693 = mul i32 %5690, %5692
  %5694 = urem i32 %5693, 2
  %5695 = icmp eq i32 %5694, 0
  %5696 = icmp slt i32 %5691, 10
  %5697 = or i1 %5695, %5696
  br i1 %5697, label %originalBBpart21531, label %originalBB1529alteredBB

originalBBpart21531:                              ; preds = %originalBB1529
  br i1 %5689, label %5698, label %5700, !dbg !4832

5698:                                             ; preds = %originalBBpart21531
  %5699 = load i64, i64* %30, align 8, !dbg !4833
  store i64 %5699, i64* %20, align 8, !dbg !4835
  store i64 0, i64* %29, align 8, !dbg !4836
  br label %66, !dbg !4837

5700:                                             ; preds = %originalBBpart21531, %originalBBpart21527
  %5701 = load i32, i32* @x.63
  %5702 = load i32, i32* @y.64
  %5703 = sub i32 %5701, 1
  %5704 = mul i32 %5701, %5703
  %5705 = urem i32 %5704, 2
  %5706 = icmp eq i32 %5705, 0
  %5707 = icmp slt i32 %5702, 10
  %5708 = or i1 %5706, %5707
  br i1 %5708, label %originalBB1533, label %originalBB1533alteredBB

originalBB1533:                                   ; preds = %5700, %originalBB1533alteredBB
  %5709 = load i32, i32* @x.63
  %5710 = load i32, i32* @y.64
  %5711 = sub i32 %5709, 1
  %5712 = mul i32 %5709, %5711
  %5713 = urem i32 %5712, 2
  %5714 = icmp eq i32 %5713, 0
  %5715 = icmp slt i32 %5710, 10
  %5716 = or i1 %5714, %5715
  br i1 %5716, label %originalBBpart21535, label %originalBB1533alteredBB

originalBBpart21535:                              ; preds = %originalBB1533
  br label %5717

5717:                                             ; preds = %originalBBpart21535
  %5718 = load i32, i32* @x.63
  %5719 = load i32, i32* @y.64
  %5720 = sub i32 %5718, 1
  %5721 = mul i32 %5718, %5720
  %5722 = urem i32 %5721, 2
  %5723 = icmp eq i32 %5722, 0
  %5724 = icmp slt i32 %5719, 10
  %5725 = or i1 %5723, %5724
  br i1 %5725, label %originalBB1537, label %originalBB1537alteredBB

originalBB1537:                                   ; preds = %5717, %originalBB1537alteredBB
  %5726 = load i32, i32* @x.63
  %5727 = load i32, i32* @y.64
  %5728 = sub i32 %5726, 1
  %5729 = mul i32 %5726, %5728
  %5730 = urem i32 %5729, 2
  %5731 = icmp eq i32 %5730, 0
  %5732 = icmp slt i32 %5727, 10
  %5733 = or i1 %5731, %5732
  br i1 %5733, label %originalBBpart21539, label %originalBB1537alteredBB

originalBBpart21539:                              ; preds = %originalBB1537
  br label %5734, !dbg !4838

5734:                                             ; preds = %originalBBpart21539, %5628, %originalBBpart21519, %originalBBpart21515
  %5735 = load i32, i32* @x.63
  %5736 = load i32, i32* @y.64
  %5737 = sub i32 %5735, 1
  %5738 = mul i32 %5735, %5737
  %5739 = urem i32 %5738, 2
  %5740 = icmp eq i32 %5739, 0
  %5741 = icmp slt i32 %5736, 10
  %5742 = or i1 %5740, %5741
  br i1 %5742, label %originalBB1541, label %originalBB1541alteredBB

originalBB1541:                                   ; preds = %5734, %originalBB1541alteredBB
  %5743 = load i8*, i8** %31, align 8, !dbg !4839
  %5744 = icmp ne i8* %5743, null, !dbg !4839
  %5745 = load i32, i32* @x.63
  %5746 = load i32, i32* @y.64
  %5747 = sub i32 %5745, 1
  %5748 = mul i32 %5745, %5747
  %5749 = urem i32 %5748, 2
  %5750 = icmp eq i32 %5749, 0
  %5751 = icmp slt i32 %5746, 10
  %5752 = or i1 %5750, %5751
  br i1 %5752, label %originalBBpart21543, label %originalBB1541alteredBB

originalBBpart21543:                              ; preds = %originalBB1541
  br i1 %5744, label %5753, label %5924, !dbg !4841

5753:                                             ; preds = %originalBBpart21543
  %5754 = load i32, i32* @x.63
  %5755 = load i32, i32* @y.64
  %5756 = sub i32 %5754, 1
  %5757 = mul i32 %5754, %5756
  %5758 = urem i32 %5757, 2
  %5759 = icmp eq i32 %5758, 0
  %5760 = icmp slt i32 %5755, 10
  %5761 = or i1 %5759, %5760
  br i1 %5761, label %originalBB1545, label %originalBB1545alteredBB

originalBB1545:                                   ; preds = %5753, %originalBB1545alteredBB
  %5762 = load i8, i8* %35, align 1, !dbg !4842
  %5763 = trunc i8 %5762 to i1, !dbg !4842
  %5764 = load i32, i32* @x.63
  %5765 = load i32, i32* @y.64
  %5766 = sub i32 %5764, 1
  %5767 = mul i32 %5764, %5766
  %5768 = urem i32 %5767, 2
  %5769 = icmp eq i32 %5768, 0
  %5770 = icmp slt i32 %5765, 10
  %5771 = or i1 %5769, %5770
  br i1 %5771, label %originalBBpart21547, label %originalBB1545alteredBB

originalBBpart21547:                              ; preds = %originalBB1545
  br i1 %5763, label %5924, label %5772, !dbg !4843

5772:                                             ; preds = %originalBBpart21547
  %5773 = load i32, i32* @x.63
  %5774 = load i32, i32* @y.64
  %5775 = sub i32 %5773, 1
  %5776 = mul i32 %5773, %5775
  %5777 = urem i32 %5776, 2
  %5778 = icmp eq i32 %5777, 0
  %5779 = icmp slt i32 %5774, 10
  %5780 = or i1 %5778, %5779
  br i1 %5780, label %originalBB1549, label %originalBB1549alteredBB

originalBB1549:                                   ; preds = %5772, %originalBB1549alteredBB
  %5781 = load i32, i32* @x.63
  %5782 = load i32, i32* @y.64
  %5783 = sub i32 %5781, 1
  %5784 = mul i32 %5781, %5783
  %5785 = urem i32 %5784, 2
  %5786 = icmp eq i32 %5785, 0
  %5787 = icmp slt i32 %5782, 10
  %5788 = or i1 %5786, %5787
  br i1 %5788, label %originalBBpart21551, label %originalBB1549alteredBB

originalBBpart21551:                              ; preds = %originalBB1549
  br label %5789, !dbg !4844

5789:                                             ; preds = %5904, %originalBBpart21551
  %5790 = load i32, i32* @x.63
  %5791 = load i32, i32* @y.64
  %5792 = sub i32 %5790, 1
  %5793 = mul i32 %5790, %5792
  %5794 = urem i32 %5793, 2
  %5795 = icmp eq i32 %5794, 0
  %5796 = icmp slt i32 %5791, 10
  %5797 = or i1 %5795, %5796
  br i1 %5797, label %originalBB1553, label %originalBB1553alteredBB

originalBB1553:                                   ; preds = %5789, %originalBB1553alteredBB
  %5798 = load i8*, i8** %31, align 8, !dbg !4845
  %5799 = load i8, i8* %5798, align 1, !dbg !4848
  %5800 = icmp ne i8 %5799, 0, !dbg !4849
  %5801 = load i32, i32* @x.63
  %5802 = load i32, i32* @y.64
  %5803 = sub i32 %5801, 1
  %5804 = mul i32 %5801, %5803
  %5805 = urem i32 %5804, 2
  %5806 = icmp eq i32 %5805, 0
  %5807 = icmp slt i32 %5802, 10
  %5808 = or i1 %5806, %5807
  br i1 %5808, label %originalBBpart21555, label %originalBB1553alteredBB

originalBBpart21555:                              ; preds = %originalBB1553
  br i1 %5800, label %5809, label %5907, !dbg !4849

5809:                                             ; preds = %originalBBpart21555
  %5810 = load i32, i32* @x.63
  %5811 = load i32, i32* @y.64
  %5812 = sub i32 %5810, 1
  %5813 = mul i32 %5810, %5812
  %5814 = urem i32 %5813, 2
  %5815 = icmp eq i32 %5814, 0
  %5816 = icmp slt i32 %5811, 10
  %5817 = or i1 %5815, %5816
  br i1 %5817, label %originalBB1557, label %originalBB1557alteredBB

originalBB1557:                                   ; preds = %5809, %originalBB1557alteredBB
  %5818 = load i32, i32* @x.63
  %5819 = load i32, i32* @y.64
  %5820 = sub i32 %5818, 1
  %5821 = mul i32 %5818, %5820
  %5822 = urem i32 %5821, 2
  %5823 = icmp eq i32 %5822, 0
  %5824 = icmp slt i32 %5819, 10
  %5825 = or i1 %5823, %5824
  br i1 %5825, label %originalBBpart21559, label %originalBB1557alteredBB

originalBBpart21559:                              ; preds = %originalBB1557
  br label %5826, !dbg !4850

5826:                                             ; preds = %originalBBpart21559
  %5827 = load i32, i32* @x.63
  %5828 = load i32, i32* @y.64
  %5829 = sub i32 %5827, 1
  %5830 = mul i32 %5827, %5829
  %5831 = urem i32 %5830, 2
  %5832 = icmp eq i32 %5831, 0
  %5833 = icmp slt i32 %5828, 10
  %5834 = or i1 %5832, %5833
  br i1 %5834, label %originalBB1561, label %originalBB1561alteredBB

originalBB1561:                                   ; preds = %5826, %originalBB1561alteredBB
  %5835 = load i64, i64* %29, align 8, !dbg !4851
  %5836 = load i64, i64* %20, align 8, !dbg !4851
  %5837 = icmp ult i64 %5835, %5836, !dbg !4851
  %5838 = load i32, i32* @x.63
  %5839 = load i32, i32* @y.64
  %5840 = sub i32 %5838, 1
  %5841 = mul i32 %5838, %5840
  %5842 = urem i32 %5841, 2
  %5843 = icmp eq i32 %5842, 0
  %5844 = icmp slt i32 %5839, 10
  %5845 = or i1 %5843, %5844
  br i1 %5845, label %originalBBpart21563, label %originalBB1561alteredBB

originalBBpart21563:                              ; preds = %originalBB1561
  br i1 %5837, label %5846, label %5868, !dbg !4854

5846:                                             ; preds = %originalBBpart21563
  %5847 = load i32, i32* @x.63
  %5848 = load i32, i32* @y.64
  %5849 = sub i32 %5847, 1
  %5850 = mul i32 %5847, %5849
  %5851 = urem i32 %5850, 2
  %5852 = icmp eq i32 %5851, 0
  %5853 = icmp slt i32 %5848, 10
  %5854 = or i1 %5852, %5853
  br i1 %5854, label %originalBB1565, label %originalBB1565alteredBB

originalBB1565:                                   ; preds = %5846, %originalBB1565alteredBB
  %5855 = load i8*, i8** %31, align 8, !dbg !4851
  %5856 = load i8, i8* %5855, align 1, !dbg !4851
  %5857 = load i8*, i8** %19, align 8, !dbg !4851
  %5858 = load i64, i64* %29, align 8, !dbg !4851
  %5859 = getelementptr inbounds i8, i8* %5857, i64 %5858, !dbg !4851
  store i8 %5856, i8* %5859, align 1, !dbg !4851
  %5860 = load i32, i32* @x.63
  %5861 = load i32, i32* @y.64
  %5862 = sub i32 %5860, 1
  %5863 = mul i32 %5860, %5862
  %5864 = urem i32 %5863, 2
  %5865 = icmp eq i32 %5864, 0
  %5866 = icmp slt i32 %5861, 10
  %5867 = or i1 %5865, %5866
  br i1 %5867, label %originalBBpart21567, label %originalBB1565alteredBB

originalBBpart21567:                              ; preds = %originalBB1565
  br label %5868, !dbg !4851

5868:                                             ; preds = %originalBBpart21567, %originalBBpart21563
  %5869 = load i32, i32* @x.63
  %5870 = load i32, i32* @y.64
  %5871 = sub i32 %5869, 1
  %5872 = mul i32 %5869, %5871
  %5873 = urem i32 %5872, 2
  %5874 = icmp eq i32 %5873, 0
  %5875 = icmp slt i32 %5870, 10
  %5876 = or i1 %5874, %5875
  br i1 %5876, label %originalBB1569, label %originalBB1569alteredBB

originalBB1569:                                   ; preds = %5868, %originalBB1569alteredBB
  %5877 = load i64, i64* %29, align 8, !dbg !4854
  %5878 = add i64 %5877, 1, !dbg !4854
  store i64 %5878, i64* %29, align 8, !dbg !4854
  %5879 = load i32, i32* @x.63
  %5880 = load i32, i32* @y.64
  %5881 = sub i32 %5879, 1
  %5882 = mul i32 %5879, %5881
  %5883 = urem i32 %5882, 2
  %5884 = icmp eq i32 %5883, 0
  %5885 = icmp slt i32 %5880, 10
  %5886 = or i1 %5884, %5885
  br i1 %5886, label %originalBBpart21573, label %originalBB1569alteredBB

originalBBpart21573:                              ; preds = %originalBB1569
  br label %5887, !dbg !4854

5887:                                             ; preds = %originalBBpart21573
  %5888 = load i32, i32* @x.63
  %5889 = load i32, i32* @y.64
  %5890 = sub i32 %5888, 1
  %5891 = mul i32 %5888, %5890
  %5892 = urem i32 %5891, 2
  %5893 = icmp eq i32 %5892, 0
  %5894 = icmp slt i32 %5889, 10
  %5895 = or i1 %5893, %5894
  br i1 %5895, label %originalBB1575, label %originalBB1575alteredBB

originalBB1575:                                   ; preds = %5887, %originalBB1575alteredBB
  %5896 = load i32, i32* @x.63
  %5897 = load i32, i32* @y.64
  %5898 = sub i32 %5896, 1
  %5899 = mul i32 %5896, %5898
  %5900 = urem i32 %5899, 2
  %5901 = icmp eq i32 %5900, 0
  %5902 = icmp slt i32 %5897, 10
  %5903 = or i1 %5901, %5902
  br i1 %5903, label %originalBBpart21577, label %originalBB1575alteredBB

originalBBpart21577:                              ; preds = %originalBB1575
  br label %5904, !dbg !4854

5904:                                             ; preds = %originalBBpart21577
  %5905 = load i8*, i8** %31, align 8, !dbg !4855
  %5906 = getelementptr inbounds i8, i8* %5905, i32 1, !dbg !4855
  store i8* %5906, i8** %31, align 8, !dbg !4855
  br label %5789, !dbg !4856, !llvm.loop !4857

5907:                                             ; preds = %originalBBpart21555
  %5908 = load i32, i32* @x.63
  %5909 = load i32, i32* @y.64
  %5910 = sub i32 %5908, 1
  %5911 = mul i32 %5908, %5910
  %5912 = urem i32 %5911, 2
  %5913 = icmp eq i32 %5912, 0
  %5914 = icmp slt i32 %5909, 10
  %5915 = or i1 %5913, %5914
  br i1 %5915, label %originalBB1579, label %originalBB1579alteredBB

originalBB1579:                                   ; preds = %5907, %originalBB1579alteredBB
  %5916 = load i32, i32* @x.63
  %5917 = load i32, i32* @y.64
  %5918 = sub i32 %5916, 1
  %5919 = mul i32 %5916, %5918
  %5920 = urem i32 %5919, 2
  %5921 = icmp eq i32 %5920, 0
  %5922 = icmp slt i32 %5917, 10
  %5923 = or i1 %5921, %5922
  br i1 %5923, label %originalBBpart21581, label %originalBB1579alteredBB

originalBBpart21581:                              ; preds = %originalBB1579
  br label %5924, !dbg !4858

5924:                                             ; preds = %originalBBpart21581, %originalBBpart21547, %originalBBpart21543
  %5925 = load i32, i32* @x.63
  %5926 = load i32, i32* @y.64
  %5927 = sub i32 %5925, 1
  %5928 = mul i32 %5925, %5927
  %5929 = urem i32 %5928, 2
  %5930 = icmp eq i32 %5929, 0
  %5931 = icmp slt i32 %5926, 10
  %5932 = or i1 %5930, %5931
  br i1 %5932, label %originalBB1583, label %originalBB1583alteredBB

originalBB1583:                                   ; preds = %5924, %originalBB1583alteredBB
  %5933 = load i64, i64* %29, align 8, !dbg !4859
  %5934 = load i64, i64* %20, align 8, !dbg !4861
  %5935 = icmp ult i64 %5933, %5934, !dbg !4862
  %5936 = load i32, i32* @x.63
  %5937 = load i32, i32* @y.64
  %5938 = sub i32 %5936, 1
  %5939 = mul i32 %5936, %5938
  %5940 = urem i32 %5939, 2
  %5941 = icmp eq i32 %5940, 0
  %5942 = icmp slt i32 %5937, 10
  %5943 = or i1 %5941, %5942
  br i1 %5943, label %originalBBpart21585, label %originalBB1583alteredBB

originalBBpart21585:                              ; preds = %originalBB1583
  br i1 %5935, label %5944, label %5964, !dbg !4863

5944:                                             ; preds = %originalBBpart21585
  %5945 = load i32, i32* @x.63
  %5946 = load i32, i32* @y.64
  %5947 = sub i32 %5945, 1
  %5948 = mul i32 %5945, %5947
  %5949 = urem i32 %5948, 2
  %5950 = icmp eq i32 %5949, 0
  %5951 = icmp slt i32 %5946, 10
  %5952 = or i1 %5950, %5951
  br i1 %5952, label %originalBB1587, label %originalBB1587alteredBB

originalBB1587:                                   ; preds = %5944, %originalBB1587alteredBB
  %5953 = load i8*, i8** %19, align 8, !dbg !4864
  %5954 = load i64, i64* %29, align 8, !dbg !4865
  %5955 = getelementptr inbounds i8, i8* %5953, i64 %5954, !dbg !4864
  store i8 0, i8* %5955, align 1, !dbg !4866
  %5956 = load i32, i32* @x.63
  %5957 = load i32, i32* @y.64
  %5958 = sub i32 %5956, 1
  %5959 = mul i32 %5956, %5958
  %5960 = urem i32 %5959, 2
  %5961 = icmp eq i32 %5960, 0
  %5962 = icmp slt i32 %5957, 10
  %5963 = or i1 %5961, %5962
  br i1 %5963, label %originalBBpart21589, label %originalBB1587alteredBB

originalBBpart21589:                              ; preds = %originalBB1587
  br label %5964, !dbg !4864

5964:                                             ; preds = %originalBBpart21589, %originalBBpart21585
  %5965 = load i32, i32* @x.63
  %5966 = load i32, i32* @y.64
  %5967 = sub i32 %5965, 1
  %5968 = mul i32 %5965, %5967
  %5969 = urem i32 %5968, 2
  %5970 = icmp eq i32 %5969, 0
  %5971 = icmp slt i32 %5966, 10
  %5972 = or i1 %5970, %5971
  br i1 %5972, label %originalBB1591, label %originalBB1591alteredBB

originalBB1591:                                   ; preds = %5964, %originalBB1591alteredBB
  %5973 = load i64, i64* %29, align 8, !dbg !4867
  store i64 %5973, i64* %18, align 8, !dbg !4868
  %5974 = load i32, i32* @x.63
  %5975 = load i32, i32* @y.64
  %5976 = sub i32 %5974, 1
  %5977 = mul i32 %5974, %5976
  %5978 = urem i32 %5977, 2
  %5979 = icmp eq i32 %5978, 0
  %5980 = icmp slt i32 %5975, 10
  %5981 = or i1 %5979, %5980
  br i1 %5981, label %originalBBpart21593, label %originalBB1591alteredBB

originalBBpart21593:                              ; preds = %originalBB1591
  br label %6048, !dbg !4868

5982:                                             ; preds = %originalBBpart21511, %originalBBpart21356, %originalBBpart2999, %originalBBpart2899, %originalBBpart2704, %originalBBpart2692, %originalBBpart2636, %originalBBpart2604, %1815, %originalBBpart2427, %originalBBpart2215, %originalBBpart2191
  call void @llvm.dbg.label(metadata !4869), !dbg !4870
  %5983 = load i32, i32* %23, align 4, !dbg !4871
  %5984 = icmp eq i32 %5983, 2, !dbg !4873
  br i1 %5984, label %5985, label %6021, !dbg !4874

5985:                                             ; preds = %5982
  %5986 = load i32, i32* @x.63
  %5987 = load i32, i32* @y.64
  %5988 = sub i32 %5986, 1
  %5989 = mul i32 %5986, %5988
  %5990 = urem i32 %5989, 2
  %5991 = icmp eq i32 %5990, 0
  %5992 = icmp slt i32 %5987, 10
  %5993 = or i1 %5991, %5992
  br i1 %5993, label %originalBB1595, label %originalBB1595alteredBB

originalBB1595:                                   ; preds = %5985, %originalBB1595alteredBB
  %5994 = load i8, i8* %33, align 1, !dbg !4875
  %5995 = trunc i8 %5994 to i1, !dbg !4875
  %5996 = load i32, i32* @x.63
  %5997 = load i32, i32* @y.64
  %5998 = sub i32 %5996, 1
  %5999 = mul i32 %5996, %5998
  %6000 = urem i32 %5999, 2
  %6001 = icmp eq i32 %6000, 0
  %6002 = icmp slt i32 %5997, 10
  %6003 = or i1 %6001, %6002
  br i1 %6003, label %originalBBpart21597, label %originalBB1595alteredBB

originalBBpart21597:                              ; preds = %originalBB1595
  br i1 %5995, label %6004, label %6021, !dbg !4876

6004:                                             ; preds = %originalBBpart21597
  %6005 = load i32, i32* @x.63
  %6006 = load i32, i32* @y.64
  %6007 = sub i32 %6005, 1
  %6008 = mul i32 %6005, %6007
  %6009 = urem i32 %6008, 2
  %6010 = icmp eq i32 %6009, 0
  %6011 = icmp slt i32 %6006, 10
  %6012 = or i1 %6010, %6011
  br i1 %6012, label %originalBB1599, label %originalBB1599alteredBB

originalBB1599:                                   ; preds = %6004, %originalBB1599alteredBB
  store i32 4, i32* %23, align 4, !dbg !4877
  %6013 = load i32, i32* @x.63
  %6014 = load i32, i32* @y.64
  %6015 = sub i32 %6013, 1
  %6016 = mul i32 %6013, %6015
  %6017 = urem i32 %6016, 2
  %6018 = icmp eq i32 %6017, 0
  %6019 = icmp slt i32 %6014, 10
  %6020 = or i1 %6018, %6019
  br i1 %6020, label %originalBBpart21601, label %originalBB1599alteredBB

originalBBpart21601:                              ; preds = %originalBB1599
  br label %6021, !dbg !4878

6021:                                             ; preds = %originalBBpart21601, %originalBBpart21597, %5982
  %6022 = load i32, i32* @x.63
  %6023 = load i32, i32* @y.64
  %6024 = sub i32 %6022, 1
  %6025 = mul i32 %6022, %6024
  %6026 = urem i32 %6025, 2
  %6027 = icmp eq i32 %6026, 0
  %6028 = icmp slt i32 %6023, 10
  %6029 = or i1 %6027, %6028
  br i1 %6029, label %originalBB1603, label %originalBB1603alteredBB

originalBB1603:                                   ; preds = %6021, %originalBB1603alteredBB
  %6030 = load i8*, i8** %19, align 8, !dbg !4879
  %6031 = load i64, i64* %20, align 8, !dbg !4880
  %6032 = load i8*, i8** %21, align 8, !dbg !4881
  %6033 = load i64, i64* %22, align 8, !dbg !4882
  %6034 = load i32, i32* %23, align 4, !dbg !4883
  %6035 = load i32, i32* %24, align 4, !dbg !4884
  %6036 = and i32 %6035, -3, !dbg !4885
  %6037 = load i8*, i8** %26, align 8, !dbg !4886
  %6038 = load i8*, i8** %27, align 8, !dbg !4887
  %6039 = call i64 @quotearg_buffer_restyled(i8* %6030, i64 %6031, i8* %6032, i64 %6033, i32 %6034, i32 %6036, i32* null, i8* %6037, i8* %6038), !dbg !4888
  store i64 %6039, i64* %18, align 8, !dbg !4889
  %6040 = load i32, i32* @x.63
  %6041 = load i32, i32* @y.64
  %6042 = sub i32 %6040, 1
  %6043 = mul i32 %6040, %6042
  %6044 = urem i32 %6043, 2
  %6045 = icmp eq i32 %6044, 0
  %6046 = icmp slt i32 %6041, 10
  %6047 = or i1 %6045, %6046
  br i1 %6047, label %originalBBpart21621, label %originalBB1603alteredBB

originalBBpart21621:                              ; preds = %originalBB1603
  br label %6048, !dbg !4889

6048:                                             ; preds = %originalBBpart21621, %originalBBpart21593, %originalBBpart21523
  %6049 = load i32, i32* @x.63
  %6050 = load i32, i32* @y.64
  %6051 = sub i32 %6049, 1
  %6052 = mul i32 %6049, %6051
  %6053 = urem i32 %6052, 2
  %6054 = icmp eq i32 %6053, 0
  %6055 = icmp slt i32 %6050, 10
  %6056 = or i1 %6054, %6055
  br i1 %6056, label %originalBB1623, label %originalBB1623alteredBB

originalBB1623:                                   ; preds = %6048, %originalBB1623alteredBB
  %6057 = load i64, i64* %18, align 8, !dbg !4890
  %6058 = load i32, i32* @x.63
  %6059 = load i32, i32* @y.64
  %6060 = sub i32 %6058, 1
  %6061 = mul i32 %6058, %6060
  %6062 = urem i32 %6061, 2
  %6063 = icmp eq i32 %6062, 0
  %6064 = icmp slt i32 %6059, 10
  %6065 = or i1 %6063, %6064
  br i1 %6065, label %originalBBpart21625, label %originalBB1623alteredBB

originalBBpart21625:                              ; preds = %originalBB1623
  ret i64 %6057, !dbg !4890

originalBBalteredBB:                              ; preds = %originalBB, %9
  %6066 = alloca i64, align 8
  %6067 = alloca i8*, align 8
  %6068 = alloca i64, align 8
  %6069 = alloca i8*, align 8
  %6070 = alloca i64, align 8
  %6071 = alloca i32, align 4
  %6072 = alloca i32, align 4
  %6073 = alloca i32*, align 8
  %6074 = alloca i8*, align 8
  %6075 = alloca i8*, align 8
  %6076 = alloca i64, align 8
  %6077 = alloca i64, align 8
  %6078 = alloca i64, align 8
  %6079 = alloca i8*, align 8
  %6080 = alloca i64, align 8
  %6081 = alloca i8, align 1
  %6082 = alloca i8, align 1
  %6083 = alloca i8, align 1
  %6084 = alloca i8, align 1
  %6085 = alloca i8, align 1
  %6086 = alloca i8, align 1
  %6087 = alloca i8, align 1
  %6088 = alloca i8, align 1
  %6089 = alloca i8, align 1
  %6090 = alloca i8, align 1
  %6091 = alloca i8, align 1
  %6092 = alloca i64, align 8
  %6093 = alloca i8, align 1
  %6094 = alloca %struct.__mbstate_t, align 4
  %6095 = alloca i32, align 4
  %6096 = alloca i64, align 8
  %6097 = alloca i64, align 8
  %6098 = alloca i64, align 8
  store i8* %0, i8** %6067, align 8
  call void @llvm.dbg.declare(metadata i8** %6067, metadata !4891, metadata !DIExpression()), !dbg !4014
  store i64 %1, i64* %6068, align 8
  call void @llvm.dbg.declare(metadata i64* %6068, metadata !4923, metadata !DIExpression()), !dbg !4016
  store i8* %2, i8** %6069, align 8
  call void @llvm.dbg.declare(metadata i8** %6069, metadata !4924, metadata !DIExpression()), !dbg !4018
  store i64 %3, i64* %6070, align 8
  call void @llvm.dbg.declare(metadata i64* %6070, metadata !4925, metadata !DIExpression()), !dbg !4020
  store i32 %4, i32* %6071, align 4
  call void @llvm.dbg.declare(metadata i32* %6071, metadata !4926, metadata !DIExpression()), !dbg !4022
  store i32 %5, i32* %6072, align 4
  call void @llvm.dbg.declare(metadata i32* %6072, metadata !4927, metadata !DIExpression()), !dbg !4024
  store i32* %6, i32** %6073, align 8
  call void @llvm.dbg.declare(metadata i32** %6073, metadata !4928, metadata !DIExpression()), !dbg !4026
  store i8* %7, i8** %6074, align 8
  call void @llvm.dbg.declare(metadata i8** %6074, metadata !4929, metadata !DIExpression()), !dbg !4028
  store i8* %8, i8** %6075, align 8
  call void @llvm.dbg.declare(metadata i8** %6075, metadata !4930, metadata !DIExpression()), !dbg !4030
  call void @llvm.dbg.declare(metadata i64* %6076, metadata !4931, metadata !DIExpression()), !dbg !4032
  call void @llvm.dbg.declare(metadata i64* %6077, metadata !4932, metadata !DIExpression()), !dbg !4034
  store i64 0, i64* %6077, align 8, !dbg !4034
  call void @llvm.dbg.declare(metadata i64* %6078, metadata !4933, metadata !DIExpression()), !dbg !4036
  store i64 0, i64* %6078, align 8, !dbg !4036
  call void @llvm.dbg.declare(metadata i8** %6079, metadata !4934, metadata !DIExpression()), !dbg !4038
  store i8* null, i8** %6079, align 8, !dbg !4038
  call void @llvm.dbg.declare(metadata i64* %6080, metadata !4935, metadata !DIExpression()), !dbg !4040
  store i64 0, i64* %6080, align 8, !dbg !4040
  call void @llvm.dbg.declare(metadata i8* %6081, metadata !4936, metadata !DIExpression()), !dbg !4042
  store i8 0, i8* %6081, align 1, !dbg !4042
  call void @llvm.dbg.declare(metadata i8* %6082, metadata !4937, metadata !DIExpression()), !dbg !4044
  %6099 = call i64 @__ctype_get_mb_cur_max() #10, !dbg !4045
  %6100 = icmp eq i64 %6099, 1, !dbg !4046
  %6101 = zext i1 %6100 to i8, !dbg !4044
  store i8 %6101, i8* %6082, align 1, !dbg !4044
  call void @llvm.dbg.declare(metadata i8* %6083, metadata !4938, metadata !DIExpression()), !dbg !4048
  %6102 = load i32, i32* %6072, align 4, !dbg !4049
  %_ = sub i32 %6102, 2
  %gen = mul i32 %_, 2
  %_1 = sub i32 0, %6102
  %gen2 = add i32 %_1, 2
  %_3 = shl i32 %6102, 2
  %_4 = sub i32 0, %6102
  %gen5 = add i32 %_4, 2
  %6103 = and i32 %6102, 2, !dbg !4050
  %6104 = icmp ne i32 %6103, 0, !dbg !4051
  %6105 = zext i1 %6104 to i8, !dbg !4048
  store i8 %6105, i8* %6083, align 1, !dbg !4048
  call void @llvm.dbg.declare(metadata i8* %6084, metadata !4939, metadata !DIExpression()), !dbg !4053
  store i8 0, i8* %6084, align 1, !dbg !4053
  call void @llvm.dbg.declare(metadata i8* %6085, metadata !4940, metadata !DIExpression()), !dbg !4055
  store i8 0, i8* %6085, align 1, !dbg !4055
  call void @llvm.dbg.declare(metadata i8* %6086, metadata !4941, metadata !DIExpression()), !dbg !4057
  store i8 1, i8* %6086, align 1, !dbg !4057
  br label %originalBB

originalBB6alteredBB:                             ; preds = %originalBB6, %66
  %6106 = load i32, i32* %23, align 4, !dbg !4061
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %84
  store i32 5, i32* %23, align 4, !dbg !4063
  store i8 1, i8* %35, align 1, !dbg !4065
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %101
  %6107 = load i8, i8* %35, align 1, !dbg !4067
  %6108 = trunc i8 %6107 to i1, !dbg !4067
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %120
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %137
  %6109 = load i64, i64* %29, align 8, !dbg !4071
  %6110 = load i64, i64* %20, align 8, !dbg !4071
  %6111 = icmp ult i64 %6109, %6110, !dbg !4071
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %157
  %6112 = load i8*, i8** %19, align 8, !dbg !4071
  %6113 = load i64, i64* %29, align 8, !dbg !4071
  %6114 = getelementptr inbounds i8, i8* %6112, i64 %6113, !dbg !4071
  store i8 34, i8* %6114, align 1, !dbg !4071
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %181
  store i8 1, i8* %33, align 1, !dbg !4075
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.120, i64 0, i64 0), i8** %31, align 8, !dbg !4076
  store i64 1, i64* %32, align 8, !dbg !4077
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %198
  store i8 1, i8* %33, align 1, !dbg !4079
  store i8 0, i8* %35, align 1, !dbg !4080
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %215
  %6115 = load i32, i32* %23, align 4, !dbg !4082
  %6116 = icmp ne i32 %6115, 10, !dbg !4085
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %234
  %6117 = load i32, i32* %23, align 4, !dbg !4087
  %6118 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.121, i64 0, i64 0), i32 %6117), !dbg !4089
  store i8* %6118, i8** %26, align 8, !dbg !4090
  %6119 = load i32, i32* %23, align 4, !dbg !4091
  %6120 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.122, i64 0, i64 0), i32 %6119), !dbg !4092
  store i8* %6120, i8** %27, align 8, !dbg !4093
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %255
  %6121 = load i8, i8* %35, align 1, !dbg !4095
  %6122 = trunc i8 %6121 to i1, !dbg !4095
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %274
  %6123 = load i8*, i8** %26, align 8, !dbg !4098
  store i8* %6123, i8** %31, align 8, !dbg !4100
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %292
  %6124 = load i8*, i8** %31, align 8, !dbg !4102
  %6125 = load i8, i8* %6124, align 1, !dbg !4104
  %6126 = icmp ne i8 %6125, 0, !dbg !4105
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %312
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %329
  %6127 = load i64, i64* %29, align 8, !dbg !4107
  %6128 = load i64, i64* %20, align 8, !dbg !4107
  %6129 = icmp ult i64 %6127, %6128, !dbg !4107
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %349
  %6130 = load i8*, i8** %31, align 8, !dbg !4107
  %6131 = load i8, i8* %6130, align 1, !dbg !4107
  %6132 = load i8*, i8** %19, align 8, !dbg !4107
  %6133 = load i64, i64* %29, align 8, !dbg !4107
  %6134 = getelementptr inbounds i8, i8* %6132, i64 %6133, !dbg !4107
  store i8 %6131, i8* %6134, align 1, !dbg !4107
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %374
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %391
  %6135 = load i8*, i8** %31, align 8, !dbg !4111
  %6136 = getelementptr inbounds i8, i8* %6135, i32 1, !dbg !4111
  store i8* %6136, i8** %31, align 8, !dbg !4111
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %411
  store i8 1, i8* %33, align 1, !dbg !4115
  %6137 = load i8*, i8** %27, align 8, !dbg !4116
  store i8* %6137, i8** %31, align 8, !dbg !4117
  %6138 = load i8*, i8** %31, align 8, !dbg !4118
  %6139 = call i64 @strlen(i8* %6138) #13, !dbg !4119
  store i64 %6139, i64* %32, align 8, !dbg !4120
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %431
  store i8 1, i8* %33, align 1, !dbg !4122
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %448
  store i8 1, i8* %35, align 1, !dbg !4124
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %465
  %6140 = load i8, i8* %35, align 1, !dbg !4126
  %6141 = trunc i8 %6140 to i1, !dbg !4126
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %484
  store i8 1, i8* %33, align 1, !dbg !4129
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %502
  store i32 2, i32* %23, align 4, !dbg !4132
  %6142 = load i8, i8* %35, align 1, !dbg !4133
  %6143 = trunc i8 %6142 to i1, !dbg !4133
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %521
  br label %originalBB102

originalBB106alteredBB:                           ; preds = %originalBB106, %538
  %6144 = load i64, i64* %29, align 8, !dbg !4137
  %6145 = load i64, i64* %20, align 8, !dbg !4137
  %6146 = icmp ult i64 %6144, %6145, !dbg !4137
  br label %originalBB106

originalBB110alteredBB:                           ; preds = %originalBB110, %558
  %6147 = load i8*, i8** %19, align 8, !dbg !4137
  %6148 = load i64, i64* %29, align 8, !dbg !4137
  %6149 = getelementptr inbounds i8, i8* %6147, i64 %6148, !dbg !4137
  store i8 39, i8* %6149, align 1, !dbg !4137
  br label %originalBB110

originalBB114alteredBB:                           ; preds = %originalBB114, %578
  %6150 = load i64, i64* %29, align 8, !dbg !4140
  %_115 = sub i64 %6150, 1
  %gen116 = mul i64 %_115, 1
  %_117 = sub i64 0, %6150
  %gen118 = add i64 %_117, 1
  %_119 = shl i64 %6150, 1
  %_120 = sub i64 %6150, 1
  %gen121 = mul i64 %_120, 1
  %6151 = add i64 %6150, 1, !dbg !4140
  store i64 %6151, i64* %29, align 8, !dbg !4140
  br label %originalBB114

originalBB125alteredBB:                           ; preds = %originalBB125, %597
  br label %originalBB125

originalBB129alteredBB:                           ; preds = %originalBB129, %614
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.122, i64 0, i64 0), i8** %31, align 8, !dbg !4141
  store i64 1, i64* %32, align 8, !dbg !4142
  br label %originalBB129

originalBB133alteredBB:                           ; preds = %originalBB133, %632
  call void @abort() #12, !dbg !4146
  br label %originalBB133

originalBB137alteredBB:                           ; preds = %originalBB137, %649
  store i64 0, i64* %28, align 8, !dbg !4147
  br label %originalBB137

originalBB141alteredBB:                           ; preds = %originalBB141, %666
  %6152 = load i64, i64* %22, align 8, !dbg !4150
  %6153 = icmp eq i64 %6152, -1, !dbg !4152
  br label %originalBB141

originalBB145alteredBB:                           ; preds = %originalBB145, %685
  %6154 = load i8*, i8** %21, align 8, !dbg !4153
  %6155 = load i64, i64* %28, align 8, !dbg !4154
  %6156 = getelementptr inbounds i8, i8* %6154, i64 %6155, !dbg !4153
  %6157 = load i8, i8* %6156, align 1, !dbg !4153
  %6158 = sext i8 %6157 to i32, !dbg !4153
  %6159 = icmp eq i32 %6158, 0, !dbg !4155
  %6160 = zext i1 %6159 to i32, !dbg !4155
  br label %originalBB145

originalBB149alteredBB:                           ; preds = %originalBB149, %709
  %6161 = load i64, i64* %28, align 8, !dbg !4156
  %6162 = load i64, i64* %22, align 8, !dbg !4157
  %6163 = icmp eq i64 %6161, %6162, !dbg !4158
  %6164 = zext i1 %6163 to i32, !dbg !4158
  br label %originalBB149

originalBB153alteredBB:                           ; preds = %originalBB153, %734
  store i8 0, i8* %41, align 1, !dbg !4167
  call void @llvm.dbg.declare(metadata !4, metadata !4942, metadata !DIExpression()), !dbg !4169
  store i8 0, i8* %42, align 1, !dbg !4169
  call void @llvm.dbg.declare(metadata !4, metadata !4977, metadata !DIExpression()), !dbg !4171
  store i8 0, i8* %43, align 1, !dbg !4171
  %6165 = load i8, i8* %33, align 1, !dbg !4172
  %6166 = trunc i8 %6165 to i1, !dbg !4172
  br label %originalBB153

originalBB157alteredBB:                           ; preds = %originalBB157, %753
  %6167 = load i32, i32* %23, align 4, !dbg !4175
  %6168 = icmp ne i32 %6167, 2, !dbg !4176
  br label %originalBB157

originalBB161alteredBB:                           ; preds = %originalBB161, %772
  %6169 = load i64, i64* %32, align 8, !dbg !4178
  %6170 = icmp ne i64 %6169, 0, !dbg !4178
  br label %originalBB161

originalBB165alteredBB:                           ; preds = %originalBB165, %797
  %6171 = load i64, i64* %32, align 8, !dbg !4186
  %6172 = icmp ult i64 1, %6171, !dbg !4187
  br label %originalBB165

originalBB169alteredBB:                           ; preds = %originalBB169, %816
  %6173 = load i8*, i8** %21, align 8, !dbg !4188
  %6174 = call i64 @strlen(i8* %6173) #13, !dbg !4189
  store i64 %6174, i64* %22, align 8, !dbg !4190
  br label %originalBB169

originalBB173alteredBB:                           ; preds = %originalBB173, %835
  %6175 = load i64, i64* %22, align 8, !dbg !4191
  br label %originalBB173

originalBB177alteredBB:                           ; preds = %originalBB177, %853
  %6176 = icmp ule i64 %794, %854, !dbg !4192
  br label %originalBB177

originalBB181alteredBB:                           ; preds = %originalBB181, %872
  %6177 = load i8*, i8** %21, align 8, !dbg !4194
  %6178 = load i64, i64* %28, align 8, !dbg !4195
  %6179 = getelementptr inbounds i8, i8* %6177, i64 %6178, !dbg !4196
  %6180 = load i8*, i8** %31, align 8, !dbg !4197
  %6181 = load i64, i64* %32, align 8, !dbg !4198
  %6182 = call i32 @memcmp(i8* %6179, i8* %6180, i64 %6181) #13, !dbg !4199
  %6183 = icmp eq i32 %6182, 0, !dbg !4200
  br label %originalBB181

originalBB185alteredBB:                           ; preds = %originalBB185, %896
  %6184 = load i8, i8* %35, align 1, !dbg !4202
  %6185 = trunc i8 %6184 to i1, !dbg !4202
  br label %originalBB185

originalBB189alteredBB:                           ; preds = %originalBB189, %915
  br label %originalBB189

originalBB193alteredBB:                           ; preds = %originalBB193, %932
  store i8 1, i8* %41, align 1, !dbg !4207
  br label %originalBB193

originalBB197alteredBB:                           ; preds = %originalBB197, %949
  %6186 = load i8*, i8** %21, align 8, !dbg !4209
  %6187 = load i64, i64* %28, align 8, !dbg !4210
  %6188 = getelementptr inbounds i8, i8* %6186, i64 %6187, !dbg !4209
  %6189 = load i8, i8* %6188, align 1, !dbg !4209
  store i8 %6189, i8* %39, align 1, !dbg !4211
  %6190 = load i8, i8* %39, align 1, !dbg !4212
  %6191 = zext i8 %6190 to i32, !dbg !4212
  br label %originalBB197

originalBB201alteredBB:                           ; preds = %originalBB201, %972
  %6192 = load i8, i8* %33, align 1, !dbg !4214
  %6193 = trunc i8 %6192 to i1, !dbg !4214
  br label %originalBB201

originalBB205alteredBB:                           ; preds = %originalBB205, %991
  br label %originalBB205

originalBB209alteredBB:                           ; preds = %originalBB209, %1008
  %6194 = load i8, i8* %35, align 1, !dbg !4220
  %6195 = trunc i8 %6194 to i1, !dbg !4220
  br label %originalBB209

originalBB213alteredBB:                           ; preds = %originalBB213, %1027
  br label %originalBB213

originalBB217alteredBB:                           ; preds = %originalBB217, %1050
  br label %originalBB217

originalBB221alteredBB:                           ; preds = %originalBB221, %1067
  %6196 = load i64, i64* %29, align 8, !dbg !4228
  %6197 = load i64, i64* %20, align 8, !dbg !4228
  %6198 = icmp ult i64 %6196, %6197, !dbg !4228
  br label %originalBB221

originalBB225alteredBB:                           ; preds = %originalBB225, %1091
  %6199 = load i64, i64* %29, align 8, !dbg !4231
  %_226 = sub i64 0, %6199
  %gen227 = add i64 %_226, 1
  %_228 = sub i64 0, %6199
  %gen229 = add i64 %_228, 1
  %_230 = shl i64 %6199, 1
  %6200 = add i64 %6199, 1, !dbg !4231
  store i64 %6200, i64* %29, align 8, !dbg !4231
  br label %originalBB225

originalBB234alteredBB:                           ; preds = %originalBB234, %1110
  br label %originalBB234

originalBB238alteredBB:                           ; preds = %originalBB238, %1127
  %6201 = load i64, i64* %29, align 8, !dbg !4232
  %6202 = load i64, i64* %20, align 8, !dbg !4232
  %6203 = icmp ult i64 %6201, %6202, !dbg !4232
  br label %originalBB238

originalBB242alteredBB:                           ; preds = %originalBB242, %1147
  %6204 = load i8*, i8** %19, align 8, !dbg !4232
  %6205 = load i64, i64* %29, align 8, !dbg !4232
  %6206 = getelementptr inbounds i8, i8* %6204, i64 %6205, !dbg !4232
  store i8 36, i8* %6206, align 1, !dbg !4232
  br label %originalBB242

originalBB246alteredBB:                           ; preds = %originalBB246, %1167
  %6207 = load i64, i64* %29, align 8, !dbg !4235
  %_247 = shl i64 %6207, 1
  %_248 = sub i64 0, %6207
  %gen249 = add i64 %_248, 1
  %_250 = shl i64 %6207, 1
  %_251 = shl i64 %6207, 1
  %_252 = sub i64 0, %6207
  %gen253 = add i64 %_252, 1
  %_254 = shl i64 %6207, 1
  %6208 = add i64 %6207, 1, !dbg !4235
  store i64 %6208, i64* %29, align 8, !dbg !4235
  br label %originalBB246

originalBB258alteredBB:                           ; preds = %originalBB258, %1186
  br label %originalBB258

originalBB262alteredBB:                           ; preds = %originalBB262, %1203
  %6209 = load i64, i64* %29, align 8, !dbg !4236
  %6210 = load i64, i64* %20, align 8, !dbg !4236
  %6211 = icmp ult i64 %6209, %6210, !dbg !4236
  br label %originalBB262

originalBB266alteredBB:                           ; preds = %originalBB266, %1223
  %6212 = load i8*, i8** %19, align 8, !dbg !4236
  %6213 = load i64, i64* %29, align 8, !dbg !4236
  %6214 = getelementptr inbounds i8, i8* %6212, i64 %6213, !dbg !4236
  store i8 39, i8* %6214, align 1, !dbg !4236
  br label %originalBB266

originalBB270alteredBB:                           ; preds = %originalBB270, %1243
  %6215 = load i64, i64* %29, align 8, !dbg !4239
  %_271 = sub i64 0, %6215
  %gen272 = add i64 %_271, 1
  %_273 = sub i64 %6215, 1
  %gen274 = mul i64 %_273, 1
  %_275 = sub i64 %6215, 1
  %gen276 = mul i64 %_275, 1
  %_277 = sub i64 0, %6215
  %gen278 = add i64 %_277, 1
  %6216 = add i64 %6215, 1, !dbg !4239
  store i64 %6216, i64* %29, align 8, !dbg !4239
  br label %originalBB270

originalBB282alteredBB:                           ; preds = %originalBB282, %1262
  store i8 1, i8* %36, align 1, !dbg !4226
  br label %originalBB282

originalBB286alteredBB:                           ; preds = %originalBB286, %1279
  br label %originalBB286

originalBB290alteredBB:                           ; preds = %originalBB290, %1296
  %6217 = load i64, i64* %29, align 8, !dbg !4240
  %6218 = load i64, i64* %20, align 8, !dbg !4240
  %6219 = icmp ult i64 %6217, %6218, !dbg !4240
  br label %originalBB290

originalBB294alteredBB:                           ; preds = %originalBB294, %1316
  %6220 = load i8*, i8** %19, align 8, !dbg !4240
  %6221 = load i64, i64* %29, align 8, !dbg !4240
  %6222 = getelementptr inbounds i8, i8* %6220, i64 %6221, !dbg !4240
  store i8 92, i8* %6222, align 1, !dbg !4240
  br label %originalBB294

originalBB298alteredBB:                           ; preds = %originalBB298, %1336
  %6223 = load i64, i64* %29, align 8, !dbg !4243
  %_299 = sub i64 0, %6223
  %gen300 = add i64 %_299, 1
  %_301 = shl i64 %6223, 1
  %_302 = sub i64 %6223, 1
  %gen303 = mul i64 %_302, 1
  %_304 = sub i64 %6223, 1
  %gen305 = mul i64 %_304, 1
  %_306 = sub i64 0, %6223
  %gen307 = add i64 %_306, 1
  %6224 = add i64 %6223, 1, !dbg !4243
  store i64 %6224, i64* %29, align 8, !dbg !4243
  br label %originalBB298

originalBB311alteredBB:                           ; preds = %originalBB311, %1355
  br label %originalBB311

originalBB315alteredBB:                           ; preds = %originalBB315, %1372
  %6225 = load i32, i32* %23, align 4, !dbg !4244
  %6226 = icmp ne i32 %6225, 2, !dbg !4246
  br label %originalBB315

originalBB319alteredBB:                           ; preds = %originalBB319, %1391
  %6227 = load i64, i64* %28, align 8, !dbg !4248
  %_320 = sub i64 %6227, 1
  %gen321 = mul i64 %_320, 1
  %_322 = sub i64 %6227, 1
  %gen323 = mul i64 %_322, 1
  %_324 = sub i64 %6227, 1
  %gen325 = mul i64 %_324, 1
  %6228 = add i64 %6227, 1, !dbg !4249
  %6229 = load i64, i64* %22, align 8, !dbg !4250
  %6230 = icmp ult i64 %6228, %6229, !dbg !4251
  br label %originalBB319

originalBB329alteredBB:                           ; preds = %originalBB329, %1412
  %6231 = load i8*, i8** %21, align 8, !dbg !4253
  %6232 = load i64, i64* %28, align 8, !dbg !4254
  %_330 = sub i64 %6232, 1
  %gen331 = mul i64 %_330, 1
  %6233 = add i64 %6232, 1, !dbg !4255
  %6234 = getelementptr inbounds i8, i8* %6231, i64 %6233, !dbg !4253
  %6235 = load i8, i8* %6234, align 1, !dbg !4253
  %6236 = sext i8 %6235 to i32, !dbg !4253
  %6237 = icmp sle i32 48, %6236, !dbg !4256
  br label %originalBB329

originalBB335alteredBB:                           ; preds = %originalBB335, %1436
  %6238 = load i8*, i8** %21, align 8, !dbg !4258
  %6239 = load i64, i64* %28, align 8, !dbg !4259
  %_336 = shl i64 %6239, 1
  %_337 = shl i64 %6239, 1
  %_338 = sub i64 0, %6239
  %gen339 = add i64 %_338, 1
  %_340 = sub i64 %6239, 1
  %gen341 = mul i64 %_340, 1
  %_342 = sub i64 %6239, 1
  %gen343 = mul i64 %_342, 1
  %_344 = sub i64 %6239, 1
  %gen345 = mul i64 %_344, 1
  %_346 = sub i64 %6239, 1
  %gen347 = mul i64 %_346, 1
  %_348 = sub i64 0, %6239
  %gen349 = add i64 %_348, 1
  %6240 = add i64 %6239, 1, !dbg !4260
  %6241 = getelementptr inbounds i8, i8* %6238, i64 %6240, !dbg !4258
  %6242 = load i8, i8* %6241, align 1, !dbg !4258
  %6243 = sext i8 %6242 to i32, !dbg !4258
  %6244 = icmp sle i32 %6243, 57, !dbg !4261
  br label %originalBB335

originalBB353alteredBB:                           ; preds = %originalBB353, %1460
  br label %originalBB353

originalBB357alteredBB:                           ; preds = %originalBB357, %1477
  %6245 = load i64, i64* %29, align 8, !dbg !4265
  %6246 = load i64, i64* %20, align 8, !dbg !4265
  %6247 = icmp ult i64 %6245, %6246, !dbg !4265
  br label %originalBB357

originalBB361alteredBB:                           ; preds = %originalBB361, %1497
  %6248 = load i8*, i8** %19, align 8, !dbg !4265
  %6249 = load i64, i64* %29, align 8, !dbg !4265
  %6250 = getelementptr inbounds i8, i8* %6248, i64 %6249, !dbg !4265
  store i8 48, i8* %6250, align 1, !dbg !4265
  br label %originalBB361

originalBB365alteredBB:                           ; preds = %originalBB365, %1517
  %6251 = load i64, i64* %29, align 8, !dbg !4268
  %_366 = sub i64 0, %6251
  %gen367 = add i64 %_366, 1
  %_368 = sub i64 0, %6251
  %gen369 = add i64 %_368, 1
  %_370 = shl i64 %6251, 1
  %_371 = sub i64 %6251, 1
  %gen372 = mul i64 %_371, 1
  %_373 = shl i64 %6251, 1
  %6252 = add i64 %6251, 1, !dbg !4268
  store i64 %6252, i64* %29, align 8, !dbg !4268
  br label %originalBB365

originalBB377alteredBB:                           ; preds = %originalBB377, %1537
  %6253 = load i64, i64* %29, align 8, !dbg !4270
  %6254 = load i64, i64* %20, align 8, !dbg !4270
  %6255 = icmp ult i64 %6253, %6254, !dbg !4270
  br label %originalBB377

originalBB381alteredBB:                           ; preds = %originalBB381, %1557
  %6256 = load i8*, i8** %19, align 8, !dbg !4270
  %6257 = load i64, i64* %29, align 8, !dbg !4270
  %6258 = getelementptr inbounds i8, i8* %6256, i64 %6257, !dbg !4270
  store i8 48, i8* %6258, align 1, !dbg !4270
  br label %originalBB381

originalBB385alteredBB:                           ; preds = %originalBB385, %1577
  %6259 = load i64, i64* %29, align 8, !dbg !4273
  %_386 = sub i64 0, %6259
  %gen387 = add i64 %_386, 1
  %_388 = shl i64 %6259, 1
  %_389 = sub i64 %6259, 1
  %gen390 = mul i64 %_389, 1
  %_391 = sub i64 %6259, 1
  %gen392 = mul i64 %_391, 1
  %_393 = shl i64 %6259, 1
  %6260 = add i64 %6259, 1, !dbg !4273
  store i64 %6260, i64* %29, align 8, !dbg !4273
  br label %originalBB385

originalBB397alteredBB:                           ; preds = %originalBB397, %1596
  br label %originalBB397

originalBB401alteredBB:                           ; preds = %originalBB401, %1614
  %6261 = load i32, i32* %24, align 4, !dbg !4277
  %_402 = sub i32 %6261, 1
  %gen403 = mul i32 %_402, 1
  %_404 = sub i32 %6261, 1
  %gen405 = mul i32 %_404, 1
  %6262 = and i32 %6261, 1, !dbg !4279
  %6263 = icmp ne i32 %6262, 0, !dbg !4279
  br label %originalBB401

originalBB409alteredBB:                           ; preds = %originalBB409, %1635
  br label %originalBB409

originalBB413alteredBB:                           ; preds = %originalBB413, %1652
  br label %originalBB413

originalBB417alteredBB:                           ; preds = %originalBB417, %1669
  %6264 = load i32, i32* %23, align 4, !dbg !4283
  br label %originalBB417

originalBB421alteredBB:                           ; preds = %originalBB421, %1687
  %6265 = load i8, i8* %35, align 1, !dbg !4285
  %6266 = trunc i8 %6265 to i1, !dbg !4285
  br label %originalBB421

originalBB425alteredBB:                           ; preds = %originalBB425, %1706
  br label %originalBB425

originalBB429alteredBB:                           ; preds = %originalBB429, %1723
  br label %originalBB429

originalBB433alteredBB:                           ; preds = %originalBB433, %1740
  %6267 = load i32, i32* %24, align 4, !dbg !4291
  %_434 = shl i32 %6267, 4
  %_435 = sub i32 %6267, 4
  %gen436 = mul i32 %_435, 4
  %_437 = sub i32 0, %6267
  %gen438 = add i32 %_437, 4
  %_439 = shl i32 %6267, 4
  %_440 = sub i32 0, %6267
  %gen441 = add i32 %_440, 4
  %6268 = and i32 %6267, 4, !dbg !4293
  %6269 = icmp ne i32 %6268, 0, !dbg !4293
  br label %originalBB433

originalBB445alteredBB:                           ; preds = %originalBB445, %1773
  %6270 = load i8*, i8** %21, align 8, !dbg !4305
  %6271 = load i64, i64* %28, align 8, !dbg !4306
  %_446 = sub i64 0, %6271
  %gen447 = add i64 %_446, 2
  %_448 = sub i64 0, %6271
  %gen449 = add i64 %_448, 2
  %_450 = shl i64 %6271, 2
  %_451 = sub i64 %6271, 2
  %gen452 = mul i64 %_451, 2
  %6272 = add i64 %6271, 2, !dbg !4307
  %6273 = getelementptr inbounds i8, i8* %6270, i64 %6272, !dbg !4305
  %6274 = load i8, i8* %6273, align 1, !dbg !4305
  %6275 = sext i8 %6274 to i32, !dbg !4305
  br label %originalBB445

originalBB456alteredBB:                           ; preds = %originalBB456, %1796
  %6276 = load i8, i8* %35, align 1, !dbg !4309
  %6277 = trunc i8 %6276 to i1, !dbg !4309
  br label %originalBB456

originalBB460alteredBB:                           ; preds = %originalBB460, %1816
  %6278 = load i8*, i8** %21, align 8, !dbg !4314
  %6279 = load i64, i64* %28, align 8, !dbg !4315
  %_461 = sub i64 0, %6279
  %gen462 = add i64 %_461, 2
  %_463 = sub i64 %6279, 2
  %gen464 = mul i64 %_463, 2
  %_465 = sub i64 0, %6279
  %gen466 = add i64 %_465, 2
  %_467 = sub i64 %6279, 2
  %gen468 = mul i64 %_467, 2
  %_469 = sub i64 %6279, 2
  %gen470 = mul i64 %_469, 2
  %_471 = sub i64 0, %6279
  %gen472 = add i64 %_471, 2
  %_473 = shl i64 %6279, 2
  %_474 = shl i64 %6279, 2
  %6280 = add i64 %6279, 2, !dbg !4316
  %6281 = getelementptr inbounds i8, i8* %6278, i64 %6280, !dbg !4314
  %6282 = load i8, i8* %6281, align 1, !dbg !4314
  store i8 %6282, i8* %39, align 1, !dbg !4317
  %6283 = load i64, i64* %28, align 8, !dbg !4318
  %_475 = sub i64 %6283, 2
  %gen476 = mul i64 %_475, 2
  %_477 = shl i64 %6283, 2
  %_478 = sub i64 %6283, 2
  %gen479 = mul i64 %_478, 2
  %_480 = sub i64 0, %6283
  %gen481 = add i64 %_480, 2
  %6284 = add i64 %6283, 2, !dbg !4318
  store i64 %6284, i64* %28, align 8, !dbg !4318
  br label %originalBB460

originalBB485alteredBB:                           ; preds = %originalBB485, %1844
  %6285 = load i8*, i8** %19, align 8, !dbg !4320
  %6286 = load i64, i64* %29, align 8, !dbg !4320
  %6287 = getelementptr inbounds i8, i8* %6285, i64 %6286, !dbg !4320
  store i8 63, i8* %6287, align 1, !dbg !4320
  br label %originalBB485

originalBB489alteredBB:                           ; preds = %originalBB489, %1864
  %6288 = load i64, i64* %29, align 8, !dbg !4323
  %_490 = shl i64 %6288, 1
  %_491 = sub i64 0, %6288
  %gen492 = add i64 %_491, 1
  %_493 = sub i64 %6288, 1
  %gen494 = mul i64 %_493, 1
  %_495 = sub i64 0, %6288
  %gen496 = add i64 %_495, 1
  %_497 = sub i64 0, %6288
  %gen498 = add i64 %_497, 1
  %6289 = add i64 %6288, 1, !dbg !4323
  store i64 %6289, i64* %29, align 8, !dbg !4323
  br label %originalBB489

originalBB502alteredBB:                           ; preds = %originalBB502, %1883
  br label %originalBB502

originalBB506alteredBB:                           ; preds = %originalBB506, %1900
  %6290 = load i64, i64* %29, align 8, !dbg !4325
  %6291 = load i64, i64* %20, align 8, !dbg !4325
  %6292 = icmp ult i64 %6290, %6291, !dbg !4325
  br label %originalBB506

originalBB510alteredBB:                           ; preds = %originalBB510, %1920
  %6293 = load i8*, i8** %19, align 8, !dbg !4325
  %6294 = load i64, i64* %29, align 8, !dbg !4325
  %6295 = getelementptr inbounds i8, i8* %6293, i64 %6294, !dbg !4325
  store i8 34, i8* %6295, align 1, !dbg !4325
  br label %originalBB510

originalBB514alteredBB:                           ; preds = %originalBB514, %1940
  %6296 = load i64, i64* %29, align 8, !dbg !4328
  %_515 = sub i64 0, %6296
  %gen516 = add i64 %_515, 1
  %_517 = sub i64 %6296, 1
  %gen518 = mul i64 %_517, 1
  %_519 = sub i64 0, %6296
  %gen520 = add i64 %_519, 1
  %_521 = sub i64 0, %6296
  %gen522 = add i64 %_521, 1
  %6297 = add i64 %6296, 1, !dbg !4328
  store i64 %6297, i64* %29, align 8, !dbg !4328
  br label %originalBB514

originalBB526alteredBB:                           ; preds = %originalBB526, %1959
  br label %originalBB526

originalBB530alteredBB:                           ; preds = %originalBB530, %1976
  %6298 = load i64, i64* %29, align 8, !dbg !4330
  %6299 = load i64, i64* %20, align 8, !dbg !4330
  %6300 = icmp ult i64 %6298, %6299, !dbg !4330
  br label %originalBB530

originalBB534alteredBB:                           ; preds = %originalBB534, %1996
  %6301 = load i8*, i8** %19, align 8, !dbg !4330
  %6302 = load i64, i64* %29, align 8, !dbg !4330
  %6303 = getelementptr inbounds i8, i8* %6301, i64 %6302, !dbg !4330
  store i8 34, i8* %6303, align 1, !dbg !4330
  br label %originalBB534

originalBB538alteredBB:                           ; preds = %originalBB538, %2016
  %6304 = load i64, i64* %29, align 8, !dbg !4333
  %_539 = sub i64 0, %6304
  %gen540 = add i64 %_539, 1
  %_541 = sub i64 %6304, 1
  %gen542 = mul i64 %_541, 1
  %6305 = add i64 %6304, 1, !dbg !4333
  store i64 %6305, i64* %29, align 8, !dbg !4333
  br label %originalBB538

originalBB546alteredBB:                           ; preds = %originalBB546, %2035
  br label %originalBB546

originalBB550alteredBB:                           ; preds = %originalBB550, %2052
  %6306 = load i64, i64* %29, align 8, !dbg !4335
  %6307 = load i64, i64* %20, align 8, !dbg !4335
  %6308 = icmp ult i64 %6306, %6307, !dbg !4335
  br label %originalBB550

originalBB554alteredBB:                           ; preds = %originalBB554, %2072
  %6309 = load i8*, i8** %19, align 8, !dbg !4335
  %6310 = load i64, i64* %29, align 8, !dbg !4335
  %6311 = getelementptr inbounds i8, i8* %6309, i64 %6310, !dbg !4335
  store i8 63, i8* %6311, align 1, !dbg !4335
  br label %originalBB554

originalBB558alteredBB:                           ; preds = %originalBB558, %2092
  %6312 = load i64, i64* %29, align 8, !dbg !4338
  %_559 = shl i64 %6312, 1
  %_560 = sub i64 %6312, 1
  %gen561 = mul i64 %_560, 1
  %_562 = shl i64 %6312, 1
  %6313 = add i64 %6312, 1, !dbg !4338
  store i64 %6313, i64* %29, align 8, !dbg !4338
  br label %originalBB558

originalBB566alteredBB:                           ; preds = %originalBB566, %2112
  br label %originalBB566

originalBB570alteredBB:                           ; preds = %originalBB570, %2129
  br label %originalBB570

originalBB574alteredBB:                           ; preds = %originalBB574, %2148
  br label %originalBB574

originalBB578alteredBB:                           ; preds = %originalBB578, %2165
  store i8 97, i8* %40, align 1, !dbg !4345
  br label %originalBB578

originalBB582alteredBB:                           ; preds = %originalBB582, %2182
  store i8 98, i8* %40, align 1, !dbg !4347
  br label %originalBB582

originalBB586alteredBB:                           ; preds = %originalBB586, %2199
  store i8 102, i8* %40, align 1, !dbg !4349
  br label %originalBB586

originalBB590alteredBB:                           ; preds = %originalBB590, %2218
  store i8 116, i8* %40, align 1, !dbg !4355
  br label %originalBB590

originalBB594alteredBB:                           ; preds = %originalBB594, %2235
  store i8 118, i8* %40, align 1, !dbg !4357
  br label %originalBB594

originalBB598alteredBB:                           ; preds = %originalBB598, %2256
  %6314 = load i8, i8* %35, align 1, !dbg !4365
  %6315 = trunc i8 %6314 to i1, !dbg !4365
  br label %originalBB598

originalBB602alteredBB:                           ; preds = %originalBB602, %2275
  br label %originalBB602

originalBB606alteredBB:                           ; preds = %originalBB606, %2292
  br label %originalBB606

originalBB610alteredBB:                           ; preds = %originalBB610, %2309
  %6316 = load i8, i8* %33, align 1, !dbg !4371
  %6317 = trunc i8 %6316 to i1, !dbg !4371
  br label %originalBB610

originalBB614alteredBB:                           ; preds = %originalBB614, %2328
  %6318 = load i8, i8* %35, align 1, !dbg !4374
  %6319 = trunc i8 %6318 to i1, !dbg !4374
  br label %originalBB614

originalBB618alteredBB:                           ; preds = %originalBB618, %2350
  br label %originalBB618

originalBB622alteredBB:                           ; preds = %originalBB622, %2367
  br label %originalBB622

originalBB626alteredBB:                           ; preds = %originalBB626, %2384
  %6320 = load i32, i32* %23, align 4, !dbg !4381
  %6321 = icmp eq i32 %6320, 2, !dbg !4383
  br label %originalBB626

originalBB630alteredBB:                           ; preds = %originalBB630, %2403
  %6322 = load i8, i8* %35, align 1, !dbg !4385
  %6323 = trunc i8 %6322 to i1, !dbg !4385
  br label %originalBB630

originalBB634alteredBB:                           ; preds = %originalBB634, %2422
  br label %originalBB634

originalBB638alteredBB:                           ; preds = %originalBB638, %2439
  br label %originalBB638

originalBB642alteredBB:                           ; preds = %originalBB642, %2456
  %6324 = load i8, i8* %33, align 1, !dbg !4390
  %6325 = trunc i8 %6324 to i1, !dbg !4390
  br label %originalBB642

originalBB646alteredBB:                           ; preds = %originalBB646, %2475
  %6326 = load i8, i8* %40, align 1, !dbg !4393
  store i8 %6326, i8* %39, align 1, !dbg !4395
  br label %originalBB646

originalBB650alteredBB:                           ; preds = %originalBB650, %2493
  br label %originalBB650

originalBB654alteredBB:                           ; preds = %originalBB654, %2510
  %6327 = load i64, i64* %22, align 8, !dbg !4398
  %6328 = icmp eq i64 %6327, -1, !dbg !4400
  br label %originalBB654

originalBB658alteredBB:                           ; preds = %originalBB658, %2529
  %6329 = load i8*, i8** %21, align 8, !dbg !4402
  %6330 = getelementptr inbounds i8, i8* %6329, i64 1, !dbg !4402
  %6331 = load i8, i8* %6330, align 1, !dbg !4402
  %6332 = sext i8 %6331 to i32, !dbg !4402
  %6333 = icmp eq i32 %6332, 0, !dbg !4403
  br label %originalBB658

originalBB662alteredBB:                           ; preds = %originalBB662, %2551
  %6334 = load i64, i64* %22, align 8, !dbg !4404
  %6335 = icmp eq i64 %6334, 1, !dbg !4405
  br label %originalBB662

originalBB666alteredBB:                           ; preds = %originalBB666, %2570
  br label %originalBB666

originalBB670alteredBB:                           ; preds = %originalBB670, %2587
  br label %originalBB670

originalBB674alteredBB:                           ; preds = %originalBB674, %2607
  br label %originalBB674

originalBB678alteredBB:                           ; preds = %originalBB678, %2624
  br label %originalBB678

originalBB682alteredBB:                           ; preds = %originalBB682, %2642
  %6336 = load i32, i32* %23, align 4, !dbg !4416
  %6337 = icmp eq i32 %6336, 2, !dbg !4418
  br label %originalBB682

originalBB686alteredBB:                           ; preds = %originalBB686, %2661
  %6338 = load i8, i8* %35, align 1, !dbg !4420
  %6339 = trunc i8 %6338 to i1, !dbg !4420
  br label %originalBB686

originalBB690alteredBB:                           ; preds = %originalBB690, %2680
  br label %originalBB690

originalBB694alteredBB:                           ; preds = %originalBB694, %2697
  br label %originalBB694

originalBB698alteredBB:                           ; preds = %originalBB698, %2714
  store i8 1, i8* %37, align 1, !dbg !4424
  store i8 1, i8* %43, align 1, !dbg !4425
  %6340 = load i32, i32* %23, align 4, !dbg !4426
  %6341 = icmp eq i32 %6340, 2, !dbg !4428
  br label %originalBB698

originalBB702alteredBB:                           ; preds = %originalBB702, %2736
  br label %originalBB702

originalBB706alteredBB:                           ; preds = %originalBB706, %2753
  %6342 = load i64, i64* %20, align 8, !dbg !4435
  %6343 = icmp ne i64 %6342, 0, !dbg !4435
  br label %originalBB706

originalBB710alteredBB:                           ; preds = %originalBB710, %2772
  %6344 = load i64, i64* %30, align 8, !dbg !4438
  %6345 = icmp ne i64 %6344, 0, !dbg !4438
  br label %originalBB710

originalBB714alteredBB:                           ; preds = %originalBB714, %2793
  br label %originalBB714

originalBB718alteredBB:                           ; preds = %originalBB718, %2810
  %6346 = load i64, i64* %29, align 8, !dbg !4446
  %6347 = load i64, i64* %20, align 8, !dbg !4446
  %6348 = icmp ult i64 %6346, %6347, !dbg !4446
  br label %originalBB718

originalBB722alteredBB:                           ; preds = %originalBB722, %2830
  %6349 = load i8*, i8** %19, align 8, !dbg !4446
  %6350 = load i64, i64* %29, align 8, !dbg !4446
  %6351 = getelementptr inbounds i8, i8* %6349, i64 %6350, !dbg !4446
  store i8 39, i8* %6351, align 1, !dbg !4446
  br label %originalBB722

originalBB726alteredBB:                           ; preds = %originalBB726, %2850
  %6352 = load i64, i64* %29, align 8, !dbg !4449
  %_727 = sub i64 %6352, 1
  %gen728 = mul i64 %_727, 1
  %_729 = shl i64 %6352, 1
  %6353 = add i64 %6352, 1, !dbg !4449
  store i64 %6353, i64* %29, align 8, !dbg !4449
  br label %originalBB726

originalBB733alteredBB:                           ; preds = %originalBB733, %2869
  br label %originalBB733

originalBB737alteredBB:                           ; preds = %originalBB737, %2886
  %6354 = load i64, i64* %29, align 8, !dbg !4451
  %6355 = load i64, i64* %20, align 8, !dbg !4451
  %6356 = icmp ult i64 %6354, %6355, !dbg !4451
  br label %originalBB737

originalBB741alteredBB:                           ; preds = %originalBB741, %2906
  %6357 = load i8*, i8** %19, align 8, !dbg !4451
  %6358 = load i64, i64* %29, align 8, !dbg !4451
  %6359 = getelementptr inbounds i8, i8* %6357, i64 %6358, !dbg !4451
  store i8 92, i8* %6359, align 1, !dbg !4451
  br label %originalBB741

originalBB745alteredBB:                           ; preds = %originalBB745, %2926
  %6360 = load i64, i64* %29, align 8, !dbg !4454
  %_746 = sub i64 0, %6360
  %gen747 = add i64 %_746, 1
  %_748 = sub i64 %6360, 1
  %gen749 = mul i64 %_748, 1
  %_750 = sub i64 %6360, 1
  %gen751 = mul i64 %_750, 1
  %_752 = shl i64 %6360, 1
  %_753 = shl i64 %6360, 1
  %_754 = sub i64 %6360, 1
  %gen755 = mul i64 %_754, 1
  %6361 = add i64 %6360, 1, !dbg !4454
  store i64 %6361, i64* %29, align 8, !dbg !4454
  br label %originalBB745

originalBB759alteredBB:                           ; preds = %originalBB759, %2946
  %6362 = load i64, i64* %29, align 8, !dbg !4456
  %6363 = load i64, i64* %20, align 8, !dbg !4456
  %6364 = icmp ult i64 %6362, %6363, !dbg !4456
  br label %originalBB759

originalBB763alteredBB:                           ; preds = %originalBB763, %2966
  %6365 = load i8*, i8** %19, align 8, !dbg !4456
  %6366 = load i64, i64* %29, align 8, !dbg !4456
  %6367 = getelementptr inbounds i8, i8* %6365, i64 %6366, !dbg !4456
  store i8 39, i8* %6367, align 1, !dbg !4456
  br label %originalBB763

originalBB767alteredBB:                           ; preds = %originalBB767, %2989
  store i8 0, i8* %36, align 1, !dbg !4460
  br label %originalBB767

originalBB771alteredBB:                           ; preds = %originalBB771, %3006
  br label %originalBB771

originalBB775alteredBB:                           ; preds = %originalBB775, %3023
  store i8 1, i8* %43, align 1, !dbg !4463
  br label %originalBB775

originalBB779alteredBB:                           ; preds = %originalBB779, %3040
  %6368 = load i8, i8* %34, align 1, !dbg !4470
  %6369 = trunc i8 %6368 to i1, !dbg !4470
  br label %originalBB779

originalBB783alteredBB:                           ; preds = %originalBB783, %3059
  store i64 1, i64* %44, align 8, !dbg !4473
  %6370 = call i16** @__ctype_b_loc() #15, !dbg !4475
  %6371 = load i16*, i16** %6370, align 8, !dbg !4475
  %6372 = load i8, i8* %39, align 1, !dbg !4475
  %6373 = zext i8 %6372 to i32, !dbg !4475
  %6374 = sext i32 %6373 to i64, !dbg !4475
  %6375 = getelementptr inbounds i16, i16* %6371, i64 %6374, !dbg !4475
  %6376 = load i16, i16* %6375, align 2, !dbg !4475
  %6377 = zext i16 %6376 to i32, !dbg !4475
  %_784 = sub i32 0, %6377
  %gen785 = add i32 %_784, 16384
  %_786 = shl i32 %6377, 16384
  %_787 = sub i32 %6377, 16384
  %gen788 = mul i32 %_787, 16384
  %_789 = sub i32 0, %6377
  %gen790 = add i32 %_789, 16384
  %_791 = shl i32 %6377, 16384
  %_792 = sub i32 0, %6377
  %gen793 = add i32 %_792, 16384
  %_794 = shl i32 %6377, 16384
  %6378 = and i32 %6377, 16384, !dbg !4475
  %6379 = icmp ne i32 %6378, 0, !dbg !4476
  %6380 = zext i1 %6379 to i8, !dbg !4477
  store i8 %6380, i8* %45, align 1, !dbg !4477
  br label %originalBB783

originalBB798alteredBB:                           ; preds = %originalBB798, %3091
  %6381 = load i8*, i8** %21, align 8, !dbg !4501
  %6382 = call i64 @strlen(i8* %6381) #13, !dbg !4502
  store i64 %6382, i64* %22, align 8, !dbg !4503
  br label %originalBB798

originalBB802alteredBB:                           ; preds = %originalBB802, %3125
  br label %originalBB802

originalBB806alteredBB:                           ; preds = %originalBB806, %3142
  %6383 = load i64, i64* %48, align 8, !dbg !4527
  %6384 = icmp eq i64 %6383, -1, !dbg !4529
  br label %originalBB806

originalBB810alteredBB:                           ; preds = %originalBB810, %3161
  store i8 0, i8* %45, align 1, !dbg !4531
  br label %originalBB810

originalBB814alteredBB:                           ; preds = %originalBB814, %3178
  %6385 = load i64, i64* %48, align 8, !dbg !4534
  %6386 = icmp eq i64 %6385, -2, !dbg !4536
  br label %originalBB814

originalBB818alteredBB:                           ; preds = %originalBB818, %3197
  store i8 0, i8* %45, align 1, !dbg !4538
  br label %originalBB818

originalBB822alteredBB:                           ; preds = %originalBB822, %3214
  %6387 = load i64, i64* %28, align 8, !dbg !4541
  %6388 = load i64, i64* %44, align 8, !dbg !4542
  %_823 = sub i64 0, %6387
  %gen824 = add i64 %_823, %6388
  %_825 = sub i64 0, %6387
  %gen826 = add i64 %_825, %6388
  %_827 = sub i64 0, %6387
  %gen828 = add i64 %_827, %6388
  %_829 = shl i64 %6387, %6388
  %6389 = add i64 %6387, %6388, !dbg !4543
  %6390 = load i64, i64* %22, align 8, !dbg !4544
  %6391 = icmp ult i64 %6389, %6390, !dbg !4545
  br label %originalBB822

originalBB833alteredBB:                           ; preds = %originalBB833, %3236
  %6392 = load i8*, i8** %21, align 8, !dbg !4547
  %6393 = load i64, i64* %28, align 8, !dbg !4548
  %6394 = load i64, i64* %44, align 8, !dbg !4549
  %_834 = sub i64 %6393, %6394
  %gen835 = mul i64 %_834, %6394
  %_836 = sub i64 %6393, %6394
  %gen837 = mul i64 %_836, %6394
  %_838 = sub i64 %6393, %6394
  %gen839 = mul i64 %_838, %6394
  %_840 = sub i64 0, %6393
  %gen841 = add i64 %_840, %6394
  %6395 = add i64 %6393, %6394, !dbg !4550
  %6396 = getelementptr inbounds i8, i8* %6392, i64 %6395, !dbg !4547
  %6397 = load i8, i8* %6396, align 1, !dbg !4547
  %6398 = sext i8 %6397 to i32, !dbg !4547
  %6399 = icmp ne i32 %6398, 0, !dbg !4546
  br label %originalBB833

originalBB845alteredBB:                           ; preds = %originalBB845, %3261
  br label %originalBB845

originalBB849alteredBB:                           ; preds = %originalBB849, %3279
  %6400 = load i64, i64* %44, align 8, !dbg !4552
  %_850 = sub i64 0, %6400
  %gen851 = add i64 %_850, 1
  %_852 = sub i64 %6400, 1
  %gen853 = mul i64 %_852, 1
  %_854 = shl i64 %6400, 1
  %_855 = sub i64 %6400, 1
  %gen856 = mul i64 %_855, 1
  %_857 = shl i64 %6400, 1
  %_858 = shl i64 %6400, 1
  %6401 = add i64 %6400, 1, !dbg !4552
  store i64 %6401, i64* %44, align 8, !dbg !4552
  br label %originalBB849

originalBB862alteredBB:                           ; preds = %originalBB862, %3298
  br label %originalBB862

originalBB866alteredBB:                           ; preds = %originalBB866, %3315
  %6402 = load i8, i8* %35, align 1, !dbg !4555
  %6403 = trunc i8 %6402 to i1, !dbg !4555
  br label %originalBB866

originalBB870alteredBB:                           ; preds = %originalBB870, %3334
  %6404 = load i32, i32* %23, align 4, !dbg !4559
  %6405 = icmp eq i32 %6404, 2, !dbg !4560
  br label %originalBB870

originalBB874alteredBB:                           ; preds = %originalBB874, %3353
  store i64 1, i64* %49, align 8, !dbg !4565
  br label %originalBB874

originalBB878alteredBB:                           ; preds = %originalBB878, %3374
  %6406 = load i8*, i8** %21, align 8, !dbg !4573
  %6407 = load i64, i64* %28, align 8, !dbg !4574
  %6408 = load i64, i64* %44, align 8, !dbg !4575
  %_879 = sub i64 0, %6407
  %gen880 = add i64 %_879, %6408
  %_881 = shl i64 %6407, %6408
  %_882 = shl i64 %6407, %6408
  %6409 = add i64 %6407, %6408, !dbg !4576
  %6410 = load i64, i64* %49, align 8, !dbg !4577
  %_883 = sub i64 %6409, %6410
  %gen884 = mul i64 %_883, %6410
  %_885 = shl i64 %6409, %6410
  %_886 = sub i64 0, %6409
  %gen887 = add i64 %_886, %6410
  %_888 = shl i64 %6409, %6410
  %_889 = sub i64 0, %6409
  %gen890 = add i64 %_889, %6410
  %_891 = shl i64 %6409, %6410
  %_892 = sub i64 %6409, %6410
  %gen893 = mul i64 %_892, %6410
  %6411 = add i64 %6409, %6410, !dbg !4578
  %6412 = getelementptr inbounds i8, i8* %6406, i64 %6411, !dbg !4573
  %6413 = load i8, i8* %6412, align 1, !dbg !4573
  %6414 = sext i8 %6413 to i32, !dbg !4573
  br label %originalBB878

originalBB897alteredBB:                           ; preds = %originalBB897, %3400
  br label %originalBB897

originalBB901alteredBB:                           ; preds = %originalBB901, %3417
  br label %originalBB901

originalBB905alteredBB:                           ; preds = %originalBB905, %3434
  br label %originalBB905

originalBB909alteredBB:                           ; preds = %originalBB909, %3454
  br label %originalBB909

originalBB913alteredBB:                           ; preds = %originalBB913, %3471
  %6415 = load i32, i32* %47, align 4, !dbg !4589
  %6416 = call i32 @iswprint(i32 %6415) #10, !dbg !4591
  %6417 = icmp ne i32 %6416, 0, !dbg !4591
  br label %originalBB913

originalBB917alteredBB:                           ; preds = %originalBB917, %3491
  store i8 0, i8* %45, align 1, !dbg !4593
  br label %originalBB917

originalBB921alteredBB:                           ; preds = %originalBB921, %3508
  %6418 = load i64, i64* %48, align 8, !dbg !4595
  %6419 = load i64, i64* %44, align 8, !dbg !4596
  %_922 = sub i64 0, %6419
  %gen923 = add i64 %_922, %6418
  %_924 = shl i64 %6419, %6418
  %_925 = shl i64 %6419, %6418
  %_926 = sub i64 %6419, %6418
  %gen927 = mul i64 %_926, %6418
  %_928 = shl i64 %6419, %6418
  %6420 = add i64 %6419, %6418, !dbg !4596
  store i64 %6420, i64* %44, align 8, !dbg !4596
  br label %originalBB921

originalBB932alteredBB:                           ; preds = %originalBB932, %3528
  br label %originalBB932

originalBB936alteredBB:                           ; preds = %originalBB936, %3545
  br label %originalBB936

originalBB940alteredBB:                           ; preds = %originalBB940, %3562
  br label %originalBB940

originalBB944alteredBB:                           ; preds = %originalBB944, %3579
  %6421 = call i32 @mbsinit(%struct.__mbstate_t* %46) #13, !dbg !4598
  %6422 = icmp ne i32 %6421, 0, !dbg !4599
  %_945 = shl i1 %6422, true
  %_946 = shl i1 %6422, true
  %_947 = sub i1 false, %6422
  %gen948 = add i1 %_947, true
  %6423 = xor i1 %6422, true, !dbg !4599
  br label %originalBB944

originalBB952alteredBB:                           ; preds = %originalBB952, %3599
  br label %originalBB952

originalBB956alteredBB:                           ; preds = %originalBB956, %3616
  %6424 = load i8, i8* %45, align 1, !dbg !4602
  %6425 = trunc i8 %6424 to i1, !dbg !4602
  %6426 = zext i1 %6425 to i8, !dbg !4603
  store i8 %6426, i8* %43, align 1, !dbg !4603
  %6427 = load i64, i64* %44, align 8, !dbg !4604
  %6428 = icmp ult i64 1, %6427, !dbg !4606
  br label %originalBB956

originalBB960alteredBB:                           ; preds = %originalBB960, %3638
  %6429 = load i8, i8* %33, align 1, !dbg !4608
  %6430 = trunc i8 %6429 to i1, !dbg !4608
  br label %originalBB960

originalBB964alteredBB:                           ; preds = %originalBB964, %3657
  %6431 = load i8, i8* %45, align 1, !dbg !4610
  %6432 = trunc i8 %6431 to i1, !dbg !4610
  br label %originalBB964

originalBB968alteredBB:                           ; preds = %originalBB968, %3676
  %6433 = load i64, i64* %28, align 8, !dbg !4615
  %6434 = load i64, i64* %44, align 8, !dbg !4616
  %_969 = sub i64 0, %6433
  %gen970 = add i64 %_969, %6434
  %_971 = sub i64 %6433, %6434
  %gen972 = mul i64 %_971, %6434
  %_973 = sub i64 %6433, %6434
  %gen974 = mul i64 %_973, %6434
  %_975 = sub i64 %6433, %6434
  %gen976 = mul i64 %_975, %6434
  %_977 = sub i64 %6433, %6434
  %gen978 = mul i64 %_977, %6434
  %_979 = shl i64 %6433, %6434
  %_980 = sub i64 0, %6433
  %gen981 = add i64 %_980, %6434
  %6435 = add i64 %6433, %6434, !dbg !4617
  store i64 %6435, i64* %50, align 8, !dbg !4614
  br label %originalBB968

originalBB985alteredBB:                           ; preds = %originalBB985, %3696
  %6436 = load i8, i8* %33, align 1, !dbg !4619
  %6437 = trunc i8 %6436 to i1, !dbg !4619
  br label %originalBB985

originalBB989alteredBB:                           ; preds = %originalBB989, %3715
  %6438 = load i8, i8* %45, align 1, !dbg !4625
  %6439 = trunc i8 %6438 to i1, !dbg !4625
  br label %originalBB989

originalBB993alteredBB:                           ; preds = %originalBB993, %3734
  br label %originalBB993

originalBB997alteredBB:                           ; preds = %originalBB997, %3754
  br label %originalBB997

originalBB1001alteredBB:                          ; preds = %originalBB1001, %3771
  store i8 1, i8* %42, align 1, !dbg !4632
  %6440 = load i32, i32* %23, align 4, !dbg !4633
  %6441 = icmp eq i32 %6440, 2, !dbg !4633
  br label %originalBB1001

originalBB1005alteredBB:                          ; preds = %originalBB1005, %3794
  %6442 = load i64, i64* %29, align 8, !dbg !4637
  %6443 = load i64, i64* %20, align 8, !dbg !4637
  %6444 = icmp ult i64 %6442, %6443, !dbg !4637
  br label %originalBB1005

originalBB1009alteredBB:                          ; preds = %originalBB1009, %3814
  %6445 = load i8*, i8** %19, align 8, !dbg !4637
  %6446 = load i64, i64* %29, align 8, !dbg !4637
  %6447 = getelementptr inbounds i8, i8* %6445, i64 %6446, !dbg !4637
  store i8 39, i8* %6447, align 1, !dbg !4637
  br label %originalBB1009

originalBB1013alteredBB:                          ; preds = %originalBB1013, %3834
  %6448 = load i64, i64* %29, align 8, !dbg !4640
  %_1014 = sub i64 %6448, 1
  %gen1015 = mul i64 %_1014, 1
  %_1016 = shl i64 %6448, 1
  %_1017 = shl i64 %6448, 1
  %6449 = add i64 %6448, 1, !dbg !4640
  store i64 %6449, i64* %29, align 8, !dbg !4640
  br label %originalBB1013

originalBB1021alteredBB:                          ; preds = %originalBB1021, %3853
  br label %originalBB1021

originalBB1025alteredBB:                          ; preds = %originalBB1025, %3870
  %6450 = load i64, i64* %29, align 8, !dbg !4641
  %6451 = load i64, i64* %20, align 8, !dbg !4641
  %6452 = icmp ult i64 %6450, %6451, !dbg !4641
  br label %originalBB1025

originalBB1029alteredBB:                          ; preds = %originalBB1029, %3890
  %6453 = load i8*, i8** %19, align 8, !dbg !4641
  %6454 = load i64, i64* %29, align 8, !dbg !4641
  %6455 = getelementptr inbounds i8, i8* %6453, i64 %6454, !dbg !4641
  store i8 36, i8* %6455, align 1, !dbg !4641
  br label %originalBB1029

originalBB1033alteredBB:                          ; preds = %originalBB1033, %3913
  br label %originalBB1033

originalBB1037alteredBB:                          ; preds = %originalBB1037, %3930
  %6456 = load i64, i64* %29, align 8, !dbg !4645
  %6457 = load i64, i64* %20, align 8, !dbg !4645
  %6458 = icmp ult i64 %6456, %6457, !dbg !4645
  br label %originalBB1037

originalBB1041alteredBB:                          ; preds = %originalBB1041, %3950
  %6459 = load i8*, i8** %19, align 8, !dbg !4645
  %6460 = load i64, i64* %29, align 8, !dbg !4645
  %6461 = getelementptr inbounds i8, i8* %6459, i64 %6460, !dbg !4645
  store i8 39, i8* %6461, align 1, !dbg !4645
  br label %originalBB1041

originalBB1045alteredBB:                          ; preds = %originalBB1045, %3970
  %6462 = load i64, i64* %29, align 8, !dbg !4648
  %_1046 = sub i64 %6462, 1
  %gen1047 = mul i64 %_1046, 1
  %_1048 = sub i64 0, %6462
  %gen1049 = add i64 %_1048, 1
  %_1050 = shl i64 %6462, 1
  %_1051 = sub i64 0, %6462
  %gen1052 = add i64 %_1051, 1
  %_1053 = sub i64 %6462, 1
  %gen1054 = mul i64 %_1053, 1
  %_1055 = shl i64 %6462, 1
  %_1056 = sub i64 0, %6462
  %gen1057 = add i64 %_1056, 1
  %6463 = add i64 %6462, 1, !dbg !4648
  store i64 %6463, i64* %29, align 8, !dbg !4648
  br label %originalBB1045

originalBB1061alteredBB:                          ; preds = %originalBB1061, %3989
  store i8 1, i8* %36, align 1, !dbg !4635
  br label %originalBB1061

originalBB1065alteredBB:                          ; preds = %originalBB1065, %4006
  br label %originalBB1065

originalBB1069alteredBB:                          ; preds = %originalBB1069, %4023
  %6464 = load i64, i64* %29, align 8, !dbg !4649
  %6465 = load i64, i64* %20, align 8, !dbg !4649
  %6466 = icmp ult i64 %6464, %6465, !dbg !4649
  br label %originalBB1069

originalBB1073alteredBB:                          ; preds = %originalBB1073, %4043
  %6467 = load i8*, i8** %19, align 8, !dbg !4649
  %6468 = load i64, i64* %29, align 8, !dbg !4649
  %6469 = getelementptr inbounds i8, i8* %6467, i64 %6468, !dbg !4649
  store i8 92, i8* %6469, align 1, !dbg !4649
  br label %originalBB1073

originalBB1077alteredBB:                          ; preds = %originalBB1077, %4063
  %6470 = load i64, i64* %29, align 8, !dbg !4652
  %_1078 = shl i64 %6470, 1
  %_1079 = sub i64 0, %6470
  %gen1080 = add i64 %_1079, 1
  %6471 = add i64 %6470, 1, !dbg !4652
  store i64 %6471, i64* %29, align 8, !dbg !4652
  br label %originalBB1077

originalBB1084alteredBB:                          ; preds = %originalBB1084, %4082
  br label %originalBB1084

originalBB1088alteredBB:                          ; preds = %originalBB1088, %4099
  br label %originalBB1088

originalBB1092alteredBB:                          ; preds = %originalBB1092, %4116
  %6472 = load i64, i64* %29, align 8, !dbg !4654
  %6473 = load i64, i64* %20, align 8, !dbg !4654
  %6474 = icmp ult i64 %6472, %6473, !dbg !4654
  br label %originalBB1092

originalBB1096alteredBB:                          ; preds = %originalBB1096, %4136
  %6475 = load i8, i8* %39, align 1, !dbg !4654
  %6476 = zext i8 %6475 to i32, !dbg !4654
  %_1097 = sub i32 0, %6476
  %gen1098 = add i32 %_1097, 6
  %_1099 = sub i32 %6476, 6
  %gen1100 = mul i32 %_1099, 6
  %6477 = ashr i32 %6476, 6, !dbg !4654
  %_1101 = sub i32 48, %6477
  %gen1102 = mul i32 %_1101, %6477
  %_1103 = shl i32 48, %6477
  %_1104 = sub i32 0, 48
  %gen1105 = add i32 %_1104, %6477
  %_1106 = sub i32 0, 48
  %gen1107 = add i32 %_1106, %6477
  %6478 = add nsw i32 48, %6477, !dbg !4654
  %6479 = trunc i32 %6478 to i8, !dbg !4654
  %6480 = load i8*, i8** %19, align 8, !dbg !4654
  %6481 = load i64, i64* %29, align 8, !dbg !4654
  %6482 = getelementptr inbounds i8, i8* %6480, i64 %6481, !dbg !4654
  store i8 %6479, i8* %6482, align 1, !dbg !4654
  br label %originalBB1096

originalBB1111alteredBB:                          ; preds = %originalBB1111, %4161
  %6483 = load i64, i64* %29, align 8, !dbg !4657
  %_1112 = shl i64 %6483, 1
  %_1113 = sub i64 %6483, 1
  %gen1114 = mul i64 %_1113, 1
  %_1115 = sub i64 0, %6483
  %gen1116 = add i64 %_1115, 1
  %_1117 = shl i64 %6483, 1
  %_1118 = shl i64 %6483, 1
  %6484 = add i64 %6483, 1, !dbg !4657
  store i64 %6484, i64* %29, align 8, !dbg !4657
  br label %originalBB1111

originalBB1122alteredBB:                          ; preds = %originalBB1122, %4181
  %6485 = load i64, i64* %29, align 8, !dbg !4659
  %6486 = load i64, i64* %20, align 8, !dbg !4659
  %6487 = icmp ult i64 %6485, %6486, !dbg !4659
  br label %originalBB1122

originalBB1126alteredBB:                          ; preds = %originalBB1126, %4211
  %6488 = load i64, i64* %29, align 8, !dbg !4662
  %_1127 = sub i64 0, %6488
  %gen1128 = add i64 %_1127, 1
  %_1129 = sub i64 %6488, 1
  %gen1130 = mul i64 %_1129, 1
  %_1131 = shl i64 %6488, 1
  %6489 = add i64 %6488, 1, !dbg !4662
  store i64 %6489, i64* %29, align 8, !dbg !4662
  br label %originalBB1126

originalBB1135alteredBB:                          ; preds = %originalBB1135, %4230
  %6490 = load i8, i8* %39, align 1, !dbg !4663
  %6491 = zext i8 %6490 to i32, !dbg !4663
  %_1136 = shl i32 %6491, 7
  %6492 = and i32 %6491, 7, !dbg !4664
  %_1137 = shl i32 48, %6492
  %6493 = add nsw i32 48, %6492, !dbg !4665
  %6494 = trunc i32 %6493 to i8, !dbg !4666
  store i8 %6494, i8* %39, align 1, !dbg !4667
  br label %originalBB1135

originalBB1141alteredBB:                          ; preds = %originalBB1141, %4252
  %6495 = load i8, i8* %41, align 1, !dbg !4669
  %6496 = trunc i8 %6495 to i1, !dbg !4669
  br label %originalBB1141

originalBB1145alteredBB:                          ; preds = %originalBB1145, %4271
  br label %originalBB1145

originalBB1149alteredBB:                          ; preds = %originalBB1149, %4288
  %6497 = load i64, i64* %29, align 8, !dbg !4674
  %6498 = load i64, i64* %20, align 8, !dbg !4674
  %6499 = icmp ult i64 %6497, %6498, !dbg !4674
  br label %originalBB1149

originalBB1153alteredBB:                          ; preds = %originalBB1153, %4312
  %6500 = load i64, i64* %29, align 8, !dbg !4677
  %_1154 = sub i64 %6500, 1
  %gen1155 = mul i64 %_1154, 1
  %_1156 = sub i64 0, %6500
  %gen1157 = add i64 %_1156, 1
  %_1158 = sub i64 %6500, 1
  %gen1159 = mul i64 %_1158, 1
  %_1160 = shl i64 %6500, 1
  %_1161 = sub i64 %6500, 1
  %gen1162 = mul i64 %_1161, 1
  %6501 = add i64 %6500, 1, !dbg !4677
  store i64 %6501, i64* %29, align 8, !dbg !4677
  br label %originalBB1153

originalBB1166alteredBB:                          ; preds = %originalBB1166, %4331
  store i8 0, i8* %41, align 1, !dbg !4678
  br label %originalBB1166

originalBB1170alteredBB:                          ; preds = %originalBB1170, %4348
  br label %originalBB1170

originalBB1174alteredBB:                          ; preds = %originalBB1174, %4365
  %6502 = load i64, i64* %50, align 8, !dbg !4680
  %6503 = load i64, i64* %28, align 8, !dbg !4682
  %_1175 = shl i64 %6503, 1
  %_1176 = sub i64 0, %6503
  %gen1177 = add i64 %_1176, 1
  %_1178 = sub i64 0, %6503
  %gen1179 = add i64 %_1178, 1
  %_1180 = sub i64 %6503, 1
  %gen1181 = mul i64 %_1180, 1
  %_1182 = sub i64 0, %6503
  %gen1183 = add i64 %_1182, 1
  %6504 = add i64 %6503, 1, !dbg !4683
  %6505 = icmp ule i64 %6502, %6504, !dbg !4684
  br label %originalBB1174

originalBB1187alteredBB:                          ; preds = %originalBB1187, %4386
  br label %originalBB1187

originalBB1191alteredBB:                          ; preds = %originalBB1191, %4403
  br label %originalBB1191

originalBB1195alteredBB:                          ; preds = %originalBB1195, %4420
  %6506 = load i8, i8* %36, align 1, !dbg !4688
  %6507 = trunc i8 %6506 to i1, !dbg !4688
  br label %originalBB1195

originalBB1199alteredBB:                          ; preds = %originalBB1199, %4439
  %6508 = load i8, i8* %42, align 1, !dbg !4688
  %6509 = trunc i8 %6508 to i1, !dbg !4688
  br label %originalBB1199

originalBB1203alteredBB:                          ; preds = %originalBB1203, %4458
  br label %originalBB1203

originalBB1207alteredBB:                          ; preds = %originalBB1207, %4475
  %6510 = load i64, i64* %29, align 8, !dbg !4694
  %6511 = load i64, i64* %20, align 8, !dbg !4694
  %6512 = icmp ult i64 %6510, %6511, !dbg !4694
  br label %originalBB1207

originalBB1211alteredBB:                          ; preds = %originalBB1211, %4499
  %6513 = load i64, i64* %29, align 8, !dbg !4697
  %_1212 = sub i64 %6513, 1
  %gen1213 = mul i64 %_1212, 1
  %_1214 = sub i64 0, %6513
  %gen1215 = add i64 %_1214, 1
  %6514 = add i64 %6513, 1, !dbg !4697
  store i64 %6514, i64* %29, align 8, !dbg !4697
  br label %originalBB1211

originalBB1219alteredBB:                          ; preds = %originalBB1219, %4518
  br label %originalBB1219

originalBB1223alteredBB:                          ; preds = %originalBB1223, %4535
  %6515 = load i64, i64* %29, align 8, !dbg !4698
  %6516 = load i64, i64* %20, align 8, !dbg !4698
  %6517 = icmp ult i64 %6515, %6516, !dbg !4698
  br label %originalBB1223

originalBB1227alteredBB:                          ; preds = %originalBB1227, %4555
  %6518 = load i8*, i8** %19, align 8, !dbg !4698
  %6519 = load i64, i64* %29, align 8, !dbg !4698
  %6520 = getelementptr inbounds i8, i8* %6518, i64 %6519, !dbg !4698
  store i8 39, i8* %6520, align 1, !dbg !4698
  br label %originalBB1227

originalBB1231alteredBB:                          ; preds = %originalBB1231, %4575
  %6521 = load i64, i64* %29, align 8, !dbg !4701
  %_1232 = sub i64 %6521, 1
  %gen1233 = mul i64 %_1232, 1
  %_1234 = shl i64 %6521, 1
  %_1235 = sub i64 0, %6521
  %gen1236 = add i64 %_1235, 1
  %_1237 = sub i64 %6521, 1
  %gen1238 = mul i64 %_1237, 1
  %_1239 = shl i64 %6521, 1
  %_1240 = sub i64 %6521, 1
  %gen1241 = mul i64 %_1240, 1
  %6522 = add i64 %6521, 1, !dbg !4701
  store i64 %6522, i64* %29, align 8, !dbg !4701
  br label %originalBB1231

originalBB1245alteredBB:                          ; preds = %originalBB1245, %4594
  store i8 0, i8* %36, align 1, !dbg !4692
  br label %originalBB1245

originalBB1249alteredBB:                          ; preds = %originalBB1249, %4611
  br label %originalBB1249

originalBB1253alteredBB:                          ; preds = %originalBB1253, %4629
  %6523 = load i64, i64* %29, align 8, !dbg !4703
  %6524 = load i64, i64* %20, align 8, !dbg !4703
  %6525 = icmp ult i64 %6523, %6524, !dbg !4703
  br label %originalBB1253

originalBB1257alteredBB:                          ; preds = %originalBB1257, %4654
  %6526 = load i64, i64* %29, align 8, !dbg !4706
  %_1258 = sub i64 0, %6526
  %gen1259 = add i64 %_1258, 1
  %6527 = add i64 %6526, 1, !dbg !4706
  store i64 %6527, i64* %29, align 8, !dbg !4706
  br label %originalBB1257

originalBB1263alteredBB:                          ; preds = %originalBB1263, %4673
  %6528 = load i8*, i8** %21, align 8, !dbg !4707
  %6529 = load i64, i64* %28, align 8, !dbg !4708
  %_1264 = shl i64 %6529, 1
  %_1265 = shl i64 %6529, 1
  %_1266 = sub i64 0, %6529
  %gen1267 = add i64 %_1266, 1
  %_1268 = shl i64 %6529, 1
  %6530 = add i64 %6529, 1, !dbg !4708
  store i64 %6530, i64* %28, align 8, !dbg !4708
  %6531 = getelementptr inbounds i8, i8* %6528, i64 %6530, !dbg !4707
  %6532 = load i8, i8* %6531, align 1, !dbg !4707
  store i8 %6532, i8* %39, align 1, !dbg !4709
  br label %originalBB1263

originalBB1272alteredBB:                          ; preds = %originalBB1272, %4695
  br label %originalBB1272

originalBB1276alteredBB:                          ; preds = %originalBB1276, %4712
  br label %originalBB1276

originalBB1280alteredBB:                          ; preds = %originalBB1280, %4729
  %6533 = load i8, i8* %33, align 1, !dbg !4716
  %6534 = trunc i8 %6533 to i1, !dbg !4716
  br label %originalBB1280

originalBB1284alteredBB:                          ; preds = %originalBB1284, %4751
  %6535 = load i8, i8* %35, align 1, !dbg !4722
  %6536 = trunc i8 %6535 to i1, !dbg !4722
  br label %originalBB1284

originalBB1288alteredBB:                          ; preds = %originalBB1288, %4770
  %6537 = load i32*, i32** %25, align 8, !dbg !4724
  %6538 = icmp ne i32* %6537, null, !dbg !4724
  br label %originalBB1288

originalBB1292alteredBB:                          ; preds = %originalBB1292, %4789
  %6539 = load i32*, i32** %25, align 8, !dbg !4726
  %6540 = load i8, i8* %39, align 1, !dbg !4727
  %6541 = zext i8 %6540 to i64, !dbg !4727
  %_1293 = sub i64 0, %6541
  %gen1294 = add i64 %_1293, 32
  %_1295 = sub i64 0, %6541
  %gen1296 = add i64 %_1295, 32
  %_1297 = shl i64 %6541, 32
  %6542 = udiv i64 %6541, 32, !dbg !4728
  %6543 = getelementptr inbounds i32, i32* %6539, i64 %6542, !dbg !4726
  %6544 = load i32, i32* %6543, align 4, !dbg !4726
  %6545 = load i8, i8* %39, align 1, !dbg !4729
  %6546 = zext i8 %6545 to i64, !dbg !4729
  %_1298 = sub i64 0, %6546
  %gen1299 = add i64 %_1298, 32
  %_1300 = sub i64 0, %6546
  %gen1301 = add i64 %_1300, 32
  %_1302 = sub i64 0, %6546
  %gen1303 = add i64 %_1302, 32
  %_1304 = shl i64 %6546, 32
  %_1305 = shl i64 %6546, 32
  %_1306 = sub i64 %6546, 32
  %gen1307 = mul i64 %_1306, 32
  %6547 = urem i64 %6546, 32, !dbg !4730
  %6548 = trunc i64 %6547 to i32, !dbg !4731
  %_1308 = shl i32 %6544, %6548
  %_1309 = sub i32 %6544, %6548
  %gen1310 = mul i32 %_1309, %6548
  %_1311 = sub i32 %6544, %6548
  %gen1312 = mul i32 %_1311, %6548
  %_1313 = shl i32 %6544, %6548
  %_1314 = sub i32 0, %6544
  %gen1315 = add i32 %_1314, %6548
  %_1316 = sub i32 0, %6544
  %gen1317 = add i32 %_1316, %6548
  %6549 = lshr i32 %6544, %6548, !dbg !4731
  %_1318 = sub i32 %6549, 1
  %gen1319 = mul i32 %_1318, 1
  %_1320 = sub i32 %6549, 1
  %gen1321 = mul i32 %_1320, 1
  %_1322 = sub i32 %6549, 1
  %gen1323 = mul i32 %_1322, 1
  %_1324 = sub i32 0, %6549
  %gen1325 = add i32 %_1324, 1
  %_1326 = shl i32 %6549, 1
  %_1327 = sub i32 %6549, 1
  %gen1328 = mul i32 %_1327, 1
  %_1329 = sub i32 %6549, 1
  %gen1330 = mul i32 %_1329, 1
  %6550 = and i32 %6549, 1, !dbg !4732
  %6551 = icmp ne i32 %6550, 0, !dbg !4732
  br label %originalBB1292

originalBB1334alteredBB:                          ; preds = %originalBB1334, %4819
  %6552 = load i8, i8* %41, align 1, !dbg !4734
  %6553 = trunc i8 %6552 to i1, !dbg !4734
  br label %originalBB1334

originalBB1338alteredBB:                          ; preds = %originalBB1338, %4838
  br label %originalBB1338

originalBB1342alteredBB:                          ; preds = %originalBB1342, %4855
  br label %originalBB1342

originalBB1346alteredBB:                          ; preds = %originalBB1346, %4872
  br label %originalBB1346

originalBB1350alteredBB:                          ; preds = %originalBB1350, %4889
  %6554 = load i8, i8* %35, align 1, !dbg !4740
  %6555 = trunc i8 %6554 to i1, !dbg !4740
  br label %originalBB1350

originalBB1354alteredBB:                          ; preds = %originalBB1354, %4908
  br label %originalBB1354

originalBB1358alteredBB:                          ; preds = %originalBB1358, %4925
  store i8 1, i8* %42, align 1, !dbg !4743
  %6556 = load i32, i32* %23, align 4, !dbg !4744
  %6557 = icmp eq i32 %6556, 2, !dbg !4744
  br label %originalBB1358

originalBB1362alteredBB:                          ; preds = %originalBB1362, %4944
  %6558 = load i8, i8* %36, align 1, !dbg !4744
  %6559 = trunc i8 %6558 to i1, !dbg !4744
  br label %originalBB1362

originalBB1366alteredBB:                          ; preds = %originalBB1366, %4963
  br label %originalBB1366

originalBB1370alteredBB:                          ; preds = %originalBB1370, %4980
  %6560 = load i64, i64* %29, align 8, !dbg !4748
  %6561 = load i64, i64* %20, align 8, !dbg !4748
  %6562 = icmp ult i64 %6560, %6561, !dbg !4748
  br label %originalBB1370

originalBB1374alteredBB:                          ; preds = %originalBB1374, %5000
  %6563 = load i8*, i8** %19, align 8, !dbg !4748
  %6564 = load i64, i64* %29, align 8, !dbg !4748
  %6565 = getelementptr inbounds i8, i8* %6563, i64 %6564, !dbg !4748
  store i8 39, i8* %6565, align 1, !dbg !4748
  br label %originalBB1374

originalBB1378alteredBB:                          ; preds = %originalBB1378, %5020
  %6566 = load i64, i64* %29, align 8, !dbg !4751
  %_1379 = sub i64 0, %6566
  %gen1380 = add i64 %_1379, 1
  %_1381 = sub i64 0, %6566
  %gen1382 = add i64 %_1381, 1
  %6567 = add i64 %6566, 1, !dbg !4751
  store i64 %6567, i64* %29, align 8, !dbg !4751
  br label %originalBB1378

originalBB1386alteredBB:                          ; preds = %originalBB1386, %5039
  br label %originalBB1386

originalBB1390alteredBB:                          ; preds = %originalBB1390, %5060
  %6568 = load i8*, i8** %19, align 8, !dbg !4752
  %6569 = load i64, i64* %29, align 8, !dbg !4752
  %6570 = getelementptr inbounds i8, i8* %6568, i64 %6569, !dbg !4752
  store i8 36, i8* %6570, align 1, !dbg !4752
  br label %originalBB1390

originalBB1394alteredBB:                          ; preds = %originalBB1394, %5084
  %6571 = load i64, i64* %29, align 8, !dbg !4756
  %6572 = load i64, i64* %20, align 8, !dbg !4756
  %6573 = icmp ult i64 %6571, %6572, !dbg !4756
  br label %originalBB1394

originalBB1398alteredBB:                          ; preds = %originalBB1398, %5111
  store i8 1, i8* %36, align 1, !dbg !4746
  br label %originalBB1398

originalBB1402alteredBB:                          ; preds = %originalBB1402, %5128
  br label %originalBB1402

originalBB1406alteredBB:                          ; preds = %originalBB1406, %5145
  %6574 = load i64, i64* %29, align 8, !dbg !4760
  %6575 = load i64, i64* %20, align 8, !dbg !4760
  %6576 = icmp ult i64 %6574, %6575, !dbg !4760
  br label %originalBB1406

originalBB1410alteredBB:                          ; preds = %originalBB1410, %5165
  %6577 = load i8*, i8** %19, align 8, !dbg !4760
  %6578 = load i64, i64* %29, align 8, !dbg !4760
  %6579 = getelementptr inbounds i8, i8* %6577, i64 %6578, !dbg !4760
  store i8 92, i8* %6579, align 1, !dbg !4760
  br label %originalBB1410

originalBB1414alteredBB:                          ; preds = %originalBB1414, %5185
  %6580 = load i64, i64* %29, align 8, !dbg !4763
  %6581 = add i64 %6580, 1, !dbg !4763
  store i64 %6581, i64* %29, align 8, !dbg !4763
  br label %originalBB1414

originalBB1418alteredBB:                          ; preds = %originalBB1418, %5204
  br label %originalBB1418

originalBB1422alteredBB:                          ; preds = %originalBB1422, %5221
  br label %originalBB1422

originalBB1426alteredBB:                          ; preds = %originalBB1426, %5242
  %6582 = load i8, i8* %42, align 1, !dbg !4767
  %6583 = trunc i8 %6582 to i1, !dbg !4767
  br label %originalBB1426

originalBB1430alteredBB:                          ; preds = %originalBB1430, %5261
  br label %originalBB1430

originalBB1434alteredBB:                          ; preds = %originalBB1434, %5278
  %6584 = load i64, i64* %29, align 8, !dbg !4773
  %6585 = load i64, i64* %20, align 8, !dbg !4773
  %6586 = icmp ult i64 %6584, %6585, !dbg !4773
  br label %originalBB1434

originalBB1438alteredBB:                          ; preds = %originalBB1438, %5302
  %6587 = load i64, i64* %29, align 8, !dbg !4776
  %_1439 = sub i64 %6587, 1
  %gen1440 = mul i64 %_1439, 1
  %_1441 = shl i64 %6587, 1
  %_1442 = sub i64 0, %6587
  %gen1443 = add i64 %_1442, 1
  %6588 = add i64 %6587, 1, !dbg !4776
  store i64 %6588, i64* %29, align 8, !dbg !4776
  br label %originalBB1438

originalBB1447alteredBB:                          ; preds = %originalBB1447, %5330
  %6589 = load i64, i64* %29, align 8, !dbg !4780
  %_1448 = sub i64 %6589, 1
  %gen1449 = mul i64 %_1448, 1
  %_1450 = sub i64 0, %6589
  %gen1451 = add i64 %_1450, 1
  %_1452 = shl i64 %6589, 1
  %_1453 = shl i64 %6589, 1
  %_1454 = sub i64 %6589, 1
  %gen1455 = mul i64 %_1454, 1
  %6590 = add i64 %6589, 1, !dbg !4780
  store i64 %6590, i64* %29, align 8, !dbg !4780
  br label %originalBB1447

originalBB1459alteredBB:                          ; preds = %originalBB1459, %5349
  store i8 0, i8* %36, align 1, !dbg !4771
  br label %originalBB1459

originalBB1463alteredBB:                          ; preds = %originalBB1463, %5366
  br label %originalBB1463

originalBB1467alteredBB:                          ; preds = %originalBB1467, %5383
  br label %originalBB1467

originalBB1471alteredBB:                          ; preds = %originalBB1471, %5400
  %6591 = load i64, i64* %29, align 8, !dbg !4782
  %6592 = load i64, i64* %20, align 8, !dbg !4782
  %6593 = icmp ult i64 %6591, %6592, !dbg !4782
  br label %originalBB1471

originalBB1475alteredBB:                          ; preds = %originalBB1475, %5420
  %6594 = load i8, i8* %39, align 1, !dbg !4782
  %6595 = load i8*, i8** %19, align 8, !dbg !4782
  %6596 = load i64, i64* %29, align 8, !dbg !4782
  %6597 = getelementptr inbounds i8, i8* %6595, i64 %6596, !dbg !4782
  store i8 %6594, i8* %6597, align 1, !dbg !4782
  br label %originalBB1475

originalBB1479alteredBB:                          ; preds = %originalBB1479, %5444
  %6598 = load i8, i8* %43, align 1, !dbg !4786
  %6599 = trunc i8 %6598 to i1, !dbg !4786
  br label %originalBB1479

originalBB1483alteredBB:                          ; preds = %originalBB1483, %5463
  store i8 0, i8* %38, align 1, !dbg !4789
  br label %originalBB1483

originalBB1487alteredBB:                          ; preds = %originalBB1487, %5480
  br label %originalBB1487

originalBB1491alteredBB:                          ; preds = %originalBB1491, %5497
  %6600 = load i64, i64* %28, align 8, !dbg !4792
  %_1492 = sub i64 %6600, 1
  %gen1493 = mul i64 %_1492, 1
  %6601 = add i64 %6600, 1, !dbg !4792
  store i64 %6601, i64* %28, align 8, !dbg !4792
  br label %originalBB1491

originalBB1497alteredBB:                          ; preds = %originalBB1497, %5516
  %6602 = load i64, i64* %29, align 8, !dbg !4796
  %6603 = icmp eq i64 %6602, 0, !dbg !4798
  br label %originalBB1497

originalBB1501alteredBB:                          ; preds = %originalBB1501, %5535
  %6604 = load i32, i32* %23, align 4, !dbg !4800
  %6605 = icmp eq i32 %6604, 2, !dbg !4801
  br label %originalBB1501

originalBB1505alteredBB:                          ; preds = %originalBB1505, %5554
  %6606 = load i8, i8* %35, align 1, !dbg !4803
  %6607 = trunc i8 %6606 to i1, !dbg !4803
  br label %originalBB1505

originalBB1509alteredBB:                          ; preds = %originalBB1509, %5573
  br label %originalBB1509

originalBB1513alteredBB:                          ; preds = %originalBB1513, %5590
  %6608 = load i32, i32* %23, align 4, !dbg !4806
  %6609 = icmp eq i32 %6608, 2, !dbg !4808
  br label %originalBB1513

originalBB1517alteredBB:                          ; preds = %originalBB1517, %5609
  %6610 = load i8, i8* %35, align 1, !dbg !4810
  %6611 = trunc i8 %6610 to i1, !dbg !4810
  br label %originalBB1517

originalBB1521alteredBB:                          ; preds = %originalBB1521, %5634
  %6612 = load i8*, i8** %19, align 8, !dbg !4818
  %6613 = load i64, i64* %30, align 8, !dbg !4819
  %6614 = load i8*, i8** %21, align 8, !dbg !4820
  %6615 = load i64, i64* %22, align 8, !dbg !4821
  %6616 = load i32, i32* %24, align 4, !dbg !4822
  %6617 = load i32*, i32** %25, align 8, !dbg !4823
  %6618 = load i8*, i8** %26, align 8, !dbg !4824
  %6619 = load i8*, i8** %27, align 8, !dbg !4825
  %6620 = call i64 @quotearg_buffer_restyled(i8* %6612, i64 %6613, i8* %6614, i64 %6615, i32 5, i32 %6616, i32* %6617, i8* %6618, i8* %6619), !dbg !4826
  store i64 %6620, i64* %18, align 8, !dbg !4827
  br label %originalBB1521

originalBB1525alteredBB:                          ; preds = %originalBB1525, %5660
  %6621 = load i64, i64* %20, align 8, !dbg !4828
  %6622 = icmp ne i64 %6621, 0, !dbg !4828
  br label %originalBB1525

originalBB1529alteredBB:                          ; preds = %originalBB1529, %5679
  %6623 = load i64, i64* %30, align 8, !dbg !4831
  %6624 = icmp ne i64 %6623, 0, !dbg !4831
  br label %originalBB1529

originalBB1533alteredBB:                          ; preds = %originalBB1533, %5700
  br label %originalBB1533

originalBB1537alteredBB:                          ; preds = %originalBB1537, %5717
  br label %originalBB1537

originalBB1541alteredBB:                          ; preds = %originalBB1541, %5734
  %6625 = load i8*, i8** %31, align 8, !dbg !4839
  %6626 = icmp ne i8* %6625, null, !dbg !4839
  br label %originalBB1541

originalBB1545alteredBB:                          ; preds = %originalBB1545, %5753
  %6627 = load i8, i8* %35, align 1, !dbg !4842
  %6628 = trunc i8 %6627 to i1, !dbg !4842
  br label %originalBB1545

originalBB1549alteredBB:                          ; preds = %originalBB1549, %5772
  br label %originalBB1549

originalBB1553alteredBB:                          ; preds = %originalBB1553, %5789
  %6629 = load i8*, i8** %31, align 8, !dbg !4845
  %6630 = load i8, i8* %6629, align 1, !dbg !4848
  %6631 = icmp ne i8 %6630, 0, !dbg !4849
  br label %originalBB1553

originalBB1557alteredBB:                          ; preds = %originalBB1557, %5809
  br label %originalBB1557

originalBB1561alteredBB:                          ; preds = %originalBB1561, %5826
  %6632 = load i64, i64* %29, align 8, !dbg !4851
  %6633 = load i64, i64* %20, align 8, !dbg !4851
  %6634 = icmp ult i64 %6632, %6633, !dbg !4851
  br label %originalBB1561

originalBB1565alteredBB:                          ; preds = %originalBB1565, %5846
  %6635 = load i8*, i8** %31, align 8, !dbg !4851
  %6636 = load i8, i8* %6635, align 1, !dbg !4851
  %6637 = load i8*, i8** %19, align 8, !dbg !4851
  %6638 = load i64, i64* %29, align 8, !dbg !4851
  %6639 = getelementptr inbounds i8, i8* %6637, i64 %6638, !dbg !4851
  store i8 %6636, i8* %6639, align 1, !dbg !4851
  br label %originalBB1565

originalBB1569alteredBB:                          ; preds = %originalBB1569, %5868
  %6640 = load i64, i64* %29, align 8, !dbg !4854
  %_1570 = sub i64 0, %6640
  %gen1571 = add i64 %_1570, 1
  %6641 = add i64 %6640, 1, !dbg !4854
  store i64 %6641, i64* %29, align 8, !dbg !4854
  br label %originalBB1569

originalBB1575alteredBB:                          ; preds = %originalBB1575, %5887
  br label %originalBB1575

originalBB1579alteredBB:                          ; preds = %originalBB1579, %5907
  br label %originalBB1579

originalBB1583alteredBB:                          ; preds = %originalBB1583, %5924
  %6642 = load i64, i64* %29, align 8, !dbg !4859
  %6643 = load i64, i64* %20, align 8, !dbg !4861
  %6644 = icmp ult i64 %6642, %6643, !dbg !4862
  br label %originalBB1583

originalBB1587alteredBB:                          ; preds = %originalBB1587, %5944
  %6645 = load i8*, i8** %19, align 8, !dbg !4864
  %6646 = load i64, i64* %29, align 8, !dbg !4865
  %6647 = getelementptr inbounds i8, i8* %6645, i64 %6646, !dbg !4864
  store i8 0, i8* %6647, align 1, !dbg !4866
  br label %originalBB1587

originalBB1591alteredBB:                          ; preds = %originalBB1591, %5964
  %6648 = load i64, i64* %29, align 8, !dbg !4867
  store i64 %6648, i64* %18, align 8, !dbg !4868
  br label %originalBB1591

originalBB1595alteredBB:                          ; preds = %originalBB1595, %5985
  %6649 = load i8, i8* %33, align 1, !dbg !4875
  %6650 = trunc i8 %6649 to i1, !dbg !4875
  br label %originalBB1595

originalBB1599alteredBB:                          ; preds = %originalBB1599, %6004
  store i32 4, i32* %23, align 4, !dbg !4877
  br label %originalBB1599

originalBB1603alteredBB:                          ; preds = %originalBB1603, %6021
  %6651 = load i8*, i8** %19, align 8, !dbg !4879
  %6652 = load i64, i64* %20, align 8, !dbg !4880
  %6653 = load i8*, i8** %21, align 8, !dbg !4881
  %6654 = load i64, i64* %22, align 8, !dbg !4882
  %6655 = load i32, i32* %23, align 4, !dbg !4883
  %6656 = load i32, i32* %24, align 4, !dbg !4884
  %_1604 = sub i32 0, %6656
  %gen1605 = add i32 %_1604, -3
  %_1606 = sub i32 %6656, -3
  %gen1607 = mul i32 %_1606, -3
  %_1608 = sub i32 0, %6656
  %gen1609 = add i32 %_1608, -3
  %_1610 = sub i32 %6656, -3
  %gen1611 = mul i32 %_1610, -3
  %_1612 = shl i32 %6656, -3
  %_1613 = shl i32 %6656, -3
  %_1614 = sub i32 0, %6656
  %gen1615 = add i32 %_1614, -3
  %_1616 = sub i32 0, %6656
  %gen1617 = add i32 %_1616, -3
  %_1618 = sub i32 0, %6656
  %gen1619 = add i32 %_1618, -3
  %6657 = and i32 %6656, -3, !dbg !4885
  %6658 = load i8*, i8** %26, align 8, !dbg !4886
  %6659 = load i8*, i8** %27, align 8, !dbg !4887
  %6660 = call i64 @quotearg_buffer_restyled(i8* %6651, i64 %6652, i8* %6653, i64 %6654, i32 %6655, i32 %6657, i32* null, i8* %6658, i8* %6659), !dbg !4888
  store i64 %6660, i64* %18, align 8, !dbg !4889
  br label %originalBB1603

originalBB1623alteredBB:                          ; preds = %originalBB1623, %6048
  %6661 = load i64, i64* %18, align 8, !dbg !4890
  br label %originalBB1623
}

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8*, i32) #4 !dbg !4978 {
  %3 = load i32, i32* @x.65
  %4 = load i32, i32* @y.66
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !4981, metadata !DIExpression()), !dbg !4982
  store i32 %1, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4983, metadata !DIExpression()), !dbg !4984
  call void @llvm.dbg.declare(metadata i8** %14, metadata !4985, metadata !DIExpression()), !dbg !4986
  %16 = load i8*, i8** %12, align 8, !dbg !4987
  %17 = call i8* @gettext(i8* %16) #10, !dbg !4987
  store i8* %17, i8** %14, align 8, !dbg !4986
  call void @llvm.dbg.declare(metadata i8** %15, metadata !4988, metadata !DIExpression()), !dbg !4989
  %18 = load i8*, i8** %14, align 8, !dbg !4990
  %19 = load i8*, i8** %12, align 8, !dbg !4992
  %20 = icmp ne i8* %18, %19, !dbg !4993
  %21 = load i32, i32* @x.65
  %22 = load i32, i32* @y.66
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %29, label %47, !dbg !4994

29:                                               ; preds = %originalBBpart2
  %30 = load i32, i32* @x.65
  %31 = load i32, i32* @y.66
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i8*, i8** %14, align 8, !dbg !4995
  store i8* %38, i8** %11, align 8, !dbg !4996
  %39 = load i32, i32* @x.65
  %40 = load i32, i32* @y.66
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %157, !dbg !4996

47:                                               ; preds = %originalBBpart2
  %48 = load i32, i32* @x.65
  %49 = load i32, i32* @y.66
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %47, %originalBB6alteredBB
  %56 = call i8* @locale_charset(), !dbg !4997
  store i8* %56, i8** %15, align 8, !dbg !4998
  %57 = load i8*, i8** %15, align 8, !dbg !4999
  %58 = call i32 @c_strcasecmp(i8* %57, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.123, i64 0, i64 0)) #13, !dbg !4999
  %59 = icmp eq i32 %58, 0, !dbg !4999
  %60 = load i32, i32* @x.65
  %61 = load i32, i32* @y.66
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %59, label %68, label %92, !dbg !5001

68:                                               ; preds = %originalBBpart28
  %69 = load i32, i32* @x.65
  %70 = load i32, i32* @y.66
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %68, %originalBB10alteredBB
  %77 = load i8*, i8** %12, align 8, !dbg !5002
  %78 = getelementptr inbounds i8, i8* %77, i64 0, !dbg !5002
  %79 = load i8, i8* %78, align 1, !dbg !5002
  %80 = sext i8 %79 to i32, !dbg !5002
  %81 = icmp eq i32 %80, 96, !dbg !5003
  %82 = zext i1 %81 to i64, !dbg !5002
  %83 = select i1 %81, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.124, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.125, i64 0, i64 0), !dbg !5002
  store i8* %83, i8** %11, align 8, !dbg !5004
  %84 = load i32, i32* @x.65
  %85 = load i32, i32* @y.66
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %157, !dbg !5004

92:                                               ; preds = %originalBBpart28
  %93 = load i32, i32* @x.65
  %94 = load i32, i32* @y.66
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %92, %originalBB14alteredBB
  %101 = load i8*, i8** %15, align 8, !dbg !5005
  %102 = call i32 @c_strcasecmp(i8* %101, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.126, i64 0, i64 0)) #13, !dbg !5005
  %103 = icmp eq i32 %102, 0, !dbg !5005
  %104 = load i32, i32* @x.65
  %105 = load i32, i32* @y.66
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %103, label %112, label %136, !dbg !5007

112:                                              ; preds = %originalBBpart216
  %113 = load i32, i32* @x.65
  %114 = load i32, i32* @y.66
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %112, %originalBB18alteredBB
  %121 = load i8*, i8** %12, align 8, !dbg !5008
  %122 = getelementptr inbounds i8, i8* %121, i64 0, !dbg !5008
  %123 = load i8, i8* %122, align 1, !dbg !5008
  %124 = sext i8 %123 to i32, !dbg !5008
  %125 = icmp eq i32 %124, 96, !dbg !5009
  %126 = zext i1 %125 to i64, !dbg !5008
  %127 = select i1 %125, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.127, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.128, i64 0, i64 0), !dbg !5008
  store i8* %127, i8** %11, align 8, !dbg !5010
  %128 = load i32, i32* @x.65
  %129 = load i32, i32* @y.66
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %157, !dbg !5010

136:                                              ; preds = %originalBBpart216
  %137 = load i32, i32* @x.65
  %138 = load i32, i32* @y.66
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %136, %originalBB22alteredBB
  %145 = load i32, i32* %13, align 4, !dbg !5011
  %146 = icmp eq i32 %145, 9, !dbg !5012
  %147 = zext i1 %146 to i64, !dbg !5011
  %148 = select i1 %146, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.120, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.122, i64 0, i64 0), !dbg !5011
  store i8* %148, i8** %11, align 8, !dbg !5013
  %149 = load i32, i32* @x.65
  %150 = load i32, i32* @y.66
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %157, !dbg !5013

157:                                              ; preds = %originalBBpart224, %originalBBpart220, %originalBBpart212, %originalBBpart24
  %158 = load i8*, i8** %11, align 8, !dbg !5014
  ret i8* %158, !dbg !5014

originalBBalteredBB:                              ; preds = %originalBB, %2
  %159 = alloca i8*, align 8
  %160 = alloca i8*, align 8
  %161 = alloca i32, align 4
  %162 = alloca i8*, align 8
  %163 = alloca i8*, align 8
  store i8* %0, i8** %160, align 8
  call void @llvm.dbg.declare(metadata i8** %160, metadata !5015, metadata !DIExpression()), !dbg !4982
  store i32 %1, i32* %161, align 4
  call void @llvm.dbg.declare(metadata i32* %161, metadata !5047, metadata !DIExpression()), !dbg !4984
  call void @llvm.dbg.declare(metadata i8** %162, metadata !5048, metadata !DIExpression()), !dbg !4986
  %164 = load i8*, i8** %160, align 8, !dbg !4987
  %165 = call i8* @gettext(i8* %164) #10, !dbg !4987
  store i8* %165, i8** %162, align 8, !dbg !4986
  call void @llvm.dbg.declare(metadata i8** %163, metadata !5049, metadata !DIExpression()), !dbg !4989
  %166 = load i8*, i8** %162, align 8, !dbg !4990
  %167 = load i8*, i8** %160, align 8, !dbg !4992
  %168 = icmp ne i8* %166, %167, !dbg !4993
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %169 = load i8*, i8** %14, align 8, !dbg !4995
  store i8* %169, i8** %11, align 8, !dbg !4996
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %47
  %170 = call i8* @locale_charset(), !dbg !4997
  store i8* %170, i8** %15, align 8, !dbg !4998
  %171 = load i8*, i8** %15, align 8, !dbg !4999
  %172 = call i32 @c_strcasecmp(i8* %171, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.123, i64 0, i64 0)) #13, !dbg !4999
  %173 = icmp eq i32 %172, 0, !dbg !4999
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %68
  %174 = load i8*, i8** %12, align 8, !dbg !5002
  %175 = getelementptr inbounds i8, i8* %174, i64 0, !dbg !5002
  %176 = load i8, i8* %175, align 1, !dbg !5002
  %177 = sext i8 %176 to i32, !dbg !5002
  %178 = icmp eq i32 %177, 96, !dbg !5003
  %179 = zext i1 %178 to i64, !dbg !5002
  %180 = select i1 %178, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.124, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.125, i64 0, i64 0), !dbg !5002
  store i8* %180, i8** %11, align 8, !dbg !5004
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %92
  %181 = load i8*, i8** %15, align 8, !dbg !5005
  %182 = call i32 @c_strcasecmp(i8* %181, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.126, i64 0, i64 0)) #13, !dbg !5005
  %183 = icmp eq i32 %182, 0, !dbg !5005
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %112
  %184 = load i8*, i8** %12, align 8, !dbg !5008
  %185 = getelementptr inbounds i8, i8* %184, i64 0, !dbg !5008
  %186 = load i8, i8* %185, align 1, !dbg !5008
  %187 = sext i8 %186 to i32, !dbg !5008
  %188 = icmp eq i32 %187, 96, !dbg !5009
  %189 = zext i1 %188 to i64, !dbg !5008
  %190 = select i1 %188, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.127, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.128, i64 0, i64 0), !dbg !5008
  store i8* %190, i8** %11, align 8, !dbg !5010
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %136
  %191 = load i32, i32* %13, align 4, !dbg !5011
  %192 = icmp eq i32 %191, 9, !dbg !5012
  %193 = zext i1 %192 to i64, !dbg !5011
  %194 = select i1 %192, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.120, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.122, i64 0, i64 0), !dbg !5011
  store i8* %194, i8** %11, align 8, !dbg !5013
  br label %originalBB22
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #8

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.__mbstate_t*) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char(i8*, i8 signext) #4 !dbg !5050 {
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !5053, metadata !DIExpression()), !dbg !5054
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !5055, metadata !DIExpression()), !dbg !5056
  %5 = load i8*, i8** %3, align 8, !dbg !5057
  %6 = load i8, i8* %4, align 1, !dbg !5058
  %7 = call i8* @quotearg_char_mem(i8* %5, i64 -1, i8 signext %6), !dbg !5059
  ret i8* %7, !dbg !5060
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_colon(i8*) #4 !dbg !5061 {
  %2 = load i32, i32* @x.69
  %3 = load i32, i32* @y.70
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !5062, metadata !DIExpression()), !dbg !5063
  %11 = load i8*, i8** %10, align 8, !dbg !5064
  %12 = call i8* @quotearg_char(i8* %11, i8 signext 58), !dbg !5065
  %13 = load i32, i32* @x.69
  %14 = load i32, i32* @y.70
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !5066

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i8*, align 8
  store i8* %0, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !5067, metadata !DIExpression()), !dbg !5063
  %22 = load i8*, i8** %21, align 8, !dbg !5064
  %23 = call i8* @quotearg_char(i8* %22, i8 signext 58), !dbg !5065
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_style_colon(i32, i32, i8*) #4 !dbg !5099 {
  %4 = load i32, i32* @x.71
  %5 = load i32, i32* @y.72
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca %struct.quoting_options, align 8
  %16 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5102, metadata !DIExpression()), !dbg !5103
  store i32 %1, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5104, metadata !DIExpression()), !dbg !5105
  store i8* %2, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !5106, metadata !DIExpression()), !dbg !5107
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %15, metadata !5108, metadata !DIExpression()), !dbg !5109
  %17 = load i32, i32* %13, align 4, !dbg !5110
  call void @quoting_options_from_style(%struct.quoting_options* sret %16, i32 %17), !dbg !5111
  %18 = bitcast %struct.quoting_options* %15 to i8*, !dbg !5111
  %19 = bitcast %struct.quoting_options* %16 to i8*, !dbg !5111
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 56, i1 false), !dbg !5111
  %20 = call i32 @set_char_quoting(%struct.quoting_options* %15, i8 signext 58, i32 1), !dbg !5112
  %21 = load i32, i32* %12, align 4, !dbg !5113
  %22 = load i8*, i8** %14, align 8, !dbg !5114
  %23 = call i8* @quotearg_n_options(i32 %21, i8* %22, i64 -1, %struct.quoting_options* %15), !dbg !5115
  %24 = load i32, i32* @x.71
  %25 = load i32, i32* @y.72
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %23, !dbg !5116

originalBBalteredBB:                              ; preds = %originalBB, %3
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i8*, align 8
  %35 = alloca %struct.quoting_options, align 8
  %36 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %32, align 4
  call void @llvm.dbg.declare(metadata i32* %32, metadata !5117, metadata !DIExpression()), !dbg !5103
  store i32 %1, i32* %33, align 4
  call void @llvm.dbg.declare(metadata i32* %33, metadata !5149, metadata !DIExpression()), !dbg !5105
  store i8* %2, i8** %34, align 8
  call void @llvm.dbg.declare(metadata i8** %34, metadata !5150, metadata !DIExpression()), !dbg !5107
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %35, metadata !5151, metadata !DIExpression()), !dbg !5109
  %37 = load i32, i32* %33, align 4, !dbg !5110
  call void @quoting_options_from_style(%struct.quoting_options* sret %36, i32 %37), !dbg !5111
  %38 = bitcast %struct.quoting_options* %35 to i8*, !dbg !5111
  %39 = bitcast %struct.quoting_options* %36 to i8*, !dbg !5111
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 56, i1 false), !dbg !5111
  %40 = call i32 @set_char_quoting(%struct.quoting_options* %35, i8 signext 58, i32 1), !dbg !5112
  %41 = load i32, i32* %32, align 4, !dbg !5113
  %42 = load i8*, i8** %34, align 8, !dbg !5114
  %43 = call i8* @quotearg_n_options(i32 %41, i8* %42, i64 -1, %struct.quoting_options* %35), !dbg !5115
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret, i32) #4 !dbg !5152 {
  %3 = load i32, i32* @x.73
  %4 = load i32, i32* @y.74
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  store i32 %1, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !5155, metadata !DIExpression()), !dbg !5156
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %0, metadata !5157, metadata !DIExpression()), !dbg !5158
  %12 = bitcast %struct.quoting_options* %0 to i8*, !dbg !5158
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 56, i1 false), !dbg !5158
  %13 = load i32, i32* %11, align 4, !dbg !5159
  %14 = icmp eq i32 %13, 10, !dbg !5161
  %15 = load i32, i32* @x.73
  %16 = load i32, i32* @y.74
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %14, label %23, label %40, !dbg !5162

23:                                               ; preds = %originalBBpart2
  %24 = load i32, i32* @x.73
  %25 = load i32, i32* @y.74
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %23, %originalBB1alteredBB
  call void @abort() #12, !dbg !5163
  %32 = load i32, i32* @x.73
  %33 = load i32, i32* @y.74
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable, !dbg !5163

40:                                               ; preds = %originalBBpart2
  %41 = load i32, i32* %11, align 4, !dbg !5164
  %42 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %0, i32 0, i32 0, !dbg !5165
  store i32 %41, i32* %42, align 8, !dbg !5166
  ret void, !dbg !5167

originalBBalteredBB:                              ; preds = %originalBB, %2
  %43 = alloca i32, align 4
  store i32 %1, i32* %43, align 4
  call void @llvm.dbg.declare(metadata i32* %43, metadata !5168, metadata !DIExpression()), !dbg !5156
  call void @llvm.dbg.declare(metadata !4, metadata !5202, metadata !DIExpression()), !dbg !5158
  %44 = bitcast %struct.quoting_options* %0 to i8*, !dbg !5158
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 56, i1 false), !dbg !5158
  %45 = load i32, i32* %43, align 4, !dbg !5159
  %46 = icmp eq i32 %45, 10, !dbg !5161
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %23
  call void @abort() #12, !dbg !5163
  br label %originalBB1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n_mem(i32, i8*, i64) #4 !dbg !5203 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5206, metadata !DIExpression()), !dbg !5207
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5208, metadata !DIExpression()), !dbg !5209
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !5210, metadata !DIExpression()), !dbg !5211
  %7 = load i32, i32* %4, align 4, !dbg !5212
  %8 = load i8*, i8** %5, align 8, !dbg !5213
  %9 = load i64, i64* %6, align 8, !dbg !5214
  %10 = call i8* @quotearg_n_options(i32 %7, i8* %8, i64 %9, %struct.quoting_options* @quote_quoting_options), !dbg !5215
  ret i8* %10, !dbg !5216
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n(i32, i8*) #4 !dbg !5217 {
  %3 = load i32, i32* @x.77
  %4 = load i32, i32* @y.78
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !5220, metadata !DIExpression()), !dbg !5221
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !5222, metadata !DIExpression()), !dbg !5223
  %13 = load i32, i32* %11, align 4, !dbg !5224
  %14 = load i8*, i8** %12, align 8, !dbg !5225
  %15 = call i8* @quote_n_mem(i32 %13, i8* %14, i64 -1), !dbg !5226
  %16 = load i32, i32* @x.77
  %17 = load i32, i32* @y.78
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %15, !dbg !5227

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  store i32 %0, i32* %24, align 4
  call void @llvm.dbg.declare(metadata i32* %24, metadata !5228, metadata !DIExpression()), !dbg !5221
  store i8* %1, i8** %25, align 8
  call void @llvm.dbg.declare(metadata i8** %25, metadata !5260, metadata !DIExpression()), !dbg !5223
  %26 = load i32, i32* %24, align 4, !dbg !5224
  %27 = load i8*, i8** %25, align 8, !dbg !5225
  %28 = call i8* @quote_n_mem(i32 %26, i8* %27, i64 -1), !dbg !5226
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote(i8*) #4 !dbg !5261 {
  %2 = load i32, i32* @x.79
  %3 = load i32, i32* @y.80
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !5264, metadata !DIExpression()), !dbg !5265
  %11 = load i8*, i8** %10, align 8, !dbg !5266
  %12 = call i8* @quote_n(i32 0, i8* %11), !dbg !5267
  %13 = load i32, i32* @x.79
  %14 = load i32, i32* @y.80
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !5268

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i8*, align 8
  store i8* %0, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !5269, metadata !DIExpression()), !dbg !5265
  %22 = load i8*, i8** %21, align 8, !dbg !5266
  %23 = call i8* @quote_n(i32 0, i8* %22), !dbg !5267
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setlocale_null_r(i32, i8* nonnull, i64) #4 !dbg !5301 {
  %4 = load i32, i32* @x.81
  %5 = load i32, i32* @y.82
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5305, metadata !DIExpression()), !dbg !5306
  store i8* %1, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !5307, metadata !DIExpression()), !dbg !5308
  store i64 %2, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !5309, metadata !DIExpression()), !dbg !5310
  %15 = load i32, i32* %12, align 4, !dbg !5311
  %16 = load i8*, i8** %13, align 8, !dbg !5312
  %17 = load i64, i64* %14, align 8, !dbg !5313
  %18 = call i32 @setlocale_null_unlocked(i32 %15, i8* %16, i64 %17), !dbg !5314
  %19 = load i32, i32* @x.81
  %20 = load i32, i32* @y.82
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %18, !dbg !5315

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i64, align 8
  store i32 %0, i32* %27, align 4
  call void @llvm.dbg.declare(metadata i32* %27, metadata !5316, metadata !DIExpression()), !dbg !5306
  store i8* %1, i8** %28, align 8
  call void @llvm.dbg.declare(metadata i8** %28, metadata !5319, metadata !DIExpression()), !dbg !5308
  store i64 %2, i64* %29, align 8
  call void @llvm.dbg.declare(metadata i64* %29, metadata !5320, metadata !DIExpression()), !dbg !5310
  %30 = load i32, i32* %27, align 4, !dbg !5311
  %31 = load i8*, i8** %28, align 8, !dbg !5312
  %32 = load i64, i64* %29, align 8, !dbg !5313
  %33 = call i32 @setlocale_null_unlocked(i32 %30, i8* %31, i64 %32), !dbg !5314
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setlocale_null_unlocked(i32, i8*, i64) #4 !dbg !5321 {
  %4 = load i32, i32* @x.83
  %5 = load i32, i32* @y.84
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i64, align 8
  store i32 %0, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5322, metadata !DIExpression()), !dbg !5323
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !5324, metadata !DIExpression()), !dbg !5325
  store i64 %2, i64* %15, align 8
  call void @llvm.dbg.declare(metadata i64* %15, metadata !5326, metadata !DIExpression()), !dbg !5327
  call void @llvm.dbg.declare(metadata i8** %16, metadata !5328, metadata !DIExpression()), !dbg !5329
  %18 = load i32, i32* %13, align 4, !dbg !5330
  %19 = call i8* @setlocale_null_androidfix(i32 %18), !dbg !5331
  store i8* %19, i8** %16, align 8, !dbg !5329
  %20 = load i8*, i8** %16, align 8, !dbg !5332
  %21 = icmp eq i8* %20, null, !dbg !5334
  %22 = load i32, i32* @x.83
  %23 = load i32, i32* @y.84
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %85, !dbg !5335

30:                                               ; preds = %originalBBpart2
  %31 = load i32, i32* @x.83
  %32 = load i32, i32* @y.84
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load i64, i64* %15, align 8, !dbg !5336
  %40 = icmp ugt i64 %39, 0, !dbg !5339
  %41 = load i32, i32* @x.83
  %42 = load i32, i32* @y.84
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %40, label %49, label %68, !dbg !5340

49:                                               ; preds = %originalBBpart24
  %50 = load i32, i32* @x.83
  %51 = load i32, i32* @y.84
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %49, %originalBB6alteredBB
  %58 = load i8*, i8** %14, align 8, !dbg !5341
  %59 = getelementptr inbounds i8, i8* %58, i64 0, !dbg !5341
  store i8 0, i8* %59, align 1, !dbg !5342
  %60 = load i32, i32* @x.83
  %61 = load i32, i32* @y.84
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %68, !dbg !5341

68:                                               ; preds = %originalBBpart28, %originalBBpart24
  %69 = load i32, i32* @x.83
  %70 = load i32, i32* @y.84
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %68, %originalBB10alteredBB
  store i32 22, i32* %12, align 4, !dbg !5343
  %77 = load i32, i32* @x.83
  %78 = load i32, i32* @y.84
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %173, !dbg !5343

85:                                               ; preds = %originalBBpart2
  call void @llvm.dbg.declare(metadata i64* %17, metadata !5344, metadata !DIExpression()), !dbg !5346
  %86 = load i32, i32* @x.83
  %87 = load i32, i32* @y.84
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %85, %originalBB14alteredBB
  %94 = load i8*, i8** %16, align 8, !dbg !5347
  %95 = call i64 @strlen(i8* %94) #13, !dbg !5348
  store i64 %95, i64* %17, align 8, !dbg !5346
  %96 = load i64, i64* %17, align 8, !dbg !5349
  %97 = load i64, i64* %15, align 8, !dbg !5351
  %98 = icmp ult i64 %96, %97, !dbg !5352
  %99 = load i32, i32* @x.83
  %100 = load i32, i32* @y.84
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %98, label %107, label %112, !dbg !5353

107:                                              ; preds = %originalBBpart216
  %108 = load i8*, i8** %14, align 8, !dbg !5354
  %109 = load i8*, i8** %16, align 8, !dbg !5356
  %110 = load i64, i64* %17, align 8, !dbg !5357
  %111 = add i64 %110, 1, !dbg !5358
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %108, i8* align 1 %109, i64 %111, i1 false), !dbg !5359
  store i32 0, i32* %12, align 4, !dbg !5360
  br label %173, !dbg !5360

112:                                              ; preds = %originalBBpart216
  %113 = load i32, i32* @x.83
  %114 = load i32, i32* @y.84
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %112, %originalBB18alteredBB
  %121 = load i64, i64* %15, align 8, !dbg !5361
  %122 = icmp ugt i64 %121, 0, !dbg !5364
  %123 = load i32, i32* @x.83
  %124 = load i32, i32* @y.84
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %122, label %131, label %156, !dbg !5365

131:                                              ; preds = %originalBBpart220
  %132 = load i32, i32* @x.83
  %133 = load i32, i32* @y.84
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %131, %originalBB22alteredBB
  %140 = load i8*, i8** %14, align 8, !dbg !5366
  %141 = load i8*, i8** %16, align 8, !dbg !5368
  %142 = load i64, i64* %15, align 8, !dbg !5369
  %143 = sub i64 %142, 1, !dbg !5370
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %140, i8* align 1 %141, i64 %143, i1 false), !dbg !5371
  %144 = load i8*, i8** %14, align 8, !dbg !5372
  %145 = load i64, i64* %15, align 8, !dbg !5373
  %146 = sub i64 %145, 1, !dbg !5374
  %147 = getelementptr inbounds i8, i8* %144, i64 %146, !dbg !5372
  store i8 0, i8* %147, align 1, !dbg !5375
  %148 = load i32, i32* @x.83
  %149 = load i32, i32* @y.84
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBBpart227, label %originalBB22alteredBB

originalBBpart227:                                ; preds = %originalBB22
  br label %156, !dbg !5376

156:                                              ; preds = %originalBBpart227, %originalBBpart220
  %157 = load i32, i32* @x.83
  %158 = load i32, i32* @y.84
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %156, %originalBB29alteredBB
  store i32 34, i32* %12, align 4, !dbg !5377
  %165 = load i32, i32* @x.83
  %166 = load i32, i32* @y.84
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br label %173, !dbg !5377

173:                                              ; preds = %originalBBpart231, %107, %originalBBpart212
  %174 = load i32, i32* %12, align 4, !dbg !5378
  ret i32 %174, !dbg !5378

originalBBalteredBB:                              ; preds = %originalBB, %3
  %175 = alloca i32, align 4
  %176 = alloca i32, align 4
  %177 = alloca i8*, align 8
  %178 = alloca i64, align 8
  %179 = alloca i8*, align 8
  %180 = alloca i64, align 8
  store i32 %0, i32* %176, align 4
  call void @llvm.dbg.declare(metadata i32* %176, metadata !5379, metadata !DIExpression()), !dbg !5323
  store i8* %1, i8** %177, align 8
  call void @llvm.dbg.declare(metadata i8** %177, metadata !5382, metadata !DIExpression()), !dbg !5325
  store i64 %2, i64* %178, align 8
  call void @llvm.dbg.declare(metadata i64* %178, metadata !5383, metadata !DIExpression()), !dbg !5327
  call void @llvm.dbg.declare(metadata i8** %179, metadata !5384, metadata !DIExpression()), !dbg !5329
  %181 = load i32, i32* %176, align 4, !dbg !5330
  %182 = call i8* @setlocale_null_androidfix(i32 %181), !dbg !5331
  store i8* %182, i8** %179, align 8, !dbg !5329
  %183 = load i8*, i8** %179, align 8, !dbg !5332
  %184 = icmp eq i8* %183, null, !dbg !5334
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %185 = load i64, i64* %15, align 8, !dbg !5336
  %186 = icmp ugt i64 %185, 0, !dbg !5339
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  %187 = load i8*, i8** %14, align 8, !dbg !5341
  %188 = getelementptr inbounds i8, i8* %187, i64 0, !dbg !5341
  store i8 0, i8* %188, align 1, !dbg !5342
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %68
  store i32 22, i32* %12, align 4, !dbg !5343
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %85
  %189 = load i8*, i8** %16, align 8, !dbg !5347
  %190 = call i64 @strlen(i8* %189) #13, !dbg !5348
  store i64 %190, i64* %17, align 8, !dbg !5346
  %191 = load i64, i64* %17, align 8, !dbg !5349
  %192 = load i64, i64* %15, align 8, !dbg !5351
  %193 = icmp ult i64 %191, %192, !dbg !5352
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %112
  %194 = load i64, i64* %15, align 8, !dbg !5361
  %195 = icmp ugt i64 %194, 0, !dbg !5364
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %131
  %196 = load i8*, i8** %14, align 8, !dbg !5366
  %197 = load i8*, i8** %16, align 8, !dbg !5368
  %198 = load i64, i64* %15, align 8, !dbg !5369
  %_ = sub i64 %198, 1
  %gen = mul i64 %_, 1
  %_23 = shl i64 %198, 1
  %199 = sub i64 %198, 1, !dbg !5370
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %196, i8* align 1 %197, i64 %199, i1 false), !dbg !5371
  %200 = load i8*, i8** %14, align 8, !dbg !5372
  %201 = load i64, i64* %15, align 8, !dbg !5373
  %_24 = shl i64 %201, 1
  %202 = sub i64 %201, 1, !dbg !5374
  %203 = getelementptr inbounds i8, i8* %200, i64 %202, !dbg !5372
  store i8 0, i8* %203, align 1, !dbg !5375
  br label %originalBB22

originalBB29alteredBB:                            ; preds = %originalBB29, %156
  store i32 34, i32* %12, align 4, !dbg !5377
  br label %originalBB29
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @setlocale_null_androidfix(i32) #4 !dbg !5385 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5388, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.declare(metadata i8** %3, metadata !5390, metadata !DIExpression()), !dbg !5391
  %4 = load i32, i32* %2, align 4, !dbg !5392
  %5 = call i8* @setlocale(i32 %4, i8* null) #10, !dbg !5393
  store i8* %5, i8** %3, align 8, !dbg !5391
  %6 = load i8*, i8** %3, align 8, !dbg !5394
  ret i8* %6, !dbg !5395
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_arn(%struct._IO_FILE*, i8*, i8*, i8*, i8**, i64) #4 !dbg !5396 {
  %7 = load i32, i32* @x.87
  %8 = load i32, i32* @y.88
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = alloca %struct._IO_FILE*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8**, align 8
  %20 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %15, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %15, metadata !5450, metadata !DIExpression()), !dbg !5451
  store i8* %1, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !5452, metadata !DIExpression()), !dbg !5453
  store i8* %2, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !5454, metadata !DIExpression()), !dbg !5455
  store i8* %3, i8** %18, align 8
  call void @llvm.dbg.declare(metadata i8** %18, metadata !5456, metadata !DIExpression()), !dbg !5457
  store i8** %4, i8*** %19, align 8
  call void @llvm.dbg.declare(metadata i8*** %19, metadata !5458, metadata !DIExpression()), !dbg !5459
  store i64 %5, i64* %20, align 8
  call void @llvm.dbg.declare(metadata i64* %20, metadata !5460, metadata !DIExpression()), !dbg !5461
  %21 = load i8*, i8** %16, align 8, !dbg !5462
  %22 = icmp ne i8* %21, null, !dbg !5462
  %23 = load i32, i32* @x.87
  %24 = load i32, i32* @y.88
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %53, !dbg !5464

31:                                               ; preds = %originalBBpart2
  %32 = load i32, i32* @x.87
  %33 = load i32, i32* @y.88
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5465
  %41 = load i8*, i8** %16, align 8, !dbg !5466
  %42 = load i8*, i8** %17, align 8, !dbg !5467
  %43 = load i8*, i8** %18, align 8, !dbg !5468
  %44 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.137, i64 0, i64 0), i8* %41, i8* %42, i8* %43), !dbg !5469
  %45 = load i32, i32* @x.87
  %46 = load i32, i32* @y.88
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %74, !dbg !5469

53:                                               ; preds = %originalBBpart2
  %54 = load i32, i32* @x.87
  %55 = load i32, i32* @y.88
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %53, %originalBB6alteredBB
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5470
  %63 = load i8*, i8** %17, align 8, !dbg !5471
  %64 = load i8*, i8** %18, align 8, !dbg !5472
  %65 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %62, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.138, i64 0, i64 0), i8* %63, i8* %64), !dbg !5473
  %66 = load i32, i32* @x.87
  %67 = load i32, i32* @y.88
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %74

74:                                               ; preds = %originalBBpart28, %originalBBpart24
  %75 = load i32, i32* @x.87
  %76 = load i32, i32* @y.88
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %74, %originalBB10alteredBB
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5474
  %84 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.139, i64 0, i64 0)) #10, !dbg !5475
  %85 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %83, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %84, i32 2020), !dbg !5476
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5477
  %87 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.140, i64 0, i64 0), %struct._IO_FILE* %86), !dbg !5477
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5478
  %89 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.141, i64 0, i64 0)) #10, !dbg !5479
  %90 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %88, i8* %89, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.142, i64 0, i64 0)), !dbg !5480
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5481
  %92 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.140, i64 0, i64 0), %struct._IO_FILE* %91), !dbg !5481
  %93 = load i64, i64* %20, align 8, !dbg !5482
  %94 = load i32, i32* @x.87
  %95 = load i32, i32* @y.88
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  switch i64 %93, label %434 [
    i64 0, label %102
    i64 1, label %119
    i64 2, label %142
    i64 3, label %168
    i64 4, label %197
    i64 5, label %229
    i64 6, label %264
    i64 7, label %302
    i64 8, label %343
    i64 9, label %387
  ], !dbg !5483

102:                                              ; preds = %originalBBpart212
  %103 = load i32, i32* @x.87
  %104 = load i32, i32* @y.88
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %102, %originalBB14alteredBB
  %111 = load i32, i32* @x.87
  %112 = load i32, i32* @y.88
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %481, !dbg !5484

119:                                              ; preds = %originalBBpart212
  %120 = load i32, i32* @x.87
  %121 = load i32, i32* @y.88
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %119, %originalBB18alteredBB
  %128 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5486
  %129 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.143, i64 0, i64 0)) #10, !dbg !5487
  %130 = load i8**, i8*** %19, align 8, !dbg !5488
  %131 = getelementptr inbounds i8*, i8** %130, i64 0, !dbg !5488
  %132 = load i8*, i8** %131, align 8, !dbg !5488
  %133 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %128, i8* %129, i8* %132), !dbg !5489
  %134 = load i32, i32* @x.87
  %135 = load i32, i32* @y.88
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %481, !dbg !5490

142:                                              ; preds = %originalBBpart212
  %143 = load i32, i32* @x.87
  %144 = load i32, i32* @y.88
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %142, %originalBB22alteredBB
  %151 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5491
  %152 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.144, i64 0, i64 0)) #10, !dbg !5492
  %153 = load i8**, i8*** %19, align 8, !dbg !5493
  %154 = getelementptr inbounds i8*, i8** %153, i64 0, !dbg !5493
  %155 = load i8*, i8** %154, align 8, !dbg !5493
  %156 = load i8**, i8*** %19, align 8, !dbg !5494
  %157 = getelementptr inbounds i8*, i8** %156, i64 1, !dbg !5494
  %158 = load i8*, i8** %157, align 8, !dbg !5494
  %159 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %151, i8* %152, i8* %155, i8* %158), !dbg !5495
  %160 = load i32, i32* @x.87
  %161 = load i32, i32* @y.88
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %481, !dbg !5496

168:                                              ; preds = %originalBBpart212
  %169 = load i32, i32* @x.87
  %170 = load i32, i32* @y.88
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %168, %originalBB26alteredBB
  %177 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5497
  %178 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.145, i64 0, i64 0)) #10, !dbg !5498
  %179 = load i8**, i8*** %19, align 8, !dbg !5499
  %180 = getelementptr inbounds i8*, i8** %179, i64 0, !dbg !5499
  %181 = load i8*, i8** %180, align 8, !dbg !5499
  %182 = load i8**, i8*** %19, align 8, !dbg !5500
  %183 = getelementptr inbounds i8*, i8** %182, i64 1, !dbg !5500
  %184 = load i8*, i8** %183, align 8, !dbg !5500
  %185 = load i8**, i8*** %19, align 8, !dbg !5501
  %186 = getelementptr inbounds i8*, i8** %185, i64 2, !dbg !5501
  %187 = load i8*, i8** %186, align 8, !dbg !5501
  %188 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %177, i8* %178, i8* %181, i8* %184, i8* %187), !dbg !5502
  %189 = load i32, i32* @x.87
  %190 = load i32, i32* @y.88
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %481, !dbg !5503

197:                                              ; preds = %originalBBpart212
  %198 = load i32, i32* @x.87
  %199 = load i32, i32* @y.88
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %197, %originalBB30alteredBB
  %206 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5504
  %207 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.146, i64 0, i64 0)) #10, !dbg !5505
  %208 = load i8**, i8*** %19, align 8, !dbg !5506
  %209 = getelementptr inbounds i8*, i8** %208, i64 0, !dbg !5506
  %210 = load i8*, i8** %209, align 8, !dbg !5506
  %211 = load i8**, i8*** %19, align 8, !dbg !5507
  %212 = getelementptr inbounds i8*, i8** %211, i64 1, !dbg !5507
  %213 = load i8*, i8** %212, align 8, !dbg !5507
  %214 = load i8**, i8*** %19, align 8, !dbg !5508
  %215 = getelementptr inbounds i8*, i8** %214, i64 2, !dbg !5508
  %216 = load i8*, i8** %215, align 8, !dbg !5508
  %217 = load i8**, i8*** %19, align 8, !dbg !5509
  %218 = getelementptr inbounds i8*, i8** %217, i64 3, !dbg !5509
  %219 = load i8*, i8** %218, align 8, !dbg !5509
  %220 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %206, i8* %207, i8* %210, i8* %213, i8* %216, i8* %219), !dbg !5510
  %221 = load i32, i32* @x.87
  %222 = load i32, i32* @y.88
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %481, !dbg !5511

229:                                              ; preds = %originalBBpart212
  %230 = load i32, i32* @x.87
  %231 = load i32, i32* @y.88
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %229, %originalBB34alteredBB
  %238 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5512
  %239 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.147, i64 0, i64 0)) #10, !dbg !5513
  %240 = load i8**, i8*** %19, align 8, !dbg !5514
  %241 = getelementptr inbounds i8*, i8** %240, i64 0, !dbg !5514
  %242 = load i8*, i8** %241, align 8, !dbg !5514
  %243 = load i8**, i8*** %19, align 8, !dbg !5515
  %244 = getelementptr inbounds i8*, i8** %243, i64 1, !dbg !5515
  %245 = load i8*, i8** %244, align 8, !dbg !5515
  %246 = load i8**, i8*** %19, align 8, !dbg !5516
  %247 = getelementptr inbounds i8*, i8** %246, i64 2, !dbg !5516
  %248 = load i8*, i8** %247, align 8, !dbg !5516
  %249 = load i8**, i8*** %19, align 8, !dbg !5517
  %250 = getelementptr inbounds i8*, i8** %249, i64 3, !dbg !5517
  %251 = load i8*, i8** %250, align 8, !dbg !5517
  %252 = load i8**, i8*** %19, align 8, !dbg !5518
  %253 = getelementptr inbounds i8*, i8** %252, i64 4, !dbg !5518
  %254 = load i8*, i8** %253, align 8, !dbg !5518
  %255 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %238, i8* %239, i8* %242, i8* %245, i8* %248, i8* %251, i8* %254), !dbg !5519
  %256 = load i32, i32* @x.87
  %257 = load i32, i32* @y.88
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %481, !dbg !5520

264:                                              ; preds = %originalBBpart212
  %265 = load i32, i32* @x.87
  %266 = load i32, i32* @y.88
  %267 = sub i32 %265, 1
  %268 = mul i32 %265, %267
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %270, %271
  br i1 %272, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %264, %originalBB38alteredBB
  %273 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5521
  %274 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.148, i64 0, i64 0)) #10, !dbg !5522
  %275 = load i8**, i8*** %19, align 8, !dbg !5523
  %276 = getelementptr inbounds i8*, i8** %275, i64 0, !dbg !5523
  %277 = load i8*, i8** %276, align 8, !dbg !5523
  %278 = load i8**, i8*** %19, align 8, !dbg !5524
  %279 = getelementptr inbounds i8*, i8** %278, i64 1, !dbg !5524
  %280 = load i8*, i8** %279, align 8, !dbg !5524
  %281 = load i8**, i8*** %19, align 8, !dbg !5525
  %282 = getelementptr inbounds i8*, i8** %281, i64 2, !dbg !5525
  %283 = load i8*, i8** %282, align 8, !dbg !5525
  %284 = load i8**, i8*** %19, align 8, !dbg !5526
  %285 = getelementptr inbounds i8*, i8** %284, i64 3, !dbg !5526
  %286 = load i8*, i8** %285, align 8, !dbg !5526
  %287 = load i8**, i8*** %19, align 8, !dbg !5527
  %288 = getelementptr inbounds i8*, i8** %287, i64 4, !dbg !5527
  %289 = load i8*, i8** %288, align 8, !dbg !5527
  %290 = load i8**, i8*** %19, align 8, !dbg !5528
  %291 = getelementptr inbounds i8*, i8** %290, i64 5, !dbg !5528
  %292 = load i8*, i8** %291, align 8, !dbg !5528
  %293 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %273, i8* %274, i8* %277, i8* %280, i8* %283, i8* %286, i8* %289, i8* %292), !dbg !5529
  %294 = load i32, i32* @x.87
  %295 = load i32, i32* @y.88
  %296 = sub i32 %294, 1
  %297 = mul i32 %294, %296
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %299, %300
  br i1 %301, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %481, !dbg !5530

302:                                              ; preds = %originalBBpart212
  %303 = load i32, i32* @x.87
  %304 = load i32, i32* @y.88
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %302, %originalBB42alteredBB
  %311 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5531
  %312 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.149, i64 0, i64 0)) #10, !dbg !5532
  %313 = load i8**, i8*** %19, align 8, !dbg !5533
  %314 = getelementptr inbounds i8*, i8** %313, i64 0, !dbg !5533
  %315 = load i8*, i8** %314, align 8, !dbg !5533
  %316 = load i8**, i8*** %19, align 8, !dbg !5534
  %317 = getelementptr inbounds i8*, i8** %316, i64 1, !dbg !5534
  %318 = load i8*, i8** %317, align 8, !dbg !5534
  %319 = load i8**, i8*** %19, align 8, !dbg !5535
  %320 = getelementptr inbounds i8*, i8** %319, i64 2, !dbg !5535
  %321 = load i8*, i8** %320, align 8, !dbg !5535
  %322 = load i8**, i8*** %19, align 8, !dbg !5536
  %323 = getelementptr inbounds i8*, i8** %322, i64 3, !dbg !5536
  %324 = load i8*, i8** %323, align 8, !dbg !5536
  %325 = load i8**, i8*** %19, align 8, !dbg !5537
  %326 = getelementptr inbounds i8*, i8** %325, i64 4, !dbg !5537
  %327 = load i8*, i8** %326, align 8, !dbg !5537
  %328 = load i8**, i8*** %19, align 8, !dbg !5538
  %329 = getelementptr inbounds i8*, i8** %328, i64 5, !dbg !5538
  %330 = load i8*, i8** %329, align 8, !dbg !5538
  %331 = load i8**, i8*** %19, align 8, !dbg !5539
  %332 = getelementptr inbounds i8*, i8** %331, i64 6, !dbg !5539
  %333 = load i8*, i8** %332, align 8, !dbg !5539
  %334 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %311, i8* %312, i8* %315, i8* %318, i8* %321, i8* %324, i8* %327, i8* %330, i8* %333), !dbg !5540
  %335 = load i32, i32* @x.87
  %336 = load i32, i32* @y.88
  %337 = sub i32 %335, 1
  %338 = mul i32 %335, %337
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %340, %341
  br i1 %342, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %481, !dbg !5541

343:                                              ; preds = %originalBBpart212
  %344 = load i32, i32* @x.87
  %345 = load i32, i32* @y.88
  %346 = sub i32 %344, 1
  %347 = mul i32 %344, %346
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %349, %350
  br i1 %351, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %343, %originalBB46alteredBB
  %352 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5542
  %353 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.150, i64 0, i64 0)) #10, !dbg !5543
  %354 = load i8**, i8*** %19, align 8, !dbg !5544
  %355 = getelementptr inbounds i8*, i8** %354, i64 0, !dbg !5544
  %356 = load i8*, i8** %355, align 8, !dbg !5544
  %357 = load i8**, i8*** %19, align 8, !dbg !5545
  %358 = getelementptr inbounds i8*, i8** %357, i64 1, !dbg !5545
  %359 = load i8*, i8** %358, align 8, !dbg !5545
  %360 = load i8**, i8*** %19, align 8, !dbg !5546
  %361 = getelementptr inbounds i8*, i8** %360, i64 2, !dbg !5546
  %362 = load i8*, i8** %361, align 8, !dbg !5546
  %363 = load i8**, i8*** %19, align 8, !dbg !5547
  %364 = getelementptr inbounds i8*, i8** %363, i64 3, !dbg !5547
  %365 = load i8*, i8** %364, align 8, !dbg !5547
  %366 = load i8**, i8*** %19, align 8, !dbg !5548
  %367 = getelementptr inbounds i8*, i8** %366, i64 4, !dbg !5548
  %368 = load i8*, i8** %367, align 8, !dbg !5548
  %369 = load i8**, i8*** %19, align 8, !dbg !5549
  %370 = getelementptr inbounds i8*, i8** %369, i64 5, !dbg !5549
  %371 = load i8*, i8** %370, align 8, !dbg !5549
  %372 = load i8**, i8*** %19, align 8, !dbg !5550
  %373 = getelementptr inbounds i8*, i8** %372, i64 6, !dbg !5550
  %374 = load i8*, i8** %373, align 8, !dbg !5550
  %375 = load i8**, i8*** %19, align 8, !dbg !5551
  %376 = getelementptr inbounds i8*, i8** %375, i64 7, !dbg !5551
  %377 = load i8*, i8** %376, align 8, !dbg !5551
  %378 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %352, i8* %353, i8* %356, i8* %359, i8* %362, i8* %365, i8* %368, i8* %371, i8* %374, i8* %377), !dbg !5552
  %379 = load i32, i32* @x.87
  %380 = load i32, i32* @y.88
  %381 = sub i32 %379, 1
  %382 = mul i32 %379, %381
  %383 = urem i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %380, 10
  %386 = or i1 %384, %385
  br i1 %386, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %481, !dbg !5553

387:                                              ; preds = %originalBBpart212
  %388 = load i32, i32* @x.87
  %389 = load i32, i32* @y.88
  %390 = sub i32 %388, 1
  %391 = mul i32 %388, %390
  %392 = urem i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %393, %394
  br i1 %395, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %387, %originalBB50alteredBB
  %396 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5554
  %397 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.151, i64 0, i64 0)) #10, !dbg !5555
  %398 = load i8**, i8*** %19, align 8, !dbg !5556
  %399 = getelementptr inbounds i8*, i8** %398, i64 0, !dbg !5556
  %400 = load i8*, i8** %399, align 8, !dbg !5556
  %401 = load i8**, i8*** %19, align 8, !dbg !5557
  %402 = getelementptr inbounds i8*, i8** %401, i64 1, !dbg !5557
  %403 = load i8*, i8** %402, align 8, !dbg !5557
  %404 = load i8**, i8*** %19, align 8, !dbg !5558
  %405 = getelementptr inbounds i8*, i8** %404, i64 2, !dbg !5558
  %406 = load i8*, i8** %405, align 8, !dbg !5558
  %407 = load i8**, i8*** %19, align 8, !dbg !5559
  %408 = getelementptr inbounds i8*, i8** %407, i64 3, !dbg !5559
  %409 = load i8*, i8** %408, align 8, !dbg !5559
  %410 = load i8**, i8*** %19, align 8, !dbg !5560
  %411 = getelementptr inbounds i8*, i8** %410, i64 4, !dbg !5560
  %412 = load i8*, i8** %411, align 8, !dbg !5560
  %413 = load i8**, i8*** %19, align 8, !dbg !5561
  %414 = getelementptr inbounds i8*, i8** %413, i64 5, !dbg !5561
  %415 = load i8*, i8** %414, align 8, !dbg !5561
  %416 = load i8**, i8*** %19, align 8, !dbg !5562
  %417 = getelementptr inbounds i8*, i8** %416, i64 6, !dbg !5562
  %418 = load i8*, i8** %417, align 8, !dbg !5562
  %419 = load i8**, i8*** %19, align 8, !dbg !5563
  %420 = getelementptr inbounds i8*, i8** %419, i64 7, !dbg !5563
  %421 = load i8*, i8** %420, align 8, !dbg !5563
  %422 = load i8**, i8*** %19, align 8, !dbg !5564
  %423 = getelementptr inbounds i8*, i8** %422, i64 8, !dbg !5564
  %424 = load i8*, i8** %423, align 8, !dbg !5564
  %425 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %396, i8* %397, i8* %400, i8* %403, i8* %406, i8* %409, i8* %412, i8* %415, i8* %418, i8* %421, i8* %424), !dbg !5565
  %426 = load i32, i32* @x.87
  %427 = load i32, i32* @y.88
  %428 = sub i32 %426, 1
  %429 = mul i32 %426, %428
  %430 = urem i32 %429, 2
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %427, 10
  %433 = or i1 %431, %432
  br i1 %433, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %481, !dbg !5566

434:                                              ; preds = %originalBBpart212
  %435 = load i32, i32* @x.87
  %436 = load i32, i32* @y.88
  %437 = sub i32 %435, 1
  %438 = mul i32 %435, %437
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %440, %441
  br i1 %442, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %434, %originalBB54alteredBB
  %443 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5567
  %444 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.152, i64 0, i64 0)) #10, !dbg !5568
  %445 = load i8**, i8*** %19, align 8, !dbg !5569
  %446 = getelementptr inbounds i8*, i8** %445, i64 0, !dbg !5569
  %447 = load i8*, i8** %446, align 8, !dbg !5569
  %448 = load i8**, i8*** %19, align 8, !dbg !5570
  %449 = getelementptr inbounds i8*, i8** %448, i64 1, !dbg !5570
  %450 = load i8*, i8** %449, align 8, !dbg !5570
  %451 = load i8**, i8*** %19, align 8, !dbg !5571
  %452 = getelementptr inbounds i8*, i8** %451, i64 2, !dbg !5571
  %453 = load i8*, i8** %452, align 8, !dbg !5571
  %454 = load i8**, i8*** %19, align 8, !dbg !5572
  %455 = getelementptr inbounds i8*, i8** %454, i64 3, !dbg !5572
  %456 = load i8*, i8** %455, align 8, !dbg !5572
  %457 = load i8**, i8*** %19, align 8, !dbg !5573
  %458 = getelementptr inbounds i8*, i8** %457, i64 4, !dbg !5573
  %459 = load i8*, i8** %458, align 8, !dbg !5573
  %460 = load i8**, i8*** %19, align 8, !dbg !5574
  %461 = getelementptr inbounds i8*, i8** %460, i64 5, !dbg !5574
  %462 = load i8*, i8** %461, align 8, !dbg !5574
  %463 = load i8**, i8*** %19, align 8, !dbg !5575
  %464 = getelementptr inbounds i8*, i8** %463, i64 6, !dbg !5575
  %465 = load i8*, i8** %464, align 8, !dbg !5575
  %466 = load i8**, i8*** %19, align 8, !dbg !5576
  %467 = getelementptr inbounds i8*, i8** %466, i64 7, !dbg !5576
  %468 = load i8*, i8** %467, align 8, !dbg !5576
  %469 = load i8**, i8*** %19, align 8, !dbg !5577
  %470 = getelementptr inbounds i8*, i8** %469, i64 8, !dbg !5577
  %471 = load i8*, i8** %470, align 8, !dbg !5577
  %472 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %443, i8* %444, i8* %447, i8* %450, i8* %453, i8* %456, i8* %459, i8* %462, i8* %465, i8* %468, i8* %471), !dbg !5578
  %473 = load i32, i32* @x.87
  %474 = load i32, i32* @y.88
  %475 = sub i32 %473, 1
  %476 = mul i32 %473, %475
  %477 = urem i32 %476, 2
  %478 = icmp eq i32 %477, 0
  %479 = icmp slt i32 %474, 10
  %480 = or i1 %478, %479
  br i1 %480, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %481, !dbg !5579

481:                                              ; preds = %originalBBpart256, %originalBBpart252, %originalBBpart248, %originalBBpart244, %originalBBpart240, %originalBBpart236, %originalBBpart232, %originalBBpart228, %originalBBpart224, %originalBBpart220, %originalBBpart216
  ret void, !dbg !5580

originalBBalteredBB:                              ; preds = %originalBB, %6
  %482 = alloca %struct._IO_FILE*, align 8
  %483 = alloca i8*, align 8
  %484 = alloca i8*, align 8
  %485 = alloca i8*, align 8
  %486 = alloca i8**, align 8
  %487 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %482, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %482, metadata !5581, metadata !DIExpression()), !dbg !5451
  store i8* %1, i8** %483, align 8
  call void @llvm.dbg.declare(metadata i8** %483, metadata !5620, metadata !DIExpression()), !dbg !5453
  store i8* %2, i8** %484, align 8
  call void @llvm.dbg.declare(metadata i8** %484, metadata !5621, metadata !DIExpression()), !dbg !5455
  store i8* %3, i8** %485, align 8
  call void @llvm.dbg.declare(metadata i8** %485, metadata !5622, metadata !DIExpression()), !dbg !5457
  store i8** %4, i8*** %486, align 8
  call void @llvm.dbg.declare(metadata i8*** %486, metadata !5623, metadata !DIExpression()), !dbg !5459
  store i64 %5, i64* %487, align 8
  call void @llvm.dbg.declare(metadata i64* %487, metadata !5624, metadata !DIExpression()), !dbg !5461
  %488 = load i8*, i8** %483, align 8, !dbg !5462
  %489 = icmp ne i8* %488, null, !dbg !5462
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %490 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5465
  %491 = load i8*, i8** %16, align 8, !dbg !5466
  %492 = load i8*, i8** %17, align 8, !dbg !5467
  %493 = load i8*, i8** %18, align 8, !dbg !5468
  %494 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %490, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.137, i64 0, i64 0), i8* %491, i8* %492, i8* %493), !dbg !5469
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %53
  %495 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5470
  %496 = load i8*, i8** %17, align 8, !dbg !5471
  %497 = load i8*, i8** %18, align 8, !dbg !5472
  %498 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %495, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.138, i64 0, i64 0), i8* %496, i8* %497), !dbg !5473
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %74
  %499 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5474
  %500 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.139, i64 0, i64 0)) #10, !dbg !5475
  %501 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %499, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %500, i32 2020), !dbg !5476
  %502 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5477
  %503 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.140, i64 0, i64 0), %struct._IO_FILE* %502), !dbg !5477
  %504 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5478
  %505 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.141, i64 0, i64 0)) #10, !dbg !5479
  %506 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %504, i8* %505, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.142, i64 0, i64 0)), !dbg !5480
  %507 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5481
  %508 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.140, i64 0, i64 0), %struct._IO_FILE* %507), !dbg !5481
  %509 = load i64, i64* %20, align 8, !dbg !5482
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %102
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %119
  %510 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5486
  %511 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.143, i64 0, i64 0)) #10, !dbg !5487
  %512 = load i8**, i8*** %19, align 8, !dbg !5488
  %513 = getelementptr inbounds i8*, i8** %512, i64 0, !dbg !5488
  %514 = load i8*, i8** %513, align 8, !dbg !5488
  %515 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %510, i8* %511, i8* %514), !dbg !5489
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %142
  %516 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5491
  %517 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.144, i64 0, i64 0)) #10, !dbg !5492
  %518 = load i8**, i8*** %19, align 8, !dbg !5493
  %519 = getelementptr inbounds i8*, i8** %518, i64 0, !dbg !5493
  %520 = load i8*, i8** %519, align 8, !dbg !5493
  %521 = load i8**, i8*** %19, align 8, !dbg !5494
  %522 = getelementptr inbounds i8*, i8** %521, i64 1, !dbg !5494
  %523 = load i8*, i8** %522, align 8, !dbg !5494
  %524 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %516, i8* %517, i8* %520, i8* %523), !dbg !5495
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %168
  %525 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5497
  %526 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.145, i64 0, i64 0)) #10, !dbg !5498
  %527 = load i8**, i8*** %19, align 8, !dbg !5499
  %528 = getelementptr inbounds i8*, i8** %527, i64 0, !dbg !5499
  %529 = load i8*, i8** %528, align 8, !dbg !5499
  %530 = load i8**, i8*** %19, align 8, !dbg !5500
  %531 = getelementptr inbounds i8*, i8** %530, i64 1, !dbg !5500
  %532 = load i8*, i8** %531, align 8, !dbg !5500
  %533 = load i8**, i8*** %19, align 8, !dbg !5501
  %534 = getelementptr inbounds i8*, i8** %533, i64 2, !dbg !5501
  %535 = load i8*, i8** %534, align 8, !dbg !5501
  %536 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %525, i8* %526, i8* %529, i8* %532, i8* %535), !dbg !5502
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %197
  %537 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5504
  %538 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.146, i64 0, i64 0)) #10, !dbg !5505
  %539 = load i8**, i8*** %19, align 8, !dbg !5506
  %540 = getelementptr inbounds i8*, i8** %539, i64 0, !dbg !5506
  %541 = load i8*, i8** %540, align 8, !dbg !5506
  %542 = load i8**, i8*** %19, align 8, !dbg !5507
  %543 = getelementptr inbounds i8*, i8** %542, i64 1, !dbg !5507
  %544 = load i8*, i8** %543, align 8, !dbg !5507
  %545 = load i8**, i8*** %19, align 8, !dbg !5508
  %546 = getelementptr inbounds i8*, i8** %545, i64 2, !dbg !5508
  %547 = load i8*, i8** %546, align 8, !dbg !5508
  %548 = load i8**, i8*** %19, align 8, !dbg !5509
  %549 = getelementptr inbounds i8*, i8** %548, i64 3, !dbg !5509
  %550 = load i8*, i8** %549, align 8, !dbg !5509
  %551 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %537, i8* %538, i8* %541, i8* %544, i8* %547, i8* %550), !dbg !5510
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %229
  %552 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5512
  %553 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.147, i64 0, i64 0)) #10, !dbg !5513
  %554 = load i8**, i8*** %19, align 8, !dbg !5514
  %555 = getelementptr inbounds i8*, i8** %554, i64 0, !dbg !5514
  %556 = load i8*, i8** %555, align 8, !dbg !5514
  %557 = load i8**, i8*** %19, align 8, !dbg !5515
  %558 = getelementptr inbounds i8*, i8** %557, i64 1, !dbg !5515
  %559 = load i8*, i8** %558, align 8, !dbg !5515
  %560 = load i8**, i8*** %19, align 8, !dbg !5516
  %561 = getelementptr inbounds i8*, i8** %560, i64 2, !dbg !5516
  %562 = load i8*, i8** %561, align 8, !dbg !5516
  %563 = load i8**, i8*** %19, align 8, !dbg !5517
  %564 = getelementptr inbounds i8*, i8** %563, i64 3, !dbg !5517
  %565 = load i8*, i8** %564, align 8, !dbg !5517
  %566 = load i8**, i8*** %19, align 8, !dbg !5518
  %567 = getelementptr inbounds i8*, i8** %566, i64 4, !dbg !5518
  %568 = load i8*, i8** %567, align 8, !dbg !5518
  %569 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %552, i8* %553, i8* %556, i8* %559, i8* %562, i8* %565, i8* %568), !dbg !5519
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %264
  %570 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5521
  %571 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.148, i64 0, i64 0)) #10, !dbg !5522
  %572 = load i8**, i8*** %19, align 8, !dbg !5523
  %573 = getelementptr inbounds i8*, i8** %572, i64 0, !dbg !5523
  %574 = load i8*, i8** %573, align 8, !dbg !5523
  %575 = load i8**, i8*** %19, align 8, !dbg !5524
  %576 = getelementptr inbounds i8*, i8** %575, i64 1, !dbg !5524
  %577 = load i8*, i8** %576, align 8, !dbg !5524
  %578 = load i8**, i8*** %19, align 8, !dbg !5525
  %579 = getelementptr inbounds i8*, i8** %578, i64 2, !dbg !5525
  %580 = load i8*, i8** %579, align 8, !dbg !5525
  %581 = load i8**, i8*** %19, align 8, !dbg !5526
  %582 = getelementptr inbounds i8*, i8** %581, i64 3, !dbg !5526
  %583 = load i8*, i8** %582, align 8, !dbg !5526
  %584 = load i8**, i8*** %19, align 8, !dbg !5527
  %585 = getelementptr inbounds i8*, i8** %584, i64 4, !dbg !5527
  %586 = load i8*, i8** %585, align 8, !dbg !5527
  %587 = load i8**, i8*** %19, align 8, !dbg !5528
  %588 = getelementptr inbounds i8*, i8** %587, i64 5, !dbg !5528
  %589 = load i8*, i8** %588, align 8, !dbg !5528
  %590 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %570, i8* %571, i8* %574, i8* %577, i8* %580, i8* %583, i8* %586, i8* %589), !dbg !5529
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %302
  %591 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5531
  %592 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.149, i64 0, i64 0)) #10, !dbg !5532
  %593 = load i8**, i8*** %19, align 8, !dbg !5533
  %594 = getelementptr inbounds i8*, i8** %593, i64 0, !dbg !5533
  %595 = load i8*, i8** %594, align 8, !dbg !5533
  %596 = load i8**, i8*** %19, align 8, !dbg !5534
  %597 = getelementptr inbounds i8*, i8** %596, i64 1, !dbg !5534
  %598 = load i8*, i8** %597, align 8, !dbg !5534
  %599 = load i8**, i8*** %19, align 8, !dbg !5535
  %600 = getelementptr inbounds i8*, i8** %599, i64 2, !dbg !5535
  %601 = load i8*, i8** %600, align 8, !dbg !5535
  %602 = load i8**, i8*** %19, align 8, !dbg !5536
  %603 = getelementptr inbounds i8*, i8** %602, i64 3, !dbg !5536
  %604 = load i8*, i8** %603, align 8, !dbg !5536
  %605 = load i8**, i8*** %19, align 8, !dbg !5537
  %606 = getelementptr inbounds i8*, i8** %605, i64 4, !dbg !5537
  %607 = load i8*, i8** %606, align 8, !dbg !5537
  %608 = load i8**, i8*** %19, align 8, !dbg !5538
  %609 = getelementptr inbounds i8*, i8** %608, i64 5, !dbg !5538
  %610 = load i8*, i8** %609, align 8, !dbg !5538
  %611 = load i8**, i8*** %19, align 8, !dbg !5539
  %612 = getelementptr inbounds i8*, i8** %611, i64 6, !dbg !5539
  %613 = load i8*, i8** %612, align 8, !dbg !5539
  %614 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %591, i8* %592, i8* %595, i8* %598, i8* %601, i8* %604, i8* %607, i8* %610, i8* %613), !dbg !5540
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %343
  %615 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5542
  %616 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.150, i64 0, i64 0)) #10, !dbg !5543
  %617 = load i8**, i8*** %19, align 8, !dbg !5544
  %618 = getelementptr inbounds i8*, i8** %617, i64 0, !dbg !5544
  %619 = load i8*, i8** %618, align 8, !dbg !5544
  %620 = load i8**, i8*** %19, align 8, !dbg !5545
  %621 = getelementptr inbounds i8*, i8** %620, i64 1, !dbg !5545
  %622 = load i8*, i8** %621, align 8, !dbg !5545
  %623 = load i8**, i8*** %19, align 8, !dbg !5546
  %624 = getelementptr inbounds i8*, i8** %623, i64 2, !dbg !5546
  %625 = load i8*, i8** %624, align 8, !dbg !5546
  %626 = load i8**, i8*** %19, align 8, !dbg !5547
  %627 = getelementptr inbounds i8*, i8** %626, i64 3, !dbg !5547
  %628 = load i8*, i8** %627, align 8, !dbg !5547
  %629 = load i8**, i8*** %19, align 8, !dbg !5548
  %630 = getelementptr inbounds i8*, i8** %629, i64 4, !dbg !5548
  %631 = load i8*, i8** %630, align 8, !dbg !5548
  %632 = load i8**, i8*** %19, align 8, !dbg !5549
  %633 = getelementptr inbounds i8*, i8** %632, i64 5, !dbg !5549
  %634 = load i8*, i8** %633, align 8, !dbg !5549
  %635 = load i8**, i8*** %19, align 8, !dbg !5550
  %636 = getelementptr inbounds i8*, i8** %635, i64 6, !dbg !5550
  %637 = load i8*, i8** %636, align 8, !dbg !5550
  %638 = load i8**, i8*** %19, align 8, !dbg !5551
  %639 = getelementptr inbounds i8*, i8** %638, i64 7, !dbg !5551
  %640 = load i8*, i8** %639, align 8, !dbg !5551
  %641 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %615, i8* %616, i8* %619, i8* %622, i8* %625, i8* %628, i8* %631, i8* %634, i8* %637, i8* %640), !dbg !5552
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %387
  %642 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5554
  %643 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.151, i64 0, i64 0)) #10, !dbg !5555
  %644 = load i8**, i8*** %19, align 8, !dbg !5556
  %645 = getelementptr inbounds i8*, i8** %644, i64 0, !dbg !5556
  %646 = load i8*, i8** %645, align 8, !dbg !5556
  %647 = load i8**, i8*** %19, align 8, !dbg !5557
  %648 = getelementptr inbounds i8*, i8** %647, i64 1, !dbg !5557
  %649 = load i8*, i8** %648, align 8, !dbg !5557
  %650 = load i8**, i8*** %19, align 8, !dbg !5558
  %651 = getelementptr inbounds i8*, i8** %650, i64 2, !dbg !5558
  %652 = load i8*, i8** %651, align 8, !dbg !5558
  %653 = load i8**, i8*** %19, align 8, !dbg !5559
  %654 = getelementptr inbounds i8*, i8** %653, i64 3, !dbg !5559
  %655 = load i8*, i8** %654, align 8, !dbg !5559
  %656 = load i8**, i8*** %19, align 8, !dbg !5560
  %657 = getelementptr inbounds i8*, i8** %656, i64 4, !dbg !5560
  %658 = load i8*, i8** %657, align 8, !dbg !5560
  %659 = load i8**, i8*** %19, align 8, !dbg !5561
  %660 = getelementptr inbounds i8*, i8** %659, i64 5, !dbg !5561
  %661 = load i8*, i8** %660, align 8, !dbg !5561
  %662 = load i8**, i8*** %19, align 8, !dbg !5562
  %663 = getelementptr inbounds i8*, i8** %662, i64 6, !dbg !5562
  %664 = load i8*, i8** %663, align 8, !dbg !5562
  %665 = load i8**, i8*** %19, align 8, !dbg !5563
  %666 = getelementptr inbounds i8*, i8** %665, i64 7, !dbg !5563
  %667 = load i8*, i8** %666, align 8, !dbg !5563
  %668 = load i8**, i8*** %19, align 8, !dbg !5564
  %669 = getelementptr inbounds i8*, i8** %668, i64 8, !dbg !5564
  %670 = load i8*, i8** %669, align 8, !dbg !5564
  %671 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %642, i8* %643, i8* %646, i8* %649, i8* %652, i8* %655, i8* %658, i8* %661, i8* %664, i8* %667, i8* %670), !dbg !5565
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %434
  %672 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5567
  %673 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.152, i64 0, i64 0)) #10, !dbg !5568
  %674 = load i8**, i8*** %19, align 8, !dbg !5569
  %675 = getelementptr inbounds i8*, i8** %674, i64 0, !dbg !5569
  %676 = load i8*, i8** %675, align 8, !dbg !5569
  %677 = load i8**, i8*** %19, align 8, !dbg !5570
  %678 = getelementptr inbounds i8*, i8** %677, i64 1, !dbg !5570
  %679 = load i8*, i8** %678, align 8, !dbg !5570
  %680 = load i8**, i8*** %19, align 8, !dbg !5571
  %681 = getelementptr inbounds i8*, i8** %680, i64 2, !dbg !5571
  %682 = load i8*, i8** %681, align 8, !dbg !5571
  %683 = load i8**, i8*** %19, align 8, !dbg !5572
  %684 = getelementptr inbounds i8*, i8** %683, i64 3, !dbg !5572
  %685 = load i8*, i8** %684, align 8, !dbg !5572
  %686 = load i8**, i8*** %19, align 8, !dbg !5573
  %687 = getelementptr inbounds i8*, i8** %686, i64 4, !dbg !5573
  %688 = load i8*, i8** %687, align 8, !dbg !5573
  %689 = load i8**, i8*** %19, align 8, !dbg !5574
  %690 = getelementptr inbounds i8*, i8** %689, i64 5, !dbg !5574
  %691 = load i8*, i8** %690, align 8, !dbg !5574
  %692 = load i8**, i8*** %19, align 8, !dbg !5575
  %693 = getelementptr inbounds i8*, i8** %692, i64 6, !dbg !5575
  %694 = load i8*, i8** %693, align 8, !dbg !5575
  %695 = load i8**, i8*** %19, align 8, !dbg !5576
  %696 = getelementptr inbounds i8*, i8** %695, i64 7, !dbg !5576
  %697 = load i8*, i8** %696, align 8, !dbg !5576
  %698 = load i8**, i8*** %19, align 8, !dbg !5577
  %699 = getelementptr inbounds i8*, i8** %698, i64 8, !dbg !5577
  %700 = load i8*, i8** %699, align 8, !dbg !5577
  %701 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %672, i8* %673, i8* %676, i8* %679, i8* %682, i8* %685, i8* %688, i8* %691, i8* %694, i8* %697, i8* %700), !dbg !5578
  br label %originalBB54
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_va(%struct._IO_FILE*, i8*, i8*, i8*, %struct.__va_list_tag*) #4 !dbg !5625 {
  %6 = load i32, i32* @x.89
  %7 = load i32, i32* @y.90
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = alloca %struct._IO_FILE*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca %struct.__va_list_tag*, align 8
  %19 = alloca i64, align 8
  %20 = alloca [10 x i8*], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %14, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %14, metadata !5635, metadata !DIExpression()), !dbg !5636
  store i8* %1, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !5637, metadata !DIExpression()), !dbg !5638
  store i8* %2, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !5639, metadata !DIExpression()), !dbg !5640
  store i8* %3, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !5641, metadata !DIExpression()), !dbg !5642
  store %struct.__va_list_tag* %4, %struct.__va_list_tag** %18, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %18, metadata !5643, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.declare(metadata i64* %19, metadata !5645, metadata !DIExpression()), !dbg !5646
  call void @llvm.dbg.declare(metadata [10 x i8*]* %20, metadata !5647, metadata !DIExpression()), !dbg !5649
  store i64 0, i64* %19, align 8, !dbg !5650
  %21 = load i32, i32* @x.89
  %22 = load i32, i32* @y.90
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %29, !dbg !5652

29:                                               ; preds = %originalBBpart249, %originalBBpart2
  %30 = load i32, i32* @x.89
  %31 = load i32, i32* @y.90
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i64, i64* %19, align 8, !dbg !5653
  %39 = icmp ult i64 %38, 10, !dbg !5655
  %40 = load i32, i32* @x.89
  %41 = load i32, i32* @y.90
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %39, label %48, label %134, !dbg !5656

48:                                               ; preds = %originalBBpart24
  %49 = load i32, i32* @x.89
  %50 = load i32, i32* @y.90
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %48, %originalBB6alteredBB
  %57 = load %struct.__va_list_tag*, %struct.__va_list_tag** %18, align 8, !dbg !5657
  %58 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %57, i32 0, i32 0, !dbg !5657
  %59 = load i32, i32* %58, align 8, !dbg !5657
  %60 = icmp ule i32 %59, 40, !dbg !5657
  %61 = load i32, i32* @x.89
  %62 = load i32, i32* @y.90
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %60, label %69, label %91, !dbg !5657

69:                                               ; preds = %originalBBpart28
  %70 = load i32, i32* @x.89
  %71 = load i32, i32* @y.90
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %69, %originalBB10alteredBB
  %78 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %57, i32 0, i32 3, !dbg !5657
  %79 = load i8*, i8** %78, align 8, !dbg !5657
  %80 = getelementptr i8, i8* %79, i32 %59, !dbg !5657
  %81 = bitcast i8* %80 to i8**, !dbg !5657
  %82 = add i32 %59, 8, !dbg !5657
  store i32 %82, i32* %58, align 8, !dbg !5657
  %83 = load i32, i32* @x.89
  %84 = load i32, i32* @y.90
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart223, label %originalBB10alteredBB

originalBBpart223:                                ; preds = %originalBB10
  br label %112, !dbg !5657

91:                                               ; preds = %originalBBpart28
  %92 = load i32, i32* @x.89
  %93 = load i32, i32* @y.90
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %91, %originalBB25alteredBB
  %100 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %57, i32 0, i32 2, !dbg !5657
  %101 = load i8*, i8** %100, align 8, !dbg !5657
  %102 = bitcast i8* %101 to i8**, !dbg !5657
  %103 = getelementptr i8, i8* %101, i32 8, !dbg !5657
  store i8* %103, i8** %100, align 8, !dbg !5657
  %104 = load i32, i32* @x.89
  %105 = load i32, i32* @y.90
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  br label %112, !dbg !5657

112:                                              ; preds = %originalBBpart227, %originalBBpart223
  %113 = phi i8** [ %81, %originalBBpart223 ], [ %102, %originalBBpart227 ], !dbg !5657
  %114 = load i32, i32* @x.89
  %115 = load i32, i32* @y.90
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %112, %originalBB29alteredBB
  %122 = load i8*, i8** %113, align 8, !dbg !5657
  %123 = load i64, i64* %19, align 8, !dbg !5658
  %124 = getelementptr inbounds [10 x i8*], [10 x i8*]* %20, i64 0, i64 %123, !dbg !5659
  store i8* %122, i8** %124, align 8, !dbg !5660
  %125 = icmp ne i8* %122, null, !dbg !5661
  %126 = load i32, i32* @x.89
  %127 = load i32, i32* @y.90
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br label %134

134:                                              ; preds = %originalBBpart231, %originalBBpart24
  %135 = phi i1 [ false, %originalBBpart24 ], [ %125, %originalBBpart231 ], !dbg !5662
  %136 = load i32, i32* @x.89
  %137 = load i32, i32* @y.90
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %134, %originalBB33alteredBB
  %144 = load i32, i32* @x.89
  %145 = load i32, i32* @y.90
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br i1 %135, label %152, label %188, !dbg !5663

152:                                              ; preds = %originalBBpart235
  %153 = load i32, i32* @x.89
  %154 = load i32, i32* @y.90
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %152, %originalBB37alteredBB
  %161 = load i32, i32* @x.89
  %162 = load i32, i32* @y.90
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br label %169, !dbg !5663

169:                                              ; preds = %originalBBpart239
  %170 = load i32, i32* @x.89
  %171 = load i32, i32* @y.90
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %169, %originalBB41alteredBB
  %178 = load i64, i64* %19, align 8, !dbg !5664
  %179 = add i64 %178, 1, !dbg !5664
  store i64 %179, i64* %19, align 8, !dbg !5664
  %180 = load i32, i32* @x.89
  %181 = load i32, i32* @y.90
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBBpart249, label %originalBB41alteredBB

originalBBpart249:                                ; preds = %originalBB41
  br label %29, !dbg !5665, !llvm.loop !5666

188:                                              ; preds = %originalBBpart235
  %189 = load i32, i32* @x.89
  %190 = load i32, i32* @y.90
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %188, %originalBB51alteredBB
  %197 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8, !dbg !5668
  %198 = load i8*, i8** %15, align 8, !dbg !5669
  %199 = load i8*, i8** %16, align 8, !dbg !5670
  %200 = load i8*, i8** %17, align 8, !dbg !5671
  %201 = getelementptr inbounds [10 x i8*], [10 x i8*]* %20, i64 0, i64 0, !dbg !5672
  %202 = load i64, i64* %19, align 8, !dbg !5673
  call void @version_etc_arn(%struct._IO_FILE* %197, i8* %198, i8* %199, i8* %200, i8** %201, i64 %202), !dbg !5674
  %203 = load i32, i32* @x.89
  %204 = load i32, i32* @y.90
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  ret void, !dbg !5675

originalBBalteredBB:                              ; preds = %originalBB, %5
  %211 = alloca %struct._IO_FILE*, align 8
  %212 = alloca i8*, align 8
  %213 = alloca i8*, align 8
  %214 = alloca i8*, align 8
  %215 = alloca %struct.__va_list_tag*, align 8
  %216 = alloca i64, align 8
  %217 = alloca [10 x i8*], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %211, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %211, metadata !5676, metadata !DIExpression()), !dbg !5636
  store i8* %1, i8** %212, align 8
  call void @llvm.dbg.declare(metadata i8** %212, metadata !5722, metadata !DIExpression()), !dbg !5638
  store i8* %2, i8** %213, align 8
  call void @llvm.dbg.declare(metadata i8** %213, metadata !5723, metadata !DIExpression()), !dbg !5640
  store i8* %3, i8** %214, align 8
  call void @llvm.dbg.declare(metadata i8** %214, metadata !5724, metadata !DIExpression()), !dbg !5642
  store %struct.__va_list_tag* %4, %struct.__va_list_tag** %215, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %215, metadata !5725, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.declare(metadata i64* %216, metadata !5726, metadata !DIExpression()), !dbg !5646
  call void @llvm.dbg.declare(metadata [10 x i8*]* %217, metadata !5727, metadata !DIExpression()), !dbg !5649
  store i64 0, i64* %216, align 8, !dbg !5650
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %218 = load i64, i64* %19, align 8, !dbg !5653
  %219 = icmp ult i64 %218, 10, !dbg !5655
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  %220 = load %struct.__va_list_tag*, %struct.__va_list_tag** %18, align 8, !dbg !5657
  %221 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %220, i32 0, i32 0, !dbg !5657
  %222 = load i32, i32* %221, align 8, !dbg !5657
  %223 = icmp ule i32 %222, 40, !dbg !5657
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %69
  %224 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %57, i32 0, i32 3, !dbg !5657
  %225 = load i8*, i8** %224, align 8, !dbg !5657
  %226 = getelementptr i8, i8* %225, i32 %59, !dbg !5657
  %227 = bitcast i8* %226 to i8**, !dbg !5657
  %_ = shl i32 %59, 8
  %_11 = sub i32 %59, 8
  %gen = mul i32 %_11, 8
  %_12 = sub i32 %59, 8
  %gen13 = mul i32 %_12, 8
  %_14 = sub i32 %59, 8
  %gen15 = mul i32 %_14, 8
  %_16 = sub i32 %59, 8
  %gen17 = mul i32 %_16, 8
  %_18 = sub i32 %59, 8
  %gen19 = mul i32 %_18, 8
  %_20 = sub i32 0, %59
  %gen21 = add i32 %_20, 8
  %228 = add i32 %59, 8, !dbg !5657
  store i32 %228, i32* %58, align 8, !dbg !5657
  br label %originalBB10

originalBB25alteredBB:                            ; preds = %originalBB25, %91
  %229 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %57, i32 0, i32 2, !dbg !5657
  %230 = load i8*, i8** %229, align 8, !dbg !5657
  %231 = bitcast i8* %230 to i8**, !dbg !5657
  %232 = getelementptr i8, i8* %230, i32 8, !dbg !5657
  store i8* %232, i8** %229, align 8, !dbg !5657
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %112
  %233 = load i8*, i8** %113, align 8, !dbg !5657
  %234 = load i64, i64* %19, align 8, !dbg !5658
  %235 = getelementptr inbounds [10 x i8*], [10 x i8*]* %20, i64 0, i64 %234, !dbg !5659
  store i8* %233, i8** %235, align 8, !dbg !5660
  %236 = icmp ne i8* %233, null, !dbg !5661
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %134
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %152
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %169
  %237 = load i64, i64* %19, align 8, !dbg !5664
  %_42 = sub i64 0, %237
  %gen43 = add i64 %_42, 1
  %_44 = sub i64 0, %237
  %gen45 = add i64 %_44, 1
  %_46 = sub i64 %237, 1
  %gen47 = mul i64 %_46, 1
  %238 = add i64 %237, 1, !dbg !5664
  store i64 %238, i64* %19, align 8, !dbg !5664
  br label %originalBB41

originalBB51alteredBB:                            ; preds = %originalBB51, %188
  %239 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8, !dbg !5668
  %240 = load i8*, i8** %15, align 8, !dbg !5669
  %241 = load i8*, i8** %16, align 8, !dbg !5670
  %242 = load i8*, i8** %17, align 8, !dbg !5671
  %243 = getelementptr inbounds [10 x i8*], [10 x i8*]* %20, i64 0, i64 0, !dbg !5672
  %244 = load i64, i64* %19, align 8, !dbg !5673
  call void @version_etc_arn(%struct._IO_FILE* %239, i8* %240, i8* %241, i8* %242, i8** %243, i64 %244), !dbg !5674
  br label %originalBB51
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc(%struct._IO_FILE*, i8*, i8*, i8*, ...) #4 !dbg !5728 {
  %5 = load i32, i32* @x.91
  %6 = load i32, i32* @y.92
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %struct._IO_FILE*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %13, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %13, metadata !5731, metadata !DIExpression()), !dbg !5732
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !5733, metadata !DIExpression()), !dbg !5734
  store i8* %2, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !5735, metadata !DIExpression()), !dbg !5736
  store i8* %3, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !5737, metadata !DIExpression()), !dbg !5738
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %17, metadata !5739, metadata !DIExpression()), !dbg !5746
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %17, i64 0, i64 0, !dbg !5747
  %19 = bitcast %struct.__va_list_tag* %18 to i8*, !dbg !5747
  call void @llvm.va_start(i8* %19), !dbg !5747
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5748
  %21 = load i8*, i8** %14, align 8, !dbg !5749
  %22 = load i8*, i8** %15, align 8, !dbg !5750
  %23 = load i8*, i8** %16, align 8, !dbg !5751
  %24 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %17, i64 0, i64 0, !dbg !5752
  call void @version_etc_va(%struct._IO_FILE* %20, i8* %21, i8* %22, i8* %23, %struct.__va_list_tag* %24), !dbg !5753
  %25 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %17, i64 0, i64 0, !dbg !5754
  %26 = bitcast %struct.__va_list_tag* %25 to i8*, !dbg !5754
  call void @llvm.va_end(i8* %26), !dbg !5754
  %27 = load i32, i32* @x.91
  %28 = load i32, i32* @y.92
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !5755

originalBBalteredBB:                              ; preds = %originalBB, %4
  %35 = alloca %struct._IO_FILE*, align 8
  %36 = alloca i8*, align 8
  %37 = alloca i8*, align 8
  %38 = alloca i8*, align 8
  %39 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %35, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %35, metadata !5756, metadata !DIExpression()), !dbg !5732
  store i8* %1, i8** %36, align 8
  call void @llvm.dbg.declare(metadata i8** %36, metadata !5795, metadata !DIExpression()), !dbg !5734
  store i8* %2, i8** %37, align 8
  call void @llvm.dbg.declare(metadata i8** %37, metadata !5796, metadata !DIExpression()), !dbg !5736
  store i8* %3, i8** %38, align 8
  call void @llvm.dbg.declare(metadata i8** %38, metadata !5797, metadata !DIExpression()), !dbg !5738
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %39, metadata !5798, metadata !DIExpression()), !dbg !5746
  %40 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %39, i64 0, i64 0, !dbg !5747
  %41 = bitcast %struct.__va_list_tag* %40 to i8*, !dbg !5747
  call void @llvm.va_start(i8* %41), !dbg !5747
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** %35, align 8, !dbg !5748
  %43 = load i8*, i8** %36, align 8, !dbg !5749
  %44 = load i8*, i8** %37, align 8, !dbg !5750
  %45 = load i8*, i8** %38, align 8, !dbg !5751
  %46 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %39, i64 0, i64 0, !dbg !5752
  call void @version_etc_va(%struct._IO_FILE* %42, i8* %43, i8* %44, i8* %45, %struct.__va_list_tag* %46), !dbg !5753
  %47 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %39, i64 0, i64 0, !dbg !5754
  %48 = bitcast %struct.__va_list_tag* %47 to i8*, !dbg !5754
  call void @llvm.va_end(i8* %48), !dbg !5754
  br label %originalBB
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #10

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #10

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xmalloc(i64) #4 !dbg !5809 {
  %2 = load i32, i32* @x.93
  %3 = load i32, i32* @y.94
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  store i64 %0, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !5813, metadata !DIExpression()), !dbg !5814
  call void @llvm.dbg.declare(metadata i8** %11, metadata !5815, metadata !DIExpression()), !dbg !5816
  %12 = load i64, i64* %10, align 8, !dbg !5817
  %13 = call noalias i8* @malloc(i64 %12) #10, !dbg !5818
  store i8* %13, i8** %11, align 8, !dbg !5816
  %14 = load i8*, i8** %11, align 8, !dbg !5819
  %15 = icmp ne i8* %14, null, !dbg !5819
  %16 = load i32, i32* @x.93
  %17 = load i32, i32* @y.94
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %44, label %24, !dbg !5821

24:                                               ; preds = %originalBBpart2
  %25 = load i32, i32* @x.93
  %26 = load i32, i32* @y.94
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = load i64, i64* %10, align 8, !dbg !5822
  %34 = icmp ne i64 %33, 0, !dbg !5823
  %35 = load i32, i32* @x.93
  %36 = load i32, i32* @y.94
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %34, label %43, label %44, !dbg !5824

43:                                               ; preds = %originalBBpart24
  call void @xalloc_die() #14, !dbg !5825
  unreachable, !dbg !5825

44:                                               ; preds = %originalBBpart24, %originalBBpart2
  %45 = load i32, i32* @x.93
  %46 = load i32, i32* @y.94
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %44, %originalBB6alteredBB
  %53 = load i8*, i8** %11, align 8, !dbg !5826
  %54 = load i32, i32* @x.93
  %55 = load i32, i32* @y.94
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i8* %53, !dbg !5827

originalBBalteredBB:                              ; preds = %originalBB, %1
  %62 = alloca i64, align 8
  %63 = alloca i8*, align 8
  store i64 %0, i64* %62, align 8
  call void @llvm.dbg.declare(metadata i64* %62, metadata !5828, metadata !DIExpression()), !dbg !5814
  call void @llvm.dbg.declare(metadata i8** %63, metadata !5831, metadata !DIExpression()), !dbg !5816
  %64 = load i64, i64* %62, align 8, !dbg !5817
  %65 = call noalias i8* @malloc(i64 %64) #10, !dbg !5818
  store i8* %65, i8** %63, align 8, !dbg !5816
  %66 = load i8*, i8** %63, align 8, !dbg !5819
  %67 = icmp ne i8* %66, null, !dbg !5819
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %68 = load i64, i64* %10, align 8, !dbg !5822
  %69 = icmp ne i64 %68, 0, !dbg !5823
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %44
  %70 = load i8*, i8** %11, align 8, !dbg !5826
  br label %originalBB6
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xrealloc(i8*, i64) #4 !dbg !5832 {
  %3 = load i32, i32* @x.95
  %4 = load i32, i32* @y.96
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !5835, metadata !DIExpression()), !dbg !5836
  store i64 %1, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !5837, metadata !DIExpression()), !dbg !5838
  %14 = load i64, i64* %13, align 8, !dbg !5839
  %15 = icmp ne i64 %14, 0, !dbg !5839
  %16 = load i32, i32* @x.95
  %17 = load i32, i32* @y.96
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %45, label %24, !dbg !5841

24:                                               ; preds = %originalBBpart2
  %25 = load i32, i32* @x.95
  %26 = load i32, i32* @y.96
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = load i8*, i8** %12, align 8, !dbg !5842
  %34 = icmp ne i8* %33, null, !dbg !5842
  %35 = load i32, i32* @x.95
  %36 = load i32, i32* @y.96
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %34, label %43, label %45, !dbg !5843

43:                                               ; preds = %originalBBpart24
  %44 = load i8*, i8** %12, align 8, !dbg !5844
  call void @free(i8* %44) #10, !dbg !5846
  store i8* null, i8** %11, align 8, !dbg !5847
  br label %121, !dbg !5847

45:                                               ; preds = %originalBBpart24, %originalBBpart2
  %46 = load i32, i32* @x.95
  %47 = load i32, i32* @y.96
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %45, %originalBB6alteredBB
  %54 = load i8*, i8** %12, align 8, !dbg !5848
  %55 = load i64, i64* %13, align 8, !dbg !5849
  %56 = call i8* @realloc(i8* %54, i64 %55) #10, !dbg !5850
  store i8* %56, i8** %12, align 8, !dbg !5851
  %57 = load i8*, i8** %12, align 8, !dbg !5852
  %58 = icmp ne i8* %57, null, !dbg !5852
  %59 = load i32, i32* @x.95
  %60 = load i32, i32* @y.96
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %58, label %103, label %67, !dbg !5854

67:                                               ; preds = %originalBBpart28
  %68 = load i32, i32* @x.95
  %69 = load i32, i32* @y.96
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %67, %originalBB10alteredBB
  %76 = load i64, i64* %13, align 8, !dbg !5855
  %77 = icmp ne i64 %76, 0, !dbg !5855
  %78 = load i32, i32* @x.95
  %79 = load i32, i32* @y.96
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %77, label %86, label %103, !dbg !5856

86:                                               ; preds = %originalBBpart212
  %87 = load i32, i32* @x.95
  %88 = load i32, i32* @y.96
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %86, %originalBB14alteredBB
  call void @xalloc_die() #14, !dbg !5857
  %95 = load i32, i32* @x.95
  %96 = load i32, i32* @y.96
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  unreachable, !dbg !5857

103:                                              ; preds = %originalBBpart212, %originalBBpart28
  %104 = load i32, i32* @x.95
  %105 = load i32, i32* @y.96
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %103, %originalBB18alteredBB
  %112 = load i8*, i8** %12, align 8, !dbg !5858
  store i8* %112, i8** %11, align 8, !dbg !5859
  %113 = load i32, i32* @x.95
  %114 = load i32, i32* @y.96
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %121, !dbg !5859

121:                                              ; preds = %originalBBpart220, %43
  %122 = load i32, i32* @x.95
  %123 = load i32, i32* @y.96
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %121, %originalBB22alteredBB
  %130 = load i8*, i8** %11, align 8, !dbg !5860
  %131 = load i32, i32* @x.95
  %132 = load i32, i32* @y.96
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret i8* %130, !dbg !5860

originalBBalteredBB:                              ; preds = %originalBB, %2
  %139 = alloca i8*, align 8
  %140 = alloca i8*, align 8
  %141 = alloca i64, align 8
  store i8* %0, i8** %140, align 8
  call void @llvm.dbg.declare(metadata i8** %140, metadata !5861, metadata !DIExpression()), !dbg !5836
  store i64 %1, i64* %141, align 8
  call void @llvm.dbg.declare(metadata i64* %141, metadata !5864, metadata !DIExpression()), !dbg !5838
  %142 = load i64, i64* %141, align 8, !dbg !5839
  %143 = icmp ne i64 %142, 0, !dbg !5839
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %144 = load i8*, i8** %12, align 8, !dbg !5842
  %145 = icmp ne i8* %144, null, !dbg !5842
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %45
  %146 = load i8*, i8** %12, align 8, !dbg !5848
  %147 = load i64, i64* %13, align 8, !dbg !5849
  %148 = call i8* @realloc(i8* %146, i64 %147) #10, !dbg !5850
  store i8* %148, i8** %12, align 8, !dbg !5851
  %149 = load i8*, i8** %12, align 8, !dbg !5852
  %150 = icmp ne i8* %149, null, !dbg !5852
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %67
  %151 = load i64, i64* %13, align 8, !dbg !5855
  %152 = icmp ne i64 %151, 0, !dbg !5855
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %86
  call void @xalloc_die() #14, !dbg !5857
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %103
  %153 = load i8*, i8** %12, align 8, !dbg !5858
  store i8* %153, i8** %11, align 8, !dbg !5859
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %121
  %154 = load i8*, i8** %11, align 8, !dbg !5860
  br label %originalBB22
}

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @x2nrealloc(i8*, i64*, i64) #4 !dbg !5865 {
  %4 = load i32, i32* @x.97
  %5 = load i32, i32* @y.98
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i8*, align 8
  %13 = alloca i64*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !5870, metadata !DIExpression()), !dbg !5871
  store i64* %1, i64** %13, align 8
  call void @llvm.dbg.declare(metadata i64** %13, metadata !5872, metadata !DIExpression()), !dbg !5873
  store i64 %2, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !5874, metadata !DIExpression()), !dbg !5875
  call void @llvm.dbg.declare(metadata i64* %15, metadata !5876, metadata !DIExpression()), !dbg !5877
  %16 = load i64*, i64** %13, align 8, !dbg !5878
  %17 = load i64, i64* %16, align 8, !dbg !5879
  store i64 %17, i64* %15, align 8, !dbg !5877
  %18 = load i8*, i8** %12, align 8, !dbg !5880
  %19 = icmp ne i8* %18, null, !dbg !5880
  %20 = load i32, i32* @x.97
  %21 = load i32, i32* @y.98
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %80, label %28, !dbg !5882

28:                                               ; preds = %originalBBpart2
  %29 = load i64, i64* %15, align 8, !dbg !5883
  %30 = icmp ne i64 %29, 0, !dbg !5883
  br i1 %30, label %57, label %31, !dbg !5886

31:                                               ; preds = %28
  %32 = load i32, i32* @x.97
  %33 = load i32, i32* @y.98
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load i64, i64* %14, align 8, !dbg !5887
  %41 = udiv i64 128, %40, !dbg !5889
  store i64 %41, i64* %15, align 8, !dbg !5890
  %42 = load i64, i64* %15, align 8, !dbg !5891
  %43 = icmp ne i64 %42, 0, !dbg !5892
  %44 = xor i1 %43, true, !dbg !5892
  %45 = zext i1 %44 to i32, !dbg !5892
  %46 = sext i32 %45 to i64, !dbg !5892
  %47 = load i64, i64* %15, align 8, !dbg !5893
  %48 = add i64 %47, %46, !dbg !5893
  store i64 %48, i64* %15, align 8, !dbg !5893
  %49 = load i32, i32* @x.97
  %50 = load i32, i32* @y.98
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart226, label %originalBB1alteredBB

originalBBpart226:                                ; preds = %originalBB1
  br label %57, !dbg !5894

57:                                               ; preds = %originalBBpart226, %28
  %58 = load i64, i64* %14, align 8, !dbg !5895
  %59 = udiv i64 9223372036854775807, %58, !dbg !5895
  %60 = load i64, i64* %15, align 8, !dbg !5895
  %61 = icmp ult i64 %59, %60, !dbg !5895
  br i1 %61, label %62, label %63, !dbg !5897

62:                                               ; preds = %57
  call void @xalloc_die() #14, !dbg !5898
  unreachable, !dbg !5898

63:                                               ; preds = %57
  %64 = load i32, i32* @x.97
  %65 = load i32, i32* @y.98
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB28, label %originalBB28alteredBB

originalBB28:                                     ; preds = %63, %originalBB28alteredBB
  %72 = load i32, i32* @x.97
  %73 = load i32, i32* @y.98
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart230, label %originalBB28alteredBB

originalBBpart230:                                ; preds = %originalBB28
  br label %140, !dbg !5899

80:                                               ; preds = %originalBBpart2
  %81 = load i32, i32* @x.97
  %82 = load i32, i32* @y.98
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB32, label %originalBB32alteredBB

originalBB32:                                     ; preds = %80, %originalBB32alteredBB
  %89 = load i64, i64* %14, align 8, !dbg !5900
  %90 = udiv i64 6148914691236517204, %89, !dbg !5903
  %91 = load i64, i64* %15, align 8, !dbg !5904
  %92 = icmp ule i64 %90, %91, !dbg !5905
  %93 = load i32, i32* @x.97
  %94 = load i32, i32* @y.98
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart239, label %originalBB32alteredBB

originalBBpart239:                                ; preds = %originalBB32
  br i1 %92, label %101, label %118, !dbg !5906

101:                                              ; preds = %originalBBpart239
  %102 = load i32, i32* @x.97
  %103 = load i32, i32* @y.98
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %101, %originalBB41alteredBB
  call void @xalloc_die() #14, !dbg !5907
  %110 = load i32, i32* @x.97
  %111 = load i32, i32* @y.98
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  unreachable, !dbg !5907

118:                                              ; preds = %originalBBpart239
  %119 = load i32, i32* @x.97
  %120 = load i32, i32* @y.98
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %118, %originalBB45alteredBB
  %127 = load i64, i64* %15, align 8, !dbg !5908
  %128 = udiv i64 %127, 2, !dbg !5909
  %129 = add i64 %128, 1, !dbg !5910
  %130 = load i64, i64* %15, align 8, !dbg !5911
  %131 = add i64 %130, %129, !dbg !5911
  store i64 %131, i64* %15, align 8, !dbg !5911
  %132 = load i32, i32* @x.97
  %133 = load i32, i32* @y.98
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBBpart265, label %originalBB45alteredBB

originalBBpart265:                                ; preds = %originalBB45
  br label %140

140:                                              ; preds = %originalBBpart265, %originalBBpart230
  %141 = load i32, i32* @x.97
  %142 = load i32, i32* @y.98
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %140, %originalBB67alteredBB
  %149 = load i64, i64* %15, align 8, !dbg !5912
  %150 = load i64*, i64** %13, align 8, !dbg !5913
  store i64 %149, i64* %150, align 8, !dbg !5914
  %151 = load i8*, i8** %12, align 8, !dbg !5915
  %152 = load i64, i64* %15, align 8, !dbg !5916
  %153 = load i64, i64* %14, align 8, !dbg !5917
  %154 = mul i64 %152, %153, !dbg !5918
  %155 = call i8* @xrealloc(i8* %151, i64 %154), !dbg !5919
  %156 = load i32, i32* @x.97
  %157 = load i32, i32* @y.98
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBBpart275, label %originalBB67alteredBB

originalBBpart275:                                ; preds = %originalBB67
  ret i8* %155, !dbg !5920

originalBBalteredBB:                              ; preds = %originalBB, %3
  %164 = alloca i8*, align 8
  %165 = alloca i64*, align 8
  %166 = alloca i64, align 8
  %167 = alloca i64, align 8
  store i8* %0, i8** %164, align 8
  call void @llvm.dbg.declare(metadata i8** %164, metadata !5921, metadata !DIExpression()), !dbg !5871
  store i64* %1, i64** %165, align 8
  call void @llvm.dbg.declare(metadata i64** %165, metadata !5924, metadata !DIExpression()), !dbg !5873
  store i64 %2, i64* %166, align 8
  call void @llvm.dbg.declare(metadata i64* %166, metadata !5925, metadata !DIExpression()), !dbg !5875
  call void @llvm.dbg.declare(metadata i64* %167, metadata !5926, metadata !DIExpression()), !dbg !5877
  %168 = load i64*, i64** %165, align 8, !dbg !5878
  %169 = load i64, i64* %168, align 8, !dbg !5879
  store i64 %169, i64* %167, align 8, !dbg !5877
  %170 = load i8*, i8** %164, align 8, !dbg !5880
  %171 = icmp ne i8* %170, null, !dbg !5880
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %172 = load i64, i64* %14, align 8, !dbg !5887
  %_ = sub i64 0, 128
  %gen = add i64 %_, %172
  %_2 = sub i64 0, 128
  %gen3 = add i64 %_2, %172
  %_4 = shl i64 128, %172
  %_5 = sub i64 128, %172
  %gen6 = mul i64 %_5, %172
  %_7 = sub i64 128, %172
  %gen8 = mul i64 %_7, %172
  %_9 = shl i64 128, %172
  %_10 = sub i64 128, %172
  %gen11 = mul i64 %_10, %172
  %_12 = sub i64 128, %172
  %gen13 = mul i64 %_12, %172
  %_14 = shl i64 128, %172
  %_15 = sub i64 0, 128
  %gen16 = add i64 %_15, %172
  %173 = udiv i64 128, %172, !dbg !5889
  store i64 %173, i64* %15, align 8, !dbg !5890
  %174 = load i64, i64* %15, align 8, !dbg !5891
  %175 = icmp ne i64 %174, 0, !dbg !5892
  %_17 = sub i1 false, %175
  %gen18 = add i1 %_17, true
  %_19 = shl i1 %175, true
  %_20 = sub i1 false, %175
  %gen21 = add i1 %_20, true
  %176 = xor i1 %175, true, !dbg !5892
  %177 = zext i1 %176 to i32, !dbg !5892
  %178 = sext i32 %177 to i64, !dbg !5892
  %179 = load i64, i64* %15, align 8, !dbg !5893
  %_22 = shl i64 %179, %178
  %_23 = sub i64 0, %179
  %gen24 = add i64 %_23, %178
  %180 = add i64 %179, %178, !dbg !5893
  store i64 %180, i64* %15, align 8, !dbg !5893
  br label %originalBB1

originalBB28alteredBB:                            ; preds = %originalBB28, %63
  br label %originalBB28

originalBB32alteredBB:                            ; preds = %originalBB32, %80
  %181 = load i64, i64* %14, align 8, !dbg !5900
  %_33 = sub i64 0, 6148914691236517204
  %gen34 = add i64 %_33, %181
  %_35 = shl i64 6148914691236517204, %181
  %_36 = shl i64 6148914691236517204, %181
  %_37 = shl i64 6148914691236517204, %181
  %182 = udiv i64 6148914691236517204, %181, !dbg !5903
  %183 = load i64, i64* %15, align 8, !dbg !5904
  %184 = icmp ule i64 %182, %183, !dbg !5905
  br label %originalBB32

originalBB41alteredBB:                            ; preds = %originalBB41, %101
  call void @xalloc_die() #14, !dbg !5907
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %118
  %185 = load i64, i64* %15, align 8, !dbg !5908
  %_46 = shl i64 %185, 2
  %_47 = sub i64 0, %185
  %gen48 = add i64 %_47, 2
  %_49 = sub i64 0, %185
  %gen50 = add i64 %_49, 2
  %_51 = sub i64 %185, 2
  %gen52 = mul i64 %_51, 2
  %_53 = sub i64 %185, 2
  %gen54 = mul i64 %_53, 2
  %_55 = sub i64 0, %185
  %gen56 = add i64 %_55, 2
  %186 = udiv i64 %185, 2, !dbg !5909
  %_57 = sub i64 %186, 1
  %gen58 = mul i64 %_57, 1
  %_59 = shl i64 %186, 1
  %_60 = sub i64 0, %186
  %gen61 = add i64 %_60, 1
  %187 = add i64 %186, 1, !dbg !5910
  %188 = load i64, i64* %15, align 8, !dbg !5911
  %_62 = sub i64 %188, %187
  %gen63 = mul i64 %_62, %187
  %189 = add i64 %188, %187, !dbg !5911
  store i64 %189, i64* %15, align 8, !dbg !5911
  br label %originalBB45

originalBB67alteredBB:                            ; preds = %originalBB67, %140
  %190 = load i64, i64* %15, align 8, !dbg !5912
  %191 = load i64*, i64** %13, align 8, !dbg !5913
  store i64 %190, i64* %191, align 8, !dbg !5914
  %192 = load i8*, i8** %12, align 8, !dbg !5915
  %193 = load i64, i64* %15, align 8, !dbg !5916
  %194 = load i64, i64* %14, align 8, !dbg !5917
  %_68 = sub i64 0, %193
  %gen69 = add i64 %_68, %194
  %_70 = sub i64 %193, %194
  %gen71 = mul i64 %_70, %194
  %_72 = sub i64 0, %193
  %gen73 = add i64 %_72, %194
  %195 = mul i64 %193, %194, !dbg !5918
  %196 = call i8* @xrealloc(i8* %192, i64 %195), !dbg !5919
  br label %originalBB67
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xcharalloc(i64) #4 !dbg !5927 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !5930, metadata !DIExpression()), !dbg !5931
  %3 = load i64, i64* %2, align 8, !dbg !5932
  %4 = call noalias i8* @xmalloc(i64 %3), !dbg !5932
  ret i8* %4, !dbg !5933
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @xalloc_die() #0 !dbg !5934 {
  %1 = load i32, i32* @x.101
  %2 = load i32, i32* @y.102
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = load volatile i32, i32* @exit_failure, align 4, !dbg !5936
  %10 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.165, i64 0, i64 0)) #10, !dbg !5937
  call void (i32, i32, i8*, ...) @error(i32 %9, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.166, i64 0, i64 0), i8* %10), !dbg !5938
  call void @abort() #12, !dbg !5939
  %11 = load i32, i32* @x.101
  %12 = load i32, i32* @y.102
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable, !dbg !5939

originalBBalteredBB:                              ; preds = %originalBB, %0
  %19 = load volatile i32, i32* @exit_failure, align 4, !dbg !5936
  %20 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.165, i64 0, i64 0)) #10, !dbg !5937
  call void (i32, i32, i8*, ...) @error(i32 %19, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.166, i64 0, i64 0), i8* %20), !dbg !5938
  call void @abort() #12, !dbg !5939
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @rpl_mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #4 !dbg !5940 {
  %5 = load i32, i32* @x.103
  %6 = load i32, i32* @y.104
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca i64, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i64, align 8
  %17 = alloca %struct.__mbstate_t*, align 8
  %18 = alloca i64, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  store i32* %0, i32** %14, align 8
  call void @llvm.dbg.declare(metadata i32** %14, metadata !5956, metadata !DIExpression()), !dbg !5957
  store i8* %1, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !5958, metadata !DIExpression()), !dbg !5959
  store i64 %2, i64* %16, align 8
  call void @llvm.dbg.declare(metadata i64* %16, metadata !5960, metadata !DIExpression()), !dbg !5961
  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %17, align 8
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %17, metadata !5962, metadata !DIExpression()), !dbg !5963
  call void @llvm.dbg.declare(metadata i64* %18, metadata !5964, metadata !DIExpression()), !dbg !5965
  call void @llvm.dbg.declare(metadata i32* %19, metadata !5966, metadata !DIExpression()), !dbg !5967
  %21 = load i32*, i32** %14, align 8, !dbg !5968
  %22 = icmp ne i32* %21, null, !dbg !5968
  %23 = load i32, i32* @x.103
  %24 = load i32, i32* @y.104
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %48, label %31, !dbg !5970

31:                                               ; preds = %originalBBpart2
  %32 = load i32, i32* @x.103
  %33 = load i32, i32* @y.104
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  store i32* %19, i32** %14, align 8, !dbg !5971
  %40 = load i32, i32* @x.103
  %41 = load i32, i32* @y.104
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %48, !dbg !5972

48:                                               ; preds = %originalBBpart24, %originalBBpart2
  %49 = load i32, i32* @x.103
  %50 = load i32, i32* @y.104
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %48, %originalBB6alteredBB
  %57 = load i32*, i32** %14, align 8, !dbg !5973
  %58 = load i8*, i8** %15, align 8, !dbg !5974
  %59 = load i64, i64* %16, align 8, !dbg !5975
  %60 = load %struct.__mbstate_t*, %struct.__mbstate_t** %17, align 8, !dbg !5976
  %61 = call i64 @mbrtowc(i32* %57, i8* %58, i64 %59, %struct.__mbstate_t* %60) #10, !dbg !5977
  store i64 %61, i64* %18, align 8, !dbg !5978
  %62 = load i64, i64* %18, align 8, !dbg !5979
  %63 = icmp ule i64 -2, %62, !dbg !5981
  %64 = load i32, i32* @x.103
  %65 = load i32, i32* @y.104
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %63, label %72, label %131, !dbg !5982

72:                                               ; preds = %originalBBpart28
  %73 = load i32, i32* @x.103
  %74 = load i32, i32* @y.104
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %72, %originalBB10alteredBB
  %81 = load i64, i64* %16, align 8, !dbg !5983
  %82 = icmp ne i64 %81, 0, !dbg !5984
  %83 = load i32, i32* @x.103
  %84 = load i32, i32* @y.104
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %82, label %91, label %131, !dbg !5985

91:                                               ; preds = %originalBBpart212
  %92 = load i32, i32* @x.103
  %93 = load i32, i32* @y.104
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %91, %originalBB14alteredBB
  %100 = call zeroext i1 @hard_locale(i32 0), !dbg !5986
  %101 = load i32, i32* @x.103
  %102 = load i32, i32* @y.104
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %100, label %131, label %109, !dbg !5987

109:                                              ; preds = %originalBBpart216
  call void @llvm.dbg.declare(metadata i8* %20, metadata !5988, metadata !DIExpression()), !dbg !5990
  %110 = load i32, i32* @x.103
  %111 = load i32, i32* @y.104
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %109, %originalBB18alteredBB
  %118 = load i8*, i8** %15, align 8, !dbg !5991
  %119 = load i8, i8* %118, align 1, !dbg !5992
  store i8 %119, i8* %20, align 1, !dbg !5990
  %120 = load i8, i8* %20, align 1, !dbg !5993
  %121 = zext i8 %120 to i32, !dbg !5993
  %122 = load i32*, i32** %14, align 8, !dbg !5994
  store i32 %121, i32* %122, align 4, !dbg !5995
  store i64 1, i64* %13, align 8, !dbg !5996
  %123 = load i32, i32* @x.103
  %124 = load i32, i32* @y.104
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %149, !dbg !5996

131:                                              ; preds = %originalBBpart216, %originalBBpart212, %originalBBpart28
  %132 = load i32, i32* @x.103
  %133 = load i32, i32* @y.104
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %131, %originalBB22alteredBB
  %140 = load i64, i64* %18, align 8, !dbg !5997
  store i64 %140, i64* %13, align 8, !dbg !5998
  %141 = load i32, i32* @x.103
  %142 = load i32, i32* @y.104
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %149, !dbg !5998

149:                                              ; preds = %originalBBpart224, %originalBBpart220
  %150 = load i32, i32* @x.103
  %151 = load i32, i32* @y.104
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %149, %originalBB26alteredBB
  %158 = load i64, i64* %13, align 8, !dbg !5999
  %159 = load i32, i32* @x.103
  %160 = load i32, i32* @y.104
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  ret i64 %158, !dbg !5999

originalBBalteredBB:                              ; preds = %originalBB, %4
  %167 = alloca i64, align 8
  %168 = alloca i32*, align 8
  %169 = alloca i8*, align 8
  %170 = alloca i64, align 8
  %171 = alloca %struct.__mbstate_t*, align 8
  %172 = alloca i64, align 8
  %173 = alloca i32, align 4
  %174 = alloca i8, align 1
  store i32* %0, i32** %168, align 8
  call void @llvm.dbg.declare(metadata i32** %168, metadata !6000, metadata !DIExpression()), !dbg !5957
  store i8* %1, i8** %169, align 8
  call void @llvm.dbg.declare(metadata i8** %169, metadata !6016, metadata !DIExpression()), !dbg !5959
  store i64 %2, i64* %170, align 8
  call void @llvm.dbg.declare(metadata i64* %170, metadata !6017, metadata !DIExpression()), !dbg !5961
  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %171, align 8
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %171, metadata !6018, metadata !DIExpression()), !dbg !5963
  call void @llvm.dbg.declare(metadata i64* %172, metadata !6019, metadata !DIExpression()), !dbg !5965
  call void @llvm.dbg.declare(metadata i32* %173, metadata !6020, metadata !DIExpression()), !dbg !5967
  %175 = load i32*, i32** %168, align 8, !dbg !5968
  %176 = icmp ne i32* %175, null, !dbg !5968
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  store i32* %19, i32** %14, align 8, !dbg !5971
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  %177 = load i32*, i32** %14, align 8, !dbg !5973
  %178 = load i8*, i8** %15, align 8, !dbg !5974
  %179 = load i64, i64* %16, align 8, !dbg !5975
  %180 = load %struct.__mbstate_t*, %struct.__mbstate_t** %17, align 8, !dbg !5976
  %181 = call i64 @mbrtowc(i32* %177, i8* %178, i64 %179, %struct.__mbstate_t* %180) #10, !dbg !5977
  store i64 %181, i64* %18, align 8, !dbg !5978
  %182 = load i64, i64* %18, align 8, !dbg !5979
  %183 = icmp ule i64 -2, %182, !dbg !5981
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %72
  %184 = load i64, i64* %16, align 8, !dbg !5983
  %185 = icmp ne i64 %184, 0, !dbg !5984
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %91
  %186 = call zeroext i1 @hard_locale(i32 0), !dbg !5986
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %109
  %187 = load i8*, i8** %15, align 8, !dbg !5991
  %188 = load i8, i8* %187, align 1, !dbg !5992
  store i8 %188, i8* %20, align 1, !dbg !5990
  %189 = load i8, i8* %20, align 1, !dbg !5993
  %190 = zext i8 %189 to i32, !dbg !5993
  %191 = load i32*, i32** %14, align 8, !dbg !5994
  store i32 %190, i32* %191, align 4, !dbg !5995
  store i64 1, i64* %13, align 8, !dbg !5996
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %131
  %192 = load i64, i64* %18, align 8, !dbg !5997
  store i64 %192, i64* %13, align 8, !dbg !5998
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %149
  %193 = load i64, i64* %13, align 8, !dbg !5999
  br label %originalBB26
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @extract_trimmed_name(%struct.utmpx*) #4 !dbg !6021 {
  %2 = load i32, i32* @x.105
  %3 = load i32, i32* @y.106
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !6049, metadata !DIExpression()), !dbg !6050
  call void @llvm.dbg.declare(metadata i8** %11, metadata !6051, metadata !DIExpression()), !dbg !6052
  call void @llvm.dbg.declare(metadata i8** %12, metadata !6053, metadata !DIExpression()), !dbg !6054
  %13 = call noalias i8* @xmalloc(i64 33), !dbg !6055
  store i8* %13, i8** %12, align 8, !dbg !6056
  %14 = load i8*, i8** %12, align 8, !dbg !6057
  %15 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !6058
  %16 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %15, i32 0, i32 4, !dbg !6058
  %17 = getelementptr inbounds [32 x i8], [32 x i8]* %16, i64 0, i64 0, !dbg !6058
  %18 = call i8* @strncpy(i8* %14, i8* %17, i64 32) #10, !dbg !6059
  %19 = load i8*, i8** %12, align 8, !dbg !6060
  %20 = getelementptr inbounds i8, i8* %19, i64 32, !dbg !6060
  store i8 0, i8* %20, align 1, !dbg !6061
  %21 = load i8*, i8** %12, align 8, !dbg !6062
  %22 = load i8*, i8** %12, align 8, !dbg !6064
  %23 = call i64 @strlen(i8* %22) #13, !dbg !6065
  %24 = getelementptr inbounds i8, i8* %21, i64 %23, !dbg !6066
  store i8* %24, i8** %11, align 8, !dbg !6067
  %25 = load i32, i32* @x.105
  %26 = load i32, i32* @y.106
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %33, !dbg !6068

33:                                               ; preds = %originalBBpart216, %originalBBpart2
  %34 = load i32, i32* @x.105
  %35 = load i32, i32* @y.106
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %33, %originalBB1alteredBB
  %42 = load i8*, i8** %12, align 8, !dbg !6069
  %43 = load i8*, i8** %11, align 8, !dbg !6071
  %44 = icmp ult i8* %42, %43, !dbg !6072
  %45 = load i32, i32* @x.105
  %46 = load i32, i32* @y.106
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %44, label %53, label %59, !dbg !6073

53:                                               ; preds = %originalBBpart24
  %54 = load i8*, i8** %11, align 8, !dbg !6074
  %55 = getelementptr inbounds i8, i8* %54, i64 -1, !dbg !6074
  %56 = load i8, i8* %55, align 1, !dbg !6074
  %57 = sext i8 %56 to i32, !dbg !6074
  %58 = icmp eq i32 %57, 32, !dbg !6075
  br label %59

59:                                               ; preds = %53, %originalBBpart24
  %60 = phi i1 [ false, %originalBBpart24 ], [ %58, %53 ], !dbg !6076
  %61 = load i32, i32* @x.105
  %62 = load i32, i32* @y.106
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %59, %originalBB6alteredBB
  %69 = load i32, i32* @x.105
  %70 = load i32, i32* @y.106
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %60, label %77, label %113, !dbg !6077

77:                                               ; preds = %originalBBpart28
  %78 = load i32, i32* @x.105
  %79 = load i32, i32* @y.106
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %77, %originalBB10alteredBB
  %86 = load i32, i32* @x.105
  %87 = load i32, i32* @y.106
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %94, !dbg !6078

94:                                               ; preds = %originalBBpart212
  %95 = load i32, i32* @x.105
  %96 = load i32, i32* @y.106
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %94, %originalBB14alteredBB
  %103 = load i8*, i8** %11, align 8, !dbg !6079
  %104 = getelementptr inbounds i8, i8* %103, i32 -1, !dbg !6079
  store i8* %104, i8** %11, align 8, !dbg !6079
  store i8 0, i8* %104, align 1, !dbg !6080
  %105 = load i32, i32* @x.105
  %106 = load i32, i32* @y.106
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %33, !dbg !6081, !llvm.loop !6082

113:                                              ; preds = %originalBBpart28
  %114 = load i8*, i8** %12, align 8, !dbg !6084
  ret i8* %114, !dbg !6085

originalBBalteredBB:                              ; preds = %originalBB, %1
  %115 = alloca %struct.utmpx*, align 8
  %116 = alloca i8*, align 8
  %117 = alloca i8*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %115, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %115, metadata !6086, metadata !DIExpression()), !dbg !6050
  call void @llvm.dbg.declare(metadata i8** %116, metadata !6115, metadata !DIExpression()), !dbg !6052
  call void @llvm.dbg.declare(metadata i8** %117, metadata !6116, metadata !DIExpression()), !dbg !6054
  %118 = call noalias i8* @xmalloc(i64 33), !dbg !6055
  store i8* %118, i8** %117, align 8, !dbg !6056
  %119 = load i8*, i8** %117, align 8, !dbg !6057
  %120 = load %struct.utmpx*, %struct.utmpx** %115, align 8, !dbg !6058
  %121 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %120, i32 0, i32 4, !dbg !6058
  %122 = getelementptr inbounds [32 x i8], [32 x i8]* %121, i64 0, i64 0, !dbg !6058
  %123 = call i8* @strncpy(i8* %119, i8* %122, i64 32) #10, !dbg !6059
  %124 = load i8*, i8** %117, align 8, !dbg !6060
  %125 = getelementptr inbounds i8, i8* %124, i64 32, !dbg !6060
  store i8 0, i8* %125, align 1, !dbg !6061
  %126 = load i8*, i8** %117, align 8, !dbg !6062
  %127 = load i8*, i8** %117, align 8, !dbg !6064
  %128 = call i64 @strlen(i8* %127) #13, !dbg !6065
  %129 = getelementptr inbounds i8, i8* %126, i64 %128, !dbg !6066
  store i8* %129, i8** %116, align 8, !dbg !6067
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %33
  %130 = load i8*, i8** %12, align 8, !dbg !6069
  %131 = load i8*, i8** %11, align 8, !dbg !6071
  %132 = icmp ult i8* %130, %131, !dbg !6072
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %59
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %77
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %94
  %133 = load i8*, i8** %11, align 8, !dbg !6079
  %134 = getelementptr inbounds i8, i8* %133, i32 -1, !dbg !6079
  store i8* %134, i8** %11, align 8, !dbg !6079
  store i8 0, i8* %134, align 1, !dbg !6080
  br label %originalBB14
}

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @read_utmp(i8*, i64*, %struct.utmpx**, i32) #4 !dbg !6117 {
  %5 = load i32, i32* @x.107
  %6 = load i32, i32* @y.108
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca i8*, align 8
  %14 = alloca i64*, align 8
  %15 = alloca %struct.utmpx**, align 8
  %16 = alloca i32, align 4
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca %struct.utmpx*, align 8
  %20 = alloca %struct.utmpx*, align 8
  store i8* %0, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !6122, metadata !DIExpression()), !dbg !6123
  store i64* %1, i64** %14, align 8
  call void @llvm.dbg.declare(metadata i64** %14, metadata !6124, metadata !DIExpression()), !dbg !6125
  store %struct.utmpx** %2, %struct.utmpx*** %15, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx*** %15, metadata !6126, metadata !DIExpression()), !dbg !6127
  store i32 %3, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !6128, metadata !DIExpression()), !dbg !6129
  call void @llvm.dbg.declare(metadata i64* %17, metadata !6130, metadata !DIExpression()), !dbg !6131
  store i64 0, i64* %17, align 8, !dbg !6131
  call void @llvm.dbg.declare(metadata i64* %18, metadata !6132, metadata !DIExpression()), !dbg !6133
  store i64 0, i64* %18, align 8, !dbg !6133
  call void @llvm.dbg.declare(metadata %struct.utmpx** %19, metadata !6134, metadata !DIExpression()), !dbg !6135
  store %struct.utmpx* null, %struct.utmpx** %19, align 8, !dbg !6135
  call void @llvm.dbg.declare(metadata %struct.utmpx** %20, metadata !6136, metadata !DIExpression()), !dbg !6137
  %21 = load i8*, i8** %13, align 8, !dbg !6138
  %22 = call i32 @utmpxname(i8* %21), !dbg !6139
  call void @setutxent(), !dbg !6140
  %23 = load i32, i32* @x.107
  %24 = load i32, i32* @y.108
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31, !dbg !6141

31:                                               ; preds = %originalBBpart229, %originalBBpart2
  %32 = load i32, i32* @x.107
  %33 = load i32, i32* @y.108
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = call %struct.utmpx* @getutxent(), !dbg !6142
  store %struct.utmpx* %40, %struct.utmpx** %20, align 8, !dbg !6143
  %41 = icmp ne %struct.utmpx* %40, null, !dbg !6144
  %42 = load i32, i32* @x.107
  %43 = load i32, i32* @y.108
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %41, label %50, label %152, !dbg !6141

50:                                               ; preds = %originalBBpart24
  %51 = load i32, i32* @x.107
  %52 = load i32, i32* @y.108
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %50, %originalBB6alteredBB
  %59 = load %struct.utmpx*, %struct.utmpx** %20, align 8, !dbg !6145
  %60 = load i32, i32* %16, align 4, !dbg !6147
  %61 = call zeroext i1 @desirable_utmp_entry(%struct.utmpx* %59, i32 %60), !dbg !6148
  %62 = load i32, i32* @x.107
  %63 = load i32, i32* @y.108
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %61, label %70, label %135, !dbg !6149

70:                                               ; preds = %originalBBpart28
  %71 = load i32, i32* @x.107
  %72 = load i32, i32* @y.108
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %70, %originalBB10alteredBB
  %79 = load i64, i64* %17, align 8, !dbg !6150
  %80 = load i64, i64* %18, align 8, !dbg !6153
  %81 = icmp eq i64 %79, %80, !dbg !6154
  %82 = load i32, i32* @x.107
  %83 = load i32, i32* @y.108
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %81, label %90, label %111, !dbg !6155

90:                                               ; preds = %originalBBpart212
  %91 = load i32, i32* @x.107
  %92 = load i32, i32* @y.108
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %90, %originalBB14alteredBB
  %99 = load %struct.utmpx*, %struct.utmpx** %19, align 8, !dbg !6156
  %100 = bitcast %struct.utmpx* %99 to i8*, !dbg !6156
  %101 = call i8* @x2nrealloc(i8* %100, i64* %18, i64 384), !dbg !6157
  %102 = bitcast i8* %101 to %struct.utmpx*, !dbg !6157
  store %struct.utmpx* %102, %struct.utmpx** %19, align 8, !dbg !6158
  %103 = load i32, i32* @x.107
  %104 = load i32, i32* @y.108
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %111, !dbg !6159

111:                                              ; preds = %originalBBpart216, %originalBBpart212
  %112 = load i32, i32* @x.107
  %113 = load i32, i32* @y.108
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %111, %originalBB18alteredBB
  %120 = load %struct.utmpx*, %struct.utmpx** %19, align 8, !dbg !6160
  %121 = load i64, i64* %17, align 8, !dbg !6161
  %122 = add i64 %121, 1, !dbg !6161
  store i64 %122, i64* %17, align 8, !dbg !6161
  %123 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %120, i64 %121, !dbg !6160
  %124 = load %struct.utmpx*, %struct.utmpx** %20, align 8, !dbg !6162
  %125 = bitcast %struct.utmpx* %123 to i8*, !dbg !6163
  %126 = bitcast %struct.utmpx* %124 to i8*, !dbg !6163
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %125, i8* align 4 %126, i64 384, i1 false), !dbg !6163
  %127 = load i32, i32* @x.107
  %128 = load i32, i32* @y.108
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBBpart225, label %originalBB18alteredBB

originalBBpart225:                                ; preds = %originalBB18
  br label %135, !dbg !6164

135:                                              ; preds = %originalBBpart225, %originalBBpart28
  %136 = load i32, i32* @x.107
  %137 = load i32, i32* @y.108
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %135, %originalBB27alteredBB
  %144 = load i32, i32* @x.107
  %145 = load i32, i32* @y.108
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br label %31, !dbg !6141, !llvm.loop !6165

152:                                              ; preds = %originalBBpart24
  %153 = load i32, i32* @x.107
  %154 = load i32, i32* @y.108
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %152, %originalBB31alteredBB
  call void @endutxent(), !dbg !6167
  %161 = load i64, i64* %17, align 8, !dbg !6168
  %162 = load i64*, i64** %14, align 8, !dbg !6169
  store i64 %161, i64* %162, align 8, !dbg !6170
  %163 = load %struct.utmpx*, %struct.utmpx** %19, align 8, !dbg !6171
  %164 = load %struct.utmpx**, %struct.utmpx*** %15, align 8, !dbg !6172
  store %struct.utmpx* %163, %struct.utmpx** %164, align 8, !dbg !6173
  %165 = load i32, i32* @x.107
  %166 = load i32, i32* @y.108
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  ret i32 0, !dbg !6174

originalBBalteredBB:                              ; preds = %originalBB, %4
  %173 = alloca i8*, align 8
  %174 = alloca i64*, align 8
  %175 = alloca %struct.utmpx**, align 8
  %176 = alloca i32, align 4
  %177 = alloca i64, align 8
  %178 = alloca i64, align 8
  %179 = alloca %struct.utmpx*, align 8
  %180 = alloca %struct.utmpx*, align 8
  store i8* %0, i8** %173, align 8
  call void @llvm.dbg.declare(metadata i8** %173, metadata !6175, metadata !DIExpression()), !dbg !6123
  store i64* %1, i64** %174, align 8
  call void @llvm.dbg.declare(metadata i64** %174, metadata !6204, metadata !DIExpression()), !dbg !6125
  store %struct.utmpx** %2, %struct.utmpx*** %175, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx*** %175, metadata !6205, metadata !DIExpression()), !dbg !6127
  store i32 %3, i32* %176, align 4
  call void @llvm.dbg.declare(metadata i32* %176, metadata !6206, metadata !DIExpression()), !dbg !6129
  call void @llvm.dbg.declare(metadata i64* %177, metadata !6207, metadata !DIExpression()), !dbg !6131
  store i64 0, i64* %177, align 8, !dbg !6131
  call void @llvm.dbg.declare(metadata i64* %178, metadata !6208, metadata !DIExpression()), !dbg !6133
  store i64 0, i64* %178, align 8, !dbg !6133
  call void @llvm.dbg.declare(metadata %struct.utmpx** %179, metadata !6209, metadata !DIExpression()), !dbg !6135
  store %struct.utmpx* null, %struct.utmpx** %179, align 8, !dbg !6135
  call void @llvm.dbg.declare(metadata %struct.utmpx** %180, metadata !6210, metadata !DIExpression()), !dbg !6137
  %181 = load i8*, i8** %173, align 8, !dbg !6138
  %182 = call i32 @utmpxname(i8* %181), !dbg !6139
  call void @setutxent(), !dbg !6140
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %183 = call %struct.utmpx* @getutxent(), !dbg !6142
  store %struct.utmpx* %183, %struct.utmpx** %20, align 8, !dbg !6143
  %184 = icmp ne %struct.utmpx* %183, null, !dbg !6144
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %50
  %185 = load %struct.utmpx*, %struct.utmpx** %20, align 8, !dbg !6145
  %186 = load i32, i32* %16, align 4, !dbg !6147
  %187 = call zeroext i1 @desirable_utmp_entry(%struct.utmpx* %185, i32 %186), !dbg !6148
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %70
  %188 = load i64, i64* %17, align 8, !dbg !6150
  %189 = load i64, i64* %18, align 8, !dbg !6153
  %190 = icmp eq i64 %188, %189, !dbg !6154
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %90
  %191 = load %struct.utmpx*, %struct.utmpx** %19, align 8, !dbg !6156
  %192 = bitcast %struct.utmpx* %191 to i8*, !dbg !6156
  %193 = call i8* @x2nrealloc(i8* %192, i64* %18, i64 384), !dbg !6157
  %194 = bitcast i8* %193 to %struct.utmpx*, !dbg !6157
  store %struct.utmpx* %194, %struct.utmpx** %19, align 8, !dbg !6158
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %111
  %195 = load %struct.utmpx*, %struct.utmpx** %19, align 8, !dbg !6160
  %196 = load i64, i64* %17, align 8, !dbg !6161
  %_ = sub i64 0, %196
  %gen = add i64 %_, 1
  %_19 = sub i64 %196, 1
  %gen20 = mul i64 %_19, 1
  %_21 = shl i64 %196, 1
  %_22 = sub i64 0, %196
  %gen23 = add i64 %_22, 1
  %197 = add i64 %196, 1, !dbg !6161
  store i64 %197, i64* %17, align 8, !dbg !6161
  %198 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %195, i64 %196, !dbg !6160
  %199 = load %struct.utmpx*, %struct.utmpx** %20, align 8, !dbg !6162
  %200 = bitcast %struct.utmpx* %198 to i8*, !dbg !6163
  %201 = bitcast %struct.utmpx* %199 to i8*, !dbg !6163
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %201, i64 384, i1 false), !dbg !6163
  br label %originalBB18

originalBB27alteredBB:                            ; preds = %originalBB27, %135
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %152
  call void @endutxent(), !dbg !6167
  %202 = load i64, i64* %17, align 8, !dbg !6168
  %203 = load i64*, i64** %14, align 8, !dbg !6169
  store i64 %202, i64* %203, align 8, !dbg !6170
  %204 = load %struct.utmpx*, %struct.utmpx** %19, align 8, !dbg !6171
  %205 = load %struct.utmpx**, %struct.utmpx*** %15, align 8, !dbg !6172
  store %struct.utmpx* %204, %struct.utmpx** %205, align 8, !dbg !6173
  br label %originalBB31
}

declare dso_local i32 @utmpxname(i8*) #3

declare dso_local void @setutxent() #3

declare dso_local %struct.utmpx* @getutxent() #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @desirable_utmp_entry(%struct.utmpx*, i32) #4 !dbg !6211 {
  %3 = load i32, i32* @x.109
  %4 = load i32, i32* @y.110
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i1, align 1
  %12 = alloca %struct.utmpx*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  store %struct.utmpx* %0, %struct.utmpx** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %12, metadata !6214, metadata !DIExpression()), !dbg !6215
  store i32 %1, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !6216, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.declare(metadata i8* %14, metadata !6218, metadata !DIExpression()), !dbg !6219
  %15 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !6220
  %16 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %15, i32 0, i32 4, !dbg !6220
  %17 = getelementptr inbounds [32 x i8], [32 x i8]* %16, i64 0, i64 0, !dbg !6220
  %18 = load i8, i8* %17, align 4, !dbg !6220
  %19 = sext i8 %18 to i32, !dbg !6220
  %20 = icmp ne i32 %19, 0, !dbg !6220
  %21 = load i32, i32* @x.109
  %22 = load i32, i32* @y.110
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %29, label %244, !dbg !6220

29:                                               ; preds = %originalBBpart2
  %30 = load i32, i32* @x.109
  %31 = load i32, i32* @y.110
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !6220
  %39 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %38, i32 0, i32 0, !dbg !6220
  %40 = load i16, i16* %39, align 4, !dbg !6220
  %41 = sext i16 %40 to i32, !dbg !6220
  %42 = load i32, i32* @x.109
  %43 = load i32, i32* @y.110
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %50, !dbg !6220

50:                                               ; preds = %originalBBpart24
  %51 = load i32, i32* @x.109
  %52 = load i32, i32* @y.110
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %50, %originalBB6alteredBB
  %collatzVar = alloca i32
  %59 = load i32, i32* @x.109
  %60 = load i32, i32* @y.110
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %67

67:                                               ; preds = %originalBBpart28
  %68 = load i32, i32* @x.109
  %69 = load i32, i32* @y.110
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %67, %originalBB10alteredBB
  %76 = load i32, i32* @inVal0
  %77 = icmp sgt i32 %76, 1
  %78 = load i32, i32* @x.109
  %79 = load i32, i32* @y.110
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %77, label %103, label %86

86:                                               ; preds = %originalBBpart212
  %87 = load i32, i32* @x.109
  %88 = load i32, i32* @y.110
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %86, %originalBB14alteredBB
  store i32 52, i32* %collatzVar
  %95 = load i32, i32* @x.109
  %96 = load i32, i32* @y.110
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %103

103:                                              ; preds = %originalBBpart216, %originalBBpart212
  %104 = load i32, i32* @x.109
  %105 = load i32, i32* @y.110
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %103, %originalBB18alteredBB
  %112 = load i8**, i8*** @inVal1
  %113 = getelementptr inbounds i8*, i8** %112, i64 1
  %114 = load i8*, i8** %113
  %controle = call i32 @controle(i8* %114, i32 7)
  store i32 %controle, i32* %collatzVar
  %115 = load i32, i32* @x.109
  %116 = load i32, i32* @y.110
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %123

123:                                              ; preds = %originalBBpart259, %originalBBpart243, %originalBBpart220
  %124 = load i32, i32* @x.109
  %125 = load i32, i32* @y.110
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %123, %originalBB22alteredBB
  %132 = load i32, i32* %collatzVar
  %133 = icmp sgt i32 %132, 1
  %134 = load i32, i32* @x.109
  %135 = load i32, i32* @y.110
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %133, label %142, label %209

142:                                              ; preds = %originalBBpart224
  %143 = load i32, i32* @x.109
  %144 = load i32, i32* @y.110
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %142, %originalBB26alteredBB
  %151 = load i32, i32* %collatzVar
  %152 = srem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = load i32, i32* @x.109
  %155 = load i32, i32* @y.110
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBBpart231, label %originalBB26alteredBB

originalBBpart231:                                ; preds = %originalBB26
  br i1 %153, label %162, label %165

162:                                              ; preds = %originalBBpart231
  %163 = load i32, i32* %collatzVar
  %164 = sdiv i32 %163, 2
  store i32 %164, i32* %collatzVar
  br label %169

165:                                              ; preds = %originalBBpart231
  %166 = load i32, i32* %collatzVar
  %167 = mul i32 %166, 3
  %168 = add i32 %167, 1
  store i32 %168, i32* %collatzVar
  br label %169

169:                                              ; preds = %165, %162
  %170 = load i32, i32* @x.109
  %171 = load i32, i32* @y.110
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %169, %originalBB33alteredBB
  %178 = load i32, i32* %collatzVar
  %179 = sub i32 %41, %178
  %180 = icmp sgt i32 %179, 5
  %181 = load i32, i32* @x.109
  %182 = load i32, i32* @y.110
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBBpart243, label %originalBB33alteredBB

originalBBpart243:                                ; preds = %originalBB33
  br i1 %180, label %189, label %123

189:                                              ; preds = %originalBBpart243
  %190 = load i32, i32* @x.109
  %191 = load i32, i32* @y.110
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %189, %originalBB45alteredBB
  %198 = load i32, i32* %collatzVar
  %199 = add i32 %41, %198
  %200 = icmp slt i32 %199, 9
  %201 = load i32, i32* @x.109
  %202 = load i32, i32* @y.110
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBBpart259, label %originalBB45alteredBB

originalBBpart259:                                ; preds = %originalBB45
  br i1 %200, label %226, label %123

209:                                              ; preds = %originalBBpart224
  %210 = load i32, i32* @x.109
  %211 = load i32, i32* @y.110
  %212 = sub i32 %210, 1
  %213 = mul i32 %210, %212
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %215, %216
  br i1 %217, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %209, %originalBB61alteredBB
  %218 = load i32, i32* @x.109
  %219 = load i32, i32* @y.110
  %220 = sub i32 %218, 1
  %221 = mul i32 %218, %220
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %223, %224
  br i1 %225, label %originalBBpart263, label %originalBB61alteredBB

originalBBpart263:                                ; preds = %originalBB61
  br label %226, !dbg !6220

226:                                              ; preds = %originalBBpart263, %originalBBpart259
  %227 = phi i1 [ true, %originalBBpart259 ], [ false, %originalBBpart263 ]
  %228 = load i32, i32* @x.109
  %229 = load i32, i32* @y.110
  %230 = sub i32 %228, 1
  %231 = mul i32 %228, %230
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %233, %234
  br i1 %235, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %226, %originalBB65alteredBB
  %236 = load i32, i32* @x.109
  %237 = load i32, i32* @y.110
  %238 = sub i32 %236, 1
  %239 = mul i32 %236, %238
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %237, 10
  %243 = or i1 %241, %242
  br i1 %243, label %originalBBpart267, label %originalBB65alteredBB

originalBBpart267:                                ; preds = %originalBB65
  br label %244

244:                                              ; preds = %originalBBpart267, %originalBBpart2
  %245 = phi i1 [ false, %originalBBpart2 ], [ %227, %originalBBpart267 ], !dbg !6221
  %246 = load i32, i32* @x.109
  %247 = load i32, i32* @y.110
  %248 = sub i32 %246, 1
  %249 = mul i32 %246, %248
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %251, %252
  br i1 %253, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %244, %originalBB69alteredBB
  %254 = zext i1 %245 to i8, !dbg !6219
  store i8 %254, i8* %14, align 1, !dbg !6219
  %255 = load i32, i32* %13, align 4, !dbg !6222
  %256 = and i32 %255, 2, !dbg !6224
  %257 = icmp ne i32 %256, 0, !dbg !6224
  %258 = load i32, i32* @x.109
  %259 = load i32, i32* @y.110
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %originalBBpart278, label %originalBB69alteredBB

originalBBpart278:                                ; preds = %originalBB69
  br i1 %257, label %266, label %302, !dbg !6225

266:                                              ; preds = %originalBBpart278
  %267 = load i32, i32* @x.109
  %268 = load i32, i32* @y.110
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %266, %originalBB80alteredBB
  %275 = load i8, i8* %14, align 1, !dbg !6226
  %276 = trunc i8 %275 to i1, !dbg !6226
  %277 = load i32, i32* @x.109
  %278 = load i32, i32* @y.110
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBBpart282, label %originalBB80alteredBB

originalBBpart282:                                ; preds = %originalBB80
  br i1 %276, label %302, label %285, !dbg !6227

285:                                              ; preds = %originalBBpart282
  %286 = load i32, i32* @x.109
  %287 = load i32, i32* @y.110
  %288 = sub i32 %286, 1
  %289 = mul i32 %286, %288
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %291, %292
  br i1 %293, label %originalBB84, label %originalBB84alteredBB

originalBB84:                                     ; preds = %285, %originalBB84alteredBB
  store i1 false, i1* %11, align 1, !dbg !6228
  %294 = load i32, i32* @x.109
  %295 = load i32, i32* @y.110
  %296 = sub i32 %294, 1
  %297 = mul i32 %294, %296
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %299, %300
  br i1 %301, label %originalBBpart286, label %originalBB84alteredBB

originalBBpart286:                                ; preds = %originalBB84
  br label %406, !dbg !6228

302:                                              ; preds = %originalBBpart282, %originalBBpart278
  %303 = load i32, i32* @x.109
  %304 = load i32, i32* @y.110
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBB88, label %originalBB88alteredBB

originalBB88:                                     ; preds = %302, %originalBB88alteredBB
  %311 = load i32, i32* %13, align 4, !dbg !6229
  %312 = and i32 %311, 1, !dbg !6231
  %313 = icmp ne i32 %312, 0, !dbg !6231
  %314 = load i32, i32* @x.109
  %315 = load i32, i32* @y.110
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBBpart294, label %originalBB88alteredBB

originalBBpart294:                                ; preds = %originalBB88
  br i1 %313, label %322, label %389, !dbg !6232

322:                                              ; preds = %originalBBpart294
  %323 = load i8, i8* %14, align 1, !dbg !6233
  %324 = trunc i8 %323 to i1, !dbg !6233
  br i1 %324, label %325, label %389, !dbg !6234

325:                                              ; preds = %322
  %326 = load i32, i32* @x.109
  %327 = load i32, i32* @y.110
  %328 = sub i32 %326, 1
  %329 = mul i32 %326, %328
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %331, %332
  br i1 %333, label %originalBB96, label %originalBB96alteredBB

originalBB96:                                     ; preds = %325, %originalBB96alteredBB
  %334 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !6235
  %335 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %334, i32 0, i32 1, !dbg !6235
  %336 = load i32, i32* %335, align 4, !dbg !6235
  %337 = icmp slt i32 0, %336, !dbg !6236
  %338 = load i32, i32* @x.109
  %339 = load i32, i32* @y.110
  %340 = sub i32 %338, 1
  %341 = mul i32 %338, %340
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %343, %344
  br i1 %345, label %originalBBpart298, label %originalBB96alteredBB

originalBBpart298:                                ; preds = %originalBB96
  br i1 %337, label %346, label %389, !dbg !6237

346:                                              ; preds = %originalBBpart298
  %347 = load i32, i32* @x.109
  %348 = load i32, i32* @y.110
  %349 = sub i32 %347, 1
  %350 = mul i32 %347, %349
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %352, %353
  br i1 %354, label %originalBB100, label %originalBB100alteredBB

originalBB100:                                    ; preds = %346, %originalBB100alteredBB
  %355 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !6238
  %356 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %355, i32 0, i32 1, !dbg !6238
  %357 = load i32, i32* %356, align 4, !dbg !6238
  %358 = call i32 @kill(i32 %357, i32 0) #10, !dbg !6239
  %359 = icmp slt i32 %358, 0, !dbg !6240
  %360 = load i32, i32* @x.109
  %361 = load i32, i32* @y.110
  %362 = sub i32 %360, 1
  %363 = mul i32 %360, %362
  %364 = urem i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %361, 10
  %367 = or i1 %365, %366
  br i1 %367, label %originalBBpart2102, label %originalBB100alteredBB

originalBBpart2102:                               ; preds = %originalBB100
  br i1 %359, label %368, label %389, !dbg !6241

368:                                              ; preds = %originalBBpart2102
  %369 = call i32* @__errno_location() #15, !dbg !6242
  %370 = load i32, i32* %369, align 4, !dbg !6242
  %371 = icmp eq i32 %370, 3, !dbg !6243
  br i1 %371, label %372, label %389, !dbg !6244

372:                                              ; preds = %368
  %373 = load i32, i32* @x.109
  %374 = load i32, i32* @y.110
  %375 = sub i32 %373, 1
  %376 = mul i32 %373, %375
  %377 = urem i32 %376, 2
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %374, 10
  %380 = or i1 %378, %379
  br i1 %380, label %originalBB104, label %originalBB104alteredBB

originalBB104:                                    ; preds = %372, %originalBB104alteredBB
  store i1 false, i1* %11, align 1, !dbg !6245
  %381 = load i32, i32* @x.109
  %382 = load i32, i32* @y.110
  %383 = sub i32 %381, 1
  %384 = mul i32 %381, %383
  %385 = urem i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %382, 10
  %388 = or i1 %386, %387
  br i1 %388, label %originalBBpart2106, label %originalBB104alteredBB

originalBBpart2106:                               ; preds = %originalBB104
  br label %406, !dbg !6245

389:                                              ; preds = %368, %originalBBpart2102, %originalBBpart298, %322, %originalBBpart294
  %390 = load i32, i32* @x.109
  %391 = load i32, i32* @y.110
  %392 = sub i32 %390, 1
  %393 = mul i32 %390, %392
  %394 = urem i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %391, 10
  %397 = or i1 %395, %396
  br i1 %397, label %originalBB108, label %originalBB108alteredBB

originalBB108:                                    ; preds = %389, %originalBB108alteredBB
  store i1 true, i1* %11, align 1, !dbg !6246
  %398 = load i32, i32* @x.109
  %399 = load i32, i32* @y.110
  %400 = sub i32 %398, 1
  %401 = mul i32 %398, %400
  %402 = urem i32 %401, 2
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %399, 10
  %405 = or i1 %403, %404
  br i1 %405, label %originalBBpart2110, label %originalBB108alteredBB

originalBBpart2110:                               ; preds = %originalBB108
  br label %406, !dbg !6246

406:                                              ; preds = %originalBBpart2110, %originalBBpart2106, %originalBBpart286
  %407 = load i32, i32* @x.109
  %408 = load i32, i32* @y.110
  %409 = sub i32 %407, 1
  %410 = mul i32 %407, %409
  %411 = urem i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = icmp slt i32 %408, 10
  %414 = or i1 %412, %413
  br i1 %414, label %originalBB112, label %originalBB112alteredBB

originalBB112:                                    ; preds = %406, %originalBB112alteredBB
  %415 = load i1, i1* %11, align 1, !dbg !6247
  %416 = load i32, i32* @x.109
  %417 = load i32, i32* @y.110
  %418 = sub i32 %416, 1
  %419 = mul i32 %416, %418
  %420 = urem i32 %419, 2
  %421 = icmp eq i32 %420, 0
  %422 = icmp slt i32 %417, 10
  %423 = or i1 %421, %422
  br i1 %423, label %originalBBpart2114, label %originalBB112alteredBB

originalBBpart2114:                               ; preds = %originalBB112
  ret i1 %415, !dbg !6247

originalBBalteredBB:                              ; preds = %originalBB, %2
  %424 = alloca i1, align 1
  %425 = alloca %struct.utmpx*, align 8
  %426 = alloca i32, align 4
  %427 = alloca i8, align 1
  store %struct.utmpx* %0, %struct.utmpx** %425, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %425, metadata !6248, metadata !DIExpression()), !dbg !6215
  store i32 %1, i32* %426, align 4
  call void @llvm.dbg.declare(metadata i32* %426, metadata !6277, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.declare(metadata i8* %427, metadata !6278, metadata !DIExpression()), !dbg !6219
  %428 = load %struct.utmpx*, %struct.utmpx** %425, align 8, !dbg !6220
  %429 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %428, i32 0, i32 4, !dbg !6220
  %430 = getelementptr inbounds [32 x i8], [32 x i8]* %429, i64 0, i64 0, !dbg !6220
  %431 = load i8, i8* %430, align 4, !dbg !6220
  %432 = sext i8 %431 to i32, !dbg !6220
  %433 = icmp ne i32 %432, 0, !dbg !6220
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %434 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !6220
  %435 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %434, i32 0, i32 0, !dbg !6220
  %436 = load i16, i16* %435, align 4, !dbg !6220
  %437 = sext i16 %436 to i32, !dbg !6220
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %50
  %collatzVaralteredBB = alloca i32
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %67
  %438 = load i32, i32* @inVal0
  %439 = icmp sgt i32 %438, 1
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %86
  store i32 52, i32* %collatzVar
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %103
  %440 = load i8**, i8*** @inVal1
  %441 = getelementptr inbounds i8*, i8** %440, i64 1
  %442 = load i8*, i8** %441
  %controlealteredBB = call i32 @controle(i8* %442, i32 7)
  store i32 %controlealteredBB, i32* %collatzVar
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %123
  %443 = load i32, i32* %collatzVar
  %444 = icmp sgt i32 %443, 1
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %142
  %445 = load i32, i32* %collatzVar
  %_ = shl i32 %445, 2
  %_27 = shl i32 %445, 2
  %_28 = sub i32 0, %445
  %gen = add i32 %_28, 2
  %_29 = shl i32 %445, 2
  %446 = srem i32 %445, 2
  %447 = icmp eq i32 %446, 0
  br label %originalBB26

originalBB33alteredBB:                            ; preds = %originalBB33, %169
  %448 = load i32, i32* %collatzVar
  %_34 = sub i32 %41, %448
  %gen35 = mul i32 %_34, %448
  %_36 = shl i32 %41, %448
  %_37 = sub i32 0, %41
  %gen38 = add i32 %_37, %448
  %_39 = sub i32 0, %41
  %gen40 = add i32 %_39, %448
  %_41 = shl i32 %41, %448
  %449 = sub i32 %41, %448
  %450 = icmp sgt i32 %449, 5
  br label %originalBB33

originalBB45alteredBB:                            ; preds = %originalBB45, %189
  %451 = load i32, i32* %collatzVar
  %_46 = sub i32 %41, %451
  %gen47 = mul i32 %_46, %451
  %_48 = sub i32 %41, %451
  %gen49 = mul i32 %_48, %451
  %_50 = sub i32 %41, %451
  %gen51 = mul i32 %_50, %451
  %_52 = sub i32 %41, %451
  %gen53 = mul i32 %_52, %451
  %_54 = sub i32 %41, %451
  %gen55 = mul i32 %_54, %451
  %_56 = sub i32 0, %41
  %gen57 = add i32 %_56, %451
  %452 = add i32 %41, %451
  %453 = icmp slt i32 %452, 9
  br label %originalBB45

originalBB61alteredBB:                            ; preds = %originalBB61, %209
  br label %originalBB61

originalBB65alteredBB:                            ; preds = %originalBB65, %226
  br label %originalBB65

originalBB69alteredBB:                            ; preds = %originalBB69, %244
  %454 = zext i1 %245 to i8, !dbg !6219
  store i8 %454, i8* %14, align 1, !dbg !6219
  %455 = load i32, i32* %13, align 4, !dbg !6222
  %_70 = sub i32 %455, 2
  %gen71 = mul i32 %_70, 2
  %_72 = sub i32 %455, 2
  %gen73 = mul i32 %_72, 2
  %_74 = shl i32 %455, 2
  %_75 = sub i32 0, %455
  %gen76 = add i32 %_75, 2
  %456 = and i32 %455, 2, !dbg !6224
  %457 = icmp ne i32 %456, 0, !dbg !6224
  br label %originalBB69

originalBB80alteredBB:                            ; preds = %originalBB80, %266
  %458 = load i8, i8* %14, align 1, !dbg !6226
  %459 = trunc i8 %458 to i1, !dbg !6226
  br label %originalBB80

originalBB84alteredBB:                            ; preds = %originalBB84, %285
  store i1 false, i1* %11, align 1, !dbg !6228
  br label %originalBB84

originalBB88alteredBB:                            ; preds = %originalBB88, %302
  %460 = load i32, i32* %13, align 4, !dbg !6229
  %_89 = sub i32 0, %460
  %gen90 = add i32 %_89, 1
  %_91 = sub i32 0, %460
  %gen92 = add i32 %_91, 1
  %461 = and i32 %460, 1, !dbg !6231
  %462 = icmp ne i32 %461, 0, !dbg !6231
  br label %originalBB88

originalBB96alteredBB:                            ; preds = %originalBB96, %325
  %463 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !6235
  %464 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %463, i32 0, i32 1, !dbg !6235
  %465 = load i32, i32* %464, align 4, !dbg !6235
  %466 = icmp slt i32 0, %465, !dbg !6236
  br label %originalBB96

originalBB100alteredBB:                           ; preds = %originalBB100, %346
  %467 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !6238
  %468 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %467, i32 0, i32 1, !dbg !6238
  %469 = load i32, i32* %468, align 4, !dbg !6238
  %470 = call i32 @kill(i32 %469, i32 0) #10, !dbg !6239
  %471 = icmp slt i32 %470, 0, !dbg !6240
  br label %originalBB100

originalBB104alteredBB:                           ; preds = %originalBB104, %372
  store i1 false, i1* %11, align 1, !dbg !6245
  br label %originalBB104

originalBB108alteredBB:                           ; preds = %originalBB108, %389
  store i1 true, i1* %11, align 1, !dbg !6246
  br label %originalBB108

originalBB112alteredBB:                           ; preds = %originalBB112, %406
  %472 = load i1, i1* %11, align 1, !dbg !6247
  br label %originalBB112
}

declare dso_local void @endutxent() #3

; Function Attrs: nounwind
declare dso_local i32 @kill(i32, i32) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @c_strcasecmp(i8*, i8*) #11 !dbg !6279 {
  %3 = load i32, i32* @x.111
  %4 = load i32, i32* @y.112
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !6283, metadata !DIExpression()), !dbg !6284
  store i8* %1, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !6285, metadata !DIExpression()), !dbg !6286
  call void @llvm.dbg.declare(metadata i8** %14, metadata !6287, metadata !DIExpression()), !dbg !6288
  %18 = load i8*, i8** %12, align 8, !dbg !6289
  store i8* %18, i8** %14, align 8, !dbg !6288
  call void @llvm.dbg.declare(metadata i8** %15, metadata !6290, metadata !DIExpression()), !dbg !6291
  %19 = load i8*, i8** %13, align 8, !dbg !6292
  store i8* %19, i8** %15, align 8, !dbg !6291
  call void @llvm.dbg.declare(metadata i8* %16, metadata !6293, metadata !DIExpression()), !dbg !6294
  call void @llvm.dbg.declare(metadata i8* %17, metadata !6295, metadata !DIExpression()), !dbg !6296
  %20 = load i8*, i8** %14, align 8, !dbg !6297
  %21 = load i8*, i8** %15, align 8, !dbg !6299
  %22 = icmp eq i8* %20, %21, !dbg !6300
  %23 = load i32, i32* @x.111
  %24 = load i32, i32* @y.112
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %32, !dbg !6301

31:                                               ; preds = %originalBBpart2
  store i32 0, i32* %11, align 4, !dbg !6302
  br label %161, !dbg !6302

32:                                               ; preds = %originalBBpart2
  %33 = load i32, i32* @x.111
  %34 = load i32, i32* @y.112
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load i32, i32* @x.111
  %42 = load i32, i32* @y.112
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %49, !dbg !6303

49:                                               ; preds = %originalBBpart220, %originalBBpart24
  %50 = load i32, i32* @x.111
  %51 = load i32, i32* @y.112
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %49, %originalBB6alteredBB
  %58 = load i8*, i8** %14, align 8, !dbg !6304
  %59 = load i8, i8* %58, align 1, !dbg !6306
  %60 = zext i8 %59 to i32, !dbg !6306
  %61 = call i32 @c_tolower(i32 %60), !dbg !6307
  %62 = trunc i32 %61 to i8, !dbg !6307
  store i8 %62, i8* %16, align 1, !dbg !6308
  %63 = load i8*, i8** %15, align 8, !dbg !6309
  %64 = load i8, i8* %63, align 1, !dbg !6310
  %65 = zext i8 %64 to i32, !dbg !6310
  %66 = call i32 @c_tolower(i32 %65), !dbg !6311
  %67 = trunc i32 %66 to i8, !dbg !6311
  store i8 %67, i8* %17, align 1, !dbg !6312
  %68 = load i8, i8* %16, align 1, !dbg !6313
  %69 = zext i8 %68 to i32, !dbg !6313
  %70 = icmp eq i32 %69, 0, !dbg !6315
  %71 = load i32, i32* @x.111
  %72 = load i32, i32* @y.112
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %70, label %79, label %96, !dbg !6316

79:                                               ; preds = %originalBBpart28
  %80 = load i32, i32* @x.111
  %81 = load i32, i32* @y.112
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %79, %originalBB10alteredBB
  %88 = load i32, i32* @x.111
  %89 = load i32, i32* @y.112
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %139, !dbg !6317

96:                                               ; preds = %originalBBpart28
  %97 = load i32, i32* @x.111
  %98 = load i32, i32* @y.112
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %96, %originalBB14alteredBB
  %105 = load i8*, i8** %14, align 8, !dbg !6318
  %106 = getelementptr inbounds i8, i8* %105, i32 1, !dbg !6318
  store i8* %106, i8** %14, align 8, !dbg !6318
  %107 = load i8*, i8** %15, align 8, !dbg !6319
  %108 = getelementptr inbounds i8, i8* %107, i32 1, !dbg !6319
  store i8* %108, i8** %15, align 8, !dbg !6319
  %109 = load i32, i32* @x.111
  %110 = load i32, i32* @y.112
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %117, !dbg !6320

117:                                              ; preds = %originalBBpart216
  %118 = load i32, i32* @x.111
  %119 = load i32, i32* @y.112
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %117, %originalBB18alteredBB
  %126 = load i8, i8* %16, align 1, !dbg !6321
  %127 = zext i8 %126 to i32, !dbg !6321
  %128 = load i8, i8* %17, align 1, !dbg !6322
  %129 = zext i8 %128 to i32, !dbg !6322
  %130 = icmp eq i32 %127, %129, !dbg !6323
  %131 = load i32, i32* @x.111
  %132 = load i32, i32* @y.112
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %130, label %49, label %139, !dbg !6320, !llvm.loop !6324

139:                                              ; preds = %originalBBpart220, %originalBBpart212
  %140 = load i32, i32* @x.111
  %141 = load i32, i32* @y.112
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %139, %originalBB22alteredBB
  %148 = load i8, i8* %16, align 1, !dbg !6326
  %149 = zext i8 %148 to i32, !dbg !6326
  %150 = load i8, i8* %17, align 1, !dbg !6328
  %151 = zext i8 %150 to i32, !dbg !6328
  %152 = sub nsw i32 %149, %151, !dbg !6329
  store i32 %152, i32* %11, align 4, !dbg !6330
  %153 = load i32, i32* @x.111
  %154 = load i32, i32* @y.112
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %161, !dbg !6330

161:                                              ; preds = %originalBBpart224, %31
  %162 = load i32, i32* %11, align 4, !dbg !6331
  ret i32 %162, !dbg !6331

originalBBalteredBB:                              ; preds = %originalBB, %2
  %163 = alloca i32, align 4
  %164 = alloca i8*, align 8
  %165 = alloca i8*, align 8
  %166 = alloca i8*, align 8
  %167 = alloca i8*, align 8
  %168 = alloca i8, align 1
  %169 = alloca i8, align 1
  store i8* %0, i8** %164, align 8
  call void @llvm.dbg.declare(metadata i8** %164, metadata !6332, metadata !DIExpression()), !dbg !6284
  store i8* %1, i8** %165, align 8
  call void @llvm.dbg.declare(metadata i8** %165, metadata !6335, metadata !DIExpression()), !dbg !6286
  call void @llvm.dbg.declare(metadata i8** %166, metadata !6336, metadata !DIExpression()), !dbg !6288
  %170 = load i8*, i8** %164, align 8, !dbg !6289
  store i8* %170, i8** %166, align 8, !dbg !6288
  call void @llvm.dbg.declare(metadata i8** %167, metadata !6337, metadata !DIExpression()), !dbg !6291
  %171 = load i8*, i8** %165, align 8, !dbg !6292
  store i8* %171, i8** %167, align 8, !dbg !6291
  call void @llvm.dbg.declare(metadata i8* %168, metadata !6338, metadata !DIExpression()), !dbg !6294
  call void @llvm.dbg.declare(metadata i8* %169, metadata !6339, metadata !DIExpression()), !dbg !6296
  %172 = load i8*, i8** %166, align 8, !dbg !6297
  %173 = load i8*, i8** %167, align 8, !dbg !6299
  %174 = icmp eq i8* %172, %173, !dbg !6300
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  %175 = load i8*, i8** %14, align 8, !dbg !6304
  %176 = load i8, i8* %175, align 1, !dbg !6306
  %177 = zext i8 %176 to i32, !dbg !6306
  %178 = call i32 @c_tolower(i32 %177), !dbg !6307
  %179 = trunc i32 %178 to i8, !dbg !6307
  store i8 %179, i8* %16, align 1, !dbg !6308
  %180 = load i8*, i8** %15, align 8, !dbg !6309
  %181 = load i8, i8* %180, align 1, !dbg !6310
  %182 = zext i8 %181 to i32, !dbg !6310
  %183 = call i32 @c_tolower(i32 %182), !dbg !6311
  %184 = trunc i32 %183 to i8, !dbg !6311
  store i8 %184, i8* %17, align 1, !dbg !6312
  %185 = load i8, i8* %16, align 1, !dbg !6313
  %186 = zext i8 %185 to i32, !dbg !6313
  %187 = icmp eq i32 %186, 0, !dbg !6315
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %79
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %96
  %188 = load i8*, i8** %14, align 8, !dbg !6318
  %189 = getelementptr inbounds i8, i8* %188, i32 1, !dbg !6318
  store i8* %189, i8** %14, align 8, !dbg !6318
  %190 = load i8*, i8** %15, align 8, !dbg !6319
  %191 = getelementptr inbounds i8, i8* %190, i32 1, !dbg !6319
  store i8* %191, i8** %15, align 8, !dbg !6319
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %117
  %192 = load i8, i8* %16, align 1, !dbg !6321
  %193 = zext i8 %192 to i32, !dbg !6321
  %194 = load i8, i8* %17, align 1, !dbg !6322
  %195 = zext i8 %194 to i32, !dbg !6322
  %196 = icmp eq i32 %193, %195, !dbg !6323
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %139
  %197 = load i8, i8* %16, align 1, !dbg !6326
  %198 = zext i8 %197 to i32, !dbg !6326
  %199 = load i8, i8* %17, align 1, !dbg !6328
  %200 = zext i8 %199 to i32, !dbg !6328
  %201 = sub nsw i32 %198, %200, !dbg !6329
  store i32 %201, i32* %11, align 4, !dbg !6330
  br label %originalBB22
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @close_stream(%struct._IO_FILE*) #4 !dbg !6340 {
  %2 = load i32, i32* @x.113
  %3 = load i32, i32* @y.114
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %11, metadata !6378, metadata !DIExpression()), !dbg !6379
  call void @llvm.dbg.declare(metadata i8* %12, metadata !6380, metadata !DIExpression()), !dbg !6382
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6383
  %16 = call i64 @__fpending(%struct._IO_FILE* %15) #10, !dbg !6384
  %17 = icmp ne i64 %16, 0, !dbg !6385
  %18 = zext i1 %17 to i8, !dbg !6382
  store i8 %18, i8* %12, align 1, !dbg !6382
  call void @llvm.dbg.declare(metadata i8* %13, metadata !6386, metadata !DIExpression()), !dbg !6387
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6388
  %20 = call i32 @ferror_unlocked(%struct._IO_FILE* %19) #10, !dbg !6388
  %21 = icmp ne i32 %20, 0, !dbg !6389
  %22 = zext i1 %21 to i8, !dbg !6387
  store i8 %22, i8* %13, align 1, !dbg !6387
  call void @llvm.dbg.declare(metadata i8* %14, metadata !6390, metadata !DIExpression()), !dbg !6391
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6392
  %24 = call i32 @rpl_fclose(%struct._IO_FILE* %23), !dbg !6393
  %25 = icmp ne i32 %24, 0, !dbg !6394
  %26 = zext i1 %25 to i8, !dbg !6391
  store i8 %26, i8* %14, align 1, !dbg !6391
  %27 = load i8, i8* %13, align 1, !dbg !6395
  %28 = trunc i8 %27 to i1, !dbg !6395
  %29 = load i32, i32* @x.113
  %30 = load i32, i32* @y.114
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %28, label %95, label %37, !dbg !6397

37:                                               ; preds = %originalBBpart2
  %38 = load i32, i32* @x.113
  %39 = load i32, i32* @y.114
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = load i8, i8* %14, align 1, !dbg !6398
  %47 = trunc i8 %46 to i1, !dbg !6398
  %48 = load i32, i32* @x.113
  %49 = load i32, i32* @y.114
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %47, label %56, label %149, !dbg !6399

56:                                               ; preds = %originalBBpart24
  %57 = load i32, i32* @x.113
  %58 = load i32, i32* @y.114
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %56, %originalBB6alteredBB
  %65 = load i8, i8* %12, align 1, !dbg !6400
  %66 = trunc i8 %65 to i1, !dbg !6400
  %67 = load i32, i32* @x.113
  %68 = load i32, i32* @y.114
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %66, label %95, label %75, !dbg !6401

75:                                               ; preds = %originalBBpart28
  %76 = load i32, i32* @x.113
  %77 = load i32, i32* @y.114
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %75, %originalBB10alteredBB
  %84 = call i32* @__errno_location() #15, !dbg !6402
  %85 = load i32, i32* %84, align 4, !dbg !6402
  %86 = icmp ne i32 %85, 9, !dbg !6403
  %87 = load i32, i32* @x.113
  %88 = load i32, i32* @y.114
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %86, label %95, label %149, !dbg !6404

95:                                               ; preds = %originalBBpart212, %originalBBpart28, %originalBBpart2
  %96 = load i32, i32* @x.113
  %97 = load i32, i32* @y.114
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %95, %originalBB14alteredBB
  %104 = load i8, i8* %14, align 1, !dbg !6405
  %105 = trunc i8 %104 to i1, !dbg !6405
  %106 = load i32, i32* @x.113
  %107 = load i32, i32* @y.114
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %105, label %132, label %114, !dbg !6408

114:                                              ; preds = %originalBBpart216
  %115 = load i32, i32* @x.113
  %116 = load i32, i32* @y.114
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %114, %originalBB18alteredBB
  %123 = call i32* @__errno_location() #15, !dbg !6409
  store i32 0, i32* %123, align 4, !dbg !6410
  %124 = load i32, i32* @x.113
  %125 = load i32, i32* @y.114
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %132, !dbg !6409

132:                                              ; preds = %originalBBpart220, %originalBBpart216
  %133 = load i32, i32* @x.113
  %134 = load i32, i32* @y.114
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %132, %originalBB22alteredBB
  store i32 -1, i32* %10, align 4, !dbg !6411
  %141 = load i32, i32* @x.113
  %142 = load i32, i32* @y.114
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %166, !dbg !6411

149:                                              ; preds = %originalBBpart212, %originalBBpart24
  %150 = load i32, i32* @x.113
  %151 = load i32, i32* @y.114
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %149, %originalBB26alteredBB
  store i32 0, i32* %10, align 4, !dbg !6412
  %158 = load i32, i32* @x.113
  %159 = load i32, i32* @y.114
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %166, !dbg !6412

166:                                              ; preds = %originalBBpart228, %originalBBpart224
  %167 = load i32, i32* @x.113
  %168 = load i32, i32* @y.114
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %166, %originalBB30alteredBB
  %175 = load i32, i32* %10, align 4, !dbg !6413
  %176 = load i32, i32* @x.113
  %177 = load i32, i32* @y.114
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  ret i32 %175, !dbg !6413

originalBBalteredBB:                              ; preds = %originalBB, %1
  %184 = alloca i32, align 4
  %185 = alloca %struct._IO_FILE*, align 8
  %186 = alloca i8, align 1
  %187 = alloca i8, align 1
  %188 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %185, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %185, metadata !6414, metadata !DIExpression()), !dbg !6379
  call void @llvm.dbg.declare(metadata i8* %186, metadata !6453, metadata !DIExpression()), !dbg !6382
  %189 = load %struct._IO_FILE*, %struct._IO_FILE** %185, align 8, !dbg !6383
  %190 = call i64 @__fpending(%struct._IO_FILE* %189) #10, !dbg !6384
  %191 = icmp ne i64 %190, 0, !dbg !6385
  %192 = zext i1 %191 to i8, !dbg !6382
  store i8 %192, i8* %186, align 1, !dbg !6382
  call void @llvm.dbg.declare(metadata i8* %187, metadata !6454, metadata !DIExpression()), !dbg !6387
  %193 = load %struct._IO_FILE*, %struct._IO_FILE** %185, align 8, !dbg !6388
  %194 = call i32 @ferror_unlocked(%struct._IO_FILE* %193) #10, !dbg !6388
  %195 = icmp ne i32 %194, 0, !dbg !6389
  %196 = zext i1 %195 to i8, !dbg !6387
  store i8 %196, i8* %187, align 1, !dbg !6387
  call void @llvm.dbg.declare(metadata i8* %188, metadata !6455, metadata !DIExpression()), !dbg !6391
  %197 = load %struct._IO_FILE*, %struct._IO_FILE** %185, align 8, !dbg !6392
  %198 = call i32 @rpl_fclose(%struct._IO_FILE* %197), !dbg !6393
  %199 = icmp ne i32 %198, 0, !dbg !6394
  %200 = zext i1 %199 to i8, !dbg !6391
  store i8 %200, i8* %188, align 1, !dbg !6391
  %201 = load i8, i8* %187, align 1, !dbg !6395
  %202 = trunc i8 %201 to i1, !dbg !6395
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %203 = load i8, i8* %14, align 1, !dbg !6398
  %204 = trunc i8 %203 to i1, !dbg !6398
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %56
  %205 = load i8, i8* %12, align 1, !dbg !6400
  %206 = trunc i8 %205 to i1, !dbg !6400
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %75
  %207 = call i32* @__errno_location() #15, !dbg !6402
  %208 = load i32, i32* %207, align 4, !dbg !6402
  %209 = icmp ne i32 %208, 9, !dbg !6403
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %95
  %210 = load i8, i8* %14, align 1, !dbg !6405
  %211 = trunc i8 %210 to i1, !dbg !6405
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %114
  %212 = call i32* @__errno_location() #15, !dbg !6409
  store i32 0, i32* %212, align 4, !dbg !6410
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %132
  store i32 -1, i32* %10, align 4, !dbg !6411
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %149
  store i32 0, i32* %10, align 4, !dbg !6412
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %166
  %213 = load i32, i32* %10, align 4, !dbg !6413
  br label %originalBB30
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @locale_charset() #4 !dbg !6456 {
  %1 = load i32, i32* @x.115
  %2 = load i32, i32* @y.116
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !6460, metadata !DIExpression()), !dbg !6461
  %10 = call i8* @nl_langinfo(i32 14) #10, !dbg !6462
  store i8* %10, i8** %9, align 8, !dbg !6463
  %11 = load i8*, i8** %9, align 8, !dbg !6464
  %12 = icmp eq i8* %11, null, !dbg !6466
  %13 = load i32, i32* @x.115
  %14 = load i32, i32* @y.116
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %38, !dbg !6467

21:                                               ; preds = %originalBBpart2
  %22 = load i32, i32* @x.115
  %23 = load i32, i32* @y.116
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.179, i64 0, i64 0), i8** %9, align 8, !dbg !6468
  %30 = load i32, i32* @x.115
  %31 = load i32, i32* @y.116
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %38, !dbg !6469

38:                                               ; preds = %originalBBpart24, %originalBBpart2
  %39 = load i32, i32* @x.115
  %40 = load i32, i32* @y.116
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %38, %originalBB6alteredBB
  %47 = load i8*, i8** %9, align 8, !dbg !6470
  %48 = getelementptr inbounds i8, i8* %47, i64 0, !dbg !6470
  %49 = load i8, i8* %48, align 1, !dbg !6470
  %50 = sext i8 %49 to i32, !dbg !6470
  %51 = icmp eq i32 %50, 0, !dbg !6474
  %52 = load i32, i32* @x.115
  %53 = load i32, i32* @y.116
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %51, label %60, label %77, !dbg !6475

60:                                               ; preds = %originalBBpart28
  %61 = load i32, i32* @x.115
  %62 = load i32, i32* @y.116
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %60, %originalBB10alteredBB
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.180, i64 0, i64 0), i8** %9, align 8, !dbg !6476
  %69 = load i32, i32* @x.115
  %70 = load i32, i32* @y.116
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %77, !dbg !6477

77:                                               ; preds = %originalBBpart212, %originalBBpart28
  %78 = load i32, i32* @x.115
  %79 = load i32, i32* @y.116
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %77, %originalBB14alteredBB
  %86 = load i8*, i8** %9, align 8, !dbg !6478
  %87 = load i32, i32* @x.115
  %88 = load i32, i32* @y.116
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret i8* %86, !dbg !6479

originalBBalteredBB:                              ; preds = %originalBB, %0
  %95 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %95, metadata !6480, metadata !DIExpression()), !dbg !6461
  %96 = call i8* @nl_langinfo(i32 14) #10, !dbg !6462
  store i8* %96, i8** %95, align 8, !dbg !6463
  %97 = load i8*, i8** %95, align 8, !dbg !6464
  %98 = icmp eq i8* %97, null, !dbg !6466
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.179, i64 0, i64 0), i8** %9, align 8, !dbg !6468
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %38
  %99 = load i8*, i8** %9, align 8, !dbg !6470
  %100 = getelementptr inbounds i8, i8* %99, i64 0, !dbg !6470
  %101 = load i8, i8* %100, align 1, !dbg !6470
  %102 = sext i8 %101 to i32, !dbg !6470
  %103 = icmp eq i32 %102, 0, !dbg !6474
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %60
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.180, i64 0, i64 0), i8** %9, align 8, !dbg !6476
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %77
  %104 = load i8*, i8** %9, align 8, !dbg !6478
  br label %originalBB14
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fclose(%struct._IO_FILE* nonnull) #4 !dbg !6483 {
  %2 = load i32, i32* @x.117
  %3 = load i32, i32* @y.118
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %11, metadata !6521, metadata !DIExpression()), !dbg !6522
  call void @llvm.dbg.declare(metadata i32* %12, metadata !6523, metadata !DIExpression()), !dbg !6524
  store i32 0, i32* %12, align 4, !dbg !6524
  call void @llvm.dbg.declare(metadata i32* %13, metadata !6525, metadata !DIExpression()), !dbg !6526
  call void @llvm.dbg.declare(metadata i32* %14, metadata !6527, metadata !DIExpression()), !dbg !6528
  store i32 0, i32* %14, align 4, !dbg !6528
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6529
  %16 = call i32 @fileno(%struct._IO_FILE* %15) #10, !dbg !6530
  store i32 %16, i32* %13, align 4, !dbg !6531
  %17 = load i32, i32* %13, align 4, !dbg !6532
  %18 = icmp slt i32 %17, 0, !dbg !6534
  %19 = load i32, i32* @x.117
  %20 = load i32, i32* @y.118
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %46, !dbg !6535

27:                                               ; preds = %originalBBpart2
  %28 = load i32, i32* @x.117
  %29 = load i32, i32* @y.118
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6536
  %37 = call i32 @fclose(%struct._IO_FILE* %36), !dbg !6537
  store i32 %37, i32* %10, align 4, !dbg !6538
  %38 = load i32, i32* @x.117
  %39 = load i32, i32* @y.118
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %168, !dbg !6538

46:                                               ; preds = %originalBBpart2
  %47 = load i32, i32* @x.117
  %48 = load i32, i32* @y.118
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %46, %originalBB6alteredBB
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6539
  %56 = call i32 @__freading(%struct._IO_FILE* %55) #10, !dbg !6539
  %57 = icmp ne i32 %56, 0, !dbg !6539
  %58 = load i32, i32* @x.117
  %59 = load i32, i32* @y.118
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %57, label %66, label %87, !dbg !6541

66:                                               ; preds = %originalBBpart28
  %67 = load i32, i32* @x.117
  %68 = load i32, i32* @y.118
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %66, %originalBB10alteredBB
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6542
  %76 = call i32 @fileno(%struct._IO_FILE* %75) #10, !dbg !6543
  %77 = call i64 @lseek(i32 %76, i64 0, i32 1) #10, !dbg !6544
  %78 = icmp ne i64 %77, -1, !dbg !6545
  %79 = load i32, i32* @x.117
  %80 = load i32, i32* @y.118
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %78, label %87, label %110, !dbg !6546

87:                                               ; preds = %originalBBpart212, %originalBBpart28
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6547
  %89 = call i32 @rpl_fflush(%struct._IO_FILE* %88), !dbg !6548
  %90 = icmp ne i32 %89, 0, !dbg !6548
  br i1 %90, label %91, label %110, !dbg !6549

91:                                               ; preds = %87
  %92 = load i32, i32* @x.117
  %93 = load i32, i32* @y.118
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %91, %originalBB14alteredBB
  %100 = call i32* @__errno_location() #15, !dbg !6550
  %101 = load i32, i32* %100, align 4, !dbg !6550
  store i32 %101, i32* %12, align 4, !dbg !6551
  %102 = load i32, i32* @x.117
  %103 = load i32, i32* @y.118
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %110, !dbg !6552

110:                                              ; preds = %originalBBpart216, %87, %originalBBpart212
  %111 = load i32, i32* @x.117
  %112 = load i32, i32* @y.118
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %110, %originalBB18alteredBB
  %119 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6553
  %120 = call i32 @fclose(%struct._IO_FILE* %119), !dbg !6554
  store i32 %120, i32* %14, align 4, !dbg !6555
  %121 = load i32, i32* %12, align 4, !dbg !6556
  %122 = icmp ne i32 %121, 0, !dbg !6558
  %123 = load i32, i32* @x.117
  %124 = load i32, i32* @y.118
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %122, label %131, label %150, !dbg !6559

131:                                              ; preds = %originalBBpart220
  %132 = load i32, i32* @x.117
  %133 = load i32, i32* @y.118
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %131, %originalBB22alteredBB
  %140 = load i32, i32* %12, align 4, !dbg !6560
  %141 = call i32* @__errno_location() #15, !dbg !6562
  store i32 %140, i32* %141, align 4, !dbg !6563
  store i32 -1, i32* %14, align 4, !dbg !6564
  %142 = load i32, i32* @x.117
  %143 = load i32, i32* @y.118
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %150, !dbg !6565

150:                                              ; preds = %originalBBpart224, %originalBBpart220
  %151 = load i32, i32* @x.117
  %152 = load i32, i32* @y.118
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %150, %originalBB26alteredBB
  %159 = load i32, i32* %14, align 4, !dbg !6566
  store i32 %159, i32* %10, align 4, !dbg !6567
  %160 = load i32, i32* @x.117
  %161 = load i32, i32* @y.118
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %168, !dbg !6567

168:                                              ; preds = %originalBBpart228, %originalBBpart24
  %169 = load i32, i32* @x.117
  %170 = load i32, i32* @y.118
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %168, %originalBB30alteredBB
  %177 = load i32, i32* %10, align 4, !dbg !6568
  %178 = load i32, i32* @x.117
  %179 = load i32, i32* @y.118
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  ret i32 %177, !dbg !6568

originalBBalteredBB:                              ; preds = %originalBB, %1
  %186 = alloca i32, align 4
  %187 = alloca %struct._IO_FILE*, align 8
  %188 = alloca i32, align 4
  %189 = alloca i32, align 4
  %190 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %187, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %187, metadata !6569, metadata !DIExpression()), !dbg !6522
  call void @llvm.dbg.declare(metadata i32* %188, metadata !6608, metadata !DIExpression()), !dbg !6524
  store i32 0, i32* %188, align 4, !dbg !6524
  call void @llvm.dbg.declare(metadata i32* %189, metadata !6609, metadata !DIExpression()), !dbg !6526
  call void @llvm.dbg.declare(metadata i32* %190, metadata !6610, metadata !DIExpression()), !dbg !6528
  store i32 0, i32* %190, align 4, !dbg !6528
  %191 = load %struct._IO_FILE*, %struct._IO_FILE** %187, align 8, !dbg !6529
  %192 = call i32 @fileno(%struct._IO_FILE* %191) #10, !dbg !6530
  store i32 %192, i32* %189, align 4, !dbg !6531
  %193 = load i32, i32* %189, align 4, !dbg !6532
  %194 = icmp slt i32 %193, 0, !dbg !6534
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %195 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6536
  %196 = call i32 @fclose(%struct._IO_FILE* %195), !dbg !6537
  store i32 %196, i32* %10, align 4, !dbg !6538
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %46
  %197 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6539
  %198 = call i32 @__freading(%struct._IO_FILE* %197) #10, !dbg !6539
  %199 = icmp ne i32 %198, 0, !dbg !6539
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %66
  %200 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6542
  %201 = call i32 @fileno(%struct._IO_FILE* %200) #10, !dbg !6543
  %202 = call i64 @lseek(i32 %201, i64 0, i32 1) #10, !dbg !6544
  %203 = icmp ne i64 %202, -1, !dbg !6545
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %91
  %204 = call i32* @__errno_location() #15, !dbg !6550
  %205 = load i32, i32* %204, align 4, !dbg !6550
  store i32 %205, i32* %12, align 4, !dbg !6551
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %110
  %206 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6553
  %207 = call i32 @fclose(%struct._IO_FILE* %206), !dbg !6554
  store i32 %207, i32* %14, align 4, !dbg !6555
  %208 = load i32, i32* %12, align 4, !dbg !6556
  %209 = icmp ne i32 %208, 0, !dbg !6558
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %131
  %210 = load i32, i32* %12, align 4, !dbg !6560
  %211 = call i32* @__errno_location() #15, !dbg !6562
  store i32 %210, i32* %211, align 4, !dbg !6563
  store i32 -1, i32* %14, align 4, !dbg !6564
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %150
  %212 = load i32, i32* %14, align 4, !dbg !6566
  store i32 %212, i32* %10, align 4, !dbg !6567
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %168
  %213 = load i32, i32* %10, align 4, !dbg !6568
  br label %originalBB30
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fflush(%struct._IO_FILE*) #4 !dbg !6611 {
  %2 = load i32, i32* @x.119
  %3 = load i32, i32* @y.120
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %11, metadata !6649, metadata !DIExpression()), !dbg !6650
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6651
  %13 = icmp eq %struct._IO_FILE* %12, null, !dbg !6653
  %14 = load i32, i32* @x.119
  %15 = load i32, i32* @y.120
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %13, label %26, label %22, !dbg !6654

22:                                               ; preds = %originalBBpart2
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6655
  %24 = call i32 @__freading(%struct._IO_FILE* %23) #10, !dbg !6655
  %25 = icmp ne i32 %24, 0, !dbg !6655
  br i1 %25, label %45, label %26, !dbg !6656

26:                                               ; preds = %22, %originalBBpart2
  %27 = load i32, i32* @x.119
  %28 = load i32, i32* @y.120
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6657
  %36 = call i32 @fflush(%struct._IO_FILE* %35), !dbg !6658
  store i32 %36, i32* %10, align 4, !dbg !6659
  %37 = load i32, i32* @x.119
  %38 = load i32, i32* @y.120
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %65, !dbg !6659

45:                                               ; preds = %22
  %46 = load i32, i32* @x.119
  %47 = load i32, i32* @y.120
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %45, %originalBB6alteredBB
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6660
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %54), !dbg !6661
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6662
  %56 = call i32 @fflush(%struct._IO_FILE* %55), !dbg !6663
  store i32 %56, i32* %10, align 4, !dbg !6664
  %57 = load i32, i32* @x.119
  %58 = load i32, i32* @y.120
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %65, !dbg !6664

65:                                               ; preds = %originalBBpart28, %originalBBpart24
  %66 = load i32, i32* @x.119
  %67 = load i32, i32* @y.120
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %65, %originalBB10alteredBB
  %74 = load i32, i32* %10, align 4, !dbg !6665
  %75 = load i32, i32* @x.119
  %76 = load i32, i32* @y.120
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret i32 %74, !dbg !6665

originalBBalteredBB:                              ; preds = %originalBB, %1
  %83 = alloca i32, align 4
  %84 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %84, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %84, metadata !6666, metadata !DIExpression()), !dbg !6650
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** %84, align 8, !dbg !6651
  %86 = icmp eq %struct._IO_FILE* %85, null, !dbg !6653
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6657
  %88 = call i32 @fflush(%struct._IO_FILE* %87), !dbg !6658
  store i32 %88, i32* %10, align 4, !dbg !6659
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %45
  %89 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6660
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %89), !dbg !6661
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6662
  %91 = call i32 @fflush(%struct._IO_FILE* %90), !dbg !6663
  store i32 %91, i32* %10, align 4, !dbg !6664
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %65
  %92 = load i32, i32* %10, align 4, !dbg !6665
  br label %originalBB10
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE*) #4 !dbg !6705 {
  %2 = load i32, i32* @x.121
  %3 = load i32, i32* @y.122
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %10, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %10, metadata !6708, metadata !DIExpression()), !dbg !6709
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8, !dbg !6710
  %12 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %11, i32 0, i32 0, !dbg !6712
  %13 = load i32, i32* %12, align 8, !dbg !6712
  %14 = and i32 %13, 256, !dbg !6713
  %15 = icmp ne i32 %14, 0, !dbg !6713
  %16 = load i32, i32* @x.121
  %17 = load i32, i32* @y.122
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %43, !dbg !6714

24:                                               ; preds = %originalBBpart2
  %25 = load i32, i32* @x.121
  %26 = load i32, i32* @y.122
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB3, label %originalBB3alteredBB

originalBB3:                                      ; preds = %24, %originalBB3alteredBB
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8, !dbg !6715
  %34 = call i32 @rpl_fseeko(%struct._IO_FILE* %33, i64 0, i32 1), !dbg !6716
  %35 = load i32, i32* @x.121
  %36 = load i32, i32* @y.122
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart25, label %originalBB3alteredBB

originalBBpart25:                                 ; preds = %originalBB3
  br label %43, !dbg !6716

43:                                               ; preds = %originalBBpart25, %originalBBpart2
  ret void, !dbg !6717

originalBBalteredBB:                              ; preds = %originalBB, %1
  %44 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %44, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %44, metadata !6718, metadata !DIExpression()), !dbg !6709
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** %44, align 8, !dbg !6710
  %46 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %45, i32 0, i32 0, !dbg !6712
  %47 = load i32, i32* %46, align 8, !dbg !6712
  %_ = sub i32 0, %47
  %gen = add i32 %_, 256
  %_1 = sub i32 %47, 256
  %gen2 = mul i32 %_1, 256
  %48 = and i32 %47, 256, !dbg !6713
  %49 = icmp ne i32 %48, 0, !dbg !6713
  br label %originalBB

originalBB3alteredBB:                             ; preds = %originalBB3, %24
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8, !dbg !6715
  %51 = call i32 @rpl_fseeko(%struct._IO_FILE* %50, i64 0, i32 1), !dbg !6716
  br label %originalBB3
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fseeko(%struct._IO_FILE* nonnull, i64, i32) #4 !dbg !6757 {
  %4 = load i32, i32* @x.123
  %5 = load i32, i32* @y.124
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca %struct._IO_FILE*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %13, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %13, metadata !6796, metadata !DIExpression()), !dbg !6797
  store i64 %1, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !6798, metadata !DIExpression()), !dbg !6799
  store i32 %2, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !6800, metadata !DIExpression()), !dbg !6801
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !6802
  %18 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 2, !dbg !6804
  %19 = load i8*, i8** %18, align 8, !dbg !6804
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !6805
  %21 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %20, i32 0, i32 1, !dbg !6806
  %22 = load i8*, i8** %21, align 8, !dbg !6806
  %23 = icmp eq i8* %19, %22, !dbg !6807
  %24 = load i32, i32* @x.123
  %25 = load i32, i32* @y.124
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %126, !dbg !6808

32:                                               ; preds = %originalBBpart2
  %33 = load i32, i32* @x.123
  %34 = load i32, i32* @y.124
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !6809
  %42 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %41, i32 0, i32 5, !dbg !6810
  %43 = load i8*, i8** %42, align 8, !dbg !6810
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !6811
  %45 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %44, i32 0, i32 4, !dbg !6812
  %46 = load i8*, i8** %45, align 8, !dbg !6812
  %47 = icmp eq i8* %43, %46, !dbg !6813
  %48 = load i32, i32* @x.123
  %49 = load i32, i32* @y.124
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %47, label %56, label %126, !dbg !6814

56:                                               ; preds = %originalBBpart24
  %57 = load i32, i32* @x.123
  %58 = load i32, i32* @y.124
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %56, %originalBB6alteredBB
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !6815
  %66 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %65, i32 0, i32 9, !dbg !6816
  %67 = load i8*, i8** %66, align 8, !dbg !6816
  %68 = icmp eq i8* %67, null, !dbg !6817
  %69 = load i32, i32* @x.123
  %70 = load i32, i32* @y.124
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %68, label %77, label %126, !dbg !6818

77:                                               ; preds = %originalBBpart28
  call void @llvm.dbg.declare(metadata i64* %16, metadata !6819, metadata !DIExpression()), !dbg !6821
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !6822
  %79 = call i32 @fileno(%struct._IO_FILE* %78) #10, !dbg !6823
  %80 = load i64, i64* %14, align 8, !dbg !6824
  %81 = load i32, i32* %15, align 4, !dbg !6825
  %82 = call i64 @lseek(i32 %79, i64 %80, i32 %81) #10, !dbg !6826
  store i64 %82, i64* %16, align 8, !dbg !6821
  %83 = load i64, i64* %16, align 8, !dbg !6827
  %84 = icmp eq i64 %83, -1, !dbg !6829
  br i1 %84, label %85, label %102, !dbg !6830

85:                                               ; preds = %77
  %86 = load i32, i32* @x.123
  %87 = load i32, i32* @y.124
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %85, %originalBB10alteredBB
  store i32 -1, i32* %12, align 4, !dbg !6831
  %94 = load i32, i32* @x.123
  %95 = load i32, i32* @y.124
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %147, !dbg !6831

102:                                              ; preds = %77
  %103 = load i32, i32* @x.123
  %104 = load i32, i32* @y.124
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %102, %originalBB14alteredBB
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !6833
  %112 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %111, i32 0, i32 0, !dbg !6834
  %113 = load i32, i32* %112, align 8, !dbg !6835
  %114 = and i32 %113, -17, !dbg !6835
  store i32 %114, i32* %112, align 8, !dbg !6835
  %115 = load i64, i64* %16, align 8, !dbg !6836
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !6837
  %117 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %116, i32 0, i32 21, !dbg !6838
  store i64 %115, i64* %117, align 8, !dbg !6839
  store i32 0, i32* %12, align 4, !dbg !6840
  %118 = load i32, i32* @x.123
  %119 = load i32, i32* @y.124
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart223, label %originalBB14alteredBB

originalBBpart223:                                ; preds = %originalBB14
  br label %147, !dbg !6840

126:                                              ; preds = %originalBBpart28, %originalBBpart24, %originalBBpart2
  %127 = load i32, i32* @x.123
  %128 = load i32, i32* @y.124
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %126, %originalBB25alteredBB
  %135 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !6841
  %136 = load i64, i64* %14, align 8, !dbg !6842
  %137 = load i32, i32* %15, align 4, !dbg !6843
  %138 = call i32 @fseeko(%struct._IO_FILE* %135, i64 %136, i32 %137), !dbg !6844
  store i32 %138, i32* %12, align 4, !dbg !6845
  %139 = load i32, i32* @x.123
  %140 = load i32, i32* @y.124
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  br label %147, !dbg !6845

147:                                              ; preds = %originalBBpart227, %originalBBpart223, %originalBBpart212
  %148 = load i32, i32* @x.123
  %149 = load i32, i32* @y.124
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %147, %originalBB29alteredBB
  %156 = load i32, i32* %12, align 4, !dbg !6846
  %157 = load i32, i32* @x.123
  %158 = load i32, i32* @y.124
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  ret i32 %156, !dbg !6846

originalBBalteredBB:                              ; preds = %originalBB, %3
  %165 = alloca i32, align 4
  %166 = alloca %struct._IO_FILE*, align 8
  %167 = alloca i64, align 8
  %168 = alloca i32, align 4
  %169 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %166, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %166, metadata !6847, metadata !DIExpression()), !dbg !6797
  store i64 %1, i64* %167, align 8
  call void @llvm.dbg.declare(metadata i64* %167, metadata !6886, metadata !DIExpression()), !dbg !6799
  store i32 %2, i32* %168, align 4
  call void @llvm.dbg.declare(metadata i32* %168, metadata !6887, metadata !DIExpression()), !dbg !6801
  %170 = load %struct._IO_FILE*, %struct._IO_FILE** %166, align 8, !dbg !6802
  %171 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %170, i32 0, i32 2, !dbg !6804
  %172 = load i8*, i8** %171, align 8, !dbg !6804
  %173 = load %struct._IO_FILE*, %struct._IO_FILE** %166, align 8, !dbg !6805
  %174 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %173, i32 0, i32 1, !dbg !6806
  %175 = load i8*, i8** %174, align 8, !dbg !6806
  %176 = icmp eq i8* %172, %175, !dbg !6807
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %177 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !6809
  %178 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %177, i32 0, i32 5, !dbg !6810
  %179 = load i8*, i8** %178, align 8, !dbg !6810
  %180 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !6811
  %181 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %180, i32 0, i32 4, !dbg !6812
  %182 = load i8*, i8** %181, align 8, !dbg !6812
  %183 = icmp eq i8* %179, %182, !dbg !6813
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %56
  %184 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !6815
  %185 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %184, i32 0, i32 9, !dbg !6816
  %186 = load i8*, i8** %185, align 8, !dbg !6816
  %187 = icmp eq i8* %186, null, !dbg !6817
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %85
  store i32 -1, i32* %12, align 4, !dbg !6831
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %102
  %188 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !6833
  %189 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %188, i32 0, i32 0, !dbg !6834
  %190 = load i32, i32* %189, align 8, !dbg !6835
  %_ = sub i32 0, %190
  %gen = add i32 %_, -17
  %_15 = sub i32 0, %190
  %gen16 = add i32 %_15, -17
  %_17 = sub i32 0, %190
  %gen18 = add i32 %_17, -17
  %_19 = sub i32 %190, -17
  %gen20 = mul i32 %_19, -17
  %_21 = shl i32 %190, -17
  %191 = and i32 %190, -17, !dbg !6835
  store i32 %191, i32* %189, align 8, !dbg !6835
  %192 = load i64, i64* %16, align 8, !dbg !6836
  %193 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !6837
  %194 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %193, i32 0, i32 21, !dbg !6838
  store i64 %192, i64* %194, align 8, !dbg !6839
  store i32 0, i32* %12, align 4, !dbg !6840
  br label %originalBB14

originalBB25alteredBB:                            ; preds = %originalBB25, %126
  %195 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !6841
  %196 = load i64, i64* %14, align 8, !dbg !6842
  %197 = load i32, i32* %15, align 4, !dbg !6843
  %198 = call i32 @fseeko(%struct._IO_FILE* %195, i64 %196, i32 %197), !dbg !6844
  store i32 %198, i32* %12, align 4, !dbg !6845
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %147
  %199 = load i32, i32* %12, align 4, !dbg !6846
  br label %originalBB29
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

define private i32 @controle(i8*, i32) {
  %3 = load i32, i32* @x.125
  %4 = load i32, i32* @y.126
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = load i32, i32* @inVal0
  %12 = icmp sgt i32 %11, 0
  %13 = load i32, i32* @x.125
  %14 = load i32, i32* @y.126
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %25, label %21

21:                                               ; preds = %originalBBpart2
  call void @srand(i32 %1)
  %22 = call i32 @rand()
  %23 = srem i32 %22, 50000
  %24 = add i32 %23, 2
  ret i32 %24

25:                                               ; preds = %originalBBpart2
  %26 = load i32, i32* @x.125
  %27 = load i32, i32* @y.126
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %25, %originalBB1alteredBB
  %34 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal2, i32 0, i32 0
  %35 = call i32 @strcmp(i8* %34, i8* %0)
  %36 = icmp eq i32 %35, 0
  %37 = load i32, i32* @x.125
  %38 = load i32, i32* @y.126
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %36, label %45, label %80

45:                                               ; preds = %originalBBpart24
  %46 = load i32, i32* @x.125
  %47 = load i32, i32* @y.126
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %45, %originalBB6alteredBB
  %54 = icmp eq i32 %1, -1
  %55 = load i32, i32* @x.125
  %56 = load i32, i32* @y.126
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %54, label %63, label %80

63:                                               ; preds = %originalBBpart28
  %64 = load i32, i32* @x.125
  %65 = load i32, i32* @y.126
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %63, %originalBB10alteredBB
  %72 = load i32, i32* @x.125
  %73 = load i32, i32* @y.126
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret i32 5

80:                                               ; preds = %originalBBpart28, %originalBBpart24
  %81 = load i32, i32* @x.125
  %82 = load i32, i32* @y.126
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %80, %originalBB14alteredBB
  %89 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal1, i32 0, i32 0
  %90 = call i32 @strcmp(i8* %89, i8* %0)
  %91 = icmp eq i32 %90, 0
  %92 = load i32, i32* @x.125
  %93 = load i32, i32* @y.126
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %91, label %100, label %135

100:                                              ; preds = %originalBBpart216
  %101 = load i32, i32* @x.125
  %102 = load i32, i32* @y.126
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %100, %originalBB18alteredBB
  %109 = icmp eq i32 %1, 7
  %110 = load i32, i32* @x.125
  %111 = load i32, i32* @y.126
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %109, label %118, label %135

118:                                              ; preds = %originalBBpart220
  %119 = load i32, i32* @x.125
  %120 = load i32, i32* @y.126
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %118, %originalBB22alteredBB
  %127 = load i32, i32* @x.125
  %128 = load i32, i32* @y.126
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret i32 3

135:                                              ; preds = %originalBBpart220, %originalBBpart216
  %136 = getelementptr inbounds [3 x i8], [3 x i8]* @.compVal0, i32 0, i32 0
  %137 = call i32 @strcmp(i8* %136, i8* %0)
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %174

139:                                              ; preds = %135
  %140 = load i32, i32* @x.125
  %141 = load i32, i32* @y.126
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %139, %originalBB26alteredBB
  %148 = icmp eq i32 %1, -3
  %149 = load i32, i32* @x.125
  %150 = load i32, i32* @y.126
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %148, label %157, label %174

157:                                              ; preds = %originalBBpart228
  %158 = load i32, i32* @x.125
  %159 = load i32, i32* @y.126
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %157, %originalBB30alteredBB
  %166 = load i32, i32* @x.125
  %167 = load i32, i32* @y.126
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  ret i32 3

174:                                              ; preds = %originalBBpart228, %135
  %175 = load i32, i32* @x.125
  %176 = load i32, i32* @y.126
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %174, %originalBB34alteredBB
  %183 = getelementptr inbounds [3 x i8], [3 x i8]* @.compVal0, i32 0, i32 0
  %184 = call i32 @strcmp(i8* %183, i8* %0)
  %185 = icmp eq i32 %184, 0
  %186 = load i32, i32* @x.125
  %187 = load i32, i32* @y.126
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %185, label %194, label %213

194:                                              ; preds = %originalBBpart236
  %195 = load i32, i32* @x.125
  %196 = load i32, i32* @y.126
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %194, %originalBB38alteredBB
  %203 = icmp eq i32 %1, 0
  %204 = load i32, i32* @x.125
  %205 = load i32, i32* @y.126
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %203, label %212, label %213

212:                                              ; preds = %originalBBpart240
  ret i32 5

213:                                              ; preds = %originalBBpart240, %originalBBpart236
  %214 = load i32, i32* @x.125
  %215 = load i32, i32* @y.126
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %213, %originalBB42alteredBB
  call void @srand(i32 %1)
  %222 = call i32 @rand()
  %223 = srem i32 %222, 50000
  %224 = add i32 %223, 2
  %225 = load i32, i32* @x.125
  %226 = load i32, i32* @y.126
  %227 = sub i32 %225, 1
  %228 = mul i32 %225, %227
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %226, 10
  %232 = or i1 %230, %231
  br i1 %232, label %originalBBpart254, label %originalBB42alteredBB

originalBBpart254:                                ; preds = %originalBB42
  ret i32 %224

originalBBalteredBB:                              ; preds = %originalBB, %2
  %233 = load i32, i32* @inVal0
  %234 = icmp sgt i32 %233, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  %235 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal2, i32 0, i32 0
  %236 = call i32 @strcmp(i8* %235, i8* %0)
  %237 = icmp eq i32 %236, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %45
  %238 = icmp eq i32 %1, -1
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %63
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %80
  %239 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal1, i32 0, i32 0
  %240 = call i32 @strcmp(i8* %239, i8* %0)
  %241 = icmp eq i32 %240, 0
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %100
  %242 = icmp eq i32 %1, 7
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %118
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %139
  %243 = icmp eq i32 %1, -3
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %157
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %174
  %244 = getelementptr inbounds [3 x i8], [3 x i8]* @.compVal0, i32 0, i32 0
  %245 = call i32 @strcmp(i8* %244, i8* %0)
  %246 = icmp eq i32 %245, 0
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %194
  %247 = icmp eq i32 %1, 0
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %213
  call void @srand(i32 %1)
  %248 = call i32 @rand()
  %_ = sub i32 0, %248
  %gen = add i32 %_, 50000
  %_43 = sub i32 %248, 50000
  %gen44 = mul i32 %_43, 50000
  %_45 = shl i32 %248, 50000
  %_46 = sub i32 %248, 50000
  %gen47 = mul i32 %_46, 50000
  %249 = srem i32 %248, 50000
  %_48 = shl i32 %249, 2
  %_49 = sub i32 %249, 2
  %gen50 = mul i32 %_49, 2
  %_51 = sub i32 %249, 2
  %gen52 = mul i32 %_51, 2
  %250 = add i32 %249, 2
  br label %originalBB42
}

declare void @srand(i32)

declare i32 @rand()

attributes #0 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { noreturn }
attributes #15 = { nounwind readnone }

!llvm.dbg.cu = !{!2, !155, !286, !160, !198, !206, !288, !290, !213, !220, !296, !299, !279, !301, !304, !306, !309, !312, !318, !320, !322, !324, !326}
!llvm.ident = !{!328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328}
!llvm.module.flags = !{!329, !330, !331, !332, !333}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "longopts", scope: !2, file: !3, line: 162, type: !141, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !15, nameTableKind: None)
!3 = !DIFile(filename: "src/who.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4 = !{}
!5 = !{!6, !8, !9, !13, !14}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!9 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !10, line: 7, baseType: !11)
!10 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!11 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !12, line: 160, baseType: !13)
!12 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!13 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!14 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!15 = !{!16, !19, !21, !23, !25, !27, !29, !31, !33, !35, !37, !39, !41, !43, !45, !47, !51, !0, !54, !62, !108, !113, !118, !123, !131, !136, !138}
!16 = !DIGlobalVariableExpression(var: !17, expr: !DIExpression())
!17 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!18 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!19 = !DIGlobalVariableExpression(var: !20, expr: !DIExpression())
!20 = distinct !DIGlobalVariable(name: "short_list", scope: !2, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!21 = !DIGlobalVariableExpression(var: !22, expr: !DIExpression())
!22 = distinct !DIGlobalVariable(name: "short_output", scope: !2, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!23 = !DIGlobalVariableExpression(var: !24, expr: !DIExpression())
!24 = distinct !DIGlobalVariable(name: "include_idle", scope: !2, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "include_heading", scope: !2, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!27 = !DIGlobalVariableExpression(var: !28, expr: !DIExpression())
!28 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!29 = !DIGlobalVariableExpression(var: !30, expr: !DIExpression())
!30 = distinct !DIGlobalVariable(name: "include_exit", scope: !2, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!31 = !DIGlobalVariableExpression(var: !32, expr: !DIExpression())
!32 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!33 = !DIGlobalVariableExpression(var: !34, expr: !DIExpression())
!34 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!35 = !DIGlobalVariableExpression(var: !36, expr: !DIExpression())
!36 = distinct !DIGlobalVariable(name: "need_login", scope: !2, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!37 = !DIGlobalVariableExpression(var: !38, expr: !DIExpression())
!38 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!39 = !DIGlobalVariableExpression(var: !40, expr: !DIExpression())
!40 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!41 = !DIGlobalVariableExpression(var: !42, expr: !DIExpression())
!42 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!43 = !DIGlobalVariableExpression(var: !44, expr: !DIExpression())
!44 = distinct !DIGlobalVariable(name: "need_users", scope: !2, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!45 = !DIGlobalVariableExpression(var: !46, expr: !DIExpression())
!46 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!47 = !DIGlobalVariableExpression(var: !48, expr: !DIExpression())
!48 = distinct !DIGlobalVariable(name: "time_format", scope: !2, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64)
!50 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!51 = !DIGlobalVariableExpression(var: !52, expr: !DIExpression())
!52 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!53 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!54 = !DIGlobalVariableExpression(var: !55, expr: !DIExpression())
!55 = distinct !DIGlobalVariable(name: "mesg", scope: !56, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!56 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!57 = !DISubroutineType(types: !58)
!58 = !{null, !53, !49, !50, !53, !49, !49, !49, !49, !49, !49}
!59 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 24, elements: !60)
!60 = !{!61}
!61 = !DISubrange(count: 3)
!62 = !DIGlobalVariableExpression(var: !63, expr: !DIExpression())
!63 = distinct !DIGlobalVariable(name: "hoststr", scope: !64, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!64 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !65, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!65 = !DISubroutineType(types: !66)
!66 = !{null, !67, !9}
!67 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !68, size: 64)
!68 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !69)
!69 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !71)
!70 = !DIFile(filename: "./lib/readutmp.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!71 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !73)
!72 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/utmpx.h", directory: "")
!73 = !{!74, !75, !77, !81, !85, !86, !90, !95, !97, !102, !104}
!74 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !71, file: !72, line: 57, baseType: !14, size: 16)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !71, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!76 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !12, line: 154, baseType: !53)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !71, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!78 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 256, elements: !79)
!79 = !{!80}
!80 = !DISubrange(count: 32)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !71, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!82 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 32, elements: !83)
!83 = !{!84}
!84 = !DISubrange(count: 4)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !71, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !71, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!87 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2048, elements: !88)
!88 = !{!89}
!89 = !DISubrange(count: 256)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !71, file: !72, line: 67, baseType: !91, size: 32, offset: 2656)
!91 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !92)
!92 = !{!93, !94}
!93 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !91, file: !72, line: 45, baseType: !14, size: 16)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !91, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !71, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!96 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !12, line: 41, baseType: !53)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !71, file: !72, line: 79, baseType: !98, size: 64, offset: 2720)
!98 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !71, file: !72, line: 75, size: 64, elements: !99)
!99 = !{!100, !101}
!100 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !98, file: !72, line: 77, baseType: !96, size: 32)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !98, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !71, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 128, elements: !83)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !71, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 160, elements: !106)
!106 = !{!107}
!107 = !DISubrange(count: 20)
!108 = !DIGlobalVariableExpression(var: !109, expr: !DIExpression())
!109 = distinct !DIGlobalVariable(name: "hostlen", scope: !64, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !111, line: 46, baseType: !112)
!111 = !DIFile(filename: "/usr/lib/llvm-9/lib/clang/9.0.1/include/stddef.h", directory: "")
!112 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!113 = !DIGlobalVariableExpression(var: !114, expr: !DIExpression())
!114 = distinct !DIGlobalVariable(name: "now", scope: !115, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!115 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!116 = !DISubroutineType(types: !117)
!117 = !{!49, !9, !9}
!118 = !DIGlobalVariableExpression(var: !119, expr: !DIExpression())
!119 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !115, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 48, elements: !121)
!121 = !{!122}
!122 = !DISubrange(count: 6)
!123 = !DIGlobalVariableExpression(var: !124, expr: !DIExpression())
!124 = distinct !DIGlobalVariable(name: "buf", scope: !125, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!125 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !126, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!126 = !DISubroutineType(types: !127)
!127 = !{!49, !67}
!128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 264, elements: !129)
!129 = !{!130}
!130 = !DISubrange(count: 33)
!131 = !DIGlobalVariableExpression(var: !132, expr: !DIExpression())
!132 = distinct !DIGlobalVariable(name: "runlevline", scope: !133, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!133 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !134, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!134 = !DISubroutineType(types: !135)
!135 = !{null, !67}
!136 = !DIGlobalVariableExpression(var: !137, expr: !DIExpression())
!137 = distinct !DIGlobalVariable(name: "comment", scope: !133, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!138 = !DIGlobalVariableExpression(var: !139, expr: !DIExpression())
!139 = distinct !DIGlobalVariable(name: "exitstr", scope: !140, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!140 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !134, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 4608, elements: !151)
!142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !143)
!143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !145)
!144 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/getopt_ext.h", directory: "")
!145 = !{!146, !147, !148, !150}
!146 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !143, file: !144, line: 52, baseType: !49, size: 64)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !143, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !143, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !143, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!151 = !{!152}
!152 = !DISubrange(count: 18)
!153 = !DIGlobalVariableExpression(var: !154, expr: !DIExpression())
!154 = distinct !DIGlobalVariable(name: "Version", scope: !155, file: !156, line: 2, type: !49, isLocal: false, isDefinition: true)
!155 = distinct !DICompileUnit(language: DW_LANG_C99, file: !156, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !157, nameTableKind: None)
!156 = !DIFile(filename: "src/version.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!157 = !{!153}
!158 = !DIGlobalVariableExpression(var: !159, expr: !DIExpression())
!159 = distinct !DIGlobalVariable(name: "last_cherror", scope: !160, file: !166, line: 28, type: !53, isLocal: true, isDefinition: true)
!160 = distinct !DICompileUnit(language: DW_LANG_C99, file: !161, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !162, nameTableKind: None)
!161 = !DIFile(filename: "./lib/canon-host.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!162 = !{!163, !158}
!163 = !DIGlobalVariableExpression(var: !164, expr: !DIExpression())
!164 = distinct !DIGlobalVariable(name: "hints", scope: !165, file: !166, line: 64, type: !169, isLocal: true, isDefinition: true)
!165 = distinct !DISubprogram(name: "canon_host_r", scope: !166, file: !166, line: 61, type: !167, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !160, retainedNodes: !4)
!166 = !DIFile(filename: "lib/canon-host.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!167 = !DISubroutineType(types: !168)
!168 = !{!6, !49, !149}
!169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "addrinfo", file: !170, line: 565, size: 384, elements: !171)
!170 = !DIFile(filename: "/usr/include/netdb.h", directory: "")
!171 = !{!172, !173, !174, !175, !176, !181, !193, !194}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "ai_flags", scope: !169, file: !170, line: 567, baseType: !53, size: 32)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "ai_family", scope: !169, file: !170, line: 568, baseType: !53, size: 32, offset: 32)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "ai_socktype", scope: !169, file: !170, line: 569, baseType: !53, size: 32, offset: 64)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "ai_protocol", scope: !169, file: !170, line: 570, baseType: !53, size: 32, offset: 96)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addrlen", scope: !169, file: !170, line: 571, baseType: !177, size: 32, offset: 128)
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !178, line: 33, baseType: !179)
!178 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket.h", directory: "")
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "__socklen_t", file: !12, line: 209, baseType: !180)
!180 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addr", scope: !169, file: !170, line: 572, baseType: !182, size: 64, offset: 192)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !178, line: 178, size: 128, elements: !184)
!184 = !{!185, !189}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !183, file: !178, line: 180, baseType: !186, size: 16)
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !187, line: 28, baseType: !188)
!187 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sockaddr.h", directory: "")
!188 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !183, file: !178, line: 181, baseType: !190, size: 112, offset: 16)
!190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 112, elements: !191)
!191 = !{!192}
!192 = !DISubrange(count: 14)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "ai_canonname", scope: !169, file: !170, line: 573, baseType: !6, size: 64, offset: 256)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "ai_next", scope: !169, file: !170, line: 574, baseType: !195, size: 64, offset: 320)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 64)
!196 = !DIGlobalVariableExpression(var: !197, expr: !DIExpression())
!197 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !198, file: !203, line: 56, type: !18, isLocal: true, isDefinition: true)
!198 = distinct !DICompileUnit(language: DW_LANG_C99, file: !199, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !200, nameTableKind: None)
!199 = !DIFile(filename: "./lib/closeout.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!200 = !{!201, !196}
!201 = !DIGlobalVariableExpression(var: !202, expr: !DIExpression())
!202 = distinct !DIGlobalVariable(name: "file_name", scope: !198, file: !203, line: 46, type: !49, isLocal: true, isDefinition: true)
!203 = !DIFile(filename: "lib/closeout.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!204 = !DIGlobalVariableExpression(var: !205, expr: !DIExpression())
!205 = distinct !DIGlobalVariable(name: "exit_failure", scope: !206, file: !209, line: 24, type: !210, isLocal: false, isDefinition: true)
!206 = distinct !DICompileUnit(language: DW_LANG_C99, file: !207, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !208, nameTableKind: None)
!207 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!208 = !{!204}
!209 = !DIFile(filename: "lib/exitfail.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!210 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !53)
!211 = !DIGlobalVariableExpression(var: !212, expr: !DIExpression())
!212 = distinct !DIGlobalVariable(name: "program_name", scope: !213, file: !217, line: 33, type: !49, isLocal: false, isDefinition: true)
!213 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, globals: !216, nameTableKind: None)
!214 = !DIFile(filename: "./lib/progname.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!215 = !{!8, !6}
!216 = !{!211}
!217 = !DIFile(filename: "lib/progname.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!218 = !DIGlobalVariableExpression(var: !219, expr: !DIExpression())
!219 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !220, file: !241, line: 116, type: !254, isLocal: true, isDefinition: true)
!220 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !238, nameTableKind: None)
!221 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!222 = !{!223}
!223 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !224, line: 32, baseType: !180, size: 32, elements: !225)
!224 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!225 = !{!226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236}
!226 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!227 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!228 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!229 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!230 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!231 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!232 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!233 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!234 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!235 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!236 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!237 = !{!53, !188, !110}
!238 = !{!239, !246, !252, !218, !264, !266, !273, !275}
!239 = !DIGlobalVariableExpression(var: !240, expr: !DIExpression())
!240 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !220, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!241 = !DIFile(filename: "lib/quotearg.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !243, size: 704, elements: !244)
!243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !49)
!244 = !{!245}
!245 = !DISubrange(count: 11)
!246 = !DIGlobalVariableExpression(var: !247, expr: !DIExpression())
!247 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !220, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !249, size: 320, elements: !250)
!249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !223)
!250 = !{!251}
!251 = !DISubrange(count: 10)
!252 = !DIGlobalVariableExpression(var: !253, expr: !DIExpression())
!253 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !220, file: !241, line: 1052, type: !254, isLocal: false, isDefinition: true)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !255)
!255 = !{!256, !257, !258, !262, !263}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !254, file: !241, line: 68, baseType: !223, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !254, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !254, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !180, size: 256, elements: !260)
!260 = !{!261}
!261 = !DISubrange(count: 8)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !254, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !254, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!264 = !DIGlobalVariableExpression(var: !265, expr: !DIExpression())
!265 = distinct !DIGlobalVariable(name: "slot0", scope: !220, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "slotvec", scope: !220, file: !241, line: 845, type: !268, isLocal: true, isDefinition: true)
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !270)
!270 = !{!271, !272}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !269, file: !241, line: 836, baseType: !110, size: 64)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !269, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!273 = !DIGlobalVariableExpression(var: !274, expr: !DIExpression())
!274 = distinct !DIGlobalVariable(name: "nslots", scope: !220, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!275 = !DIGlobalVariableExpression(var: !276, expr: !DIExpression())
!276 = distinct !DIGlobalVariable(name: "slotvec0", scope: !220, file: !241, line: 844, type: !269, isLocal: true, isDefinition: true)
!277 = !DIGlobalVariableExpression(var: !278, expr: !DIExpression())
!278 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !279, file: !282, line: 26, type: !283, isLocal: false, isDefinition: true)
!279 = distinct !DICompileUnit(language: DW_LANG_C99, file: !280, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !281, nameTableKind: None)
!280 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!281 = !{!277}
!282 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !50, size: 376, elements: !284)
!284 = !{!285}
!285 = !DISubrange(count: 47)
!286 = distinct !DICompileUnit(language: DW_LANG_C99, file: !287, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!287 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!288 = distinct !DICompileUnit(language: DW_LANG_C99, file: !289, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!289 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!290 = distinct !DICompileUnit(language: DW_LANG_C99, file: !291, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !292, nameTableKind: None)
!291 = !DIFile(filename: "./lib/imaxtostr.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!292 = !{!293}
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !294, line: 101, baseType: !295)
!294 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!295 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !12, line: 72, baseType: !13)
!296 = distinct !DICompileUnit(language: DW_LANG_C99, file: !297, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!297 = !DIFile(filename: "./lib/setlocale_null.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!298 = !{!8}
!299 = distinct !DICompileUnit(language: DW_LANG_C99, file: !300, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!300 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!301 = distinct !DICompileUnit(language: DW_LANG_C99, file: !302, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !303, nameTableKind: None)
!302 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!303 = !{!110, !6, !8}
!304 = distinct !DICompileUnit(language: DW_LANG_C99, file: !305, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!305 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!306 = distinct !DICompileUnit(language: DW_LANG_C99, file: !307, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !308, nameTableKind: None)
!307 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!308 = !{!110}
!309 = distinct !DICompileUnit(language: DW_LANG_C99, file: !310, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !311, nameTableKind: None)
!310 = !DIFile(filename: "./lib/readutmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!311 = !{!6, !8}
!312 = distinct !DICompileUnit(language: DW_LANG_C99, file: !313, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !314, nameTableKind: None)
!313 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!314 = !{!315}
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !317)
!317 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!318 = distinct !DICompileUnit(language: DW_LANG_C99, file: !319, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!319 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!320 = distinct !DICompileUnit(language: DW_LANG_C99, file: !321, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!321 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!322 = distinct !DICompileUnit(language: DW_LANG_C99, file: !323, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!323 = !DIFile(filename: "./lib/fclose.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!324 = distinct !DICompileUnit(language: DW_LANG_C99, file: !325, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!325 = !DIFile(filename: "./lib/fflush.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!326 = distinct !DICompileUnit(language: DW_LANG_C99, file: !327, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!327 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!328 = !{!"clang version 9.0.1-12 "}
!329 = !{i32 2, !"Dwarf Version", i32 4}
!330 = !{i32 2, !"Debug Info Version", i32 3}
!331 = !{i32 1, !"wchar_size", i32 4}
!332 = !{i32 1, !"ThinLTO", i32 0}
!333 = !{i32 1, !"EnableSplitLTOUnit", i32 0}
!334 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 638, type: !335, scopeLine: 639, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!335 = !DISubroutineType(types: !336)
!336 = !{null, !53}
!337 = !DILocalVariable(name: "status", arg: 1, scope: !334, file: !3, line: 638, type: !53)
!338 = !DILocation(line: 638, column: 12, scope: !334)
!339 = !DILocation(line: 640, column: 7, scope: !340)
!340 = distinct !DILexicalBlock(scope: !334, file: !3, line: 640, column: 7)
!341 = !DILocation(line: 640, column: 14, scope: !340)
!342 = !DILocation(line: 640, column: 7, scope: !334)
!343 = !DILocation(line: 641, column: 5, scope: !340)
!344 = !DILocation(line: 641, column: 5, scope: !345)
!345 = distinct !DILexicalBlock(scope: !340, file: !3, line: 641, column: 5)
!346 = !DILocation(line: 644, column: 15, scope: !347)
!347 = distinct !DILexicalBlock(scope: !340, file: !3, line: 643, column: 5)
!348 = !DILocation(line: 644, column: 66, scope: !347)
!349 = !DILocation(line: 644, column: 7, scope: !347)
!350 = !DILocation(line: 645, column: 7, scope: !347)
!351 = !DILocation(line: 648, column: 7, scope: !347)
!352 = !DILocation(line: 655, column: 7, scope: !347)
!353 = !DILocation(line: 658, column: 7, scope: !347)
!354 = !DILocation(line: 663, column: 7, scope: !347)
!355 = !DILocation(line: 669, column: 7, scope: !347)
!356 = !DILocation(line: 675, column: 7, scope: !347)
!357 = !DILocation(line: 676, column: 7, scope: !347)
!358 = !DILocation(line: 677, column: 15, scope: !347)
!359 = !DILocation(line: 677, column: 7, scope: !347)
!360 = !DILocation(line: 682, column: 7, scope: !347)
!361 = !DILocation(line: 684, column: 9, scope: !334)
!362 = !DILocation(line: 684, column: 3, scope: !334)
!363 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !364, file: !364, line: 634, type: !365, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!364 = !DIFile(filename: "src/system.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!365 = !DISubroutineType(types: !366)
!366 = !{null, !49}
!367 = !DILocalVariable(name: "program", arg: 1, scope: !363, file: !364, line: 634, type: !49)
!368 = !DILocation(line: 634, column: 34, scope: !363)
!369 = !DILocalVariable(name: "infomap", scope: !363, file: !364, line: 636, type: !370)
!370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !371, size: 896, elements: !376)
!371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !372)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !363, file: !364, line: 636, size: 128, elements: !373)
!373 = !{!374, !375}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !372, file: !364, line: 636, baseType: !49, size: 64)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !372, file: !364, line: 636, baseType: !49, size: 64, offset: 64)
!376 = !{!377}
!377 = !DISubrange(count: 7)
!378 = !DILocation(line: 636, column: 67, scope: !363)
!379 = !DILocalVariable(name: "node", scope: !363, file: !364, line: 646, type: !49)
!380 = !DILocation(line: 646, column: 15, scope: !363)
!381 = !DILocation(line: 646, column: 22, scope: !363)
!382 = !DILocalVariable(name: "map_prog", scope: !363, file: !364, line: 647, type: !383)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!384 = !DILocation(line: 647, column: 25, scope: !363)
!385 = !DILocation(line: 647, column: 36, scope: !363)
!386 = !DILocation(line: 649, column: 3, scope: !363)
!387 = !DILocation(line: 649, column: 10, scope: !363)
!388 = !DILocation(line: 649, column: 20, scope: !363)
!389 = !DILocation(line: 649, column: 28, scope: !363)
!390 = !DILocation(line: 649, column: 33, scope: !363)
!391 = !DILocation(line: 649, column: 31, scope: !363)
!392 = !DILocation(line: 0, scope: !363)
!393 = !DILocation(line: 650, column: 13, scope: !363)
!394 = distinct !{!394, !386, !393}
!395 = !DILocation(line: 652, column: 7, scope: !396)
!396 = distinct !DILexicalBlock(scope: !363, file: !364, line: 652, column: 7)
!397 = !DILocation(line: 652, column: 17, scope: !396)
!398 = !DILocation(line: 652, column: 7, scope: !363)
!399 = !DILocation(line: 653, column: 12, scope: !396)
!400 = !DILocation(line: 653, column: 22, scope: !396)
!401 = !DILocation(line: 653, column: 10, scope: !396)
!402 = !DILocation(line: 653, column: 5, scope: !396)
!403 = !DILocation(line: 655, column: 11, scope: !363)
!404 = !DILocation(line: 655, column: 3, scope: !363)
!405 = !DILocalVariable(name: "lc_messages", scope: !363, file: !364, line: 659, type: !49)
!406 = !DILocation(line: 659, column: 15, scope: !363)
!407 = !DILocation(line: 659, column: 29, scope: !363)
!408 = !DILocation(line: 660, column: 7, scope: !409)
!409 = distinct !DILexicalBlock(scope: !363, file: !364, line: 660, column: 7)
!410 = !DILocation(line: 660, column: 19, scope: !409)
!411 = !DILocation(line: 660, column: 22, scope: !409)
!412 = !DILocation(line: 660, column: 7, scope: !363)
!413 = !DILocation(line: 666, column: 7, scope: !414)
!414 = distinct !DILexicalBlock(scope: !409, file: !364, line: 661, column: 5)
!415 = !DILocation(line: 668, column: 5, scope: !414)
!416 = !DILocation(line: 669, column: 11, scope: !363)
!417 = !DILocation(line: 670, column: 24, scope: !363)
!418 = !DILocation(line: 669, column: 3, scope: !363)
!419 = !DILocation(line: 671, column: 11, scope: !363)
!420 = !DILocation(line: 672, column: 11, scope: !363)
!421 = !DILocation(line: 672, column: 17, scope: !363)
!422 = !DILocation(line: 672, column: 25, scope: !363)
!423 = !DILocation(line: 672, column: 22, scope: !363)
!424 = !DILocation(line: 671, column: 3, scope: !363)
!425 = !DILocation(line: 673, column: 1, scope: !363)
!426 = !DILocalVariable(name: "program", arg: 1, scope: !427, file: !364, line: 634, type: !49)
!427 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !364, file: !364, line: 634, type: !365, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !428, retainedNodes: !4)
!428 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !429, nameTableKind: None)
!429 = !{!430, !432, !434, !436, !438, !440, !442, !444, !446, !448, !450, !452, !454, !456, !458, !460, !462, !464, !474, !477, !506, !508, !511, !513, !518, !523, !525}
!430 = !DIGlobalVariableExpression(var: !431, expr: !DIExpression())
!431 = distinct !DIGlobalVariable(name: "do_lookup", scope: !428, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!432 = !DIGlobalVariableExpression(var: !433, expr: !DIExpression())
!433 = distinct !DIGlobalVariable(name: "short_list", scope: !428, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!434 = !DIGlobalVariableExpression(var: !435, expr: !DIExpression())
!435 = distinct !DIGlobalVariable(name: "short_output", scope: !428, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!436 = !DIGlobalVariableExpression(var: !437, expr: !DIExpression())
!437 = distinct !DIGlobalVariable(name: "include_idle", scope: !428, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!438 = !DIGlobalVariableExpression(var: !439, expr: !DIExpression())
!439 = distinct !DIGlobalVariable(name: "include_heading", scope: !428, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!440 = !DIGlobalVariableExpression(var: !441, expr: !DIExpression())
!441 = distinct !DIGlobalVariable(name: "include_mesg", scope: !428, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!442 = !DIGlobalVariableExpression(var: !443, expr: !DIExpression())
!443 = distinct !DIGlobalVariable(name: "include_exit", scope: !428, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!444 = !DIGlobalVariableExpression(var: !445, expr: !DIExpression())
!445 = distinct !DIGlobalVariable(name: "need_boottime", scope: !428, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!446 = !DIGlobalVariableExpression(var: !447, expr: !DIExpression())
!447 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !428, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!448 = !DIGlobalVariableExpression(var: !449, expr: !DIExpression())
!449 = distinct !DIGlobalVariable(name: "need_login", scope: !428, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!450 = !DIGlobalVariableExpression(var: !451, expr: !DIExpression())
!451 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !428, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!452 = !DIGlobalVariableExpression(var: !453, expr: !DIExpression())
!453 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !428, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!454 = !DIGlobalVariableExpression(var: !455, expr: !DIExpression())
!455 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !428, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!456 = !DIGlobalVariableExpression(var: !457, expr: !DIExpression())
!457 = distinct !DIGlobalVariable(name: "need_users", scope: !428, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!458 = !DIGlobalVariableExpression(var: !459, expr: !DIExpression())
!459 = distinct !DIGlobalVariable(name: "my_line_only", scope: !428, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!460 = !DIGlobalVariableExpression(var: !461, expr: !DIExpression())
!461 = distinct !DIGlobalVariable(name: "time_format", scope: !428, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!462 = !DIGlobalVariableExpression(var: !463, expr: !DIExpression())
!463 = distinct !DIGlobalVariable(name: "time_format_width", scope: !428, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!464 = !DIGlobalVariableExpression(var: !465, expr: !DIExpression())
!465 = distinct !DIGlobalVariable(name: "longopts", scope: !428, file: !3, line: 162, type: !466, isLocal: true, isDefinition: true)
!466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 4608, elements: !151)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !468)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !469)
!469 = !{!470, !471, !472, !473}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !468, file: !144, line: 52, baseType: !49, size: 64)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !468, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !468, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !468, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!474 = !DIGlobalVariableExpression(var: !475, expr: !DIExpression())
!475 = distinct !DIGlobalVariable(name: "mesg", scope: !476, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!476 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !428, retainedNodes: !4)
!477 = !DIGlobalVariableExpression(var: !478, expr: !DIExpression())
!478 = distinct !DIGlobalVariable(name: "hoststr", scope: !479, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!479 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !480, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !428, retainedNodes: !4)
!480 = !DISubroutineType(types: !481)
!481 = !{null, !482, !9}
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !484)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !485)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !486)
!486 = !{!487, !488, !489, !490, !491, !492, !493, !498, !499, !504, !505}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !485, file: !72, line: 57, baseType: !14, size: 16)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !485, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !485, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !485, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !485, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !485, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !485, file: !72, line: 67, baseType: !494, size: 32, offset: 2656)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !495)
!495 = !{!496, !497}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !494, file: !72, line: 45, baseType: !14, size: 16)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !494, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !485, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !485, file: !72, line: 79, baseType: !500, size: 64, offset: 2720)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !485, file: !72, line: 75, size: 64, elements: !501)
!501 = !{!502, !503}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !500, file: !72, line: 77, baseType: !96, size: 32)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !500, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !485, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !485, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!506 = !DIGlobalVariableExpression(var: !507, expr: !DIExpression())
!507 = distinct !DIGlobalVariable(name: "hostlen", scope: !479, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!508 = !DIGlobalVariableExpression(var: !509, expr: !DIExpression())
!509 = distinct !DIGlobalVariable(name: "now", scope: !510, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!510 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !428, retainedNodes: !4)
!511 = !DIGlobalVariableExpression(var: !512, expr: !DIExpression())
!512 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !510, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!513 = !DIGlobalVariableExpression(var: !514, expr: !DIExpression())
!514 = distinct !DIGlobalVariable(name: "buf", scope: !515, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!515 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !516, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !428, retainedNodes: !4)
!516 = !DISubroutineType(types: !517)
!517 = !{!49, !482}
!518 = !DIGlobalVariableExpression(var: !519, expr: !DIExpression())
!519 = distinct !DIGlobalVariable(name: "runlevline", scope: !520, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!520 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !521, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !428, retainedNodes: !4)
!521 = !DISubroutineType(types: !522)
!522 = !{null, !482}
!523 = !DIGlobalVariableExpression(var: !524, expr: !DIExpression())
!524 = distinct !DIGlobalVariable(name: "comment", scope: !520, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!525 = !DIGlobalVariableExpression(var: !526, expr: !DIExpression())
!526 = distinct !DIGlobalVariable(name: "exitstr", scope: !527, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!527 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !521, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !428, retainedNodes: !4)
!528 = !DILocalVariable(name: "infomap", scope: !427, file: !364, line: 636, type: !529)
!529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !530, size: 896, elements: !376)
!530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !531)
!531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !427, file: !364, line: 636, size: 128, elements: !532)
!532 = !{!533, !534}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !531, file: !364, line: 636, baseType: !49, size: 64)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !531, file: !364, line: 636, baseType: !49, size: 64, offset: 64)
!535 = !DILocalVariable(name: "node", scope: !427, file: !364, line: 646, type: !49)
!536 = !DILocalVariable(name: "map_prog", scope: !427, file: !364, line: 647, type: !537)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64)
!538 = !DILocalVariable(name: "lc_messages", scope: !539, file: !364, line: 659, type: !49)
!539 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !364, file: !364, line: 634, type: !365, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !540, retainedNodes: !4)
!540 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !541, nameTableKind: None)
!541 = !{!542, !544, !546, !548, !550, !552, !554, !556, !558, !560, !562, !564, !566, !568, !570, !572, !574, !576, !586, !589, !618, !620, !623, !625, !630, !635, !637}
!542 = !DIGlobalVariableExpression(var: !543, expr: !DIExpression())
!543 = distinct !DIGlobalVariable(name: "do_lookup", scope: !540, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!544 = !DIGlobalVariableExpression(var: !545, expr: !DIExpression())
!545 = distinct !DIGlobalVariable(name: "short_list", scope: !540, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!546 = !DIGlobalVariableExpression(var: !547, expr: !DIExpression())
!547 = distinct !DIGlobalVariable(name: "short_output", scope: !540, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!548 = !DIGlobalVariableExpression(var: !549, expr: !DIExpression())
!549 = distinct !DIGlobalVariable(name: "include_idle", scope: !540, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!550 = !DIGlobalVariableExpression(var: !551, expr: !DIExpression())
!551 = distinct !DIGlobalVariable(name: "include_heading", scope: !540, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!552 = !DIGlobalVariableExpression(var: !553, expr: !DIExpression())
!553 = distinct !DIGlobalVariable(name: "include_mesg", scope: !540, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!554 = !DIGlobalVariableExpression(var: !555, expr: !DIExpression())
!555 = distinct !DIGlobalVariable(name: "include_exit", scope: !540, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!556 = !DIGlobalVariableExpression(var: !557, expr: !DIExpression())
!557 = distinct !DIGlobalVariable(name: "need_boottime", scope: !540, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!558 = !DIGlobalVariableExpression(var: !559, expr: !DIExpression())
!559 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !540, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!560 = !DIGlobalVariableExpression(var: !561, expr: !DIExpression())
!561 = distinct !DIGlobalVariable(name: "need_login", scope: !540, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!562 = !DIGlobalVariableExpression(var: !563, expr: !DIExpression())
!563 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !540, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!564 = !DIGlobalVariableExpression(var: !565, expr: !DIExpression())
!565 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !540, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!566 = !DIGlobalVariableExpression(var: !567, expr: !DIExpression())
!567 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !540, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!568 = !DIGlobalVariableExpression(var: !569, expr: !DIExpression())
!569 = distinct !DIGlobalVariable(name: "need_users", scope: !540, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!570 = !DIGlobalVariableExpression(var: !571, expr: !DIExpression())
!571 = distinct !DIGlobalVariable(name: "my_line_only", scope: !540, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!572 = !DIGlobalVariableExpression(var: !573, expr: !DIExpression())
!573 = distinct !DIGlobalVariable(name: "time_format", scope: !540, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!574 = !DIGlobalVariableExpression(var: !575, expr: !DIExpression())
!575 = distinct !DIGlobalVariable(name: "time_format_width", scope: !540, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!576 = !DIGlobalVariableExpression(var: !577, expr: !DIExpression())
!577 = distinct !DIGlobalVariable(name: "longopts", scope: !540, file: !3, line: 162, type: !578, isLocal: true, isDefinition: true)
!578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !579, size: 4608, elements: !151)
!579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !580)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !581)
!581 = !{!582, !583, !584, !585}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !580, file: !144, line: 52, baseType: !49, size: 64)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !580, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !580, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !580, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!586 = !DIGlobalVariableExpression(var: !587, expr: !DIExpression())
!587 = distinct !DIGlobalVariable(name: "mesg", scope: !588, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!588 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !540, retainedNodes: !4)
!589 = !DIGlobalVariableExpression(var: !590, expr: !DIExpression())
!590 = distinct !DIGlobalVariable(name: "hoststr", scope: !591, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!591 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !592, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !540, retainedNodes: !4)
!592 = !DISubroutineType(types: !593)
!593 = !{null, !594, !9}
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !596)
!596 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !597)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !598)
!598 = !{!599, !600, !601, !602, !603, !604, !605, !610, !611, !616, !617}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !597, file: !72, line: 57, baseType: !14, size: 16)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !597, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !597, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !597, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !597, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !597, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !597, file: !72, line: 67, baseType: !606, size: 32, offset: 2656)
!606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !607)
!607 = !{!608, !609}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !606, file: !72, line: 45, baseType: !14, size: 16)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !606, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !597, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !597, file: !72, line: 79, baseType: !612, size: 64, offset: 2720)
!612 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !597, file: !72, line: 75, size: 64, elements: !613)
!613 = !{!614, !615}
!614 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !612, file: !72, line: 77, baseType: !96, size: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !612, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !597, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !597, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!618 = !DIGlobalVariableExpression(var: !619, expr: !DIExpression())
!619 = distinct !DIGlobalVariable(name: "hostlen", scope: !591, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!620 = !DIGlobalVariableExpression(var: !621, expr: !DIExpression())
!621 = distinct !DIGlobalVariable(name: "now", scope: !622, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!622 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !540, retainedNodes: !4)
!623 = !DIGlobalVariableExpression(var: !624, expr: !DIExpression())
!624 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !622, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!625 = !DIGlobalVariableExpression(var: !626, expr: !DIExpression())
!626 = distinct !DIGlobalVariable(name: "buf", scope: !627, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!627 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !628, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !540, retainedNodes: !4)
!628 = !DISubroutineType(types: !629)
!629 = !{!49, !594}
!630 = !DIGlobalVariableExpression(var: !631, expr: !DIExpression())
!631 = distinct !DIGlobalVariable(name: "runlevline", scope: !632, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!632 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !633, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !540, retainedNodes: !4)
!633 = !DISubroutineType(types: !634)
!634 = !{null, !594}
!635 = !DIGlobalVariableExpression(var: !636, expr: !DIExpression())
!636 = distinct !DIGlobalVariable(name: "comment", scope: !632, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!637 = !DIGlobalVariableExpression(var: !638, expr: !DIExpression())
!638 = distinct !DIGlobalVariable(name: "exitstr", scope: !639, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!639 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !633, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !540, retainedNodes: !4)
!640 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 688, type: !641, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!641 = !DISubroutineType(types: !642)
!642 = !{!53, !53, !643}
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!644 = !DILocalVariable(name: "argc", arg: 1, scope: !640, file: !3, line: 688, type: !53)
!645 = !DILocation(line: 688, column: 11, scope: !640)
!646 = !DILocalVariable(name: "argv", arg: 2, scope: !640, file: !3, line: 688, type: !643)
!647 = !DILocation(line: 688, column: 24, scope: !640)
!648 = !DILocalVariable(name: "optc", scope: !640, file: !3, line: 690, type: !53)
!649 = !DILocation(line: 690, column: 7, scope: !640)
!650 = !DILocalVariable(name: "assumptions", scope: !640, file: !3, line: 691, type: !18)
!651 = !DILocation(line: 691, column: 8, scope: !640)
!652 = !DILocation(line: 694, column: 21, scope: !640)
!653 = !DILocation(line: 694, column: 3, scope: !640)
!654 = !DILocation(line: 695, column: 3, scope: !640)
!655 = !DILocation(line: 696, column: 3, scope: !640)
!656 = !DILocation(line: 697, column: 3, scope: !640)
!657 = !DILocation(line: 699, column: 3, scope: !640)
!658 = !DILocation(line: 701, column: 3, scope: !640)
!659 = !DILocation(line: 701, column: 31, scope: !640)
!660 = !DILocation(line: 701, column: 37, scope: !640)
!661 = !DILocation(line: 701, column: 18, scope: !640)
!662 = !DILocation(line: 701, column: 16, scope: !640)
!663 = !DILocation(line: 702, column: 10, scope: !640)
!664 = !DILocation(line: 704, column: 15, scope: !665)
!665 = distinct !DILexicalBlock(scope: !640, file: !3, line: 703, column: 5)
!666 = !DILocation(line: 704, column: 7, scope: !665)
!667 = !DILocation(line: 707, column: 25, scope: !668)
!668 = distinct !DILexicalBlock(scope: !665, file: !3, line: 705, column: 9)
!669 = !DILocation(line: 708, column: 26, scope: !668)
!670 = !DILocation(line: 709, column: 22, scope: !668)
!671 = !DILocation(line: 710, column: 26, scope: !668)
!672 = !DILocation(line: 711, column: 25, scope: !668)
!673 = !DILocation(line: 712, column: 28, scope: !668)
!674 = !DILocation(line: 713, column: 22, scope: !668)
!675 = !DILocation(line: 714, column: 24, scope: !668)
!676 = !DILocation(line: 715, column: 24, scope: !668)
!677 = !DILocation(line: 716, column: 24, scope: !668)
!678 = !DILocation(line: 717, column: 23, scope: !668)
!679 = !DILocation(line: 718, column: 11, scope: !668)
!680 = !DILocation(line: 721, column: 25, scope: !668)
!681 = !DILocation(line: 722, column: 23, scope: !668)
!682 = !DILocation(line: 723, column: 11, scope: !668)
!683 = !DILocation(line: 726, column: 26, scope: !668)
!684 = !DILocation(line: 727, column: 24, scope: !668)
!685 = !DILocation(line: 728, column: 24, scope: !668)
!686 = !DILocation(line: 729, column: 23, scope: !668)
!687 = !DILocation(line: 730, column: 11, scope: !668)
!688 = !DILocation(line: 733, column: 27, scope: !668)
!689 = !DILocation(line: 734, column: 11, scope: !668)
!690 = !DILocation(line: 737, column: 22, scope: !668)
!691 = !DILocation(line: 738, column: 24, scope: !668)
!692 = !DILocation(line: 739, column: 23, scope: !668)
!693 = !DILocation(line: 740, column: 11, scope: !668)
!694 = !DILocation(line: 743, column: 24, scope: !668)
!695 = !DILocation(line: 744, column: 11, scope: !668)
!696 = !DILocation(line: 747, column: 26, scope: !668)
!697 = !DILocation(line: 748, column: 23, scope: !668)
!698 = !DILocation(line: 749, column: 11, scope: !668)
!699 = !DILocation(line: 752, column: 22, scope: !668)
!700 = !DILocation(line: 753, column: 11, scope: !668)
!701 = !DILocation(line: 756, column: 25, scope: !668)
!702 = !DILocation(line: 757, column: 24, scope: !668)
!703 = !DILocation(line: 758, column: 23, scope: !668)
!704 = !DILocation(line: 759, column: 11, scope: !668)
!705 = !DILocation(line: 762, column: 24, scope: !668)
!706 = !DILocation(line: 763, column: 11, scope: !668)
!707 = !DILocation(line: 766, column: 28, scope: !668)
!708 = !DILocation(line: 767, column: 23, scope: !668)
!709 = !DILocation(line: 768, column: 11, scope: !668)
!710 = !DILocation(line: 772, column: 24, scope: !668)
!711 = !DILocation(line: 773, column: 11, scope: !668)
!712 = !DILocation(line: 776, column: 22, scope: !668)
!713 = !DILocation(line: 777, column: 24, scope: !668)
!714 = !DILocation(line: 778, column: 23, scope: !668)
!715 = !DILocation(line: 779, column: 11, scope: !668)
!716 = !DILocation(line: 782, column: 21, scope: !668)
!717 = !DILocation(line: 783, column: 11, scope: !668)
!718 = !DILocation(line: 785, column: 9, scope: !668)
!719 = !DILocation(line: 787, column: 9, scope: !668)
!720 = !DILocation(line: 790, column: 11, scope: !668)
!721 = distinct !{!721, !658, !722}
!722 = !DILocation(line: 792, column: 5, scope: !640)
!723 = !DILocation(line: 794, column: 7, scope: !724)
!724 = distinct !DILexicalBlock(scope: !640, file: !3, line: 794, column: 7)
!725 = !DILocation(line: 794, column: 7, scope: !640)
!726 = !DILocation(line: 796, column: 18, scope: !727)
!727 = distinct !DILexicalBlock(scope: !724, file: !3, line: 795, column: 5)
!728 = !DILocation(line: 797, column: 20, scope: !727)
!729 = !DILocation(line: 798, column: 5, scope: !727)
!730 = !DILocation(line: 800, column: 7, scope: !731)
!731 = distinct !DILexicalBlock(scope: !640, file: !3, line: 800, column: 7)
!732 = !DILocation(line: 800, column: 7, scope: !640)
!733 = !DILocation(line: 802, column: 20, scope: !734)
!734 = distinct !DILexicalBlock(scope: !731, file: !3, line: 801, column: 5)
!735 = !DILocation(line: 803, column: 5, scope: !734)
!736 = !DILocation(line: 805, column: 7, scope: !737)
!737 = distinct !DILexicalBlock(scope: !640, file: !3, line: 805, column: 7)
!738 = !DILocation(line: 805, column: 7, scope: !640)
!739 = !DILocation(line: 807, column: 19, scope: !740)
!740 = distinct !DILexicalBlock(scope: !737, file: !3, line: 806, column: 5)
!741 = !DILocation(line: 808, column: 25, scope: !740)
!742 = !DILocation(line: 809, column: 5, scope: !740)
!743 = !DILocation(line: 812, column: 19, scope: !744)
!744 = distinct !DILexicalBlock(scope: !737, file: !3, line: 811, column: 5)
!745 = !DILocation(line: 813, column: 25, scope: !744)
!746 = !DILocation(line: 816, column: 11, scope: !640)
!747 = !DILocation(line: 816, column: 18, scope: !640)
!748 = !DILocation(line: 816, column: 16, scope: !640)
!749 = !DILocation(line: 816, column: 3, scope: !640)
!750 = !DILocation(line: 819, column: 20, scope: !751)
!751 = distinct !DILexicalBlock(scope: !640, file: !3, line: 817, column: 5)
!752 = !DILocation(line: 820, column: 7, scope: !751)
!753 = !DILocation(line: 823, column: 7, scope: !751)
!754 = !DILocation(line: 824, column: 7, scope: !751)
!755 = !DILocation(line: 827, column: 12, scope: !751)
!756 = !DILocation(line: 827, column: 17, scope: !751)
!757 = !DILocation(line: 827, column: 7, scope: !751)
!758 = !DILocation(line: 828, column: 7, scope: !751)
!759 = !DILocation(line: 831, column: 20, scope: !751)
!760 = !DILocation(line: 831, column: 50, scope: !751)
!761 = !DILocation(line: 831, column: 55, scope: !751)
!762 = !DILocation(line: 831, column: 62, scope: !751)
!763 = !DILocation(line: 831, column: 43, scope: !751)
!764 = !DILocation(line: 831, column: 7, scope: !751)
!765 = !DILocation(line: 832, column: 7, scope: !751)
!766 = !DILocation(line: 835, column: 3, scope: !640)
!767 = !DILocalVariable(name: "argc", arg: 1, scope: !768, file: !3, line: 688, type: !53)
!768 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 688, type: !641, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !4)
!769 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !770, nameTableKind: None)
!770 = !{!771, !773, !775, !777, !779, !781, !783, !785, !787, !789, !791, !793, !795, !797, !799, !801, !803, !805, !815, !818, !847, !849, !852, !854, !859, !864, !866}
!771 = !DIGlobalVariableExpression(var: !772, expr: !DIExpression())
!772 = distinct !DIGlobalVariable(name: "do_lookup", scope: !769, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!773 = !DIGlobalVariableExpression(var: !774, expr: !DIExpression())
!774 = distinct !DIGlobalVariable(name: "short_list", scope: !769, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!775 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression())
!776 = distinct !DIGlobalVariable(name: "short_output", scope: !769, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!777 = !DIGlobalVariableExpression(var: !778, expr: !DIExpression())
!778 = distinct !DIGlobalVariable(name: "include_idle", scope: !769, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!779 = !DIGlobalVariableExpression(var: !780, expr: !DIExpression())
!780 = distinct !DIGlobalVariable(name: "include_heading", scope: !769, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!781 = !DIGlobalVariableExpression(var: !782, expr: !DIExpression())
!782 = distinct !DIGlobalVariable(name: "include_mesg", scope: !769, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!783 = !DIGlobalVariableExpression(var: !784, expr: !DIExpression())
!784 = distinct !DIGlobalVariable(name: "include_exit", scope: !769, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!785 = !DIGlobalVariableExpression(var: !786, expr: !DIExpression())
!786 = distinct !DIGlobalVariable(name: "need_boottime", scope: !769, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!787 = !DIGlobalVariableExpression(var: !788, expr: !DIExpression())
!788 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !769, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!789 = !DIGlobalVariableExpression(var: !790, expr: !DIExpression())
!790 = distinct !DIGlobalVariable(name: "need_login", scope: !769, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!791 = !DIGlobalVariableExpression(var: !792, expr: !DIExpression())
!792 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !769, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!793 = !DIGlobalVariableExpression(var: !794, expr: !DIExpression())
!794 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !769, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!795 = !DIGlobalVariableExpression(var: !796, expr: !DIExpression())
!796 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !769, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!797 = !DIGlobalVariableExpression(var: !798, expr: !DIExpression())
!798 = distinct !DIGlobalVariable(name: "need_users", scope: !769, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!799 = !DIGlobalVariableExpression(var: !800, expr: !DIExpression())
!800 = distinct !DIGlobalVariable(name: "my_line_only", scope: !769, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!801 = !DIGlobalVariableExpression(var: !802, expr: !DIExpression())
!802 = distinct !DIGlobalVariable(name: "time_format", scope: !769, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!803 = !DIGlobalVariableExpression(var: !804, expr: !DIExpression())
!804 = distinct !DIGlobalVariable(name: "time_format_width", scope: !769, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!805 = !DIGlobalVariableExpression(var: !806, expr: !DIExpression())
!806 = distinct !DIGlobalVariable(name: "longopts", scope: !769, file: !3, line: 162, type: !807, isLocal: true, isDefinition: true)
!807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !808, size: 4608, elements: !151)
!808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !809)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !810)
!810 = !{!811, !812, !813, !814}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !809, file: !144, line: 52, baseType: !49, size: 64)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !809, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !809, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !809, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!815 = !DIGlobalVariableExpression(var: !816, expr: !DIExpression())
!816 = distinct !DIGlobalVariable(name: "mesg", scope: !817, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!817 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !769, retainedNodes: !4)
!818 = !DIGlobalVariableExpression(var: !819, expr: !DIExpression())
!819 = distinct !DIGlobalVariable(name: "hoststr", scope: !820, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!820 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !821, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !769, retainedNodes: !4)
!821 = !DISubroutineType(types: !822)
!822 = !{null, !823, !9}
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !825)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !826)
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !827)
!827 = !{!828, !829, !830, !831, !832, !833, !834, !839, !840, !845, !846}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !826, file: !72, line: 57, baseType: !14, size: 16)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !826, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !826, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !826, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !826, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !826, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !826, file: !72, line: 67, baseType: !835, size: 32, offset: 2656)
!835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !836)
!836 = !{!837, !838}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !835, file: !72, line: 45, baseType: !14, size: 16)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !835, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !826, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !826, file: !72, line: 79, baseType: !841, size: 64, offset: 2720)
!841 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !826, file: !72, line: 75, size: 64, elements: !842)
!842 = !{!843, !844}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !841, file: !72, line: 77, baseType: !96, size: 32)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !841, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !826, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !826, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!847 = !DIGlobalVariableExpression(var: !848, expr: !DIExpression())
!848 = distinct !DIGlobalVariable(name: "hostlen", scope: !820, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!849 = !DIGlobalVariableExpression(var: !850, expr: !DIExpression())
!850 = distinct !DIGlobalVariable(name: "now", scope: !851, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!851 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !769, retainedNodes: !4)
!852 = !DIGlobalVariableExpression(var: !853, expr: !DIExpression())
!853 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !851, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!854 = !DIGlobalVariableExpression(var: !855, expr: !DIExpression())
!855 = distinct !DIGlobalVariable(name: "buf", scope: !856, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!856 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !857, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !769, retainedNodes: !4)
!857 = !DISubroutineType(types: !858)
!858 = !{!49, !823}
!859 = !DIGlobalVariableExpression(var: !860, expr: !DIExpression())
!860 = distinct !DIGlobalVariable(name: "runlevline", scope: !861, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!861 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !862, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !769, retainedNodes: !4)
!862 = !DISubroutineType(types: !863)
!863 = !{null, !823}
!864 = !DIGlobalVariableExpression(var: !865, expr: !DIExpression())
!865 = distinct !DIGlobalVariable(name: "comment", scope: !861, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "exitstr", scope: !868, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!868 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !862, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !769, retainedNodes: !4)
!869 = !DILocalVariable(name: "argv", arg: 2, scope: !768, file: !3, line: 688, type: !643)
!870 = !DILocalVariable(name: "optc", scope: !768, file: !3, line: 690, type: !53)
!871 = !DILocalVariable(name: "assumptions", scope: !768, file: !3, line: 691, type: !18)
!872 = distinct !DISubprogram(name: "who", scope: !3, file: !3, line: 621, type: !873, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!873 = !DISubroutineType(types: !874)
!874 = !{null, !49, !53}
!875 = !DILocalVariable(name: "filename", arg: 1, scope: !872, file: !3, line: 621, type: !49)
!876 = !DILocation(line: 621, column: 18, scope: !872)
!877 = !DILocalVariable(name: "options", arg: 2, scope: !872, file: !3, line: 621, type: !53)
!878 = !DILocation(line: 621, column: 32, scope: !872)
!879 = !DILocalVariable(name: "n_users", scope: !872, file: !3, line: 623, type: !110)
!880 = !DILocation(line: 623, column: 10, scope: !872)
!881 = !DILocalVariable(name: "utmp_buf", scope: !872, file: !3, line: 624, type: !882)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 64)
!883 = !DILocation(line: 624, column: 16, scope: !872)
!884 = !DILocation(line: 626, column: 18, scope: !885)
!885 = distinct !DILexicalBlock(scope: !872, file: !3, line: 626, column: 7)
!886 = !DILocation(line: 626, column: 49, scope: !885)
!887 = !DILocation(line: 626, column: 7, scope: !885)
!888 = !DILocation(line: 626, column: 58, scope: !885)
!889 = !DILocation(line: 626, column: 7, scope: !872)
!890 = !DILocation(line: 627, column: 5, scope: !885)
!891 = !DILocation(line: 629, column: 7, scope: !892)
!892 = distinct !DILexicalBlock(scope: !872, file: !3, line: 629, column: 7)
!893 = !DILocation(line: 629, column: 7, scope: !872)
!894 = !DILocation(line: 630, column: 23, scope: !892)
!895 = !DILocation(line: 630, column: 32, scope: !892)
!896 = !DILocation(line: 630, column: 5, scope: !892)
!897 = !DILocation(line: 632, column: 19, scope: !892)
!898 = !DILocation(line: 632, column: 28, scope: !892)
!899 = !DILocation(line: 632, column: 5, scope: !892)
!900 = !DILocation(line: 634, column: 9, scope: !872)
!901 = !DILocation(line: 634, column: 3, scope: !872)
!902 = !DILocation(line: 635, column: 1, scope: !872)
!903 = !DILocalVariable(name: "filename", arg: 1, scope: !904, file: !3, line: 621, type: !49)
!904 = distinct !DISubprogram(name: "who", scope: !3, file: !3, line: 621, type: !873, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !905, retainedNodes: !4)
!905 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !906, nameTableKind: None)
!906 = !{!907, !909, !911, !913, !915, !917, !919, !921, !923, !925, !927, !929, !931, !933, !935, !937, !939, !941, !951, !954, !983, !985, !988, !990, !995, !1000, !1002}
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "do_lookup", scope: !905, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!909 = !DIGlobalVariableExpression(var: !910, expr: !DIExpression())
!910 = distinct !DIGlobalVariable(name: "short_list", scope: !905, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!911 = !DIGlobalVariableExpression(var: !912, expr: !DIExpression())
!912 = distinct !DIGlobalVariable(name: "short_output", scope: !905, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!913 = !DIGlobalVariableExpression(var: !914, expr: !DIExpression())
!914 = distinct !DIGlobalVariable(name: "include_idle", scope: !905, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!915 = !DIGlobalVariableExpression(var: !916, expr: !DIExpression())
!916 = distinct !DIGlobalVariable(name: "include_heading", scope: !905, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!917 = !DIGlobalVariableExpression(var: !918, expr: !DIExpression())
!918 = distinct !DIGlobalVariable(name: "include_mesg", scope: !905, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!919 = !DIGlobalVariableExpression(var: !920, expr: !DIExpression())
!920 = distinct !DIGlobalVariable(name: "include_exit", scope: !905, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!921 = !DIGlobalVariableExpression(var: !922, expr: !DIExpression())
!922 = distinct !DIGlobalVariable(name: "need_boottime", scope: !905, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!923 = !DIGlobalVariableExpression(var: !924, expr: !DIExpression())
!924 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !905, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!925 = !DIGlobalVariableExpression(var: !926, expr: !DIExpression())
!926 = distinct !DIGlobalVariable(name: "need_login", scope: !905, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!927 = !DIGlobalVariableExpression(var: !928, expr: !DIExpression())
!928 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !905, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!929 = !DIGlobalVariableExpression(var: !930, expr: !DIExpression())
!930 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !905, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!931 = !DIGlobalVariableExpression(var: !932, expr: !DIExpression())
!932 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !905, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!933 = !DIGlobalVariableExpression(var: !934, expr: !DIExpression())
!934 = distinct !DIGlobalVariable(name: "need_users", scope: !905, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!935 = !DIGlobalVariableExpression(var: !936, expr: !DIExpression())
!936 = distinct !DIGlobalVariable(name: "my_line_only", scope: !905, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!937 = !DIGlobalVariableExpression(var: !938, expr: !DIExpression())
!938 = distinct !DIGlobalVariable(name: "time_format", scope: !905, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!939 = !DIGlobalVariableExpression(var: !940, expr: !DIExpression())
!940 = distinct !DIGlobalVariable(name: "time_format_width", scope: !905, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!941 = !DIGlobalVariableExpression(var: !942, expr: !DIExpression())
!942 = distinct !DIGlobalVariable(name: "longopts", scope: !905, file: !3, line: 162, type: !943, isLocal: true, isDefinition: true)
!943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !944, size: 4608, elements: !151)
!944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !945)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !946)
!946 = !{!947, !948, !949, !950}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !945, file: !144, line: 52, baseType: !49, size: 64)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !945, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !945, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !945, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!951 = !DIGlobalVariableExpression(var: !952, expr: !DIExpression())
!952 = distinct !DIGlobalVariable(name: "mesg", scope: !953, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!953 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !905, retainedNodes: !4)
!954 = !DIGlobalVariableExpression(var: !955, expr: !DIExpression())
!955 = distinct !DIGlobalVariable(name: "hoststr", scope: !956, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!956 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !957, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !905, retainedNodes: !4)
!957 = !DISubroutineType(types: !958)
!958 = !{null, !959, !9}
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !961)
!961 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !962)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !963)
!963 = !{!964, !965, !966, !967, !968, !969, !970, !975, !976, !981, !982}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !962, file: !72, line: 57, baseType: !14, size: 16)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !962, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !962, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !962, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !962, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !962, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !962, file: !72, line: 67, baseType: !971, size: 32, offset: 2656)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !972)
!972 = !{!973, !974}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !971, file: !72, line: 45, baseType: !14, size: 16)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !971, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !962, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !962, file: !72, line: 79, baseType: !977, size: 64, offset: 2720)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !962, file: !72, line: 75, size: 64, elements: !978)
!978 = !{!979, !980}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !977, file: !72, line: 77, baseType: !96, size: 32)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !977, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !962, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !962, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!983 = !DIGlobalVariableExpression(var: !984, expr: !DIExpression())
!984 = distinct !DIGlobalVariable(name: "hostlen", scope: !956, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!985 = !DIGlobalVariableExpression(var: !986, expr: !DIExpression())
!986 = distinct !DIGlobalVariable(name: "now", scope: !987, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!987 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !905, retainedNodes: !4)
!988 = !DIGlobalVariableExpression(var: !989, expr: !DIExpression())
!989 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !987, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!990 = !DIGlobalVariableExpression(var: !991, expr: !DIExpression())
!991 = distinct !DIGlobalVariable(name: "buf", scope: !992, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!992 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !993, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !905, retainedNodes: !4)
!993 = !DISubroutineType(types: !994)
!994 = !{!49, !959}
!995 = !DIGlobalVariableExpression(var: !996, expr: !DIExpression())
!996 = distinct !DIGlobalVariable(name: "runlevline", scope: !997, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!997 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !998, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !905, retainedNodes: !4)
!998 = !DISubroutineType(types: !999)
!999 = !{null, !959}
!1000 = !DIGlobalVariableExpression(var: !1001, expr: !DIExpression())
!1001 = distinct !DIGlobalVariable(name: "comment", scope: !997, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1002 = !DIGlobalVariableExpression(var: !1003, expr: !DIExpression())
!1003 = distinct !DIGlobalVariable(name: "exitstr", scope: !1004, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!1004 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !998, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !905, retainedNodes: !4)
!1005 = !DILocalVariable(name: "options", arg: 2, scope: !904, file: !3, line: 621, type: !53)
!1006 = !DILocalVariable(name: "n_users", scope: !904, file: !3, line: 623, type: !110)
!1007 = !DILocalVariable(name: "utmp_buf", scope: !904, file: !3, line: 624, type: !1008)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!1009 = distinct !DISubprogram(name: "list_entries_who", scope: !3, file: !3, line: 537, type: !1010, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{null, !110, !67}
!1012 = !DILocalVariable(name: "n", arg: 1, scope: !1009, file: !3, line: 537, type: !110)
!1013 = !DILocation(line: 537, column: 26, scope: !1009)
!1014 = !DILocalVariable(name: "utmp_buf", arg: 2, scope: !1009, file: !3, line: 537, type: !67)
!1015 = !DILocation(line: 537, column: 48, scope: !1009)
!1016 = !DILocalVariable(name: "entries", scope: !1009, file: !3, line: 539, type: !112)
!1017 = !DILocation(line: 539, column: 21, scope: !1009)
!1018 = !DILocalVariable(name: "separator", scope: !1009, file: !3, line: 540, type: !49)
!1019 = !DILocation(line: 540, column: 15, scope: !1009)
!1020 = !DILocation(line: 542, column: 3, scope: !1009)
!1021 = !DILocation(line: 542, column: 11, scope: !1009)
!1022 = !DILocation(line: 544, column: 11, scope: !1023)
!1023 = distinct !DILexicalBlock(scope: !1024, file: !3, line: 544, column: 11)
!1024 = distinct !DILexicalBlock(scope: !1009, file: !3, line: 543, column: 5)
!1025 = !DILocation(line: 544, column: 11, scope: !1024)
!1026 = !DILocalVariable(name: "trimmed_name", scope: !1027, file: !3, line: 546, type: !6)
!1027 = distinct !DILexicalBlock(scope: !1023, file: !3, line: 545, column: 9)
!1028 = !DILocation(line: 546, column: 17, scope: !1027)
!1029 = !DILocation(line: 548, column: 48, scope: !1027)
!1030 = !DILocation(line: 548, column: 26, scope: !1027)
!1031 = !DILocation(line: 548, column: 24, scope: !1027)
!1032 = !DILocation(line: 550, column: 27, scope: !1027)
!1033 = !DILocation(line: 550, column: 38, scope: !1027)
!1034 = !DILocation(line: 550, column: 11, scope: !1027)
!1035 = !DILocation(line: 551, column: 17, scope: !1027)
!1036 = !DILocation(line: 551, column: 11, scope: !1027)
!1037 = !DILocation(line: 552, column: 21, scope: !1027)
!1038 = !DILocation(line: 553, column: 18, scope: !1027)
!1039 = !DILocation(line: 554, column: 9, scope: !1027)
!1040 = !DILocation(line: 555, column: 15, scope: !1024)
!1041 = distinct !{!1041, !1020, !1042}
!1042 = !DILocation(line: 556, column: 5, scope: !1009)
!1043 = !DILocation(line: 557, column: 11, scope: !1009)
!1044 = !DILocation(line: 557, column: 33, scope: !1009)
!1045 = !DILocation(line: 557, column: 3, scope: !1009)
!1046 = !DILocation(line: 558, column: 1, scope: !1009)
!1047 = !DILocalVariable(name: "n", arg: 1, scope: !1048, file: !3, line: 537, type: !110)
!1048 = distinct !DISubprogram(name: "list_entries_who", scope: !3, file: !3, line: 537, type: !1049, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1075, retainedNodes: !4)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{null, !110, !1051}
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1053)
!1053 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1054)
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1055)
!1055 = !{!1056, !1057, !1058, !1059, !1060, !1061, !1062, !1067, !1068, !1073, !1074}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1054, file: !72, line: 57, baseType: !14, size: 16)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1054, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1054, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1054, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1054, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1054, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1054, file: !72, line: 67, baseType: !1063, size: 32, offset: 2656)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !1064)
!1064 = !{!1065, !1066}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !1063, file: !72, line: 45, baseType: !14, size: 16)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !1063, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1054, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1054, file: !72, line: 79, baseType: !1069, size: 64, offset: 2720)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1054, file: !72, line: 75, size: 64, elements: !1070)
!1070 = !{!1071, !1072}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1069, file: !72, line: 77, baseType: !96, size: 32)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1069, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1054, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1054, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!1075 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1076, nameTableKind: None)
!1076 = !{!1077, !1079, !1081, !1083, !1085, !1087, !1089, !1091, !1093, !1095, !1097, !1099, !1101, !1103, !1105, !1107, !1109, !1111, !1121, !1124, !1129, !1131, !1134, !1136, !1141, !1146, !1148}
!1077 = !DIGlobalVariableExpression(var: !1078, expr: !DIExpression())
!1078 = distinct !DIGlobalVariable(name: "do_lookup", scope: !1075, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!1079 = !DIGlobalVariableExpression(var: !1080, expr: !DIExpression())
!1080 = distinct !DIGlobalVariable(name: "short_list", scope: !1075, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!1081 = !DIGlobalVariableExpression(var: !1082, expr: !DIExpression())
!1082 = distinct !DIGlobalVariable(name: "short_output", scope: !1075, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!1083 = !DIGlobalVariableExpression(var: !1084, expr: !DIExpression())
!1084 = distinct !DIGlobalVariable(name: "include_idle", scope: !1075, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!1085 = !DIGlobalVariableExpression(var: !1086, expr: !DIExpression())
!1086 = distinct !DIGlobalVariable(name: "include_heading", scope: !1075, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!1087 = !DIGlobalVariableExpression(var: !1088, expr: !DIExpression())
!1088 = distinct !DIGlobalVariable(name: "include_mesg", scope: !1075, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!1089 = !DIGlobalVariableExpression(var: !1090, expr: !DIExpression())
!1090 = distinct !DIGlobalVariable(name: "include_exit", scope: !1075, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!1091 = !DIGlobalVariableExpression(var: !1092, expr: !DIExpression())
!1092 = distinct !DIGlobalVariable(name: "need_boottime", scope: !1075, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!1093 = !DIGlobalVariableExpression(var: !1094, expr: !DIExpression())
!1094 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !1075, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!1095 = !DIGlobalVariableExpression(var: !1096, expr: !DIExpression())
!1096 = distinct !DIGlobalVariable(name: "need_login", scope: !1075, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!1097 = !DIGlobalVariableExpression(var: !1098, expr: !DIExpression())
!1098 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !1075, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!1099 = !DIGlobalVariableExpression(var: !1100, expr: !DIExpression())
!1100 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !1075, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!1101 = !DIGlobalVariableExpression(var: !1102, expr: !DIExpression())
!1102 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !1075, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!1103 = !DIGlobalVariableExpression(var: !1104, expr: !DIExpression())
!1104 = distinct !DIGlobalVariable(name: "need_users", scope: !1075, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!1105 = !DIGlobalVariableExpression(var: !1106, expr: !DIExpression())
!1106 = distinct !DIGlobalVariable(name: "my_line_only", scope: !1075, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!1107 = !DIGlobalVariableExpression(var: !1108, expr: !DIExpression())
!1108 = distinct !DIGlobalVariable(name: "time_format", scope: !1075, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!1109 = !DIGlobalVariableExpression(var: !1110, expr: !DIExpression())
!1110 = distinct !DIGlobalVariable(name: "time_format_width", scope: !1075, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!1111 = !DIGlobalVariableExpression(var: !1112, expr: !DIExpression())
!1112 = distinct !DIGlobalVariable(name: "longopts", scope: !1075, file: !3, line: 162, type: !1113, isLocal: true, isDefinition: true)
!1113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1114, size: 4608, elements: !151)
!1114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1115)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !1116)
!1116 = !{!1117, !1118, !1119, !1120}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1115, file: !144, line: 52, baseType: !49, size: 64)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1115, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1115, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1115, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!1121 = !DIGlobalVariableExpression(var: !1122, expr: !DIExpression())
!1122 = distinct !DIGlobalVariable(name: "mesg", scope: !1123, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!1123 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1075, retainedNodes: !4)
!1124 = !DIGlobalVariableExpression(var: !1125, expr: !DIExpression())
!1125 = distinct !DIGlobalVariable(name: "hoststr", scope: !1126, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!1126 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !1127, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1075, retainedNodes: !4)
!1127 = !DISubroutineType(types: !1128)
!1128 = !{null, !1051, !9}
!1129 = !DIGlobalVariableExpression(var: !1130, expr: !DIExpression())
!1130 = distinct !DIGlobalVariable(name: "hostlen", scope: !1126, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!1131 = !DIGlobalVariableExpression(var: !1132, expr: !DIExpression())
!1132 = distinct !DIGlobalVariable(name: "now", scope: !1133, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!1133 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1075, retainedNodes: !4)
!1134 = !DIGlobalVariableExpression(var: !1135, expr: !DIExpression())
!1135 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !1133, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!1136 = !DIGlobalVariableExpression(var: !1137, expr: !DIExpression())
!1137 = distinct !DIGlobalVariable(name: "buf", scope: !1138, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!1138 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !1139, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1075, retainedNodes: !4)
!1139 = !DISubroutineType(types: !1140)
!1140 = !{!49, !1051}
!1141 = !DIGlobalVariableExpression(var: !1142, expr: !DIExpression())
!1142 = distinct !DIGlobalVariable(name: "runlevline", scope: !1143, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1143 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !1144, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1075, retainedNodes: !4)
!1144 = !DISubroutineType(types: !1145)
!1145 = !{null, !1051}
!1146 = !DIGlobalVariableExpression(var: !1147, expr: !DIExpression())
!1147 = distinct !DIGlobalVariable(name: "comment", scope: !1143, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1148 = !DIGlobalVariableExpression(var: !1149, expr: !DIExpression())
!1149 = distinct !DIGlobalVariable(name: "exitstr", scope: !1150, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!1150 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !1144, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1075, retainedNodes: !4)
!1151 = !DILocalVariable(name: "utmp_buf", arg: 2, scope: !1048, file: !3, line: 537, type: !1051)
!1152 = !DILocalVariable(name: "entries", scope: !1048, file: !3, line: 539, type: !112)
!1153 = !DILocalVariable(name: "separator", scope: !1048, file: !3, line: 540, type: !49)
!1154 = distinct !DISubprogram(name: "scan_entries", scope: !3, file: !3, line: 569, type: !1010, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1155 = !DILocalVariable(name: "n", arg: 1, scope: !1154, file: !3, line: 569, type: !110)
!1156 = !DILocation(line: 569, column: 22, scope: !1154)
!1157 = !DILocalVariable(name: "utmp_buf", arg: 2, scope: !1154, file: !3, line: 569, type: !67)
!1158 = !DILocation(line: 569, column: 44, scope: !1154)
!1159 = !DILocalVariable(name: "ttyname_b", scope: !1154, file: !3, line: 571, type: !6)
!1160 = !DILocation(line: 571, column: 9, scope: !1154)
!1161 = !DILocalVariable(name: "boottime", scope: !1154, file: !3, line: 572, type: !9)
!1162 = !DILocation(line: 572, column: 10, scope: !1154)
!1163 = !DILocation(line: 574, column: 7, scope: !1164)
!1164 = distinct !DILexicalBlock(scope: !1154, file: !3, line: 574, column: 7)
!1165 = !DILocation(line: 574, column: 7, scope: !1154)
!1166 = !DILocation(line: 575, column: 5, scope: !1164)
!1167 = !DILocation(line: 577, column: 7, scope: !1168)
!1168 = distinct !DILexicalBlock(scope: !1154, file: !3, line: 577, column: 7)
!1169 = !DILocation(line: 577, column: 7, scope: !1154)
!1170 = !DILocation(line: 579, column: 19, scope: !1171)
!1171 = distinct !DILexicalBlock(scope: !1168, file: !3, line: 578, column: 5)
!1172 = !DILocation(line: 579, column: 17, scope: !1171)
!1173 = !DILocation(line: 580, column: 12, scope: !1174)
!1174 = distinct !DILexicalBlock(scope: !1171, file: !3, line: 580, column: 11)
!1175 = !DILocation(line: 580, column: 11, scope: !1171)
!1176 = !DILocation(line: 581, column: 9, scope: !1174)
!1177 = !DILocation(line: 582, column: 11, scope: !1178)
!1178 = distinct !DILexicalBlock(scope: !1171, file: !3, line: 582, column: 11)
!1179 = !DILocation(line: 582, column: 64, scope: !1178)
!1180 = !DILocation(line: 583, column: 19, scope: !1178)
!1181 = !DILocation(line: 583, column: 9, scope: !1178)
!1182 = !DILocation(line: 584, column: 5, scope: !1171)
!1183 = !DILocation(line: 586, column: 3, scope: !1154)
!1184 = !DILocation(line: 586, column: 11, scope: !1154)
!1185 = !DILocation(line: 588, column: 12, scope: !1186)
!1186 = distinct !DILexicalBlock(scope: !1187, file: !3, line: 588, column: 11)
!1187 = distinct !DILexicalBlock(scope: !1154, file: !3, line: 587, column: 5)
!1188 = !DILocation(line: 589, column: 11, scope: !1186)
!1189 = !DILocation(line: 589, column: 14, scope: !1186)
!1190 = !DILocation(line: 588, column: 11, scope: !1187)
!1191 = !DILocation(line: 592, column: 15, scope: !1192)
!1192 = distinct !DILexicalBlock(scope: !1193, file: !3, line: 592, column: 15)
!1193 = distinct !DILexicalBlock(scope: !1186, file: !3, line: 591, column: 9)
!1194 = !DILocation(line: 592, column: 26, scope: !1192)
!1195 = !DILocation(line: 592, column: 29, scope: !1192)
!1196 = !DILocation(line: 592, column: 15, scope: !1193)
!1197 = !DILocation(line: 593, column: 25, scope: !1192)
!1198 = !DILocation(line: 593, column: 35, scope: !1192)
!1199 = !DILocation(line: 593, column: 13, scope: !1192)
!1200 = !DILocation(line: 594, column: 20, scope: !1201)
!1201 = distinct !DILexicalBlock(scope: !1192, file: !3, line: 594, column: 20)
!1202 = !DILocation(line: 594, column: 34, scope: !1201)
!1203 = !DILocation(line: 594, column: 37, scope: !1201)
!1204 = !DILocation(line: 594, column: 20, scope: !1192)
!1205 = !DILocation(line: 595, column: 29, scope: !1201)
!1206 = !DILocation(line: 595, column: 13, scope: !1201)
!1207 = !DILocation(line: 596, column: 20, scope: !1208)
!1208 = distinct !DILexicalBlock(scope: !1201, file: !3, line: 596, column: 20)
!1209 = !DILocation(line: 596, column: 34, scope: !1208)
!1210 = !DILocation(line: 596, column: 37, scope: !1208)
!1211 = !DILocation(line: 596, column: 20, scope: !1201)
!1212 = !DILocation(line: 597, column: 29, scope: !1208)
!1213 = !DILocation(line: 597, column: 13, scope: !1208)
!1214 = !DILocation(line: 601, column: 20, scope: !1215)
!1215 = distinct !DILexicalBlock(scope: !1208, file: !3, line: 601, column: 20)
!1216 = !DILocation(line: 601, column: 37, scope: !1215)
!1217 = !DILocation(line: 601, column: 40, scope: !1215)
!1218 = !DILocation(line: 601, column: 20, scope: !1208)
!1219 = !DILocation(line: 602, column: 32, scope: !1215)
!1220 = !DILocation(line: 602, column: 13, scope: !1215)
!1221 = !DILocation(line: 603, column: 20, scope: !1222)
!1222 = distinct !DILexicalBlock(scope: !1215, file: !3, line: 603, column: 20)
!1223 = !DILocation(line: 603, column: 35, scope: !1222)
!1224 = !DILocation(line: 603, column: 38, scope: !1222)
!1225 = !DILocation(line: 603, column: 20, scope: !1215)
!1226 = !DILocation(line: 604, column: 30, scope: !1222)
!1227 = !DILocation(line: 604, column: 13, scope: !1222)
!1228 = !DILocation(line: 605, column: 20, scope: !1229)
!1229 = distinct !DILexicalBlock(scope: !1222, file: !3, line: 605, column: 20)
!1230 = !DILocation(line: 605, column: 31, scope: !1229)
!1231 = !DILocation(line: 605, column: 34, scope: !1229)
!1232 = !DILocation(line: 605, column: 20, scope: !1222)
!1233 = !DILocation(line: 606, column: 26, scope: !1229)
!1234 = !DILocation(line: 606, column: 13, scope: !1229)
!1235 = !DILocation(line: 607, column: 20, scope: !1236)
!1236 = distinct !DILexicalBlock(scope: !1229, file: !3, line: 607, column: 20)
!1237 = !DILocation(line: 607, column: 35, scope: !1236)
!1238 = !DILocation(line: 607, column: 38, scope: !1236)
!1239 = !DILocation(line: 607, column: 20, scope: !1229)
!1240 = !DILocation(line: 608, column: 30, scope: !1236)
!1241 = !DILocation(line: 608, column: 13, scope: !1236)
!1242 = !DILocation(line: 609, column: 9, scope: !1193)
!1243 = !DILocation(line: 611, column: 11, scope: !1244)
!1244 = distinct !DILexicalBlock(scope: !1187, file: !3, line: 611, column: 11)
!1245 = !DILocation(line: 611, column: 11, scope: !1187)
!1246 = !DILocation(line: 612, column: 20, scope: !1244)
!1247 = !DILocation(line: 612, column: 18, scope: !1244)
!1248 = !DILocation(line: 612, column: 9, scope: !1244)
!1249 = !DILocation(line: 614, column: 15, scope: !1187)
!1250 = distinct !{!1250, !1183, !1251}
!1251 = !DILocation(line: 615, column: 5, scope: !1154)
!1252 = !DILocation(line: 616, column: 1, scope: !1154)
!1253 = !DILocalVariable(name: "n", arg: 1, scope: !1254, file: !3, line: 569, type: !110)
!1254 = distinct !DISubprogram(name: "scan_entries", scope: !3, file: !3, line: 569, type: !1255, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1281, retainedNodes: !4)
!1255 = !DISubroutineType(types: !1256)
!1256 = !{null, !110, !1257}
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1259)
!1259 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1260)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1261)
!1261 = !{!1262, !1263, !1264, !1265, !1266, !1267, !1268, !1273, !1274, !1279, !1280}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1260, file: !72, line: 57, baseType: !14, size: 16)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1260, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1260, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1260, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1260, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1260, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1260, file: !72, line: 67, baseType: !1269, size: 32, offset: 2656)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !1270)
!1270 = !{!1271, !1272}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !1269, file: !72, line: 45, baseType: !14, size: 16)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !1269, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1260, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1260, file: !72, line: 79, baseType: !1275, size: 64, offset: 2720)
!1275 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1260, file: !72, line: 75, size: 64, elements: !1276)
!1276 = !{!1277, !1278}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1275, file: !72, line: 77, baseType: !96, size: 32)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1275, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1260, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1260, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!1281 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1282, nameTableKind: None)
!1282 = !{!1283, !1285, !1287, !1289, !1291, !1293, !1295, !1297, !1299, !1301, !1303, !1305, !1307, !1309, !1311, !1313, !1315, !1317, !1327, !1330, !1335, !1337, !1340, !1342, !1347, !1352, !1354}
!1283 = !DIGlobalVariableExpression(var: !1284, expr: !DIExpression())
!1284 = distinct !DIGlobalVariable(name: "do_lookup", scope: !1281, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!1285 = !DIGlobalVariableExpression(var: !1286, expr: !DIExpression())
!1286 = distinct !DIGlobalVariable(name: "short_list", scope: !1281, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!1287 = !DIGlobalVariableExpression(var: !1288, expr: !DIExpression())
!1288 = distinct !DIGlobalVariable(name: "short_output", scope: !1281, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!1289 = !DIGlobalVariableExpression(var: !1290, expr: !DIExpression())
!1290 = distinct !DIGlobalVariable(name: "include_idle", scope: !1281, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!1291 = !DIGlobalVariableExpression(var: !1292, expr: !DIExpression())
!1292 = distinct !DIGlobalVariable(name: "include_heading", scope: !1281, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!1293 = !DIGlobalVariableExpression(var: !1294, expr: !DIExpression())
!1294 = distinct !DIGlobalVariable(name: "include_mesg", scope: !1281, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!1295 = !DIGlobalVariableExpression(var: !1296, expr: !DIExpression())
!1296 = distinct !DIGlobalVariable(name: "include_exit", scope: !1281, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!1297 = !DIGlobalVariableExpression(var: !1298, expr: !DIExpression())
!1298 = distinct !DIGlobalVariable(name: "need_boottime", scope: !1281, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !1281, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!1301 = !DIGlobalVariableExpression(var: !1302, expr: !DIExpression())
!1302 = distinct !DIGlobalVariable(name: "need_login", scope: !1281, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!1303 = !DIGlobalVariableExpression(var: !1304, expr: !DIExpression())
!1304 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !1281, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!1305 = !DIGlobalVariableExpression(var: !1306, expr: !DIExpression())
!1306 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !1281, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !1281, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!1309 = !DIGlobalVariableExpression(var: !1310, expr: !DIExpression())
!1310 = distinct !DIGlobalVariable(name: "need_users", scope: !1281, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!1311 = !DIGlobalVariableExpression(var: !1312, expr: !DIExpression())
!1312 = distinct !DIGlobalVariable(name: "my_line_only", scope: !1281, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!1313 = !DIGlobalVariableExpression(var: !1314, expr: !DIExpression())
!1314 = distinct !DIGlobalVariable(name: "time_format", scope: !1281, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "time_format_width", scope: !1281, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!1317 = !DIGlobalVariableExpression(var: !1318, expr: !DIExpression())
!1318 = distinct !DIGlobalVariable(name: "longopts", scope: !1281, file: !3, line: 162, type: !1319, isLocal: true, isDefinition: true)
!1319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1320, size: 4608, elements: !151)
!1320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1321)
!1321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !1322)
!1322 = !{!1323, !1324, !1325, !1326}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1321, file: !144, line: 52, baseType: !49, size: 64)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1321, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1321, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1321, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(name: "mesg", scope: !1329, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!1329 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1281, retainedNodes: !4)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "hoststr", scope: !1332, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!1332 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !1333, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1281, retainedNodes: !4)
!1333 = !DISubroutineType(types: !1334)
!1334 = !{null, !1257, !9}
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "hostlen", scope: !1332, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "now", scope: !1339, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!1339 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1281, retainedNodes: !4)
!1340 = !DIGlobalVariableExpression(var: !1341, expr: !DIExpression())
!1341 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !1339, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!1342 = !DIGlobalVariableExpression(var: !1343, expr: !DIExpression())
!1343 = distinct !DIGlobalVariable(name: "buf", scope: !1344, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!1344 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !1345, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1281, retainedNodes: !4)
!1345 = !DISubroutineType(types: !1346)
!1346 = !{!49, !1257}
!1347 = !DIGlobalVariableExpression(var: !1348, expr: !DIExpression())
!1348 = distinct !DIGlobalVariable(name: "runlevline", scope: !1349, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1349 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !1350, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1281, retainedNodes: !4)
!1350 = !DISubroutineType(types: !1351)
!1351 = !{null, !1257}
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "comment", scope: !1349, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "exitstr", scope: !1356, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!1356 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !1350, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1281, retainedNodes: !4)
!1357 = !DILocalVariable(name: "utmp_buf", arg: 2, scope: !1254, file: !3, line: 569, type: !1257)
!1358 = !DILocalVariable(name: "ttyname_b", scope: !1254, file: !3, line: 571, type: !6)
!1359 = !DILocalVariable(name: "boottime", scope: !1254, file: !3, line: 572, type: !9)
!1360 = distinct !DISubprogram(name: "print_heading", scope: !3, file: !3, line: 561, type: !1361, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1361 = !DISubroutineType(types: !1362)
!1362 = !{null}
!1363 = !DILocation(line: 563, column: 19, scope: !1360)
!1364 = !DILocation(line: 563, column: 39, scope: !1360)
!1365 = !DILocation(line: 563, column: 50, scope: !1360)
!1366 = !DILocation(line: 563, column: 61, scope: !1360)
!1367 = !DILocation(line: 564, column: 15, scope: !1360)
!1368 = !DILocation(line: 564, column: 25, scope: !1360)
!1369 = !DILocation(line: 564, column: 39, scope: !1360)
!1370 = !DILocation(line: 563, column: 3, scope: !1360)
!1371 = !DILocation(line: 565, column: 1, scope: !1360)
!1372 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !64, file: !3, line: 333, type: !67)
!1373 = !DILocation(line: 333, column: 32, scope: !64)
!1374 = !DILocalVariable(name: "boottime", arg: 2, scope: !64, file: !3, line: 333, type: !9)
!1375 = !DILocation(line: 333, column: 49, scope: !64)
!1376 = !DILocalVariable(name: "stats", scope: !64, file: !3, line: 335, type: !1377)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !1378, line: 46, size: 1152, elements: !1379)
!1378 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!1379 = !{!1380, !1382, !1384, !1386, !1388, !1390, !1392, !1393, !1394, !1396, !1398, !1400, !1407, !1408, !1409}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1377, file: !1378, line: 48, baseType: !1381, size: 64)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !12, line: 145, baseType: !112)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1377, file: !1378, line: 53, baseType: !1383, size: 64, offset: 64)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !12, line: 148, baseType: !112)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1377, file: !1378, line: 61, baseType: !1385, size: 64, offset: 128)
!1385 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !12, line: 151, baseType: !112)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1377, file: !1378, line: 62, baseType: !1387, size: 32, offset: 192)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !12, line: 150, baseType: !180)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1377, file: !1378, line: 64, baseType: !1389, size: 32, offset: 224)
!1389 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !12, line: 146, baseType: !180)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1377, file: !1378, line: 65, baseType: !1391, size: 32, offset: 256)
!1391 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !12, line: 147, baseType: !180)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1377, file: !1378, line: 67, baseType: !53, size: 32, offset: 288)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1377, file: !1378, line: 69, baseType: !1381, size: 64, offset: 320)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1377, file: !1378, line: 74, baseType: !1395, size: 64, offset: 384)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !12, line: 152, baseType: !13)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1377, file: !1378, line: 78, baseType: !1397, size: 64, offset: 448)
!1397 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !12, line: 174, baseType: !13)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1377, file: !1378, line: 80, baseType: !1399, size: 64, offset: 512)
!1399 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !12, line: 179, baseType: !13)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1377, file: !1378, line: 91, baseType: !1401, size: 128, offset: 576)
!1401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !1402, line: 10, size: 128, elements: !1403)
!1402 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!1403 = !{!1404, !1405}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1401, file: !1402, line: 12, baseType: !11, size: 64)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1401, file: !1402, line: 16, baseType: !1406, size: 64, offset: 64)
!1406 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !12, line: 196, baseType: !13)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1377, file: !1378, line: 92, baseType: !1401, size: 128, offset: 704)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1377, file: !1378, line: 93, baseType: !1401, size: 128, offset: 832)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1377, file: !1378, line: 106, baseType: !1410, size: 192, offset: 960)
!1410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1406, size: 192, elements: !60)
!1411 = !DILocation(line: 335, column: 15, scope: !64)
!1412 = !DILocalVariable(name: "last_change", scope: !64, file: !3, line: 336, type: !9)
!1413 = !DILocation(line: 336, column: 10, scope: !64)
!1414 = !DILocalVariable(name: "mesg", scope: !64, file: !3, line: 337, type: !7)
!1415 = !DILocation(line: 337, column: 8, scope: !64)
!1416 = !DILocalVariable(name: "idlestr", scope: !64, file: !3, line: 338, type: !1417)
!1417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 56, elements: !376)
!1418 = !DILocation(line: 338, column: 8, scope: !64)
!1419 = !DILocalVariable(name: "line", scope: !64, file: !3, line: 347, type: !1420)
!1420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 304, elements: !1421)
!1421 = !{!1422}
!1422 = !DISubrange(count: 38)
!1423 = !DILocation(line: 347, column: 8, scope: !64)
!1424 = !DILocalVariable(name: "p", scope: !64, file: !3, line: 348, type: !6)
!1425 = !DILocation(line: 348, column: 9, scope: !64)
!1426 = !DILocation(line: 348, column: 13, scope: !64)
!1427 = !DILocalVariable(name: "pidstr", scope: !64, file: !3, line: 349, type: !1428)
!1428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 96, elements: !1429)
!1429 = !{!1430}
!1430 = !DISubrange(count: 12)
!1431 = !DILocation(line: 349, column: 3, scope: !64)
!1432 = !DILocation(line: 354, column: 10, scope: !1433)
!1433 = distinct !DILexicalBlock(scope: !64, file: !3, line: 354, column: 8)
!1434 = !DILocation(line: 354, column: 8, scope: !64)
!1435 = !DILocation(line: 355, column: 17, scope: !1433)
!1436 = !DILocation(line: 355, column: 9, scope: !1433)
!1437 = !DILocation(line: 355, column: 7, scope: !1433)
!1438 = !DILocation(line: 355, column: 5, scope: !1433)
!1439 = !DILocation(line: 356, column: 12, scope: !64)
!1440 = !DILocation(line: 356, column: 15, scope: !64)
!1441 = !DILocation(line: 356, column: 25, scope: !64)
!1442 = !DILocation(line: 356, column: 3, scope: !64)
!1443 = !DILocation(line: 358, column: 13, scope: !1444)
!1444 = distinct !DILexicalBlock(scope: !64, file: !3, line: 358, column: 7)
!1445 = !DILocation(line: 358, column: 7, scope: !1444)
!1446 = !DILocation(line: 358, column: 27, scope: !1444)
!1447 = !DILocation(line: 358, column: 7, scope: !64)
!1448 = !DILocation(line: 360, column: 14, scope: !1449)
!1449 = distinct !DILexicalBlock(scope: !1444, file: !3, line: 359, column: 5)
!1450 = !DILocation(line: 360, column: 12, scope: !1449)
!1451 = !DILocation(line: 361, column: 27, scope: !1449)
!1452 = !DILocation(line: 361, column: 19, scope: !1449)
!1453 = !DILocation(line: 362, column: 5, scope: !1449)
!1454 = !DILocation(line: 365, column: 12, scope: !1455)
!1455 = distinct !DILexicalBlock(scope: !1444, file: !3, line: 364, column: 5)
!1456 = !DILocation(line: 366, column: 19, scope: !1455)
!1457 = !DILocation(line: 369, column: 7, scope: !1458)
!1458 = distinct !DILexicalBlock(scope: !64, file: !3, line: 369, column: 7)
!1459 = !DILocation(line: 369, column: 7, scope: !64)
!1460 = !DILocation(line: 370, column: 14, scope: !1458)
!1461 = !DILocation(line: 370, column: 57, scope: !1458)
!1462 = !DILocation(line: 370, column: 70, scope: !1458)
!1463 = !DILocation(line: 370, column: 44, scope: !1458)
!1464 = !DILocation(line: 370, column: 5, scope: !1458)
!1465 = !DILocation(line: 372, column: 14, scope: !1458)
!1466 = !DILocation(line: 372, column: 5, scope: !1458)
!1467 = !DILocation(line: 375, column: 7, scope: !1468)
!1468 = distinct !DILexicalBlock(scope: !64, file: !3, line: 375, column: 7)
!1469 = !DILocation(line: 375, column: 17, scope: !1468)
!1470 = !DILocation(line: 375, column: 7, scope: !64)
!1471 = !DILocalVariable(name: "ut_host", scope: !1472, file: !3, line: 377, type: !1473)
!1472 = distinct !DILexicalBlock(scope: !1468, file: !3, line: 376, column: 5)
!1473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2056, elements: !1474)
!1474 = !{!1475}
!1475 = !DISubrange(count: 257)
!1476 = !DILocation(line: 377, column: 12, scope: !1472)
!1477 = !DILocalVariable(name: "host", scope: !1472, file: !3, line: 378, type: !6)
!1478 = !DILocation(line: 378, column: 13, scope: !1472)
!1479 = !DILocalVariable(name: "display", scope: !1472, file: !3, line: 379, type: !6)
!1480 = !DILocation(line: 379, column: 13, scope: !1472)
!1481 = !DILocation(line: 382, column: 16, scope: !1472)
!1482 = !DILocation(line: 382, column: 25, scope: !1472)
!1483 = !DILocation(line: 382, column: 35, scope: !1472)
!1484 = !DILocation(line: 382, column: 7, scope: !1472)
!1485 = !DILocation(line: 385, column: 25, scope: !1472)
!1486 = !DILocation(line: 385, column: 17, scope: !1472)
!1487 = !DILocation(line: 385, column: 15, scope: !1472)
!1488 = !DILocation(line: 386, column: 11, scope: !1489)
!1489 = distinct !DILexicalBlock(scope: !1472, file: !3, line: 386, column: 11)
!1490 = !DILocation(line: 386, column: 11, scope: !1472)
!1491 = !DILocation(line: 387, column: 17, scope: !1489)
!1492 = !DILocation(line: 387, column: 20, scope: !1489)
!1493 = !DILocation(line: 387, column: 9, scope: !1489)
!1494 = !DILocation(line: 389, column: 11, scope: !1495)
!1495 = distinct !DILexicalBlock(scope: !1472, file: !3, line: 389, column: 11)
!1496 = !DILocation(line: 389, column: 20, scope: !1495)
!1497 = !DILocation(line: 389, column: 23, scope: !1495)
!1498 = !DILocation(line: 389, column: 11, scope: !1472)
!1499 = !DILocation(line: 392, column: 30, scope: !1500)
!1500 = distinct !DILexicalBlock(scope: !1495, file: !3, line: 390, column: 9)
!1501 = !DILocation(line: 392, column: 18, scope: !1500)
!1502 = !DILocation(line: 392, column: 16, scope: !1500)
!1503 = !DILocation(line: 393, column: 9, scope: !1500)
!1504 = !DILocation(line: 395, column: 13, scope: !1505)
!1505 = distinct !DILexicalBlock(scope: !1472, file: !3, line: 395, column: 11)
!1506 = !DILocation(line: 395, column: 11, scope: !1472)
!1507 = !DILocation(line: 396, column: 16, scope: !1505)
!1508 = !DILocation(line: 396, column: 14, scope: !1505)
!1509 = !DILocation(line: 396, column: 9, scope: !1505)
!1510 = !DILocation(line: 398, column: 11, scope: !1511)
!1511 = distinct !DILexicalBlock(scope: !1472, file: !3, line: 398, column: 11)
!1512 = !DILocation(line: 398, column: 11, scope: !1472)
!1513 = !DILocation(line: 400, column: 15, scope: !1514)
!1514 = distinct !DILexicalBlock(scope: !1515, file: !3, line: 400, column: 15)
!1515 = distinct !DILexicalBlock(scope: !1511, file: !3, line: 399, column: 9)
!1516 = !DILocation(line: 400, column: 33, scope: !1514)
!1517 = !DILocation(line: 400, column: 25, scope: !1514)
!1518 = !DILocation(line: 400, column: 49, scope: !1514)
!1519 = !DILocation(line: 400, column: 41, scope: !1514)
!1520 = !DILocation(line: 400, column: 39, scope: !1514)
!1521 = !DILocation(line: 400, column: 58, scope: !1514)
!1522 = !DILocation(line: 400, column: 23, scope: !1514)
!1523 = !DILocation(line: 400, column: 15, scope: !1515)
!1524 = !DILocation(line: 402, column: 33, scope: !1525)
!1525 = distinct !DILexicalBlock(scope: !1514, file: !3, line: 401, column: 13)
!1526 = !DILocation(line: 402, column: 25, scope: !1525)
!1527 = !DILocation(line: 402, column: 49, scope: !1525)
!1528 = !DILocation(line: 402, column: 41, scope: !1525)
!1529 = !DILocation(line: 402, column: 39, scope: !1525)
!1530 = !DILocation(line: 402, column: 58, scope: !1525)
!1531 = !DILocation(line: 402, column: 23, scope: !1525)
!1532 = !DILocation(line: 403, column: 21, scope: !1525)
!1533 = !DILocation(line: 403, column: 15, scope: !1525)
!1534 = !DILocation(line: 404, column: 34, scope: !1525)
!1535 = !DILocation(line: 404, column: 25, scope: !1525)
!1536 = !DILocation(line: 404, column: 23, scope: !1525)
!1537 = !DILocation(line: 405, column: 13, scope: !1525)
!1538 = !DILocation(line: 406, column: 20, scope: !1515)
!1539 = !DILocation(line: 406, column: 40, scope: !1515)
!1540 = !DILocation(line: 406, column: 46, scope: !1515)
!1541 = !DILocation(line: 406, column: 11, scope: !1515)
!1542 = !DILocation(line: 407, column: 9, scope: !1515)
!1543 = !DILocation(line: 410, column: 15, scope: !1544)
!1544 = distinct !DILexicalBlock(scope: !1545, file: !3, line: 410, column: 15)
!1545 = distinct !DILexicalBlock(scope: !1511, file: !3, line: 409, column: 9)
!1546 = !DILocation(line: 410, column: 33, scope: !1544)
!1547 = !DILocation(line: 410, column: 25, scope: !1544)
!1548 = !DILocation(line: 410, column: 39, scope: !1544)
!1549 = !DILocation(line: 410, column: 23, scope: !1544)
!1550 = !DILocation(line: 410, column: 15, scope: !1545)
!1551 = !DILocation(line: 412, column: 33, scope: !1552)
!1552 = distinct !DILexicalBlock(scope: !1544, file: !3, line: 411, column: 13)
!1553 = !DILocation(line: 412, column: 25, scope: !1552)
!1554 = !DILocation(line: 412, column: 39, scope: !1552)
!1555 = !DILocation(line: 412, column: 23, scope: !1552)
!1556 = !DILocation(line: 413, column: 21, scope: !1552)
!1557 = !DILocation(line: 413, column: 15, scope: !1552)
!1558 = !DILocation(line: 414, column: 34, scope: !1552)
!1559 = !DILocation(line: 414, column: 25, scope: !1552)
!1560 = !DILocation(line: 414, column: 23, scope: !1552)
!1561 = !DILocation(line: 415, column: 13, scope: !1552)
!1562 = !DILocation(line: 416, column: 20, scope: !1545)
!1563 = !DILocation(line: 416, column: 37, scope: !1545)
!1564 = !DILocation(line: 416, column: 11, scope: !1545)
!1565 = !DILocation(line: 419, column: 11, scope: !1566)
!1566 = distinct !DILexicalBlock(scope: !1472, file: !3, line: 419, column: 11)
!1567 = !DILocation(line: 419, column: 19, scope: !1566)
!1568 = !DILocation(line: 419, column: 16, scope: !1566)
!1569 = !DILocation(line: 419, column: 11, scope: !1472)
!1570 = !DILocation(line: 420, column: 15, scope: !1566)
!1571 = !DILocation(line: 420, column: 9, scope: !1566)
!1572 = !DILocation(line: 421, column: 5, scope: !1472)
!1573 = !DILocation(line: 424, column: 11, scope: !1574)
!1574 = distinct !DILexicalBlock(scope: !1575, file: !3, line: 424, column: 11)
!1575 = distinct !DILexicalBlock(scope: !1468, file: !3, line: 423, column: 5)
!1576 = !DILocation(line: 424, column: 19, scope: !1574)
!1577 = !DILocation(line: 424, column: 11, scope: !1575)
!1578 = !DILocation(line: 426, column: 19, scope: !1579)
!1579 = distinct !DILexicalBlock(scope: !1574, file: !3, line: 425, column: 9)
!1580 = !DILocation(line: 427, column: 17, scope: !1579)
!1581 = !DILocation(line: 427, column: 11, scope: !1579)
!1582 = !DILocation(line: 428, column: 30, scope: !1579)
!1583 = !DILocation(line: 428, column: 21, scope: !1579)
!1584 = !DILocation(line: 428, column: 19, scope: !1579)
!1585 = !DILocation(line: 429, column: 9, scope: !1579)
!1586 = !DILocation(line: 430, column: 8, scope: !1575)
!1587 = !DILocation(line: 430, column: 16, scope: !1575)
!1588 = !DILocation(line: 434, column: 42, scope: !64)
!1589 = !DILocation(line: 434, column: 62, scope: !64)
!1590 = !DILocation(line: 435, column: 41, scope: !64)
!1591 = !DILocation(line: 435, column: 51, scope: !64)
!1592 = !DILocation(line: 436, column: 28, scope: !64)
!1593 = !DILocation(line: 436, column: 15, scope: !64)
!1594 = !DILocation(line: 436, column: 39, scope: !64)
!1595 = !DILocation(line: 436, column: 48, scope: !64)
!1596 = !DILocation(line: 437, column: 15, scope: !64)
!1597 = !DILocation(line: 437, column: 25, scope: !64)
!1598 = !DILocation(line: 434, column: 3, scope: !64)
!1599 = !DILocation(line: 438, column: 1, scope: !64)
!1600 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1601, file: !3, line: 333, type: !1604)
!1601 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !1602, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1628, retainedNodes: !4)
!1602 = !DISubroutineType(types: !1603)
!1603 = !{null, !1604, !9}
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64)
!1605 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1606)
!1606 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1607)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1608)
!1608 = !{!1609, !1610, !1611, !1612, !1613, !1614, !1615, !1620, !1621, !1626, !1627}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1607, file: !72, line: 57, baseType: !14, size: 16)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1607, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1607, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1607, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1607, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1607, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1607, file: !72, line: 67, baseType: !1616, size: 32, offset: 2656)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !1617)
!1617 = !{!1618, !1619}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !1616, file: !72, line: 45, baseType: !14, size: 16)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !1616, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1607, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1607, file: !72, line: 79, baseType: !1622, size: 64, offset: 2720)
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1607, file: !72, line: 75, size: 64, elements: !1623)
!1623 = !{!1624, !1625}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1622, file: !72, line: 77, baseType: !96, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1622, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1607, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1607, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!1628 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1629, nameTableKind: None)
!1629 = !{!1630, !1632, !1634, !1636, !1638, !1640, !1642, !1644, !1646, !1648, !1650, !1652, !1654, !1656, !1658, !1660, !1662, !1664, !1674, !1677, !1679, !1681, !1684, !1686, !1691, !1696, !1698}
!1630 = !DIGlobalVariableExpression(var: !1631, expr: !DIExpression())
!1631 = distinct !DIGlobalVariable(name: "do_lookup", scope: !1628, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!1632 = !DIGlobalVariableExpression(var: !1633, expr: !DIExpression())
!1633 = distinct !DIGlobalVariable(name: "short_list", scope: !1628, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!1634 = !DIGlobalVariableExpression(var: !1635, expr: !DIExpression())
!1635 = distinct !DIGlobalVariable(name: "short_output", scope: !1628, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!1636 = !DIGlobalVariableExpression(var: !1637, expr: !DIExpression())
!1637 = distinct !DIGlobalVariable(name: "include_idle", scope: !1628, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!1638 = !DIGlobalVariableExpression(var: !1639, expr: !DIExpression())
!1639 = distinct !DIGlobalVariable(name: "include_heading", scope: !1628, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!1640 = !DIGlobalVariableExpression(var: !1641, expr: !DIExpression())
!1641 = distinct !DIGlobalVariable(name: "include_mesg", scope: !1628, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!1642 = !DIGlobalVariableExpression(var: !1643, expr: !DIExpression())
!1643 = distinct !DIGlobalVariable(name: "include_exit", scope: !1628, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!1644 = !DIGlobalVariableExpression(var: !1645, expr: !DIExpression())
!1645 = distinct !DIGlobalVariable(name: "need_boottime", scope: !1628, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!1646 = !DIGlobalVariableExpression(var: !1647, expr: !DIExpression())
!1647 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !1628, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!1648 = !DIGlobalVariableExpression(var: !1649, expr: !DIExpression())
!1649 = distinct !DIGlobalVariable(name: "need_login", scope: !1628, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!1650 = !DIGlobalVariableExpression(var: !1651, expr: !DIExpression())
!1651 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !1628, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!1652 = !DIGlobalVariableExpression(var: !1653, expr: !DIExpression())
!1653 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !1628, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!1654 = !DIGlobalVariableExpression(var: !1655, expr: !DIExpression())
!1655 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !1628, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!1656 = !DIGlobalVariableExpression(var: !1657, expr: !DIExpression())
!1657 = distinct !DIGlobalVariable(name: "need_users", scope: !1628, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!1658 = !DIGlobalVariableExpression(var: !1659, expr: !DIExpression())
!1659 = distinct !DIGlobalVariable(name: "my_line_only", scope: !1628, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!1660 = !DIGlobalVariableExpression(var: !1661, expr: !DIExpression())
!1661 = distinct !DIGlobalVariable(name: "time_format", scope: !1628, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!1662 = !DIGlobalVariableExpression(var: !1663, expr: !DIExpression())
!1663 = distinct !DIGlobalVariable(name: "time_format_width", scope: !1628, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!1664 = !DIGlobalVariableExpression(var: !1665, expr: !DIExpression())
!1665 = distinct !DIGlobalVariable(name: "longopts", scope: !1628, file: !3, line: 162, type: !1666, isLocal: true, isDefinition: true)
!1666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1667, size: 4608, elements: !151)
!1667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1668)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !1669)
!1669 = !{!1670, !1671, !1672, !1673}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1668, file: !144, line: 52, baseType: !49, size: 64)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1668, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1668, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1668, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!1674 = !DIGlobalVariableExpression(var: !1675, expr: !DIExpression())
!1675 = distinct !DIGlobalVariable(name: "mesg", scope: !1676, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!1676 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1628, retainedNodes: !4)
!1677 = !DIGlobalVariableExpression(var: !1678, expr: !DIExpression())
!1678 = distinct !DIGlobalVariable(name: "hoststr", scope: !1601, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!1679 = !DIGlobalVariableExpression(var: !1680, expr: !DIExpression())
!1680 = distinct !DIGlobalVariable(name: "hostlen", scope: !1601, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!1681 = !DIGlobalVariableExpression(var: !1682, expr: !DIExpression())
!1682 = distinct !DIGlobalVariable(name: "now", scope: !1683, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!1683 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1628, retainedNodes: !4)
!1684 = !DIGlobalVariableExpression(var: !1685, expr: !DIExpression())
!1685 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !1683, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!1686 = !DIGlobalVariableExpression(var: !1687, expr: !DIExpression())
!1687 = distinct !DIGlobalVariable(name: "buf", scope: !1688, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!1688 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !1689, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1628, retainedNodes: !4)
!1689 = !DISubroutineType(types: !1690)
!1690 = !{!49, !1604}
!1691 = !DIGlobalVariableExpression(var: !1692, expr: !DIExpression())
!1692 = distinct !DIGlobalVariable(name: "runlevline", scope: !1693, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1693 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !1694, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1628, retainedNodes: !4)
!1694 = !DISubroutineType(types: !1695)
!1695 = !{null, !1604}
!1696 = !DIGlobalVariableExpression(var: !1697, expr: !DIExpression())
!1697 = distinct !DIGlobalVariable(name: "comment", scope: !1693, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1698 = !DIGlobalVariableExpression(var: !1699, expr: !DIExpression())
!1699 = distinct !DIGlobalVariable(name: "exitstr", scope: !1700, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!1700 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !1694, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1628, retainedNodes: !4)
!1701 = !DILocalVariable(name: "boottime", arg: 2, scope: !1601, file: !3, line: 333, type: !9)
!1702 = !DILocalVariable(name: "stats", scope: !1601, file: !3, line: 335, type: !1703)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !1378, line: 46, size: 1152, elements: !1704)
!1704 = !{!1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1721, !1722, !1723}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1703, file: !1378, line: 48, baseType: !1381, size: 64)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1703, file: !1378, line: 53, baseType: !1383, size: 64, offset: 64)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1703, file: !1378, line: 61, baseType: !1385, size: 64, offset: 128)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1703, file: !1378, line: 62, baseType: !1387, size: 32, offset: 192)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1703, file: !1378, line: 64, baseType: !1389, size: 32, offset: 224)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1703, file: !1378, line: 65, baseType: !1391, size: 32, offset: 256)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1703, file: !1378, line: 67, baseType: !53, size: 32, offset: 288)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1703, file: !1378, line: 69, baseType: !1381, size: 64, offset: 320)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1703, file: !1378, line: 74, baseType: !1395, size: 64, offset: 384)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1703, file: !1378, line: 78, baseType: !1397, size: 64, offset: 448)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1703, file: !1378, line: 80, baseType: !1399, size: 64, offset: 512)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1703, file: !1378, line: 91, baseType: !1717, size: 128, offset: 576)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !1402, line: 10, size: 128, elements: !1718)
!1718 = !{!1719, !1720}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1717, file: !1402, line: 12, baseType: !11, size: 64)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1717, file: !1402, line: 16, baseType: !1406, size: 64, offset: 64)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1703, file: !1378, line: 92, baseType: !1717, size: 128, offset: 704)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1703, file: !1378, line: 93, baseType: !1717, size: 128, offset: 832)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1703, file: !1378, line: 106, baseType: !1410, size: 192, offset: 960)
!1724 = !DILocalVariable(name: "last_change", scope: !1601, file: !3, line: 336, type: !9)
!1725 = !DILocalVariable(name: "mesg", scope: !1601, file: !3, line: 337, type: !7)
!1726 = !DILocalVariable(name: "idlestr", scope: !1601, file: !3, line: 338, type: !1417)
!1727 = !DILocalVariable(name: "line", scope: !1601, file: !3, line: 347, type: !1420)
!1728 = !DILocalVariable(name: "p", scope: !1601, file: !3, line: 348, type: !6)
!1729 = !DILocalVariable(name: "pidstr", scope: !1601, file: !3, line: 349, type: !1428)
!1730 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !133, file: !3, line: 514, type: !67)
!1731 = !DILocation(line: 514, column: 36, scope: !133)
!1732 = !DILocalVariable(name: "last", scope: !133, file: !3, line: 517, type: !317)
!1733 = !DILocation(line: 517, column: 17, scope: !133)
!1734 = !DILocation(line: 517, column: 24, scope: !133)
!1735 = !DILocation(line: 517, column: 42, scope: !133)
!1736 = !DILocalVariable(name: "curr", scope: !133, file: !3, line: 518, type: !317)
!1737 = !DILocation(line: 518, column: 17, scope: !133)
!1738 = !DILocation(line: 518, column: 24, scope: !133)
!1739 = !DILocation(line: 518, column: 42, scope: !133)
!1740 = !DILocation(line: 520, column: 8, scope: !1741)
!1741 = distinct !DILexicalBlock(scope: !133, file: !3, line: 520, column: 7)
!1742 = !DILocation(line: 520, column: 7, scope: !133)
!1743 = !DILocation(line: 521, column: 35, scope: !1741)
!1744 = !DILocation(line: 521, column: 27, scope: !1741)
!1745 = !DILocation(line: 521, column: 51, scope: !1741)
!1746 = !DILocation(line: 521, column: 18, scope: !1741)
!1747 = !DILocation(line: 521, column: 16, scope: !1741)
!1748 = !DILocation(line: 521, column: 5, scope: !1741)
!1749 = !DILocation(line: 522, column: 12, scope: !133)
!1750 = !DILocation(line: 522, column: 33, scope: !133)
!1751 = !DILocation(line: 522, column: 49, scope: !133)
!1752 = !DILocation(line: 522, column: 3, scope: !133)
!1753 = !DILocation(line: 524, column: 8, scope: !1754)
!1754 = distinct !DILexicalBlock(scope: !133, file: !3, line: 524, column: 7)
!1755 = !DILocation(line: 524, column: 7, scope: !133)
!1756 = !DILocation(line: 525, column: 32, scope: !1754)
!1757 = !DILocation(line: 525, column: 24, scope: !1754)
!1758 = !DILocation(line: 525, column: 44, scope: !1754)
!1759 = !DILocation(line: 525, column: 15, scope: !1754)
!1760 = !DILocation(line: 525, column: 13, scope: !1754)
!1761 = !DILocation(line: 525, column: 5, scope: !1754)
!1762 = !DILocation(line: 526, column: 12, scope: !133)
!1763 = !DILocation(line: 526, column: 29, scope: !133)
!1764 = !DILocation(line: 526, column: 42, scope: !133)
!1765 = !DILocation(line: 526, column: 47, scope: !133)
!1766 = !DILocation(line: 526, column: 41, scope: !133)
!1767 = !DILocation(line: 526, column: 63, scope: !133)
!1768 = !DILocation(line: 526, column: 3, scope: !133)
!1769 = !DILocation(line: 528, column: 32, scope: !133)
!1770 = !DILocation(line: 528, column: 57, scope: !133)
!1771 = !DILocation(line: 528, column: 44, scope: !133)
!1772 = !DILocation(line: 529, column: 34, scope: !133)
!1773 = !DILocation(line: 529, column: 23, scope: !133)
!1774 = !DILocation(line: 529, column: 42, scope: !133)
!1775 = !DILocation(line: 528, column: 3, scope: !133)
!1776 = !DILocation(line: 531, column: 3, scope: !133)
!1777 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1778, file: !3, line: 514, type: !1781)
!1778 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !1779, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1805, retainedNodes: !4)
!1779 = !DISubroutineType(types: !1780)
!1780 = !{null, !1781}
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 64)
!1782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1783)
!1783 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1784)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1785)
!1785 = !{!1786, !1787, !1788, !1789, !1790, !1791, !1792, !1797, !1798, !1803, !1804}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1784, file: !72, line: 57, baseType: !14, size: 16)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1784, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1784, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1784, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1784, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1784, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1784, file: !72, line: 67, baseType: !1793, size: 32, offset: 2656)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !1794)
!1794 = !{!1795, !1796}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !1793, file: !72, line: 45, baseType: !14, size: 16)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !1793, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1784, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1784, file: !72, line: 79, baseType: !1799, size: 64, offset: 2720)
!1799 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1784, file: !72, line: 75, size: 64, elements: !1800)
!1800 = !{!1801, !1802}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1799, file: !72, line: 77, baseType: !96, size: 32)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1799, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1784, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1784, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!1805 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1806, nameTableKind: None)
!1806 = !{!1807, !1809, !1811, !1813, !1815, !1817, !1819, !1821, !1823, !1825, !1827, !1829, !1831, !1833, !1835, !1837, !1839, !1841, !1851, !1854, !1859, !1861, !1864, !1866, !1871, !1873, !1875}
!1807 = !DIGlobalVariableExpression(var: !1808, expr: !DIExpression())
!1808 = distinct !DIGlobalVariable(name: "do_lookup", scope: !1805, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!1809 = !DIGlobalVariableExpression(var: !1810, expr: !DIExpression())
!1810 = distinct !DIGlobalVariable(name: "short_list", scope: !1805, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!1811 = !DIGlobalVariableExpression(var: !1812, expr: !DIExpression())
!1812 = distinct !DIGlobalVariable(name: "short_output", scope: !1805, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!1813 = !DIGlobalVariableExpression(var: !1814, expr: !DIExpression())
!1814 = distinct !DIGlobalVariable(name: "include_idle", scope: !1805, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!1815 = !DIGlobalVariableExpression(var: !1816, expr: !DIExpression())
!1816 = distinct !DIGlobalVariable(name: "include_heading", scope: !1805, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!1817 = !DIGlobalVariableExpression(var: !1818, expr: !DIExpression())
!1818 = distinct !DIGlobalVariable(name: "include_mesg", scope: !1805, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!1819 = !DIGlobalVariableExpression(var: !1820, expr: !DIExpression())
!1820 = distinct !DIGlobalVariable(name: "include_exit", scope: !1805, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!1821 = !DIGlobalVariableExpression(var: !1822, expr: !DIExpression())
!1822 = distinct !DIGlobalVariable(name: "need_boottime", scope: !1805, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!1823 = !DIGlobalVariableExpression(var: !1824, expr: !DIExpression())
!1824 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !1805, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!1825 = !DIGlobalVariableExpression(var: !1826, expr: !DIExpression())
!1826 = distinct !DIGlobalVariable(name: "need_login", scope: !1805, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!1827 = !DIGlobalVariableExpression(var: !1828, expr: !DIExpression())
!1828 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !1805, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!1829 = !DIGlobalVariableExpression(var: !1830, expr: !DIExpression())
!1830 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !1805, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!1831 = !DIGlobalVariableExpression(var: !1832, expr: !DIExpression())
!1832 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !1805, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!1833 = !DIGlobalVariableExpression(var: !1834, expr: !DIExpression())
!1834 = distinct !DIGlobalVariable(name: "need_users", scope: !1805, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!1835 = !DIGlobalVariableExpression(var: !1836, expr: !DIExpression())
!1836 = distinct !DIGlobalVariable(name: "my_line_only", scope: !1805, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!1837 = !DIGlobalVariableExpression(var: !1838, expr: !DIExpression())
!1838 = distinct !DIGlobalVariable(name: "time_format", scope: !1805, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!1839 = !DIGlobalVariableExpression(var: !1840, expr: !DIExpression())
!1840 = distinct !DIGlobalVariable(name: "time_format_width", scope: !1805, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!1841 = !DIGlobalVariableExpression(var: !1842, expr: !DIExpression())
!1842 = distinct !DIGlobalVariable(name: "longopts", scope: !1805, file: !3, line: 162, type: !1843, isLocal: true, isDefinition: true)
!1843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1844, size: 4608, elements: !151)
!1844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1845)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !1846)
!1846 = !{!1847, !1848, !1849, !1850}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1845, file: !144, line: 52, baseType: !49, size: 64)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1845, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1845, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1845, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!1851 = !DIGlobalVariableExpression(var: !1852, expr: !DIExpression())
!1852 = distinct !DIGlobalVariable(name: "mesg", scope: !1853, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!1853 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1805, retainedNodes: !4)
!1854 = !DIGlobalVariableExpression(var: !1855, expr: !DIExpression())
!1855 = distinct !DIGlobalVariable(name: "hoststr", scope: !1856, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!1856 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !1857, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1805, retainedNodes: !4)
!1857 = !DISubroutineType(types: !1858)
!1858 = !{null, !1781, !9}
!1859 = !DIGlobalVariableExpression(var: !1860, expr: !DIExpression())
!1860 = distinct !DIGlobalVariable(name: "hostlen", scope: !1856, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!1861 = !DIGlobalVariableExpression(var: !1862, expr: !DIExpression())
!1862 = distinct !DIGlobalVariable(name: "now", scope: !1863, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!1863 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1805, retainedNodes: !4)
!1864 = !DIGlobalVariableExpression(var: !1865, expr: !DIExpression())
!1865 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !1863, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!1866 = !DIGlobalVariableExpression(var: !1867, expr: !DIExpression())
!1867 = distinct !DIGlobalVariable(name: "buf", scope: !1868, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!1868 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !1869, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1805, retainedNodes: !4)
!1869 = !DISubroutineType(types: !1870)
!1870 = !{!49, !1781}
!1871 = !DIGlobalVariableExpression(var: !1872, expr: !DIExpression())
!1872 = distinct !DIGlobalVariable(name: "runlevline", scope: !1778, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1873 = !DIGlobalVariableExpression(var: !1874, expr: !DIExpression())
!1874 = distinct !DIGlobalVariable(name: "comment", scope: !1778, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1875 = !DIGlobalVariableExpression(var: !1876, expr: !DIExpression())
!1876 = distinct !DIGlobalVariable(name: "exitstr", scope: !1877, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!1877 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !1779, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1805, retainedNodes: !4)
!1878 = !DILocalVariable(name: "last", scope: !1778, file: !3, line: 517, type: !317)
!1879 = !DILocalVariable(name: "curr", scope: !1778, file: !3, line: 518, type: !317)
!1880 = distinct !DISubprogram(name: "print_boottime", scope: !3, file: !3, line: 441, type: !134, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1881 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1880, file: !3, line: 441, type: !67)
!1882 = !DILocation(line: 441, column: 36, scope: !1880)
!1883 = !DILocation(line: 443, column: 32, scope: !1880)
!1884 = !DILocation(line: 444, column: 28, scope: !1880)
!1885 = !DILocation(line: 444, column: 15, scope: !1880)
!1886 = !DILocation(line: 443, column: 3, scope: !1880)
!1887 = !DILocation(line: 445, column: 1, scope: !1880)
!1888 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1889, file: !3, line: 441, type: !1892)
!1889 = distinct !DISubprogram(name: "print_boottime", scope: !3, file: !3, line: 441, type: !1890, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1916, retainedNodes: !4)
!1890 = !DISubroutineType(types: !1891)
!1891 = !{null, !1892}
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 64)
!1893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1894)
!1894 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1895)
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1896)
!1896 = !{!1897, !1898, !1899, !1900, !1901, !1902, !1903, !1908, !1909, !1914, !1915}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1895, file: !72, line: 57, baseType: !14, size: 16)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1895, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1895, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1895, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1895, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1895, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1895, file: !72, line: 67, baseType: !1904, size: 32, offset: 2656)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !1905)
!1905 = !{!1906, !1907}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !1904, file: !72, line: 45, baseType: !14, size: 16)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !1904, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1895, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1895, file: !72, line: 79, baseType: !1910, size: 64, offset: 2720)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1895, file: !72, line: 75, size: 64, elements: !1911)
!1911 = !{!1912, !1913}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1910, file: !72, line: 77, baseType: !96, size: 32)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1910, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1895, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1895, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!1916 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1917, nameTableKind: None)
!1917 = !{!1918, !1920, !1922, !1924, !1926, !1928, !1930, !1932, !1934, !1936, !1938, !1940, !1942, !1944, !1946, !1948, !1950, !1952, !1962, !1965, !1970, !1972, !1975, !1977, !1982, !1985, !1987}
!1918 = !DIGlobalVariableExpression(var: !1919, expr: !DIExpression())
!1919 = distinct !DIGlobalVariable(name: "do_lookup", scope: !1916, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!1920 = !DIGlobalVariableExpression(var: !1921, expr: !DIExpression())
!1921 = distinct !DIGlobalVariable(name: "short_list", scope: !1916, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!1922 = !DIGlobalVariableExpression(var: !1923, expr: !DIExpression())
!1923 = distinct !DIGlobalVariable(name: "short_output", scope: !1916, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!1924 = !DIGlobalVariableExpression(var: !1925, expr: !DIExpression())
!1925 = distinct !DIGlobalVariable(name: "include_idle", scope: !1916, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!1926 = !DIGlobalVariableExpression(var: !1927, expr: !DIExpression())
!1927 = distinct !DIGlobalVariable(name: "include_heading", scope: !1916, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!1928 = !DIGlobalVariableExpression(var: !1929, expr: !DIExpression())
!1929 = distinct !DIGlobalVariable(name: "include_mesg", scope: !1916, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!1930 = !DIGlobalVariableExpression(var: !1931, expr: !DIExpression())
!1931 = distinct !DIGlobalVariable(name: "include_exit", scope: !1916, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!1932 = !DIGlobalVariableExpression(var: !1933, expr: !DIExpression())
!1933 = distinct !DIGlobalVariable(name: "need_boottime", scope: !1916, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!1934 = !DIGlobalVariableExpression(var: !1935, expr: !DIExpression())
!1935 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !1916, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!1936 = !DIGlobalVariableExpression(var: !1937, expr: !DIExpression())
!1937 = distinct !DIGlobalVariable(name: "need_login", scope: !1916, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!1938 = !DIGlobalVariableExpression(var: !1939, expr: !DIExpression())
!1939 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !1916, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!1940 = !DIGlobalVariableExpression(var: !1941, expr: !DIExpression())
!1941 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !1916, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!1942 = !DIGlobalVariableExpression(var: !1943, expr: !DIExpression())
!1943 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !1916, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!1944 = !DIGlobalVariableExpression(var: !1945, expr: !DIExpression())
!1945 = distinct !DIGlobalVariable(name: "need_users", scope: !1916, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!1946 = !DIGlobalVariableExpression(var: !1947, expr: !DIExpression())
!1947 = distinct !DIGlobalVariable(name: "my_line_only", scope: !1916, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!1948 = !DIGlobalVariableExpression(var: !1949, expr: !DIExpression())
!1949 = distinct !DIGlobalVariable(name: "time_format", scope: !1916, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!1950 = !DIGlobalVariableExpression(var: !1951, expr: !DIExpression())
!1951 = distinct !DIGlobalVariable(name: "time_format_width", scope: !1916, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!1952 = !DIGlobalVariableExpression(var: !1953, expr: !DIExpression())
!1953 = distinct !DIGlobalVariable(name: "longopts", scope: !1916, file: !3, line: 162, type: !1954, isLocal: true, isDefinition: true)
!1954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1955, size: 4608, elements: !151)
!1955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1956)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !1957)
!1957 = !{!1958, !1959, !1960, !1961}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1956, file: !144, line: 52, baseType: !49, size: 64)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1956, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1956, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1956, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!1962 = !DIGlobalVariableExpression(var: !1963, expr: !DIExpression())
!1963 = distinct !DIGlobalVariable(name: "mesg", scope: !1964, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!1964 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1916, retainedNodes: !4)
!1965 = !DIGlobalVariableExpression(var: !1966, expr: !DIExpression())
!1966 = distinct !DIGlobalVariable(name: "hoststr", scope: !1967, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!1967 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !1968, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1916, retainedNodes: !4)
!1968 = !DISubroutineType(types: !1969)
!1969 = !{null, !1892, !9}
!1970 = !DIGlobalVariableExpression(var: !1971, expr: !DIExpression())
!1971 = distinct !DIGlobalVariable(name: "hostlen", scope: !1967, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!1972 = !DIGlobalVariableExpression(var: !1973, expr: !DIExpression())
!1973 = distinct !DIGlobalVariable(name: "now", scope: !1974, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!1974 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1916, retainedNodes: !4)
!1975 = !DIGlobalVariableExpression(var: !1976, expr: !DIExpression())
!1976 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !1974, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!1977 = !DIGlobalVariableExpression(var: !1978, expr: !DIExpression())
!1978 = distinct !DIGlobalVariable(name: "buf", scope: !1979, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!1979 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !1980, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1916, retainedNodes: !4)
!1980 = !DISubroutineType(types: !1981)
!1981 = !{!49, !1892}
!1982 = !DIGlobalVariableExpression(var: !1983, expr: !DIExpression())
!1983 = distinct !DIGlobalVariable(name: "runlevline", scope: !1984, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1984 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !1890, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1916, retainedNodes: !4)
!1985 = !DIGlobalVariableExpression(var: !1986, expr: !DIExpression())
!1986 = distinct !DIGlobalVariable(name: "comment", scope: !1984, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1987 = !DIGlobalVariableExpression(var: !1988, expr: !DIExpression())
!1988 = distinct !DIGlobalVariable(name: "exitstr", scope: !1989, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!1989 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !1890, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1916, retainedNodes: !4)
!1990 = distinct !DISubprogram(name: "print_clockchange", scope: !3, file: !3, line: 506, type: !134, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1991 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1990, file: !3, line: 506, type: !67)
!1992 = !DILocation(line: 506, column: 39, scope: !1990)
!1993 = !DILocation(line: 509, column: 32, scope: !1990)
!1994 = !DILocation(line: 510, column: 28, scope: !1990)
!1995 = !DILocation(line: 510, column: 15, scope: !1990)
!1996 = !DILocation(line: 509, column: 3, scope: !1990)
!1997 = !DILocation(line: 511, column: 1, scope: !1990)
!1998 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1999, file: !3, line: 506, type: !2002)
!1999 = distinct !DISubprogram(name: "print_clockchange", scope: !3, file: !3, line: 506, type: !2000, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2026, retainedNodes: !4)
!2000 = !DISubroutineType(types: !2001)
!2001 = !{null, !2002}
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 64)
!2003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2004)
!2004 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !2005)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !2006)
!2006 = !{!2007, !2008, !2009, !2010, !2011, !2012, !2013, !2018, !2019, !2024, !2025}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !2005, file: !72, line: 57, baseType: !14, size: 16)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !2005, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !2005, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !2005, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !2005, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !2005, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !2005, file: !72, line: 67, baseType: !2014, size: 32, offset: 2656)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !2015)
!2015 = !{!2016, !2017}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !2014, file: !72, line: 45, baseType: !14, size: 16)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !2014, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !2005, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !2005, file: !72, line: 79, baseType: !2020, size: 64, offset: 2720)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2005, file: !72, line: 75, size: 64, elements: !2021)
!2021 = !{!2022, !2023}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2020, file: !72, line: 77, baseType: !96, size: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2020, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !2005, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2005, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!2026 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2027, nameTableKind: None)
!2027 = !{!2028, !2030, !2032, !2034, !2036, !2038, !2040, !2042, !2044, !2046, !2048, !2050, !2052, !2054, !2056, !2058, !2060, !2062, !2072, !2075, !2080, !2082, !2085, !2087, !2092, !2095, !2097}
!2028 = !DIGlobalVariableExpression(var: !2029, expr: !DIExpression())
!2029 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2026, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!2030 = !DIGlobalVariableExpression(var: !2031, expr: !DIExpression())
!2031 = distinct !DIGlobalVariable(name: "short_list", scope: !2026, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!2032 = !DIGlobalVariableExpression(var: !2033, expr: !DIExpression())
!2033 = distinct !DIGlobalVariable(name: "short_output", scope: !2026, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!2034 = !DIGlobalVariableExpression(var: !2035, expr: !DIExpression())
!2035 = distinct !DIGlobalVariable(name: "include_idle", scope: !2026, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!2036 = !DIGlobalVariableExpression(var: !2037, expr: !DIExpression())
!2037 = distinct !DIGlobalVariable(name: "include_heading", scope: !2026, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!2038 = !DIGlobalVariableExpression(var: !2039, expr: !DIExpression())
!2039 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2026, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!2040 = !DIGlobalVariableExpression(var: !2041, expr: !DIExpression())
!2041 = distinct !DIGlobalVariable(name: "include_exit", scope: !2026, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!2042 = !DIGlobalVariableExpression(var: !2043, expr: !DIExpression())
!2043 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2026, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!2044 = !DIGlobalVariableExpression(var: !2045, expr: !DIExpression())
!2045 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2026, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!2046 = !DIGlobalVariableExpression(var: !2047, expr: !DIExpression())
!2047 = distinct !DIGlobalVariable(name: "need_login", scope: !2026, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!2048 = !DIGlobalVariableExpression(var: !2049, expr: !DIExpression())
!2049 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2026, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!2050 = !DIGlobalVariableExpression(var: !2051, expr: !DIExpression())
!2051 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2026, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!2052 = !DIGlobalVariableExpression(var: !2053, expr: !DIExpression())
!2053 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2026, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!2054 = !DIGlobalVariableExpression(var: !2055, expr: !DIExpression())
!2055 = distinct !DIGlobalVariable(name: "need_users", scope: !2026, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!2056 = !DIGlobalVariableExpression(var: !2057, expr: !DIExpression())
!2057 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2026, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!2058 = !DIGlobalVariableExpression(var: !2059, expr: !DIExpression())
!2059 = distinct !DIGlobalVariable(name: "time_format", scope: !2026, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!2060 = !DIGlobalVariableExpression(var: !2061, expr: !DIExpression())
!2061 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2026, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!2062 = !DIGlobalVariableExpression(var: !2063, expr: !DIExpression())
!2063 = distinct !DIGlobalVariable(name: "longopts", scope: !2026, file: !3, line: 162, type: !2064, isLocal: true, isDefinition: true)
!2064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2065, size: 4608, elements: !151)
!2065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2066)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !2067)
!2067 = !{!2068, !2069, !2070, !2071}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2066, file: !144, line: 52, baseType: !49, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2066, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2066, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2066, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!2072 = !DIGlobalVariableExpression(var: !2073, expr: !DIExpression())
!2073 = distinct !DIGlobalVariable(name: "mesg", scope: !2074, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!2074 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2026, retainedNodes: !4)
!2075 = !DIGlobalVariableExpression(var: !2076, expr: !DIExpression())
!2076 = distinct !DIGlobalVariable(name: "hoststr", scope: !2077, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!2077 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !2078, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2026, retainedNodes: !4)
!2078 = !DISubroutineType(types: !2079)
!2079 = !{null, !2002, !9}
!2080 = !DIGlobalVariableExpression(var: !2081, expr: !DIExpression())
!2081 = distinct !DIGlobalVariable(name: "hostlen", scope: !2077, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!2082 = !DIGlobalVariableExpression(var: !2083, expr: !DIExpression())
!2083 = distinct !DIGlobalVariable(name: "now", scope: !2084, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!2084 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2026, retainedNodes: !4)
!2085 = !DIGlobalVariableExpression(var: !2086, expr: !DIExpression())
!2086 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !2084, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!2087 = !DIGlobalVariableExpression(var: !2088, expr: !DIExpression())
!2088 = distinct !DIGlobalVariable(name: "buf", scope: !2089, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!2089 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !2090, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2026, retainedNodes: !4)
!2090 = !DISubroutineType(types: !2091)
!2091 = !{!49, !2002}
!2092 = !DIGlobalVariableExpression(var: !2093, expr: !DIExpression())
!2093 = distinct !DIGlobalVariable(name: "runlevline", scope: !2094, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2094 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !2000, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2026, retainedNodes: !4)
!2095 = !DIGlobalVariableExpression(var: !2096, expr: !DIExpression())
!2096 = distinct !DIGlobalVariable(name: "comment", scope: !2094, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2097 = !DIGlobalVariableExpression(var: !2098, expr: !DIExpression())
!2098 = distinct !DIGlobalVariable(name: "exitstr", scope: !2099, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!2099 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !2000, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2026, retainedNodes: !4)
!2100 = distinct !DISubprogram(name: "print_initspawn", scope: !3, file: !3, line: 495, type: !134, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2101 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2100, file: !3, line: 495, type: !67)
!2102 = !DILocation(line: 495, column: 37, scope: !2100)
!2103 = !DILocalVariable(name: "comment", scope: !2100, file: !3, line: 497, type: !6)
!2104 = !DILocation(line: 497, column: 9, scope: !2100)
!2105 = !DILocation(line: 497, column: 43, scope: !2100)
!2106 = !DILocation(line: 497, column: 19, scope: !2100)
!2107 = !DILocalVariable(name: "pidstr", scope: !2100, file: !3, line: 498, type: !1428)
!2108 = !DILocation(line: 498, column: 3, scope: !2100)
!2109 = !DILocation(line: 500, column: 54, scope: !2100)
!2110 = !DILocation(line: 500, column: 64, scope: !2100)
!2111 = !DILocation(line: 501, column: 28, scope: !2100)
!2112 = !DILocation(line: 501, column: 15, scope: !2100)
!2113 = !DILocation(line: 501, column: 43, scope: !2100)
!2114 = !DILocation(line: 501, column: 51, scope: !2100)
!2115 = !DILocation(line: 500, column: 3, scope: !2100)
!2116 = !DILocation(line: 502, column: 9, scope: !2100)
!2117 = !DILocation(line: 502, column: 3, scope: !2100)
!2118 = !DILocation(line: 503, column: 1, scope: !2100)
!2119 = distinct !DISubprogram(name: "print_login", scope: !3, file: !3, line: 482, type: !134, scopeLine: 483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2120 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2119, file: !3, line: 482, type: !67)
!2121 = !DILocation(line: 482, column: 33, scope: !2119)
!2122 = !DILocalVariable(name: "comment", scope: !2119, file: !3, line: 484, type: !6)
!2123 = !DILocation(line: 484, column: 9, scope: !2119)
!2124 = !DILocation(line: 484, column: 43, scope: !2119)
!2125 = !DILocation(line: 484, column: 19, scope: !2119)
!2126 = !DILocalVariable(name: "pidstr", scope: !2119, file: !3, line: 485, type: !1428)
!2127 = !DILocation(line: 485, column: 3, scope: !2119)
!2128 = !DILocation(line: 489, column: 19, scope: !2119)
!2129 = !DILocation(line: 489, column: 62, scope: !2119)
!2130 = !DILocation(line: 489, column: 72, scope: !2119)
!2131 = !DILocation(line: 490, column: 28, scope: !2119)
!2132 = !DILocation(line: 490, column: 15, scope: !2119)
!2133 = !DILocation(line: 490, column: 43, scope: !2119)
!2134 = !DILocation(line: 490, column: 51, scope: !2119)
!2135 = !DILocation(line: 489, column: 3, scope: !2119)
!2136 = !DILocation(line: 491, column: 9, scope: !2119)
!2137 = !DILocation(line: 491, column: 3, scope: !2119)
!2138 = !DILocation(line: 492, column: 1, scope: !2119)
!2139 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2140, file: !3, line: 482, type: !2143)
!2140 = distinct !DISubprogram(name: "print_login", scope: !3, file: !3, line: 482, type: !2141, scopeLine: 483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2167, retainedNodes: !4)
!2141 = !DISubroutineType(types: !2142)
!2142 = !{null, !2143}
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 64)
!2144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2145)
!2145 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !2146)
!2146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !2147)
!2147 = !{!2148, !2149, !2150, !2151, !2152, !2153, !2154, !2159, !2160, !2165, !2166}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !2146, file: !72, line: 57, baseType: !14, size: 16)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !2146, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !2146, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !2146, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !2146, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !2146, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !2146, file: !72, line: 67, baseType: !2155, size: 32, offset: 2656)
!2155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !2156)
!2156 = !{!2157, !2158}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !2155, file: !72, line: 45, baseType: !14, size: 16)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !2155, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !2146, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !2146, file: !72, line: 79, baseType: !2161, size: 64, offset: 2720)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2146, file: !72, line: 75, size: 64, elements: !2162)
!2162 = !{!2163, !2164}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2161, file: !72, line: 77, baseType: !96, size: 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2161, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !2146, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2146, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!2167 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2168, nameTableKind: None)
!2168 = !{!2169, !2171, !2173, !2175, !2177, !2179, !2181, !2183, !2185, !2187, !2189, !2191, !2193, !2195, !2197, !2199, !2201, !2203, !2213, !2216, !2221, !2223, !2226, !2228, !2233, !2236, !2238}
!2169 = !DIGlobalVariableExpression(var: !2170, expr: !DIExpression())
!2170 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2167, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!2171 = !DIGlobalVariableExpression(var: !2172, expr: !DIExpression())
!2172 = distinct !DIGlobalVariable(name: "short_list", scope: !2167, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!2173 = !DIGlobalVariableExpression(var: !2174, expr: !DIExpression())
!2174 = distinct !DIGlobalVariable(name: "short_output", scope: !2167, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!2175 = !DIGlobalVariableExpression(var: !2176, expr: !DIExpression())
!2176 = distinct !DIGlobalVariable(name: "include_idle", scope: !2167, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!2177 = !DIGlobalVariableExpression(var: !2178, expr: !DIExpression())
!2178 = distinct !DIGlobalVariable(name: "include_heading", scope: !2167, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!2179 = !DIGlobalVariableExpression(var: !2180, expr: !DIExpression())
!2180 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2167, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!2181 = !DIGlobalVariableExpression(var: !2182, expr: !DIExpression())
!2182 = distinct !DIGlobalVariable(name: "include_exit", scope: !2167, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!2183 = !DIGlobalVariableExpression(var: !2184, expr: !DIExpression())
!2184 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2167, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!2185 = !DIGlobalVariableExpression(var: !2186, expr: !DIExpression())
!2186 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2167, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!2187 = !DIGlobalVariableExpression(var: !2188, expr: !DIExpression())
!2188 = distinct !DIGlobalVariable(name: "need_login", scope: !2167, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!2189 = !DIGlobalVariableExpression(var: !2190, expr: !DIExpression())
!2190 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2167, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!2191 = !DIGlobalVariableExpression(var: !2192, expr: !DIExpression())
!2192 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2167, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!2193 = !DIGlobalVariableExpression(var: !2194, expr: !DIExpression())
!2194 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2167, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!2195 = !DIGlobalVariableExpression(var: !2196, expr: !DIExpression())
!2196 = distinct !DIGlobalVariable(name: "need_users", scope: !2167, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!2197 = !DIGlobalVariableExpression(var: !2198, expr: !DIExpression())
!2198 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2167, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!2199 = !DIGlobalVariableExpression(var: !2200, expr: !DIExpression())
!2200 = distinct !DIGlobalVariable(name: "time_format", scope: !2167, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!2201 = !DIGlobalVariableExpression(var: !2202, expr: !DIExpression())
!2202 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2167, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!2203 = !DIGlobalVariableExpression(var: !2204, expr: !DIExpression())
!2204 = distinct !DIGlobalVariable(name: "longopts", scope: !2167, file: !3, line: 162, type: !2205, isLocal: true, isDefinition: true)
!2205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2206, size: 4608, elements: !151)
!2206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2207)
!2207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !2208)
!2208 = !{!2209, !2210, !2211, !2212}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2207, file: !144, line: 52, baseType: !49, size: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2207, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2207, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2207, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!2213 = !DIGlobalVariableExpression(var: !2214, expr: !DIExpression())
!2214 = distinct !DIGlobalVariable(name: "mesg", scope: !2215, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!2215 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2167, retainedNodes: !4)
!2216 = !DIGlobalVariableExpression(var: !2217, expr: !DIExpression())
!2217 = distinct !DIGlobalVariable(name: "hoststr", scope: !2218, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!2218 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !2219, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2167, retainedNodes: !4)
!2219 = !DISubroutineType(types: !2220)
!2220 = !{null, !2143, !9}
!2221 = !DIGlobalVariableExpression(var: !2222, expr: !DIExpression())
!2222 = distinct !DIGlobalVariable(name: "hostlen", scope: !2218, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!2223 = !DIGlobalVariableExpression(var: !2224, expr: !DIExpression())
!2224 = distinct !DIGlobalVariable(name: "now", scope: !2225, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!2225 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2167, retainedNodes: !4)
!2226 = !DIGlobalVariableExpression(var: !2227, expr: !DIExpression())
!2227 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !2225, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!2228 = !DIGlobalVariableExpression(var: !2229, expr: !DIExpression())
!2229 = distinct !DIGlobalVariable(name: "buf", scope: !2230, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!2230 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !2231, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2167, retainedNodes: !4)
!2231 = !DISubroutineType(types: !2232)
!2232 = !{!49, !2143}
!2233 = !DIGlobalVariableExpression(var: !2234, expr: !DIExpression())
!2234 = distinct !DIGlobalVariable(name: "runlevline", scope: !2235, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2235 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !2141, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2167, retainedNodes: !4)
!2236 = !DIGlobalVariableExpression(var: !2237, expr: !DIExpression())
!2237 = distinct !DIGlobalVariable(name: "comment", scope: !2235, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2238 = !DIGlobalVariableExpression(var: !2239, expr: !DIExpression())
!2239 = distinct !DIGlobalVariable(name: "exitstr", scope: !2240, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!2240 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !2141, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2167, retainedNodes: !4)
!2241 = !DILocalVariable(name: "comment", scope: !2140, file: !3, line: 484, type: !6)
!2242 = !DILocalVariable(name: "pidstr", scope: !2140, file: !3, line: 485, type: !1428)
!2243 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !140, file: !3, line: 459, type: !67)
!2244 = !DILocation(line: 459, column: 37, scope: !140)
!2245 = !DILocalVariable(name: "comment", scope: !140, file: !3, line: 462, type: !6)
!2246 = !DILocation(line: 462, column: 9, scope: !140)
!2247 = !DILocation(line: 462, column: 43, scope: !140)
!2248 = !DILocation(line: 462, column: 19, scope: !140)
!2249 = !DILocalVariable(name: "pidstr", scope: !140, file: !3, line: 463, type: !1428)
!2250 = !DILocation(line: 463, column: 3, scope: !140)
!2251 = !DILocation(line: 465, column: 8, scope: !2252)
!2252 = distinct !DILexicalBlock(scope: !140, file: !3, line: 465, column: 7)
!2253 = !DILocation(line: 465, column: 7, scope: !140)
!2254 = !DILocation(line: 466, column: 32, scope: !2252)
!2255 = !DILocation(line: 466, column: 24, scope: !2252)
!2256 = !DILocation(line: 467, column: 24, scope: !2252)
!2257 = !DILocation(line: 467, column: 78, scope: !2252)
!2258 = !DILocation(line: 468, column: 34, scope: !2252)
!2259 = !DILocation(line: 468, column: 26, scope: !2252)
!2260 = !DILocation(line: 468, column: 24, scope: !2252)
!2261 = !DILocation(line: 469, column: 24, scope: !2252)
!2262 = !DILocation(line: 470, column: 24, scope: !2252)
!2263 = !DILocation(line: 466, column: 15, scope: !2252)
!2264 = !DILocation(line: 466, column: 13, scope: !2252)
!2265 = !DILocation(line: 466, column: 5, scope: !2252)
!2266 = !DILocation(line: 471, column: 12, scope: !140)
!2267 = !DILocation(line: 471, column: 34, scope: !140)
!2268 = !DILocation(line: 471, column: 46, scope: !140)
!2269 = !DILocation(line: 472, column: 12, scope: !140)
!2270 = !DILocation(line: 472, column: 24, scope: !140)
!2271 = !DILocation(line: 471, column: 3, scope: !140)
!2272 = !DILocation(line: 476, column: 54, scope: !140)
!2273 = !DILocation(line: 476, column: 64, scope: !140)
!2274 = !DILocation(line: 477, column: 28, scope: !140)
!2275 = !DILocation(line: 477, column: 15, scope: !140)
!2276 = !DILocation(line: 477, column: 43, scope: !140)
!2277 = !DILocation(line: 477, column: 51, scope: !140)
!2278 = !DILocation(line: 477, column: 60, scope: !140)
!2279 = !DILocation(line: 476, column: 3, scope: !140)
!2280 = !DILocation(line: 478, column: 9, scope: !140)
!2281 = !DILocation(line: 478, column: 3, scope: !140)
!2282 = !DILocation(line: 479, column: 1, scope: !140)
!2283 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2284, file: !3, line: 459, type: !2287)
!2284 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !2285, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2311, retainedNodes: !4)
!2285 = !DISubroutineType(types: !2286)
!2286 = !{null, !2287}
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 64)
!2288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2289)
!2289 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !2290)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !2291)
!2291 = !{!2292, !2293, !2294, !2295, !2296, !2297, !2298, !2303, !2304, !2309, !2310}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !2290, file: !72, line: 57, baseType: !14, size: 16)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !2290, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !2290, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !2290, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !2290, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !2290, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !2290, file: !72, line: 67, baseType: !2299, size: 32, offset: 2656)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !2300)
!2300 = !{!2301, !2302}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !2299, file: !72, line: 45, baseType: !14, size: 16)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !2299, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !2290, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !2290, file: !72, line: 79, baseType: !2305, size: 64, offset: 2720)
!2305 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2290, file: !72, line: 75, size: 64, elements: !2306)
!2306 = !{!2307, !2308}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2305, file: !72, line: 77, baseType: !96, size: 32)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2305, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !2290, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2290, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!2311 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2312, nameTableKind: None)
!2312 = !{!2313, !2315, !2317, !2319, !2321, !2323, !2325, !2327, !2329, !2331, !2333, !2335, !2337, !2339, !2341, !2343, !2345, !2347, !2357, !2360, !2365, !2367, !2370, !2372, !2377, !2380, !2382}
!2313 = !DIGlobalVariableExpression(var: !2314, expr: !DIExpression())
!2314 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2311, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!2315 = !DIGlobalVariableExpression(var: !2316, expr: !DIExpression())
!2316 = distinct !DIGlobalVariable(name: "short_list", scope: !2311, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!2317 = !DIGlobalVariableExpression(var: !2318, expr: !DIExpression())
!2318 = distinct !DIGlobalVariable(name: "short_output", scope: !2311, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!2319 = !DIGlobalVariableExpression(var: !2320, expr: !DIExpression())
!2320 = distinct !DIGlobalVariable(name: "include_idle", scope: !2311, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!2321 = !DIGlobalVariableExpression(var: !2322, expr: !DIExpression())
!2322 = distinct !DIGlobalVariable(name: "include_heading", scope: !2311, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!2323 = !DIGlobalVariableExpression(var: !2324, expr: !DIExpression())
!2324 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2311, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!2325 = !DIGlobalVariableExpression(var: !2326, expr: !DIExpression())
!2326 = distinct !DIGlobalVariable(name: "include_exit", scope: !2311, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!2327 = !DIGlobalVariableExpression(var: !2328, expr: !DIExpression())
!2328 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2311, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!2329 = !DIGlobalVariableExpression(var: !2330, expr: !DIExpression())
!2330 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2311, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!2331 = !DIGlobalVariableExpression(var: !2332, expr: !DIExpression())
!2332 = distinct !DIGlobalVariable(name: "need_login", scope: !2311, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!2333 = !DIGlobalVariableExpression(var: !2334, expr: !DIExpression())
!2334 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2311, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!2335 = !DIGlobalVariableExpression(var: !2336, expr: !DIExpression())
!2336 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2311, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!2337 = !DIGlobalVariableExpression(var: !2338, expr: !DIExpression())
!2338 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2311, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!2339 = !DIGlobalVariableExpression(var: !2340, expr: !DIExpression())
!2340 = distinct !DIGlobalVariable(name: "need_users", scope: !2311, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!2341 = !DIGlobalVariableExpression(var: !2342, expr: !DIExpression())
!2342 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2311, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!2343 = !DIGlobalVariableExpression(var: !2344, expr: !DIExpression())
!2344 = distinct !DIGlobalVariable(name: "time_format", scope: !2311, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!2345 = !DIGlobalVariableExpression(var: !2346, expr: !DIExpression())
!2346 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2311, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!2347 = !DIGlobalVariableExpression(var: !2348, expr: !DIExpression())
!2348 = distinct !DIGlobalVariable(name: "longopts", scope: !2311, file: !3, line: 162, type: !2349, isLocal: true, isDefinition: true)
!2349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2350, size: 4608, elements: !151)
!2350 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2351)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !2352)
!2352 = !{!2353, !2354, !2355, !2356}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2351, file: !144, line: 52, baseType: !49, size: 64)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2351, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2351, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2351, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!2357 = !DIGlobalVariableExpression(var: !2358, expr: !DIExpression())
!2358 = distinct !DIGlobalVariable(name: "mesg", scope: !2359, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!2359 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2311, retainedNodes: !4)
!2360 = !DIGlobalVariableExpression(var: !2361, expr: !DIExpression())
!2361 = distinct !DIGlobalVariable(name: "hoststr", scope: !2362, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!2362 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !2363, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2311, retainedNodes: !4)
!2363 = !DISubroutineType(types: !2364)
!2364 = !{null, !2287, !9}
!2365 = !DIGlobalVariableExpression(var: !2366, expr: !DIExpression())
!2366 = distinct !DIGlobalVariable(name: "hostlen", scope: !2362, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!2367 = !DIGlobalVariableExpression(var: !2368, expr: !DIExpression())
!2368 = distinct !DIGlobalVariable(name: "now", scope: !2369, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!2369 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2311, retainedNodes: !4)
!2370 = !DIGlobalVariableExpression(var: !2371, expr: !DIExpression())
!2371 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !2369, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!2372 = !DIGlobalVariableExpression(var: !2373, expr: !DIExpression())
!2373 = distinct !DIGlobalVariable(name: "buf", scope: !2374, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!2374 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !2375, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2311, retainedNodes: !4)
!2375 = !DISubroutineType(types: !2376)
!2376 = !{!49, !2287}
!2377 = !DIGlobalVariableExpression(var: !2378, expr: !DIExpression())
!2378 = distinct !DIGlobalVariable(name: "runlevline", scope: !2379, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2379 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !2285, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2311, retainedNodes: !4)
!2380 = !DIGlobalVariableExpression(var: !2381, expr: !DIExpression())
!2381 = distinct !DIGlobalVariable(name: "comment", scope: !2379, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2382 = !DIGlobalVariableExpression(var: !2383, expr: !DIExpression())
!2383 = distinct !DIGlobalVariable(name: "exitstr", scope: !2284, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!2384 = !DILocalVariable(name: "comment", scope: !2284, file: !3, line: 462, type: !6)
!2385 = !DILocalVariable(name: "pidstr", scope: !2284, file: !3, line: 463, type: !1428)
!2386 = distinct !DISubprogram(name: "make_id_equals_comment", scope: !3, file: !3, line: 448, type: !2387, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2387 = !DISubroutineType(types: !2388)
!2388 = !{!6, !67}
!2389 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2386, file: !3, line: 448, type: !67)
!2390 = !DILocation(line: 448, column: 44, scope: !2386)
!2391 = !DILocalVariable(name: "utmpsize", scope: !2386, file: !3, line: 450, type: !110)
!2392 = !DILocation(line: 450, column: 10, scope: !2386)
!2393 = !DILocalVariable(name: "comment", scope: !2386, file: !3, line: 451, type: !6)
!2394 = !DILocation(line: 451, column: 9, scope: !2386)
!2395 = !DILocation(line: 451, column: 36, scope: !2386)
!2396 = !DILocation(line: 451, column: 28, scope: !2386)
!2397 = !DILocation(line: 451, column: 48, scope: !2386)
!2398 = !DILocation(line: 451, column: 46, scope: !2386)
!2399 = !DILocation(line: 451, column: 57, scope: !2386)
!2400 = !DILocation(line: 451, column: 19, scope: !2386)
!2401 = !DILocation(line: 453, column: 11, scope: !2386)
!2402 = !DILocation(line: 453, column: 20, scope: !2386)
!2403 = !DILocation(line: 453, column: 3, scope: !2386)
!2404 = !DILocation(line: 454, column: 12, scope: !2386)
!2405 = !DILocation(line: 454, column: 21, scope: !2386)
!2406 = !DILocation(line: 454, column: 39, scope: !2386)
!2407 = !DILocation(line: 454, column: 3, scope: !2386)
!2408 = !DILocation(line: 455, column: 10, scope: !2386)
!2409 = !DILocation(line: 455, column: 3, scope: !2386)
!2410 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2411, file: !3, line: 448, type: !2414)
!2411 = distinct !DISubprogram(name: "make_id_equals_comment", scope: !3, file: !3, line: 448, type: !2412, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2438, retainedNodes: !4)
!2412 = !DISubroutineType(types: !2413)
!2413 = !{!6, !2414}
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 64)
!2415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2416)
!2416 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !2417)
!2417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !2418)
!2418 = !{!2419, !2420, !2421, !2422, !2423, !2424, !2425, !2430, !2431, !2436, !2437}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !2417, file: !72, line: 57, baseType: !14, size: 16)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !2417, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !2417, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !2417, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !2417, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !2417, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !2417, file: !72, line: 67, baseType: !2426, size: 32, offset: 2656)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !2427)
!2427 = !{!2428, !2429}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !2426, file: !72, line: 45, baseType: !14, size: 16)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !2426, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !2417, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !2417, file: !72, line: 79, baseType: !2432, size: 64, offset: 2720)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2417, file: !72, line: 75, size: 64, elements: !2433)
!2433 = !{!2434, !2435}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2432, file: !72, line: 77, baseType: !96, size: 32)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2432, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !2417, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2417, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!2438 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2439, nameTableKind: None)
!2439 = !{!2440, !2442, !2444, !2446, !2448, !2450, !2452, !2454, !2456, !2458, !2460, !2462, !2464, !2466, !2468, !2470, !2472, !2474, !2484, !2487, !2492, !2494, !2497, !2499, !2504, !2509, !2511}
!2440 = !DIGlobalVariableExpression(var: !2441, expr: !DIExpression())
!2441 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2438, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!2442 = !DIGlobalVariableExpression(var: !2443, expr: !DIExpression())
!2443 = distinct !DIGlobalVariable(name: "short_list", scope: !2438, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!2444 = !DIGlobalVariableExpression(var: !2445, expr: !DIExpression())
!2445 = distinct !DIGlobalVariable(name: "short_output", scope: !2438, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!2446 = !DIGlobalVariableExpression(var: !2447, expr: !DIExpression())
!2447 = distinct !DIGlobalVariable(name: "include_idle", scope: !2438, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!2448 = !DIGlobalVariableExpression(var: !2449, expr: !DIExpression())
!2449 = distinct !DIGlobalVariable(name: "include_heading", scope: !2438, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!2450 = !DIGlobalVariableExpression(var: !2451, expr: !DIExpression())
!2451 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2438, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!2452 = !DIGlobalVariableExpression(var: !2453, expr: !DIExpression())
!2453 = distinct !DIGlobalVariable(name: "include_exit", scope: !2438, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!2454 = !DIGlobalVariableExpression(var: !2455, expr: !DIExpression())
!2455 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2438, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!2456 = !DIGlobalVariableExpression(var: !2457, expr: !DIExpression())
!2457 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2438, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!2458 = !DIGlobalVariableExpression(var: !2459, expr: !DIExpression())
!2459 = distinct !DIGlobalVariable(name: "need_login", scope: !2438, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!2460 = !DIGlobalVariableExpression(var: !2461, expr: !DIExpression())
!2461 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2438, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!2462 = !DIGlobalVariableExpression(var: !2463, expr: !DIExpression())
!2463 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2438, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!2464 = !DIGlobalVariableExpression(var: !2465, expr: !DIExpression())
!2465 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2438, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!2466 = !DIGlobalVariableExpression(var: !2467, expr: !DIExpression())
!2467 = distinct !DIGlobalVariable(name: "need_users", scope: !2438, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!2468 = !DIGlobalVariableExpression(var: !2469, expr: !DIExpression())
!2469 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2438, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!2470 = !DIGlobalVariableExpression(var: !2471, expr: !DIExpression())
!2471 = distinct !DIGlobalVariable(name: "time_format", scope: !2438, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!2472 = !DIGlobalVariableExpression(var: !2473, expr: !DIExpression())
!2473 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2438, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!2474 = !DIGlobalVariableExpression(var: !2475, expr: !DIExpression())
!2475 = distinct !DIGlobalVariable(name: "longopts", scope: !2438, file: !3, line: 162, type: !2476, isLocal: true, isDefinition: true)
!2476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2477, size: 4608, elements: !151)
!2477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2478)
!2478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !2479)
!2479 = !{!2480, !2481, !2482, !2483}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2478, file: !144, line: 52, baseType: !49, size: 64)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2478, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2478, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2478, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!2484 = !DIGlobalVariableExpression(var: !2485, expr: !DIExpression())
!2485 = distinct !DIGlobalVariable(name: "mesg", scope: !2486, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!2486 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2438, retainedNodes: !4)
!2487 = !DIGlobalVariableExpression(var: !2488, expr: !DIExpression())
!2488 = distinct !DIGlobalVariable(name: "hoststr", scope: !2489, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!2489 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !2490, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2438, retainedNodes: !4)
!2490 = !DISubroutineType(types: !2491)
!2491 = !{null, !2414, !9}
!2492 = !DIGlobalVariableExpression(var: !2493, expr: !DIExpression())
!2493 = distinct !DIGlobalVariable(name: "hostlen", scope: !2489, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!2494 = !DIGlobalVariableExpression(var: !2495, expr: !DIExpression())
!2495 = distinct !DIGlobalVariable(name: "now", scope: !2496, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!2496 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2438, retainedNodes: !4)
!2497 = !DIGlobalVariableExpression(var: !2498, expr: !DIExpression())
!2498 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !2496, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!2499 = !DIGlobalVariableExpression(var: !2500, expr: !DIExpression())
!2500 = distinct !DIGlobalVariable(name: "buf", scope: !2501, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!2501 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !2502, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2438, retainedNodes: !4)
!2502 = !DISubroutineType(types: !2503)
!2503 = !{!49, !2414}
!2504 = !DIGlobalVariableExpression(var: !2505, expr: !DIExpression())
!2505 = distinct !DIGlobalVariable(name: "runlevline", scope: !2506, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2506 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !2507, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2438, retainedNodes: !4)
!2507 = !DISubroutineType(types: !2508)
!2508 = !{null, !2414}
!2509 = !DIGlobalVariableExpression(var: !2510, expr: !DIExpression())
!2510 = distinct !DIGlobalVariable(name: "comment", scope: !2506, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2511 = !DIGlobalVariableExpression(var: !2512, expr: !DIExpression())
!2512 = distinct !DIGlobalVariable(name: "exitstr", scope: !2513, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!2513 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !2507, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2438, retainedNodes: !4)
!2514 = !DILocalVariable(name: "utmpsize", scope: !2411, file: !3, line: 450, type: !110)
!2515 = !DILocalVariable(name: "comment", scope: !2411, file: !3, line: 451, type: !6)
!2516 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !125, file: !3, line: 218, type: !67)
!2517 = !DILocation(line: 218, column: 33, scope: !125)
!2518 = !DILocalVariable(name: "t", scope: !125, file: !3, line: 228, type: !9)
!2519 = !DILocation(line: 228, column: 10, scope: !125)
!2520 = !DILocation(line: 228, column: 14, scope: !125)
!2521 = !DILocalVariable(name: "tmp", scope: !125, file: !3, line: 229, type: !2522)
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 64)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !2524, line: 7, size: 448, elements: !2525)
!2524 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h", directory: "")
!2525 = !{!2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !2523, file: !2524, line: 9, baseType: !53, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !2523, file: !2524, line: 10, baseType: !53, size: 32, offset: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !2523, file: !2524, line: 11, baseType: !53, size: 32, offset: 64)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !2523, file: !2524, line: 12, baseType: !53, size: 32, offset: 96)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !2523, file: !2524, line: 13, baseType: !53, size: 32, offset: 128)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !2523, file: !2524, line: 14, baseType: !53, size: 32, offset: 160)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !2523, file: !2524, line: 15, baseType: !53, size: 32, offset: 192)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !2523, file: !2524, line: 16, baseType: !53, size: 32, offset: 224)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !2523, file: !2524, line: 17, baseType: !53, size: 32, offset: 256)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !2523, file: !2524, line: 20, baseType: !13, size: 64, offset: 320)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !2523, file: !2524, line: 21, baseType: !49, size: 64, offset: 384)
!2537 = !DILocation(line: 229, column: 14, scope: !125)
!2538 = !DILocation(line: 229, column: 20, scope: !125)
!2539 = !DILocation(line: 231, column: 7, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !125, file: !3, line: 231, column: 7)
!2541 = !DILocation(line: 231, column: 7, scope: !125)
!2542 = !DILocation(line: 233, column: 34, scope: !2543)
!2543 = distinct !DILexicalBlock(scope: !2540, file: !3, line: 232, column: 5)
!2544 = !DILocation(line: 233, column: 47, scope: !2543)
!2545 = !DILocation(line: 233, column: 7, scope: !2543)
!2546 = !DILocation(line: 234, column: 7, scope: !2543)
!2547 = !DILocation(line: 237, column: 23, scope: !2540)
!2548 = !DILocation(line: 237, column: 12, scope: !2540)
!2549 = !DILocation(line: 237, column: 5, scope: !2540)
!2550 = !DILocation(line: 238, column: 1, scope: !125)
!2551 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2552, file: !3, line: 218, type: !2555)
!2552 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !2553, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2579, retainedNodes: !4)
!2553 = !DISubroutineType(types: !2554)
!2554 = !{!49, !2555}
!2555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2556, size: 64)
!2556 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2557)
!2557 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !2558)
!2558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !2559)
!2559 = !{!2560, !2561, !2562, !2563, !2564, !2565, !2566, !2571, !2572, !2577, !2578}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !2558, file: !72, line: 57, baseType: !14, size: 16)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !2558, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !2558, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !2558, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !2558, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !2558, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !2558, file: !72, line: 67, baseType: !2567, size: 32, offset: 2656)
!2567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !2568)
!2568 = !{!2569, !2570}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !2567, file: !72, line: 45, baseType: !14, size: 16)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !2567, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !2558, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !2558, file: !72, line: 79, baseType: !2573, size: 64, offset: 2720)
!2573 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2558, file: !72, line: 75, size: 64, elements: !2574)
!2574 = !{!2575, !2576}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2573, file: !72, line: 77, baseType: !96, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2573, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !2558, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2558, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!2579 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2580, nameTableKind: None)
!2580 = !{!2581, !2583, !2585, !2587, !2589, !2591, !2593, !2595, !2597, !2599, !2601, !2603, !2605, !2607, !2609, !2611, !2613, !2615, !2625, !2628, !2633, !2635, !2638, !2640, !2642, !2647, !2649}
!2581 = !DIGlobalVariableExpression(var: !2582, expr: !DIExpression())
!2582 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2579, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!2583 = !DIGlobalVariableExpression(var: !2584, expr: !DIExpression())
!2584 = distinct !DIGlobalVariable(name: "short_list", scope: !2579, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!2585 = !DIGlobalVariableExpression(var: !2586, expr: !DIExpression())
!2586 = distinct !DIGlobalVariable(name: "short_output", scope: !2579, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!2587 = !DIGlobalVariableExpression(var: !2588, expr: !DIExpression())
!2588 = distinct !DIGlobalVariable(name: "include_idle", scope: !2579, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!2589 = !DIGlobalVariableExpression(var: !2590, expr: !DIExpression())
!2590 = distinct !DIGlobalVariable(name: "include_heading", scope: !2579, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!2591 = !DIGlobalVariableExpression(var: !2592, expr: !DIExpression())
!2592 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2579, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!2593 = !DIGlobalVariableExpression(var: !2594, expr: !DIExpression())
!2594 = distinct !DIGlobalVariable(name: "include_exit", scope: !2579, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!2595 = !DIGlobalVariableExpression(var: !2596, expr: !DIExpression())
!2596 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2579, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!2597 = !DIGlobalVariableExpression(var: !2598, expr: !DIExpression())
!2598 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2579, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!2599 = !DIGlobalVariableExpression(var: !2600, expr: !DIExpression())
!2600 = distinct !DIGlobalVariable(name: "need_login", scope: !2579, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!2601 = !DIGlobalVariableExpression(var: !2602, expr: !DIExpression())
!2602 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2579, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!2603 = !DIGlobalVariableExpression(var: !2604, expr: !DIExpression())
!2604 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2579, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!2605 = !DIGlobalVariableExpression(var: !2606, expr: !DIExpression())
!2606 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2579, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!2607 = !DIGlobalVariableExpression(var: !2608, expr: !DIExpression())
!2608 = distinct !DIGlobalVariable(name: "need_users", scope: !2579, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!2609 = !DIGlobalVariableExpression(var: !2610, expr: !DIExpression())
!2610 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2579, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!2611 = !DIGlobalVariableExpression(var: !2612, expr: !DIExpression())
!2612 = distinct !DIGlobalVariable(name: "time_format", scope: !2579, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!2613 = !DIGlobalVariableExpression(var: !2614, expr: !DIExpression())
!2614 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2579, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!2615 = !DIGlobalVariableExpression(var: !2616, expr: !DIExpression())
!2616 = distinct !DIGlobalVariable(name: "longopts", scope: !2579, file: !3, line: 162, type: !2617, isLocal: true, isDefinition: true)
!2617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2618, size: 4608, elements: !151)
!2618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2619)
!2619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !2620)
!2620 = !{!2621, !2622, !2623, !2624}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2619, file: !144, line: 52, baseType: !49, size: 64)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2619, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2619, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2619, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!2625 = !DIGlobalVariableExpression(var: !2626, expr: !DIExpression())
!2626 = distinct !DIGlobalVariable(name: "mesg", scope: !2627, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!2627 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2579, retainedNodes: !4)
!2628 = !DIGlobalVariableExpression(var: !2629, expr: !DIExpression())
!2629 = distinct !DIGlobalVariable(name: "hoststr", scope: !2630, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!2630 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !2631, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2579, retainedNodes: !4)
!2631 = !DISubroutineType(types: !2632)
!2632 = !{null, !2555, !9}
!2633 = !DIGlobalVariableExpression(var: !2634, expr: !DIExpression())
!2634 = distinct !DIGlobalVariable(name: "hostlen", scope: !2630, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!2635 = !DIGlobalVariableExpression(var: !2636, expr: !DIExpression())
!2636 = distinct !DIGlobalVariable(name: "now", scope: !2637, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!2637 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2579, retainedNodes: !4)
!2638 = !DIGlobalVariableExpression(var: !2639, expr: !DIExpression())
!2639 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !2637, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!2640 = !DIGlobalVariableExpression(var: !2641, expr: !DIExpression())
!2641 = distinct !DIGlobalVariable(name: "buf", scope: !2552, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!2642 = !DIGlobalVariableExpression(var: !2643, expr: !DIExpression())
!2643 = distinct !DIGlobalVariable(name: "runlevline", scope: !2644, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2644 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !2645, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2579, retainedNodes: !4)
!2645 = !DISubroutineType(types: !2646)
!2646 = !{null, !2555}
!2647 = !DIGlobalVariableExpression(var: !2648, expr: !DIExpression())
!2648 = distinct !DIGlobalVariable(name: "comment", scope: !2644, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2649 = !DIGlobalVariableExpression(var: !2650, expr: !DIExpression())
!2650 = distinct !DIGlobalVariable(name: "exitstr", scope: !2651, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!2651 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !2645, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2579, retainedNodes: !4)
!2652 = !DILocalVariable(name: "t", scope: !2552, file: !3, line: 228, type: !9)
!2653 = !DILocalVariable(name: "tmp", scope: !2552, file: !3, line: 229, type: !2654)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 64)
!2655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !2524, line: 7, size: 448, elements: !2656)
!2656 = !{!2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !2655, file: !2524, line: 9, baseType: !53, size: 32)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !2655, file: !2524, line: 10, baseType: !53, size: 32, offset: 32)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !2655, file: !2524, line: 11, baseType: !53, size: 32, offset: 64)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !2655, file: !2524, line: 12, baseType: !53, size: 32, offset: 96)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !2655, file: !2524, line: 13, baseType: !53, size: 32, offset: 128)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !2655, file: !2524, line: 14, baseType: !53, size: 32, offset: 160)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !2655, file: !2524, line: 15, baseType: !53, size: 32, offset: 192)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !2655, file: !2524, line: 16, baseType: !53, size: 32, offset: 224)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !2655, file: !2524, line: 17, baseType: !53, size: 32, offset: 256)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !2655, file: !2524, line: 20, baseType: !13, size: 64, offset: 320)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !2655, file: !2524, line: 21, baseType: !49, size: 64, offset: 384)
!2668 = !DILocalVariable(name: "userlen", arg: 1, scope: !56, file: !3, line: 244, type: !53)
!2669 = !DILocation(line: 244, column: 17, scope: !56)
!2670 = !DILocalVariable(name: "user", arg: 2, scope: !56, file: !3, line: 244, type: !49)
!2671 = !DILocation(line: 244, column: 38, scope: !56)
!2672 = !DILocalVariable(name: "state", arg: 3, scope: !56, file: !3, line: 244, type: !50)
!2673 = !DILocation(line: 244, column: 55, scope: !56)
!2674 = !DILocalVariable(name: "linelen", arg: 4, scope: !56, file: !3, line: 245, type: !53)
!2675 = !DILocation(line: 245, column: 17, scope: !56)
!2676 = !DILocalVariable(name: "line", arg: 5, scope: !56, file: !3, line: 245, type: !49)
!2677 = !DILocation(line: 245, column: 38, scope: !56)
!2678 = !DILocalVariable(name: "time_str", arg: 6, scope: !56, file: !3, line: 246, type: !49)
!2679 = !DILocation(line: 246, column: 25, scope: !56)
!2680 = !DILocalVariable(name: "idle", arg: 7, scope: !56, file: !3, line: 246, type: !49)
!2681 = !DILocation(line: 246, column: 47, scope: !56)
!2682 = !DILocalVariable(name: "pid", arg: 8, scope: !56, file: !3, line: 246, type: !49)
!2683 = !DILocation(line: 246, column: 65, scope: !56)
!2684 = !DILocalVariable(name: "comment", arg: 9, scope: !56, file: !3, line: 247, type: !49)
!2685 = !DILocation(line: 247, column: 25, scope: !56)
!2686 = !DILocalVariable(name: "exitstr", arg: 10, scope: !56, file: !3, line: 247, type: !49)
!2687 = !DILocation(line: 247, column: 46, scope: !56)
!2688 = !DILocalVariable(name: "buf", scope: !56, file: !3, line: 250, type: !6)
!2689 = !DILocation(line: 250, column: 9, scope: !56)
!2690 = !DILocalVariable(name: "x_idle", scope: !56, file: !3, line: 251, type: !2691)
!2691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !260)
!2692 = !DILocation(line: 251, column: 8, scope: !56)
!2693 = !DILocalVariable(name: "x_pid", scope: !56, file: !3, line: 252, type: !2694)
!2694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 104, elements: !2695)
!2695 = !{!2696}
!2696 = !DISubrange(count: 13)
!2697 = !DILocation(line: 252, column: 8, scope: !56)
!2698 = !DILocalVariable(name: "x_exitstr", scope: !56, file: !3, line: 253, type: !6)
!2699 = !DILocation(line: 253, column: 9, scope: !56)
!2700 = !DILocalVariable(name: "err", scope: !56, file: !3, line: 254, type: !53)
!2701 = !DILocation(line: 254, column: 7, scope: !56)
!2702 = !DILocation(line: 256, column: 13, scope: !56)
!2703 = !DILocation(line: 256, column: 11, scope: !56)
!2704 = !DILocation(line: 258, column: 7, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !56, file: !3, line: 258, column: 7)
!2706 = !DILocation(line: 258, column: 20, scope: !2705)
!2707 = !DILocation(line: 258, column: 24, scope: !2705)
!2708 = !DILocation(line: 258, column: 37, scope: !2705)
!2709 = !DILocation(line: 258, column: 48, scope: !2705)
!2710 = !DILocation(line: 258, column: 40, scope: !2705)
!2711 = !DILocation(line: 258, column: 54, scope: !2705)
!2712 = !DILocation(line: 258, column: 7, scope: !56)
!2713 = !DILocation(line: 259, column: 14, scope: !2705)
!2714 = !DILocation(line: 259, column: 31, scope: !2705)
!2715 = !DILocation(line: 259, column: 5, scope: !2705)
!2716 = !DILocation(line: 261, column: 5, scope: !2705)
!2717 = !DILocation(line: 261, column: 13, scope: !2705)
!2718 = !DILocation(line: 263, column: 8, scope: !2719)
!2719 = distinct !DILexicalBlock(scope: !56, file: !3, line: 263, column: 7)
!2720 = !DILocation(line: 263, column: 21, scope: !2719)
!2721 = !DILocation(line: 263, column: 32, scope: !2719)
!2722 = !DILocation(line: 263, column: 24, scope: !2719)
!2723 = !DILocation(line: 263, column: 37, scope: !2719)
!2724 = !DILocation(line: 263, column: 7, scope: !56)
!2725 = !DILocation(line: 264, column: 14, scope: !2719)
!2726 = !DILocation(line: 264, column: 30, scope: !2719)
!2727 = !DILocation(line: 264, column: 5, scope: !2719)
!2728 = !DILocation(line: 266, column: 5, scope: !2719)
!2729 = !DILocation(line: 266, column: 12, scope: !2719)
!2730 = !DILocation(line: 268, column: 24, scope: !56)
!2731 = !DILocation(line: 268, column: 43, scope: !56)
!2732 = !DILocation(line: 268, column: 41, scope: !56)
!2733 = !DILocation(line: 268, column: 70, scope: !56)
!2734 = !DILocation(line: 268, column: 15, scope: !56)
!2735 = !DILocation(line: 268, column: 13, scope: !56)
!2736 = !DILocation(line: 269, column: 7, scope: !2737)
!2737 = distinct !DILexicalBlock(scope: !56, file: !3, line: 269, column: 7)
!2738 = !DILocation(line: 269, column: 7, scope: !56)
!2739 = !DILocation(line: 270, column: 14, scope: !2737)
!2740 = !DILocation(line: 270, column: 35, scope: !2737)
!2741 = !DILocation(line: 270, column: 5, scope: !2737)
!2742 = !DILocation(line: 272, column: 6, scope: !2737)
!2743 = !DILocation(line: 272, column: 16, scope: !2737)
!2744 = !DILocation(line: 284, column: 19, scope: !56)
!2745 = !DILocation(line: 284, column: 28, scope: !56)
!2746 = !DILocation(line: 284, column: 35, scope: !56)
!2747 = !DILocation(line: 285, column: 19, scope: !56)
!2748 = !DILocation(line: 286, column: 19, scope: !56)
!2749 = !DILocation(line: 286, column: 28, scope: !56)
!2750 = !DILocation(line: 287, column: 19, scope: !56)
!2751 = !DILocation(line: 288, column: 19, scope: !56)
!2752 = !DILocation(line: 289, column: 19, scope: !56)
!2753 = !DILocation(line: 290, column: 19, scope: !56)
!2754 = !DILocation(line: 295, column: 19, scope: !56)
!2755 = !DILocation(line: 296, column: 19, scope: !56)
!2756 = !DILocation(line: 274, column: 9, scope: !56)
!2757 = !DILocation(line: 274, column: 7, scope: !56)
!2758 = !DILocation(line: 298, column: 7, scope: !2759)
!2759 = distinct !DILexicalBlock(scope: !56, file: !3, line: 298, column: 7)
!2760 = !DILocation(line: 298, column: 11, scope: !2759)
!2761 = !DILocation(line: 299, column: 5, scope: !2759)
!2762 = !DILocalVariable(name: "p", scope: !2763, file: !3, line: 303, type: !6)
!2763 = distinct !DILexicalBlock(scope: !56, file: !3, line: 301, column: 3)
!2764 = !DILocation(line: 303, column: 11, scope: !2763)
!2765 = !DILocation(line: 303, column: 15, scope: !2763)
!2766 = !DILocation(line: 303, column: 29, scope: !2763)
!2767 = !DILocation(line: 303, column: 21, scope: !2763)
!2768 = !DILocation(line: 303, column: 19, scope: !2763)
!2769 = !DILocation(line: 304, column: 5, scope: !2763)
!2770 = !DILocation(line: 304, column: 13, scope: !2763)
!2771 = !DILocation(line: 304, column: 12, scope: !2763)
!2772 = !DILocation(line: 304, column: 17, scope: !2763)
!2773 = distinct !{!2773, !2769, !2774}
!2774 = !DILocation(line: 305, column: 18, scope: !2763)
!2775 = !DILocation(line: 306, column: 7, scope: !2763)
!2776 = !DILocation(line: 306, column: 9, scope: !2763)
!2777 = !DILocation(line: 306, column: 14, scope: !2763)
!2778 = !DILocation(line: 309, column: 9, scope: !56)
!2779 = !DILocation(line: 309, column: 3, scope: !56)
!2780 = !DILocation(line: 310, column: 9, scope: !56)
!2781 = !DILocation(line: 310, column: 3, scope: !56)
!2782 = !DILocation(line: 311, column: 9, scope: !56)
!2783 = !DILocation(line: 311, column: 3, scope: !56)
!2784 = !DILocation(line: 312, column: 1, scope: !56)
!2785 = !DILocalVariable(name: "userlen", arg: 1, scope: !2786, file: !3, line: 244, type: !53)
!2786 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2787, retainedNodes: !4)
!2787 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2788, nameTableKind: None)
!2788 = !{!2789, !2791, !2793, !2795, !2797, !2799, !2801, !2803, !2805, !2807, !2809, !2811, !2813, !2815, !2817, !2819, !2821, !2823, !2833, !2835, !2864, !2866, !2869, !2871, !2876, !2881, !2883}
!2789 = !DIGlobalVariableExpression(var: !2790, expr: !DIExpression())
!2790 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2787, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!2791 = !DIGlobalVariableExpression(var: !2792, expr: !DIExpression())
!2792 = distinct !DIGlobalVariable(name: "short_list", scope: !2787, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!2793 = !DIGlobalVariableExpression(var: !2794, expr: !DIExpression())
!2794 = distinct !DIGlobalVariable(name: "short_output", scope: !2787, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!2795 = !DIGlobalVariableExpression(var: !2796, expr: !DIExpression())
!2796 = distinct !DIGlobalVariable(name: "include_idle", scope: !2787, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!2797 = !DIGlobalVariableExpression(var: !2798, expr: !DIExpression())
!2798 = distinct !DIGlobalVariable(name: "include_heading", scope: !2787, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!2799 = !DIGlobalVariableExpression(var: !2800, expr: !DIExpression())
!2800 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2787, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!2801 = !DIGlobalVariableExpression(var: !2802, expr: !DIExpression())
!2802 = distinct !DIGlobalVariable(name: "include_exit", scope: !2787, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!2803 = !DIGlobalVariableExpression(var: !2804, expr: !DIExpression())
!2804 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2787, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!2805 = !DIGlobalVariableExpression(var: !2806, expr: !DIExpression())
!2806 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2787, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!2807 = !DIGlobalVariableExpression(var: !2808, expr: !DIExpression())
!2808 = distinct !DIGlobalVariable(name: "need_login", scope: !2787, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!2809 = !DIGlobalVariableExpression(var: !2810, expr: !DIExpression())
!2810 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2787, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!2811 = !DIGlobalVariableExpression(var: !2812, expr: !DIExpression())
!2812 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2787, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!2813 = !DIGlobalVariableExpression(var: !2814, expr: !DIExpression())
!2814 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2787, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!2815 = !DIGlobalVariableExpression(var: !2816, expr: !DIExpression())
!2816 = distinct !DIGlobalVariable(name: "need_users", scope: !2787, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!2817 = !DIGlobalVariableExpression(var: !2818, expr: !DIExpression())
!2818 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2787, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!2819 = !DIGlobalVariableExpression(var: !2820, expr: !DIExpression())
!2820 = distinct !DIGlobalVariable(name: "time_format", scope: !2787, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!2821 = !DIGlobalVariableExpression(var: !2822, expr: !DIExpression())
!2822 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2787, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!2823 = !DIGlobalVariableExpression(var: !2824, expr: !DIExpression())
!2824 = distinct !DIGlobalVariable(name: "longopts", scope: !2787, file: !3, line: 162, type: !2825, isLocal: true, isDefinition: true)
!2825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2826, size: 4608, elements: !151)
!2826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2827)
!2827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !2828)
!2828 = !{!2829, !2830, !2831, !2832}
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2827, file: !144, line: 52, baseType: !49, size: 64)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2827, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2827, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2827, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!2833 = !DIGlobalVariableExpression(var: !2834, expr: !DIExpression())
!2834 = distinct !DIGlobalVariable(name: "mesg", scope: !2786, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!2835 = !DIGlobalVariableExpression(var: !2836, expr: !DIExpression())
!2836 = distinct !DIGlobalVariable(name: "hoststr", scope: !2837, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!2837 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !2838, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2787, retainedNodes: !4)
!2838 = !DISubroutineType(types: !2839)
!2839 = !{null, !2840, !9}
!2840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 64)
!2841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2842)
!2842 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !2843)
!2843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !2844)
!2844 = !{!2845, !2846, !2847, !2848, !2849, !2850, !2851, !2856, !2857, !2862, !2863}
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !2843, file: !72, line: 57, baseType: !14, size: 16)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !2843, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !2843, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !2843, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !2843, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !2843, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !2843, file: !72, line: 67, baseType: !2852, size: 32, offset: 2656)
!2852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !2853)
!2853 = !{!2854, !2855}
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !2852, file: !72, line: 45, baseType: !14, size: 16)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !2852, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !2843, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !2843, file: !72, line: 79, baseType: !2858, size: 64, offset: 2720)
!2858 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2843, file: !72, line: 75, size: 64, elements: !2859)
!2859 = !{!2860, !2861}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2858, file: !72, line: 77, baseType: !96, size: 32)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2858, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !2843, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2843, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!2864 = !DIGlobalVariableExpression(var: !2865, expr: !DIExpression())
!2865 = distinct !DIGlobalVariable(name: "hostlen", scope: !2837, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!2866 = !DIGlobalVariableExpression(var: !2867, expr: !DIExpression())
!2867 = distinct !DIGlobalVariable(name: "now", scope: !2868, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!2868 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2787, retainedNodes: !4)
!2869 = !DIGlobalVariableExpression(var: !2870, expr: !DIExpression())
!2870 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !2868, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!2871 = !DIGlobalVariableExpression(var: !2872, expr: !DIExpression())
!2872 = distinct !DIGlobalVariable(name: "buf", scope: !2873, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!2873 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !2874, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2787, retainedNodes: !4)
!2874 = !DISubroutineType(types: !2875)
!2875 = !{!49, !2840}
!2876 = !DIGlobalVariableExpression(var: !2877, expr: !DIExpression())
!2877 = distinct !DIGlobalVariable(name: "runlevline", scope: !2878, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2878 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !2879, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2787, retainedNodes: !4)
!2879 = !DISubroutineType(types: !2880)
!2880 = !{null, !2840}
!2881 = !DIGlobalVariableExpression(var: !2882, expr: !DIExpression())
!2882 = distinct !DIGlobalVariable(name: "comment", scope: !2878, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2883 = !DIGlobalVariableExpression(var: !2884, expr: !DIExpression())
!2884 = distinct !DIGlobalVariable(name: "exitstr", scope: !2885, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!2885 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !2879, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2787, retainedNodes: !4)
!2886 = !DILocalVariable(name: "user", arg: 2, scope: !2786, file: !3, line: 244, type: !49)
!2887 = !DILocalVariable(name: "state", arg: 3, scope: !2786, file: !3, line: 244, type: !50)
!2888 = !DILocalVariable(name: "linelen", arg: 4, scope: !2786, file: !3, line: 245, type: !53)
!2889 = !DILocalVariable(name: "line", arg: 5, scope: !2786, file: !3, line: 245, type: !49)
!2890 = !DILocalVariable(name: "time_str", arg: 6, scope: !2786, file: !3, line: 246, type: !49)
!2891 = !DILocalVariable(name: "idle", arg: 7, scope: !2786, file: !3, line: 246, type: !49)
!2892 = !DILocalVariable(name: "pid", arg: 8, scope: !2786, file: !3, line: 246, type: !49)
!2893 = !DILocalVariable(name: "comment", arg: 9, scope: !2786, file: !3, line: 247, type: !49)
!2894 = !DILocalVariable(name: "exitstr", arg: 10, scope: !2786, file: !3, line: 247, type: !49)
!2895 = !DILocalVariable(name: "buf", scope: !2786, file: !3, line: 250, type: !6)
!2896 = !DILocalVariable(name: "x_idle", scope: !2786, file: !3, line: 251, type: !2691)
!2897 = !DILocalVariable(name: "x_pid", scope: !2786, file: !3, line: 252, type: !2694)
!2898 = !DILocalVariable(name: "x_exitstr", scope: !2786, file: !3, line: 253, type: !6)
!2899 = !DILocalVariable(name: "err", scope: !2786, file: !3, line: 254, type: !53)
!2900 = distinct !DISubprogram(name: "timetostr", scope: !364, file: !364, line: 690, type: !2901, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2901 = !DISubroutineType(types: !2902)
!2902 = !{!6, !9, !6}
!2903 = !DILocalVariable(name: "t", arg: 1, scope: !2900, file: !364, line: 690, type: !9)
!2904 = !DILocation(line: 690, column: 19, scope: !2900)
!2905 = !DILocalVariable(name: "buf", arg: 2, scope: !2900, file: !364, line: 690, type: !6)
!2906 = !DILocation(line: 690, column: 28, scope: !2900)
!2907 = !DILocation(line: 693, column: 24, scope: !2900)
!2908 = !DILocation(line: 693, column: 27, scope: !2900)
!2909 = !DILocation(line: 693, column: 13, scope: !2900)
!2910 = !DILocation(line: 692, column: 3, scope: !2900)
!2911 = !DILocalVariable(name: "t", arg: 1, scope: !2912, file: !364, line: 690, type: !9)
!2912 = distinct !DISubprogram(name: "timetostr", scope: !364, file: !364, line: 690, type: !2901, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2913, retainedNodes: !4)
!2913 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2914, nameTableKind: None)
!2914 = !{!2915, !2917, !2919, !2921, !2923, !2925, !2927, !2929, !2931, !2933, !2935, !2937, !2939, !2941, !2943, !2945, !2947, !2949, !2959, !2962, !2991, !2993, !2996, !2998, !3003, !3008, !3010}
!2915 = !DIGlobalVariableExpression(var: !2916, expr: !DIExpression())
!2916 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2913, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!2917 = !DIGlobalVariableExpression(var: !2918, expr: !DIExpression())
!2918 = distinct !DIGlobalVariable(name: "short_list", scope: !2913, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!2919 = !DIGlobalVariableExpression(var: !2920, expr: !DIExpression())
!2920 = distinct !DIGlobalVariable(name: "short_output", scope: !2913, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!2921 = !DIGlobalVariableExpression(var: !2922, expr: !DIExpression())
!2922 = distinct !DIGlobalVariable(name: "include_idle", scope: !2913, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!2923 = !DIGlobalVariableExpression(var: !2924, expr: !DIExpression())
!2924 = distinct !DIGlobalVariable(name: "include_heading", scope: !2913, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!2925 = !DIGlobalVariableExpression(var: !2926, expr: !DIExpression())
!2926 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2913, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!2927 = !DIGlobalVariableExpression(var: !2928, expr: !DIExpression())
!2928 = distinct !DIGlobalVariable(name: "include_exit", scope: !2913, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!2929 = !DIGlobalVariableExpression(var: !2930, expr: !DIExpression())
!2930 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2913, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!2931 = !DIGlobalVariableExpression(var: !2932, expr: !DIExpression())
!2932 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2913, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!2933 = !DIGlobalVariableExpression(var: !2934, expr: !DIExpression())
!2934 = distinct !DIGlobalVariable(name: "need_login", scope: !2913, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!2935 = !DIGlobalVariableExpression(var: !2936, expr: !DIExpression())
!2936 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2913, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!2937 = !DIGlobalVariableExpression(var: !2938, expr: !DIExpression())
!2938 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2913, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!2939 = !DIGlobalVariableExpression(var: !2940, expr: !DIExpression())
!2940 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2913, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!2941 = !DIGlobalVariableExpression(var: !2942, expr: !DIExpression())
!2942 = distinct !DIGlobalVariable(name: "need_users", scope: !2913, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!2943 = !DIGlobalVariableExpression(var: !2944, expr: !DIExpression())
!2944 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2913, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!2945 = !DIGlobalVariableExpression(var: !2946, expr: !DIExpression())
!2946 = distinct !DIGlobalVariable(name: "time_format", scope: !2913, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!2947 = !DIGlobalVariableExpression(var: !2948, expr: !DIExpression())
!2948 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2913, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!2949 = !DIGlobalVariableExpression(var: !2950, expr: !DIExpression())
!2950 = distinct !DIGlobalVariable(name: "longopts", scope: !2913, file: !3, line: 162, type: !2951, isLocal: true, isDefinition: true)
!2951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2952, size: 4608, elements: !151)
!2952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2953)
!2953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !2954)
!2954 = !{!2955, !2956, !2957, !2958}
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2953, file: !144, line: 52, baseType: !49, size: 64)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2953, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2953, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2953, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!2959 = !DIGlobalVariableExpression(var: !2960, expr: !DIExpression())
!2960 = distinct !DIGlobalVariable(name: "mesg", scope: !2961, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!2961 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2913, retainedNodes: !4)
!2962 = !DIGlobalVariableExpression(var: !2963, expr: !DIExpression())
!2963 = distinct !DIGlobalVariable(name: "hoststr", scope: !2964, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!2964 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !2965, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2913, retainedNodes: !4)
!2965 = !DISubroutineType(types: !2966)
!2966 = !{null, !2967, !9}
!2967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2968, size: 64)
!2968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2969)
!2969 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !2970)
!2970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !2971)
!2971 = !{!2972, !2973, !2974, !2975, !2976, !2977, !2978, !2983, !2984, !2989, !2990}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !2970, file: !72, line: 57, baseType: !14, size: 16)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !2970, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !2970, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !2970, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !2970, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !2970, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !2970, file: !72, line: 67, baseType: !2979, size: 32, offset: 2656)
!2979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !2980)
!2980 = !{!2981, !2982}
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !2979, file: !72, line: 45, baseType: !14, size: 16)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !2979, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !2970, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !2970, file: !72, line: 79, baseType: !2985, size: 64, offset: 2720)
!2985 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2970, file: !72, line: 75, size: 64, elements: !2986)
!2986 = !{!2987, !2988}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2985, file: !72, line: 77, baseType: !96, size: 32)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2985, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !2970, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2970, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!2991 = !DIGlobalVariableExpression(var: !2992, expr: !DIExpression())
!2992 = distinct !DIGlobalVariable(name: "hostlen", scope: !2964, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!2993 = !DIGlobalVariableExpression(var: !2994, expr: !DIExpression())
!2994 = distinct !DIGlobalVariable(name: "now", scope: !2995, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!2995 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2913, retainedNodes: !4)
!2996 = !DIGlobalVariableExpression(var: !2997, expr: !DIExpression())
!2997 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !2995, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!2998 = !DIGlobalVariableExpression(var: !2999, expr: !DIExpression())
!2999 = distinct !DIGlobalVariable(name: "buf", scope: !3000, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!3000 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !3001, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2913, retainedNodes: !4)
!3001 = !DISubroutineType(types: !3002)
!3002 = !{!49, !2967}
!3003 = !DIGlobalVariableExpression(var: !3004, expr: !DIExpression())
!3004 = distinct !DIGlobalVariable(name: "runlevline", scope: !3005, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!3005 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !3006, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2913, retainedNodes: !4)
!3006 = !DISubroutineType(types: !3007)
!3007 = !{null, !2967}
!3008 = !DIGlobalVariableExpression(var: !3009, expr: !DIExpression())
!3009 = distinct !DIGlobalVariable(name: "comment", scope: !3005, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!3010 = !DIGlobalVariableExpression(var: !3011, expr: !DIExpression())
!3011 = distinct !DIGlobalVariable(name: "exitstr", scope: !3012, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!3012 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !3006, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2913, retainedNodes: !4)
!3013 = !DILocalVariable(name: "buf", arg: 2, scope: !2912, file: !364, line: 690, type: !6)
!3014 = distinct !DISubprogram(name: "stzncpy", scope: !364, file: !364, line: 741, type: !3015, scopeLine: 742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!3015 = !DISubroutineType(types: !3016)
!3016 = !{!6, !3017, !3018, !110}
!3017 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !6)
!3018 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !49)
!3019 = !DILocalVariable(name: "dest", arg: 1, scope: !3014, file: !364, line: 741, type: !3017)
!3020 = !DILocation(line: 741, column: 25, scope: !3014)
!3021 = !DILocalVariable(name: "src", arg: 2, scope: !3014, file: !364, line: 741, type: !3018)
!3022 = !DILocation(line: 741, column: 52, scope: !3014)
!3023 = !DILocalVariable(name: "len", arg: 3, scope: !3014, file: !364, line: 741, type: !110)
!3024 = !DILocation(line: 741, column: 64, scope: !3014)
!3025 = !DILocalVariable(name: "src_end", scope: !3014, file: !364, line: 743, type: !49)
!3026 = !DILocation(line: 743, column: 15, scope: !3014)
!3027 = !DILocation(line: 743, column: 25, scope: !3014)
!3028 = !DILocation(line: 743, column: 31, scope: !3014)
!3029 = !DILocation(line: 743, column: 29, scope: !3014)
!3030 = !DILocation(line: 744, column: 3, scope: !3014)
!3031 = !DILocation(line: 744, column: 10, scope: !3014)
!3032 = !DILocation(line: 744, column: 16, scope: !3014)
!3033 = !DILocation(line: 744, column: 14, scope: !3014)
!3034 = !DILocation(line: 744, column: 24, scope: !3014)
!3035 = !DILocation(line: 744, column: 28, scope: !3014)
!3036 = !DILocation(line: 744, column: 27, scope: !3014)
!3037 = !DILocation(line: 0, scope: !3014)
!3038 = !DILocation(line: 745, column: 19, scope: !3014)
!3039 = !DILocation(line: 745, column: 15, scope: !3014)
!3040 = !DILocation(line: 745, column: 10, scope: !3014)
!3041 = !DILocation(line: 745, column: 13, scope: !3014)
!3042 = distinct !{!3042, !3030, !3038}
!3043 = !DILocation(line: 746, column: 4, scope: !3014)
!3044 = !DILocation(line: 746, column: 9, scope: !3014)
!3045 = !DILocation(line: 747, column: 10, scope: !3014)
!3046 = !DILocation(line: 747, column: 3, scope: !3014)
!3047 = distinct !DISubprogram(name: "is_tty_writable", scope: !3, file: !3, line: 317, type: !3048, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!3048 = !DISubroutineType(types: !3049)
!3049 = !{!18, !3050}
!3050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3051, size: 64)
!3051 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1377)
!3052 = !DILocalVariable(name: "pstat", arg: 1, scope: !3047, file: !3, line: 317, type: !3050)
!3053 = !DILocation(line: 317, column: 37, scope: !3047)
!3054 = !DILocation(line: 327, column: 10, scope: !3047)
!3055 = !DILocation(line: 327, column: 17, scope: !3047)
!3056 = !DILocation(line: 327, column: 25, scope: !3047)
!3057 = !DILocation(line: 327, column: 3, scope: !3047)
!3058 = !DILocalVariable(name: "pstat", arg: 1, scope: !3059, file: !3, line: 317, type: !3062)
!3059 = distinct !DISubprogram(name: "is_tty_writable", scope: !3, file: !3, line: 317, type: !3060, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3085, retainedNodes: !4)
!3060 = !DISubroutineType(types: !3061)
!3061 = !{!18, !3062}
!3062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3063, size: 64)
!3063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3064)
!3064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !1378, line: 46, size: 1152, elements: !3065)
!3065 = !{!3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3082, !3083, !3084}
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !3064, file: !1378, line: 48, baseType: !1381, size: 64)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !3064, file: !1378, line: 53, baseType: !1383, size: 64, offset: 64)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !3064, file: !1378, line: 61, baseType: !1385, size: 64, offset: 128)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !3064, file: !1378, line: 62, baseType: !1387, size: 32, offset: 192)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !3064, file: !1378, line: 64, baseType: !1389, size: 32, offset: 224)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !3064, file: !1378, line: 65, baseType: !1391, size: 32, offset: 256)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !3064, file: !1378, line: 67, baseType: !53, size: 32, offset: 288)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !3064, file: !1378, line: 69, baseType: !1381, size: 64, offset: 320)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !3064, file: !1378, line: 74, baseType: !1395, size: 64, offset: 384)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !3064, file: !1378, line: 78, baseType: !1397, size: 64, offset: 448)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !3064, file: !1378, line: 80, baseType: !1399, size: 64, offset: 512)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !3064, file: !1378, line: 91, baseType: !3078, size: 128, offset: 576)
!3078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !1402, line: 10, size: 128, elements: !3079)
!3079 = !{!3080, !3081}
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3078, file: !1402, line: 12, baseType: !11, size: 64)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !3078, file: !1402, line: 16, baseType: !1406, size: 64, offset: 64)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !3064, file: !1378, line: 92, baseType: !3078, size: 128, offset: 704)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !3064, file: !1378, line: 93, baseType: !3078, size: 128, offset: 832)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3064, file: !1378, line: 106, baseType: !1410, size: 192, offset: 960)
!3085 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !3086, nameTableKind: None)
!3086 = !{!3087, !3089, !3091, !3093, !3095, !3097, !3099, !3101, !3103, !3105, !3107, !3109, !3111, !3113, !3115, !3117, !3119, !3121, !3131, !3134, !3163, !3165, !3168, !3170, !3175, !3180, !3182}
!3087 = !DIGlobalVariableExpression(var: !3088, expr: !DIExpression())
!3088 = distinct !DIGlobalVariable(name: "do_lookup", scope: !3085, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!3089 = !DIGlobalVariableExpression(var: !3090, expr: !DIExpression())
!3090 = distinct !DIGlobalVariable(name: "short_list", scope: !3085, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!3091 = !DIGlobalVariableExpression(var: !3092, expr: !DIExpression())
!3092 = distinct !DIGlobalVariable(name: "short_output", scope: !3085, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!3093 = !DIGlobalVariableExpression(var: !3094, expr: !DIExpression())
!3094 = distinct !DIGlobalVariable(name: "include_idle", scope: !3085, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!3095 = !DIGlobalVariableExpression(var: !3096, expr: !DIExpression())
!3096 = distinct !DIGlobalVariable(name: "include_heading", scope: !3085, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!3097 = !DIGlobalVariableExpression(var: !3098, expr: !DIExpression())
!3098 = distinct !DIGlobalVariable(name: "include_mesg", scope: !3085, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!3099 = !DIGlobalVariableExpression(var: !3100, expr: !DIExpression())
!3100 = distinct !DIGlobalVariable(name: "include_exit", scope: !3085, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!3101 = !DIGlobalVariableExpression(var: !3102, expr: !DIExpression())
!3102 = distinct !DIGlobalVariable(name: "need_boottime", scope: !3085, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!3103 = !DIGlobalVariableExpression(var: !3104, expr: !DIExpression())
!3104 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !3085, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!3105 = !DIGlobalVariableExpression(var: !3106, expr: !DIExpression())
!3106 = distinct !DIGlobalVariable(name: "need_login", scope: !3085, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!3107 = !DIGlobalVariableExpression(var: !3108, expr: !DIExpression())
!3108 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !3085, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!3109 = !DIGlobalVariableExpression(var: !3110, expr: !DIExpression())
!3110 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !3085, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!3111 = !DIGlobalVariableExpression(var: !3112, expr: !DIExpression())
!3112 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !3085, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!3113 = !DIGlobalVariableExpression(var: !3114, expr: !DIExpression())
!3114 = distinct !DIGlobalVariable(name: "need_users", scope: !3085, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!3115 = !DIGlobalVariableExpression(var: !3116, expr: !DIExpression())
!3116 = distinct !DIGlobalVariable(name: "my_line_only", scope: !3085, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!3117 = !DIGlobalVariableExpression(var: !3118, expr: !DIExpression())
!3118 = distinct !DIGlobalVariable(name: "time_format", scope: !3085, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!3119 = !DIGlobalVariableExpression(var: !3120, expr: !DIExpression())
!3120 = distinct !DIGlobalVariable(name: "time_format_width", scope: !3085, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!3121 = !DIGlobalVariableExpression(var: !3122, expr: !DIExpression())
!3122 = distinct !DIGlobalVariable(name: "longopts", scope: !3085, file: !3, line: 162, type: !3123, isLocal: true, isDefinition: true)
!3123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3124, size: 4608, elements: !151)
!3124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3125)
!3125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !3126)
!3126 = !{!3127, !3128, !3129, !3130}
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3125, file: !144, line: 52, baseType: !49, size: 64)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !3125, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3125, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3125, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!3131 = !DIGlobalVariableExpression(var: !3132, expr: !DIExpression())
!3132 = distinct !DIGlobalVariable(name: "mesg", scope: !3133, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!3133 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3085, retainedNodes: !4)
!3134 = !DIGlobalVariableExpression(var: !3135, expr: !DIExpression())
!3135 = distinct !DIGlobalVariable(name: "hoststr", scope: !3136, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!3136 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !3137, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3085, retainedNodes: !4)
!3137 = !DISubroutineType(types: !3138)
!3138 = !{null, !3139, !9}
!3139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3140, size: 64)
!3140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3141)
!3141 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !3142)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !3143)
!3143 = !{!3144, !3145, !3146, !3147, !3148, !3149, !3150, !3155, !3156, !3161, !3162}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !3142, file: !72, line: 57, baseType: !14, size: 16)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !3142, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !3142, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !3142, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !3142, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !3142, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !3142, file: !72, line: 67, baseType: !3151, size: 32, offset: 2656)
!3151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !3152)
!3152 = !{!3153, !3154}
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !3151, file: !72, line: 45, baseType: !14, size: 16)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !3151, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !3142, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !3142, file: !72, line: 79, baseType: !3157, size: 64, offset: 2720)
!3157 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3142, file: !72, line: 75, size: 64, elements: !3158)
!3158 = !{!3159, !3160}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3157, file: !72, line: 77, baseType: !96, size: 32)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !3157, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !3142, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3142, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!3163 = !DIGlobalVariableExpression(var: !3164, expr: !DIExpression())
!3164 = distinct !DIGlobalVariable(name: "hostlen", scope: !3136, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!3165 = !DIGlobalVariableExpression(var: !3166, expr: !DIExpression())
!3166 = distinct !DIGlobalVariable(name: "now", scope: !3167, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!3167 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3085, retainedNodes: !4)
!3168 = !DIGlobalVariableExpression(var: !3169, expr: !DIExpression())
!3169 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !3167, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!3170 = !DIGlobalVariableExpression(var: !3171, expr: !DIExpression())
!3171 = distinct !DIGlobalVariable(name: "buf", scope: !3172, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!3172 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !3173, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3085, retainedNodes: !4)
!3173 = !DISubroutineType(types: !3174)
!3174 = !{!49, !3139}
!3175 = !DIGlobalVariableExpression(var: !3176, expr: !DIExpression())
!3176 = distinct !DIGlobalVariable(name: "runlevline", scope: !3177, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!3177 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !3178, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3085, retainedNodes: !4)
!3178 = !DISubroutineType(types: !3179)
!3179 = !{null, !3139}
!3180 = !DIGlobalVariableExpression(var: !3181, expr: !DIExpression())
!3181 = distinct !DIGlobalVariable(name: "comment", scope: !3177, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!3182 = !DIGlobalVariableExpression(var: !3183, expr: !DIExpression())
!3183 = distinct !DIGlobalVariable(name: "exitstr", scope: !3184, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!3184 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !3178, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3085, retainedNodes: !4)
!3185 = !DILocalVariable(name: "when", arg: 1, scope: !115, file: !3, line: 188, type: !9)
!3186 = !DILocation(line: 188, column: 21, scope: !115)
!3187 = !DILocalVariable(name: "boottime", arg: 2, scope: !115, file: !3, line: 188, type: !9)
!3188 = !DILocation(line: 188, column: 34, scope: !115)
!3189 = !DILocation(line: 192, column: 7, scope: !3190)
!3190 = distinct !DILexicalBlock(scope: !115, file: !3, line: 192, column: 7)
!3191 = !DILocation(line: 192, column: 11, scope: !3190)
!3192 = !DILocation(line: 192, column: 7, scope: !115)
!3193 = !DILocation(line: 193, column: 5, scope: !3190)
!3194 = !DILocation(line: 195, column: 7, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !115, file: !3, line: 195, column: 7)
!3196 = !DILocation(line: 195, column: 18, scope: !3195)
!3197 = !DILocation(line: 195, column: 16, scope: !3195)
!3198 = !DILocation(line: 195, column: 23, scope: !3195)
!3199 = !DILocation(line: 195, column: 26, scope: !3195)
!3200 = !DILocation(line: 195, column: 30, scope: !3195)
!3201 = !DILocation(line: 195, column: 47, scope: !3195)
!3202 = !DILocation(line: 195, column: 45, scope: !3195)
!3203 = !DILocation(line: 195, column: 52, scope: !3195)
!3204 = !DILocation(line: 195, column: 55, scope: !3195)
!3205 = !DILocation(line: 195, column: 63, scope: !3195)
!3206 = !DILocation(line: 195, column: 60, scope: !3195)
!3207 = !DILocation(line: 195, column: 7, scope: !115)
!3208 = !DILocalVariable(name: "seconds_idle", scope: !3209, file: !3, line: 197, type: !53)
!3209 = distinct !DILexicalBlock(scope: !3195, file: !3, line: 196, column: 5)
!3210 = !DILocation(line: 197, column: 11, scope: !3209)
!3211 = !DILocation(line: 197, column: 26, scope: !3209)
!3212 = !DILocation(line: 197, column: 32, scope: !3209)
!3213 = !DILocation(line: 197, column: 30, scope: !3209)
!3214 = !DILocation(line: 198, column: 11, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3209, file: !3, line: 198, column: 11)
!3216 = !DILocation(line: 198, column: 24, scope: !3215)
!3217 = !DILocation(line: 198, column: 11, scope: !3209)
!3218 = !DILocation(line: 199, column: 9, scope: !3215)
!3219 = !DILocation(line: 205, column: 11, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !3221, file: !3, line: 205, column: 11)
!3221 = distinct !DILexicalBlock(scope: !3222, file: !3, line: 205, column: 11)
!3222 = distinct !DILexicalBlock(scope: !3215, file: !3, line: 201, column: 9)
!3223 = !DILocation(line: 205, column: 11, scope: !3221)
!3224 = !DILocation(line: 207, column: 20, scope: !3222)
!3225 = !DILocation(line: 207, column: 33, scope: !3222)
!3226 = !DILocation(line: 208, column: 21, scope: !3222)
!3227 = !DILocation(line: 208, column: 34, scope: !3222)
!3228 = !DILocation(line: 208, column: 47, scope: !3222)
!3229 = !DILocation(line: 206, column: 11, scope: !3222)
!3230 = !DILocation(line: 209, column: 11, scope: !3222)
!3231 = !DILocation(line: 213, column: 10, scope: !115)
!3232 = !DILocation(line: 213, column: 3, scope: !115)
!3233 = !DILocation(line: 214, column: 1, scope: !115)
!3234 = !DILocalVariable(name: "when", arg: 1, scope: !3235, file: !3, line: 188, type: !9)
!3235 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !4)
!3236 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !3237, nameTableKind: None)
!3237 = !{!3238, !3240, !3242, !3244, !3246, !3248, !3250, !3252, !3254, !3256, !3258, !3260, !3262, !3264, !3266, !3268, !3270, !3272, !3282, !3285, !3314, !3316, !3318, !3320, !3325, !3330, !3332}
!3238 = !DIGlobalVariableExpression(var: !3239, expr: !DIExpression())
!3239 = distinct !DIGlobalVariable(name: "do_lookup", scope: !3236, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!3240 = !DIGlobalVariableExpression(var: !3241, expr: !DIExpression())
!3241 = distinct !DIGlobalVariable(name: "short_list", scope: !3236, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!3242 = !DIGlobalVariableExpression(var: !3243, expr: !DIExpression())
!3243 = distinct !DIGlobalVariable(name: "short_output", scope: !3236, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!3244 = !DIGlobalVariableExpression(var: !3245, expr: !DIExpression())
!3245 = distinct !DIGlobalVariable(name: "include_idle", scope: !3236, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!3246 = !DIGlobalVariableExpression(var: !3247, expr: !DIExpression())
!3247 = distinct !DIGlobalVariable(name: "include_heading", scope: !3236, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!3248 = !DIGlobalVariableExpression(var: !3249, expr: !DIExpression())
!3249 = distinct !DIGlobalVariable(name: "include_mesg", scope: !3236, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!3250 = !DIGlobalVariableExpression(var: !3251, expr: !DIExpression())
!3251 = distinct !DIGlobalVariable(name: "include_exit", scope: !3236, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!3252 = !DIGlobalVariableExpression(var: !3253, expr: !DIExpression())
!3253 = distinct !DIGlobalVariable(name: "need_boottime", scope: !3236, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!3254 = !DIGlobalVariableExpression(var: !3255, expr: !DIExpression())
!3255 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !3236, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!3256 = !DIGlobalVariableExpression(var: !3257, expr: !DIExpression())
!3257 = distinct !DIGlobalVariable(name: "need_login", scope: !3236, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!3258 = !DIGlobalVariableExpression(var: !3259, expr: !DIExpression())
!3259 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !3236, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!3260 = !DIGlobalVariableExpression(var: !3261, expr: !DIExpression())
!3261 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !3236, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!3262 = !DIGlobalVariableExpression(var: !3263, expr: !DIExpression())
!3263 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !3236, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!3264 = !DIGlobalVariableExpression(var: !3265, expr: !DIExpression())
!3265 = distinct !DIGlobalVariable(name: "need_users", scope: !3236, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!3266 = !DIGlobalVariableExpression(var: !3267, expr: !DIExpression())
!3267 = distinct !DIGlobalVariable(name: "my_line_only", scope: !3236, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!3268 = !DIGlobalVariableExpression(var: !3269, expr: !DIExpression())
!3269 = distinct !DIGlobalVariable(name: "time_format", scope: !3236, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!3270 = !DIGlobalVariableExpression(var: !3271, expr: !DIExpression())
!3271 = distinct !DIGlobalVariable(name: "time_format_width", scope: !3236, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!3272 = !DIGlobalVariableExpression(var: !3273, expr: !DIExpression())
!3273 = distinct !DIGlobalVariable(name: "longopts", scope: !3236, file: !3, line: 162, type: !3274, isLocal: true, isDefinition: true)
!3274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3275, size: 4608, elements: !151)
!3275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3276)
!3276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !3277)
!3277 = !{!3278, !3279, !3280, !3281}
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3276, file: !144, line: 52, baseType: !49, size: 64)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !3276, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3276, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3276, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!3282 = !DIGlobalVariableExpression(var: !3283, expr: !DIExpression())
!3283 = distinct !DIGlobalVariable(name: "mesg", scope: !3284, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!3284 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !4)
!3285 = !DIGlobalVariableExpression(var: !3286, expr: !DIExpression())
!3286 = distinct !DIGlobalVariable(name: "hoststr", scope: !3287, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!3287 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !3288, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !4)
!3288 = !DISubroutineType(types: !3289)
!3289 = !{null, !3290, !9}
!3290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3291, size: 64)
!3291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3292)
!3292 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !3293)
!3293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !3294)
!3294 = !{!3295, !3296, !3297, !3298, !3299, !3300, !3301, !3306, !3307, !3312, !3313}
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !3293, file: !72, line: 57, baseType: !14, size: 16)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !3293, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !3293, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !3293, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !3293, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !3293, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !3293, file: !72, line: 67, baseType: !3302, size: 32, offset: 2656)
!3302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !3303)
!3303 = !{!3304, !3305}
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !3302, file: !72, line: 45, baseType: !14, size: 16)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !3302, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !3293, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !3293, file: !72, line: 79, baseType: !3308, size: 64, offset: 2720)
!3308 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3293, file: !72, line: 75, size: 64, elements: !3309)
!3309 = !{!3310, !3311}
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3308, file: !72, line: 77, baseType: !96, size: 32)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !3308, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !3293, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3293, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!3314 = !DIGlobalVariableExpression(var: !3315, expr: !DIExpression())
!3315 = distinct !DIGlobalVariable(name: "hostlen", scope: !3287, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!3316 = !DIGlobalVariableExpression(var: !3317, expr: !DIExpression())
!3317 = distinct !DIGlobalVariable(name: "now", scope: !3235, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!3318 = !DIGlobalVariableExpression(var: !3319, expr: !DIExpression())
!3319 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !3235, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!3320 = !DIGlobalVariableExpression(var: !3321, expr: !DIExpression())
!3321 = distinct !DIGlobalVariable(name: "buf", scope: !3322, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!3322 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !3323, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !4)
!3323 = !DISubroutineType(types: !3324)
!3324 = !{!49, !3290}
!3325 = !DIGlobalVariableExpression(var: !3326, expr: !DIExpression())
!3326 = distinct !DIGlobalVariable(name: "runlevline", scope: !3327, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!3327 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !3328, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !4)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{null, !3290}
!3330 = !DIGlobalVariableExpression(var: !3331, expr: !DIExpression())
!3331 = distinct !DIGlobalVariable(name: "comment", scope: !3327, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!3332 = !DIGlobalVariableExpression(var: !3333, expr: !DIExpression())
!3333 = distinct !DIGlobalVariable(name: "exitstr", scope: !3334, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!3334 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !3328, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !4)
!3335 = !DILocalVariable(name: "boottime", arg: 2, scope: !3235, file: !3, line: 188, type: !9)
!3336 = distinct !DISubprogram(name: "c_isprint", scope: !3337, file: !3337, line: 272, type: !3338, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !286, retainedNodes: !4)
!3337 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3338 = !DISubroutineType(types: !3339)
!3339 = !{!18, !53}
!3340 = !DILocalVariable(name: "c", arg: 1, scope: !3336, file: !3337, line: 272, type: !53)
!3341 = !DILocation(line: 272, column: 16, scope: !3336)
!3342 = !DILocation(line: 274, column: 11, scope: !3336)
!3343 = !DILocation(line: 274, column: 3, scope: !3336)
!3344 = !DILocation(line: 281, column: 7, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3336, file: !3337, line: 275, column: 5)
!3346 = !DILocation(line: 283, column: 7, scope: !3345)
!3347 = !DILocation(line: 285, column: 1, scope: !3336)
!3348 = !DILocalVariable(name: "c", arg: 1, scope: !3349, file: !3337, line: 272, type: !53)
!3349 = distinct !DISubprogram(name: "c_isprint", scope: !3337, file: !3337, line: 272, type: !3338, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3350, retainedNodes: !4)
!3350 = distinct !DICompileUnit(language: DW_LANG_C99, file: !287, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!3351 = distinct !DISubprogram(name: "c_tolower", scope: !3337, file: !3337, line: 337, type: !3352, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !286, retainedNodes: !4)
!3352 = !DISubroutineType(types: !3353)
!3353 = !{!53, !53}
!3354 = !DILocalVariable(name: "c", arg: 1, scope: !3351, file: !3337, line: 337, type: !53)
!3355 = !DILocation(line: 337, column: 16, scope: !3351)
!3356 = !DILocation(line: 339, column: 11, scope: !3351)
!3357 = !DILocation(line: 339, column: 3, scope: !3351)
!3358 = !DILocation(line: 342, column: 14, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3351, file: !3337, line: 340, column: 5)
!3360 = !DILocation(line: 342, column: 16, scope: !3359)
!3361 = !DILocation(line: 342, column: 22, scope: !3359)
!3362 = !DILocation(line: 342, column: 7, scope: !3359)
!3363 = !DILocation(line: 344, column: 14, scope: !3359)
!3364 = !DILocation(line: 344, column: 7, scope: !3359)
!3365 = !DILocation(line: 346, column: 1, scope: !3351)
!3366 = distinct !DISubprogram(name: "canon_host", scope: !166, file: !166, line: 33, type: !3367, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !160, retainedNodes: !4)
!3367 = !DISubroutineType(types: !3368)
!3368 = !{!6, !49}
!3369 = !DILocalVariable(name: "host", arg: 1, scope: !3366, file: !166, line: 33, type: !49)
!3370 = !DILocation(line: 33, column: 25, scope: !3366)
!3371 = !DILocation(line: 35, column: 24, scope: !3366)
!3372 = !DILocation(line: 35, column: 10, scope: !3366)
!3373 = !DILocation(line: 35, column: 3, scope: !3366)
!3374 = !DILocalVariable(name: "host", arg: 1, scope: !3375, file: !166, line: 33, type: !49)
!3375 = distinct !DISubprogram(name: "canon_host", scope: !166, file: !166, line: 33, type: !3367, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3376, retainedNodes: !4)
!3376 = distinct !DICompileUnit(language: DW_LANG_C99, file: !161, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !3377, nameTableKind: None)
!3377 = !{!3378, !3397}
!3378 = !DIGlobalVariableExpression(var: !3379, expr: !DIExpression())
!3379 = distinct !DIGlobalVariable(name: "hints", scope: !3380, file: !166, line: 64, type: !3381, isLocal: true, isDefinition: true)
!3380 = distinct !DISubprogram(name: "canon_host_r", scope: !166, file: !166, line: 61, type: !167, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3376, retainedNodes: !4)
!3381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "addrinfo", file: !170, line: 565, size: 384, elements: !3382)
!3382 = !{!3383, !3384, !3385, !3386, !3387, !3388, !3394, !3395}
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "ai_flags", scope: !3381, file: !170, line: 567, baseType: !53, size: 32)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "ai_family", scope: !3381, file: !170, line: 568, baseType: !53, size: 32, offset: 32)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "ai_socktype", scope: !3381, file: !170, line: 569, baseType: !53, size: 32, offset: 64)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "ai_protocol", scope: !3381, file: !170, line: 570, baseType: !53, size: 32, offset: 96)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addrlen", scope: !3381, file: !170, line: 571, baseType: !177, size: 32, offset: 128)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addr", scope: !3381, file: !170, line: 572, baseType: !3389, size: 64, offset: 192)
!3389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3390, size: 64)
!3390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !178, line: 178, size: 128, elements: !3391)
!3391 = !{!3392, !3393}
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !3390, file: !178, line: 180, baseType: !186, size: 16)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !3390, file: !178, line: 181, baseType: !190, size: 112, offset: 16)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "ai_canonname", scope: !3381, file: !170, line: 573, baseType: !6, size: 64, offset: 256)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "ai_next", scope: !3381, file: !170, line: 574, baseType: !3396, size: 64, offset: 320)
!3396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3381, size: 64)
!3397 = !DIGlobalVariableExpression(var: !3398, expr: !DIExpression())
!3398 = distinct !DIGlobalVariable(name: "last_cherror", scope: !3376, file: !166, line: 28, type: !53, isLocal: true, isDefinition: true)
!3399 = !DILocalVariable(name: "host", arg: 1, scope: !165, file: !166, line: 61, type: !49)
!3400 = !DILocation(line: 61, column: 27, scope: !165)
!3401 = !DILocalVariable(name: "cherror", arg: 2, scope: !165, file: !166, line: 61, type: !149)
!3402 = !DILocation(line: 61, column: 38, scope: !165)
!3403 = !DILocalVariable(name: "retval", scope: !165, file: !166, line: 63, type: !6)
!3404 = !DILocation(line: 63, column: 9, scope: !165)
!3405 = !DILocalVariable(name: "res", scope: !165, file: !166, line: 65, type: !195)
!3406 = !DILocation(line: 65, column: 20, scope: !165)
!3407 = !DILocalVariable(name: "status", scope: !165, file: !166, line: 66, type: !53)
!3408 = !DILocation(line: 66, column: 7, scope: !165)
!3409 = !DILocation(line: 68, column: 18, scope: !165)
!3410 = !DILocation(line: 69, column: 25, scope: !165)
!3411 = !DILocation(line: 69, column: 12, scope: !165)
!3412 = !DILocation(line: 69, column: 10, scope: !165)
!3413 = !DILocation(line: 70, column: 8, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !165, file: !166, line: 70, column: 7)
!3415 = !DILocation(line: 70, column: 7, scope: !165)
!3416 = !DILocation(line: 75, column: 24, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3414, file: !166, line: 71, column: 5)
!3418 = !DILocation(line: 75, column: 29, scope: !3417)
!3419 = !DILocation(line: 75, column: 44, scope: !3417)
!3420 = !DILocation(line: 75, column: 49, scope: !3417)
!3421 = !DILocation(line: 75, column: 64, scope: !3417)
!3422 = !DILocation(line: 75, column: 16, scope: !3417)
!3423 = !DILocation(line: 75, column: 14, scope: !3417)
!3424 = !DILocation(line: 76, column: 12, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3417, file: !166, line: 76, column: 11)
!3426 = !DILocation(line: 76, column: 19, scope: !3425)
!3427 = !DILocation(line: 76, column: 22, scope: !3425)
!3428 = !DILocation(line: 76, column: 11, scope: !3417)
!3429 = !DILocation(line: 77, column: 10, scope: !3425)
!3430 = !DILocation(line: 77, column: 18, scope: !3425)
!3431 = !DILocation(line: 77, column: 9, scope: !3425)
!3432 = !DILocation(line: 78, column: 21, scope: !3417)
!3433 = !DILocation(line: 78, column: 7, scope: !3417)
!3434 = !DILocation(line: 79, column: 5, scope: !3417)
!3435 = !DILocation(line: 80, column: 12, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3414, file: !166, line: 80, column: 12)
!3437 = !DILocation(line: 80, column: 12, scope: !3414)
!3438 = !DILocation(line: 81, column: 16, scope: !3436)
!3439 = !DILocation(line: 81, column: 6, scope: !3436)
!3440 = !DILocation(line: 81, column: 14, scope: !3436)
!3441 = !DILocation(line: 81, column: 5, scope: !3436)
!3442 = !DILocation(line: 83, column: 10, scope: !165)
!3443 = !DILocation(line: 83, column: 3, scope: !165)
!3444 = !DILocalVariable(name: "host", arg: 1, scope: !3445, file: !166, line: 61, type: !49)
!3445 = distinct !DISubprogram(name: "canon_host_r", scope: !166, file: !166, line: 61, type: !167, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3446, retainedNodes: !4)
!3446 = distinct !DICompileUnit(language: DW_LANG_C99, file: !161, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !3447, nameTableKind: None)
!3447 = !{!3448, !3466}
!3448 = !DIGlobalVariableExpression(var: !3449, expr: !DIExpression())
!3449 = distinct !DIGlobalVariable(name: "hints", scope: !3445, file: !166, line: 64, type: !3450, isLocal: true, isDefinition: true)
!3450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "addrinfo", file: !170, line: 565, size: 384, elements: !3451)
!3451 = !{!3452, !3453, !3454, !3455, !3456, !3457, !3463, !3464}
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "ai_flags", scope: !3450, file: !170, line: 567, baseType: !53, size: 32)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "ai_family", scope: !3450, file: !170, line: 568, baseType: !53, size: 32, offset: 32)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "ai_socktype", scope: !3450, file: !170, line: 569, baseType: !53, size: 32, offset: 64)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "ai_protocol", scope: !3450, file: !170, line: 570, baseType: !53, size: 32, offset: 96)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addrlen", scope: !3450, file: !170, line: 571, baseType: !177, size: 32, offset: 128)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addr", scope: !3450, file: !170, line: 572, baseType: !3458, size: 64, offset: 192)
!3458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3459, size: 64)
!3459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !178, line: 178, size: 128, elements: !3460)
!3460 = !{!3461, !3462}
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !3459, file: !178, line: 180, baseType: !186, size: 16)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !3459, file: !178, line: 181, baseType: !190, size: 112, offset: 16)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "ai_canonname", scope: !3450, file: !170, line: 573, baseType: !6, size: 64, offset: 256)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "ai_next", scope: !3450, file: !170, line: 574, baseType: !3465, size: 64, offset: 320)
!3465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3450, size: 64)
!3466 = !DIGlobalVariableExpression(var: !3467, expr: !DIExpression())
!3467 = distinct !DIGlobalVariable(name: "last_cherror", scope: !3446, file: !166, line: 28, type: !53, isLocal: true, isDefinition: true)
!3468 = !DILocalVariable(name: "cherror", arg: 2, scope: !3445, file: !166, line: 61, type: !149)
!3469 = !DILocalVariable(name: "retval", scope: !3445, file: !166, line: 63, type: !6)
!3470 = !DILocalVariable(name: "res", scope: !3445, file: !166, line: 65, type: !3465)
!3471 = !DILocalVariable(name: "status", scope: !3445, file: !166, line: 66, type: !53)
!3472 = distinct !DISubprogram(name: "close_stdout", scope: !203, file: !203, line: 117, type: !1361, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !198, retainedNodes: !4)
!3473 = !DILocation(line: 119, column: 21, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3472, file: !203, line: 119, column: 7)
!3475 = !DILocation(line: 119, column: 7, scope: !3474)
!3476 = !DILocation(line: 119, column: 29, scope: !3474)
!3477 = !DILocation(line: 120, column: 7, scope: !3474)
!3478 = !DILocation(line: 120, column: 12, scope: !3474)
!3479 = !DILocation(line: 120, column: 25, scope: !3474)
!3480 = !DILocation(line: 120, column: 28, scope: !3474)
!3481 = !DILocation(line: 120, column: 34, scope: !3474)
!3482 = !DILocation(line: 119, column: 7, scope: !3472)
!3483 = !DILocalVariable(name: "write_error", scope: !3484, file: !203, line: 122, type: !49)
!3484 = distinct !DILexicalBlock(scope: !3474, file: !203, line: 121, column: 5)
!3485 = !DILocation(line: 122, column: 19, scope: !3484)
!3486 = !DILocation(line: 122, column: 33, scope: !3484)
!3487 = !DILocation(line: 123, column: 11, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3484, file: !203, line: 123, column: 11)
!3489 = !DILocation(line: 123, column: 11, scope: !3484)
!3490 = !DILocation(line: 124, column: 19, scope: !3488)
!3491 = !DILocation(line: 124, column: 52, scope: !3488)
!3492 = !DILocation(line: 124, column: 36, scope: !3488)
!3493 = !DILocation(line: 125, column: 16, scope: !3488)
!3494 = !DILocation(line: 124, column: 9, scope: !3488)
!3495 = !DILocation(line: 127, column: 19, scope: !3488)
!3496 = !DILocation(line: 127, column: 32, scope: !3488)
!3497 = !DILocation(line: 127, column: 9, scope: !3488)
!3498 = !DILocation(line: 129, column: 14, scope: !3484)
!3499 = !DILocation(line: 129, column: 7, scope: !3484)
!3500 = !DILocation(line: 134, column: 42, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3472, file: !203, line: 134, column: 7)
!3502 = !DILocation(line: 134, column: 28, scope: !3501)
!3503 = !DILocation(line: 134, column: 50, scope: !3501)
!3504 = !DILocation(line: 134, column: 7, scope: !3472)
!3505 = !DILocation(line: 135, column: 12, scope: !3501)
!3506 = !DILocation(line: 135, column: 5, scope: !3501)
!3507 = !DILocation(line: 136, column: 1, scope: !3472)
!3508 = distinct !DISubprogram(name: "hard_locale", scope: !3509, file: !3509, line: 27, type: !3338, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !288, retainedNodes: !4)
!3509 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3510 = !DILocalVariable(name: "category", arg: 1, scope: !3508, file: !3509, line: 27, type: !53)
!3511 = !DILocation(line: 27, column: 18, scope: !3508)
!3512 = !DILocalVariable(name: "locale", scope: !3508, file: !3509, line: 29, type: !1473)
!3513 = !DILocation(line: 29, column: 8, scope: !3508)
!3514 = !DILocation(line: 31, column: 25, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3508, file: !3509, line: 31, column: 7)
!3516 = !DILocation(line: 31, column: 35, scope: !3515)
!3517 = !DILocation(line: 31, column: 7, scope: !3515)
!3518 = !DILocation(line: 31, column: 7, scope: !3508)
!3519 = !DILocation(line: 32, column: 5, scope: !3515)
!3520 = !DILocation(line: 34, column: 20, scope: !3508)
!3521 = !DILocation(line: 34, column: 12, scope: !3508)
!3522 = !DILocation(line: 34, column: 33, scope: !3508)
!3523 = !DILocation(line: 34, column: 49, scope: !3508)
!3524 = !DILocation(line: 34, column: 41, scope: !3508)
!3525 = !DILocation(line: 34, column: 66, scope: !3508)
!3526 = !DILocation(line: 34, column: 38, scope: !3508)
!3527 = !DILocation(line: 34, column: 10, scope: !3508)
!3528 = !DILocation(line: 34, column: 3, scope: !3508)
!3529 = !DILocation(line: 35, column: 1, scope: !3508)
!3530 = !DILocalVariable(name: "category", arg: 1, scope: !3531, file: !3509, line: 27, type: !53)
!3531 = distinct !DISubprogram(name: "hard_locale", scope: !3509, file: !3509, line: 27, type: !3338, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3532, retainedNodes: !4)
!3532 = distinct !DICompileUnit(language: DW_LANG_C99, file: !289, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!3533 = !DILocalVariable(name: "locale", scope: !3531, file: !3509, line: 29, type: !1473)
!3534 = distinct !DISubprogram(name: "imaxtostr", scope: !3535, file: !3535, line: 36, type: !3536, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !290, retainedNodes: !4)
!3535 = !DIFile(filename: "./lib/anytostr.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3536 = !DISubroutineType(types: !3537)
!3537 = !{!6, !293, !6}
!3538 = !DILocalVariable(name: "i", arg: 1, scope: !3534, file: !3535, line: 36, type: !293)
!3539 = !DILocation(line: 36, column: 19, scope: !3534)
!3540 = !DILocalVariable(name: "buf", arg: 2, scope: !3534, file: !3535, line: 36, type: !6)
!3541 = !DILocation(line: 36, column: 28, scope: !3534)
!3542 = !DILocalVariable(name: "p", scope: !3534, file: !3535, line: 38, type: !6)
!3543 = !DILocation(line: 38, column: 9, scope: !3534)
!3544 = !DILocation(line: 38, column: 13, scope: !3534)
!3545 = !DILocation(line: 38, column: 17, scope: !3534)
!3546 = !DILocation(line: 39, column: 4, scope: !3534)
!3547 = !DILocation(line: 39, column: 6, scope: !3534)
!3548 = !DILocation(line: 41, column: 7, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3534, file: !3535, line: 41, column: 7)
!3550 = !DILocation(line: 41, column: 9, scope: !3549)
!3551 = !DILocation(line: 41, column: 7, scope: !3534)
!3552 = !DILocation(line: 43, column: 7, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3549, file: !3535, line: 42, column: 5)
!3554 = !DILocation(line: 44, column: 22, scope: !3553)
!3555 = !DILocation(line: 44, column: 24, scope: !3553)
!3556 = !DILocation(line: 44, column: 20, scope: !3553)
!3557 = !DILocation(line: 44, column: 16, scope: !3553)
!3558 = !DILocation(line: 44, column: 10, scope: !3553)
!3559 = !DILocation(line: 44, column: 14, scope: !3553)
!3560 = !DILocation(line: 44, column: 9, scope: !3553)
!3561 = !DILocation(line: 45, column: 17, scope: !3553)
!3562 = !DILocation(line: 45, column: 24, scope: !3553)
!3563 = distinct !{!3563, !3552, !3564}
!3564 = !DILocation(line: 45, column: 28, scope: !3553)
!3565 = !DILocation(line: 47, column: 8, scope: !3553)
!3566 = !DILocation(line: 47, column: 12, scope: !3553)
!3567 = !DILocation(line: 48, column: 5, scope: !3553)
!3568 = !DILocation(line: 51, column: 7, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3549, file: !3535, line: 50, column: 5)
!3570 = !DILocation(line: 52, column: 22, scope: !3569)
!3571 = !DILocation(line: 52, column: 24, scope: !3569)
!3572 = !DILocation(line: 52, column: 20, scope: !3569)
!3573 = !DILocation(line: 52, column: 16, scope: !3569)
!3574 = !DILocation(line: 52, column: 10, scope: !3569)
!3575 = !DILocation(line: 52, column: 14, scope: !3569)
!3576 = !DILocation(line: 52, column: 9, scope: !3569)
!3577 = !DILocation(line: 53, column: 17, scope: !3569)
!3578 = !DILocation(line: 53, column: 24, scope: !3569)
!3579 = distinct !{!3579, !3568, !3580}
!3580 = !DILocation(line: 53, column: 28, scope: !3569)
!3581 = !DILocation(line: 56, column: 10, scope: !3534)
!3582 = !DILocation(line: 56, column: 3, scope: !3534)
!3583 = !DILocalVariable(name: "i", arg: 1, scope: !3584, file: !3535, line: 36, type: !293)
!3584 = distinct !DISubprogram(name: "imaxtostr", scope: !3535, file: !3535, line: 36, type: !3536, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3585, retainedNodes: !4)
!3585 = distinct !DICompileUnit(language: DW_LANG_C99, file: !291, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !292, nameTableKind: None)
!3586 = !DILocalVariable(name: "buf", arg: 2, scope: !3584, file: !3535, line: 36, type: !6)
!3587 = !DILocalVariable(name: "p", scope: !3584, file: !3535, line: 38, type: !6)
!3588 = distinct !DISubprogram(name: "set_program_name", scope: !217, file: !217, line: 39, type: !365, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!3589 = !DILocalVariable(name: "argv0", arg: 1, scope: !3588, file: !217, line: 39, type: !49)
!3590 = !DILocation(line: 39, column: 31, scope: !3588)
!3591 = !DILocalVariable(name: "slash", scope: !3588, file: !217, line: 46, type: !49)
!3592 = !DILocation(line: 46, column: 15, scope: !3588)
!3593 = !DILocalVariable(name: "base", scope: !3588, file: !217, line: 47, type: !49)
!3594 = !DILocation(line: 47, column: 15, scope: !3588)
!3595 = !DILocation(line: 51, column: 7, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3588, file: !217, line: 51, column: 7)
!3597 = !DILocation(line: 51, column: 13, scope: !3596)
!3598 = !DILocation(line: 51, column: 7, scope: !3588)
!3599 = !DILocation(line: 55, column: 14, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3596, file: !217, line: 52, column: 5)
!3601 = !DILocation(line: 54, column: 7, scope: !3600)
!3602 = !DILocation(line: 56, column: 7, scope: !3600)
!3603 = !DILocation(line: 59, column: 20, scope: !3588)
!3604 = !DILocation(line: 59, column: 11, scope: !3588)
!3605 = !DILocation(line: 59, column: 9, scope: !3588)
!3606 = !DILocation(line: 60, column: 11, scope: !3588)
!3607 = !DILocation(line: 60, column: 17, scope: !3588)
!3608 = !DILocation(line: 60, column: 27, scope: !3588)
!3609 = !DILocation(line: 60, column: 33, scope: !3588)
!3610 = !DILocation(line: 60, column: 39, scope: !3588)
!3611 = !DILocation(line: 60, column: 8, scope: !3588)
!3612 = !DILocation(line: 61, column: 7, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3588, file: !217, line: 61, column: 7)
!3614 = !DILocation(line: 61, column: 14, scope: !3613)
!3615 = !DILocation(line: 61, column: 12, scope: !3613)
!3616 = !DILocation(line: 61, column: 20, scope: !3613)
!3617 = !DILocation(line: 61, column: 25, scope: !3613)
!3618 = !DILocation(line: 61, column: 37, scope: !3613)
!3619 = !DILocation(line: 61, column: 42, scope: !3613)
!3620 = !DILocation(line: 61, column: 28, scope: !3613)
!3621 = !DILocation(line: 61, column: 61, scope: !3613)
!3622 = !DILocation(line: 61, column: 7, scope: !3588)
!3623 = !DILocation(line: 63, column: 15, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3613, file: !217, line: 62, column: 5)
!3625 = !DILocation(line: 63, column: 13, scope: !3624)
!3626 = !DILocation(line: 64, column: 20, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3624, file: !217, line: 64, column: 11)
!3628 = !DILocation(line: 64, column: 11, scope: !3627)
!3629 = !DILocation(line: 64, column: 36, scope: !3627)
!3630 = !DILocation(line: 64, column: 11, scope: !3624)
!3631 = !DILocation(line: 66, column: 19, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3627, file: !217, line: 65, column: 9)
!3633 = !DILocation(line: 66, column: 24, scope: !3632)
!3634 = !DILocation(line: 66, column: 17, scope: !3632)
!3635 = !DILocation(line: 70, column: 52, scope: !3632)
!3636 = !DILocation(line: 70, column: 41, scope: !3632)
!3637 = !DILocation(line: 72, column: 9, scope: !3632)
!3638 = !DILocation(line: 73, column: 5, scope: !3624)
!3639 = !DILocation(line: 84, column: 18, scope: !3588)
!3640 = !DILocation(line: 84, column: 16, scope: !3588)
!3641 = !DILocation(line: 90, column: 38, scope: !3588)
!3642 = !DILocation(line: 90, column: 27, scope: !3588)
!3643 = !DILocation(line: 92, column: 1, scope: !3588)
!3644 = distinct !DISubprogram(name: "set_char_quoting", scope: !241, file: !241, line: 152, type: !3645, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!3645 = !DISubroutineType(types: !3646)
!3646 = !{!53, !3647, !7, !53}
!3647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!3648 = !DILocalVariable(name: "o", arg: 1, scope: !3644, file: !241, line: 152, type: !3647)
!3649 = !DILocation(line: 152, column: 43, scope: !3644)
!3650 = !DILocalVariable(name: "c", arg: 2, scope: !3644, file: !241, line: 152, type: !7)
!3651 = !DILocation(line: 152, column: 51, scope: !3644)
!3652 = !DILocalVariable(name: "i", arg: 3, scope: !3644, file: !241, line: 152, type: !53)
!3653 = !DILocation(line: 152, column: 58, scope: !3644)
!3654 = !DILocalVariable(name: "uc", scope: !3644, file: !241, line: 154, type: !317)
!3655 = !DILocation(line: 154, column: 17, scope: !3644)
!3656 = !DILocation(line: 154, column: 22, scope: !3644)
!3657 = !DILocalVariable(name: "p", scope: !3644, file: !241, line: 155, type: !3658)
!3658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 64)
!3659 = !DILocation(line: 155, column: 17, scope: !3644)
!3660 = !DILocation(line: 156, column: 6, scope: !3644)
!3661 = !DILocation(line: 156, column: 10, scope: !3644)
!3662 = !DILocation(line: 156, column: 41, scope: !3644)
!3663 = !DILocation(line: 156, column: 5, scope: !3644)
!3664 = !DILocation(line: 156, column: 59, scope: !3644)
!3665 = !DILocation(line: 156, column: 62, scope: !3644)
!3666 = !DILocation(line: 156, column: 57, scope: !3644)
!3667 = !DILocalVariable(name: "shift", scope: !3644, file: !241, line: 157, type: !53)
!3668 = !DILocation(line: 157, column: 7, scope: !3644)
!3669 = !DILocation(line: 157, column: 15, scope: !3644)
!3670 = !DILocation(line: 157, column: 18, scope: !3644)
!3671 = !DILocalVariable(name: "r", scope: !3644, file: !241, line: 158, type: !53)
!3672 = !DILocation(line: 158, column: 7, scope: !3644)
!3673 = !DILocation(line: 158, column: 13, scope: !3644)
!3674 = !DILocation(line: 158, column: 12, scope: !3644)
!3675 = !DILocation(line: 158, column: 18, scope: !3644)
!3676 = !DILocation(line: 158, column: 15, scope: !3644)
!3677 = !DILocation(line: 158, column: 25, scope: !3644)
!3678 = !DILocation(line: 159, column: 11, scope: !3644)
!3679 = !DILocation(line: 159, column: 13, scope: !3644)
!3680 = !DILocation(line: 159, column: 20, scope: !3644)
!3681 = !DILocation(line: 159, column: 18, scope: !3644)
!3682 = !DILocation(line: 159, column: 26, scope: !3644)
!3683 = !DILocation(line: 159, column: 23, scope: !3644)
!3684 = !DILocation(line: 159, column: 4, scope: !3644)
!3685 = !DILocation(line: 159, column: 6, scope: !3644)
!3686 = !DILocation(line: 160, column: 10, scope: !3644)
!3687 = !DILocation(line: 160, column: 3, scope: !3644)
!3688 = !DILocalVariable(name: "o", arg: 1, scope: !3689, file: !241, line: 152, type: !3692)
!3689 = distinct !DISubprogram(name: "set_char_quoting", scope: !241, file: !241, line: 152, type: !3690, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3700, retainedNodes: !4)
!3690 = !DISubroutineType(types: !3691)
!3691 = !{!53, !3692, !7, !53}
!3692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3693, size: 64)
!3693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !3694)
!3694 = !{!3695, !3696, !3697, !3698, !3699}
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3693, file: !241, line: 68, baseType: !223, size: 32)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3693, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3693, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3693, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3693, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!3700 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !3701, nameTableKind: None)
!3701 = !{!3702, !3704, !3706, !3708, !3710, !3712, !3719, !3721}
!3702 = !DIGlobalVariableExpression(var: !3703, expr: !DIExpression())
!3703 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3700, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!3704 = !DIGlobalVariableExpression(var: !3705, expr: !DIExpression())
!3705 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3700, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!3706 = !DIGlobalVariableExpression(var: !3707, expr: !DIExpression())
!3707 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3700, file: !241, line: 1052, type: !3693, isLocal: false, isDefinition: true)
!3708 = !DIGlobalVariableExpression(var: !3709, expr: !DIExpression())
!3709 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3700, file: !241, line: 116, type: !3693, isLocal: true, isDefinition: true)
!3710 = !DIGlobalVariableExpression(var: !3711, expr: !DIExpression())
!3711 = distinct !DIGlobalVariable(name: "slot0", scope: !3700, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!3712 = !DIGlobalVariableExpression(var: !3713, expr: !DIExpression())
!3713 = distinct !DIGlobalVariable(name: "slotvec", scope: !3700, file: !241, line: 845, type: !3714, isLocal: true, isDefinition: true)
!3714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3715, size: 64)
!3715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !3716)
!3716 = !{!3717, !3718}
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3715, file: !241, line: 836, baseType: !110, size: 64)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3715, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!3719 = !DIGlobalVariableExpression(var: !3720, expr: !DIExpression())
!3720 = distinct !DIGlobalVariable(name: "nslots", scope: !3700, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!3721 = !DIGlobalVariableExpression(var: !3722, expr: !DIExpression())
!3722 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3700, file: !241, line: 844, type: !3715, isLocal: true, isDefinition: true)
!3723 = !DILocalVariable(name: "c", arg: 2, scope: !3689, file: !241, line: 152, type: !7)
!3724 = !DILocalVariable(name: "i", arg: 3, scope: !3689, file: !241, line: 152, type: !53)
!3725 = !DILocalVariable(name: "uc", scope: !3689, file: !241, line: 154, type: !317)
!3726 = !DILocalVariable(name: "p", scope: !3689, file: !241, line: 155, type: !3658)
!3727 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !241, file: !241, line: 982, type: !3728, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!3728 = !DISubroutineType(types: !3729)
!3729 = !{!6, !49, !110, !7}
!3730 = !DILocalVariable(name: "arg", arg: 1, scope: !3727, file: !241, line: 982, type: !49)
!3731 = !DILocation(line: 982, column: 32, scope: !3727)
!3732 = !DILocalVariable(name: "argsize", arg: 2, scope: !3727, file: !241, line: 982, type: !110)
!3733 = !DILocation(line: 982, column: 44, scope: !3727)
!3734 = !DILocalVariable(name: "ch", arg: 3, scope: !3727, file: !241, line: 982, type: !7)
!3735 = !DILocation(line: 982, column: 58, scope: !3727)
!3736 = !DILocalVariable(name: "options", scope: !3727, file: !241, line: 984, type: !254)
!3737 = !DILocation(line: 984, column: 26, scope: !3727)
!3738 = !DILocation(line: 985, column: 13, scope: !3727)
!3739 = !DILocation(line: 986, column: 31, scope: !3727)
!3740 = !DILocation(line: 986, column: 3, scope: !3727)
!3741 = !DILocation(line: 987, column: 33, scope: !3727)
!3742 = !DILocation(line: 987, column: 38, scope: !3727)
!3743 = !DILocation(line: 987, column: 10, scope: !3727)
!3744 = !DILocation(line: 987, column: 3, scope: !3727)
!3745 = !DILocalVariable(name: "arg", arg: 1, scope: !3746, file: !241, line: 982, type: !49)
!3746 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !241, file: !241, line: 982, type: !3728, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3747, retainedNodes: !4)
!3747 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !3748, nameTableKind: None)
!3748 = !{!3749, !3751, !3753, !3762, !3764, !3766, !3773, !3775}
!3749 = !DIGlobalVariableExpression(var: !3750, expr: !DIExpression())
!3750 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3747, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!3751 = !DIGlobalVariableExpression(var: !3752, expr: !DIExpression())
!3752 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3747, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!3753 = !DIGlobalVariableExpression(var: !3754, expr: !DIExpression())
!3754 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3747, file: !241, line: 1052, type: !3755, isLocal: false, isDefinition: true)
!3755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !3756)
!3756 = !{!3757, !3758, !3759, !3760, !3761}
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3755, file: !241, line: 68, baseType: !223, size: 32)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3755, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3755, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3755, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3755, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!3762 = !DIGlobalVariableExpression(var: !3763, expr: !DIExpression())
!3763 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3747, file: !241, line: 116, type: !3755, isLocal: true, isDefinition: true)
!3764 = !DIGlobalVariableExpression(var: !3765, expr: !DIExpression())
!3765 = distinct !DIGlobalVariable(name: "slot0", scope: !3747, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!3766 = !DIGlobalVariableExpression(var: !3767, expr: !DIExpression())
!3767 = distinct !DIGlobalVariable(name: "slotvec", scope: !3747, file: !241, line: 845, type: !3768, isLocal: true, isDefinition: true)
!3768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3769, size: 64)
!3769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !3770)
!3770 = !{!3771, !3772}
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3769, file: !241, line: 836, baseType: !110, size: 64)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3769, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!3773 = !DIGlobalVariableExpression(var: !3774, expr: !DIExpression())
!3774 = distinct !DIGlobalVariable(name: "nslots", scope: !3747, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!3775 = !DIGlobalVariableExpression(var: !3776, expr: !DIExpression())
!3776 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3747, file: !241, line: 844, type: !3769, isLocal: true, isDefinition: true)
!3777 = !DILocalVariable(name: "argsize", arg: 2, scope: !3746, file: !241, line: 982, type: !110)
!3778 = !DILocalVariable(name: "ch", arg: 3, scope: !3746, file: !241, line: 982, type: !7)
!3779 = !DILocalVariable(name: "options", scope: !3746, file: !241, line: 984, type: !3755)
!3780 = distinct !DISubprogram(name: "quotearg_n_options", scope: !241, file: !241, line: 877, type: !3781, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!3781 = !DISubroutineType(types: !3782)
!3782 = !{!6, !53, !49, !110, !3783}
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3784, size: 64)
!3784 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !254)
!3785 = !DILocalVariable(name: "n", arg: 1, scope: !3780, file: !241, line: 877, type: !53)
!3786 = !DILocation(line: 877, column: 25, scope: !3780)
!3787 = !DILocalVariable(name: "arg", arg: 2, scope: !3780, file: !241, line: 877, type: !49)
!3788 = !DILocation(line: 877, column: 40, scope: !3780)
!3789 = !DILocalVariable(name: "argsize", arg: 3, scope: !3780, file: !241, line: 877, type: !110)
!3790 = !DILocation(line: 877, column: 52, scope: !3780)
!3791 = !DILocalVariable(name: "options", arg: 4, scope: !3780, file: !241, line: 878, type: !3783)
!3792 = !DILocation(line: 878, column: 51, scope: !3780)
!3793 = !DILocalVariable(name: "e", scope: !3780, file: !241, line: 880, type: !53)
!3794 = !DILocation(line: 880, column: 7, scope: !3780)
!3795 = !DILocation(line: 880, column: 11, scope: !3780)
!3796 = !DILocalVariable(name: "sv", scope: !3780, file: !241, line: 882, type: !268)
!3797 = !DILocation(line: 882, column: 19, scope: !3780)
!3798 = !DILocation(line: 882, column: 24, scope: !3780)
!3799 = !DILocation(line: 884, column: 7, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3780, file: !241, line: 884, column: 7)
!3801 = !DILocation(line: 884, column: 9, scope: !3800)
!3802 = !DILocation(line: 884, column: 7, scope: !3780)
!3803 = !DILocation(line: 885, column: 5, scope: !3800)
!3804 = !DILocation(line: 887, column: 7, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3780, file: !241, line: 887, column: 7)
!3806 = !DILocation(line: 887, column: 17, scope: !3805)
!3807 = !DILocation(line: 887, column: 14, scope: !3805)
!3808 = !DILocation(line: 887, column: 7, scope: !3780)
!3809 = !DILocalVariable(name: "preallocated", scope: !3810, file: !241, line: 889, type: !18)
!3810 = distinct !DILexicalBlock(scope: !3805, file: !241, line: 888, column: 5)
!3811 = !DILocation(line: 889, column: 12, scope: !3810)
!3812 = !DILocation(line: 889, column: 28, scope: !3810)
!3813 = !DILocation(line: 889, column: 31, scope: !3810)
!3814 = !DILocalVariable(name: "nmax", scope: !3810, file: !241, line: 890, type: !53)
!3815 = !DILocation(line: 890, column: 11, scope: !3810)
!3816 = !DILocation(line: 892, column: 11, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3810, file: !241, line: 892, column: 11)
!3818 = !DILocation(line: 892, column: 18, scope: !3817)
!3819 = !DILocation(line: 892, column: 16, scope: !3817)
!3820 = !DILocation(line: 892, column: 11, scope: !3810)
!3821 = !DILocation(line: 893, column: 9, scope: !3817)
!3822 = !DILocation(line: 895, column: 32, scope: !3810)
!3823 = !DILocation(line: 895, column: 54, scope: !3810)
!3824 = !DILocation(line: 895, column: 59, scope: !3810)
!3825 = !DILocation(line: 895, column: 61, scope: !3810)
!3826 = !DILocation(line: 895, column: 58, scope: !3810)
!3827 = !DILocation(line: 895, column: 66, scope: !3810)
!3828 = !DILocation(line: 895, column: 22, scope: !3810)
!3829 = !DILocation(line: 895, column: 20, scope: !3810)
!3830 = !DILocation(line: 895, column: 15, scope: !3810)
!3831 = !DILocation(line: 896, column: 11, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3810, file: !241, line: 896, column: 11)
!3833 = !DILocation(line: 896, column: 11, scope: !3810)
!3834 = !DILocation(line: 897, column: 10, scope: !3832)
!3835 = !DILocation(line: 897, column: 15, scope: !3832)
!3836 = !DILocation(line: 897, column: 9, scope: !3832)
!3837 = !DILocation(line: 898, column: 15, scope: !3810)
!3838 = !DILocation(line: 898, column: 20, scope: !3810)
!3839 = !DILocation(line: 898, column: 18, scope: !3810)
!3840 = !DILocation(line: 898, column: 7, scope: !3810)
!3841 = !DILocation(line: 898, column: 32, scope: !3810)
!3842 = !DILocation(line: 898, column: 34, scope: !3810)
!3843 = !DILocation(line: 898, column: 40, scope: !3810)
!3844 = !DILocation(line: 898, column: 38, scope: !3810)
!3845 = !DILocation(line: 898, column: 31, scope: !3810)
!3846 = !DILocation(line: 898, column: 48, scope: !3810)
!3847 = !DILocation(line: 899, column: 16, scope: !3810)
!3848 = !DILocation(line: 899, column: 18, scope: !3810)
!3849 = !DILocation(line: 899, column: 14, scope: !3810)
!3850 = !DILocation(line: 900, column: 5, scope: !3810)
!3851 = !DILocalVariable(name: "size", scope: !3852, file: !241, line: 903, type: !110)
!3852 = distinct !DILexicalBlock(scope: !3780, file: !241, line: 902, column: 3)
!3853 = !DILocation(line: 903, column: 12, scope: !3852)
!3854 = !DILocation(line: 903, column: 19, scope: !3852)
!3855 = !DILocation(line: 903, column: 22, scope: !3852)
!3856 = !DILocation(line: 903, column: 25, scope: !3852)
!3857 = !DILocalVariable(name: "val", scope: !3852, file: !241, line: 904, type: !6)
!3858 = !DILocation(line: 904, column: 11, scope: !3852)
!3859 = !DILocation(line: 904, column: 17, scope: !3852)
!3860 = !DILocation(line: 904, column: 20, scope: !3852)
!3861 = !DILocation(line: 904, column: 23, scope: !3852)
!3862 = !DILocalVariable(name: "flags", scope: !3852, file: !241, line: 906, type: !53)
!3863 = !DILocation(line: 906, column: 9, scope: !3852)
!3864 = !DILocation(line: 906, column: 17, scope: !3852)
!3865 = !DILocation(line: 906, column: 26, scope: !3852)
!3866 = !DILocation(line: 906, column: 32, scope: !3852)
!3867 = !DILocalVariable(name: "qsize", scope: !3852, file: !241, line: 907, type: !110)
!3868 = !DILocation(line: 907, column: 12, scope: !3852)
!3869 = !DILocation(line: 907, column: 46, scope: !3852)
!3870 = !DILocation(line: 907, column: 51, scope: !3852)
!3871 = !DILocation(line: 907, column: 57, scope: !3852)
!3872 = !DILocation(line: 907, column: 62, scope: !3852)
!3873 = !DILocation(line: 908, column: 46, scope: !3852)
!3874 = !DILocation(line: 908, column: 55, scope: !3852)
!3875 = !DILocation(line: 908, column: 62, scope: !3852)
!3876 = !DILocation(line: 909, column: 46, scope: !3852)
!3877 = !DILocation(line: 909, column: 55, scope: !3852)
!3878 = !DILocation(line: 910, column: 46, scope: !3852)
!3879 = !DILocation(line: 910, column: 55, scope: !3852)
!3880 = !DILocation(line: 911, column: 46, scope: !3852)
!3881 = !DILocation(line: 911, column: 55, scope: !3852)
!3882 = !DILocation(line: 907, column: 20, scope: !3852)
!3883 = !DILocation(line: 913, column: 9, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3852, file: !241, line: 913, column: 9)
!3885 = !DILocation(line: 913, column: 17, scope: !3884)
!3886 = !DILocation(line: 913, column: 14, scope: !3884)
!3887 = !DILocation(line: 913, column: 9, scope: !3852)
!3888 = !DILocation(line: 915, column: 29, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3884, file: !241, line: 914, column: 7)
!3890 = !DILocation(line: 915, column: 35, scope: !3889)
!3891 = !DILocation(line: 915, column: 27, scope: !3889)
!3892 = !DILocation(line: 915, column: 9, scope: !3889)
!3893 = !DILocation(line: 915, column: 12, scope: !3889)
!3894 = !DILocation(line: 915, column: 15, scope: !3889)
!3895 = !DILocation(line: 915, column: 20, scope: !3889)
!3896 = !DILocation(line: 916, column: 13, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3889, file: !241, line: 916, column: 13)
!3898 = !DILocation(line: 916, column: 17, scope: !3897)
!3899 = !DILocation(line: 916, column: 13, scope: !3889)
!3900 = !DILocation(line: 917, column: 17, scope: !3897)
!3901 = !DILocation(line: 917, column: 11, scope: !3897)
!3902 = !DILocation(line: 918, column: 39, scope: !3889)
!3903 = !DILocation(line: 918, column: 27, scope: !3889)
!3904 = !DILocation(line: 918, column: 25, scope: !3889)
!3905 = !DILocation(line: 918, column: 9, scope: !3889)
!3906 = !DILocation(line: 918, column: 12, scope: !3889)
!3907 = !DILocation(line: 918, column: 15, scope: !3889)
!3908 = !DILocation(line: 918, column: 19, scope: !3889)
!3909 = !DILocation(line: 919, column: 35, scope: !3889)
!3910 = !DILocation(line: 919, column: 40, scope: !3889)
!3911 = !DILocation(line: 919, column: 46, scope: !3889)
!3912 = !DILocation(line: 919, column: 51, scope: !3889)
!3913 = !DILocation(line: 919, column: 60, scope: !3889)
!3914 = !DILocation(line: 919, column: 69, scope: !3889)
!3915 = !DILocation(line: 920, column: 35, scope: !3889)
!3916 = !DILocation(line: 920, column: 42, scope: !3889)
!3917 = !DILocation(line: 920, column: 51, scope: !3889)
!3918 = !DILocation(line: 921, column: 35, scope: !3889)
!3919 = !DILocation(line: 921, column: 44, scope: !3889)
!3920 = !DILocation(line: 922, column: 35, scope: !3889)
!3921 = !DILocation(line: 922, column: 44, scope: !3889)
!3922 = !DILocation(line: 919, column: 9, scope: !3889)
!3923 = !DILocation(line: 923, column: 7, scope: !3889)
!3924 = !DILocation(line: 925, column: 13, scope: !3852)
!3925 = !DILocation(line: 925, column: 5, scope: !3852)
!3926 = !DILocation(line: 925, column: 11, scope: !3852)
!3927 = !DILocation(line: 926, column: 12, scope: !3852)
!3928 = !DILocation(line: 926, column: 5, scope: !3852)
!3929 = !DILocalVariable(name: "n", arg: 1, scope: !3930, file: !241, line: 877, type: !53)
!3930 = distinct !DISubprogram(name: "quotearg_n_options", scope: !241, file: !241, line: 877, type: !3931, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3942, retainedNodes: !4)
!3931 = !DISubroutineType(types: !3932)
!3932 = !{!6, !53, !49, !110, !3933}
!3933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3934, size: 64)
!3934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3935)
!3935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !3936)
!3936 = !{!3937, !3938, !3939, !3940, !3941}
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3935, file: !241, line: 68, baseType: !223, size: 32)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3935, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3935, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3935, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3935, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!3942 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !3943, nameTableKind: None)
!3943 = !{!3944, !3946, !3948, !3950, !3952, !3954, !3961, !3963}
!3944 = !DIGlobalVariableExpression(var: !3945, expr: !DIExpression())
!3945 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3942, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!3946 = !DIGlobalVariableExpression(var: !3947, expr: !DIExpression())
!3947 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3942, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!3948 = !DIGlobalVariableExpression(var: !3949, expr: !DIExpression())
!3949 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3942, file: !241, line: 1052, type: !3935, isLocal: false, isDefinition: true)
!3950 = !DIGlobalVariableExpression(var: !3951, expr: !DIExpression())
!3951 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3942, file: !241, line: 116, type: !3935, isLocal: true, isDefinition: true)
!3952 = !DIGlobalVariableExpression(var: !3953, expr: !DIExpression())
!3953 = distinct !DIGlobalVariable(name: "slot0", scope: !3942, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!3954 = !DIGlobalVariableExpression(var: !3955, expr: !DIExpression())
!3955 = distinct !DIGlobalVariable(name: "slotvec", scope: !3942, file: !241, line: 845, type: !3956, isLocal: true, isDefinition: true)
!3956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3957, size: 64)
!3957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !3958)
!3958 = !{!3959, !3960}
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3957, file: !241, line: 836, baseType: !110, size: 64)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3957, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!3961 = !DIGlobalVariableExpression(var: !3962, expr: !DIExpression())
!3962 = distinct !DIGlobalVariable(name: "nslots", scope: !3942, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!3963 = !DIGlobalVariableExpression(var: !3964, expr: !DIExpression())
!3964 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3942, file: !241, line: 844, type: !3957, isLocal: true, isDefinition: true)
!3965 = !DILocalVariable(name: "arg", arg: 2, scope: !3930, file: !241, line: 877, type: !49)
!3966 = !DILocalVariable(name: "argsize", arg: 3, scope: !3930, file: !241, line: 877, type: !110)
!3967 = !DILocalVariable(name: "options", arg: 4, scope: !3930, file: !241, line: 878, type: !3933)
!3968 = !DILocalVariable(name: "e", scope: !3930, file: !241, line: 880, type: !53)
!3969 = !DILocalVariable(name: "sv", scope: !3930, file: !241, line: 882, type: !3956)
!3970 = !DILocalVariable(name: "nmax", scope: !3971, file: !241, line: 890, type: !53)
!3971 = distinct !DILexicalBlock(scope: !3972, file: !241, line: 888, column: 5)
!3972 = distinct !DILexicalBlock(scope: !3973, file: !241, line: 887, column: 7)
!3973 = distinct !DISubprogram(name: "quotearg_n_options", scope: !241, file: !241, line: 877, type: !3974, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3985, retainedNodes: !4)
!3974 = !DISubroutineType(types: !3975)
!3975 = !{!6, !53, !49, !110, !3976}
!3976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3977, size: 64)
!3977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3978)
!3978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !3979)
!3979 = !{!3980, !3981, !3982, !3983, !3984}
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3978, file: !241, line: 68, baseType: !223, size: 32)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3978, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3978, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3978, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3978, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!3985 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !3986, nameTableKind: None)
!3986 = !{!3987, !3989, !3991, !3993, !3995, !3997, !4004, !4006}
!3987 = !DIGlobalVariableExpression(var: !3988, expr: !DIExpression())
!3988 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3985, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!3989 = !DIGlobalVariableExpression(var: !3990, expr: !DIExpression())
!3990 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3985, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!3991 = !DIGlobalVariableExpression(var: !3992, expr: !DIExpression())
!3992 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3985, file: !241, line: 1052, type: !3978, isLocal: false, isDefinition: true)
!3993 = !DIGlobalVariableExpression(var: !3994, expr: !DIExpression())
!3994 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3985, file: !241, line: 116, type: !3978, isLocal: true, isDefinition: true)
!3995 = !DIGlobalVariableExpression(var: !3996, expr: !DIExpression())
!3996 = distinct !DIGlobalVariable(name: "slot0", scope: !3985, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!3997 = !DIGlobalVariableExpression(var: !3998, expr: !DIExpression())
!3998 = distinct !DIGlobalVariable(name: "slotvec", scope: !3985, file: !241, line: 845, type: !3999, isLocal: true, isDefinition: true)
!3999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4000, size: 64)
!4000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !4001)
!4001 = !{!4002, !4003}
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4000, file: !241, line: 836, baseType: !110, size: 64)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4000, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!4004 = !DIGlobalVariableExpression(var: !4005, expr: !DIExpression())
!4005 = distinct !DIGlobalVariable(name: "nslots", scope: !3985, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!4006 = !DIGlobalVariableExpression(var: !4007, expr: !DIExpression())
!4007 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3985, file: !241, line: 844, type: !4000, isLocal: true, isDefinition: true)
!4008 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !241, file: !241, line: 256, type: !4009, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4009 = !DISubroutineType(types: !4010)
!4010 = !{!110, !6, !110, !49, !110, !223, !53, !4011, !49, !49}
!4011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4012, size: 64)
!4012 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !180)
!4013 = !DILocalVariable(name: "buffer", arg: 1, scope: !4008, file: !241, line: 256, type: !6)
!4014 = !DILocation(line: 256, column: 33, scope: !4008)
!4015 = !DILocalVariable(name: "buffersize", arg: 2, scope: !4008, file: !241, line: 256, type: !110)
!4016 = !DILocation(line: 256, column: 48, scope: !4008)
!4017 = !DILocalVariable(name: "arg", arg: 3, scope: !4008, file: !241, line: 257, type: !49)
!4018 = !DILocation(line: 257, column: 39, scope: !4008)
!4019 = !DILocalVariable(name: "argsize", arg: 4, scope: !4008, file: !241, line: 257, type: !110)
!4020 = !DILocation(line: 257, column: 51, scope: !4008)
!4021 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !4008, file: !241, line: 258, type: !223)
!4022 = !DILocation(line: 258, column: 46, scope: !4008)
!4023 = !DILocalVariable(name: "flags", arg: 6, scope: !4008, file: !241, line: 258, type: !53)
!4024 = !DILocation(line: 258, column: 65, scope: !4008)
!4025 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !4008, file: !241, line: 259, type: !4011)
!4026 = !DILocation(line: 259, column: 47, scope: !4008)
!4027 = !DILocalVariable(name: "left_quote", arg: 8, scope: !4008, file: !241, line: 260, type: !49)
!4028 = !DILocation(line: 260, column: 39, scope: !4008)
!4029 = !DILocalVariable(name: "right_quote", arg: 9, scope: !4008, file: !241, line: 261, type: !49)
!4030 = !DILocation(line: 261, column: 39, scope: !4008)
!4031 = !DILocalVariable(name: "i", scope: !4008, file: !241, line: 263, type: !110)
!4032 = !DILocation(line: 263, column: 10, scope: !4008)
!4033 = !DILocalVariable(name: "len", scope: !4008, file: !241, line: 264, type: !110)
!4034 = !DILocation(line: 264, column: 10, scope: !4008)
!4035 = !DILocalVariable(name: "orig_buffersize", scope: !4008, file: !241, line: 265, type: !110)
!4036 = !DILocation(line: 265, column: 10, scope: !4008)
!4037 = !DILocalVariable(name: "quote_string", scope: !4008, file: !241, line: 266, type: !49)
!4038 = !DILocation(line: 266, column: 15, scope: !4008)
!4039 = !DILocalVariable(name: "quote_string_len", scope: !4008, file: !241, line: 267, type: !110)
!4040 = !DILocation(line: 267, column: 10, scope: !4008)
!4041 = !DILocalVariable(name: "backslash_escapes", scope: !4008, file: !241, line: 268, type: !18)
!4042 = !DILocation(line: 268, column: 8, scope: !4008)
!4043 = !DILocalVariable(name: "unibyte_locale", scope: !4008, file: !241, line: 269, type: !18)
!4044 = !DILocation(line: 269, column: 8, scope: !4008)
!4045 = !DILocation(line: 269, column: 25, scope: !4008)
!4046 = !DILocation(line: 269, column: 36, scope: !4008)
!4047 = !DILocalVariable(name: "elide_outer_quotes", scope: !4008, file: !241, line: 270, type: !18)
!4048 = !DILocation(line: 270, column: 8, scope: !4008)
!4049 = !DILocation(line: 270, column: 30, scope: !4008)
!4050 = !DILocation(line: 270, column: 36, scope: !4008)
!4051 = !DILocation(line: 270, column: 61, scope: !4008)
!4052 = !DILocalVariable(name: "pending_shell_escape_end", scope: !4008, file: !241, line: 271, type: !18)
!4053 = !DILocation(line: 271, column: 8, scope: !4008)
!4054 = !DILocalVariable(name: "encountered_single_quote", scope: !4008, file: !241, line: 272, type: !18)
!4055 = !DILocation(line: 272, column: 8, scope: !4008)
!4056 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !4008, file: !241, line: 273, type: !18)
!4057 = !DILocation(line: 273, column: 8, scope: !4008)
!4058 = !DILocation(line: 273, column: 3, scope: !4008)
!4059 = !DILabel(scope: !4008, name: "process_input", file: !241, line: 314)
!4060 = !DILocation(line: 314, column: 2, scope: !4008)
!4061 = !DILocation(line: 316, column: 11, scope: !4008)
!4062 = !DILocation(line: 316, column: 3, scope: !4008)
!4063 = !DILocation(line: 319, column: 21, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4008, file: !241, line: 317, column: 5)
!4065 = !DILocation(line: 320, column: 26, scope: !4064)
!4066 = !DILocation(line: 321, column: 7, scope: !4064)
!4067 = !DILocation(line: 323, column: 12, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4064, file: !241, line: 323, column: 11)
!4069 = !DILocation(line: 323, column: 11, scope: !4064)
!4070 = !DILocation(line: 324, column: 9, scope: !4068)
!4071 = !DILocation(line: 324, column: 9, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4073, file: !241, line: 324, column: 9)
!4073 = distinct !DILexicalBlock(scope: !4068, file: !241, line: 324, column: 9)
!4074 = !DILocation(line: 324, column: 9, scope: !4073)
!4075 = !DILocation(line: 325, column: 25, scope: !4064)
!4076 = !DILocation(line: 326, column: 20, scope: !4064)
!4077 = !DILocation(line: 327, column: 24, scope: !4064)
!4078 = !DILocation(line: 328, column: 7, scope: !4064)
!4079 = !DILocation(line: 331, column: 25, scope: !4064)
!4080 = !DILocation(line: 332, column: 26, scope: !4064)
!4081 = !DILocation(line: 333, column: 7, scope: !4064)
!4082 = !DILocation(line: 339, column: 13, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4084, file: !241, line: 339, column: 13)
!4084 = distinct !DILexicalBlock(scope: !4064, file: !241, line: 338, column: 7)
!4085 = !DILocation(line: 339, column: 27, scope: !4083)
!4086 = !DILocation(line: 339, column: 13, scope: !4084)
!4087 = !DILocation(line: 362, column: 50, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4083, file: !241, line: 340, column: 11)
!4089 = !DILocation(line: 362, column: 26, scope: !4088)
!4090 = !DILocation(line: 362, column: 24, scope: !4088)
!4091 = !DILocation(line: 363, column: 51, scope: !4088)
!4092 = !DILocation(line: 363, column: 27, scope: !4088)
!4093 = !DILocation(line: 363, column: 25, scope: !4088)
!4094 = !DILocation(line: 364, column: 11, scope: !4088)
!4095 = !DILocation(line: 365, column: 14, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4084, file: !241, line: 365, column: 13)
!4097 = !DILocation(line: 365, column: 13, scope: !4084)
!4098 = !DILocation(line: 366, column: 31, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4096, file: !241, line: 366, column: 11)
!4100 = !DILocation(line: 366, column: 29, scope: !4099)
!4101 = !DILocation(line: 366, column: 16, scope: !4099)
!4102 = !DILocation(line: 366, column: 44, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4099, file: !241, line: 366, column: 11)
!4104 = !DILocation(line: 366, column: 43, scope: !4103)
!4105 = !DILocation(line: 366, column: 11, scope: !4099)
!4106 = !DILocation(line: 367, column: 13, scope: !4103)
!4107 = !DILocation(line: 367, column: 13, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4109, file: !241, line: 367, column: 13)
!4109 = distinct !DILexicalBlock(scope: !4103, file: !241, line: 367, column: 13)
!4110 = !DILocation(line: 367, column: 13, scope: !4109)
!4111 = !DILocation(line: 366, column: 70, scope: !4103)
!4112 = !DILocation(line: 366, column: 11, scope: !4103)
!4113 = distinct !{!4113, !4105, !4114}
!4114 = !DILocation(line: 367, column: 13, scope: !4099)
!4115 = !DILocation(line: 368, column: 27, scope: !4084)
!4116 = !DILocation(line: 369, column: 24, scope: !4084)
!4117 = !DILocation(line: 369, column: 22, scope: !4084)
!4118 = !DILocation(line: 370, column: 36, scope: !4084)
!4119 = !DILocation(line: 370, column: 28, scope: !4084)
!4120 = !DILocation(line: 370, column: 26, scope: !4084)
!4121 = !DILocation(line: 372, column: 7, scope: !4064)
!4122 = !DILocation(line: 375, column: 25, scope: !4064)
!4123 = !DILocation(line: 376, column: 7, scope: !4064)
!4124 = !DILocation(line: 378, column: 26, scope: !4064)
!4125 = !DILocation(line: 379, column: 7, scope: !4064)
!4126 = !DILocation(line: 381, column: 12, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4064, file: !241, line: 381, column: 11)
!4128 = !DILocation(line: 381, column: 11, scope: !4064)
!4129 = !DILocation(line: 382, column: 27, scope: !4127)
!4130 = !DILocation(line: 382, column: 9, scope: !4127)
!4131 = !DILocation(line: 383, column: 7, scope: !4064)
!4132 = !DILocation(line: 385, column: 21, scope: !4064)
!4133 = !DILocation(line: 386, column: 12, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4064, file: !241, line: 386, column: 11)
!4135 = !DILocation(line: 386, column: 11, scope: !4064)
!4136 = !DILocation(line: 387, column: 9, scope: !4134)
!4137 = !DILocation(line: 387, column: 9, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4139, file: !241, line: 387, column: 9)
!4139 = distinct !DILexicalBlock(scope: !4134, file: !241, line: 387, column: 9)
!4140 = !DILocation(line: 387, column: 9, scope: !4139)
!4141 = !DILocation(line: 388, column: 20, scope: !4064)
!4142 = !DILocation(line: 389, column: 24, scope: !4064)
!4143 = !DILocation(line: 390, column: 7, scope: !4064)
!4144 = !DILocation(line: 393, column: 26, scope: !4064)
!4145 = !DILocation(line: 394, column: 7, scope: !4064)
!4146 = !DILocation(line: 397, column: 7, scope: !4064)
!4147 = !DILocation(line: 400, column: 10, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4008, file: !241, line: 400, column: 3)
!4149 = !DILocation(line: 400, column: 8, scope: !4148)
!4150 = !DILocation(line: 400, column: 19, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4148, file: !241, line: 400, column: 3)
!4152 = !DILocation(line: 400, column: 27, scope: !4151)
!4153 = !DILocation(line: 400, column: 41, scope: !4151)
!4154 = !DILocation(line: 400, column: 45, scope: !4151)
!4155 = !DILocation(line: 400, column: 48, scope: !4151)
!4156 = !DILocation(line: 400, column: 58, scope: !4151)
!4157 = !DILocation(line: 400, column: 63, scope: !4151)
!4158 = !DILocation(line: 400, column: 60, scope: !4151)
!4159 = !DILocation(line: 400, column: 16, scope: !4151)
!4160 = !DILocation(line: 400, column: 3, scope: !4148)
!4161 = !DILocalVariable(name: "c", scope: !4162, file: !241, line: 402, type: !317)
!4162 = distinct !DILexicalBlock(scope: !4151, file: !241, line: 401, column: 5)
!4163 = !DILocation(line: 402, column: 21, scope: !4162)
!4164 = !DILocalVariable(name: "esc", scope: !4162, file: !241, line: 403, type: !317)
!4165 = !DILocation(line: 403, column: 21, scope: !4162)
!4166 = !DILocalVariable(name: "is_right_quote", scope: !4162, file: !241, line: 404, type: !18)
!4167 = !DILocation(line: 404, column: 12, scope: !4162)
!4168 = !DILocalVariable(name: "escaping", scope: !4162, file: !241, line: 405, type: !18)
!4169 = !DILocation(line: 405, column: 12, scope: !4162)
!4170 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !4162, file: !241, line: 406, type: !18)
!4171 = !DILocation(line: 406, column: 12, scope: !4162)
!4172 = !DILocation(line: 408, column: 11, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4162, file: !241, line: 408, column: 11)
!4174 = !DILocation(line: 409, column: 11, scope: !4173)
!4175 = !DILocation(line: 409, column: 14, scope: !4173)
!4176 = !DILocation(line: 409, column: 28, scope: !4173)
!4177 = !DILocation(line: 410, column: 11, scope: !4173)
!4178 = !DILocation(line: 410, column: 14, scope: !4173)
!4179 = !DILocation(line: 411, column: 11, scope: !4173)
!4180 = !DILocation(line: 411, column: 15, scope: !4173)
!4181 = !DILocation(line: 411, column: 19, scope: !4173)
!4182 = !DILocation(line: 411, column: 17, scope: !4173)
!4183 = !DILocation(line: 412, column: 19, scope: !4173)
!4184 = !DILocation(line: 412, column: 27, scope: !4173)
!4185 = !DILocation(line: 412, column: 39, scope: !4173)
!4186 = !DILocation(line: 412, column: 46, scope: !4173)
!4187 = !DILocation(line: 412, column: 44, scope: !4173)
!4188 = !DILocation(line: 416, column: 40, scope: !4173)
!4189 = !DILocation(line: 416, column: 32, scope: !4173)
!4190 = !DILocation(line: 416, column: 30, scope: !4173)
!4191 = !DILocation(line: 416, column: 48, scope: !4173)
!4192 = !DILocation(line: 412, column: 15, scope: !4173)
!4193 = !DILocation(line: 417, column: 11, scope: !4173)
!4194 = !DILocation(line: 417, column: 22, scope: !4173)
!4195 = !DILocation(line: 417, column: 28, scope: !4173)
!4196 = !DILocation(line: 417, column: 26, scope: !4173)
!4197 = !DILocation(line: 417, column: 31, scope: !4173)
!4198 = !DILocation(line: 417, column: 45, scope: !4173)
!4199 = !DILocation(line: 417, column: 14, scope: !4173)
!4200 = !DILocation(line: 417, column: 63, scope: !4173)
!4201 = !DILocation(line: 408, column: 11, scope: !4162)
!4202 = !DILocation(line: 419, column: 15, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4204, file: !241, line: 419, column: 15)
!4204 = distinct !DILexicalBlock(scope: !4173, file: !241, line: 418, column: 9)
!4205 = !DILocation(line: 419, column: 15, scope: !4204)
!4206 = !DILocation(line: 420, column: 13, scope: !4203)
!4207 = !DILocation(line: 421, column: 26, scope: !4204)
!4208 = !DILocation(line: 422, column: 9, scope: !4204)
!4209 = !DILocation(line: 424, column: 11, scope: !4162)
!4210 = !DILocation(line: 424, column: 15, scope: !4162)
!4211 = !DILocation(line: 424, column: 9, scope: !4162)
!4212 = !DILocation(line: 425, column: 15, scope: !4162)
!4213 = !DILocation(line: 425, column: 7, scope: !4162)
!4214 = !DILocation(line: 428, column: 15, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4216, file: !241, line: 428, column: 15)
!4216 = distinct !DILexicalBlock(scope: !4162, file: !241, line: 426, column: 9)
!4217 = !DILocation(line: 428, column: 15, scope: !4216)
!4218 = !DILocation(line: 430, column: 15, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4215, file: !241, line: 429, column: 13)
!4220 = !DILocation(line: 430, column: 15, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4222, file: !241, line: 430, column: 15)
!4222 = distinct !DILexicalBlock(scope: !4219, file: !241, line: 430, column: 15)
!4223 = !DILocation(line: 430, column: 15, scope: !4222)
!4224 = !DILocation(line: 430, column: 15, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4222, file: !241, line: 430, column: 15)
!4226 = !DILocation(line: 430, column: 15, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4225, file: !241, line: 430, column: 15)
!4228 = !DILocation(line: 430, column: 15, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4230, file: !241, line: 430, column: 15)
!4230 = distinct !DILexicalBlock(scope: !4227, file: !241, line: 430, column: 15)
!4231 = !DILocation(line: 430, column: 15, scope: !4230)
!4232 = !DILocation(line: 430, column: 15, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4234, file: !241, line: 430, column: 15)
!4234 = distinct !DILexicalBlock(scope: !4227, file: !241, line: 430, column: 15)
!4235 = !DILocation(line: 430, column: 15, scope: !4234)
!4236 = !DILocation(line: 430, column: 15, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4238, file: !241, line: 430, column: 15)
!4238 = distinct !DILexicalBlock(scope: !4227, file: !241, line: 430, column: 15)
!4239 = !DILocation(line: 430, column: 15, scope: !4238)
!4240 = !DILocation(line: 430, column: 15, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4242, file: !241, line: 430, column: 15)
!4242 = distinct !DILexicalBlock(scope: !4222, file: !241, line: 430, column: 15)
!4243 = !DILocation(line: 430, column: 15, scope: !4242)
!4244 = !DILocation(line: 437, column: 19, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4219, file: !241, line: 437, column: 19)
!4246 = !DILocation(line: 437, column: 33, scope: !4245)
!4247 = !DILocation(line: 438, column: 19, scope: !4245)
!4248 = !DILocation(line: 438, column: 22, scope: !4245)
!4249 = !DILocation(line: 438, column: 24, scope: !4245)
!4250 = !DILocation(line: 438, column: 30, scope: !4245)
!4251 = !DILocation(line: 438, column: 28, scope: !4245)
!4252 = !DILocation(line: 438, column: 38, scope: !4245)
!4253 = !DILocation(line: 438, column: 48, scope: !4245)
!4254 = !DILocation(line: 438, column: 52, scope: !4245)
!4255 = !DILocation(line: 438, column: 54, scope: !4245)
!4256 = !DILocation(line: 438, column: 45, scope: !4245)
!4257 = !DILocation(line: 438, column: 59, scope: !4245)
!4258 = !DILocation(line: 438, column: 62, scope: !4245)
!4259 = !DILocation(line: 438, column: 66, scope: !4245)
!4260 = !DILocation(line: 438, column: 68, scope: !4245)
!4261 = !DILocation(line: 438, column: 73, scope: !4245)
!4262 = !DILocation(line: 437, column: 19, scope: !4219)
!4263 = !DILocation(line: 440, column: 19, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4245, file: !241, line: 439, column: 17)
!4265 = !DILocation(line: 440, column: 19, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4267, file: !241, line: 440, column: 19)
!4267 = distinct !DILexicalBlock(scope: !4264, file: !241, line: 440, column: 19)
!4268 = !DILocation(line: 440, column: 19, scope: !4267)
!4269 = !DILocation(line: 441, column: 19, scope: !4264)
!4270 = !DILocation(line: 441, column: 19, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4272, file: !241, line: 441, column: 19)
!4272 = distinct !DILexicalBlock(scope: !4264, file: !241, line: 441, column: 19)
!4273 = !DILocation(line: 441, column: 19, scope: !4272)
!4274 = !DILocation(line: 442, column: 17, scope: !4264)
!4275 = !DILocation(line: 443, column: 17, scope: !4219)
!4276 = !DILocation(line: 448, column: 13, scope: !4219)
!4277 = !DILocation(line: 449, column: 20, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4215, file: !241, line: 449, column: 20)
!4279 = !DILocation(line: 449, column: 26, scope: !4278)
!4280 = !DILocation(line: 449, column: 20, scope: !4215)
!4281 = !DILocation(line: 450, column: 13, scope: !4278)
!4282 = !DILocation(line: 451, column: 11, scope: !4216)
!4283 = !DILocation(line: 454, column: 19, scope: !4216)
!4284 = !DILocation(line: 454, column: 11, scope: !4216)
!4285 = !DILocation(line: 457, column: 19, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4287, file: !241, line: 457, column: 19)
!4287 = distinct !DILexicalBlock(scope: !4216, file: !241, line: 455, column: 13)
!4288 = !DILocation(line: 457, column: 19, scope: !4287)
!4289 = !DILocation(line: 458, column: 17, scope: !4286)
!4290 = !DILocation(line: 459, column: 15, scope: !4287)
!4291 = !DILocation(line: 462, column: 20, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4287, file: !241, line: 462, column: 19)
!4293 = !DILocation(line: 462, column: 26, scope: !4292)
!4294 = !DILocation(line: 463, column: 19, scope: !4292)
!4295 = !DILocation(line: 463, column: 22, scope: !4292)
!4296 = !DILocation(line: 463, column: 24, scope: !4292)
!4297 = !DILocation(line: 463, column: 30, scope: !4292)
!4298 = !DILocation(line: 463, column: 28, scope: !4292)
!4299 = !DILocation(line: 463, column: 38, scope: !4292)
!4300 = !DILocation(line: 463, column: 41, scope: !4292)
!4301 = !DILocation(line: 463, column: 45, scope: !4292)
!4302 = !DILocation(line: 463, column: 47, scope: !4292)
!4303 = !DILocation(line: 463, column: 52, scope: !4292)
!4304 = !DILocation(line: 462, column: 19, scope: !4287)
!4305 = !DILocation(line: 464, column: 25, scope: !4292)
!4306 = !DILocation(line: 464, column: 29, scope: !4292)
!4307 = !DILocation(line: 464, column: 31, scope: !4292)
!4308 = !DILocation(line: 464, column: 17, scope: !4292)
!4309 = !DILocation(line: 471, column: 25, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4311, file: !241, line: 471, column: 25)
!4311 = distinct !DILexicalBlock(scope: !4292, file: !241, line: 465, column: 19)
!4312 = !DILocation(line: 471, column: 25, scope: !4311)
!4313 = !DILocation(line: 472, column: 23, scope: !4310)
!4314 = !DILocation(line: 473, column: 25, scope: !4311)
!4315 = !DILocation(line: 473, column: 29, scope: !4311)
!4316 = !DILocation(line: 473, column: 31, scope: !4311)
!4317 = !DILocation(line: 473, column: 23, scope: !4311)
!4318 = !DILocation(line: 474, column: 23, scope: !4311)
!4319 = !DILocation(line: 475, column: 21, scope: !4311)
!4320 = !DILocation(line: 475, column: 21, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4322, file: !241, line: 475, column: 21)
!4322 = distinct !DILexicalBlock(scope: !4311, file: !241, line: 475, column: 21)
!4323 = !DILocation(line: 475, column: 21, scope: !4322)
!4324 = !DILocation(line: 476, column: 21, scope: !4311)
!4325 = !DILocation(line: 476, column: 21, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4327, file: !241, line: 476, column: 21)
!4327 = distinct !DILexicalBlock(scope: !4311, file: !241, line: 476, column: 21)
!4328 = !DILocation(line: 476, column: 21, scope: !4327)
!4329 = !DILocation(line: 477, column: 21, scope: !4311)
!4330 = !DILocation(line: 477, column: 21, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4332, file: !241, line: 477, column: 21)
!4332 = distinct !DILexicalBlock(scope: !4311, file: !241, line: 477, column: 21)
!4333 = !DILocation(line: 477, column: 21, scope: !4332)
!4334 = !DILocation(line: 478, column: 21, scope: !4311)
!4335 = !DILocation(line: 478, column: 21, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4337, file: !241, line: 478, column: 21)
!4337 = distinct !DILexicalBlock(scope: !4311, file: !241, line: 478, column: 21)
!4338 = !DILocation(line: 478, column: 21, scope: !4337)
!4339 = !DILocation(line: 479, column: 21, scope: !4311)
!4340 = !DILocation(line: 482, column: 21, scope: !4311)
!4341 = !DILocation(line: 483, column: 19, scope: !4311)
!4342 = !DILocation(line: 484, column: 15, scope: !4287)
!4343 = !DILocation(line: 487, column: 15, scope: !4287)
!4344 = !DILocation(line: 489, column: 11, scope: !4216)
!4345 = !DILocation(line: 491, column: 24, scope: !4216)
!4346 = !DILocation(line: 491, column: 31, scope: !4216)
!4347 = !DILocation(line: 492, column: 24, scope: !4216)
!4348 = !DILocation(line: 492, column: 31, scope: !4216)
!4349 = !DILocation(line: 493, column: 24, scope: !4216)
!4350 = !DILocation(line: 493, column: 31, scope: !4216)
!4351 = !DILocation(line: 494, column: 24, scope: !4216)
!4352 = !DILocation(line: 494, column: 31, scope: !4216)
!4353 = !DILocation(line: 495, column: 24, scope: !4216)
!4354 = !DILocation(line: 495, column: 31, scope: !4216)
!4355 = !DILocation(line: 496, column: 24, scope: !4216)
!4356 = !DILocation(line: 496, column: 31, scope: !4216)
!4357 = !DILocation(line: 497, column: 24, scope: !4216)
!4358 = !DILocation(line: 497, column: 31, scope: !4216)
!4359 = !DILocation(line: 498, column: 26, scope: !4216)
!4360 = !DILocation(line: 498, column: 24, scope: !4216)
!4361 = !DILocation(line: 500, column: 15, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4216, file: !241, line: 500, column: 15)
!4363 = !DILocation(line: 500, column: 29, scope: !4362)
!4364 = !DILocation(line: 500, column: 15, scope: !4216)
!4365 = !DILocation(line: 502, column: 19, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4367, file: !241, line: 502, column: 19)
!4367 = distinct !DILexicalBlock(scope: !4362, file: !241, line: 501, column: 13)
!4368 = !DILocation(line: 502, column: 19, scope: !4367)
!4369 = !DILocation(line: 503, column: 17, scope: !4366)
!4370 = !DILocation(line: 504, column: 15, scope: !4367)
!4371 = !DILocation(line: 509, column: 15, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4216, file: !241, line: 509, column: 15)
!4373 = !DILocation(line: 509, column: 33, scope: !4372)
!4374 = !DILocation(line: 509, column: 36, scope: !4372)
!4375 = !DILocation(line: 509, column: 55, scope: !4372)
!4376 = !DILocation(line: 509, column: 58, scope: !4372)
!4377 = !DILocation(line: 509, column: 15, scope: !4216)
!4378 = !DILocation(line: 510, column: 13, scope: !4372)
!4379 = !DILabel(scope: !4216, name: "c_and_shell_escape", file: !241, line: 512)
!4380 = !DILocation(line: 512, column: 9, scope: !4216)
!4381 = !DILocation(line: 513, column: 15, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4216, file: !241, line: 513, column: 15)
!4383 = !DILocation(line: 513, column: 29, scope: !4382)
!4384 = !DILocation(line: 514, column: 15, scope: !4382)
!4385 = !DILocation(line: 514, column: 18, scope: !4382)
!4386 = !DILocation(line: 513, column: 15, scope: !4216)
!4387 = !DILocation(line: 515, column: 13, scope: !4382)
!4388 = !DILabel(scope: !4216, name: "c_escape", file: !241, line: 517)
!4389 = !DILocation(line: 517, column: 9, scope: !4216)
!4390 = !DILocation(line: 518, column: 15, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4216, file: !241, line: 518, column: 15)
!4392 = !DILocation(line: 518, column: 15, scope: !4216)
!4393 = !DILocation(line: 520, column: 19, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4391, file: !241, line: 519, column: 13)
!4395 = !DILocation(line: 520, column: 17, scope: !4394)
!4396 = !DILocation(line: 521, column: 15, scope: !4394)
!4397 = !DILocation(line: 523, column: 11, scope: !4216)
!4398 = !DILocation(line: 526, column: 18, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4216, file: !241, line: 526, column: 15)
!4400 = !DILocation(line: 526, column: 26, scope: !4399)
!4401 = !DILocation(line: 526, column: 15, scope: !4216)
!4402 = !DILocation(line: 526, column: 40, scope: !4399)
!4403 = !DILocation(line: 526, column: 47, scope: !4399)
!4404 = !DILocation(line: 526, column: 57, scope: !4399)
!4405 = !DILocation(line: 526, column: 65, scope: !4399)
!4406 = !DILocation(line: 527, column: 13, scope: !4399)
!4407 = !DILocation(line: 528, column: 11, scope: !4216)
!4408 = !DILocation(line: 530, column: 15, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4216, file: !241, line: 530, column: 15)
!4410 = !DILocation(line: 530, column: 17, scope: !4409)
!4411 = !DILocation(line: 530, column: 15, scope: !4216)
!4412 = !DILocation(line: 531, column: 13, scope: !4409)
!4413 = !DILocation(line: 532, column: 11, scope: !4216)
!4414 = !DILocation(line: 534, column: 36, scope: !4216)
!4415 = !DILocation(line: 535, column: 11, scope: !4216)
!4416 = !DILocation(line: 548, column: 15, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4216, file: !241, line: 548, column: 15)
!4418 = !DILocation(line: 548, column: 29, scope: !4417)
!4419 = !DILocation(line: 549, column: 15, scope: !4417)
!4420 = !DILocation(line: 549, column: 18, scope: !4417)
!4421 = !DILocation(line: 548, column: 15, scope: !4216)
!4422 = !DILocation(line: 550, column: 13, scope: !4417)
!4423 = !DILocation(line: 551, column: 11, scope: !4216)
!4424 = !DILocation(line: 554, column: 36, scope: !4216)
!4425 = !DILocation(line: 555, column: 36, scope: !4216)
!4426 = !DILocation(line: 556, column: 15, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4216, file: !241, line: 556, column: 15)
!4428 = !DILocation(line: 556, column: 29, scope: !4427)
!4429 = !DILocation(line: 556, column: 15, scope: !4216)
!4430 = !DILocation(line: 558, column: 19, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4432, file: !241, line: 558, column: 19)
!4432 = distinct !DILexicalBlock(scope: !4427, file: !241, line: 557, column: 13)
!4433 = !DILocation(line: 558, column: 19, scope: !4432)
!4434 = !DILocation(line: 559, column: 17, scope: !4431)
!4435 = !DILocation(line: 561, column: 19, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4432, file: !241, line: 561, column: 19)
!4437 = !DILocation(line: 561, column: 30, scope: !4436)
!4438 = !DILocation(line: 561, column: 35, scope: !4436)
!4439 = !DILocation(line: 561, column: 19, scope: !4432)
!4440 = !DILocation(line: 566, column: 37, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4436, file: !241, line: 562, column: 17)
!4442 = !DILocation(line: 566, column: 35, scope: !4441)
!4443 = !DILocation(line: 567, column: 30, scope: !4441)
!4444 = !DILocation(line: 568, column: 17, scope: !4441)
!4445 = !DILocation(line: 570, column: 15, scope: !4432)
!4446 = !DILocation(line: 570, column: 15, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4448, file: !241, line: 570, column: 15)
!4448 = distinct !DILexicalBlock(scope: !4432, file: !241, line: 570, column: 15)
!4449 = !DILocation(line: 570, column: 15, scope: !4448)
!4450 = !DILocation(line: 571, column: 15, scope: !4432)
!4451 = !DILocation(line: 571, column: 15, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4453, file: !241, line: 571, column: 15)
!4453 = distinct !DILexicalBlock(scope: !4432, file: !241, line: 571, column: 15)
!4454 = !DILocation(line: 571, column: 15, scope: !4453)
!4455 = !DILocation(line: 572, column: 15, scope: !4432)
!4456 = !DILocation(line: 572, column: 15, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4458, file: !241, line: 572, column: 15)
!4458 = distinct !DILexicalBlock(scope: !4432, file: !241, line: 572, column: 15)
!4459 = !DILocation(line: 572, column: 15, scope: !4458)
!4460 = !DILocation(line: 573, column: 40, scope: !4432)
!4461 = !DILocation(line: 574, column: 13, scope: !4432)
!4462 = !DILocation(line: 575, column: 11, scope: !4216)
!4463 = !DILocation(line: 599, column: 36, scope: !4216)
!4464 = !DILocation(line: 600, column: 11, scope: !4216)
!4465 = !DILocalVariable(name: "m", scope: !4466, file: !241, line: 610, type: !110)
!4466 = distinct !DILexicalBlock(scope: !4216, file: !241, line: 608, column: 11)
!4467 = !DILocation(line: 610, column: 20, scope: !4466)
!4468 = !DILocalVariable(name: "printable", scope: !4466, file: !241, line: 612, type: !18)
!4469 = !DILocation(line: 612, column: 18, scope: !4466)
!4470 = !DILocation(line: 614, column: 17, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4466, file: !241, line: 614, column: 17)
!4472 = !DILocation(line: 614, column: 17, scope: !4466)
!4473 = !DILocation(line: 616, column: 19, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4471, file: !241, line: 615, column: 15)
!4475 = !DILocation(line: 617, column: 29, scope: !4474)
!4476 = !DILocation(line: 617, column: 41, scope: !4474)
!4477 = !DILocation(line: 617, column: 27, scope: !4474)
!4478 = !DILocation(line: 618, column: 15, scope: !4474)
!4479 = !DILocalVariable(name: "mbstate", scope: !4480, file: !241, line: 621, type: !4481)
!4480 = distinct !DILexicalBlock(scope: !4471, file: !241, line: 620, column: 15)
!4481 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !4482, line: 6, baseType: !4483)
!4482 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h", directory: "")
!4483 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !4484, line: 21, baseType: !4485)
!4484 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", directory: "")
!4485 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4484, line: 13, size: 64, elements: !4486)
!4486 = !{!4487, !4488}
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !4485, file: !4484, line: 15, baseType: !53, size: 32)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !4485, file: !4484, line: 20, baseType: !4489, size: 32, offset: 32)
!4489 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4485, file: !4484, line: 16, size: 32, elements: !4490)
!4490 = !{!4491, !4492}
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !4489, file: !4484, line: 18, baseType: !180, size: 32)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !4489, file: !4484, line: 19, baseType: !82, size: 32)
!4493 = !DILocation(line: 621, column: 27, scope: !4480)
!4494 = !DILocation(line: 622, column: 17, scope: !4480)
!4495 = !DILocation(line: 624, column: 19, scope: !4480)
!4496 = !DILocation(line: 625, column: 27, scope: !4480)
!4497 = !DILocation(line: 626, column: 21, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !4480, file: !241, line: 626, column: 21)
!4499 = !DILocation(line: 626, column: 29, scope: !4498)
!4500 = !DILocation(line: 626, column: 21, scope: !4480)
!4501 = !DILocation(line: 627, column: 37, scope: !4498)
!4502 = !DILocation(line: 627, column: 29, scope: !4498)
!4503 = !DILocation(line: 627, column: 27, scope: !4498)
!4504 = !DILocation(line: 627, column: 19, scope: !4498)
!4505 = !DILocation(line: 629, column: 17, scope: !4480)
!4506 = !DILocalVariable(name: "w", scope: !4507, file: !241, line: 631, type: !4508)
!4507 = distinct !DILexicalBlock(scope: !4480, file: !241, line: 630, column: 19)
!4508 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !111, line: 74, baseType: !53)
!4509 = !DILocation(line: 631, column: 29, scope: !4507)
!4510 = !DILocalVariable(name: "bytes", scope: !4507, file: !241, line: 632, type: !110)
!4511 = !DILocation(line: 632, column: 28, scope: !4507)
!4512 = !DILocation(line: 632, column: 50, scope: !4507)
!4513 = !DILocation(line: 632, column: 54, scope: !4507)
!4514 = !DILocation(line: 632, column: 58, scope: !4507)
!4515 = !DILocation(line: 632, column: 56, scope: !4507)
!4516 = !DILocation(line: 633, column: 45, scope: !4507)
!4517 = !DILocation(line: 633, column: 56, scope: !4507)
!4518 = !DILocation(line: 633, column: 60, scope: !4507)
!4519 = !DILocation(line: 633, column: 58, scope: !4507)
!4520 = !DILocation(line: 633, column: 53, scope: !4507)
!4521 = !DILocation(line: 632, column: 36, scope: !4507)
!4522 = !DILocation(line: 634, column: 25, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4507, file: !241, line: 634, column: 25)
!4524 = !DILocation(line: 634, column: 31, scope: !4523)
!4525 = !DILocation(line: 634, column: 25, scope: !4507)
!4526 = !DILocation(line: 635, column: 23, scope: !4523)
!4527 = !DILocation(line: 636, column: 30, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4523, file: !241, line: 636, column: 30)
!4529 = !DILocation(line: 636, column: 36, scope: !4528)
!4530 = !DILocation(line: 636, column: 30, scope: !4523)
!4531 = !DILocation(line: 638, column: 35, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4528, file: !241, line: 637, column: 23)
!4533 = !DILocation(line: 639, column: 25, scope: !4532)
!4534 = !DILocation(line: 641, column: 30, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4528, file: !241, line: 641, column: 30)
!4536 = !DILocation(line: 641, column: 36, scope: !4535)
!4537 = !DILocation(line: 641, column: 30, scope: !4528)
!4538 = !DILocation(line: 643, column: 35, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4535, file: !241, line: 642, column: 23)
!4540 = !DILocation(line: 644, column: 25, scope: !4539)
!4541 = !DILocation(line: 644, column: 32, scope: !4539)
!4542 = !DILocation(line: 644, column: 36, scope: !4539)
!4543 = !DILocation(line: 644, column: 34, scope: !4539)
!4544 = !DILocation(line: 644, column: 40, scope: !4539)
!4545 = !DILocation(line: 644, column: 38, scope: !4539)
!4546 = !DILocation(line: 644, column: 48, scope: !4539)
!4547 = !DILocation(line: 644, column: 51, scope: !4539)
!4548 = !DILocation(line: 644, column: 55, scope: !4539)
!4549 = !DILocation(line: 644, column: 59, scope: !4539)
!4550 = !DILocation(line: 644, column: 57, scope: !4539)
!4551 = !DILocation(line: 0, scope: !4539)
!4552 = !DILocation(line: 645, column: 28, scope: !4539)
!4553 = distinct !{!4553, !4540, !4552}
!4554 = !DILocation(line: 646, column: 25, scope: !4539)
!4555 = !DILocation(line: 654, column: 44, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4557, file: !241, line: 654, column: 29)
!4557 = distinct !DILexicalBlock(scope: !4535, file: !241, line: 649, column: 23)
!4558 = !DILocation(line: 655, column: 29, scope: !4556)
!4559 = !DILocation(line: 655, column: 32, scope: !4556)
!4560 = !DILocation(line: 655, column: 46, scope: !4556)
!4561 = !DILocation(line: 654, column: 29, scope: !4557)
!4562 = !DILocalVariable(name: "j", scope: !4563, file: !241, line: 657, type: !110)
!4563 = distinct !DILexicalBlock(scope: !4556, file: !241, line: 656, column: 27)
!4564 = !DILocation(line: 657, column: 36, scope: !4563)
!4565 = !DILocation(line: 658, column: 36, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4563, file: !241, line: 658, column: 29)
!4567 = !DILocation(line: 658, column: 34, scope: !4566)
!4568 = !DILocation(line: 658, column: 41, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4566, file: !241, line: 658, column: 29)
!4570 = !DILocation(line: 658, column: 45, scope: !4569)
!4571 = !DILocation(line: 658, column: 43, scope: !4569)
!4572 = !DILocation(line: 658, column: 29, scope: !4566)
!4573 = !DILocation(line: 659, column: 39, scope: !4569)
!4574 = !DILocation(line: 659, column: 43, scope: !4569)
!4575 = !DILocation(line: 659, column: 47, scope: !4569)
!4576 = !DILocation(line: 659, column: 45, scope: !4569)
!4577 = !DILocation(line: 659, column: 51, scope: !4569)
!4578 = !DILocation(line: 659, column: 49, scope: !4569)
!4579 = !DILocation(line: 659, column: 31, scope: !4569)
!4580 = !DILocation(line: 663, column: 35, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4569, file: !241, line: 660, column: 33)
!4582 = !DILocation(line: 666, column: 35, scope: !4581)
!4583 = !DILocation(line: 667, column: 33, scope: !4581)
!4584 = !DILocation(line: 658, column: 53, scope: !4569)
!4585 = !DILocation(line: 658, column: 29, scope: !4569)
!4586 = distinct !{!4586, !4572, !4587}
!4587 = !DILocation(line: 667, column: 33, scope: !4566)
!4588 = !DILocation(line: 668, column: 27, scope: !4563)
!4589 = !DILocation(line: 670, column: 41, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4557, file: !241, line: 670, column: 29)
!4591 = !DILocation(line: 670, column: 31, scope: !4590)
!4592 = !DILocation(line: 670, column: 29, scope: !4557)
!4593 = !DILocation(line: 671, column: 37, scope: !4590)
!4594 = !DILocation(line: 671, column: 27, scope: !4590)
!4595 = !DILocation(line: 672, column: 30, scope: !4557)
!4596 = !DILocation(line: 672, column: 27, scope: !4557)
!4597 = !DILocation(line: 674, column: 19, scope: !4507)
!4598 = !DILocation(line: 675, column: 26, scope: !4480)
!4599 = !DILocation(line: 675, column: 24, scope: !4480)
!4600 = distinct !{!4600, !4505, !4601}
!4601 = !DILocation(line: 675, column: 44, scope: !4480)
!4602 = !DILocation(line: 678, column: 40, scope: !4466)
!4603 = !DILocation(line: 678, column: 38, scope: !4466)
!4604 = !DILocation(line: 680, column: 21, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4466, file: !241, line: 680, column: 17)
!4606 = !DILocation(line: 680, column: 19, scope: !4605)
!4607 = !DILocation(line: 680, column: 23, scope: !4605)
!4608 = !DILocation(line: 680, column: 27, scope: !4605)
!4609 = !DILocation(line: 680, column: 45, scope: !4605)
!4610 = !DILocation(line: 680, column: 50, scope: !4605)
!4611 = !DILocation(line: 680, column: 17, scope: !4466)
!4612 = !DILocalVariable(name: "ilim", scope: !4613, file: !241, line: 684, type: !110)
!4613 = distinct !DILexicalBlock(scope: !4605, file: !241, line: 681, column: 15)
!4614 = !DILocation(line: 684, column: 24, scope: !4613)
!4615 = !DILocation(line: 684, column: 31, scope: !4613)
!4616 = !DILocation(line: 684, column: 35, scope: !4613)
!4617 = !DILocation(line: 684, column: 33, scope: !4613)
!4618 = !DILocation(line: 686, column: 17, scope: !4613)
!4619 = !DILocation(line: 688, column: 25, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4621, file: !241, line: 688, column: 25)
!4621 = distinct !DILexicalBlock(scope: !4622, file: !241, line: 687, column: 19)
!4622 = distinct !DILexicalBlock(scope: !4623, file: !241, line: 686, column: 17)
!4623 = distinct !DILexicalBlock(scope: !4613, file: !241, line: 686, column: 17)
!4624 = !DILocation(line: 688, column: 43, scope: !4620)
!4625 = !DILocation(line: 688, column: 48, scope: !4620)
!4626 = !DILocation(line: 688, column: 25, scope: !4621)
!4627 = !DILocation(line: 690, column: 25, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4620, file: !241, line: 689, column: 23)
!4629 = !DILocation(line: 690, column: 25, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4631, file: !241, line: 690, column: 25)
!4631 = distinct !DILexicalBlock(scope: !4628, file: !241, line: 690, column: 25)
!4632 = !DILocation(line: 690, column: 25, scope: !4631)
!4633 = !DILocation(line: 690, column: 25, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4631, file: !241, line: 690, column: 25)
!4635 = !DILocation(line: 690, column: 25, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4634, file: !241, line: 690, column: 25)
!4637 = !DILocation(line: 690, column: 25, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4639, file: !241, line: 690, column: 25)
!4639 = distinct !DILexicalBlock(scope: !4636, file: !241, line: 690, column: 25)
!4640 = !DILocation(line: 690, column: 25, scope: !4639)
!4641 = !DILocation(line: 690, column: 25, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4643, file: !241, line: 690, column: 25)
!4643 = distinct !DILexicalBlock(scope: !4636, file: !241, line: 690, column: 25)
!4644 = !DILocation(line: 690, column: 25, scope: !4643)
!4645 = !DILocation(line: 690, column: 25, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4647, file: !241, line: 690, column: 25)
!4647 = distinct !DILexicalBlock(scope: !4636, file: !241, line: 690, column: 25)
!4648 = !DILocation(line: 690, column: 25, scope: !4647)
!4649 = !DILocation(line: 690, column: 25, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4651, file: !241, line: 690, column: 25)
!4651 = distinct !DILexicalBlock(scope: !4631, file: !241, line: 690, column: 25)
!4652 = !DILocation(line: 690, column: 25, scope: !4651)
!4653 = !DILocation(line: 691, column: 25, scope: !4628)
!4654 = !DILocation(line: 691, column: 25, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4656, file: !241, line: 691, column: 25)
!4656 = distinct !DILexicalBlock(scope: !4628, file: !241, line: 691, column: 25)
!4657 = !DILocation(line: 691, column: 25, scope: !4656)
!4658 = !DILocation(line: 692, column: 25, scope: !4628)
!4659 = !DILocation(line: 692, column: 25, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4661, file: !241, line: 692, column: 25)
!4661 = distinct !DILexicalBlock(scope: !4628, file: !241, line: 692, column: 25)
!4662 = !DILocation(line: 692, column: 25, scope: !4661)
!4663 = !DILocation(line: 693, column: 36, scope: !4628)
!4664 = !DILocation(line: 693, column: 38, scope: !4628)
!4665 = !DILocation(line: 693, column: 33, scope: !4628)
!4666 = !DILocation(line: 693, column: 29, scope: !4628)
!4667 = !DILocation(line: 693, column: 27, scope: !4628)
!4668 = !DILocation(line: 694, column: 23, scope: !4628)
!4669 = !DILocation(line: 695, column: 30, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4620, file: !241, line: 695, column: 30)
!4671 = !DILocation(line: 695, column: 30, scope: !4620)
!4672 = !DILocation(line: 697, column: 25, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4670, file: !241, line: 696, column: 23)
!4674 = !DILocation(line: 697, column: 25, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4676, file: !241, line: 697, column: 25)
!4676 = distinct !DILexicalBlock(scope: !4673, file: !241, line: 697, column: 25)
!4677 = !DILocation(line: 697, column: 25, scope: !4676)
!4678 = !DILocation(line: 698, column: 40, scope: !4673)
!4679 = !DILocation(line: 699, column: 23, scope: !4673)
!4680 = !DILocation(line: 700, column: 25, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4621, file: !241, line: 700, column: 25)
!4682 = !DILocation(line: 700, column: 33, scope: !4681)
!4683 = !DILocation(line: 700, column: 35, scope: !4681)
!4684 = !DILocation(line: 700, column: 30, scope: !4681)
!4685 = !DILocation(line: 700, column: 25, scope: !4621)
!4686 = !DILocation(line: 701, column: 23, scope: !4681)
!4687 = !DILocation(line: 702, column: 21, scope: !4621)
!4688 = !DILocation(line: 702, column: 21, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4690, file: !241, line: 702, column: 21)
!4690 = distinct !DILexicalBlock(scope: !4621, file: !241, line: 702, column: 21)
!4691 = !DILocation(line: 702, column: 21, scope: !4690)
!4692 = !DILocation(line: 702, column: 21, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4689, file: !241, line: 702, column: 21)
!4694 = !DILocation(line: 702, column: 21, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4696, file: !241, line: 702, column: 21)
!4696 = distinct !DILexicalBlock(scope: !4693, file: !241, line: 702, column: 21)
!4697 = !DILocation(line: 702, column: 21, scope: !4696)
!4698 = !DILocation(line: 702, column: 21, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4700, file: !241, line: 702, column: 21)
!4700 = distinct !DILexicalBlock(scope: !4693, file: !241, line: 702, column: 21)
!4701 = !DILocation(line: 702, column: 21, scope: !4700)
!4702 = !DILocation(line: 703, column: 21, scope: !4621)
!4703 = !DILocation(line: 703, column: 21, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4705, file: !241, line: 703, column: 21)
!4705 = distinct !DILexicalBlock(scope: !4621, file: !241, line: 703, column: 21)
!4706 = !DILocation(line: 703, column: 21, scope: !4705)
!4707 = !DILocation(line: 704, column: 25, scope: !4621)
!4708 = !DILocation(line: 704, column: 29, scope: !4621)
!4709 = !DILocation(line: 704, column: 23, scope: !4621)
!4710 = !DILocation(line: 686, column: 17, scope: !4622)
!4711 = distinct !{!4711, !4712, !4713}
!4712 = !DILocation(line: 686, column: 17, scope: !4623)
!4713 = !DILocation(line: 705, column: 19, scope: !4623)
!4714 = !DILocation(line: 707, column: 17, scope: !4613)
!4715 = !DILocation(line: 710, column: 9, scope: !4216)
!4716 = !DILocation(line: 712, column: 16, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4162, file: !241, line: 712, column: 11)
!4718 = !DILocation(line: 712, column: 34, scope: !4717)
!4719 = !DILocation(line: 712, column: 37, scope: !4717)
!4720 = !DILocation(line: 712, column: 51, scope: !4717)
!4721 = !DILocation(line: 713, column: 15, scope: !4717)
!4722 = !DILocation(line: 713, column: 18, scope: !4717)
!4723 = !DILocation(line: 714, column: 14, scope: !4717)
!4724 = !DILocation(line: 714, column: 17, scope: !4717)
!4725 = !DILocation(line: 715, column: 14, scope: !4717)
!4726 = !DILocation(line: 715, column: 17, scope: !4717)
!4727 = !DILocation(line: 715, column: 33, scope: !4717)
!4728 = !DILocation(line: 715, column: 35, scope: !4717)
!4729 = !DILocation(line: 715, column: 51, scope: !4717)
!4730 = !DILocation(line: 715, column: 53, scope: !4717)
!4731 = !DILocation(line: 715, column: 47, scope: !4717)
!4732 = !DILocation(line: 715, column: 65, scope: !4717)
!4733 = !DILocation(line: 716, column: 11, scope: !4717)
!4734 = !DILocation(line: 716, column: 15, scope: !4717)
!4735 = !DILocation(line: 712, column: 11, scope: !4162)
!4736 = !DILocation(line: 717, column: 9, scope: !4717)
!4737 = !DILabel(scope: !4162, name: "store_escape", file: !241, line: 719)
!4738 = !DILocation(line: 719, column: 5, scope: !4162)
!4739 = !DILocation(line: 720, column: 7, scope: !4162)
!4740 = !DILocation(line: 720, column: 7, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4742, file: !241, line: 720, column: 7)
!4742 = distinct !DILexicalBlock(scope: !4162, file: !241, line: 720, column: 7)
!4743 = !DILocation(line: 720, column: 7, scope: !4742)
!4744 = !DILocation(line: 720, column: 7, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4742, file: !241, line: 720, column: 7)
!4746 = !DILocation(line: 720, column: 7, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4745, file: !241, line: 720, column: 7)
!4748 = !DILocation(line: 720, column: 7, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4750, file: !241, line: 720, column: 7)
!4750 = distinct !DILexicalBlock(scope: !4747, file: !241, line: 720, column: 7)
!4751 = !DILocation(line: 720, column: 7, scope: !4750)
!4752 = !DILocation(line: 720, column: 7, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4754, file: !241, line: 720, column: 7)
!4754 = distinct !DILexicalBlock(scope: !4747, file: !241, line: 720, column: 7)
!4755 = !DILocation(line: 720, column: 7, scope: !4754)
!4756 = !DILocation(line: 720, column: 7, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4758, file: !241, line: 720, column: 7)
!4758 = distinct !DILexicalBlock(scope: !4747, file: !241, line: 720, column: 7)
!4759 = !DILocation(line: 720, column: 7, scope: !4758)
!4760 = !DILocation(line: 720, column: 7, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4762, file: !241, line: 720, column: 7)
!4762 = distinct !DILexicalBlock(scope: !4742, file: !241, line: 720, column: 7)
!4763 = !DILocation(line: 720, column: 7, scope: !4762)
!4764 = !DILabel(scope: !4162, name: "store_c", file: !241, line: 722)
!4765 = !DILocation(line: 722, column: 5, scope: !4162)
!4766 = !DILocation(line: 723, column: 7, scope: !4162)
!4767 = !DILocation(line: 723, column: 7, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4769, file: !241, line: 723, column: 7)
!4769 = distinct !DILexicalBlock(scope: !4162, file: !241, line: 723, column: 7)
!4770 = !DILocation(line: 723, column: 7, scope: !4769)
!4771 = !DILocation(line: 723, column: 7, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4768, file: !241, line: 723, column: 7)
!4773 = !DILocation(line: 723, column: 7, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4775, file: !241, line: 723, column: 7)
!4775 = distinct !DILexicalBlock(scope: !4772, file: !241, line: 723, column: 7)
!4776 = !DILocation(line: 723, column: 7, scope: !4775)
!4777 = !DILocation(line: 723, column: 7, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4779, file: !241, line: 723, column: 7)
!4779 = distinct !DILexicalBlock(scope: !4772, file: !241, line: 723, column: 7)
!4780 = !DILocation(line: 723, column: 7, scope: !4779)
!4781 = !DILocation(line: 724, column: 7, scope: !4162)
!4782 = !DILocation(line: 724, column: 7, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4784, file: !241, line: 724, column: 7)
!4784 = distinct !DILexicalBlock(scope: !4162, file: !241, line: 724, column: 7)
!4785 = !DILocation(line: 724, column: 7, scope: !4784)
!4786 = !DILocation(line: 726, column: 13, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4162, file: !241, line: 726, column: 11)
!4788 = !DILocation(line: 726, column: 11, scope: !4162)
!4789 = !DILocation(line: 727, column: 38, scope: !4787)
!4790 = !DILocation(line: 727, column: 9, scope: !4787)
!4791 = !DILocation(line: 728, column: 5, scope: !4162)
!4792 = !DILocation(line: 400, column: 75, scope: !4151)
!4793 = !DILocation(line: 400, column: 3, scope: !4151)
!4794 = distinct !{!4794, !4160, !4795}
!4795 = !DILocation(line: 728, column: 5, scope: !4148)
!4796 = !DILocation(line: 730, column: 7, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4008, file: !241, line: 730, column: 7)
!4798 = !DILocation(line: 730, column: 11, scope: !4797)
!4799 = !DILocation(line: 730, column: 16, scope: !4797)
!4800 = !DILocation(line: 730, column: 19, scope: !4797)
!4801 = !DILocation(line: 730, column: 33, scope: !4797)
!4802 = !DILocation(line: 731, column: 7, scope: !4797)
!4803 = !DILocation(line: 731, column: 10, scope: !4797)
!4804 = !DILocation(line: 730, column: 7, scope: !4008)
!4805 = !DILocation(line: 732, column: 5, scope: !4797)
!4806 = !DILocation(line: 738, column: 7, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4008, file: !241, line: 738, column: 7)
!4808 = !DILocation(line: 738, column: 21, scope: !4807)
!4809 = !DILocation(line: 738, column: 51, scope: !4807)
!4810 = !DILocation(line: 738, column: 56, scope: !4807)
!4811 = !DILocation(line: 739, column: 7, scope: !4807)
!4812 = !DILocation(line: 739, column: 10, scope: !4807)
!4813 = !DILocation(line: 738, column: 7, scope: !4008)
!4814 = !DILocation(line: 741, column: 11, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4816, file: !241, line: 741, column: 11)
!4816 = distinct !DILexicalBlock(scope: !4807, file: !241, line: 740, column: 5)
!4817 = !DILocation(line: 741, column: 11, scope: !4816)
!4818 = !DILocation(line: 742, column: 42, scope: !4815)
!4819 = !DILocation(line: 742, column: 50, scope: !4815)
!4820 = !DILocation(line: 742, column: 67, scope: !4815)
!4821 = !DILocation(line: 742, column: 72, scope: !4815)
!4822 = !DILocation(line: 744, column: 42, scope: !4815)
!4823 = !DILocation(line: 744, column: 49, scope: !4815)
!4824 = !DILocation(line: 745, column: 42, scope: !4815)
!4825 = !DILocation(line: 745, column: 54, scope: !4815)
!4826 = !DILocation(line: 742, column: 16, scope: !4815)
!4827 = !DILocation(line: 742, column: 9, scope: !4815)
!4828 = !DILocation(line: 746, column: 18, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4815, file: !241, line: 746, column: 16)
!4830 = !DILocation(line: 746, column: 29, scope: !4829)
!4831 = !DILocation(line: 746, column: 32, scope: !4829)
!4832 = !DILocation(line: 746, column: 16, scope: !4815)
!4833 = !DILocation(line: 749, column: 24, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4829, file: !241, line: 747, column: 9)
!4835 = !DILocation(line: 749, column: 22, scope: !4834)
!4836 = !DILocation(line: 750, column: 15, scope: !4834)
!4837 = !DILocation(line: 751, column: 11, scope: !4834)
!4838 = !DILocation(line: 753, column: 5, scope: !4816)
!4839 = !DILocation(line: 755, column: 7, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4008, file: !241, line: 755, column: 7)
!4841 = !DILocation(line: 755, column: 20, scope: !4840)
!4842 = !DILocation(line: 755, column: 24, scope: !4840)
!4843 = !DILocation(line: 755, column: 7, scope: !4008)
!4844 = !DILocation(line: 756, column: 5, scope: !4840)
!4845 = !DILocation(line: 756, column: 13, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4847, file: !241, line: 756, column: 5)
!4847 = distinct !DILexicalBlock(scope: !4840, file: !241, line: 756, column: 5)
!4848 = !DILocation(line: 756, column: 12, scope: !4846)
!4849 = !DILocation(line: 756, column: 5, scope: !4847)
!4850 = !DILocation(line: 757, column: 7, scope: !4846)
!4851 = !DILocation(line: 757, column: 7, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4853, file: !241, line: 757, column: 7)
!4853 = distinct !DILexicalBlock(scope: !4846, file: !241, line: 757, column: 7)
!4854 = !DILocation(line: 757, column: 7, scope: !4853)
!4855 = !DILocation(line: 756, column: 39, scope: !4846)
!4856 = !DILocation(line: 756, column: 5, scope: !4846)
!4857 = distinct !{!4857, !4849, !4858}
!4858 = !DILocation(line: 757, column: 7, scope: !4847)
!4859 = !DILocation(line: 759, column: 7, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4008, file: !241, line: 759, column: 7)
!4861 = !DILocation(line: 759, column: 13, scope: !4860)
!4862 = !DILocation(line: 759, column: 11, scope: !4860)
!4863 = !DILocation(line: 759, column: 7, scope: !4008)
!4864 = !DILocation(line: 760, column: 5, scope: !4860)
!4865 = !DILocation(line: 760, column: 12, scope: !4860)
!4866 = !DILocation(line: 760, column: 17, scope: !4860)
!4867 = !DILocation(line: 761, column: 10, scope: !4008)
!4868 = !DILocation(line: 761, column: 3, scope: !4008)
!4869 = !DILabel(scope: !4008, name: "force_outer_quoting_style", file: !241, line: 763)
!4870 = !DILocation(line: 763, column: 2, scope: !4008)
!4871 = !DILocation(line: 766, column: 7, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4008, file: !241, line: 766, column: 7)
!4873 = !DILocation(line: 766, column: 21, scope: !4872)
!4874 = !DILocation(line: 766, column: 51, scope: !4872)
!4875 = !DILocation(line: 766, column: 54, scope: !4872)
!4876 = !DILocation(line: 766, column: 7, scope: !4008)
!4877 = !DILocation(line: 767, column: 19, scope: !4872)
!4878 = !DILocation(line: 767, column: 5, scope: !4872)
!4879 = !DILocation(line: 768, column: 36, scope: !4008)
!4880 = !DILocation(line: 768, column: 44, scope: !4008)
!4881 = !DILocation(line: 768, column: 56, scope: !4008)
!4882 = !DILocation(line: 768, column: 61, scope: !4008)
!4883 = !DILocation(line: 769, column: 36, scope: !4008)
!4884 = !DILocation(line: 770, column: 36, scope: !4008)
!4885 = !DILocation(line: 770, column: 42, scope: !4008)
!4886 = !DILocation(line: 771, column: 36, scope: !4008)
!4887 = !DILocation(line: 771, column: 48, scope: !4008)
!4888 = !DILocation(line: 768, column: 10, scope: !4008)
!4889 = !DILocation(line: 768, column: 3, scope: !4008)
!4890 = !DILocation(line: 772, column: 1, scope: !4008)
!4891 = !DILocalVariable(name: "buffer", arg: 1, scope: !4892, file: !241, line: 256, type: !6)
!4892 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !241, file: !241, line: 256, type: !4009, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4893, retainedNodes: !4)
!4893 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !4894, nameTableKind: None)
!4894 = !{!4895, !4897, !4899, !4908, !4910, !4912, !4919, !4921}
!4895 = !DIGlobalVariableExpression(var: !4896, expr: !DIExpression())
!4896 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !4893, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!4897 = !DIGlobalVariableExpression(var: !4898, expr: !DIExpression())
!4898 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !4893, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!4899 = !DIGlobalVariableExpression(var: !4900, expr: !DIExpression())
!4900 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !4893, file: !241, line: 1052, type: !4901, isLocal: false, isDefinition: true)
!4901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !4902)
!4902 = !{!4903, !4904, !4905, !4906, !4907}
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !4901, file: !241, line: 68, baseType: !223, size: 32)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4901, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !4901, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !4901, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !4901, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!4908 = !DIGlobalVariableExpression(var: !4909, expr: !DIExpression())
!4909 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !4893, file: !241, line: 116, type: !4901, isLocal: true, isDefinition: true)
!4910 = !DIGlobalVariableExpression(var: !4911, expr: !DIExpression())
!4911 = distinct !DIGlobalVariable(name: "slot0", scope: !4893, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!4912 = !DIGlobalVariableExpression(var: !4913, expr: !DIExpression())
!4913 = distinct !DIGlobalVariable(name: "slotvec", scope: !4893, file: !241, line: 845, type: !4914, isLocal: true, isDefinition: true)
!4914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4915, size: 64)
!4915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !4916)
!4916 = !{!4917, !4918}
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4915, file: !241, line: 836, baseType: !110, size: 64)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4915, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!4919 = !DIGlobalVariableExpression(var: !4920, expr: !DIExpression())
!4920 = distinct !DIGlobalVariable(name: "nslots", scope: !4893, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!4921 = !DIGlobalVariableExpression(var: !4922, expr: !DIExpression())
!4922 = distinct !DIGlobalVariable(name: "slotvec0", scope: !4893, file: !241, line: 844, type: !4915, isLocal: true, isDefinition: true)
!4923 = !DILocalVariable(name: "buffersize", arg: 2, scope: !4892, file: !241, line: 256, type: !110)
!4924 = !DILocalVariable(name: "arg", arg: 3, scope: !4892, file: !241, line: 257, type: !49)
!4925 = !DILocalVariable(name: "argsize", arg: 4, scope: !4892, file: !241, line: 257, type: !110)
!4926 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !4892, file: !241, line: 258, type: !223)
!4927 = !DILocalVariable(name: "flags", arg: 6, scope: !4892, file: !241, line: 258, type: !53)
!4928 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !4892, file: !241, line: 259, type: !4011)
!4929 = !DILocalVariable(name: "left_quote", arg: 8, scope: !4892, file: !241, line: 260, type: !49)
!4930 = !DILocalVariable(name: "right_quote", arg: 9, scope: !4892, file: !241, line: 261, type: !49)
!4931 = !DILocalVariable(name: "i", scope: !4892, file: !241, line: 263, type: !110)
!4932 = !DILocalVariable(name: "len", scope: !4892, file: !241, line: 264, type: !110)
!4933 = !DILocalVariable(name: "orig_buffersize", scope: !4892, file: !241, line: 265, type: !110)
!4934 = !DILocalVariable(name: "quote_string", scope: !4892, file: !241, line: 266, type: !49)
!4935 = !DILocalVariable(name: "quote_string_len", scope: !4892, file: !241, line: 267, type: !110)
!4936 = !DILocalVariable(name: "backslash_escapes", scope: !4892, file: !241, line: 268, type: !18)
!4937 = !DILocalVariable(name: "unibyte_locale", scope: !4892, file: !241, line: 269, type: !18)
!4938 = !DILocalVariable(name: "elide_outer_quotes", scope: !4892, file: !241, line: 270, type: !18)
!4939 = !DILocalVariable(name: "pending_shell_escape_end", scope: !4892, file: !241, line: 271, type: !18)
!4940 = !DILocalVariable(name: "encountered_single_quote", scope: !4892, file: !241, line: 272, type: !18)
!4941 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !4892, file: !241, line: 273, type: !18)
!4942 = !DILocalVariable(name: "escaping", scope: !4943, file: !241, line: 405, type: !18)
!4943 = distinct !DILexicalBlock(scope: !4944, file: !241, line: 401, column: 5)
!4944 = distinct !DILexicalBlock(scope: !4945, file: !241, line: 400, column: 3)
!4945 = distinct !DILexicalBlock(scope: !4946, file: !241, line: 400, column: 3)
!4946 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !241, file: !241, line: 256, type: !4009, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4947, retainedNodes: !4)
!4947 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !4948, nameTableKind: None)
!4948 = !{!4949, !4951, !4953, !4962, !4964, !4966, !4973, !4975}
!4949 = !DIGlobalVariableExpression(var: !4950, expr: !DIExpression())
!4950 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !4947, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!4951 = !DIGlobalVariableExpression(var: !4952, expr: !DIExpression())
!4952 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !4947, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!4953 = !DIGlobalVariableExpression(var: !4954, expr: !DIExpression())
!4954 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !4947, file: !241, line: 1052, type: !4955, isLocal: false, isDefinition: true)
!4955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !4956)
!4956 = !{!4957, !4958, !4959, !4960, !4961}
!4957 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !4955, file: !241, line: 68, baseType: !223, size: 32)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4955, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !4955, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !4955, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !4955, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!4962 = !DIGlobalVariableExpression(var: !4963, expr: !DIExpression())
!4963 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !4947, file: !241, line: 116, type: !4955, isLocal: true, isDefinition: true)
!4964 = !DIGlobalVariableExpression(var: !4965, expr: !DIExpression())
!4965 = distinct !DIGlobalVariable(name: "slot0", scope: !4947, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!4966 = !DIGlobalVariableExpression(var: !4967, expr: !DIExpression())
!4967 = distinct !DIGlobalVariable(name: "slotvec", scope: !4947, file: !241, line: 845, type: !4968, isLocal: true, isDefinition: true)
!4968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4969, size: 64)
!4969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !4970)
!4970 = !{!4971, !4972}
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4969, file: !241, line: 836, baseType: !110, size: 64)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4969, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!4973 = !DIGlobalVariableExpression(var: !4974, expr: !DIExpression())
!4974 = distinct !DIGlobalVariable(name: "nslots", scope: !4947, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!4975 = !DIGlobalVariableExpression(var: !4976, expr: !DIExpression())
!4976 = distinct !DIGlobalVariable(name: "slotvec0", scope: !4947, file: !241, line: 844, type: !4969, isLocal: true, isDefinition: true)
!4977 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !4943, file: !241, line: 406, type: !18)
!4978 = distinct !DISubprogram(name: "gettext_quote", scope: !241, file: !241, line: 207, type: !4979, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4979 = !DISubroutineType(types: !4980)
!4980 = !{!49, !49, !223}
!4981 = !DILocalVariable(name: "msgid", arg: 1, scope: !4978, file: !241, line: 207, type: !49)
!4982 = !DILocation(line: 207, column: 28, scope: !4978)
!4983 = !DILocalVariable(name: "s", arg: 2, scope: !4978, file: !241, line: 207, type: !223)
!4984 = !DILocation(line: 207, column: 54, scope: !4978)
!4985 = !DILocalVariable(name: "translation", scope: !4978, file: !241, line: 209, type: !49)
!4986 = !DILocation(line: 209, column: 15, scope: !4978)
!4987 = !DILocation(line: 209, column: 29, scope: !4978)
!4988 = !DILocalVariable(name: "locale_code", scope: !4978, file: !241, line: 210, type: !49)
!4989 = !DILocation(line: 210, column: 15, scope: !4978)
!4990 = !DILocation(line: 212, column: 7, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4978, file: !241, line: 212, column: 7)
!4992 = !DILocation(line: 212, column: 22, scope: !4991)
!4993 = !DILocation(line: 212, column: 19, scope: !4991)
!4994 = !DILocation(line: 212, column: 7, scope: !4978)
!4995 = !DILocation(line: 213, column: 12, scope: !4991)
!4996 = !DILocation(line: 213, column: 5, scope: !4991)
!4997 = !DILocation(line: 233, column: 17, scope: !4978)
!4998 = !DILocation(line: 233, column: 15, scope: !4978)
!4999 = !DILocation(line: 234, column: 7, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4978, file: !241, line: 234, column: 7)
!5001 = !DILocation(line: 234, column: 7, scope: !4978)
!5002 = !DILocation(line: 235, column: 12, scope: !5000)
!5003 = !DILocation(line: 235, column: 21, scope: !5000)
!5004 = !DILocation(line: 235, column: 5, scope: !5000)
!5005 = !DILocation(line: 236, column: 7, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4978, file: !241, line: 236, column: 7)
!5007 = !DILocation(line: 236, column: 7, scope: !4978)
!5008 = !DILocation(line: 237, column: 12, scope: !5006)
!5009 = !DILocation(line: 237, column: 21, scope: !5006)
!5010 = !DILocation(line: 237, column: 5, scope: !5006)
!5011 = !DILocation(line: 239, column: 11, scope: !4978)
!5012 = !DILocation(line: 239, column: 13, scope: !4978)
!5013 = !DILocation(line: 239, column: 3, scope: !4978)
!5014 = !DILocation(line: 240, column: 1, scope: !4978)
!5015 = !DILocalVariable(name: "msgid", arg: 1, scope: !5016, file: !241, line: 207, type: !49)
!5016 = distinct !DISubprogram(name: "gettext_quote", scope: !241, file: !241, line: 207, type: !4979, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5017, retainedNodes: !4)
!5017 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !5018, nameTableKind: None)
!5018 = !{!5019, !5021, !5023, !5032, !5034, !5036, !5043, !5045}
!5019 = !DIGlobalVariableExpression(var: !5020, expr: !DIExpression())
!5020 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !5017, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!5021 = !DIGlobalVariableExpression(var: !5022, expr: !DIExpression())
!5022 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !5017, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!5023 = !DIGlobalVariableExpression(var: !5024, expr: !DIExpression())
!5024 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !5017, file: !241, line: 1052, type: !5025, isLocal: false, isDefinition: true)
!5025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !5026)
!5026 = !{!5027, !5028, !5029, !5030, !5031}
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !5025, file: !241, line: 68, baseType: !223, size: 32)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5025, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !5025, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !5025, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !5025, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!5032 = !DIGlobalVariableExpression(var: !5033, expr: !DIExpression())
!5033 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !5017, file: !241, line: 116, type: !5025, isLocal: true, isDefinition: true)
!5034 = !DIGlobalVariableExpression(var: !5035, expr: !DIExpression())
!5035 = distinct !DIGlobalVariable(name: "slot0", scope: !5017, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!5036 = !DIGlobalVariableExpression(var: !5037, expr: !DIExpression())
!5037 = distinct !DIGlobalVariable(name: "slotvec", scope: !5017, file: !241, line: 845, type: !5038, isLocal: true, isDefinition: true)
!5038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5039, size: 64)
!5039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !5040)
!5040 = !{!5041, !5042}
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5039, file: !241, line: 836, baseType: !110, size: 64)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5039, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!5043 = !DIGlobalVariableExpression(var: !5044, expr: !DIExpression())
!5044 = distinct !DIGlobalVariable(name: "nslots", scope: !5017, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!5045 = !DIGlobalVariableExpression(var: !5046, expr: !DIExpression())
!5046 = distinct !DIGlobalVariable(name: "slotvec0", scope: !5017, file: !241, line: 844, type: !5039, isLocal: true, isDefinition: true)
!5047 = !DILocalVariable(name: "s", arg: 2, scope: !5016, file: !241, line: 207, type: !223)
!5048 = !DILocalVariable(name: "translation", scope: !5016, file: !241, line: 209, type: !49)
!5049 = !DILocalVariable(name: "locale_code", scope: !5016, file: !241, line: 210, type: !49)
!5050 = distinct !DISubprogram(name: "quotearg_char", scope: !241, file: !241, line: 991, type: !5051, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!5051 = !DISubroutineType(types: !5052)
!5052 = !{!6, !49, !7}
!5053 = !DILocalVariable(name: "arg", arg: 1, scope: !5050, file: !241, line: 991, type: !49)
!5054 = !DILocation(line: 991, column: 28, scope: !5050)
!5055 = !DILocalVariable(name: "ch", arg: 2, scope: !5050, file: !241, line: 991, type: !7)
!5056 = !DILocation(line: 991, column: 38, scope: !5050)
!5057 = !DILocation(line: 993, column: 29, scope: !5050)
!5058 = !DILocation(line: 993, column: 44, scope: !5050)
!5059 = !DILocation(line: 993, column: 10, scope: !5050)
!5060 = !DILocation(line: 993, column: 3, scope: !5050)
!5061 = distinct !DISubprogram(name: "quotearg_colon", scope: !241, file: !241, line: 997, type: !3367, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!5062 = !DILocalVariable(name: "arg", arg: 1, scope: !5061, file: !241, line: 997, type: !49)
!5063 = !DILocation(line: 997, column: 29, scope: !5061)
!5064 = !DILocation(line: 999, column: 25, scope: !5061)
!5065 = !DILocation(line: 999, column: 10, scope: !5061)
!5066 = !DILocation(line: 999, column: 3, scope: !5061)
!5067 = !DILocalVariable(name: "arg", arg: 1, scope: !5068, file: !241, line: 997, type: !49)
!5068 = distinct !DISubprogram(name: "quotearg_colon", scope: !241, file: !241, line: 997, type: !3367, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5069, retainedNodes: !4)
!5069 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !5070, nameTableKind: None)
!5070 = !{!5071, !5073, !5075, !5084, !5086, !5088, !5095, !5097}
!5071 = !DIGlobalVariableExpression(var: !5072, expr: !DIExpression())
!5072 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !5069, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!5073 = !DIGlobalVariableExpression(var: !5074, expr: !DIExpression())
!5074 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !5069, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!5075 = !DIGlobalVariableExpression(var: !5076, expr: !DIExpression())
!5076 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !5069, file: !241, line: 1052, type: !5077, isLocal: false, isDefinition: true)
!5077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !5078)
!5078 = !{!5079, !5080, !5081, !5082, !5083}
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !5077, file: !241, line: 68, baseType: !223, size: 32)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5077, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !5077, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !5077, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !5077, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!5084 = !DIGlobalVariableExpression(var: !5085, expr: !DIExpression())
!5085 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !5069, file: !241, line: 116, type: !5077, isLocal: true, isDefinition: true)
!5086 = !DIGlobalVariableExpression(var: !5087, expr: !DIExpression())
!5087 = distinct !DIGlobalVariable(name: "slot0", scope: !5069, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!5088 = !DIGlobalVariableExpression(var: !5089, expr: !DIExpression())
!5089 = distinct !DIGlobalVariable(name: "slotvec", scope: !5069, file: !241, line: 845, type: !5090, isLocal: true, isDefinition: true)
!5090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5091, size: 64)
!5091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !5092)
!5092 = !{!5093, !5094}
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5091, file: !241, line: 836, baseType: !110, size: 64)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5091, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!5095 = !DIGlobalVariableExpression(var: !5096, expr: !DIExpression())
!5096 = distinct !DIGlobalVariable(name: "nslots", scope: !5069, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!5097 = !DIGlobalVariableExpression(var: !5098, expr: !DIExpression())
!5098 = distinct !DIGlobalVariable(name: "slotvec0", scope: !5069, file: !241, line: 844, type: !5091, isLocal: true, isDefinition: true)
!5099 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !241, file: !241, line: 1009, type: !5100, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!5100 = !DISubroutineType(types: !5101)
!5101 = !{!6, !53, !223, !49}
!5102 = !DILocalVariable(name: "n", arg: 1, scope: !5099, file: !241, line: 1009, type: !53)
!5103 = !DILocation(line: 1009, column: 29, scope: !5099)
!5104 = !DILocalVariable(name: "s", arg: 2, scope: !5099, file: !241, line: 1009, type: !223)
!5105 = !DILocation(line: 1009, column: 51, scope: !5099)
!5106 = !DILocalVariable(name: "arg", arg: 3, scope: !5099, file: !241, line: 1009, type: !49)
!5107 = !DILocation(line: 1009, column: 66, scope: !5099)
!5108 = !DILocalVariable(name: "options", scope: !5099, file: !241, line: 1011, type: !254)
!5109 = !DILocation(line: 1011, column: 26, scope: !5099)
!5110 = !DILocation(line: 1012, column: 41, scope: !5099)
!5111 = !DILocation(line: 1012, column: 13, scope: !5099)
!5112 = !DILocation(line: 1013, column: 3, scope: !5099)
!5113 = !DILocation(line: 1014, column: 30, scope: !5099)
!5114 = !DILocation(line: 1014, column: 33, scope: !5099)
!5115 = !DILocation(line: 1014, column: 10, scope: !5099)
!5116 = !DILocation(line: 1014, column: 3, scope: !5099)
!5117 = !DILocalVariable(name: "n", arg: 1, scope: !5118, file: !241, line: 1009, type: !53)
!5118 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !241, file: !241, line: 1009, type: !5100, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5119, retainedNodes: !4)
!5119 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !5120, nameTableKind: None)
!5120 = !{!5121, !5123, !5125, !5134, !5136, !5138, !5145, !5147}
!5121 = !DIGlobalVariableExpression(var: !5122, expr: !DIExpression())
!5122 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !5119, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!5123 = !DIGlobalVariableExpression(var: !5124, expr: !DIExpression())
!5124 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !5119, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!5125 = !DIGlobalVariableExpression(var: !5126, expr: !DIExpression())
!5126 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !5119, file: !241, line: 1052, type: !5127, isLocal: false, isDefinition: true)
!5127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !5128)
!5128 = !{!5129, !5130, !5131, !5132, !5133}
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !5127, file: !241, line: 68, baseType: !223, size: 32)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5127, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !5127, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !5127, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !5127, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!5134 = !DIGlobalVariableExpression(var: !5135, expr: !DIExpression())
!5135 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !5119, file: !241, line: 116, type: !5127, isLocal: true, isDefinition: true)
!5136 = !DIGlobalVariableExpression(var: !5137, expr: !DIExpression())
!5137 = distinct !DIGlobalVariable(name: "slot0", scope: !5119, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!5138 = !DIGlobalVariableExpression(var: !5139, expr: !DIExpression())
!5139 = distinct !DIGlobalVariable(name: "slotvec", scope: !5119, file: !241, line: 845, type: !5140, isLocal: true, isDefinition: true)
!5140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5141, size: 64)
!5141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !5142)
!5142 = !{!5143, !5144}
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5141, file: !241, line: 836, baseType: !110, size: 64)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5141, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!5145 = !DIGlobalVariableExpression(var: !5146, expr: !DIExpression())
!5146 = distinct !DIGlobalVariable(name: "nslots", scope: !5119, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!5147 = !DIGlobalVariableExpression(var: !5148, expr: !DIExpression())
!5148 = distinct !DIGlobalVariable(name: "slotvec0", scope: !5119, file: !241, line: 844, type: !5141, isLocal: true, isDefinition: true)
!5149 = !DILocalVariable(name: "s", arg: 2, scope: !5118, file: !241, line: 1009, type: !223)
!5150 = !DILocalVariable(name: "arg", arg: 3, scope: !5118, file: !241, line: 1009, type: !49)
!5151 = !DILocalVariable(name: "options", scope: !5118, file: !241, line: 1011, type: !5127)
!5152 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !241, file: !241, line: 193, type: !5153, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!5153 = !DISubroutineType(types: !5154)
!5154 = !{!254, !223}
!5155 = !DILocalVariable(name: "style", arg: 1, scope: !5152, file: !241, line: 193, type: !223)
!5156 = !DILocation(line: 193, column: 48, scope: !5152)
!5157 = !DILocalVariable(name: "o", scope: !5152, file: !241, line: 195, type: !254)
!5158 = !DILocation(line: 195, column: 26, scope: !5152)
!5159 = !DILocation(line: 196, column: 7, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5152, file: !241, line: 196, column: 7)
!5161 = !DILocation(line: 196, column: 13, scope: !5160)
!5162 = !DILocation(line: 196, column: 7, scope: !5152)
!5163 = !DILocation(line: 197, column: 5, scope: !5160)
!5164 = !DILocation(line: 198, column: 13, scope: !5152)
!5165 = !DILocation(line: 198, column: 5, scope: !5152)
!5166 = !DILocation(line: 198, column: 11, scope: !5152)
!5167 = !DILocation(line: 199, column: 3, scope: !5152)
!5168 = !DILocalVariable(name: "style", arg: 1, scope: !5169, file: !241, line: 193, type: !223)
!5169 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !241, file: !241, line: 193, type: !5170, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5179, retainedNodes: !4)
!5170 = !DISubroutineType(types: !5171)
!5171 = !{!5172, !223}
!5172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !5173)
!5173 = !{!5174, !5175, !5176, !5177, !5178}
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !5172, file: !241, line: 68, baseType: !223, size: 32)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5172, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !5172, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !5172, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !5172, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!5179 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !5180, nameTableKind: None)
!5180 = !{!5181, !5183, !5185, !5187, !5189, !5191, !5198, !5200}
!5181 = !DIGlobalVariableExpression(var: !5182, expr: !DIExpression())
!5182 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !5179, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!5183 = !DIGlobalVariableExpression(var: !5184, expr: !DIExpression())
!5184 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !5179, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!5185 = !DIGlobalVariableExpression(var: !5186, expr: !DIExpression())
!5186 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !5179, file: !241, line: 1052, type: !5172, isLocal: false, isDefinition: true)
!5187 = !DIGlobalVariableExpression(var: !5188, expr: !DIExpression())
!5188 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !5179, file: !241, line: 116, type: !5172, isLocal: true, isDefinition: true)
!5189 = !DIGlobalVariableExpression(var: !5190, expr: !DIExpression())
!5190 = distinct !DIGlobalVariable(name: "slot0", scope: !5179, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!5191 = !DIGlobalVariableExpression(var: !5192, expr: !DIExpression())
!5192 = distinct !DIGlobalVariable(name: "slotvec", scope: !5179, file: !241, line: 845, type: !5193, isLocal: true, isDefinition: true)
!5193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5194, size: 64)
!5194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !5195)
!5195 = !{!5196, !5197}
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5194, file: !241, line: 836, baseType: !110, size: 64)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5194, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!5198 = !DIGlobalVariableExpression(var: !5199, expr: !DIExpression())
!5199 = distinct !DIGlobalVariable(name: "nslots", scope: !5179, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!5200 = !DIGlobalVariableExpression(var: !5201, expr: !DIExpression())
!5201 = distinct !DIGlobalVariable(name: "slotvec0", scope: !5179, file: !241, line: 844, type: !5194, isLocal: true, isDefinition: true)
!5202 = !DILocalVariable(name: "o", scope: !5169, file: !241, line: 195, type: !5172)
!5203 = distinct !DISubprogram(name: "quote_n_mem", scope: !241, file: !241, line: 1061, type: !5204, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!5204 = !DISubroutineType(types: !5205)
!5205 = !{!49, !53, !49, !110}
!5206 = !DILocalVariable(name: "n", arg: 1, scope: !5203, file: !241, line: 1061, type: !53)
!5207 = !DILocation(line: 1061, column: 18, scope: !5203)
!5208 = !DILocalVariable(name: "arg", arg: 2, scope: !5203, file: !241, line: 1061, type: !49)
!5209 = !DILocation(line: 1061, column: 33, scope: !5203)
!5210 = !DILocalVariable(name: "argsize", arg: 3, scope: !5203, file: !241, line: 1061, type: !110)
!5211 = !DILocation(line: 1061, column: 45, scope: !5203)
!5212 = !DILocation(line: 1063, column: 30, scope: !5203)
!5213 = !DILocation(line: 1063, column: 33, scope: !5203)
!5214 = !DILocation(line: 1063, column: 38, scope: !5203)
!5215 = !DILocation(line: 1063, column: 10, scope: !5203)
!5216 = !DILocation(line: 1063, column: 3, scope: !5203)
!5217 = distinct !DISubprogram(name: "quote_n", scope: !241, file: !241, line: 1073, type: !5218, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!5218 = !DISubroutineType(types: !5219)
!5219 = !{!49, !53, !49}
!5220 = !DILocalVariable(name: "n", arg: 1, scope: !5217, file: !241, line: 1073, type: !53)
!5221 = !DILocation(line: 1073, column: 14, scope: !5217)
!5222 = !DILocalVariable(name: "arg", arg: 2, scope: !5217, file: !241, line: 1073, type: !49)
!5223 = !DILocation(line: 1073, column: 29, scope: !5217)
!5224 = !DILocation(line: 1075, column: 23, scope: !5217)
!5225 = !DILocation(line: 1075, column: 26, scope: !5217)
!5226 = !DILocation(line: 1075, column: 10, scope: !5217)
!5227 = !DILocation(line: 1075, column: 3, scope: !5217)
!5228 = !DILocalVariable(name: "n", arg: 1, scope: !5229, file: !241, line: 1073, type: !53)
!5229 = distinct !DISubprogram(name: "quote_n", scope: !241, file: !241, line: 1073, type: !5218, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5230, retainedNodes: !4)
!5230 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !5231, nameTableKind: None)
!5231 = !{!5232, !5234, !5236, !5245, !5247, !5249, !5256, !5258}
!5232 = !DIGlobalVariableExpression(var: !5233, expr: !DIExpression())
!5233 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !5230, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!5234 = !DIGlobalVariableExpression(var: !5235, expr: !DIExpression())
!5235 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !5230, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!5236 = !DIGlobalVariableExpression(var: !5237, expr: !DIExpression())
!5237 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !5230, file: !241, line: 1052, type: !5238, isLocal: false, isDefinition: true)
!5238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !5239)
!5239 = !{!5240, !5241, !5242, !5243, !5244}
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !5238, file: !241, line: 68, baseType: !223, size: 32)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5238, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !5238, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !5238, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !5238, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!5245 = !DIGlobalVariableExpression(var: !5246, expr: !DIExpression())
!5246 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !5230, file: !241, line: 116, type: !5238, isLocal: true, isDefinition: true)
!5247 = !DIGlobalVariableExpression(var: !5248, expr: !DIExpression())
!5248 = distinct !DIGlobalVariable(name: "slot0", scope: !5230, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!5249 = !DIGlobalVariableExpression(var: !5250, expr: !DIExpression())
!5250 = distinct !DIGlobalVariable(name: "slotvec", scope: !5230, file: !241, line: 845, type: !5251, isLocal: true, isDefinition: true)
!5251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5252, size: 64)
!5252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !5253)
!5253 = !{!5254, !5255}
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5252, file: !241, line: 836, baseType: !110, size: 64)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5252, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!5256 = !DIGlobalVariableExpression(var: !5257, expr: !DIExpression())
!5257 = distinct !DIGlobalVariable(name: "nslots", scope: !5230, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!5258 = !DIGlobalVariableExpression(var: !5259, expr: !DIExpression())
!5259 = distinct !DIGlobalVariable(name: "slotvec0", scope: !5230, file: !241, line: 844, type: !5252, isLocal: true, isDefinition: true)
!5260 = !DILocalVariable(name: "arg", arg: 2, scope: !5229, file: !241, line: 1073, type: !49)
!5261 = distinct !DISubprogram(name: "quote", scope: !241, file: !241, line: 1079, type: !5262, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!5262 = !DISubroutineType(types: !5263)
!5263 = !{!49, !49}
!5264 = !DILocalVariable(name: "arg", arg: 1, scope: !5261, file: !241, line: 1079, type: !49)
!5265 = !DILocation(line: 1079, column: 20, scope: !5261)
!5266 = !DILocation(line: 1081, column: 22, scope: !5261)
!5267 = !DILocation(line: 1081, column: 10, scope: !5261)
!5268 = !DILocation(line: 1081, column: 3, scope: !5261)
!5269 = !DILocalVariable(name: "arg", arg: 1, scope: !5270, file: !241, line: 1079, type: !49)
!5270 = distinct !DISubprogram(name: "quote", scope: !241, file: !241, line: 1079, type: !5262, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5271, retainedNodes: !4)
!5271 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !5272, nameTableKind: None)
!5272 = !{!5273, !5275, !5277, !5286, !5288, !5290, !5297, !5299}
!5273 = !DIGlobalVariableExpression(var: !5274, expr: !DIExpression())
!5274 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !5271, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!5275 = !DIGlobalVariableExpression(var: !5276, expr: !DIExpression())
!5276 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !5271, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!5277 = !DIGlobalVariableExpression(var: !5278, expr: !DIExpression())
!5278 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !5271, file: !241, line: 1052, type: !5279, isLocal: false, isDefinition: true)
!5279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !5280)
!5280 = !{!5281, !5282, !5283, !5284, !5285}
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !5279, file: !241, line: 68, baseType: !223, size: 32)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5279, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !5279, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !5279, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !5279, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!5286 = !DIGlobalVariableExpression(var: !5287, expr: !DIExpression())
!5287 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !5271, file: !241, line: 116, type: !5279, isLocal: true, isDefinition: true)
!5288 = !DIGlobalVariableExpression(var: !5289, expr: !DIExpression())
!5289 = distinct !DIGlobalVariable(name: "slot0", scope: !5271, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!5290 = !DIGlobalVariableExpression(var: !5291, expr: !DIExpression())
!5291 = distinct !DIGlobalVariable(name: "slotvec", scope: !5271, file: !241, line: 845, type: !5292, isLocal: true, isDefinition: true)
!5292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5293, size: 64)
!5293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !5294)
!5294 = !{!5295, !5296}
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5293, file: !241, line: 836, baseType: !110, size: 64)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5293, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!5297 = !DIGlobalVariableExpression(var: !5298, expr: !DIExpression())
!5298 = distinct !DIGlobalVariable(name: "nslots", scope: !5271, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!5299 = !DIGlobalVariableExpression(var: !5300, expr: !DIExpression())
!5300 = distinct !DIGlobalVariable(name: "slotvec0", scope: !5271, file: !241, line: 844, type: !5293, isLocal: true, isDefinition: true)
!5301 = distinct !DISubprogram(name: "setlocale_null_r", scope: !5302, file: !5302, line: 269, type: !5303, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !296, retainedNodes: !4)
!5302 = !DIFile(filename: "lib/setlocale_null.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5303 = !DISubroutineType(types: !5304)
!5304 = !{!53, !53, !6, !110}
!5305 = !DILocalVariable(name: "category", arg: 1, scope: !5301, file: !5302, line: 269, type: !53)
!5306 = !DILocation(line: 269, column: 23, scope: !5301)
!5307 = !DILocalVariable(name: "buf", arg: 2, scope: !5301, file: !5302, line: 269, type: !6)
!5308 = !DILocation(line: 269, column: 39, scope: !5301)
!5309 = !DILocalVariable(name: "bufsize", arg: 3, scope: !5301, file: !5302, line: 269, type: !110)
!5310 = !DILocation(line: 269, column: 51, scope: !5301)
!5311 = !DILocation(line: 274, column: 35, scope: !5301)
!5312 = !DILocation(line: 274, column: 45, scope: !5301)
!5313 = !DILocation(line: 274, column: 50, scope: !5301)
!5314 = !DILocation(line: 274, column: 10, scope: !5301)
!5315 = !DILocation(line: 274, column: 3, scope: !5301)
!5316 = !DILocalVariable(name: "category", arg: 1, scope: !5317, file: !5302, line: 269, type: !53)
!5317 = distinct !DISubprogram(name: "setlocale_null_r", scope: !5302, file: !5302, line: 269, type: !5303, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5318, retainedNodes: !4)
!5318 = distinct !DICompileUnit(language: DW_LANG_C99, file: !297, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!5319 = !DILocalVariable(name: "buf", arg: 2, scope: !5317, file: !5302, line: 269, type: !6)
!5320 = !DILocalVariable(name: "bufsize", arg: 3, scope: !5317, file: !5302, line: 269, type: !110)
!5321 = distinct !DISubprogram(name: "setlocale_null_unlocked", scope: !5302, file: !5302, line: 91, type: !5303, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !296, retainedNodes: !4)
!5322 = !DILocalVariable(name: "category", arg: 1, scope: !5321, file: !5302, line: 91, type: !53)
!5323 = !DILocation(line: 91, column: 30, scope: !5321)
!5324 = !DILocalVariable(name: "buf", arg: 2, scope: !5321, file: !5302, line: 91, type: !6)
!5325 = !DILocation(line: 91, column: 46, scope: !5321)
!5326 = !DILocalVariable(name: "bufsize", arg: 3, scope: !5321, file: !5302, line: 91, type: !110)
!5327 = !DILocation(line: 91, column: 58, scope: !5321)
!5328 = !DILocalVariable(name: "result", scope: !5321, file: !5302, line: 140, type: !49)
!5329 = !DILocation(line: 140, column: 15, scope: !5321)
!5330 = !DILocation(line: 140, column: 51, scope: !5321)
!5331 = !DILocation(line: 140, column: 24, scope: !5321)
!5332 = !DILocation(line: 142, column: 7, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5321, file: !5302, line: 142, column: 7)
!5334 = !DILocation(line: 142, column: 14, scope: !5333)
!5335 = !DILocation(line: 142, column: 7, scope: !5321)
!5336 = !DILocation(line: 145, column: 11, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5338, file: !5302, line: 145, column: 11)
!5338 = distinct !DILexicalBlock(scope: !5333, file: !5302, line: 143, column: 5)
!5339 = !DILocation(line: 145, column: 19, scope: !5337)
!5340 = !DILocation(line: 145, column: 11, scope: !5338)
!5341 = !DILocation(line: 149, column: 9, scope: !5337)
!5342 = !DILocation(line: 149, column: 16, scope: !5337)
!5343 = !DILocation(line: 150, column: 7, scope: !5338)
!5344 = !DILocalVariable(name: "length", scope: !5345, file: !5302, line: 154, type: !110)
!5345 = distinct !DILexicalBlock(scope: !5333, file: !5302, line: 153, column: 5)
!5346 = !DILocation(line: 154, column: 14, scope: !5345)
!5347 = !DILocation(line: 154, column: 31, scope: !5345)
!5348 = !DILocation(line: 154, column: 23, scope: !5345)
!5349 = !DILocation(line: 155, column: 11, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5345, file: !5302, line: 155, column: 11)
!5351 = !DILocation(line: 155, column: 20, scope: !5350)
!5352 = !DILocation(line: 155, column: 18, scope: !5350)
!5353 = !DILocation(line: 155, column: 11, scope: !5345)
!5354 = !DILocation(line: 157, column: 19, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5350, file: !5302, line: 156, column: 9)
!5356 = !DILocation(line: 157, column: 24, scope: !5355)
!5357 = !DILocation(line: 157, column: 32, scope: !5355)
!5358 = !DILocation(line: 157, column: 39, scope: !5355)
!5359 = !DILocation(line: 157, column: 11, scope: !5355)
!5360 = !DILocation(line: 158, column: 11, scope: !5355)
!5361 = !DILocation(line: 162, column: 15, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5363, file: !5302, line: 162, column: 15)
!5363 = distinct !DILexicalBlock(scope: !5350, file: !5302, line: 161, column: 9)
!5364 = !DILocation(line: 162, column: 23, scope: !5362)
!5365 = !DILocation(line: 162, column: 15, scope: !5363)
!5366 = !DILocation(line: 167, column: 23, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5362, file: !5302, line: 163, column: 13)
!5368 = !DILocation(line: 167, column: 28, scope: !5367)
!5369 = !DILocation(line: 167, column: 36, scope: !5367)
!5370 = !DILocation(line: 167, column: 44, scope: !5367)
!5371 = !DILocation(line: 167, column: 15, scope: !5367)
!5372 = !DILocation(line: 168, column: 15, scope: !5367)
!5373 = !DILocation(line: 168, column: 19, scope: !5367)
!5374 = !DILocation(line: 168, column: 27, scope: !5367)
!5375 = !DILocation(line: 168, column: 32, scope: !5367)
!5376 = !DILocation(line: 169, column: 13, scope: !5367)
!5377 = !DILocation(line: 170, column: 11, scope: !5363)
!5378 = !DILocation(line: 174, column: 1, scope: !5321)
!5379 = !DILocalVariable(name: "category", arg: 1, scope: !5380, file: !5302, line: 91, type: !53)
!5380 = distinct !DISubprogram(name: "setlocale_null_unlocked", scope: !5302, file: !5302, line: 91, type: !5303, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5381, retainedNodes: !4)
!5381 = distinct !DICompileUnit(language: DW_LANG_C99, file: !297, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!5382 = !DILocalVariable(name: "buf", arg: 2, scope: !5380, file: !5302, line: 91, type: !6)
!5383 = !DILocalVariable(name: "bufsize", arg: 3, scope: !5380, file: !5302, line: 91, type: !110)
!5384 = !DILocalVariable(name: "result", scope: !5380, file: !5302, line: 140, type: !49)
!5385 = distinct !DISubprogram(name: "setlocale_null_androidfix", scope: !5302, file: !5302, line: 60, type: !5386, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !296, retainedNodes: !4)
!5386 = !DISubroutineType(types: !5387)
!5387 = !{!49, !53}
!5388 = !DILocalVariable(name: "category", arg: 1, scope: !5385, file: !5302, line: 60, type: !53)
!5389 = !DILocation(line: 60, column: 32, scope: !5385)
!5390 = !DILocalVariable(name: "result", scope: !5385, file: !5302, line: 62, type: !49)
!5391 = !DILocation(line: 62, column: 15, scope: !5385)
!5392 = !DILocation(line: 62, column: 35, scope: !5385)
!5393 = !DILocation(line: 62, column: 24, scope: !5385)
!5394 = !DILocation(line: 87, column: 10, scope: !5385)
!5395 = !DILocation(line: 87, column: 3, scope: !5385)
!5396 = distinct !DISubprogram(name: "version_etc_arn", scope: !5397, file: !5397, line: 61, type: !5398, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !299, retainedNodes: !4)
!5397 = !DIFile(filename: "lib/version-etc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5398 = !DISubroutineType(types: !5399)
!5399 = !{null, !5400, !49, !49, !49, !5449, !110}
!5400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5401, size: 64)
!5401 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5402, line: 7, baseType: !5403)
!5402 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!5403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5404, line: 49, size: 1728, elements: !5405)
!5404 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!5405 = !{!5406, !5407, !5408, !5409, !5410, !5411, !5412, !5413, !5414, !5415, !5416, !5417, !5418, !5421, !5423, !5424, !5425, !5426, !5427, !5429, !5433, !5436, !5438, !5441, !5444, !5445, !5446, !5447, !5448}
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5403, file: !5404, line: 51, baseType: !53, size: 32)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5403, file: !5404, line: 54, baseType: !6, size: 64, offset: 64)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5403, file: !5404, line: 55, baseType: !6, size: 64, offset: 128)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5403, file: !5404, line: 56, baseType: !6, size: 64, offset: 192)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5403, file: !5404, line: 57, baseType: !6, size: 64, offset: 256)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5403, file: !5404, line: 58, baseType: !6, size: 64, offset: 320)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5403, file: !5404, line: 59, baseType: !6, size: 64, offset: 384)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5403, file: !5404, line: 60, baseType: !6, size: 64, offset: 448)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5403, file: !5404, line: 61, baseType: !6, size: 64, offset: 512)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5403, file: !5404, line: 64, baseType: !6, size: 64, offset: 576)
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5403, file: !5404, line: 65, baseType: !6, size: 64, offset: 640)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5403, file: !5404, line: 66, baseType: !6, size: 64, offset: 704)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5403, file: !5404, line: 68, baseType: !5419, size: 64, offset: 768)
!5419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5420, size: 64)
!5420 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !5404, line: 36, flags: DIFlagFwdDecl)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5403, file: !5404, line: 70, baseType: !5422, size: 64, offset: 832)
!5422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5403, size: 64)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5403, file: !5404, line: 72, baseType: !53, size: 32, offset: 896)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5403, file: !5404, line: 73, baseType: !53, size: 32, offset: 928)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5403, file: !5404, line: 74, baseType: !1395, size: 64, offset: 960)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5403, file: !5404, line: 77, baseType: !188, size: 16, offset: 1024)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5403, file: !5404, line: 78, baseType: !5428, size: 8, offset: 1040)
!5428 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5403, file: !5404, line: 79, baseType: !5430, size: 8, offset: 1048)
!5430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 8, elements: !5431)
!5431 = !{!5432}
!5432 = !DISubrange(count: 1)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5403, file: !5404, line: 81, baseType: !5434, size: 64, offset: 1088)
!5434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5435, size: 64)
!5435 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !5404, line: 43, baseType: null)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5403, file: !5404, line: 89, baseType: !5437, size: 64, offset: 1152)
!5437 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !12, line: 153, baseType: !13)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5403, file: !5404, line: 91, baseType: !5439, size: 64, offset: 1216)
!5439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5440, size: 64)
!5440 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !5404, line: 37, flags: DIFlagFwdDecl)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5403, file: !5404, line: 92, baseType: !5442, size: 64, offset: 1280)
!5442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5443, size: 64)
!5443 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !5404, line: 38, flags: DIFlagFwdDecl)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5403, file: !5404, line: 93, baseType: !5422, size: 64, offset: 1344)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5403, file: !5404, line: 94, baseType: !8, size: 64, offset: 1408)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5403, file: !5404, line: 95, baseType: !110, size: 64, offset: 1472)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5403, file: !5404, line: 96, baseType: !53, size: 32, offset: 1536)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5403, file: !5404, line: 98, baseType: !105, size: 160, offset: 1568)
!5449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!5450 = !DILocalVariable(name: "stream", arg: 1, scope: !5396, file: !5397, line: 61, type: !5400)
!5451 = !DILocation(line: 61, column: 24, scope: !5396)
!5452 = !DILocalVariable(name: "command_name", arg: 2, scope: !5396, file: !5397, line: 62, type: !49)
!5453 = !DILocation(line: 62, column: 30, scope: !5396)
!5454 = !DILocalVariable(name: "package", arg: 3, scope: !5396, file: !5397, line: 62, type: !49)
!5455 = !DILocation(line: 62, column: 56, scope: !5396)
!5456 = !DILocalVariable(name: "version", arg: 4, scope: !5396, file: !5397, line: 63, type: !49)
!5457 = !DILocation(line: 63, column: 30, scope: !5396)
!5458 = !DILocalVariable(name: "authors", arg: 5, scope: !5396, file: !5397, line: 64, type: !5449)
!5459 = !DILocation(line: 64, column: 39, scope: !5396)
!5460 = !DILocalVariable(name: "n_authors", arg: 6, scope: !5396, file: !5397, line: 64, type: !110)
!5461 = !DILocation(line: 64, column: 55, scope: !5396)
!5462 = !DILocation(line: 66, column: 7, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5396, file: !5397, line: 66, column: 7)
!5464 = !DILocation(line: 66, column: 7, scope: !5396)
!5465 = !DILocation(line: 67, column: 14, scope: !5463)
!5466 = !DILocation(line: 67, column: 38, scope: !5463)
!5467 = !DILocation(line: 67, column: 52, scope: !5463)
!5468 = !DILocation(line: 67, column: 61, scope: !5463)
!5469 = !DILocation(line: 67, column: 5, scope: !5463)
!5470 = !DILocation(line: 69, column: 14, scope: !5463)
!5471 = !DILocation(line: 69, column: 33, scope: !5463)
!5472 = !DILocation(line: 69, column: 42, scope: !5463)
!5473 = !DILocation(line: 69, column: 5, scope: !5463)
!5474 = !DILocation(line: 83, column: 12, scope: !5396)
!5475 = !DILocation(line: 83, column: 43, scope: !5396)
!5476 = !DILocation(line: 83, column: 3, scope: !5396)
!5477 = !DILocation(line: 85, column: 3, scope: !5396)
!5478 = !DILocation(line: 88, column: 12, scope: !5396)
!5479 = !DILocation(line: 88, column: 20, scope: !5396)
!5480 = !DILocation(line: 88, column: 3, scope: !5396)
!5481 = !DILocation(line: 95, column: 3, scope: !5396)
!5482 = !DILocation(line: 97, column: 11, scope: !5396)
!5483 = !DILocation(line: 97, column: 3, scope: !5396)
!5484 = !DILocation(line: 102, column: 7, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5396, file: !5397, line: 98, column: 5)
!5486 = !DILocation(line: 105, column: 16, scope: !5485)
!5487 = !DILocation(line: 105, column: 24, scope: !5485)
!5488 = !DILocation(line: 105, column: 47, scope: !5485)
!5489 = !DILocation(line: 105, column: 7, scope: !5485)
!5490 = !DILocation(line: 106, column: 7, scope: !5485)
!5491 = !DILocation(line: 109, column: 16, scope: !5485)
!5492 = !DILocation(line: 109, column: 24, scope: !5485)
!5493 = !DILocation(line: 109, column: 54, scope: !5485)
!5494 = !DILocation(line: 109, column: 66, scope: !5485)
!5495 = !DILocation(line: 109, column: 7, scope: !5485)
!5496 = !DILocation(line: 110, column: 7, scope: !5485)
!5497 = !DILocation(line: 113, column: 16, scope: !5485)
!5498 = !DILocation(line: 113, column: 24, scope: !5485)
!5499 = !DILocation(line: 114, column: 16, scope: !5485)
!5500 = !DILocation(line: 114, column: 28, scope: !5485)
!5501 = !DILocation(line: 114, column: 40, scope: !5485)
!5502 = !DILocation(line: 113, column: 7, scope: !5485)
!5503 = !DILocation(line: 115, column: 7, scope: !5485)
!5504 = !DILocation(line: 120, column: 16, scope: !5485)
!5505 = !DILocation(line: 120, column: 24, scope: !5485)
!5506 = !DILocation(line: 121, column: 16, scope: !5485)
!5507 = !DILocation(line: 121, column: 28, scope: !5485)
!5508 = !DILocation(line: 121, column: 40, scope: !5485)
!5509 = !DILocation(line: 121, column: 52, scope: !5485)
!5510 = !DILocation(line: 120, column: 7, scope: !5485)
!5511 = !DILocation(line: 122, column: 7, scope: !5485)
!5512 = !DILocation(line: 127, column: 16, scope: !5485)
!5513 = !DILocation(line: 127, column: 24, scope: !5485)
!5514 = !DILocation(line: 128, column: 16, scope: !5485)
!5515 = !DILocation(line: 128, column: 28, scope: !5485)
!5516 = !DILocation(line: 128, column: 40, scope: !5485)
!5517 = !DILocation(line: 128, column: 52, scope: !5485)
!5518 = !DILocation(line: 128, column: 64, scope: !5485)
!5519 = !DILocation(line: 127, column: 7, scope: !5485)
!5520 = !DILocation(line: 129, column: 7, scope: !5485)
!5521 = !DILocation(line: 134, column: 16, scope: !5485)
!5522 = !DILocation(line: 134, column: 24, scope: !5485)
!5523 = !DILocation(line: 135, column: 16, scope: !5485)
!5524 = !DILocation(line: 135, column: 28, scope: !5485)
!5525 = !DILocation(line: 135, column: 40, scope: !5485)
!5526 = !DILocation(line: 135, column: 52, scope: !5485)
!5527 = !DILocation(line: 135, column: 64, scope: !5485)
!5528 = !DILocation(line: 136, column: 16, scope: !5485)
!5529 = !DILocation(line: 134, column: 7, scope: !5485)
!5530 = !DILocation(line: 137, column: 7, scope: !5485)
!5531 = !DILocation(line: 142, column: 16, scope: !5485)
!5532 = !DILocation(line: 142, column: 24, scope: !5485)
!5533 = !DILocation(line: 143, column: 16, scope: !5485)
!5534 = !DILocation(line: 143, column: 28, scope: !5485)
!5535 = !DILocation(line: 143, column: 40, scope: !5485)
!5536 = !DILocation(line: 143, column: 52, scope: !5485)
!5537 = !DILocation(line: 143, column: 64, scope: !5485)
!5538 = !DILocation(line: 144, column: 16, scope: !5485)
!5539 = !DILocation(line: 144, column: 28, scope: !5485)
!5540 = !DILocation(line: 142, column: 7, scope: !5485)
!5541 = !DILocation(line: 145, column: 7, scope: !5485)
!5542 = !DILocation(line: 150, column: 16, scope: !5485)
!5543 = !DILocation(line: 150, column: 24, scope: !5485)
!5544 = !DILocation(line: 152, column: 17, scope: !5485)
!5545 = !DILocation(line: 152, column: 29, scope: !5485)
!5546 = !DILocation(line: 152, column: 41, scope: !5485)
!5547 = !DILocation(line: 152, column: 53, scope: !5485)
!5548 = !DILocation(line: 152, column: 65, scope: !5485)
!5549 = !DILocation(line: 153, column: 17, scope: !5485)
!5550 = !DILocation(line: 153, column: 29, scope: !5485)
!5551 = !DILocation(line: 153, column: 41, scope: !5485)
!5552 = !DILocation(line: 150, column: 7, scope: !5485)
!5553 = !DILocation(line: 154, column: 7, scope: !5485)
!5554 = !DILocation(line: 159, column: 16, scope: !5485)
!5555 = !DILocation(line: 159, column: 24, scope: !5485)
!5556 = !DILocation(line: 161, column: 16, scope: !5485)
!5557 = !DILocation(line: 161, column: 28, scope: !5485)
!5558 = !DILocation(line: 161, column: 40, scope: !5485)
!5559 = !DILocation(line: 161, column: 52, scope: !5485)
!5560 = !DILocation(line: 161, column: 64, scope: !5485)
!5561 = !DILocation(line: 162, column: 16, scope: !5485)
!5562 = !DILocation(line: 162, column: 28, scope: !5485)
!5563 = !DILocation(line: 162, column: 40, scope: !5485)
!5564 = !DILocation(line: 162, column: 52, scope: !5485)
!5565 = !DILocation(line: 159, column: 7, scope: !5485)
!5566 = !DILocation(line: 163, column: 7, scope: !5485)
!5567 = !DILocation(line: 170, column: 16, scope: !5485)
!5568 = !DILocation(line: 170, column: 24, scope: !5485)
!5569 = !DILocation(line: 172, column: 17, scope: !5485)
!5570 = !DILocation(line: 172, column: 29, scope: !5485)
!5571 = !DILocation(line: 172, column: 41, scope: !5485)
!5572 = !DILocation(line: 172, column: 53, scope: !5485)
!5573 = !DILocation(line: 172, column: 65, scope: !5485)
!5574 = !DILocation(line: 173, column: 17, scope: !5485)
!5575 = !DILocation(line: 173, column: 29, scope: !5485)
!5576 = !DILocation(line: 173, column: 41, scope: !5485)
!5577 = !DILocation(line: 173, column: 53, scope: !5485)
!5578 = !DILocation(line: 170, column: 7, scope: !5485)
!5579 = !DILocation(line: 174, column: 7, scope: !5485)
!5580 = !DILocation(line: 176, column: 1, scope: !5396)
!5581 = !DILocalVariable(name: "stream", arg: 1, scope: !5582, file: !5397, line: 61, type: !5585)
!5582 = distinct !DISubprogram(name: "version_etc_arn", scope: !5397, file: !5397, line: 61, type: !5583, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5619, retainedNodes: !4)
!5583 = !DISubroutineType(types: !5584)
!5584 = !{null, !5585, !49, !49, !49, !5449, !110}
!5585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5586, size: 64)
!5586 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5402, line: 7, baseType: !5587)
!5587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5404, line: 49, size: 1728, elements: !5588)
!5588 = !{!5589, !5590, !5591, !5592, !5593, !5594, !5595, !5596, !5597, !5598, !5599, !5600, !5601, !5602, !5604, !5605, !5606, !5607, !5608, !5609, !5610, !5611, !5612, !5613, !5614, !5615, !5616, !5617, !5618}
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5587, file: !5404, line: 51, baseType: !53, size: 32)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5587, file: !5404, line: 54, baseType: !6, size: 64, offset: 64)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5587, file: !5404, line: 55, baseType: !6, size: 64, offset: 128)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5587, file: !5404, line: 56, baseType: !6, size: 64, offset: 192)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5587, file: !5404, line: 57, baseType: !6, size: 64, offset: 256)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5587, file: !5404, line: 58, baseType: !6, size: 64, offset: 320)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5587, file: !5404, line: 59, baseType: !6, size: 64, offset: 384)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5587, file: !5404, line: 60, baseType: !6, size: 64, offset: 448)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5587, file: !5404, line: 61, baseType: !6, size: 64, offset: 512)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5587, file: !5404, line: 64, baseType: !6, size: 64, offset: 576)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5587, file: !5404, line: 65, baseType: !6, size: 64, offset: 640)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5587, file: !5404, line: 66, baseType: !6, size: 64, offset: 704)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5587, file: !5404, line: 68, baseType: !5419, size: 64, offset: 768)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5587, file: !5404, line: 70, baseType: !5603, size: 64, offset: 832)
!5603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5587, size: 64)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5587, file: !5404, line: 72, baseType: !53, size: 32, offset: 896)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5587, file: !5404, line: 73, baseType: !53, size: 32, offset: 928)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5587, file: !5404, line: 74, baseType: !1395, size: 64, offset: 960)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5587, file: !5404, line: 77, baseType: !188, size: 16, offset: 1024)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5587, file: !5404, line: 78, baseType: !5428, size: 8, offset: 1040)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5587, file: !5404, line: 79, baseType: !5430, size: 8, offset: 1048)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5587, file: !5404, line: 81, baseType: !5434, size: 64, offset: 1088)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5587, file: !5404, line: 89, baseType: !5437, size: 64, offset: 1152)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5587, file: !5404, line: 91, baseType: !5439, size: 64, offset: 1216)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5587, file: !5404, line: 92, baseType: !5442, size: 64, offset: 1280)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5587, file: !5404, line: 93, baseType: !5603, size: 64, offset: 1344)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5587, file: !5404, line: 94, baseType: !8, size: 64, offset: 1408)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5587, file: !5404, line: 95, baseType: !110, size: 64, offset: 1472)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5587, file: !5404, line: 96, baseType: !53, size: 32, offset: 1536)
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5587, file: !5404, line: 98, baseType: !105, size: 160, offset: 1568)
!5619 = distinct !DICompileUnit(language: DW_LANG_C99, file: !300, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!5620 = !DILocalVariable(name: "command_name", arg: 2, scope: !5582, file: !5397, line: 62, type: !49)
!5621 = !DILocalVariable(name: "package", arg: 3, scope: !5582, file: !5397, line: 62, type: !49)
!5622 = !DILocalVariable(name: "version", arg: 4, scope: !5582, file: !5397, line: 63, type: !49)
!5623 = !DILocalVariable(name: "authors", arg: 5, scope: !5582, file: !5397, line: 64, type: !5449)
!5624 = !DILocalVariable(name: "n_authors", arg: 6, scope: !5582, file: !5397, line: 64, type: !110)
!5625 = distinct !DISubprogram(name: "version_etc_va", scope: !5397, file: !5397, line: 199, type: !5626, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !299, retainedNodes: !4)
!5626 = !DISubroutineType(types: !5627)
!5627 = !{null, !5400, !49, !49, !49, !5628}
!5628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5629, size: 64)
!5629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !300, line: 192, size: 192, elements: !5630)
!5630 = !{!5631, !5632, !5633, !5634}
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !5629, file: !300, line: 192, baseType: !180, size: 32)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !5629, file: !300, line: 192, baseType: !180, size: 32, offset: 32)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !5629, file: !300, line: 192, baseType: !8, size: 64, offset: 64)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !5629, file: !300, line: 192, baseType: !8, size: 64, offset: 128)
!5635 = !DILocalVariable(name: "stream", arg: 1, scope: !5625, file: !5397, line: 199, type: !5400)
!5636 = !DILocation(line: 199, column: 23, scope: !5625)
!5637 = !DILocalVariable(name: "command_name", arg: 2, scope: !5625, file: !5397, line: 200, type: !49)
!5638 = !DILocation(line: 200, column: 29, scope: !5625)
!5639 = !DILocalVariable(name: "package", arg: 3, scope: !5625, file: !5397, line: 200, type: !49)
!5640 = !DILocation(line: 200, column: 55, scope: !5625)
!5641 = !DILocalVariable(name: "version", arg: 4, scope: !5625, file: !5397, line: 201, type: !49)
!5642 = !DILocation(line: 201, column: 29, scope: !5625)
!5643 = !DILocalVariable(name: "authors", arg: 5, scope: !5625, file: !5397, line: 201, type: !5628)
!5644 = !DILocation(line: 201, column: 46, scope: !5625)
!5645 = !DILocalVariable(name: "n_authors", scope: !5625, file: !5397, line: 203, type: !110)
!5646 = !DILocation(line: 203, column: 10, scope: !5625)
!5647 = !DILocalVariable(name: "authtab", scope: !5625, file: !5397, line: 204, type: !5648)
!5648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !49, size: 640, elements: !250)
!5649 = !DILocation(line: 204, column: 15, scope: !5625)
!5650 = !DILocation(line: 206, column: 18, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5625, file: !5397, line: 206, column: 3)
!5652 = !DILocation(line: 206, column: 8, scope: !5651)
!5653 = !DILocation(line: 207, column: 8, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5651, file: !5397, line: 206, column: 3)
!5655 = !DILocation(line: 207, column: 18, scope: !5654)
!5656 = !DILocation(line: 208, column: 10, scope: !5654)
!5657 = !DILocation(line: 208, column: 35, scope: !5654)
!5658 = !DILocation(line: 208, column: 22, scope: !5654)
!5659 = !DILocation(line: 208, column: 14, scope: !5654)
!5660 = !DILocation(line: 208, column: 33, scope: !5654)
!5661 = !DILocation(line: 208, column: 67, scope: !5654)
!5662 = !DILocation(line: 0, scope: !5654)
!5663 = !DILocation(line: 206, column: 3, scope: !5651)
!5664 = !DILocation(line: 209, column: 17, scope: !5654)
!5665 = !DILocation(line: 206, column: 3, scope: !5654)
!5666 = distinct !{!5666, !5663, !5667}
!5667 = !DILocation(line: 210, column: 5, scope: !5651)
!5668 = !DILocation(line: 211, column: 20, scope: !5625)
!5669 = !DILocation(line: 211, column: 28, scope: !5625)
!5670 = !DILocation(line: 211, column: 42, scope: !5625)
!5671 = !DILocation(line: 211, column: 51, scope: !5625)
!5672 = !DILocation(line: 212, column: 20, scope: !5625)
!5673 = !DILocation(line: 212, column: 29, scope: !5625)
!5674 = !DILocation(line: 211, column: 3, scope: !5625)
!5675 = !DILocation(line: 213, column: 1, scope: !5625)
!5676 = !DILocalVariable(name: "stream", arg: 1, scope: !5677, file: !5397, line: 199, type: !5680)
!5677 = distinct !DISubprogram(name: "version_etc_va", scope: !5397, file: !5397, line: 199, type: !5678, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5721, retainedNodes: !4)
!5678 = !DISubroutineType(types: !5679)
!5679 = !{null, !5680, !49, !49, !49, !5714}
!5680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5681, size: 64)
!5681 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5402, line: 7, baseType: !5682)
!5682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5404, line: 49, size: 1728, elements: !5683)
!5683 = !{!5684, !5685, !5686, !5687, !5688, !5689, !5690, !5691, !5692, !5693, !5694, !5695, !5696, !5697, !5699, !5700, !5701, !5702, !5703, !5704, !5705, !5706, !5707, !5708, !5709, !5710, !5711, !5712, !5713}
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5682, file: !5404, line: 51, baseType: !53, size: 32)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5682, file: !5404, line: 54, baseType: !6, size: 64, offset: 64)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5682, file: !5404, line: 55, baseType: !6, size: 64, offset: 128)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5682, file: !5404, line: 56, baseType: !6, size: 64, offset: 192)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5682, file: !5404, line: 57, baseType: !6, size: 64, offset: 256)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5682, file: !5404, line: 58, baseType: !6, size: 64, offset: 320)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5682, file: !5404, line: 59, baseType: !6, size: 64, offset: 384)
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5682, file: !5404, line: 60, baseType: !6, size: 64, offset: 448)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5682, file: !5404, line: 61, baseType: !6, size: 64, offset: 512)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5682, file: !5404, line: 64, baseType: !6, size: 64, offset: 576)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5682, file: !5404, line: 65, baseType: !6, size: 64, offset: 640)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5682, file: !5404, line: 66, baseType: !6, size: 64, offset: 704)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5682, file: !5404, line: 68, baseType: !5419, size: 64, offset: 768)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5682, file: !5404, line: 70, baseType: !5698, size: 64, offset: 832)
!5698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5682, size: 64)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5682, file: !5404, line: 72, baseType: !53, size: 32, offset: 896)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5682, file: !5404, line: 73, baseType: !53, size: 32, offset: 928)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5682, file: !5404, line: 74, baseType: !1395, size: 64, offset: 960)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5682, file: !5404, line: 77, baseType: !188, size: 16, offset: 1024)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5682, file: !5404, line: 78, baseType: !5428, size: 8, offset: 1040)
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5682, file: !5404, line: 79, baseType: !5430, size: 8, offset: 1048)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5682, file: !5404, line: 81, baseType: !5434, size: 64, offset: 1088)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5682, file: !5404, line: 89, baseType: !5437, size: 64, offset: 1152)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5682, file: !5404, line: 91, baseType: !5439, size: 64, offset: 1216)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5682, file: !5404, line: 92, baseType: !5442, size: 64, offset: 1280)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5682, file: !5404, line: 93, baseType: !5698, size: 64, offset: 1344)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5682, file: !5404, line: 94, baseType: !8, size: 64, offset: 1408)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5682, file: !5404, line: 95, baseType: !110, size: 64, offset: 1472)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5682, file: !5404, line: 96, baseType: !53, size: 32, offset: 1536)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5682, file: !5404, line: 98, baseType: !105, size: 160, offset: 1568)
!5714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5715, size: 64)
!5715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !300, line: 192, size: 192, elements: !5716)
!5716 = !{!5717, !5718, !5719, !5720}
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !5715, file: !300, line: 192, baseType: !180, size: 32)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !5715, file: !300, line: 192, baseType: !180, size: 32, offset: 32)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !5715, file: !300, line: 192, baseType: !8, size: 64, offset: 64)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !5715, file: !300, line: 192, baseType: !8, size: 64, offset: 128)
!5721 = distinct !DICompileUnit(language: DW_LANG_C99, file: !300, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!5722 = !DILocalVariable(name: "command_name", arg: 2, scope: !5677, file: !5397, line: 200, type: !49)
!5723 = !DILocalVariable(name: "package", arg: 3, scope: !5677, file: !5397, line: 200, type: !49)
!5724 = !DILocalVariable(name: "version", arg: 4, scope: !5677, file: !5397, line: 201, type: !49)
!5725 = !DILocalVariable(name: "authors", arg: 5, scope: !5677, file: !5397, line: 201, type: !5714)
!5726 = !DILocalVariable(name: "n_authors", scope: !5677, file: !5397, line: 203, type: !110)
!5727 = !DILocalVariable(name: "authtab", scope: !5677, file: !5397, line: 204, type: !5648)
!5728 = distinct !DISubprogram(name: "version_etc", scope: !5397, file: !5397, line: 230, type: !5729, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !299, retainedNodes: !4)
!5729 = !DISubroutineType(types: !5730)
!5730 = !{null, !5400, !49, !49, !49, null}
!5731 = !DILocalVariable(name: "stream", arg: 1, scope: !5728, file: !5397, line: 230, type: !5400)
!5732 = !DILocation(line: 230, column: 20, scope: !5728)
!5733 = !DILocalVariable(name: "command_name", arg: 2, scope: !5728, file: !5397, line: 231, type: !49)
!5734 = !DILocation(line: 231, column: 26, scope: !5728)
!5735 = !DILocalVariable(name: "package", arg: 3, scope: !5728, file: !5397, line: 231, type: !49)
!5736 = !DILocation(line: 231, column: 52, scope: !5728)
!5737 = !DILocalVariable(name: "version", arg: 4, scope: !5728, file: !5397, line: 232, type: !49)
!5738 = !DILocation(line: 232, column: 26, scope: !5728)
!5739 = !DILocalVariable(name: "authors", scope: !5728, file: !5397, line: 234, type: !5740)
!5740 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !5741, line: 52, baseType: !5742)
!5741 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!5742 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5743, line: 32, baseType: !5744)
!5743 = !DIFile(filename: "/usr/lib/llvm-9/lib/clang/9.0.1/include/stdarg.h", directory: "")
!5744 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !300, line: 234, baseType: !5745)
!5745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5629, size: 192, elements: !5431)
!5746 = !DILocation(line: 234, column: 11, scope: !5728)
!5747 = !DILocation(line: 236, column: 3, scope: !5728)
!5748 = !DILocation(line: 237, column: 19, scope: !5728)
!5749 = !DILocation(line: 237, column: 27, scope: !5728)
!5750 = !DILocation(line: 237, column: 41, scope: !5728)
!5751 = !DILocation(line: 237, column: 50, scope: !5728)
!5752 = !DILocation(line: 237, column: 59, scope: !5728)
!5753 = !DILocation(line: 237, column: 3, scope: !5728)
!5754 = !DILocation(line: 238, column: 3, scope: !5728)
!5755 = !DILocation(line: 239, column: 1, scope: !5728)
!5756 = !DILocalVariable(name: "stream", arg: 1, scope: !5757, file: !5397, line: 230, type: !5760)
!5757 = distinct !DISubprogram(name: "version_etc", scope: !5397, file: !5397, line: 230, type: !5758, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5794, retainedNodes: !4)
!5758 = !DISubroutineType(types: !5759)
!5759 = !{null, !5760, !49, !49, !49, null}
!5760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5761, size: 64)
!5761 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5402, line: 7, baseType: !5762)
!5762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5404, line: 49, size: 1728, elements: !5763)
!5763 = !{!5764, !5765, !5766, !5767, !5768, !5769, !5770, !5771, !5772, !5773, !5774, !5775, !5776, !5777, !5779, !5780, !5781, !5782, !5783, !5784, !5785, !5786, !5787, !5788, !5789, !5790, !5791, !5792, !5793}
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5762, file: !5404, line: 51, baseType: !53, size: 32)
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5762, file: !5404, line: 54, baseType: !6, size: 64, offset: 64)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5762, file: !5404, line: 55, baseType: !6, size: 64, offset: 128)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5762, file: !5404, line: 56, baseType: !6, size: 64, offset: 192)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5762, file: !5404, line: 57, baseType: !6, size: 64, offset: 256)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5762, file: !5404, line: 58, baseType: !6, size: 64, offset: 320)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5762, file: !5404, line: 59, baseType: !6, size: 64, offset: 384)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5762, file: !5404, line: 60, baseType: !6, size: 64, offset: 448)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5762, file: !5404, line: 61, baseType: !6, size: 64, offset: 512)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5762, file: !5404, line: 64, baseType: !6, size: 64, offset: 576)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5762, file: !5404, line: 65, baseType: !6, size: 64, offset: 640)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5762, file: !5404, line: 66, baseType: !6, size: 64, offset: 704)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5762, file: !5404, line: 68, baseType: !5419, size: 64, offset: 768)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5762, file: !5404, line: 70, baseType: !5778, size: 64, offset: 832)
!5778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5762, size: 64)
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5762, file: !5404, line: 72, baseType: !53, size: 32, offset: 896)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5762, file: !5404, line: 73, baseType: !53, size: 32, offset: 928)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5762, file: !5404, line: 74, baseType: !1395, size: 64, offset: 960)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5762, file: !5404, line: 77, baseType: !188, size: 16, offset: 1024)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5762, file: !5404, line: 78, baseType: !5428, size: 8, offset: 1040)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5762, file: !5404, line: 79, baseType: !5430, size: 8, offset: 1048)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5762, file: !5404, line: 81, baseType: !5434, size: 64, offset: 1088)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5762, file: !5404, line: 89, baseType: !5437, size: 64, offset: 1152)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5762, file: !5404, line: 91, baseType: !5439, size: 64, offset: 1216)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5762, file: !5404, line: 92, baseType: !5442, size: 64, offset: 1280)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5762, file: !5404, line: 93, baseType: !5778, size: 64, offset: 1344)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5762, file: !5404, line: 94, baseType: !8, size: 64, offset: 1408)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5762, file: !5404, line: 95, baseType: !110, size: 64, offset: 1472)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5762, file: !5404, line: 96, baseType: !53, size: 32, offset: 1536)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5762, file: !5404, line: 98, baseType: !105, size: 160, offset: 1568)
!5794 = distinct !DICompileUnit(language: DW_LANG_C99, file: !300, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!5795 = !DILocalVariable(name: "command_name", arg: 2, scope: !5757, file: !5397, line: 231, type: !49)
!5796 = !DILocalVariable(name: "package", arg: 3, scope: !5757, file: !5397, line: 231, type: !49)
!5797 = !DILocalVariable(name: "version", arg: 4, scope: !5757, file: !5397, line: 232, type: !49)
!5798 = !DILocalVariable(name: "authors", scope: !5757, file: !5397, line: 234, type: !5799)
!5799 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !5741, line: 52, baseType: !5800)
!5800 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5743, line: 32, baseType: !5801)
!5801 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !300, line: 234, baseType: !5802)
!5802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5803, size: 192, elements: !5431)
!5803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !300, line: 192, size: 192, elements: !5804)
!5804 = !{!5805, !5806, !5807, !5808}
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !5803, file: !300, line: 192, baseType: !180, size: 32)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !5803, file: !300, line: 192, baseType: !180, size: 32, offset: 32)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !5803, file: !300, line: 192, baseType: !8, size: 64, offset: 64)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !5803, file: !300, line: 192, baseType: !8, size: 64, offset: 128)
!5809 = distinct !DISubprogram(name: "xmalloc", scope: !5810, file: !5810, line: 39, type: !5811, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !301, retainedNodes: !4)
!5810 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5811 = !DISubroutineType(types: !5812)
!5812 = !{!8, !110}
!5813 = !DILocalVariable(name: "n", arg: 1, scope: !5809, file: !5810, line: 39, type: !110)
!5814 = !DILocation(line: 39, column: 17, scope: !5809)
!5815 = !DILocalVariable(name: "p", scope: !5809, file: !5810, line: 41, type: !8)
!5816 = !DILocation(line: 41, column: 9, scope: !5809)
!5817 = !DILocation(line: 41, column: 21, scope: !5809)
!5818 = !DILocation(line: 41, column: 13, scope: !5809)
!5819 = !DILocation(line: 42, column: 8, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5809, file: !5810, line: 42, column: 7)
!5821 = !DILocation(line: 42, column: 10, scope: !5820)
!5822 = !DILocation(line: 42, column: 13, scope: !5820)
!5823 = !DILocation(line: 42, column: 15, scope: !5820)
!5824 = !DILocation(line: 42, column: 7, scope: !5809)
!5825 = !DILocation(line: 43, column: 5, scope: !5820)
!5826 = !DILocation(line: 44, column: 10, scope: !5809)
!5827 = !DILocation(line: 44, column: 3, scope: !5809)
!5828 = !DILocalVariable(name: "n", arg: 1, scope: !5829, file: !5810, line: 39, type: !110)
!5829 = distinct !DISubprogram(name: "xmalloc", scope: !5810, file: !5810, line: 39, type: !5811, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5830, retainedNodes: !4)
!5830 = distinct !DICompileUnit(language: DW_LANG_C99, file: !302, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !303, nameTableKind: None)
!5831 = !DILocalVariable(name: "p", scope: !5829, file: !5810, line: 41, type: !8)
!5832 = distinct !DISubprogram(name: "xrealloc", scope: !5810, file: !5810, line: 51, type: !5833, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !301, retainedNodes: !4)
!5833 = !DISubroutineType(types: !5834)
!5834 = !{!8, !8, !110}
!5835 = !DILocalVariable(name: "p", arg: 1, scope: !5832, file: !5810, line: 51, type: !8)
!5836 = !DILocation(line: 51, column: 17, scope: !5832)
!5837 = !DILocalVariable(name: "n", arg: 2, scope: !5832, file: !5810, line: 51, type: !110)
!5838 = !DILocation(line: 51, column: 27, scope: !5832)
!5839 = !DILocation(line: 53, column: 8, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5832, file: !5810, line: 53, column: 7)
!5841 = !DILocation(line: 53, column: 10, scope: !5840)
!5842 = !DILocation(line: 53, column: 13, scope: !5840)
!5843 = !DILocation(line: 53, column: 7, scope: !5832)
!5844 = !DILocation(line: 57, column: 13, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5840, file: !5810, line: 54, column: 5)
!5846 = !DILocation(line: 57, column: 7, scope: !5845)
!5847 = !DILocation(line: 58, column: 7, scope: !5845)
!5848 = !DILocation(line: 61, column: 16, scope: !5832)
!5849 = !DILocation(line: 61, column: 19, scope: !5832)
!5850 = !DILocation(line: 61, column: 7, scope: !5832)
!5851 = !DILocation(line: 61, column: 5, scope: !5832)
!5852 = !DILocation(line: 62, column: 8, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5832, file: !5810, line: 62, column: 7)
!5854 = !DILocation(line: 62, column: 10, scope: !5853)
!5855 = !DILocation(line: 62, column: 13, scope: !5853)
!5856 = !DILocation(line: 62, column: 7, scope: !5832)
!5857 = !DILocation(line: 63, column: 5, scope: !5853)
!5858 = !DILocation(line: 64, column: 10, scope: !5832)
!5859 = !DILocation(line: 64, column: 3, scope: !5832)
!5860 = !DILocation(line: 65, column: 1, scope: !5832)
!5861 = !DILocalVariable(name: "p", arg: 1, scope: !5862, file: !5810, line: 51, type: !8)
!5862 = distinct !DISubprogram(name: "xrealloc", scope: !5810, file: !5810, line: 51, type: !5833, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5863, retainedNodes: !4)
!5863 = distinct !DICompileUnit(language: DW_LANG_C99, file: !302, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !303, nameTableKind: None)
!5864 = !DILocalVariable(name: "n", arg: 2, scope: !5862, file: !5810, line: 51, type: !110)
!5865 = distinct !DISubprogram(name: "x2nrealloc", scope: !5866, file: !5866, line: 174, type: !5867, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !301, retainedNodes: !4)
!5866 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5867 = !DISubroutineType(types: !5868)
!5868 = !{!8, !8, !5869, !110}
!5869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64)
!5870 = !DILocalVariable(name: "p", arg: 1, scope: !5865, file: !5866, line: 174, type: !8)
!5871 = !DILocation(line: 174, column: 19, scope: !5865)
!5872 = !DILocalVariable(name: "pn", arg: 2, scope: !5865, file: !5866, line: 174, type: !5869)
!5873 = !DILocation(line: 174, column: 30, scope: !5865)
!5874 = !DILocalVariable(name: "s", arg: 3, scope: !5865, file: !5866, line: 174, type: !110)
!5875 = !DILocation(line: 174, column: 41, scope: !5865)
!5876 = !DILocalVariable(name: "n", scope: !5865, file: !5866, line: 176, type: !110)
!5877 = !DILocation(line: 176, column: 10, scope: !5865)
!5878 = !DILocation(line: 176, column: 15, scope: !5865)
!5879 = !DILocation(line: 176, column: 14, scope: !5865)
!5880 = !DILocation(line: 178, column: 9, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5865, file: !5866, line: 178, column: 7)
!5882 = !DILocation(line: 178, column: 7, scope: !5865)
!5883 = !DILocation(line: 180, column: 13, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5885, file: !5866, line: 180, column: 11)
!5885 = distinct !DILexicalBlock(scope: !5881, file: !5866, line: 179, column: 5)
!5886 = !DILocation(line: 180, column: 11, scope: !5885)
!5887 = !DILocation(line: 188, column: 32, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5884, file: !5866, line: 181, column: 9)
!5889 = !DILocation(line: 188, column: 30, scope: !5888)
!5890 = !DILocation(line: 188, column: 13, scope: !5888)
!5891 = !DILocation(line: 189, column: 17, scope: !5888)
!5892 = !DILocation(line: 189, column: 16, scope: !5888)
!5893 = !DILocation(line: 189, column: 13, scope: !5888)
!5894 = !DILocation(line: 190, column: 9, scope: !5888)
!5895 = !DILocation(line: 191, column: 11, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5885, file: !5866, line: 191, column: 11)
!5897 = !DILocation(line: 191, column: 11, scope: !5885)
!5898 = !DILocation(line: 192, column: 9, scope: !5896)
!5899 = !DILocation(line: 193, column: 5, scope: !5885)
!5900 = !DILocation(line: 200, column: 71, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5902, file: !5866, line: 200, column: 11)
!5902 = distinct !DILexicalBlock(scope: !5881, file: !5866, line: 195, column: 5)
!5903 = !DILocation(line: 200, column: 69, scope: !5901)
!5904 = !DILocation(line: 201, column: 14, scope: !5901)
!5905 = !DILocation(line: 201, column: 11, scope: !5901)
!5906 = !DILocation(line: 200, column: 11, scope: !5902)
!5907 = !DILocation(line: 202, column: 9, scope: !5901)
!5908 = !DILocation(line: 203, column: 12, scope: !5902)
!5909 = !DILocation(line: 203, column: 14, scope: !5902)
!5910 = !DILocation(line: 203, column: 18, scope: !5902)
!5911 = !DILocation(line: 203, column: 9, scope: !5902)
!5912 = !DILocation(line: 206, column: 9, scope: !5865)
!5913 = !DILocation(line: 206, column: 4, scope: !5865)
!5914 = !DILocation(line: 206, column: 7, scope: !5865)
!5915 = !DILocation(line: 207, column: 20, scope: !5865)
!5916 = !DILocation(line: 207, column: 23, scope: !5865)
!5917 = !DILocation(line: 207, column: 27, scope: !5865)
!5918 = !DILocation(line: 207, column: 25, scope: !5865)
!5919 = !DILocation(line: 207, column: 10, scope: !5865)
!5920 = !DILocation(line: 207, column: 3, scope: !5865)
!5921 = !DILocalVariable(name: "p", arg: 1, scope: !5922, file: !5866, line: 174, type: !8)
!5922 = distinct !DISubprogram(name: "x2nrealloc", scope: !5866, file: !5866, line: 174, type: !5867, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5923, retainedNodes: !4)
!5923 = distinct !DICompileUnit(language: DW_LANG_C99, file: !302, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !303, nameTableKind: None)
!5924 = !DILocalVariable(name: "pn", arg: 2, scope: !5922, file: !5866, line: 174, type: !5869)
!5925 = !DILocalVariable(name: "s", arg: 3, scope: !5922, file: !5866, line: 174, type: !110)
!5926 = !DILocalVariable(name: "n", scope: !5922, file: !5866, line: 176, type: !110)
!5927 = distinct !DISubprogram(name: "xcharalloc", scope: !5866, file: !5866, line: 216, type: !5928, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !301, retainedNodes: !4)
!5928 = !DISubroutineType(types: !5929)
!5929 = !{!6, !110}
!5930 = !DILocalVariable(name: "n", arg: 1, scope: !5927, file: !5866, line: 216, type: !110)
!5931 = !DILocation(line: 216, column: 20, scope: !5927)
!5932 = !DILocation(line: 218, column: 10, scope: !5927)
!5933 = !DILocation(line: 218, column: 3, scope: !5927)
!5934 = distinct !DISubprogram(name: "xalloc_die", scope: !5935, file: !5935, line: 32, type: !1361, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !304, retainedNodes: !4)
!5935 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5936 = !DILocation(line: 34, column: 10, scope: !5934)
!5937 = !DILocation(line: 34, column: 33, scope: !5934)
!5938 = !DILocation(line: 34, column: 3, scope: !5934)
!5939 = !DILocation(line: 40, column: 3, scope: !5934)
!5940 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !5941, file: !5941, line: 86, type: !5942, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !306, retainedNodes: !4)
!5941 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5942 = !DISubroutineType(types: !5943)
!5943 = !{!110, !5944, !49, !110, !5945}
!5944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4508, size: 64)
!5945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5946, size: 64)
!5946 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !4482, line: 6, baseType: !5947)
!5947 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !4484, line: 21, baseType: !5948)
!5948 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4484, line: 13, size: 64, elements: !5949)
!5949 = !{!5950, !5951}
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !5948, file: !4484, line: 15, baseType: !53, size: 32)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !5948, file: !4484, line: 20, baseType: !5952, size: 32, offset: 32)
!5952 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5948, file: !4484, line: 16, size: 32, elements: !5953)
!5953 = !{!5954, !5955}
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !5952, file: !4484, line: 18, baseType: !180, size: 32)
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !5952, file: !4484, line: 19, baseType: !82, size: 32)
!5956 = !DILocalVariable(name: "pwc", arg: 1, scope: !5940, file: !5941, line: 86, type: !5944)
!5957 = !DILocation(line: 86, column: 23, scope: !5940)
!5958 = !DILocalVariable(name: "s", arg: 2, scope: !5940, file: !5941, line: 86, type: !49)
!5959 = !DILocation(line: 86, column: 40, scope: !5940)
!5960 = !DILocalVariable(name: "n", arg: 3, scope: !5940, file: !5941, line: 86, type: !110)
!5961 = !DILocation(line: 86, column: 50, scope: !5940)
!5962 = !DILocalVariable(name: "ps", arg: 4, scope: !5940, file: !5941, line: 86, type: !5945)
!5963 = !DILocation(line: 86, column: 64, scope: !5940)
!5964 = !DILocalVariable(name: "ret", scope: !5940, file: !5941, line: 88, type: !110)
!5965 = !DILocation(line: 88, column: 10, scope: !5940)
!5966 = !DILocalVariable(name: "wc", scope: !5940, file: !5941, line: 89, type: !4508)
!5967 = !DILocation(line: 89, column: 11, scope: !5940)
!5968 = !DILocation(line: 105, column: 9, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5940, file: !5941, line: 105, column: 7)
!5970 = !DILocation(line: 105, column: 7, scope: !5940)
!5971 = !DILocation(line: 106, column: 9, scope: !5969)
!5972 = !DILocation(line: 106, column: 5, scope: !5969)
!5973 = !DILocation(line: 145, column: 18, scope: !5940)
!5974 = !DILocation(line: 145, column: 23, scope: !5940)
!5975 = !DILocation(line: 145, column: 26, scope: !5940)
!5976 = !DILocation(line: 145, column: 29, scope: !5940)
!5977 = !DILocation(line: 145, column: 9, scope: !5940)
!5978 = !DILocation(line: 145, column: 7, scope: !5940)
!5979 = !DILocation(line: 154, column: 22, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5940, file: !5941, line: 154, column: 7)
!5981 = !DILocation(line: 154, column: 19, scope: !5980)
!5982 = !DILocation(line: 154, column: 26, scope: !5980)
!5983 = !DILocation(line: 154, column: 29, scope: !5980)
!5984 = !DILocation(line: 154, column: 31, scope: !5980)
!5985 = !DILocation(line: 154, column: 36, scope: !5980)
!5986 = !DILocation(line: 154, column: 41, scope: !5980)
!5987 = !DILocation(line: 154, column: 7, scope: !5940)
!5988 = !DILocalVariable(name: "uc", scope: !5989, file: !5941, line: 156, type: !317)
!5989 = distinct !DILexicalBlock(scope: !5980, file: !5941, line: 155, column: 5)
!5990 = !DILocation(line: 156, column: 21, scope: !5989)
!5991 = !DILocation(line: 156, column: 27, scope: !5989)
!5992 = !DILocation(line: 156, column: 26, scope: !5989)
!5993 = !DILocation(line: 157, column: 14, scope: !5989)
!5994 = !DILocation(line: 157, column: 8, scope: !5989)
!5995 = !DILocation(line: 157, column: 12, scope: !5989)
!5996 = !DILocation(line: 158, column: 7, scope: !5989)
!5997 = !DILocation(line: 162, column: 10, scope: !5940)
!5998 = !DILocation(line: 162, column: 3, scope: !5940)
!5999 = !DILocation(line: 163, column: 1, scope: !5940)
!6000 = !DILocalVariable(name: "pwc", arg: 1, scope: !6001, file: !5941, line: 86, type: !5944)
!6001 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !5941, file: !5941, line: 86, type: !6002, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6015, retainedNodes: !4)
!6002 = !DISubroutineType(types: !6003)
!6003 = !{!110, !5944, !49, !110, !6004}
!6004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6005, size: 64)
!6005 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !4482, line: 6, baseType: !6006)
!6006 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !4484, line: 21, baseType: !6007)
!6007 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4484, line: 13, size: 64, elements: !6008)
!6008 = !{!6009, !6010}
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !6007, file: !4484, line: 15, baseType: !53, size: 32)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !6007, file: !4484, line: 20, baseType: !6011, size: 32, offset: 32)
!6011 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6007, file: !4484, line: 16, size: 32, elements: !6012)
!6012 = !{!6013, !6014}
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !6011, file: !4484, line: 18, baseType: !180, size: 32)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !6011, file: !4484, line: 19, baseType: !82, size: 32)
!6015 = distinct !DICompileUnit(language: DW_LANG_C99, file: !307, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !308, nameTableKind: None)
!6016 = !DILocalVariable(name: "s", arg: 2, scope: !6001, file: !5941, line: 86, type: !49)
!6017 = !DILocalVariable(name: "n", arg: 3, scope: !6001, file: !5941, line: 86, type: !110)
!6018 = !DILocalVariable(name: "ps", arg: 4, scope: !6001, file: !5941, line: 86, type: !6004)
!6019 = !DILocalVariable(name: "ret", scope: !6001, file: !5941, line: 88, type: !110)
!6020 = !DILocalVariable(name: "wc", scope: !6001, file: !5941, line: 89, type: !4508)
!6021 = distinct !DISubprogram(name: "extract_trimmed_name", scope: !6022, file: !6022, line: 49, type: !6023, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !309, retainedNodes: !4)
!6022 = !DIFile(filename: "lib/readutmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!6023 = !DISubroutineType(types: !6024)
!6024 = !{!6, !6025}
!6025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6026, size: 64)
!6026 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6027)
!6027 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !6028)
!6028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !6029)
!6029 = !{!6030, !6031, !6032, !6033, !6034, !6035, !6036, !6041, !6042, !6047, !6048}
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !6028, file: !72, line: 57, baseType: !14, size: 16)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !6028, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !6028, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !6028, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !6028, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !6028, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !6028, file: !72, line: 67, baseType: !6037, size: 32, offset: 2656)
!6037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !6038)
!6038 = !{!6039, !6040}
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !6037, file: !72, line: 45, baseType: !14, size: 16)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !6037, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !6028, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !6028, file: !72, line: 79, baseType: !6043, size: 64, offset: 2720)
!6043 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6028, file: !72, line: 75, size: 64, elements: !6044)
!6044 = !{!6045, !6046}
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !6043, file: !72, line: 77, baseType: !96, size: 32)
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !6043, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !6028, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !6028, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!6049 = !DILocalVariable(name: "ut", arg: 1, scope: !6021, file: !6022, line: 49, type: !6025)
!6050 = !DILocation(line: 49, column: 42, scope: !6021)
!6051 = !DILocalVariable(name: "p", scope: !6021, file: !6022, line: 51, type: !6)
!6052 = !DILocation(line: 51, column: 9, scope: !6021)
!6053 = !DILocalVariable(name: "trimmed_name", scope: !6021, file: !6022, line: 51, type: !6)
!6054 = !DILocation(line: 51, column: 13, scope: !6021)
!6055 = !DILocation(line: 53, column: 18, scope: !6021)
!6056 = !DILocation(line: 53, column: 16, scope: !6021)
!6057 = !DILocation(line: 54, column: 12, scope: !6021)
!6058 = !DILocation(line: 54, column: 26, scope: !6021)
!6059 = !DILocation(line: 54, column: 3, scope: !6021)
!6060 = !DILocation(line: 58, column: 3, scope: !6021)
!6061 = !DILocation(line: 58, column: 39, scope: !6021)
!6062 = !DILocation(line: 59, column: 12, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6021, file: !6022, line: 59, column: 3)
!6064 = !DILocation(line: 59, column: 35, scope: !6063)
!6065 = !DILocation(line: 59, column: 27, scope: !6063)
!6066 = !DILocation(line: 59, column: 25, scope: !6063)
!6067 = !DILocation(line: 59, column: 10, scope: !6063)
!6068 = !DILocation(line: 59, column: 8, scope: !6063)
!6069 = !DILocation(line: 60, column: 8, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6063, file: !6022, line: 59, column: 3)
!6071 = !DILocation(line: 60, column: 23, scope: !6070)
!6072 = !DILocation(line: 60, column: 21, scope: !6070)
!6073 = !DILocation(line: 60, column: 25, scope: !6070)
!6074 = !DILocation(line: 60, column: 28, scope: !6070)
!6075 = !DILocation(line: 60, column: 34, scope: !6070)
!6076 = !DILocation(line: 0, scope: !6070)
!6077 = !DILocation(line: 59, column: 3, scope: !6063)
!6078 = !DILocation(line: 62, column: 5, scope: !6070)
!6079 = !DILocation(line: 61, column: 9, scope: !6070)
!6080 = !DILocation(line: 61, column: 13, scope: !6070)
!6081 = !DILocation(line: 59, column: 3, scope: !6070)
!6082 = distinct !{!6082, !6077, !6083}
!6083 = !DILocation(line: 62, column: 5, scope: !6063)
!6084 = !DILocation(line: 63, column: 10, scope: !6021)
!6085 = !DILocation(line: 63, column: 3, scope: !6021)
!6086 = !DILocalVariable(name: "ut", arg: 1, scope: !6087, file: !6022, line: 49, type: !6090)
!6087 = distinct !DISubprogram(name: "extract_trimmed_name", scope: !6022, file: !6022, line: 49, type: !6088, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6114, retainedNodes: !4)
!6088 = !DISubroutineType(types: !6089)
!6089 = !{!6, !6090}
!6090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6091, size: 64)
!6091 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6092)
!6092 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !6093)
!6093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !6094)
!6094 = !{!6095, !6096, !6097, !6098, !6099, !6100, !6101, !6106, !6107, !6112, !6113}
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !6093, file: !72, line: 57, baseType: !14, size: 16)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !6093, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !6093, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !6093, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !6093, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !6093, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !6093, file: !72, line: 67, baseType: !6102, size: 32, offset: 2656)
!6102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !6103)
!6103 = !{!6104, !6105}
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !6102, file: !72, line: 45, baseType: !14, size: 16)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !6102, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !6093, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !6093, file: !72, line: 79, baseType: !6108, size: 64, offset: 2720)
!6108 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6093, file: !72, line: 75, size: 64, elements: !6109)
!6109 = !{!6110, !6111}
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !6108, file: !72, line: 77, baseType: !96, size: 32)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !6108, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !6093, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !6093, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!6114 = distinct !DICompileUnit(language: DW_LANG_C99, file: !310, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !311, nameTableKind: None)
!6115 = !DILocalVariable(name: "p", scope: !6087, file: !6022, line: 51, type: !6)
!6116 = !DILocalVariable(name: "trimmed_name", scope: !6087, file: !6022, line: 51, type: !6)
!6117 = distinct !DISubprogram(name: "read_utmp", scope: !6022, file: !6022, line: 92, type: !6118, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !309, retainedNodes: !4)
!6118 = !DISubroutineType(types: !6119)
!6119 = !{!53, !49, !5869, !6120, !53}
!6120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6121, size: 64)
!6121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6027, size: 64)
!6122 = !DILocalVariable(name: "file", arg: 1, scope: !6117, file: !6022, line: 92, type: !49)
!6123 = !DILocation(line: 92, column: 24, scope: !6117)
!6124 = !DILocalVariable(name: "n_entries", arg: 2, scope: !6117, file: !6022, line: 92, type: !5869)
!6125 = !DILocation(line: 92, column: 38, scope: !6117)
!6126 = !DILocalVariable(name: "utmp_buf", arg: 3, scope: !6117, file: !6022, line: 92, type: !6120)
!6127 = !DILocation(line: 92, column: 63, scope: !6117)
!6128 = !DILocalVariable(name: "options", arg: 4, scope: !6117, file: !6022, line: 93, type: !53)
!6129 = !DILocation(line: 93, column: 16, scope: !6117)
!6130 = !DILocalVariable(name: "n_read", scope: !6117, file: !6022, line: 95, type: !110)
!6131 = !DILocation(line: 95, column: 10, scope: !6117)
!6132 = !DILocalVariable(name: "n_alloc", scope: !6117, file: !6022, line: 96, type: !110)
!6133 = !DILocation(line: 96, column: 10, scope: !6117)
!6134 = !DILocalVariable(name: "utmp", scope: !6117, file: !6022, line: 97, type: !6121)
!6135 = !DILocation(line: 97, column: 16, scope: !6117)
!6136 = !DILocalVariable(name: "u", scope: !6117, file: !6022, line: 98, type: !6121)
!6137 = !DILocation(line: 98, column: 16, scope: !6117)
!6138 = !DILocation(line: 104, column: 32, scope: !6117)
!6139 = !DILocation(line: 104, column: 3, scope: !6117)
!6140 = !DILocation(line: 106, column: 3, scope: !6117)
!6141 = !DILocation(line: 108, column: 3, scope: !6117)
!6142 = !DILocation(line: 108, column: 15, scope: !6117)
!6143 = !DILocation(line: 108, column: 13, scope: !6117)
!6144 = !DILocation(line: 108, column: 32, scope: !6117)
!6145 = !DILocation(line: 109, column: 31, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6117, file: !6022, line: 109, column: 9)
!6147 = !DILocation(line: 109, column: 34, scope: !6146)
!6148 = !DILocation(line: 109, column: 9, scope: !6146)
!6149 = !DILocation(line: 109, column: 9, scope: !6117)
!6150 = !DILocation(line: 111, column: 13, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6152, file: !6022, line: 111, column: 13)
!6152 = distinct !DILexicalBlock(scope: !6146, file: !6022, line: 110, column: 7)
!6153 = !DILocation(line: 111, column: 23, scope: !6151)
!6154 = !DILocation(line: 111, column: 20, scope: !6151)
!6155 = !DILocation(line: 111, column: 13, scope: !6152)
!6156 = !DILocation(line: 112, column: 30, scope: !6151)
!6157 = !DILocation(line: 112, column: 18, scope: !6151)
!6158 = !DILocation(line: 112, column: 16, scope: !6151)
!6159 = !DILocation(line: 112, column: 11, scope: !6151)
!6160 = !DILocation(line: 114, column: 9, scope: !6152)
!6161 = !DILocation(line: 114, column: 20, scope: !6152)
!6162 = !DILocation(line: 114, column: 27, scope: !6152)
!6163 = !DILocation(line: 114, column: 26, scope: !6152)
!6164 = !DILocation(line: 115, column: 7, scope: !6152)
!6165 = distinct !{!6165, !6141, !6166}
!6166 = !DILocation(line: 115, column: 7, scope: !6117)
!6167 = !DILocation(line: 117, column: 3, scope: !6117)
!6168 = !DILocation(line: 119, column: 16, scope: !6117)
!6169 = !DILocation(line: 119, column: 4, scope: !6117)
!6170 = !DILocation(line: 119, column: 14, scope: !6117)
!6171 = !DILocation(line: 120, column: 15, scope: !6117)
!6172 = !DILocation(line: 120, column: 4, scope: !6117)
!6173 = !DILocation(line: 120, column: 13, scope: !6117)
!6174 = !DILocation(line: 122, column: 3, scope: !6117)
!6175 = !DILocalVariable(name: "file", arg: 1, scope: !6176, file: !6022, line: 92, type: !49)
!6176 = distinct !DISubprogram(name: "read_utmp", scope: !6022, file: !6022, line: 92, type: !6177, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6203, retainedNodes: !4)
!6177 = !DISubroutineType(types: !6178)
!6178 = !{!53, !49, !5869, !6179, !53}
!6179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6180, size: 64)
!6180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6181, size: 64)
!6181 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !6182)
!6182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !6183)
!6183 = !{!6184, !6185, !6186, !6187, !6188, !6189, !6190, !6195, !6196, !6201, !6202}
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !6182, file: !72, line: 57, baseType: !14, size: 16)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !6182, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !6182, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !6182, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !6182, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !6182, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !6182, file: !72, line: 67, baseType: !6191, size: 32, offset: 2656)
!6191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !6192)
!6192 = !{!6193, !6194}
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !6191, file: !72, line: 45, baseType: !14, size: 16)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !6191, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !6182, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !6182, file: !72, line: 79, baseType: !6197, size: 64, offset: 2720)
!6197 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6182, file: !72, line: 75, size: 64, elements: !6198)
!6198 = !{!6199, !6200}
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !6197, file: !72, line: 77, baseType: !96, size: 32)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !6197, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !6182, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !6182, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!6203 = distinct !DICompileUnit(language: DW_LANG_C99, file: !310, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !311, nameTableKind: None)
!6204 = !DILocalVariable(name: "n_entries", arg: 2, scope: !6176, file: !6022, line: 92, type: !5869)
!6205 = !DILocalVariable(name: "utmp_buf", arg: 3, scope: !6176, file: !6022, line: 92, type: !6179)
!6206 = !DILocalVariable(name: "options", arg: 4, scope: !6176, file: !6022, line: 93, type: !53)
!6207 = !DILocalVariable(name: "n_read", scope: !6176, file: !6022, line: 95, type: !110)
!6208 = !DILocalVariable(name: "n_alloc", scope: !6176, file: !6022, line: 96, type: !110)
!6209 = !DILocalVariable(name: "utmp", scope: !6176, file: !6022, line: 97, type: !6180)
!6210 = !DILocalVariable(name: "u", scope: !6176, file: !6022, line: 98, type: !6180)
!6211 = distinct !DISubprogram(name: "desirable_utmp_entry", scope: !6022, file: !6022, line: 69, type: !6212, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !309, retainedNodes: !4)
!6212 = !DISubroutineType(types: !6213)
!6213 = !{!18, !6025, !53}
!6214 = !DILocalVariable(name: "u", arg: 1, scope: !6211, file: !6022, line: 69, type: !6025)
!6215 = !DILocation(line: 69, column: 42, scope: !6211)
!6216 = !DILocalVariable(name: "options", arg: 2, scope: !6211, file: !6022, line: 69, type: !53)
!6217 = !DILocation(line: 69, column: 49, scope: !6211)
!6218 = !DILocalVariable(name: "user_proc", scope: !6211, file: !6022, line: 71, type: !18)
!6219 = !DILocation(line: 71, column: 8, scope: !6211)
!6220 = !DILocation(line: 71, column: 20, scope: !6211)
!6221 = !DILocation(line: 0, scope: !6211)
!6222 = !DILocation(line: 72, column: 8, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6211, file: !6022, line: 72, column: 7)
!6224 = !DILocation(line: 72, column: 16, scope: !6223)
!6225 = !DILocation(line: 72, column: 42, scope: !6223)
!6226 = !DILocation(line: 72, column: 46, scope: !6223)
!6227 = !DILocation(line: 72, column: 7, scope: !6211)
!6228 = !DILocation(line: 73, column: 5, scope: !6223)
!6229 = !DILocation(line: 74, column: 8, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6211, file: !6022, line: 74, column: 7)
!6231 = !DILocation(line: 74, column: 16, scope: !6230)
!6232 = !DILocation(line: 75, column: 7, scope: !6230)
!6233 = !DILocation(line: 75, column: 10, scope: !6230)
!6234 = !DILocation(line: 76, column: 7, scope: !6230)
!6235 = !DILocation(line: 76, column: 14, scope: !6230)
!6236 = !DILocation(line: 76, column: 12, scope: !6230)
!6237 = !DILocation(line: 77, column: 7, scope: !6230)
!6238 = !DILocation(line: 77, column: 17, scope: !6230)
!6239 = !DILocation(line: 77, column: 11, scope: !6230)
!6240 = !DILocation(line: 77, column: 32, scope: !6230)
!6241 = !DILocation(line: 77, column: 36, scope: !6230)
!6242 = !DILocation(line: 77, column: 39, scope: !6230)
!6243 = !DILocation(line: 77, column: 45, scope: !6230)
!6244 = !DILocation(line: 74, column: 7, scope: !6211)
!6245 = !DILocation(line: 78, column: 5, scope: !6230)
!6246 = !DILocation(line: 79, column: 3, scope: !6211)
!6247 = !DILocation(line: 80, column: 1, scope: !6211)
!6248 = !DILocalVariable(name: "u", arg: 1, scope: !6249, file: !6022, line: 69, type: !6252)
!6249 = distinct !DISubprogram(name: "desirable_utmp_entry", scope: !6022, file: !6022, line: 69, type: !6250, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !6276, retainedNodes: !4)
!6250 = !DISubroutineType(types: !6251)
!6251 = !{!18, !6252, !53}
!6252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6253, size: 64)
!6253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6254)
!6254 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !6255)
!6255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !6256)
!6256 = !{!6257, !6258, !6259, !6260, !6261, !6262, !6263, !6268, !6269, !6274, !6275}
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !6255, file: !72, line: 57, baseType: !14, size: 16)
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !6255, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !6255, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !6255, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !6255, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !6255, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !6255, file: !72, line: 67, baseType: !6264, size: 32, offset: 2656)
!6264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !6265)
!6265 = !{!6266, !6267}
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !6264, file: !72, line: 45, baseType: !14, size: 16)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !6264, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !6255, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !6255, file: !72, line: 79, baseType: !6270, size: 64, offset: 2720)
!6270 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6255, file: !72, line: 75, size: 64, elements: !6271)
!6271 = !{!6272, !6273}
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !6270, file: !72, line: 77, baseType: !96, size: 32)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !6270, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !6255, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !6255, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!6276 = distinct !DICompileUnit(language: DW_LANG_C99, file: !310, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !311, nameTableKind: None)
!6277 = !DILocalVariable(name: "options", arg: 2, scope: !6249, file: !6022, line: 69, type: !53)
!6278 = !DILocalVariable(name: "user_proc", scope: !6249, file: !6022, line: 71, type: !18)
!6279 = distinct !DISubprogram(name: "c_strcasecmp", scope: !6280, file: !6280, line: 27, type: !6281, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !312, retainedNodes: !4)
!6280 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!6281 = !DISubroutineType(types: !6282)
!6282 = !{!53, !49, !49}
!6283 = !DILocalVariable(name: "s1", arg: 1, scope: !6279, file: !6280, line: 27, type: !49)
!6284 = !DILocation(line: 27, column: 27, scope: !6279)
!6285 = !DILocalVariable(name: "s2", arg: 2, scope: !6279, file: !6280, line: 27, type: !49)
!6286 = !DILocation(line: 27, column: 43, scope: !6279)
!6287 = !DILocalVariable(name: "p1", scope: !6279, file: !6280, line: 29, type: !315)
!6288 = !DILocation(line: 29, column: 33, scope: !6279)
!6289 = !DILocation(line: 29, column: 62, scope: !6279)
!6290 = !DILocalVariable(name: "p2", scope: !6279, file: !6280, line: 30, type: !315)
!6291 = !DILocation(line: 30, column: 33, scope: !6279)
!6292 = !DILocation(line: 30, column: 62, scope: !6279)
!6293 = !DILocalVariable(name: "c1", scope: !6279, file: !6280, line: 31, type: !317)
!6294 = !DILocation(line: 31, column: 17, scope: !6279)
!6295 = !DILocalVariable(name: "c2", scope: !6279, file: !6280, line: 31, type: !317)
!6296 = !DILocation(line: 31, column: 21, scope: !6279)
!6297 = !DILocation(line: 33, column: 7, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6279, file: !6280, line: 33, column: 7)
!6299 = !DILocation(line: 33, column: 13, scope: !6298)
!6300 = !DILocation(line: 33, column: 10, scope: !6298)
!6301 = !DILocation(line: 33, column: 7, scope: !6279)
!6302 = !DILocation(line: 34, column: 5, scope: !6298)
!6303 = !DILocation(line: 36, column: 3, scope: !6279)
!6304 = !DILocation(line: 38, column: 24, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6279, file: !6280, line: 37, column: 5)
!6306 = !DILocation(line: 38, column: 23, scope: !6305)
!6307 = !DILocation(line: 38, column: 12, scope: !6305)
!6308 = !DILocation(line: 38, column: 10, scope: !6305)
!6309 = !DILocation(line: 39, column: 24, scope: !6305)
!6310 = !DILocation(line: 39, column: 23, scope: !6305)
!6311 = !DILocation(line: 39, column: 12, scope: !6305)
!6312 = !DILocation(line: 39, column: 10, scope: !6305)
!6313 = !DILocation(line: 41, column: 11, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6305, file: !6280, line: 41, column: 11)
!6315 = !DILocation(line: 41, column: 14, scope: !6314)
!6316 = !DILocation(line: 41, column: 11, scope: !6305)
!6317 = !DILocation(line: 42, column: 9, scope: !6314)
!6318 = !DILocation(line: 44, column: 7, scope: !6305)
!6319 = !DILocation(line: 45, column: 7, scope: !6305)
!6320 = !DILocation(line: 46, column: 5, scope: !6305)
!6321 = !DILocation(line: 47, column: 10, scope: !6279)
!6322 = !DILocation(line: 47, column: 16, scope: !6279)
!6323 = !DILocation(line: 47, column: 13, scope: !6279)
!6324 = distinct !{!6324, !6303, !6325}
!6325 = !DILocation(line: 47, column: 18, scope: !6279)
!6326 = !DILocation(line: 50, column: 12, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6279, file: !6280, line: 49, column: 7)
!6328 = !DILocation(line: 50, column: 17, scope: !6327)
!6329 = !DILocation(line: 50, column: 15, scope: !6327)
!6330 = !DILocation(line: 50, column: 5, scope: !6327)
!6331 = !DILocation(line: 56, column: 1, scope: !6279)
!6332 = !DILocalVariable(name: "s1", arg: 1, scope: !6333, file: !6280, line: 27, type: !49)
!6333 = distinct !DISubprogram(name: "c_strcasecmp", scope: !6280, file: !6280, line: 27, type: !6281, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6334, retainedNodes: !4)
!6334 = distinct !DICompileUnit(language: DW_LANG_C99, file: !313, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !314, nameTableKind: None)
!6335 = !DILocalVariable(name: "s2", arg: 2, scope: !6333, file: !6280, line: 27, type: !49)
!6336 = !DILocalVariable(name: "p1", scope: !6333, file: !6280, line: 29, type: !315)
!6337 = !DILocalVariable(name: "p2", scope: !6333, file: !6280, line: 30, type: !315)
!6338 = !DILocalVariable(name: "c1", scope: !6333, file: !6280, line: 31, type: !317)
!6339 = !DILocalVariable(name: "c2", scope: !6333, file: !6280, line: 31, type: !317)
!6340 = distinct !DISubprogram(name: "close_stream", scope: !6341, file: !6341, line: 56, type: !6342, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !318, retainedNodes: !4)
!6341 = !DIFile(filename: "lib/close-stream.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!6342 = !DISubroutineType(types: !6343)
!6343 = !{!53, !6344}
!6344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6345, size: 64)
!6345 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5402, line: 7, baseType: !6346)
!6346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5404, line: 49, size: 1728, elements: !6347)
!6347 = !{!6348, !6349, !6350, !6351, !6352, !6353, !6354, !6355, !6356, !6357, !6358, !6359, !6360, !6361, !6363, !6364, !6365, !6366, !6367, !6368, !6369, !6370, !6371, !6372, !6373, !6374, !6375, !6376, !6377}
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6346, file: !5404, line: 51, baseType: !53, size: 32)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6346, file: !5404, line: 54, baseType: !6, size: 64, offset: 64)
!6350 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6346, file: !5404, line: 55, baseType: !6, size: 64, offset: 128)
!6351 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6346, file: !5404, line: 56, baseType: !6, size: 64, offset: 192)
!6352 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6346, file: !5404, line: 57, baseType: !6, size: 64, offset: 256)
!6353 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6346, file: !5404, line: 58, baseType: !6, size: 64, offset: 320)
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6346, file: !5404, line: 59, baseType: !6, size: 64, offset: 384)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6346, file: !5404, line: 60, baseType: !6, size: 64, offset: 448)
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6346, file: !5404, line: 61, baseType: !6, size: 64, offset: 512)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6346, file: !5404, line: 64, baseType: !6, size: 64, offset: 576)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6346, file: !5404, line: 65, baseType: !6, size: 64, offset: 640)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6346, file: !5404, line: 66, baseType: !6, size: 64, offset: 704)
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6346, file: !5404, line: 68, baseType: !5419, size: 64, offset: 768)
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6346, file: !5404, line: 70, baseType: !6362, size: 64, offset: 832)
!6362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6346, size: 64)
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6346, file: !5404, line: 72, baseType: !53, size: 32, offset: 896)
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6346, file: !5404, line: 73, baseType: !53, size: 32, offset: 928)
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6346, file: !5404, line: 74, baseType: !1395, size: 64, offset: 960)
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6346, file: !5404, line: 77, baseType: !188, size: 16, offset: 1024)
!6367 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6346, file: !5404, line: 78, baseType: !5428, size: 8, offset: 1040)
!6368 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6346, file: !5404, line: 79, baseType: !5430, size: 8, offset: 1048)
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6346, file: !5404, line: 81, baseType: !5434, size: 64, offset: 1088)
!6370 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6346, file: !5404, line: 89, baseType: !5437, size: 64, offset: 1152)
!6371 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !6346, file: !5404, line: 91, baseType: !5439, size: 64, offset: 1216)
!6372 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !6346, file: !5404, line: 92, baseType: !5442, size: 64, offset: 1280)
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !6346, file: !5404, line: 93, baseType: !6362, size: 64, offset: 1344)
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !6346, file: !5404, line: 94, baseType: !8, size: 64, offset: 1408)
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6346, file: !5404, line: 95, baseType: !110, size: 64, offset: 1472)
!6376 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6346, file: !5404, line: 96, baseType: !53, size: 32, offset: 1536)
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6346, file: !5404, line: 98, baseType: !105, size: 160, offset: 1568)
!6378 = !DILocalVariable(name: "stream", arg: 1, scope: !6340, file: !6341, line: 56, type: !6344)
!6379 = !DILocation(line: 56, column: 21, scope: !6340)
!6380 = !DILocalVariable(name: "some_pending", scope: !6340, file: !6341, line: 58, type: !6381)
!6381 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18)
!6382 = !DILocation(line: 58, column: 14, scope: !6340)
!6383 = !DILocation(line: 58, column: 42, scope: !6340)
!6384 = !DILocation(line: 58, column: 30, scope: !6340)
!6385 = !DILocation(line: 58, column: 50, scope: !6340)
!6386 = !DILocalVariable(name: "prev_fail", scope: !6340, file: !6341, line: 59, type: !6381)
!6387 = !DILocation(line: 59, column: 14, scope: !6340)
!6388 = !DILocation(line: 59, column: 27, scope: !6340)
!6389 = !DILocation(line: 59, column: 43, scope: !6340)
!6390 = !DILocalVariable(name: "fclose_fail", scope: !6340, file: !6341, line: 60, type: !6381)
!6391 = !DILocation(line: 60, column: 14, scope: !6340)
!6392 = !DILocation(line: 60, column: 37, scope: !6340)
!6393 = !DILocation(line: 60, column: 29, scope: !6340)
!6394 = !DILocation(line: 60, column: 45, scope: !6340)
!6395 = !DILocation(line: 70, column: 7, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6340, file: !6341, line: 70, column: 7)
!6397 = !DILocation(line: 70, column: 17, scope: !6396)
!6398 = !DILocation(line: 70, column: 21, scope: !6396)
!6399 = !DILocation(line: 70, column: 33, scope: !6396)
!6400 = !DILocation(line: 70, column: 37, scope: !6396)
!6401 = !DILocation(line: 70, column: 50, scope: !6396)
!6402 = !DILocation(line: 70, column: 53, scope: !6396)
!6403 = !DILocation(line: 70, column: 59, scope: !6396)
!6404 = !DILocation(line: 70, column: 7, scope: !6340)
!6405 = !DILocation(line: 72, column: 13, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6407, file: !6341, line: 72, column: 11)
!6407 = distinct !DILexicalBlock(scope: !6396, file: !6341, line: 71, column: 5)
!6408 = !DILocation(line: 72, column: 11, scope: !6407)
!6409 = !DILocation(line: 73, column: 9, scope: !6406)
!6410 = !DILocation(line: 73, column: 15, scope: !6406)
!6411 = !DILocation(line: 74, column: 7, scope: !6407)
!6412 = !DILocation(line: 77, column: 3, scope: !6340)
!6413 = !DILocation(line: 78, column: 1, scope: !6340)
!6414 = !DILocalVariable(name: "stream", arg: 1, scope: !6415, file: !6341, line: 56, type: !6418)
!6415 = distinct !DISubprogram(name: "close_stream", scope: !6341, file: !6341, line: 56, type: !6416, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6452, retainedNodes: !4)
!6416 = !DISubroutineType(types: !6417)
!6417 = !{!53, !6418}
!6418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6419, size: 64)
!6419 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5402, line: 7, baseType: !6420)
!6420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5404, line: 49, size: 1728, elements: !6421)
!6421 = !{!6422, !6423, !6424, !6425, !6426, !6427, !6428, !6429, !6430, !6431, !6432, !6433, !6434, !6435, !6437, !6438, !6439, !6440, !6441, !6442, !6443, !6444, !6445, !6446, !6447, !6448, !6449, !6450, !6451}
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6420, file: !5404, line: 51, baseType: !53, size: 32)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6420, file: !5404, line: 54, baseType: !6, size: 64, offset: 64)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6420, file: !5404, line: 55, baseType: !6, size: 64, offset: 128)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6420, file: !5404, line: 56, baseType: !6, size: 64, offset: 192)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6420, file: !5404, line: 57, baseType: !6, size: 64, offset: 256)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6420, file: !5404, line: 58, baseType: !6, size: 64, offset: 320)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6420, file: !5404, line: 59, baseType: !6, size: 64, offset: 384)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6420, file: !5404, line: 60, baseType: !6, size: 64, offset: 448)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6420, file: !5404, line: 61, baseType: !6, size: 64, offset: 512)
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6420, file: !5404, line: 64, baseType: !6, size: 64, offset: 576)
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6420, file: !5404, line: 65, baseType: !6, size: 64, offset: 640)
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6420, file: !5404, line: 66, baseType: !6, size: 64, offset: 704)
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6420, file: !5404, line: 68, baseType: !5419, size: 64, offset: 768)
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6420, file: !5404, line: 70, baseType: !6436, size: 64, offset: 832)
!6436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6420, size: 64)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6420, file: !5404, line: 72, baseType: !53, size: 32, offset: 896)
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6420, file: !5404, line: 73, baseType: !53, size: 32, offset: 928)
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6420, file: !5404, line: 74, baseType: !1395, size: 64, offset: 960)
!6440 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6420, file: !5404, line: 77, baseType: !188, size: 16, offset: 1024)
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6420, file: !5404, line: 78, baseType: !5428, size: 8, offset: 1040)
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6420, file: !5404, line: 79, baseType: !5430, size: 8, offset: 1048)
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6420, file: !5404, line: 81, baseType: !5434, size: 64, offset: 1088)
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6420, file: !5404, line: 89, baseType: !5437, size: 64, offset: 1152)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !6420, file: !5404, line: 91, baseType: !5439, size: 64, offset: 1216)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !6420, file: !5404, line: 92, baseType: !5442, size: 64, offset: 1280)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !6420, file: !5404, line: 93, baseType: !6436, size: 64, offset: 1344)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !6420, file: !5404, line: 94, baseType: !8, size: 64, offset: 1408)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6420, file: !5404, line: 95, baseType: !110, size: 64, offset: 1472)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6420, file: !5404, line: 96, baseType: !53, size: 32, offset: 1536)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6420, file: !5404, line: 98, baseType: !105, size: 160, offset: 1568)
!6452 = distinct !DICompileUnit(language: DW_LANG_C99, file: !319, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!6453 = !DILocalVariable(name: "some_pending", scope: !6415, file: !6341, line: 58, type: !6381)
!6454 = !DILocalVariable(name: "prev_fail", scope: !6415, file: !6341, line: 59, type: !6381)
!6455 = !DILocalVariable(name: "fclose_fail", scope: !6415, file: !6341, line: 60, type: !6381)
!6456 = distinct !DISubprogram(name: "locale_charset", scope: !6457, file: !6457, line: 831, type: !6458, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !320, retainedNodes: !4)
!6457 = !DIFile(filename: "lib/localcharset.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!6458 = !DISubroutineType(types: !6459)
!6459 = !{!49}
!6460 = !DILocalVariable(name: "codeset", scope: !6456, file: !6457, line: 833, type: !49)
!6461 = !DILocation(line: 833, column: 15, scope: !6456)
!6462 = !DILocation(line: 847, column: 13, scope: !6456)
!6463 = !DILocation(line: 847, column: 11, scope: !6456)
!6464 = !DILocation(line: 911, column: 7, scope: !6465)
!6465 = distinct !DILexicalBlock(scope: !6456, file: !6457, line: 911, column: 7)
!6466 = !DILocation(line: 911, column: 15, scope: !6465)
!6467 = !DILocation(line: 911, column: 7, scope: !6456)
!6468 = !DILocation(line: 913, column: 13, scope: !6465)
!6469 = !DILocation(line: 913, column: 5, scope: !6465)
!6470 = !DILocation(line: 1070, column: 13, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6472, file: !6457, line: 1070, column: 13)
!6472 = distinct !DILexicalBlock(scope: !6473, file: !6457, line: 1060, column: 7)
!6473 = distinct !DILexicalBlock(scope: !6456, file: !6457, line: 1019, column: 3)
!6474 = !DILocation(line: 1070, column: 24, scope: !6471)
!6475 = !DILocation(line: 1070, column: 13, scope: !6472)
!6476 = !DILocation(line: 1071, column: 19, scope: !6471)
!6477 = !DILocation(line: 1071, column: 11, scope: !6471)
!6478 = !DILocation(line: 1158, column: 10, scope: !6456)
!6479 = !DILocation(line: 1158, column: 3, scope: !6456)
!6480 = !DILocalVariable(name: "codeset", scope: !6481, file: !6457, line: 833, type: !49)
!6481 = distinct !DISubprogram(name: "locale_charset", scope: !6457, file: !6457, line: 831, type: !6458, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6482, retainedNodes: !4)
!6482 = distinct !DICompileUnit(language: DW_LANG_C99, file: !321, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!6483 = distinct !DISubprogram(name: "rpl_fclose", scope: !6484, file: !6484, line: 58, type: !6485, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !322, retainedNodes: !4)
!6484 = !DIFile(filename: "lib/fclose.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!6485 = !DISubroutineType(types: !6486)
!6486 = !{!53, !6487}
!6487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6488, size: 64)
!6488 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5402, line: 7, baseType: !6489)
!6489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5404, line: 49, size: 1728, elements: !6490)
!6490 = !{!6491, !6492, !6493, !6494, !6495, !6496, !6497, !6498, !6499, !6500, !6501, !6502, !6503, !6504, !6506, !6507, !6508, !6509, !6510, !6511, !6512, !6513, !6514, !6515, !6516, !6517, !6518, !6519, !6520}
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6489, file: !5404, line: 51, baseType: !53, size: 32)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6489, file: !5404, line: 54, baseType: !6, size: 64, offset: 64)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6489, file: !5404, line: 55, baseType: !6, size: 64, offset: 128)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6489, file: !5404, line: 56, baseType: !6, size: 64, offset: 192)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6489, file: !5404, line: 57, baseType: !6, size: 64, offset: 256)
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6489, file: !5404, line: 58, baseType: !6, size: 64, offset: 320)
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6489, file: !5404, line: 59, baseType: !6, size: 64, offset: 384)
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6489, file: !5404, line: 60, baseType: !6, size: 64, offset: 448)
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6489, file: !5404, line: 61, baseType: !6, size: 64, offset: 512)
!6500 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6489, file: !5404, line: 64, baseType: !6, size: 64, offset: 576)
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6489, file: !5404, line: 65, baseType: !6, size: 64, offset: 640)
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6489, file: !5404, line: 66, baseType: !6, size: 64, offset: 704)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6489, file: !5404, line: 68, baseType: !5419, size: 64, offset: 768)
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6489, file: !5404, line: 70, baseType: !6505, size: 64, offset: 832)
!6505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6489, size: 64)
!6506 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6489, file: !5404, line: 72, baseType: !53, size: 32, offset: 896)
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6489, file: !5404, line: 73, baseType: !53, size: 32, offset: 928)
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6489, file: !5404, line: 74, baseType: !1395, size: 64, offset: 960)
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6489, file: !5404, line: 77, baseType: !188, size: 16, offset: 1024)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6489, file: !5404, line: 78, baseType: !5428, size: 8, offset: 1040)
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6489, file: !5404, line: 79, baseType: !5430, size: 8, offset: 1048)
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6489, file: !5404, line: 81, baseType: !5434, size: 64, offset: 1088)
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6489, file: !5404, line: 89, baseType: !5437, size: 64, offset: 1152)
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !6489, file: !5404, line: 91, baseType: !5439, size: 64, offset: 1216)
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !6489, file: !5404, line: 92, baseType: !5442, size: 64, offset: 1280)
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !6489, file: !5404, line: 93, baseType: !6505, size: 64, offset: 1344)
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !6489, file: !5404, line: 94, baseType: !8, size: 64, offset: 1408)
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6489, file: !5404, line: 95, baseType: !110, size: 64, offset: 1472)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6489, file: !5404, line: 96, baseType: !53, size: 32, offset: 1536)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6489, file: !5404, line: 98, baseType: !105, size: 160, offset: 1568)
!6521 = !DILocalVariable(name: "fp", arg: 1, scope: !6483, file: !6484, line: 58, type: !6487)
!6522 = !DILocation(line: 58, column: 19, scope: !6483)
!6523 = !DILocalVariable(name: "saved_errno", scope: !6483, file: !6484, line: 60, type: !53)
!6524 = !DILocation(line: 60, column: 7, scope: !6483)
!6525 = !DILocalVariable(name: "fd", scope: !6483, file: !6484, line: 61, type: !53)
!6526 = !DILocation(line: 61, column: 7, scope: !6483)
!6527 = !DILocalVariable(name: "result", scope: !6483, file: !6484, line: 62, type: !53)
!6528 = !DILocation(line: 62, column: 7, scope: !6483)
!6529 = !DILocation(line: 65, column: 16, scope: !6483)
!6530 = !DILocation(line: 65, column: 8, scope: !6483)
!6531 = !DILocation(line: 65, column: 6, scope: !6483)
!6532 = !DILocation(line: 66, column: 7, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6483, file: !6484, line: 66, column: 7)
!6534 = !DILocation(line: 66, column: 10, scope: !6533)
!6535 = !DILocation(line: 66, column: 7, scope: !6483)
!6536 = !DILocation(line: 67, column: 28, scope: !6533)
!6537 = !DILocation(line: 67, column: 12, scope: !6533)
!6538 = !DILocation(line: 67, column: 5, scope: !6533)
!6539 = !DILocation(line: 72, column: 9, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6483, file: !6484, line: 72, column: 7)
!6541 = !DILocation(line: 72, column: 23, scope: !6540)
!6542 = !DILocation(line: 72, column: 41, scope: !6540)
!6543 = !DILocation(line: 72, column: 33, scope: !6540)
!6544 = !DILocation(line: 72, column: 26, scope: !6540)
!6545 = !DILocation(line: 72, column: 59, scope: !6540)
!6546 = !DILocation(line: 73, column: 7, scope: !6540)
!6547 = !DILocation(line: 73, column: 18, scope: !6540)
!6548 = !DILocation(line: 73, column: 10, scope: !6540)
!6549 = !DILocation(line: 72, column: 7, scope: !6483)
!6550 = !DILocation(line: 74, column: 19, scope: !6540)
!6551 = !DILocation(line: 74, column: 17, scope: !6540)
!6552 = !DILocation(line: 74, column: 5, scope: !6540)
!6553 = !DILocation(line: 100, column: 28, scope: !6483)
!6554 = !DILocation(line: 100, column: 12, scope: !6483)
!6555 = !DILocation(line: 100, column: 10, scope: !6483)
!6556 = !DILocation(line: 105, column: 7, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6483, file: !6484, line: 105, column: 7)
!6558 = !DILocation(line: 105, column: 19, scope: !6557)
!6559 = !DILocation(line: 105, column: 7, scope: !6483)
!6560 = !DILocation(line: 107, column: 15, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6557, file: !6484, line: 106, column: 5)
!6562 = !DILocation(line: 107, column: 7, scope: !6561)
!6563 = !DILocation(line: 107, column: 13, scope: !6561)
!6564 = !DILocation(line: 108, column: 14, scope: !6561)
!6565 = !DILocation(line: 109, column: 5, scope: !6561)
!6566 = !DILocation(line: 111, column: 10, scope: !6483)
!6567 = !DILocation(line: 111, column: 3, scope: !6483)
!6568 = !DILocation(line: 112, column: 1, scope: !6483)
!6569 = !DILocalVariable(name: "fp", arg: 1, scope: !6570, file: !6484, line: 58, type: !6573)
!6570 = distinct !DISubprogram(name: "rpl_fclose", scope: !6484, file: !6484, line: 58, type: !6571, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6607, retainedNodes: !4)
!6571 = !DISubroutineType(types: !6572)
!6572 = !{!53, !6573}
!6573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6574, size: 64)
!6574 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5402, line: 7, baseType: !6575)
!6575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5404, line: 49, size: 1728, elements: !6576)
!6576 = !{!6577, !6578, !6579, !6580, !6581, !6582, !6583, !6584, !6585, !6586, !6587, !6588, !6589, !6590, !6592, !6593, !6594, !6595, !6596, !6597, !6598, !6599, !6600, !6601, !6602, !6603, !6604, !6605, !6606}
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6575, file: !5404, line: 51, baseType: !53, size: 32)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6575, file: !5404, line: 54, baseType: !6, size: 64, offset: 64)
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6575, file: !5404, line: 55, baseType: !6, size: 64, offset: 128)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6575, file: !5404, line: 56, baseType: !6, size: 64, offset: 192)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6575, file: !5404, line: 57, baseType: !6, size: 64, offset: 256)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6575, file: !5404, line: 58, baseType: !6, size: 64, offset: 320)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6575, file: !5404, line: 59, baseType: !6, size: 64, offset: 384)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6575, file: !5404, line: 60, baseType: !6, size: 64, offset: 448)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6575, file: !5404, line: 61, baseType: !6, size: 64, offset: 512)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6575, file: !5404, line: 64, baseType: !6, size: 64, offset: 576)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6575, file: !5404, line: 65, baseType: !6, size: 64, offset: 640)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6575, file: !5404, line: 66, baseType: !6, size: 64, offset: 704)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6575, file: !5404, line: 68, baseType: !5419, size: 64, offset: 768)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6575, file: !5404, line: 70, baseType: !6591, size: 64, offset: 832)
!6591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6575, size: 64)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6575, file: !5404, line: 72, baseType: !53, size: 32, offset: 896)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6575, file: !5404, line: 73, baseType: !53, size: 32, offset: 928)
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6575, file: !5404, line: 74, baseType: !1395, size: 64, offset: 960)
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6575, file: !5404, line: 77, baseType: !188, size: 16, offset: 1024)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6575, file: !5404, line: 78, baseType: !5428, size: 8, offset: 1040)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6575, file: !5404, line: 79, baseType: !5430, size: 8, offset: 1048)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6575, file: !5404, line: 81, baseType: !5434, size: 64, offset: 1088)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6575, file: !5404, line: 89, baseType: !5437, size: 64, offset: 1152)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !6575, file: !5404, line: 91, baseType: !5439, size: 64, offset: 1216)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !6575, file: !5404, line: 92, baseType: !5442, size: 64, offset: 1280)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !6575, file: !5404, line: 93, baseType: !6591, size: 64, offset: 1344)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !6575, file: !5404, line: 94, baseType: !8, size: 64, offset: 1408)
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6575, file: !5404, line: 95, baseType: !110, size: 64, offset: 1472)
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6575, file: !5404, line: 96, baseType: !53, size: 32, offset: 1536)
!6606 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6575, file: !5404, line: 98, baseType: !105, size: 160, offset: 1568)
!6607 = distinct !DICompileUnit(language: DW_LANG_C99, file: !323, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!6608 = !DILocalVariable(name: "saved_errno", scope: !6570, file: !6484, line: 60, type: !53)
!6609 = !DILocalVariable(name: "fd", scope: !6570, file: !6484, line: 61, type: !53)
!6610 = !DILocalVariable(name: "result", scope: !6570, file: !6484, line: 62, type: !53)
!6611 = distinct !DISubprogram(name: "rpl_fflush", scope: !6612, file: !6612, line: 129, type: !6613, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !324, retainedNodes: !4)
!6612 = !DIFile(filename: "lib/fflush.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!6613 = !DISubroutineType(types: !6614)
!6614 = !{!53, !6615}
!6615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6616, size: 64)
!6616 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5402, line: 7, baseType: !6617)
!6617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5404, line: 49, size: 1728, elements: !6618)
!6618 = !{!6619, !6620, !6621, !6622, !6623, !6624, !6625, !6626, !6627, !6628, !6629, !6630, !6631, !6632, !6634, !6635, !6636, !6637, !6638, !6639, !6640, !6641, !6642, !6643, !6644, !6645, !6646, !6647, !6648}
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6617, file: !5404, line: 51, baseType: !53, size: 32)
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6617, file: !5404, line: 54, baseType: !6, size: 64, offset: 64)
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6617, file: !5404, line: 55, baseType: !6, size: 64, offset: 128)
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6617, file: !5404, line: 56, baseType: !6, size: 64, offset: 192)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6617, file: !5404, line: 57, baseType: !6, size: 64, offset: 256)
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6617, file: !5404, line: 58, baseType: !6, size: 64, offset: 320)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6617, file: !5404, line: 59, baseType: !6, size: 64, offset: 384)
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6617, file: !5404, line: 60, baseType: !6, size: 64, offset: 448)
!6627 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6617, file: !5404, line: 61, baseType: !6, size: 64, offset: 512)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6617, file: !5404, line: 64, baseType: !6, size: 64, offset: 576)
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6617, file: !5404, line: 65, baseType: !6, size: 64, offset: 640)
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6617, file: !5404, line: 66, baseType: !6, size: 64, offset: 704)
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6617, file: !5404, line: 68, baseType: !5419, size: 64, offset: 768)
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6617, file: !5404, line: 70, baseType: !6633, size: 64, offset: 832)
!6633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6617, size: 64)
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6617, file: !5404, line: 72, baseType: !53, size: 32, offset: 896)
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6617, file: !5404, line: 73, baseType: !53, size: 32, offset: 928)
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6617, file: !5404, line: 74, baseType: !1395, size: 64, offset: 960)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6617, file: !5404, line: 77, baseType: !188, size: 16, offset: 1024)
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6617, file: !5404, line: 78, baseType: !5428, size: 8, offset: 1040)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6617, file: !5404, line: 79, baseType: !5430, size: 8, offset: 1048)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6617, file: !5404, line: 81, baseType: !5434, size: 64, offset: 1088)
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6617, file: !5404, line: 89, baseType: !5437, size: 64, offset: 1152)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !6617, file: !5404, line: 91, baseType: !5439, size: 64, offset: 1216)
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !6617, file: !5404, line: 92, baseType: !5442, size: 64, offset: 1280)
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !6617, file: !5404, line: 93, baseType: !6633, size: 64, offset: 1344)
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !6617, file: !5404, line: 94, baseType: !8, size: 64, offset: 1408)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6617, file: !5404, line: 95, baseType: !110, size: 64, offset: 1472)
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6617, file: !5404, line: 96, baseType: !53, size: 32, offset: 1536)
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6617, file: !5404, line: 98, baseType: !105, size: 160, offset: 1568)
!6649 = !DILocalVariable(name: "stream", arg: 1, scope: !6611, file: !6612, line: 129, type: !6615)
!6650 = !DILocation(line: 129, column: 19, scope: !6611)
!6651 = !DILocation(line: 150, column: 7, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6611, file: !6612, line: 150, column: 7)
!6653 = !DILocation(line: 150, column: 14, scope: !6652)
!6654 = !DILocation(line: 150, column: 22, scope: !6652)
!6655 = !DILocation(line: 150, column: 27, scope: !6652)
!6656 = !DILocation(line: 150, column: 7, scope: !6611)
!6657 = !DILocation(line: 151, column: 20, scope: !6652)
!6658 = !DILocation(line: 151, column: 12, scope: !6652)
!6659 = !DILocation(line: 151, column: 5, scope: !6652)
!6660 = !DILocation(line: 156, column: 44, scope: !6611)
!6661 = !DILocation(line: 156, column: 3, scope: !6611)
!6662 = !DILocation(line: 158, column: 18, scope: !6611)
!6663 = !DILocation(line: 158, column: 10, scope: !6611)
!6664 = !DILocation(line: 158, column: 3, scope: !6611)
!6665 = !DILocation(line: 235, column: 1, scope: !6611)
!6666 = !DILocalVariable(name: "stream", arg: 1, scope: !6667, file: !6612, line: 129, type: !6670)
!6667 = distinct !DISubprogram(name: "rpl_fflush", scope: !6612, file: !6612, line: 129, type: !6668, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6704, retainedNodes: !4)
!6668 = !DISubroutineType(types: !6669)
!6669 = !{!53, !6670}
!6670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6671, size: 64)
!6671 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5402, line: 7, baseType: !6672)
!6672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5404, line: 49, size: 1728, elements: !6673)
!6673 = !{!6674, !6675, !6676, !6677, !6678, !6679, !6680, !6681, !6682, !6683, !6684, !6685, !6686, !6687, !6689, !6690, !6691, !6692, !6693, !6694, !6695, !6696, !6697, !6698, !6699, !6700, !6701, !6702, !6703}
!6674 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6672, file: !5404, line: 51, baseType: !53, size: 32)
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6672, file: !5404, line: 54, baseType: !6, size: 64, offset: 64)
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6672, file: !5404, line: 55, baseType: !6, size: 64, offset: 128)
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6672, file: !5404, line: 56, baseType: !6, size: 64, offset: 192)
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6672, file: !5404, line: 57, baseType: !6, size: 64, offset: 256)
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6672, file: !5404, line: 58, baseType: !6, size: 64, offset: 320)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6672, file: !5404, line: 59, baseType: !6, size: 64, offset: 384)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6672, file: !5404, line: 60, baseType: !6, size: 64, offset: 448)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6672, file: !5404, line: 61, baseType: !6, size: 64, offset: 512)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6672, file: !5404, line: 64, baseType: !6, size: 64, offset: 576)
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6672, file: !5404, line: 65, baseType: !6, size: 64, offset: 640)
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6672, file: !5404, line: 66, baseType: !6, size: 64, offset: 704)
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6672, file: !5404, line: 68, baseType: !5419, size: 64, offset: 768)
!6687 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6672, file: !5404, line: 70, baseType: !6688, size: 64, offset: 832)
!6688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6672, size: 64)
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6672, file: !5404, line: 72, baseType: !53, size: 32, offset: 896)
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6672, file: !5404, line: 73, baseType: !53, size: 32, offset: 928)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6672, file: !5404, line: 74, baseType: !1395, size: 64, offset: 960)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6672, file: !5404, line: 77, baseType: !188, size: 16, offset: 1024)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6672, file: !5404, line: 78, baseType: !5428, size: 8, offset: 1040)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6672, file: !5404, line: 79, baseType: !5430, size: 8, offset: 1048)
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6672, file: !5404, line: 81, baseType: !5434, size: 64, offset: 1088)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6672, file: !5404, line: 89, baseType: !5437, size: 64, offset: 1152)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !6672, file: !5404, line: 91, baseType: !5439, size: 64, offset: 1216)
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !6672, file: !5404, line: 92, baseType: !5442, size: 64, offset: 1280)
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !6672, file: !5404, line: 93, baseType: !6688, size: 64, offset: 1344)
!6700 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !6672, file: !5404, line: 94, baseType: !8, size: 64, offset: 1408)
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6672, file: !5404, line: 95, baseType: !110, size: 64, offset: 1472)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6672, file: !5404, line: 96, baseType: !53, size: 32, offset: 1536)
!6703 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6672, file: !5404, line: 98, baseType: !105, size: 160, offset: 1568)
!6704 = distinct !DICompileUnit(language: DW_LANG_C99, file: !325, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!6705 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !6612, file: !6612, line: 41, type: !6706, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !324, retainedNodes: !4)
!6706 = !DISubroutineType(types: !6707)
!6707 = !{null, !6615}
!6708 = !DILocalVariable(name: "fp", arg: 1, scope: !6705, file: !6612, line: 41, type: !6615)
!6709 = !DILocation(line: 41, column: 48, scope: !6705)
!6710 = !DILocation(line: 43, column: 7, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6705, file: !6612, line: 43, column: 7)
!6712 = !DILocation(line: 43, column: 11, scope: !6711)
!6713 = !DILocation(line: 43, column: 18, scope: !6711)
!6714 = !DILocation(line: 43, column: 7, scope: !6705)
!6715 = !DILocation(line: 45, column: 13, scope: !6711)
!6716 = !DILocation(line: 45, column: 5, scope: !6711)
!6717 = !DILocation(line: 46, column: 1, scope: !6705)
!6718 = !DILocalVariable(name: "fp", arg: 1, scope: !6719, file: !6612, line: 41, type: !6722)
!6719 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !6612, file: !6612, line: 41, type: !6720, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !6756, retainedNodes: !4)
!6720 = !DISubroutineType(types: !6721)
!6721 = !{null, !6722}
!6722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6723, size: 64)
!6723 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5402, line: 7, baseType: !6724)
!6724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5404, line: 49, size: 1728, elements: !6725)
!6725 = !{!6726, !6727, !6728, !6729, !6730, !6731, !6732, !6733, !6734, !6735, !6736, !6737, !6738, !6739, !6741, !6742, !6743, !6744, !6745, !6746, !6747, !6748, !6749, !6750, !6751, !6752, !6753, !6754, !6755}
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6724, file: !5404, line: 51, baseType: !53, size: 32)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6724, file: !5404, line: 54, baseType: !6, size: 64, offset: 64)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6724, file: !5404, line: 55, baseType: !6, size: 64, offset: 128)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6724, file: !5404, line: 56, baseType: !6, size: 64, offset: 192)
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6724, file: !5404, line: 57, baseType: !6, size: 64, offset: 256)
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6724, file: !5404, line: 58, baseType: !6, size: 64, offset: 320)
!6732 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6724, file: !5404, line: 59, baseType: !6, size: 64, offset: 384)
!6733 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6724, file: !5404, line: 60, baseType: !6, size: 64, offset: 448)
!6734 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6724, file: !5404, line: 61, baseType: !6, size: 64, offset: 512)
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6724, file: !5404, line: 64, baseType: !6, size: 64, offset: 576)
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6724, file: !5404, line: 65, baseType: !6, size: 64, offset: 640)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6724, file: !5404, line: 66, baseType: !6, size: 64, offset: 704)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6724, file: !5404, line: 68, baseType: !5419, size: 64, offset: 768)
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6724, file: !5404, line: 70, baseType: !6740, size: 64, offset: 832)
!6740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6724, size: 64)
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6724, file: !5404, line: 72, baseType: !53, size: 32, offset: 896)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6724, file: !5404, line: 73, baseType: !53, size: 32, offset: 928)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6724, file: !5404, line: 74, baseType: !1395, size: 64, offset: 960)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6724, file: !5404, line: 77, baseType: !188, size: 16, offset: 1024)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6724, file: !5404, line: 78, baseType: !5428, size: 8, offset: 1040)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6724, file: !5404, line: 79, baseType: !5430, size: 8, offset: 1048)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6724, file: !5404, line: 81, baseType: !5434, size: 64, offset: 1088)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6724, file: !5404, line: 89, baseType: !5437, size: 64, offset: 1152)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !6724, file: !5404, line: 91, baseType: !5439, size: 64, offset: 1216)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !6724, file: !5404, line: 92, baseType: !5442, size: 64, offset: 1280)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !6724, file: !5404, line: 93, baseType: !6740, size: 64, offset: 1344)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !6724, file: !5404, line: 94, baseType: !8, size: 64, offset: 1408)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6724, file: !5404, line: 95, baseType: !110, size: 64, offset: 1472)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6724, file: !5404, line: 96, baseType: !53, size: 32, offset: 1536)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6724, file: !5404, line: 98, baseType: !105, size: 160, offset: 1568)
!6756 = distinct !DICompileUnit(language: DW_LANG_C99, file: !325, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!6757 = distinct !DISubprogram(name: "rpl_fseeko", scope: !6758, file: !6758, line: 28, type: !6759, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !326, retainedNodes: !4)
!6758 = !DIFile(filename: "lib/fseeko.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!6759 = !DISubroutineType(types: !6760)
!6760 = !{!53, !6761, !6795, !53}
!6761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6762, size: 64)
!6762 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5402, line: 7, baseType: !6763)
!6763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5404, line: 49, size: 1728, elements: !6764)
!6764 = !{!6765, !6766, !6767, !6768, !6769, !6770, !6771, !6772, !6773, !6774, !6775, !6776, !6777, !6778, !6780, !6781, !6782, !6783, !6784, !6785, !6786, !6787, !6788, !6789, !6790, !6791, !6792, !6793, !6794}
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6763, file: !5404, line: 51, baseType: !53, size: 32)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6763, file: !5404, line: 54, baseType: !6, size: 64, offset: 64)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6763, file: !5404, line: 55, baseType: !6, size: 64, offset: 128)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6763, file: !5404, line: 56, baseType: !6, size: 64, offset: 192)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6763, file: !5404, line: 57, baseType: !6, size: 64, offset: 256)
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6763, file: !5404, line: 58, baseType: !6, size: 64, offset: 320)
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6763, file: !5404, line: 59, baseType: !6, size: 64, offset: 384)
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6763, file: !5404, line: 60, baseType: !6, size: 64, offset: 448)
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6763, file: !5404, line: 61, baseType: !6, size: 64, offset: 512)
!6774 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6763, file: !5404, line: 64, baseType: !6, size: 64, offset: 576)
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6763, file: !5404, line: 65, baseType: !6, size: 64, offset: 640)
!6776 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6763, file: !5404, line: 66, baseType: !6, size: 64, offset: 704)
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6763, file: !5404, line: 68, baseType: !5419, size: 64, offset: 768)
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6763, file: !5404, line: 70, baseType: !6779, size: 64, offset: 832)
!6779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6763, size: 64)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6763, file: !5404, line: 72, baseType: !53, size: 32, offset: 896)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6763, file: !5404, line: 73, baseType: !53, size: 32, offset: 928)
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6763, file: !5404, line: 74, baseType: !1395, size: 64, offset: 960)
!6783 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6763, file: !5404, line: 77, baseType: !188, size: 16, offset: 1024)
!6784 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6763, file: !5404, line: 78, baseType: !5428, size: 8, offset: 1040)
!6785 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6763, file: !5404, line: 79, baseType: !5430, size: 8, offset: 1048)
!6786 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6763, file: !5404, line: 81, baseType: !5434, size: 64, offset: 1088)
!6787 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6763, file: !5404, line: 89, baseType: !5437, size: 64, offset: 1152)
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !6763, file: !5404, line: 91, baseType: !5439, size: 64, offset: 1216)
!6789 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !6763, file: !5404, line: 92, baseType: !5442, size: 64, offset: 1280)
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !6763, file: !5404, line: 93, baseType: !6779, size: 64, offset: 1344)
!6791 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !6763, file: !5404, line: 94, baseType: !8, size: 64, offset: 1408)
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6763, file: !5404, line: 95, baseType: !110, size: 64, offset: 1472)
!6793 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6763, file: !5404, line: 96, baseType: !53, size: 32, offset: 1536)
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6763, file: !5404, line: 98, baseType: !105, size: 160, offset: 1568)
!6795 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !5741, line: 63, baseType: !1395)
!6796 = !DILocalVariable(name: "fp", arg: 1, scope: !6757, file: !6758, line: 28, type: !6761)
!6797 = !DILocation(line: 28, column: 15, scope: !6757)
!6798 = !DILocalVariable(name: "offset", arg: 2, scope: !6757, file: !6758, line: 28, type: !6795)
!6799 = !DILocation(line: 28, column: 25, scope: !6757)
!6800 = !DILocalVariable(name: "whence", arg: 3, scope: !6757, file: !6758, line: 28, type: !53)
!6801 = !DILocation(line: 28, column: 37, scope: !6757)
!6802 = !DILocation(line: 52, column: 7, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6757, file: !6758, line: 52, column: 7)
!6804 = !DILocation(line: 52, column: 11, scope: !6803)
!6805 = !DILocation(line: 52, column: 27, scope: !6803)
!6806 = !DILocation(line: 52, column: 31, scope: !6803)
!6807 = !DILocation(line: 52, column: 24, scope: !6803)
!6808 = !DILocation(line: 53, column: 7, scope: !6803)
!6809 = !DILocation(line: 53, column: 10, scope: !6803)
!6810 = !DILocation(line: 53, column: 14, scope: !6803)
!6811 = !DILocation(line: 53, column: 31, scope: !6803)
!6812 = !DILocation(line: 53, column: 35, scope: !6803)
!6813 = !DILocation(line: 53, column: 28, scope: !6803)
!6814 = !DILocation(line: 54, column: 7, scope: !6803)
!6815 = !DILocation(line: 54, column: 10, scope: !6803)
!6816 = !DILocation(line: 54, column: 14, scope: !6803)
!6817 = !DILocation(line: 54, column: 28, scope: !6803)
!6818 = !DILocation(line: 52, column: 7, scope: !6757)
!6819 = !DILocalVariable(name: "pos", scope: !6820, file: !6758, line: 117, type: !6795)
!6820 = distinct !DILexicalBlock(scope: !6803, file: !6758, line: 113, column: 5)
!6821 = !DILocation(line: 117, column: 13, scope: !6820)
!6822 = !DILocation(line: 117, column: 34, scope: !6820)
!6823 = !DILocation(line: 117, column: 26, scope: !6820)
!6824 = !DILocation(line: 117, column: 39, scope: !6820)
!6825 = !DILocation(line: 117, column: 47, scope: !6820)
!6826 = !DILocation(line: 117, column: 19, scope: !6820)
!6827 = !DILocation(line: 118, column: 11, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6820, file: !6758, line: 118, column: 11)
!6829 = !DILocation(line: 118, column: 15, scope: !6828)
!6830 = !DILocation(line: 118, column: 11, scope: !6820)
!6831 = !DILocation(line: 124, column: 11, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6828, file: !6758, line: 119, column: 9)
!6833 = !DILocation(line: 129, column: 7, scope: !6820)
!6834 = !DILocation(line: 129, column: 11, scope: !6820)
!6835 = !DILocation(line: 129, column: 18, scope: !6820)
!6836 = !DILocation(line: 130, column: 21, scope: !6820)
!6837 = !DILocation(line: 130, column: 7, scope: !6820)
!6838 = !DILocation(line: 130, column: 11, scope: !6820)
!6839 = !DILocation(line: 130, column: 19, scope: !6820)
!6840 = !DILocation(line: 161, column: 7, scope: !6820)
!6841 = !DILocation(line: 163, column: 18, scope: !6757)
!6842 = !DILocation(line: 163, column: 22, scope: !6757)
!6843 = !DILocation(line: 163, column: 30, scope: !6757)
!6844 = !DILocation(line: 163, column: 10, scope: !6757)
!6845 = !DILocation(line: 163, column: 3, scope: !6757)
!6846 = !DILocation(line: 164, column: 1, scope: !6757)
!6847 = !DILocalVariable(name: "fp", arg: 1, scope: !6848, file: !6758, line: 28, type: !6851)
!6848 = distinct !DISubprogram(name: "rpl_fseeko", scope: !6758, file: !6758, line: 28, type: !6849, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6885, retainedNodes: !4)
!6849 = !DISubroutineType(types: !6850)
!6850 = !{!53, !6851, !6795, !53}
!6851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6852, size: 64)
!6852 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5402, line: 7, baseType: !6853)
!6853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5404, line: 49, size: 1728, elements: !6854)
!6854 = !{!6855, !6856, !6857, !6858, !6859, !6860, !6861, !6862, !6863, !6864, !6865, !6866, !6867, !6868, !6870, !6871, !6872, !6873, !6874, !6875, !6876, !6877, !6878, !6879, !6880, !6881, !6882, !6883, !6884}
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6853, file: !5404, line: 51, baseType: !53, size: 32)
!6856 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6853, file: !5404, line: 54, baseType: !6, size: 64, offset: 64)
!6857 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6853, file: !5404, line: 55, baseType: !6, size: 64, offset: 128)
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6853, file: !5404, line: 56, baseType: !6, size: 64, offset: 192)
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6853, file: !5404, line: 57, baseType: !6, size: 64, offset: 256)
!6860 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6853, file: !5404, line: 58, baseType: !6, size: 64, offset: 320)
!6861 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6853, file: !5404, line: 59, baseType: !6, size: 64, offset: 384)
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6853, file: !5404, line: 60, baseType: !6, size: 64, offset: 448)
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6853, file: !5404, line: 61, baseType: !6, size: 64, offset: 512)
!6864 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6853, file: !5404, line: 64, baseType: !6, size: 64, offset: 576)
!6865 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6853, file: !5404, line: 65, baseType: !6, size: 64, offset: 640)
!6866 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6853, file: !5404, line: 66, baseType: !6, size: 64, offset: 704)
!6867 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6853, file: !5404, line: 68, baseType: !5419, size: 64, offset: 768)
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6853, file: !5404, line: 70, baseType: !6869, size: 64, offset: 832)
!6869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6853, size: 64)
!6870 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6853, file: !5404, line: 72, baseType: !53, size: 32, offset: 896)
!6871 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6853, file: !5404, line: 73, baseType: !53, size: 32, offset: 928)
!6872 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6853, file: !5404, line: 74, baseType: !1395, size: 64, offset: 960)
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6853, file: !5404, line: 77, baseType: !188, size: 16, offset: 1024)
!6874 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6853, file: !5404, line: 78, baseType: !5428, size: 8, offset: 1040)
!6875 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6853, file: !5404, line: 79, baseType: !5430, size: 8, offset: 1048)
!6876 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6853, file: !5404, line: 81, baseType: !5434, size: 64, offset: 1088)
!6877 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6853, file: !5404, line: 89, baseType: !5437, size: 64, offset: 1152)
!6878 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !6853, file: !5404, line: 91, baseType: !5439, size: 64, offset: 1216)
!6879 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !6853, file: !5404, line: 92, baseType: !5442, size: 64, offset: 1280)
!6880 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !6853, file: !5404, line: 93, baseType: !6869, size: 64, offset: 1344)
!6881 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !6853, file: !5404, line: 94, baseType: !8, size: 64, offset: 1408)
!6882 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6853, file: !5404, line: 95, baseType: !110, size: 64, offset: 1472)
!6883 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6853, file: !5404, line: 96, baseType: !53, size: 32, offset: 1536)
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6853, file: !5404, line: 98, baseType: !105, size: 160, offset: 1568)
!6885 = distinct !DICompileUnit(language: DW_LANG_C99, file: !327, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!6886 = !DILocalVariable(name: "offset", arg: 2, scope: !6848, file: !6758, line: 28, type: !6795)
!6887 = !DILocalVariable(name: "whence", arg: 3, scope: !6848, file: !6758, line: 28, type: !53)
