; ModuleID = '<stdin>'
source_filename = "ld-temp.o"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.infomap = type { i8*, i8* }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.addrinfo = type { i32, i32, i32, i32, i32, %struct.sockaddr*, i8*, %struct.addrinfo* }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.utmpx = type { i16, i32, [32 x i8], [4 x i8], [32 x i8], [256 x i8], %struct.__exit_status, i32, %struct.anon, [4 x i32], [20 x i8] }
%struct.__exit_status = type { i16, i16 }
%struct.anon = type { i32, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.__mbstate_t = type { i32, %union.anon }
%union.anon = type { i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [44 x i8] c"Usage: %s [OPTION]... [ FILE | ARG1 ARG2 ]\0A\00", align 1
@.str.2 = private unnamed_addr constant [60 x i8] c"Print information about users who are currently logged in.\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [195 x i8] c"\0A  -a, --all         same as -b -d --login -p -r -t -T -u\0A  -b, --boot        time of last system boot\0A  -d, --dead        print dead processes\0A  -H, --heading     print line of column headings\0A\00", align 1
@.str.4 = private unnamed_addr constant [50 x i8] c"  -l, --login       print system login processes\0A\00", align 1
@.str.5 = private unnamed_addr constant [187 x i8] c"      --lookup      attempt to canonicalize hostnames via DNS\0A  -m                only hostname and user associated with stdin\0A  -p, --process     print active processes spawned by init\0A\00", align 1
@.str.6 = private unnamed_addr constant [223 x i8] c"  -q, --count       all login names and number of users logged on\0A  -r, --runlevel    print current runlevel\0A  -s, --short       print only name, line, and time (default)\0A  -t, --time        print last system clock change\0A\00", align 1
@.str.7 = private unnamed_addr constant [163 x i8] c"  -T, -w, --mesg    add user's message status as +, - or ?\0A  -u, --users       list users logged in\0A      --message     same as -T\0A      --writable    same as -T\0A\00", align 1
@.str.8 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.9 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.10 = private unnamed_addr constant [125 x i8] c"\0AIf FILE is not specified, use %s.  %s as FILE is common.\0AIf ARG1 ARG2 given, -m presumed: 'am i' or 'mom likes' are usual.\0A\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"/var/run/utmp\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"/var/log/wtmp\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"who\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.27, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.33 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.18 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.34 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.36 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.37 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.38 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.39 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.14 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.25 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.26 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.27 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.16 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"abdlmpqrstuwHT\00", align 1
@longopts = internal constant [18 x %struct.option] [%struct.option { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0), i32 0, i32* null, i32 97 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0), i32 0, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i32 0, i32 0), i32 0, i32* null, i32 113 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i32 0, i32 0), i32 0, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i32 0, i32 0), i32 0, i32* null, i32 72 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i32 0, i32 0), i32 0, i32* null, i32 108 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i32 0, i32 0), i32 0, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0), i32 0, i32* null, i32 112 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i32 0, i32 0), i32 0, i32* null, i32 114 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i32 0, i32 0), i32 0, i32* null, i32 115 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i32 0, i32 0), i32 0, i32* null, i32 116 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i32 0, i32 0), i32 0, i32* null, i32 117 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.56, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !0
@need_boottime = internal global i8 0, align 1, !dbg !31
@need_deadprocs = internal global i8 0, align 1, !dbg !33
@need_login = internal global i8 0, align 1, !dbg !35
@need_initspawn = internal global i8 0, align 1, !dbg !37
@need_runlevel = internal global i8 0, align 1, !dbg !41
@need_clockchange = internal global i8 0, align 1, !dbg !39
@need_users = internal global i8 0, align 1, !dbg !43
@include_mesg = internal global i8 0, align 1, !dbg !27
@include_idle = internal global i8 0, align 1, !dbg !23
@include_exit = internal global i8 0, align 1, !dbg !29
@include_heading = internal global i8 0, align 1, !dbg !25
@my_line_only = internal global i8 0, align 1, !dbg !45
@short_list = internal global i8 0, align 1, !dbg !19
@short_output = internal global i8 0, align 1, !dbg !21
@do_lookup = internal global i8 0, align 1, !dbg !16
@.str.19 = private unnamed_addr constant [17 x i8] c"Joseph Arceneaux\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str.21 = private unnamed_addr constant [14 x i8] c"Michael Stone\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"%Y-%m-%d %H:%M\00", align 1
@time_format = internal global i8* null, align 8, !dbg !47
@time_format_width = internal global i32 0, align 4, !dbg !51
@.str.23 = private unnamed_addr constant [12 x i8] c"%b %e %H:%M\00", align 1
@optind = external dso_local global i32, align 4
@.str.24 = private unnamed_addr constant [17 x i8] c"extra operand %s\00", align 1
@.str.57 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"/dev/\00", align 1
@.str.74 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@print_deadprocs.exitstr = internal global i8* null, align 8, !dbg !138
@.str.92 = private unnamed_addr constant [6 x i8] c"term=\00", align 1
@.str.93 = private unnamed_addr constant [6 x i8] c"exit=\00", align 1
@.str.94 = private unnamed_addr constant [10 x i8] c"%s%d %s%d\00", align 1
@print_line.mesg = internal global [3 x i8] c" x\00", align 1, !dbg !54
@.str.69 = private unnamed_addr constant [6 x i8] c" %-6s\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c" %10s\00", align 1
@.str.71 = private unnamed_addr constant [7 x i8] c" %-12s\00", align 1
@.str.73 = private unnamed_addr constant [5 x i8] c"   .\00", align 1
@.str.72 = private unnamed_addr constant [33 x i8] c"%-8.*s%s %-12.*s %-*s%s%s %-8s%s\00", align 1
@time_string.buf = internal global [33 x i8] zeroinitializer, align 16, !dbg !123
@.str.90 = private unnamed_addr constant [4 x i8] c"id=\00", align 1
@.str.91 = private unnamed_addr constant [6 x i8] c"LOGIN\00", align 1
@.str.89 = private unnamed_addr constant [13 x i8] c"clock change\00", align 1
@.str.88 = private unnamed_addr constant [12 x i8] c"system boot\00", align 1
@print_runlevel.runlevline = internal global i8* null, align 8, !dbg !131
@.str.84 = private unnamed_addr constant [10 x i8] c"run-level\00", align 1
@.str.85 = private unnamed_addr constant [6 x i8] c"%s %c\00", align 1
@print_runlevel.comment = internal global i8* null, align 8, !dbg !136
@.str.86 = private unnamed_addr constant [6 x i8] c"last=\00", align 1
@.str.87 = private unnamed_addr constant [5 x i8] c"%s%c\00", align 1
@.str.75 = private unnamed_addr constant [5 x i8] c"%.*s\00", align 1
@.str.76 = private unnamed_addr constant [4 x i8] c"  ?\00", align 1
@print_user.hostlen = internal global i64 0, align 8, !dbg !108
@print_user.hoststr = internal global i8* null, align 8, !dbg !62
@.str.77 = private unnamed_addr constant [8 x i8] c"(%s:%s)\00", align 1
@.str.78 = private unnamed_addr constant [5 x i8] c"(%s)\00", align 1
@idle_string.now = internal global i64 -9223372036854775808, align 8, !dbg !113
@.str.79 = private unnamed_addr constant [6 x i8] c"  .  \00", align 1
@.str.80 = private unnamed_addr constant [30 x i8] c"seconds_idle / (60 * 60) < 24\00", align 1
@.str.81 = private unnamed_addr constant [10 x i8] c"src/who.c\00", align 1
@__PRETTY_FUNCTION__.idle_string = private unnamed_addr constant [40 x i8] c"const char *idle_string(time_t, time_t)\00", align 1
@idle_string.idle_hhmm = internal global [6 x i8] zeroinitializer, align 1, !dbg !118
@.str.82 = private unnamed_addr constant [10 x i8] c"%02d:%02d\00", align 1
@.str.83 = private unnamed_addr constant [6 x i8] c" old \00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c"NAME\00", align 1
@.str.63 = private unnamed_addr constant [5 x i8] c"LINE\00", align 1
@.str.64 = private unnamed_addr constant [5 x i8] c"TIME\00", align 1
@.str.65 = private unnamed_addr constant [5 x i8] c"IDLE\00", align 1
@.str.66 = private unnamed_addr constant [4 x i8] c"PID\00", align 1
@.str.67 = private unnamed_addr constant [8 x i8] c"COMMENT\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"EXIT\00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.59 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.60 = private unnamed_addr constant [14 x i8] c"\0A# users=%lu\0A\00", align 1
@.str.40 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c"boot\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.44 = private unnamed_addr constant [8 x i8] c"heading\00", align 1
@.str.45 = private unnamed_addr constant [6 x i8] c"login\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"lookup\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"message\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"mesg\00", align 1
@.str.49 = private unnamed_addr constant [8 x i8] c"process\00", align 1
@.str.50 = private unnamed_addr constant [9 x i8] c"runlevel\00", align 1
@.str.51 = private unnamed_addr constant [6 x i8] c"short\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"users\00", align 1
@.str.54 = private unnamed_addr constant [9 x i8] c"writable\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@Version = internal global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.95, i32 0, i32 0), align 8, !dbg !153
@.str.95 = private unnamed_addr constant [5 x i8] c"8.32\00", align 1
@last_cherror = internal global i32 0, align 4, !dbg !158
@canon_host_r.hints = internal global %struct.addrinfo zeroinitializer, align 8, !dbg !163
@ignore_EPIPE = internal global i8 0, align 1, !dbg !196
@.str.102 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@file_name = internal global i8* null, align 8, !dbg !201
@.str.1.103 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.104 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = internal global i32 1, align 4, !dbg !204
@.str.109 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.110 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.115 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.116 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.117 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8
@program_name = internal global i8* null, align 8, !dbg !211
@program_invocation_name = external dso_local global i8*, align 8
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !218
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !266
@nslots = internal global i32 1, align 4, !dbg !273
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !275
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !264
@.str.10.120 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.121 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.122 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.123 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.124 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.125 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.126 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.127 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.128 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@quote_quoting_options = internal global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !252
@.str.137 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.138 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.139 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.140 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4.141 = private unnamed_addr constant [171 x i8] c"License GPLv3+: GNU GPL version 3 or later <%s>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\00", align 1
@.str.5.142 = private unnamed_addr constant [34 x i8] c"https://gnu.org/licenses/gpl.html\00", align 1
@.str.6.143 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.7.144 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.8.145 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.9.146 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.10.147 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.11.148 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.12.149 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.13.150 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.14.151 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.15.152 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@version_etc_copyright = internal constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !277
@.str.1.165 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.166 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.179 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.180 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@inVal0 = global i32 0
@inVal1 = global i8** null
@.compVal0 = private global [3 x i8] c"-m\00"
@.compVal1 = private global [4 x i8] c"-ma\00"
@.compVal2 = private global [4 x i8] c"-Hm\00"
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @usage(i32) #0 !dbg !334 {
  %2 = load i32, i32* @x
  %3 = load i32, i32* @y
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  store i32 %0, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !337, metadata !DIExpression()), !dbg !338
  %11 = load i32, i32* %10, align 4, !dbg !339
  %12 = icmp ne i32 %11, 0, !dbg !341
  %13 = load i32, i32* @x
  %14 = load i32, i32* @y
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %60, !dbg !342

21:                                               ; preds = %originalBBpart2
  %22 = load i32, i32* @x
  %23 = load i32, i32* @y
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  %30 = load i32, i32* @x
  %31 = load i32, i32* @y
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %38, !dbg !343

38:                                               ; preds = %originalBBpart24
  %39 = load i32, i32* @x
  %40 = load i32, i32* @y
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %38, %originalBB6alteredBB
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !344
  %48 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #10, !dbg !344
  %49 = load i8*, i8** @program_name, align 8, !dbg !344
  %50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %47, i8* %48, i8* %49), !dbg !344
  %51 = load i32, i32* @x
  %52 = load i32, i32* @y
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %59, !dbg !344

59:                                               ; preds = %originalBBpart28
  br label %90, !dbg !344

60:                                               ; preds = %originalBBpart2
  %61 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0)) #10, !dbg !346
  %62 = load i8*, i8** @program_name, align 8, !dbg !348
  %63 = call i32 (i8*, ...) @printf(i8* %61, i8* %62), !dbg !349
  %64 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !350
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !350
  %66 = call i32 @fputs_unlocked(i8* %64, %struct._IO_FILE* %65), !dbg !350
  %67 = call i8* @gettext(i8* getelementptr inbounds ([195 x i8], [195 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !351
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !351
  %69 = call i32 @fputs_unlocked(i8* %67, %struct._IO_FILE* %68), !dbg !351
  %70 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i64 0, i64 0)) #10, !dbg !352
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !352
  %72 = call i32 @fputs_unlocked(i8* %70, %struct._IO_FILE* %71), !dbg !352
  %73 = call i8* @gettext(i8* getelementptr inbounds ([187 x i8], [187 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !353
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !353
  %75 = call i32 @fputs_unlocked(i8* %73, %struct._IO_FILE* %74), !dbg !353
  %76 = call i8* @gettext(i8* getelementptr inbounds ([223 x i8], [223 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !354
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !354
  %78 = call i32 @fputs_unlocked(i8* %76, %struct._IO_FILE* %77), !dbg !354
  %79 = call i8* @gettext(i8* getelementptr inbounds ([163 x i8], [163 x i8]* @.str.7, i64 0, i64 0)) #10, !dbg !355
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !355
  %81 = call i32 @fputs_unlocked(i8* %79, %struct._IO_FILE* %80), !dbg !355
  %82 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8, i64 0, i64 0)) #10, !dbg !356
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !356
  %84 = call i32 @fputs_unlocked(i8* %82, %struct._IO_FILE* %83), !dbg !356
  %85 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !357
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !357
  %87 = call i32 @fputs_unlocked(i8* %85, %struct._IO_FILE* %86), !dbg !357
  %88 = call i8* @gettext(i8* getelementptr inbounds ([125 x i8], [125 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !358
  %89 = call i32 (i8*, ...) @printf(i8* %88, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0)), !dbg !359
  call void @emit_ancillary_info(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)), !dbg !360
  br label %90

90:                                               ; preds = %60, %59
  %91 = load i32, i32* @x
  %92 = load i32, i32* @y
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %90, %originalBB10alteredBB
  %99 = load i32, i32* %10, align 4, !dbg !361
  call void @exit(i32 %99) #12, !dbg !362
  %100 = load i32, i32* @x
  %101 = load i32, i32* @y
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  unreachable, !dbg !362

originalBBalteredBB:                              ; preds = %originalBB, %1
  %108 = alloca i32, align 4
  store i32 %0, i32* %108, align 4
  call void @llvm.dbg.declare(metadata i32* %108, metadata !363, metadata !DIExpression()), !dbg !338
  %109 = load i32, i32* %108, align 4, !dbg !339
  %110 = icmp ne i32 %109, 0, !dbg !341
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %38
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !344
  %112 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #10, !dbg !344
  %113 = load i8*, i8** @program_name, align 8, !dbg !344
  %114 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %111, i8* %112, i8* %113), !dbg !344
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %90
  %115 = load i32, i32* %10, align 4, !dbg !361
  call void @exit(i32 %115) #12, !dbg !362
  br label %originalBB10
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8*) #4 !dbg !465 {
  %2 = load i32, i32* @x.1
  %3 = load i32, i32* @y.2
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  %11 = alloca [7 x %struct.infomap], align 16
  %12 = alloca i8*, align 8
  %13 = alloca %struct.infomap*, align 8
  %14 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !469, metadata !DIExpression()), !dbg !470
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %11, metadata !471, metadata !DIExpression()), !dbg !480
  %15 = bitcast [7 x %struct.infomap]* %11 to i8*, !dbg !480
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %15, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !480
  call void @llvm.dbg.declare(metadata i8** %12, metadata !481, metadata !DIExpression()), !dbg !482
  %16 = load i8*, i8** %10, align 8, !dbg !483
  store i8* %16, i8** %12, align 8, !dbg !482
  call void @llvm.dbg.declare(metadata %struct.infomap** %13, metadata !484, metadata !DIExpression()), !dbg !486
  %17 = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %11, i64 0, i64 0, !dbg !487
  store %struct.infomap* %17, %struct.infomap** %13, align 8, !dbg !486
  %18 = load i32, i32* @x.1
  %19 = load i32, i32* @y.2
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %26, !dbg !488

26:                                               ; preds = %73, %originalBBpart2
  %27 = load i32, i32* @x.1
  %28 = load i32, i32* @y.2
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !489
  %36 = getelementptr inbounds %struct.infomap, %struct.infomap* %35, i32 0, i32 0, !dbg !490
  %37 = load i8*, i8** %36, align 8, !dbg !490
  %38 = icmp ne i8* %37, null, !dbg !489
  %39 = load i32, i32* @x.1
  %40 = load i32, i32* @y.2
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %38, label %47, label %55, !dbg !491

47:                                               ; preds = %originalBBpart24
  %48 = load i8*, i8** %10, align 8, !dbg !492
  %49 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !492
  %50 = getelementptr inbounds %struct.infomap, %struct.infomap* %49, i32 0, i32 0, !dbg !492
  %51 = load i8*, i8** %50, align 8, !dbg !492
  %52 = call i32 @strcmp(i8* %48, i8* %51) #13, !dbg !492
  %53 = icmp eq i32 %52, 0, !dbg !492
  %54 = xor i1 %53, true, !dbg !493
  br label %55

55:                                               ; preds = %47, %originalBBpart24
  %56 = phi i1 [ false, %originalBBpart24 ], [ %54, %47 ], !dbg !494
  %57 = load i32, i32* @x.1
  %58 = load i32, i32* @y.2
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %55, %originalBB6alteredBB
  %65 = load i32, i32* @x.1
  %66 = load i32, i32* @y.2
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %56, label %73, label %76, !dbg !488

73:                                               ; preds = %originalBBpart28
  %74 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !495
  %75 = getelementptr inbounds %struct.infomap, %struct.infomap* %74, i32 1, !dbg !495
  store %struct.infomap* %75, %struct.infomap** %13, align 8, !dbg !495
  br label %26, !dbg !488, !llvm.loop !496

76:                                               ; preds = %originalBBpart28
  %77 = load i32, i32* @x.1
  %78 = load i32, i32* @y.2
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %76, %originalBB10alteredBB
  %85 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !497
  %86 = getelementptr inbounds %struct.infomap, %struct.infomap* %85, i32 0, i32 1, !dbg !499
  %87 = load i8*, i8** %86, align 8, !dbg !499
  %88 = icmp ne i8* %87, null, !dbg !497
  %89 = load i32, i32* @x.1
  %90 = load i32, i32* @y.2
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %88, label %97, label %101, !dbg !500

97:                                               ; preds = %originalBBpart212
  %98 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !501
  %99 = getelementptr inbounds %struct.infomap, %struct.infomap* %98, i32 0, i32 1, !dbg !502
  %100 = load i8*, i8** %99, align 8, !dbg !502
  store i8* %100, i8** %12, align 8, !dbg !503
  br label %101, !dbg !504

101:                                              ; preds = %97, %originalBBpart212
  %102 = load i32, i32* @x.1
  %103 = load i32, i32* @y.2
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %101, %originalBB14alteredBB
  %110 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0)) #10, !dbg !505
  %111 = call i32 (i8*, ...) @printf(i8* %110, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34, i64 0, i64 0)), !dbg !506
  call void @llvm.dbg.declare(metadata i8** %14, metadata !507, metadata !DIExpression()), !dbg !508
  %112 = call i8* @setlocale(i32 5, i8* null) #10, !dbg !509
  store i8* %112, i8** %14, align 8, !dbg !508
  %113 = load i8*, i8** %14, align 8, !dbg !510
  %114 = icmp ne i8* %113, null, !dbg !510
  %115 = load i32, i32* @x.1
  %116 = load i32, i32* @y.2
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %114, label %123, label %147, !dbg !512

123:                                              ; preds = %originalBBpart216
  %124 = load i32, i32* @x.1
  %125 = load i32, i32* @y.2
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %123, %originalBB18alteredBB
  %132 = load i8*, i8** %14, align 8, !dbg !513
  %133 = call i32 @strncmp(i8* %132, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), i64 3) #13, !dbg !513
  %134 = icmp ne i32 %133, 0, !dbg !513
  %135 = load i32, i32* @x.1
  %136 = load i32, i32* @y.2
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %134, label %143, label %147, !dbg !514

143:                                              ; preds = %originalBBpart220
  %144 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.36, i64 0, i64 0)) #10, !dbg !515
  %145 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !515
  %146 = call i32 @fputs_unlocked(i8* %144, %struct._IO_FILE* %145), !dbg !515
  br label %147, !dbg !517

147:                                              ; preds = %143, %originalBBpart220, %originalBBpart216
  %148 = load i32, i32* @x.1
  %149 = load i32, i32* @y.2
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %147, %originalBB22alteredBB
  %156 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37, i64 0, i64 0)) #10, !dbg !518
  %157 = load i8*, i8** %10, align 8, !dbg !519
  %158 = call i32 (i8*, ...) @printf(i8* %156, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34, i64 0, i64 0), i8* %157), !dbg !520
  %159 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.38, i64 0, i64 0)) #10, !dbg !521
  %160 = load i8*, i8** %12, align 8, !dbg !522
  %161 = load i8*, i8** %12, align 8, !dbg !523
  %162 = load i8*, i8** %10, align 8, !dbg !524
  %163 = icmp eq i8* %161, %162, !dbg !525
  %164 = zext i1 %163 to i64, !dbg !523
  %165 = select i1 %163, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !523
  %166 = call i32 (i8*, ...) @printf(i8* %159, i8* %160, i8* %165), !dbg !526
  %167 = load i32, i32* @x.1
  %168 = load i32, i32* @y.2
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret void, !dbg !527

originalBBalteredBB:                              ; preds = %originalBB, %1
  %175 = alloca i8*, align 8
  %176 = alloca [7 x %struct.infomap], align 16
  %177 = alloca i8*, align 8
  %178 = alloca %struct.infomap*, align 8
  %179 = alloca i8*, align 8
  store i8* %0, i8** %175, align 8
  call void @llvm.dbg.declare(metadata i8** %175, metadata !528, metadata !DIExpression()), !dbg !470
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %176, metadata !630, metadata !DIExpression()), !dbg !480
  %180 = bitcast [7 x %struct.infomap]* %176 to i8*, !dbg !480
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %180, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !480
  call void @llvm.dbg.declare(metadata i8** %177, metadata !637, metadata !DIExpression()), !dbg !482
  %181 = load i8*, i8** %175, align 8, !dbg !483
  store i8* %181, i8** %177, align 8, !dbg !482
  call void @llvm.dbg.declare(metadata %struct.infomap** %178, metadata !638, metadata !DIExpression()), !dbg !486
  %182 = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %176, i64 0, i64 0, !dbg !487
  store %struct.infomap* %182, %struct.infomap** %178, align 8, !dbg !486
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %183 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !489
  %184 = getelementptr inbounds %struct.infomap, %struct.infomap* %183, i32 0, i32 0, !dbg !490
  %185 = load i8*, i8** %184, align 8, !dbg !490
  %186 = icmp ne i8* %185, null, !dbg !489
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %55
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %76
  %187 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !497
  %188 = getelementptr inbounds %struct.infomap, %struct.infomap* %187, i32 0, i32 1, !dbg !499
  %189 = load i8*, i8** %188, align 8, !dbg !499
  %190 = icmp ne i8* %189, null, !dbg !497
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %101
  %191 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0)) #10, !dbg !505
  %192 = call i32 (i8*, ...) @printf(i8* %191, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34, i64 0, i64 0)), !dbg !506
  call void @llvm.dbg.declare(metadata !4, metadata !640, metadata !DIExpression()), !dbg !508
  %193 = call i8* @setlocale(i32 5, i8* null) #10, !dbg !509
  store i8* %193, i8** %14, align 8, !dbg !508
  %194 = load i8*, i8** %14, align 8, !dbg !510
  %195 = icmp ne i8* %194, null, !dbg !510
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %123
  %196 = load i8*, i8** %14, align 8, !dbg !513
  %197 = call i32 @strncmp(i8* %196, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), i64 3) #13, !dbg !513
  %198 = icmp ne i32 %197, 0, !dbg !513
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %147
  %199 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37, i64 0, i64 0)) #10, !dbg !518
  %200 = load i8*, i8** %10, align 8, !dbg !519
  %201 = call i32 (i8*, ...) @printf(i8* %199, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34, i64 0, i64 0), i8* %200), !dbg !520
  %202 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.38, i64 0, i64 0)) #10, !dbg !521
  %203 = load i8*, i8** %12, align 8, !dbg !522
  %204 = load i8*, i8** %12, align 8, !dbg !523
  %205 = load i8*, i8** %10, align 8, !dbg !524
  %206 = icmp eq i8* %204, %205, !dbg !525
  %207 = zext i1 %206 to i64, !dbg !523
  %208 = select i1 %206, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !523
  %209 = call i32 (i8*, ...) @printf(i8* %202, i8* %203, i8* %208), !dbg !526
  br label %originalBB22
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32, i8**) #4 !dbg !742 {
  %3 = load i32, i32* @x.3
  %4 = load i32, i32* @y.4
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  store i8** %1, i8*** @inVal1
  store i32 %0, i32* @inVal0
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8**, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  store i32 0, i32* %11, align 4
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !746, metadata !DIExpression()), !dbg !747
  store i8** %1, i8*** %13, align 8
  call void @llvm.dbg.declare(metadata i8*** %13, metadata !748, metadata !DIExpression()), !dbg !749
  call void @llvm.dbg.declare(metadata i32* %14, metadata !750, metadata !DIExpression()), !dbg !751
  call void @llvm.dbg.declare(metadata i8* %15, metadata !752, metadata !DIExpression()), !dbg !753
  store i8 1, i8* %15, align 1, !dbg !753
  %16 = load i8**, i8*** %13, align 8, !dbg !754
  %17 = getelementptr inbounds i8*, i8** %16, i64 0, !dbg !754
  %18 = load i8*, i8** %17, align 8, !dbg !754
  call void @set_program_name(i8* %18), !dbg !755
  %19 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)) #10, !dbg !756
  %20 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0)) #10, !dbg !757
  %21 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0)) #10, !dbg !758
  %22 = call i32 @atexit(void ()* @close_stdout) #10, !dbg !759
  %23 = load i32, i32* @x.3
  %24 = load i32, i32* @y.4
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31, !dbg !760

31:                                               ; preds = %265, %originalBBpart2
  %32 = load i32, i32* @x.3
  %33 = load i32, i32* @y.4
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load i32, i32* %12, align 4, !dbg !761
  %41 = load i8**, i8*** %13, align 8, !dbg !762
  %42 = call i32 @getopt_long(i32 %40, i8** %41, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0), %struct.option* getelementptr inbounds ([18 x %struct.option], [18 x %struct.option]* @longopts, i64 0, i64 0), i32* null) #10, !dbg !763
  store i32 %42, i32* %14, align 4, !dbg !764
  %43 = icmp ne i32 %42, -1, !dbg !765
  %44 = load i32, i32* @x.3
  %45 = load i32, i32* @y.4
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %43, label %52, label %266, !dbg !760

52:                                               ; preds = %originalBBpart24
  %53 = load i32, i32* @x.3
  %54 = load i32, i32* @y.4
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %52, %originalBB6alteredBB
  %61 = load i32, i32* %14, align 4, !dbg !766
  %62 = load i32, i32* @x.3
  %63 = load i32, i32* @y.4
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  switch i32 %61, label %248 [
    i32 97, label %70
    i32 98, label %87
    i32 100, label %88
    i32 72, label %105
    i32 108, label %122
    i32 109, label %139
    i32 112, label %156
    i32 113, label %173
    i32 114, label %174
    i32 115, label %175
    i32 116, label %192
    i32 84, label %209
    i32 119, label %209
    i32 117, label %210
    i32 128, label %211
    i32 -130, label %228
    i32 -131, label %229
  ], !dbg !768

70:                                               ; preds = %originalBBpart28
  %71 = load i32, i32* @x.3
  %72 = load i32, i32* @y.4
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %70, %originalBB10alteredBB
  store i8 1, i8* @need_boottime, align 1, !dbg !769
  store i8 1, i8* @need_deadprocs, align 1, !dbg !771
  store i8 1, i8* @need_login, align 1, !dbg !772
  store i8 1, i8* @need_initspawn, align 1, !dbg !773
  store i8 1, i8* @need_runlevel, align 1, !dbg !774
  store i8 1, i8* @need_clockchange, align 1, !dbg !775
  store i8 1, i8* @need_users, align 1, !dbg !776
  store i8 1, i8* @include_mesg, align 1, !dbg !777
  store i8 1, i8* @include_idle, align 1, !dbg !778
  store i8 1, i8* @include_exit, align 1, !dbg !779
  store i8 0, i8* %15, align 1, !dbg !780
  %79 = load i32, i32* @x.3
  %80 = load i32, i32* @y.4
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %265, !dbg !781

87:                                               ; preds = %originalBBpart28
  store i8 1, i8* @need_boottime, align 1, !dbg !782
  store i8 0, i8* %15, align 1, !dbg !783
  br label %265, !dbg !784

88:                                               ; preds = %originalBBpart28
  %89 = load i32, i32* @x.3
  %90 = load i32, i32* @y.4
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %88, %originalBB14alteredBB
  store i8 1, i8* @need_deadprocs, align 1, !dbg !785
  store i8 1, i8* @include_idle, align 1, !dbg !786
  store i8 1, i8* @include_exit, align 1, !dbg !787
  store i8 0, i8* %15, align 1, !dbg !788
  %97 = load i32, i32* @x.3
  %98 = load i32, i32* @y.4
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %265, !dbg !789

105:                                              ; preds = %originalBBpart28
  %106 = load i32, i32* @x.3
  %107 = load i32, i32* @y.4
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %105, %originalBB18alteredBB
  store i8 1, i8* @include_heading, align 1, !dbg !790
  %114 = load i32, i32* @x.3
  %115 = load i32, i32* @y.4
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %265, !dbg !791

122:                                              ; preds = %originalBBpart28
  %123 = load i32, i32* @x.3
  %124 = load i32, i32* @y.4
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %122, %originalBB22alteredBB
  store i8 1, i8* @need_login, align 1, !dbg !792
  store i8 1, i8* @include_idle, align 1, !dbg !793
  store i8 0, i8* %15, align 1, !dbg !794
  %131 = load i32, i32* @x.3
  %132 = load i32, i32* @y.4
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %265, !dbg !795

139:                                              ; preds = %originalBBpart28
  %140 = load i32, i32* @x.3
  %141 = load i32, i32* @y.4
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %139, %originalBB26alteredBB
  store i8 1, i8* @my_line_only, align 1, !dbg !796
  %148 = load i32, i32* @x.3
  %149 = load i32, i32* @y.4
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %265, !dbg !797

156:                                              ; preds = %originalBBpart28
  %157 = load i32, i32* @x.3
  %158 = load i32, i32* @y.4
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %156, %originalBB30alteredBB
  store i8 1, i8* @need_initspawn, align 1, !dbg !798
  store i8 0, i8* %15, align 1, !dbg !799
  %165 = load i32, i32* @x.3
  %166 = load i32, i32* @y.4
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %265, !dbg !800

173:                                              ; preds = %originalBBpart28
  store i8 1, i8* @short_list, align 1, !dbg !801
  br label %265, !dbg !802

174:                                              ; preds = %originalBBpart28
  store i8 1, i8* @need_runlevel, align 1, !dbg !803
  store i8 1, i8* @include_idle, align 1, !dbg !804
  store i8 0, i8* %15, align 1, !dbg !805
  br label %265, !dbg !806

175:                                              ; preds = %originalBBpart28
  %176 = load i32, i32* @x.3
  %177 = load i32, i32* @y.4
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %175, %originalBB34alteredBB
  store i8 1, i8* @short_output, align 1, !dbg !807
  %184 = load i32, i32* @x.3
  %185 = load i32, i32* @y.4
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %265, !dbg !808

192:                                              ; preds = %originalBBpart28
  %193 = load i32, i32* @x.3
  %194 = load i32, i32* @y.4
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %192, %originalBB38alteredBB
  store i8 1, i8* @need_clockchange, align 1, !dbg !809
  store i8 0, i8* %15, align 1, !dbg !810
  %201 = load i32, i32* @x.3
  %202 = load i32, i32* @y.4
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %265, !dbg !811

209:                                              ; preds = %originalBBpart28, %originalBBpart28
  store i8 1, i8* @include_mesg, align 1, !dbg !812
  br label %265, !dbg !813

210:                                              ; preds = %originalBBpart28
  store i8 1, i8* @need_users, align 1, !dbg !814
  store i8 1, i8* @include_idle, align 1, !dbg !815
  store i8 0, i8* %15, align 1, !dbg !816
  br label %265, !dbg !817

211:                                              ; preds = %originalBBpart28
  %212 = load i32, i32* @x.3
  %213 = load i32, i32* @y.4
  %214 = sub i32 %212, 1
  %215 = mul i32 %212, %214
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %217, %218
  br i1 %219, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %211, %originalBB42alteredBB
  store i8 1, i8* @do_lookup, align 1, !dbg !818
  %220 = load i32, i32* @x.3
  %221 = load i32, i32* @y.4
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %265, !dbg !819

228:                                              ; preds = %originalBBpart28
  call void @usage(i32 0) #14, !dbg !820
  unreachable, !dbg !820

229:                                              ; preds = %originalBBpart28
  %230 = load i32, i32* @x.3
  %231 = load i32, i32* @y.4
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %229, %originalBB46alteredBB
  %238 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !821
  %239 = load i8*, i8** @Version, align 8, !dbg !821
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %238, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i8* %239, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i64 0, i64 0), i8* null), !dbg !821
  call void @exit(i32 0) #12, !dbg !821
  %240 = load i32, i32* @x.3
  %241 = load i32, i32* @y.4
  %242 = sub i32 %240, 1
  %243 = mul i32 %240, %242
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %245, %246
  br i1 %247, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  unreachable, !dbg !821

248:                                              ; preds = %originalBBpart28
  %249 = load i32, i32* @x.3
  %250 = load i32, i32* @y.4
  %251 = sub i32 %249, 1
  %252 = mul i32 %249, %251
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %254, %255
  br i1 %256, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %248, %originalBB50alteredBB
  call void @usage(i32 1) #14, !dbg !822
  %257 = load i32, i32* @x.3
  %258 = load i32, i32* @y.4
  %259 = sub i32 %257, 1
  %260 = mul i32 %257, %259
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %258, 10
  %264 = or i1 %262, %263
  br i1 %264, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  unreachable, !dbg !822

265:                                              ; preds = %originalBBpart244, %210, %209, %originalBBpart240, %originalBBpart236, %174, %173, %originalBBpart232, %originalBBpart228, %originalBBpart224, %originalBBpart220, %originalBBpart216, %87, %originalBBpart212
  br label %31, !dbg !760, !llvm.loop !823

266:                                              ; preds = %originalBBpart24
  %267 = load i32, i32* @x.3
  %268 = load i32, i32* @y.4
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %266, %originalBB54alteredBB
  %275 = load i8, i8* %15, align 1, !dbg !825
  %276 = trunc i8 %275 to i1, !dbg !825
  %277 = load i32, i32* @x.3
  %278 = load i32, i32* @y.4
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br i1 %276, label %285, label %302, !dbg !827

285:                                              ; preds = %originalBBpart256
  %286 = load i32, i32* @x.3
  %287 = load i32, i32* @y.4
  %288 = sub i32 %286, 1
  %289 = mul i32 %286, %288
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %291, %292
  br i1 %293, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %285, %originalBB58alteredBB
  store i8 1, i8* @need_users, align 1, !dbg !828
  store i8 1, i8* @short_output, align 1, !dbg !830
  %294 = load i32, i32* @x.3
  %295 = load i32, i32* @y.4
  %296 = sub i32 %294, 1
  %297 = mul i32 %294, %296
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %299, %300
  br i1 %301, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %302, !dbg !831

302:                                              ; preds = %originalBBpart260, %originalBBpart256
  %303 = load i8, i8* @include_exit, align 1, !dbg !832
  %304 = trunc i8 %303 to i1, !dbg !832
  br i1 %304, label %305, label %322, !dbg !834

305:                                              ; preds = %302
  %306 = load i32, i32* @x.3
  %307 = load i32, i32* @y.4
  %308 = sub i32 %306, 1
  %309 = mul i32 %306, %308
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %311, %312
  br i1 %313, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %305, %originalBB62alteredBB
  store i8 0, i8* @short_output, align 1, !dbg !835
  %314 = load i32, i32* @x.3
  %315 = load i32, i32* @y.4
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %322, !dbg !837

322:                                              ; preds = %originalBBpart264, %302
  %323 = load i32, i32* @x.3
  %324 = load i32, i32* @y.4
  %325 = sub i32 %323, 1
  %326 = mul i32 %323, %325
  %327 = urem i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %328, %329
  br i1 %330, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %322, %originalBB66alteredBB
  %331 = call zeroext i1 @hard_locale(i32 2), !dbg !838
  %332 = load i32, i32* @x.3
  %333 = load i32, i32* @y.4
  %334 = sub i32 %332, 1
  %335 = mul i32 %332, %334
  %336 = urem i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %333, 10
  %339 = or i1 %337, %338
  br i1 %339, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br i1 %331, label %340, label %341, !dbg !840

340:                                              ; preds = %originalBBpart268
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0), i8** @time_format, align 8, !dbg !841
  store i32 16, i32* @time_format_width, align 4, !dbg !843
  br label %358, !dbg !844

341:                                              ; preds = %originalBBpart268
  %342 = load i32, i32* @x.3
  %343 = load i32, i32* @y.4
  %344 = sub i32 %342, 1
  %345 = mul i32 %342, %344
  %346 = urem i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %347, %348
  br i1 %349, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %341, %originalBB70alteredBB
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0), i8** @time_format, align 8, !dbg !845
  store i32 12, i32* @time_format_width, align 4, !dbg !847
  %350 = load i32, i32* @x.3
  %351 = load i32, i32* @y.4
  %352 = sub i32 %350, 1
  %353 = mul i32 %350, %352
  %354 = urem i32 %353, 2
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %351, 10
  %357 = or i1 %355, %356
  br i1 %357, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %358

358:                                              ; preds = %originalBBpart272, %340
  %359 = load i32, i32* @x.3
  %360 = load i32, i32* @y.4
  %361 = sub i32 %359, 1
  %362 = mul i32 %359, %361
  %363 = urem i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = icmp slt i32 %360, 10
  %366 = or i1 %364, %365
  br i1 %366, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %358, %originalBB74alteredBB
  %367 = load i32, i32* %12, align 4, !dbg !848
  %368 = load i32, i32* @optind, align 4, !dbg !849
  %369 = sub nsw i32 %367, %368, !dbg !850
  %370 = load i32, i32* @x.3
  %371 = load i32, i32* @y.4
  %372 = sub i32 %370, 1
  %373 = mul i32 %370, %372
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %371, 10
  %377 = or i1 %375, %376
  br i1 %377, label %originalBBpart279, label %originalBB74alteredBB

originalBBpart279:                                ; preds = %originalBB74
  switch i32 %369, label %434 [
    i32 2, label %378
    i32 -1, label %395
    i32 0, label %395
    i32 1, label %412
  ], !dbg !851

378:                                              ; preds = %originalBBpart279
  %379 = load i32, i32* @x.3
  %380 = load i32, i32* @y.4
  %381 = sub i32 %379, 1
  %382 = mul i32 %379, %381
  %383 = urem i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %380, 10
  %386 = or i1 %384, %385
  br i1 %386, label %originalBB81, label %originalBB81alteredBB

originalBB81:                                     ; preds = %378, %originalBB81alteredBB
  store i8 1, i8* @my_line_only, align 1, !dbg !852
  %387 = load i32, i32* @x.3
  %388 = load i32, i32* @y.4
  %389 = sub i32 %387, 1
  %390 = mul i32 %387, %389
  %391 = urem i32 %390, 2
  %392 = icmp eq i32 %391, 0
  %393 = icmp slt i32 %388, 10
  %394 = or i1 %392, %393
  br i1 %394, label %originalBBpart283, label %originalBB81alteredBB

originalBBpart283:                                ; preds = %originalBB81
  br label %395, !dbg !854

395:                                              ; preds = %originalBBpart283, %originalBBpart279, %originalBBpart279
  %396 = load i32, i32* @x.3
  %397 = load i32, i32* @y.4
  %398 = sub i32 %396, 1
  %399 = mul i32 %396, %398
  %400 = urem i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = icmp slt i32 %397, 10
  %403 = or i1 %401, %402
  br i1 %403, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %395, %originalBB85alteredBB
  call void @who(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i32 1), !dbg !855
  %404 = load i32, i32* @x.3
  %405 = load i32, i32* @y.4
  %406 = sub i32 %404, 1
  %407 = mul i32 %404, %406
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %405, 10
  %411 = or i1 %409, %410
  br i1 %411, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  br label %459, !dbg !856

412:                                              ; preds = %originalBBpart279
  %413 = load i32, i32* @x.3
  %414 = load i32, i32* @y.4
  %415 = sub i32 %413, 1
  %416 = mul i32 %413, %415
  %417 = urem i32 %416, 2
  %418 = icmp eq i32 %417, 0
  %419 = icmp slt i32 %414, 10
  %420 = or i1 %418, %419
  br i1 %420, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %412, %originalBB89alteredBB
  %421 = load i8**, i8*** %13, align 8, !dbg !857
  %422 = load i32, i32* @optind, align 4, !dbg !858
  %423 = sext i32 %422 to i64, !dbg !857
  %424 = getelementptr inbounds i8*, i8** %421, i64 %423, !dbg !857
  %425 = load i8*, i8** %424, align 8, !dbg !857
  call void @who(i8* %425, i32 0), !dbg !859
  %426 = load i32, i32* @x.3
  %427 = load i32, i32* @y.4
  %428 = sub i32 %426, 1
  %429 = mul i32 %426, %428
  %430 = urem i32 %429, 2
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %427, 10
  %433 = or i1 %431, %432
  br i1 %433, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  br label %459, !dbg !860

434:                                              ; preds = %originalBBpart279
  %435 = load i32, i32* @x.3
  %436 = load i32, i32* @y.4
  %437 = sub i32 %435, 1
  %438 = mul i32 %435, %437
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %440, %441
  br i1 %442, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %434, %originalBB93alteredBB
  %443 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i64 0, i64 0)) #10, !dbg !861
  %444 = load i8**, i8*** %13, align 8, !dbg !862
  %445 = load i32, i32* @optind, align 4, !dbg !863
  %446 = add nsw i32 %445, 2, !dbg !864
  %447 = sext i32 %446 to i64, !dbg !862
  %448 = getelementptr inbounds i8*, i8** %444, i64 %447, !dbg !862
  %449 = load i8*, i8** %448, align 8, !dbg !862
  %450 = call i8* @quote(i8* %449), !dbg !865
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %443, i8* %450), !dbg !866
  call void @usage(i32 1) #14, !dbg !867
  %451 = load i32, i32* @x.3
  %452 = load i32, i32* @y.4
  %453 = sub i32 %451, 1
  %454 = mul i32 %451, %453
  %455 = urem i32 %454, 2
  %456 = icmp eq i32 %455, 0
  %457 = icmp slt i32 %452, 10
  %458 = or i1 %456, %457
  br i1 %458, label %originalBBpart2102, label %originalBB93alteredBB

originalBBpart2102:                               ; preds = %originalBB93
  unreachable, !dbg !867

459:                                              ; preds = %originalBBpart291, %originalBBpart287
  ret i32 0, !dbg !868

originalBBalteredBB:                              ; preds = %originalBB, %2
  store i8** %1, i8*** @inVal1
  store i32 %0, i32* @inVal0
  %460 = alloca i32, align 4
  %461 = alloca i32, align 4
  %462 = alloca i8**, align 8
  %463 = alloca i32, align 4
  %464 = alloca i8, align 1
  store i32 0, i32* %460, align 4
  store i32 %0, i32* %461, align 4
  call void @llvm.dbg.declare(metadata i32* %461, metadata !869, metadata !DIExpression()), !dbg !747
  store i8** %1, i8*** %462, align 8
  call void @llvm.dbg.declare(metadata i8*** %462, metadata !971, metadata !DIExpression()), !dbg !749
  call void @llvm.dbg.declare(metadata i32* %463, metadata !972, metadata !DIExpression()), !dbg !751
  call void @llvm.dbg.declare(metadata i8* %464, metadata !973, metadata !DIExpression()), !dbg !753
  store i8 1, i8* %464, align 1, !dbg !753
  %465 = load i8**, i8*** %462, align 8, !dbg !754
  %466 = getelementptr inbounds i8*, i8** %465, i64 0, !dbg !754
  %467 = load i8*, i8** %466, align 8, !dbg !754
  call void @set_program_name(i8* %467), !dbg !755
  %468 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)) #10, !dbg !756
  %469 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0)) #10, !dbg !757
  %470 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0)) #10, !dbg !758
  %471 = call i32 @atexit(void ()* @close_stdout) #10, !dbg !759
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %472 = load i32, i32* %12, align 4, !dbg !761
  %473 = load i8**, i8*** %13, align 8, !dbg !762
  %474 = call i32 @getopt_long(i32 %472, i8** %473, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0), %struct.option* getelementptr inbounds ([18 x %struct.option], [18 x %struct.option]* @longopts, i64 0, i64 0), i32* null) #10, !dbg !763
  store i32 %474, i32* %14, align 4, !dbg !764
  %475 = icmp ne i32 %474, -1, !dbg !765
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %52
  %476 = load i32, i32* %14, align 4, !dbg !766
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %70
  store i8 1, i8* @need_boottime, align 1, !dbg !769
  store i8 1, i8* @need_deadprocs, align 1, !dbg !771
  store i8 1, i8* @need_login, align 1, !dbg !772
  store i8 1, i8* @need_initspawn, align 1, !dbg !773
  store i8 1, i8* @need_runlevel, align 1, !dbg !774
  store i8 1, i8* @need_clockchange, align 1, !dbg !775
  store i8 1, i8* @need_users, align 1, !dbg !776
  store i8 1, i8* @include_mesg, align 1, !dbg !777
  store i8 1, i8* @include_idle, align 1, !dbg !778
  store i8 1, i8* @include_exit, align 1, !dbg !779
  store i8 0, i8* %15, align 1, !dbg !780
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %88
  store i8 1, i8* @need_deadprocs, align 1, !dbg !785
  store i8 1, i8* @include_idle, align 1, !dbg !786
  store i8 1, i8* @include_exit, align 1, !dbg !787
  store i8 0, i8* %15, align 1, !dbg !788
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %105
  store i8 1, i8* @include_heading, align 1, !dbg !790
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %122
  store i8 1, i8* @need_login, align 1, !dbg !792
  store i8 1, i8* @include_idle, align 1, !dbg !793
  store i8 0, i8* %15, align 1, !dbg !794
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %139
  store i8 1, i8* @my_line_only, align 1, !dbg !796
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %156
  store i8 1, i8* @need_initspawn, align 1, !dbg !798
  store i8 0, i8* %15, align 1, !dbg !799
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %175
  store i8 1, i8* @short_output, align 1, !dbg !807
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %192
  store i8 1, i8* @need_clockchange, align 1, !dbg !809
  store i8 0, i8* %15, align 1, !dbg !810
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %211
  store i8 1, i8* @do_lookup, align 1, !dbg !818
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %229
  %477 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !821
  %478 = load i8*, i8** @Version, align 8, !dbg !821
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %477, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i8* %478, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i64 0, i64 0), i8* null), !dbg !821
  call void @exit(i32 0) #12, !dbg !821
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %248
  call void @usage(i32 1) #14, !dbg !822
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %266
  %479 = load i8, i8* %15, align 1, !dbg !825
  %480 = trunc i8 %479 to i1, !dbg !825
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %285
  store i8 1, i8* @need_users, align 1, !dbg !828
  store i8 1, i8* @short_output, align 1, !dbg !830
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %305
  store i8 0, i8* @short_output, align 1, !dbg !835
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %322
  %481 = call zeroext i1 @hard_locale(i32 2), !dbg !838
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %341
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0), i8** @time_format, align 8, !dbg !845
  store i32 12, i32* @time_format_width, align 4, !dbg !847
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %358
  %482 = load i32, i32* %12, align 4, !dbg !848
  %483 = load i32, i32* @optind, align 4, !dbg !849
  %_ = shl i32 %482, %483
  %_75 = shl i32 %482, %483
  %_76 = sub i32 0, %482
  %gen = add i32 %_76, %483
  %_77 = shl i32 %482, %483
  %484 = sub nsw i32 %482, %483, !dbg !850
  br label %originalBB74

originalBB81alteredBB:                            ; preds = %originalBB81, %378
  store i8 1, i8* @my_line_only, align 1, !dbg !852
  br label %originalBB81

originalBB85alteredBB:                            ; preds = %originalBB85, %395
  call void @who(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i32 1), !dbg !855
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %412
  %485 = load i8**, i8*** %13, align 8, !dbg !857
  %486 = load i32, i32* @optind, align 4, !dbg !858
  %487 = sext i32 %486 to i64, !dbg !857
  %488 = getelementptr inbounds i8*, i8** %485, i64 %487, !dbg !857
  %489 = load i8*, i8** %488, align 8, !dbg !857
  call void @who(i8* %489, i32 0), !dbg !859
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %434
  %490 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i64 0, i64 0)) #10, !dbg !861
  %491 = load i8**, i8*** %13, align 8, !dbg !862
  %492 = load i32, i32* @optind, align 4, !dbg !863
  %_94 = sub i32 %492, 2
  %gen95 = mul i32 %_94, 2
  %_96 = sub i32 0, %492
  %gen97 = add i32 %_96, 2
  %_98 = sub i32 0, %492
  %gen99 = add i32 %_98, 2
  %_100 = shl i32 %492, 2
  %493 = add nsw i32 %492, 2, !dbg !864
  %494 = sext i32 %493 to i64, !dbg !862
  %495 = getelementptr inbounds i8*, i8** %491, i64 %494, !dbg !862
  %496 = load i8*, i8** %495, align 8, !dbg !862
  %497 = call i8* @quote(i8* %496), !dbg !865
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %490, i8* %497), !dbg !866
  call void @usage(i32 1) #14, !dbg !867
  br label %originalBB93
}

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @who(i8*, i32) #4 !dbg !974 {
  %3 = load i32, i32* @x.5
  %4 = load i32, i32* @y.6
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca %struct.utmpx*, align 8
  store i8* %0, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !977, metadata !DIExpression()), !dbg !978
  store i32 %1, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !979, metadata !DIExpression()), !dbg !980
  call void @llvm.dbg.declare(metadata i64* %13, metadata !981, metadata !DIExpression()), !dbg !982
  call void @llvm.dbg.declare(metadata %struct.utmpx** %14, metadata !983, metadata !DIExpression()), !dbg !985
  %15 = load i8*, i8** %11, align 8, !dbg !986
  %16 = load i32, i32* %12, align 4, !dbg !988
  %17 = call i32 @read_utmp(i8* %15, i64* %13, %struct.utmpx** %14, i32 %16), !dbg !989
  %18 = icmp ne i32 %17, 0, !dbg !990
  %19 = load i32, i32* @x.5
  %20 = load i32, i32* @y.6
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %48, !dbg !991

27:                                               ; preds = %originalBBpart2
  %28 = load i32, i32* @x.5
  %29 = load i32, i32* @y.6
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = call i32* @__errno_location() #15, !dbg !992
  %37 = load i32, i32* %36, align 4, !dbg !992
  %38 = load i8*, i8** %11, align 8, !dbg !992
  %39 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %38), !dbg !992
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %37, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i64 0, i64 0), i8* %39), !dbg !992
  %40 = load i32, i32* @x.5
  %41 = load i32, i32* @y.6
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable, !dbg !992

48:                                               ; preds = %originalBBpart2
  %49 = load i8, i8* @short_list, align 1, !dbg !993
  %50 = trunc i8 %49 to i1, !dbg !993
  br i1 %50, label %51, label %54, !dbg !995

51:                                               ; preds = %48
  %52 = load i64, i64* %13, align 8, !dbg !996
  %53 = load %struct.utmpx*, %struct.utmpx** %14, align 8, !dbg !997
  call void @list_entries_who(i64 %52, %struct.utmpx* %53), !dbg !998
  br label %73, !dbg !998

54:                                               ; preds = %48
  %55 = load i32, i32* @x.5
  %56 = load i32, i32* @y.6
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %54, %originalBB6alteredBB
  %63 = load i64, i64* %13, align 8, !dbg !999
  %64 = load %struct.utmpx*, %struct.utmpx** %14, align 8, !dbg !1000
  call void @scan_entries(i64 %63, %struct.utmpx* %64), !dbg !1001
  %65 = load i32, i32* @x.5
  %66 = load i32, i32* @y.6
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %73

73:                                               ; preds = %originalBBpart28, %51
  %74 = load i32, i32* @x.5
  %75 = load i32, i32* @y.6
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %73, %originalBB10alteredBB
  %82 = load %struct.utmpx*, %struct.utmpx** %14, align 8, !dbg !1002
  %83 = bitcast %struct.utmpx* %82 to i8*, !dbg !1002
  call void @free(i8* %83) #10, !dbg !1003
  %84 = load i32, i32* @x.5
  %85 = load i32, i32* @y.6
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret void, !dbg !1004

originalBBalteredBB:                              ; preds = %originalBB, %2
  %92 = alloca i8*, align 8
  %93 = alloca i32, align 4
  %94 = alloca i64, align 8
  %95 = alloca %struct.utmpx*, align 8
  store i8* %0, i8** %92, align 8
  call void @llvm.dbg.declare(metadata i8** %92, metadata !1005, metadata !DIExpression()), !dbg !978
  store i32 %1, i32* %93, align 4
  call void @llvm.dbg.declare(metadata i32* %93, metadata !1107, metadata !DIExpression()), !dbg !980
  call void @llvm.dbg.declare(metadata i64* %94, metadata !1108, metadata !DIExpression()), !dbg !982
  call void @llvm.dbg.declare(metadata %struct.utmpx** %95, metadata !1109, metadata !DIExpression()), !dbg !985
  %96 = load i8*, i8** %92, align 8, !dbg !986
  %97 = load i32, i32* %93, align 4, !dbg !988
  %98 = call i32 @read_utmp(i8* %96, i64* %94, %struct.utmpx** %95, i32 %97), !dbg !989
  %99 = icmp ne i32 %98, 0, !dbg !990
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %100 = call i32* @__errno_location() #15, !dbg !992
  %101 = load i32, i32* %100, align 4, !dbg !992
  %102 = load i8*, i8** %11, align 8, !dbg !992
  %103 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %102), !dbg !992
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %101, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i64 0, i64 0), i8* %103), !dbg !992
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %54
  %104 = load i64, i64* %13, align 8, !dbg !999
  %105 = load %struct.utmpx*, %struct.utmpx** %14, align 8, !dbg !1000
  call void @scan_entries(i64 %104, %struct.utmpx* %105), !dbg !1001
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %73
  %106 = load %struct.utmpx*, %struct.utmpx** %14, align 8, !dbg !1002
  %107 = bitcast %struct.utmpx* %106 to i8*, !dbg !1002
  call void @free(i8* %107) #10, !dbg !1003
  br label %originalBB10
}

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_entries_who(i64, %struct.utmpx*) #4 !dbg !1111 {
  %3 = load i32, i32* @x.7
  %4 = load i32, i32* @y.8
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i64, align 8
  %12 = alloca %struct.utmpx*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  store i64 %0, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !1114, metadata !DIExpression()), !dbg !1115
  store %struct.utmpx* %1, %struct.utmpx** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %12, metadata !1116, metadata !DIExpression()), !dbg !1117
  call void @llvm.dbg.declare(metadata i64* %13, metadata !1118, metadata !DIExpression()), !dbg !1119
  store i64 0, i64* %13, align 8, !dbg !1119
  call void @llvm.dbg.declare(metadata i8** %14, metadata !1120, metadata !DIExpression()), !dbg !1121
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8** %14, align 8, !dbg !1121
  %16 = load i32, i32* @x.7
  %17 = load i32, i32* @y.8
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %24, !dbg !1122

24:                                               ; preds = %originalBBpart222, %originalBBpart2
  %25 = load i32, i32* @x.7
  %26 = load i32, i32* @y.8
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = load i64, i64* %11, align 8, !dbg !1123
  %34 = add i64 %33, -1, !dbg !1123
  store i64 %34, i64* %11, align 8, !dbg !1123
  %35 = icmp ne i64 %33, 0, !dbg !1122
  %36 = load i32, i32* @x.7
  %37 = load i32, i32* @y.8
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart210, label %originalBB1alteredBB

originalBBpart210:                                ; preds = %originalBB1
  br i1 %35, label %44, label %117, !dbg !1122

44:                                               ; preds = %originalBBpart210
  %45 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1124
  %46 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %45, i32 0, i32 4, !dbg !1124
  %47 = getelementptr inbounds [32 x i8], [32 x i8]* %46, i64 0, i64 0, !dbg !1124
  %48 = load i8, i8* %47, align 4, !dbg !1124
  %49 = sext i8 %48 to i32, !dbg !1124
  %50 = icmp ne i32 %49, 0, !dbg !1124
  br i1 %50, label %51, label %98, !dbg !1124

51:                                               ; preds = %44
  %52 = load i32, i32* @x.7
  %53 = load i32, i32* @y.8
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB12, label %originalBB12alteredBB

originalBB12:                                     ; preds = %51, %originalBB12alteredBB
  %60 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1124
  %61 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %60, i32 0, i32 0, !dbg !1124
  %62 = load i16, i16* %61, align 4, !dbg !1124
  %63 = sext i16 %62 to i32, !dbg !1124
  %64 = icmp eq i32 %63, 7, !dbg !1124
  %65 = load i32, i32* @x.7
  %66 = load i32, i32* @y.8
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart214, label %originalBB12alteredBB

originalBBpart214:                                ; preds = %originalBB12
  br i1 %64, label %73, label %98, !dbg !1127

73:                                               ; preds = %originalBBpart214
  call void @llvm.dbg.declare(metadata i8** %15, metadata !1128, metadata !DIExpression()), !dbg !1130
  %74 = load i32, i32* @x.7
  %75 = load i32, i32* @y.8
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %73, %originalBB16alteredBB
  %82 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1131
  %83 = call i8* @extract_trimmed_name(%struct.utmpx* %82), !dbg !1132
  store i8* %83, i8** %15, align 8, !dbg !1133
  %84 = load i8*, i8** %14, align 8, !dbg !1134
  %85 = load i8*, i8** %15, align 8, !dbg !1135
  %86 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0), i8* %84, i8* %85), !dbg !1136
  %87 = load i8*, i8** %15, align 8, !dbg !1137
  call void @free(i8* %87) #10, !dbg !1138
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.59, i64 0, i64 0), i8** %14, align 8, !dbg !1139
  %88 = load i64, i64* %13, align 8, !dbg !1140
  %89 = add i64 %88, 1, !dbg !1140
  store i64 %89, i64* %13, align 8, !dbg !1140
  %90 = load i32, i32* @x.7
  %91 = load i32, i32* @y.8
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  br label %98, !dbg !1141

98:                                               ; preds = %originalBBpart218, %originalBBpart214, %44
  %99 = load i32, i32* @x.7
  %100 = load i32, i32* @y.8
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %98, %originalBB20alteredBB
  %107 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1142
  %108 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %107, i32 1, !dbg !1142
  store %struct.utmpx* %108, %struct.utmpx** %12, align 8, !dbg !1142
  %109 = load i32, i32* @x.7
  %110 = load i32, i32* @y.8
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart222, label %originalBB20alteredBB

originalBBpart222:                                ; preds = %originalBB20
  br label %24, !dbg !1122, !llvm.loop !1143

117:                                              ; preds = %originalBBpart210
  %118 = load i32, i32* @x.7
  %119 = load i32, i32* @y.8
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %117, %originalBB24alteredBB
  %126 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.60, i64 0, i64 0)) #10, !dbg !1145
  %127 = load i64, i64* %13, align 8, !dbg !1146
  %128 = call i32 (i8*, ...) @printf(i8* %126, i64 %127), !dbg !1147
  %129 = load i32, i32* @x.7
  %130 = load i32, i32* @y.8
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart226, label %originalBB24alteredBB

originalBBpart226:                                ; preds = %originalBB24
  ret void, !dbg !1148

originalBBalteredBB:                              ; preds = %originalBB, %2
  %137 = alloca i64, align 8
  %138 = alloca %struct.utmpx*, align 8
  %139 = alloca i64, align 8
  %140 = alloca i8*, align 8
  %141 = alloca i8*, align 8
  store i64 %0, i64* %137, align 8
  call void @llvm.dbg.declare(metadata i64* %137, metadata !1149, metadata !DIExpression()), !dbg !1115
  store %struct.utmpx* %1, %struct.utmpx** %138, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %138, metadata !1253, metadata !DIExpression()), !dbg !1117
  call void @llvm.dbg.declare(metadata i64* %139, metadata !1254, metadata !DIExpression()), !dbg !1119
  store i64 0, i64* %139, align 8, !dbg !1119
  call void @llvm.dbg.declare(metadata i8** %140, metadata !1255, metadata !DIExpression()), !dbg !1121
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8** %140, align 8, !dbg !1121
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %142 = load i64, i64* %11, align 8, !dbg !1123
  %_ = shl i64 %142, -1
  %_2 = shl i64 %142, -1
  %_3 = shl i64 %142, -1
  %_4 = sub i64 %142, -1
  %gen = mul i64 %_4, -1
  %_5 = shl i64 %142, -1
  %_6 = shl i64 %142, -1
  %_7 = sub i64 0, %142
  %gen8 = add i64 %_7, -1
  %143 = add i64 %142, -1, !dbg !1123
  store i64 %143, i64* %11, align 8, !dbg !1123
  %144 = icmp ne i64 %142, 0, !dbg !1122
  br label %originalBB1

originalBB12alteredBB:                            ; preds = %originalBB12, %51
  %145 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1124
  %146 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %145, i32 0, i32 0, !dbg !1124
  %147 = load i16, i16* %146, align 4, !dbg !1124
  %148 = sext i16 %147 to i32, !dbg !1124
  %149 = icmp eq i32 %148, 7, !dbg !1124
  br label %originalBB12

originalBB16alteredBB:                            ; preds = %originalBB16, %73
  %150 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1131
  %151 = call i8* @extract_trimmed_name(%struct.utmpx* %150), !dbg !1132
  store i8* %151, i8** %15, align 8, !dbg !1133
  %152 = load i8*, i8** %14, align 8, !dbg !1134
  %153 = load i8*, i8** %15, align 8, !dbg !1135
  %154 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0), i8* %152, i8* %153), !dbg !1136
  %155 = load i8*, i8** %15, align 8, !dbg !1137
  call void @free(i8* %155) #10, !dbg !1138
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.59, i64 0, i64 0), i8** %14, align 8, !dbg !1139
  %156 = load i64, i64* %13, align 8, !dbg !1140
  %157 = add i64 %156, 1, !dbg !1140
  store i64 %157, i64* %13, align 8, !dbg !1140
  br label %originalBB16

originalBB20alteredBB:                            ; preds = %originalBB20, %98
  %158 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1142
  %159 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %158, i32 1, !dbg !1142
  store %struct.utmpx* %159, %struct.utmpx** %12, align 8, !dbg !1142
  br label %originalBB20

originalBB24alteredBB:                            ; preds = %originalBB24, %117
  %160 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.60, i64 0, i64 0)) #10, !dbg !1145
  %161 = load i64, i64* %13, align 8, !dbg !1146
  %162 = call i32 (i8*, ...) @printf(i8* %160, i64 %161), !dbg !1147
  br label %originalBB24
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @scan_entries(i64, %struct.utmpx*) #4 !dbg !1256 {
  %3 = load i32, i32* @x.9
  %4 = load i32, i32* @y.10
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i64, align 8
  %12 = alloca %struct.utmpx*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  store i64 %0, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !1257, metadata !DIExpression()), !dbg !1258
  store %struct.utmpx* %1, %struct.utmpx** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %12, metadata !1259, metadata !DIExpression()), !dbg !1260
  call void @llvm.dbg.declare(metadata i8** %13, metadata !1261, metadata !DIExpression()), !dbg !1262
  call void @llvm.dbg.declare(metadata i64* %14, metadata !1263, metadata !DIExpression()), !dbg !1264
  store i64 -9223372036854775808, i64* %14, align 8, !dbg !1264
  %15 = load i8, i8* @include_heading, align 1, !dbg !1265
  %16 = trunc i8 %15 to i1, !dbg !1265
  %17 = load i32, i32* @x.9
  %18 = load i32, i32* @y.10
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %42, !dbg !1267

25:                                               ; preds = %originalBBpart2
  %26 = load i32, i32* @x.9
  %27 = load i32, i32* @y.10
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %25, %originalBB1alteredBB
  call void @print_heading(), !dbg !1268
  %34 = load i32, i32* @x.9
  %35 = load i32, i32* @y.10
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %42, !dbg !1268

42:                                               ; preds = %originalBBpart24, %originalBBpart2
  %43 = load i8, i8* @my_line_only, align 1, !dbg !1269
  %44 = trunc i8 %43 to i1, !dbg !1269
  br i1 %44, label %45, label %216, !dbg !1271

45:                                               ; preds = %42
  %46 = load i32, i32* @x.9
  %47 = load i32, i32* @y.10
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %45, %originalBB6alteredBB
  %54 = call i8* @ttyname(i32 0) #10, !dbg !1272
  store i8* %54, i8** %13, align 8, !dbg !1274
  %55 = load i8*, i8** %13, align 8, !dbg !1275
  %56 = icmp ne i8* %55, null, !dbg !1275
  %57 = load i32, i32* @x.9
  %58 = load i32, i32* @y.10
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %56, label %82, label %65, !dbg !1277

65:                                               ; preds = %originalBBpart28
  %66 = load i32, i32* @x.9
  %67 = load i32, i32* @y.10
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %65, %originalBB10alteredBB
  %74 = load i32, i32* @x.9
  %75 = load i32, i32* @y.10
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %706, !dbg !1278

82:                                               ; preds = %originalBBpart28
  %83 = load i8*, i8** %13, align 8, !dbg !1279
  %84 = call i32 @strncmp(i8* %83, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0), i64 5) #13, !dbg !1279
  br label %85, !dbg !1281

85:                                               ; preds = %82
  %collatzVar = alloca i32
  br label %86

86:                                               ; preds = %85
  %87 = load i32, i32* @x.9
  %88 = load i32, i32* @y.10
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %86, %originalBB14alteredBB
  %95 = load i32, i32* @inVal0
  %96 = icmp sgt i32 %95, 1
  %97 = load i32, i32* @x.9
  %98 = load i32, i32* @y.10
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %96, label %106, label %105

105:                                              ; preds = %originalBBpart216
  store i32 45, i32* %collatzVar
  br label %106

106:                                              ; preds = %105, %originalBBpart216
  %107 = load i8**, i8*** @inVal1
  %108 = getelementptr inbounds i8*, i8** %107, i64 1
  %109 = load i8*, i8** %108
  %controle = call i32 @controle(i8* %109, i32 0)
  store i32 %controle, i32* %collatzVar
  br label %110

110:                                              ; preds = %originalBBpart265, %originalBBpart246, %106
  %111 = load i32, i32* @x.9
  %112 = load i32, i32* @y.10
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %110, %originalBB18alteredBB
  %119 = load i32, i32* %collatzVar
  %120 = icmp sgt i32 %119, 1
  %121 = load i32, i32* @x.9
  %122 = load i32, i32* @y.10
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %120, label %129, label %215

129:                                              ; preds = %originalBBpart220
  %130 = load i32, i32* %collatzVar
  %131 = srem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %136

133:                                              ; preds = %129
  %134 = load i32, i32* %collatzVar
  %135 = sdiv i32 %134, 2
  store i32 %135, i32* %collatzVar
  br label %156

136:                                              ; preds = %129
  %137 = load i32, i32* @x.9
  %138 = load i32, i32* @y.10
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %136, %originalBB22alteredBB
  %145 = load i32, i32* %collatzVar
  %146 = mul i32 %145, 3
  %147 = add i32 %146, 1
  store i32 %147, i32* %collatzVar
  %148 = load i32, i32* @x.9
  %149 = load i32, i32* @y.10
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBBpart232, label %originalBB22alteredBB

originalBBpart232:                                ; preds = %originalBB22
  br label %156

156:                                              ; preds = %originalBBpart232, %133
  %157 = load i32, i32* @x.9
  %158 = load i32, i32* @y.10
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %156, %originalBB34alteredBB
  %165 = load i32, i32* %collatzVar
  %166 = sub i32 %84, %165
  %167 = icmp sgt i32 %166, -2
  %168 = load i32, i32* @x.9
  %169 = load i32, i32* @y.10
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBBpart246, label %originalBB34alteredBB

originalBBpart246:                                ; preds = %originalBB34
  br i1 %167, label %176, label %110

176:                                              ; preds = %originalBBpart246
  %177 = load i32, i32* @x.9
  %178 = load i32, i32* @y.10
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBB48, label %originalBB48alteredBB

originalBB48:                                     ; preds = %176, %originalBB48alteredBB
  %185 = load i32, i32* %collatzVar
  %186 = add i32 %84, %185
  %187 = icmp slt i32 %186, 2
  %188 = load i32, i32* @x.9
  %189 = load i32, i32* @y.10
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBBpart265, label %originalBB48alteredBB

originalBBpart265:                                ; preds = %originalBB48
  br i1 %187, label %196, label %110

196:                                              ; preds = %originalBBpart265
  %197 = load i32, i32* @x.9
  %198 = load i32, i32* @y.10
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %196, %originalBB67alteredBB
  %205 = load i8*, i8** %13, align 8, !dbg !1282
  %206 = getelementptr inbounds i8, i8* %205, i64 5, !dbg !1282
  store i8* %206, i8** %13, align 8, !dbg !1282
  %207 = load i32, i32* @x.9
  %208 = load i32, i32* @y.10
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  br label %215, !dbg !1283

215:                                              ; preds = %originalBBpart269, %originalBBpart220
  br label %216, !dbg !1284

216:                                              ; preds = %215, %42
  br label %217, !dbg !1285

217:                                              ; preds = %originalBBpart2162, %216
  %218 = load i32, i32* @x.9
  %219 = load i32, i32* @y.10
  %220 = sub i32 %218, 1
  %221 = mul i32 %218, %220
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %223, %224
  br i1 %225, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %217, %originalBB71alteredBB
  %226 = load i64, i64* %11, align 8, !dbg !1286
  %227 = add i64 %226, -1, !dbg !1286
  store i64 %227, i64* %11, align 8, !dbg !1286
  %228 = icmp ne i64 %226, 0, !dbg !1285
  %229 = load i32, i32* @x.9
  %230 = load i32, i32* @y.10
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBBpart274, label %originalBB71alteredBB

originalBBpart274:                                ; preds = %originalBB71
  br i1 %228, label %237, label %706, !dbg !1285

237:                                              ; preds = %originalBBpart274
  %238 = load i8, i8* @my_line_only, align 1, !dbg !1287
  %239 = trunc i8 %238 to i1, !dbg !1287
  br i1 %239, label %240, label %263, !dbg !1290

240:                                              ; preds = %237
  %241 = load i32, i32* @x.9
  %242 = load i32, i32* @y.10
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBB76, label %originalBB76alteredBB

originalBB76:                                     ; preds = %240, %originalBB76alteredBB
  %249 = load i8*, i8** %13, align 8, !dbg !1291
  %250 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1291
  %251 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %250, i32 0, i32 2, !dbg !1291
  %252 = getelementptr inbounds [32 x i8], [32 x i8]* %251, i64 0, i64 0, !dbg !1291
  %253 = call i32 @strncmp(i8* %249, i8* %252, i64 32) #13, !dbg !1291
  %254 = icmp eq i32 %253, 0, !dbg !1291
  %255 = load i32, i32* @x.9
  %256 = load i32, i32* @y.10
  %257 = sub i32 %255, 1
  %258 = mul i32 %255, %257
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %260, %261
  br i1 %262, label %originalBBpart278, label %originalBB76alteredBB

originalBBpart278:                                ; preds = %originalBB76
  br i1 %254, label %263, label %643, !dbg !1292

263:                                              ; preds = %originalBBpart278, %237
  %264 = load i32, i32* @x.9
  %265 = load i32, i32* @y.10
  %266 = sub i32 %264, 1
  %267 = mul i32 %264, %266
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %269, %270
  br i1 %271, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %263, %originalBB80alteredBB
  %272 = load i8, i8* @need_users, align 1, !dbg !1293
  %273 = trunc i8 %272 to i1, !dbg !1293
  %274 = load i32, i32* @x.9
  %275 = load i32, i32* @y.10
  %276 = sub i32 %274, 1
  %277 = mul i32 %274, %276
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %279, %280
  br i1 %281, label %originalBBpart282, label %originalBB80alteredBB

originalBBpart282:                                ; preds = %originalBB80
  br i1 %273, label %282, label %314, !dbg !1296

282:                                              ; preds = %originalBBpart282
  %283 = load i32, i32* @x.9
  %284 = load i32, i32* @y.10
  %285 = sub i32 %283, 1
  %286 = mul i32 %283, %285
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %288, %289
  br i1 %290, label %originalBB84, label %originalBB84alteredBB

originalBB84:                                     ; preds = %282, %originalBB84alteredBB
  %291 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1297
  %292 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %291, i32 0, i32 4, !dbg !1297
  %293 = getelementptr inbounds [32 x i8], [32 x i8]* %292, i64 0, i64 0, !dbg !1297
  %294 = load i8, i8* %293, align 4, !dbg !1297
  %295 = sext i8 %294 to i32, !dbg !1297
  %296 = icmp ne i32 %295, 0, !dbg !1297
  %297 = load i32, i32* @x.9
  %298 = load i32, i32* @y.10
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBBpart286, label %originalBB84alteredBB

originalBBpart286:                                ; preds = %originalBB84
  br i1 %296, label %305, label %314, !dbg !1297

305:                                              ; preds = %originalBBpart286
  %306 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1297
  %307 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %306, i32 0, i32 0, !dbg !1297
  %308 = load i16, i16* %307, align 4, !dbg !1297
  %309 = sext i16 %308 to i32, !dbg !1297
  %310 = icmp eq i32 %309, 7, !dbg !1297
  br i1 %310, label %311, label %314, !dbg !1298

311:                                              ; preds = %305
  %312 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1299
  %313 = load i64, i64* %14, align 8, !dbg !1300
  call void @print_user(%struct.utmpx* %312, i64 %313), !dbg !1301
  br label %626, !dbg !1301

314:                                              ; preds = %305, %originalBBpart286, %originalBBpart282
  %315 = load i32, i32* @x.9
  %316 = load i32, i32* @y.10
  %317 = sub i32 %315, 1
  %318 = mul i32 %315, %317
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %320, %321
  br i1 %322, label %originalBB88, label %originalBB88alteredBB

originalBB88:                                     ; preds = %314, %originalBB88alteredBB
  %323 = load i8, i8* @need_runlevel, align 1, !dbg !1302
  %324 = trunc i8 %323 to i1, !dbg !1302
  %325 = load i32, i32* @x.9
  %326 = load i32, i32* @y.10
  %327 = sub i32 %325, 1
  %328 = mul i32 %325, %327
  %329 = urem i32 %328, 2
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %330, %331
  br i1 %332, label %originalBBpart290, label %originalBB88alteredBB

originalBBpart290:                                ; preds = %originalBB88
  br i1 %324, label %333, label %357, !dbg !1304

333:                                              ; preds = %originalBBpart290
  %334 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1305
  %335 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %334, i32 0, i32 0, !dbg !1305
  %336 = load i16, i16* %335, align 4, !dbg !1305
  %337 = sext i16 %336 to i32, !dbg !1305
  %338 = icmp eq i32 %337, 1, !dbg !1305
  br i1 %338, label %339, label %357, !dbg !1306

339:                                              ; preds = %333
  %340 = load i32, i32* @x.9
  %341 = load i32, i32* @y.10
  %342 = sub i32 %340, 1
  %343 = mul i32 %340, %342
  %344 = urem i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %345, %346
  br i1 %347, label %originalBB92, label %originalBB92alteredBB

originalBB92:                                     ; preds = %339, %originalBB92alteredBB
  %348 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1307
  call void @print_runlevel(%struct.utmpx* %348), !dbg !1308
  %349 = load i32, i32* @x.9
  %350 = load i32, i32* @y.10
  %351 = sub i32 %349, 1
  %352 = mul i32 %349, %351
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %350, 10
  %356 = or i1 %354, %355
  br i1 %356, label %originalBBpart294, label %originalBB92alteredBB

originalBBpart294:                                ; preds = %originalBB92
  br label %609, !dbg !1308

357:                                              ; preds = %333, %originalBBpart290
  %358 = load i32, i32* @x.9
  %359 = load i32, i32* @y.10
  %360 = sub i32 %358, 1
  %361 = mul i32 %358, %360
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %363, %364
  br i1 %365, label %originalBB96, label %originalBB96alteredBB

originalBB96:                                     ; preds = %357, %originalBB96alteredBB
  %366 = load i8, i8* @need_boottime, align 1, !dbg !1309
  %367 = trunc i8 %366 to i1, !dbg !1309
  %368 = load i32, i32* @x.9
  %369 = load i32, i32* @y.10
  %370 = sub i32 %368, 1
  %371 = mul i32 %368, %370
  %372 = urem i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %369, 10
  %375 = or i1 %373, %374
  br i1 %375, label %originalBBpart298, label %originalBB96alteredBB

originalBBpart298:                                ; preds = %originalBB96
  br i1 %367, label %376, label %400, !dbg !1311

376:                                              ; preds = %originalBBpart298
  %377 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1312
  %378 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %377, i32 0, i32 0, !dbg !1312
  %379 = load i16, i16* %378, align 4, !dbg !1312
  %380 = sext i16 %379 to i32, !dbg !1312
  %381 = icmp eq i32 %380, 2, !dbg !1312
  br i1 %381, label %382, label %400, !dbg !1313

382:                                              ; preds = %376
  %383 = load i32, i32* @x.9
  %384 = load i32, i32* @y.10
  %385 = sub i32 %383, 1
  %386 = mul i32 %383, %385
  %387 = urem i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %388, %389
  br i1 %390, label %originalBB100, label %originalBB100alteredBB

originalBB100:                                    ; preds = %382, %originalBB100alteredBB
  %391 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1314
  call void @print_boottime(%struct.utmpx* %391), !dbg !1315
  %392 = load i32, i32* @x.9
  %393 = load i32, i32* @y.10
  %394 = sub i32 %392, 1
  %395 = mul i32 %392, %394
  %396 = urem i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %397, %398
  br i1 %399, label %originalBBpart2102, label %originalBB100alteredBB

originalBBpart2102:                               ; preds = %originalBB100
  br label %608, !dbg !1315

400:                                              ; preds = %376, %originalBBpart298
  %401 = load i8, i8* @need_clockchange, align 1, !dbg !1316
  %402 = trunc i8 %401 to i1, !dbg !1316
  br i1 %402, label %403, label %427, !dbg !1318

403:                                              ; preds = %400
  %404 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1319
  %405 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %404, i32 0, i32 0, !dbg !1319
  %406 = load i16, i16* %405, align 4, !dbg !1319
  %407 = sext i16 %406 to i32, !dbg !1319
  %408 = icmp eq i32 %407, 3, !dbg !1319
  br i1 %408, label %409, label %427, !dbg !1320

409:                                              ; preds = %403
  %410 = load i32, i32* @x.9
  %411 = load i32, i32* @y.10
  %412 = sub i32 %410, 1
  %413 = mul i32 %410, %412
  %414 = urem i32 %413, 2
  %415 = icmp eq i32 %414, 0
  %416 = icmp slt i32 %411, 10
  %417 = or i1 %415, %416
  br i1 %417, label %originalBB104, label %originalBB104alteredBB

originalBB104:                                    ; preds = %409, %originalBB104alteredBB
  %418 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1321
  call void @print_clockchange(%struct.utmpx* %418), !dbg !1322
  %419 = load i32, i32* @x.9
  %420 = load i32, i32* @y.10
  %421 = sub i32 %419, 1
  %422 = mul i32 %419, %421
  %423 = urem i32 %422, 2
  %424 = icmp eq i32 %423, 0
  %425 = icmp slt i32 %420, 10
  %426 = or i1 %424, %425
  br i1 %426, label %originalBBpart2106, label %originalBB104alteredBB

originalBBpart2106:                               ; preds = %originalBB104
  br label %607, !dbg !1322

427:                                              ; preds = %403, %400
  %428 = load i32, i32* @x.9
  %429 = load i32, i32* @y.10
  %430 = sub i32 %428, 1
  %431 = mul i32 %428, %430
  %432 = urem i32 %431, 2
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %429, 10
  %435 = or i1 %433, %434
  br i1 %435, label %originalBB108, label %originalBB108alteredBB

originalBB108:                                    ; preds = %427, %originalBB108alteredBB
  %436 = load i8, i8* @need_initspawn, align 1, !dbg !1323
  %437 = trunc i8 %436 to i1, !dbg !1323
  %438 = load i32, i32* @x.9
  %439 = load i32, i32* @y.10
  %440 = sub i32 %438, 1
  %441 = mul i32 %438, %440
  %442 = urem i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %443, %444
  br i1 %445, label %originalBBpart2110, label %originalBB108alteredBB

originalBBpart2110:                               ; preds = %originalBB108
  br i1 %437, label %446, label %470, !dbg !1325

446:                                              ; preds = %originalBBpart2110
  %447 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1326
  %448 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %447, i32 0, i32 0, !dbg !1326
  %449 = load i16, i16* %448, align 4, !dbg !1326
  %450 = sext i16 %449 to i32, !dbg !1326
  %451 = icmp eq i32 %450, 5, !dbg !1326
  br i1 %451, label %452, label %470, !dbg !1327

452:                                              ; preds = %446
  %453 = load i32, i32* @x.9
  %454 = load i32, i32* @y.10
  %455 = sub i32 %453, 1
  %456 = mul i32 %453, %455
  %457 = urem i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = icmp slt i32 %454, 10
  %460 = or i1 %458, %459
  br i1 %460, label %originalBB112, label %originalBB112alteredBB

originalBB112:                                    ; preds = %452, %originalBB112alteredBB
  %461 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1328
  call void @print_initspawn(%struct.utmpx* %461), !dbg !1329
  %462 = load i32, i32* @x.9
  %463 = load i32, i32* @y.10
  %464 = sub i32 %462, 1
  %465 = mul i32 %462, %464
  %466 = urem i32 %465, 2
  %467 = icmp eq i32 %466, 0
  %468 = icmp slt i32 %463, 10
  %469 = or i1 %467, %468
  br i1 %469, label %originalBBpart2114, label %originalBB112alteredBB

originalBBpart2114:                               ; preds = %originalBB112
  br label %606, !dbg !1329

470:                                              ; preds = %446, %originalBBpart2110
  %471 = load i32, i32* @x.9
  %472 = load i32, i32* @y.10
  %473 = sub i32 %471, 1
  %474 = mul i32 %471, %473
  %475 = urem i32 %474, 2
  %476 = icmp eq i32 %475, 0
  %477 = icmp slt i32 %472, 10
  %478 = or i1 %476, %477
  br i1 %478, label %originalBB116, label %originalBB116alteredBB

originalBB116:                                    ; preds = %470, %originalBB116alteredBB
  %479 = load i8, i8* @need_login, align 1, !dbg !1330
  %480 = trunc i8 %479 to i1, !dbg !1330
  %481 = load i32, i32* @x.9
  %482 = load i32, i32* @y.10
  %483 = sub i32 %481, 1
  %484 = mul i32 %481, %483
  %485 = urem i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = icmp slt i32 %482, 10
  %488 = or i1 %486, %487
  br i1 %488, label %originalBBpart2118, label %originalBB116alteredBB

originalBBpart2118:                               ; preds = %originalBB116
  br i1 %480, label %489, label %529, !dbg !1332

489:                                              ; preds = %originalBBpart2118
  %490 = load i32, i32* @x.9
  %491 = load i32, i32* @y.10
  %492 = sub i32 %490, 1
  %493 = mul i32 %490, %492
  %494 = urem i32 %493, 2
  %495 = icmp eq i32 %494, 0
  %496 = icmp slt i32 %491, 10
  %497 = or i1 %495, %496
  br i1 %497, label %originalBB120, label %originalBB120alteredBB

originalBB120:                                    ; preds = %489, %originalBB120alteredBB
  %498 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1333
  %499 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %498, i32 0, i32 0, !dbg !1333
  %500 = load i16, i16* %499, align 4, !dbg !1333
  %501 = sext i16 %500 to i32, !dbg !1333
  %502 = icmp eq i32 %501, 6, !dbg !1333
  %503 = load i32, i32* @x.9
  %504 = load i32, i32* @y.10
  %505 = sub i32 %503, 1
  %506 = mul i32 %503, %505
  %507 = urem i32 %506, 2
  %508 = icmp eq i32 %507, 0
  %509 = icmp slt i32 %504, 10
  %510 = or i1 %508, %509
  br i1 %510, label %originalBBpart2122, label %originalBB120alteredBB

originalBBpart2122:                               ; preds = %originalBB120
  br i1 %502, label %511, label %529, !dbg !1334

511:                                              ; preds = %originalBBpart2122
  %512 = load i32, i32* @x.9
  %513 = load i32, i32* @y.10
  %514 = sub i32 %512, 1
  %515 = mul i32 %512, %514
  %516 = urem i32 %515, 2
  %517 = icmp eq i32 %516, 0
  %518 = icmp slt i32 %513, 10
  %519 = or i1 %517, %518
  br i1 %519, label %originalBB124, label %originalBB124alteredBB

originalBB124:                                    ; preds = %511, %originalBB124alteredBB
  %520 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1335
  call void @print_login(%struct.utmpx* %520), !dbg !1336
  %521 = load i32, i32* @x.9
  %522 = load i32, i32* @y.10
  %523 = sub i32 %521, 1
  %524 = mul i32 %521, %523
  %525 = urem i32 %524, 2
  %526 = icmp eq i32 %525, 0
  %527 = icmp slt i32 %522, 10
  %528 = or i1 %526, %527
  br i1 %528, label %originalBBpart2126, label %originalBB124alteredBB

originalBBpart2126:                               ; preds = %originalBB124
  br label %605, !dbg !1336

529:                                              ; preds = %originalBBpart2122, %originalBBpart2118
  %530 = load i32, i32* @x.9
  %531 = load i32, i32* @y.10
  %532 = sub i32 %530, 1
  %533 = mul i32 %530, %532
  %534 = urem i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %531, 10
  %537 = or i1 %535, %536
  br i1 %537, label %originalBB128, label %originalBB128alteredBB

originalBB128:                                    ; preds = %529, %originalBB128alteredBB
  %538 = load i8, i8* @need_deadprocs, align 1, !dbg !1337
  %539 = trunc i8 %538 to i1, !dbg !1337
  %540 = load i32, i32* @x.9
  %541 = load i32, i32* @y.10
  %542 = sub i32 %540, 1
  %543 = mul i32 %540, %542
  %544 = urem i32 %543, 2
  %545 = icmp eq i32 %544, 0
  %546 = icmp slt i32 %541, 10
  %547 = or i1 %545, %546
  br i1 %547, label %originalBBpart2130, label %originalBB128alteredBB

originalBBpart2130:                               ; preds = %originalBB128
  br i1 %539, label %548, label %588, !dbg !1339

548:                                              ; preds = %originalBBpart2130
  %549 = load i32, i32* @x.9
  %550 = load i32, i32* @y.10
  %551 = sub i32 %549, 1
  %552 = mul i32 %549, %551
  %553 = urem i32 %552, 2
  %554 = icmp eq i32 %553, 0
  %555 = icmp slt i32 %550, 10
  %556 = or i1 %554, %555
  br i1 %556, label %originalBB132, label %originalBB132alteredBB

originalBB132:                                    ; preds = %548, %originalBB132alteredBB
  %557 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1340
  %558 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %557, i32 0, i32 0, !dbg !1340
  %559 = load i16, i16* %558, align 4, !dbg !1340
  %560 = sext i16 %559 to i32, !dbg !1340
  %561 = icmp eq i32 %560, 8, !dbg !1340
  %562 = load i32, i32* @x.9
  %563 = load i32, i32* @y.10
  %564 = sub i32 %562, 1
  %565 = mul i32 %562, %564
  %566 = urem i32 %565, 2
  %567 = icmp eq i32 %566, 0
  %568 = icmp slt i32 %563, 10
  %569 = or i1 %567, %568
  br i1 %569, label %originalBBpart2134, label %originalBB132alteredBB

originalBBpart2134:                               ; preds = %originalBB132
  br i1 %561, label %570, label %588, !dbg !1341

570:                                              ; preds = %originalBBpart2134
  %571 = load i32, i32* @x.9
  %572 = load i32, i32* @y.10
  %573 = sub i32 %571, 1
  %574 = mul i32 %571, %573
  %575 = urem i32 %574, 2
  %576 = icmp eq i32 %575, 0
  %577 = icmp slt i32 %572, 10
  %578 = or i1 %576, %577
  br i1 %578, label %originalBB136, label %originalBB136alteredBB

originalBB136:                                    ; preds = %570, %originalBB136alteredBB
  %579 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1342
  call void @print_deadprocs(%struct.utmpx* %579), !dbg !1343
  %580 = load i32, i32* @x.9
  %581 = load i32, i32* @y.10
  %582 = sub i32 %580, 1
  %583 = mul i32 %580, %582
  %584 = urem i32 %583, 2
  %585 = icmp eq i32 %584, 0
  %586 = icmp slt i32 %581, 10
  %587 = or i1 %585, %586
  br i1 %587, label %originalBBpart2138, label %originalBB136alteredBB

originalBBpart2138:                               ; preds = %originalBB136
  br label %588, !dbg !1343

588:                                              ; preds = %originalBBpart2138, %originalBBpart2134, %originalBBpart2130
  %589 = load i32, i32* @x.9
  %590 = load i32, i32* @y.10
  %591 = sub i32 %589, 1
  %592 = mul i32 %589, %591
  %593 = urem i32 %592, 2
  %594 = icmp eq i32 %593, 0
  %595 = icmp slt i32 %590, 10
  %596 = or i1 %594, %595
  br i1 %596, label %originalBB140, label %originalBB140alteredBB

originalBB140:                                    ; preds = %588, %originalBB140alteredBB
  %597 = load i32, i32* @x.9
  %598 = load i32, i32* @y.10
  %599 = sub i32 %597, 1
  %600 = mul i32 %597, %599
  %601 = urem i32 %600, 2
  %602 = icmp eq i32 %601, 0
  %603 = icmp slt i32 %598, 10
  %604 = or i1 %602, %603
  br i1 %604, label %originalBBpart2142, label %originalBB140alteredBB

originalBBpart2142:                               ; preds = %originalBB140
  br label %605

605:                                              ; preds = %originalBBpart2142, %originalBBpart2126
  br label %606

606:                                              ; preds = %605, %originalBBpart2114
  br label %607

607:                                              ; preds = %606, %originalBBpart2106
  br label %608

608:                                              ; preds = %607, %originalBBpart2102
  br label %609

609:                                              ; preds = %608, %originalBBpart294
  %610 = load i32, i32* @x.9
  %611 = load i32, i32* @y.10
  %612 = sub i32 %610, 1
  %613 = mul i32 %610, %612
  %614 = urem i32 %613, 2
  %615 = icmp eq i32 %614, 0
  %616 = icmp slt i32 %611, 10
  %617 = or i1 %615, %616
  br i1 %617, label %originalBB144, label %originalBB144alteredBB

originalBB144:                                    ; preds = %609, %originalBB144alteredBB
  %618 = load i32, i32* @x.9
  %619 = load i32, i32* @y.10
  %620 = sub i32 %618, 1
  %621 = mul i32 %618, %620
  %622 = urem i32 %621, 2
  %623 = icmp eq i32 %622, 0
  %624 = icmp slt i32 %619, 10
  %625 = or i1 %623, %624
  br i1 %625, label %originalBBpart2146, label %originalBB144alteredBB

originalBBpart2146:                               ; preds = %originalBB144
  br label %626

626:                                              ; preds = %originalBBpart2146, %311
  %627 = load i32, i32* @x.9
  %628 = load i32, i32* @y.10
  %629 = sub i32 %627, 1
  %630 = mul i32 %627, %629
  %631 = urem i32 %630, 2
  %632 = icmp eq i32 %631, 0
  %633 = icmp slt i32 %628, 10
  %634 = or i1 %632, %633
  br i1 %634, label %originalBB148, label %originalBB148alteredBB

originalBB148:                                    ; preds = %626, %originalBB148alteredBB
  %635 = load i32, i32* @x.9
  %636 = load i32, i32* @y.10
  %637 = sub i32 %635, 1
  %638 = mul i32 %635, %637
  %639 = urem i32 %638, 2
  %640 = icmp eq i32 %639, 0
  %641 = icmp slt i32 %636, 10
  %642 = or i1 %640, %641
  br i1 %642, label %originalBBpart2150, label %originalBB148alteredBB

originalBBpart2150:                               ; preds = %originalBB148
  br label %643, !dbg !1344

643:                                              ; preds = %originalBBpart2150, %originalBBpart278
  %644 = load i32, i32* @x.9
  %645 = load i32, i32* @y.10
  %646 = sub i32 %644, 1
  %647 = mul i32 %644, %646
  %648 = urem i32 %647, 2
  %649 = icmp eq i32 %648, 0
  %650 = icmp slt i32 %645, 10
  %651 = or i1 %649, %650
  br i1 %651, label %originalBB152, label %originalBB152alteredBB

originalBB152:                                    ; preds = %643, %originalBB152alteredBB
  %652 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1345
  %653 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %652, i32 0, i32 0, !dbg !1345
  %654 = load i16, i16* %653, align 4, !dbg !1345
  %655 = sext i16 %654 to i32, !dbg !1345
  %656 = icmp eq i32 %655, 2, !dbg !1345
  %657 = load i32, i32* @x.9
  %658 = load i32, i32* @y.10
  %659 = sub i32 %657, 1
  %660 = mul i32 %657, %659
  %661 = urem i32 %660, 2
  %662 = icmp eq i32 %661, 0
  %663 = icmp slt i32 %658, 10
  %664 = or i1 %662, %663
  br i1 %664, label %originalBBpart2154, label %originalBB152alteredBB

originalBBpart2154:                               ; preds = %originalBB152
  br i1 %656, label %665, label %687, !dbg !1347

665:                                              ; preds = %originalBBpart2154
  %666 = load i32, i32* @x.9
  %667 = load i32, i32* @y.10
  %668 = sub i32 %666, 1
  %669 = mul i32 %666, %668
  %670 = urem i32 %669, 2
  %671 = icmp eq i32 %670, 0
  %672 = icmp slt i32 %667, 10
  %673 = or i1 %671, %672
  br i1 %673, label %originalBB156, label %originalBB156alteredBB

originalBB156:                                    ; preds = %665, %originalBB156alteredBB
  %674 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1348
  %675 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %674, i32 0, i32 8, !dbg !1348
  %676 = getelementptr inbounds %struct.anon, %struct.anon* %675, i32 0, i32 0, !dbg !1348
  %677 = load i32, i32* %676, align 4, !dbg !1348
  %678 = sext i32 %677 to i64, !dbg !1348
  store i64 %678, i64* %14, align 8, !dbg !1349
  %679 = load i32, i32* @x.9
  %680 = load i32, i32* @y.10
  %681 = sub i32 %679, 1
  %682 = mul i32 %679, %681
  %683 = urem i32 %682, 2
  %684 = icmp eq i32 %683, 0
  %685 = icmp slt i32 %680, 10
  %686 = or i1 %684, %685
  br i1 %686, label %originalBBpart2158, label %originalBB156alteredBB

originalBBpart2158:                               ; preds = %originalBB156
  br label %687, !dbg !1350

687:                                              ; preds = %originalBBpart2158, %originalBBpart2154
  %688 = load i32, i32* @x.9
  %689 = load i32, i32* @y.10
  %690 = sub i32 %688, 1
  %691 = mul i32 %688, %690
  %692 = urem i32 %691, 2
  %693 = icmp eq i32 %692, 0
  %694 = icmp slt i32 %689, 10
  %695 = or i1 %693, %694
  br i1 %695, label %originalBB160, label %originalBB160alteredBB

originalBB160:                                    ; preds = %687, %originalBB160alteredBB
  %696 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1351
  %697 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %696, i32 1, !dbg !1351
  store %struct.utmpx* %697, %struct.utmpx** %12, align 8, !dbg !1351
  %698 = load i32, i32* @x.9
  %699 = load i32, i32* @y.10
  %700 = sub i32 %698, 1
  %701 = mul i32 %698, %700
  %702 = urem i32 %701, 2
  %703 = icmp eq i32 %702, 0
  %704 = icmp slt i32 %699, 10
  %705 = or i1 %703, %704
  br i1 %705, label %originalBBpart2162, label %originalBB160alteredBB

originalBBpart2162:                               ; preds = %originalBB160
  br label %217, !dbg !1285, !llvm.loop !1352

706:                                              ; preds = %originalBBpart274, %originalBBpart212
  ret void, !dbg !1354

originalBBalteredBB:                              ; preds = %originalBB, %2
  %707 = alloca i64, align 8
  %708 = alloca %struct.utmpx*, align 8
  %709 = alloca i8*, align 8
  %710 = alloca i64, align 8
  store i64 %0, i64* %707, align 8
  call void @llvm.dbg.declare(metadata i64* %707, metadata !1355, metadata !DIExpression()), !dbg !1258
  store %struct.utmpx* %1, %struct.utmpx** %708, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %708, metadata !1459, metadata !DIExpression()), !dbg !1260
  call void @llvm.dbg.declare(metadata i8** %709, metadata !1460, metadata !DIExpression()), !dbg !1262
  call void @llvm.dbg.declare(metadata i64* %710, metadata !1461, metadata !DIExpression()), !dbg !1264
  store i64 -9223372036854775808, i64* %710, align 8, !dbg !1264
  %711 = load i8, i8* @include_heading, align 1, !dbg !1265
  %712 = trunc i8 %711 to i1, !dbg !1265
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  call void @print_heading(), !dbg !1268
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %45
  %713 = call i8* @ttyname(i32 0) #10, !dbg !1272
  store i8* %713, i8** %13, align 8, !dbg !1274
  %714 = load i8*, i8** %13, align 8, !dbg !1275
  %715 = icmp ne i8* %714, null, !dbg !1275
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %65
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %86
  %716 = load i32, i32* @inVal0
  %717 = icmp sgt i32 %716, 1
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %110
  %718 = load i32, i32* %collatzVar
  %719 = icmp sgt i32 %718, 1
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %136
  %720 = load i32, i32* %collatzVar
  %_ = sub i32 %720, 3
  %gen = mul i32 %_, 3
  %_23 = shl i32 %720, 3
  %721 = mul i32 %720, 3
  %_24 = shl i32 %721, 1
  %_25 = sub i32 %721, 1
  %gen26 = mul i32 %_25, 1
  %_27 = sub i32 0, %721
  %gen28 = add i32 %_27, 1
  %_29 = sub i32 %721, 1
  %gen30 = mul i32 %_29, 1
  %722 = add i32 %721, 1
  store i32 %722, i32* %collatzVar
  br label %originalBB22

originalBB34alteredBB:                            ; preds = %originalBB34, %156
  %723 = load i32, i32* %collatzVar
  %_35 = sub i32 0, %84
  %gen36 = add i32 %_35, %723
  %_37 = shl i32 %84, %723
  %_38 = sub i32 %84, %723
  %gen39 = mul i32 %_38, %723
  %_40 = shl i32 %84, %723
  %_41 = sub i32 0, %84
  %gen42 = add i32 %_41, %723
  %_43 = sub i32 %84, %723
  %gen44 = mul i32 %_43, %723
  %724 = sub i32 %84, %723
  %725 = icmp sgt i32 %724, -2
  br label %originalBB34

originalBB48alteredBB:                            ; preds = %originalBB48, %176
  %726 = load i32, i32* %collatzVar
  %_49 = sub i32 0, %84
  %gen50 = add i32 %_49, %726
  %_51 = sub i32 %84, %726
  %gen52 = mul i32 %_51, %726
  %_53 = sub i32 0, %84
  %gen54 = add i32 %_53, %726
  %_55 = shl i32 %84, %726
  %_56 = shl i32 %84, %726
  %_57 = sub i32 0, %84
  %gen58 = add i32 %_57, %726
  %_59 = sub i32 0, %84
  %gen60 = add i32 %_59, %726
  %_61 = sub i32 0, %84
  %gen62 = add i32 %_61, %726
  %_63 = shl i32 %84, %726
  %727 = add i32 %84, %726
  %728 = icmp slt i32 %727, 2
  br label %originalBB48

originalBB67alteredBB:                            ; preds = %originalBB67, %196
  %729 = load i8*, i8** %13, align 8, !dbg !1282
  %730 = getelementptr inbounds i8, i8* %729, i64 5, !dbg !1282
  store i8* %730, i8** %13, align 8, !dbg !1282
  br label %originalBB67

originalBB71alteredBB:                            ; preds = %originalBB71, %217
  %731 = load i64, i64* %11, align 8, !dbg !1286
  %_72 = shl i64 %731, -1
  %732 = add i64 %731, -1, !dbg !1286
  store i64 %732, i64* %11, align 8, !dbg !1286
  %733 = icmp ne i64 %731, 0, !dbg !1285
  br label %originalBB71

originalBB76alteredBB:                            ; preds = %originalBB76, %240
  %734 = load i8*, i8** %13, align 8, !dbg !1291
  %735 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1291
  %736 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %735, i32 0, i32 2, !dbg !1291
  %737 = getelementptr inbounds [32 x i8], [32 x i8]* %736, i64 0, i64 0, !dbg !1291
  %738 = call i32 @strncmp(i8* %734, i8* %737, i64 32) #13, !dbg !1291
  %739 = icmp eq i32 %738, 0, !dbg !1291
  br label %originalBB76

originalBB80alteredBB:                            ; preds = %originalBB80, %263
  %740 = load i8, i8* @need_users, align 1, !dbg !1293
  %741 = trunc i8 %740 to i1, !dbg !1293
  br label %originalBB80

originalBB84alteredBB:                            ; preds = %originalBB84, %282
  %742 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1297
  %743 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %742, i32 0, i32 4, !dbg !1297
  %744 = getelementptr inbounds [32 x i8], [32 x i8]* %743, i64 0, i64 0, !dbg !1297
  %745 = load i8, i8* %744, align 4, !dbg !1297
  %746 = sext i8 %745 to i32, !dbg !1297
  %747 = icmp ne i32 %746, 0, !dbg !1297
  br label %originalBB84

originalBB88alteredBB:                            ; preds = %originalBB88, %314
  %748 = load i8, i8* @need_runlevel, align 1, !dbg !1302
  %749 = trunc i8 %748 to i1, !dbg !1302
  br label %originalBB88

originalBB92alteredBB:                            ; preds = %originalBB92, %339
  %750 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1307
  call void @print_runlevel(%struct.utmpx* %750), !dbg !1308
  br label %originalBB92

originalBB96alteredBB:                            ; preds = %originalBB96, %357
  %751 = load i8, i8* @need_boottime, align 1, !dbg !1309
  %752 = trunc i8 %751 to i1, !dbg !1309
  br label %originalBB96

originalBB100alteredBB:                           ; preds = %originalBB100, %382
  %753 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1314
  call void @print_boottime(%struct.utmpx* %753), !dbg !1315
  br label %originalBB100

originalBB104alteredBB:                           ; preds = %originalBB104, %409
  %754 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1321
  call void @print_clockchange(%struct.utmpx* %754), !dbg !1322
  br label %originalBB104

originalBB108alteredBB:                           ; preds = %originalBB108, %427
  %755 = load i8, i8* @need_initspawn, align 1, !dbg !1323
  %756 = trunc i8 %755 to i1, !dbg !1323
  br label %originalBB108

originalBB112alteredBB:                           ; preds = %originalBB112, %452
  %757 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1328
  call void @print_initspawn(%struct.utmpx* %757), !dbg !1329
  br label %originalBB112

originalBB116alteredBB:                           ; preds = %originalBB116, %470
  %758 = load i8, i8* @need_login, align 1, !dbg !1330
  %759 = trunc i8 %758 to i1, !dbg !1330
  br label %originalBB116

originalBB120alteredBB:                           ; preds = %originalBB120, %489
  %760 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1333
  %761 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %760, i32 0, i32 0, !dbg !1333
  %762 = load i16, i16* %761, align 4, !dbg !1333
  %763 = sext i16 %762 to i32, !dbg !1333
  %764 = icmp eq i32 %763, 6, !dbg !1333
  br label %originalBB120

originalBB124alteredBB:                           ; preds = %originalBB124, %511
  %765 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1335
  call void @print_login(%struct.utmpx* %765), !dbg !1336
  br label %originalBB124

originalBB128alteredBB:                           ; preds = %originalBB128, %529
  %766 = load i8, i8* @need_deadprocs, align 1, !dbg !1337
  %767 = trunc i8 %766 to i1, !dbg !1337
  br label %originalBB128

originalBB132alteredBB:                           ; preds = %originalBB132, %548
  %768 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1340
  %769 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %768, i32 0, i32 0, !dbg !1340
  %770 = load i16, i16* %769, align 4, !dbg !1340
  %771 = sext i16 %770 to i32, !dbg !1340
  %772 = icmp eq i32 %771, 8, !dbg !1340
  br label %originalBB132

originalBB136alteredBB:                           ; preds = %originalBB136, %570
  %773 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1342
  call void @print_deadprocs(%struct.utmpx* %773), !dbg !1343
  br label %originalBB136

originalBB140alteredBB:                           ; preds = %originalBB140, %588
  br label %originalBB140

originalBB144alteredBB:                           ; preds = %originalBB144, %609
  br label %originalBB144

originalBB148alteredBB:                           ; preds = %originalBB148, %626
  br label %originalBB148

originalBB152alteredBB:                           ; preds = %originalBB152, %643
  %774 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1345
  %775 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %774, i32 0, i32 0, !dbg !1345
  %776 = load i16, i16* %775, align 4, !dbg !1345
  %777 = sext i16 %776 to i32, !dbg !1345
  %778 = icmp eq i32 %777, 2, !dbg !1345
  br label %originalBB152

originalBB156alteredBB:                           ; preds = %originalBB156, %665
  %779 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1348
  %780 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %779, i32 0, i32 8, !dbg !1348
  %781 = getelementptr inbounds %struct.anon, %struct.anon* %780, i32 0, i32 0, !dbg !1348
  %782 = load i32, i32* %781, align 4, !dbg !1348
  %783 = sext i32 %782 to i64, !dbg !1348
  store i64 %783, i64* %14, align 8, !dbg !1349
  br label %originalBB156

originalBB160alteredBB:                           ; preds = %originalBB160, %687
  %784 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1351
  %785 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %784, i32 1, !dbg !1351
  store %struct.utmpx* %785, %struct.utmpx** %12, align 8, !dbg !1351
  br label %originalBB160
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_heading() #4 !dbg !1462 {
  %1 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0)) #10, !dbg !1465
  %2 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i64 0, i64 0)) #10, !dbg !1466
  %3 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i64 0, i64 0)) #10, !dbg !1467
  %4 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i64 0, i64 0)) #10, !dbg !1468
  %5 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i64 0, i64 0)) #10, !dbg !1469
  %6 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i64 0, i64 0)) #10, !dbg !1470
  %7 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0)) #10, !dbg !1471
  call void @print_line(i32 -1, i8* %1, i8 signext 32, i32 -1, i8* %2, i8* %3, i8* %4, i8* %5, i8* %6, i8* %7), !dbg !1472
  ret void, !dbg !1473
}

; Function Attrs: nounwind
declare dso_local i8* @ttyname(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_user(%struct.utmpx*, i64) #4 !dbg !64 {
  %3 = load i32, i32* @x.13
  %4 = load i32, i32* @y.14
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %struct.utmpx*, align 8
  %12 = alloca i64, align 8
  %13 = alloca %struct.stat, align 8
  %14 = alloca i64, align 8
  %15 = alloca i8, align 1
  %16 = alloca [7 x i8], align 1
  %17 = alloca [38 x i8], align 16
  %18 = alloca i8*, align 8
  %19 = alloca [12 x i8], align 1
  %20 = alloca [257 x i8], align 16
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %11, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %11, metadata !1474, metadata !DIExpression()), !dbg !1475
  store i64 %1, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !1476, metadata !DIExpression()), !dbg !1477
  call void @llvm.dbg.declare(metadata %struct.stat* %13, metadata !1478, metadata !DIExpression()), !dbg !1513
  call void @llvm.dbg.declare(metadata i64* %14, metadata !1514, metadata !DIExpression()), !dbg !1515
  call void @llvm.dbg.declare(metadata i8* %15, metadata !1516, metadata !DIExpression()), !dbg !1517
  call void @llvm.dbg.declare(metadata [7 x i8]* %16, metadata !1518, metadata !DIExpression()), !dbg !1520
  call void @llvm.dbg.declare(metadata [38 x i8]* %17, metadata !1521, metadata !DIExpression()), !dbg !1525
  call void @llvm.dbg.declare(metadata i8** %18, metadata !1526, metadata !DIExpression()), !dbg !1527
  %23 = getelementptr inbounds [38 x i8], [38 x i8]* %17, i64 0, i64 0, !dbg !1528
  store i8* %23, i8** %18, align 8, !dbg !1527
  call void @llvm.dbg.declare(metadata [12 x i8]* %19, metadata !1529, metadata !DIExpression()), !dbg !1533
  %24 = getelementptr inbounds [12 x i8], [12 x i8]* %19, i64 0, i64 0, !dbg !1533
  %25 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1533
  %26 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %25, i32 0, i32 1, !dbg !1533
  %27 = load i32, i32* %26, align 4, !dbg !1533
  %28 = sext i32 %27 to i64, !dbg !1533
  %29 = call i32 (i8*, i8*, ...) @sprintf(i8* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %28) #10, !dbg !1533
  %30 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1534
  %31 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %30, i32 0, i32 2, !dbg !1534
  %32 = getelementptr inbounds [32 x i8], [32 x i8]* %31, i64 0, i64 0, !dbg !1534
  %33 = load i8, i8* %32, align 4, !dbg !1534
  %34 = sext i8 %33 to i32, !dbg !1534
  %35 = icmp eq i32 %34, 47, !dbg !1534
  %36 = load i32, i32* @x.13
  %37 = load i32, i32* @y.14
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %35, label %63, label %44, !dbg !1536

44:                                               ; preds = %originalBBpart2
  %45 = load i32, i32* @x.13
  %46 = load i32, i32* @y.14
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %44, %originalBB1alteredBB
  %53 = load i8*, i8** %18, align 8, !dbg !1537
  %54 = call i8* @stpcpy(i8* %53, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0)) #10, !dbg !1538
  store i8* %54, i8** %18, align 8, !dbg !1539
  %55 = load i32, i32* @x.13
  %56 = load i32, i32* @y.14
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %63, !dbg !1540

63:                                               ; preds = %originalBBpart24, %originalBBpart2
  %64 = load i32, i32* @x.13
  %65 = load i32, i32* @y.14
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %63, %originalBB6alteredBB
  %72 = load i8*, i8** %18, align 8, !dbg !1541
  %73 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1542
  %74 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %73, i32 0, i32 2, !dbg !1543
  %75 = getelementptr inbounds [32 x i8], [32 x i8]* %74, i64 0, i64 0, !dbg !1542
  %76 = call i8* @stzncpy(i8* %72, i8* %75, i64 32), !dbg !1544
  %77 = getelementptr inbounds [38 x i8], [38 x i8]* %17, i64 0, i64 0, !dbg !1545
  %78 = call i32 @stat(i8* %77, %struct.stat* %13) #10, !dbg !1547
  %79 = icmp eq i32 %78, 0, !dbg !1548
  %80 = load i32, i32* @x.13
  %81 = load i32, i32* @y.14
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %79, label %88, label %112, !dbg !1549

88:                                               ; preds = %originalBBpart28
  %89 = load i32, i32* @x.13
  %90 = load i32, i32* @y.14
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %88, %originalBB10alteredBB
  %97 = call zeroext i1 @is_tty_writable(%struct.stat* %13), !dbg !1550
  %98 = zext i1 %97 to i64, !dbg !1550
  %99 = select i1 %97, i32 43, i32 45, !dbg !1550
  %100 = trunc i32 %99 to i8, !dbg !1550
  store i8 %100, i8* %15, align 1, !dbg !1552
  %101 = getelementptr inbounds %struct.stat, %struct.stat* %13, i32 0, i32 11, !dbg !1553
  %102 = getelementptr inbounds %struct.timespec, %struct.timespec* %101, i32 0, i32 0, !dbg !1553
  %103 = load i64, i64* %102, align 8, !dbg !1553
  store i64 %103, i64* %14, align 8, !dbg !1554
  %104 = load i32, i32* @x.13
  %105 = load i32, i32* @y.14
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %113, !dbg !1555

112:                                              ; preds = %originalBBpart28
  store i8 63, i8* %15, align 1, !dbg !1556
  store i64 0, i64* %14, align 8, !dbg !1558
  br label %113

113:                                              ; preds = %112, %originalBBpart212
  %114 = load i32, i32* @x.13
  %115 = load i32, i32* @y.14
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %113, %originalBB14alteredBB
  %122 = load i64, i64* %14, align 8, !dbg !1559
  %123 = icmp ne i64 %122, 0, !dbg !1559
  %124 = load i32, i32* @x.13
  %125 = load i32, i32* @y.14
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %123, label %132, label %138, !dbg !1561

132:                                              ; preds = %originalBBpart216
  %133 = getelementptr inbounds [7 x i8], [7 x i8]* %16, i64 0, i64 0, !dbg !1562
  %134 = load i64, i64* %14, align 8, !dbg !1563
  %135 = load i64, i64* %12, align 8, !dbg !1564
  %136 = call i8* @idle_string(i64 %134, i64 %135), !dbg !1565
  %137 = call i32 (i8*, i8*, ...) @sprintf(i8* %133, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i64 0, i64 0), i32 6, i8* %136) #10, !dbg !1566
  br label %141, !dbg !1566

138:                                              ; preds = %originalBBpart216
  %139 = getelementptr inbounds [7 x i8], [7 x i8]* %16, i64 0, i64 0, !dbg !1567
  %140 = call i32 (i8*, i8*, ...) @sprintf(i8* %139, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i64 0, i64 0)) #10, !dbg !1568
  br label %141

141:                                              ; preds = %138, %132
  %142 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1569
  %143 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %142, i32 0, i32 5, !dbg !1571
  %144 = getelementptr inbounds [256 x i8], [256 x i8]* %143, i64 0, i64 0, !dbg !1569
  %145 = load i8, i8* %144, align 4, !dbg !1569
  %146 = icmp ne i8 %145, 0, !dbg !1569
  br i1 %146, label %147, label %355, !dbg !1572

147:                                              ; preds = %141
  call void @llvm.dbg.declare(metadata [257 x i8]* %20, metadata !1573, metadata !DIExpression()), !dbg !1578
  call void @llvm.dbg.declare(metadata i8** %21, metadata !1579, metadata !DIExpression()), !dbg !1580
  store i8* null, i8** %21, align 8, !dbg !1580
  call void @llvm.dbg.declare(metadata i8** %22, metadata !1581, metadata !DIExpression()), !dbg !1582
  store i8* null, i8** %22, align 8, !dbg !1582
  %148 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1583
  %149 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1584
  %150 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %149, i32 0, i32 5, !dbg !1585
  %151 = getelementptr inbounds [256 x i8], [256 x i8]* %150, i64 0, i64 0, !dbg !1584
  %152 = call i8* @stzncpy(i8* %148, i8* %151, i64 256), !dbg !1586
  %153 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1587
  %154 = call i8* @strchr(i8* %153, i32 58) #13, !dbg !1588
  store i8* %154, i8** %22, align 8, !dbg !1589
  %155 = load i8*, i8** %22, align 8, !dbg !1590
  %156 = icmp ne i8* %155, null, !dbg !1590
  br i1 %156, label %157, label %176, !dbg !1592

157:                                              ; preds = %147
  %158 = load i32, i32* @x.13
  %159 = load i32, i32* @y.14
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %157, %originalBB18alteredBB
  %166 = load i8*, i8** %22, align 8, !dbg !1593
  %167 = getelementptr inbounds i8, i8* %166, i32 1, !dbg !1593
  store i8* %167, i8** %22, align 8, !dbg !1593
  store i8 0, i8* %166, align 1, !dbg !1594
  %168 = load i32, i32* @x.13
  %169 = load i32, i32* @y.14
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %176, !dbg !1595

176:                                              ; preds = %originalBBpart220, %147
  %177 = load i32, i32* @x.13
  %178 = load i32, i32* @y.14
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %176, %originalBB22alteredBB
  %185 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1596
  %186 = load i8, i8* %185, align 16, !dbg !1596
  %187 = sext i8 %186 to i32, !dbg !1596
  %188 = icmp ne i32 %187, 0, !dbg !1596
  %189 = load i32, i32* @x.13
  %190 = load i32, i32* @y.14
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %188, label %197, label %203, !dbg !1598

197:                                              ; preds = %originalBBpart224
  %198 = load i8, i8* @do_lookup, align 1, !dbg !1599
  %199 = trunc i8 %198 to i1, !dbg !1599
  br i1 %199, label %200, label %203, !dbg !1600

200:                                              ; preds = %197
  %201 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1601
  %202 = call noalias i8* @canon_host(i8* %201), !dbg !1603
  store i8* %202, i8** %21, align 8, !dbg !1604
  br label %203, !dbg !1605

203:                                              ; preds = %200, %197, %originalBBpart224
  %204 = load i32, i32* @x.13
  %205 = load i32, i32* @y.14
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %203, %originalBB26alteredBB
  %212 = load i8*, i8** %21, align 8, !dbg !1606
  %213 = icmp ne i8* %212, null, !dbg !1606
  %214 = load i32, i32* @x.13
  %215 = load i32, i32* @y.14
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %213, label %224, label %222, !dbg !1608

222:                                              ; preds = %originalBBpart228
  %223 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1609
  store i8* %223, i8** %21, align 8, !dbg !1610
  br label %224, !dbg !1611

224:                                              ; preds = %222, %originalBBpart228
  %225 = load i8*, i8** %22, align 8, !dbg !1612
  %226 = icmp ne i8* %225, null, !dbg !1612
  br i1 %226, label %227, label %283, !dbg !1614

227:                                              ; preds = %224
  %228 = load i64, i64* @print_user.hostlen, align 8, !dbg !1615
  %229 = load i8*, i8** %21, align 8, !dbg !1618
  %230 = call i64 @strlen(i8* %229) #13, !dbg !1619
  %231 = load i8*, i8** %22, align 8, !dbg !1620
  %232 = call i64 @strlen(i8* %231) #13, !dbg !1621
  %233 = add i64 %230, %232, !dbg !1622
  %234 = add i64 %233, 4, !dbg !1623
  %235 = icmp ult i64 %228, %234, !dbg !1624
  br i1 %235, label %236, label %262, !dbg !1625

236:                                              ; preds = %227
  %237 = load i32, i32* @x.13
  %238 = load i32, i32* @y.14
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %236, %originalBB30alteredBB
  %245 = load i8*, i8** %21, align 8, !dbg !1626
  %246 = call i64 @strlen(i8* %245) #13, !dbg !1628
  %247 = load i8*, i8** %22, align 8, !dbg !1629
  %248 = call i64 @strlen(i8* %247) #13, !dbg !1630
  %249 = add i64 %246, %248, !dbg !1631
  %250 = add i64 %249, 4, !dbg !1632
  store i64 %250, i64* @print_user.hostlen, align 8, !dbg !1633
  %251 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1634
  call void @free(i8* %251) #10, !dbg !1635
  %252 = load i64, i64* @print_user.hostlen, align 8, !dbg !1636
  %253 = call noalias i8* @xmalloc(i64 %252), !dbg !1637
  store i8* %253, i8** @print_user.hoststr, align 8, !dbg !1638
  %254 = load i32, i32* @x.13
  %255 = load i32, i32* @y.14
  %256 = sub i32 %254, 1
  %257 = mul i32 %254, %256
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %259, %260
  br i1 %261, label %originalBBpart245, label %originalBB30alteredBB

originalBBpart245:                                ; preds = %originalBB30
  br label %262, !dbg !1639

262:                                              ; preds = %originalBBpart245, %227
  %263 = load i32, i32* @x.13
  %264 = load i32, i32* @y.14
  %265 = sub i32 %263, 1
  %266 = mul i32 %263, %265
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %268, %269
  br i1 %270, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %262, %originalBB47alteredBB
  %271 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1640
  %272 = load i8*, i8** %21, align 8, !dbg !1641
  %273 = load i8*, i8** %22, align 8, !dbg !1642
  %274 = call i32 (i8*, i8*, ...) @sprintf(i8* %271, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i64 0, i64 0), i8* %272, i8* %273) #10, !dbg !1643
  %275 = load i32, i32* @x.13
  %276 = load i32, i32* @y.14
  %277 = sub i32 %275, 1
  %278 = mul i32 %275, %277
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %280, %281
  br i1 %282, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br label %316, !dbg !1644

283:                                              ; preds = %224
  %284 = load i64, i64* @print_user.hostlen, align 8, !dbg !1645
  %285 = load i8*, i8** %21, align 8, !dbg !1648
  %286 = call i64 @strlen(i8* %285) #13, !dbg !1649
  %287 = add i64 %286, 3, !dbg !1650
  %288 = icmp ult i64 %284, %287, !dbg !1651
  br i1 %288, label %289, label %312, !dbg !1652

289:                                              ; preds = %283
  %290 = load i32, i32* @x.13
  %291 = load i32, i32* @y.14
  %292 = sub i32 %290, 1
  %293 = mul i32 %290, %292
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %295, %296
  br i1 %297, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %289, %originalBB51alteredBB
  %298 = load i8*, i8** %21, align 8, !dbg !1653
  %299 = call i64 @strlen(i8* %298) #13, !dbg !1655
  %300 = add i64 %299, 3, !dbg !1656
  store i64 %300, i64* @print_user.hostlen, align 8, !dbg !1657
  %301 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1658
  call void @free(i8* %301) #10, !dbg !1659
  %302 = load i64, i64* @print_user.hostlen, align 8, !dbg !1660
  %303 = call noalias i8* @xmalloc(i64 %302), !dbg !1661
  store i8* %303, i8** @print_user.hoststr, align 8, !dbg !1662
  %304 = load i32, i32* @x.13
  %305 = load i32, i32* @y.14
  %306 = sub i32 %304, 1
  %307 = mul i32 %304, %306
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %309, %310
  br i1 %311, label %originalBBpart265, label %originalBB51alteredBB

originalBBpart265:                                ; preds = %originalBB51
  br label %312, !dbg !1663

312:                                              ; preds = %originalBBpart265, %283
  %313 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1664
  %314 = load i8*, i8** %21, align 8, !dbg !1665
  %315 = call i32 (i8*, i8*, ...) @sprintf(i8* %313, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i64 0, i64 0), i8* %314) #10, !dbg !1666
  br label %316

316:                                              ; preds = %312, %originalBBpart249
  %317 = load i32, i32* @x.13
  %318 = load i32, i32* @y.14
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %316, %originalBB67alteredBB
  %325 = load i8*, i8** %21, align 8, !dbg !1667
  %326 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1669
  %327 = icmp ne i8* %325, %326, !dbg !1670
  %328 = load i32, i32* @x.13
  %329 = load i32, i32* @y.14
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  br i1 %327, label %336, label %338, !dbg !1671

336:                                              ; preds = %originalBBpart269
  %337 = load i8*, i8** %21, align 8, !dbg !1672
  call void @free(i8* %337) #10, !dbg !1673
  br label %338, !dbg !1673

338:                                              ; preds = %336, %originalBBpart269
  %339 = load i32, i32* @x.13
  %340 = load i32, i32* @y.14
  %341 = sub i32 %339, 1
  %342 = mul i32 %339, %341
  %343 = urem i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %344, %345
  br i1 %346, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %338, %originalBB71alteredBB
  %347 = load i32, i32* @x.13
  %348 = load i32, i32* @y.14
  %349 = sub i32 %347, 1
  %350 = mul i32 %347, %349
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %352, %353
  br i1 %354, label %originalBBpart273, label %originalBB71alteredBB

originalBBpart273:                                ; preds = %originalBB71
  br label %396, !dbg !1674

355:                                              ; preds = %141
  %356 = load i32, i32* @x.13
  %357 = load i32, i32* @y.14
  %358 = sub i32 %356, 1
  %359 = mul i32 %356, %358
  %360 = urem i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %361, %362
  br i1 %363, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %355, %originalBB75alteredBB
  %364 = load i64, i64* @print_user.hostlen, align 8, !dbg !1675
  %365 = icmp ult i64 %364, 1, !dbg !1678
  %366 = load i32, i32* @x.13
  %367 = load i32, i32* @y.14
  %368 = sub i32 %366, 1
  %369 = mul i32 %366, %368
  %370 = urem i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %371, %372
  br i1 %373, label %originalBBpart277, label %originalBB75alteredBB

originalBBpart277:                                ; preds = %originalBB75
  br i1 %365, label %374, label %394, !dbg !1679

374:                                              ; preds = %originalBBpart277
  %375 = load i32, i32* @x.13
  %376 = load i32, i32* @y.14
  %377 = sub i32 %375, 1
  %378 = mul i32 %375, %377
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %380, %381
  br i1 %382, label %originalBB79, label %originalBB79alteredBB

originalBB79:                                     ; preds = %374, %originalBB79alteredBB
  store i64 1, i64* @print_user.hostlen, align 8, !dbg !1680
  %383 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1682
  call void @free(i8* %383) #10, !dbg !1683
  %384 = load i64, i64* @print_user.hostlen, align 8, !dbg !1684
  %385 = call noalias i8* @xmalloc(i64 %384), !dbg !1685
  store i8* %385, i8** @print_user.hoststr, align 8, !dbg !1686
  %386 = load i32, i32* @x.13
  %387 = load i32, i32* @y.14
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBBpart281, label %originalBB79alteredBB

originalBBpart281:                                ; preds = %originalBB79
  br label %394, !dbg !1687

394:                                              ; preds = %originalBBpart281, %originalBBpart277
  %395 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1688
  store i8 0, i8* %395, align 1, !dbg !1689
  br label %396

396:                                              ; preds = %394, %originalBBpart273
  %397 = load i32, i32* @x.13
  %398 = load i32, i32* @y.14
  %399 = sub i32 %397, 1
  %400 = mul i32 %397, %399
  %401 = urem i32 %400, 2
  %402 = icmp eq i32 %401, 0
  %403 = icmp slt i32 %398, 10
  %404 = or i1 %402, %403
  br i1 %404, label %originalBB83, label %originalBB83alteredBB

originalBB83:                                     ; preds = %396, %originalBB83alteredBB
  %405 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1690
  %406 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %405, i32 0, i32 4, !dbg !1690
  %407 = getelementptr inbounds [32 x i8], [32 x i8]* %406, i64 0, i64 0, !dbg !1690
  %408 = load i8, i8* %15, align 1, !dbg !1691
  %409 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1692
  %410 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %409, i32 0, i32 2, !dbg !1693
  %411 = getelementptr inbounds [32 x i8], [32 x i8]* %410, i64 0, i64 0, !dbg !1692
  %412 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1694
  %413 = call i8* @time_string(%struct.utmpx* %412), !dbg !1695
  %414 = getelementptr inbounds [7 x i8], [7 x i8]* %16, i64 0, i64 0, !dbg !1696
  %415 = getelementptr inbounds [12 x i8], [12 x i8]* %19, i64 0, i64 0, !dbg !1697
  %416 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1698
  %417 = icmp ne i8* %416, null, !dbg !1698
  %418 = load i32, i32* @x.13
  %419 = load i32, i32* @y.14
  %420 = sub i32 %418, 1
  %421 = mul i32 %418, %420
  %422 = urem i32 %421, 2
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %419, 10
  %425 = or i1 %423, %424
  br i1 %425, label %originalBBpart285, label %originalBB83alteredBB

originalBBpart285:                                ; preds = %originalBB83
  br i1 %417, label %426, label %444, !dbg !1698

426:                                              ; preds = %originalBBpart285
  %427 = load i32, i32* @x.13
  %428 = load i32, i32* @y.14
  %429 = sub i32 %427, 1
  %430 = mul i32 %427, %429
  %431 = urem i32 %430, 2
  %432 = icmp eq i32 %431, 0
  %433 = icmp slt i32 %428, 10
  %434 = or i1 %432, %433
  br i1 %434, label %originalBB87, label %originalBB87alteredBB

originalBB87:                                     ; preds = %426, %originalBB87alteredBB
  %435 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1699
  %436 = load i32, i32* @x.13
  %437 = load i32, i32* @y.14
  %438 = sub i32 %436, 1
  %439 = mul i32 %436, %438
  %440 = urem i32 %439, 2
  %441 = icmp eq i32 %440, 0
  %442 = icmp slt i32 %437, 10
  %443 = or i1 %441, %442
  br i1 %443, label %originalBBpart289, label %originalBB87alteredBB

originalBBpart289:                                ; preds = %originalBB87
  br label %445, !dbg !1698

444:                                              ; preds = %originalBBpart285
  br label %445, !dbg !1698

445:                                              ; preds = %444, %originalBBpart289
  %446 = phi i8* [ %435, %originalBBpart289 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), %444 ], !dbg !1698
  %447 = load i32, i32* @x.13
  %448 = load i32, i32* @y.14
  %449 = sub i32 %447, 1
  %450 = mul i32 %447, %449
  %451 = urem i32 %450, 2
  %452 = icmp eq i32 %451, 0
  %453 = icmp slt i32 %448, 10
  %454 = or i1 %452, %453
  br i1 %454, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %445, %originalBB91alteredBB
  call void @print_line(i32 32, i8* %407, i8 signext %408, i32 32, i8* %411, i8* %413, i8* %414, i8* %415, i8* %446, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1700
  %455 = load i32, i32* @x.13
  %456 = load i32, i32* @y.14
  %457 = sub i32 %455, 1
  %458 = mul i32 %455, %457
  %459 = urem i32 %458, 2
  %460 = icmp eq i32 %459, 0
  %461 = icmp slt i32 %456, 10
  %462 = or i1 %460, %461
  br i1 %462, label %originalBBpart293, label %originalBB91alteredBB

originalBBpart293:                                ; preds = %originalBB91
  ret void, !dbg !1701

originalBBalteredBB:                              ; preds = %originalBB, %2
  %463 = alloca %struct.utmpx*, align 8
  %464 = alloca i64, align 8
  %465 = alloca %struct.stat, align 8
  %466 = alloca i64, align 8
  %467 = alloca i8, align 1
  %468 = alloca [7 x i8], align 1
  %469 = alloca [38 x i8], align 16
  %470 = alloca i8*, align 8
  %471 = alloca [12 x i8], align 1
  %472 = alloca [257 x i8], align 16
  %473 = alloca i8*, align 8
  %474 = alloca i8*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %463, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %463, metadata !1702, metadata !DIExpression()), !dbg !1475
  store i64 %1, i64* %464, align 8
  call void @llvm.dbg.declare(metadata i64* %464, metadata !1803, metadata !DIExpression()), !dbg !1477
  call void @llvm.dbg.declare(metadata %struct.stat* %465, metadata !1804, metadata !DIExpression()), !dbg !1513
  call void @llvm.dbg.declare(metadata i64* %466, metadata !1826, metadata !DIExpression()), !dbg !1515
  call void @llvm.dbg.declare(metadata i8* %467, metadata !1827, metadata !DIExpression()), !dbg !1517
  call void @llvm.dbg.declare(metadata [7 x i8]* %468, metadata !1828, metadata !DIExpression()), !dbg !1520
  call void @llvm.dbg.declare(metadata [38 x i8]* %469, metadata !1829, metadata !DIExpression()), !dbg !1525
  call void @llvm.dbg.declare(metadata i8** %470, metadata !1830, metadata !DIExpression()), !dbg !1527
  %475 = getelementptr inbounds [38 x i8], [38 x i8]* %469, i64 0, i64 0, !dbg !1528
  store i8* %475, i8** %470, align 8, !dbg !1527
  call void @llvm.dbg.declare(metadata [12 x i8]* %471, metadata !1831, metadata !DIExpression()), !dbg !1533
  %476 = getelementptr inbounds [12 x i8], [12 x i8]* %471, i64 0, i64 0, !dbg !1533
  %477 = load %struct.utmpx*, %struct.utmpx** %463, align 8, !dbg !1533
  %478 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %477, i32 0, i32 1, !dbg !1533
  %479 = load i32, i32* %478, align 4, !dbg !1533
  %480 = sext i32 %479 to i64, !dbg !1533
  %481 = call i32 (i8*, i8*, ...) @sprintf(i8* %476, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %480) #10, !dbg !1533
  %482 = load %struct.utmpx*, %struct.utmpx** %463, align 8, !dbg !1534
  %483 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %482, i32 0, i32 2, !dbg !1534
  %484 = getelementptr inbounds [32 x i8], [32 x i8]* %483, i64 0, i64 0, !dbg !1534
  %485 = load i8, i8* %484, align 4, !dbg !1534
  %486 = sext i8 %485 to i32, !dbg !1534
  %487 = icmp eq i32 %486, 47, !dbg !1534
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %44
  %488 = load i8*, i8** %18, align 8, !dbg !1537
  %489 = call i8* @stpcpy(i8* %488, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0)) #10, !dbg !1538
  store i8* %489, i8** %18, align 8, !dbg !1539
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %63
  %490 = load i8*, i8** %18, align 8, !dbg !1541
  %491 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1542
  %492 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %491, i32 0, i32 2, !dbg !1543
  %493 = getelementptr inbounds [32 x i8], [32 x i8]* %492, i64 0, i64 0, !dbg !1542
  %494 = call i8* @stzncpy(i8* %490, i8* %493, i64 32), !dbg !1544
  %495 = getelementptr inbounds [38 x i8], [38 x i8]* %17, i64 0, i64 0, !dbg !1545
  %496 = call i32 @stat(i8* %495, %struct.stat* %13) #10, !dbg !1547
  %497 = icmp eq i32 %496, 0, !dbg !1548
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %88
  %498 = call zeroext i1 @is_tty_writable(%struct.stat* %13), !dbg !1550
  %499 = zext i1 %498 to i64, !dbg !1550
  %500 = select i1 %498, i32 43, i32 45, !dbg !1550
  %501 = trunc i32 %500 to i8, !dbg !1550
  store i8 %501, i8* %15, align 1, !dbg !1552
  %502 = getelementptr inbounds %struct.stat, %struct.stat* %13, i32 0, i32 11, !dbg !1553
  %503 = getelementptr inbounds %struct.timespec, %struct.timespec* %502, i32 0, i32 0, !dbg !1553
  %504 = load i64, i64* %503, align 8, !dbg !1553
  store i64 %504, i64* %14, align 8, !dbg !1554
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %113
  %505 = load i64, i64* %14, align 8, !dbg !1559
  %506 = icmp ne i64 %505, 0, !dbg !1559
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %157
  %507 = load i8*, i8** %22, align 8, !dbg !1593
  %508 = getelementptr inbounds i8, i8* %507, i32 1, !dbg !1593
  store i8* %508, i8** %22, align 8, !dbg !1593
  store i8 0, i8* %507, align 1, !dbg !1594
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %176
  %509 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1596
  %510 = load i8, i8* %509, align 16, !dbg !1596
  %511 = sext i8 %510 to i32, !dbg !1596
  %512 = icmp ne i32 %511, 0, !dbg !1596
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %203
  %513 = load i8*, i8** %21, align 8, !dbg !1606
  %514 = icmp ne i8* %513, null, !dbg !1606
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %236
  %515 = load i8*, i8** %21, align 8, !dbg !1626
  %516 = call i64 @strlen(i8* %515) #13, !dbg !1628
  %517 = load i8*, i8** %22, align 8, !dbg !1629
  %518 = call i64 @strlen(i8* %517) #13, !dbg !1630
  %_ = sub i64 %516, %518
  %gen = mul i64 %_, %518
  %_31 = sub i64 %516, %518
  %gen32 = mul i64 %_31, %518
  %519 = add i64 %516, %518, !dbg !1631
  %_33 = sub i64 0, %519
  %gen34 = add i64 %_33, 4
  %_35 = shl i64 %519, 4
  %_36 = shl i64 %519, 4
  %_37 = sub i64 %519, 4
  %gen38 = mul i64 %_37, 4
  %_39 = sub i64 0, %519
  %gen40 = add i64 %_39, 4
  %_41 = shl i64 %519, 4
  %_42 = sub i64 %519, 4
  %gen43 = mul i64 %_42, 4
  %520 = add i64 %519, 4, !dbg !1632
  store i64 %520, i64* @print_user.hostlen, align 8, !dbg !1633
  %521 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1634
  call void @free(i8* %521) #10, !dbg !1635
  %522 = load i64, i64* @print_user.hostlen, align 8, !dbg !1636
  %523 = call noalias i8* @xmalloc(i64 %522), !dbg !1637
  store i8* %523, i8** @print_user.hoststr, align 8, !dbg !1638
  br label %originalBB30

originalBB47alteredBB:                            ; preds = %originalBB47, %262
  %524 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1640
  %525 = load i8*, i8** %21, align 8, !dbg !1641
  %526 = load i8*, i8** %22, align 8, !dbg !1642
  %527 = call i32 (i8*, i8*, ...) @sprintf(i8* %524, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i64 0, i64 0), i8* %525, i8* %526) #10, !dbg !1643
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %289
  %528 = load i8*, i8** %21, align 8, !dbg !1653
  %529 = call i64 @strlen(i8* %528) #13, !dbg !1655
  %_52 = sub i64 %529, 3
  %gen53 = mul i64 %_52, 3
  %_54 = sub i64 %529, 3
  %gen55 = mul i64 %_54, 3
  %_56 = sub i64 0, %529
  %gen57 = add i64 %_56, 3
  %_58 = shl i64 %529, 3
  %_59 = sub i64 %529, 3
  %gen60 = mul i64 %_59, 3
  %_61 = shl i64 %529, 3
  %_62 = sub i64 %529, 3
  %gen63 = mul i64 %_62, 3
  %530 = add i64 %529, 3, !dbg !1656
  store i64 %530, i64* @print_user.hostlen, align 8, !dbg !1657
  %531 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1658
  call void @free(i8* %531) #10, !dbg !1659
  %532 = load i64, i64* @print_user.hostlen, align 8, !dbg !1660
  %533 = call noalias i8* @xmalloc(i64 %532), !dbg !1661
  store i8* %533, i8** @print_user.hoststr, align 8, !dbg !1662
  br label %originalBB51

originalBB67alteredBB:                            ; preds = %originalBB67, %316
  %534 = load i8*, i8** %21, align 8, !dbg !1667
  %535 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1669
  %536 = icmp ne i8* %534, %535, !dbg !1670
  br label %originalBB67

originalBB71alteredBB:                            ; preds = %originalBB71, %338
  br label %originalBB71

originalBB75alteredBB:                            ; preds = %originalBB75, %355
  %537 = load i64, i64* @print_user.hostlen, align 8, !dbg !1675
  %538 = icmp ult i64 %537, 1, !dbg !1678
  br label %originalBB75

originalBB79alteredBB:                            ; preds = %originalBB79, %374
  store i64 1, i64* @print_user.hostlen, align 8, !dbg !1680
  %539 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1682
  call void @free(i8* %539) #10, !dbg !1683
  %540 = load i64, i64* @print_user.hostlen, align 8, !dbg !1684
  %541 = call noalias i8* @xmalloc(i64 %540), !dbg !1685
  store i8* %541, i8** @print_user.hoststr, align 8, !dbg !1686
  br label %originalBB79

originalBB83alteredBB:                            ; preds = %originalBB83, %396
  %542 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1690
  %543 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %542, i32 0, i32 4, !dbg !1690
  %544 = getelementptr inbounds [32 x i8], [32 x i8]* %543, i64 0, i64 0, !dbg !1690
  %545 = load i8, i8* %15, align 1, !dbg !1691
  %546 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1692
  %547 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %546, i32 0, i32 2, !dbg !1693
  %548 = getelementptr inbounds [32 x i8], [32 x i8]* %547, i64 0, i64 0, !dbg !1692
  %549 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1694
  %550 = call i8* @time_string(%struct.utmpx* %549), !dbg !1695
  %551 = getelementptr inbounds [7 x i8], [7 x i8]* %16, i64 0, i64 0, !dbg !1696
  %552 = getelementptr inbounds [12 x i8], [12 x i8]* %19, i64 0, i64 0, !dbg !1697
  %553 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1698
  %554 = icmp ne i8* %553, null, !dbg !1698
  br label %originalBB83

originalBB87alteredBB:                            ; preds = %originalBB87, %426
  %555 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1699
  br label %originalBB87

originalBB91alteredBB:                            ; preds = %originalBB91, %445
  call void @print_line(i32 32, i8* %407, i8 signext %408, i32 32, i8* %411, i8* %413, i8* %414, i8* %415, i8* %446, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1700
  br label %originalBB91
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_runlevel(%struct.utmpx*) #4 !dbg !133 {
  %2 = load i32, i32* @x.15
  %3 = load i32, i32* @y.16
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !1832, metadata !DIExpression()), !dbg !1833
  call void @llvm.dbg.declare(metadata i8* %11, metadata !1834, metadata !DIExpression()), !dbg !1835
  %13 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1836
  %14 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %13, i32 0, i32 1, !dbg !1836
  %15 = load i32, i32* %14, align 4, !dbg !1836
  %16 = sdiv i32 %15, 256, !dbg !1837
  %17 = trunc i32 %16 to i8, !dbg !1836
  store i8 %17, i8* %11, align 1, !dbg !1835
  call void @llvm.dbg.declare(metadata i8* %12, metadata !1838, metadata !DIExpression()), !dbg !1839
  %18 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1840
  %19 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %18, i32 0, i32 1, !dbg !1840
  %20 = load i32, i32* %19, align 4, !dbg !1840
  %21 = srem i32 %20, 256, !dbg !1841
  %22 = trunc i32 %21 to i8, !dbg !1840
  store i8 %22, i8* %12, align 1, !dbg !1839
  %23 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1842
  %24 = icmp ne i8* %23, null, !dbg !1842
  %25 = load i32, i32* @x.15
  %26 = load i32, i32* @y.16
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %24, label %54, label %33, !dbg !1844

33:                                               ; preds = %originalBBpart2
  %34 = load i32, i32* @x.15
  %35 = load i32, i32* @y.16
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB9, label %originalBB9alteredBB

originalBB9:                                      ; preds = %33, %originalBB9alteredBB
  %42 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i64 0, i64 0)) #10, !dbg !1845
  %43 = call i64 @strlen(i8* %42) #13, !dbg !1846
  %44 = add i64 %43, 3, !dbg !1847
  %45 = call noalias i8* @xmalloc(i64 %44), !dbg !1848
  store i8* %45, i8** @print_runlevel.runlevline, align 8, !dbg !1849
  %46 = load i32, i32* @x.15
  %47 = load i32, i32* @y.16
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart215, label %originalBB9alteredBB

originalBBpart215:                                ; preds = %originalBB9
  br label %54, !dbg !1850

54:                                               ; preds = %originalBBpart215, %originalBBpart2
  %55 = load i32, i32* @x.15
  %56 = load i32, i32* @y.16
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %54, %originalBB17alteredBB
  %63 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1851
  %64 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i64 0, i64 0)) #10, !dbg !1852
  %65 = load i8, i8* %12, align 1, !dbg !1853
  %66 = zext i8 %65 to i32, !dbg !1853
  %67 = call i32 (i8*, i8*, ...) @sprintf(i8* %63, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i64 0, i64 0), i8* %64, i32 %66) #10, !dbg !1854
  %68 = load i8*, i8** @print_runlevel.comment, align 8, !dbg !1855
  %69 = icmp ne i8* %68, null, !dbg !1855
  %70 = load i32, i32* @x.15
  %71 = load i32, i32* @y.16
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  br i1 %69, label %99, label %78, !dbg !1857

78:                                               ; preds = %originalBBpart219
  %79 = load i32, i32* @x.15
  %80 = load i32, i32* @y.16
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %78, %originalBB21alteredBB
  %87 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i64 0, i64 0)) #10, !dbg !1858
  %88 = call i64 @strlen(i8* %87) #13, !dbg !1859
  %89 = add i64 %88, 2, !dbg !1860
  %90 = call noalias i8* @xmalloc(i64 %89), !dbg !1861
  store i8* %90, i8** @print_runlevel.comment, align 8, !dbg !1862
  %91 = load i32, i32* @x.15
  %92 = load i32, i32* @y.16
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart229, label %originalBB21alteredBB

originalBBpart229:                                ; preds = %originalBB21
  br label %99, !dbg !1863

99:                                               ; preds = %originalBBpart229, %originalBBpart219
  %100 = load i32, i32* @x.15
  %101 = load i32, i32* @y.16
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %99, %originalBB31alteredBB
  %108 = load i8*, i8** @print_runlevel.comment, align 8, !dbg !1864
  %109 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i64 0, i64 0)) #10, !dbg !1865
  %110 = load i8, i8* %11, align 1, !dbg !1866
  %111 = zext i8 %110 to i32, !dbg !1866
  %112 = icmp eq i32 %111, 78, !dbg !1867
  %113 = load i32, i32* @x.15
  %114 = load i32, i32* @y.16
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br i1 %112, label %121, label %122, !dbg !1868

121:                                              ; preds = %originalBBpart233
  br label %141, !dbg !1868

122:                                              ; preds = %originalBBpart233
  %123 = load i32, i32* @x.15
  %124 = load i32, i32* @y.16
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %122, %originalBB35alteredBB
  %131 = load i8, i8* %11, align 1, !dbg !1869
  %132 = zext i8 %131 to i32, !dbg !1869
  %133 = load i32, i32* @x.15
  %134 = load i32, i32* @y.16
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  br label %141, !dbg !1868

141:                                              ; preds = %originalBBpart237, %121
  %142 = phi i32 [ 83, %121 ], [ %132, %originalBBpart237 ], !dbg !1868
  %143 = load i32, i32* @x.15
  %144 = load i32, i32* @y.16
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %141, %originalBB39alteredBB
  %151 = call i32 (i8*, i8*, ...) @sprintf(i8* %108, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i64 0, i64 0), i8* %109, i32 %142) #10, !dbg !1870
  %152 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1871
  %153 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1872
  %154 = call i8* @time_string(%struct.utmpx* %153), !dbg !1873
  %155 = load i8, i8* %11, align 1, !dbg !1874
  %156 = zext i8 %155 to i32, !dbg !1874
  %157 = call zeroext i1 @c_isprint(i32 %156), !dbg !1875
  %158 = load i32, i32* @x.15
  %159 = load i32, i32* @y.16
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  br i1 %157, label %166, label %168, !dbg !1875

166:                                              ; preds = %originalBBpart241
  %167 = load i8*, i8** @print_runlevel.comment, align 8, !dbg !1876
  br label %185, !dbg !1875

168:                                              ; preds = %originalBBpart241
  %169 = load i32, i32* @x.15
  %170 = load i32, i32* @y.16
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %168, %originalBB43alteredBB
  %177 = load i32, i32* @x.15
  %178 = load i32, i32* @y.16
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  br label %185, !dbg !1875

185:                                              ; preds = %originalBBpart245, %166
  %186 = phi i8* [ %167, %166 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), %originalBBpart245 ], !dbg !1875
  %187 = load i32, i32* @x.15
  %188 = load i32, i32* @y.16
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %185, %originalBB47alteredBB
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %152, i8* %154, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %186, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1877
  %195 = load i32, i32* @x.15
  %196 = load i32, i32* @y.16
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  ret void, !dbg !1878

originalBBalteredBB:                              ; preds = %originalBB, %1
  %203 = alloca %struct.utmpx*, align 8
  %204 = alloca i8, align 1
  %205 = alloca i8, align 1
  store %struct.utmpx* %0, %struct.utmpx** %203, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %203, metadata !1879, metadata !DIExpression()), !dbg !1833
  call void @llvm.dbg.declare(metadata i8* %204, metadata !1980, metadata !DIExpression()), !dbg !1835
  %206 = load %struct.utmpx*, %struct.utmpx** %203, align 8, !dbg !1836
  %207 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %206, i32 0, i32 1, !dbg !1836
  %208 = load i32, i32* %207, align 4, !dbg !1836
  %_ = sub i32 %208, 256
  %gen = mul i32 %_, 256
  %_1 = shl i32 %208, 256
  %_2 = shl i32 %208, 256
  %_3 = shl i32 %208, 256
  %_4 = sub i32 %208, 256
  %gen5 = mul i32 %_4, 256
  %209 = sdiv i32 %208, 256, !dbg !1837
  %210 = trunc i32 %209 to i8, !dbg !1836
  store i8 %210, i8* %204, align 1, !dbg !1835
  call void @llvm.dbg.declare(metadata i8* %205, metadata !1981, metadata !DIExpression()), !dbg !1839
  %211 = load %struct.utmpx*, %struct.utmpx** %203, align 8, !dbg !1840
  %212 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %211, i32 0, i32 1, !dbg !1840
  %213 = load i32, i32* %212, align 4, !dbg !1840
  %_6 = shl i32 %213, 256
  %_7 = sub i32 %213, 256
  %gen8 = mul i32 %_7, 256
  %214 = srem i32 %213, 256, !dbg !1841
  %215 = trunc i32 %214 to i8, !dbg !1840
  store i8 %215, i8* %205, align 1, !dbg !1839
  %216 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1842
  %217 = icmp ne i8* %216, null, !dbg !1842
  br label %originalBB

originalBB9alteredBB:                             ; preds = %originalBB9, %33
  %218 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i64 0, i64 0)) #10, !dbg !1845
  %219 = call i64 @strlen(i8* %218) #13, !dbg !1846
  %_10 = sub i64 0, %219
  %gen11 = add i64 %_10, 3
  %_12 = sub i64 %219, 3
  %gen13 = mul i64 %_12, 3
  %220 = add i64 %219, 3, !dbg !1847
  %221 = call noalias i8* @xmalloc(i64 %220), !dbg !1848
  store i8* %221, i8** @print_runlevel.runlevline, align 8, !dbg !1849
  br label %originalBB9

originalBB17alteredBB:                            ; preds = %originalBB17, %54
  %222 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1851
  %223 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i64 0, i64 0)) #10, !dbg !1852
  %224 = load i8, i8* %12, align 1, !dbg !1853
  %225 = zext i8 %224 to i32, !dbg !1853
  %226 = call i32 (i8*, i8*, ...) @sprintf(i8* %222, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i64 0, i64 0), i8* %223, i32 %225) #10, !dbg !1854
  %227 = load i8*, i8** @print_runlevel.comment, align 8, !dbg !1855
  %228 = icmp ne i8* %227, null, !dbg !1855
  br label %originalBB17

originalBB21alteredBB:                            ; preds = %originalBB21, %78
  %229 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i64 0, i64 0)) #10, !dbg !1858
  %230 = call i64 @strlen(i8* %229) #13, !dbg !1859
  %_22 = sub i64 %230, 2
  %gen23 = mul i64 %_22, 2
  %_24 = sub i64 0, %230
  %gen25 = add i64 %_24, 2
  %_26 = sub i64 0, %230
  %gen27 = add i64 %_26, 2
  %231 = add i64 %230, 2, !dbg !1860
  %232 = call noalias i8* @xmalloc(i64 %231), !dbg !1861
  store i8* %232, i8** @print_runlevel.comment, align 8, !dbg !1862
  br label %originalBB21

originalBB31alteredBB:                            ; preds = %originalBB31, %99
  %233 = load i8*, i8** @print_runlevel.comment, align 8, !dbg !1864
  %234 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i64 0, i64 0)) #10, !dbg !1865
  %235 = load i8, i8* %11, align 1, !dbg !1866
  %236 = zext i8 %235 to i32, !dbg !1866
  %237 = icmp eq i32 %236, 78, !dbg !1867
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %122
  %238 = load i8, i8* %11, align 1, !dbg !1869
  %239 = zext i8 %238 to i32, !dbg !1869
  br label %originalBB35

originalBB39alteredBB:                            ; preds = %originalBB39, %141
  %240 = call i32 (i8*, i8*, ...) @sprintf(i8* %108, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i64 0, i64 0), i8* %109, i32 %142) #10, !dbg !1870
  %241 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1871
  %242 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1872
  %243 = call i8* @time_string(%struct.utmpx* %242), !dbg !1873
  %244 = load i8, i8* %11, align 1, !dbg !1874
  %245 = zext i8 %244 to i32, !dbg !1874
  %246 = call zeroext i1 @c_isprint(i32 %245), !dbg !1875
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %168
  br label %originalBB43

originalBB47alteredBB:                            ; preds = %originalBB47, %185
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %152, i8* %154, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %186, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1877
  br label %originalBB47
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_boottime(%struct.utmpx*) #4 !dbg !1982 {
  %2 = load i32, i32* @x.17
  %3 = load i32, i32* @y.18
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !1983, metadata !DIExpression()), !dbg !1984
  %11 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.88, i64 0, i64 0)) #10, !dbg !1985
  %12 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1986
  %13 = call i8* @time_string(%struct.utmpx* %12), !dbg !1987
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %11, i8* %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1988
  %14 = load i32, i32* @x.17
  %15 = load i32, i32* @y.18
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !1989

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %struct.utmpx*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %22, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %22, metadata !1990, metadata !DIExpression()), !dbg !1984
  %23 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.88, i64 0, i64 0)) #10, !dbg !1985
  %24 = load %struct.utmpx*, %struct.utmpx** %22, align 8, !dbg !1986
  %25 = call i8* @time_string(%struct.utmpx* %24), !dbg !1987
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %23, i8* %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1988
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_clockchange(%struct.utmpx*) #4 !dbg !2092 {
  %2 = load i32, i32* @x.19
  %3 = load i32, i32* @y.20
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !2093, metadata !DIExpression()), !dbg !2094
  %11 = call i8* @gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.89, i64 0, i64 0)) #10, !dbg !2095
  %12 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2096
  %13 = call i8* @time_string(%struct.utmpx* %12), !dbg !2097
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %11, i8* %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !2098
  %14 = load i32, i32* @x.19
  %15 = load i32, i32* @y.20
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !2099

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %struct.utmpx*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %22, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %22, metadata !2100, metadata !DIExpression()), !dbg !2094
  %23 = call i8* @gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.89, i64 0, i64 0)) #10, !dbg !2095
  %24 = load %struct.utmpx*, %struct.utmpx** %22, align 8, !dbg !2096
  %25 = call i8* @time_string(%struct.utmpx* %24), !dbg !2097
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %23, i8* %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !2098
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_initspawn(%struct.utmpx*) #4 !dbg !2202 {
  %2 = load i32, i32* @x.21
  %3 = load i32, i32* @y.22
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca [12 x i8], align 1
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !2203, metadata !DIExpression()), !dbg !2204
  call void @llvm.dbg.declare(metadata i8** %11, metadata !2205, metadata !DIExpression()), !dbg !2206
  %13 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2207
  %14 = call i8* @make_id_equals_comment(%struct.utmpx* %13), !dbg !2208
  store i8* %14, i8** %11, align 8, !dbg !2206
  call void @llvm.dbg.declare(metadata [12 x i8]* %12, metadata !2209, metadata !DIExpression()), !dbg !2210
  %15 = getelementptr inbounds [12 x i8], [12 x i8]* %12, i64 0, i64 0, !dbg !2210
  %16 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2210
  %17 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %16, i32 0, i32 1, !dbg !2210
  %18 = load i32, i32* %17, align 4, !dbg !2210
  %19 = sext i32 %18 to i64, !dbg !2210
  %20 = call i32 (i8*, i8*, ...) @sprintf(i8* %15, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %19) #10, !dbg !2210
  %21 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2211
  %22 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %21, i32 0, i32 2, !dbg !2212
  %23 = getelementptr inbounds [32 x i8], [32 x i8]* %22, i64 0, i64 0, !dbg !2211
  %24 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2213
  %25 = call i8* @time_string(%struct.utmpx* %24), !dbg !2214
  %26 = getelementptr inbounds [12 x i8], [12 x i8]* %12, i64 0, i64 0, !dbg !2215
  %27 = load i8*, i8** %11, align 8, !dbg !2216
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 32, i8* %23, i8* %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %26, i8* %27, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !2217
  %28 = load i8*, i8** %11, align 8, !dbg !2218
  call void @free(i8* %28) #10, !dbg !2219
  %29 = load i32, i32* @x.21
  %30 = load i32, i32* @y.22
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !2220

originalBBalteredBB:                              ; preds = %originalBB, %1
  %37 = alloca %struct.utmpx*, align 8
  %38 = alloca i8*, align 8
  %39 = alloca [12 x i8], align 1
  store %struct.utmpx* %0, %struct.utmpx** %37, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %37, metadata !2221, metadata !DIExpression()), !dbg !2204
  call void @llvm.dbg.declare(metadata i8** %38, metadata !2323, metadata !DIExpression()), !dbg !2206
  %40 = load %struct.utmpx*, %struct.utmpx** %37, align 8, !dbg !2207
  %41 = call i8* @make_id_equals_comment(%struct.utmpx* %40), !dbg !2208
  store i8* %41, i8** %38, align 8, !dbg !2206
  call void @llvm.dbg.declare(metadata [12 x i8]* %39, metadata !2324, metadata !DIExpression()), !dbg !2210
  %42 = getelementptr inbounds [12 x i8], [12 x i8]* %39, i64 0, i64 0, !dbg !2210
  %43 = load %struct.utmpx*, %struct.utmpx** %37, align 8, !dbg !2210
  %44 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %43, i32 0, i32 1, !dbg !2210
  %45 = load i32, i32* %44, align 4, !dbg !2210
  %46 = sext i32 %45 to i64, !dbg !2210
  %47 = call i32 (i8*, i8*, ...) @sprintf(i8* %42, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %46) #10, !dbg !2210
  %48 = load %struct.utmpx*, %struct.utmpx** %37, align 8, !dbg !2211
  %49 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %48, i32 0, i32 2, !dbg !2212
  %50 = getelementptr inbounds [32 x i8], [32 x i8]* %49, i64 0, i64 0, !dbg !2211
  %51 = load %struct.utmpx*, %struct.utmpx** %37, align 8, !dbg !2213
  %52 = call i8* @time_string(%struct.utmpx* %51), !dbg !2214
  %53 = getelementptr inbounds [12 x i8], [12 x i8]* %39, i64 0, i64 0, !dbg !2215
  %54 = load i8*, i8** %38, align 8, !dbg !2216
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 32, i8* %50, i8* %52, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %53, i8* %54, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !2217
  %55 = load i8*, i8** %38, align 8, !dbg !2218
  call void @free(i8* %55) #10, !dbg !2219
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_login(%struct.utmpx*) #4 !dbg !2325 {
  %2 = load i32, i32* @x.23
  %3 = load i32, i32* @y.24
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca [12 x i8], align 1
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !2326, metadata !DIExpression()), !dbg !2327
  call void @llvm.dbg.declare(metadata i8** %11, metadata !2328, metadata !DIExpression()), !dbg !2329
  %13 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2330
  %14 = call i8* @make_id_equals_comment(%struct.utmpx* %13), !dbg !2331
  store i8* %14, i8** %11, align 8, !dbg !2329
  call void @llvm.dbg.declare(metadata [12 x i8]* %12, metadata !2332, metadata !DIExpression()), !dbg !2333
  %15 = getelementptr inbounds [12 x i8], [12 x i8]* %12, i64 0, i64 0, !dbg !2333
  %16 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2333
  %17 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %16, i32 0, i32 1, !dbg !2333
  %18 = load i32, i32* %17, align 4, !dbg !2333
  %19 = sext i32 %18 to i64, !dbg !2333
  %20 = call i32 (i8*, i8*, ...) @sprintf(i8* %15, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %19) #10, !dbg !2333
  %21 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i64 0, i64 0)) #10, !dbg !2334
  %22 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2335
  %23 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %22, i32 0, i32 2, !dbg !2336
  %24 = getelementptr inbounds [32 x i8], [32 x i8]* %23, i64 0, i64 0, !dbg !2335
  %25 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2337
  %26 = call i8* @time_string(%struct.utmpx* %25), !dbg !2338
  %27 = getelementptr inbounds [12 x i8], [12 x i8]* %12, i64 0, i64 0, !dbg !2339
  %28 = load i8*, i8** %11, align 8, !dbg !2340
  call void @print_line(i32 -1, i8* %21, i8 signext 32, i32 32, i8* %24, i8* %26, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %27, i8* %28, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !2341
  %29 = load i8*, i8** %11, align 8, !dbg !2342
  call void @free(i8* %29) #10, !dbg !2343
  %30 = load i32, i32* @x.23
  %31 = load i32, i32* @y.24
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !2344

originalBBalteredBB:                              ; preds = %originalBB, %1
  %38 = alloca %struct.utmpx*, align 8
  %39 = alloca i8*, align 8
  %40 = alloca [12 x i8], align 1
  store %struct.utmpx* %0, %struct.utmpx** %38, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %38, metadata !2345, metadata !DIExpression()), !dbg !2327
  call void @llvm.dbg.declare(metadata i8** %39, metadata !2447, metadata !DIExpression()), !dbg !2329
  %41 = load %struct.utmpx*, %struct.utmpx** %38, align 8, !dbg !2330
  %42 = call i8* @make_id_equals_comment(%struct.utmpx* %41), !dbg !2331
  store i8* %42, i8** %39, align 8, !dbg !2329
  call void @llvm.dbg.declare(metadata [12 x i8]* %40, metadata !2448, metadata !DIExpression()), !dbg !2333
  %43 = getelementptr inbounds [12 x i8], [12 x i8]* %40, i64 0, i64 0, !dbg !2333
  %44 = load %struct.utmpx*, %struct.utmpx** %38, align 8, !dbg !2333
  %45 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %44, i32 0, i32 1, !dbg !2333
  %46 = load i32, i32* %45, align 4, !dbg !2333
  %47 = sext i32 %46 to i64, !dbg !2333
  %48 = call i32 (i8*, i8*, ...) @sprintf(i8* %43, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %47) #10, !dbg !2333
  %49 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i64 0, i64 0)) #10, !dbg !2334
  %50 = load %struct.utmpx*, %struct.utmpx** %38, align 8, !dbg !2335
  %51 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %50, i32 0, i32 2, !dbg !2336
  %52 = getelementptr inbounds [32 x i8], [32 x i8]* %51, i64 0, i64 0, !dbg !2335
  %53 = load %struct.utmpx*, %struct.utmpx** %38, align 8, !dbg !2337
  %54 = call i8* @time_string(%struct.utmpx* %53), !dbg !2338
  %55 = getelementptr inbounds [12 x i8], [12 x i8]* %40, i64 0, i64 0, !dbg !2339
  %56 = load i8*, i8** %39, align 8, !dbg !2340
  call void @print_line(i32 -1, i8* %49, i8 signext 32, i32 32, i8* %52, i8* %54, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %55, i8* %56, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !2341
  %57 = load i8*, i8** %39, align 8, !dbg !2342
  call void @free(i8* %57) #10, !dbg !2343
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_deadprocs(%struct.utmpx*) #4 !dbg !140 {
  %2 = load i32, i32* @x.25
  %3 = load i32, i32* @y.26
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca [12 x i8], align 1
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !2449, metadata !DIExpression()), !dbg !2450
  call void @llvm.dbg.declare(metadata i8** %11, metadata !2451, metadata !DIExpression()), !dbg !2452
  %13 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2453
  %14 = call i8* @make_id_equals_comment(%struct.utmpx* %13), !dbg !2454
  store i8* %14, i8** %11, align 8, !dbg !2452
  call void @llvm.dbg.declare(metadata [12 x i8]* %12, metadata !2455, metadata !DIExpression()), !dbg !2456
  %15 = getelementptr inbounds [12 x i8], [12 x i8]* %12, i64 0, i64 0, !dbg !2456
  %16 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2456
  %17 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %16, i32 0, i32 1, !dbg !2456
  %18 = load i32, i32* %17, align 4, !dbg !2456
  %19 = sext i32 %18 to i64, !dbg !2456
  %20 = call i32 (i8*, i8*, ...) @sprintf(i8* %15, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %19) #10, !dbg !2456
  %21 = load i8*, i8** @print_deadprocs.exitstr, align 8, !dbg !2457
  %22 = icmp ne i8* %21, null, !dbg !2457
  %23 = load i32, i32* @x.25
  %24 = load i32, i32* @y.26
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %42, label %31, !dbg !2459

31:                                               ; preds = %originalBBpart2
  %32 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0)) #10, !dbg !2460
  %33 = call i64 @strlen(i8* %32) #13, !dbg !2461
  %34 = add i64 %33, 6, !dbg !2462
  %35 = add i64 %34, 1, !dbg !2463
  %36 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0)) #10, !dbg !2464
  %37 = call i64 @strlen(i8* %36) #13, !dbg !2465
  %38 = add i64 %35, %37, !dbg !2466
  %39 = add i64 %38, 6, !dbg !2467
  %40 = add i64 %39, 1, !dbg !2468
  %41 = call noalias i8* @xmalloc(i64 %40), !dbg !2469
  store i8* %41, i8** @print_deadprocs.exitstr, align 8, !dbg !2470
  br label %42, !dbg !2471

42:                                               ; preds = %31, %originalBBpart2
  %43 = load i8*, i8** @print_deadprocs.exitstr, align 8, !dbg !2472
  %44 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0)) #10, !dbg !2473
  %45 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2474
  %46 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %45, i32 0, i32 6, !dbg !2474
  %47 = getelementptr inbounds %struct.__exit_status, %struct.__exit_status* %46, i32 0, i32 0, !dbg !2474
  %48 = load i16, i16* %47, align 4, !dbg !2474
  %49 = sext i16 %48 to i32, !dbg !2474
  %50 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0)) #10, !dbg !2475
  %51 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2476
  %52 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %51, i32 0, i32 6, !dbg !2476
  %53 = getelementptr inbounds %struct.__exit_status, %struct.__exit_status* %52, i32 0, i32 1, !dbg !2476
  %54 = load i16, i16* %53, align 2, !dbg !2476
  %55 = sext i16 %54 to i32, !dbg !2476
  %56 = call i32 (i8*, i8*, ...) @sprintf(i8* %43, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.94, i64 0, i64 0), i8* %44, i32 %49, i8* %50, i32 %55) #10, !dbg !2477
  %57 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2478
  %58 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %57, i32 0, i32 2, !dbg !2479
  %59 = getelementptr inbounds [32 x i8], [32 x i8]* %58, i64 0, i64 0, !dbg !2478
  %60 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2480
  %61 = call i8* @time_string(%struct.utmpx* %60), !dbg !2481
  %62 = getelementptr inbounds [12 x i8], [12 x i8]* %12, i64 0, i64 0, !dbg !2482
  %63 = load i8*, i8** %11, align 8, !dbg !2483
  %64 = load i8*, i8** @print_deadprocs.exitstr, align 8, !dbg !2484
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 32, i8* %59, i8* %61, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %62, i8* %63, i8* %64), !dbg !2485
  %65 = load i8*, i8** %11, align 8, !dbg !2486
  call void @free(i8* %65) #10, !dbg !2487
  ret void, !dbg !2488

originalBBalteredBB:                              ; preds = %originalBB, %1
  %66 = alloca %struct.utmpx*, align 8
  %67 = alloca i8*, align 8
  %68 = alloca [12 x i8], align 1
  store %struct.utmpx* %0, %struct.utmpx** %66, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %66, metadata !2489, metadata !DIExpression()), !dbg !2450
  call void @llvm.dbg.declare(metadata i8** %67, metadata !2590, metadata !DIExpression()), !dbg !2452
  %69 = load %struct.utmpx*, %struct.utmpx** %66, align 8, !dbg !2453
  %70 = call i8* @make_id_equals_comment(%struct.utmpx* %69), !dbg !2454
  store i8* %70, i8** %67, align 8, !dbg !2452
  call void @llvm.dbg.declare(metadata [12 x i8]* %68, metadata !2591, metadata !DIExpression()), !dbg !2456
  %71 = getelementptr inbounds [12 x i8], [12 x i8]* %68, i64 0, i64 0, !dbg !2456
  %72 = load %struct.utmpx*, %struct.utmpx** %66, align 8, !dbg !2456
  %73 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %72, i32 0, i32 1, !dbg !2456
  %74 = load i32, i32* %73, align 4, !dbg !2456
  %75 = sext i32 %74 to i64, !dbg !2456
  %76 = call i32 (i8*, i8*, ...) @sprintf(i8* %71, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %75) #10, !dbg !2456
  %77 = load i8*, i8** @print_deadprocs.exitstr, align 8, !dbg !2457
  %78 = icmp ne i8* %77, null, !dbg !2457
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @make_id_equals_comment(%struct.utmpx*) #4 !dbg !2592 {
  %2 = load i32, i32* @x.27
  %3 = load i32, i32* @y.28
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !2595, metadata !DIExpression()), !dbg !2596
  call void @llvm.dbg.declare(metadata i64* %11, metadata !2597, metadata !DIExpression()), !dbg !2598
  store i64 4, i64* %11, align 8, !dbg !2598
  call void @llvm.dbg.declare(metadata i8** %12, metadata !2599, metadata !DIExpression()), !dbg !2600
  %13 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i64 0, i64 0)) #10, !dbg !2601
  %14 = call i64 @strlen(i8* %13) #13, !dbg !2602
  %15 = load i64, i64* %11, align 8, !dbg !2603
  %16 = add i64 %14, %15, !dbg !2604
  %17 = add i64 %16, 1, !dbg !2605
  %18 = call noalias i8* @xmalloc(i64 %17), !dbg !2606
  store i8* %18, i8** %12, align 8, !dbg !2600
  %19 = load i8*, i8** %12, align 8, !dbg !2607
  %20 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i64 0, i64 0)) #10, !dbg !2608
  %21 = call i8* @strcpy(i8* %19, i8* %20) #10, !dbg !2609
  %22 = load i8*, i8** %12, align 8, !dbg !2610
  %23 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2611
  %24 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %23, i32 0, i32 3, !dbg !2611
  %25 = getelementptr inbounds [4 x i8], [4 x i8]* %24, i64 0, i64 0, !dbg !2611
  %26 = load i64, i64* %11, align 8, !dbg !2612
  %27 = call i8* @strncat(i8* %22, i8* %25, i64 %26) #10, !dbg !2613
  %28 = load i8*, i8** %12, align 8, !dbg !2614
  %29 = load i32, i32* @x.27
  %30 = load i32, i32* @y.28
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %28, !dbg !2615

originalBBalteredBB:                              ; preds = %originalBB, %1
  %37 = alloca %struct.utmpx*, align 8
  %38 = alloca i64, align 8
  %39 = alloca i8*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %37, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %37, metadata !2616, metadata !DIExpression()), !dbg !2596
  call void @llvm.dbg.declare(metadata i64* %38, metadata !2720, metadata !DIExpression()), !dbg !2598
  store i64 4, i64* %38, align 8, !dbg !2598
  call void @llvm.dbg.declare(metadata i8** %39, metadata !2721, metadata !DIExpression()), !dbg !2600
  %40 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i64 0, i64 0)) #10, !dbg !2601
  %41 = call i64 @strlen(i8* %40) #13, !dbg !2602
  %42 = load i64, i64* %38, align 8, !dbg !2603
  %_ = sub i64 %41, %42
  %gen = mul i64 %_, %42
  %_1 = sub i64 %41, %42
  %gen2 = mul i64 %_1, %42
  %_3 = shl i64 %41, %42
  %43 = add i64 %41, %42, !dbg !2604
  %_4 = sub i64 %43, 1
  %gen5 = mul i64 %_4, 1
  %_6 = sub i64 %43, 1
  %gen7 = mul i64 %_6, 1
  %_8 = shl i64 %43, 1
  %_9 = sub i64 0, %43
  %gen10 = add i64 %_9, 1
  %_11 = sub i64 %43, 1
  %gen12 = mul i64 %_11, 1
  %_13 = sub i64 %43, 1
  %gen14 = mul i64 %_13, 1
  %44 = add i64 %43, 1, !dbg !2605
  %45 = call noalias i8* @xmalloc(i64 %44), !dbg !2606
  store i8* %45, i8** %39, align 8, !dbg !2600
  %46 = load i8*, i8** %39, align 8, !dbg !2607
  %47 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i64 0, i64 0)) #10, !dbg !2608
  %48 = call i8* @strcpy(i8* %46, i8* %47) #10, !dbg !2609
  %49 = load i8*, i8** %39, align 8, !dbg !2610
  %50 = load %struct.utmpx*, %struct.utmpx** %37, align 8, !dbg !2611
  %51 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %50, i32 0, i32 3, !dbg !2611
  %52 = getelementptr inbounds [4 x i8], [4 x i8]* %51, i64 0, i64 0, !dbg !2611
  %53 = load i64, i64* %38, align 8, !dbg !2612
  %54 = call i8* @strncat(i8* %49, i8* %52, i64 %53) #10, !dbg !2613
  %55 = load i8*, i8** %39, align 8, !dbg !2614
  br label %originalBB
}

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @time_string(%struct.utmpx*) #4 !dbg !125 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.utmpx*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.tm*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %3, metadata !2722, metadata !DIExpression()), !dbg !2723
  call void @llvm.dbg.declare(metadata i64* %4, metadata !2724, metadata !DIExpression()), !dbg !2725
  %6 = load %struct.utmpx*, %struct.utmpx** %3, align 8, !dbg !2726
  %7 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %6, i32 0, i32 8, !dbg !2726
  %8 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, !dbg !2726
  %9 = load i32, i32* %8, align 4, !dbg !2726
  %10 = sext i32 %9 to i64, !dbg !2726
  store i64 %10, i64* %4, align 8, !dbg !2725
  call void @llvm.dbg.declare(metadata %struct.tm** %5, metadata !2727, metadata !DIExpression()), !dbg !2743
  %11 = call %struct.tm* @localtime(i64* %4) #10, !dbg !2744
  store %struct.tm* %11, %struct.tm** %5, align 8, !dbg !2743
  %12 = load %struct.tm*, %struct.tm** %5, align 8, !dbg !2745
  %13 = icmp ne %struct.tm* %12, null, !dbg !2745
  br i1 %13, label %14, label %18, !dbg !2747

14:                                               ; preds = %1
  %15 = load i8*, i8** @time_format, align 8, !dbg !2748
  %16 = load %struct.tm*, %struct.tm** %5, align 8, !dbg !2750
  %17 = call i64 @strftime(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @time_string.buf, i64 0, i64 0), i64 33, i8* %15, %struct.tm* %16) #10, !dbg !2751
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @time_string.buf, i64 0, i64 0), i8** %2, align 8, !dbg !2752
  br label %21, !dbg !2752

18:                                               ; preds = %1
  %19 = load i64, i64* %4, align 8, !dbg !2753
  %20 = call i8* @timetostr(i64 %19, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @time_string.buf, i64 0, i64 0)), !dbg !2754
  store i8* %20, i8** %2, align 8, !dbg !2755
  br label %21, !dbg !2755

21:                                               ; preds = %18, %14
  %22 = load i32, i32* @x.29
  %23 = load i32, i32* @y.30
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = load i8*, i8** %2, align 8, !dbg !2756
  %31 = load i32, i32* @x.29
  %32 = load i32, i32* @y.30
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %30, !dbg !2756

originalBBalteredBB:                              ; preds = %originalBB, %21
  %39 = load i8*, i8** %2, align 8, !dbg !2756
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_line(i32, i8*, i8 signext, i32, i8*, i8*, i8*, i8*, i8*, i8*) #4 !dbg !56 {
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8, align 1
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca [8 x i8], align 1
  %23 = alloca [13 x i8], align 1
  %24 = alloca i8*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i8*, align 8
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !2757, metadata !DIExpression()), !dbg !2758
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !2759, metadata !DIExpression()), !dbg !2760
  store i8 %2, i8* %13, align 1
  call void @llvm.dbg.declare(metadata i8* %13, metadata !2761, metadata !DIExpression()), !dbg !2762
  store i32 %3, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !2763, metadata !DIExpression()), !dbg !2764
  store i8* %4, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !2765, metadata !DIExpression()), !dbg !2766
  store i8* %5, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !2767, metadata !DIExpression()), !dbg !2768
  store i8* %6, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !2769, metadata !DIExpression()), !dbg !2770
  store i8* %7, i8** %18, align 8
  call void @llvm.dbg.declare(metadata i8** %18, metadata !2771, metadata !DIExpression()), !dbg !2772
  store i8* %8, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !2773, metadata !DIExpression()), !dbg !2774
  store i8* %9, i8** %20, align 8
  call void @llvm.dbg.declare(metadata i8** %20, metadata !2775, metadata !DIExpression()), !dbg !2776
  call void @llvm.dbg.declare(metadata i8** %21, metadata !2777, metadata !DIExpression()), !dbg !2778
  call void @llvm.dbg.declare(metadata [8 x i8]* %22, metadata !2779, metadata !DIExpression()), !dbg !2781
  call void @llvm.dbg.declare(metadata [13 x i8]* %23, metadata !2782, metadata !DIExpression()), !dbg !2786
  call void @llvm.dbg.declare(metadata i8** %24, metadata !2787, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.declare(metadata i32* %25, metadata !2789, metadata !DIExpression()), !dbg !2790
  %27 = load i8, i8* %13, align 1, !dbg !2791
  store i8 %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @print_line.mesg, i64 0, i64 1), align 1, !dbg !2792
  %28 = load i8, i8* @include_idle, align 1, !dbg !2793
  %29 = trunc i8 %28 to i1, !dbg !2793
  br i1 %29, label %30, label %73, !dbg !2795

30:                                               ; preds = %10
  %31 = load i32, i32* @x.31
  %32 = load i32, i32* @y.32
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %30, %originalBBalteredBB
  %39 = load i8, i8* @short_output, align 1, !dbg !2796
  %40 = trunc i8 %39 to i1, !dbg !2796
  %41 = load i32, i32* @x.31
  %42 = load i32, i32* @y.32
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %40, label %73, label %49, !dbg !2797

49:                                               ; preds = %originalBBpart2
  %50 = load i32, i32* @x.31
  %51 = load i32, i32* @y.32
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %49, %originalBB1alteredBB
  %58 = load i8*, i8** %17, align 8, !dbg !2798
  %59 = call i64 @strlen(i8* %58) #13, !dbg !2799
  %60 = icmp ult i64 %59, 7, !dbg !2800
  %61 = load i32, i32* @x.31
  %62 = load i32, i32* @y.32
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %60, label %69, label %73, !dbg !2801

69:                                               ; preds = %originalBBpart24
  %70 = getelementptr inbounds [8 x i8], [8 x i8]* %22, i64 0, i64 0, !dbg !2802
  %71 = load i8*, i8** %17, align 8, !dbg !2803
  %72 = call i32 (i8*, i8*, ...) @sprintf(i8* %70, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0), i8* %71) #10, !dbg !2804
  br label %91, !dbg !2804

73:                                               ; preds = %originalBBpart24, %originalBBpart2, %10
  %74 = load i32, i32* @x.31
  %75 = load i32, i32* @y.32
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %73, %originalBB6alteredBB
  %82 = getelementptr inbounds [8 x i8], [8 x i8]* %22, i64 0, i64 0, !dbg !2805
  store i8 0, i8* %82, align 1, !dbg !2806
  %83 = load i32, i32* @x.31
  %84 = load i32, i32* @y.32
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %91

91:                                               ; preds = %originalBBpart28, %69
  %92 = load i32, i32* @x.31
  %93 = load i32, i32* @y.32
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %91, %originalBB10alteredBB
  %100 = load i8, i8* @short_output, align 1, !dbg !2807
  %101 = trunc i8 %100 to i1, !dbg !2807
  %102 = load i32, i32* @x.31
  %103 = load i32, i32* @y.32
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %101, label %134, label %110, !dbg !2809

110:                                              ; preds = %originalBBpart212
  %111 = load i8*, i8** %18, align 8, !dbg !2810
  %112 = call i64 @strlen(i8* %111) #13, !dbg !2811
  %113 = icmp ult i64 %112, 12, !dbg !2812
  br i1 %113, label %114, label %134, !dbg !2813

114:                                              ; preds = %110
  %115 = load i32, i32* @x.31
  %116 = load i32, i32* @y.32
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %114, %originalBB14alteredBB
  %123 = getelementptr inbounds [13 x i8], [13 x i8]* %23, i64 0, i64 0, !dbg !2814
  %124 = load i8*, i8** %18, align 8, !dbg !2815
  %125 = call i32 (i8*, i8*, ...) @sprintf(i8* %123, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), i8* %124) #10, !dbg !2816
  %126 = load i32, i32* @x.31
  %127 = load i32, i32* @y.32
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %152, !dbg !2816

134:                                              ; preds = %110, %originalBBpart212
  %135 = load i32, i32* @x.31
  %136 = load i32, i32* @y.32
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %134, %originalBB18alteredBB
  %143 = getelementptr inbounds [13 x i8], [13 x i8]* %23, i64 0, i64 0, !dbg !2817
  store i8 0, i8* %143, align 1, !dbg !2818
  %144 = load i32, i32* @x.31
  %145 = load i32, i32* @y.32
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %152

152:                                              ; preds = %originalBBpart220, %originalBBpart216
  %153 = load i8, i8* @include_exit, align 1, !dbg !2819
  %154 = trunc i8 %153 to i1, !dbg !2819
  br i1 %154, label %155, label %215, !dbg !2819

155:                                              ; preds = %152
  %156 = load i32, i32* @x.31
  %157 = load i32, i32* @y.32
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %155, %originalBB22alteredBB
  %164 = load i8*, i8** %20, align 8, !dbg !2820
  %165 = call i64 @strlen(i8* %164) #13, !dbg !2820
  %166 = icmp ugt i64 12, %165, !dbg !2820
  %167 = load i32, i32* @x.31
  %168 = load i32, i32* @y.32
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %166, label %175, label %192, !dbg !2820

175:                                              ; preds = %originalBBpart224
  %176 = load i32, i32* @x.31
  %177 = load i32, i32* @y.32
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %175, %originalBB26alteredBB
  %184 = load i32, i32* @x.31
  %185 = load i32, i32* @y.32
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %211, !dbg !2820

192:                                              ; preds = %originalBBpart224
  %193 = load i32, i32* @x.31
  %194 = load i32, i32* @y.32
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %192, %originalBB30alteredBB
  %201 = load i8*, i8** %20, align 8, !dbg !2820
  %202 = call i64 @strlen(i8* %201) #13, !dbg !2820
  %203 = load i32, i32* @x.31
  %204 = load i32, i32* @y.32
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %211, !dbg !2820

211:                                              ; preds = %originalBBpart232, %originalBBpart228
  %212 = phi i64 [ 12, %originalBBpart228 ], [ %202, %originalBBpart232 ], !dbg !2820
  %213 = add i64 1, %212, !dbg !2821
  %214 = add i64 %213, 1, !dbg !2822
  br label %232, !dbg !2819

215:                                              ; preds = %152
  %216 = load i32, i32* @x.31
  %217 = load i32, i32* @y.32
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %215, %originalBB34alteredBB
  %224 = load i32, i32* @x.31
  %225 = load i32, i32* @y.32
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %232, !dbg !2819

232:                                              ; preds = %originalBBpart236, %211
  %233 = phi i64 [ %214, %211 ], [ 1, %originalBBpart236 ], !dbg !2819
  %234 = call noalias i8* @xmalloc(i64 %233), !dbg !2823
  store i8* %234, i8** %24, align 8, !dbg !2824
  %235 = load i8, i8* @include_exit, align 1, !dbg !2825
  %236 = trunc i8 %235 to i1, !dbg !2825
  br i1 %236, label %237, label %241, !dbg !2827

237:                                              ; preds = %232
  %238 = load i8*, i8** %24, align 8, !dbg !2828
  %239 = load i8*, i8** %20, align 8, !dbg !2829
  %240 = call i32 (i8*, i8*, ...) @sprintf(i8* %238, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.71, i64 0, i64 0), i8* %239) #10, !dbg !2830
  br label %243, !dbg !2830

241:                                              ; preds = %232
  %242 = load i8*, i8** %24, align 8, !dbg !2831
  store i8 0, i8* %242, align 1, !dbg !2832
  br label %243

243:                                              ; preds = %241, %237
  %244 = load i32, i32* %11, align 4, !dbg !2833
  %245 = load i8*, i8** %12, align 8, !dbg !2834
  %246 = icmp ne i8* %245, null, !dbg !2834
  br i1 %246, label %247, label %265, !dbg !2834

247:                                              ; preds = %243
  %248 = load i32, i32* @x.31
  %249 = load i32, i32* @y.32
  %250 = sub i32 %248, 1
  %251 = mul i32 %248, %250
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %253, %254
  br i1 %255, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %247, %originalBB38alteredBB
  %256 = load i8*, i8** %12, align 8, !dbg !2835
  %257 = load i32, i32* @x.31
  %258 = load i32, i32* @y.32
  %259 = sub i32 %257, 1
  %260 = mul i32 %257, %259
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %258, 10
  %264 = or i1 %262, %263
  br i1 %264, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %266, !dbg !2834

265:                                              ; preds = %243
  br label %266, !dbg !2834

266:                                              ; preds = %265, %originalBBpart240
  %267 = phi i8* [ %256, %originalBBpart240 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73, i64 0, i64 0), %265 ], !dbg !2834
  %268 = load i8, i8* @include_mesg, align 1, !dbg !2836
  %269 = trunc i8 %268 to i1, !dbg !2836
  %270 = zext i1 %269 to i64, !dbg !2836
  %271 = select i1 %269, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @print_line.mesg, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !2836
  %272 = load i32, i32* %14, align 4, !dbg !2837
  %273 = load i8*, i8** %15, align 8, !dbg !2838
  %274 = load i32, i32* @time_format_width, align 4, !dbg !2839
  %275 = load i8*, i8** %16, align 8, !dbg !2840
  %276 = getelementptr inbounds [8 x i8], [8 x i8]* %22, i64 0, i64 0, !dbg !2841
  %277 = getelementptr inbounds [13 x i8], [13 x i8]* %23, i64 0, i64 0, !dbg !2842
  %278 = load i8*, i8** %19, align 8, !dbg !2843
  %279 = load i8*, i8** %24, align 8, !dbg !2844
  %280 = call i32 (i8**, i8*, ...) @asprintf(i8** %21, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.72, i64 0, i64 0), i32 %244, i8* %267, i8* %271, i32 %272, i8* %273, i32 %274, i8* %275, i8* %276, i8* %277, i8* %278, i8* %279) #10, !dbg !2845
  store i32 %280, i32* %25, align 4, !dbg !2846
  %281 = load i32, i32* %25, align 4, !dbg !2847
  br label %282, !dbg !2849

282:                                              ; preds = %266
  %collatzVar = alloca i32
  br label %283

283:                                              ; preds = %282
  %284 = load i32, i32* @x.31
  %285 = load i32, i32* @y.32
  %286 = sub i32 %284, 1
  %287 = mul i32 %284, %286
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %289, %290
  br i1 %291, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %283, %originalBB42alteredBB
  %292 = load i32, i32* @inVal0
  %293 = icmp sgt i32 %292, 1
  %294 = load i32, i32* @x.31
  %295 = load i32, i32* @y.32
  %296 = sub i32 %294, 1
  %297 = mul i32 %294, %296
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %299, %300
  br i1 %301, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br i1 %293, label %303, label %302

302:                                              ; preds = %originalBBpart244
  store i32 21, i32* %collatzVar
  br label %303

303:                                              ; preds = %302, %originalBBpart244
  %304 = load i8**, i8*** @inVal1
  %305 = getelementptr inbounds i8*, i8** %304, i64 1
  %306 = load i8*, i8** %305
  %controle = call i32 @controle(i8* %306, i32 -1)
  store i32 %controle, i32* %collatzVar
  br label %307

307:                                              ; preds = %originalBBpart258, %337, %303
  %308 = load i32, i32* @x.31
  %309 = load i32, i32* @y.32
  %310 = sub i32 %308, 1
  %311 = mul i32 %308, %310
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %313, %314
  br i1 %315, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %307, %originalBB46alteredBB
  %316 = load i32, i32* %collatzVar
  %317 = icmp sgt i32 %316, 1
  %318 = load i32, i32* @x.31
  %319 = load i32, i32* @y.32
  %320 = sub i32 %318, 1
  %321 = mul i32 %318, %320
  %322 = urem i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %319, 10
  %325 = or i1 %323, %324
  br i1 %325, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br i1 %317, label %326, label %362

326:                                              ; preds = %originalBBpart248
  %327 = load i32, i32* %collatzVar
  %328 = srem i32 %327, 2
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %333

330:                                              ; preds = %326
  %331 = load i32, i32* %collatzVar
  %332 = sdiv i32 %331, 2
  store i32 %332, i32* %collatzVar
  br label %337

333:                                              ; preds = %326
  %334 = load i32, i32* %collatzVar
  %335 = mul i32 %334, 3
  %336 = add i32 %335, 1
  store i32 %336, i32* %collatzVar
  br label %337

337:                                              ; preds = %333, %330
  %338 = load i32, i32* %collatzVar
  %339 = sub i32 %281, %338
  %340 = icmp sgt i32 %339, -3
  br i1 %340, label %341, label %307

341:                                              ; preds = %337
  %342 = load i32, i32* @x.31
  %343 = load i32, i32* @y.32
  %344 = sub i32 %342, 1
  %345 = mul i32 %342, %344
  %346 = urem i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %347, %348
  br i1 %349, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %341, %originalBB50alteredBB
  %350 = load i32, i32* %collatzVar
  %351 = add i32 %281, %350
  %352 = icmp slt i32 %351, 1
  %353 = load i32, i32* @x.31
  %354 = load i32, i32* @y.32
  %355 = sub i32 %353, 1
  %356 = mul i32 %353, %355
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %358, %359
  br i1 %360, label %originalBBpart258, label %originalBB50alteredBB

originalBBpart258:                                ; preds = %originalBB50
  br i1 %352, label %361, label %307

361:                                              ; preds = %originalBBpart258
  call void @xalloc_die() #14, !dbg !2850
  unreachable, !dbg !2850

362:                                              ; preds = %originalBBpart248
  call void @llvm.dbg.declare(metadata i8** %26, metadata !2851, metadata !DIExpression()), !dbg !2853
  %363 = load i32, i32* @x.31
  %364 = load i32, i32* @y.32
  %365 = sub i32 %363, 1
  %366 = mul i32 %363, %365
  %367 = urem i32 %366, 2
  %368 = icmp eq i32 %367, 0
  %369 = icmp slt i32 %364, 10
  %370 = or i1 %368, %369
  br i1 %370, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %362, %originalBB60alteredBB
  %371 = load i8*, i8** %21, align 8, !dbg !2854
  %372 = load i8*, i8** %21, align 8, !dbg !2855
  %373 = call i64 @strlen(i8* %372) #13, !dbg !2856
  %374 = getelementptr inbounds i8, i8* %371, i64 %373, !dbg !2857
  store i8* %374, i8** %26, align 8, !dbg !2853
  %375 = load i32, i32* @x.31
  %376 = load i32, i32* @y.32
  %377 = sub i32 %375, 1
  %378 = mul i32 %375, %377
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %380, %381
  br i1 %382, label %originalBBpart262, label %originalBB60alteredBB

originalBBpart262:                                ; preds = %originalBB60
  br label %383, !dbg !2858

383:                                              ; preds = %originalBBpart270, %originalBBpart262
  %384 = load i32, i32* @x.31
  %385 = load i32, i32* @y.32
  %386 = sub i32 %384, 1
  %387 = mul i32 %384, %386
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %389, %390
  br i1 %391, label %originalBB64, label %originalBB64alteredBB

originalBB64:                                     ; preds = %383, %originalBB64alteredBB
  %392 = load i8*, i8** %26, align 8, !dbg !2859
  %393 = getelementptr inbounds i8, i8* %392, i32 -1, !dbg !2859
  store i8* %393, i8** %26, align 8, !dbg !2859
  %394 = load i8, i8* %393, align 1, !dbg !2860
  %395 = sext i8 %394 to i32, !dbg !2860
  %396 = icmp eq i32 %395, 32, !dbg !2861
  %397 = load i32, i32* @x.31
  %398 = load i32, i32* @y.32
  %399 = sub i32 %397, 1
  %400 = mul i32 %397, %399
  %401 = urem i32 %400, 2
  %402 = icmp eq i32 %401, 0
  %403 = icmp slt i32 %398, 10
  %404 = or i1 %402, %403
  br i1 %404, label %originalBBpart266, label %originalBB64alteredBB

originalBBpart266:                                ; preds = %originalBB64
  br i1 %396, label %405, label %422, !dbg !2858

405:                                              ; preds = %originalBBpart266
  %406 = load i32, i32* @x.31
  %407 = load i32, i32* @y.32
  %408 = sub i32 %406, 1
  %409 = mul i32 %406, %408
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %411, %412
  br i1 %413, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %405, %originalBB68alteredBB
  %414 = load i32, i32* @x.31
  %415 = load i32, i32* @y.32
  %416 = sub i32 %414, 1
  %417 = mul i32 %414, %416
  %418 = urem i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %415, 10
  %421 = or i1 %419, %420
  br i1 %421, label %originalBBpart270, label %originalBB68alteredBB

originalBBpart270:                                ; preds = %originalBB68
  br label %383, !dbg !2858, !llvm.loop !2862

422:                                              ; preds = %originalBBpart266
  %423 = load i32, i32* @x.31
  %424 = load i32, i32* @y.32
  %425 = sub i32 %423, 1
  %426 = mul i32 %423, %425
  %427 = urem i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %424, 10
  %430 = or i1 %428, %429
  br i1 %430, label %originalBB72, label %originalBB72alteredBB

originalBB72:                                     ; preds = %422, %originalBB72alteredBB
  %431 = load i8*, i8** %26, align 8, !dbg !2864
  %432 = getelementptr inbounds i8, i8* %431, i64 1, !dbg !2865
  store i8 0, i8* %432, align 1, !dbg !2866
  %433 = load i8*, i8** %21, align 8, !dbg !2867
  %434 = call i32 @puts(i8* %433), !dbg !2868
  %435 = load i8*, i8** %21, align 8, !dbg !2869
  call void @free(i8* %435) #10, !dbg !2870
  %436 = load i8*, i8** %24, align 8, !dbg !2871
  call void @free(i8* %436) #10, !dbg !2872
  %437 = load i32, i32* @x.31
  %438 = load i32, i32* @y.32
  %439 = sub i32 %437, 1
  %440 = mul i32 %437, %439
  %441 = urem i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %442, %443
  br i1 %444, label %originalBBpart274, label %originalBB72alteredBB

originalBBpart274:                                ; preds = %originalBB72
  ret void, !dbg !2873

originalBBalteredBB:                              ; preds = %originalBB, %30
  %445 = load i8, i8* @short_output, align 1, !dbg !2796
  %446 = trunc i8 %445 to i1, !dbg !2796
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %49
  %447 = load i8*, i8** %17, align 8, !dbg !2798
  %448 = call i64 @strlen(i8* %447) #13, !dbg !2799
  %449 = icmp ult i64 %448, 7, !dbg !2800
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %73
  %450 = getelementptr inbounds [8 x i8], [8 x i8]* %22, i64 0, i64 0, !dbg !2805
  store i8 0, i8* %450, align 1, !dbg !2806
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %91
  %451 = load i8, i8* @short_output, align 1, !dbg !2807
  %452 = trunc i8 %451 to i1, !dbg !2807
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %114
  %453 = getelementptr inbounds [13 x i8], [13 x i8]* %23, i64 0, i64 0, !dbg !2814
  %454 = load i8*, i8** %18, align 8, !dbg !2815
  %455 = call i32 (i8*, i8*, ...) @sprintf(i8* %453, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), i8* %454) #10, !dbg !2816
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %134
  %456 = getelementptr inbounds [13 x i8], [13 x i8]* %23, i64 0, i64 0, !dbg !2817
  store i8 0, i8* %456, align 1, !dbg !2818
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %155
  %457 = load i8*, i8** %20, align 8, !dbg !2820
  %458 = call i64 @strlen(i8* %457) #13, !dbg !2820
  %459 = icmp ugt i64 12, %458, !dbg !2820
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %175
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %192
  %460 = load i8*, i8** %20, align 8, !dbg !2820
  %461 = call i64 @strlen(i8* %460) #13, !dbg !2820
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %215
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %247
  %462 = load i8*, i8** %12, align 8, !dbg !2835
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %283
  %463 = load i32, i32* @inVal0
  %464 = icmp sgt i32 %463, 1
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %307
  %465 = load i32, i32* %collatzVar
  %466 = icmp sgt i32 %465, 1
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %341
  %467 = load i32, i32* %collatzVar
  %_ = sub i32 0, %281
  %gen = add i32 %_, %467
  %_51 = sub i32 %281, %467
  %gen52 = mul i32 %_51, %467
  %_53 = shl i32 %281, %467
  %_54 = shl i32 %281, %467
  %_55 = sub i32 %281, %467
  %gen56 = mul i32 %_55, %467
  %468 = add i32 %281, %467
  %469 = icmp slt i32 %468, 1
  br label %originalBB50

originalBB60alteredBB:                            ; preds = %originalBB60, %362
  %470 = load i8*, i8** %21, align 8, !dbg !2854
  %471 = load i8*, i8** %21, align 8, !dbg !2855
  %472 = call i64 @strlen(i8* %471) #13, !dbg !2856
  %473 = getelementptr inbounds i8, i8* %470, i64 %472, !dbg !2857
  store i8* %473, i8** %26, align 8, !dbg !2853
  br label %originalBB60

originalBB64alteredBB:                            ; preds = %originalBB64, %383
  %474 = load i8*, i8** %26, align 8, !dbg !2859
  %475 = getelementptr inbounds i8, i8* %474, i32 -1, !dbg !2859
  store i8* %475, i8** %26, align 8, !dbg !2859
  %476 = load i8, i8* %475, align 1, !dbg !2860
  %477 = sext i8 %476 to i32, !dbg !2860
  %478 = icmp eq i32 %477, 32, !dbg !2861
  br label %originalBB64

originalBB68alteredBB:                            ; preds = %originalBB68, %405
  br label %originalBB68

originalBB72alteredBB:                            ; preds = %originalBB72, %422
  %479 = load i8*, i8** %26, align 8, !dbg !2864
  %480 = getelementptr inbounds i8, i8* %479, i64 1, !dbg !2865
  store i8 0, i8* %480, align 1, !dbg !2866
  %481 = load i8*, i8** %21, align 8, !dbg !2867
  %482 = call i32 @puts(i8* %481), !dbg !2868
  %483 = load i8*, i8** %21, align 8, !dbg !2869
  call void @free(i8* %483) #10, !dbg !2870
  %484 = load i8*, i8** %24, align 8, !dbg !2871
  call void @free(i8* %484) #10, !dbg !2872
  br label %originalBB72
}

; Function Attrs: nounwind
declare dso_local i32 @asprintf(i8**, i8*, ...) #2

declare dso_local i32 @puts(i8*) #3

; Function Attrs: nounwind
declare dso_local %struct.tm* @localtime(i64*) #2

; Function Attrs: nounwind
declare dso_local i64 @strftime(i8*, i64, i8*, %struct.tm*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @timetostr(i64, i8*) #4 !dbg !2874 {
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !2877, metadata !DIExpression()), !dbg !2878
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2879, metadata !DIExpression()), !dbg !2880
  %5 = load i64, i64* %3, align 8, !dbg !2881
  %6 = load i8*, i8** %4, align 8, !dbg !2882
  %7 = call i8* @imaxtostr(i64 %5, i8* %6), !dbg !2883
  ret i8* %7, !dbg !2884
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @strncat(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @stpcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @stzncpy(i8* noalias, i8* noalias, i64) #4 !dbg !2885 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2890, metadata !DIExpression()), !dbg !2891
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !2892, metadata !DIExpression()), !dbg !2893
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !2894, metadata !DIExpression()), !dbg !2895
  call void @llvm.dbg.declare(metadata i8** %7, metadata !2896, metadata !DIExpression()), !dbg !2897
  %8 = load i8*, i8** %5, align 8, !dbg !2898
  %9 = load i64, i64* %6, align 8, !dbg !2899
  %10 = getelementptr inbounds i8, i8* %8, i64 %9, !dbg !2900
  store i8* %10, i8** %7, align 8, !dbg !2897
  br label %11, !dbg !2901

11:                                               ; preds = %70, %3
  %12 = load i32, i32* @x.35
  %13 = load i32, i32* @y.36
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i8*, i8** %5, align 8, !dbg !2902
  %21 = load i8*, i8** %7, align 8, !dbg !2903
  %22 = icmp ult i8* %20, %21, !dbg !2904
  %23 = load i32, i32* @x.35
  %24 = load i32, i32* @y.36
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %52, !dbg !2905

31:                                               ; preds = %originalBBpart2
  %32 = load i32, i32* @x.35
  %33 = load i32, i32* @y.36
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load i8*, i8** %5, align 8, !dbg !2906
  %41 = load i8, i8* %40, align 1, !dbg !2907
  %42 = sext i8 %41 to i32, !dbg !2907
  %43 = icmp ne i32 %42, 0, !dbg !2905
  %44 = load i32, i32* @x.35
  %45 = load i32, i32* @y.36
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %52

52:                                               ; preds = %originalBBpart24, %originalBBpart2
  %53 = phi i1 [ false, %originalBBpart2 ], [ %43, %originalBBpart24 ], !dbg !2908
  %54 = load i32, i32* @x.35
  %55 = load i32, i32* @y.36
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %52, %originalBB6alteredBB
  %62 = load i32, i32* @x.35
  %63 = load i32, i32* @y.36
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %53, label %70, label %76, !dbg !2901

70:                                               ; preds = %originalBBpart28
  %71 = load i8*, i8** %5, align 8, !dbg !2909
  %72 = getelementptr inbounds i8, i8* %71, i32 1, !dbg !2909
  store i8* %72, i8** %5, align 8, !dbg !2909
  %73 = load i8, i8* %71, align 1, !dbg !2910
  %74 = load i8*, i8** %4, align 8, !dbg !2911
  %75 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !2911
  store i8* %75, i8** %4, align 8, !dbg !2911
  store i8 %73, i8* %74, align 1, !dbg !2912
  br label %11, !dbg !2901, !llvm.loop !2913

76:                                               ; preds = %originalBBpart28
  %77 = load i32, i32* @x.35
  %78 = load i32, i32* @y.36
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %76, %originalBB10alteredBB
  %85 = load i8*, i8** %4, align 8, !dbg !2914
  store i8 0, i8* %85, align 1, !dbg !2915
  %86 = load i8*, i8** %4, align 8, !dbg !2916
  %87 = load i32, i32* @x.35
  %88 = load i32, i32* @y.36
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret i8* %86, !dbg !2917

originalBBalteredBB:                              ; preds = %originalBB, %11
  %95 = load i8*, i8** %5, align 8, !dbg !2902
  %96 = load i8*, i8** %7, align 8, !dbg !2903
  %97 = icmp ult i8* %95, %96, !dbg !2904
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %98 = load i8*, i8** %5, align 8, !dbg !2906
  %99 = load i8, i8* %98, align 1, !dbg !2907
  %100 = sext i8 %99 to i32, !dbg !2907
  %101 = icmp ne i32 %100, 0, !dbg !2905
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %52
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %76
  %102 = load i8*, i8** %4, align 8, !dbg !2914
  store i8 0, i8* %102, align 1, !dbg !2915
  %103 = load i8*, i8** %4, align 8, !dbg !2916
  br label %originalBB10
}

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_tty_writable(%struct.stat*) #4 !dbg !2918 {
  %2 = load i32, i32* @x.37
  %3 = load i32, i32* @y.38
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.stat*, align 8
  store %struct.stat* %0, %struct.stat** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %10, metadata !2923, metadata !DIExpression()), !dbg !2924
  %11 = load %struct.stat*, %struct.stat** %10, align 8, !dbg !2925
  %12 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 3, !dbg !2926
  %13 = load i32, i32* %12, align 8, !dbg !2926
  %14 = and i32 %13, 16, !dbg !2927
  %15 = icmp ne i32 %14, 0, !dbg !2925
  %16 = load i32, i32* @x.37
  %17 = load i32, i32* @y.38
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i1 %15, !dbg !2928

originalBBalteredBB:                              ; preds = %originalBB, %1
  %24 = alloca %struct.stat*, align 8
  store %struct.stat* %0, %struct.stat** %24, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %24, metadata !2929, metadata !DIExpression()), !dbg !2924
  %25 = load %struct.stat*, %struct.stat** %24, align 8, !dbg !2925
  %26 = getelementptr inbounds %struct.stat, %struct.stat* %25, i32 0, i32 3, !dbg !2926
  %27 = load i32, i32* %26, align 8, !dbg !2926
  %_ = sub i32 %27, 16
  %gen = mul i32 %_, 16
  %_1 = shl i32 %27, 16
  %28 = and i32 %27, 16, !dbg !2927
  %29 = icmp ne i32 %28, 0, !dbg !2925
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @idle_string(i64, i64) #4 !dbg !115 {
  %3 = load i32, i32* @x.39
  %4 = load i32, i32* @y.40
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  store i64 %0, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !3056, metadata !DIExpression()), !dbg !3057
  store i64 %1, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !3058, metadata !DIExpression()), !dbg !3059
  %15 = load i64, i64* @idle_string.now, align 8, !dbg !3060
  %16 = icmp eq i64 %15, -9223372036854775808, !dbg !3062
  %17 = load i32, i32* @x.39
  %18 = load i32, i32* @y.40
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %43, !dbg !3063

25:                                               ; preds = %originalBBpart2
  %26 = load i32, i32* @x.39
  %27 = load i32, i32* @y.40
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %25, %originalBB1alteredBB
  %34 = call i64 @time(i64* @idle_string.now) #10, !dbg !3064
  %35 = load i32, i32* @x.39
  %36 = load i32, i32* @y.40
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %43, !dbg !3064

43:                                               ; preds = %originalBBpart24, %originalBBpart2
  %44 = load i64, i64* %13, align 8, !dbg !3065
  %45 = load i64, i64* %12, align 8, !dbg !3067
  %46 = icmp slt i64 %44, %45, !dbg !3068
  br i1 %46, label %47, label %125, !dbg !3069

47:                                               ; preds = %43
  %48 = load i32, i32* @x.39
  %49 = load i32, i32* @y.40
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %47, %originalBB6alteredBB
  %56 = load i64, i64* @idle_string.now, align 8, !dbg !3070
  %57 = sub nsw i64 %56, 86400, !dbg !3071
  %58 = load i64, i64* %12, align 8, !dbg !3072
  %59 = icmp slt i64 %57, %58, !dbg !3073
  %60 = load i32, i32* @x.39
  %61 = load i32, i32* @y.40
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart211, label %originalBB6alteredBB

originalBBpart211:                                ; preds = %originalBB6
  br i1 %59, label %68, label %125, !dbg !3074

68:                                               ; preds = %originalBBpart211
  %69 = load i64, i64* %12, align 8, !dbg !3075
  %70 = load i64, i64* @idle_string.now, align 8, !dbg !3076
  %71 = icmp sle i64 %69, %70, !dbg !3077
  br i1 %71, label %72, label %125, !dbg !3078

72:                                               ; preds = %68
  call void @llvm.dbg.declare(metadata i32* %14, metadata !3079, metadata !DIExpression()), !dbg !3081
  %73 = load i32, i32* @x.39
  %74 = load i32, i32* @y.40
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %72, %originalBB13alteredBB
  %81 = load i64, i64* @idle_string.now, align 8, !dbg !3082
  %82 = load i64, i64* %12, align 8, !dbg !3083
  %83 = sub nsw i64 %81, %82, !dbg !3084
  %84 = trunc i64 %83 to i32, !dbg !3082
  store i32 %84, i32* %14, align 4, !dbg !3081
  %85 = load i32, i32* %14, align 4, !dbg !3085
  %86 = icmp slt i32 %85, 60, !dbg !3087
  %87 = load i32, i32* @x.39
  %88 = load i32, i32* @y.40
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart217, label %originalBB13alteredBB

originalBBpart217:                                ; preds = %originalBB13
  br i1 %86, label %95, label %96, !dbg !3088

95:                                               ; preds = %originalBBpart217
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i64 0, i64 0), i8** %11, align 8, !dbg !3089
  br label %143, !dbg !3089

96:                                               ; preds = %originalBBpart217
  %97 = load i32, i32* %14, align 4, !dbg !3090
  %98 = sdiv i32 %97, 3600, !dbg !3090
  %99 = icmp slt i32 %98, 24, !dbg !3090
  br i1 %99, label %100, label %101, !dbg !3094

100:                                              ; preds = %96
  br label %102, !dbg !3094

101:                                              ; preds = %96
  call void @__assert_fail(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.81, i64 0, i64 0), i32 205, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__PRETTY_FUNCTION__.idle_string, i64 0, i64 0)) #12, !dbg !3090
  unreachable, !dbg !3090

102:                                              ; preds = %100
  %103 = load i32, i32* @x.39
  %104 = load i32, i32* @y.40
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %102, %originalBB19alteredBB
  %111 = load i32, i32* %14, align 4, !dbg !3095
  %112 = sdiv i32 %111, 3600, !dbg !3096
  %113 = load i32, i32* %14, align 4, !dbg !3097
  %114 = srem i32 %113, 3600, !dbg !3098
  %115 = sdiv i32 %114, 60, !dbg !3099
  %116 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @idle_string.idle_hhmm, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.82, i64 0, i64 0), i32 %112, i32 %115) #10, !dbg !3100
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @idle_string.idle_hhmm, i64 0, i64 0), i8** %11, align 8, !dbg !3101
  %117 = load i32, i32* @x.39
  %118 = load i32, i32* @y.40
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBBpart241, label %originalBB19alteredBB

originalBBpart241:                                ; preds = %originalBB19
  br label %143, !dbg !3101

125:                                              ; preds = %68, %originalBBpart211, %43
  %126 = load i32, i32* @x.39
  %127 = load i32, i32* @y.40
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %125, %originalBB43alteredBB
  %134 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i64 0, i64 0)) #10, !dbg !3102
  store i8* %134, i8** %11, align 8, !dbg !3103
  %135 = load i32, i32* @x.39
  %136 = load i32, i32* @y.40
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  br label %143, !dbg !3103

143:                                              ; preds = %originalBBpart245, %originalBBpart241, %95
  %144 = load i32, i32* @x.39
  %145 = load i32, i32* @y.40
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %143, %originalBB47alteredBB
  %152 = load i8*, i8** %11, align 8, !dbg !3104
  %153 = load i32, i32* @x.39
  %154 = load i32, i32* @y.40
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  ret i8* %152, !dbg !3104

originalBBalteredBB:                              ; preds = %originalBB, %2
  %161 = alloca i8*, align 8
  %162 = alloca i64, align 8
  %163 = alloca i64, align 8
  %164 = alloca i32, align 4
  store i64 %0, i64* %162, align 8
  call void @llvm.dbg.declare(metadata i64* %162, metadata !3105, metadata !DIExpression()), !dbg !3057
  store i64 %1, i64* %163, align 8
  call void @llvm.dbg.declare(metadata i64* %163, metadata !3206, metadata !DIExpression()), !dbg !3059
  %165 = load i64, i64* @idle_string.now, align 8, !dbg !3060
  %166 = icmp eq i64 %165, -9223372036854775808, !dbg !3062
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  %167 = call i64 @time(i64* @idle_string.now) #10, !dbg !3064
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %47
  %168 = load i64, i64* @idle_string.now, align 8, !dbg !3070
  %_ = sub i64 %168, 86400
  %gen = mul i64 %_, 86400
  %_7 = shl i64 %168, 86400
  %_8 = sub i64 %168, 86400
  %gen9 = mul i64 %_8, 86400
  %169 = sub nsw i64 %168, 86400, !dbg !3071
  %170 = load i64, i64* %12, align 8, !dbg !3072
  %171 = icmp slt i64 %169, %170, !dbg !3073
  br label %originalBB6

originalBB13alteredBB:                            ; preds = %originalBB13, %72
  %172 = load i64, i64* @idle_string.now, align 8, !dbg !3082
  %173 = load i64, i64* %12, align 8, !dbg !3083
  %_14 = sub i64 0, %172
  %gen15 = add i64 %_14, %173
  %174 = sub nsw i64 %172, %173, !dbg !3084
  %175 = trunc i64 %174 to i32, !dbg !3082
  store i32 %175, i32* %14, align 4, !dbg !3081
  %176 = load i32, i32* %14, align 4, !dbg !3085
  %177 = icmp slt i32 %176, 60, !dbg !3087
  br label %originalBB13

originalBB19alteredBB:                            ; preds = %originalBB19, %102
  %178 = load i32, i32* %14, align 4, !dbg !3095
  %_20 = shl i32 %178, 3600
  %179 = sdiv i32 %178, 3600, !dbg !3096
  %180 = load i32, i32* %14, align 4, !dbg !3097
  %_21 = sub i32 0, %180
  %gen22 = add i32 %_21, 3600
  %_23 = shl i32 %180, 3600
  %_24 = sub i32 %180, 3600
  %gen25 = mul i32 %_24, 3600
  %_26 = sub i32 0, %180
  %gen27 = add i32 %_26, 3600
  %_28 = shl i32 %180, 3600
  %_29 = sub i32 0, %180
  %gen30 = add i32 %_29, 3600
  %_31 = shl i32 %180, 3600
  %_32 = shl i32 %180, 3600
  %_33 = sub i32 0, %180
  %gen34 = add i32 %_33, 3600
  %181 = srem i32 %180, 3600, !dbg !3098
  %_35 = sub i32 %181, 60
  %gen36 = mul i32 %_35, 60
  %_37 = shl i32 %181, 60
  %_38 = sub i32 %181, 60
  %gen39 = mul i32 %_38, 60
  %182 = sdiv i32 %181, 60, !dbg !3099
  %183 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @idle_string.idle_hhmm, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.82, i64 0, i64 0), i32 %179, i32 %182) #10, !dbg !3100
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @idle_string.idle_hhmm, i64 0, i64 0), i8** %11, align 8, !dbg !3101
  br label %originalBB19

originalBB43alteredBB:                            ; preds = %originalBB43, %125
  %184 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i64 0, i64 0)) #10, !dbg !3102
  store i8* %184, i8** %11, align 8, !dbg !3103
  br label %originalBB43

originalBB47alteredBB:                            ; preds = %originalBB47, %143
  %185 = load i8*, i8** %11, align 8, !dbg !3104
  br label %originalBB47
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #7

; Function Attrs: nounwind
declare dso_local i64 @time(i64*) #2

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @c_isprint(i32) #4 !dbg !3207 {
  %2 = load i32, i32* @x.41
  %3 = load i32, i32* @y.42
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i1, align 1
  %11 = alloca i32, align 4
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3211, metadata !DIExpression()), !dbg !3212
  %12 = load i32, i32* %11, align 4, !dbg !3213
  %13 = load i32, i32* @x.41
  %14 = load i32, i32* @y.42
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  switch i32 %12, label %22 [
    i32 32, label %21
    i32 48, label %21
    i32 49, label %21
    i32 50, label %21
    i32 51, label %21
    i32 52, label %21
    i32 53, label %21
    i32 54, label %21
    i32 55, label %21
    i32 56, label %21
    i32 57, label %21
    i32 97, label %21
    i32 98, label %21
    i32 99, label %21
    i32 100, label %21
    i32 101, label %21
    i32 102, label %21
    i32 103, label %21
    i32 104, label %21
    i32 105, label %21
    i32 106, label %21
    i32 107, label %21
    i32 108, label %21
    i32 109, label %21
    i32 110, label %21
    i32 111, label %21
    i32 112, label %21
    i32 113, label %21
    i32 114, label %21
    i32 115, label %21
    i32 116, label %21
    i32 117, label %21
    i32 118, label %21
    i32 119, label %21
    i32 120, label %21
    i32 121, label %21
    i32 122, label %21
    i32 33, label %21
    i32 34, label %21
    i32 35, label %21
    i32 36, label %21
    i32 37, label %21
    i32 38, label %21
    i32 39, label %21
    i32 40, label %21
    i32 41, label %21
    i32 42, label %21
    i32 43, label %21
    i32 44, label %21
    i32 45, label %21
    i32 46, label %21
    i32 47, label %21
    i32 58, label %21
    i32 59, label %21
    i32 60, label %21
    i32 61, label %21
    i32 62, label %21
    i32 63, label %21
    i32 64, label %21
    i32 91, label %21
    i32 92, label %21
    i32 93, label %21
    i32 94, label %21
    i32 95, label %21
    i32 96, label %21
    i32 123, label %21
    i32 124, label %21
    i32 125, label %21
    i32 126, label %21
    i32 65, label %21
    i32 66, label %21
    i32 67, label %21
    i32 68, label %21
    i32 69, label %21
    i32 70, label %21
    i32 71, label %21
    i32 72, label %21
    i32 73, label %21
    i32 74, label %21
    i32 75, label %21
    i32 76, label %21
    i32 77, label %21
    i32 78, label %21
    i32 79, label %21
    i32 80, label %21
    i32 81, label %21
    i32 82, label %21
    i32 83, label %21
    i32 84, label %21
    i32 85, label %21
    i32 86, label %21
    i32 87, label %21
    i32 88, label %21
    i32 89, label %21
    i32 90, label %21
  ], !dbg !3214

21:                                               ; preds = %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2
  store i1 true, i1* %10, align 1, !dbg !3215
  br label %39, !dbg !3215

22:                                               ; preds = %originalBBpart2
  %23 = load i32, i32* @x.41
  %24 = load i32, i32* @y.42
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %22, %originalBB1alteredBB
  store i1 false, i1* %10, align 1, !dbg !3217
  %31 = load i32, i32* @x.41
  %32 = load i32, i32* @y.42
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %39, !dbg !3217

39:                                               ; preds = %originalBBpart24, %21
  %40 = load i1, i1* %10, align 1, !dbg !3218
  ret i1 %40, !dbg !3218

originalBBalteredBB:                              ; preds = %originalBB, %1
  %41 = alloca i1, align 1
  %42 = alloca i32, align 4
  store i32 %0, i32* %42, align 4
  call void @llvm.dbg.declare(metadata i32* %42, metadata !3219, metadata !DIExpression()), !dbg !3212
  %43 = load i32, i32* %42, align 4, !dbg !3213
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %22
  store i1 false, i1* %10, align 1, !dbg !3217
  br label %originalBB1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @c_tolower(i32) #4 !dbg !3222 {
  %2 = load i32, i32* @x.43
  %3 = load i32, i32* @y.44
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3225, metadata !DIExpression()), !dbg !3226
  %12 = load i32, i32* %11, align 4, !dbg !3227
  %13 = load i32, i32* @x.43
  %14 = load i32, i32* @y.44
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  switch i32 %12, label %25 [
    i32 65, label %21
    i32 66, label %21
    i32 67, label %21
    i32 68, label %21
    i32 69, label %21
    i32 70, label %21
    i32 71, label %21
    i32 72, label %21
    i32 73, label %21
    i32 74, label %21
    i32 75, label %21
    i32 76, label %21
    i32 77, label %21
    i32 78, label %21
    i32 79, label %21
    i32 80, label %21
    i32 81, label %21
    i32 82, label %21
    i32 83, label %21
    i32 84, label %21
    i32 85, label %21
    i32 86, label %21
    i32 87, label %21
    i32 88, label %21
    i32 89, label %21
    i32 90, label %21
  ], !dbg !3228

21:                                               ; preds = %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2
  %22 = load i32, i32* %11, align 4, !dbg !3229
  %23 = sub nsw i32 %22, 65, !dbg !3231
  %24 = add nsw i32 %23, 97, !dbg !3232
  store i32 %24, i32* %10, align 4, !dbg !3233
  br label %43, !dbg !3233

25:                                               ; preds = %originalBBpart2
  %26 = load i32, i32* @x.43
  %27 = load i32, i32* @y.44
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %25, %originalBB1alteredBB
  %34 = load i32, i32* %11, align 4, !dbg !3234
  store i32 %34, i32* %10, align 4, !dbg !3235
  %35 = load i32, i32* @x.43
  %36 = load i32, i32* @y.44
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %43, !dbg !3235

43:                                               ; preds = %originalBBpart24, %21
  %44 = load i32, i32* @x.43
  %45 = load i32, i32* @y.44
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %43, %originalBB6alteredBB
  %52 = load i32, i32* %10, align 4, !dbg !3236
  %53 = load i32, i32* @x.43
  %54 = load i32, i32* @y.44
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i32 %52, !dbg !3236

originalBBalteredBB:                              ; preds = %originalBB, %1
  %61 = alloca i32, align 4
  %62 = alloca i32, align 4
  store i32 %0, i32* %62, align 4
  call void @llvm.dbg.declare(metadata i32* %62, metadata !3237, metadata !DIExpression()), !dbg !3226
  %63 = load i32, i32* %62, align 4, !dbg !3227
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  %64 = load i32, i32* %11, align 4, !dbg !3234
  store i32 %64, i32* %10, align 4, !dbg !3235
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %43
  %65 = load i32, i32* %10, align 4, !dbg !3236
  br label %originalBB6
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @canon_host(i8*) #4 !dbg !3240 {
  %2 = load i32, i32* @x.45
  %3 = load i32, i32* @y.46
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !3243, metadata !DIExpression()), !dbg !3244
  %11 = load i8*, i8** %10, align 8, !dbg !3245
  %12 = call noalias i8* @canon_host_r(i8* %11, i32* @last_cherror), !dbg !3246
  %13 = load i32, i32* @x.45
  %14 = load i32, i32* @y.46
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !3247

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i8*, align 8
  store i8* %0, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !3248, metadata !DIExpression()), !dbg !3244
  %22 = load i8*, i8** %21, align 8, !dbg !3245
  %23 = call noalias i8* @canon_host_r(i8* %22, i32* @last_cherror), !dbg !3246
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @canon_host_r(i8*, i32*) #4 !dbg !165 {
  %3 = load i32, i32* @x.47
  %4 = load i32, i32* @y.48
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca %struct.addrinfo*, align 8
  %15 = alloca i32, align 4
  store i8* %0, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !3273, metadata !DIExpression()), !dbg !3274
  store i32* %1, i32** %12, align 8
  call void @llvm.dbg.declare(metadata i32** %12, metadata !3275, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.declare(metadata i8** %13, metadata !3277, metadata !DIExpression()), !dbg !3278
  store i8* null, i8** %13, align 8, !dbg !3278
  call void @llvm.dbg.declare(metadata %struct.addrinfo** %14, metadata !3279, metadata !DIExpression()), !dbg !3280
  store %struct.addrinfo* null, %struct.addrinfo** %14, align 8, !dbg !3280
  call void @llvm.dbg.declare(metadata i32* %15, metadata !3281, metadata !DIExpression()), !dbg !3282
  store i32 2, i32* getelementptr inbounds (%struct.addrinfo, %struct.addrinfo* @canon_host_r.hints, i32 0, i32 0), align 8, !dbg !3283
  %16 = load i8*, i8** %11, align 8, !dbg !3284
  %17 = call i32 @getaddrinfo(i8* %16, i8* null, %struct.addrinfo* @canon_host_r.hints, %struct.addrinfo** %14), !dbg !3285
  store i32 %17, i32* %15, align 4, !dbg !3286
  %18 = load i32, i32* %15, align 4, !dbg !3287
  %19 = icmp ne i32 %18, 0, !dbg !3287
  %20 = load i32, i32* @x.47
  %21 = load i32, i32* @y.48
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %115, label %28, !dbg !3289

28:                                               ; preds = %originalBBpart2
  %29 = load i32, i32* @x.47
  %30 = load i32, i32* @y.48
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = load %struct.addrinfo*, %struct.addrinfo** %14, align 8, !dbg !3290
  %38 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %37, i32 0, i32 6, !dbg !3292
  %39 = load i8*, i8** %38, align 8, !dbg !3292
  %40 = icmp ne i8* %39, null, !dbg !3290
  %41 = load i32, i32* @x.47
  %42 = load i32, i32* @y.48
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %40, label %49, label %69, !dbg !3290

49:                                               ; preds = %originalBBpart24
  %50 = load i32, i32* @x.47
  %51 = load i32, i32* @y.48
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %49, %originalBB6alteredBB
  %58 = load %struct.addrinfo*, %struct.addrinfo** %14, align 8, !dbg !3293
  %59 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %58, i32 0, i32 6, !dbg !3294
  %60 = load i8*, i8** %59, align 8, !dbg !3294
  %61 = load i32, i32* @x.47
  %62 = load i32, i32* @y.48
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %71, !dbg !3290

69:                                               ; preds = %originalBBpart24
  %70 = load i8*, i8** %11, align 8, !dbg !3295
  br label %71, !dbg !3290

71:                                               ; preds = %69, %originalBBpart28
  %72 = phi i8* [ %60, %originalBBpart28 ], [ %70, %69 ], !dbg !3290
  %73 = call noalias i8* @strdup(i8* %72) #10, !dbg !3296
  store i8* %73, i8** %13, align 8, !dbg !3297
  %74 = load i8*, i8** %13, align 8, !dbg !3298
  %75 = icmp ne i8* %74, null, !dbg !3298
  br i1 %75, label %113, label %76, !dbg !3300

76:                                               ; preds = %71
  %77 = load i32, i32* @x.47
  %78 = load i32, i32* @y.48
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %76, %originalBB10alteredBB
  %85 = load i32*, i32** %12, align 8, !dbg !3301
  %86 = icmp ne i32* %85, null, !dbg !3301
  %87 = load i32, i32* @x.47
  %88 = load i32, i32* @y.48
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %86, label %95, label %113, !dbg !3302

95:                                               ; preds = %originalBBpart212
  %96 = load i32, i32* @x.47
  %97 = load i32, i32* @y.48
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %95, %originalBB14alteredBB
  %104 = load i32*, i32** %12, align 8, !dbg !3303
  store i32 -10, i32* %104, align 4, !dbg !3304
  %105 = load i32, i32* @x.47
  %106 = load i32, i32* @y.48
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %113, !dbg !3305

113:                                              ; preds = %originalBBpart216, %originalBBpart212, %71
  %114 = load %struct.addrinfo*, %struct.addrinfo** %14, align 8, !dbg !3306
  call void @freeaddrinfo(%struct.addrinfo* %114) #10, !dbg !3307
  br label %138, !dbg !3308

115:                                              ; preds = %originalBBpart2
  %116 = load i32*, i32** %12, align 8, !dbg !3309
  %117 = icmp ne i32* %116, null, !dbg !3309
  br i1 %117, label %118, label %121, !dbg !3311

118:                                              ; preds = %115
  %119 = load i32, i32* %15, align 4, !dbg !3312
  %120 = load i32*, i32** %12, align 8, !dbg !3313
  store i32 %119, i32* %120, align 4, !dbg !3314
  br label %121, !dbg !3315

121:                                              ; preds = %118, %115
  %122 = load i32, i32* @x.47
  %123 = load i32, i32* @y.48
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %121, %originalBB18alteredBB
  %130 = load i32, i32* @x.47
  %131 = load i32, i32* @y.48
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %138

138:                                              ; preds = %originalBBpart220, %113
  %139 = load i32, i32* @x.47
  %140 = load i32, i32* @y.48
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %138, %originalBB22alteredBB
  %147 = load i8*, i8** %13, align 8, !dbg !3316
  %148 = load i32, i32* @x.47
  %149 = load i32, i32* @y.48
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret i8* %147, !dbg !3317

originalBBalteredBB:                              ; preds = %originalBB, %2
  %156 = alloca i8*, align 8
  %157 = alloca i32*, align 8
  %158 = alloca i8*, align 8
  %159 = alloca %struct.addrinfo*, align 8
  %160 = alloca i32, align 4
  store i8* %0, i8** %156, align 8
  call void @llvm.dbg.declare(metadata i8** %156, metadata !3318, metadata !DIExpression()), !dbg !3274
  store i32* %1, i32** %157, align 8
  call void @llvm.dbg.declare(metadata i32** %157, metadata !3342, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.declare(metadata i8** %158, metadata !3343, metadata !DIExpression()), !dbg !3278
  store i8* null, i8** %158, align 8, !dbg !3278
  call void @llvm.dbg.declare(metadata %struct.addrinfo** %159, metadata !3344, metadata !DIExpression()), !dbg !3280
  store %struct.addrinfo* null, %struct.addrinfo** %159, align 8, !dbg !3280
  call void @llvm.dbg.declare(metadata i32* %160, metadata !3345, metadata !DIExpression()), !dbg !3282
  store i32 2, i32* getelementptr inbounds (%struct.addrinfo, %struct.addrinfo* @canon_host_r.hints, i32 0, i32 0), align 8, !dbg !3283
  %161 = load i8*, i8** %156, align 8, !dbg !3284
  %162 = call i32 @getaddrinfo(i8* %161, i8* null, %struct.addrinfo* @canon_host_r.hints, %struct.addrinfo** %159), !dbg !3285
  store i32 %162, i32* %160, align 4, !dbg !3286
  %163 = load i32, i32* %160, align 4, !dbg !3287
  %164 = icmp ne i32 %163, 0, !dbg !3287
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %165 = load %struct.addrinfo*, %struct.addrinfo** %14, align 8, !dbg !3290
  %166 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %165, i32 0, i32 6, !dbg !3292
  %167 = load i8*, i8** %166, align 8, !dbg !3292
  %168 = icmp ne i8* %167, null, !dbg !3290
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  %169 = load %struct.addrinfo*, %struct.addrinfo** %14, align 8, !dbg !3293
  %170 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %169, i32 0, i32 6, !dbg !3294
  %171 = load i8*, i8** %170, align 8, !dbg !3294
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %76
  %172 = load i32*, i32** %12, align 8, !dbg !3301
  %173 = icmp ne i32* %172, null, !dbg !3301
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %95
  %174 = load i32*, i32** %12, align 8, !dbg !3303
  store i32 -10, i32* %174, align 4, !dbg !3304
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %121
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %138
  %175 = load i8*, i8** %13, align 8, !dbg !3316
  br label %originalBB22
}

declare dso_local i32 @getaddrinfo(i8*, i8*, %struct.addrinfo*, %struct.addrinfo**) #3

; Function Attrs: nounwind
declare dso_local noalias i8* @strdup(i8*) #2

; Function Attrs: nounwind
declare dso_local void @freeaddrinfo(%struct.addrinfo*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @close_stdout() #4 !dbg !3346 {
  %1 = alloca i8*, align 8
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3347
  %3 = call i32 @close_stream(%struct._IO_FILE* %2), !dbg !3349
  %4 = icmp ne i32 %3, 0, !dbg !3350
  br i1 %4, label %5, label %108, !dbg !3351

5:                                                ; preds = %0
  %6 = load i32, i32* @x.49
  %7 = load i32, i32* @y.50
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = load i8, i8* @ignore_EPIPE, align 1, !dbg !3352
  %15 = trunc i8 %14 to i1, !dbg !3352
  %16 = load i32, i32* @x.49
  %17 = load i32, i32* @y.50
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %44, !dbg !3353

24:                                               ; preds = %originalBBpart2
  %25 = load i32, i32* @x.49
  %26 = load i32, i32* @y.50
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = call i32* @__errno_location() #15, !dbg !3354
  %34 = load i32, i32* %33, align 4, !dbg !3354
  %35 = icmp eq i32 %34, 32, !dbg !3355
  %36 = load i32, i32* @x.49
  %37 = load i32, i32* @y.50
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %35, label %108, label %44, !dbg !3356

44:                                               ; preds = %originalBBpart24, %originalBBpart2
  call void @llvm.dbg.declare(metadata i8** %1, metadata !3357, metadata !DIExpression()), !dbg !3359
  %45 = load i32, i32* @x.49
  %46 = load i32, i32* @y.50
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %44, %originalBB6alteredBB
  %53 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.102, i64 0, i64 0)) #10, !dbg !3360
  store i8* %53, i8** %1, align 8, !dbg !3359
  %54 = load i8*, i8** @file_name, align 8, !dbg !3361
  %55 = icmp ne i8* %54, null, !dbg !3361
  %56 = load i32, i32* @x.49
  %57 = load i32, i32* @y.50
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %55, label %64, label %86, !dbg !3363

64:                                               ; preds = %originalBBpart28
  %65 = load i32, i32* @x.49
  %66 = load i32, i32* @y.50
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %64, %originalBB10alteredBB
  %73 = call i32* @__errno_location() #15, !dbg !3364
  %74 = load i32, i32* %73, align 4, !dbg !3364
  %75 = load i8*, i8** @file_name, align 8, !dbg !3365
  %76 = call i8* @quotearg_colon(i8* %75), !dbg !3366
  %77 = load i8*, i8** %1, align 8, !dbg !3367
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %74, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.103, i64 0, i64 0), i8* %76, i8* %77), !dbg !3368
  %78 = load i32, i32* @x.49
  %79 = load i32, i32* @y.50
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %106, !dbg !3368

86:                                               ; preds = %originalBBpart28
  %87 = load i32, i32* @x.49
  %88 = load i32, i32* @y.50
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %86, %originalBB14alteredBB
  %95 = call i32* @__errno_location() #15, !dbg !3369
  %96 = load i32, i32* %95, align 4, !dbg !3369
  %97 = load i8*, i8** %1, align 8, !dbg !3370
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %96, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.104, i64 0, i64 0), i8* %97), !dbg !3371
  %98 = load i32, i32* @x.49
  %99 = load i32, i32* @y.50
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %106

106:                                              ; preds = %originalBBpart216, %originalBBpart212
  %107 = load volatile i32, i32* @exit_failure, align 4, !dbg !3372
  call void @_exit(i32 %107) #14, !dbg !3373
  unreachable, !dbg !3373

108:                                              ; preds = %originalBBpart24, %0
  %109 = load i32, i32* @x.49
  %110 = load i32, i32* @y.50
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %108, %originalBB18alteredBB
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3374
  %118 = call i32 @close_stream(%struct._IO_FILE* %117), !dbg !3376
  %119 = icmp ne i32 %118, 0, !dbg !3377
  %120 = load i32, i32* @x.49
  %121 = load i32, i32* @y.50
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %119, label %128, label %146, !dbg !3378

128:                                              ; preds = %originalBBpart220
  %129 = load i32, i32* @x.49
  %130 = load i32, i32* @y.50
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %128, %originalBB22alteredBB
  %137 = load volatile i32, i32* @exit_failure, align 4, !dbg !3379
  call void @_exit(i32 %137) #14, !dbg !3380
  %138 = load i32, i32* @x.49
  %139 = load i32, i32* @y.50
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  unreachable, !dbg !3380

146:                                              ; preds = %originalBBpart220
  ret void, !dbg !3381

originalBBalteredBB:                              ; preds = %originalBB, %5
  %147 = load i8, i8* @ignore_EPIPE, align 1, !dbg !3352
  %148 = trunc i8 %147 to i1, !dbg !3352
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %149 = call i32* @__errno_location() #15, !dbg !3354
  %150 = load i32, i32* %149, align 4, !dbg !3354
  %151 = icmp eq i32 %150, 32, !dbg !3355
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %44
  %152 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.102, i64 0, i64 0)) #10, !dbg !3360
  store i8* %152, i8** %1, align 8, !dbg !3359
  %153 = load i8*, i8** @file_name, align 8, !dbg !3361
  %154 = icmp ne i8* %153, null, !dbg !3361
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %64
  %155 = call i32* @__errno_location() #15, !dbg !3364
  %156 = load i32, i32* %155, align 4, !dbg !3364
  %157 = load i8*, i8** @file_name, align 8, !dbg !3365
  %158 = call i8* @quotearg_colon(i8* %157), !dbg !3366
  %159 = load i8*, i8** %1, align 8, !dbg !3367
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %156, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.103, i64 0, i64 0), i8* %158, i8* %159), !dbg !3368
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %86
  %160 = call i32* @__errno_location() #15, !dbg !3369
  %161 = load i32, i32* %160, align 4, !dbg !3369
  %162 = load i8*, i8** %1, align 8, !dbg !3370
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %161, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.104, i64 0, i64 0), i8* %162), !dbg !3371
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %108
  %163 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3374
  %164 = call i32 @close_stream(%struct._IO_FILE* %163), !dbg !3376
  %165 = icmp ne i32 %164, 0, !dbg !3377
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %128
  %166 = load volatile i32, i32* @exit_failure, align 4, !dbg !3379
  call void @_exit(i32 %166) #14, !dbg !3380
  br label %originalBB22
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #9

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @hard_locale(i32) #4 !dbg !3382 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  %4 = alloca [257 x i8], align 16
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3384, metadata !DIExpression()), !dbg !3385
  call void @llvm.dbg.declare(metadata [257 x i8]* %4, metadata !3386, metadata !DIExpression()), !dbg !3387
  %5 = load i32, i32* %3, align 4, !dbg !3388
  %6 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !3390
  %7 = call i32 @setlocale_null_r(i32 %5, i8* %6, i64 257), !dbg !3391
  %8 = icmp ne i32 %7, 0, !dbg !3391
  br i1 %8, label %9, label %26, !dbg !3392

9:                                                ; preds = %1
  %10 = load i32, i32* @x.51
  %11 = load i32, i32* @y.52
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  store i1 false, i1* %2, align 1, !dbg !3393
  %18 = load i32, i32* @x.51
  %19 = load i32, i32* @y.52
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %212, !dbg !3393

26:                                               ; preds = %1
  %27 = load i32, i32* @x.51
  %28 = load i32, i32* @y.52
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !3394
  %36 = call i32 @strcmp(i8* %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i64 0, i64 0)) #13, !dbg !3395
  %37 = load i32, i32* @x.51
  %38 = load i32, i32* @y.52
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %45, !dbg !3396

45:                                               ; preds = %originalBBpart24
  %46 = load i32, i32* @x.51
  %47 = load i32, i32* @y.52
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %45, %originalBB6alteredBB
  %collatzVar = alloca i32
  %54 = load i32, i32* @x.51
  %55 = load i32, i32* @y.52
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %62

62:                                               ; preds = %originalBBpart28
  %63 = load i32, i32* @inVal0
  %64 = icmp sgt i32 %63, 1
  br i1 %64, label %82, label %65

65:                                               ; preds = %62
  %66 = load i32, i32* @x.51
  %67 = load i32, i32* @y.52
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %65, %originalBB10alteredBB
  store i32 3, i32* %collatzVar
  %74 = load i32, i32* @x.51
  %75 = load i32, i32* @y.52
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %82

82:                                               ; preds = %originalBBpart212, %62
  %83 = load i32, i32* @x.51
  %84 = load i32, i32* @y.52
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %82, %originalBB14alteredBB
  %91 = load i8**, i8*** @inVal1
  %92 = getelementptr inbounds i8*, i8** %91, i64 1
  %93 = load i8*, i8** %92
  %94 = add i32 0, -3
  %controle = call i32 @controle(i8* %93, i32 %94)
  store i32 %controle, i32* %collatzVar
  %95 = load i32, i32* @x.51
  %96 = load i32, i32* @y.52
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBBpart218, label %originalBB14alteredBB

originalBBpart218:                                ; preds = %originalBB14
  br label %103

103:                                              ; preds = %originalBBpart254, %165, %originalBBpart218
  %104 = load i32, i32* @x.51
  %105 = load i32, i32* @y.52
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %103, %originalBB20alteredBB
  %112 = load i32, i32* %collatzVar
  %113 = icmp sgt i32 %112, 1
  %114 = load i32, i32* @x.51
  %115 = load i32, i32* @y.52
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBBpart222, label %originalBB20alteredBB

originalBBpart222:                                ; preds = %originalBB20
  br i1 %113, label %122, label %189

122:                                              ; preds = %originalBBpart222
  %123 = load i32, i32* @x.51
  %124 = load i32, i32* @y.52
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %122, %originalBB24alteredBB
  %131 = load i32, i32* %collatzVar
  %132 = srem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = load i32, i32* @x.51
  %135 = load i32, i32* @y.52
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBBpart229, label %originalBB24alteredBB

originalBBpart229:                                ; preds = %originalBB24
  br i1 %133, label %142, label %161

142:                                              ; preds = %originalBBpart229
  %143 = load i32, i32* @x.51
  %144 = load i32, i32* @y.52
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %142, %originalBB31alteredBB
  %151 = load i32, i32* %collatzVar
  %152 = sdiv i32 %151, 2
  store i32 %152, i32* %collatzVar
  %153 = load i32, i32* @x.51
  %154 = load i32, i32* @y.52
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBBpart242, label %originalBB31alteredBB

originalBBpart242:                                ; preds = %originalBB31
  br label %165

161:                                              ; preds = %originalBBpart229
  %162 = load i32, i32* %collatzVar
  %163 = mul i32 %162, 3
  %164 = add i32 %163, 1
  store i32 %164, i32* %collatzVar
  br label %165

165:                                              ; preds = %161, %originalBBpart242
  %166 = load i32, i32* %collatzVar
  %167 = sub i32 %36, %166
  %168 = icmp sgt i32 %167, -2
  br i1 %168, label %169, label %103

169:                                              ; preds = %165
  %170 = load i32, i32* @x.51
  %171 = load i32, i32* @y.52
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBB44, label %originalBB44alteredBB

originalBB44:                                     ; preds = %169, %originalBB44alteredBB
  %178 = load i32, i32* %collatzVar
  %179 = add i32 %36, %178
  %180 = icmp slt i32 %179, 2
  %181 = load i32, i32* @x.51
  %182 = load i32, i32* @y.52
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBBpart254, label %originalBB44alteredBB

originalBBpart254:                                ; preds = %originalBB44
  br i1 %180, label %209, label %103

189:                                              ; preds = %originalBBpart222
  %190 = load i32, i32* @x.51
  %191 = load i32, i32* @y.52
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %189, %originalBB56alteredBB
  %198 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !3397
  %199 = call i32 @strcmp(i8* %198, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.110, i64 0, i64 0)) #13, !dbg !3398
  %200 = icmp eq i32 %199, 0, !dbg !3399
  %201 = load i32, i32* @x.51
  %202 = load i32, i32* @y.52
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  br label %209, !dbg !3400

209:                                              ; preds = %originalBBpart258, %originalBBpart254
  %210 = phi i1 [ true, %originalBBpart254 ], [ %200, %originalBBpart258 ]
  %211 = xor i1 %210, true, !dbg !3401
  store i1 %211, i1* %2, align 1, !dbg !3402
  br label %212, !dbg !3402

212:                                              ; preds = %209, %originalBBpart2
  %213 = load i32, i32* @x.51
  %214 = load i32, i32* @y.52
  %215 = sub i32 %213, 1
  %216 = mul i32 %213, %215
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %218, %219
  br i1 %220, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %212, %originalBB60alteredBB
  %221 = load i1, i1* %2, align 1, !dbg !3403
  %222 = load i32, i32* @x.51
  %223 = load i32, i32* @y.52
  %224 = sub i32 %222, 1
  %225 = mul i32 %222, %224
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %227, %228
  br i1 %229, label %originalBBpart262, label %originalBB60alteredBB

originalBBpart262:                                ; preds = %originalBB60
  ret i1 %221, !dbg !3403

originalBBalteredBB:                              ; preds = %originalBB, %9
  store i1 false, i1* %2, align 1, !dbg !3393
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %230 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !3394
  %231 = call i32 @strcmp(i8* %230, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i64 0, i64 0)) #13, !dbg !3395
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %45
  %collatzVaralteredBB = alloca i32
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %65
  store i32 3, i32* %collatzVar
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %82
  %232 = load i8**, i8*** @inVal1
  %233 = getelementptr inbounds i8*, i8** %232, i64 1
  %234 = load i8*, i8** %233
  %_ = sub i32 0, 0
  %gen = add i32 %_, -3
  %_15 = sub i32 0, 0
  %gen16 = add i32 %_15, -3
  %235 = add i32 0, -3
  %controlealteredBB = call i32 @controle(i8* %234, i32 %235)
  store i32 %controlealteredBB, i32* %collatzVar
  br label %originalBB14

originalBB20alteredBB:                            ; preds = %originalBB20, %103
  %236 = load i32, i32* %collatzVar
  %237 = icmp sgt i32 %236, 1
  br label %originalBB20

originalBB24alteredBB:                            ; preds = %originalBB24, %122
  %238 = load i32, i32* %collatzVar
  %_25 = sub i32 %238, 2
  %gen26 = mul i32 %_25, 2
  %_27 = shl i32 %238, 2
  %239 = srem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  br label %originalBB24

originalBB31alteredBB:                            ; preds = %originalBB31, %142
  %241 = load i32, i32* %collatzVar
  %_32 = sub i32 0, %241
  %gen33 = add i32 %_32, 2
  %_34 = sub i32 0, %241
  %gen35 = add i32 %_34, 2
  %_36 = shl i32 %241, 2
  %_37 = sub i32 %241, 2
  %gen38 = mul i32 %_37, 2
  %_39 = sub i32 0, %241
  %gen40 = add i32 %_39, 2
  %242 = sdiv i32 %241, 2
  store i32 %242, i32* %collatzVar
  br label %originalBB31

originalBB44alteredBB:                            ; preds = %originalBB44, %169
  %243 = load i32, i32* %collatzVar
  %_45 = sub i32 %36, %243
  %gen46 = mul i32 %_45, %243
  %_47 = sub i32 0, %36
  %gen48 = add i32 %_47, %243
  %_49 = sub i32 %36, %243
  %gen50 = mul i32 %_49, %243
  %_51 = sub i32 %36, %243
  %gen52 = mul i32 %_51, %243
  %244 = add i32 %36, %243
  %245 = icmp slt i32 %244, 2
  br label %originalBB44

originalBB56alteredBB:                            ; preds = %originalBB56, %189
  %246 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !3397
  %247 = call i32 @strcmp(i8* %246, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.110, i64 0, i64 0)) #13, !dbg !3398
  %248 = icmp eq i32 %247, 0, !dbg !3399
  br label %originalBB56

originalBB60alteredBB:                            ; preds = %originalBB60, %212
  %249 = load i1, i1* %2, align 1, !dbg !3403
  br label %originalBB60
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @imaxtostr(i64, i8*) #4 !dbg !3404 {
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !3408, metadata !DIExpression()), !dbg !3409
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3410, metadata !DIExpression()), !dbg !3411
  call void @llvm.dbg.declare(metadata i8** %5, metadata !3412, metadata !DIExpression()), !dbg !3413
  %6 = load i8*, i8** %4, align 8, !dbg !3414
  %7 = getelementptr inbounds i8, i8* %6, i64 20, !dbg !3415
  store i8* %7, i8** %5, align 8, !dbg !3413
  %8 = load i8*, i8** %5, align 8, !dbg !3416
  store i8 0, i8* %8, align 1, !dbg !3417
  %9 = load i64, i64* %3, align 8, !dbg !3418
  %10 = icmp slt i64 %9, 0, !dbg !3420
  br i1 %10, label %11, label %74, !dbg !3421

11:                                               ; preds = %2
  %12 = load i32, i32* @x.53
  %13 = load i32, i32* @y.54
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i32, i32* @x.53
  %21 = load i32, i32* @y.54
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %28, !dbg !3422

28:                                               ; preds = %51, %originalBBpart2
  %29 = load i32, i32* @x.53
  %30 = load i32, i32* @y.54
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = load i64, i64* %3, align 8, !dbg !3424
  %38 = srem i64 %37, 10, !dbg !3425
  %39 = sub nsw i64 48, %38, !dbg !3426
  %40 = trunc i64 %39 to i8, !dbg !3427
  %41 = load i8*, i8** %5, align 8, !dbg !3428
  %42 = getelementptr inbounds i8, i8* %41, i32 -1, !dbg !3428
  store i8* %42, i8** %5, align 8, !dbg !3428
  store i8 %40, i8* %42, align 1, !dbg !3429
  %43 = load i32, i32* @x.53
  %44 = load i32, i32* @y.54
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart212, label %originalBB1alteredBB

originalBBpart212:                                ; preds = %originalBB1
  br label %51, !dbg !3430

51:                                               ; preds = %originalBBpart212
  %52 = load i64, i64* %3, align 8, !dbg !3431
  %53 = sdiv i64 %52, 10, !dbg !3431
  store i64 %53, i64* %3, align 8, !dbg !3431
  %54 = icmp ne i64 %53, 0, !dbg !3432
  br i1 %54, label %28, label %55, !dbg !3430, !llvm.loop !3433

55:                                               ; preds = %51
  %56 = load i32, i32* @x.53
  %57 = load i32, i32* @y.54
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %55, %originalBB14alteredBB
  %64 = load i8*, i8** %5, align 8, !dbg !3435
  %65 = getelementptr inbounds i8, i8* %64, i32 -1, !dbg !3435
  store i8* %65, i8** %5, align 8, !dbg !3435
  store i8 45, i8* %65, align 1, !dbg !3436
  %66 = load i32, i32* @x.53
  %67 = load i32, i32* @y.54
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %119, !dbg !3437

74:                                               ; preds = %2
  br label %75, !dbg !3438

75:                                               ; preds = %originalBBpart248, %74
  %76 = load i32, i32* @x.53
  %77 = load i32, i32* @y.54
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %75, %originalBB18alteredBB
  %84 = load i64, i64* %3, align 8, !dbg !3440
  %85 = srem i64 %84, 10, !dbg !3441
  %86 = add nsw i64 48, %85, !dbg !3442
  %87 = trunc i64 %86 to i8, !dbg !3443
  %88 = load i8*, i8** %5, align 8, !dbg !3444
  %89 = getelementptr inbounds i8, i8* %88, i32 -1, !dbg !3444
  store i8* %89, i8** %5, align 8, !dbg !3444
  store i8 %87, i8* %89, align 1, !dbg !3445
  %90 = load i32, i32* @x.53
  %91 = load i32, i32* @y.54
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart237, label %originalBB18alteredBB

originalBBpart237:                                ; preds = %originalBB18
  br label %98, !dbg !3446

98:                                               ; preds = %originalBBpart237
  %99 = load i32, i32* @x.53
  %100 = load i32, i32* @y.54
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %98, %originalBB39alteredBB
  %107 = load i64, i64* %3, align 8, !dbg !3447
  %108 = sdiv i64 %107, 10, !dbg !3447
  store i64 %108, i64* %3, align 8, !dbg !3447
  %109 = icmp ne i64 %108, 0, !dbg !3448
  %110 = load i32, i32* @x.53
  %111 = load i32, i32* @y.54
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBBpart248, label %originalBB39alteredBB

originalBBpart248:                                ; preds = %originalBB39
  br i1 %109, label %75, label %118, !dbg !3446, !llvm.loop !3449

118:                                              ; preds = %originalBBpart248
  br label %119

119:                                              ; preds = %118, %originalBBpart216
  %120 = load i8*, i8** %5, align 8, !dbg !3451
  ret i8* %120, !dbg !3452

originalBBalteredBB:                              ; preds = %originalBB, %11
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %121 = load i64, i64* %3, align 8, !dbg !3424
  %_ = shl i64 %121, 10
  %_2 = shl i64 %121, 10
  %122 = srem i64 %121, 10, !dbg !3425
  %_3 = sub i64 48, %122
  %gen = mul i64 %_3, %122
  %_4 = sub i64 0, 48
  %gen5 = add i64 %_4, %122
  %_6 = sub i64 48, %122
  %gen7 = mul i64 %_6, %122
  %_8 = shl i64 48, %122
  %_9 = shl i64 48, %122
  %_10 = shl i64 48, %122
  %123 = sub nsw i64 48, %122, !dbg !3426
  %124 = trunc i64 %123 to i8, !dbg !3427
  %125 = load i8*, i8** %5, align 8, !dbg !3428
  %126 = getelementptr inbounds i8, i8* %125, i32 -1, !dbg !3428
  store i8* %126, i8** %5, align 8, !dbg !3428
  store i8 %124, i8* %126, align 1, !dbg !3429
  br label %originalBB1

originalBB14alteredBB:                            ; preds = %originalBB14, %55
  %127 = load i8*, i8** %5, align 8, !dbg !3435
  %128 = getelementptr inbounds i8, i8* %127, i32 -1, !dbg !3435
  store i8* %128, i8** %5, align 8, !dbg !3435
  store i8 45, i8* %128, align 1, !dbg !3436
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %75
  %129 = load i64, i64* %3, align 8, !dbg !3440
  %_19 = shl i64 %129, 10
  %_20 = shl i64 %129, 10
  %_21 = sub i64 0, %129
  %gen22 = add i64 %_21, 10
  %_23 = shl i64 %129, 10
  %_24 = sub i64 0, %129
  %gen25 = add i64 %_24, 10
  %_26 = sub i64 0, %129
  %gen27 = add i64 %_26, 10
  %130 = srem i64 %129, 10, !dbg !3441
  %_28 = sub i64 0, 48
  %gen29 = add i64 %_28, %130
  %_30 = sub i64 48, %130
  %gen31 = mul i64 %_30, %130
  %_32 = sub i64 48, %130
  %gen33 = mul i64 %_32, %130
  %_34 = sub i64 0, 48
  %gen35 = add i64 %_34, %130
  %131 = add nsw i64 48, %130, !dbg !3442
  %132 = trunc i64 %131 to i8, !dbg !3443
  %133 = load i8*, i8** %5, align 8, !dbg !3444
  %134 = getelementptr inbounds i8, i8* %133, i32 -1, !dbg !3444
  store i8* %134, i8** %5, align 8, !dbg !3444
  store i8 %132, i8* %134, align 1, !dbg !3445
  br label %originalBB18

originalBB39alteredBB:                            ; preds = %originalBB39, %98
  %135 = load i64, i64* %3, align 8, !dbg !3447
  %_40 = sub i64 %135, 10
  %gen41 = mul i64 %_40, 10
  %_42 = sub i64 0, %135
  %gen43 = add i64 %_42, 10
  %_44 = shl i64 %135, 10
  %_45 = sub i64 %135, 10
  %gen46 = mul i64 %_45, 10
  %136 = sdiv i64 %135, 10, !dbg !3447
  store i64 %136, i64* %3, align 8, !dbg !3447
  %137 = icmp ne i64 %136, 0, !dbg !3448
  br label %originalBB39
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_program_name(i8*) #4 !dbg !3453 {
  %2 = load i32, i32* @x.55
  %3 = load i32, i32* @y.56
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !3454, metadata !DIExpression()), !dbg !3455
  call void @llvm.dbg.declare(metadata i8** %11, metadata !3456, metadata !DIExpression()), !dbg !3457
  call void @llvm.dbg.declare(metadata i8** %12, metadata !3458, metadata !DIExpression()), !dbg !3459
  %13 = load i8*, i8** %10, align 8, !dbg !3460
  %14 = icmp eq i8* %13, null, !dbg !3462
  %15 = load i32, i32* @x.55
  %16 = load i32, i32* @y.56
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %14, label %23, label %42, !dbg !3463

23:                                               ; preds = %originalBBpart2
  %24 = load i32, i32* @x.55
  %25 = load i32, i32* @y.56
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %23, %originalBB1alteredBB
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3464
  %33 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.115, i64 0, i64 0), %struct._IO_FILE* %32), !dbg !3466
  call void @abort() #12, !dbg !3467
  %34 = load i32, i32* @x.55
  %35 = load i32, i32* @y.56
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable, !dbg !3467

42:                                               ; preds = %originalBBpart2
  %43 = load i32, i32* @x.55
  %44 = load i32, i32* @y.56
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %42, %originalBB6alteredBB
  %51 = load i8*, i8** %10, align 8, !dbg !3468
  %52 = call i8* @strrchr(i8* %51, i32 47) #13, !dbg !3469
  store i8* %52, i8** %11, align 8, !dbg !3470
  %53 = load i8*, i8** %11, align 8, !dbg !3471
  %54 = icmp ne i8* %53, null, !dbg !3472
  %55 = load i32, i32* @x.55
  %56 = load i32, i32* @y.56
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %54, label %63, label %82, !dbg !3471

63:                                               ; preds = %originalBBpart28
  %64 = load i32, i32* @x.55
  %65 = load i32, i32* @y.56
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %63, %originalBB10alteredBB
  %72 = load i8*, i8** %11, align 8, !dbg !3473
  %73 = getelementptr inbounds i8, i8* %72, i64 1, !dbg !3474
  %74 = load i32, i32* @x.55
  %75 = load i32, i32* @y.56
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %100, !dbg !3471

82:                                               ; preds = %originalBBpart28
  %83 = load i32, i32* @x.55
  %84 = load i32, i32* @y.56
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %82, %originalBB14alteredBB
  %91 = load i8*, i8** %10, align 8, !dbg !3475
  %92 = load i32, i32* @x.55
  %93 = load i32, i32* @y.56
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %100, !dbg !3471

100:                                              ; preds = %originalBBpart216, %originalBBpart212
  %101 = phi i8* [ %73, %originalBBpart212 ], [ %91, %originalBBpart216 ], !dbg !3471
  %102 = load i32, i32* @x.55
  %103 = load i32, i32* @y.56
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %100, %originalBB18alteredBB
  store i8* %101, i8** %12, align 8, !dbg !3476
  %110 = load i8*, i8** %12, align 8, !dbg !3477
  %111 = load i8*, i8** %10, align 8, !dbg !3479
  %112 = ptrtoint i8* %110 to i64, !dbg !3480
  %113 = ptrtoint i8* %111 to i64, !dbg !3480
  %114 = sub i64 %112, %113, !dbg !3480
  %115 = icmp sge i64 %114, 7, !dbg !3481
  %116 = load i32, i32* @x.55
  %117 = load i32, i32* @y.56
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %115, label %124, label %171, !dbg !3482

124:                                              ; preds = %originalBBpart220
  %125 = load i32, i32* @x.55
  %126 = load i32, i32* @y.56
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %124, %originalBB22alteredBB
  %133 = load i8*, i8** %12, align 8, !dbg !3483
  %134 = getelementptr inbounds i8, i8* %133, i64 -7, !dbg !3484
  %135 = call i32 @strncmp(i8* %134, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.116, i64 0, i64 0), i64 7) #13, !dbg !3485
  %136 = icmp eq i32 %135, 0, !dbg !3486
  %137 = load i32, i32* @x.55
  %138 = load i32, i32* @y.56
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %136, label %145, label %171, !dbg !3487

145:                                              ; preds = %originalBBpart224
  %146 = load i8*, i8** %12, align 8, !dbg !3488
  store i8* %146, i8** %10, align 8, !dbg !3490
  %147 = load i8*, i8** %12, align 8, !dbg !3491
  %148 = call i32 @strncmp(i8* %147, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.117, i64 0, i64 0), i64 3) #13, !dbg !3493
  %149 = icmp eq i32 %148, 0, !dbg !3494
  br i1 %149, label %150, label %170, !dbg !3495

150:                                              ; preds = %145
  %151 = load i32, i32* @x.55
  %152 = load i32, i32* @y.56
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %150, %originalBB26alteredBB
  %159 = load i8*, i8** %12, align 8, !dbg !3496
  %160 = getelementptr inbounds i8, i8* %159, i64 3, !dbg !3498
  store i8* %160, i8** %10, align 8, !dbg !3499
  %161 = load i8*, i8** %10, align 8, !dbg !3500
  store i8* %161, i8** @program_invocation_short_name, align 8, !dbg !3501
  %162 = load i32, i32* @x.55
  %163 = load i32, i32* @y.56
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %170, !dbg !3502

170:                                              ; preds = %originalBBpart228, %145
  br label %171, !dbg !3503

171:                                              ; preds = %170, %originalBBpart224, %originalBBpart220
  %172 = load i8*, i8** %10, align 8, !dbg !3504
  store i8* %172, i8** @program_name, align 8, !dbg !3505
  %173 = load i8*, i8** %10, align 8, !dbg !3506
  store i8* %173, i8** @program_invocation_name, align 8, !dbg !3507
  ret void, !dbg !3508

originalBBalteredBB:                              ; preds = %originalBB, %1
  %174 = alloca i8*, align 8
  %175 = alloca i8*, align 8
  %176 = alloca i8*, align 8
  store i8* %0, i8** %174, align 8
  call void @llvm.dbg.declare(metadata i8** %174, metadata !3509, metadata !DIExpression()), !dbg !3455
  call void @llvm.dbg.declare(metadata i8** %175, metadata !3515, metadata !DIExpression()), !dbg !3457
  call void @llvm.dbg.declare(metadata i8** %176, metadata !3516, metadata !DIExpression()), !dbg !3459
  %177 = load i8*, i8** %174, align 8, !dbg !3460
  %178 = icmp eq i8* %177, null, !dbg !3462
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %23
  %179 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3464
  %180 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.115, i64 0, i64 0), %struct._IO_FILE* %179), !dbg !3466
  call void @abort() #12, !dbg !3467
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %42
  %181 = load i8*, i8** %10, align 8, !dbg !3468
  %182 = call i8* @strrchr(i8* %181, i32 47) #13, !dbg !3469
  store i8* %182, i8** %11, align 8, !dbg !3470
  %183 = load i8*, i8** %11, align 8, !dbg !3471
  %184 = icmp ne i8* %183, null, !dbg !3472
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %63
  %185 = load i8*, i8** %11, align 8, !dbg !3473
  %186 = getelementptr inbounds i8, i8* %185, i64 1, !dbg !3474
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %82
  %187 = load i8*, i8** %10, align 8, !dbg !3475
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %100
  store i8* %101, i8** %12, align 8, !dbg !3476
  %188 = load i8*, i8** %12, align 8, !dbg !3477
  %189 = load i8*, i8** %10, align 8, !dbg !3479
  %190 = ptrtoint i8* %188 to i64, !dbg !3480
  %191 = ptrtoint i8* %189 to i64, !dbg !3480
  %_ = shl i64 %190, %191
  %192 = sub i64 %190, %191, !dbg !3480
  %193 = icmp sge i64 %192, 7, !dbg !3481
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %124
  %194 = load i8*, i8** %12, align 8, !dbg !3483
  %195 = getelementptr inbounds i8, i8* %194, i64 -7, !dbg !3484
  %196 = call i32 @strncmp(i8* %195, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.116, i64 0, i64 0), i64 7) #13, !dbg !3485
  %197 = icmp eq i32 %196, 0, !dbg !3486
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %150
  %198 = load i8*, i8** %12, align 8, !dbg !3496
  %199 = getelementptr inbounds i8, i8* %198, i64 3, !dbg !3498
  store i8* %199, i8** %10, align 8, !dbg !3499
  %200 = load i8*, i8** %10, align 8, !dbg !3500
  store i8* %200, i8** @program_invocation_short_name, align 8, !dbg !3501
  br label %originalBB26
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #5

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_char_quoting(%struct.quoting_options*, i8 signext, i32) #4 !dbg !3517 {
  %4 = alloca %struct.quoting_options*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %4, metadata !3521, metadata !DIExpression()), !dbg !3522
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !3523, metadata !DIExpression()), !dbg !3524
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3525, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.declare(metadata i8* %7, metadata !3527, metadata !DIExpression()), !dbg !3528
  %11 = load i8, i8* %5, align 1, !dbg !3529
  store i8 %11, i8* %7, align 1, !dbg !3528
  call void @llvm.dbg.declare(metadata i32** %8, metadata !3530, metadata !DIExpression()), !dbg !3532
  %12 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !3533
  %13 = icmp ne %struct.quoting_options* %12, null, !dbg !3533
  br i1 %13, label %14, label %32, !dbg !3533

14:                                               ; preds = %3
  %15 = load i32, i32* @x.57
  %16 = load i32, i32* @y.58
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !3534
  %24 = load i32, i32* @x.57
  %25 = load i32, i32* @y.58
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %33, !dbg !3533

32:                                               ; preds = %3
  br label %33, !dbg !3533

33:                                               ; preds = %32, %originalBBpart2
  %34 = phi %struct.quoting_options* [ %23, %originalBBpart2 ], [ @default_quoting_options, %32 ], !dbg !3533
  %35 = load i32, i32* @x.57
  %36 = load i32, i32* @y.58
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %33, %originalBB1alteredBB
  %43 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %34, i32 0, i32 2, !dbg !3535
  %44 = getelementptr inbounds [8 x i32], [8 x i32]* %43, i64 0, i64 0, !dbg !3536
  %45 = load i8, i8* %7, align 1, !dbg !3537
  %46 = zext i8 %45 to i64, !dbg !3537
  %47 = udiv i64 %46, 32, !dbg !3538
  %48 = getelementptr inbounds i32, i32* %44, i64 %47, !dbg !3539
  store i32* %48, i32** %8, align 8, !dbg !3532
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3540, metadata !DIExpression()), !dbg !3541
  %49 = load i8, i8* %7, align 1, !dbg !3542
  %50 = zext i8 %49 to i64, !dbg !3542
  %51 = urem i64 %50, 32, !dbg !3543
  %52 = trunc i64 %51 to i32, !dbg !3542
  store i32 %52, i32* %9, align 4, !dbg !3541
  call void @llvm.dbg.declare(metadata i32* %10, metadata !3544, metadata !DIExpression()), !dbg !3545
  %53 = load i32*, i32** %8, align 8, !dbg !3546
  %54 = load i32, i32* %53, align 4, !dbg !3547
  %55 = load i32, i32* %9, align 4, !dbg !3548
  %56 = lshr i32 %54, %55, !dbg !3549
  %57 = and i32 %56, 1, !dbg !3550
  store i32 %57, i32* %10, align 4, !dbg !3545
  %58 = load i32, i32* %6, align 4, !dbg !3551
  %59 = and i32 %58, 1, !dbg !3552
  %60 = load i32, i32* %10, align 4, !dbg !3553
  %61 = xor i32 %59, %60, !dbg !3554
  %62 = load i32, i32* %9, align 4, !dbg !3555
  %63 = shl i32 %61, %62, !dbg !3556
  %64 = load i32*, i32** %8, align 8, !dbg !3557
  %65 = load i32, i32* %64, align 4, !dbg !3558
  %66 = xor i32 %65, %63, !dbg !3558
  store i32 %66, i32* %64, align 4, !dbg !3558
  %67 = load i32, i32* %10, align 4, !dbg !3559
  %68 = load i32, i32* @x.57
  %69 = load i32, i32* @y.58
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart244, label %originalBB1alteredBB

originalBBpart244:                                ; preds = %originalBB1
  ret i32 %67, !dbg !3560

originalBBalteredBB:                              ; preds = %originalBB, %14
  %76 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !3534
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %33
  %77 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %34, i32 0, i32 2, !dbg !3535
  %78 = getelementptr inbounds [8 x i32], [8 x i32]* %77, i64 0, i64 0, !dbg !3536
  %79 = load i8, i8* %7, align 1, !dbg !3537
  %80 = zext i8 %79 to i64, !dbg !3537
  %_ = shl i64 %80, 32
  %_2 = sub i64 0, %80
  %gen = add i64 %_2, 32
  %81 = udiv i64 %80, 32, !dbg !3538
  %82 = getelementptr inbounds i32, i32* %78, i64 %81, !dbg !3539
  store i32* %82, i32** %8, align 8, !dbg !3532
  call void @llvm.dbg.declare(metadata !4, metadata !3561, metadata !DIExpression()), !dbg !3541
  %83 = load i8, i8* %7, align 1, !dbg !3542
  %84 = zext i8 %83 to i64, !dbg !3542
  %_3 = sub i64 0, %84
  %gen4 = add i64 %_3, 32
  %_5 = shl i64 %84, 32
  %_6 = shl i64 %84, 32
  %_7 = sub i64 0, %84
  %gen8 = add i64 %_7, 32
  %85 = urem i64 %84, 32, !dbg !3543
  %86 = trunc i64 %85 to i32, !dbg !3542
  store i32 %86, i32* %9, align 4, !dbg !3541
  call void @llvm.dbg.declare(metadata !4, metadata !3596, metadata !DIExpression()), !dbg !3545
  %87 = load i32*, i32** %8, align 8, !dbg !3546
  %88 = load i32, i32* %87, align 4, !dbg !3547
  %89 = load i32, i32* %9, align 4, !dbg !3548
  %_9 = sub i32 %88, %89
  %gen10 = mul i32 %_9, %89
  %_11 = sub i32 0, %88
  %gen12 = add i32 %_11, %89
  %_13 = shl i32 %88, %89
  %_14 = sub i32 %88, %89
  %gen15 = mul i32 %_14, %89
  %_16 = shl i32 %88, %89
  %_17 = sub i32 %88, %89
  %gen18 = mul i32 %_17, %89
  %90 = lshr i32 %88, %89, !dbg !3549
  %_19 = sub i32 %90, 1
  %gen20 = mul i32 %_19, 1
  %_21 = sub i32 %90, 1
  %gen22 = mul i32 %_21, 1
  %_23 = sub i32 0, %90
  %gen24 = add i32 %_23, 1
  %_25 = sub i32 0, %90
  %gen26 = add i32 %_25, 1
  %91 = and i32 %90, 1, !dbg !3550
  store i32 %91, i32* %10, align 4, !dbg !3545
  %92 = load i32, i32* %6, align 4, !dbg !3551
  %_27 = sub i32 %92, 1
  %gen28 = mul i32 %_27, 1
  %93 = and i32 %92, 1, !dbg !3552
  %94 = load i32, i32* %10, align 4, !dbg !3553
  %_29 = shl i32 %93, %94
  %_30 = sub i32 0, %93
  %gen31 = add i32 %_30, %94
  %95 = xor i32 %93, %94, !dbg !3554
  %96 = load i32, i32* %9, align 4, !dbg !3555
  %_32 = sub i32 0, %95
  %gen33 = add i32 %_32, %96
  %97 = shl i32 %95, %96, !dbg !3556
  %98 = load i32*, i32** %8, align 8, !dbg !3557
  %99 = load i32, i32* %98, align 4, !dbg !3558
  %_34 = sub i32 0, %99
  %gen35 = add i32 %_34, %97
  %_36 = sub i32 0, %99
  %gen37 = add i32 %_36, %97
  %_38 = sub i32 %99, %97
  %gen39 = mul i32 %_38, %97
  %_40 = shl i32 %99, %97
  %_41 = sub i32 %99, %97
  %gen42 = mul i32 %_41, %97
  %100 = xor i32 %99, %97, !dbg !3558
  store i32 %100, i32* %98, align 4, !dbg !3558
  %101 = load i32, i32* %10, align 4, !dbg !3559
  br label %originalBB1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char_mem(i8*, i64, i8 signext) #4 !dbg !3597 {
  %4 = load i32, i32* @x.59
  %5 = load i32, i32* @y.60
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8, align 1
  %15 = alloca %struct.quoting_options, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !3600, metadata !DIExpression()), !dbg !3601
  store i64 %1, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !3602, metadata !DIExpression()), !dbg !3603
  store i8 %2, i8* %14, align 1
  call void @llvm.dbg.declare(metadata i8* %14, metadata !3604, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %15, metadata !3606, metadata !DIExpression()), !dbg !3607
  %16 = bitcast %struct.quoting_options* %15 to i8*, !dbg !3608
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !3608
  %17 = load i8, i8* %14, align 1, !dbg !3609
  %18 = call i32 @set_char_quoting(%struct.quoting_options* %15, i8 signext %17, i32 1), !dbg !3610
  %19 = load i8*, i8** %12, align 8, !dbg !3611
  %20 = load i64, i64* %13, align 8, !dbg !3612
  %21 = call i8* @quotearg_n_options(i32 0, i8* %19, i64 %20, %struct.quoting_options* %15), !dbg !3613
  %22 = load i32, i32* @x.59
  %23 = load i32, i32* @y.60
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %21, !dbg !3614

originalBBalteredBB:                              ; preds = %originalBB, %3
  %30 = alloca i8*, align 8
  %31 = alloca i64, align 8
  %32 = alloca i8, align 1
  %33 = alloca %struct.quoting_options, align 8
  store i8* %0, i8** %30, align 8
  call void @llvm.dbg.declare(metadata i8** %30, metadata !3615, metadata !DIExpression()), !dbg !3601
  store i64 %1, i64* %31, align 8
  call void @llvm.dbg.declare(metadata i64* %31, metadata !3647, metadata !DIExpression()), !dbg !3603
  store i8 %2, i8* %32, align 1
  call void @llvm.dbg.declare(metadata i8* %32, metadata !3648, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %33, metadata !3649, metadata !DIExpression()), !dbg !3607
  %34 = bitcast %struct.quoting_options* %33 to i8*, !dbg !3608
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !3608
  %35 = load i8, i8* %32, align 1, !dbg !3609
  %36 = call i32 @set_char_quoting(%struct.quoting_options* %33, i8 signext %35, i32 1), !dbg !3610
  %37 = load i8*, i8** %30, align 8, !dbg !3611
  %38 = load i64, i64* %31, align 8, !dbg !3612
  %39 = call i8* @quotearg_n_options(i32 0, i8* %37, i64 %38, %struct.quoting_options* %33), !dbg !3613
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32, i8*, i64, %struct.quoting_options*) #4 !dbg !3650 {
  %5 = load i32, i32* @x.61
  %6 = load i32, i32* @y.62
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca %struct.quoting_options*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct.slotvec*, align 8
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i64, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i32, align 4
  %24 = alloca i64, align 8
  store i32 %0, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !3655, metadata !DIExpression()), !dbg !3656
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !3657, metadata !DIExpression()), !dbg !3658
  store i64 %2, i64* %15, align 8
  call void @llvm.dbg.declare(metadata i64* %15, metadata !3659, metadata !DIExpression()), !dbg !3660
  store %struct.quoting_options* %3, %struct.quoting_options** %16, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %16, metadata !3661, metadata !DIExpression()), !dbg !3662
  call void @llvm.dbg.declare(metadata i32* %17, metadata !3663, metadata !DIExpression()), !dbg !3664
  %25 = call i32* @__errno_location() #15, !dbg !3665
  %26 = load i32, i32* %25, align 4, !dbg !3665
  store i32 %26, i32* %17, align 4, !dbg !3664
  call void @llvm.dbg.declare(metadata %struct.slotvec** %18, metadata !3666, metadata !DIExpression()), !dbg !3667
  %27 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !3668
  store %struct.slotvec* %27, %struct.slotvec** %18, align 8, !dbg !3667
  %28 = load i32, i32* %13, align 4, !dbg !3669
  %29 = icmp slt i32 %28, 0, !dbg !3671
  %30 = load i32, i32* @x.61
  %31 = load i32, i32* @y.62
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %29, label %38, label %55, !dbg !3672

38:                                               ; preds = %originalBBpart2
  %39 = load i32, i32* @x.61
  %40 = load i32, i32* @y.62
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %38, %originalBB1alteredBB
  call void @abort() #12, !dbg !3673
  %47 = load i32, i32* @x.61
  %48 = load i32, i32* @y.62
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable, !dbg !3673

55:                                               ; preds = %originalBBpart2
  %56 = load i32, i32* @x.61
  %57 = load i32, i32* @y.62
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %55, %originalBB6alteredBB
  %64 = load i32, i32* @nslots, align 4, !dbg !3674
  %65 = load i32, i32* %13, align 4, !dbg !3676
  %66 = icmp sle i32 %64, %65, !dbg !3677
  %67 = load i32, i32* @x.61
  %68 = load i32, i32* @y.62
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %66, label %75, label %197, !dbg !3678

75:                                               ; preds = %originalBBpart28
  call void @llvm.dbg.declare(metadata i8* %19, metadata !3679, metadata !DIExpression()), !dbg !3681
  %76 = load i32, i32* @x.61
  %77 = load i32, i32* @y.62
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %75, %originalBB10alteredBB
  %84 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3682
  %85 = icmp eq %struct.slotvec* %84, @slotvec0, !dbg !3683
  %86 = zext i1 %85 to i8, !dbg !3681
  store i8 %86, i8* %19, align 1, !dbg !3681
  call void @llvm.dbg.declare(metadata i32* %20, metadata !3684, metadata !DIExpression()), !dbg !3685
  store i32 2147483646, i32* %20, align 4, !dbg !3685
  %87 = load i32, i32* %20, align 4, !dbg !3686
  %88 = load i32, i32* %13, align 4, !dbg !3688
  %89 = icmp slt i32 %87, %88, !dbg !3689
  %90 = load i32, i32* @x.61
  %91 = load i32, i32* @y.62
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %89, label %98, label %115, !dbg !3690

98:                                               ; preds = %originalBBpart212
  %99 = load i32, i32* @x.61
  %100 = load i32, i32* @y.62
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %98, %originalBB14alteredBB
  call void @xalloc_die() #14, !dbg !3691
  %107 = load i32, i32* @x.61
  %108 = load i32, i32* @y.62
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  unreachable, !dbg !3691

115:                                              ; preds = %originalBBpart212
  %116 = load i32, i32* @x.61
  %117 = load i32, i32* @y.62
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %115, %originalBB18alteredBB
  %124 = load i8, i8* %19, align 1, !dbg !3692
  %125 = trunc i8 %124 to i1, !dbg !3692
  %126 = load i32, i32* @x.61
  %127 = load i32, i32* @y.62
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %125, label %134, label %151, !dbg !3692

134:                                              ; preds = %originalBBpart220
  %135 = load i32, i32* @x.61
  %136 = load i32, i32* @y.62
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %134, %originalBB22alteredBB
  %143 = load i32, i32* @x.61
  %144 = load i32, i32* @y.62
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %169, !dbg !3692

151:                                              ; preds = %originalBBpart220
  %152 = load i32, i32* @x.61
  %153 = load i32, i32* @y.62
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %151, %originalBB26alteredBB
  %160 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3693
  %161 = load i32, i32* @x.61
  %162 = load i32, i32* @y.62
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %169, !dbg !3692

169:                                              ; preds = %originalBBpart228, %originalBBpart224
  %170 = phi %struct.slotvec* [ null, %originalBBpart224 ], [ %160, %originalBBpart228 ], !dbg !3692
  %171 = bitcast %struct.slotvec* %170 to i8*, !dbg !3692
  %172 = load i32, i32* %13, align 4, !dbg !3694
  %173 = add nsw i32 %172, 1, !dbg !3695
  %174 = sext i32 %173 to i64, !dbg !3696
  %175 = mul i64 %174, 16, !dbg !3697
  %176 = call i8* @xrealloc(i8* %171, i64 %175), !dbg !3698
  %177 = bitcast i8* %176 to %struct.slotvec*, !dbg !3698
  store %struct.slotvec* %177, %struct.slotvec** %18, align 8, !dbg !3699
  store %struct.slotvec* %177, %struct.slotvec** @slotvec, align 8, !dbg !3700
  %178 = load i8, i8* %19, align 1, !dbg !3701
  %179 = trunc i8 %178 to i1, !dbg !3701
  br i1 %179, label %180, label %183, !dbg !3703

180:                                              ; preds = %169
  %181 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3704
  %182 = bitcast %struct.slotvec* %181 to i8*, !dbg !3705
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %182, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !3705
  br label %183, !dbg !3706

183:                                              ; preds = %180, %169
  %184 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3707
  %185 = load i32, i32* @nslots, align 4, !dbg !3708
  %186 = sext i32 %185 to i64, !dbg !3709
  %187 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %184, i64 %186, !dbg !3709
  %188 = bitcast %struct.slotvec* %187 to i8*, !dbg !3710
  %189 = load i32, i32* %13, align 4, !dbg !3711
  %190 = add nsw i32 %189, 1, !dbg !3712
  %191 = load i32, i32* @nslots, align 4, !dbg !3713
  %192 = sub nsw i32 %190, %191, !dbg !3714
  %193 = sext i32 %192 to i64, !dbg !3715
  %194 = mul i64 %193, 16, !dbg !3716
  call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 %194, i1 false), !dbg !3710
  %195 = load i32, i32* %13, align 4, !dbg !3717
  %196 = add nsw i32 %195, 1, !dbg !3718
  store i32 %196, i32* @nslots, align 4, !dbg !3719
  br label %197, !dbg !3720

197:                                              ; preds = %183, %originalBBpart28
  call void @llvm.dbg.declare(metadata i64* %21, metadata !3721, metadata !DIExpression()), !dbg !3723
  %198 = load i32, i32* @x.61
  %199 = load i32, i32* @y.62
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %197, %originalBB30alteredBB
  %206 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3724
  %207 = load i32, i32* %13, align 4, !dbg !3725
  %208 = sext i32 %207 to i64, !dbg !3724
  %209 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %206, i64 %208, !dbg !3724
  %210 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %209, i32 0, i32 0, !dbg !3726
  %211 = load i64, i64* %210, align 8, !dbg !3726
  store i64 %211, i64* %21, align 8, !dbg !3723
  call void @llvm.dbg.declare(metadata i8** %22, metadata !3727, metadata !DIExpression()), !dbg !3728
  %212 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3729
  %213 = load i32, i32* %13, align 4, !dbg !3730
  %214 = sext i32 %213 to i64, !dbg !3729
  %215 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %212, i64 %214, !dbg !3729
  %216 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %215, i32 0, i32 1, !dbg !3731
  %217 = load i8*, i8** %216, align 8, !dbg !3731
  store i8* %217, i8** %22, align 8, !dbg !3728
  call void @llvm.dbg.declare(metadata i32* %23, metadata !3732, metadata !DIExpression()), !dbg !3733
  %218 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3734
  %219 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %218, i32 0, i32 1, !dbg !3735
  %220 = load i32, i32* %219, align 4, !dbg !3735
  %221 = or i32 %220, 1, !dbg !3736
  store i32 %221, i32* %23, align 4, !dbg !3733
  call void @llvm.dbg.declare(metadata i64* %24, metadata !3737, metadata !DIExpression()), !dbg !3738
  %222 = load i8*, i8** %22, align 8, !dbg !3739
  %223 = load i64, i64* %21, align 8, !dbg !3740
  %224 = load i8*, i8** %14, align 8, !dbg !3741
  %225 = load i64, i64* %15, align 8, !dbg !3742
  %226 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3743
  %227 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %226, i32 0, i32 0, !dbg !3744
  %228 = load i32, i32* %227, align 8, !dbg !3744
  %229 = load i32, i32* %23, align 4, !dbg !3745
  %230 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3746
  %231 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %230, i32 0, i32 2, !dbg !3747
  %232 = getelementptr inbounds [8 x i32], [8 x i32]* %231, i64 0, i64 0, !dbg !3746
  %233 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3748
  %234 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %233, i32 0, i32 3, !dbg !3749
  %235 = load i8*, i8** %234, align 8, !dbg !3749
  %236 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3750
  %237 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %236, i32 0, i32 4, !dbg !3751
  %238 = load i8*, i8** %237, align 8, !dbg !3751
  %239 = call i64 @quotearg_buffer_restyled(i8* %222, i64 %223, i8* %224, i64 %225, i32 %228, i32 %229, i32* %232, i8* %235, i8* %238), !dbg !3752
  store i64 %239, i64* %24, align 8, !dbg !3738
  %240 = load i64, i64* %21, align 8, !dbg !3753
  %241 = load i64, i64* %24, align 8, !dbg !3755
  %242 = icmp ule i64 %240, %241, !dbg !3756
  %243 = load i32, i32* @x.61
  %244 = load i32, i32* @y.62
  %245 = sub i32 %243, 1
  %246 = mul i32 %243, %245
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %248, %249
  br i1 %250, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %242, label %251, label %305, !dbg !3757

251:                                              ; preds = %originalBBpart232
  %252 = load i32, i32* @x.61
  %253 = load i32, i32* @y.62
  %254 = sub i32 %252, 1
  %255 = mul i32 %252, %254
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %257, %258
  br i1 %259, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %251, %originalBB34alteredBB
  %260 = load i64, i64* %24, align 8, !dbg !3758
  %261 = add i64 %260, 1, !dbg !3760
  store i64 %261, i64* %21, align 8, !dbg !3761
  %262 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3762
  %263 = load i32, i32* %13, align 4, !dbg !3763
  %264 = sext i32 %263 to i64, !dbg !3762
  %265 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %262, i64 %264, !dbg !3762
  %266 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %265, i32 0, i32 0, !dbg !3764
  store i64 %261, i64* %266, align 8, !dbg !3765
  %267 = load i8*, i8** %22, align 8, !dbg !3766
  %268 = icmp ne i8* %267, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !3768
  %269 = load i32, i32* @x.61
  %270 = load i32, i32* @y.62
  %271 = sub i32 %269, 1
  %272 = mul i32 %269, %271
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %274, %275
  br i1 %276, label %originalBBpart237, label %originalBB34alteredBB

originalBBpart237:                                ; preds = %originalBB34
  br i1 %268, label %277, label %279, !dbg !3769

277:                                              ; preds = %originalBBpart237
  %278 = load i8*, i8** %22, align 8, !dbg !3770
  call void @free(i8* %278) #10, !dbg !3771
  br label %279, !dbg !3771

279:                                              ; preds = %277, %originalBBpart237
  %280 = load i64, i64* %21, align 8, !dbg !3772
  %281 = call noalias i8* @xcharalloc(i64 %280), !dbg !3773
  store i8* %281, i8** %22, align 8, !dbg !3774
  %282 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3775
  %283 = load i32, i32* %13, align 4, !dbg !3776
  %284 = sext i32 %283 to i64, !dbg !3775
  %285 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %282, i64 %284, !dbg !3775
  %286 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %285, i32 0, i32 1, !dbg !3777
  store i8* %281, i8** %286, align 8, !dbg !3778
  %287 = load i8*, i8** %22, align 8, !dbg !3779
  %288 = load i64, i64* %21, align 8, !dbg !3780
  %289 = load i8*, i8** %14, align 8, !dbg !3781
  %290 = load i64, i64* %15, align 8, !dbg !3782
  %291 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3783
  %292 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %291, i32 0, i32 0, !dbg !3784
  %293 = load i32, i32* %292, align 8, !dbg !3784
  %294 = load i32, i32* %23, align 4, !dbg !3785
  %295 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3786
  %296 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %295, i32 0, i32 2, !dbg !3787
  %297 = getelementptr inbounds [8 x i32], [8 x i32]* %296, i64 0, i64 0, !dbg !3786
  %298 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3788
  %299 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %298, i32 0, i32 3, !dbg !3789
  %300 = load i8*, i8** %299, align 8, !dbg !3789
  %301 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3790
  %302 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %301, i32 0, i32 4, !dbg !3791
  %303 = load i8*, i8** %302, align 8, !dbg !3791
  %304 = call i64 @quotearg_buffer_restyled(i8* %287, i64 %288, i8* %289, i64 %290, i32 %293, i32 %294, i32* %297, i8* %300, i8* %303), !dbg !3792
  br label %305, !dbg !3793

305:                                              ; preds = %279, %originalBBpart232
  %306 = load i32, i32* %17, align 4, !dbg !3794
  %307 = call i32* @__errno_location() #15, !dbg !3795
  store i32 %306, i32* %307, align 4, !dbg !3796
  %308 = load i8*, i8** %22, align 8, !dbg !3797
  ret i8* %308, !dbg !3798

originalBBalteredBB:                              ; preds = %originalBB, %4
  %309 = alloca i32, align 4
  %310 = alloca i8*, align 8
  %311 = alloca i64, align 8
  %312 = alloca %struct.quoting_options*, align 8
  %313 = alloca i32, align 4
  %314 = alloca %struct.slotvec*, align 8
  %315 = alloca i8, align 1
  %316 = alloca i32, align 4
  %317 = alloca i64, align 8
  %318 = alloca i8*, align 8
  %319 = alloca i32, align 4
  %320 = alloca i64, align 8
  store i32 %0, i32* %309, align 4
  call void @llvm.dbg.declare(metadata i32* %309, metadata !3799, metadata !DIExpression()), !dbg !3656
  store i8* %1, i8** %310, align 8
  call void @llvm.dbg.declare(metadata i8** %310, metadata !3835, metadata !DIExpression()), !dbg !3658
  store i64 %2, i64* %311, align 8
  call void @llvm.dbg.declare(metadata i64* %311, metadata !3836, metadata !DIExpression()), !dbg !3660
  store %struct.quoting_options* %3, %struct.quoting_options** %312, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %312, metadata !3837, metadata !DIExpression()), !dbg !3662
  call void @llvm.dbg.declare(metadata i32* %313, metadata !3838, metadata !DIExpression()), !dbg !3664
  %321 = call i32* @__errno_location() #15, !dbg !3665
  %322 = load i32, i32* %321, align 4, !dbg !3665
  store i32 %322, i32* %313, align 4, !dbg !3664
  call void @llvm.dbg.declare(metadata %struct.slotvec** %314, metadata !3839, metadata !DIExpression()), !dbg !3667
  %323 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !3668
  store %struct.slotvec* %323, %struct.slotvec** %314, align 8, !dbg !3667
  %324 = load i32, i32* %309, align 4, !dbg !3669
  %325 = icmp slt i32 %324, 0, !dbg !3671
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %38
  call void @abort() #12, !dbg !3673
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %55
  %326 = load i32, i32* @nslots, align 4, !dbg !3674
  %327 = load i32, i32* %13, align 4, !dbg !3676
  %328 = icmp sle i32 %326, %327, !dbg !3677
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %75
  %329 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3682
  %330 = icmp eq %struct.slotvec* %329, @slotvec0, !dbg !3683
  %331 = zext i1 %330 to i8, !dbg !3681
  store i8 %331, i8* %19, align 1, !dbg !3681
  call void @llvm.dbg.declare(metadata !4, metadata !3840, metadata !DIExpression()), !dbg !3685
  store i32 2147483646, i32* %20, align 4, !dbg !3685
  %332 = load i32, i32* %20, align 4, !dbg !3686
  %333 = load i32, i32* %13, align 4, !dbg !3688
  %334 = icmp slt i32 %332, %333, !dbg !3689
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %98
  call void @xalloc_die() #14, !dbg !3691
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %115
  %335 = load i8, i8* %19, align 1, !dbg !3692
  %336 = trunc i8 %335 to i1, !dbg !3692
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %134
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %151
  %337 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3693
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %197
  %338 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3724
  %339 = load i32, i32* %13, align 4, !dbg !3725
  %340 = sext i32 %339 to i64, !dbg !3724
  %341 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %338, i64 %340, !dbg !3724
  %342 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %341, i32 0, i32 0, !dbg !3726
  %343 = load i64, i64* %342, align 8, !dbg !3726
  store i64 %343, i64* %21, align 8, !dbg !3723
  call void @llvm.dbg.declare(metadata !4, metadata !3878, metadata !DIExpression()), !dbg !3728
  %344 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3729
  %345 = load i32, i32* %13, align 4, !dbg !3730
  %346 = sext i32 %345 to i64, !dbg !3729
  %347 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %344, i64 %346, !dbg !3729
  %348 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %347, i32 0, i32 1, !dbg !3731
  %349 = load i8*, i8** %348, align 8, !dbg !3731
  store i8* %349, i8** %22, align 8, !dbg !3728
  call void @llvm.dbg.declare(metadata !4, metadata !3915, metadata !DIExpression()), !dbg !3733
  %350 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3734
  %351 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %350, i32 0, i32 1, !dbg !3735
  %352 = load i32, i32* %351, align 4, !dbg !3735
  %_ = sub i32 %352, 1
  %gen = mul i32 %_, 1
  %353 = or i32 %352, 1, !dbg !3736
  store i32 %353, i32* %23, align 4, !dbg !3733
  call void @llvm.dbg.declare(metadata !4, metadata !3916, metadata !DIExpression()), !dbg !3738
  %354 = load i8*, i8** %22, align 8, !dbg !3739
  %355 = load i64, i64* %21, align 8, !dbg !3740
  %356 = load i8*, i8** %14, align 8, !dbg !3741
  %357 = load i64, i64* %15, align 8, !dbg !3742
  %358 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3743
  %359 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %358, i32 0, i32 0, !dbg !3744
  %360 = load i32, i32* %359, align 8, !dbg !3744
  %361 = load i32, i32* %23, align 4, !dbg !3745
  %362 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3746
  %363 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %362, i32 0, i32 2, !dbg !3747
  %364 = getelementptr inbounds [8 x i32], [8 x i32]* %363, i64 0, i64 0, !dbg !3746
  %365 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3748
  %366 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %365, i32 0, i32 3, !dbg !3749
  %367 = load i8*, i8** %366, align 8, !dbg !3749
  %368 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3750
  %369 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %368, i32 0, i32 4, !dbg !3751
  %370 = load i8*, i8** %369, align 8, !dbg !3751
  %371 = call i64 @quotearg_buffer_restyled(i8* %354, i64 %355, i8* %356, i64 %357, i32 %360, i32 %361, i32* %364, i8* %367, i8* %370), !dbg !3752
  store i64 %371, i64* %24, align 8, !dbg !3738
  %372 = load i64, i64* %21, align 8, !dbg !3753
  %373 = load i64, i64* %24, align 8, !dbg !3755
  %374 = icmp ule i64 %372, %373, !dbg !3756
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %251
  %375 = load i64, i64* %24, align 8, !dbg !3758
  %_35 = shl i64 %375, 1
  %376 = add i64 %375, 1, !dbg !3760
  store i64 %376, i64* %21, align 8, !dbg !3761
  %377 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3762
  %378 = load i32, i32* %13, align 4, !dbg !3763
  %379 = sext i32 %378 to i64, !dbg !3762
  %380 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %377, i64 %379, !dbg !3762
  %381 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %380, i32 0, i32 0, !dbg !3764
  store i64 %376, i64* %381, align 8, !dbg !3765
  %382 = load i8*, i8** %22, align 8, !dbg !3766
  %383 = icmp ne i8* %382, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !3768
  br label %originalBB34
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8*, i64, i8*, i64, i32, i32, i32*, i8*, i8*) #4 !dbg !3917 {
  %10 = load i32, i32* @x.63
  %11 = load i32, i32* @y.64
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  %18 = alloca i64, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i64, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca i64, align 8
  %31 = alloca i8*, align 8
  %32 = alloca i64, align 8
  %33 = alloca i8, align 1
  %34 = alloca i8, align 1
  %35 = alloca i8, align 1
  %36 = alloca i8, align 1
  %37 = alloca i8, align 1
  %38 = alloca i8, align 1
  %39 = alloca i8, align 1
  %40 = alloca i8, align 1
  %41 = alloca i8, align 1
  %42 = alloca i8, align 1
  %43 = alloca i8, align 1
  %44 = alloca i64, align 8
  %45 = alloca i8, align 1
  %46 = alloca %struct.__mbstate_t, align 4
  %47 = alloca i32, align 4
  %48 = alloca i64, align 8
  %49 = alloca i64, align 8
  %50 = alloca i64, align 8
  store i8* %0, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !3922, metadata !DIExpression()), !dbg !3923
  store i64 %1, i64* %20, align 8
  call void @llvm.dbg.declare(metadata i64* %20, metadata !3924, metadata !DIExpression()), !dbg !3925
  store i8* %2, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !3926, metadata !DIExpression()), !dbg !3927
  store i64 %3, i64* %22, align 8
  call void @llvm.dbg.declare(metadata i64* %22, metadata !3928, metadata !DIExpression()), !dbg !3929
  store i32 %4, i32* %23, align 4
  call void @llvm.dbg.declare(metadata i32* %23, metadata !3930, metadata !DIExpression()), !dbg !3931
  store i32 %5, i32* %24, align 4
  call void @llvm.dbg.declare(metadata i32* %24, metadata !3932, metadata !DIExpression()), !dbg !3933
  store i32* %6, i32** %25, align 8
  call void @llvm.dbg.declare(metadata i32** %25, metadata !3934, metadata !DIExpression()), !dbg !3935
  store i8* %7, i8** %26, align 8
  call void @llvm.dbg.declare(metadata i8** %26, metadata !3936, metadata !DIExpression()), !dbg !3937
  store i8* %8, i8** %27, align 8
  call void @llvm.dbg.declare(metadata i8** %27, metadata !3938, metadata !DIExpression()), !dbg !3939
  call void @llvm.dbg.declare(metadata i64* %28, metadata !3940, metadata !DIExpression()), !dbg !3941
  call void @llvm.dbg.declare(metadata i64* %29, metadata !3942, metadata !DIExpression()), !dbg !3943
  store i64 0, i64* %29, align 8, !dbg !3943
  call void @llvm.dbg.declare(metadata i64* %30, metadata !3944, metadata !DIExpression()), !dbg !3945
  store i64 0, i64* %30, align 8, !dbg !3945
  call void @llvm.dbg.declare(metadata i8** %31, metadata !3946, metadata !DIExpression()), !dbg !3947
  store i8* null, i8** %31, align 8, !dbg !3947
  call void @llvm.dbg.declare(metadata i64* %32, metadata !3948, metadata !DIExpression()), !dbg !3949
  store i64 0, i64* %32, align 8, !dbg !3949
  call void @llvm.dbg.declare(metadata i8* %33, metadata !3950, metadata !DIExpression()), !dbg !3951
  store i8 0, i8* %33, align 1, !dbg !3951
  call void @llvm.dbg.declare(metadata i8* %34, metadata !3952, metadata !DIExpression()), !dbg !3953
  %51 = call i64 @__ctype_get_mb_cur_max() #10, !dbg !3954
  %52 = icmp eq i64 %51, 1, !dbg !3955
  %53 = zext i1 %52 to i8, !dbg !3953
  store i8 %53, i8* %34, align 1, !dbg !3953
  call void @llvm.dbg.declare(metadata i8* %35, metadata !3956, metadata !DIExpression()), !dbg !3957
  %54 = load i32, i32* %24, align 4, !dbg !3958
  %55 = and i32 %54, 2, !dbg !3959
  %56 = icmp ne i32 %55, 0, !dbg !3960
  %57 = zext i1 %56 to i8, !dbg !3957
  store i8 %57, i8* %35, align 1, !dbg !3957
  call void @llvm.dbg.declare(metadata i8* %36, metadata !3961, metadata !DIExpression()), !dbg !3962
  store i8 0, i8* %36, align 1, !dbg !3962
  call void @llvm.dbg.declare(metadata i8* %37, metadata !3963, metadata !DIExpression()), !dbg !3964
  store i8 0, i8* %37, align 1, !dbg !3964
  call void @llvm.dbg.declare(metadata i8* %38, metadata !3965, metadata !DIExpression()), !dbg !3966
  store i8 1, i8* %38, align 1, !dbg !3966
  %58 = load i32, i32* @x.63
  %59 = load i32, i32* @y.64
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %66, !dbg !3967

66:                                               ; preds = %4674, %originalBBpart2
  call void @llvm.dbg.label(metadata !3968), !dbg !3969
  %67 = load i32, i32* @x.63
  %68 = load i32, i32* @y.64
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB5, label %originalBB5alteredBB

originalBB5:                                      ; preds = %66, %originalBB5alteredBB
  %75 = load i32, i32* %23, align 4, !dbg !3970
  %76 = load i32, i32* @x.63
  %77 = load i32, i32* @y.64
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart27, label %originalBB5alteredBB

originalBBpart27:                                 ; preds = %originalBB5
  switch i32 %75, label %536 [
    i32 6, label %84
    i32 5, label %101
    i32 7, label %182
    i32 8, label %199
    i32 9, label %199
    i32 10, label %199
    i32 3, label %399
    i32 1, label %400
    i32 4, label %401
    i32 2, label %454
    i32 0, label %519
  ], !dbg !3971

84:                                               ; preds = %originalBBpart27
  %85 = load i32, i32* @x.63
  %86 = load i32, i32* @y.64
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB9, label %originalBB9alteredBB

originalBB9:                                      ; preds = %84, %originalBB9alteredBB
  store i32 5, i32* %23, align 4, !dbg !3972
  store i8 1, i8* %35, align 1, !dbg !3974
  %93 = load i32, i32* @x.63
  %94 = load i32, i32* @y.64
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart211, label %originalBB9alteredBB

originalBBpart211:                                ; preds = %originalBB9
  br label %101, !dbg !3975

101:                                              ; preds = %originalBBpart211, %originalBBpart27
  %102 = load i8, i8* %35, align 1, !dbg !3976
  %103 = trunc i8 %102 to i1, !dbg !3976
  br i1 %103, label %181, label %104, !dbg !3978

104:                                              ; preds = %101
  %105 = load i32, i32* @x.63
  %106 = load i32, i32* @y.64
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %104, %originalBB13alteredBB
  %113 = load i32, i32* @x.63
  %114 = load i32, i32* @y.64
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  br label %121, !dbg !3979

121:                                              ; preds = %originalBBpart215
  %122 = load i32, i32* @x.63
  %123 = load i32, i32* @y.64
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %121, %originalBB17alteredBB
  %130 = load i64, i64* %29, align 8, !dbg !3980
  %131 = load i64, i64* %20, align 8, !dbg !3980
  %132 = icmp ult i64 %130, %131, !dbg !3980
  %133 = load i32, i32* @x.63
  %134 = load i32, i32* @y.64
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  br i1 %132, label %141, label %161, !dbg !3983

141:                                              ; preds = %originalBBpart219
  %142 = load i32, i32* @x.63
  %143 = load i32, i32* @y.64
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %141, %originalBB21alteredBB
  %150 = load i8*, i8** %19, align 8, !dbg !3980
  %151 = load i64, i64* %29, align 8, !dbg !3980
  %152 = getelementptr inbounds i8, i8* %150, i64 %151, !dbg !3980
  store i8 34, i8* %152, align 1, !dbg !3980
  %153 = load i32, i32* @x.63
  %154 = load i32, i32* @y.64
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  br label %161, !dbg !3980

161:                                              ; preds = %originalBBpart223, %originalBBpart219
  %162 = load i64, i64* %29, align 8, !dbg !3983
  %163 = add i64 %162, 1, !dbg !3983
  store i64 %163, i64* %29, align 8, !dbg !3983
  br label %164, !dbg !3983

164:                                              ; preds = %161
  %165 = load i32, i32* @x.63
  %166 = load i32, i32* @y.64
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %164, %originalBB25alteredBB
  %173 = load i32, i32* @x.63
  %174 = load i32, i32* @y.64
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  br label %181, !dbg !3983

181:                                              ; preds = %originalBBpart227, %101
  store i8 1, i8* %33, align 1, !dbg !3984
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.120, i64 0, i64 0), i8** %31, align 8, !dbg !3985
  store i64 1, i64* %32, align 8, !dbg !3986
  br label %537, !dbg !3987

182:                                              ; preds = %originalBBpart27
  %183 = load i32, i32* @x.63
  %184 = load i32, i32* @y.64
  %185 = sub i32 %183, 1
  %186 = mul i32 %183, %185
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %188, %189
  br i1 %190, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %182, %originalBB29alteredBB
  store i8 1, i8* %33, align 1, !dbg !3988
  store i8 0, i8* %35, align 1, !dbg !3989
  %191 = load i32, i32* @x.63
  %192 = load i32, i32* @y.64
  %193 = sub i32 %191, 1
  %194 = mul i32 %191, %193
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %196, %197
  br i1 %198, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br label %537, !dbg !3990

199:                                              ; preds = %originalBBpart27, %originalBBpart27, %originalBBpart27
  %200 = load i32, i32* %23, align 4, !dbg !3991
  %201 = icmp ne i32 %200, 10, !dbg !3994
  br i1 %201, label %202, label %223, !dbg !3995

202:                                              ; preds = %199
  %203 = load i32, i32* @x.63
  %204 = load i32, i32* @y.64
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %202, %originalBB33alteredBB
  %211 = load i32, i32* %23, align 4, !dbg !3996
  %212 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.121, i64 0, i64 0), i32 %211), !dbg !3998
  store i8* %212, i8** %26, align 8, !dbg !3999
  %213 = load i32, i32* %23, align 4, !dbg !4000
  %214 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.122, i64 0, i64 0), i32 %213), !dbg !4001
  store i8* %214, i8** %27, align 8, !dbg !4002
  %215 = load i32, i32* @x.63
  %216 = load i32, i32* @y.64
  %217 = sub i32 %215, 1
  %218 = mul i32 %215, %217
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %220, %221
  br i1 %222, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br label %223, !dbg !4003

223:                                              ; preds = %originalBBpart235, %199
  %224 = load i32, i32* @x.63
  %225 = load i32, i32* @y.64
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %223, %originalBB37alteredBB
  %232 = load i8, i8* %35, align 1, !dbg !4004
  %233 = trunc i8 %232 to i1, !dbg !4004
  %234 = load i32, i32* @x.63
  %235 = load i32, i32* @y.64
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br i1 %233, label %379, label %242, !dbg !4006

242:                                              ; preds = %originalBBpart239
  %243 = load i32, i32* @x.63
  %244 = load i32, i32* @y.64
  %245 = sub i32 %243, 1
  %246 = mul i32 %243, %245
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %248, %249
  br i1 %250, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %242, %originalBB41alteredBB
  %251 = load i8*, i8** %26, align 8, !dbg !4007
  store i8* %251, i8** %31, align 8, !dbg !4009
  %252 = load i32, i32* @x.63
  %253 = load i32, i32* @y.64
  %254 = sub i32 %252, 1
  %255 = mul i32 %252, %254
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %257, %258
  br i1 %259, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  br label %260, !dbg !4010

260:                                              ; preds = %originalBBpart263, %originalBBpart243
  %261 = load i8*, i8** %31, align 8, !dbg !4011
  %262 = load i8, i8* %261, align 1, !dbg !4013
  %263 = icmp ne i8 %262, 0, !dbg !4014
  br i1 %263, label %264, label %362, !dbg !4014

264:                                              ; preds = %260
  %265 = load i32, i32* @x.63
  %266 = load i32, i32* @y.64
  %267 = sub i32 %265, 1
  %268 = mul i32 %265, %267
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %270, %271
  br i1 %272, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %264, %originalBB45alteredBB
  %273 = load i32, i32* @x.63
  %274 = load i32, i32* @y.64
  %275 = sub i32 %273, 1
  %276 = mul i32 %273, %275
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %278, %279
  br i1 %280, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  br label %281, !dbg !4015

281:                                              ; preds = %originalBBpart247
  %282 = load i32, i32* @x.63
  %283 = load i32, i32* @y.64
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %281, %originalBB49alteredBB
  %290 = load i64, i64* %29, align 8, !dbg !4016
  %291 = load i64, i64* %20, align 8, !dbg !4016
  %292 = icmp ult i64 %290, %291, !dbg !4016
  %293 = load i32, i32* @x.63
  %294 = load i32, i32* @y.64
  %295 = sub i32 %293, 1
  %296 = mul i32 %293, %295
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %298, %299
  br i1 %300, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  br i1 %292, label %301, label %323, !dbg !4019

301:                                              ; preds = %originalBBpart251
  %302 = load i32, i32* @x.63
  %303 = load i32, i32* @y.64
  %304 = sub i32 %302, 1
  %305 = mul i32 %302, %304
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %303, 10
  %309 = or i1 %307, %308
  br i1 %309, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %301, %originalBB53alteredBB
  %310 = load i8*, i8** %31, align 8, !dbg !4016
  %311 = load i8, i8* %310, align 1, !dbg !4016
  %312 = load i8*, i8** %19, align 8, !dbg !4016
  %313 = load i64, i64* %29, align 8, !dbg !4016
  %314 = getelementptr inbounds i8, i8* %312, i64 %313, !dbg !4016
  store i8 %311, i8* %314, align 1, !dbg !4016
  %315 = load i32, i32* @x.63
  %316 = load i32, i32* @y.64
  %317 = sub i32 %315, 1
  %318 = mul i32 %315, %317
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %320, %321
  br i1 %322, label %originalBBpart255, label %originalBB53alteredBB

originalBBpart255:                                ; preds = %originalBB53
  br label %323, !dbg !4016

323:                                              ; preds = %originalBBpart255, %originalBBpart251
  %324 = load i64, i64* %29, align 8, !dbg !4019
  %325 = add i64 %324, 1, !dbg !4019
  store i64 %325, i64* %29, align 8, !dbg !4019
  br label %326, !dbg !4019

326:                                              ; preds = %323
  %327 = load i32, i32* @x.63
  %328 = load i32, i32* @y.64
  %329 = sub i32 %327, 1
  %330 = mul i32 %327, %329
  %331 = urem i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %332, %333
  br i1 %334, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %326, %originalBB57alteredBB
  %335 = load i32, i32* @x.63
  %336 = load i32, i32* @y.64
  %337 = sub i32 %335, 1
  %338 = mul i32 %335, %337
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %340, %341
  br i1 %342, label %originalBBpart259, label %originalBB57alteredBB

originalBBpart259:                                ; preds = %originalBB57
  br label %343, !dbg !4019

343:                                              ; preds = %originalBBpart259
  %344 = load i32, i32* @x.63
  %345 = load i32, i32* @y.64
  %346 = sub i32 %344, 1
  %347 = mul i32 %344, %346
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %349, %350
  br i1 %351, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %343, %originalBB61alteredBB
  %352 = load i8*, i8** %31, align 8, !dbg !4020
  %353 = getelementptr inbounds i8, i8* %352, i32 1, !dbg !4020
  store i8* %353, i8** %31, align 8, !dbg !4020
  %354 = load i32, i32* @x.63
  %355 = load i32, i32* @y.64
  %356 = sub i32 %354, 1
  %357 = mul i32 %354, %356
  %358 = urem i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %359, %360
  br i1 %361, label %originalBBpart263, label %originalBB61alteredBB

originalBBpart263:                                ; preds = %originalBB61
  br label %260, !dbg !4021, !llvm.loop !4022

362:                                              ; preds = %260
  %363 = load i32, i32* @x.63
  %364 = load i32, i32* @y.64
  %365 = sub i32 %363, 1
  %366 = mul i32 %363, %365
  %367 = urem i32 %366, 2
  %368 = icmp eq i32 %367, 0
  %369 = icmp slt i32 %364, 10
  %370 = or i1 %368, %369
  br i1 %370, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %362, %originalBB65alteredBB
  %371 = load i32, i32* @x.63
  %372 = load i32, i32* @y.64
  %373 = sub i32 %371, 1
  %374 = mul i32 %371, %373
  %375 = urem i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %372, 10
  %378 = or i1 %376, %377
  br i1 %378, label %originalBBpart267, label %originalBB65alteredBB

originalBBpart267:                                ; preds = %originalBB65
  br label %379, !dbg !4023

379:                                              ; preds = %originalBBpart267, %originalBBpart239
  %380 = load i32, i32* @x.63
  %381 = load i32, i32* @y.64
  %382 = sub i32 %380, 1
  %383 = mul i32 %380, %382
  %384 = urem i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %381, 10
  %387 = or i1 %385, %386
  br i1 %387, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %379, %originalBB69alteredBB
  store i8 1, i8* %33, align 1, !dbg !4024
  %388 = load i8*, i8** %27, align 8, !dbg !4025
  store i8* %388, i8** %31, align 8, !dbg !4026
  %389 = load i8*, i8** %31, align 8, !dbg !4027
  %390 = call i64 @strlen(i8* %389) #13, !dbg !4028
  store i64 %390, i64* %32, align 8, !dbg !4029
  %391 = load i32, i32* @x.63
  %392 = load i32, i32* @y.64
  %393 = sub i32 %391, 1
  %394 = mul i32 %391, %393
  %395 = urem i32 %394, 2
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %392, 10
  %398 = or i1 %396, %397
  br i1 %398, label %originalBBpart271, label %originalBB69alteredBB

originalBBpart271:                                ; preds = %originalBB69
  br label %537, !dbg !4030

399:                                              ; preds = %originalBBpart27
  store i8 1, i8* %33, align 1, !dbg !4031
  br label %400, !dbg !4032

400:                                              ; preds = %399, %originalBBpart27
  store i8 1, i8* %35, align 1, !dbg !4033
  br label %401, !dbg !4034

401:                                              ; preds = %400, %originalBBpart27
  %402 = load i32, i32* @x.63
  %403 = load i32, i32* @y.64
  %404 = sub i32 %402, 1
  %405 = mul i32 %402, %404
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %407, %408
  br i1 %409, label %originalBB73, label %originalBB73alteredBB

originalBB73:                                     ; preds = %401, %originalBB73alteredBB
  %410 = load i8, i8* %35, align 1, !dbg !4035
  %411 = trunc i8 %410 to i1, !dbg !4035
  %412 = load i32, i32* @x.63
  %413 = load i32, i32* @y.64
  %414 = sub i32 %412, 1
  %415 = mul i32 %412, %414
  %416 = urem i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %413, 10
  %419 = or i1 %417, %418
  br i1 %419, label %originalBBpart275, label %originalBB73alteredBB

originalBBpart275:                                ; preds = %originalBB73
  br i1 %411, label %437, label %420, !dbg !4037

420:                                              ; preds = %originalBBpart275
  %421 = load i32, i32* @x.63
  %422 = load i32, i32* @y.64
  %423 = sub i32 %421, 1
  %424 = mul i32 %421, %423
  %425 = urem i32 %424, 2
  %426 = icmp eq i32 %425, 0
  %427 = icmp slt i32 %422, 10
  %428 = or i1 %426, %427
  br i1 %428, label %originalBB77, label %originalBB77alteredBB

originalBB77:                                     ; preds = %420, %originalBB77alteredBB
  store i8 1, i8* %33, align 1, !dbg !4038
  %429 = load i32, i32* @x.63
  %430 = load i32, i32* @y.64
  %431 = sub i32 %429, 1
  %432 = mul i32 %429, %431
  %433 = urem i32 %432, 2
  %434 = icmp eq i32 %433, 0
  %435 = icmp slt i32 %430, 10
  %436 = or i1 %434, %435
  br i1 %436, label %originalBBpart279, label %originalBB77alteredBB

originalBBpart279:                                ; preds = %originalBB77
  br label %437, !dbg !4039

437:                                              ; preds = %originalBBpart279, %originalBBpart275
  %438 = load i32, i32* @x.63
  %439 = load i32, i32* @y.64
  %440 = sub i32 %438, 1
  %441 = mul i32 %438, %440
  %442 = urem i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %443, %444
  br i1 %445, label %originalBB81, label %originalBB81alteredBB

originalBB81:                                     ; preds = %437, %originalBB81alteredBB
  %446 = load i32, i32* @x.63
  %447 = load i32, i32* @y.64
  %448 = sub i32 %446, 1
  %449 = mul i32 %446, %448
  %450 = urem i32 %449, 2
  %451 = icmp eq i32 %450, 0
  %452 = icmp slt i32 %447, 10
  %453 = or i1 %451, %452
  br i1 %453, label %originalBBpart283, label %originalBB81alteredBB

originalBBpart283:                                ; preds = %originalBB81
  br label %454, !dbg !4040

454:                                              ; preds = %originalBBpart283, %originalBBpart27
  store i32 2, i32* %23, align 4, !dbg !4041
  %455 = load i8, i8* %35, align 1, !dbg !4042
  %456 = trunc i8 %455 to i1, !dbg !4042
  br i1 %456, label %502, label %457, !dbg !4044

457:                                              ; preds = %454
  br label %458, !dbg !4045

458:                                              ; preds = %457
  %459 = load i64, i64* %29, align 8, !dbg !4046
  %460 = load i64, i64* %20, align 8, !dbg !4046
  %461 = icmp ult i64 %459, %460, !dbg !4046
  br i1 %461, label %462, label %482, !dbg !4049

462:                                              ; preds = %458
  %463 = load i32, i32* @x.63
  %464 = load i32, i32* @y.64
  %465 = sub i32 %463, 1
  %466 = mul i32 %463, %465
  %467 = urem i32 %466, 2
  %468 = icmp eq i32 %467, 0
  %469 = icmp slt i32 %464, 10
  %470 = or i1 %468, %469
  br i1 %470, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %462, %originalBB85alteredBB
  %471 = load i8*, i8** %19, align 8, !dbg !4046
  %472 = load i64, i64* %29, align 8, !dbg !4046
  %473 = getelementptr inbounds i8, i8* %471, i64 %472, !dbg !4046
  store i8 39, i8* %473, align 1, !dbg !4046
  %474 = load i32, i32* @x.63
  %475 = load i32, i32* @y.64
  %476 = sub i32 %474, 1
  %477 = mul i32 %474, %476
  %478 = urem i32 %477, 2
  %479 = icmp eq i32 %478, 0
  %480 = icmp slt i32 %475, 10
  %481 = or i1 %479, %480
  br i1 %481, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  br label %482, !dbg !4046

482:                                              ; preds = %originalBBpart287, %458
  %483 = load i32, i32* @x.63
  %484 = load i32, i32* @y.64
  %485 = sub i32 %483, 1
  %486 = mul i32 %483, %485
  %487 = urem i32 %486, 2
  %488 = icmp eq i32 %487, 0
  %489 = icmp slt i32 %484, 10
  %490 = or i1 %488, %489
  br i1 %490, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %482, %originalBB89alteredBB
  %491 = load i64, i64* %29, align 8, !dbg !4049
  %492 = add i64 %491, 1, !dbg !4049
  store i64 %492, i64* %29, align 8, !dbg !4049
  %493 = load i32, i32* @x.63
  %494 = load i32, i32* @y.64
  %495 = sub i32 %493, 1
  %496 = mul i32 %493, %495
  %497 = urem i32 %496, 2
  %498 = icmp eq i32 %497, 0
  %499 = icmp slt i32 %494, 10
  %500 = or i1 %498, %499
  br i1 %500, label %originalBBpart2102, label %originalBB89alteredBB

originalBBpart2102:                               ; preds = %originalBB89
  br label %501, !dbg !4049

501:                                              ; preds = %originalBBpart2102
  br label %502, !dbg !4049

502:                                              ; preds = %501, %454
  %503 = load i32, i32* @x.63
  %504 = load i32, i32* @y.64
  %505 = sub i32 %503, 1
  %506 = mul i32 %503, %505
  %507 = urem i32 %506, 2
  %508 = icmp eq i32 %507, 0
  %509 = icmp slt i32 %504, 10
  %510 = or i1 %508, %509
  br i1 %510, label %originalBB104, label %originalBB104alteredBB

originalBB104:                                    ; preds = %502, %originalBB104alteredBB
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.122, i64 0, i64 0), i8** %31, align 8, !dbg !4050
  store i64 1, i64* %32, align 8, !dbg !4051
  %511 = load i32, i32* @x.63
  %512 = load i32, i32* @y.64
  %513 = sub i32 %511, 1
  %514 = mul i32 %511, %513
  %515 = urem i32 %514, 2
  %516 = icmp eq i32 %515, 0
  %517 = icmp slt i32 %512, 10
  %518 = or i1 %516, %517
  br i1 %518, label %originalBBpart2106, label %originalBB104alteredBB

originalBBpart2106:                               ; preds = %originalBB104
  br label %537, !dbg !4052

519:                                              ; preds = %originalBBpart27
  %520 = load i32, i32* @x.63
  %521 = load i32, i32* @y.64
  %522 = sub i32 %520, 1
  %523 = mul i32 %520, %522
  %524 = urem i32 %523, 2
  %525 = icmp eq i32 %524, 0
  %526 = icmp slt i32 %521, 10
  %527 = or i1 %525, %526
  br i1 %527, label %originalBB108, label %originalBB108alteredBB

originalBB108:                                    ; preds = %519, %originalBB108alteredBB
  store i8 0, i8* %35, align 1, !dbg !4053
  %528 = load i32, i32* @x.63
  %529 = load i32, i32* @y.64
  %530 = sub i32 %528, 1
  %531 = mul i32 %528, %530
  %532 = urem i32 %531, 2
  %533 = icmp eq i32 %532, 0
  %534 = icmp slt i32 %529, 10
  %535 = or i1 %533, %534
  br i1 %535, label %originalBBpart2110, label %originalBB108alteredBB

originalBBpart2110:                               ; preds = %originalBB108
  br label %537, !dbg !4054

536:                                              ; preds = %originalBBpart27
  call void @abort() #12, !dbg !4055
  unreachable, !dbg !4055

537:                                              ; preds = %originalBBpart2110, %originalBBpart2106, %originalBBpart271, %originalBBpart231, %181
  store i64 0, i64* %28, align 8, !dbg !4056
  br label %538, !dbg !4058

538:                                              ; preds = %4553, %537
  %539 = load i32, i32* @x.63
  %540 = load i32, i32* @y.64
  %541 = sub i32 %539, 1
  %542 = mul i32 %539, %541
  %543 = urem i32 %542, 2
  %544 = icmp eq i32 %543, 0
  %545 = icmp slt i32 %540, 10
  %546 = or i1 %544, %545
  br i1 %546, label %originalBB112, label %originalBB112alteredBB

originalBB112:                                    ; preds = %538, %originalBB112alteredBB
  %547 = load i64, i64* %22, align 8, !dbg !4059
  %548 = icmp eq i64 %547, -1, !dbg !4061
  %549 = load i32, i32* @x.63
  %550 = load i32, i32* @y.64
  %551 = sub i32 %549, 1
  %552 = mul i32 %549, %551
  %553 = urem i32 %552, 2
  %554 = icmp eq i32 %553, 0
  %555 = icmp slt i32 %550, 10
  %556 = or i1 %554, %555
  br i1 %556, label %originalBBpart2114, label %originalBB112alteredBB

originalBBpart2114:                               ; preds = %originalBB112
  br i1 %548, label %557, label %581, !dbg !4059

557:                                              ; preds = %originalBBpart2114
  %558 = load i32, i32* @x.63
  %559 = load i32, i32* @y.64
  %560 = sub i32 %558, 1
  %561 = mul i32 %558, %560
  %562 = urem i32 %561, 2
  %563 = icmp eq i32 %562, 0
  %564 = icmp slt i32 %559, 10
  %565 = or i1 %563, %564
  br i1 %565, label %originalBB116, label %originalBB116alteredBB

originalBB116:                                    ; preds = %557, %originalBB116alteredBB
  %566 = load i8*, i8** %21, align 8, !dbg !4062
  %567 = load i64, i64* %28, align 8, !dbg !4063
  %568 = getelementptr inbounds i8, i8* %566, i64 %567, !dbg !4062
  %569 = load i8, i8* %568, align 1, !dbg !4062
  %570 = sext i8 %569 to i32, !dbg !4062
  %571 = icmp eq i32 %570, 0, !dbg !4064
  %572 = zext i1 %571 to i32, !dbg !4064
  %573 = load i32, i32* @x.63
  %574 = load i32, i32* @y.64
  %575 = sub i32 %573, 1
  %576 = mul i32 %573, %575
  %577 = urem i32 %576, 2
  %578 = icmp eq i32 %577, 0
  %579 = icmp slt i32 %574, 10
  %580 = or i1 %578, %579
  br i1 %580, label %originalBBpart2118, label %originalBB116alteredBB

originalBBpart2118:                               ; preds = %originalBB116
  br label %586, !dbg !4059

581:                                              ; preds = %originalBBpart2114
  %582 = load i64, i64* %28, align 8, !dbg !4065
  %583 = load i64, i64* %22, align 8, !dbg !4066
  %584 = icmp eq i64 %582, %583, !dbg !4067
  %585 = zext i1 %584 to i32, !dbg !4067
  br label %586, !dbg !4059

586:                                              ; preds = %581, %originalBBpart2118
  %587 = phi i32 [ %572, %originalBBpart2118 ], [ %585, %581 ], !dbg !4059
  %588 = load i32, i32* @x.63
  %589 = load i32, i32* @y.64
  %590 = sub i32 %588, 1
  %591 = mul i32 %588, %590
  %592 = urem i32 %591, 2
  %593 = icmp eq i32 %592, 0
  %594 = icmp slt i32 %589, 10
  %595 = or i1 %593, %594
  br i1 %595, label %originalBB120, label %originalBB120alteredBB

originalBB120:                                    ; preds = %586, %originalBB120alteredBB
  %596 = icmp ne i32 %587, 0, !dbg !4068
  %597 = xor i1 %596, true, !dbg !4068
  %598 = load i32, i32* @x.63
  %599 = load i32, i32* @y.64
  %600 = sub i32 %598, 1
  %601 = mul i32 %598, %600
  %602 = urem i32 %601, 2
  %603 = icmp eq i32 %602, 0
  %604 = icmp slt i32 %599, 10
  %605 = or i1 %603, %604
  br i1 %605, label %originalBBpart2126, label %originalBB120alteredBB

originalBBpart2126:                               ; preds = %originalBB120
  br i1 %597, label %606, label %4556, !dbg !4069

606:                                              ; preds = %originalBBpart2126
  call void @llvm.dbg.declare(metadata i8* %39, metadata !4070, metadata !DIExpression()), !dbg !4072
  call void @llvm.dbg.declare(metadata i8* %40, metadata !4073, metadata !DIExpression()), !dbg !4074
  call void @llvm.dbg.declare(metadata i8* %41, metadata !4075, metadata !DIExpression()), !dbg !4076
  %607 = load i32, i32* @x.63
  %608 = load i32, i32* @y.64
  %609 = sub i32 %607, 1
  %610 = mul i32 %607, %609
  %611 = urem i32 %610, 2
  %612 = icmp eq i32 %611, 0
  %613 = icmp slt i32 %608, 10
  %614 = or i1 %612, %613
  br i1 %614, label %originalBB128, label %originalBB128alteredBB

originalBB128:                                    ; preds = %606, %originalBB128alteredBB
  store i8 0, i8* %41, align 1, !dbg !4076
  call void @llvm.dbg.declare(metadata i8* %42, metadata !4077, metadata !DIExpression()), !dbg !4078
  store i8 0, i8* %42, align 1, !dbg !4078
  call void @llvm.dbg.declare(metadata i8* %43, metadata !4079, metadata !DIExpression()), !dbg !4080
  store i8 0, i8* %43, align 1, !dbg !4080
  %615 = load i8, i8* %33, align 1, !dbg !4081
  %616 = trunc i8 %615 to i1, !dbg !4081
  %617 = load i32, i32* @x.63
  %618 = load i32, i32* @y.64
  %619 = sub i32 %617, 1
  %620 = mul i32 %617, %619
  %621 = urem i32 %620, 2
  %622 = icmp eq i32 %621, 0
  %623 = icmp slt i32 %618, 10
  %624 = or i1 %622, %623
  br i1 %624, label %originalBBpart2130, label %originalBB128alteredBB

originalBBpart2130:                               ; preds = %originalBB128
  br i1 %616, label %625, label %821, !dbg !4083

625:                                              ; preds = %originalBBpart2130
  %626 = load i32, i32* @x.63
  %627 = load i32, i32* @y.64
  %628 = sub i32 %626, 1
  %629 = mul i32 %626, %628
  %630 = urem i32 %629, 2
  %631 = icmp eq i32 %630, 0
  %632 = icmp slt i32 %627, 10
  %633 = or i1 %631, %632
  br i1 %633, label %originalBB132, label %originalBB132alteredBB

originalBB132:                                    ; preds = %625, %originalBB132alteredBB
  %634 = load i32, i32* %23, align 4, !dbg !4084
  %635 = icmp ne i32 %634, 2, !dbg !4085
  %636 = load i32, i32* @x.63
  %637 = load i32, i32* @y.64
  %638 = sub i32 %636, 1
  %639 = mul i32 %636, %638
  %640 = urem i32 %639, 2
  %641 = icmp eq i32 %640, 0
  %642 = icmp slt i32 %637, 10
  %643 = or i1 %641, %642
  br i1 %643, label %originalBBpart2134, label %originalBB132alteredBB

originalBBpart2134:                               ; preds = %originalBB132
  br i1 %635, label %644, label %821, !dbg !4086

644:                                              ; preds = %originalBBpart2134
  %645 = load i32, i32* @x.63
  %646 = load i32, i32* @y.64
  %647 = sub i32 %645, 1
  %648 = mul i32 %645, %647
  %649 = urem i32 %648, 2
  %650 = icmp eq i32 %649, 0
  %651 = icmp slt i32 %646, 10
  %652 = or i1 %650, %651
  br i1 %652, label %originalBB136, label %originalBB136alteredBB

originalBB136:                                    ; preds = %644, %originalBB136alteredBB
  %653 = load i64, i64* %32, align 8, !dbg !4087
  %654 = icmp ne i64 %653, 0, !dbg !4087
  %655 = load i32, i32* @x.63
  %656 = load i32, i32* @y.64
  %657 = sub i32 %655, 1
  %658 = mul i32 %655, %657
  %659 = urem i32 %658, 2
  %660 = icmp eq i32 %659, 0
  %661 = icmp slt i32 %656, 10
  %662 = or i1 %660, %661
  br i1 %662, label %originalBBpart2138, label %originalBB136alteredBB

originalBBpart2138:                               ; preds = %originalBB136
  br i1 %654, label %663, label %821, !dbg !4088

663:                                              ; preds = %originalBBpart2138
  %664 = load i32, i32* @x.63
  %665 = load i32, i32* @y.64
  %666 = sub i32 %664, 1
  %667 = mul i32 %664, %666
  %668 = urem i32 %667, 2
  %669 = icmp eq i32 %668, 0
  %670 = icmp slt i32 %665, 10
  %671 = or i1 %669, %670
  br i1 %671, label %originalBB140, label %originalBB140alteredBB

originalBB140:                                    ; preds = %663, %originalBB140alteredBB
  %672 = load i64, i64* %28, align 8, !dbg !4089
  %673 = load i64, i64* %32, align 8, !dbg !4090
  %674 = add i64 %672, %673, !dbg !4091
  %675 = load i64, i64* %22, align 8, !dbg !4092
  %676 = icmp eq i64 %675, -1, !dbg !4093
  %677 = load i32, i32* @x.63
  %678 = load i32, i32* @y.64
  %679 = sub i32 %677, 1
  %680 = mul i32 %677, %679
  %681 = urem i32 %680, 2
  %682 = icmp eq i32 %681, 0
  %683 = icmp slt i32 %678, 10
  %684 = or i1 %682, %683
  br i1 %684, label %originalBBpart2151, label %originalBB140alteredBB

originalBBpart2151:                               ; preds = %originalBB140
  br i1 %676, label %685, label %723, !dbg !4094

685:                                              ; preds = %originalBBpart2151
  %686 = load i32, i32* @x.63
  %687 = load i32, i32* @y.64
  %688 = sub i32 %686, 1
  %689 = mul i32 %686, %688
  %690 = urem i32 %689, 2
  %691 = icmp eq i32 %690, 0
  %692 = icmp slt i32 %687, 10
  %693 = or i1 %691, %692
  br i1 %693, label %originalBB153, label %originalBB153alteredBB

originalBB153:                                    ; preds = %685, %originalBB153alteredBB
  %694 = load i64, i64* %32, align 8, !dbg !4095
  %695 = icmp ult i64 1, %694, !dbg !4096
  %696 = load i32, i32* @x.63
  %697 = load i32, i32* @y.64
  %698 = sub i32 %696, 1
  %699 = mul i32 %696, %698
  %700 = urem i32 %699, 2
  %701 = icmp eq i32 %700, 0
  %702 = icmp slt i32 %697, 10
  %703 = or i1 %701, %702
  br i1 %703, label %originalBBpart2155, label %originalBB153alteredBB

originalBBpart2155:                               ; preds = %originalBB153
  br i1 %695, label %704, label %723, !dbg !4092

704:                                              ; preds = %originalBBpart2155
  %705 = load i32, i32* @x.63
  %706 = load i32, i32* @y.64
  %707 = sub i32 %705, 1
  %708 = mul i32 %705, %707
  %709 = urem i32 %708, 2
  %710 = icmp eq i32 %709, 0
  %711 = icmp slt i32 %706, 10
  %712 = or i1 %710, %711
  br i1 %712, label %originalBB157, label %originalBB157alteredBB

originalBB157:                                    ; preds = %704, %originalBB157alteredBB
  %713 = load i8*, i8** %21, align 8, !dbg !4097
  %714 = call i64 @strlen(i8* %713) #13, !dbg !4098
  store i64 %714, i64* %22, align 8, !dbg !4099
  %715 = load i32, i32* @x.63
  %716 = load i32, i32* @y.64
  %717 = sub i32 %715, 1
  %718 = mul i32 %715, %717
  %719 = urem i32 %718, 2
  %720 = icmp eq i32 %719, 0
  %721 = icmp slt i32 %716, 10
  %722 = or i1 %720, %721
  br i1 %722, label %originalBBpart2159, label %originalBB157alteredBB

originalBBpart2159:                               ; preds = %originalBB157
  br label %741, !dbg !4092

723:                                              ; preds = %originalBBpart2155, %originalBBpart2151
  %724 = load i32, i32* @x.63
  %725 = load i32, i32* @y.64
  %726 = sub i32 %724, 1
  %727 = mul i32 %724, %726
  %728 = urem i32 %727, 2
  %729 = icmp eq i32 %728, 0
  %730 = icmp slt i32 %725, 10
  %731 = or i1 %729, %730
  br i1 %731, label %originalBB161, label %originalBB161alteredBB

originalBB161:                                    ; preds = %723, %originalBB161alteredBB
  %732 = load i64, i64* %22, align 8, !dbg !4100
  %733 = load i32, i32* @x.63
  %734 = load i32, i32* @y.64
  %735 = sub i32 %733, 1
  %736 = mul i32 %733, %735
  %737 = urem i32 %736, 2
  %738 = icmp eq i32 %737, 0
  %739 = icmp slt i32 %734, 10
  %740 = or i1 %738, %739
  br i1 %740, label %originalBBpart2163, label %originalBB161alteredBB

originalBBpart2163:                               ; preds = %originalBB161
  br label %741, !dbg !4092

741:                                              ; preds = %originalBBpart2163, %originalBBpart2159
  %742 = phi i64 [ %714, %originalBBpart2159 ], [ %732, %originalBBpart2163 ], !dbg !4092
  %743 = load i32, i32* @x.63
  %744 = load i32, i32* @y.64
  %745 = sub i32 %743, 1
  %746 = mul i32 %743, %745
  %747 = urem i32 %746, 2
  %748 = icmp eq i32 %747, 0
  %749 = icmp slt i32 %744, 10
  %750 = or i1 %748, %749
  br i1 %750, label %originalBB165, label %originalBB165alteredBB

originalBB165:                                    ; preds = %741, %originalBB165alteredBB
  %751 = icmp ule i64 %674, %742, !dbg !4101
  %752 = load i32, i32* @x.63
  %753 = load i32, i32* @y.64
  %754 = sub i32 %752, 1
  %755 = mul i32 %752, %754
  %756 = urem i32 %755, 2
  %757 = icmp eq i32 %756, 0
  %758 = icmp slt i32 %753, 10
  %759 = or i1 %757, %758
  br i1 %759, label %originalBBpart2167, label %originalBB165alteredBB

originalBBpart2167:                               ; preds = %originalBB165
  br i1 %751, label %760, label %821, !dbg !4102

760:                                              ; preds = %originalBBpart2167
  %761 = load i32, i32* @x.63
  %762 = load i32, i32* @y.64
  %763 = sub i32 %761, 1
  %764 = mul i32 %761, %763
  %765 = urem i32 %764, 2
  %766 = icmp eq i32 %765, 0
  %767 = icmp slt i32 %762, 10
  %768 = or i1 %766, %767
  br i1 %768, label %originalBB169, label %originalBB169alteredBB

originalBB169:                                    ; preds = %760, %originalBB169alteredBB
  %769 = load i8*, i8** %21, align 8, !dbg !4103
  %770 = load i64, i64* %28, align 8, !dbg !4104
  %771 = getelementptr inbounds i8, i8* %769, i64 %770, !dbg !4105
  %772 = load i8*, i8** %31, align 8, !dbg !4106
  %773 = load i64, i64* %32, align 8, !dbg !4107
  %774 = call i32 @memcmp(i8* %771, i8* %772, i64 %773) #13, !dbg !4108
  %775 = icmp eq i32 %774, 0, !dbg !4109
  %776 = load i32, i32* @x.63
  %777 = load i32, i32* @y.64
  %778 = sub i32 %776, 1
  %779 = mul i32 %776, %778
  %780 = urem i32 %779, 2
  %781 = icmp eq i32 %780, 0
  %782 = icmp slt i32 %777, 10
  %783 = or i1 %781, %782
  br i1 %783, label %originalBBpart2171, label %originalBB169alteredBB

originalBBpart2171:                               ; preds = %originalBB169
  br i1 %775, label %784, label %821, !dbg !4110

784:                                              ; preds = %originalBBpart2171
  %785 = load i32, i32* @x.63
  %786 = load i32, i32* @y.64
  %787 = sub i32 %785, 1
  %788 = mul i32 %785, %787
  %789 = urem i32 %788, 2
  %790 = icmp eq i32 %789, 0
  %791 = icmp slt i32 %786, 10
  %792 = or i1 %790, %791
  br i1 %792, label %originalBB173, label %originalBB173alteredBB

originalBB173:                                    ; preds = %784, %originalBB173alteredBB
  %793 = load i8, i8* %35, align 1, !dbg !4111
  %794 = trunc i8 %793 to i1, !dbg !4111
  %795 = load i32, i32* @x.63
  %796 = load i32, i32* @y.64
  %797 = sub i32 %795, 1
  %798 = mul i32 %795, %797
  %799 = urem i32 %798, 2
  %800 = icmp eq i32 %799, 0
  %801 = icmp slt i32 %796, 10
  %802 = or i1 %800, %801
  br i1 %802, label %originalBBpart2175, label %originalBB173alteredBB

originalBBpart2175:                               ; preds = %originalBB173
  br i1 %794, label %803, label %820, !dbg !4114

803:                                              ; preds = %originalBBpart2175
  %804 = load i32, i32* @x.63
  %805 = load i32, i32* @y.64
  %806 = sub i32 %804, 1
  %807 = mul i32 %804, %806
  %808 = urem i32 %807, 2
  %809 = icmp eq i32 %808, 0
  %810 = icmp slt i32 %805, 10
  %811 = or i1 %809, %810
  br i1 %811, label %originalBB177, label %originalBB177alteredBB

originalBB177:                                    ; preds = %803, %originalBB177alteredBB
  %812 = load i32, i32* @x.63
  %813 = load i32, i32* @y.64
  %814 = sub i32 %812, 1
  %815 = mul i32 %812, %814
  %816 = urem i32 %815, 2
  %817 = icmp eq i32 %816, 0
  %818 = icmp slt i32 %813, 10
  %819 = or i1 %817, %818
  br i1 %819, label %originalBBpart2179, label %originalBB177alteredBB

originalBBpart2179:                               ; preds = %originalBB177
  br label %4894, !dbg !4115

820:                                              ; preds = %originalBBpart2175
  store i8 1, i8* %41, align 1, !dbg !4116
  br label %821, !dbg !4117

821:                                              ; preds = %820, %originalBBpart2171, %originalBBpart2167, %originalBBpart2138, %originalBBpart2134, %originalBBpart2130
  %822 = load i32, i32* @x.63
  %823 = load i32, i32* @y.64
  %824 = sub i32 %822, 1
  %825 = mul i32 %822, %824
  %826 = urem i32 %825, 2
  %827 = icmp eq i32 %826, 0
  %828 = icmp slt i32 %823, 10
  %829 = or i1 %827, %828
  br i1 %829, label %originalBB181, label %originalBB181alteredBB

originalBB181:                                    ; preds = %821, %originalBB181alteredBB
  %830 = load i8*, i8** %21, align 8, !dbg !4118
  %831 = load i64, i64* %28, align 8, !dbg !4119
  %832 = getelementptr inbounds i8, i8* %830, i64 %831, !dbg !4118
  %833 = load i8, i8* %832, align 1, !dbg !4118
  store i8 %833, i8* %39, align 1, !dbg !4120
  %834 = load i8, i8* %39, align 1, !dbg !4121
  %835 = zext i8 %834 to i32, !dbg !4121
  %836 = load i32, i32* @x.63
  %837 = load i32, i32* @y.64
  %838 = sub i32 %836, 1
  %839 = mul i32 %836, %838
  %840 = urem i32 %839, 2
  %841 = icmp eq i32 %840, 0
  %842 = icmp slt i32 %837, 10
  %843 = or i1 %841, %842
  br i1 %843, label %originalBBpart2183, label %originalBB181alteredBB

originalBBpart2183:                               ; preds = %originalBB181
  switch i32 %835, label %2432 [
    i32 0, label %844
    i32 63, label %1365
    i32 7, label %1797
    i32 8, label %1814
    i32 12, label %1815
    i32 10, label %1832
    i32 13, label %1833
    i32 9, label %1850
    i32 11, label %1867
    i32 92, label %1868
    i32 123, label %1982
    i32 125, label %1982
    i32 35, label %2060
    i32 126, label %2060
    i32 32, label %2113
    i32 33, label %2130
    i32 34, label %2130
    i32 36, label %2130
    i32 38, label %2130
    i32 40, label %2130
    i32 41, label %2130
    i32 42, label %2130
    i32 59, label %2130
    i32 60, label %2130
    i32 61, label %2130
    i32 62, label %2130
    i32 91, label %2130
    i32 94, label %2130
    i32 96, label %2130
    i32 124, label %2130
    i32 39, label %2170
    i32 37, label %2431
    i32 43, label %2431
    i32 44, label %2431
    i32 45, label %2431
    i32 46, label %2431
    i32 47, label %2431
    i32 48, label %2431
    i32 49, label %2431
    i32 50, label %2431
    i32 51, label %2431
    i32 52, label %2431
    i32 53, label %2431
    i32 54, label %2431
    i32 55, label %2431
    i32 56, label %2431
    i32 57, label %2431
    i32 58, label %2431
    i32 65, label %2431
    i32 66, label %2431
    i32 67, label %2431
    i32 68, label %2431
    i32 69, label %2431
    i32 70, label %2431
    i32 71, label %2431
    i32 72, label %2431
    i32 73, label %2431
    i32 74, label %2431
    i32 75, label %2431
    i32 76, label %2431
    i32 77, label %2431
    i32 78, label %2431
    i32 79, label %2431
    i32 80, label %2431
    i32 81, label %2431
    i32 82, label %2431
    i32 83, label %2431
    i32 84, label %2431
    i32 85, label %2431
    i32 86, label %2431
    i32 87, label %2431
    i32 88, label %2431
    i32 89, label %2431
    i32 90, label %2431
    i32 93, label %2431
    i32 95, label %2431
    i32 97, label %2431
    i32 98, label %2431
    i32 99, label %2431
    i32 100, label %2431
    i32 101, label %2431
    i32 102, label %2431
    i32 103, label %2431
    i32 104, label %2431
    i32 105, label %2431
    i32 106, label %2431
    i32 107, label %2431
    i32 108, label %2431
    i32 109, label %2431
    i32 110, label %2431
    i32 111, label %2431
    i32 112, label %2431
    i32 113, label %2431
    i32 114, label %2431
    i32 115, label %2431
    i32 116, label %2431
    i32 117, label %2431
    i32 118, label %2431
    i32 119, label %2431
    i32 120, label %2431
    i32 121, label %2431
    i32 122, label %2431
  ], !dbg !4122

844:                                              ; preds = %originalBBpart2183
  %845 = load i32, i32* @x.63
  %846 = load i32, i32* @y.64
  %847 = sub i32 %845, 1
  %848 = mul i32 %845, %847
  %849 = urem i32 %848, 2
  %850 = icmp eq i32 %849, 0
  %851 = icmp slt i32 %846, 10
  %852 = or i1 %850, %851
  br i1 %852, label %originalBB185, label %originalBB185alteredBB

originalBB185:                                    ; preds = %844, %originalBB185alteredBB
  %853 = load i8, i8* %33, align 1, !dbg !4123
  %854 = trunc i8 %853 to i1, !dbg !4123
  %855 = load i32, i32* @x.63
  %856 = load i32, i32* @y.64
  %857 = sub i32 %855, 1
  %858 = mul i32 %855, %857
  %859 = urem i32 %858, 2
  %860 = icmp eq i32 %859, 0
  %861 = icmp slt i32 %856, 10
  %862 = or i1 %860, %861
  br i1 %862, label %originalBBpart2187, label %originalBB185alteredBB

originalBBpart2187:                               ; preds = %originalBB185
  br i1 %854, label %863, label %1342, !dbg !4126

863:                                              ; preds = %originalBBpart2187
  %864 = load i32, i32* @x.63
  %865 = load i32, i32* @y.64
  %866 = sub i32 %864, 1
  %867 = mul i32 %864, %866
  %868 = urem i32 %867, 2
  %869 = icmp eq i32 %868, 0
  %870 = icmp slt i32 %865, 10
  %871 = or i1 %869, %870
  br i1 %871, label %originalBB189, label %originalBB189alteredBB

originalBB189:                                    ; preds = %863, %originalBB189alteredBB
  %872 = load i32, i32* @x.63
  %873 = load i32, i32* @y.64
  %874 = sub i32 %872, 1
  %875 = mul i32 %872, %874
  %876 = urem i32 %875, 2
  %877 = icmp eq i32 %876, 0
  %878 = icmp slt i32 %873, 10
  %879 = or i1 %877, %878
  br i1 %879, label %originalBBpart2191, label %originalBB189alteredBB

originalBBpart2191:                               ; preds = %originalBB189
  br label %880, !dbg !4127

880:                                              ; preds = %originalBBpart2191
  %881 = load i32, i32* @x.63
  %882 = load i32, i32* @y.64
  %883 = sub i32 %881, 1
  %884 = mul i32 %881, %883
  %885 = urem i32 %884, 2
  %886 = icmp eq i32 %885, 0
  %887 = icmp slt i32 %882, 10
  %888 = or i1 %886, %887
  br i1 %888, label %originalBB193, label %originalBB193alteredBB

originalBB193:                                    ; preds = %880, %originalBB193alteredBB
  %889 = load i8, i8* %35, align 1, !dbg !4129
  %890 = trunc i8 %889 to i1, !dbg !4129
  %891 = load i32, i32* @x.63
  %892 = load i32, i32* @y.64
  %893 = sub i32 %891, 1
  %894 = mul i32 %891, %893
  %895 = urem i32 %894, 2
  %896 = icmp eq i32 %895, 0
  %897 = icmp slt i32 %892, 10
  %898 = or i1 %896, %897
  br i1 %898, label %originalBBpart2195, label %originalBB193alteredBB

originalBBpart2195:                               ; preds = %originalBB193
  br i1 %890, label %899, label %916, !dbg !4132

899:                                              ; preds = %originalBBpart2195
  %900 = load i32, i32* @x.63
  %901 = load i32, i32* @y.64
  %902 = sub i32 %900, 1
  %903 = mul i32 %900, %902
  %904 = urem i32 %903, 2
  %905 = icmp eq i32 %904, 0
  %906 = icmp slt i32 %901, 10
  %907 = or i1 %905, %906
  br i1 %907, label %originalBB197, label %originalBB197alteredBB

originalBB197:                                    ; preds = %899, %originalBB197alteredBB
  %908 = load i32, i32* @x.63
  %909 = load i32, i32* @y.64
  %910 = sub i32 %908, 1
  %911 = mul i32 %908, %910
  %912 = urem i32 %911, 2
  %913 = icmp eq i32 %912, 0
  %914 = icmp slt i32 %909, 10
  %915 = or i1 %913, %914
  br i1 %915, label %originalBBpart2199, label %originalBB197alteredBB

originalBBpart2199:                               ; preds = %originalBB197
  br label %4894, !dbg !4129

916:                                              ; preds = %originalBBpart2195
  store i8 1, i8* %42, align 1, !dbg !4132
  %917 = load i32, i32* %23, align 4, !dbg !4133
  %918 = icmp eq i32 %917, 2, !dbg !4133
  br i1 %918, label %919, label %1119, !dbg !4133

919:                                              ; preds = %916
  %920 = load i8, i8* %36, align 1, !dbg !4133
  %921 = trunc i8 %920 to i1, !dbg !4133
  br i1 %921, label %1119, label %922, !dbg !4132

922:                                              ; preds = %919
  %923 = load i32, i32* @x.63
  %924 = load i32, i32* @y.64
  %925 = sub i32 %923, 1
  %926 = mul i32 %923, %925
  %927 = urem i32 %926, 2
  %928 = icmp eq i32 %927, 0
  %929 = icmp slt i32 %924, 10
  %930 = or i1 %928, %929
  br i1 %930, label %originalBB201, label %originalBB201alteredBB

originalBB201:                                    ; preds = %922, %originalBB201alteredBB
  %931 = load i32, i32* @x.63
  %932 = load i32, i32* @y.64
  %933 = sub i32 %931, 1
  %934 = mul i32 %931, %933
  %935 = urem i32 %934, 2
  %936 = icmp eq i32 %935, 0
  %937 = icmp slt i32 %932, 10
  %938 = or i1 %936, %937
  br i1 %938, label %originalBBpart2203, label %originalBB201alteredBB

originalBBpart2203:                               ; preds = %originalBB201
  br label %939, !dbg !4135

939:                                              ; preds = %originalBBpart2203
  %940 = load i32, i32* @x.63
  %941 = load i32, i32* @y.64
  %942 = sub i32 %940, 1
  %943 = mul i32 %940, %942
  %944 = urem i32 %943, 2
  %945 = icmp eq i32 %944, 0
  %946 = icmp slt i32 %941, 10
  %947 = or i1 %945, %946
  br i1 %947, label %originalBB205, label %originalBB205alteredBB

originalBB205:                                    ; preds = %939, %originalBB205alteredBB
  %948 = load i64, i64* %29, align 8, !dbg !4137
  %949 = load i64, i64* %20, align 8, !dbg !4137
  %950 = icmp ult i64 %948, %949, !dbg !4137
  %951 = load i32, i32* @x.63
  %952 = load i32, i32* @y.64
  %953 = sub i32 %951, 1
  %954 = mul i32 %951, %953
  %955 = urem i32 %954, 2
  %956 = icmp eq i32 %955, 0
  %957 = icmp slt i32 %952, 10
  %958 = or i1 %956, %957
  br i1 %958, label %originalBBpart2207, label %originalBB205alteredBB

originalBBpart2207:                               ; preds = %originalBB205
  br i1 %950, label %959, label %979, !dbg !4140

959:                                              ; preds = %originalBBpart2207
  %960 = load i32, i32* @x.63
  %961 = load i32, i32* @y.64
  %962 = sub i32 %960, 1
  %963 = mul i32 %960, %962
  %964 = urem i32 %963, 2
  %965 = icmp eq i32 %964, 0
  %966 = icmp slt i32 %961, 10
  %967 = or i1 %965, %966
  br i1 %967, label %originalBB209, label %originalBB209alteredBB

originalBB209:                                    ; preds = %959, %originalBB209alteredBB
  %968 = load i8*, i8** %19, align 8, !dbg !4137
  %969 = load i64, i64* %29, align 8, !dbg !4137
  %970 = getelementptr inbounds i8, i8* %968, i64 %969, !dbg !4137
  store i8 39, i8* %970, align 1, !dbg !4137
  %971 = load i32, i32* @x.63
  %972 = load i32, i32* @y.64
  %973 = sub i32 %971, 1
  %974 = mul i32 %971, %973
  %975 = urem i32 %974, 2
  %976 = icmp eq i32 %975, 0
  %977 = icmp slt i32 %972, 10
  %978 = or i1 %976, %977
  br i1 %978, label %originalBBpart2211, label %originalBB209alteredBB

originalBBpart2211:                               ; preds = %originalBB209
  br label %979, !dbg !4137

979:                                              ; preds = %originalBBpart2211, %originalBBpart2207
  %980 = load i32, i32* @x.63
  %981 = load i32, i32* @y.64
  %982 = sub i32 %980, 1
  %983 = mul i32 %980, %982
  %984 = urem i32 %983, 2
  %985 = icmp eq i32 %984, 0
  %986 = icmp slt i32 %981, 10
  %987 = or i1 %985, %986
  br i1 %987, label %originalBB213, label %originalBB213alteredBB

originalBB213:                                    ; preds = %979, %originalBB213alteredBB
  %988 = load i64, i64* %29, align 8, !dbg !4140
  %989 = add i64 %988, 1, !dbg !4140
  store i64 %989, i64* %29, align 8, !dbg !4140
  %990 = load i32, i32* @x.63
  %991 = load i32, i32* @y.64
  %992 = sub i32 %990, 1
  %993 = mul i32 %990, %992
  %994 = urem i32 %993, 2
  %995 = icmp eq i32 %994, 0
  %996 = icmp slt i32 %991, 10
  %997 = or i1 %995, %996
  br i1 %997, label %originalBBpart2219, label %originalBB213alteredBB

originalBBpart2219:                               ; preds = %originalBB213
  br label %998, !dbg !4140

998:                                              ; preds = %originalBBpart2219
  %999 = load i32, i32* @x.63
  %1000 = load i32, i32* @y.64
  %1001 = sub i32 %999, 1
  %1002 = mul i32 %999, %1001
  %1003 = urem i32 %1002, 2
  %1004 = icmp eq i32 %1003, 0
  %1005 = icmp slt i32 %1000, 10
  %1006 = or i1 %1004, %1005
  br i1 %1006, label %originalBB221, label %originalBB221alteredBB

originalBB221:                                    ; preds = %998, %originalBB221alteredBB
  %1007 = load i32, i32* @x.63
  %1008 = load i32, i32* @y.64
  %1009 = sub i32 %1007, 1
  %1010 = mul i32 %1007, %1009
  %1011 = urem i32 %1010, 2
  %1012 = icmp eq i32 %1011, 0
  %1013 = icmp slt i32 %1008, 10
  %1014 = or i1 %1012, %1013
  br i1 %1014, label %originalBBpart2223, label %originalBB221alteredBB

originalBBpart2223:                               ; preds = %originalBB221
  br label %1015, !dbg !4135

1015:                                             ; preds = %originalBBpart2223
  %1016 = load i32, i32* @x.63
  %1017 = load i32, i32* @y.64
  %1018 = sub i32 %1016, 1
  %1019 = mul i32 %1016, %1018
  %1020 = urem i32 %1019, 2
  %1021 = icmp eq i32 %1020, 0
  %1022 = icmp slt i32 %1017, 10
  %1023 = or i1 %1021, %1022
  br i1 %1023, label %originalBB225, label %originalBB225alteredBB

originalBB225:                                    ; preds = %1015, %originalBB225alteredBB
  %1024 = load i64, i64* %29, align 8, !dbg !4141
  %1025 = load i64, i64* %20, align 8, !dbg !4141
  %1026 = icmp ult i64 %1024, %1025, !dbg !4141
  %1027 = load i32, i32* @x.63
  %1028 = load i32, i32* @y.64
  %1029 = sub i32 %1027, 1
  %1030 = mul i32 %1027, %1029
  %1031 = urem i32 %1030, 2
  %1032 = icmp eq i32 %1031, 0
  %1033 = icmp slt i32 %1028, 10
  %1034 = or i1 %1032, %1033
  br i1 %1034, label %originalBBpart2227, label %originalBB225alteredBB

originalBBpart2227:                               ; preds = %originalBB225
  br i1 %1026, label %1035, label %1055, !dbg !4144

1035:                                             ; preds = %originalBBpart2227
  %1036 = load i32, i32* @x.63
  %1037 = load i32, i32* @y.64
  %1038 = sub i32 %1036, 1
  %1039 = mul i32 %1036, %1038
  %1040 = urem i32 %1039, 2
  %1041 = icmp eq i32 %1040, 0
  %1042 = icmp slt i32 %1037, 10
  %1043 = or i1 %1041, %1042
  br i1 %1043, label %originalBB229, label %originalBB229alteredBB

originalBB229:                                    ; preds = %1035, %originalBB229alteredBB
  %1044 = load i8*, i8** %19, align 8, !dbg !4141
  %1045 = load i64, i64* %29, align 8, !dbg !4141
  %1046 = getelementptr inbounds i8, i8* %1044, i64 %1045, !dbg !4141
  store i8 36, i8* %1046, align 1, !dbg !4141
  %1047 = load i32, i32* @x.63
  %1048 = load i32, i32* @y.64
  %1049 = sub i32 %1047, 1
  %1050 = mul i32 %1047, %1049
  %1051 = urem i32 %1050, 2
  %1052 = icmp eq i32 %1051, 0
  %1053 = icmp slt i32 %1048, 10
  %1054 = or i1 %1052, %1053
  br i1 %1054, label %originalBBpart2231, label %originalBB229alteredBB

originalBBpart2231:                               ; preds = %originalBB229
  br label %1055, !dbg !4141

1055:                                             ; preds = %originalBBpart2231, %originalBBpart2227
  %1056 = load i32, i32* @x.63
  %1057 = load i32, i32* @y.64
  %1058 = sub i32 %1056, 1
  %1059 = mul i32 %1056, %1058
  %1060 = urem i32 %1059, 2
  %1061 = icmp eq i32 %1060, 0
  %1062 = icmp slt i32 %1057, 10
  %1063 = or i1 %1061, %1062
  br i1 %1063, label %originalBB233, label %originalBB233alteredBB

originalBB233:                                    ; preds = %1055, %originalBB233alteredBB
  %1064 = load i64, i64* %29, align 8, !dbg !4144
  %1065 = add i64 %1064, 1, !dbg !4144
  store i64 %1065, i64* %29, align 8, !dbg !4144
  %1066 = load i32, i32* @x.63
  %1067 = load i32, i32* @y.64
  %1068 = sub i32 %1066, 1
  %1069 = mul i32 %1066, %1068
  %1070 = urem i32 %1069, 2
  %1071 = icmp eq i32 %1070, 0
  %1072 = icmp slt i32 %1067, 10
  %1073 = or i1 %1071, %1072
  br i1 %1073, label %originalBBpart2243, label %originalBB233alteredBB

originalBBpart2243:                               ; preds = %originalBB233
  br label %1074, !dbg !4144

1074:                                             ; preds = %originalBBpart2243
  br label %1075, !dbg !4135

1075:                                             ; preds = %1074
  %1076 = load i32, i32* @x.63
  %1077 = load i32, i32* @y.64
  %1078 = sub i32 %1076, 1
  %1079 = mul i32 %1076, %1078
  %1080 = urem i32 %1079, 2
  %1081 = icmp eq i32 %1080, 0
  %1082 = icmp slt i32 %1077, 10
  %1083 = or i1 %1081, %1082
  br i1 %1083, label %originalBB245, label %originalBB245alteredBB

originalBB245:                                    ; preds = %1075, %originalBB245alteredBB
  %1084 = load i64, i64* %29, align 8, !dbg !4145
  %1085 = load i64, i64* %20, align 8, !dbg !4145
  %1086 = icmp ult i64 %1084, %1085, !dbg !4145
  %1087 = load i32, i32* @x.63
  %1088 = load i32, i32* @y.64
  %1089 = sub i32 %1087, 1
  %1090 = mul i32 %1087, %1089
  %1091 = urem i32 %1090, 2
  %1092 = icmp eq i32 %1091, 0
  %1093 = icmp slt i32 %1088, 10
  %1094 = or i1 %1092, %1093
  br i1 %1094, label %originalBBpart2247, label %originalBB245alteredBB

originalBBpart2247:                               ; preds = %originalBB245
  br i1 %1086, label %1095, label %1099, !dbg !4148

1095:                                             ; preds = %originalBBpart2247
  %1096 = load i8*, i8** %19, align 8, !dbg !4145
  %1097 = load i64, i64* %29, align 8, !dbg !4145
  %1098 = getelementptr inbounds i8, i8* %1096, i64 %1097, !dbg !4145
  store i8 39, i8* %1098, align 1, !dbg !4145
  br label %1099, !dbg !4145

1099:                                             ; preds = %1095, %originalBBpart2247
  %1100 = load i64, i64* %29, align 8, !dbg !4148
  %1101 = add i64 %1100, 1, !dbg !4148
  store i64 %1101, i64* %29, align 8, !dbg !4148
  br label %1102, !dbg !4148

1102:                                             ; preds = %1099
  %1103 = load i32, i32* @x.63
  %1104 = load i32, i32* @y.64
  %1105 = sub i32 %1103, 1
  %1106 = mul i32 %1103, %1105
  %1107 = urem i32 %1106, 2
  %1108 = icmp eq i32 %1107, 0
  %1109 = icmp slt i32 %1104, 10
  %1110 = or i1 %1108, %1109
  br i1 %1110, label %originalBB249, label %originalBB249alteredBB

originalBB249:                                    ; preds = %1102, %originalBB249alteredBB
  store i8 1, i8* %36, align 1, !dbg !4135
  %1111 = load i32, i32* @x.63
  %1112 = load i32, i32* @y.64
  %1113 = sub i32 %1111, 1
  %1114 = mul i32 %1111, %1113
  %1115 = urem i32 %1114, 2
  %1116 = icmp eq i32 %1115, 0
  %1117 = icmp slt i32 %1112, 10
  %1118 = or i1 %1116, %1117
  br i1 %1118, label %originalBBpart2251, label %originalBB249alteredBB

originalBBpart2251:                               ; preds = %originalBB249
  br label %1119, !dbg !4135

1119:                                             ; preds = %originalBBpart2251, %919, %916
  br label %1120, !dbg !4132

1120:                                             ; preds = %1119
  %1121 = load i64, i64* %29, align 8, !dbg !4149
  %1122 = load i64, i64* %20, align 8, !dbg !4149
  %1123 = icmp ult i64 %1121, %1122, !dbg !4149
  br i1 %1123, label %1124, label %1128, !dbg !4152

1124:                                             ; preds = %1120
  %1125 = load i8*, i8** %19, align 8, !dbg !4149
  %1126 = load i64, i64* %29, align 8, !dbg !4149
  %1127 = getelementptr inbounds i8, i8* %1125, i64 %1126, !dbg !4149
  store i8 92, i8* %1127, align 1, !dbg !4149
  br label %1128, !dbg !4149

1128:                                             ; preds = %1124, %1120
  %1129 = load i64, i64* %29, align 8, !dbg !4152
  %1130 = add i64 %1129, 1, !dbg !4152
  store i64 %1130, i64* %29, align 8, !dbg !4152
  br label %1131, !dbg !4152

1131:                                             ; preds = %1128
  %1132 = load i32, i32* @x.63
  %1133 = load i32, i32* @y.64
  %1134 = sub i32 %1132, 1
  %1135 = mul i32 %1132, %1134
  %1136 = urem i32 %1135, 2
  %1137 = icmp eq i32 %1136, 0
  %1138 = icmp slt i32 %1133, 10
  %1139 = or i1 %1137, %1138
  br i1 %1139, label %originalBB253, label %originalBB253alteredBB

originalBB253:                                    ; preds = %1131, %originalBB253alteredBB
  %1140 = load i32, i32* @x.63
  %1141 = load i32, i32* @y.64
  %1142 = sub i32 %1140, 1
  %1143 = mul i32 %1140, %1142
  %1144 = urem i32 %1143, 2
  %1145 = icmp eq i32 %1144, 0
  %1146 = icmp slt i32 %1141, 10
  %1147 = or i1 %1145, %1146
  br i1 %1147, label %originalBBpart2255, label %originalBB253alteredBB

originalBBpart2255:                               ; preds = %originalBB253
  br label %1148, !dbg !4132

1148:                                             ; preds = %originalBBpart2255
  %1149 = load i32, i32* @x.63
  %1150 = load i32, i32* @y.64
  %1151 = sub i32 %1149, 1
  %1152 = mul i32 %1149, %1151
  %1153 = urem i32 %1152, 2
  %1154 = icmp eq i32 %1153, 0
  %1155 = icmp slt i32 %1150, 10
  %1156 = or i1 %1154, %1155
  br i1 %1156, label %originalBB257, label %originalBB257alteredBB

originalBB257:                                    ; preds = %1148, %originalBB257alteredBB
  %1157 = load i32, i32* %23, align 4, !dbg !4153
  %1158 = icmp ne i32 %1157, 2, !dbg !4155
  %1159 = load i32, i32* @x.63
  %1160 = load i32, i32* @y.64
  %1161 = sub i32 %1159, 1
  %1162 = mul i32 %1159, %1161
  %1163 = urem i32 %1162, 2
  %1164 = icmp eq i32 %1163, 0
  %1165 = icmp slt i32 %1160, 10
  %1166 = or i1 %1164, %1165
  br i1 %1166, label %originalBBpart2259, label %originalBB257alteredBB

originalBBpart2259:                               ; preds = %originalBB257
  br i1 %1158, label %1167, label %1325, !dbg !4156

1167:                                             ; preds = %originalBBpart2259
  %1168 = load i64, i64* %28, align 8, !dbg !4157
  %1169 = add i64 %1168, 1, !dbg !4158
  %1170 = load i64, i64* %22, align 8, !dbg !4159
  %1171 = icmp ult i64 %1169, %1170, !dbg !4160
  br i1 %1171, label %1172, label %1325, !dbg !4161

1172:                                             ; preds = %1167
  %1173 = load i32, i32* @x.63
  %1174 = load i32, i32* @y.64
  %1175 = sub i32 %1173, 1
  %1176 = mul i32 %1173, %1175
  %1177 = urem i32 %1176, 2
  %1178 = icmp eq i32 %1177, 0
  %1179 = icmp slt i32 %1174, 10
  %1180 = or i1 %1178, %1179
  br i1 %1180, label %originalBB261, label %originalBB261alteredBB

originalBB261:                                    ; preds = %1172, %originalBB261alteredBB
  %1181 = load i8*, i8** %21, align 8, !dbg !4162
  %1182 = load i64, i64* %28, align 8, !dbg !4163
  %1183 = add i64 %1182, 1, !dbg !4164
  %1184 = getelementptr inbounds i8, i8* %1181, i64 %1183, !dbg !4162
  %1185 = load i8, i8* %1184, align 1, !dbg !4162
  %1186 = sext i8 %1185 to i32, !dbg !4162
  %1187 = icmp sle i32 48, %1186, !dbg !4165
  %1188 = load i32, i32* @x.63
  %1189 = load i32, i32* @y.64
  %1190 = sub i32 %1188, 1
  %1191 = mul i32 %1188, %1190
  %1192 = urem i32 %1191, 2
  %1193 = icmp eq i32 %1192, 0
  %1194 = icmp slt i32 %1189, 10
  %1195 = or i1 %1193, %1194
  br i1 %1195, label %originalBBpart2270, label %originalBB261alteredBB

originalBBpart2270:                               ; preds = %originalBB261
  br i1 %1187, label %1196, label %1325, !dbg !4166

1196:                                             ; preds = %originalBBpart2270
  %1197 = load i32, i32* @x.63
  %1198 = load i32, i32* @y.64
  %1199 = sub i32 %1197, 1
  %1200 = mul i32 %1197, %1199
  %1201 = urem i32 %1200, 2
  %1202 = icmp eq i32 %1201, 0
  %1203 = icmp slt i32 %1198, 10
  %1204 = or i1 %1202, %1203
  br i1 %1204, label %originalBB272, label %originalBB272alteredBB

originalBB272:                                    ; preds = %1196, %originalBB272alteredBB
  %1205 = load i8*, i8** %21, align 8, !dbg !4167
  %1206 = load i64, i64* %28, align 8, !dbg !4168
  %1207 = add i64 %1206, 1, !dbg !4169
  %1208 = getelementptr inbounds i8, i8* %1205, i64 %1207, !dbg !4167
  %1209 = load i8, i8* %1208, align 1, !dbg !4167
  %1210 = sext i8 %1209 to i32, !dbg !4167
  %1211 = icmp sle i32 %1210, 57, !dbg !4170
  %1212 = load i32, i32* @x.63
  %1213 = load i32, i32* @y.64
  %1214 = sub i32 %1212, 1
  %1215 = mul i32 %1212, %1214
  %1216 = urem i32 %1215, 2
  %1217 = icmp eq i32 %1216, 0
  %1218 = icmp slt i32 %1213, 10
  %1219 = or i1 %1217, %1218
  br i1 %1219, label %originalBBpart2276, label %originalBB272alteredBB

originalBBpart2276:                               ; preds = %originalBB272
  br i1 %1211, label %1220, label %1325, !dbg !4171

1220:                                             ; preds = %originalBBpart2276
  %1221 = load i32, i32* @x.63
  %1222 = load i32, i32* @y.64
  %1223 = sub i32 %1221, 1
  %1224 = mul i32 %1221, %1223
  %1225 = urem i32 %1224, 2
  %1226 = icmp eq i32 %1225, 0
  %1227 = icmp slt i32 %1222, 10
  %1228 = or i1 %1226, %1227
  br i1 %1228, label %originalBB278, label %originalBB278alteredBB

originalBB278:                                    ; preds = %1220, %originalBB278alteredBB
  %1229 = load i32, i32* @x.63
  %1230 = load i32, i32* @y.64
  %1231 = sub i32 %1229, 1
  %1232 = mul i32 %1229, %1231
  %1233 = urem i32 %1232, 2
  %1234 = icmp eq i32 %1233, 0
  %1235 = icmp slt i32 %1230, 10
  %1236 = or i1 %1234, %1235
  br i1 %1236, label %originalBBpart2280, label %originalBB278alteredBB

originalBBpart2280:                               ; preds = %originalBB278
  br label %1237, !dbg !4172

1237:                                             ; preds = %originalBBpart2280
  %1238 = load i64, i64* %29, align 8, !dbg !4174
  %1239 = load i64, i64* %20, align 8, !dbg !4174
  %1240 = icmp ult i64 %1238, %1239, !dbg !4174
  br i1 %1240, label %1241, label %1261, !dbg !4177

1241:                                             ; preds = %1237
  %1242 = load i32, i32* @x.63
  %1243 = load i32, i32* @y.64
  %1244 = sub i32 %1242, 1
  %1245 = mul i32 %1242, %1244
  %1246 = urem i32 %1245, 2
  %1247 = icmp eq i32 %1246, 0
  %1248 = icmp slt i32 %1243, 10
  %1249 = or i1 %1247, %1248
  br i1 %1249, label %originalBB282, label %originalBB282alteredBB

originalBB282:                                    ; preds = %1241, %originalBB282alteredBB
  %1250 = load i8*, i8** %19, align 8, !dbg !4174
  %1251 = load i64, i64* %29, align 8, !dbg !4174
  %1252 = getelementptr inbounds i8, i8* %1250, i64 %1251, !dbg !4174
  store i8 48, i8* %1252, align 1, !dbg !4174
  %1253 = load i32, i32* @x.63
  %1254 = load i32, i32* @y.64
  %1255 = sub i32 %1253, 1
  %1256 = mul i32 %1253, %1255
  %1257 = urem i32 %1256, 2
  %1258 = icmp eq i32 %1257, 0
  %1259 = icmp slt i32 %1254, 10
  %1260 = or i1 %1258, %1259
  br i1 %1260, label %originalBBpart2284, label %originalBB282alteredBB

originalBBpart2284:                               ; preds = %originalBB282
  br label %1261, !dbg !4174

1261:                                             ; preds = %originalBBpart2284, %1237
  %1262 = load i32, i32* @x.63
  %1263 = load i32, i32* @y.64
  %1264 = sub i32 %1262, 1
  %1265 = mul i32 %1262, %1264
  %1266 = urem i32 %1265, 2
  %1267 = icmp eq i32 %1266, 0
  %1268 = icmp slt i32 %1263, 10
  %1269 = or i1 %1267, %1268
  br i1 %1269, label %originalBB286, label %originalBB286alteredBB

originalBB286:                                    ; preds = %1261, %originalBB286alteredBB
  %1270 = load i64, i64* %29, align 8, !dbg !4177
  %1271 = add i64 %1270, 1, !dbg !4177
  store i64 %1271, i64* %29, align 8, !dbg !4177
  %1272 = load i32, i32* @x.63
  %1273 = load i32, i32* @y.64
  %1274 = sub i32 %1272, 1
  %1275 = mul i32 %1272, %1274
  %1276 = urem i32 %1275, 2
  %1277 = icmp eq i32 %1276, 0
  %1278 = icmp slt i32 %1273, 10
  %1279 = or i1 %1277, %1278
  br i1 %1279, label %originalBBpart2290, label %originalBB286alteredBB

originalBBpart2290:                               ; preds = %originalBB286
  br label %1280, !dbg !4177

1280:                                             ; preds = %originalBBpart2290
  br label %1281, !dbg !4178

1281:                                             ; preds = %1280
  %1282 = load i32, i32* @x.63
  %1283 = load i32, i32* @y.64
  %1284 = sub i32 %1282, 1
  %1285 = mul i32 %1282, %1284
  %1286 = urem i32 %1285, 2
  %1287 = icmp eq i32 %1286, 0
  %1288 = icmp slt i32 %1283, 10
  %1289 = or i1 %1287, %1288
  br i1 %1289, label %originalBB292, label %originalBB292alteredBB

originalBB292:                                    ; preds = %1281, %originalBB292alteredBB
  %1290 = load i64, i64* %29, align 8, !dbg !4179
  %1291 = load i64, i64* %20, align 8, !dbg !4179
  %1292 = icmp ult i64 %1290, %1291, !dbg !4179
  %1293 = load i32, i32* @x.63
  %1294 = load i32, i32* @y.64
  %1295 = sub i32 %1293, 1
  %1296 = mul i32 %1293, %1295
  %1297 = urem i32 %1296, 2
  %1298 = icmp eq i32 %1297, 0
  %1299 = icmp slt i32 %1294, 10
  %1300 = or i1 %1298, %1299
  br i1 %1300, label %originalBBpart2294, label %originalBB292alteredBB

originalBBpart2294:                               ; preds = %originalBB292
  br i1 %1292, label %1301, label %1305, !dbg !4182

1301:                                             ; preds = %originalBBpart2294
  %1302 = load i8*, i8** %19, align 8, !dbg !4179
  %1303 = load i64, i64* %29, align 8, !dbg !4179
  %1304 = getelementptr inbounds i8, i8* %1302, i64 %1303, !dbg !4179
  store i8 48, i8* %1304, align 1, !dbg !4179
  br label %1305, !dbg !4179

1305:                                             ; preds = %1301, %originalBBpart2294
  %1306 = load i32, i32* @x.63
  %1307 = load i32, i32* @y.64
  %1308 = sub i32 %1306, 1
  %1309 = mul i32 %1306, %1308
  %1310 = urem i32 %1309, 2
  %1311 = icmp eq i32 %1310, 0
  %1312 = icmp slt i32 %1307, 10
  %1313 = or i1 %1311, %1312
  br i1 %1313, label %originalBB296, label %originalBB296alteredBB

originalBB296:                                    ; preds = %1305, %originalBB296alteredBB
  %1314 = load i64, i64* %29, align 8, !dbg !4182
  %1315 = add i64 %1314, 1, !dbg !4182
  store i64 %1315, i64* %29, align 8, !dbg !4182
  %1316 = load i32, i32* @x.63
  %1317 = load i32, i32* @y.64
  %1318 = sub i32 %1316, 1
  %1319 = mul i32 %1316, %1318
  %1320 = urem i32 %1319, 2
  %1321 = icmp eq i32 %1320, 0
  %1322 = icmp slt i32 %1317, 10
  %1323 = or i1 %1321, %1322
  br i1 %1323, label %originalBBpart2299, label %originalBB296alteredBB

originalBBpart2299:                               ; preds = %originalBB296
  br label %1324, !dbg !4182

1324:                                             ; preds = %originalBBpart2299
  br label %1325, !dbg !4183

1325:                                             ; preds = %1324, %originalBBpart2276, %originalBBpart2270, %1167, %originalBBpart2259
  %1326 = load i32, i32* @x.63
  %1327 = load i32, i32* @y.64
  %1328 = sub i32 %1326, 1
  %1329 = mul i32 %1326, %1328
  %1330 = urem i32 %1329, 2
  %1331 = icmp eq i32 %1330, 0
  %1332 = icmp slt i32 %1327, 10
  %1333 = or i1 %1331, %1332
  br i1 %1333, label %originalBB301, label %originalBB301alteredBB

originalBB301:                                    ; preds = %1325, %originalBB301alteredBB
  store i8 48, i8* %39, align 1, !dbg !4184
  %1334 = load i32, i32* @x.63
  %1335 = load i32, i32* @y.64
  %1336 = sub i32 %1334, 1
  %1337 = mul i32 %1334, %1336
  %1338 = urem i32 %1337, 2
  %1339 = icmp eq i32 %1338, 0
  %1340 = icmp slt i32 %1335, 10
  %1341 = or i1 %1339, %1340
  br i1 %1341, label %originalBBpart2303, label %originalBB301alteredBB

originalBBpart2303:                               ; preds = %originalBB301
  br label %1364, !dbg !4185

1342:                                             ; preds = %originalBBpart2187
  %1343 = load i32, i32* @x.63
  %1344 = load i32, i32* @y.64
  %1345 = sub i32 %1343, 1
  %1346 = mul i32 %1343, %1345
  %1347 = urem i32 %1346, 2
  %1348 = icmp eq i32 %1347, 0
  %1349 = icmp slt i32 %1344, 10
  %1350 = or i1 %1348, %1349
  br i1 %1350, label %originalBB305, label %originalBB305alteredBB

originalBB305:                                    ; preds = %1342, %originalBB305alteredBB
  %1351 = load i32, i32* %24, align 4, !dbg !4186
  %1352 = and i32 %1351, 1, !dbg !4188
  %1353 = icmp ne i32 %1352, 0, !dbg !4188
  %1354 = load i32, i32* @x.63
  %1355 = load i32, i32* @y.64
  %1356 = sub i32 %1354, 1
  %1357 = mul i32 %1354, %1356
  %1358 = urem i32 %1357, 2
  %1359 = icmp eq i32 %1358, 0
  %1360 = icmp slt i32 %1355, 10
  %1361 = or i1 %1359, %1360
  br i1 %1361, label %originalBBpart2320, label %originalBB305alteredBB

originalBBpart2320:                               ; preds = %originalBB305
  br i1 %1353, label %1362, label %1363, !dbg !4189

1362:                                             ; preds = %originalBBpart2320
  br label %4553, !dbg !4190

1363:                                             ; preds = %originalBBpart2320
  br label %1364

1364:                                             ; preds = %1363, %originalBBpart2303
  br label %3913, !dbg !4191

1365:                                             ; preds = %originalBBpart2183
  %1366 = load i32, i32* %23, align 4, !dbg !4192
  switch i32 %1366, label %1763 [
    i32 2, label %1367
    i32 5, label %1404
  ], !dbg !4193

1367:                                             ; preds = %1365
  %1368 = load i32, i32* @x.63
  %1369 = load i32, i32* @y.64
  %1370 = sub i32 %1368, 1
  %1371 = mul i32 %1368, %1370
  %1372 = urem i32 %1371, 2
  %1373 = icmp eq i32 %1372, 0
  %1374 = icmp slt i32 %1369, 10
  %1375 = or i1 %1373, %1374
  br i1 %1375, label %originalBB322, label %originalBB322alteredBB

originalBB322:                                    ; preds = %1367, %originalBB322alteredBB
  %1376 = load i8, i8* %35, align 1, !dbg !4194
  %1377 = trunc i8 %1376 to i1, !dbg !4194
  %1378 = load i32, i32* @x.63
  %1379 = load i32, i32* @y.64
  %1380 = sub i32 %1378, 1
  %1381 = mul i32 %1378, %1380
  %1382 = urem i32 %1381, 2
  %1383 = icmp eq i32 %1382, 0
  %1384 = icmp slt i32 %1379, 10
  %1385 = or i1 %1383, %1384
  br i1 %1385, label %originalBBpart2324, label %originalBB322alteredBB

originalBBpart2324:                               ; preds = %originalBB322
  br i1 %1377, label %1386, label %1387, !dbg !4197

1386:                                             ; preds = %originalBBpart2324
  br label %4894, !dbg !4198

1387:                                             ; preds = %originalBBpart2324
  %1388 = load i32, i32* @x.63
  %1389 = load i32, i32* @y.64
  %1390 = sub i32 %1388, 1
  %1391 = mul i32 %1388, %1390
  %1392 = urem i32 %1391, 2
  %1393 = icmp eq i32 %1392, 0
  %1394 = icmp slt i32 %1389, 10
  %1395 = or i1 %1393, %1394
  br i1 %1395, label %originalBB326, label %originalBB326alteredBB

originalBB326:                                    ; preds = %1387, %originalBB326alteredBB
  %1396 = load i32, i32* @x.63
  %1397 = load i32, i32* @y.64
  %1398 = sub i32 %1396, 1
  %1399 = mul i32 %1396, %1398
  %1400 = urem i32 %1399, 2
  %1401 = icmp eq i32 %1400, 0
  %1402 = icmp slt i32 %1397, 10
  %1403 = or i1 %1401, %1402
  br i1 %1403, label %originalBBpart2328, label %originalBB326alteredBB

originalBBpart2328:                               ; preds = %originalBB326
  br label %1780, !dbg !4199

1404:                                             ; preds = %1365
  %1405 = load i32, i32* %24, align 4, !dbg !4200
  %1406 = and i32 %1405, 4, !dbg !4202
  %1407 = icmp ne i32 %1406, 0, !dbg !4202
  br i1 %1407, label %1408, label %1762, !dbg !4203

1408:                                             ; preds = %1404
  %1409 = load i32, i32* @x.63
  %1410 = load i32, i32* @y.64
  %1411 = sub i32 %1409, 1
  %1412 = mul i32 %1409, %1411
  %1413 = urem i32 %1412, 2
  %1414 = icmp eq i32 %1413, 0
  %1415 = icmp slt i32 %1410, 10
  %1416 = or i1 %1414, %1415
  br i1 %1416, label %originalBB330, label %originalBB330alteredBB

originalBB330:                                    ; preds = %1408, %originalBB330alteredBB
  %1417 = load i64, i64* %28, align 8, !dbg !4204
  %1418 = add i64 %1417, 2, !dbg !4205
  %1419 = load i64, i64* %22, align 8, !dbg !4206
  %1420 = icmp ult i64 %1418, %1419, !dbg !4207
  %1421 = load i32, i32* @x.63
  %1422 = load i32, i32* @y.64
  %1423 = sub i32 %1421, 1
  %1424 = mul i32 %1421, %1423
  %1425 = urem i32 %1424, 2
  %1426 = icmp eq i32 %1425, 0
  %1427 = icmp slt i32 %1422, 10
  %1428 = or i1 %1426, %1427
  br i1 %1428, label %originalBBpart2337, label %originalBB330alteredBB

originalBBpart2337:                               ; preds = %originalBB330
  br i1 %1420, label %1429, label %1762, !dbg !4208

1429:                                             ; preds = %originalBBpart2337
  %1430 = load i32, i32* @x.63
  %1431 = load i32, i32* @y.64
  %1432 = sub i32 %1430, 1
  %1433 = mul i32 %1430, %1432
  %1434 = urem i32 %1433, 2
  %1435 = icmp eq i32 %1434, 0
  %1436 = icmp slt i32 %1431, 10
  %1437 = or i1 %1435, %1436
  br i1 %1437, label %originalBB339, label %originalBB339alteredBB

originalBB339:                                    ; preds = %1429, %originalBB339alteredBB
  %1438 = load i8*, i8** %21, align 8, !dbg !4209
  %1439 = load i64, i64* %28, align 8, !dbg !4210
  %1440 = add i64 %1439, 1, !dbg !4211
  %1441 = getelementptr inbounds i8, i8* %1438, i64 %1440, !dbg !4209
  %1442 = load i8, i8* %1441, align 1, !dbg !4209
  %1443 = sext i8 %1442 to i32, !dbg !4209
  %1444 = icmp eq i32 %1443, 63, !dbg !4212
  %1445 = load i32, i32* @x.63
  %1446 = load i32, i32* @y.64
  %1447 = sub i32 %1445, 1
  %1448 = mul i32 %1445, %1447
  %1449 = urem i32 %1448, 2
  %1450 = icmp eq i32 %1449, 0
  %1451 = icmp slt i32 %1446, 10
  %1452 = or i1 %1450, %1451
  br i1 %1452, label %originalBBpart2349, label %originalBB339alteredBB

originalBBpart2349:                               ; preds = %originalBB339
  br i1 %1444, label %1453, label %1762, !dbg !4213

1453:                                             ; preds = %originalBBpart2349
  %1454 = load i8*, i8** %21, align 8, !dbg !4214
  %1455 = load i64, i64* %28, align 8, !dbg !4215
  %1456 = add i64 %1455, 2, !dbg !4216
  %1457 = getelementptr inbounds i8, i8* %1454, i64 %1456, !dbg !4214
  %1458 = load i8, i8* %1457, align 1, !dbg !4214
  %1459 = sext i8 %1458 to i32, !dbg !4214
  switch i32 %1459, label %1744 [
    i32 33, label %1460
    i32 39, label %1460
    i32 40, label %1460
    i32 41, label %1460
    i32 45, label %1460
    i32 47, label %1460
    i32 60, label %1460
    i32 61, label %1460
    i32 62, label %1460
  ], !dbg !4217

1460:                                             ; preds = %1453, %1453, %1453, %1453, %1453, %1453, %1453, %1453, %1453
  %1461 = load i32, i32* @x.63
  %1462 = load i32, i32* @y.64
  %1463 = sub i32 %1461, 1
  %1464 = mul i32 %1461, %1463
  %1465 = urem i32 %1464, 2
  %1466 = icmp eq i32 %1465, 0
  %1467 = icmp slt i32 %1462, 10
  %1468 = or i1 %1466, %1467
  br i1 %1468, label %originalBB351, label %originalBB351alteredBB

originalBB351:                                    ; preds = %1460, %originalBB351alteredBB
  %1469 = load i8, i8* %35, align 1, !dbg !4218
  %1470 = trunc i8 %1469 to i1, !dbg !4218
  %1471 = load i32, i32* @x.63
  %1472 = load i32, i32* @y.64
  %1473 = sub i32 %1471, 1
  %1474 = mul i32 %1471, %1473
  %1475 = urem i32 %1474, 2
  %1476 = icmp eq i32 %1475, 0
  %1477 = icmp slt i32 %1472, 10
  %1478 = or i1 %1476, %1477
  br i1 %1478, label %originalBBpart2353, label %originalBB351alteredBB

originalBBpart2353:                               ; preds = %originalBB351
  br i1 %1470, label %1479, label %1496, !dbg !4221

1479:                                             ; preds = %originalBBpart2353
  %1480 = load i32, i32* @x.63
  %1481 = load i32, i32* @y.64
  %1482 = sub i32 %1480, 1
  %1483 = mul i32 %1480, %1482
  %1484 = urem i32 %1483, 2
  %1485 = icmp eq i32 %1484, 0
  %1486 = icmp slt i32 %1481, 10
  %1487 = or i1 %1485, %1486
  br i1 %1487, label %originalBB355, label %originalBB355alteredBB

originalBB355:                                    ; preds = %1479, %originalBB355alteredBB
  %1488 = load i32, i32* @x.63
  %1489 = load i32, i32* @y.64
  %1490 = sub i32 %1488, 1
  %1491 = mul i32 %1488, %1490
  %1492 = urem i32 %1491, 2
  %1493 = icmp eq i32 %1492, 0
  %1494 = icmp slt i32 %1489, 10
  %1495 = or i1 %1493, %1494
  br i1 %1495, label %originalBBpart2357, label %originalBB355alteredBB

originalBBpart2357:                               ; preds = %originalBB355
  br label %4894, !dbg !4222

1496:                                             ; preds = %originalBBpart2353
  %1497 = load i8*, i8** %21, align 8, !dbg !4223
  %1498 = load i64, i64* %28, align 8, !dbg !4224
  %1499 = add i64 %1498, 2, !dbg !4225
  %1500 = getelementptr inbounds i8, i8* %1497, i64 %1499, !dbg !4223
  %1501 = load i8, i8* %1500, align 1, !dbg !4223
  store i8 %1501, i8* %39, align 1, !dbg !4226
  %1502 = load i64, i64* %28, align 8, !dbg !4227
  %1503 = add i64 %1502, 2, !dbg !4227
  store i64 %1503, i64* %28, align 8, !dbg !4227
  br label %1504, !dbg !4228

1504:                                             ; preds = %1496
  %1505 = load i32, i32* @x.63
  %1506 = load i32, i32* @y.64
  %1507 = sub i32 %1505, 1
  %1508 = mul i32 %1505, %1507
  %1509 = urem i32 %1508, 2
  %1510 = icmp eq i32 %1509, 0
  %1511 = icmp slt i32 %1506, 10
  %1512 = or i1 %1510, %1511
  br i1 %1512, label %originalBB359, label %originalBB359alteredBB

originalBB359:                                    ; preds = %1504, %originalBB359alteredBB
  %1513 = load i64, i64* %29, align 8, !dbg !4229
  %1514 = load i64, i64* %20, align 8, !dbg !4229
  %1515 = icmp ult i64 %1513, %1514, !dbg !4229
  %1516 = load i32, i32* @x.63
  %1517 = load i32, i32* @y.64
  %1518 = sub i32 %1516, 1
  %1519 = mul i32 %1516, %1518
  %1520 = urem i32 %1519, 2
  %1521 = icmp eq i32 %1520, 0
  %1522 = icmp slt i32 %1517, 10
  %1523 = or i1 %1521, %1522
  br i1 %1523, label %originalBBpart2361, label %originalBB359alteredBB

originalBBpart2361:                               ; preds = %originalBB359
  br i1 %1515, label %1524, label %1544, !dbg !4232

1524:                                             ; preds = %originalBBpart2361
  %1525 = load i32, i32* @x.63
  %1526 = load i32, i32* @y.64
  %1527 = sub i32 %1525, 1
  %1528 = mul i32 %1525, %1527
  %1529 = urem i32 %1528, 2
  %1530 = icmp eq i32 %1529, 0
  %1531 = icmp slt i32 %1526, 10
  %1532 = or i1 %1530, %1531
  br i1 %1532, label %originalBB363, label %originalBB363alteredBB

originalBB363:                                    ; preds = %1524, %originalBB363alteredBB
  %1533 = load i8*, i8** %19, align 8, !dbg !4229
  %1534 = load i64, i64* %29, align 8, !dbg !4229
  %1535 = getelementptr inbounds i8, i8* %1533, i64 %1534, !dbg !4229
  store i8 63, i8* %1535, align 1, !dbg !4229
  %1536 = load i32, i32* @x.63
  %1537 = load i32, i32* @y.64
  %1538 = sub i32 %1536, 1
  %1539 = mul i32 %1536, %1538
  %1540 = urem i32 %1539, 2
  %1541 = icmp eq i32 %1540, 0
  %1542 = icmp slt i32 %1537, 10
  %1543 = or i1 %1541, %1542
  br i1 %1543, label %originalBBpart2365, label %originalBB363alteredBB

originalBBpart2365:                               ; preds = %originalBB363
  br label %1544, !dbg !4229

1544:                                             ; preds = %originalBBpart2365, %originalBBpart2361
  %1545 = load i32, i32* @x.63
  %1546 = load i32, i32* @y.64
  %1547 = sub i32 %1545, 1
  %1548 = mul i32 %1545, %1547
  %1549 = urem i32 %1548, 2
  %1550 = icmp eq i32 %1549, 0
  %1551 = icmp slt i32 %1546, 10
  %1552 = or i1 %1550, %1551
  br i1 %1552, label %originalBB367, label %originalBB367alteredBB

originalBB367:                                    ; preds = %1544, %originalBB367alteredBB
  %1553 = load i64, i64* %29, align 8, !dbg !4232
  %1554 = add i64 %1553, 1, !dbg !4232
  store i64 %1554, i64* %29, align 8, !dbg !4232
  %1555 = load i32, i32* @x.63
  %1556 = load i32, i32* @y.64
  %1557 = sub i32 %1555, 1
  %1558 = mul i32 %1555, %1557
  %1559 = urem i32 %1558, 2
  %1560 = icmp eq i32 %1559, 0
  %1561 = icmp slt i32 %1556, 10
  %1562 = or i1 %1560, %1561
  br i1 %1562, label %originalBBpart2375, label %originalBB367alteredBB

originalBBpart2375:                               ; preds = %originalBB367
  br label %1563, !dbg !4232

1563:                                             ; preds = %originalBBpart2375
  %1564 = load i32, i32* @x.63
  %1565 = load i32, i32* @y.64
  %1566 = sub i32 %1564, 1
  %1567 = mul i32 %1564, %1566
  %1568 = urem i32 %1567, 2
  %1569 = icmp eq i32 %1568, 0
  %1570 = icmp slt i32 %1565, 10
  %1571 = or i1 %1569, %1570
  br i1 %1571, label %originalBB377, label %originalBB377alteredBB

originalBB377:                                    ; preds = %1563, %originalBB377alteredBB
  %1572 = load i32, i32* @x.63
  %1573 = load i32, i32* @y.64
  %1574 = sub i32 %1572, 1
  %1575 = mul i32 %1572, %1574
  %1576 = urem i32 %1575, 2
  %1577 = icmp eq i32 %1576, 0
  %1578 = icmp slt i32 %1573, 10
  %1579 = or i1 %1577, %1578
  br i1 %1579, label %originalBBpart2379, label %originalBB377alteredBB

originalBBpart2379:                               ; preds = %originalBB377
  br label %1580, !dbg !4233

1580:                                             ; preds = %originalBBpart2379
  %1581 = load i32, i32* @x.63
  %1582 = load i32, i32* @y.64
  %1583 = sub i32 %1581, 1
  %1584 = mul i32 %1581, %1583
  %1585 = urem i32 %1584, 2
  %1586 = icmp eq i32 %1585, 0
  %1587 = icmp slt i32 %1582, 10
  %1588 = or i1 %1586, %1587
  br i1 %1588, label %originalBB381, label %originalBB381alteredBB

originalBB381:                                    ; preds = %1580, %originalBB381alteredBB
  %1589 = load i64, i64* %29, align 8, !dbg !4234
  %1590 = load i64, i64* %20, align 8, !dbg !4234
  %1591 = icmp ult i64 %1589, %1590, !dbg !4234
  %1592 = load i32, i32* @x.63
  %1593 = load i32, i32* @y.64
  %1594 = sub i32 %1592, 1
  %1595 = mul i32 %1592, %1594
  %1596 = urem i32 %1595, 2
  %1597 = icmp eq i32 %1596, 0
  %1598 = icmp slt i32 %1593, 10
  %1599 = or i1 %1597, %1598
  br i1 %1599, label %originalBBpart2383, label %originalBB381alteredBB

originalBBpart2383:                               ; preds = %originalBB381
  br i1 %1591, label %1600, label %1604, !dbg !4237

1600:                                             ; preds = %originalBBpart2383
  %1601 = load i8*, i8** %19, align 8, !dbg !4234
  %1602 = load i64, i64* %29, align 8, !dbg !4234
  %1603 = getelementptr inbounds i8, i8* %1601, i64 %1602, !dbg !4234
  store i8 34, i8* %1603, align 1, !dbg !4234
  br label %1604, !dbg !4234

1604:                                             ; preds = %1600, %originalBBpart2383
  %1605 = load i32, i32* @x.63
  %1606 = load i32, i32* @y.64
  %1607 = sub i32 %1605, 1
  %1608 = mul i32 %1605, %1607
  %1609 = urem i32 %1608, 2
  %1610 = icmp eq i32 %1609, 0
  %1611 = icmp slt i32 %1606, 10
  %1612 = or i1 %1610, %1611
  br i1 %1612, label %originalBB385, label %originalBB385alteredBB

originalBB385:                                    ; preds = %1604, %originalBB385alteredBB
  %1613 = load i64, i64* %29, align 8, !dbg !4237
  %1614 = add i64 %1613, 1, !dbg !4237
  store i64 %1614, i64* %29, align 8, !dbg !4237
  %1615 = load i32, i32* @x.63
  %1616 = load i32, i32* @y.64
  %1617 = sub i32 %1615, 1
  %1618 = mul i32 %1615, %1617
  %1619 = urem i32 %1618, 2
  %1620 = icmp eq i32 %1619, 0
  %1621 = icmp slt i32 %1616, 10
  %1622 = or i1 %1620, %1621
  br i1 %1622, label %originalBBpart2388, label %originalBB385alteredBB

originalBBpart2388:                               ; preds = %originalBB385
  br label %1623, !dbg !4237

1623:                                             ; preds = %originalBBpart2388
  br label %1624, !dbg !4238

1624:                                             ; preds = %1623
  %1625 = load i64, i64* %29, align 8, !dbg !4239
  %1626 = load i64, i64* %20, align 8, !dbg !4239
  %1627 = icmp ult i64 %1625, %1626, !dbg !4239
  br i1 %1627, label %1628, label %1648, !dbg !4242

1628:                                             ; preds = %1624
  %1629 = load i32, i32* @x.63
  %1630 = load i32, i32* @y.64
  %1631 = sub i32 %1629, 1
  %1632 = mul i32 %1629, %1631
  %1633 = urem i32 %1632, 2
  %1634 = icmp eq i32 %1633, 0
  %1635 = icmp slt i32 %1630, 10
  %1636 = or i1 %1634, %1635
  br i1 %1636, label %originalBB390, label %originalBB390alteredBB

originalBB390:                                    ; preds = %1628, %originalBB390alteredBB
  %1637 = load i8*, i8** %19, align 8, !dbg !4239
  %1638 = load i64, i64* %29, align 8, !dbg !4239
  %1639 = getelementptr inbounds i8, i8* %1637, i64 %1638, !dbg !4239
  store i8 34, i8* %1639, align 1, !dbg !4239
  %1640 = load i32, i32* @x.63
  %1641 = load i32, i32* @y.64
  %1642 = sub i32 %1640, 1
  %1643 = mul i32 %1640, %1642
  %1644 = urem i32 %1643, 2
  %1645 = icmp eq i32 %1644, 0
  %1646 = icmp slt i32 %1641, 10
  %1647 = or i1 %1645, %1646
  br i1 %1647, label %originalBBpart2392, label %originalBB390alteredBB

originalBBpart2392:                               ; preds = %originalBB390
  br label %1648, !dbg !4239

1648:                                             ; preds = %originalBBpart2392, %1624
  %1649 = load i32, i32* @x.63
  %1650 = load i32, i32* @y.64
  %1651 = sub i32 %1649, 1
  %1652 = mul i32 %1649, %1651
  %1653 = urem i32 %1652, 2
  %1654 = icmp eq i32 %1653, 0
  %1655 = icmp slt i32 %1650, 10
  %1656 = or i1 %1654, %1655
  br i1 %1656, label %originalBB394, label %originalBB394alteredBB

originalBB394:                                    ; preds = %1648, %originalBB394alteredBB
  %1657 = load i64, i64* %29, align 8, !dbg !4242
  %1658 = add i64 %1657, 1, !dbg !4242
  store i64 %1658, i64* %29, align 8, !dbg !4242
  %1659 = load i32, i32* @x.63
  %1660 = load i32, i32* @y.64
  %1661 = sub i32 %1659, 1
  %1662 = mul i32 %1659, %1661
  %1663 = urem i32 %1662, 2
  %1664 = icmp eq i32 %1663, 0
  %1665 = icmp slt i32 %1660, 10
  %1666 = or i1 %1664, %1665
  br i1 %1666, label %originalBBpart2401, label %originalBB394alteredBB

originalBBpart2401:                               ; preds = %originalBB394
  br label %1667, !dbg !4242

1667:                                             ; preds = %originalBBpart2401
  %1668 = load i32, i32* @x.63
  %1669 = load i32, i32* @y.64
  %1670 = sub i32 %1668, 1
  %1671 = mul i32 %1668, %1670
  %1672 = urem i32 %1671, 2
  %1673 = icmp eq i32 %1672, 0
  %1674 = icmp slt i32 %1669, 10
  %1675 = or i1 %1673, %1674
  br i1 %1675, label %originalBB403, label %originalBB403alteredBB

originalBB403:                                    ; preds = %1667, %originalBB403alteredBB
  %1676 = load i32, i32* @x.63
  %1677 = load i32, i32* @y.64
  %1678 = sub i32 %1676, 1
  %1679 = mul i32 %1676, %1678
  %1680 = urem i32 %1679, 2
  %1681 = icmp eq i32 %1680, 0
  %1682 = icmp slt i32 %1677, 10
  %1683 = or i1 %1681, %1682
  br i1 %1683, label %originalBBpart2405, label %originalBB403alteredBB

originalBBpart2405:                               ; preds = %originalBB403
  br label %1684, !dbg !4243

1684:                                             ; preds = %originalBBpart2405
  %1685 = load i64, i64* %29, align 8, !dbg !4244
  %1686 = load i64, i64* %20, align 8, !dbg !4244
  %1687 = icmp ult i64 %1685, %1686, !dbg !4244
  br i1 %1687, label %1688, label %1708, !dbg !4247

1688:                                             ; preds = %1684
  %1689 = load i32, i32* @x.63
  %1690 = load i32, i32* @y.64
  %1691 = sub i32 %1689, 1
  %1692 = mul i32 %1689, %1691
  %1693 = urem i32 %1692, 2
  %1694 = icmp eq i32 %1693, 0
  %1695 = icmp slt i32 %1690, 10
  %1696 = or i1 %1694, %1695
  br i1 %1696, label %originalBB407, label %originalBB407alteredBB

originalBB407:                                    ; preds = %1688, %originalBB407alteredBB
  %1697 = load i8*, i8** %19, align 8, !dbg !4244
  %1698 = load i64, i64* %29, align 8, !dbg !4244
  %1699 = getelementptr inbounds i8, i8* %1697, i64 %1698, !dbg !4244
  store i8 63, i8* %1699, align 1, !dbg !4244
  %1700 = load i32, i32* @x.63
  %1701 = load i32, i32* @y.64
  %1702 = sub i32 %1700, 1
  %1703 = mul i32 %1700, %1702
  %1704 = urem i32 %1703, 2
  %1705 = icmp eq i32 %1704, 0
  %1706 = icmp slt i32 %1701, 10
  %1707 = or i1 %1705, %1706
  br i1 %1707, label %originalBBpart2409, label %originalBB407alteredBB

originalBBpart2409:                               ; preds = %originalBB407
  br label %1708, !dbg !4244

1708:                                             ; preds = %originalBBpart2409, %1684
  %1709 = load i32, i32* @x.63
  %1710 = load i32, i32* @y.64
  %1711 = sub i32 %1709, 1
  %1712 = mul i32 %1709, %1711
  %1713 = urem i32 %1712, 2
  %1714 = icmp eq i32 %1713, 0
  %1715 = icmp slt i32 %1710, 10
  %1716 = or i1 %1714, %1715
  br i1 %1716, label %originalBB411, label %originalBB411alteredBB

originalBB411:                                    ; preds = %1708, %originalBB411alteredBB
  %1717 = load i64, i64* %29, align 8, !dbg !4247
  %1718 = add i64 %1717, 1, !dbg !4247
  store i64 %1718, i64* %29, align 8, !dbg !4247
  %1719 = load i32, i32* @x.63
  %1720 = load i32, i32* @y.64
  %1721 = sub i32 %1719, 1
  %1722 = mul i32 %1719, %1721
  %1723 = urem i32 %1722, 2
  %1724 = icmp eq i32 %1723, 0
  %1725 = icmp slt i32 %1720, 10
  %1726 = or i1 %1724, %1725
  br i1 %1726, label %originalBBpart2422, label %originalBB411alteredBB

originalBBpart2422:                               ; preds = %originalBB411
  br label %1727, !dbg !4247

1727:                                             ; preds = %originalBBpart2422
  %1728 = load i32, i32* @x.63
  %1729 = load i32, i32* @y.64
  %1730 = sub i32 %1728, 1
  %1731 = mul i32 %1728, %1730
  %1732 = urem i32 %1731, 2
  %1733 = icmp eq i32 %1732, 0
  %1734 = icmp slt i32 %1729, 10
  %1735 = or i1 %1733, %1734
  br i1 %1735, label %originalBB424, label %originalBB424alteredBB

originalBB424:                                    ; preds = %1727, %originalBB424alteredBB
  %1736 = load i32, i32* @x.63
  %1737 = load i32, i32* @y.64
  %1738 = sub i32 %1736, 1
  %1739 = mul i32 %1736, %1738
  %1740 = urem i32 %1739, 2
  %1741 = icmp eq i32 %1740, 0
  %1742 = icmp slt i32 %1737, 10
  %1743 = or i1 %1741, %1742
  br i1 %1743, label %originalBBpart2426, label %originalBB424alteredBB

originalBBpart2426:                               ; preds = %originalBB424
  br label %1761, !dbg !4248

1744:                                             ; preds = %1453
  %1745 = load i32, i32* @x.63
  %1746 = load i32, i32* @y.64
  %1747 = sub i32 %1745, 1
  %1748 = mul i32 %1745, %1747
  %1749 = urem i32 %1748, 2
  %1750 = icmp eq i32 %1749, 0
  %1751 = icmp slt i32 %1746, 10
  %1752 = or i1 %1750, %1751
  br i1 %1752, label %originalBB428, label %originalBB428alteredBB

originalBB428:                                    ; preds = %1744, %originalBB428alteredBB
  %1753 = load i32, i32* @x.63
  %1754 = load i32, i32* @y.64
  %1755 = sub i32 %1753, 1
  %1756 = mul i32 %1753, %1755
  %1757 = urem i32 %1756, 2
  %1758 = icmp eq i32 %1757, 0
  %1759 = icmp slt i32 %1754, 10
  %1760 = or i1 %1758, %1759
  br i1 %1760, label %originalBBpart2430, label %originalBB428alteredBB

originalBBpart2430:                               ; preds = %originalBB428
  br label %1761, !dbg !4249

1761:                                             ; preds = %originalBBpart2430, %originalBBpart2426
  br label %1762, !dbg !4250

1762:                                             ; preds = %1761, %originalBBpart2349, %originalBBpart2337, %1404
  br label %1780, !dbg !4251

1763:                                             ; preds = %1365
  %1764 = load i32, i32* @x.63
  %1765 = load i32, i32* @y.64
  %1766 = sub i32 %1764, 1
  %1767 = mul i32 %1764, %1766
  %1768 = urem i32 %1767, 2
  %1769 = icmp eq i32 %1768, 0
  %1770 = icmp slt i32 %1765, 10
  %1771 = or i1 %1769, %1770
  br i1 %1771, label %originalBB432, label %originalBB432alteredBB

originalBB432:                                    ; preds = %1763, %originalBB432alteredBB
  %1772 = load i32, i32* @x.63
  %1773 = load i32, i32* @y.64
  %1774 = sub i32 %1772, 1
  %1775 = mul i32 %1772, %1774
  %1776 = urem i32 %1775, 2
  %1777 = icmp eq i32 %1776, 0
  %1778 = icmp slt i32 %1773, 10
  %1779 = or i1 %1777, %1778
  br i1 %1779, label %originalBBpart2434, label %originalBB432alteredBB

originalBBpart2434:                               ; preds = %originalBB432
  br label %1780, !dbg !4252

1780:                                             ; preds = %originalBBpart2434, %1762, %originalBBpart2328
  %1781 = load i32, i32* @x.63
  %1782 = load i32, i32* @y.64
  %1783 = sub i32 %1781, 1
  %1784 = mul i32 %1781, %1783
  %1785 = urem i32 %1784, 2
  %1786 = icmp eq i32 %1785, 0
  %1787 = icmp slt i32 %1782, 10
  %1788 = or i1 %1786, %1787
  br i1 %1788, label %originalBB436, label %originalBB436alteredBB

originalBB436:                                    ; preds = %1780, %originalBB436alteredBB
  %1789 = load i32, i32* @x.63
  %1790 = load i32, i32* @y.64
  %1791 = sub i32 %1789, 1
  %1792 = mul i32 %1789, %1791
  %1793 = urem i32 %1792, 2
  %1794 = icmp eq i32 %1793, 0
  %1795 = icmp slt i32 %1790, 10
  %1796 = or i1 %1794, %1795
  br i1 %1796, label %originalBBpart2438, label %originalBB436alteredBB

originalBBpart2438:                               ; preds = %originalBB436
  br label %3913, !dbg !4253

1797:                                             ; preds = %originalBBpart2183
  %1798 = load i32, i32* @x.63
  %1799 = load i32, i32* @y.64
  %1800 = sub i32 %1798, 1
  %1801 = mul i32 %1798, %1800
  %1802 = urem i32 %1801, 2
  %1803 = icmp eq i32 %1802, 0
  %1804 = icmp slt i32 %1799, 10
  %1805 = or i1 %1803, %1804
  br i1 %1805, label %originalBB440, label %originalBB440alteredBB

originalBB440:                                    ; preds = %1797, %originalBB440alteredBB
  store i8 97, i8* %40, align 1, !dbg !4254
  %1806 = load i32, i32* @x.63
  %1807 = load i32, i32* @y.64
  %1808 = sub i32 %1806, 1
  %1809 = mul i32 %1806, %1808
  %1810 = urem i32 %1809, 2
  %1811 = icmp eq i32 %1810, 0
  %1812 = icmp slt i32 %1807, 10
  %1813 = or i1 %1811, %1812
  br i1 %1813, label %originalBBpart2442, label %originalBB440alteredBB

originalBBpart2442:                               ; preds = %originalBB440
  br label %1960, !dbg !4255

1814:                                             ; preds = %originalBBpart2183
  store i8 98, i8* %40, align 1, !dbg !4256
  br label %1960, !dbg !4257

1815:                                             ; preds = %originalBBpart2183
  %1816 = load i32, i32* @x.63
  %1817 = load i32, i32* @y.64
  %1818 = sub i32 %1816, 1
  %1819 = mul i32 %1816, %1818
  %1820 = urem i32 %1819, 2
  %1821 = icmp eq i32 %1820, 0
  %1822 = icmp slt i32 %1817, 10
  %1823 = or i1 %1821, %1822
  br i1 %1823, label %originalBB444, label %originalBB444alteredBB

originalBB444:                                    ; preds = %1815, %originalBB444alteredBB
  store i8 102, i8* %40, align 1, !dbg !4258
  %1824 = load i32, i32* @x.63
  %1825 = load i32, i32* @y.64
  %1826 = sub i32 %1824, 1
  %1827 = mul i32 %1824, %1826
  %1828 = urem i32 %1827, 2
  %1829 = icmp eq i32 %1828, 0
  %1830 = icmp slt i32 %1825, 10
  %1831 = or i1 %1829, %1830
  br i1 %1831, label %originalBBpart2446, label %originalBB444alteredBB

originalBBpart2446:                               ; preds = %originalBB444
  br label %1960, !dbg !4259

1832:                                             ; preds = %originalBBpart2183
  store i8 110, i8* %40, align 1, !dbg !4260
  br label %1904, !dbg !4261

1833:                                             ; preds = %originalBBpart2183
  %1834 = load i32, i32* @x.63
  %1835 = load i32, i32* @y.64
  %1836 = sub i32 %1834, 1
  %1837 = mul i32 %1834, %1836
  %1838 = urem i32 %1837, 2
  %1839 = icmp eq i32 %1838, 0
  %1840 = icmp slt i32 %1835, 10
  %1841 = or i1 %1839, %1840
  br i1 %1841, label %originalBB448, label %originalBB448alteredBB

originalBB448:                                    ; preds = %1833, %originalBB448alteredBB
  store i8 114, i8* %40, align 1, !dbg !4262
  %1842 = load i32, i32* @x.63
  %1843 = load i32, i32* @y.64
  %1844 = sub i32 %1842, 1
  %1845 = mul i32 %1842, %1844
  %1846 = urem i32 %1845, 2
  %1847 = icmp eq i32 %1846, 0
  %1848 = icmp slt i32 %1843, 10
  %1849 = or i1 %1847, %1848
  br i1 %1849, label %originalBBpart2450, label %originalBB448alteredBB

originalBBpart2450:                               ; preds = %originalBB448
  br label %1904, !dbg !4263

1850:                                             ; preds = %originalBBpart2183
  %1851 = load i32, i32* @x.63
  %1852 = load i32, i32* @y.64
  %1853 = sub i32 %1851, 1
  %1854 = mul i32 %1851, %1853
  %1855 = urem i32 %1854, 2
  %1856 = icmp eq i32 %1855, 0
  %1857 = icmp slt i32 %1852, 10
  %1858 = or i1 %1856, %1857
  br i1 %1858, label %originalBB452, label %originalBB452alteredBB

originalBB452:                                    ; preds = %1850, %originalBB452alteredBB
  store i8 116, i8* %40, align 1, !dbg !4264
  %1859 = load i32, i32* @x.63
  %1860 = load i32, i32* @y.64
  %1861 = sub i32 %1859, 1
  %1862 = mul i32 %1859, %1861
  %1863 = urem i32 %1862, 2
  %1864 = icmp eq i32 %1863, 0
  %1865 = icmp slt i32 %1860, 10
  %1866 = or i1 %1864, %1865
  br i1 %1866, label %originalBBpart2454, label %originalBB452alteredBB

originalBBpart2454:                               ; preds = %originalBB452
  br label %1904, !dbg !4265

1867:                                             ; preds = %originalBBpart2183
  store i8 118, i8* %40, align 1, !dbg !4266
  br label %1960, !dbg !4267

1868:                                             ; preds = %originalBBpart2183
  %1869 = load i8, i8* %39, align 1, !dbg !4268
  store i8 %1869, i8* %40, align 1, !dbg !4269
  %1870 = load i32, i32* %23, align 4, !dbg !4270
  %1871 = icmp eq i32 %1870, 2, !dbg !4272
  br i1 %1871, label %1872, label %1877, !dbg !4273

1872:                                             ; preds = %1868
  %1873 = load i8, i8* %35, align 1, !dbg !4274
  %1874 = trunc i8 %1873 to i1, !dbg !4274
  br i1 %1874, label %1875, label %1876, !dbg !4277

1875:                                             ; preds = %1872
  br label %4894, !dbg !4278

1876:                                             ; preds = %1872
  br label %4262, !dbg !4279

1877:                                             ; preds = %1868
  %1878 = load i32, i32* @x.63
  %1879 = load i32, i32* @y.64
  %1880 = sub i32 %1878, 1
  %1881 = mul i32 %1878, %1880
  %1882 = urem i32 %1881, 2
  %1883 = icmp eq i32 %1882, 0
  %1884 = icmp slt i32 %1879, 10
  %1885 = or i1 %1883, %1884
  br i1 %1885, label %originalBB456, label %originalBB456alteredBB

originalBB456:                                    ; preds = %1877, %originalBB456alteredBB
  %1886 = load i8, i8* %33, align 1, !dbg !4280
  %1887 = trunc i8 %1886 to i1, !dbg !4280
  %1888 = load i32, i32* @x.63
  %1889 = load i32, i32* @y.64
  %1890 = sub i32 %1888, 1
  %1891 = mul i32 %1888, %1890
  %1892 = urem i32 %1891, 2
  %1893 = icmp eq i32 %1892, 0
  %1894 = icmp slt i32 %1889, 10
  %1895 = or i1 %1893, %1894
  br i1 %1895, label %originalBBpart2458, label %originalBB456alteredBB

originalBBpart2458:                               ; preds = %originalBB456
  br i1 %1887, label %1896, label %1903, !dbg !4282

1896:                                             ; preds = %originalBBpart2458
  %1897 = load i8, i8* %35, align 1, !dbg !4283
  %1898 = trunc i8 %1897 to i1, !dbg !4283
  br i1 %1898, label %1899, label %1903, !dbg !4284

1899:                                             ; preds = %1896
  %1900 = load i64, i64* %32, align 8, !dbg !4285
  %1901 = icmp ne i64 %1900, 0, !dbg !4285
  br i1 %1901, label %1902, label %1903, !dbg !4286

1902:                                             ; preds = %1899
  br label %4262, !dbg !4287

1903:                                             ; preds = %1899, %1896, %originalBBpart2458
  br label %1904, !dbg !4285

1904:                                             ; preds = %1903, %originalBBpart2454, %originalBBpart2450, %1832
  call void @llvm.dbg.label(metadata !4288), !dbg !4289
  %1905 = load i32, i32* @x.63
  %1906 = load i32, i32* @y.64
  %1907 = sub i32 %1905, 1
  %1908 = mul i32 %1905, %1907
  %1909 = urem i32 %1908, 2
  %1910 = icmp eq i32 %1909, 0
  %1911 = icmp slt i32 %1906, 10
  %1912 = or i1 %1910, %1911
  br i1 %1912, label %originalBB460, label %originalBB460alteredBB

originalBB460:                                    ; preds = %1904, %originalBB460alteredBB
  %1913 = load i32, i32* %23, align 4, !dbg !4290
  %1914 = icmp eq i32 %1913, 2, !dbg !4292
  %1915 = load i32, i32* @x.63
  %1916 = load i32, i32* @y.64
  %1917 = sub i32 %1915, 1
  %1918 = mul i32 %1915, %1917
  %1919 = urem i32 %1918, 2
  %1920 = icmp eq i32 %1919, 0
  %1921 = icmp slt i32 %1916, 10
  %1922 = or i1 %1920, %1921
  br i1 %1922, label %originalBBpart2462, label %originalBB460alteredBB

originalBBpart2462:                               ; preds = %originalBB460
  br i1 %1914, label %1923, label %1943, !dbg !4293

1923:                                             ; preds = %originalBBpart2462
  %1924 = load i8, i8* %35, align 1, !dbg !4294
  %1925 = trunc i8 %1924 to i1, !dbg !4294
  br i1 %1925, label %1926, label %1943, !dbg !4295

1926:                                             ; preds = %1923
  %1927 = load i32, i32* @x.63
  %1928 = load i32, i32* @y.64
  %1929 = sub i32 %1927, 1
  %1930 = mul i32 %1927, %1929
  %1931 = urem i32 %1930, 2
  %1932 = icmp eq i32 %1931, 0
  %1933 = icmp slt i32 %1928, 10
  %1934 = or i1 %1932, %1933
  br i1 %1934, label %originalBB464, label %originalBB464alteredBB

originalBB464:                                    ; preds = %1926, %originalBB464alteredBB
  %1935 = load i32, i32* @x.63
  %1936 = load i32, i32* @y.64
  %1937 = sub i32 %1935, 1
  %1938 = mul i32 %1935, %1937
  %1939 = urem i32 %1938, 2
  %1940 = icmp eq i32 %1939, 0
  %1941 = icmp slt i32 %1936, 10
  %1942 = or i1 %1940, %1941
  br i1 %1942, label %originalBBpart2466, label %originalBB464alteredBB

originalBBpart2466:                               ; preds = %originalBB464
  br label %4894, !dbg !4296

1943:                                             ; preds = %1923, %originalBBpart2462
  %1944 = load i32, i32* @x.63
  %1945 = load i32, i32* @y.64
  %1946 = sub i32 %1944, 1
  %1947 = mul i32 %1944, %1946
  %1948 = urem i32 %1947, 2
  %1949 = icmp eq i32 %1948, 0
  %1950 = icmp slt i32 %1945, 10
  %1951 = or i1 %1949, %1950
  br i1 %1951, label %originalBB468, label %originalBB468alteredBB

originalBB468:                                    ; preds = %1943, %originalBB468alteredBB
  %1952 = load i32, i32* @x.63
  %1953 = load i32, i32* @y.64
  %1954 = sub i32 %1952, 1
  %1955 = mul i32 %1952, %1954
  %1956 = urem i32 %1955, 2
  %1957 = icmp eq i32 %1956, 0
  %1958 = icmp slt i32 %1953, 10
  %1959 = or i1 %1957, %1958
  br i1 %1959, label %originalBBpart2470, label %originalBB468alteredBB

originalBBpart2470:                               ; preds = %originalBB468
  br label %1960, !dbg !4294

1960:                                             ; preds = %originalBBpart2470, %1867, %originalBBpart2446, %1814, %originalBBpart2442
  call void @llvm.dbg.label(metadata !4297), !dbg !4298
  %1961 = load i32, i32* @x.63
  %1962 = load i32, i32* @y.64
  %1963 = sub i32 %1961, 1
  %1964 = mul i32 %1961, %1963
  %1965 = urem i32 %1964, 2
  %1966 = icmp eq i32 %1965, 0
  %1967 = icmp slt i32 %1962, 10
  %1968 = or i1 %1966, %1967
  br i1 %1968, label %originalBB472, label %originalBB472alteredBB

originalBB472:                                    ; preds = %1960, %originalBB472alteredBB
  %1969 = load i8, i8* %33, align 1, !dbg !4299
  %1970 = trunc i8 %1969 to i1, !dbg !4299
  %1971 = load i32, i32* @x.63
  %1972 = load i32, i32* @y.64
  %1973 = sub i32 %1971, 1
  %1974 = mul i32 %1971, %1973
  %1975 = urem i32 %1974, 2
  %1976 = icmp eq i32 %1975, 0
  %1977 = icmp slt i32 %1972, 10
  %1978 = or i1 %1976, %1977
  br i1 %1978, label %originalBBpart2474, label %originalBB472alteredBB

originalBBpart2474:                               ; preds = %originalBB472
  br i1 %1970, label %1979, label %1981, !dbg !4301

1979:                                             ; preds = %originalBBpart2474
  %1980 = load i8, i8* %40, align 1, !dbg !4302
  store i8 %1980, i8* %39, align 1, !dbg !4304
  br label %4024, !dbg !4305

1981:                                             ; preds = %originalBBpart2474
  br label %3913, !dbg !4306

1982:                                             ; preds = %originalBBpart2183, %originalBBpart2183
  %1983 = load i32, i32* @x.63
  %1984 = load i32, i32* @y.64
  %1985 = sub i32 %1983, 1
  %1986 = mul i32 %1983, %1985
  %1987 = urem i32 %1986, 2
  %1988 = icmp eq i32 %1987, 0
  %1989 = icmp slt i32 %1984, 10
  %1990 = or i1 %1988, %1989
  br i1 %1990, label %originalBB476, label %originalBB476alteredBB

originalBB476:                                    ; preds = %1982, %originalBB476alteredBB
  %1991 = load i64, i64* %22, align 8, !dbg !4307
  %1992 = icmp eq i64 %1991, -1, !dbg !4309
  %1993 = load i32, i32* @x.63
  %1994 = load i32, i32* @y.64
  %1995 = sub i32 %1993, 1
  %1996 = mul i32 %1993, %1995
  %1997 = urem i32 %1996, 2
  %1998 = icmp eq i32 %1997, 0
  %1999 = icmp slt i32 %1994, 10
  %2000 = or i1 %1998, %1999
  br i1 %2000, label %originalBBpart2478, label %originalBB476alteredBB

originalBBpart2478:                               ; preds = %originalBB476
  br i1 %1992, label %2001, label %2023, !dbg !4310

2001:                                             ; preds = %originalBBpart2478
  %2002 = load i32, i32* @x.63
  %2003 = load i32, i32* @y.64
  %2004 = sub i32 %2002, 1
  %2005 = mul i32 %2002, %2004
  %2006 = urem i32 %2005, 2
  %2007 = icmp eq i32 %2006, 0
  %2008 = icmp slt i32 %2003, 10
  %2009 = or i1 %2007, %2008
  br i1 %2009, label %originalBB480, label %originalBB480alteredBB

originalBB480:                                    ; preds = %2001, %originalBB480alteredBB
  %2010 = load i8*, i8** %21, align 8, !dbg !4311
  %2011 = getelementptr inbounds i8, i8* %2010, i64 1, !dbg !4311
  %2012 = load i8, i8* %2011, align 1, !dbg !4311
  %2013 = sext i8 %2012 to i32, !dbg !4311
  %2014 = icmp eq i32 %2013, 0, !dbg !4312
  %2015 = load i32, i32* @x.63
  %2016 = load i32, i32* @y.64
  %2017 = sub i32 %2015, 1
  %2018 = mul i32 %2015, %2017
  %2019 = urem i32 %2018, 2
  %2020 = icmp eq i32 %2019, 0
  %2021 = icmp slt i32 %2016, 10
  %2022 = or i1 %2020, %2021
  br i1 %2022, label %originalBBpart2482, label %originalBB480alteredBB

originalBBpart2482:                               ; preds = %originalBB480
  br i1 %2014, label %2043, label %2042, !dbg !4307

2023:                                             ; preds = %originalBBpart2478
  %2024 = load i32, i32* @x.63
  %2025 = load i32, i32* @y.64
  %2026 = sub i32 %2024, 1
  %2027 = mul i32 %2024, %2026
  %2028 = urem i32 %2027, 2
  %2029 = icmp eq i32 %2028, 0
  %2030 = icmp slt i32 %2025, 10
  %2031 = or i1 %2029, %2030
  br i1 %2031, label %originalBB484, label %originalBB484alteredBB

originalBB484:                                    ; preds = %2023, %originalBB484alteredBB
  %2032 = load i64, i64* %22, align 8, !dbg !4313
  %2033 = icmp eq i64 %2032, 1, !dbg !4314
  %2034 = load i32, i32* @x.63
  %2035 = load i32, i32* @y.64
  %2036 = sub i32 %2034, 1
  %2037 = mul i32 %2034, %2036
  %2038 = urem i32 %2037, 2
  %2039 = icmp eq i32 %2038, 0
  %2040 = icmp slt i32 %2035, 10
  %2041 = or i1 %2039, %2040
  br i1 %2041, label %originalBBpart2486, label %originalBB484alteredBB

originalBBpart2486:                               ; preds = %originalBB484
  br i1 %2033, label %2043, label %2042, !dbg !4310

2042:                                             ; preds = %originalBBpart2486, %originalBBpart2482
  br label %3913, !dbg !4315

2043:                                             ; preds = %originalBBpart2486, %originalBBpart2482
  %2044 = load i32, i32* @x.63
  %2045 = load i32, i32* @y.64
  %2046 = sub i32 %2044, 1
  %2047 = mul i32 %2044, %2046
  %2048 = urem i32 %2047, 2
  %2049 = icmp eq i32 %2048, 0
  %2050 = icmp slt i32 %2045, 10
  %2051 = or i1 %2049, %2050
  br i1 %2051, label %originalBB488, label %originalBB488alteredBB

originalBB488:                                    ; preds = %2043, %originalBB488alteredBB
  %2052 = load i32, i32* @x.63
  %2053 = load i32, i32* @y.64
  %2054 = sub i32 %2052, 1
  %2055 = mul i32 %2052, %2054
  %2056 = urem i32 %2055, 2
  %2057 = icmp eq i32 %2056, 0
  %2058 = icmp slt i32 %2053, 10
  %2059 = or i1 %2057, %2058
  br i1 %2059, label %originalBBpart2490, label %originalBB488alteredBB

originalBBpart2490:                               ; preds = %originalBB488
  br label %2060, !dbg !4316

2060:                                             ; preds = %originalBBpart2490, %originalBBpart2183, %originalBBpart2183
  %2061 = load i32, i32* @x.63
  %2062 = load i32, i32* @y.64
  %2063 = sub i32 %2061, 1
  %2064 = mul i32 %2061, %2063
  %2065 = urem i32 %2064, 2
  %2066 = icmp eq i32 %2065, 0
  %2067 = icmp slt i32 %2062, 10
  %2068 = or i1 %2066, %2067
  br i1 %2068, label %originalBB492, label %originalBB492alteredBB

originalBB492:                                    ; preds = %2060, %originalBB492alteredBB
  %2069 = load i64, i64* %28, align 8, !dbg !4317
  %2070 = icmp ne i64 %2069, 0, !dbg !4319
  %2071 = load i32, i32* @x.63
  %2072 = load i32, i32* @y.64
  %2073 = sub i32 %2071, 1
  %2074 = mul i32 %2071, %2073
  %2075 = urem i32 %2074, 2
  %2076 = icmp eq i32 %2075, 0
  %2077 = icmp slt i32 %2072, 10
  %2078 = or i1 %2076, %2077
  br i1 %2078, label %originalBBpart2494, label %originalBB492alteredBB

originalBBpart2494:                               ; preds = %originalBB492
  br i1 %2070, label %2079, label %2096, !dbg !4320

2079:                                             ; preds = %originalBBpart2494
  %2080 = load i32, i32* @x.63
  %2081 = load i32, i32* @y.64
  %2082 = sub i32 %2080, 1
  %2083 = mul i32 %2080, %2082
  %2084 = urem i32 %2083, 2
  %2085 = icmp eq i32 %2084, 0
  %2086 = icmp slt i32 %2081, 10
  %2087 = or i1 %2085, %2086
  br i1 %2087, label %originalBB496, label %originalBB496alteredBB

originalBB496:                                    ; preds = %2079, %originalBB496alteredBB
  %2088 = load i32, i32* @x.63
  %2089 = load i32, i32* @y.64
  %2090 = sub i32 %2088, 1
  %2091 = mul i32 %2088, %2090
  %2092 = urem i32 %2091, 2
  %2093 = icmp eq i32 %2092, 0
  %2094 = icmp slt i32 %2089, 10
  %2095 = or i1 %2093, %2094
  br i1 %2095, label %originalBBpart2498, label %originalBB496alteredBB

originalBBpart2498:                               ; preds = %originalBB496
  br label %3913, !dbg !4321

2096:                                             ; preds = %originalBBpart2494
  %2097 = load i32, i32* @x.63
  %2098 = load i32, i32* @y.64
  %2099 = sub i32 %2097, 1
  %2100 = mul i32 %2097, %2099
  %2101 = urem i32 %2100, 2
  %2102 = icmp eq i32 %2101, 0
  %2103 = icmp slt i32 %2098, 10
  %2104 = or i1 %2102, %2103
  br i1 %2104, label %originalBB500, label %originalBB500alteredBB

originalBB500:                                    ; preds = %2096, %originalBB500alteredBB
  %2105 = load i32, i32* @x.63
  %2106 = load i32, i32* @y.64
  %2107 = sub i32 %2105, 1
  %2108 = mul i32 %2105, %2107
  %2109 = urem i32 %2108, 2
  %2110 = icmp eq i32 %2109, 0
  %2111 = icmp slt i32 %2106, 10
  %2112 = or i1 %2110, %2111
  br i1 %2112, label %originalBBpart2502, label %originalBB500alteredBB

originalBBpart2502:                               ; preds = %originalBB500
  br label %2113, !dbg !4322

2113:                                             ; preds = %originalBBpart2502, %originalBBpart2183
  %2114 = load i32, i32* @x.63
  %2115 = load i32, i32* @y.64
  %2116 = sub i32 %2114, 1
  %2117 = mul i32 %2114, %2116
  %2118 = urem i32 %2117, 2
  %2119 = icmp eq i32 %2118, 0
  %2120 = icmp slt i32 %2115, 10
  %2121 = or i1 %2119, %2120
  br i1 %2121, label %originalBB504, label %originalBB504alteredBB

originalBB504:                                    ; preds = %2113, %originalBB504alteredBB
  store i8 1, i8* %43, align 1, !dbg !4323
  %2122 = load i32, i32* @x.63
  %2123 = load i32, i32* @y.64
  %2124 = sub i32 %2122, 1
  %2125 = mul i32 %2122, %2124
  %2126 = urem i32 %2125, 2
  %2127 = icmp eq i32 %2126, 0
  %2128 = icmp slt i32 %2123, 10
  %2129 = or i1 %2127, %2128
  br i1 %2129, label %originalBBpart2506, label %originalBB504alteredBB

originalBBpart2506:                               ; preds = %originalBB504
  br label %2130, !dbg !4324

2130:                                             ; preds = %originalBBpart2506, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183
  %2131 = load i32, i32* @x.63
  %2132 = load i32, i32* @y.64
  %2133 = sub i32 %2131, 1
  %2134 = mul i32 %2131, %2133
  %2135 = urem i32 %2134, 2
  %2136 = icmp eq i32 %2135, 0
  %2137 = icmp slt i32 %2132, 10
  %2138 = or i1 %2136, %2137
  br i1 %2138, label %originalBB508, label %originalBB508alteredBB

originalBB508:                                    ; preds = %2130, %originalBB508alteredBB
  %2139 = load i32, i32* %23, align 4, !dbg !4325
  %2140 = icmp eq i32 %2139, 2, !dbg !4327
  %2141 = load i32, i32* @x.63
  %2142 = load i32, i32* @y.64
  %2143 = sub i32 %2141, 1
  %2144 = mul i32 %2141, %2143
  %2145 = urem i32 %2144, 2
  %2146 = icmp eq i32 %2145, 0
  %2147 = icmp slt i32 %2142, 10
  %2148 = or i1 %2146, %2147
  br i1 %2148, label %originalBBpart2510, label %originalBB508alteredBB

originalBBpart2510:                               ; preds = %originalBB508
  br i1 %2140, label %2149, label %2169, !dbg !4328

2149:                                             ; preds = %originalBBpart2510
  %2150 = load i32, i32* @x.63
  %2151 = load i32, i32* @y.64
  %2152 = sub i32 %2150, 1
  %2153 = mul i32 %2150, %2152
  %2154 = urem i32 %2153, 2
  %2155 = icmp eq i32 %2154, 0
  %2156 = icmp slt i32 %2151, 10
  %2157 = or i1 %2155, %2156
  br i1 %2157, label %originalBB512, label %originalBB512alteredBB

originalBB512:                                    ; preds = %2149, %originalBB512alteredBB
  %2158 = load i8, i8* %35, align 1, !dbg !4329
  %2159 = trunc i8 %2158 to i1, !dbg !4329
  %2160 = load i32, i32* @x.63
  %2161 = load i32, i32* @y.64
  %2162 = sub i32 %2160, 1
  %2163 = mul i32 %2160, %2162
  %2164 = urem i32 %2163, 2
  %2165 = icmp eq i32 %2164, 0
  %2166 = icmp slt i32 %2161, 10
  %2167 = or i1 %2165, %2166
  br i1 %2167, label %originalBBpart2514, label %originalBB512alteredBB

originalBBpart2514:                               ; preds = %originalBB512
  br i1 %2159, label %2168, label %2169, !dbg !4330

2168:                                             ; preds = %originalBBpart2514
  br label %4894, !dbg !4331

2169:                                             ; preds = %originalBBpart2514, %originalBBpart2510
  br label %3913, !dbg !4332

2170:                                             ; preds = %originalBBpart2183
  %2171 = load i32, i32* @x.63
  %2172 = load i32, i32* @y.64
  %2173 = sub i32 %2171, 1
  %2174 = mul i32 %2171, %2173
  %2175 = urem i32 %2174, 2
  %2176 = icmp eq i32 %2175, 0
  %2177 = icmp slt i32 %2172, 10
  %2178 = or i1 %2176, %2177
  br i1 %2178, label %originalBB516, label %originalBB516alteredBB

originalBB516:                                    ; preds = %2170, %originalBB516alteredBB
  store i8 1, i8* %37, align 1, !dbg !4333
  store i8 1, i8* %43, align 1, !dbg !4334
  %2179 = load i32, i32* %23, align 4, !dbg !4335
  %2180 = icmp eq i32 %2179, 2, !dbg !4337
  %2181 = load i32, i32* @x.63
  %2182 = load i32, i32* @y.64
  %2183 = sub i32 %2181, 1
  %2184 = mul i32 %2181, %2183
  %2185 = urem i32 %2184, 2
  %2186 = icmp eq i32 %2185, 0
  %2187 = icmp slt i32 %2182, 10
  %2188 = or i1 %2186, %2187
  br i1 %2188, label %originalBBpart2518, label %originalBB516alteredBB

originalBBpart2518:                               ; preds = %originalBB516
  br i1 %2180, label %2189, label %2430, !dbg !4338

2189:                                             ; preds = %originalBBpart2518
  %2190 = load i32, i32* @x.63
  %2191 = load i32, i32* @y.64
  %2192 = sub i32 %2190, 1
  %2193 = mul i32 %2190, %2192
  %2194 = urem i32 %2193, 2
  %2195 = icmp eq i32 %2194, 0
  %2196 = icmp slt i32 %2191, 10
  %2197 = or i1 %2195, %2196
  br i1 %2197, label %originalBB520, label %originalBB520alteredBB

originalBB520:                                    ; preds = %2189, %originalBB520alteredBB
  %2198 = load i8, i8* %35, align 1, !dbg !4339
  %2199 = trunc i8 %2198 to i1, !dbg !4339
  %2200 = load i32, i32* @x.63
  %2201 = load i32, i32* @y.64
  %2202 = sub i32 %2200, 1
  %2203 = mul i32 %2200, %2202
  %2204 = urem i32 %2203, 2
  %2205 = icmp eq i32 %2204, 0
  %2206 = icmp slt i32 %2201, 10
  %2207 = or i1 %2205, %2206
  br i1 %2207, label %originalBBpart2522, label %originalBB520alteredBB

originalBBpart2522:                               ; preds = %originalBB520
  br i1 %2199, label %2208, label %2209, !dbg !4342

2208:                                             ; preds = %originalBBpart2522
  br label %4894, !dbg !4343

2209:                                             ; preds = %originalBBpart2522
  %2210 = load i64, i64* %20, align 8, !dbg !4344
  %2211 = icmp ne i64 %2210, 0, !dbg !4344
  br i1 %2211, label %2212, label %2249, !dbg !4346

2212:                                             ; preds = %2209
  %2213 = load i32, i32* @x.63
  %2214 = load i32, i32* @y.64
  %2215 = sub i32 %2213, 1
  %2216 = mul i32 %2213, %2215
  %2217 = urem i32 %2216, 2
  %2218 = icmp eq i32 %2217, 0
  %2219 = icmp slt i32 %2214, 10
  %2220 = or i1 %2218, %2219
  br i1 %2220, label %originalBB524, label %originalBB524alteredBB

originalBB524:                                    ; preds = %2212, %originalBB524alteredBB
  %2221 = load i64, i64* %30, align 8, !dbg !4347
  %2222 = icmp ne i64 %2221, 0, !dbg !4347
  %2223 = load i32, i32* @x.63
  %2224 = load i32, i32* @y.64
  %2225 = sub i32 %2223, 1
  %2226 = mul i32 %2223, %2225
  %2227 = urem i32 %2226, 2
  %2228 = icmp eq i32 %2227, 0
  %2229 = icmp slt i32 %2224, 10
  %2230 = or i1 %2228, %2229
  br i1 %2230, label %originalBBpart2526, label %originalBB524alteredBB

originalBBpart2526:                               ; preds = %originalBB524
  br i1 %2222, label %2249, label %2231, !dbg !4348

2231:                                             ; preds = %originalBBpart2526
  %2232 = load i32, i32* @x.63
  %2233 = load i32, i32* @y.64
  %2234 = sub i32 %2232, 1
  %2235 = mul i32 %2232, %2234
  %2236 = urem i32 %2235, 2
  %2237 = icmp eq i32 %2236, 0
  %2238 = icmp slt i32 %2233, 10
  %2239 = or i1 %2237, %2238
  br i1 %2239, label %originalBB528, label %originalBB528alteredBB

originalBB528:                                    ; preds = %2231, %originalBB528alteredBB
  %2240 = load i64, i64* %20, align 8, !dbg !4349
  store i64 %2240, i64* %30, align 8, !dbg !4351
  store i64 0, i64* %20, align 8, !dbg !4352
  %2241 = load i32, i32* @x.63
  %2242 = load i32, i32* @y.64
  %2243 = sub i32 %2241, 1
  %2244 = mul i32 %2241, %2243
  %2245 = urem i32 %2244, 2
  %2246 = icmp eq i32 %2245, 0
  %2247 = icmp slt i32 %2242, 10
  %2248 = or i1 %2246, %2247
  br i1 %2248, label %originalBBpart2530, label %originalBB528alteredBB

originalBBpart2530:                               ; preds = %originalBB528
  br label %2249, !dbg !4353

2249:                                             ; preds = %originalBBpart2530, %originalBBpart2526, %2209
  br label %2250, !dbg !4354

2250:                                             ; preds = %2249
  %2251 = load i32, i32* @x.63
  %2252 = load i32, i32* @y.64
  %2253 = sub i32 %2251, 1
  %2254 = mul i32 %2251, %2253
  %2255 = urem i32 %2254, 2
  %2256 = icmp eq i32 %2255, 0
  %2257 = icmp slt i32 %2252, 10
  %2258 = or i1 %2256, %2257
  br i1 %2258, label %originalBB532, label %originalBB532alteredBB

originalBB532:                                    ; preds = %2250, %originalBB532alteredBB
  %2259 = load i64, i64* %29, align 8, !dbg !4355
  %2260 = load i64, i64* %20, align 8, !dbg !4355
  %2261 = icmp ult i64 %2259, %2260, !dbg !4355
  %2262 = load i32, i32* @x.63
  %2263 = load i32, i32* @y.64
  %2264 = sub i32 %2262, 1
  %2265 = mul i32 %2262, %2264
  %2266 = urem i32 %2265, 2
  %2267 = icmp eq i32 %2266, 0
  %2268 = icmp slt i32 %2263, 10
  %2269 = or i1 %2267, %2268
  br i1 %2269, label %originalBBpart2534, label %originalBB532alteredBB

originalBBpart2534:                               ; preds = %originalBB532
  br i1 %2261, label %2270, label %2274, !dbg !4358

2270:                                             ; preds = %originalBBpart2534
  %2271 = load i8*, i8** %19, align 8, !dbg !4355
  %2272 = load i64, i64* %29, align 8, !dbg !4355
  %2273 = getelementptr inbounds i8, i8* %2271, i64 %2272, !dbg !4355
  store i8 39, i8* %2273, align 1, !dbg !4355
  br label %2274, !dbg !4355

2274:                                             ; preds = %2270, %originalBBpart2534
  %2275 = load i32, i32* @x.63
  %2276 = load i32, i32* @y.64
  %2277 = sub i32 %2275, 1
  %2278 = mul i32 %2275, %2277
  %2279 = urem i32 %2278, 2
  %2280 = icmp eq i32 %2279, 0
  %2281 = icmp slt i32 %2276, 10
  %2282 = or i1 %2280, %2281
  br i1 %2282, label %originalBB536, label %originalBB536alteredBB

originalBB536:                                    ; preds = %2274, %originalBB536alteredBB
  %2283 = load i64, i64* %29, align 8, !dbg !4358
  %2284 = add i64 %2283, 1, !dbg !4358
  store i64 %2284, i64* %29, align 8, !dbg !4358
  %2285 = load i32, i32* @x.63
  %2286 = load i32, i32* @y.64
  %2287 = sub i32 %2285, 1
  %2288 = mul i32 %2285, %2287
  %2289 = urem i32 %2288, 2
  %2290 = icmp eq i32 %2289, 0
  %2291 = icmp slt i32 %2286, 10
  %2292 = or i1 %2290, %2291
  br i1 %2292, label %originalBBpart2541, label %originalBB536alteredBB

originalBBpart2541:                               ; preds = %originalBB536
  br label %2293, !dbg !4358

2293:                                             ; preds = %originalBBpart2541
  %2294 = load i32, i32* @x.63
  %2295 = load i32, i32* @y.64
  %2296 = sub i32 %2294, 1
  %2297 = mul i32 %2294, %2296
  %2298 = urem i32 %2297, 2
  %2299 = icmp eq i32 %2298, 0
  %2300 = icmp slt i32 %2295, 10
  %2301 = or i1 %2299, %2300
  br i1 %2301, label %originalBB543, label %originalBB543alteredBB

originalBB543:                                    ; preds = %2293, %originalBB543alteredBB
  %2302 = load i32, i32* @x.63
  %2303 = load i32, i32* @y.64
  %2304 = sub i32 %2302, 1
  %2305 = mul i32 %2302, %2304
  %2306 = urem i32 %2305, 2
  %2307 = icmp eq i32 %2306, 0
  %2308 = icmp slt i32 %2303, 10
  %2309 = or i1 %2307, %2308
  br i1 %2309, label %originalBBpart2545, label %originalBB543alteredBB

originalBBpart2545:                               ; preds = %originalBB543
  br label %2310, !dbg !4359

2310:                                             ; preds = %originalBBpart2545
  %2311 = load i32, i32* @x.63
  %2312 = load i32, i32* @y.64
  %2313 = sub i32 %2311, 1
  %2314 = mul i32 %2311, %2313
  %2315 = urem i32 %2314, 2
  %2316 = icmp eq i32 %2315, 0
  %2317 = icmp slt i32 %2312, 10
  %2318 = or i1 %2316, %2317
  br i1 %2318, label %originalBB547, label %originalBB547alteredBB

originalBB547:                                    ; preds = %2310, %originalBB547alteredBB
  %2319 = load i64, i64* %29, align 8, !dbg !4360
  %2320 = load i64, i64* %20, align 8, !dbg !4360
  %2321 = icmp ult i64 %2319, %2320, !dbg !4360
  %2322 = load i32, i32* @x.63
  %2323 = load i32, i32* @y.64
  %2324 = sub i32 %2322, 1
  %2325 = mul i32 %2322, %2324
  %2326 = urem i32 %2325, 2
  %2327 = icmp eq i32 %2326, 0
  %2328 = icmp slt i32 %2323, 10
  %2329 = or i1 %2327, %2328
  br i1 %2329, label %originalBBpart2549, label %originalBB547alteredBB

originalBBpart2549:                               ; preds = %originalBB547
  br i1 %2321, label %2330, label %2334, !dbg !4363

2330:                                             ; preds = %originalBBpart2549
  %2331 = load i8*, i8** %19, align 8, !dbg !4360
  %2332 = load i64, i64* %29, align 8, !dbg !4360
  %2333 = getelementptr inbounds i8, i8* %2331, i64 %2332, !dbg !4360
  store i8 92, i8* %2333, align 1, !dbg !4360
  br label %2334, !dbg !4360

2334:                                             ; preds = %2330, %originalBBpart2549
  %2335 = load i32, i32* @x.63
  %2336 = load i32, i32* @y.64
  %2337 = sub i32 %2335, 1
  %2338 = mul i32 %2335, %2337
  %2339 = urem i32 %2338, 2
  %2340 = icmp eq i32 %2339, 0
  %2341 = icmp slt i32 %2336, 10
  %2342 = or i1 %2340, %2341
  br i1 %2342, label %originalBB551, label %originalBB551alteredBB

originalBB551:                                    ; preds = %2334, %originalBB551alteredBB
  %2343 = load i64, i64* %29, align 8, !dbg !4363
  %2344 = add i64 %2343, 1, !dbg !4363
  store i64 %2344, i64* %29, align 8, !dbg !4363
  %2345 = load i32, i32* @x.63
  %2346 = load i32, i32* @y.64
  %2347 = sub i32 %2345, 1
  %2348 = mul i32 %2345, %2347
  %2349 = urem i32 %2348, 2
  %2350 = icmp eq i32 %2349, 0
  %2351 = icmp slt i32 %2346, 10
  %2352 = or i1 %2350, %2351
  br i1 %2352, label %originalBBpart2560, label %originalBB551alteredBB

originalBBpart2560:                               ; preds = %originalBB551
  br label %2353, !dbg !4363

2353:                                             ; preds = %originalBBpart2560
  %2354 = load i32, i32* @x.63
  %2355 = load i32, i32* @y.64
  %2356 = sub i32 %2354, 1
  %2357 = mul i32 %2354, %2356
  %2358 = urem i32 %2357, 2
  %2359 = icmp eq i32 %2358, 0
  %2360 = icmp slt i32 %2355, 10
  %2361 = or i1 %2359, %2360
  br i1 %2361, label %originalBB562, label %originalBB562alteredBB

originalBB562:                                    ; preds = %2353, %originalBB562alteredBB
  %2362 = load i32, i32* @x.63
  %2363 = load i32, i32* @y.64
  %2364 = sub i32 %2362, 1
  %2365 = mul i32 %2362, %2364
  %2366 = urem i32 %2365, 2
  %2367 = icmp eq i32 %2366, 0
  %2368 = icmp slt i32 %2363, 10
  %2369 = or i1 %2367, %2368
  br i1 %2369, label %originalBBpart2564, label %originalBB562alteredBB

originalBBpart2564:                               ; preds = %originalBB562
  br label %2370, !dbg !4364

2370:                                             ; preds = %originalBBpart2564
  %2371 = load i64, i64* %29, align 8, !dbg !4365
  %2372 = load i64, i64* %20, align 8, !dbg !4365
  %2373 = icmp ult i64 %2371, %2372, !dbg !4365
  br i1 %2373, label %2374, label %2394, !dbg !4368

2374:                                             ; preds = %2370
  %2375 = load i32, i32* @x.63
  %2376 = load i32, i32* @y.64
  %2377 = sub i32 %2375, 1
  %2378 = mul i32 %2375, %2377
  %2379 = urem i32 %2378, 2
  %2380 = icmp eq i32 %2379, 0
  %2381 = icmp slt i32 %2376, 10
  %2382 = or i1 %2380, %2381
  br i1 %2382, label %originalBB566, label %originalBB566alteredBB

originalBB566:                                    ; preds = %2374, %originalBB566alteredBB
  %2383 = load i8*, i8** %19, align 8, !dbg !4365
  %2384 = load i64, i64* %29, align 8, !dbg !4365
  %2385 = getelementptr inbounds i8, i8* %2383, i64 %2384, !dbg !4365
  store i8 39, i8* %2385, align 1, !dbg !4365
  %2386 = load i32, i32* @x.63
  %2387 = load i32, i32* @y.64
  %2388 = sub i32 %2386, 1
  %2389 = mul i32 %2386, %2388
  %2390 = urem i32 %2389, 2
  %2391 = icmp eq i32 %2390, 0
  %2392 = icmp slt i32 %2387, 10
  %2393 = or i1 %2391, %2392
  br i1 %2393, label %originalBBpart2568, label %originalBB566alteredBB

originalBBpart2568:                               ; preds = %originalBB566
  br label %2394, !dbg !4365

2394:                                             ; preds = %originalBBpart2568, %2370
  %2395 = load i32, i32* @x.63
  %2396 = load i32, i32* @y.64
  %2397 = sub i32 %2395, 1
  %2398 = mul i32 %2395, %2397
  %2399 = urem i32 %2398, 2
  %2400 = icmp eq i32 %2399, 0
  %2401 = icmp slt i32 %2396, 10
  %2402 = or i1 %2400, %2401
  br i1 %2402, label %originalBB570, label %originalBB570alteredBB

originalBB570:                                    ; preds = %2394, %originalBB570alteredBB
  %2403 = load i64, i64* %29, align 8, !dbg !4368
  %2404 = add i64 %2403, 1, !dbg !4368
  store i64 %2404, i64* %29, align 8, !dbg !4368
  %2405 = load i32, i32* @x.63
  %2406 = load i32, i32* @y.64
  %2407 = sub i32 %2405, 1
  %2408 = mul i32 %2405, %2407
  %2409 = urem i32 %2408, 2
  %2410 = icmp eq i32 %2409, 0
  %2411 = icmp slt i32 %2406, 10
  %2412 = or i1 %2410, %2411
  br i1 %2412, label %originalBBpart2572, label %originalBB570alteredBB

originalBBpart2572:                               ; preds = %originalBB570
  br label %2413, !dbg !4368

2413:                                             ; preds = %originalBBpart2572
  %2414 = load i32, i32* @x.63
  %2415 = load i32, i32* @y.64
  %2416 = sub i32 %2414, 1
  %2417 = mul i32 %2414, %2416
  %2418 = urem i32 %2417, 2
  %2419 = icmp eq i32 %2418, 0
  %2420 = icmp slt i32 %2415, 10
  %2421 = or i1 %2419, %2420
  br i1 %2421, label %originalBB574, label %originalBB574alteredBB

originalBB574:                                    ; preds = %2413, %originalBB574alteredBB
  store i8 0, i8* %36, align 1, !dbg !4369
  %2422 = load i32, i32* @x.63
  %2423 = load i32, i32* @y.64
  %2424 = sub i32 %2422, 1
  %2425 = mul i32 %2422, %2424
  %2426 = urem i32 %2425, 2
  %2427 = icmp eq i32 %2426, 0
  %2428 = icmp slt i32 %2423, 10
  %2429 = or i1 %2427, %2428
  br i1 %2429, label %originalBBpart2576, label %originalBB574alteredBB

originalBBpart2576:                               ; preds = %originalBB574
  br label %2430, !dbg !4370

2430:                                             ; preds = %originalBBpart2576, %originalBBpart2518
  br label %3913, !dbg !4371

2431:                                             ; preds = %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183, %originalBBpart2183
  store i8 1, i8* %43, align 1, !dbg !4372
  br label %3913, !dbg !4373

2432:                                             ; preds = %originalBBpart2183
  call void @llvm.dbg.declare(metadata i64* %44, metadata !4374, metadata !DIExpression()), !dbg !4376
  call void @llvm.dbg.declare(metadata i8* %45, metadata !4377, metadata !DIExpression()), !dbg !4378
  %2433 = load i8, i8* %34, align 1, !dbg !4379
  %2434 = trunc i8 %2433 to i1, !dbg !4379
  br i1 %2434, label %2435, label %2463, !dbg !4381

2435:                                             ; preds = %2432
  %2436 = load i32, i32* @x.63
  %2437 = load i32, i32* @y.64
  %2438 = sub i32 %2436, 1
  %2439 = mul i32 %2436, %2438
  %2440 = urem i32 %2439, 2
  %2441 = icmp eq i32 %2440, 0
  %2442 = icmp slt i32 %2437, 10
  %2443 = or i1 %2441, %2442
  br i1 %2443, label %originalBB578, label %originalBB578alteredBB

originalBB578:                                    ; preds = %2435, %originalBB578alteredBB
  store i64 1, i64* %44, align 8, !dbg !4382
  %2444 = call i16** @__ctype_b_loc() #15, !dbg !4384
  %2445 = load i16*, i16** %2444, align 8, !dbg !4384
  %2446 = load i8, i8* %39, align 1, !dbg !4384
  %2447 = zext i8 %2446 to i32, !dbg !4384
  %2448 = sext i32 %2447 to i64, !dbg !4384
  %2449 = getelementptr inbounds i16, i16* %2445, i64 %2448, !dbg !4384
  %2450 = load i16, i16* %2449, align 2, !dbg !4384
  %2451 = zext i16 %2450 to i32, !dbg !4384
  %2452 = and i32 %2451, 16384, !dbg !4384
  %2453 = icmp ne i32 %2452, 0, !dbg !4385
  %2454 = zext i1 %2453 to i8, !dbg !4386
  store i8 %2454, i8* %45, align 1, !dbg !4386
  %2455 = load i32, i32* @x.63
  %2456 = load i32, i32* @y.64
  %2457 = sub i32 %2455, 1
  %2458 = mul i32 %2455, %2457
  %2459 = urem i32 %2458, 2
  %2460 = icmp eq i32 %2459, 0
  %2461 = icmp slt i32 %2456, 10
  %2462 = or i1 %2460, %2461
  br i1 %2462, label %originalBBpart2585, label %originalBB578alteredBB

originalBBpart2585:                               ; preds = %originalBB578
  br label %2960, !dbg !4387

2463:                                             ; preds = %2432
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %46, metadata !4388, metadata !DIExpression()), !dbg !4402
  %2464 = load i32, i32* @x.63
  %2465 = load i32, i32* @y.64
  %2466 = sub i32 %2464, 1
  %2467 = mul i32 %2464, %2466
  %2468 = urem i32 %2467, 2
  %2469 = icmp eq i32 %2468, 0
  %2470 = icmp slt i32 %2465, 10
  %2471 = or i1 %2469, %2470
  br i1 %2471, label %originalBB587, label %originalBB587alteredBB

originalBB587:                                    ; preds = %2463, %originalBB587alteredBB
  %2472 = bitcast %struct.__mbstate_t* %46 to i8*, !dbg !4403
  call void @llvm.memset.p0i8.i64(i8* align 4 %2472, i8 0, i64 8, i1 false), !dbg !4403
  store i64 0, i64* %44, align 8, !dbg !4404
  store i8 1, i8* %45, align 1, !dbg !4405
  %2473 = load i64, i64* %22, align 8, !dbg !4406
  %2474 = icmp eq i64 %2473, -1, !dbg !4408
  %2475 = load i32, i32* @x.63
  %2476 = load i32, i32* @y.64
  %2477 = sub i32 %2475, 1
  %2478 = mul i32 %2475, %2477
  %2479 = urem i32 %2478, 2
  %2480 = icmp eq i32 %2479, 0
  %2481 = icmp slt i32 %2476, 10
  %2482 = or i1 %2480, %2481
  br i1 %2482, label %originalBBpart2589, label %originalBB587alteredBB

originalBBpart2589:                               ; preds = %originalBB587
  br i1 %2474, label %2483, label %2502, !dbg !4409

2483:                                             ; preds = %originalBBpart2589
  %2484 = load i32, i32* @x.63
  %2485 = load i32, i32* @y.64
  %2486 = sub i32 %2484, 1
  %2487 = mul i32 %2484, %2486
  %2488 = urem i32 %2487, 2
  %2489 = icmp eq i32 %2488, 0
  %2490 = icmp slt i32 %2485, 10
  %2491 = or i1 %2489, %2490
  br i1 %2491, label %originalBB591, label %originalBB591alteredBB

originalBB591:                                    ; preds = %2483, %originalBB591alteredBB
  %2492 = load i8*, i8** %21, align 8, !dbg !4410
  %2493 = call i64 @strlen(i8* %2492) #13, !dbg !4411
  store i64 %2493, i64* %22, align 8, !dbg !4412
  %2494 = load i32, i32* @x.63
  %2495 = load i32, i32* @y.64
  %2496 = sub i32 %2494, 1
  %2497 = mul i32 %2494, %2496
  %2498 = urem i32 %2497, 2
  %2499 = icmp eq i32 %2498, 0
  %2500 = icmp slt i32 %2495, 10
  %2501 = or i1 %2499, %2500
  br i1 %2501, label %originalBBpart2593, label %originalBB591alteredBB

originalBBpart2593:                               ; preds = %originalBB591
  br label %2502, !dbg !4413

2502:                                             ; preds = %originalBBpart2593, %originalBBpart2589
  %2503 = load i32, i32* @x.63
  %2504 = load i32, i32* @y.64
  %2505 = sub i32 %2503, 1
  %2506 = mul i32 %2503, %2505
  %2507 = urem i32 %2506, 2
  %2508 = icmp eq i32 %2507, 0
  %2509 = icmp slt i32 %2504, 10
  %2510 = or i1 %2508, %2509
  br i1 %2510, label %originalBB595, label %originalBB595alteredBB

originalBB595:                                    ; preds = %2502, %originalBB595alteredBB
  %2511 = load i32, i32* @x.63
  %2512 = load i32, i32* @y.64
  %2513 = sub i32 %2511, 1
  %2514 = mul i32 %2511, %2513
  %2515 = urem i32 %2514, 2
  %2516 = icmp eq i32 %2515, 0
  %2517 = icmp slt i32 %2512, 10
  %2518 = or i1 %2516, %2517
  br i1 %2518, label %originalBBpart2597, label %originalBB595alteredBB

originalBBpart2597:                               ; preds = %originalBB595
  br label %2519, !dbg !4414

2519:                                             ; preds = %originalBBpart2744, %originalBBpart2597
  call void @llvm.dbg.declare(metadata i32* %47, metadata !4415, metadata !DIExpression()), !dbg !4418
  call void @llvm.dbg.declare(metadata i64* %48, metadata !4419, metadata !DIExpression()), !dbg !4420
  %2520 = load i32, i32* @x.63
  %2521 = load i32, i32* @y.64
  %2522 = sub i32 %2520, 1
  %2523 = mul i32 %2520, %2522
  %2524 = urem i32 %2523, 2
  %2525 = icmp eq i32 %2524, 0
  %2526 = icmp slt i32 %2521, 10
  %2527 = or i1 %2525, %2526
  br i1 %2527, label %originalBB599, label %originalBB599alteredBB

originalBB599:                                    ; preds = %2519, %originalBB599alteredBB
  %2528 = load i8*, i8** %21, align 8, !dbg !4421
  %2529 = load i64, i64* %28, align 8, !dbg !4422
  %2530 = load i64, i64* %44, align 8, !dbg !4423
  %2531 = add i64 %2529, %2530, !dbg !4424
  %2532 = getelementptr inbounds i8, i8* %2528, i64 %2531, !dbg !4421
  %2533 = load i64, i64* %22, align 8, !dbg !4425
  %2534 = load i64, i64* %28, align 8, !dbg !4426
  %2535 = load i64, i64* %44, align 8, !dbg !4427
  %2536 = add i64 %2534, %2535, !dbg !4428
  %2537 = sub i64 %2533, %2536, !dbg !4429
  %2538 = call i64 @rpl_mbrtowc(i32* %47, i8* %2532, i64 %2537, %struct.__mbstate_t* %46), !dbg !4430
  store i64 %2538, i64* %48, align 8, !dbg !4420
  %2539 = load i64, i64* %48, align 8, !dbg !4431
  %2540 = icmp eq i64 %2539, 0, !dbg !4433
  %2541 = load i32, i32* @x.63
  %2542 = load i32, i32* @y.64
  %2543 = sub i32 %2541, 1
  %2544 = mul i32 %2541, %2543
  %2545 = urem i32 %2544, 2
  %2546 = icmp eq i32 %2545, 0
  %2547 = icmp slt i32 %2542, 10
  %2548 = or i1 %2546, %2547
  br i1 %2548, label %originalBBpart2613, label %originalBB599alteredBB

originalBBpart2613:                               ; preds = %originalBB599
  br i1 %2540, label %2549, label %2566, !dbg !4434

2549:                                             ; preds = %originalBBpart2613
  %2550 = load i32, i32* @x.63
  %2551 = load i32, i32* @y.64
  %2552 = sub i32 %2550, 1
  %2553 = mul i32 %2550, %2552
  %2554 = urem i32 %2553, 2
  %2555 = icmp eq i32 %2554, 0
  %2556 = icmp slt i32 %2551, 10
  %2557 = or i1 %2555, %2556
  br i1 %2557, label %originalBB615, label %originalBB615alteredBB

originalBB615:                                    ; preds = %2549, %originalBB615alteredBB
  %2558 = load i32, i32* @x.63
  %2559 = load i32, i32* @y.64
  %2560 = sub i32 %2558, 1
  %2561 = mul i32 %2558, %2560
  %2562 = urem i32 %2561, 2
  %2563 = icmp eq i32 %2562, 0
  %2564 = icmp slt i32 %2559, 10
  %2565 = or i1 %2563, %2564
  br i1 %2565, label %originalBBpart2617, label %originalBB615alteredBB

originalBBpart2617:                               ; preds = %originalBB615
  br label %2959, !dbg !4435

2566:                                             ; preds = %originalBBpart2613
  %2567 = load i32, i32* @x.63
  %2568 = load i32, i32* @y.64
  %2569 = sub i32 %2567, 1
  %2570 = mul i32 %2567, %2569
  %2571 = urem i32 %2570, 2
  %2572 = icmp eq i32 %2571, 0
  %2573 = icmp slt i32 %2568, 10
  %2574 = or i1 %2572, %2573
  br i1 %2574, label %originalBB619, label %originalBB619alteredBB

originalBB619:                                    ; preds = %2566, %originalBB619alteredBB
  %2575 = load i64, i64* %48, align 8, !dbg !4436
  %2576 = icmp eq i64 %2575, -1, !dbg !4438
  %2577 = load i32, i32* @x.63
  %2578 = load i32, i32* @y.64
  %2579 = sub i32 %2577, 1
  %2580 = mul i32 %2577, %2579
  %2581 = urem i32 %2580, 2
  %2582 = icmp eq i32 %2581, 0
  %2583 = icmp slt i32 %2578, 10
  %2584 = or i1 %2582, %2583
  br i1 %2584, label %originalBBpart2621, label %originalBB619alteredBB

originalBBpart2621:                               ; preds = %originalBB619
  br i1 %2576, label %2585, label %2602, !dbg !4439

2585:                                             ; preds = %originalBBpart2621
  %2586 = load i32, i32* @x.63
  %2587 = load i32, i32* @y.64
  %2588 = sub i32 %2586, 1
  %2589 = mul i32 %2586, %2588
  %2590 = urem i32 %2589, 2
  %2591 = icmp eq i32 %2590, 0
  %2592 = icmp slt i32 %2587, 10
  %2593 = or i1 %2591, %2592
  br i1 %2593, label %originalBB623, label %originalBB623alteredBB

originalBB623:                                    ; preds = %2585, %originalBB623alteredBB
  store i8 0, i8* %45, align 1, !dbg !4440
  %2594 = load i32, i32* @x.63
  %2595 = load i32, i32* @y.64
  %2596 = sub i32 %2594, 1
  %2597 = mul i32 %2594, %2596
  %2598 = urem i32 %2597, 2
  %2599 = icmp eq i32 %2598, 0
  %2600 = icmp slt i32 %2595, 10
  %2601 = or i1 %2599, %2600
  br i1 %2601, label %originalBBpart2625, label %originalBB623alteredBB

originalBBpart2625:                               ; preds = %originalBB623
  br label %2959, !dbg !4442

2602:                                             ; preds = %originalBBpart2621
  %2603 = load i32, i32* @x.63
  %2604 = load i32, i32* @y.64
  %2605 = sub i32 %2603, 1
  %2606 = mul i32 %2603, %2605
  %2607 = urem i32 %2606, 2
  %2608 = icmp eq i32 %2607, 0
  %2609 = icmp slt i32 %2604, 10
  %2610 = or i1 %2608, %2609
  br i1 %2610, label %originalBB627, label %originalBB627alteredBB

originalBB627:                                    ; preds = %2602, %originalBB627alteredBB
  %2611 = load i64, i64* %48, align 8, !dbg !4443
  %2612 = icmp eq i64 %2611, -2, !dbg !4445
  %2613 = load i32, i32* @x.63
  %2614 = load i32, i32* @y.64
  %2615 = sub i32 %2613, 1
  %2616 = mul i32 %2613, %2615
  %2617 = urem i32 %2616, 2
  %2618 = icmp eq i32 %2617, 0
  %2619 = icmp slt i32 %2614, 10
  %2620 = or i1 %2618, %2619
  br i1 %2620, label %originalBBpart2629, label %originalBB627alteredBB

originalBBpart2629:                               ; preds = %originalBB627
  br i1 %2612, label %2621, label %2723, !dbg !4446

2621:                                             ; preds = %originalBBpart2629
  %2622 = load i32, i32* @x.63
  %2623 = load i32, i32* @y.64
  %2624 = sub i32 %2622, 1
  %2625 = mul i32 %2622, %2624
  %2626 = urem i32 %2625, 2
  %2627 = icmp eq i32 %2626, 0
  %2628 = icmp slt i32 %2623, 10
  %2629 = or i1 %2627, %2628
  br i1 %2629, label %originalBB631, label %originalBB631alteredBB

originalBB631:                                    ; preds = %2621, %originalBB631alteredBB
  store i8 0, i8* %45, align 1, !dbg !4447
  %2630 = load i32, i32* @x.63
  %2631 = load i32, i32* @y.64
  %2632 = sub i32 %2630, 1
  %2633 = mul i32 %2630, %2632
  %2634 = urem i32 %2633, 2
  %2635 = icmp eq i32 %2634, 0
  %2636 = icmp slt i32 %2631, 10
  %2637 = or i1 %2635, %2636
  br i1 %2637, label %originalBBpart2633, label %originalBB631alteredBB

originalBBpart2633:                               ; preds = %originalBB631
  br label %2638, !dbg !4449

2638:                                             ; preds = %originalBBpart2663, %originalBBpart2633
  %2639 = load i32, i32* @x.63
  %2640 = load i32, i32* @y.64
  %2641 = sub i32 %2639, 1
  %2642 = mul i32 %2639, %2641
  %2643 = urem i32 %2642, 2
  %2644 = icmp eq i32 %2643, 0
  %2645 = icmp slt i32 %2640, 10
  %2646 = or i1 %2644, %2645
  br i1 %2646, label %originalBB635, label %originalBB635alteredBB

originalBB635:                                    ; preds = %2638, %originalBB635alteredBB
  %2647 = load i64, i64* %28, align 8, !dbg !4450
  %2648 = load i64, i64* %44, align 8, !dbg !4451
  %2649 = add i64 %2647, %2648, !dbg !4452
  %2650 = load i64, i64* %22, align 8, !dbg !4453
  %2651 = icmp ult i64 %2649, %2650, !dbg !4454
  %2652 = load i32, i32* @x.63
  %2653 = load i32, i32* @y.64
  %2654 = sub i32 %2652, 1
  %2655 = mul i32 %2652, %2654
  %2656 = urem i32 %2655, 2
  %2657 = icmp eq i32 %2656, 0
  %2658 = icmp slt i32 %2653, 10
  %2659 = or i1 %2657, %2658
  br i1 %2659, label %originalBBpart2645, label %originalBB635alteredBB

originalBBpart2645:                               ; preds = %originalBB635
  br i1 %2651, label %2660, label %2669, !dbg !4455

2660:                                             ; preds = %originalBBpart2645
  %2661 = load i8*, i8** %21, align 8, !dbg !4456
  %2662 = load i64, i64* %28, align 8, !dbg !4457
  %2663 = load i64, i64* %44, align 8, !dbg !4458
  %2664 = add i64 %2662, %2663, !dbg !4459
  %2665 = getelementptr inbounds i8, i8* %2661, i64 %2664, !dbg !4456
  %2666 = load i8, i8* %2665, align 1, !dbg !4456
  %2667 = sext i8 %2666 to i32, !dbg !4456
  %2668 = icmp ne i32 %2667, 0, !dbg !4455
  br label %2669

2669:                                             ; preds = %2660, %originalBBpart2645
  %2670 = phi i1 [ false, %originalBBpart2645 ], [ %2668, %2660 ], !dbg !4460
  %2671 = load i32, i32* @x.63
  %2672 = load i32, i32* @y.64
  %2673 = sub i32 %2671, 1
  %2674 = mul i32 %2671, %2673
  %2675 = urem i32 %2674, 2
  %2676 = icmp eq i32 %2675, 0
  %2677 = icmp slt i32 %2672, 10
  %2678 = or i1 %2676, %2677
  br i1 %2678, label %originalBB647, label %originalBB647alteredBB

originalBB647:                                    ; preds = %2669, %originalBB647alteredBB
  %2679 = load i32, i32* @x.63
  %2680 = load i32, i32* @y.64
  %2681 = sub i32 %2679, 1
  %2682 = mul i32 %2679, %2681
  %2683 = urem i32 %2682, 2
  %2684 = icmp eq i32 %2683, 0
  %2685 = icmp slt i32 %2680, 10
  %2686 = or i1 %2684, %2685
  br i1 %2686, label %originalBBpart2649, label %originalBB647alteredBB

originalBBpart2649:                               ; preds = %originalBB647
  br i1 %2670, label %2687, label %2706, !dbg !4449

2687:                                             ; preds = %originalBBpart2649
  %2688 = load i32, i32* @x.63
  %2689 = load i32, i32* @y.64
  %2690 = sub i32 %2688, 1
  %2691 = mul i32 %2688, %2690
  %2692 = urem i32 %2691, 2
  %2693 = icmp eq i32 %2692, 0
  %2694 = icmp slt i32 %2689, 10
  %2695 = or i1 %2693, %2694
  br i1 %2695, label %originalBB651, label %originalBB651alteredBB

originalBB651:                                    ; preds = %2687, %originalBB651alteredBB
  %2696 = load i64, i64* %44, align 8, !dbg !4461
  %2697 = add i64 %2696, 1, !dbg !4461
  store i64 %2697, i64* %44, align 8, !dbg !4461
  %2698 = load i32, i32* @x.63
  %2699 = load i32, i32* @y.64
  %2700 = sub i32 %2698, 1
  %2701 = mul i32 %2698, %2700
  %2702 = urem i32 %2701, 2
  %2703 = icmp eq i32 %2702, 0
  %2704 = icmp slt i32 %2699, 10
  %2705 = or i1 %2703, %2704
  br i1 %2705, label %originalBBpart2663, label %originalBB651alteredBB

originalBBpart2663:                               ; preds = %originalBB651
  br label %2638, !dbg !4449, !llvm.loop !4462

2706:                                             ; preds = %originalBBpart2649
  %2707 = load i32, i32* @x.63
  %2708 = load i32, i32* @y.64
  %2709 = sub i32 %2707, 1
  %2710 = mul i32 %2707, %2709
  %2711 = urem i32 %2710, 2
  %2712 = icmp eq i32 %2711, 0
  %2713 = icmp slt i32 %2708, 10
  %2714 = or i1 %2712, %2713
  br i1 %2714, label %originalBB665, label %originalBB665alteredBB

originalBB665:                                    ; preds = %2706, %originalBB665alteredBB
  %2715 = load i32, i32* @x.63
  %2716 = load i32, i32* @y.64
  %2717 = sub i32 %2715, 1
  %2718 = mul i32 %2715, %2717
  %2719 = urem i32 %2718, 2
  %2720 = icmp eq i32 %2719, 0
  %2721 = icmp slt i32 %2716, 10
  %2722 = or i1 %2720, %2721
  br i1 %2722, label %originalBBpart2667, label %originalBB665alteredBB

originalBBpart2667:                               ; preds = %originalBB665
  br label %2959, !dbg !4463

2723:                                             ; preds = %originalBBpart2629
  %2724 = load i8, i8* %35, align 1, !dbg !4464
  %2725 = trunc i8 %2724 to i1, !dbg !4464
  br i1 %2725, label %2726, label %2879, !dbg !4467

2726:                                             ; preds = %2723
  %2727 = load i32, i32* @x.63
  %2728 = load i32, i32* @y.64
  %2729 = sub i32 %2727, 1
  %2730 = mul i32 %2727, %2729
  %2731 = urem i32 %2730, 2
  %2732 = icmp eq i32 %2731, 0
  %2733 = icmp slt i32 %2728, 10
  %2734 = or i1 %2732, %2733
  br i1 %2734, label %originalBB669, label %originalBB669alteredBB

originalBB669:                                    ; preds = %2726, %originalBB669alteredBB
  %2735 = load i32, i32* %23, align 4, !dbg !4468
  %2736 = icmp eq i32 %2735, 2, !dbg !4469
  %2737 = load i32, i32* @x.63
  %2738 = load i32, i32* @y.64
  %2739 = sub i32 %2737, 1
  %2740 = mul i32 %2737, %2739
  %2741 = urem i32 %2740, 2
  %2742 = icmp eq i32 %2741, 0
  %2743 = icmp slt i32 %2738, 10
  %2744 = or i1 %2742, %2743
  br i1 %2744, label %originalBBpart2671, label %originalBB669alteredBB

originalBBpart2671:                               ; preds = %originalBB669
  br i1 %2736, label %2745, label %2879, !dbg !4470

2745:                                             ; preds = %originalBBpart2671
  call void @llvm.dbg.declare(metadata i64* %49, metadata !4471, metadata !DIExpression()), !dbg !4473
  store i64 1, i64* %49, align 8, !dbg !4474
  br label %2746, !dbg !4476

2746:                                             ; preds = %originalBBpart2710, %2745
  %2747 = load i32, i32* @x.63
  %2748 = load i32, i32* @y.64
  %2749 = sub i32 %2747, 1
  %2750 = mul i32 %2747, %2749
  %2751 = urem i32 %2750, 2
  %2752 = icmp eq i32 %2751, 0
  %2753 = icmp slt i32 %2748, 10
  %2754 = or i1 %2752, %2753
  br i1 %2754, label %originalBB673, label %originalBB673alteredBB

originalBB673:                                    ; preds = %2746, %originalBB673alteredBB
  %2755 = load i64, i64* %49, align 8, !dbg !4477
  %2756 = load i64, i64* %48, align 8, !dbg !4479
  %2757 = icmp ult i64 %2755, %2756, !dbg !4480
  %2758 = load i32, i32* @x.63
  %2759 = load i32, i32* @y.64
  %2760 = sub i32 %2758, 1
  %2761 = mul i32 %2758, %2760
  %2762 = urem i32 %2761, 2
  %2763 = icmp eq i32 %2762, 0
  %2764 = icmp slt i32 %2759, 10
  %2765 = or i1 %2763, %2764
  br i1 %2765, label %originalBBpart2675, label %originalBB673alteredBB

originalBBpart2675:                               ; preds = %originalBB673
  br i1 %2757, label %2766, label %2862, !dbg !4481

2766:                                             ; preds = %originalBBpart2675
  %2767 = load i32, i32* @x.63
  %2768 = load i32, i32* @y.64
  %2769 = sub i32 %2767, 1
  %2770 = mul i32 %2767, %2769
  %2771 = urem i32 %2770, 2
  %2772 = icmp eq i32 %2771, 0
  %2773 = icmp slt i32 %2768, 10
  %2774 = or i1 %2772, %2773
  br i1 %2774, label %originalBB677, label %originalBB677alteredBB

originalBB677:                                    ; preds = %2766, %originalBB677alteredBB
  %2775 = load i8*, i8** %21, align 8, !dbg !4482
  %2776 = load i64, i64* %28, align 8, !dbg !4483
  %2777 = load i64, i64* %44, align 8, !dbg !4484
  %2778 = add i64 %2776, %2777, !dbg !4485
  %2779 = load i64, i64* %49, align 8, !dbg !4486
  %2780 = add i64 %2778, %2779, !dbg !4487
  %2781 = getelementptr inbounds i8, i8* %2775, i64 %2780, !dbg !4482
  %2782 = load i8, i8* %2781, align 1, !dbg !4482
  %2783 = sext i8 %2782 to i32, !dbg !4482
  %2784 = load i32, i32* @x.63
  %2785 = load i32, i32* @y.64
  %2786 = sub i32 %2784, 1
  %2787 = mul i32 %2784, %2786
  %2788 = urem i32 %2787, 2
  %2789 = icmp eq i32 %2788, 0
  %2790 = icmp slt i32 %2785, 10
  %2791 = or i1 %2789, %2790
  br i1 %2791, label %originalBBpart2689, label %originalBB677alteredBB

originalBBpart2689:                               ; preds = %originalBB677
  switch i32 %2783, label %2809 [
    i32 91, label %2792
    i32 92, label %2792
    i32 94, label %2792
    i32 96, label %2792
    i32 124, label %2792
  ], !dbg !4488

2792:                                             ; preds = %originalBBpart2689, %originalBBpart2689, %originalBBpart2689, %originalBBpart2689, %originalBBpart2689
  %2793 = load i32, i32* @x.63
  %2794 = load i32, i32* @y.64
  %2795 = sub i32 %2793, 1
  %2796 = mul i32 %2793, %2795
  %2797 = urem i32 %2796, 2
  %2798 = icmp eq i32 %2797, 0
  %2799 = icmp slt i32 %2794, 10
  %2800 = or i1 %2798, %2799
  br i1 %2800, label %originalBB691, label %originalBB691alteredBB

originalBB691:                                    ; preds = %2792, %originalBB691alteredBB
  %2801 = load i32, i32* @x.63
  %2802 = load i32, i32* @y.64
  %2803 = sub i32 %2801, 1
  %2804 = mul i32 %2801, %2803
  %2805 = urem i32 %2804, 2
  %2806 = icmp eq i32 %2805, 0
  %2807 = icmp slt i32 %2802, 10
  %2808 = or i1 %2806, %2807
  br i1 %2808, label %originalBBpart2693, label %originalBB691alteredBB

originalBBpart2693:                               ; preds = %originalBB691
  br label %4894, !dbg !4489

2809:                                             ; preds = %originalBBpart2689
  %2810 = load i32, i32* @x.63
  %2811 = load i32, i32* @y.64
  %2812 = sub i32 %2810, 1
  %2813 = mul i32 %2810, %2812
  %2814 = urem i32 %2813, 2
  %2815 = icmp eq i32 %2814, 0
  %2816 = icmp slt i32 %2811, 10
  %2817 = or i1 %2815, %2816
  br i1 %2817, label %originalBB695, label %originalBB695alteredBB

originalBB695:                                    ; preds = %2809, %originalBB695alteredBB
  %2818 = load i32, i32* @x.63
  %2819 = load i32, i32* @y.64
  %2820 = sub i32 %2818, 1
  %2821 = mul i32 %2818, %2820
  %2822 = urem i32 %2821, 2
  %2823 = icmp eq i32 %2822, 0
  %2824 = icmp slt i32 %2819, 10
  %2825 = or i1 %2823, %2824
  br i1 %2825, label %originalBBpart2697, label %originalBB695alteredBB

originalBBpart2697:                               ; preds = %originalBB695
  br label %2826, !dbg !4491

2826:                                             ; preds = %originalBBpart2697
  %2827 = load i32, i32* @x.63
  %2828 = load i32, i32* @y.64
  %2829 = sub i32 %2827, 1
  %2830 = mul i32 %2827, %2829
  %2831 = urem i32 %2830, 2
  %2832 = icmp eq i32 %2831, 0
  %2833 = icmp slt i32 %2828, 10
  %2834 = or i1 %2832, %2833
  br i1 %2834, label %originalBB699, label %originalBB699alteredBB

originalBB699:                                    ; preds = %2826, %originalBB699alteredBB
  %2835 = load i32, i32* @x.63
  %2836 = load i32, i32* @y.64
  %2837 = sub i32 %2835, 1
  %2838 = mul i32 %2835, %2837
  %2839 = urem i32 %2838, 2
  %2840 = icmp eq i32 %2839, 0
  %2841 = icmp slt i32 %2836, 10
  %2842 = or i1 %2840, %2841
  br i1 %2842, label %originalBBpart2701, label %originalBB699alteredBB

originalBBpart2701:                               ; preds = %originalBB699
  br label %2843, !dbg !4492

2843:                                             ; preds = %originalBBpart2701
  %2844 = load i32, i32* @x.63
  %2845 = load i32, i32* @y.64
  %2846 = sub i32 %2844, 1
  %2847 = mul i32 %2844, %2846
  %2848 = urem i32 %2847, 2
  %2849 = icmp eq i32 %2848, 0
  %2850 = icmp slt i32 %2845, 10
  %2851 = or i1 %2849, %2850
  br i1 %2851, label %originalBB703, label %originalBB703alteredBB

originalBB703:                                    ; preds = %2843, %originalBB703alteredBB
  %2852 = load i64, i64* %49, align 8, !dbg !4493
  %2853 = add i64 %2852, 1, !dbg !4493
  store i64 %2853, i64* %49, align 8, !dbg !4493
  %2854 = load i32, i32* @x.63
  %2855 = load i32, i32* @y.64
  %2856 = sub i32 %2854, 1
  %2857 = mul i32 %2854, %2856
  %2858 = urem i32 %2857, 2
  %2859 = icmp eq i32 %2858, 0
  %2860 = icmp slt i32 %2855, 10
  %2861 = or i1 %2859, %2860
  br i1 %2861, label %originalBBpart2710, label %originalBB703alteredBB

originalBBpart2710:                               ; preds = %originalBB703
  br label %2746, !dbg !4494, !llvm.loop !4495

2862:                                             ; preds = %originalBBpart2675
  %2863 = load i32, i32* @x.63
  %2864 = load i32, i32* @y.64
  %2865 = sub i32 %2863, 1
  %2866 = mul i32 %2863, %2865
  %2867 = urem i32 %2866, 2
  %2868 = icmp eq i32 %2867, 0
  %2869 = icmp slt i32 %2864, 10
  %2870 = or i1 %2868, %2869
  br i1 %2870, label %originalBB712, label %originalBB712alteredBB

originalBB712:                                    ; preds = %2862, %originalBB712alteredBB
  %2871 = load i32, i32* @x.63
  %2872 = load i32, i32* @y.64
  %2873 = sub i32 %2871, 1
  %2874 = mul i32 %2871, %2873
  %2875 = urem i32 %2874, 2
  %2876 = icmp eq i32 %2875, 0
  %2877 = icmp slt i32 %2872, 10
  %2878 = or i1 %2876, %2877
  br i1 %2878, label %originalBBpart2714, label %originalBB712alteredBB

originalBBpart2714:                               ; preds = %originalBB712
  br label %2879, !dbg !4497

2879:                                             ; preds = %originalBBpart2714, %originalBBpart2671, %2723
  %2880 = load i32, i32* %47, align 4, !dbg !4498
  %2881 = call i32 @iswprint(i32 %2880) #10, !dbg !4500
  %2882 = icmp ne i32 %2881, 0, !dbg !4500
  br i1 %2882, label %2900, label %2883, !dbg !4501

2883:                                             ; preds = %2879
  %2884 = load i32, i32* @x.63
  %2885 = load i32, i32* @y.64
  %2886 = sub i32 %2884, 1
  %2887 = mul i32 %2884, %2886
  %2888 = urem i32 %2887, 2
  %2889 = icmp eq i32 %2888, 0
  %2890 = icmp slt i32 %2885, 10
  %2891 = or i1 %2889, %2890
  br i1 %2891, label %originalBB716, label %originalBB716alteredBB

originalBB716:                                    ; preds = %2883, %originalBB716alteredBB
  store i8 0, i8* %45, align 1, !dbg !4502
  %2892 = load i32, i32* @x.63
  %2893 = load i32, i32* @y.64
  %2894 = sub i32 %2892, 1
  %2895 = mul i32 %2892, %2894
  %2896 = urem i32 %2895, 2
  %2897 = icmp eq i32 %2896, 0
  %2898 = icmp slt i32 %2893, 10
  %2899 = or i1 %2897, %2898
  br i1 %2899, label %originalBBpart2718, label %originalBB716alteredBB

originalBBpart2718:                               ; preds = %originalBB716
  br label %2900, !dbg !4503

2900:                                             ; preds = %originalBBpart2718, %2879
  %2901 = load i32, i32* @x.63
  %2902 = load i32, i32* @y.64
  %2903 = sub i32 %2901, 1
  %2904 = mul i32 %2901, %2903
  %2905 = urem i32 %2904, 2
  %2906 = icmp eq i32 %2905, 0
  %2907 = icmp slt i32 %2902, 10
  %2908 = or i1 %2906, %2907
  br i1 %2908, label %originalBB720, label %originalBB720alteredBB

originalBB720:                                    ; preds = %2900, %originalBB720alteredBB
  %2909 = load i64, i64* %48, align 8, !dbg !4504
  %2910 = load i64, i64* %44, align 8, !dbg !4505
  %2911 = add i64 %2910, %2909, !dbg !4505
  store i64 %2911, i64* %44, align 8, !dbg !4505
  %2912 = load i32, i32* @x.63
  %2913 = load i32, i32* @y.64
  %2914 = sub i32 %2912, 1
  %2915 = mul i32 %2912, %2914
  %2916 = urem i32 %2915, 2
  %2917 = icmp eq i32 %2916, 0
  %2918 = icmp slt i32 %2913, 10
  %2919 = or i1 %2917, %2918
  br i1 %2919, label %originalBBpart2723, label %originalBB720alteredBB

originalBBpart2723:                               ; preds = %originalBB720
  br label %2920

2920:                                             ; preds = %originalBBpart2723
  br label %2921

2921:                                             ; preds = %2920
  br label %2922

2922:                                             ; preds = %2921
  %2923 = load i32, i32* @x.63
  %2924 = load i32, i32* @y.64
  %2925 = sub i32 %2923, 1
  %2926 = mul i32 %2923, %2925
  %2927 = urem i32 %2926, 2
  %2928 = icmp eq i32 %2927, 0
  %2929 = icmp slt i32 %2924, 10
  %2930 = or i1 %2928, %2929
  br i1 %2930, label %originalBB725, label %originalBB725alteredBB

originalBB725:                                    ; preds = %2922, %originalBB725alteredBB
  %2931 = load i32, i32* @x.63
  %2932 = load i32, i32* @y.64
  %2933 = sub i32 %2931, 1
  %2934 = mul i32 %2931, %2933
  %2935 = urem i32 %2934, 2
  %2936 = icmp eq i32 %2935, 0
  %2937 = icmp slt i32 %2932, 10
  %2938 = or i1 %2936, %2937
  br i1 %2938, label %originalBBpart2727, label %originalBB725alteredBB

originalBBpart2727:                               ; preds = %originalBB725
  br label %2939, !dbg !4506

2939:                                             ; preds = %originalBBpart2727
  %2940 = load i32, i32* @x.63
  %2941 = load i32, i32* @y.64
  %2942 = sub i32 %2940, 1
  %2943 = mul i32 %2940, %2942
  %2944 = urem i32 %2943, 2
  %2945 = icmp eq i32 %2944, 0
  %2946 = icmp slt i32 %2941, 10
  %2947 = or i1 %2945, %2946
  br i1 %2947, label %originalBB729, label %originalBB729alteredBB

originalBB729:                                    ; preds = %2939, %originalBB729alteredBB
  %2948 = call i32 @mbsinit(%struct.__mbstate_t* %46) #13, !dbg !4507
  %2949 = icmp ne i32 %2948, 0, !dbg !4508
  %2950 = xor i1 %2949, true, !dbg !4508
  %2951 = load i32, i32* @x.63
  %2952 = load i32, i32* @y.64
  %2953 = sub i32 %2951, 1
  %2954 = mul i32 %2951, %2953
  %2955 = urem i32 %2954, 2
  %2956 = icmp eq i32 %2955, 0
  %2957 = icmp slt i32 %2952, 10
  %2958 = or i1 %2956, %2957
  br i1 %2958, label %originalBBpart2744, label %originalBB729alteredBB

originalBBpart2744:                               ; preds = %originalBB729
  br i1 %2950, label %2519, label %2959, !dbg !4506, !llvm.loop !4509

2959:                                             ; preds = %originalBBpart2744, %originalBBpart2667, %originalBBpart2625, %originalBBpart2617
  br label %2960

2960:                                             ; preds = %2959, %originalBBpart2585
  %2961 = load i32, i32* @x.63
  %2962 = load i32, i32* @y.64
  %2963 = sub i32 %2961, 1
  %2964 = mul i32 %2961, %2963
  %2965 = urem i32 %2964, 2
  %2966 = icmp eq i32 %2965, 0
  %2967 = icmp slt i32 %2962, 10
  %2968 = or i1 %2966, %2967
  br i1 %2968, label %originalBB746, label %originalBB746alteredBB

originalBB746:                                    ; preds = %2960, %originalBB746alteredBB
  %2969 = load i8, i8* %45, align 1, !dbg !4511
  %2970 = trunc i8 %2969 to i1, !dbg !4511
  %2971 = zext i1 %2970 to i8, !dbg !4512
  store i8 %2971, i8* %43, align 1, !dbg !4512
  %2972 = load i64, i64* %44, align 8, !dbg !4513
  %2973 = icmp ult i64 1, %2972, !dbg !4515
  %2974 = load i32, i32* @x.63
  %2975 = load i32, i32* @y.64
  %2976 = sub i32 %2974, 1
  %2977 = mul i32 %2974, %2976
  %2978 = urem i32 %2977, 2
  %2979 = icmp eq i32 %2978, 0
  %2980 = icmp slt i32 %2975, 10
  %2981 = or i1 %2979, %2980
  br i1 %2981, label %originalBBpart2748, label %originalBB746alteredBB

originalBBpart2748:                               ; preds = %originalBB746
  br i1 %2973, label %3020, label %2982, !dbg !4516

2982:                                             ; preds = %originalBBpart2748
  %2983 = load i32, i32* @x.63
  %2984 = load i32, i32* @y.64
  %2985 = sub i32 %2983, 1
  %2986 = mul i32 %2983, %2985
  %2987 = urem i32 %2986, 2
  %2988 = icmp eq i32 %2987, 0
  %2989 = icmp slt i32 %2984, 10
  %2990 = or i1 %2988, %2989
  br i1 %2990, label %originalBB750, label %originalBB750alteredBB

originalBB750:                                    ; preds = %2982, %originalBB750alteredBB
  %2991 = load i8, i8* %33, align 1, !dbg !4517
  %2992 = trunc i8 %2991 to i1, !dbg !4517
  %2993 = load i32, i32* @x.63
  %2994 = load i32, i32* @y.64
  %2995 = sub i32 %2993, 1
  %2996 = mul i32 %2993, %2995
  %2997 = urem i32 %2996, 2
  %2998 = icmp eq i32 %2997, 0
  %2999 = icmp slt i32 %2994, 10
  %3000 = or i1 %2998, %2999
  br i1 %3000, label %originalBBpart2752, label %originalBB750alteredBB

originalBBpart2752:                               ; preds = %originalBB750
  br i1 %2992, label %3001, label %3896, !dbg !4518

3001:                                             ; preds = %originalBBpart2752
  %3002 = load i32, i32* @x.63
  %3003 = load i32, i32* @y.64
  %3004 = sub i32 %3002, 1
  %3005 = mul i32 %3002, %3004
  %3006 = urem i32 %3005, 2
  %3007 = icmp eq i32 %3006, 0
  %3008 = icmp slt i32 %3003, 10
  %3009 = or i1 %3007, %3008
  br i1 %3009, label %originalBB754, label %originalBB754alteredBB

originalBB754:                                    ; preds = %3001, %originalBB754alteredBB
  %3010 = load i8, i8* %45, align 1, !dbg !4519
  %3011 = trunc i8 %3010 to i1, !dbg !4519
  %3012 = load i32, i32* @x.63
  %3013 = load i32, i32* @y.64
  %3014 = sub i32 %3012, 1
  %3015 = mul i32 %3012, %3014
  %3016 = urem i32 %3015, 2
  %3017 = icmp eq i32 %3016, 0
  %3018 = icmp slt i32 %3013, 10
  %3019 = or i1 %3017, %3018
  br i1 %3019, label %originalBBpart2756, label %originalBB754alteredBB

originalBBpart2756:                               ; preds = %originalBB754
  br i1 %3011, label %3896, label %3020, !dbg !4520

3020:                                             ; preds = %originalBBpart2756, %originalBBpart2748
  call void @llvm.dbg.declare(metadata i64* %50, metadata !4521, metadata !DIExpression()), !dbg !4523
  %3021 = load i64, i64* %28, align 8, !dbg !4524
  %3022 = load i64, i64* %44, align 8, !dbg !4525
  %3023 = add i64 %3021, %3022, !dbg !4526
  store i64 %3023, i64* %50, align 8, !dbg !4523
  br label %3024, !dbg !4527

3024:                                             ; preds = %originalBBpart21044, %3020
  %3025 = load i8, i8* %33, align 1, !dbg !4528
  %3026 = trunc i8 %3025 to i1, !dbg !4528
  br i1 %3026, label %3027, label %3436, !dbg !4533

3027:                                             ; preds = %3024
  %3028 = load i8, i8* %45, align 1, !dbg !4534
  %3029 = trunc i8 %3028 to i1, !dbg !4534
  br i1 %3029, label %3436, label %3030, !dbg !4535

3030:                                             ; preds = %3027
  br label %3031, !dbg !4536

3031:                                             ; preds = %3030
  %3032 = load i8, i8* %35, align 1, !dbg !4538
  %3033 = trunc i8 %3032 to i1, !dbg !4538
  br i1 %3033, label %3034, label %3051, !dbg !4541

3034:                                             ; preds = %3031
  %3035 = load i32, i32* @x.63
  %3036 = load i32, i32* @y.64
  %3037 = sub i32 %3035, 1
  %3038 = mul i32 %3035, %3037
  %3039 = urem i32 %3038, 2
  %3040 = icmp eq i32 %3039, 0
  %3041 = icmp slt i32 %3036, 10
  %3042 = or i1 %3040, %3041
  br i1 %3042, label %originalBB758, label %originalBB758alteredBB

originalBB758:                                    ; preds = %3034, %originalBB758alteredBB
  %3043 = load i32, i32* @x.63
  %3044 = load i32, i32* @y.64
  %3045 = sub i32 %3043, 1
  %3046 = mul i32 %3043, %3045
  %3047 = urem i32 %3046, 2
  %3048 = icmp eq i32 %3047, 0
  %3049 = icmp slt i32 %3044, 10
  %3050 = or i1 %3048, %3049
  br i1 %3050, label %originalBBpart2760, label %originalBB758alteredBB

originalBBpart2760:                               ; preds = %originalBB758
  br label %4894, !dbg !4538

3051:                                             ; preds = %3031
  %3052 = load i32, i32* @x.63
  %3053 = load i32, i32* @y.64
  %3054 = sub i32 %3052, 1
  %3055 = mul i32 %3052, %3054
  %3056 = urem i32 %3055, 2
  %3057 = icmp eq i32 %3056, 0
  %3058 = icmp slt i32 %3053, 10
  %3059 = or i1 %3057, %3058
  br i1 %3059, label %originalBB762, label %originalBB762alteredBB

originalBB762:                                    ; preds = %3051, %originalBB762alteredBB
  store i8 1, i8* %42, align 1, !dbg !4541
  %3060 = load i32, i32* %23, align 4, !dbg !4542
  %3061 = icmp eq i32 %3060, 2, !dbg !4542
  %3062 = load i32, i32* @x.63
  %3063 = load i32, i32* @y.64
  %3064 = sub i32 %3062, 1
  %3065 = mul i32 %3062, %3064
  %3066 = urem i32 %3065, 2
  %3067 = icmp eq i32 %3066, 0
  %3068 = icmp slt i32 %3063, 10
  %3069 = or i1 %3067, %3068
  br i1 %3069, label %originalBBpart2764, label %originalBB762alteredBB

originalBBpart2764:                               ; preds = %originalBB762
  br i1 %3061, label %3070, label %3286, !dbg !4542

3070:                                             ; preds = %originalBBpart2764
  %3071 = load i32, i32* @x.63
  %3072 = load i32, i32* @y.64
  %3073 = sub i32 %3071, 1
  %3074 = mul i32 %3071, %3073
  %3075 = urem i32 %3074, 2
  %3076 = icmp eq i32 %3075, 0
  %3077 = icmp slt i32 %3072, 10
  %3078 = or i1 %3076, %3077
  br i1 %3078, label %originalBB766, label %originalBB766alteredBB

originalBB766:                                    ; preds = %3070, %originalBB766alteredBB
  %3079 = load i8, i8* %36, align 1, !dbg !4542
  %3080 = trunc i8 %3079 to i1, !dbg !4542
  %3081 = load i32, i32* @x.63
  %3082 = load i32, i32* @y.64
  %3083 = sub i32 %3081, 1
  %3084 = mul i32 %3081, %3083
  %3085 = urem i32 %3084, 2
  %3086 = icmp eq i32 %3085, 0
  %3087 = icmp slt i32 %3082, 10
  %3088 = or i1 %3086, %3087
  br i1 %3088, label %originalBBpart2768, label %originalBB766alteredBB

originalBBpart2768:                               ; preds = %originalBB766
  br i1 %3080, label %3286, label %3089, !dbg !4541

3089:                                             ; preds = %originalBBpart2768
  %3090 = load i32, i32* @x.63
  %3091 = load i32, i32* @y.64
  %3092 = sub i32 %3090, 1
  %3093 = mul i32 %3090, %3092
  %3094 = urem i32 %3093, 2
  %3095 = icmp eq i32 %3094, 0
  %3096 = icmp slt i32 %3091, 10
  %3097 = or i1 %3095, %3096
  br i1 %3097, label %originalBB770, label %originalBB770alteredBB

originalBB770:                                    ; preds = %3089, %originalBB770alteredBB
  %3098 = load i32, i32* @x.63
  %3099 = load i32, i32* @y.64
  %3100 = sub i32 %3098, 1
  %3101 = mul i32 %3098, %3100
  %3102 = urem i32 %3101, 2
  %3103 = icmp eq i32 %3102, 0
  %3104 = icmp slt i32 %3099, 10
  %3105 = or i1 %3103, %3104
  br i1 %3105, label %originalBBpart2772, label %originalBB770alteredBB

originalBBpart2772:                               ; preds = %originalBB770
  br label %3106, !dbg !4544

3106:                                             ; preds = %originalBBpart2772
  %3107 = load i64, i64* %29, align 8, !dbg !4546
  %3108 = load i64, i64* %20, align 8, !dbg !4546
  %3109 = icmp ult i64 %3107, %3108, !dbg !4546
  br i1 %3109, label %3110, label %3130, !dbg !4549

3110:                                             ; preds = %3106
  %3111 = load i32, i32* @x.63
  %3112 = load i32, i32* @y.64
  %3113 = sub i32 %3111, 1
  %3114 = mul i32 %3111, %3113
  %3115 = urem i32 %3114, 2
  %3116 = icmp eq i32 %3115, 0
  %3117 = icmp slt i32 %3112, 10
  %3118 = or i1 %3116, %3117
  br i1 %3118, label %originalBB774, label %originalBB774alteredBB

originalBB774:                                    ; preds = %3110, %originalBB774alteredBB
  %3119 = load i8*, i8** %19, align 8, !dbg !4546
  %3120 = load i64, i64* %29, align 8, !dbg !4546
  %3121 = getelementptr inbounds i8, i8* %3119, i64 %3120, !dbg !4546
  store i8 39, i8* %3121, align 1, !dbg !4546
  %3122 = load i32, i32* @x.63
  %3123 = load i32, i32* @y.64
  %3124 = sub i32 %3122, 1
  %3125 = mul i32 %3122, %3124
  %3126 = urem i32 %3125, 2
  %3127 = icmp eq i32 %3126, 0
  %3128 = icmp slt i32 %3123, 10
  %3129 = or i1 %3127, %3128
  br i1 %3129, label %originalBBpart2776, label %originalBB774alteredBB

originalBBpart2776:                               ; preds = %originalBB774
  br label %3130, !dbg !4546

3130:                                             ; preds = %originalBBpart2776, %3106
  %3131 = load i32, i32* @x.63
  %3132 = load i32, i32* @y.64
  %3133 = sub i32 %3131, 1
  %3134 = mul i32 %3131, %3133
  %3135 = urem i32 %3134, 2
  %3136 = icmp eq i32 %3135, 0
  %3137 = icmp slt i32 %3132, 10
  %3138 = or i1 %3136, %3137
  br i1 %3138, label %originalBB778, label %originalBB778alteredBB

originalBB778:                                    ; preds = %3130, %originalBB778alteredBB
  %3139 = load i64, i64* %29, align 8, !dbg !4549
  %3140 = add i64 %3139, 1, !dbg !4549
  store i64 %3140, i64* %29, align 8, !dbg !4549
  %3141 = load i32, i32* @x.63
  %3142 = load i32, i32* @y.64
  %3143 = sub i32 %3141, 1
  %3144 = mul i32 %3141, %3143
  %3145 = urem i32 %3144, 2
  %3146 = icmp eq i32 %3145, 0
  %3147 = icmp slt i32 %3142, 10
  %3148 = or i1 %3146, %3147
  br i1 %3148, label %originalBBpart2785, label %originalBB778alteredBB

originalBBpart2785:                               ; preds = %originalBB778
  br label %3149, !dbg !4549

3149:                                             ; preds = %originalBBpart2785
  %3150 = load i32, i32* @x.63
  %3151 = load i32, i32* @y.64
  %3152 = sub i32 %3150, 1
  %3153 = mul i32 %3150, %3152
  %3154 = urem i32 %3153, 2
  %3155 = icmp eq i32 %3154, 0
  %3156 = icmp slt i32 %3151, 10
  %3157 = or i1 %3155, %3156
  br i1 %3157, label %originalBB787, label %originalBB787alteredBB

originalBB787:                                    ; preds = %3149, %originalBB787alteredBB
  %3158 = load i32, i32* @x.63
  %3159 = load i32, i32* @y.64
  %3160 = sub i32 %3158, 1
  %3161 = mul i32 %3158, %3160
  %3162 = urem i32 %3161, 2
  %3163 = icmp eq i32 %3162, 0
  %3164 = icmp slt i32 %3159, 10
  %3165 = or i1 %3163, %3164
  br i1 %3165, label %originalBBpart2789, label %originalBB787alteredBB

originalBBpart2789:                               ; preds = %originalBB787
  br label %3166, !dbg !4544

3166:                                             ; preds = %originalBBpart2789
  %3167 = load i32, i32* @x.63
  %3168 = load i32, i32* @y.64
  %3169 = sub i32 %3167, 1
  %3170 = mul i32 %3167, %3169
  %3171 = urem i32 %3170, 2
  %3172 = icmp eq i32 %3171, 0
  %3173 = icmp slt i32 %3168, 10
  %3174 = or i1 %3172, %3173
  br i1 %3174, label %originalBB791, label %originalBB791alteredBB

originalBB791:                                    ; preds = %3166, %originalBB791alteredBB
  %3175 = load i64, i64* %29, align 8, !dbg !4550
  %3176 = load i64, i64* %20, align 8, !dbg !4550
  %3177 = icmp ult i64 %3175, %3176, !dbg !4550
  %3178 = load i32, i32* @x.63
  %3179 = load i32, i32* @y.64
  %3180 = sub i32 %3178, 1
  %3181 = mul i32 %3178, %3180
  %3182 = urem i32 %3181, 2
  %3183 = icmp eq i32 %3182, 0
  %3184 = icmp slt i32 %3179, 10
  %3185 = or i1 %3183, %3184
  br i1 %3185, label %originalBBpart2793, label %originalBB791alteredBB

originalBBpart2793:                               ; preds = %originalBB791
  br i1 %3177, label %3186, label %3190, !dbg !4553

3186:                                             ; preds = %originalBBpart2793
  %3187 = load i8*, i8** %19, align 8, !dbg !4550
  %3188 = load i64, i64* %29, align 8, !dbg !4550
  %3189 = getelementptr inbounds i8, i8* %3187, i64 %3188, !dbg !4550
  store i8 36, i8* %3189, align 1, !dbg !4550
  br label %3190, !dbg !4550

3190:                                             ; preds = %3186, %originalBBpart2793
  %3191 = load i32, i32* @x.63
  %3192 = load i32, i32* @y.64
  %3193 = sub i32 %3191, 1
  %3194 = mul i32 %3191, %3193
  %3195 = urem i32 %3194, 2
  %3196 = icmp eq i32 %3195, 0
  %3197 = icmp slt i32 %3192, 10
  %3198 = or i1 %3196, %3197
  br i1 %3198, label %originalBB795, label %originalBB795alteredBB

originalBB795:                                    ; preds = %3190, %originalBB795alteredBB
  %3199 = load i64, i64* %29, align 8, !dbg !4553
  %3200 = add i64 %3199, 1, !dbg !4553
  store i64 %3200, i64* %29, align 8, !dbg !4553
  %3201 = load i32, i32* @x.63
  %3202 = load i32, i32* @y.64
  %3203 = sub i32 %3201, 1
  %3204 = mul i32 %3201, %3203
  %3205 = urem i32 %3204, 2
  %3206 = icmp eq i32 %3205, 0
  %3207 = icmp slt i32 %3202, 10
  %3208 = or i1 %3206, %3207
  br i1 %3208, label %originalBBpart2801, label %originalBB795alteredBB

originalBBpart2801:                               ; preds = %originalBB795
  br label %3209, !dbg !4553

3209:                                             ; preds = %originalBBpart2801
  %3210 = load i32, i32* @x.63
  %3211 = load i32, i32* @y.64
  %3212 = sub i32 %3210, 1
  %3213 = mul i32 %3210, %3212
  %3214 = urem i32 %3213, 2
  %3215 = icmp eq i32 %3214, 0
  %3216 = icmp slt i32 %3211, 10
  %3217 = or i1 %3215, %3216
  br i1 %3217, label %originalBB803, label %originalBB803alteredBB

originalBB803:                                    ; preds = %3209, %originalBB803alteredBB
  %3218 = load i32, i32* @x.63
  %3219 = load i32, i32* @y.64
  %3220 = sub i32 %3218, 1
  %3221 = mul i32 %3218, %3220
  %3222 = urem i32 %3221, 2
  %3223 = icmp eq i32 %3222, 0
  %3224 = icmp slt i32 %3219, 10
  %3225 = or i1 %3223, %3224
  br i1 %3225, label %originalBBpart2805, label %originalBB803alteredBB

originalBBpart2805:                               ; preds = %originalBB803
  br label %3226, !dbg !4544

3226:                                             ; preds = %originalBBpart2805
  %3227 = load i64, i64* %29, align 8, !dbg !4554
  %3228 = load i64, i64* %20, align 8, !dbg !4554
  %3229 = icmp ult i64 %3227, %3228, !dbg !4554
  br i1 %3229, label %3230, label %3250, !dbg !4557

3230:                                             ; preds = %3226
  %3231 = load i32, i32* @x.63
  %3232 = load i32, i32* @y.64
  %3233 = sub i32 %3231, 1
  %3234 = mul i32 %3231, %3233
  %3235 = urem i32 %3234, 2
  %3236 = icmp eq i32 %3235, 0
  %3237 = icmp slt i32 %3232, 10
  %3238 = or i1 %3236, %3237
  br i1 %3238, label %originalBB807, label %originalBB807alteredBB

originalBB807:                                    ; preds = %3230, %originalBB807alteredBB
  %3239 = load i8*, i8** %19, align 8, !dbg !4554
  %3240 = load i64, i64* %29, align 8, !dbg !4554
  %3241 = getelementptr inbounds i8, i8* %3239, i64 %3240, !dbg !4554
  store i8 39, i8* %3241, align 1, !dbg !4554
  %3242 = load i32, i32* @x.63
  %3243 = load i32, i32* @y.64
  %3244 = sub i32 %3242, 1
  %3245 = mul i32 %3242, %3244
  %3246 = urem i32 %3245, 2
  %3247 = icmp eq i32 %3246, 0
  %3248 = icmp slt i32 %3243, 10
  %3249 = or i1 %3247, %3248
  br i1 %3249, label %originalBBpart2809, label %originalBB807alteredBB

originalBBpart2809:                               ; preds = %originalBB807
  br label %3250, !dbg !4554

3250:                                             ; preds = %originalBBpart2809, %3226
  %3251 = load i32, i32* @x.63
  %3252 = load i32, i32* @y.64
  %3253 = sub i32 %3251, 1
  %3254 = mul i32 %3251, %3253
  %3255 = urem i32 %3254, 2
  %3256 = icmp eq i32 %3255, 0
  %3257 = icmp slt i32 %3252, 10
  %3258 = or i1 %3256, %3257
  br i1 %3258, label %originalBB811, label %originalBB811alteredBB

originalBB811:                                    ; preds = %3250, %originalBB811alteredBB
  %3259 = load i64, i64* %29, align 8, !dbg !4557
  %3260 = add i64 %3259, 1, !dbg !4557
  store i64 %3260, i64* %29, align 8, !dbg !4557
  %3261 = load i32, i32* @x.63
  %3262 = load i32, i32* @y.64
  %3263 = sub i32 %3261, 1
  %3264 = mul i32 %3261, %3263
  %3265 = urem i32 %3264, 2
  %3266 = icmp eq i32 %3265, 0
  %3267 = icmp slt i32 %3262, 10
  %3268 = or i1 %3266, %3267
  br i1 %3268, label %originalBBpart2823, label %originalBB811alteredBB

originalBBpart2823:                               ; preds = %originalBB811
  br label %3269, !dbg !4557

3269:                                             ; preds = %originalBBpart2823
  %3270 = load i32, i32* @x.63
  %3271 = load i32, i32* @y.64
  %3272 = sub i32 %3270, 1
  %3273 = mul i32 %3270, %3272
  %3274 = urem i32 %3273, 2
  %3275 = icmp eq i32 %3274, 0
  %3276 = icmp slt i32 %3271, 10
  %3277 = or i1 %3275, %3276
  br i1 %3277, label %originalBB825, label %originalBB825alteredBB

originalBB825:                                    ; preds = %3269, %originalBB825alteredBB
  store i8 1, i8* %36, align 1, !dbg !4544
  %3278 = load i32, i32* @x.63
  %3279 = load i32, i32* @y.64
  %3280 = sub i32 %3278, 1
  %3281 = mul i32 %3278, %3280
  %3282 = urem i32 %3281, 2
  %3283 = icmp eq i32 %3282, 0
  %3284 = icmp slt i32 %3279, 10
  %3285 = or i1 %3283, %3284
  br i1 %3285, label %originalBBpart2827, label %originalBB825alteredBB

originalBBpart2827:                               ; preds = %originalBB825
  br label %3286, !dbg !4544

3286:                                             ; preds = %originalBBpart2827, %originalBBpart2768, %originalBBpart2764
  br label %3287, !dbg !4541

3287:                                             ; preds = %3286
  %3288 = load i64, i64* %29, align 8, !dbg !4558
  %3289 = load i64, i64* %20, align 8, !dbg !4558
  %3290 = icmp ult i64 %3288, %3289, !dbg !4558
  br i1 %3290, label %3291, label %3311, !dbg !4561

3291:                                             ; preds = %3287
  %3292 = load i32, i32* @x.63
  %3293 = load i32, i32* @y.64
  %3294 = sub i32 %3292, 1
  %3295 = mul i32 %3292, %3294
  %3296 = urem i32 %3295, 2
  %3297 = icmp eq i32 %3296, 0
  %3298 = icmp slt i32 %3293, 10
  %3299 = or i1 %3297, %3298
  br i1 %3299, label %originalBB829, label %originalBB829alteredBB

originalBB829:                                    ; preds = %3291, %originalBB829alteredBB
  %3300 = load i8*, i8** %19, align 8, !dbg !4558
  %3301 = load i64, i64* %29, align 8, !dbg !4558
  %3302 = getelementptr inbounds i8, i8* %3300, i64 %3301, !dbg !4558
  store i8 92, i8* %3302, align 1, !dbg !4558
  %3303 = load i32, i32* @x.63
  %3304 = load i32, i32* @y.64
  %3305 = sub i32 %3303, 1
  %3306 = mul i32 %3303, %3305
  %3307 = urem i32 %3306, 2
  %3308 = icmp eq i32 %3307, 0
  %3309 = icmp slt i32 %3304, 10
  %3310 = or i1 %3308, %3309
  br i1 %3310, label %originalBBpart2831, label %originalBB829alteredBB

originalBBpart2831:                               ; preds = %originalBB829
  br label %3311, !dbg !4558

3311:                                             ; preds = %originalBBpart2831, %3287
  %3312 = load i32, i32* @x.63
  %3313 = load i32, i32* @y.64
  %3314 = sub i32 %3312, 1
  %3315 = mul i32 %3312, %3314
  %3316 = urem i32 %3315, 2
  %3317 = icmp eq i32 %3316, 0
  %3318 = icmp slt i32 %3313, 10
  %3319 = or i1 %3317, %3318
  br i1 %3319, label %originalBB833, label %originalBB833alteredBB

originalBB833:                                    ; preds = %3311, %originalBB833alteredBB
  %3320 = load i64, i64* %29, align 8, !dbg !4561
  %3321 = add i64 %3320, 1, !dbg !4561
  store i64 %3321, i64* %29, align 8, !dbg !4561
  %3322 = load i32, i32* @x.63
  %3323 = load i32, i32* @y.64
  %3324 = sub i32 %3322, 1
  %3325 = mul i32 %3322, %3324
  %3326 = urem i32 %3325, 2
  %3327 = icmp eq i32 %3326, 0
  %3328 = icmp slt i32 %3323, 10
  %3329 = or i1 %3327, %3328
  br i1 %3329, label %originalBBpart2839, label %originalBB833alteredBB

originalBBpart2839:                               ; preds = %originalBB833
  br label %3330, !dbg !4561

3330:                                             ; preds = %originalBBpart2839
  br label %3331, !dbg !4541

3331:                                             ; preds = %3330
  br label %3332, !dbg !4562

3332:                                             ; preds = %3331
  %3333 = load i64, i64* %29, align 8, !dbg !4563
  %3334 = load i64, i64* %20, align 8, !dbg !4563
  %3335 = icmp ult i64 %3333, %3334, !dbg !4563
  br i1 %3335, label %3336, label %3345, !dbg !4566

3336:                                             ; preds = %3332
  %3337 = load i8, i8* %39, align 1, !dbg !4563
  %3338 = zext i8 %3337 to i32, !dbg !4563
  %3339 = ashr i32 %3338, 6, !dbg !4563
  %3340 = add nsw i32 48, %3339, !dbg !4563
  %3341 = trunc i32 %3340 to i8, !dbg !4563
  %3342 = load i8*, i8** %19, align 8, !dbg !4563
  %3343 = load i64, i64* %29, align 8, !dbg !4563
  %3344 = getelementptr inbounds i8, i8* %3342, i64 %3343, !dbg !4563
  store i8 %3341, i8* %3344, align 1, !dbg !4563
  br label %3345, !dbg !4563

3345:                                             ; preds = %3336, %3332
  %3346 = load i32, i32* @x.63
  %3347 = load i32, i32* @y.64
  %3348 = sub i32 %3346, 1
  %3349 = mul i32 %3346, %3348
  %3350 = urem i32 %3349, 2
  %3351 = icmp eq i32 %3350, 0
  %3352 = icmp slt i32 %3347, 10
  %3353 = or i1 %3351, %3352
  br i1 %3353, label %originalBB841, label %originalBB841alteredBB

originalBB841:                                    ; preds = %3345, %originalBB841alteredBB
  %3354 = load i64, i64* %29, align 8, !dbg !4566
  %3355 = add i64 %3354, 1, !dbg !4566
  store i64 %3355, i64* %29, align 8, !dbg !4566
  %3356 = load i32, i32* @x.63
  %3357 = load i32, i32* @y.64
  %3358 = sub i32 %3356, 1
  %3359 = mul i32 %3356, %3358
  %3360 = urem i32 %3359, 2
  %3361 = icmp eq i32 %3360, 0
  %3362 = icmp slt i32 %3357, 10
  %3363 = or i1 %3361, %3362
  br i1 %3363, label %originalBBpart2850, label %originalBB841alteredBB

originalBBpart2850:                               ; preds = %originalBB841
  br label %3364, !dbg !4566

3364:                                             ; preds = %originalBBpart2850
  br label %3365, !dbg !4567

3365:                                             ; preds = %3364
  %3366 = load i64, i64* %29, align 8, !dbg !4568
  %3367 = load i64, i64* %20, align 8, !dbg !4568
  %3368 = icmp ult i64 %3366, %3367, !dbg !4568
  br i1 %3368, label %3369, label %3395, !dbg !4571

3369:                                             ; preds = %3365
  %3370 = load i32, i32* @x.63
  %3371 = load i32, i32* @y.64
  %3372 = sub i32 %3370, 1
  %3373 = mul i32 %3370, %3372
  %3374 = urem i32 %3373, 2
  %3375 = icmp eq i32 %3374, 0
  %3376 = icmp slt i32 %3371, 10
  %3377 = or i1 %3375, %3376
  br i1 %3377, label %originalBB852, label %originalBB852alteredBB

originalBB852:                                    ; preds = %3369, %originalBB852alteredBB
  %3378 = load i8, i8* %39, align 1, !dbg !4568
  %3379 = zext i8 %3378 to i32, !dbg !4568
  %3380 = ashr i32 %3379, 3, !dbg !4568
  %3381 = and i32 %3380, 7, !dbg !4568
  %3382 = add nsw i32 48, %3381, !dbg !4568
  %3383 = trunc i32 %3382 to i8, !dbg !4568
  %3384 = load i8*, i8** %19, align 8, !dbg !4568
  %3385 = load i64, i64* %29, align 8, !dbg !4568
  %3386 = getelementptr inbounds i8, i8* %3384, i64 %3385, !dbg !4568
  store i8 %3383, i8* %3386, align 1, !dbg !4568
  %3387 = load i32, i32* @x.63
  %3388 = load i32, i32* @y.64
  %3389 = sub i32 %3387, 1
  %3390 = mul i32 %3387, %3389
  %3391 = urem i32 %3390, 2
  %3392 = icmp eq i32 %3391, 0
  %3393 = icmp slt i32 %3388, 10
  %3394 = or i1 %3392, %3393
  br i1 %3394, label %originalBBpart2879, label %originalBB852alteredBB

originalBBpart2879:                               ; preds = %originalBB852
  br label %3395, !dbg !4568

3395:                                             ; preds = %originalBBpart2879, %3365
  %3396 = load i32, i32* @x.63
  %3397 = load i32, i32* @y.64
  %3398 = sub i32 %3396, 1
  %3399 = mul i32 %3396, %3398
  %3400 = urem i32 %3399, 2
  %3401 = icmp eq i32 %3400, 0
  %3402 = icmp slt i32 %3397, 10
  %3403 = or i1 %3401, %3402
  br i1 %3403, label %originalBB881, label %originalBB881alteredBB

originalBB881:                                    ; preds = %3395, %originalBB881alteredBB
  %3404 = load i64, i64* %29, align 8, !dbg !4571
  %3405 = add i64 %3404, 1, !dbg !4571
  store i64 %3405, i64* %29, align 8, !dbg !4571
  %3406 = load i32, i32* @x.63
  %3407 = load i32, i32* @y.64
  %3408 = sub i32 %3406, 1
  %3409 = mul i32 %3406, %3408
  %3410 = urem i32 %3409, 2
  %3411 = icmp eq i32 %3410, 0
  %3412 = icmp slt i32 %3407, 10
  %3413 = or i1 %3411, %3412
  br i1 %3413, label %originalBBpart2888, label %originalBB881alteredBB

originalBBpart2888:                               ; preds = %originalBB881
  br label %3414, !dbg !4571

3414:                                             ; preds = %originalBBpart2888
  %3415 = load i32, i32* @x.63
  %3416 = load i32, i32* @y.64
  %3417 = sub i32 %3415, 1
  %3418 = mul i32 %3415, %3417
  %3419 = urem i32 %3418, 2
  %3420 = icmp eq i32 %3419, 0
  %3421 = icmp slt i32 %3416, 10
  %3422 = or i1 %3420, %3421
  br i1 %3422, label %originalBB890, label %originalBB890alteredBB

originalBB890:                                    ; preds = %3414, %originalBB890alteredBB
  %3423 = load i8, i8* %39, align 1, !dbg !4572
  %3424 = zext i8 %3423 to i32, !dbg !4572
  %3425 = and i32 %3424, 7, !dbg !4573
  %3426 = add nsw i32 48, %3425, !dbg !4574
  %3427 = trunc i32 %3426 to i8, !dbg !4575
  store i8 %3427, i8* %39, align 1, !dbg !4576
  %3428 = load i32, i32* @x.63
  %3429 = load i32, i32* @y.64
  %3430 = sub i32 %3428, 1
  %3431 = mul i32 %3428, %3430
  %3432 = urem i32 %3431, 2
  %3433 = icmp eq i32 %3432, 0
  %3434 = icmp slt i32 %3429, 10
  %3435 = or i1 %3433, %3434
  br i1 %3435, label %originalBBpart2912, label %originalBB890alteredBB

originalBBpart2912:                               ; preds = %originalBB890
  br label %3533, !dbg !4577

3436:                                             ; preds = %3027, %3024
  %3437 = load i8, i8* %41, align 1, !dbg !4578
  %3438 = trunc i8 %3437 to i1, !dbg !4578
  br i1 %3438, label %3439, label %3516, !dbg !4580

3439:                                             ; preds = %3436
  br label %3440, !dbg !4581

3440:                                             ; preds = %3439
  %3441 = load i32, i32* @x.63
  %3442 = load i32, i32* @y.64
  %3443 = sub i32 %3441, 1
  %3444 = mul i32 %3441, %3443
  %3445 = urem i32 %3444, 2
  %3446 = icmp eq i32 %3445, 0
  %3447 = icmp slt i32 %3442, 10
  %3448 = or i1 %3446, %3447
  br i1 %3448, label %originalBB914, label %originalBB914alteredBB

originalBB914:                                    ; preds = %3440, %originalBB914alteredBB
  %3449 = load i64, i64* %29, align 8, !dbg !4583
  %3450 = load i64, i64* %20, align 8, !dbg !4583
  %3451 = icmp ult i64 %3449, %3450, !dbg !4583
  %3452 = load i32, i32* @x.63
  %3453 = load i32, i32* @y.64
  %3454 = sub i32 %3452, 1
  %3455 = mul i32 %3452, %3454
  %3456 = urem i32 %3455, 2
  %3457 = icmp eq i32 %3456, 0
  %3458 = icmp slt i32 %3453, 10
  %3459 = or i1 %3457, %3458
  br i1 %3459, label %originalBBpart2916, label %originalBB914alteredBB

originalBBpart2916:                               ; preds = %originalBB914
  br i1 %3451, label %3460, label %3480, !dbg !4586

3460:                                             ; preds = %originalBBpart2916
  %3461 = load i32, i32* @x.63
  %3462 = load i32, i32* @y.64
  %3463 = sub i32 %3461, 1
  %3464 = mul i32 %3461, %3463
  %3465 = urem i32 %3464, 2
  %3466 = icmp eq i32 %3465, 0
  %3467 = icmp slt i32 %3462, 10
  %3468 = or i1 %3466, %3467
  br i1 %3468, label %originalBB918, label %originalBB918alteredBB

originalBB918:                                    ; preds = %3460, %originalBB918alteredBB
  %3469 = load i8*, i8** %19, align 8, !dbg !4583
  %3470 = load i64, i64* %29, align 8, !dbg !4583
  %3471 = getelementptr inbounds i8, i8* %3469, i64 %3470, !dbg !4583
  store i8 92, i8* %3471, align 1, !dbg !4583
  %3472 = load i32, i32* @x.63
  %3473 = load i32, i32* @y.64
  %3474 = sub i32 %3472, 1
  %3475 = mul i32 %3472, %3474
  %3476 = urem i32 %3475, 2
  %3477 = icmp eq i32 %3476, 0
  %3478 = icmp slt i32 %3473, 10
  %3479 = or i1 %3477, %3478
  br i1 %3479, label %originalBBpart2920, label %originalBB918alteredBB

originalBBpart2920:                               ; preds = %originalBB918
  br label %3480, !dbg !4583

3480:                                             ; preds = %originalBBpart2920, %originalBBpart2916
  %3481 = load i32, i32* @x.63
  %3482 = load i32, i32* @y.64
  %3483 = sub i32 %3481, 1
  %3484 = mul i32 %3481, %3483
  %3485 = urem i32 %3484, 2
  %3486 = icmp eq i32 %3485, 0
  %3487 = icmp slt i32 %3482, 10
  %3488 = or i1 %3486, %3487
  br i1 %3488, label %originalBB922, label %originalBB922alteredBB

originalBB922:                                    ; preds = %3480, %originalBB922alteredBB
  %3489 = load i64, i64* %29, align 8, !dbg !4586
  %3490 = add i64 %3489, 1, !dbg !4586
  store i64 %3490, i64* %29, align 8, !dbg !4586
  %3491 = load i32, i32* @x.63
  %3492 = load i32, i32* @y.64
  %3493 = sub i32 %3491, 1
  %3494 = mul i32 %3491, %3493
  %3495 = urem i32 %3494, 2
  %3496 = icmp eq i32 %3495, 0
  %3497 = icmp slt i32 %3492, 10
  %3498 = or i1 %3496, %3497
  br i1 %3498, label %originalBBpart2933, label %originalBB922alteredBB

originalBBpart2933:                               ; preds = %originalBB922
  br label %3499, !dbg !4586

3499:                                             ; preds = %originalBBpart2933
  %3500 = load i32, i32* @x.63
  %3501 = load i32, i32* @y.64
  %3502 = sub i32 %3500, 1
  %3503 = mul i32 %3500, %3502
  %3504 = urem i32 %3503, 2
  %3505 = icmp eq i32 %3504, 0
  %3506 = icmp slt i32 %3501, 10
  %3507 = or i1 %3505, %3506
  br i1 %3507, label %originalBB935, label %originalBB935alteredBB

originalBB935:                                    ; preds = %3499, %originalBB935alteredBB
  store i8 0, i8* %41, align 1, !dbg !4587
  %3508 = load i32, i32* @x.63
  %3509 = load i32, i32* @y.64
  %3510 = sub i32 %3508, 1
  %3511 = mul i32 %3508, %3510
  %3512 = urem i32 %3511, 2
  %3513 = icmp eq i32 %3512, 0
  %3514 = icmp slt i32 %3509, 10
  %3515 = or i1 %3513, %3514
  br i1 %3515, label %originalBBpart2937, label %originalBB935alteredBB

originalBBpart2937:                               ; preds = %originalBB935
  br label %3516, !dbg !4588

3516:                                             ; preds = %originalBBpart2937, %3436
  %3517 = load i32, i32* @x.63
  %3518 = load i32, i32* @y.64
  %3519 = sub i32 %3517, 1
  %3520 = mul i32 %3517, %3519
  %3521 = urem i32 %3520, 2
  %3522 = icmp eq i32 %3521, 0
  %3523 = icmp slt i32 %3518, 10
  %3524 = or i1 %3522, %3523
  br i1 %3524, label %originalBB939, label %originalBB939alteredBB

originalBB939:                                    ; preds = %3516, %originalBB939alteredBB
  %3525 = load i32, i32* @x.63
  %3526 = load i32, i32* @y.64
  %3527 = sub i32 %3525, 1
  %3528 = mul i32 %3525, %3527
  %3529 = urem i32 %3528, 2
  %3530 = icmp eq i32 %3529, 0
  %3531 = icmp slt i32 %3526, 10
  %3532 = or i1 %3530, %3531
  br i1 %3532, label %originalBBpart2941, label %originalBB939alteredBB

originalBBpart2941:                               ; preds = %originalBB939
  br label %3533

3533:                                             ; preds = %originalBBpart2941, %originalBBpart2912
  %3534 = load i32, i32* @x.63
  %3535 = load i32, i32* @y.64
  %3536 = sub i32 %3534, 1
  %3537 = mul i32 %3534, %3536
  %3538 = urem i32 %3537, 2
  %3539 = icmp eq i32 %3538, 0
  %3540 = icmp slt i32 %3535, 10
  %3541 = or i1 %3539, %3540
  br i1 %3541, label %originalBB943, label %originalBB943alteredBB

originalBB943:                                    ; preds = %3533, %originalBB943alteredBB
  %3542 = load i64, i64* %50, align 8, !dbg !4589
  %3543 = load i64, i64* %28, align 8, !dbg !4591
  %3544 = add i64 %3543, 1, !dbg !4592
  %3545 = icmp ule i64 %3542, %3544, !dbg !4593
  %3546 = load i32, i32* @x.63
  %3547 = load i32, i32* @y.64
  %3548 = sub i32 %3546, 1
  %3549 = mul i32 %3546, %3548
  %3550 = urem i32 %3549, 2
  %3551 = icmp eq i32 %3550, 0
  %3552 = icmp slt i32 %3547, 10
  %3553 = or i1 %3551, %3552
  br i1 %3553, label %originalBBpart2950, label %originalBB943alteredBB

originalBBpart2950:                               ; preds = %originalBB943
  br i1 %3545, label %3554, label %3571, !dbg !4594

3554:                                             ; preds = %originalBBpart2950
  %3555 = load i32, i32* @x.63
  %3556 = load i32, i32* @y.64
  %3557 = sub i32 %3555, 1
  %3558 = mul i32 %3555, %3557
  %3559 = urem i32 %3558, 2
  %3560 = icmp eq i32 %3559, 0
  %3561 = icmp slt i32 %3556, 10
  %3562 = or i1 %3560, %3561
  br i1 %3562, label %originalBB952, label %originalBB952alteredBB

originalBB952:                                    ; preds = %3554, %originalBB952alteredBB
  %3563 = load i32, i32* @x.63
  %3564 = load i32, i32* @y.64
  %3565 = sub i32 %3563, 1
  %3566 = mul i32 %3563, %3565
  %3567 = urem i32 %3566, 2
  %3568 = icmp eq i32 %3567, 0
  %3569 = icmp slt i32 %3564, 10
  %3570 = or i1 %3568, %3569
  br i1 %3570, label %originalBBpart2954, label %originalBB952alteredBB

originalBBpart2954:                               ; preds = %originalBB952
  br label %3879, !dbg !4595

3571:                                             ; preds = %originalBBpart2950
  %3572 = load i32, i32* @x.63
  %3573 = load i32, i32* @y.64
  %3574 = sub i32 %3572, 1
  %3575 = mul i32 %3572, %3574
  %3576 = urem i32 %3575, 2
  %3577 = icmp eq i32 %3576, 0
  %3578 = icmp slt i32 %3573, 10
  %3579 = or i1 %3577, %3578
  br i1 %3579, label %originalBB956, label %originalBB956alteredBB

originalBB956:                                    ; preds = %3571, %originalBB956alteredBB
  %3580 = load i32, i32* @x.63
  %3581 = load i32, i32* @y.64
  %3582 = sub i32 %3580, 1
  %3583 = mul i32 %3580, %3582
  %3584 = urem i32 %3583, 2
  %3585 = icmp eq i32 %3584, 0
  %3586 = icmp slt i32 %3581, 10
  %3587 = or i1 %3585, %3586
  br i1 %3587, label %originalBBpart2958, label %originalBB956alteredBB

originalBBpart2958:                               ; preds = %originalBB956
  br label %3588, !dbg !4596

3588:                                             ; preds = %originalBBpart2958
  %3589 = load i32, i32* @x.63
  %3590 = load i32, i32* @y.64
  %3591 = sub i32 %3589, 1
  %3592 = mul i32 %3589, %3591
  %3593 = urem i32 %3592, 2
  %3594 = icmp eq i32 %3593, 0
  %3595 = icmp slt i32 %3590, 10
  %3596 = or i1 %3594, %3595
  br i1 %3596, label %originalBB960, label %originalBB960alteredBB

originalBB960:                                    ; preds = %3588, %originalBB960alteredBB
  %3597 = load i8, i8* %36, align 1, !dbg !4597
  %3598 = trunc i8 %3597 to i1, !dbg !4597
  %3599 = load i32, i32* @x.63
  %3600 = load i32, i32* @y.64
  %3601 = sub i32 %3599, 1
  %3602 = mul i32 %3599, %3601
  %3603 = urem i32 %3602, 2
  %3604 = icmp eq i32 %3603, 0
  %3605 = icmp slt i32 %3600, 10
  %3606 = or i1 %3604, %3605
  br i1 %3606, label %originalBBpart2962, label %originalBB960alteredBB

originalBBpart2962:                               ; preds = %originalBB960
  br i1 %3598, label %3607, label %3763, !dbg !4597

3607:                                             ; preds = %originalBBpart2962
  %3608 = load i32, i32* @x.63
  %3609 = load i32, i32* @y.64
  %3610 = sub i32 %3608, 1
  %3611 = mul i32 %3608, %3610
  %3612 = urem i32 %3611, 2
  %3613 = icmp eq i32 %3612, 0
  %3614 = icmp slt i32 %3609, 10
  %3615 = or i1 %3613, %3614
  br i1 %3615, label %originalBB964, label %originalBB964alteredBB

originalBB964:                                    ; preds = %3607, %originalBB964alteredBB
  %3616 = load i8, i8* %42, align 1, !dbg !4597
  %3617 = trunc i8 %3616 to i1, !dbg !4597
  %3618 = load i32, i32* @x.63
  %3619 = load i32, i32* @y.64
  %3620 = sub i32 %3618, 1
  %3621 = mul i32 %3618, %3620
  %3622 = urem i32 %3621, 2
  %3623 = icmp eq i32 %3622, 0
  %3624 = icmp slt i32 %3619, 10
  %3625 = or i1 %3623, %3624
  br i1 %3625, label %originalBBpart2966, label %originalBB964alteredBB

originalBBpart2966:                               ; preds = %originalBB964
  br i1 %3617, label %3763, label %3626, !dbg !4600

3626:                                             ; preds = %originalBBpart2966
  %3627 = load i32, i32* @x.63
  %3628 = load i32, i32* @y.64
  %3629 = sub i32 %3627, 1
  %3630 = mul i32 %3627, %3629
  %3631 = urem i32 %3630, 2
  %3632 = icmp eq i32 %3631, 0
  %3633 = icmp slt i32 %3628, 10
  %3634 = or i1 %3632, %3633
  br i1 %3634, label %originalBB968, label %originalBB968alteredBB

originalBB968:                                    ; preds = %3626, %originalBB968alteredBB
  %3635 = load i32, i32* @x.63
  %3636 = load i32, i32* @y.64
  %3637 = sub i32 %3635, 1
  %3638 = mul i32 %3635, %3637
  %3639 = urem i32 %3638, 2
  %3640 = icmp eq i32 %3639, 0
  %3641 = icmp slt i32 %3636, 10
  %3642 = or i1 %3640, %3641
  br i1 %3642, label %originalBBpart2970, label %originalBB968alteredBB

originalBBpart2970:                               ; preds = %originalBB968
  br label %3643, !dbg !4601

3643:                                             ; preds = %originalBBpart2970
  %3644 = load i32, i32* @x.63
  %3645 = load i32, i32* @y.64
  %3646 = sub i32 %3644, 1
  %3647 = mul i32 %3644, %3646
  %3648 = urem i32 %3647, 2
  %3649 = icmp eq i32 %3648, 0
  %3650 = icmp slt i32 %3645, 10
  %3651 = or i1 %3649, %3650
  br i1 %3651, label %originalBB972, label %originalBB972alteredBB

originalBB972:                                    ; preds = %3643, %originalBB972alteredBB
  %3652 = load i64, i64* %29, align 8, !dbg !4603
  %3653 = load i64, i64* %20, align 8, !dbg !4603
  %3654 = icmp ult i64 %3652, %3653, !dbg !4603
  %3655 = load i32, i32* @x.63
  %3656 = load i32, i32* @y.64
  %3657 = sub i32 %3655, 1
  %3658 = mul i32 %3655, %3657
  %3659 = urem i32 %3658, 2
  %3660 = icmp eq i32 %3659, 0
  %3661 = icmp slt i32 %3656, 10
  %3662 = or i1 %3660, %3661
  br i1 %3662, label %originalBBpart2974, label %originalBB972alteredBB

originalBBpart2974:                               ; preds = %originalBB972
  br i1 %3654, label %3663, label %3667, !dbg !4606

3663:                                             ; preds = %originalBBpart2974
  %3664 = load i8*, i8** %19, align 8, !dbg !4603
  %3665 = load i64, i64* %29, align 8, !dbg !4603
  %3666 = getelementptr inbounds i8, i8* %3664, i64 %3665, !dbg !4603
  store i8 39, i8* %3666, align 1, !dbg !4603
  br label %3667, !dbg !4603

3667:                                             ; preds = %3663, %originalBBpart2974
  %3668 = load i32, i32* @x.63
  %3669 = load i32, i32* @y.64
  %3670 = sub i32 %3668, 1
  %3671 = mul i32 %3668, %3670
  %3672 = urem i32 %3671, 2
  %3673 = icmp eq i32 %3672, 0
  %3674 = icmp slt i32 %3669, 10
  %3675 = or i1 %3673, %3674
  br i1 %3675, label %originalBB976, label %originalBB976alteredBB

originalBB976:                                    ; preds = %3667, %originalBB976alteredBB
  %3676 = load i64, i64* %29, align 8, !dbg !4606
  %3677 = add i64 %3676, 1, !dbg !4606
  store i64 %3677, i64* %29, align 8, !dbg !4606
  %3678 = load i32, i32* @x.63
  %3679 = load i32, i32* @y.64
  %3680 = sub i32 %3678, 1
  %3681 = mul i32 %3678, %3680
  %3682 = urem i32 %3681, 2
  %3683 = icmp eq i32 %3682, 0
  %3684 = icmp slt i32 %3679, 10
  %3685 = or i1 %3683, %3684
  br i1 %3685, label %originalBBpart2980, label %originalBB976alteredBB

originalBBpart2980:                               ; preds = %originalBB976
  br label %3686, !dbg !4606

3686:                                             ; preds = %originalBBpart2980
  br label %3687, !dbg !4601

3687:                                             ; preds = %3686
  %3688 = load i32, i32* @x.63
  %3689 = load i32, i32* @y.64
  %3690 = sub i32 %3688, 1
  %3691 = mul i32 %3688, %3690
  %3692 = urem i32 %3691, 2
  %3693 = icmp eq i32 %3692, 0
  %3694 = icmp slt i32 %3689, 10
  %3695 = or i1 %3693, %3694
  br i1 %3695, label %originalBB982, label %originalBB982alteredBB

originalBB982:                                    ; preds = %3687, %originalBB982alteredBB
  %3696 = load i64, i64* %29, align 8, !dbg !4607
  %3697 = load i64, i64* %20, align 8, !dbg !4607
  %3698 = icmp ult i64 %3696, %3697, !dbg !4607
  %3699 = load i32, i32* @x.63
  %3700 = load i32, i32* @y.64
  %3701 = sub i32 %3699, 1
  %3702 = mul i32 %3699, %3701
  %3703 = urem i32 %3702, 2
  %3704 = icmp eq i32 %3703, 0
  %3705 = icmp slt i32 %3700, 10
  %3706 = or i1 %3704, %3705
  br i1 %3706, label %originalBBpart2984, label %originalBB982alteredBB

originalBBpart2984:                               ; preds = %originalBB982
  br i1 %3698, label %3707, label %3727, !dbg !4610

3707:                                             ; preds = %originalBBpart2984
  %3708 = load i32, i32* @x.63
  %3709 = load i32, i32* @y.64
  %3710 = sub i32 %3708, 1
  %3711 = mul i32 %3708, %3710
  %3712 = urem i32 %3711, 2
  %3713 = icmp eq i32 %3712, 0
  %3714 = icmp slt i32 %3709, 10
  %3715 = or i1 %3713, %3714
  br i1 %3715, label %originalBB986, label %originalBB986alteredBB

originalBB986:                                    ; preds = %3707, %originalBB986alteredBB
  %3716 = load i8*, i8** %19, align 8, !dbg !4607
  %3717 = load i64, i64* %29, align 8, !dbg !4607
  %3718 = getelementptr inbounds i8, i8* %3716, i64 %3717, !dbg !4607
  store i8 39, i8* %3718, align 1, !dbg !4607
  %3719 = load i32, i32* @x.63
  %3720 = load i32, i32* @y.64
  %3721 = sub i32 %3719, 1
  %3722 = mul i32 %3719, %3721
  %3723 = urem i32 %3722, 2
  %3724 = icmp eq i32 %3723, 0
  %3725 = icmp slt i32 %3720, 10
  %3726 = or i1 %3724, %3725
  br i1 %3726, label %originalBBpart2988, label %originalBB986alteredBB

originalBBpart2988:                               ; preds = %originalBB986
  br label %3727, !dbg !4607

3727:                                             ; preds = %originalBBpart2988, %originalBBpart2984
  %3728 = load i32, i32* @x.63
  %3729 = load i32, i32* @y.64
  %3730 = sub i32 %3728, 1
  %3731 = mul i32 %3728, %3730
  %3732 = urem i32 %3731, 2
  %3733 = icmp eq i32 %3732, 0
  %3734 = icmp slt i32 %3729, 10
  %3735 = or i1 %3733, %3734
  br i1 %3735, label %originalBB990, label %originalBB990alteredBB

originalBB990:                                    ; preds = %3727, %originalBB990alteredBB
  %3736 = load i64, i64* %29, align 8, !dbg !4610
  %3737 = add i64 %3736, 1, !dbg !4610
  store i64 %3737, i64* %29, align 8, !dbg !4610
  %3738 = load i32, i32* @x.63
  %3739 = load i32, i32* @y.64
  %3740 = sub i32 %3738, 1
  %3741 = mul i32 %3738, %3740
  %3742 = urem i32 %3741, 2
  %3743 = icmp eq i32 %3742, 0
  %3744 = icmp slt i32 %3739, 10
  %3745 = or i1 %3743, %3744
  br i1 %3745, label %originalBBpart2996, label %originalBB990alteredBB

originalBBpart2996:                               ; preds = %originalBB990
  br label %3746, !dbg !4610

3746:                                             ; preds = %originalBBpart2996
  %3747 = load i32, i32* @x.63
  %3748 = load i32, i32* @y.64
  %3749 = sub i32 %3747, 1
  %3750 = mul i32 %3747, %3749
  %3751 = urem i32 %3750, 2
  %3752 = icmp eq i32 %3751, 0
  %3753 = icmp slt i32 %3748, 10
  %3754 = or i1 %3752, %3753
  br i1 %3754, label %originalBB998, label %originalBB998alteredBB

originalBB998:                                    ; preds = %3746, %originalBB998alteredBB
  store i8 0, i8* %36, align 1, !dbg !4601
  %3755 = load i32, i32* @x.63
  %3756 = load i32, i32* @y.64
  %3757 = sub i32 %3755, 1
  %3758 = mul i32 %3755, %3757
  %3759 = urem i32 %3758, 2
  %3760 = icmp eq i32 %3759, 0
  %3761 = icmp slt i32 %3756, 10
  %3762 = or i1 %3760, %3761
  br i1 %3762, label %originalBBpart21000, label %originalBB998alteredBB

originalBBpart21000:                              ; preds = %originalBB998
  br label %3763, !dbg !4601

3763:                                             ; preds = %originalBBpart21000, %originalBBpart2966, %originalBBpart2962
  %3764 = load i32, i32* @x.63
  %3765 = load i32, i32* @y.64
  %3766 = sub i32 %3764, 1
  %3767 = mul i32 %3764, %3766
  %3768 = urem i32 %3767, 2
  %3769 = icmp eq i32 %3768, 0
  %3770 = icmp slt i32 %3765, 10
  %3771 = or i1 %3769, %3770
  br i1 %3771, label %originalBB1002, label %originalBB1002alteredBB

originalBB1002:                                   ; preds = %3763, %originalBB1002alteredBB
  %3772 = load i32, i32* @x.63
  %3773 = load i32, i32* @y.64
  %3774 = sub i32 %3772, 1
  %3775 = mul i32 %3772, %3774
  %3776 = urem i32 %3775, 2
  %3777 = icmp eq i32 %3776, 0
  %3778 = icmp slt i32 %3773, 10
  %3779 = or i1 %3777, %3778
  br i1 %3779, label %originalBBpart21004, label %originalBB1002alteredBB

originalBBpart21004:                              ; preds = %originalBB1002
  br label %3780, !dbg !4600

3780:                                             ; preds = %originalBBpart21004
  %3781 = load i32, i32* @x.63
  %3782 = load i32, i32* @y.64
  %3783 = sub i32 %3781, 1
  %3784 = mul i32 %3781, %3783
  %3785 = urem i32 %3784, 2
  %3786 = icmp eq i32 %3785, 0
  %3787 = icmp slt i32 %3782, 10
  %3788 = or i1 %3786, %3787
  br i1 %3788, label %originalBB1006, label %originalBB1006alteredBB

originalBB1006:                                   ; preds = %3780, %originalBB1006alteredBB
  %3789 = load i32, i32* @x.63
  %3790 = load i32, i32* @y.64
  %3791 = sub i32 %3789, 1
  %3792 = mul i32 %3789, %3791
  %3793 = urem i32 %3792, 2
  %3794 = icmp eq i32 %3793, 0
  %3795 = icmp slt i32 %3790, 10
  %3796 = or i1 %3794, %3795
  br i1 %3796, label %originalBBpart21008, label %originalBB1006alteredBB

originalBBpart21008:                              ; preds = %originalBB1006
  br label %3797, !dbg !4611

3797:                                             ; preds = %originalBBpart21008
  %3798 = load i32, i32* @x.63
  %3799 = load i32, i32* @y.64
  %3800 = sub i32 %3798, 1
  %3801 = mul i32 %3798, %3800
  %3802 = urem i32 %3801, 2
  %3803 = icmp eq i32 %3802, 0
  %3804 = icmp slt i32 %3799, 10
  %3805 = or i1 %3803, %3804
  br i1 %3805, label %originalBB1010, label %originalBB1010alteredBB

originalBB1010:                                   ; preds = %3797, %originalBB1010alteredBB
  %3806 = load i64, i64* %29, align 8, !dbg !4612
  %3807 = load i64, i64* %20, align 8, !dbg !4612
  %3808 = icmp ult i64 %3806, %3807, !dbg !4612
  %3809 = load i32, i32* @x.63
  %3810 = load i32, i32* @y.64
  %3811 = sub i32 %3809, 1
  %3812 = mul i32 %3809, %3811
  %3813 = urem i32 %3812, 2
  %3814 = icmp eq i32 %3813, 0
  %3815 = icmp slt i32 %3810, 10
  %3816 = or i1 %3814, %3815
  br i1 %3816, label %originalBBpart21012, label %originalBB1010alteredBB

originalBBpart21012:                              ; preds = %originalBB1010
  br i1 %3808, label %3817, label %3838, !dbg !4615

3817:                                             ; preds = %originalBBpart21012
  %3818 = load i32, i32* @x.63
  %3819 = load i32, i32* @y.64
  %3820 = sub i32 %3818, 1
  %3821 = mul i32 %3818, %3820
  %3822 = urem i32 %3821, 2
  %3823 = icmp eq i32 %3822, 0
  %3824 = icmp slt i32 %3819, 10
  %3825 = or i1 %3823, %3824
  br i1 %3825, label %originalBB1014, label %originalBB1014alteredBB

originalBB1014:                                   ; preds = %3817, %originalBB1014alteredBB
  %3826 = load i8, i8* %39, align 1, !dbg !4612
  %3827 = load i8*, i8** %19, align 8, !dbg !4612
  %3828 = load i64, i64* %29, align 8, !dbg !4612
  %3829 = getelementptr inbounds i8, i8* %3827, i64 %3828, !dbg !4612
  store i8 %3826, i8* %3829, align 1, !dbg !4612
  %3830 = load i32, i32* @x.63
  %3831 = load i32, i32* @y.64
  %3832 = sub i32 %3830, 1
  %3833 = mul i32 %3830, %3832
  %3834 = urem i32 %3833, 2
  %3835 = icmp eq i32 %3834, 0
  %3836 = icmp slt i32 %3831, 10
  %3837 = or i1 %3835, %3836
  br i1 %3837, label %originalBBpart21016, label %originalBB1014alteredBB

originalBBpart21016:                              ; preds = %originalBB1014
  br label %3838, !dbg !4612

3838:                                             ; preds = %originalBBpart21016, %originalBBpart21012
  %3839 = load i32, i32* @x.63
  %3840 = load i32, i32* @y.64
  %3841 = sub i32 %3839, 1
  %3842 = mul i32 %3839, %3841
  %3843 = urem i32 %3842, 2
  %3844 = icmp eq i32 %3843, 0
  %3845 = icmp slt i32 %3840, 10
  %3846 = or i1 %3844, %3845
  br i1 %3846, label %originalBB1018, label %originalBB1018alteredBB

originalBB1018:                                   ; preds = %3838, %originalBB1018alteredBB
  %3847 = load i64, i64* %29, align 8, !dbg !4615
  %3848 = add i64 %3847, 1, !dbg !4615
  store i64 %3848, i64* %29, align 8, !dbg !4615
  %3849 = load i32, i32* @x.63
  %3850 = load i32, i32* @y.64
  %3851 = sub i32 %3849, 1
  %3852 = mul i32 %3849, %3851
  %3853 = urem i32 %3852, 2
  %3854 = icmp eq i32 %3853, 0
  %3855 = icmp slt i32 %3850, 10
  %3856 = or i1 %3854, %3855
  br i1 %3856, label %originalBBpart21034, label %originalBB1018alteredBB

originalBBpart21034:                              ; preds = %originalBB1018
  br label %3857, !dbg !4615

3857:                                             ; preds = %originalBBpart21034
  %3858 = load i32, i32* @x.63
  %3859 = load i32, i32* @y.64
  %3860 = sub i32 %3858, 1
  %3861 = mul i32 %3858, %3860
  %3862 = urem i32 %3861, 2
  %3863 = icmp eq i32 %3862, 0
  %3864 = icmp slt i32 %3859, 10
  %3865 = or i1 %3863, %3864
  br i1 %3865, label %originalBB1036, label %originalBB1036alteredBB

originalBB1036:                                   ; preds = %3857, %originalBB1036alteredBB
  %3866 = load i8*, i8** %21, align 8, !dbg !4616
  %3867 = load i64, i64* %28, align 8, !dbg !4617
  %3868 = add i64 %3867, 1, !dbg !4617
  store i64 %3868, i64* %28, align 8, !dbg !4617
  %3869 = getelementptr inbounds i8, i8* %3866, i64 %3868, !dbg !4616
  %3870 = load i8, i8* %3869, align 1, !dbg !4616
  store i8 %3870, i8* %39, align 1, !dbg !4618
  %3871 = load i32, i32* @x.63
  %3872 = load i32, i32* @y.64
  %3873 = sub i32 %3871, 1
  %3874 = mul i32 %3871, %3873
  %3875 = urem i32 %3874, 2
  %3876 = icmp eq i32 %3875, 0
  %3877 = icmp slt i32 %3872, 10
  %3878 = or i1 %3876, %3877
  br i1 %3878, label %originalBBpart21044, label %originalBB1036alteredBB

originalBBpart21044:                              ; preds = %originalBB1036
  br label %3024, !dbg !4619, !llvm.loop !4620

3879:                                             ; preds = %originalBBpart2954
  %3880 = load i32, i32* @x.63
  %3881 = load i32, i32* @y.64
  %3882 = sub i32 %3880, 1
  %3883 = mul i32 %3880, %3882
  %3884 = urem i32 %3883, 2
  %3885 = icmp eq i32 %3884, 0
  %3886 = icmp slt i32 %3881, 10
  %3887 = or i1 %3885, %3886
  br i1 %3887, label %originalBB1046, label %originalBB1046alteredBB

originalBB1046:                                   ; preds = %3879, %originalBB1046alteredBB
  %3888 = load i32, i32* @x.63
  %3889 = load i32, i32* @y.64
  %3890 = sub i32 %3888, 1
  %3891 = mul i32 %3888, %3890
  %3892 = urem i32 %3891, 2
  %3893 = icmp eq i32 %3892, 0
  %3894 = icmp slt i32 %3889, 10
  %3895 = or i1 %3893, %3894
  br i1 %3895, label %originalBBpart21048, label %originalBB1046alteredBB

originalBBpart21048:                              ; preds = %originalBB1046
  br label %4262, !dbg !4623

3896:                                             ; preds = %originalBBpart2756, %originalBBpart2752
  %3897 = load i32, i32* @x.63
  %3898 = load i32, i32* @y.64
  %3899 = sub i32 %3897, 1
  %3900 = mul i32 %3897, %3899
  %3901 = urem i32 %3900, 2
  %3902 = icmp eq i32 %3901, 0
  %3903 = icmp slt i32 %3898, 10
  %3904 = or i1 %3902, %3903
  br i1 %3904, label %originalBB1050, label %originalBB1050alteredBB

originalBB1050:                                   ; preds = %3896, %originalBB1050alteredBB
  %3905 = load i32, i32* @x.63
  %3906 = load i32, i32* @y.64
  %3907 = sub i32 %3905, 1
  %3908 = mul i32 %3905, %3907
  %3909 = urem i32 %3908, 2
  %3910 = icmp eq i32 %3909, 0
  %3911 = icmp slt i32 %3906, 10
  %3912 = or i1 %3910, %3911
  br i1 %3912, label %originalBBpart21052, label %originalBB1050alteredBB

originalBBpart21052:                              ; preds = %originalBB1050
  br label %3913, !dbg !4624

3913:                                             ; preds = %originalBBpart21052, %2431, %2430, %2169, %originalBBpart2498, %2042, %1981, %originalBBpart2438, %1364
  %3914 = load i8, i8* %33, align 1, !dbg !4625
  %3915 = trunc i8 %3914 to i1, !dbg !4625
  br i1 %3915, label %3916, label %3919, !dbg !4627

3916:                                             ; preds = %3913
  %3917 = load i32, i32* %23, align 4, !dbg !4628
  %3918 = icmp ne i32 %3917, 2, !dbg !4629
  br i1 %3918, label %3938, label %3919, !dbg !4630

3919:                                             ; preds = %3916, %3913
  %3920 = load i32, i32* @x.63
  %3921 = load i32, i32* @y.64
  %3922 = sub i32 %3920, 1
  %3923 = mul i32 %3920, %3922
  %3924 = urem i32 %3923, 2
  %3925 = icmp eq i32 %3924, 0
  %3926 = icmp slt i32 %3921, 10
  %3927 = or i1 %3925, %3926
  br i1 %3927, label %originalBB1054, label %originalBB1054alteredBB

originalBB1054:                                   ; preds = %3919, %originalBB1054alteredBB
  %3928 = load i8, i8* %35, align 1, !dbg !4631
  %3929 = trunc i8 %3928 to i1, !dbg !4631
  %3930 = load i32, i32* @x.63
  %3931 = load i32, i32* @y.64
  %3932 = sub i32 %3930, 1
  %3933 = mul i32 %3930, %3932
  %3934 = urem i32 %3933, 2
  %3935 = icmp eq i32 %3934, 0
  %3936 = icmp slt i32 %3931, 10
  %3937 = or i1 %3935, %3936
  br i1 %3937, label %originalBBpart21056, label %originalBB1054alteredBB

originalBBpart21056:                              ; preds = %originalBB1054
  br i1 %3929, label %3938, label %3987, !dbg !4632

3938:                                             ; preds = %originalBBpart21056, %3916
  %3939 = load i32, i32* @x.63
  %3940 = load i32, i32* @y.64
  %3941 = sub i32 %3939, 1
  %3942 = mul i32 %3939, %3941
  %3943 = urem i32 %3942, 2
  %3944 = icmp eq i32 %3943, 0
  %3945 = icmp slt i32 %3940, 10
  %3946 = or i1 %3944, %3945
  br i1 %3946, label %originalBB1058, label %originalBB1058alteredBB

originalBB1058:                                   ; preds = %3938, %originalBB1058alteredBB
  %3947 = load i32*, i32** %25, align 8, !dbg !4633
  %3948 = icmp ne i32* %3947, null, !dbg !4633
  %3949 = load i32, i32* @x.63
  %3950 = load i32, i32* @y.64
  %3951 = sub i32 %3949, 1
  %3952 = mul i32 %3949, %3951
  %3953 = urem i32 %3952, 2
  %3954 = icmp eq i32 %3953, 0
  %3955 = icmp slt i32 %3950, 10
  %3956 = or i1 %3954, %3955
  br i1 %3956, label %originalBBpart21060, label %originalBB1058alteredBB

originalBBpart21060:                              ; preds = %originalBB1058
  br i1 %3948, label %3957, label %3987, !dbg !4634

3957:                                             ; preds = %originalBBpart21060
  %3958 = load i32, i32* @x.63
  %3959 = load i32, i32* @y.64
  %3960 = sub i32 %3958, 1
  %3961 = mul i32 %3958, %3960
  %3962 = urem i32 %3961, 2
  %3963 = icmp eq i32 %3962, 0
  %3964 = icmp slt i32 %3959, 10
  %3965 = or i1 %3963, %3964
  br i1 %3965, label %originalBB1062, label %originalBB1062alteredBB

originalBB1062:                                   ; preds = %3957, %originalBB1062alteredBB
  %3966 = load i32*, i32** %25, align 8, !dbg !4635
  %3967 = load i8, i8* %39, align 1, !dbg !4636
  %3968 = zext i8 %3967 to i64, !dbg !4636
  %3969 = udiv i64 %3968, 32, !dbg !4637
  %3970 = getelementptr inbounds i32, i32* %3966, i64 %3969, !dbg !4635
  %3971 = load i32, i32* %3970, align 4, !dbg !4635
  %3972 = load i8, i8* %39, align 1, !dbg !4638
  %3973 = zext i8 %3972 to i64, !dbg !4638
  %3974 = urem i64 %3973, 32, !dbg !4639
  %3975 = trunc i64 %3974 to i32, !dbg !4640
  %3976 = lshr i32 %3971, %3975, !dbg !4640
  %3977 = and i32 %3976, 1, !dbg !4641
  %3978 = icmp ne i32 %3977, 0, !dbg !4641
  %3979 = load i32, i32* @x.63
  %3980 = load i32, i32* @y.64
  %3981 = sub i32 %3979, 1
  %3982 = mul i32 %3979, %3981
  %3983 = urem i32 %3982, 2
  %3984 = icmp eq i32 %3983, 0
  %3985 = icmp slt i32 %3980, 10
  %3986 = or i1 %3984, %3985
  br i1 %3986, label %originalBBpart21100, label %originalBB1062alteredBB

originalBBpart21100:                              ; preds = %originalBB1062
  br i1 %3978, label %4023, label %3987, !dbg !4642

3987:                                             ; preds = %originalBBpart21100, %originalBBpart21060, %originalBBpart21056
  %3988 = load i32, i32* @x.63
  %3989 = load i32, i32* @y.64
  %3990 = sub i32 %3988, 1
  %3991 = mul i32 %3988, %3990
  %3992 = urem i32 %3991, 2
  %3993 = icmp eq i32 %3992, 0
  %3994 = icmp slt i32 %3989, 10
  %3995 = or i1 %3993, %3994
  br i1 %3995, label %originalBB1102, label %originalBB1102alteredBB

originalBB1102:                                   ; preds = %3987, %originalBB1102alteredBB
  %3996 = load i8, i8* %41, align 1, !dbg !4643
  %3997 = trunc i8 %3996 to i1, !dbg !4643
  %3998 = load i32, i32* @x.63
  %3999 = load i32, i32* @y.64
  %4000 = sub i32 %3998, 1
  %4001 = mul i32 %3998, %4000
  %4002 = urem i32 %4001, 2
  %4003 = icmp eq i32 %4002, 0
  %4004 = icmp slt i32 %3999, 10
  %4005 = or i1 %4003, %4004
  br i1 %4005, label %originalBBpart21104, label %originalBB1102alteredBB

originalBBpart21104:                              ; preds = %originalBB1102
  br i1 %3997, label %4023, label %4006, !dbg !4644

4006:                                             ; preds = %originalBBpart21104
  %4007 = load i32, i32* @x.63
  %4008 = load i32, i32* @y.64
  %4009 = sub i32 %4007, 1
  %4010 = mul i32 %4007, %4009
  %4011 = urem i32 %4010, 2
  %4012 = icmp eq i32 %4011, 0
  %4013 = icmp slt i32 %4008, 10
  %4014 = or i1 %4012, %4013
  br i1 %4014, label %originalBB1106, label %originalBB1106alteredBB

originalBB1106:                                   ; preds = %4006, %originalBB1106alteredBB
  %4015 = load i32, i32* @x.63
  %4016 = load i32, i32* @y.64
  %4017 = sub i32 %4015, 1
  %4018 = mul i32 %4015, %4017
  %4019 = urem i32 %4018, 2
  %4020 = icmp eq i32 %4019, 0
  %4021 = icmp slt i32 %4016, 10
  %4022 = or i1 %4020, %4021
  br i1 %4022, label %originalBBpart21108, label %originalBB1106alteredBB

originalBBpart21108:                              ; preds = %originalBB1106
  br label %4262, !dbg !4645

4023:                                             ; preds = %originalBBpart21104, %originalBBpart21100
  br label %4024, !dbg !4643

4024:                                             ; preds = %4023, %1979
  call void @llvm.dbg.label(metadata !4646), !dbg !4647
  %4025 = load i32, i32* @x.63
  %4026 = load i32, i32* @y.64
  %4027 = sub i32 %4025, 1
  %4028 = mul i32 %4025, %4027
  %4029 = urem i32 %4028, 2
  %4030 = icmp eq i32 %4029, 0
  %4031 = icmp slt i32 %4026, 10
  %4032 = or i1 %4030, %4031
  br i1 %4032, label %originalBB1110, label %originalBB1110alteredBB

originalBB1110:                                   ; preds = %4024, %originalBB1110alteredBB
  %4033 = load i32, i32* @x.63
  %4034 = load i32, i32* @y.64
  %4035 = sub i32 %4033, 1
  %4036 = mul i32 %4033, %4035
  %4037 = urem i32 %4036, 2
  %4038 = icmp eq i32 %4037, 0
  %4039 = icmp slt i32 %4034, 10
  %4040 = or i1 %4038, %4039
  br i1 %4040, label %originalBBpart21112, label %originalBB1110alteredBB

originalBBpart21112:                              ; preds = %originalBB1110
  br label %4041, !dbg !4648

4041:                                             ; preds = %originalBBpart21112
  %4042 = load i32, i32* @x.63
  %4043 = load i32, i32* @y.64
  %4044 = sub i32 %4042, 1
  %4045 = mul i32 %4042, %4044
  %4046 = urem i32 %4045, 2
  %4047 = icmp eq i32 %4046, 0
  %4048 = icmp slt i32 %4043, 10
  %4049 = or i1 %4047, %4048
  br i1 %4049, label %originalBB1114, label %originalBB1114alteredBB

originalBB1114:                                   ; preds = %4041, %originalBB1114alteredBB
  %4050 = load i8, i8* %35, align 1, !dbg !4649
  %4051 = trunc i8 %4050 to i1, !dbg !4649
  %4052 = load i32, i32* @x.63
  %4053 = load i32, i32* @y.64
  %4054 = sub i32 %4052, 1
  %4055 = mul i32 %4052, %4054
  %4056 = urem i32 %4055, 2
  %4057 = icmp eq i32 %4056, 0
  %4058 = icmp slt i32 %4053, 10
  %4059 = or i1 %4057, %4058
  br i1 %4059, label %originalBBpart21116, label %originalBB1114alteredBB

originalBBpart21116:                              ; preds = %originalBB1114
  br i1 %4051, label %4060, label %4077, !dbg !4652

4060:                                             ; preds = %originalBBpart21116
  %4061 = load i32, i32* @x.63
  %4062 = load i32, i32* @y.64
  %4063 = sub i32 %4061, 1
  %4064 = mul i32 %4061, %4063
  %4065 = urem i32 %4064, 2
  %4066 = icmp eq i32 %4065, 0
  %4067 = icmp slt i32 %4062, 10
  %4068 = or i1 %4066, %4067
  br i1 %4068, label %originalBB1118, label %originalBB1118alteredBB

originalBB1118:                                   ; preds = %4060, %originalBB1118alteredBB
  %4069 = load i32, i32* @x.63
  %4070 = load i32, i32* @y.64
  %4071 = sub i32 %4069, 1
  %4072 = mul i32 %4069, %4071
  %4073 = urem i32 %4072, 2
  %4074 = icmp eq i32 %4073, 0
  %4075 = icmp slt i32 %4070, 10
  %4076 = or i1 %4074, %4075
  br i1 %4076, label %originalBBpart21120, label %originalBB1118alteredBB

originalBBpart21120:                              ; preds = %originalBB1118
  br label %4894, !dbg !4649

4077:                                             ; preds = %originalBBpart21116
  %4078 = load i32, i32* @x.63
  %4079 = load i32, i32* @y.64
  %4080 = sub i32 %4078, 1
  %4081 = mul i32 %4078, %4080
  %4082 = urem i32 %4081, 2
  %4083 = icmp eq i32 %4082, 0
  %4084 = icmp slt i32 %4079, 10
  %4085 = or i1 %4083, %4084
  br i1 %4085, label %originalBB1122, label %originalBB1122alteredBB

originalBB1122:                                   ; preds = %4077, %originalBB1122alteredBB
  store i8 1, i8* %42, align 1, !dbg !4652
  %4086 = load i32, i32* %23, align 4, !dbg !4653
  %4087 = icmp eq i32 %4086, 2, !dbg !4653
  %4088 = load i32, i32* @x.63
  %4089 = load i32, i32* @y.64
  %4090 = sub i32 %4088, 1
  %4091 = mul i32 %4088, %4090
  %4092 = urem i32 %4091, 2
  %4093 = icmp eq i32 %4092, 0
  %4094 = icmp slt i32 %4089, 10
  %4095 = or i1 %4093, %4094
  br i1 %4095, label %originalBBpart21124, label %originalBB1122alteredBB

originalBBpart21124:                              ; preds = %originalBB1122
  br i1 %4087, label %4096, label %4184, !dbg !4653

4096:                                             ; preds = %originalBBpart21124
  %4097 = load i8, i8* %36, align 1, !dbg !4653
  %4098 = trunc i8 %4097 to i1, !dbg !4653
  br i1 %4098, label %4184, label %4099, !dbg !4652

4099:                                             ; preds = %4096
  br label %4100, !dbg !4655

4100:                                             ; preds = %4099
  %4101 = load i64, i64* %29, align 8, !dbg !4657
  %4102 = load i64, i64* %20, align 8, !dbg !4657
  %4103 = icmp ult i64 %4101, %4102, !dbg !4657
  br i1 %4103, label %4104, label %4108, !dbg !4660

4104:                                             ; preds = %4100
  %4105 = load i8*, i8** %19, align 8, !dbg !4657
  %4106 = load i64, i64* %29, align 8, !dbg !4657
  %4107 = getelementptr inbounds i8, i8* %4105, i64 %4106, !dbg !4657
  store i8 39, i8* %4107, align 1, !dbg !4657
  br label %4108, !dbg !4657

4108:                                             ; preds = %4104, %4100
  %4109 = load i64, i64* %29, align 8, !dbg !4660
  %4110 = add i64 %4109, 1, !dbg !4660
  store i64 %4110, i64* %29, align 8, !dbg !4660
  br label %4111, !dbg !4660

4111:                                             ; preds = %4108
  %4112 = load i32, i32* @x.63
  %4113 = load i32, i32* @y.64
  %4114 = sub i32 %4112, 1
  %4115 = mul i32 %4112, %4114
  %4116 = urem i32 %4115, 2
  %4117 = icmp eq i32 %4116, 0
  %4118 = icmp slt i32 %4113, 10
  %4119 = or i1 %4117, %4118
  br i1 %4119, label %originalBB1126, label %originalBB1126alteredBB

originalBB1126:                                   ; preds = %4111, %originalBB1126alteredBB
  %4120 = load i32, i32* @x.63
  %4121 = load i32, i32* @y.64
  %4122 = sub i32 %4120, 1
  %4123 = mul i32 %4120, %4122
  %4124 = urem i32 %4123, 2
  %4125 = icmp eq i32 %4124, 0
  %4126 = icmp slt i32 %4121, 10
  %4127 = or i1 %4125, %4126
  br i1 %4127, label %originalBBpart21128, label %originalBB1126alteredBB

originalBBpart21128:                              ; preds = %originalBB1126
  br label %4128, !dbg !4655

4128:                                             ; preds = %originalBBpart21128
  %4129 = load i64, i64* %29, align 8, !dbg !4661
  %4130 = load i64, i64* %20, align 8, !dbg !4661
  %4131 = icmp ult i64 %4129, %4130, !dbg !4661
  br i1 %4131, label %4132, label %4136, !dbg !4664

4132:                                             ; preds = %4128
  %4133 = load i8*, i8** %19, align 8, !dbg !4661
  %4134 = load i64, i64* %29, align 8, !dbg !4661
  %4135 = getelementptr inbounds i8, i8* %4133, i64 %4134, !dbg !4661
  store i8 36, i8* %4135, align 1, !dbg !4661
  br label %4136, !dbg !4661

4136:                                             ; preds = %4132, %4128
  %4137 = load i64, i64* %29, align 8, !dbg !4664
  %4138 = add i64 %4137, 1, !dbg !4664
  store i64 %4138, i64* %29, align 8, !dbg !4664
  br label %4139, !dbg !4664

4139:                                             ; preds = %4136
  br label %4140, !dbg !4655

4140:                                             ; preds = %4139
  %4141 = load i64, i64* %29, align 8, !dbg !4665
  %4142 = load i64, i64* %20, align 8, !dbg !4665
  %4143 = icmp ult i64 %4141, %4142, !dbg !4665
  br i1 %4143, label %4144, label %4148, !dbg !4668

4144:                                             ; preds = %4140
  %4145 = load i8*, i8** %19, align 8, !dbg !4665
  %4146 = load i64, i64* %29, align 8, !dbg !4665
  %4147 = getelementptr inbounds i8, i8* %4145, i64 %4146, !dbg !4665
  store i8 39, i8* %4147, align 1, !dbg !4665
  br label %4148, !dbg !4665

4148:                                             ; preds = %4144, %4140
  %4149 = load i32, i32* @x.63
  %4150 = load i32, i32* @y.64
  %4151 = sub i32 %4149, 1
  %4152 = mul i32 %4149, %4151
  %4153 = urem i32 %4152, 2
  %4154 = icmp eq i32 %4153, 0
  %4155 = icmp slt i32 %4150, 10
  %4156 = or i1 %4154, %4155
  br i1 %4156, label %originalBB1130, label %originalBB1130alteredBB

originalBB1130:                                   ; preds = %4148, %originalBB1130alteredBB
  %4157 = load i64, i64* %29, align 8, !dbg !4668
  %4158 = add i64 %4157, 1, !dbg !4668
  store i64 %4158, i64* %29, align 8, !dbg !4668
  %4159 = load i32, i32* @x.63
  %4160 = load i32, i32* @y.64
  %4161 = sub i32 %4159, 1
  %4162 = mul i32 %4159, %4161
  %4163 = urem i32 %4162, 2
  %4164 = icmp eq i32 %4163, 0
  %4165 = icmp slt i32 %4160, 10
  %4166 = or i1 %4164, %4165
  br i1 %4166, label %originalBBpart21135, label %originalBB1130alteredBB

originalBBpart21135:                              ; preds = %originalBB1130
  br label %4167, !dbg !4668

4167:                                             ; preds = %originalBBpart21135
  %4168 = load i32, i32* @x.63
  %4169 = load i32, i32* @y.64
  %4170 = sub i32 %4168, 1
  %4171 = mul i32 %4168, %4170
  %4172 = urem i32 %4171, 2
  %4173 = icmp eq i32 %4172, 0
  %4174 = icmp slt i32 %4169, 10
  %4175 = or i1 %4173, %4174
  br i1 %4175, label %originalBB1137, label %originalBB1137alteredBB

originalBB1137:                                   ; preds = %4167, %originalBB1137alteredBB
  store i8 1, i8* %36, align 1, !dbg !4655
  %4176 = load i32, i32* @x.63
  %4177 = load i32, i32* @y.64
  %4178 = sub i32 %4176, 1
  %4179 = mul i32 %4176, %4178
  %4180 = urem i32 %4179, 2
  %4181 = icmp eq i32 %4180, 0
  %4182 = icmp slt i32 %4177, 10
  %4183 = or i1 %4181, %4182
  br i1 %4183, label %originalBBpart21139, label %originalBB1137alteredBB

originalBBpart21139:                              ; preds = %originalBB1137
  br label %4184, !dbg !4655

4184:                                             ; preds = %originalBBpart21139, %4096, %originalBBpart21124
  %4185 = load i32, i32* @x.63
  %4186 = load i32, i32* @y.64
  %4187 = sub i32 %4185, 1
  %4188 = mul i32 %4185, %4187
  %4189 = urem i32 %4188, 2
  %4190 = icmp eq i32 %4189, 0
  %4191 = icmp slt i32 %4186, 10
  %4192 = or i1 %4190, %4191
  br i1 %4192, label %originalBB1141, label %originalBB1141alteredBB

originalBB1141:                                   ; preds = %4184, %originalBB1141alteredBB
  %4193 = load i32, i32* @x.63
  %4194 = load i32, i32* @y.64
  %4195 = sub i32 %4193, 1
  %4196 = mul i32 %4193, %4195
  %4197 = urem i32 %4196, 2
  %4198 = icmp eq i32 %4197, 0
  %4199 = icmp slt i32 %4194, 10
  %4200 = or i1 %4198, %4199
  br i1 %4200, label %originalBBpart21143, label %originalBB1141alteredBB

originalBBpart21143:                              ; preds = %originalBB1141
  br label %4201, !dbg !4652

4201:                                             ; preds = %originalBBpart21143
  %4202 = load i32, i32* @x.63
  %4203 = load i32, i32* @y.64
  %4204 = sub i32 %4202, 1
  %4205 = mul i32 %4202, %4204
  %4206 = urem i32 %4205, 2
  %4207 = icmp eq i32 %4206, 0
  %4208 = icmp slt i32 %4203, 10
  %4209 = or i1 %4207, %4208
  br i1 %4209, label %originalBB1145, label %originalBB1145alteredBB

originalBB1145:                                   ; preds = %4201, %originalBB1145alteredBB
  %4210 = load i64, i64* %29, align 8, !dbg !4669
  %4211 = load i64, i64* %20, align 8, !dbg !4669
  %4212 = icmp ult i64 %4210, %4211, !dbg !4669
  %4213 = load i32, i32* @x.63
  %4214 = load i32, i32* @y.64
  %4215 = sub i32 %4213, 1
  %4216 = mul i32 %4213, %4215
  %4217 = urem i32 %4216, 2
  %4218 = icmp eq i32 %4217, 0
  %4219 = icmp slt i32 %4214, 10
  %4220 = or i1 %4218, %4219
  br i1 %4220, label %originalBBpart21147, label %originalBB1145alteredBB

originalBBpart21147:                              ; preds = %originalBB1145
  br i1 %4212, label %4221, label %4241, !dbg !4672

4221:                                             ; preds = %originalBBpart21147
  %4222 = load i32, i32* @x.63
  %4223 = load i32, i32* @y.64
  %4224 = sub i32 %4222, 1
  %4225 = mul i32 %4222, %4224
  %4226 = urem i32 %4225, 2
  %4227 = icmp eq i32 %4226, 0
  %4228 = icmp slt i32 %4223, 10
  %4229 = or i1 %4227, %4228
  br i1 %4229, label %originalBB1149, label %originalBB1149alteredBB

originalBB1149:                                   ; preds = %4221, %originalBB1149alteredBB
  %4230 = load i8*, i8** %19, align 8, !dbg !4669
  %4231 = load i64, i64* %29, align 8, !dbg !4669
  %4232 = getelementptr inbounds i8, i8* %4230, i64 %4231, !dbg !4669
  store i8 92, i8* %4232, align 1, !dbg !4669
  %4233 = load i32, i32* @x.63
  %4234 = load i32, i32* @y.64
  %4235 = sub i32 %4233, 1
  %4236 = mul i32 %4233, %4235
  %4237 = urem i32 %4236, 2
  %4238 = icmp eq i32 %4237, 0
  %4239 = icmp slt i32 %4234, 10
  %4240 = or i1 %4238, %4239
  br i1 %4240, label %originalBBpart21151, label %originalBB1149alteredBB

originalBBpart21151:                              ; preds = %originalBB1149
  br label %4241, !dbg !4669

4241:                                             ; preds = %originalBBpart21151, %originalBBpart21147
  %4242 = load i32, i32* @x.63
  %4243 = load i32, i32* @y.64
  %4244 = sub i32 %4242, 1
  %4245 = mul i32 %4242, %4244
  %4246 = urem i32 %4245, 2
  %4247 = icmp eq i32 %4246, 0
  %4248 = icmp slt i32 %4243, 10
  %4249 = or i1 %4247, %4248
  br i1 %4249, label %originalBB1153, label %originalBB1153alteredBB

originalBB1153:                                   ; preds = %4241, %originalBB1153alteredBB
  %4250 = load i64, i64* %29, align 8, !dbg !4672
  %4251 = add i64 %4250, 1, !dbg !4672
  store i64 %4251, i64* %29, align 8, !dbg !4672
  %4252 = load i32, i32* @x.63
  %4253 = load i32, i32* @y.64
  %4254 = sub i32 %4252, 1
  %4255 = mul i32 %4252, %4254
  %4256 = urem i32 %4255, 2
  %4257 = icmp eq i32 %4256, 0
  %4258 = icmp slt i32 %4253, 10
  %4259 = or i1 %4257, %4258
  br i1 %4259, label %originalBBpart21169, label %originalBB1153alteredBB

originalBBpart21169:                              ; preds = %originalBB1153
  br label %4260, !dbg !4672

4260:                                             ; preds = %originalBBpart21169
  br label %4261, !dbg !4652

4261:                                             ; preds = %4260
  br label %4262, !dbg !4652

4262:                                             ; preds = %4261, %originalBBpart21108, %originalBBpart21048, %1902, %1876
  call void @llvm.dbg.label(metadata !4673), !dbg !4674
  br label %4263, !dbg !4675

4263:                                             ; preds = %4262
  %4264 = load i32, i32* @x.63
  %4265 = load i32, i32* @y.64
  %4266 = sub i32 %4264, 1
  %4267 = mul i32 %4264, %4266
  %4268 = urem i32 %4267, 2
  %4269 = icmp eq i32 %4268, 0
  %4270 = icmp slt i32 %4265, 10
  %4271 = or i1 %4269, %4270
  br i1 %4271, label %originalBB1171, label %originalBB1171alteredBB

originalBB1171:                                   ; preds = %4263, %originalBB1171alteredBB
  %4272 = load i8, i8* %36, align 1, !dbg !4676
  %4273 = trunc i8 %4272 to i1, !dbg !4676
  %4274 = load i32, i32* @x.63
  %4275 = load i32, i32* @y.64
  %4276 = sub i32 %4274, 1
  %4277 = mul i32 %4274, %4276
  %4278 = urem i32 %4277, 2
  %4279 = icmp eq i32 %4278, 0
  %4280 = icmp slt i32 %4275, 10
  %4281 = or i1 %4279, %4280
  br i1 %4281, label %originalBBpart21173, label %originalBB1171alteredBB

originalBBpart21173:                              ; preds = %originalBB1171
  br i1 %4273, label %4282, label %4422, !dbg !4676

4282:                                             ; preds = %originalBBpart21173
  %4283 = load i32, i32* @x.63
  %4284 = load i32, i32* @y.64
  %4285 = sub i32 %4283, 1
  %4286 = mul i32 %4283, %4285
  %4287 = urem i32 %4286, 2
  %4288 = icmp eq i32 %4287, 0
  %4289 = icmp slt i32 %4284, 10
  %4290 = or i1 %4288, %4289
  br i1 %4290, label %originalBB1175, label %originalBB1175alteredBB

originalBB1175:                                   ; preds = %4282, %originalBB1175alteredBB
  %4291 = load i8, i8* %42, align 1, !dbg !4676
  %4292 = trunc i8 %4291 to i1, !dbg !4676
  %4293 = load i32, i32* @x.63
  %4294 = load i32, i32* @y.64
  %4295 = sub i32 %4293, 1
  %4296 = mul i32 %4293, %4295
  %4297 = urem i32 %4296, 2
  %4298 = icmp eq i32 %4297, 0
  %4299 = icmp slt i32 %4294, 10
  %4300 = or i1 %4298, %4299
  br i1 %4300, label %originalBBpart21177, label %originalBB1175alteredBB

originalBBpart21177:                              ; preds = %originalBB1175
  br i1 %4292, label %4422, label %4301, !dbg !4679

4301:                                             ; preds = %originalBBpart21177
  %4302 = load i32, i32* @x.63
  %4303 = load i32, i32* @y.64
  %4304 = sub i32 %4302, 1
  %4305 = mul i32 %4302, %4304
  %4306 = urem i32 %4305, 2
  %4307 = icmp eq i32 %4306, 0
  %4308 = icmp slt i32 %4303, 10
  %4309 = or i1 %4307, %4308
  br i1 %4309, label %originalBB1179, label %originalBB1179alteredBB

originalBB1179:                                   ; preds = %4301, %originalBB1179alteredBB
  %4310 = load i32, i32* @x.63
  %4311 = load i32, i32* @y.64
  %4312 = sub i32 %4310, 1
  %4313 = mul i32 %4310, %4312
  %4314 = urem i32 %4313, 2
  %4315 = icmp eq i32 %4314, 0
  %4316 = icmp slt i32 %4311, 10
  %4317 = or i1 %4315, %4316
  br i1 %4317, label %originalBBpart21181, label %originalBB1179alteredBB

originalBBpart21181:                              ; preds = %originalBB1179
  br label %4318, !dbg !4680

4318:                                             ; preds = %originalBBpart21181
  %4319 = load i32, i32* @x.63
  %4320 = load i32, i32* @y.64
  %4321 = sub i32 %4319, 1
  %4322 = mul i32 %4319, %4321
  %4323 = urem i32 %4322, 2
  %4324 = icmp eq i32 %4323, 0
  %4325 = icmp slt i32 %4320, 10
  %4326 = or i1 %4324, %4325
  br i1 %4326, label %originalBB1183, label %originalBB1183alteredBB

originalBB1183:                                   ; preds = %4318, %originalBB1183alteredBB
  %4327 = load i64, i64* %29, align 8, !dbg !4682
  %4328 = load i64, i64* %20, align 8, !dbg !4682
  %4329 = icmp ult i64 %4327, %4328, !dbg !4682
  %4330 = load i32, i32* @x.63
  %4331 = load i32, i32* @y.64
  %4332 = sub i32 %4330, 1
  %4333 = mul i32 %4330, %4332
  %4334 = urem i32 %4333, 2
  %4335 = icmp eq i32 %4334, 0
  %4336 = icmp slt i32 %4331, 10
  %4337 = or i1 %4335, %4336
  br i1 %4337, label %originalBBpart21185, label %originalBB1183alteredBB

originalBBpart21185:                              ; preds = %originalBB1183
  br i1 %4329, label %4338, label %4342, !dbg !4685

4338:                                             ; preds = %originalBBpart21185
  %4339 = load i8*, i8** %19, align 8, !dbg !4682
  %4340 = load i64, i64* %29, align 8, !dbg !4682
  %4341 = getelementptr inbounds i8, i8* %4339, i64 %4340, !dbg !4682
  store i8 39, i8* %4341, align 1, !dbg !4682
  br label %4342, !dbg !4682

4342:                                             ; preds = %4338, %originalBBpart21185
  %4343 = load i32, i32* @x.63
  %4344 = load i32, i32* @y.64
  %4345 = sub i32 %4343, 1
  %4346 = mul i32 %4343, %4345
  %4347 = urem i32 %4346, 2
  %4348 = icmp eq i32 %4347, 0
  %4349 = icmp slt i32 %4344, 10
  %4350 = or i1 %4348, %4349
  br i1 %4350, label %originalBB1187, label %originalBB1187alteredBB

originalBB1187:                                   ; preds = %4342, %originalBB1187alteredBB
  %4351 = load i64, i64* %29, align 8, !dbg !4685
  %4352 = add i64 %4351, 1, !dbg !4685
  store i64 %4352, i64* %29, align 8, !dbg !4685
  %4353 = load i32, i32* @x.63
  %4354 = load i32, i32* @y.64
  %4355 = sub i32 %4353, 1
  %4356 = mul i32 %4353, %4355
  %4357 = urem i32 %4356, 2
  %4358 = icmp eq i32 %4357, 0
  %4359 = icmp slt i32 %4354, 10
  %4360 = or i1 %4358, %4359
  br i1 %4360, label %originalBBpart21199, label %originalBB1187alteredBB

originalBBpart21199:                              ; preds = %originalBB1187
  br label %4361, !dbg !4685

4361:                                             ; preds = %originalBBpart21199
  %4362 = load i32, i32* @x.63
  %4363 = load i32, i32* @y.64
  %4364 = sub i32 %4362, 1
  %4365 = mul i32 %4362, %4364
  %4366 = urem i32 %4365, 2
  %4367 = icmp eq i32 %4366, 0
  %4368 = icmp slt i32 %4363, 10
  %4369 = or i1 %4367, %4368
  br i1 %4369, label %originalBB1201, label %originalBB1201alteredBB

originalBB1201:                                   ; preds = %4361, %originalBB1201alteredBB
  %4370 = load i32, i32* @x.63
  %4371 = load i32, i32* @y.64
  %4372 = sub i32 %4370, 1
  %4373 = mul i32 %4370, %4372
  %4374 = urem i32 %4373, 2
  %4375 = icmp eq i32 %4374, 0
  %4376 = icmp slt i32 %4371, 10
  %4377 = or i1 %4375, %4376
  br i1 %4377, label %originalBBpart21203, label %originalBB1201alteredBB

originalBBpart21203:                              ; preds = %originalBB1201
  br label %4378, !dbg !4680

4378:                                             ; preds = %originalBBpart21203
  %4379 = load i32, i32* @x.63
  %4380 = load i32, i32* @y.64
  %4381 = sub i32 %4379, 1
  %4382 = mul i32 %4379, %4381
  %4383 = urem i32 %4382, 2
  %4384 = icmp eq i32 %4383, 0
  %4385 = icmp slt i32 %4380, 10
  %4386 = or i1 %4384, %4385
  br i1 %4386, label %originalBB1205, label %originalBB1205alteredBB

originalBB1205:                                   ; preds = %4378, %originalBB1205alteredBB
  %4387 = load i64, i64* %29, align 8, !dbg !4686
  %4388 = load i64, i64* %20, align 8, !dbg !4686
  %4389 = icmp ult i64 %4387, %4388, !dbg !4686
  %4390 = load i32, i32* @x.63
  %4391 = load i32, i32* @y.64
  %4392 = sub i32 %4390, 1
  %4393 = mul i32 %4390, %4392
  %4394 = urem i32 %4393, 2
  %4395 = icmp eq i32 %4394, 0
  %4396 = icmp slt i32 %4391, 10
  %4397 = or i1 %4395, %4396
  br i1 %4397, label %originalBBpart21207, label %originalBB1205alteredBB

originalBBpart21207:                              ; preds = %originalBB1205
  br i1 %4389, label %4398, label %4402, !dbg !4689

4398:                                             ; preds = %originalBBpart21207
  %4399 = load i8*, i8** %19, align 8, !dbg !4686
  %4400 = load i64, i64* %29, align 8, !dbg !4686
  %4401 = getelementptr inbounds i8, i8* %4399, i64 %4400, !dbg !4686
  store i8 39, i8* %4401, align 1, !dbg !4686
  br label %4402, !dbg !4686

4402:                                             ; preds = %4398, %originalBBpart21207
  %4403 = load i32, i32* @x.63
  %4404 = load i32, i32* @y.64
  %4405 = sub i32 %4403, 1
  %4406 = mul i32 %4403, %4405
  %4407 = urem i32 %4406, 2
  %4408 = icmp eq i32 %4407, 0
  %4409 = icmp slt i32 %4404, 10
  %4410 = or i1 %4408, %4409
  br i1 %4410, label %originalBB1209, label %originalBB1209alteredBB

originalBB1209:                                   ; preds = %4402, %originalBB1209alteredBB
  %4411 = load i64, i64* %29, align 8, !dbg !4689
  %4412 = add i64 %4411, 1, !dbg !4689
  store i64 %4412, i64* %29, align 8, !dbg !4689
  %4413 = load i32, i32* @x.63
  %4414 = load i32, i32* @y.64
  %4415 = sub i32 %4413, 1
  %4416 = mul i32 %4413, %4415
  %4417 = urem i32 %4416, 2
  %4418 = icmp eq i32 %4417, 0
  %4419 = icmp slt i32 %4414, 10
  %4420 = or i1 %4418, %4419
  br i1 %4420, label %originalBBpart21215, label %originalBB1209alteredBB

originalBBpart21215:                              ; preds = %originalBB1209
  br label %4421, !dbg !4689

4421:                                             ; preds = %originalBBpart21215
  store i8 0, i8* %36, align 1, !dbg !4680
  br label %4422, !dbg !4680

4422:                                             ; preds = %4421, %originalBBpart21177, %originalBBpart21173
  %4423 = load i32, i32* @x.63
  %4424 = load i32, i32* @y.64
  %4425 = sub i32 %4423, 1
  %4426 = mul i32 %4423, %4425
  %4427 = urem i32 %4426, 2
  %4428 = icmp eq i32 %4427, 0
  %4429 = icmp slt i32 %4424, 10
  %4430 = or i1 %4428, %4429
  br i1 %4430, label %originalBB1217, label %originalBB1217alteredBB

originalBB1217:                                   ; preds = %4422, %originalBB1217alteredBB
  %4431 = load i32, i32* @x.63
  %4432 = load i32, i32* @y.64
  %4433 = sub i32 %4431, 1
  %4434 = mul i32 %4431, %4433
  %4435 = urem i32 %4434, 2
  %4436 = icmp eq i32 %4435, 0
  %4437 = icmp slt i32 %4432, 10
  %4438 = or i1 %4436, %4437
  br i1 %4438, label %originalBBpart21219, label %originalBB1217alteredBB

originalBBpart21219:                              ; preds = %originalBB1217
  br label %4439, !dbg !4679

4439:                                             ; preds = %originalBBpart21219
  br label %4440, !dbg !4690

4440:                                             ; preds = %4439
  %4441 = load i32, i32* @x.63
  %4442 = load i32, i32* @y.64
  %4443 = sub i32 %4441, 1
  %4444 = mul i32 %4441, %4443
  %4445 = urem i32 %4444, 2
  %4446 = icmp eq i32 %4445, 0
  %4447 = icmp slt i32 %4442, 10
  %4448 = or i1 %4446, %4447
  br i1 %4448, label %originalBB1221, label %originalBB1221alteredBB

originalBB1221:                                   ; preds = %4440, %originalBB1221alteredBB
  %4449 = load i64, i64* %29, align 8, !dbg !4691
  %4450 = load i64, i64* %20, align 8, !dbg !4691
  %4451 = icmp ult i64 %4449, %4450, !dbg !4691
  %4452 = load i32, i32* @x.63
  %4453 = load i32, i32* @y.64
  %4454 = sub i32 %4452, 1
  %4455 = mul i32 %4452, %4454
  %4456 = urem i32 %4455, 2
  %4457 = icmp eq i32 %4456, 0
  %4458 = icmp slt i32 %4453, 10
  %4459 = or i1 %4457, %4458
  br i1 %4459, label %originalBBpart21223, label %originalBB1221alteredBB

originalBBpart21223:                              ; preds = %originalBB1221
  br i1 %4451, label %4460, label %4481, !dbg !4694

4460:                                             ; preds = %originalBBpart21223
  %4461 = load i32, i32* @x.63
  %4462 = load i32, i32* @y.64
  %4463 = sub i32 %4461, 1
  %4464 = mul i32 %4461, %4463
  %4465 = urem i32 %4464, 2
  %4466 = icmp eq i32 %4465, 0
  %4467 = icmp slt i32 %4462, 10
  %4468 = or i1 %4466, %4467
  br i1 %4468, label %originalBB1225, label %originalBB1225alteredBB

originalBB1225:                                   ; preds = %4460, %originalBB1225alteredBB
  %4469 = load i8, i8* %39, align 1, !dbg !4691
  %4470 = load i8*, i8** %19, align 8, !dbg !4691
  %4471 = load i64, i64* %29, align 8, !dbg !4691
  %4472 = getelementptr inbounds i8, i8* %4470, i64 %4471, !dbg !4691
  store i8 %4469, i8* %4472, align 1, !dbg !4691
  %4473 = load i32, i32* @x.63
  %4474 = load i32, i32* @y.64
  %4475 = sub i32 %4473, 1
  %4476 = mul i32 %4473, %4475
  %4477 = urem i32 %4476, 2
  %4478 = icmp eq i32 %4477, 0
  %4479 = icmp slt i32 %4474, 10
  %4480 = or i1 %4478, %4479
  br i1 %4480, label %originalBBpart21227, label %originalBB1225alteredBB

originalBBpart21227:                              ; preds = %originalBB1225
  br label %4481, !dbg !4691

4481:                                             ; preds = %originalBBpart21227, %originalBBpart21223
  %4482 = load i32, i32* @x.63
  %4483 = load i32, i32* @y.64
  %4484 = sub i32 %4482, 1
  %4485 = mul i32 %4482, %4484
  %4486 = urem i32 %4485, 2
  %4487 = icmp eq i32 %4486, 0
  %4488 = icmp slt i32 %4483, 10
  %4489 = or i1 %4487, %4488
  br i1 %4489, label %originalBB1229, label %originalBB1229alteredBB

originalBB1229:                                   ; preds = %4481, %originalBB1229alteredBB
  %4490 = load i64, i64* %29, align 8, !dbg !4694
  %4491 = add i64 %4490, 1, !dbg !4694
  store i64 %4491, i64* %29, align 8, !dbg !4694
  %4492 = load i32, i32* @x.63
  %4493 = load i32, i32* @y.64
  %4494 = sub i32 %4492, 1
  %4495 = mul i32 %4492, %4494
  %4496 = urem i32 %4495, 2
  %4497 = icmp eq i32 %4496, 0
  %4498 = icmp slt i32 %4493, 10
  %4499 = or i1 %4497, %4498
  br i1 %4499, label %originalBBpart21242, label %originalBB1229alteredBB

originalBBpart21242:                              ; preds = %originalBB1229
  br label %4500, !dbg !4694

4500:                                             ; preds = %originalBBpart21242
  %4501 = load i32, i32* @x.63
  %4502 = load i32, i32* @y.64
  %4503 = sub i32 %4501, 1
  %4504 = mul i32 %4501, %4503
  %4505 = urem i32 %4504, 2
  %4506 = icmp eq i32 %4505, 0
  %4507 = icmp slt i32 %4502, 10
  %4508 = or i1 %4506, %4507
  br i1 %4508, label %originalBB1244, label %originalBB1244alteredBB

originalBB1244:                                   ; preds = %4500, %originalBB1244alteredBB
  %4509 = load i8, i8* %43, align 1, !dbg !4695
  %4510 = trunc i8 %4509 to i1, !dbg !4695
  %4511 = load i32, i32* @x.63
  %4512 = load i32, i32* @y.64
  %4513 = sub i32 %4511, 1
  %4514 = mul i32 %4511, %4513
  %4515 = urem i32 %4514, 2
  %4516 = icmp eq i32 %4515, 0
  %4517 = icmp slt i32 %4512, 10
  %4518 = or i1 %4516, %4517
  br i1 %4518, label %originalBBpart21246, label %originalBB1244alteredBB

originalBBpart21246:                              ; preds = %originalBB1244
  br i1 %4510, label %4536, label %4519, !dbg !4697

4519:                                             ; preds = %originalBBpart21246
  %4520 = load i32, i32* @x.63
  %4521 = load i32, i32* @y.64
  %4522 = sub i32 %4520, 1
  %4523 = mul i32 %4520, %4522
  %4524 = urem i32 %4523, 2
  %4525 = icmp eq i32 %4524, 0
  %4526 = icmp slt i32 %4521, 10
  %4527 = or i1 %4525, %4526
  br i1 %4527, label %originalBB1248, label %originalBB1248alteredBB

originalBB1248:                                   ; preds = %4519, %originalBB1248alteredBB
  store i8 0, i8* %38, align 1, !dbg !4698
  %4528 = load i32, i32* @x.63
  %4529 = load i32, i32* @y.64
  %4530 = sub i32 %4528, 1
  %4531 = mul i32 %4528, %4530
  %4532 = urem i32 %4531, 2
  %4533 = icmp eq i32 %4532, 0
  %4534 = icmp slt i32 %4529, 10
  %4535 = or i1 %4533, %4534
  br i1 %4535, label %originalBBpart21250, label %originalBB1248alteredBB

originalBBpart21250:                              ; preds = %originalBB1248
  br label %4536, !dbg !4699

4536:                                             ; preds = %originalBBpart21250, %originalBBpart21246
  %4537 = load i32, i32* @x.63
  %4538 = load i32, i32* @y.64
  %4539 = sub i32 %4537, 1
  %4540 = mul i32 %4537, %4539
  %4541 = urem i32 %4540, 2
  %4542 = icmp eq i32 %4541, 0
  %4543 = icmp slt i32 %4538, 10
  %4544 = or i1 %4542, %4543
  br i1 %4544, label %originalBB1252, label %originalBB1252alteredBB

originalBB1252:                                   ; preds = %4536, %originalBB1252alteredBB
  %4545 = load i32, i32* @x.63
  %4546 = load i32, i32* @y.64
  %4547 = sub i32 %4545, 1
  %4548 = mul i32 %4545, %4547
  %4549 = urem i32 %4548, 2
  %4550 = icmp eq i32 %4549, 0
  %4551 = icmp slt i32 %4546, 10
  %4552 = or i1 %4550, %4551
  br i1 %4552, label %originalBBpart21254, label %originalBB1252alteredBB

originalBBpart21254:                              ; preds = %originalBB1252
  br label %4553, !dbg !4700

4553:                                             ; preds = %originalBBpart21254, %1362
  %4554 = load i64, i64* %28, align 8, !dbg !4701
  %4555 = add i64 %4554, 1, !dbg !4701
  store i64 %4555, i64* %28, align 8, !dbg !4701
  br label %538, !dbg !4702, !llvm.loop !4703

4556:                                             ; preds = %originalBBpart2126
  %4557 = load i32, i32* @x.63
  %4558 = load i32, i32* @y.64
  %4559 = sub i32 %4557, 1
  %4560 = mul i32 %4557, %4559
  %4561 = urem i32 %4560, 2
  %4562 = icmp eq i32 %4561, 0
  %4563 = icmp slt i32 %4558, 10
  %4564 = or i1 %4562, %4563
  br i1 %4564, label %originalBB1256, label %originalBB1256alteredBB

originalBB1256:                                   ; preds = %4556, %originalBB1256alteredBB
  %4565 = load i64, i64* %29, align 8, !dbg !4705
  %4566 = icmp eq i64 %4565, 0, !dbg !4707
  %4567 = load i32, i32* @x.63
  %4568 = load i32, i32* @y.64
  %4569 = sub i32 %4567, 1
  %4570 = mul i32 %4567, %4569
  %4571 = urem i32 %4570, 2
  %4572 = icmp eq i32 %4571, 0
  %4573 = icmp slt i32 %4568, 10
  %4574 = or i1 %4572, %4573
  br i1 %4574, label %originalBBpart21258, label %originalBB1256alteredBB

originalBBpart21258:                              ; preds = %originalBB1256
  br i1 %4566, label %4575, label %4598, !dbg !4708

4575:                                             ; preds = %originalBBpart21258
  %4576 = load i32, i32* %23, align 4, !dbg !4709
  %4577 = icmp eq i32 %4576, 2, !dbg !4710
  br i1 %4577, label %4578, label %4598, !dbg !4711

4578:                                             ; preds = %4575
  %4579 = load i32, i32* @x.63
  %4580 = load i32, i32* @y.64
  %4581 = sub i32 %4579, 1
  %4582 = mul i32 %4579, %4581
  %4583 = urem i32 %4582, 2
  %4584 = icmp eq i32 %4583, 0
  %4585 = icmp slt i32 %4580, 10
  %4586 = or i1 %4584, %4585
  br i1 %4586, label %originalBB1260, label %originalBB1260alteredBB

originalBB1260:                                   ; preds = %4578, %originalBB1260alteredBB
  %4587 = load i8, i8* %35, align 1, !dbg !4712
  %4588 = trunc i8 %4587 to i1, !dbg !4712
  %4589 = load i32, i32* @x.63
  %4590 = load i32, i32* @y.64
  %4591 = sub i32 %4589, 1
  %4592 = mul i32 %4589, %4591
  %4593 = urem i32 %4592, 2
  %4594 = icmp eq i32 %4593, 0
  %4595 = icmp slt i32 %4590, 10
  %4596 = or i1 %4594, %4595
  br i1 %4596, label %originalBBpart21262, label %originalBB1260alteredBB

originalBBpart21262:                              ; preds = %originalBB1260
  br i1 %4588, label %4597, label %4598, !dbg !4713

4597:                                             ; preds = %originalBBpart21262
  br label %4894, !dbg !4714

4598:                                             ; preds = %originalBBpart21262, %4575, %originalBBpart21258
  %4599 = load i32, i32* %23, align 4, !dbg !4715
  %4600 = icmp eq i32 %4599, 2, !dbg !4717
  br i1 %4600, label %4601, label %4710, !dbg !4718

4601:                                             ; preds = %4598
  %4602 = load i8, i8* %35, align 1, !dbg !4719
  %4603 = trunc i8 %4602 to i1, !dbg !4719
  br i1 %4603, label %4710, label %4604, !dbg !4720

4604:                                             ; preds = %4601
  %4605 = load i32, i32* @x.63
  %4606 = load i32, i32* @y.64
  %4607 = sub i32 %4605, 1
  %4608 = mul i32 %4605, %4607
  %4609 = urem i32 %4608, 2
  %4610 = icmp eq i32 %4609, 0
  %4611 = icmp slt i32 %4606, 10
  %4612 = or i1 %4610, %4611
  br i1 %4612, label %originalBB1264, label %originalBB1264alteredBB

originalBB1264:                                   ; preds = %4604, %originalBB1264alteredBB
  %4613 = load i8, i8* %37, align 1, !dbg !4721
  %4614 = trunc i8 %4613 to i1, !dbg !4721
  %4615 = load i32, i32* @x.63
  %4616 = load i32, i32* @y.64
  %4617 = sub i32 %4615, 1
  %4618 = mul i32 %4615, %4617
  %4619 = urem i32 %4618, 2
  %4620 = icmp eq i32 %4619, 0
  %4621 = icmp slt i32 %4616, 10
  %4622 = or i1 %4620, %4621
  br i1 %4622, label %originalBBpart21266, label %originalBB1264alteredBB

originalBBpart21266:                              ; preds = %originalBB1264
  br i1 %4614, label %4623, label %4710, !dbg !4722

4623:                                             ; preds = %originalBBpart21266
  %4624 = load i32, i32* @x.63
  %4625 = load i32, i32* @y.64
  %4626 = sub i32 %4624, 1
  %4627 = mul i32 %4624, %4626
  %4628 = urem i32 %4627, 2
  %4629 = icmp eq i32 %4628, 0
  %4630 = icmp slt i32 %4625, 10
  %4631 = or i1 %4629, %4630
  br i1 %4631, label %originalBB1268, label %originalBB1268alteredBB

originalBB1268:                                   ; preds = %4623, %originalBB1268alteredBB
  %4632 = load i8, i8* %38, align 1, !dbg !4723
  %4633 = trunc i8 %4632 to i1, !dbg !4723
  %4634 = load i32, i32* @x.63
  %4635 = load i32, i32* @y.64
  %4636 = sub i32 %4634, 1
  %4637 = mul i32 %4634, %4636
  %4638 = urem i32 %4637, 2
  %4639 = icmp eq i32 %4638, 0
  %4640 = icmp slt i32 %4635, 10
  %4641 = or i1 %4639, %4640
  br i1 %4641, label %originalBBpart21270, label %originalBB1268alteredBB

originalBBpart21270:                              ; preds = %originalBB1268
  br i1 %4633, label %4642, label %4668, !dbg !4726

4642:                                             ; preds = %originalBBpart21270
  %4643 = load i32, i32* @x.63
  %4644 = load i32, i32* @y.64
  %4645 = sub i32 %4643, 1
  %4646 = mul i32 %4643, %4645
  %4647 = urem i32 %4646, 2
  %4648 = icmp eq i32 %4647, 0
  %4649 = icmp slt i32 %4644, 10
  %4650 = or i1 %4648, %4649
  br i1 %4650, label %originalBB1272, label %originalBB1272alteredBB

originalBB1272:                                   ; preds = %4642, %originalBB1272alteredBB
  %4651 = load i8*, i8** %19, align 8, !dbg !4727
  %4652 = load i64, i64* %30, align 8, !dbg !4728
  %4653 = load i8*, i8** %21, align 8, !dbg !4729
  %4654 = load i64, i64* %22, align 8, !dbg !4730
  %4655 = load i32, i32* %24, align 4, !dbg !4731
  %4656 = load i32*, i32** %25, align 8, !dbg !4732
  %4657 = load i8*, i8** %26, align 8, !dbg !4733
  %4658 = load i8*, i8** %27, align 8, !dbg !4734
  %4659 = call i64 @quotearg_buffer_restyled(i8* %4651, i64 %4652, i8* %4653, i64 %4654, i32 5, i32 %4655, i32* %4656, i8* %4657, i8* %4658), !dbg !4735
  store i64 %4659, i64* %18, align 8, !dbg !4736
  %4660 = load i32, i32* @x.63
  %4661 = load i32, i32* @y.64
  %4662 = sub i32 %4660, 1
  %4663 = mul i32 %4660, %4662
  %4664 = urem i32 %4663, 2
  %4665 = icmp eq i32 %4664, 0
  %4666 = icmp slt i32 %4661, 10
  %4667 = or i1 %4665, %4666
  br i1 %4667, label %originalBBpart21274, label %originalBB1272alteredBB

originalBBpart21274:                              ; preds = %originalBB1272
  br label %4976, !dbg !4736

4668:                                             ; preds = %originalBBpart21270
  %4669 = load i64, i64* %20, align 8, !dbg !4737
  %4670 = icmp ne i64 %4669, 0, !dbg !4737
  br i1 %4670, label %4676, label %4671, !dbg !4739

4671:                                             ; preds = %4668
  %4672 = load i64, i64* %30, align 8, !dbg !4740
  %4673 = icmp ne i64 %4672, 0, !dbg !4740
  br i1 %4673, label %4674, label %4676, !dbg !4741

4674:                                             ; preds = %4671
  %4675 = load i64, i64* %30, align 8, !dbg !4742
  store i64 %4675, i64* %20, align 8, !dbg !4744
  store i64 0, i64* %29, align 8, !dbg !4745
  br label %66, !dbg !4746

4676:                                             ; preds = %4671, %4668
  %4677 = load i32, i32* @x.63
  %4678 = load i32, i32* @y.64
  %4679 = sub i32 %4677, 1
  %4680 = mul i32 %4677, %4679
  %4681 = urem i32 %4680, 2
  %4682 = icmp eq i32 %4681, 0
  %4683 = icmp slt i32 %4678, 10
  %4684 = or i1 %4682, %4683
  br i1 %4684, label %originalBB1276, label %originalBB1276alteredBB

originalBB1276:                                   ; preds = %4676, %originalBB1276alteredBB
  %4685 = load i32, i32* @x.63
  %4686 = load i32, i32* @y.64
  %4687 = sub i32 %4685, 1
  %4688 = mul i32 %4685, %4687
  %4689 = urem i32 %4688, 2
  %4690 = icmp eq i32 %4689, 0
  %4691 = icmp slt i32 %4686, 10
  %4692 = or i1 %4690, %4691
  br i1 %4692, label %originalBBpart21278, label %originalBB1276alteredBB

originalBBpart21278:                              ; preds = %originalBB1276
  br label %4693

4693:                                             ; preds = %originalBBpart21278
  %4694 = load i32, i32* @x.63
  %4695 = load i32, i32* @y.64
  %4696 = sub i32 %4694, 1
  %4697 = mul i32 %4694, %4696
  %4698 = urem i32 %4697, 2
  %4699 = icmp eq i32 %4698, 0
  %4700 = icmp slt i32 %4695, 10
  %4701 = or i1 %4699, %4700
  br i1 %4701, label %originalBB1280, label %originalBB1280alteredBB

originalBB1280:                                   ; preds = %4693, %originalBB1280alteredBB
  %4702 = load i32, i32* @x.63
  %4703 = load i32, i32* @y.64
  %4704 = sub i32 %4702, 1
  %4705 = mul i32 %4702, %4704
  %4706 = urem i32 %4705, 2
  %4707 = icmp eq i32 %4706, 0
  %4708 = icmp slt i32 %4703, 10
  %4709 = or i1 %4707, %4708
  br i1 %4709, label %originalBBpart21282, label %originalBB1280alteredBB

originalBBpart21282:                              ; preds = %originalBB1280
  br label %4710, !dbg !4747

4710:                                             ; preds = %originalBBpart21282, %originalBBpart21266, %4601, %4598
  %4711 = load i8*, i8** %31, align 8, !dbg !4748
  %4712 = icmp ne i8* %4711, null, !dbg !4748
  br i1 %4712, label %4713, label %4852, !dbg !4750

4713:                                             ; preds = %4710
  %4714 = load i8, i8* %35, align 1, !dbg !4751
  %4715 = trunc i8 %4714 to i1, !dbg !4751
  br i1 %4715, label %4852, label %4716, !dbg !4752

4716:                                             ; preds = %4713
  %4717 = load i32, i32* @x.63
  %4718 = load i32, i32* @y.64
  %4719 = sub i32 %4717, 1
  %4720 = mul i32 %4717, %4719
  %4721 = urem i32 %4720, 2
  %4722 = icmp eq i32 %4721, 0
  %4723 = icmp slt i32 %4718, 10
  %4724 = or i1 %4722, %4723
  br i1 %4724, label %originalBB1284, label %originalBB1284alteredBB

originalBB1284:                                   ; preds = %4716, %originalBB1284alteredBB
  %4725 = load i32, i32* @x.63
  %4726 = load i32, i32* @y.64
  %4727 = sub i32 %4725, 1
  %4728 = mul i32 %4725, %4727
  %4729 = urem i32 %4728, 2
  %4730 = icmp eq i32 %4729, 0
  %4731 = icmp slt i32 %4726, 10
  %4732 = or i1 %4730, %4731
  br i1 %4732, label %originalBBpart21286, label %originalBB1284alteredBB

originalBBpart21286:                              ; preds = %originalBB1284
  br label %4733, !dbg !4753

4733:                                             ; preds = %originalBBpart21306, %originalBBpart21286
  %4734 = load i8*, i8** %31, align 8, !dbg !4754
  %4735 = load i8, i8* %4734, align 1, !dbg !4757
  %4736 = icmp ne i8 %4735, 0, !dbg !4758
  br i1 %4736, label %4737, label %4835, !dbg !4758

4737:                                             ; preds = %4733
  %4738 = load i32, i32* @x.63
  %4739 = load i32, i32* @y.64
  %4740 = sub i32 %4738, 1
  %4741 = mul i32 %4738, %4740
  %4742 = urem i32 %4741, 2
  %4743 = icmp eq i32 %4742, 0
  %4744 = icmp slt i32 %4739, 10
  %4745 = or i1 %4743, %4744
  br i1 %4745, label %originalBB1288, label %originalBB1288alteredBB

originalBB1288:                                   ; preds = %4737, %originalBB1288alteredBB
  %4746 = load i32, i32* @x.63
  %4747 = load i32, i32* @y.64
  %4748 = sub i32 %4746, 1
  %4749 = mul i32 %4746, %4748
  %4750 = urem i32 %4749, 2
  %4751 = icmp eq i32 %4750, 0
  %4752 = icmp slt i32 %4747, 10
  %4753 = or i1 %4751, %4752
  br i1 %4753, label %originalBBpart21290, label %originalBB1288alteredBB

originalBBpart21290:                              ; preds = %originalBB1288
  br label %4754, !dbg !4759

4754:                                             ; preds = %originalBBpart21290
  %4755 = load i32, i32* @x.63
  %4756 = load i32, i32* @y.64
  %4757 = sub i32 %4755, 1
  %4758 = mul i32 %4755, %4757
  %4759 = urem i32 %4758, 2
  %4760 = icmp eq i32 %4759, 0
  %4761 = icmp slt i32 %4756, 10
  %4762 = or i1 %4760, %4761
  br i1 %4762, label %originalBB1292, label %originalBB1292alteredBB

originalBB1292:                                   ; preds = %4754, %originalBB1292alteredBB
  %4763 = load i64, i64* %29, align 8, !dbg !4760
  %4764 = load i64, i64* %20, align 8, !dbg !4760
  %4765 = icmp ult i64 %4763, %4764, !dbg !4760
  %4766 = load i32, i32* @x.63
  %4767 = load i32, i32* @y.64
  %4768 = sub i32 %4766, 1
  %4769 = mul i32 %4766, %4768
  %4770 = urem i32 %4769, 2
  %4771 = icmp eq i32 %4770, 0
  %4772 = icmp slt i32 %4767, 10
  %4773 = or i1 %4771, %4772
  br i1 %4773, label %originalBBpart21294, label %originalBB1292alteredBB

originalBBpart21294:                              ; preds = %originalBB1292
  br i1 %4765, label %4774, label %4796, !dbg !4763

4774:                                             ; preds = %originalBBpart21294
  %4775 = load i32, i32* @x.63
  %4776 = load i32, i32* @y.64
  %4777 = sub i32 %4775, 1
  %4778 = mul i32 %4775, %4777
  %4779 = urem i32 %4778, 2
  %4780 = icmp eq i32 %4779, 0
  %4781 = icmp slt i32 %4776, 10
  %4782 = or i1 %4780, %4781
  br i1 %4782, label %originalBB1296, label %originalBB1296alteredBB

originalBB1296:                                   ; preds = %4774, %originalBB1296alteredBB
  %4783 = load i8*, i8** %31, align 8, !dbg !4760
  %4784 = load i8, i8* %4783, align 1, !dbg !4760
  %4785 = load i8*, i8** %19, align 8, !dbg !4760
  %4786 = load i64, i64* %29, align 8, !dbg !4760
  %4787 = getelementptr inbounds i8, i8* %4785, i64 %4786, !dbg !4760
  store i8 %4784, i8* %4787, align 1, !dbg !4760
  %4788 = load i32, i32* @x.63
  %4789 = load i32, i32* @y.64
  %4790 = sub i32 %4788, 1
  %4791 = mul i32 %4788, %4790
  %4792 = urem i32 %4791, 2
  %4793 = icmp eq i32 %4792, 0
  %4794 = icmp slt i32 %4789, 10
  %4795 = or i1 %4793, %4794
  br i1 %4795, label %originalBBpart21298, label %originalBB1296alteredBB

originalBBpart21298:                              ; preds = %originalBB1296
  br label %4796, !dbg !4760

4796:                                             ; preds = %originalBBpart21298, %originalBBpart21294
  %4797 = load i32, i32* @x.63
  %4798 = load i32, i32* @y.64
  %4799 = sub i32 %4797, 1
  %4800 = mul i32 %4797, %4799
  %4801 = urem i32 %4800, 2
  %4802 = icmp eq i32 %4801, 0
  %4803 = icmp slt i32 %4798, 10
  %4804 = or i1 %4802, %4803
  br i1 %4804, label %originalBB1300, label %originalBB1300alteredBB

originalBB1300:                                   ; preds = %4796, %originalBB1300alteredBB
  %4805 = load i64, i64* %29, align 8, !dbg !4763
  %4806 = add i64 %4805, 1, !dbg !4763
  store i64 %4806, i64* %29, align 8, !dbg !4763
  %4807 = load i32, i32* @x.63
  %4808 = load i32, i32* @y.64
  %4809 = sub i32 %4807, 1
  %4810 = mul i32 %4807, %4809
  %4811 = urem i32 %4810, 2
  %4812 = icmp eq i32 %4811, 0
  %4813 = icmp slt i32 %4808, 10
  %4814 = or i1 %4812, %4813
  br i1 %4814, label %originalBBpart21302, label %originalBB1300alteredBB

originalBBpart21302:                              ; preds = %originalBB1300
  br label %4815, !dbg !4763

4815:                                             ; preds = %originalBBpart21302
  br label %4816, !dbg !4763

4816:                                             ; preds = %4815
  %4817 = load i32, i32* @x.63
  %4818 = load i32, i32* @y.64
  %4819 = sub i32 %4817, 1
  %4820 = mul i32 %4817, %4819
  %4821 = urem i32 %4820, 2
  %4822 = icmp eq i32 %4821, 0
  %4823 = icmp slt i32 %4818, 10
  %4824 = or i1 %4822, %4823
  br i1 %4824, label %originalBB1304, label %originalBB1304alteredBB

originalBB1304:                                   ; preds = %4816, %originalBB1304alteredBB
  %4825 = load i8*, i8** %31, align 8, !dbg !4764
  %4826 = getelementptr inbounds i8, i8* %4825, i32 1, !dbg !4764
  store i8* %4826, i8** %31, align 8, !dbg !4764
  %4827 = load i32, i32* @x.63
  %4828 = load i32, i32* @y.64
  %4829 = sub i32 %4827, 1
  %4830 = mul i32 %4827, %4829
  %4831 = urem i32 %4830, 2
  %4832 = icmp eq i32 %4831, 0
  %4833 = icmp slt i32 %4828, 10
  %4834 = or i1 %4832, %4833
  br i1 %4834, label %originalBBpart21306, label %originalBB1304alteredBB

originalBBpart21306:                              ; preds = %originalBB1304
  br label %4733, !dbg !4765, !llvm.loop !4766

4835:                                             ; preds = %4733
  %4836 = load i32, i32* @x.63
  %4837 = load i32, i32* @y.64
  %4838 = sub i32 %4836, 1
  %4839 = mul i32 %4836, %4838
  %4840 = urem i32 %4839, 2
  %4841 = icmp eq i32 %4840, 0
  %4842 = icmp slt i32 %4837, 10
  %4843 = or i1 %4841, %4842
  br i1 %4843, label %originalBB1308, label %originalBB1308alteredBB

originalBB1308:                                   ; preds = %4835, %originalBB1308alteredBB
  %4844 = load i32, i32* @x.63
  %4845 = load i32, i32* @y.64
  %4846 = sub i32 %4844, 1
  %4847 = mul i32 %4844, %4846
  %4848 = urem i32 %4847, 2
  %4849 = icmp eq i32 %4848, 0
  %4850 = icmp slt i32 %4845, 10
  %4851 = or i1 %4849, %4850
  br i1 %4851, label %originalBBpart21310, label %originalBB1308alteredBB

originalBBpart21310:                              ; preds = %originalBB1308
  br label %4852, !dbg !4767

4852:                                             ; preds = %originalBBpart21310, %4713, %4710
  %4853 = load i32, i32* @x.63
  %4854 = load i32, i32* @y.64
  %4855 = sub i32 %4853, 1
  %4856 = mul i32 %4853, %4855
  %4857 = urem i32 %4856, 2
  %4858 = icmp eq i32 %4857, 0
  %4859 = icmp slt i32 %4854, 10
  %4860 = or i1 %4858, %4859
  br i1 %4860, label %originalBB1312, label %originalBB1312alteredBB

originalBB1312:                                   ; preds = %4852, %originalBB1312alteredBB
  %4861 = load i64, i64* %29, align 8, !dbg !4768
  %4862 = load i64, i64* %20, align 8, !dbg !4770
  %4863 = icmp ult i64 %4861, %4862, !dbg !4771
  %4864 = load i32, i32* @x.63
  %4865 = load i32, i32* @y.64
  %4866 = sub i32 %4864, 1
  %4867 = mul i32 %4864, %4866
  %4868 = urem i32 %4867, 2
  %4869 = icmp eq i32 %4868, 0
  %4870 = icmp slt i32 %4865, 10
  %4871 = or i1 %4869, %4870
  br i1 %4871, label %originalBBpart21314, label %originalBB1312alteredBB

originalBBpart21314:                              ; preds = %originalBB1312
  br i1 %4863, label %4872, label %4892, !dbg !4772

4872:                                             ; preds = %originalBBpart21314
  %4873 = load i32, i32* @x.63
  %4874 = load i32, i32* @y.64
  %4875 = sub i32 %4873, 1
  %4876 = mul i32 %4873, %4875
  %4877 = urem i32 %4876, 2
  %4878 = icmp eq i32 %4877, 0
  %4879 = icmp slt i32 %4874, 10
  %4880 = or i1 %4878, %4879
  br i1 %4880, label %originalBB1316, label %originalBB1316alteredBB

originalBB1316:                                   ; preds = %4872, %originalBB1316alteredBB
  %4881 = load i8*, i8** %19, align 8, !dbg !4773
  %4882 = load i64, i64* %29, align 8, !dbg !4774
  %4883 = getelementptr inbounds i8, i8* %4881, i64 %4882, !dbg !4773
  store i8 0, i8* %4883, align 1, !dbg !4775
  %4884 = load i32, i32* @x.63
  %4885 = load i32, i32* @y.64
  %4886 = sub i32 %4884, 1
  %4887 = mul i32 %4884, %4886
  %4888 = urem i32 %4887, 2
  %4889 = icmp eq i32 %4888, 0
  %4890 = icmp slt i32 %4885, 10
  %4891 = or i1 %4889, %4890
  br i1 %4891, label %originalBBpart21318, label %originalBB1316alteredBB

originalBBpart21318:                              ; preds = %originalBB1316
  br label %4892, !dbg !4773

4892:                                             ; preds = %originalBBpart21318, %originalBBpart21314
  %4893 = load i64, i64* %29, align 8, !dbg !4776
  store i64 %4893, i64* %18, align 8, !dbg !4777
  br label %4976, !dbg !4777

4894:                                             ; preds = %4597, %originalBBpart21120, %originalBBpart2760, %originalBBpart2693, %2208, %2168, %originalBBpart2466, %1875, %originalBBpart2357, %1386, %originalBBpart2199, %originalBBpart2179
  call void @llvm.dbg.label(metadata !4778), !dbg !4779
  %4895 = load i32, i32* @x.63
  %4896 = load i32, i32* @y.64
  %4897 = sub i32 %4895, 1
  %4898 = mul i32 %4895, %4897
  %4899 = urem i32 %4898, 2
  %4900 = icmp eq i32 %4899, 0
  %4901 = icmp slt i32 %4896, 10
  %4902 = or i1 %4900, %4901
  br i1 %4902, label %originalBB1320, label %originalBB1320alteredBB

originalBB1320:                                   ; preds = %4894, %originalBB1320alteredBB
  %4903 = load i32, i32* %23, align 4, !dbg !4780
  %4904 = icmp eq i32 %4903, 2, !dbg !4782
  %4905 = load i32, i32* @x.63
  %4906 = load i32, i32* @y.64
  %4907 = sub i32 %4905, 1
  %4908 = mul i32 %4905, %4907
  %4909 = urem i32 %4908, 2
  %4910 = icmp eq i32 %4909, 0
  %4911 = icmp slt i32 %4906, 10
  %4912 = or i1 %4910, %4911
  br i1 %4912, label %originalBBpart21322, label %originalBB1320alteredBB

originalBBpart21322:                              ; preds = %originalBB1320
  br i1 %4904, label %4913, label %4949, !dbg !4783

4913:                                             ; preds = %originalBBpart21322
  %4914 = load i32, i32* @x.63
  %4915 = load i32, i32* @y.64
  %4916 = sub i32 %4914, 1
  %4917 = mul i32 %4914, %4916
  %4918 = urem i32 %4917, 2
  %4919 = icmp eq i32 %4918, 0
  %4920 = icmp slt i32 %4915, 10
  %4921 = or i1 %4919, %4920
  br i1 %4921, label %originalBB1324, label %originalBB1324alteredBB

originalBB1324:                                   ; preds = %4913, %originalBB1324alteredBB
  %4922 = load i8, i8* %33, align 1, !dbg !4784
  %4923 = trunc i8 %4922 to i1, !dbg !4784
  %4924 = load i32, i32* @x.63
  %4925 = load i32, i32* @y.64
  %4926 = sub i32 %4924, 1
  %4927 = mul i32 %4924, %4926
  %4928 = urem i32 %4927, 2
  %4929 = icmp eq i32 %4928, 0
  %4930 = icmp slt i32 %4925, 10
  %4931 = or i1 %4929, %4930
  br i1 %4931, label %originalBBpart21326, label %originalBB1324alteredBB

originalBBpart21326:                              ; preds = %originalBB1324
  br i1 %4923, label %4932, label %4949, !dbg !4785

4932:                                             ; preds = %originalBBpart21326
  %4933 = load i32, i32* @x.63
  %4934 = load i32, i32* @y.64
  %4935 = sub i32 %4933, 1
  %4936 = mul i32 %4933, %4935
  %4937 = urem i32 %4936, 2
  %4938 = icmp eq i32 %4937, 0
  %4939 = icmp slt i32 %4934, 10
  %4940 = or i1 %4938, %4939
  br i1 %4940, label %originalBB1328, label %originalBB1328alteredBB

originalBB1328:                                   ; preds = %4932, %originalBB1328alteredBB
  store i32 4, i32* %23, align 4, !dbg !4786
  %4941 = load i32, i32* @x.63
  %4942 = load i32, i32* @y.64
  %4943 = sub i32 %4941, 1
  %4944 = mul i32 %4941, %4943
  %4945 = urem i32 %4944, 2
  %4946 = icmp eq i32 %4945, 0
  %4947 = icmp slt i32 %4942, 10
  %4948 = or i1 %4946, %4947
  br i1 %4948, label %originalBBpart21330, label %originalBB1328alteredBB

originalBBpart21330:                              ; preds = %originalBB1328
  br label %4949, !dbg !4787

4949:                                             ; preds = %originalBBpart21330, %originalBBpart21326, %originalBBpart21322
  %4950 = load i32, i32* @x.63
  %4951 = load i32, i32* @y.64
  %4952 = sub i32 %4950, 1
  %4953 = mul i32 %4950, %4952
  %4954 = urem i32 %4953, 2
  %4955 = icmp eq i32 %4954, 0
  %4956 = icmp slt i32 %4951, 10
  %4957 = or i1 %4955, %4956
  br i1 %4957, label %originalBB1332, label %originalBB1332alteredBB

originalBB1332:                                   ; preds = %4949, %originalBB1332alteredBB
  %4958 = load i8*, i8** %19, align 8, !dbg !4788
  %4959 = load i64, i64* %20, align 8, !dbg !4789
  %4960 = load i8*, i8** %21, align 8, !dbg !4790
  %4961 = load i64, i64* %22, align 8, !dbg !4791
  %4962 = load i32, i32* %23, align 4, !dbg !4792
  %4963 = load i32, i32* %24, align 4, !dbg !4793
  %4964 = and i32 %4963, -3, !dbg !4794
  %4965 = load i8*, i8** %26, align 8, !dbg !4795
  %4966 = load i8*, i8** %27, align 8, !dbg !4796
  %4967 = call i64 @quotearg_buffer_restyled(i8* %4958, i64 %4959, i8* %4960, i64 %4961, i32 %4962, i32 %4964, i32* null, i8* %4965, i8* %4966), !dbg !4797
  store i64 %4967, i64* %18, align 8, !dbg !4798
  %4968 = load i32, i32* @x.63
  %4969 = load i32, i32* @y.64
  %4970 = sub i32 %4968, 1
  %4971 = mul i32 %4968, %4970
  %4972 = urem i32 %4971, 2
  %4973 = icmp eq i32 %4972, 0
  %4974 = icmp slt i32 %4969, 10
  %4975 = or i1 %4973, %4974
  br i1 %4975, label %originalBBpart21340, label %originalBB1332alteredBB

originalBBpart21340:                              ; preds = %originalBB1332
  br label %4976, !dbg !4798

4976:                                             ; preds = %originalBBpart21340, %4892, %originalBBpart21274
  %4977 = load i32, i32* @x.63
  %4978 = load i32, i32* @y.64
  %4979 = sub i32 %4977, 1
  %4980 = mul i32 %4977, %4979
  %4981 = urem i32 %4980, 2
  %4982 = icmp eq i32 %4981, 0
  %4983 = icmp slt i32 %4978, 10
  %4984 = or i1 %4982, %4983
  br i1 %4984, label %originalBB1342, label %originalBB1342alteredBB

originalBB1342:                                   ; preds = %4976, %originalBB1342alteredBB
  %4985 = load i64, i64* %18, align 8, !dbg !4799
  %4986 = load i32, i32* @x.63
  %4987 = load i32, i32* @y.64
  %4988 = sub i32 %4986, 1
  %4989 = mul i32 %4986, %4988
  %4990 = urem i32 %4989, 2
  %4991 = icmp eq i32 %4990, 0
  %4992 = icmp slt i32 %4987, 10
  %4993 = or i1 %4991, %4992
  br i1 %4993, label %originalBBpart21344, label %originalBB1342alteredBB

originalBBpart21344:                              ; preds = %originalBB1342
  ret i64 %4985, !dbg !4799

originalBBalteredBB:                              ; preds = %originalBB, %9
  %4994 = alloca i64, align 8
  %4995 = alloca i8*, align 8
  %4996 = alloca i64, align 8
  %4997 = alloca i8*, align 8
  %4998 = alloca i64, align 8
  %4999 = alloca i32, align 4
  %5000 = alloca i32, align 4
  %5001 = alloca i32*, align 8
  %5002 = alloca i8*, align 8
  %5003 = alloca i8*, align 8
  %5004 = alloca i64, align 8
  %5005 = alloca i64, align 8
  %5006 = alloca i64, align 8
  %5007 = alloca i8*, align 8
  %5008 = alloca i64, align 8
  %5009 = alloca i8, align 1
  %5010 = alloca i8, align 1
  %5011 = alloca i8, align 1
  %5012 = alloca i8, align 1
  %5013 = alloca i8, align 1
  %5014 = alloca i8, align 1
  %5015 = alloca i8, align 1
  %5016 = alloca i8, align 1
  %5017 = alloca i8, align 1
  %5018 = alloca i8, align 1
  %5019 = alloca i8, align 1
  %5020 = alloca i64, align 8
  %5021 = alloca i8, align 1
  %5022 = alloca %struct.__mbstate_t, align 4
  %5023 = alloca i32, align 4
  %5024 = alloca i64, align 8
  %5025 = alloca i64, align 8
  %5026 = alloca i64, align 8
  store i8* %0, i8** %4995, align 8
  call void @llvm.dbg.declare(metadata i8** %4995, metadata !4800, metadata !DIExpression()), !dbg !3923
  store i64 %1, i64* %4996, align 8
  call void @llvm.dbg.declare(metadata i64* %4996, metadata !4832, metadata !DIExpression()), !dbg !3925
  store i8* %2, i8** %4997, align 8
  call void @llvm.dbg.declare(metadata i8** %4997, metadata !4833, metadata !DIExpression()), !dbg !3927
  store i64 %3, i64* %4998, align 8
  call void @llvm.dbg.declare(metadata i64* %4998, metadata !4834, metadata !DIExpression()), !dbg !3929
  store i32 %4, i32* %4999, align 4
  call void @llvm.dbg.declare(metadata i32* %4999, metadata !4835, metadata !DIExpression()), !dbg !3931
  store i32 %5, i32* %5000, align 4
  call void @llvm.dbg.declare(metadata i32* %5000, metadata !4836, metadata !DIExpression()), !dbg !3933
  store i32* %6, i32** %5001, align 8
  call void @llvm.dbg.declare(metadata i32** %5001, metadata !4837, metadata !DIExpression()), !dbg !3935
  store i8* %7, i8** %5002, align 8
  call void @llvm.dbg.declare(metadata i8** %5002, metadata !4838, metadata !DIExpression()), !dbg !3937
  store i8* %8, i8** %5003, align 8
  call void @llvm.dbg.declare(metadata i8** %5003, metadata !4839, metadata !DIExpression()), !dbg !3939
  call void @llvm.dbg.declare(metadata i64* %5004, metadata !4840, metadata !DIExpression()), !dbg !3941
  call void @llvm.dbg.declare(metadata i64* %5005, metadata !4841, metadata !DIExpression()), !dbg !3943
  store i64 0, i64* %5005, align 8, !dbg !3943
  call void @llvm.dbg.declare(metadata i64* %5006, metadata !4842, metadata !DIExpression()), !dbg !3945
  store i64 0, i64* %5006, align 8, !dbg !3945
  call void @llvm.dbg.declare(metadata i8** %5007, metadata !4843, metadata !DIExpression()), !dbg !3947
  store i8* null, i8** %5007, align 8, !dbg !3947
  call void @llvm.dbg.declare(metadata i64* %5008, metadata !4844, metadata !DIExpression()), !dbg !3949
  store i64 0, i64* %5008, align 8, !dbg !3949
  call void @llvm.dbg.declare(metadata i8* %5009, metadata !4845, metadata !DIExpression()), !dbg !3951
  store i8 0, i8* %5009, align 1, !dbg !3951
  call void @llvm.dbg.declare(metadata i8* %5010, metadata !4846, metadata !DIExpression()), !dbg !3953
  %5027 = call i64 @__ctype_get_mb_cur_max() #10, !dbg !3954
  %5028 = icmp eq i64 %5027, 1, !dbg !3955
  %5029 = zext i1 %5028 to i8, !dbg !3953
  store i8 %5029, i8* %5010, align 1, !dbg !3953
  call void @llvm.dbg.declare(metadata i8* %5011, metadata !4847, metadata !DIExpression()), !dbg !3957
  %5030 = load i32, i32* %5000, align 4, !dbg !3958
  %_ = shl i32 %5030, 2
  %_1 = sub i32 0, %5030
  %gen = add i32 %_1, 2
  %_2 = shl i32 %5030, 2
  %_3 = sub i32 0, %5030
  %gen4 = add i32 %_3, 2
  %5031 = and i32 %5030, 2, !dbg !3959
  %5032 = icmp ne i32 %5031, 0, !dbg !3960
  %5033 = zext i1 %5032 to i8, !dbg !3957
  store i8 %5033, i8* %5011, align 1, !dbg !3957
  call void @llvm.dbg.declare(metadata i8* %5012, metadata !4848, metadata !DIExpression()), !dbg !3962
  store i8 0, i8* %5012, align 1, !dbg !3962
  call void @llvm.dbg.declare(metadata i8* %5013, metadata !4849, metadata !DIExpression()), !dbg !3964
  store i8 0, i8* %5013, align 1, !dbg !3964
  call void @llvm.dbg.declare(metadata i8* %5014, metadata !4850, metadata !DIExpression()), !dbg !3966
  store i8 1, i8* %5014, align 1, !dbg !3966
  br label %originalBB

originalBB5alteredBB:                             ; preds = %originalBB5, %66
  %5034 = load i32, i32* %23, align 4, !dbg !3970
  br label %originalBB5

originalBB9alteredBB:                             ; preds = %originalBB9, %84
  store i32 5, i32* %23, align 4, !dbg !3972
  store i8 1, i8* %35, align 1, !dbg !3974
  br label %originalBB9

originalBB13alteredBB:                            ; preds = %originalBB13, %104
  br label %originalBB13

originalBB17alteredBB:                            ; preds = %originalBB17, %121
  %5035 = load i64, i64* %29, align 8, !dbg !3980
  %5036 = load i64, i64* %20, align 8, !dbg !3980
  %5037 = icmp ult i64 %5035, %5036, !dbg !3980
  br label %originalBB17

originalBB21alteredBB:                            ; preds = %originalBB21, %141
  %5038 = load i8*, i8** %19, align 8, !dbg !3980
  %5039 = load i64, i64* %29, align 8, !dbg !3980
  %5040 = getelementptr inbounds i8, i8* %5038, i64 %5039, !dbg !3980
  store i8 34, i8* %5040, align 1, !dbg !3980
  br label %originalBB21

originalBB25alteredBB:                            ; preds = %originalBB25, %164
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %182
  store i8 1, i8* %33, align 1, !dbg !3988
  store i8 0, i8* %35, align 1, !dbg !3989
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %202
  %5041 = load i32, i32* %23, align 4, !dbg !3996
  %5042 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.121, i64 0, i64 0), i32 %5041), !dbg !3998
  store i8* %5042, i8** %26, align 8, !dbg !3999
  %5043 = load i32, i32* %23, align 4, !dbg !4000
  %5044 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.122, i64 0, i64 0), i32 %5043), !dbg !4001
  store i8* %5044, i8** %27, align 8, !dbg !4002
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %223
  %5045 = load i8, i8* %35, align 1, !dbg !4004
  %5046 = trunc i8 %5045 to i1, !dbg !4004
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %242
  %5047 = load i8*, i8** %26, align 8, !dbg !4007
  store i8* %5047, i8** %31, align 8, !dbg !4009
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %264
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %281
  %5048 = load i64, i64* %29, align 8, !dbg !4016
  %5049 = load i64, i64* %20, align 8, !dbg !4016
  %5050 = icmp ult i64 %5048, %5049, !dbg !4016
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %301
  %5051 = load i8*, i8** %31, align 8, !dbg !4016
  %5052 = load i8, i8* %5051, align 1, !dbg !4016
  %5053 = load i8*, i8** %19, align 8, !dbg !4016
  %5054 = load i64, i64* %29, align 8, !dbg !4016
  %5055 = getelementptr inbounds i8, i8* %5053, i64 %5054, !dbg !4016
  store i8 %5052, i8* %5055, align 1, !dbg !4016
  br label %originalBB53

originalBB57alteredBB:                            ; preds = %originalBB57, %326
  br label %originalBB57

originalBB61alteredBB:                            ; preds = %originalBB61, %343
  %5056 = load i8*, i8** %31, align 8, !dbg !4020
  %5057 = getelementptr inbounds i8, i8* %5056, i32 1, !dbg !4020
  store i8* %5057, i8** %31, align 8, !dbg !4020
  br label %originalBB61

originalBB65alteredBB:                            ; preds = %originalBB65, %362
  br label %originalBB65

originalBB69alteredBB:                            ; preds = %originalBB69, %379
  store i8 1, i8* %33, align 1, !dbg !4024
  %5058 = load i8*, i8** %27, align 8, !dbg !4025
  store i8* %5058, i8** %31, align 8, !dbg !4026
  %5059 = load i8*, i8** %31, align 8, !dbg !4027
  %5060 = call i64 @strlen(i8* %5059) #13, !dbg !4028
  store i64 %5060, i64* %32, align 8, !dbg !4029
  br label %originalBB69

originalBB73alteredBB:                            ; preds = %originalBB73, %401
  %5061 = load i8, i8* %35, align 1, !dbg !4035
  %5062 = trunc i8 %5061 to i1, !dbg !4035
  br label %originalBB73

originalBB77alteredBB:                            ; preds = %originalBB77, %420
  store i8 1, i8* %33, align 1, !dbg !4038
  br label %originalBB77

originalBB81alteredBB:                            ; preds = %originalBB81, %437
  br label %originalBB81

originalBB85alteredBB:                            ; preds = %originalBB85, %462
  %5063 = load i8*, i8** %19, align 8, !dbg !4046
  %5064 = load i64, i64* %29, align 8, !dbg !4046
  %5065 = getelementptr inbounds i8, i8* %5063, i64 %5064, !dbg !4046
  store i8 39, i8* %5065, align 1, !dbg !4046
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %482
  %5066 = load i64, i64* %29, align 8, !dbg !4049
  %_90 = shl i64 %5066, 1
  %_91 = sub i64 0, %5066
  %gen92 = add i64 %_91, 1
  %_93 = shl i64 %5066, 1
  %_94 = shl i64 %5066, 1
  %_95 = sub i64 0, %5066
  %gen96 = add i64 %_95, 1
  %_97 = sub i64 0, %5066
  %gen98 = add i64 %_97, 1
  %_99 = sub i64 %5066, 1
  %gen100 = mul i64 %_99, 1
  %5067 = add i64 %5066, 1, !dbg !4049
  store i64 %5067, i64* %29, align 8, !dbg !4049
  br label %originalBB89

originalBB104alteredBB:                           ; preds = %originalBB104, %502
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.122, i64 0, i64 0), i8** %31, align 8, !dbg !4050
  store i64 1, i64* %32, align 8, !dbg !4051
  br label %originalBB104

originalBB108alteredBB:                           ; preds = %originalBB108, %519
  store i8 0, i8* %35, align 1, !dbg !4053
  br label %originalBB108

originalBB112alteredBB:                           ; preds = %originalBB112, %538
  %5068 = load i64, i64* %22, align 8, !dbg !4059
  %5069 = icmp eq i64 %5068, -1, !dbg !4061
  br label %originalBB112

originalBB116alteredBB:                           ; preds = %originalBB116, %557
  %5070 = load i8*, i8** %21, align 8, !dbg !4062
  %5071 = load i64, i64* %28, align 8, !dbg !4063
  %5072 = getelementptr inbounds i8, i8* %5070, i64 %5071, !dbg !4062
  %5073 = load i8, i8* %5072, align 1, !dbg !4062
  %5074 = sext i8 %5073 to i32, !dbg !4062
  %5075 = icmp eq i32 %5074, 0, !dbg !4064
  %5076 = zext i1 %5075 to i32, !dbg !4064
  br label %originalBB116

originalBB120alteredBB:                           ; preds = %originalBB120, %586
  %5077 = icmp ne i32 %587, 0, !dbg !4068
  %_121 = sub i1 %5077, true
  %gen122 = mul i1 %_121, true
  %_123 = sub i1 %5077, true
  %gen124 = mul i1 %_123, true
  %5078 = xor i1 %5077, true, !dbg !4068
  br label %originalBB120

originalBB128alteredBB:                           ; preds = %originalBB128, %606
  store i8 0, i8* %41, align 1, !dbg !4076
  call void @llvm.dbg.declare(metadata !4, metadata !4851, metadata !DIExpression()), !dbg !4078
  store i8 0, i8* %42, align 1, !dbg !4078
  call void @llvm.dbg.declare(metadata !4, metadata !4886, metadata !DIExpression()), !dbg !4080
  store i8 0, i8* %43, align 1, !dbg !4080
  %5079 = load i8, i8* %33, align 1, !dbg !4081
  %5080 = trunc i8 %5079 to i1, !dbg !4081
  br label %originalBB128

originalBB132alteredBB:                           ; preds = %originalBB132, %625
  %5081 = load i32, i32* %23, align 4, !dbg !4084
  %5082 = icmp ne i32 %5081, 2, !dbg !4085
  br label %originalBB132

originalBB136alteredBB:                           ; preds = %originalBB136, %644
  %5083 = load i64, i64* %32, align 8, !dbg !4087
  %5084 = icmp ne i64 %5083, 0, !dbg !4087
  br label %originalBB136

originalBB140alteredBB:                           ; preds = %originalBB140, %663
  %5085 = load i64, i64* %28, align 8, !dbg !4089
  %5086 = load i64, i64* %32, align 8, !dbg !4090
  %_141 = shl i64 %5085, %5086
  %_142 = sub i64 %5085, %5086
  %gen143 = mul i64 %_142, %5086
  %_144 = sub i64 %5085, %5086
  %gen145 = mul i64 %_144, %5086
  %_146 = shl i64 %5085, %5086
  %_147 = sub i64 %5085, %5086
  %gen148 = mul i64 %_147, %5086
  %_149 = shl i64 %5085, %5086
  %5087 = add i64 %5085, %5086, !dbg !4091
  %5088 = load i64, i64* %22, align 8, !dbg !4092
  %5089 = icmp eq i64 %5088, -1, !dbg !4093
  br label %originalBB140

originalBB153alteredBB:                           ; preds = %originalBB153, %685
  %5090 = load i64, i64* %32, align 8, !dbg !4095
  %5091 = icmp ult i64 1, %5090, !dbg !4096
  br label %originalBB153

originalBB157alteredBB:                           ; preds = %originalBB157, %704
  %5092 = load i8*, i8** %21, align 8, !dbg !4097
  %5093 = call i64 @strlen(i8* %5092) #13, !dbg !4098
  store i64 %5093, i64* %22, align 8, !dbg !4099
  br label %originalBB157

originalBB161alteredBB:                           ; preds = %originalBB161, %723
  %5094 = load i64, i64* %22, align 8, !dbg !4100
  br label %originalBB161

originalBB165alteredBB:                           ; preds = %originalBB165, %741
  %5095 = icmp ule i64 %674, %742, !dbg !4101
  br label %originalBB165

originalBB169alteredBB:                           ; preds = %originalBB169, %760
  %5096 = load i8*, i8** %21, align 8, !dbg !4103
  %5097 = load i64, i64* %28, align 8, !dbg !4104
  %5098 = getelementptr inbounds i8, i8* %5096, i64 %5097, !dbg !4105
  %5099 = load i8*, i8** %31, align 8, !dbg !4106
  %5100 = load i64, i64* %32, align 8, !dbg !4107
  %5101 = call i32 @memcmp(i8* %5098, i8* %5099, i64 %5100) #13, !dbg !4108
  %5102 = icmp eq i32 %5101, 0, !dbg !4109
  br label %originalBB169

originalBB173alteredBB:                           ; preds = %originalBB173, %784
  %5103 = load i8, i8* %35, align 1, !dbg !4111
  %5104 = trunc i8 %5103 to i1, !dbg !4111
  br label %originalBB173

originalBB177alteredBB:                           ; preds = %originalBB177, %803
  br label %originalBB177

originalBB181alteredBB:                           ; preds = %originalBB181, %821
  %5105 = load i8*, i8** %21, align 8, !dbg !4118
  %5106 = load i64, i64* %28, align 8, !dbg !4119
  %5107 = getelementptr inbounds i8, i8* %5105, i64 %5106, !dbg !4118
  %5108 = load i8, i8* %5107, align 1, !dbg !4118
  store i8 %5108, i8* %39, align 1, !dbg !4120
  %5109 = load i8, i8* %39, align 1, !dbg !4121
  %5110 = zext i8 %5109 to i32, !dbg !4121
  br label %originalBB181

originalBB185alteredBB:                           ; preds = %originalBB185, %844
  %5111 = load i8, i8* %33, align 1, !dbg !4123
  %5112 = trunc i8 %5111 to i1, !dbg !4123
  br label %originalBB185

originalBB189alteredBB:                           ; preds = %originalBB189, %863
  br label %originalBB189

originalBB193alteredBB:                           ; preds = %originalBB193, %880
  %5113 = load i8, i8* %35, align 1, !dbg !4129
  %5114 = trunc i8 %5113 to i1, !dbg !4129
  br label %originalBB193

originalBB197alteredBB:                           ; preds = %originalBB197, %899
  br label %originalBB197

originalBB201alteredBB:                           ; preds = %originalBB201, %922
  br label %originalBB201

originalBB205alteredBB:                           ; preds = %originalBB205, %939
  %5115 = load i64, i64* %29, align 8, !dbg !4137
  %5116 = load i64, i64* %20, align 8, !dbg !4137
  %5117 = icmp ult i64 %5115, %5116, !dbg !4137
  br label %originalBB205

originalBB209alteredBB:                           ; preds = %originalBB209, %959
  %5118 = load i8*, i8** %19, align 8, !dbg !4137
  %5119 = load i64, i64* %29, align 8, !dbg !4137
  %5120 = getelementptr inbounds i8, i8* %5118, i64 %5119, !dbg !4137
  store i8 39, i8* %5120, align 1, !dbg !4137
  br label %originalBB209

originalBB213alteredBB:                           ; preds = %originalBB213, %979
  %5121 = load i64, i64* %29, align 8, !dbg !4140
  %_214 = sub i64 %5121, 1
  %gen215 = mul i64 %_214, 1
  %_216 = sub i64 %5121, 1
  %gen217 = mul i64 %_216, 1
  %5122 = add i64 %5121, 1, !dbg !4140
  store i64 %5122, i64* %29, align 8, !dbg !4140
  br label %originalBB213

originalBB221alteredBB:                           ; preds = %originalBB221, %998
  br label %originalBB221

originalBB225alteredBB:                           ; preds = %originalBB225, %1015
  %5123 = load i64, i64* %29, align 8, !dbg !4141
  %5124 = load i64, i64* %20, align 8, !dbg !4141
  %5125 = icmp ult i64 %5123, %5124, !dbg !4141
  br label %originalBB225

originalBB229alteredBB:                           ; preds = %originalBB229, %1035
  %5126 = load i8*, i8** %19, align 8, !dbg !4141
  %5127 = load i64, i64* %29, align 8, !dbg !4141
  %5128 = getelementptr inbounds i8, i8* %5126, i64 %5127, !dbg !4141
  store i8 36, i8* %5128, align 1, !dbg !4141
  br label %originalBB229

originalBB233alteredBB:                           ; preds = %originalBB233, %1055
  %5129 = load i64, i64* %29, align 8, !dbg !4144
  %_234 = shl i64 %5129, 1
  %_235 = sub i64 0, %5129
  %gen236 = add i64 %_235, 1
  %_237 = shl i64 %5129, 1
  %_238 = sub i64 0, %5129
  %gen239 = add i64 %_238, 1
  %_240 = sub i64 0, %5129
  %gen241 = add i64 %_240, 1
  %5130 = add i64 %5129, 1, !dbg !4144
  store i64 %5130, i64* %29, align 8, !dbg !4144
  br label %originalBB233

originalBB245alteredBB:                           ; preds = %originalBB245, %1075
  %5131 = load i64, i64* %29, align 8, !dbg !4145
  %5132 = load i64, i64* %20, align 8, !dbg !4145
  %5133 = icmp ult i64 %5131, %5132, !dbg !4145
  br label %originalBB245

originalBB249alteredBB:                           ; preds = %originalBB249, %1102
  store i8 1, i8* %36, align 1, !dbg !4135
  br label %originalBB249

originalBB253alteredBB:                           ; preds = %originalBB253, %1131
  br label %originalBB253

originalBB257alteredBB:                           ; preds = %originalBB257, %1148
  %5134 = load i32, i32* %23, align 4, !dbg !4153
  %5135 = icmp ne i32 %5134, 2, !dbg !4155
  br label %originalBB257

originalBB261alteredBB:                           ; preds = %originalBB261, %1172
  %5136 = load i8*, i8** %21, align 8, !dbg !4162
  %5137 = load i64, i64* %28, align 8, !dbg !4163
  %_262 = shl i64 %5137, 1
  %_263 = sub i64 0, %5137
  %gen264 = add i64 %_263, 1
  %_265 = shl i64 %5137, 1
  %_266 = sub i64 %5137, 1
  %gen267 = mul i64 %_266, 1
  %5138 = add i64 %5137, 1, !dbg !4164
  %5139 = getelementptr inbounds i8, i8* %5136, i64 %5138, !dbg !4162
  %5140 = load i8, i8* %5139, align 1, !dbg !4162
  %5141 = sext i8 %5140 to i32, !dbg !4162
  %5142 = icmp sle i32 48, %5141, !dbg !4165
  br label %originalBB261

originalBB272alteredBB:                           ; preds = %originalBB272, %1196
  %5143 = load i8*, i8** %21, align 8, !dbg !4167
  %5144 = load i64, i64* %28, align 8, !dbg !4168
  %_273 = sub i64 %5144, 1
  %gen274 = mul i64 %_273, 1
  %5145 = add i64 %5144, 1, !dbg !4169
  %5146 = getelementptr inbounds i8, i8* %5143, i64 %5145, !dbg !4167
  %5147 = load i8, i8* %5146, align 1, !dbg !4167
  %5148 = sext i8 %5147 to i32, !dbg !4167
  %5149 = icmp sle i32 %5148, 57, !dbg !4170
  br label %originalBB272

originalBB278alteredBB:                           ; preds = %originalBB278, %1220
  br label %originalBB278

originalBB282alteredBB:                           ; preds = %originalBB282, %1241
  %5150 = load i8*, i8** %19, align 8, !dbg !4174
  %5151 = load i64, i64* %29, align 8, !dbg !4174
  %5152 = getelementptr inbounds i8, i8* %5150, i64 %5151, !dbg !4174
  store i8 48, i8* %5152, align 1, !dbg !4174
  br label %originalBB282

originalBB286alteredBB:                           ; preds = %originalBB286, %1261
  %5153 = load i64, i64* %29, align 8, !dbg !4177
  %_287 = sub i64 %5153, 1
  %gen288 = mul i64 %_287, 1
  %5154 = add i64 %5153, 1, !dbg !4177
  store i64 %5154, i64* %29, align 8, !dbg !4177
  br label %originalBB286

originalBB292alteredBB:                           ; preds = %originalBB292, %1281
  %5155 = load i64, i64* %29, align 8, !dbg !4179
  %5156 = load i64, i64* %20, align 8, !dbg !4179
  %5157 = icmp ult i64 %5155, %5156, !dbg !4179
  br label %originalBB292

originalBB296alteredBB:                           ; preds = %originalBB296, %1305
  %5158 = load i64, i64* %29, align 8, !dbg !4182
  %_297 = shl i64 %5158, 1
  %5159 = add i64 %5158, 1, !dbg !4182
  store i64 %5159, i64* %29, align 8, !dbg !4182
  br label %originalBB296

originalBB301alteredBB:                           ; preds = %originalBB301, %1325
  store i8 48, i8* %39, align 1, !dbg !4184
  br label %originalBB301

originalBB305alteredBB:                           ; preds = %originalBB305, %1342
  %5160 = load i32, i32* %24, align 4, !dbg !4186
  %_306 = sub i32 %5160, 1
  %gen307 = mul i32 %_306, 1
  %_308 = sub i32 %5160, 1
  %gen309 = mul i32 %_308, 1
  %_310 = sub i32 %5160, 1
  %gen311 = mul i32 %_310, 1
  %_312 = sub i32 0, %5160
  %gen313 = add i32 %_312, 1
  %_314 = sub i32 0, %5160
  %gen315 = add i32 %_314, 1
  %_316 = sub i32 0, %5160
  %gen317 = add i32 %_316, 1
  %_318 = shl i32 %5160, 1
  %5161 = and i32 %5160, 1, !dbg !4188
  %5162 = icmp ne i32 %5161, 0, !dbg !4188
  br label %originalBB305

originalBB322alteredBB:                           ; preds = %originalBB322, %1367
  %5163 = load i8, i8* %35, align 1, !dbg !4194
  %5164 = trunc i8 %5163 to i1, !dbg !4194
  br label %originalBB322

originalBB326alteredBB:                           ; preds = %originalBB326, %1387
  br label %originalBB326

originalBB330alteredBB:                           ; preds = %originalBB330, %1408
  %5165 = load i64, i64* %28, align 8, !dbg !4204
  %_331 = shl i64 %5165, 2
  %_332 = sub i64 %5165, 2
  %gen333 = mul i64 %_332, 2
  %_334 = shl i64 %5165, 2
  %_335 = shl i64 %5165, 2
  %5166 = add i64 %5165, 2, !dbg !4205
  %5167 = load i64, i64* %22, align 8, !dbg !4206
  %5168 = icmp ult i64 %5166, %5167, !dbg !4207
  br label %originalBB330

originalBB339alteredBB:                           ; preds = %originalBB339, %1429
  %5169 = load i8*, i8** %21, align 8, !dbg !4209
  %5170 = load i64, i64* %28, align 8, !dbg !4210
  %_340 = sub i64 %5170, 1
  %gen341 = mul i64 %_340, 1
  %_342 = sub i64 %5170, 1
  %gen343 = mul i64 %_342, 1
  %_344 = sub i64 %5170, 1
  %gen345 = mul i64 %_344, 1
  %_346 = sub i64 0, %5170
  %gen347 = add i64 %_346, 1
  %5171 = add i64 %5170, 1, !dbg !4211
  %5172 = getelementptr inbounds i8, i8* %5169, i64 %5171, !dbg !4209
  %5173 = load i8, i8* %5172, align 1, !dbg !4209
  %5174 = sext i8 %5173 to i32, !dbg !4209
  %5175 = icmp eq i32 %5174, 63, !dbg !4212
  br label %originalBB339

originalBB351alteredBB:                           ; preds = %originalBB351, %1460
  %5176 = load i8, i8* %35, align 1, !dbg !4218
  %5177 = trunc i8 %5176 to i1, !dbg !4218
  br label %originalBB351

originalBB355alteredBB:                           ; preds = %originalBB355, %1479
  br label %originalBB355

originalBB359alteredBB:                           ; preds = %originalBB359, %1504
  %5178 = load i64, i64* %29, align 8, !dbg !4229
  %5179 = load i64, i64* %20, align 8, !dbg !4229
  %5180 = icmp ult i64 %5178, %5179, !dbg !4229
  br label %originalBB359

originalBB363alteredBB:                           ; preds = %originalBB363, %1524
  %5181 = load i8*, i8** %19, align 8, !dbg !4229
  %5182 = load i64, i64* %29, align 8, !dbg !4229
  %5183 = getelementptr inbounds i8, i8* %5181, i64 %5182, !dbg !4229
  store i8 63, i8* %5183, align 1, !dbg !4229
  br label %originalBB363

originalBB367alteredBB:                           ; preds = %originalBB367, %1544
  %5184 = load i64, i64* %29, align 8, !dbg !4232
  %_368 = sub i64 %5184, 1
  %gen369 = mul i64 %_368, 1
  %_370 = sub i64 0, %5184
  %gen371 = add i64 %_370, 1
  %_372 = sub i64 %5184, 1
  %gen373 = mul i64 %_372, 1
  %5185 = add i64 %5184, 1, !dbg !4232
  store i64 %5185, i64* %29, align 8, !dbg !4232
  br label %originalBB367

originalBB377alteredBB:                           ; preds = %originalBB377, %1563
  br label %originalBB377

originalBB381alteredBB:                           ; preds = %originalBB381, %1580
  %5186 = load i64, i64* %29, align 8, !dbg !4234
  %5187 = load i64, i64* %20, align 8, !dbg !4234
  %5188 = icmp ult i64 %5186, %5187, !dbg !4234
  br label %originalBB381

originalBB385alteredBB:                           ; preds = %originalBB385, %1604
  %5189 = load i64, i64* %29, align 8, !dbg !4237
  %_386 = shl i64 %5189, 1
  %5190 = add i64 %5189, 1, !dbg !4237
  store i64 %5190, i64* %29, align 8, !dbg !4237
  br label %originalBB385

originalBB390alteredBB:                           ; preds = %originalBB390, %1628
  %5191 = load i8*, i8** %19, align 8, !dbg !4239
  %5192 = load i64, i64* %29, align 8, !dbg !4239
  %5193 = getelementptr inbounds i8, i8* %5191, i64 %5192, !dbg !4239
  store i8 34, i8* %5193, align 1, !dbg !4239
  br label %originalBB390

originalBB394alteredBB:                           ; preds = %originalBB394, %1648
  %5194 = load i64, i64* %29, align 8, !dbg !4242
  %_395 = shl i64 %5194, 1
  %_396 = sub i64 0, %5194
  %gen397 = add i64 %_396, 1
  %_398 = sub i64 %5194, 1
  %gen399 = mul i64 %_398, 1
  %5195 = add i64 %5194, 1, !dbg !4242
  store i64 %5195, i64* %29, align 8, !dbg !4242
  br label %originalBB394

originalBB403alteredBB:                           ; preds = %originalBB403, %1667
  br label %originalBB403

originalBB407alteredBB:                           ; preds = %originalBB407, %1688
  %5196 = load i8*, i8** %19, align 8, !dbg !4244
  %5197 = load i64, i64* %29, align 8, !dbg !4244
  %5198 = getelementptr inbounds i8, i8* %5196, i64 %5197, !dbg !4244
  store i8 63, i8* %5198, align 1, !dbg !4244
  br label %originalBB407

originalBB411alteredBB:                           ; preds = %originalBB411, %1708
  %5199 = load i64, i64* %29, align 8, !dbg !4247
  %_412 = shl i64 %5199, 1
  %_413 = shl i64 %5199, 1
  %_414 = sub i64 0, %5199
  %gen415 = add i64 %_414, 1
  %_416 = shl i64 %5199, 1
  %_417 = sub i64 %5199, 1
  %gen418 = mul i64 %_417, 1
  %_419 = sub i64 %5199, 1
  %gen420 = mul i64 %_419, 1
  %5200 = add i64 %5199, 1, !dbg !4247
  store i64 %5200, i64* %29, align 8, !dbg !4247
  br label %originalBB411

originalBB424alteredBB:                           ; preds = %originalBB424, %1727
  br label %originalBB424

originalBB428alteredBB:                           ; preds = %originalBB428, %1744
  br label %originalBB428

originalBB432alteredBB:                           ; preds = %originalBB432, %1763
  br label %originalBB432

originalBB436alteredBB:                           ; preds = %originalBB436, %1780
  br label %originalBB436

originalBB440alteredBB:                           ; preds = %originalBB440, %1797
  store i8 97, i8* %40, align 1, !dbg !4254
  br label %originalBB440

originalBB444alteredBB:                           ; preds = %originalBB444, %1815
  store i8 102, i8* %40, align 1, !dbg !4258
  br label %originalBB444

originalBB448alteredBB:                           ; preds = %originalBB448, %1833
  store i8 114, i8* %40, align 1, !dbg !4262
  br label %originalBB448

originalBB452alteredBB:                           ; preds = %originalBB452, %1850
  store i8 116, i8* %40, align 1, !dbg !4264
  br label %originalBB452

originalBB456alteredBB:                           ; preds = %originalBB456, %1877
  %5201 = load i8, i8* %33, align 1, !dbg !4280
  %5202 = trunc i8 %5201 to i1, !dbg !4280
  br label %originalBB456

originalBB460alteredBB:                           ; preds = %originalBB460, %1904
  %5203 = load i32, i32* %23, align 4, !dbg !4290
  %5204 = icmp eq i32 %5203, 2, !dbg !4292
  br label %originalBB460

originalBB464alteredBB:                           ; preds = %originalBB464, %1926
  br label %originalBB464

originalBB468alteredBB:                           ; preds = %originalBB468, %1943
  br label %originalBB468

originalBB472alteredBB:                           ; preds = %originalBB472, %1960
  %5205 = load i8, i8* %33, align 1, !dbg !4299
  %5206 = trunc i8 %5205 to i1, !dbg !4299
  br label %originalBB472

originalBB476alteredBB:                           ; preds = %originalBB476, %1982
  %5207 = load i64, i64* %22, align 8, !dbg !4307
  %5208 = icmp eq i64 %5207, -1, !dbg !4309
  br label %originalBB476

originalBB480alteredBB:                           ; preds = %originalBB480, %2001
  %5209 = load i8*, i8** %21, align 8, !dbg !4311
  %5210 = getelementptr inbounds i8, i8* %5209, i64 1, !dbg !4311
  %5211 = load i8, i8* %5210, align 1, !dbg !4311
  %5212 = sext i8 %5211 to i32, !dbg !4311
  %5213 = icmp eq i32 %5212, 0, !dbg !4312
  br label %originalBB480

originalBB484alteredBB:                           ; preds = %originalBB484, %2023
  %5214 = load i64, i64* %22, align 8, !dbg !4313
  %5215 = icmp eq i64 %5214, 1, !dbg !4314
  br label %originalBB484

originalBB488alteredBB:                           ; preds = %originalBB488, %2043
  br label %originalBB488

originalBB492alteredBB:                           ; preds = %originalBB492, %2060
  %5216 = load i64, i64* %28, align 8, !dbg !4317
  %5217 = icmp ne i64 %5216, 0, !dbg !4319
  br label %originalBB492

originalBB496alteredBB:                           ; preds = %originalBB496, %2079
  br label %originalBB496

originalBB500alteredBB:                           ; preds = %originalBB500, %2096
  br label %originalBB500

originalBB504alteredBB:                           ; preds = %originalBB504, %2113
  store i8 1, i8* %43, align 1, !dbg !4323
  br label %originalBB504

originalBB508alteredBB:                           ; preds = %originalBB508, %2130
  %5218 = load i32, i32* %23, align 4, !dbg !4325
  %5219 = icmp eq i32 %5218, 2, !dbg !4327
  br label %originalBB508

originalBB512alteredBB:                           ; preds = %originalBB512, %2149
  %5220 = load i8, i8* %35, align 1, !dbg !4329
  %5221 = trunc i8 %5220 to i1, !dbg !4329
  br label %originalBB512

originalBB516alteredBB:                           ; preds = %originalBB516, %2170
  store i8 1, i8* %37, align 1, !dbg !4333
  store i8 1, i8* %43, align 1, !dbg !4334
  %5222 = load i32, i32* %23, align 4, !dbg !4335
  %5223 = icmp eq i32 %5222, 2, !dbg !4337
  br label %originalBB516

originalBB520alteredBB:                           ; preds = %originalBB520, %2189
  %5224 = load i8, i8* %35, align 1, !dbg !4339
  %5225 = trunc i8 %5224 to i1, !dbg !4339
  br label %originalBB520

originalBB524alteredBB:                           ; preds = %originalBB524, %2212
  %5226 = load i64, i64* %30, align 8, !dbg !4347
  %5227 = icmp ne i64 %5226, 0, !dbg !4347
  br label %originalBB524

originalBB528alteredBB:                           ; preds = %originalBB528, %2231
  %5228 = load i64, i64* %20, align 8, !dbg !4349
  store i64 %5228, i64* %30, align 8, !dbg !4351
  store i64 0, i64* %20, align 8, !dbg !4352
  br label %originalBB528

originalBB532alteredBB:                           ; preds = %originalBB532, %2250
  %5229 = load i64, i64* %29, align 8, !dbg !4355
  %5230 = load i64, i64* %20, align 8, !dbg !4355
  %5231 = icmp ult i64 %5229, %5230, !dbg !4355
  br label %originalBB532

originalBB536alteredBB:                           ; preds = %originalBB536, %2274
  %5232 = load i64, i64* %29, align 8, !dbg !4358
  %_537 = shl i64 %5232, 1
  %_538 = sub i64 0, %5232
  %gen539 = add i64 %_538, 1
  %5233 = add i64 %5232, 1, !dbg !4358
  store i64 %5233, i64* %29, align 8, !dbg !4358
  br label %originalBB536

originalBB543alteredBB:                           ; preds = %originalBB543, %2293
  br label %originalBB543

originalBB547alteredBB:                           ; preds = %originalBB547, %2310
  %5234 = load i64, i64* %29, align 8, !dbg !4360
  %5235 = load i64, i64* %20, align 8, !dbg !4360
  %5236 = icmp ult i64 %5234, %5235, !dbg !4360
  br label %originalBB547

originalBB551alteredBB:                           ; preds = %originalBB551, %2334
  %5237 = load i64, i64* %29, align 8, !dbg !4363
  %_552 = sub i64 %5237, 1
  %gen553 = mul i64 %_552, 1
  %_554 = sub i64 %5237, 1
  %gen555 = mul i64 %_554, 1
  %_556 = sub i64 0, %5237
  %gen557 = add i64 %_556, 1
  %_558 = shl i64 %5237, 1
  %5238 = add i64 %5237, 1, !dbg !4363
  store i64 %5238, i64* %29, align 8, !dbg !4363
  br label %originalBB551

originalBB562alteredBB:                           ; preds = %originalBB562, %2353
  br label %originalBB562

originalBB566alteredBB:                           ; preds = %originalBB566, %2374
  %5239 = load i8*, i8** %19, align 8, !dbg !4365
  %5240 = load i64, i64* %29, align 8, !dbg !4365
  %5241 = getelementptr inbounds i8, i8* %5239, i64 %5240, !dbg !4365
  store i8 39, i8* %5241, align 1, !dbg !4365
  br label %originalBB566

originalBB570alteredBB:                           ; preds = %originalBB570, %2394
  %5242 = load i64, i64* %29, align 8, !dbg !4368
  %5243 = add i64 %5242, 1, !dbg !4368
  store i64 %5243, i64* %29, align 8, !dbg !4368
  br label %originalBB570

originalBB574alteredBB:                           ; preds = %originalBB574, %2413
  store i8 0, i8* %36, align 1, !dbg !4369
  br label %originalBB574

originalBB578alteredBB:                           ; preds = %originalBB578, %2435
  store i64 1, i64* %44, align 8, !dbg !4382
  %5244 = call i16** @__ctype_b_loc() #15, !dbg !4384
  %5245 = load i16*, i16** %5244, align 8, !dbg !4384
  %5246 = load i8, i8* %39, align 1, !dbg !4384
  %5247 = zext i8 %5246 to i32, !dbg !4384
  %5248 = sext i32 %5247 to i64, !dbg !4384
  %5249 = getelementptr inbounds i16, i16* %5245, i64 %5248, !dbg !4384
  %5250 = load i16, i16* %5249, align 2, !dbg !4384
  %5251 = zext i16 %5250 to i32, !dbg !4384
  %_579 = shl i32 %5251, 16384
  %_580 = sub i32 %5251, 16384
  %gen581 = mul i32 %_580, 16384
  %_582 = sub i32 %5251, 16384
  %gen583 = mul i32 %_582, 16384
  %5252 = and i32 %5251, 16384, !dbg !4384
  %5253 = icmp ne i32 %5252, 0, !dbg !4385
  %5254 = zext i1 %5253 to i8, !dbg !4386
  store i8 %5254, i8* %45, align 1, !dbg !4386
  br label %originalBB578

originalBB587alteredBB:                           ; preds = %originalBB587, %2463
  %5255 = bitcast %struct.__mbstate_t* %46 to i8*, !dbg !4403
  call void @llvm.memset.p0i8.i64(i8* align 4 %5255, i8 0, i64 8, i1 false), !dbg !4403
  store i64 0, i64* %44, align 8, !dbg !4404
  store i8 1, i8* %45, align 1, !dbg !4405
  %5256 = load i64, i64* %22, align 8, !dbg !4406
  %5257 = icmp eq i64 %5256, -1, !dbg !4408
  br label %originalBB587

originalBB591alteredBB:                           ; preds = %originalBB591, %2483
  %5258 = load i8*, i8** %21, align 8, !dbg !4410
  %5259 = call i64 @strlen(i8* %5258) #13, !dbg !4411
  store i64 %5259, i64* %22, align 8, !dbg !4412
  br label %originalBB591

originalBB595alteredBB:                           ; preds = %originalBB595, %2502
  br label %originalBB595

originalBB599alteredBB:                           ; preds = %originalBB599, %2519
  %5260 = load i8*, i8** %21, align 8, !dbg !4421
  %5261 = load i64, i64* %28, align 8, !dbg !4422
  %5262 = load i64, i64* %44, align 8, !dbg !4423
  %_600 = sub i64 %5261, %5262
  %gen601 = mul i64 %_600, %5262
  %_602 = shl i64 %5261, %5262
  %_603 = sub i64 %5261, %5262
  %gen604 = mul i64 %_603, %5262
  %5263 = add i64 %5261, %5262, !dbg !4424
  %5264 = getelementptr inbounds i8, i8* %5260, i64 %5263, !dbg !4421
  %5265 = load i64, i64* %22, align 8, !dbg !4425
  %5266 = load i64, i64* %28, align 8, !dbg !4426
  %5267 = load i64, i64* %44, align 8, !dbg !4427
  %_605 = shl i64 %5266, %5267
  %_606 = sub i64 %5266, %5267
  %gen607 = mul i64 %_606, %5267
  %5268 = add i64 %5266, %5267, !dbg !4428
  %_608 = shl i64 %5265, %5268
  %_609 = sub i64 0, %5265
  %gen610 = add i64 %_609, %5268
  %_611 = shl i64 %5265, %5268
  %5269 = sub i64 %5265, %5268, !dbg !4429
  %5270 = call i64 @rpl_mbrtowc(i32* %47, i8* %5264, i64 %5269, %struct.__mbstate_t* %46), !dbg !4430
  store i64 %5270, i64* %48, align 8, !dbg !4420
  %5271 = load i64, i64* %48, align 8, !dbg !4431
  %5272 = icmp eq i64 %5271, 0, !dbg !4433
  br label %originalBB599

originalBB615alteredBB:                           ; preds = %originalBB615, %2549
  br label %originalBB615

originalBB619alteredBB:                           ; preds = %originalBB619, %2566
  %5273 = load i64, i64* %48, align 8, !dbg !4436
  %5274 = icmp eq i64 %5273, -1, !dbg !4438
  br label %originalBB619

originalBB623alteredBB:                           ; preds = %originalBB623, %2585
  store i8 0, i8* %45, align 1, !dbg !4440
  br label %originalBB623

originalBB627alteredBB:                           ; preds = %originalBB627, %2602
  %5275 = load i64, i64* %48, align 8, !dbg !4443
  %5276 = icmp eq i64 %5275, -2, !dbg !4445
  br label %originalBB627

originalBB631alteredBB:                           ; preds = %originalBB631, %2621
  store i8 0, i8* %45, align 1, !dbg !4447
  br label %originalBB631

originalBB635alteredBB:                           ; preds = %originalBB635, %2638
  %5277 = load i64, i64* %28, align 8, !dbg !4450
  %5278 = load i64, i64* %44, align 8, !dbg !4451
  %_636 = sub i64 %5277, %5278
  %gen637 = mul i64 %_636, %5278
  %_638 = sub i64 %5277, %5278
  %gen639 = mul i64 %_638, %5278
  %_640 = sub i64 0, %5277
  %gen641 = add i64 %_640, %5278
  %_642 = shl i64 %5277, %5278
  %_643 = shl i64 %5277, %5278
  %5279 = add i64 %5277, %5278, !dbg !4452
  %5280 = load i64, i64* %22, align 8, !dbg !4453
  %5281 = icmp ult i64 %5279, %5280, !dbg !4454
  br label %originalBB635

originalBB647alteredBB:                           ; preds = %originalBB647, %2669
  br label %originalBB647

originalBB651alteredBB:                           ; preds = %originalBB651, %2687
  %5282 = load i64, i64* %44, align 8, !dbg !4461
  %_652 = sub i64 %5282, 1
  %gen653 = mul i64 %_652, 1
  %_654 = sub i64 0, %5282
  %gen655 = add i64 %_654, 1
  %_656 = shl i64 %5282, 1
  %_657 = sub i64 %5282, 1
  %gen658 = mul i64 %_657, 1
  %_659 = sub i64 0, %5282
  %gen660 = add i64 %_659, 1
  %_661 = shl i64 %5282, 1
  %5283 = add i64 %5282, 1, !dbg !4461
  store i64 %5283, i64* %44, align 8, !dbg !4461
  br label %originalBB651

originalBB665alteredBB:                           ; preds = %originalBB665, %2706
  br label %originalBB665

originalBB669alteredBB:                           ; preds = %originalBB669, %2726
  %5284 = load i32, i32* %23, align 4, !dbg !4468
  %5285 = icmp eq i32 %5284, 2, !dbg !4469
  br label %originalBB669

originalBB673alteredBB:                           ; preds = %originalBB673, %2746
  %5286 = load i64, i64* %49, align 8, !dbg !4477
  %5287 = load i64, i64* %48, align 8, !dbg !4479
  %5288 = icmp ult i64 %5286, %5287, !dbg !4480
  br label %originalBB673

originalBB677alteredBB:                           ; preds = %originalBB677, %2766
  %5289 = load i8*, i8** %21, align 8, !dbg !4482
  %5290 = load i64, i64* %28, align 8, !dbg !4483
  %5291 = load i64, i64* %44, align 8, !dbg !4484
  %_678 = sub i64 0, %5290
  %gen679 = add i64 %_678, %5291
  %_680 = shl i64 %5290, %5291
  %_681 = shl i64 %5290, %5291
  %5292 = add i64 %5290, %5291, !dbg !4485
  %5293 = load i64, i64* %49, align 8, !dbg !4486
  %_682 = sub i64 0, %5292
  %gen683 = add i64 %_682, %5293
  %_684 = sub i64 %5292, %5293
  %gen685 = mul i64 %_684, %5293
  %_686 = sub i64 %5292, %5293
  %gen687 = mul i64 %_686, %5293
  %5294 = add i64 %5292, %5293, !dbg !4487
  %5295 = getelementptr inbounds i8, i8* %5289, i64 %5294, !dbg !4482
  %5296 = load i8, i8* %5295, align 1, !dbg !4482
  %5297 = sext i8 %5296 to i32, !dbg !4482
  br label %originalBB677

originalBB691alteredBB:                           ; preds = %originalBB691, %2792
  br label %originalBB691

originalBB695alteredBB:                           ; preds = %originalBB695, %2809
  br label %originalBB695

originalBB699alteredBB:                           ; preds = %originalBB699, %2826
  br label %originalBB699

originalBB703alteredBB:                           ; preds = %originalBB703, %2843
  %5298 = load i64, i64* %49, align 8, !dbg !4493
  %_704 = sub i64 %5298, 1
  %gen705 = mul i64 %_704, 1
  %_706 = shl i64 %5298, 1
  %_707 = shl i64 %5298, 1
  %_708 = shl i64 %5298, 1
  %5299 = add i64 %5298, 1, !dbg !4493
  store i64 %5299, i64* %49, align 8, !dbg !4493
  br label %originalBB703

originalBB712alteredBB:                           ; preds = %originalBB712, %2862
  br label %originalBB712

originalBB716alteredBB:                           ; preds = %originalBB716, %2883
  store i8 0, i8* %45, align 1, !dbg !4502
  br label %originalBB716

originalBB720alteredBB:                           ; preds = %originalBB720, %2900
  %5300 = load i64, i64* %48, align 8, !dbg !4504
  %5301 = load i64, i64* %44, align 8, !dbg !4505
  %_721 = shl i64 %5301, %5300
  %5302 = add i64 %5301, %5300, !dbg !4505
  store i64 %5302, i64* %44, align 8, !dbg !4505
  br label %originalBB720

originalBB725alteredBB:                           ; preds = %originalBB725, %2922
  br label %originalBB725

originalBB729alteredBB:                           ; preds = %originalBB729, %2939
  %5303 = call i32 @mbsinit(%struct.__mbstate_t* %46) #13, !dbg !4507
  %5304 = icmp ne i32 %5303, 0, !dbg !4508
  %_730 = sub i1 false, %5304
  %gen731 = add i1 %_730, true
  %_732 = sub i1 false, %5304
  %gen733 = add i1 %_732, true
  %_734 = sub i1 false, %5304
  %gen735 = add i1 %_734, true
  %_736 = sub i1 %5304, true
  %gen737 = mul i1 %_736, true
  %_738 = sub i1 false, %5304
  %gen739 = add i1 %_738, true
  %_740 = sub i1 false, %5304
  %gen741 = add i1 %_740, true
  %_742 = shl i1 %5304, true
  %5305 = xor i1 %5304, true, !dbg !4508
  br label %originalBB729

originalBB746alteredBB:                           ; preds = %originalBB746, %2960
  %5306 = load i8, i8* %45, align 1, !dbg !4511
  %5307 = trunc i8 %5306 to i1, !dbg !4511
  %5308 = zext i1 %5307 to i8, !dbg !4512
  store i8 %5308, i8* %43, align 1, !dbg !4512
  %5309 = load i64, i64* %44, align 8, !dbg !4513
  %5310 = icmp ult i64 1, %5309, !dbg !4515
  br label %originalBB746

originalBB750alteredBB:                           ; preds = %originalBB750, %2982
  %5311 = load i8, i8* %33, align 1, !dbg !4517
  %5312 = trunc i8 %5311 to i1, !dbg !4517
  br label %originalBB750

originalBB754alteredBB:                           ; preds = %originalBB754, %3001
  %5313 = load i8, i8* %45, align 1, !dbg !4519
  %5314 = trunc i8 %5313 to i1, !dbg !4519
  br label %originalBB754

originalBB758alteredBB:                           ; preds = %originalBB758, %3034
  br label %originalBB758

originalBB762alteredBB:                           ; preds = %originalBB762, %3051
  store i8 1, i8* %42, align 1, !dbg !4541
  %5315 = load i32, i32* %23, align 4, !dbg !4542
  %5316 = icmp eq i32 %5315, 2, !dbg !4542
  br label %originalBB762

originalBB766alteredBB:                           ; preds = %originalBB766, %3070
  %5317 = load i8, i8* %36, align 1, !dbg !4542
  %5318 = trunc i8 %5317 to i1, !dbg !4542
  br label %originalBB766

originalBB770alteredBB:                           ; preds = %originalBB770, %3089
  br label %originalBB770

originalBB774alteredBB:                           ; preds = %originalBB774, %3110
  %5319 = load i8*, i8** %19, align 8, !dbg !4546
  %5320 = load i64, i64* %29, align 8, !dbg !4546
  %5321 = getelementptr inbounds i8, i8* %5319, i64 %5320, !dbg !4546
  store i8 39, i8* %5321, align 1, !dbg !4546
  br label %originalBB774

originalBB778alteredBB:                           ; preds = %originalBB778, %3130
  %5322 = load i64, i64* %29, align 8, !dbg !4549
  %_779 = shl i64 %5322, 1
  %_780 = sub i64 0, %5322
  %gen781 = add i64 %_780, 1
  %_782 = sub i64 0, %5322
  %gen783 = add i64 %_782, 1
  %5323 = add i64 %5322, 1, !dbg !4549
  store i64 %5323, i64* %29, align 8, !dbg !4549
  br label %originalBB778

originalBB787alteredBB:                           ; preds = %originalBB787, %3149
  br label %originalBB787

originalBB791alteredBB:                           ; preds = %originalBB791, %3166
  %5324 = load i64, i64* %29, align 8, !dbg !4550
  %5325 = load i64, i64* %20, align 8, !dbg !4550
  %5326 = icmp ult i64 %5324, %5325, !dbg !4550
  br label %originalBB791

originalBB795alteredBB:                           ; preds = %originalBB795, %3190
  %5327 = load i64, i64* %29, align 8, !dbg !4553
  %_796 = sub i64 0, %5327
  %gen797 = add i64 %_796, 1
  %_798 = sub i64 0, %5327
  %gen799 = add i64 %_798, 1
  %5328 = add i64 %5327, 1, !dbg !4553
  store i64 %5328, i64* %29, align 8, !dbg !4553
  br label %originalBB795

originalBB803alteredBB:                           ; preds = %originalBB803, %3209
  br label %originalBB803

originalBB807alteredBB:                           ; preds = %originalBB807, %3230
  %5329 = load i8*, i8** %19, align 8, !dbg !4554
  %5330 = load i64, i64* %29, align 8, !dbg !4554
  %5331 = getelementptr inbounds i8, i8* %5329, i64 %5330, !dbg !4554
  store i8 39, i8* %5331, align 1, !dbg !4554
  br label %originalBB807

originalBB811alteredBB:                           ; preds = %originalBB811, %3250
  %5332 = load i64, i64* %29, align 8, !dbg !4557
  %_812 = sub i64 0, %5332
  %gen813 = add i64 %_812, 1
  %_814 = sub i64 0, %5332
  %gen815 = add i64 %_814, 1
  %_816 = sub i64 0, %5332
  %gen817 = add i64 %_816, 1
  %_818 = sub i64 %5332, 1
  %gen819 = mul i64 %_818, 1
  %_820 = sub i64 0, %5332
  %gen821 = add i64 %_820, 1
  %5333 = add i64 %5332, 1, !dbg !4557
  store i64 %5333, i64* %29, align 8, !dbg !4557
  br label %originalBB811

originalBB825alteredBB:                           ; preds = %originalBB825, %3269
  store i8 1, i8* %36, align 1, !dbg !4544
  br label %originalBB825

originalBB829alteredBB:                           ; preds = %originalBB829, %3291
  %5334 = load i8*, i8** %19, align 8, !dbg !4558
  %5335 = load i64, i64* %29, align 8, !dbg !4558
  %5336 = getelementptr inbounds i8, i8* %5334, i64 %5335, !dbg !4558
  store i8 92, i8* %5336, align 1, !dbg !4558
  br label %originalBB829

originalBB833alteredBB:                           ; preds = %originalBB833, %3311
  %5337 = load i64, i64* %29, align 8, !dbg !4561
  %_834 = sub i64 %5337, 1
  %gen835 = mul i64 %_834, 1
  %_836 = shl i64 %5337, 1
  %_837 = shl i64 %5337, 1
  %5338 = add i64 %5337, 1, !dbg !4561
  store i64 %5338, i64* %29, align 8, !dbg !4561
  br label %originalBB833

originalBB841alteredBB:                           ; preds = %originalBB841, %3345
  %5339 = load i64, i64* %29, align 8, !dbg !4566
  %_842 = shl i64 %5339, 1
  %_843 = sub i64 %5339, 1
  %gen844 = mul i64 %_843, 1
  %_845 = shl i64 %5339, 1
  %_846 = sub i64 0, %5339
  %gen847 = add i64 %_846, 1
  %_848 = shl i64 %5339, 1
  %5340 = add i64 %5339, 1, !dbg !4566
  store i64 %5340, i64* %29, align 8, !dbg !4566
  br label %originalBB841

originalBB852alteredBB:                           ; preds = %originalBB852, %3369
  %5341 = load i8, i8* %39, align 1, !dbg !4568
  %5342 = zext i8 %5341 to i32, !dbg !4568
  %_853 = sub i32 %5342, 3
  %gen854 = mul i32 %_853, 3
  %_855 = sub i32 %5342, 3
  %gen856 = mul i32 %_855, 3
  %_857 = sub i32 %5342, 3
  %gen858 = mul i32 %_857, 3
  %_859 = sub i32 0, %5342
  %gen860 = add i32 %_859, 3
  %_861 = sub i32 0, %5342
  %gen862 = add i32 %_861, 3
  %_863 = shl i32 %5342, 3
  %5343 = ashr i32 %5342, 3, !dbg !4568
  %_864 = sub i32 0, %5343
  %gen865 = add i32 %_864, 7
  %_866 = sub i32 %5343, 7
  %gen867 = mul i32 %_866, 7
  %_868 = sub i32 0, %5343
  %gen869 = add i32 %_868, 7
  %5344 = and i32 %5343, 7, !dbg !4568
  %_870 = shl i32 48, %5344
  %_871 = sub i32 0, 48
  %gen872 = add i32 %_871, %5344
  %_873 = sub i32 0, 48
  %gen874 = add i32 %_873, %5344
  %_875 = shl i32 48, %5344
  %_876 = sub i32 48, %5344
  %gen877 = mul i32 %_876, %5344
  %5345 = add nsw i32 48, %5344, !dbg !4568
  %5346 = trunc i32 %5345 to i8, !dbg !4568
  %5347 = load i8*, i8** %19, align 8, !dbg !4568
  %5348 = load i64, i64* %29, align 8, !dbg !4568
  %5349 = getelementptr inbounds i8, i8* %5347, i64 %5348, !dbg !4568
  store i8 %5346, i8* %5349, align 1, !dbg !4568
  br label %originalBB852

originalBB881alteredBB:                           ; preds = %originalBB881, %3395
  %5350 = load i64, i64* %29, align 8, !dbg !4571
  %_882 = shl i64 %5350, 1
  %_883 = sub i64 0, %5350
  %gen884 = add i64 %_883, 1
  %_885 = sub i64 %5350, 1
  %gen886 = mul i64 %_885, 1
  %5351 = add i64 %5350, 1, !dbg !4571
  store i64 %5351, i64* %29, align 8, !dbg !4571
  br label %originalBB881

originalBB890alteredBB:                           ; preds = %originalBB890, %3414
  %5352 = load i8, i8* %39, align 1, !dbg !4572
  %5353 = zext i8 %5352 to i32, !dbg !4572
  %_891 = shl i32 %5353, 7
  %_892 = shl i32 %5353, 7
  %_893 = sub i32 %5353, 7
  %gen894 = mul i32 %_893, 7
  %_895 = sub i32 0, %5353
  %gen896 = add i32 %_895, 7
  %_897 = sub i32 %5353, 7
  %gen898 = mul i32 %_897, 7
  %5354 = and i32 %5353, 7, !dbg !4573
  %_899 = sub i32 0, 48
  %gen900 = add i32 %_899, %5354
  %_901 = sub i32 0, 48
  %gen902 = add i32 %_901, %5354
  %_903 = sub i32 48, %5354
  %gen904 = mul i32 %_903, %5354
  %_905 = sub i32 0, 48
  %gen906 = add i32 %_905, %5354
  %_907 = sub i32 0, 48
  %gen908 = add i32 %_907, %5354
  %_909 = sub i32 0, 48
  %gen910 = add i32 %_909, %5354
  %5355 = add nsw i32 48, %5354, !dbg !4574
  %5356 = trunc i32 %5355 to i8, !dbg !4575
  store i8 %5356, i8* %39, align 1, !dbg !4576
  br label %originalBB890

originalBB914alteredBB:                           ; preds = %originalBB914, %3440
  %5357 = load i64, i64* %29, align 8, !dbg !4583
  %5358 = load i64, i64* %20, align 8, !dbg !4583
  %5359 = icmp ult i64 %5357, %5358, !dbg !4583
  br label %originalBB914

originalBB918alteredBB:                           ; preds = %originalBB918, %3460
  %5360 = load i8*, i8** %19, align 8, !dbg !4583
  %5361 = load i64, i64* %29, align 8, !dbg !4583
  %5362 = getelementptr inbounds i8, i8* %5360, i64 %5361, !dbg !4583
  store i8 92, i8* %5362, align 1, !dbg !4583
  br label %originalBB918

originalBB922alteredBB:                           ; preds = %originalBB922, %3480
  %5363 = load i64, i64* %29, align 8, !dbg !4586
  %_923 = shl i64 %5363, 1
  %_924 = sub i64 %5363, 1
  %gen925 = mul i64 %_924, 1
  %_926 = sub i64 %5363, 1
  %gen927 = mul i64 %_926, 1
  %_928 = sub i64 %5363, 1
  %gen929 = mul i64 %_928, 1
  %_930 = sub i64 0, %5363
  %gen931 = add i64 %_930, 1
  %5364 = add i64 %5363, 1, !dbg !4586
  store i64 %5364, i64* %29, align 8, !dbg !4586
  br label %originalBB922

originalBB935alteredBB:                           ; preds = %originalBB935, %3499
  store i8 0, i8* %41, align 1, !dbg !4587
  br label %originalBB935

originalBB939alteredBB:                           ; preds = %originalBB939, %3516
  br label %originalBB939

originalBB943alteredBB:                           ; preds = %originalBB943, %3533
  %5365 = load i64, i64* %50, align 8, !dbg !4589
  %5366 = load i64, i64* %28, align 8, !dbg !4591
  %_944 = sub i64 0, %5366
  %gen945 = add i64 %_944, 1
  %_946 = sub i64 0, %5366
  %gen947 = add i64 %_946, 1
  %_948 = shl i64 %5366, 1
  %5367 = add i64 %5366, 1, !dbg !4592
  %5368 = icmp ule i64 %5365, %5367, !dbg !4593
  br label %originalBB943

originalBB952alteredBB:                           ; preds = %originalBB952, %3554
  br label %originalBB952

originalBB956alteredBB:                           ; preds = %originalBB956, %3571
  br label %originalBB956

originalBB960alteredBB:                           ; preds = %originalBB960, %3588
  %5369 = load i8, i8* %36, align 1, !dbg !4597
  %5370 = trunc i8 %5369 to i1, !dbg !4597
  br label %originalBB960

originalBB964alteredBB:                           ; preds = %originalBB964, %3607
  %5371 = load i8, i8* %42, align 1, !dbg !4597
  %5372 = trunc i8 %5371 to i1, !dbg !4597
  br label %originalBB964

originalBB968alteredBB:                           ; preds = %originalBB968, %3626
  br label %originalBB968

originalBB972alteredBB:                           ; preds = %originalBB972, %3643
  %5373 = load i64, i64* %29, align 8, !dbg !4603
  %5374 = load i64, i64* %20, align 8, !dbg !4603
  %5375 = icmp ult i64 %5373, %5374, !dbg !4603
  br label %originalBB972

originalBB976alteredBB:                           ; preds = %originalBB976, %3667
  %5376 = load i64, i64* %29, align 8, !dbg !4606
  %_977 = shl i64 %5376, 1
  %_978 = shl i64 %5376, 1
  %5377 = add i64 %5376, 1, !dbg !4606
  store i64 %5377, i64* %29, align 8, !dbg !4606
  br label %originalBB976

originalBB982alteredBB:                           ; preds = %originalBB982, %3687
  %5378 = load i64, i64* %29, align 8, !dbg !4607
  %5379 = load i64, i64* %20, align 8, !dbg !4607
  %5380 = icmp ult i64 %5378, %5379, !dbg !4607
  br label %originalBB982

originalBB986alteredBB:                           ; preds = %originalBB986, %3707
  %5381 = load i8*, i8** %19, align 8, !dbg !4607
  %5382 = load i64, i64* %29, align 8, !dbg !4607
  %5383 = getelementptr inbounds i8, i8* %5381, i64 %5382, !dbg !4607
  store i8 39, i8* %5383, align 1, !dbg !4607
  br label %originalBB986

originalBB990alteredBB:                           ; preds = %originalBB990, %3727
  %5384 = load i64, i64* %29, align 8, !dbg !4610
  %_991 = shl i64 %5384, 1
  %_992 = sub i64 %5384, 1
  %gen993 = mul i64 %_992, 1
  %_994 = shl i64 %5384, 1
  %5385 = add i64 %5384, 1, !dbg !4610
  store i64 %5385, i64* %29, align 8, !dbg !4610
  br label %originalBB990

originalBB998alteredBB:                           ; preds = %originalBB998, %3746
  store i8 0, i8* %36, align 1, !dbg !4601
  br label %originalBB998

originalBB1002alteredBB:                          ; preds = %originalBB1002, %3763
  br label %originalBB1002

originalBB1006alteredBB:                          ; preds = %originalBB1006, %3780
  br label %originalBB1006

originalBB1010alteredBB:                          ; preds = %originalBB1010, %3797
  %5386 = load i64, i64* %29, align 8, !dbg !4612
  %5387 = load i64, i64* %20, align 8, !dbg !4612
  %5388 = icmp ult i64 %5386, %5387, !dbg !4612
  br label %originalBB1010

originalBB1014alteredBB:                          ; preds = %originalBB1014, %3817
  %5389 = load i8, i8* %39, align 1, !dbg !4612
  %5390 = load i8*, i8** %19, align 8, !dbg !4612
  %5391 = load i64, i64* %29, align 8, !dbg !4612
  %5392 = getelementptr inbounds i8, i8* %5390, i64 %5391, !dbg !4612
  store i8 %5389, i8* %5392, align 1, !dbg !4612
  br label %originalBB1014

originalBB1018alteredBB:                          ; preds = %originalBB1018, %3838
  %5393 = load i64, i64* %29, align 8, !dbg !4615
  %_1019 = sub i64 %5393, 1
  %gen1020 = mul i64 %_1019, 1
  %_1021 = sub i64 %5393, 1
  %gen1022 = mul i64 %_1021, 1
  %_1023 = sub i64 %5393, 1
  %gen1024 = mul i64 %_1023, 1
  %_1025 = sub i64 0, %5393
  %gen1026 = add i64 %_1025, 1
  %_1027 = sub i64 %5393, 1
  %gen1028 = mul i64 %_1027, 1
  %_1029 = sub i64 %5393, 1
  %gen1030 = mul i64 %_1029, 1
  %_1031 = sub i64 0, %5393
  %gen1032 = add i64 %_1031, 1
  %5394 = add i64 %5393, 1, !dbg !4615
  store i64 %5394, i64* %29, align 8, !dbg !4615
  br label %originalBB1018

originalBB1036alteredBB:                          ; preds = %originalBB1036, %3857
  %5395 = load i8*, i8** %21, align 8, !dbg !4616
  %5396 = load i64, i64* %28, align 8, !dbg !4617
  %_1037 = sub i64 %5396, 1
  %gen1038 = mul i64 %_1037, 1
  %_1039 = sub i64 0, %5396
  %gen1040 = add i64 %_1039, 1
  %_1041 = sub i64 0, %5396
  %gen1042 = add i64 %_1041, 1
  %5397 = add i64 %5396, 1, !dbg !4617
  store i64 %5397, i64* %28, align 8, !dbg !4617
  %5398 = getelementptr inbounds i8, i8* %5395, i64 %5397, !dbg !4616
  %5399 = load i8, i8* %5398, align 1, !dbg !4616
  store i8 %5399, i8* %39, align 1, !dbg !4618
  br label %originalBB1036

originalBB1046alteredBB:                          ; preds = %originalBB1046, %3879
  br label %originalBB1046

originalBB1050alteredBB:                          ; preds = %originalBB1050, %3896
  br label %originalBB1050

originalBB1054alteredBB:                          ; preds = %originalBB1054, %3919
  %5400 = load i8, i8* %35, align 1, !dbg !4631
  %5401 = trunc i8 %5400 to i1, !dbg !4631
  br label %originalBB1054

originalBB1058alteredBB:                          ; preds = %originalBB1058, %3938
  %5402 = load i32*, i32** %25, align 8, !dbg !4633
  %5403 = icmp ne i32* %5402, null, !dbg !4633
  br label %originalBB1058

originalBB1062alteredBB:                          ; preds = %originalBB1062, %3957
  %5404 = load i32*, i32** %25, align 8, !dbg !4635
  %5405 = load i8, i8* %39, align 1, !dbg !4636
  %5406 = zext i8 %5405 to i64, !dbg !4636
  %_1063 = sub i64 0, %5406
  %gen1064 = add i64 %_1063, 32
  %_1065 = shl i64 %5406, 32
  %5407 = udiv i64 %5406, 32, !dbg !4637
  %5408 = getelementptr inbounds i32, i32* %5404, i64 %5407, !dbg !4635
  %5409 = load i32, i32* %5408, align 4, !dbg !4635
  %5410 = load i8, i8* %39, align 1, !dbg !4638
  %5411 = zext i8 %5410 to i64, !dbg !4638
  %_1066 = sub i64 0, %5411
  %gen1067 = add i64 %_1066, 32
  %_1068 = sub i64 0, %5411
  %gen1069 = add i64 %_1068, 32
  %_1070 = sub i64 %5411, 32
  %gen1071 = mul i64 %_1070, 32
  %_1072 = sub i64 %5411, 32
  %gen1073 = mul i64 %_1072, 32
  %_1074 = sub i64 0, %5411
  %gen1075 = add i64 %_1074, 32
  %_1076 = shl i64 %5411, 32
  %_1077 = sub i64 %5411, 32
  %gen1078 = mul i64 %_1077, 32
  %5412 = urem i64 %5411, 32, !dbg !4639
  %5413 = trunc i64 %5412 to i32, !dbg !4640
  %_1079 = sub i32 %5409, %5413
  %gen1080 = mul i32 %_1079, %5413
  %_1081 = shl i32 %5409, %5413
  %_1082 = shl i32 %5409, %5413
  %_1083 = sub i32 %5409, %5413
  %gen1084 = mul i32 %_1083, %5413
  %_1085 = sub i32 %5409, %5413
  %gen1086 = mul i32 %_1085, %5413
  %5414 = lshr i32 %5409, %5413, !dbg !4640
  %_1087 = sub i32 0, %5414
  %gen1088 = add i32 %_1087, 1
  %_1089 = shl i32 %5414, 1
  %_1090 = sub i32 0, %5414
  %gen1091 = add i32 %_1090, 1
  %_1092 = shl i32 %5414, 1
  %_1093 = sub i32 %5414, 1
  %gen1094 = mul i32 %_1093, 1
  %_1095 = sub i32 0, %5414
  %gen1096 = add i32 %_1095, 1
  %_1097 = shl i32 %5414, 1
  %_1098 = shl i32 %5414, 1
  %5415 = and i32 %5414, 1, !dbg !4641
  %5416 = icmp ne i32 %5415, 0, !dbg !4641
  br label %originalBB1062

originalBB1102alteredBB:                          ; preds = %originalBB1102, %3987
  %5417 = load i8, i8* %41, align 1, !dbg !4643
  %5418 = trunc i8 %5417 to i1, !dbg !4643
  br label %originalBB1102

originalBB1106alteredBB:                          ; preds = %originalBB1106, %4006
  br label %originalBB1106

originalBB1110alteredBB:                          ; preds = %originalBB1110, %4024
  br label %originalBB1110

originalBB1114alteredBB:                          ; preds = %originalBB1114, %4041
  %5419 = load i8, i8* %35, align 1, !dbg !4649
  %5420 = trunc i8 %5419 to i1, !dbg !4649
  br label %originalBB1114

originalBB1118alteredBB:                          ; preds = %originalBB1118, %4060
  br label %originalBB1118

originalBB1122alteredBB:                          ; preds = %originalBB1122, %4077
  store i8 1, i8* %42, align 1, !dbg !4652
  %5421 = load i32, i32* %23, align 4, !dbg !4653
  %5422 = icmp eq i32 %5421, 2, !dbg !4653
  br label %originalBB1122

originalBB1126alteredBB:                          ; preds = %originalBB1126, %4111
  br label %originalBB1126

originalBB1130alteredBB:                          ; preds = %originalBB1130, %4148
  %5423 = load i64, i64* %29, align 8, !dbg !4668
  %_1131 = shl i64 %5423, 1
  %_1132 = sub i64 0, %5423
  %gen1133 = add i64 %_1132, 1
  %5424 = add i64 %5423, 1, !dbg !4668
  store i64 %5424, i64* %29, align 8, !dbg !4668
  br label %originalBB1130

originalBB1137alteredBB:                          ; preds = %originalBB1137, %4167
  store i8 1, i8* %36, align 1, !dbg !4655
  br label %originalBB1137

originalBB1141alteredBB:                          ; preds = %originalBB1141, %4184
  br label %originalBB1141

originalBB1145alteredBB:                          ; preds = %originalBB1145, %4201
  %5425 = load i64, i64* %29, align 8, !dbg !4669
  %5426 = load i64, i64* %20, align 8, !dbg !4669
  %5427 = icmp ult i64 %5425, %5426, !dbg !4669
  br label %originalBB1145

originalBB1149alteredBB:                          ; preds = %originalBB1149, %4221
  %5428 = load i8*, i8** %19, align 8, !dbg !4669
  %5429 = load i64, i64* %29, align 8, !dbg !4669
  %5430 = getelementptr inbounds i8, i8* %5428, i64 %5429, !dbg !4669
  store i8 92, i8* %5430, align 1, !dbg !4669
  br label %originalBB1149

originalBB1153alteredBB:                          ; preds = %originalBB1153, %4241
  %5431 = load i64, i64* %29, align 8, !dbg !4672
  %_1154 = shl i64 %5431, 1
  %_1155 = sub i64 %5431, 1
  %gen1156 = mul i64 %_1155, 1
  %_1157 = shl i64 %5431, 1
  %_1158 = sub i64 0, %5431
  %gen1159 = add i64 %_1158, 1
  %_1160 = shl i64 %5431, 1
  %_1161 = sub i64 %5431, 1
  %gen1162 = mul i64 %_1161, 1
  %_1163 = shl i64 %5431, 1
  %_1164 = sub i64 %5431, 1
  %gen1165 = mul i64 %_1164, 1
  %_1166 = sub i64 %5431, 1
  %gen1167 = mul i64 %_1166, 1
  %5432 = add i64 %5431, 1, !dbg !4672
  store i64 %5432, i64* %29, align 8, !dbg !4672
  br label %originalBB1153

originalBB1171alteredBB:                          ; preds = %originalBB1171, %4263
  %5433 = load i8, i8* %36, align 1, !dbg !4676
  %5434 = trunc i8 %5433 to i1, !dbg !4676
  br label %originalBB1171

originalBB1175alteredBB:                          ; preds = %originalBB1175, %4282
  %5435 = load i8, i8* %42, align 1, !dbg !4676
  %5436 = trunc i8 %5435 to i1, !dbg !4676
  br label %originalBB1175

originalBB1179alteredBB:                          ; preds = %originalBB1179, %4301
  br label %originalBB1179

originalBB1183alteredBB:                          ; preds = %originalBB1183, %4318
  %5437 = load i64, i64* %29, align 8, !dbg !4682
  %5438 = load i64, i64* %20, align 8, !dbg !4682
  %5439 = icmp ult i64 %5437, %5438, !dbg !4682
  br label %originalBB1183

originalBB1187alteredBB:                          ; preds = %originalBB1187, %4342
  %5440 = load i64, i64* %29, align 8, !dbg !4685
  %_1188 = sub i64 0, %5440
  %gen1189 = add i64 %_1188, 1
  %_1190 = sub i64 %5440, 1
  %gen1191 = mul i64 %_1190, 1
  %_1192 = sub i64 0, %5440
  %gen1193 = add i64 %_1192, 1
  %_1194 = sub i64 %5440, 1
  %gen1195 = mul i64 %_1194, 1
  %_1196 = sub i64 0, %5440
  %gen1197 = add i64 %_1196, 1
  %5441 = add i64 %5440, 1, !dbg !4685
  store i64 %5441, i64* %29, align 8, !dbg !4685
  br label %originalBB1187

originalBB1201alteredBB:                          ; preds = %originalBB1201, %4361
  br label %originalBB1201

originalBB1205alteredBB:                          ; preds = %originalBB1205, %4378
  %5442 = load i64, i64* %29, align 8, !dbg !4686
  %5443 = load i64, i64* %20, align 8, !dbg !4686
  %5444 = icmp ult i64 %5442, %5443, !dbg !4686
  br label %originalBB1205

originalBB1209alteredBB:                          ; preds = %originalBB1209, %4402
  %5445 = load i64, i64* %29, align 8, !dbg !4689
  %_1210 = sub i64 0, %5445
  %gen1211 = add i64 %_1210, 1
  %_1212 = sub i64 %5445, 1
  %gen1213 = mul i64 %_1212, 1
  %5446 = add i64 %5445, 1, !dbg !4689
  store i64 %5446, i64* %29, align 8, !dbg !4689
  br label %originalBB1209

originalBB1217alteredBB:                          ; preds = %originalBB1217, %4422
  br label %originalBB1217

originalBB1221alteredBB:                          ; preds = %originalBB1221, %4440
  %5447 = load i64, i64* %29, align 8, !dbg !4691
  %5448 = load i64, i64* %20, align 8, !dbg !4691
  %5449 = icmp ult i64 %5447, %5448, !dbg !4691
  br label %originalBB1221

originalBB1225alteredBB:                          ; preds = %originalBB1225, %4460
  %5450 = load i8, i8* %39, align 1, !dbg !4691
  %5451 = load i8*, i8** %19, align 8, !dbg !4691
  %5452 = load i64, i64* %29, align 8, !dbg !4691
  %5453 = getelementptr inbounds i8, i8* %5451, i64 %5452, !dbg !4691
  store i8 %5450, i8* %5453, align 1, !dbg !4691
  br label %originalBB1225

originalBB1229alteredBB:                          ; preds = %originalBB1229, %4481
  %5454 = load i64, i64* %29, align 8, !dbg !4694
  %_1230 = sub i64 0, %5454
  %gen1231 = add i64 %_1230, 1
  %_1232 = shl i64 %5454, 1
  %_1233 = sub i64 0, %5454
  %gen1234 = add i64 %_1233, 1
  %_1235 = sub i64 %5454, 1
  %gen1236 = mul i64 %_1235, 1
  %_1237 = sub i64 %5454, 1
  %gen1238 = mul i64 %_1237, 1
  %_1239 = sub i64 0, %5454
  %gen1240 = add i64 %_1239, 1
  %5455 = add i64 %5454, 1, !dbg !4694
  store i64 %5455, i64* %29, align 8, !dbg !4694
  br label %originalBB1229

originalBB1244alteredBB:                          ; preds = %originalBB1244, %4500
  %5456 = load i8, i8* %43, align 1, !dbg !4695
  %5457 = trunc i8 %5456 to i1, !dbg !4695
  br label %originalBB1244

originalBB1248alteredBB:                          ; preds = %originalBB1248, %4519
  store i8 0, i8* %38, align 1, !dbg !4698
  br label %originalBB1248

originalBB1252alteredBB:                          ; preds = %originalBB1252, %4536
  br label %originalBB1252

originalBB1256alteredBB:                          ; preds = %originalBB1256, %4556
  %5458 = load i64, i64* %29, align 8, !dbg !4705
  %5459 = icmp eq i64 %5458, 0, !dbg !4707
  br label %originalBB1256

originalBB1260alteredBB:                          ; preds = %originalBB1260, %4578
  %5460 = load i8, i8* %35, align 1, !dbg !4712
  %5461 = trunc i8 %5460 to i1, !dbg !4712
  br label %originalBB1260

originalBB1264alteredBB:                          ; preds = %originalBB1264, %4604
  %5462 = load i8, i8* %37, align 1, !dbg !4721
  %5463 = trunc i8 %5462 to i1, !dbg !4721
  br label %originalBB1264

originalBB1268alteredBB:                          ; preds = %originalBB1268, %4623
  %5464 = load i8, i8* %38, align 1, !dbg !4723
  %5465 = trunc i8 %5464 to i1, !dbg !4723
  br label %originalBB1268

originalBB1272alteredBB:                          ; preds = %originalBB1272, %4642
  %5466 = load i8*, i8** %19, align 8, !dbg !4727
  %5467 = load i64, i64* %30, align 8, !dbg !4728
  %5468 = load i8*, i8** %21, align 8, !dbg !4729
  %5469 = load i64, i64* %22, align 8, !dbg !4730
  %5470 = load i32, i32* %24, align 4, !dbg !4731
  %5471 = load i32*, i32** %25, align 8, !dbg !4732
  %5472 = load i8*, i8** %26, align 8, !dbg !4733
  %5473 = load i8*, i8** %27, align 8, !dbg !4734
  %5474 = call i64 @quotearg_buffer_restyled(i8* %5466, i64 %5467, i8* %5468, i64 %5469, i32 5, i32 %5470, i32* %5471, i8* %5472, i8* %5473), !dbg !4735
  store i64 %5474, i64* %18, align 8, !dbg !4736
  br label %originalBB1272

originalBB1276alteredBB:                          ; preds = %originalBB1276, %4676
  br label %originalBB1276

originalBB1280alteredBB:                          ; preds = %originalBB1280, %4693
  br label %originalBB1280

originalBB1284alteredBB:                          ; preds = %originalBB1284, %4716
  br label %originalBB1284

originalBB1288alteredBB:                          ; preds = %originalBB1288, %4737
  br label %originalBB1288

originalBB1292alteredBB:                          ; preds = %originalBB1292, %4754
  %5475 = load i64, i64* %29, align 8, !dbg !4760
  %5476 = load i64, i64* %20, align 8, !dbg !4760
  %5477 = icmp ult i64 %5475, %5476, !dbg !4760
  br label %originalBB1292

originalBB1296alteredBB:                          ; preds = %originalBB1296, %4774
  %5478 = load i8*, i8** %31, align 8, !dbg !4760
  %5479 = load i8, i8* %5478, align 1, !dbg !4760
  %5480 = load i8*, i8** %19, align 8, !dbg !4760
  %5481 = load i64, i64* %29, align 8, !dbg !4760
  %5482 = getelementptr inbounds i8, i8* %5480, i64 %5481, !dbg !4760
  store i8 %5479, i8* %5482, align 1, !dbg !4760
  br label %originalBB1296

originalBB1300alteredBB:                          ; preds = %originalBB1300, %4796
  %5483 = load i64, i64* %29, align 8, !dbg !4763
  %5484 = add i64 %5483, 1, !dbg !4763
  store i64 %5484, i64* %29, align 8, !dbg !4763
  br label %originalBB1300

originalBB1304alteredBB:                          ; preds = %originalBB1304, %4816
  %5485 = load i8*, i8** %31, align 8, !dbg !4764
  %5486 = getelementptr inbounds i8, i8* %5485, i32 1, !dbg !4764
  store i8* %5486, i8** %31, align 8, !dbg !4764
  br label %originalBB1304

originalBB1308alteredBB:                          ; preds = %originalBB1308, %4835
  br label %originalBB1308

originalBB1312alteredBB:                          ; preds = %originalBB1312, %4852
  %5487 = load i64, i64* %29, align 8, !dbg !4768
  %5488 = load i64, i64* %20, align 8, !dbg !4770
  %5489 = icmp ult i64 %5487, %5488, !dbg !4771
  br label %originalBB1312

originalBB1316alteredBB:                          ; preds = %originalBB1316, %4872
  %5490 = load i8*, i8** %19, align 8, !dbg !4773
  %5491 = load i64, i64* %29, align 8, !dbg !4774
  %5492 = getelementptr inbounds i8, i8* %5490, i64 %5491, !dbg !4773
  store i8 0, i8* %5492, align 1, !dbg !4775
  br label %originalBB1316

originalBB1320alteredBB:                          ; preds = %originalBB1320, %4894
  %5493 = load i32, i32* %23, align 4, !dbg !4780
  %5494 = icmp eq i32 %5493, 2, !dbg !4782
  br label %originalBB1320

originalBB1324alteredBB:                          ; preds = %originalBB1324, %4913
  %5495 = load i8, i8* %33, align 1, !dbg !4784
  %5496 = trunc i8 %5495 to i1, !dbg !4784
  br label %originalBB1324

originalBB1328alteredBB:                          ; preds = %originalBB1328, %4932
  store i32 4, i32* %23, align 4, !dbg !4786
  br label %originalBB1328

originalBB1332alteredBB:                          ; preds = %originalBB1332, %4949
  %5497 = load i8*, i8** %19, align 8, !dbg !4788
  %5498 = load i64, i64* %20, align 8, !dbg !4789
  %5499 = load i8*, i8** %21, align 8, !dbg !4790
  %5500 = load i64, i64* %22, align 8, !dbg !4791
  %5501 = load i32, i32* %23, align 4, !dbg !4792
  %5502 = load i32, i32* %24, align 4, !dbg !4793
  %_1333 = sub i32 0, %5502
  %gen1334 = add i32 %_1333, -3
  %_1335 = sub i32 %5502, -3
  %gen1336 = mul i32 %_1335, -3
  %_1337 = sub i32 %5502, -3
  %gen1338 = mul i32 %_1337, -3
  %5503 = and i32 %5502, -3, !dbg !4794
  %5504 = load i8*, i8** %26, align 8, !dbg !4795
  %5505 = load i8*, i8** %27, align 8, !dbg !4796
  %5506 = call i64 @quotearg_buffer_restyled(i8* %5497, i64 %5498, i8* %5499, i64 %5500, i32 %5501, i32 %5503, i32* null, i8* %5504, i8* %5505), !dbg !4797
  store i64 %5506, i64* %18, align 8, !dbg !4798
  br label %originalBB1332

originalBB1342alteredBB:                          ; preds = %originalBB1342, %4976
  %5507 = load i64, i64* %18, align 8, !dbg !4799
  br label %originalBB1342
}

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8*, i32) #4 !dbg !4887 {
  %3 = load i32, i32* @x.65
  %4 = load i32, i32* @y.66
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !4890, metadata !DIExpression()), !dbg !4891
  store i32 %1, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4892, metadata !DIExpression()), !dbg !4893
  call void @llvm.dbg.declare(metadata i8** %14, metadata !4894, metadata !DIExpression()), !dbg !4895
  %16 = load i8*, i8** %12, align 8, !dbg !4896
  %17 = call i8* @gettext(i8* %16) #10, !dbg !4896
  store i8* %17, i8** %14, align 8, !dbg !4895
  call void @llvm.dbg.declare(metadata i8** %15, metadata !4897, metadata !DIExpression()), !dbg !4898
  %18 = load i8*, i8** %14, align 8, !dbg !4899
  %19 = load i8*, i8** %12, align 8, !dbg !4901
  %20 = icmp ne i8* %18, %19, !dbg !4902
  %21 = load i32, i32* @x.65
  %22 = load i32, i32* @y.66
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %29, label %31, !dbg !4903

29:                                               ; preds = %originalBBpart2
  %30 = load i8*, i8** %14, align 8, !dbg !4904
  store i8* %30, i8** %11, align 8, !dbg !4905
  br label %109, !dbg !4905

31:                                               ; preds = %originalBBpart2
  %32 = call i8* @locale_charset(), !dbg !4906
  store i8* %32, i8** %15, align 8, !dbg !4907
  %33 = load i8*, i8** %15, align 8, !dbg !4908
  %34 = call i32 @c_strcasecmp(i8* %33, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.123, i64 0, i64 0)) #13, !dbg !4908
  %35 = icmp eq i32 %34, 0, !dbg !4908
  br i1 %35, label %36, label %60, !dbg !4910

36:                                               ; preds = %31
  %37 = load i32, i32* @x.65
  %38 = load i32, i32* @y.66
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %36, %originalBB1alteredBB
  %45 = load i8*, i8** %12, align 8, !dbg !4911
  %46 = getelementptr inbounds i8, i8* %45, i64 0, !dbg !4911
  %47 = load i8, i8* %46, align 1, !dbg !4911
  %48 = sext i8 %47 to i32, !dbg !4911
  %49 = icmp eq i32 %48, 96, !dbg !4912
  %50 = zext i1 %49 to i64, !dbg !4911
  %51 = select i1 %49, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.124, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.125, i64 0, i64 0), !dbg !4911
  store i8* %51, i8** %11, align 8, !dbg !4913
  %52 = load i32, i32* @x.65
  %53 = load i32, i32* @y.66
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %109, !dbg !4913

60:                                               ; preds = %31
  %61 = load i32, i32* @x.65
  %62 = load i32, i32* @y.66
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %60, %originalBB6alteredBB
  %69 = load i8*, i8** %15, align 8, !dbg !4914
  %70 = call i32 @c_strcasecmp(i8* %69, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.126, i64 0, i64 0)) #13, !dbg !4914
  %71 = icmp eq i32 %70, 0, !dbg !4914
  %72 = load i32, i32* @x.65
  %73 = load i32, i32* @y.66
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %71, label %80, label %104, !dbg !4916

80:                                               ; preds = %originalBBpart28
  %81 = load i32, i32* @x.65
  %82 = load i32, i32* @y.66
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %80, %originalBB10alteredBB
  %89 = load i8*, i8** %12, align 8, !dbg !4917
  %90 = getelementptr inbounds i8, i8* %89, i64 0, !dbg !4917
  %91 = load i8, i8* %90, align 1, !dbg !4917
  %92 = sext i8 %91 to i32, !dbg !4917
  %93 = icmp eq i32 %92, 96, !dbg !4918
  %94 = zext i1 %93 to i64, !dbg !4917
  %95 = select i1 %93, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.127, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.128, i64 0, i64 0), !dbg !4917
  store i8* %95, i8** %11, align 8, !dbg !4919
  %96 = load i32, i32* @x.65
  %97 = load i32, i32* @y.66
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %109, !dbg !4919

104:                                              ; preds = %originalBBpart28
  %105 = load i32, i32* %13, align 4, !dbg !4920
  %106 = icmp eq i32 %105, 9, !dbg !4921
  %107 = zext i1 %106 to i64, !dbg !4920
  %108 = select i1 %106, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.120, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.122, i64 0, i64 0), !dbg !4920
  store i8* %108, i8** %11, align 8, !dbg !4922
  br label %109, !dbg !4922

109:                                              ; preds = %104, %originalBBpart212, %originalBBpart24, %29
  %110 = load i32, i32* @x.65
  %111 = load i32, i32* @y.66
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %109, %originalBB14alteredBB
  %118 = load i8*, i8** %11, align 8, !dbg !4923
  %119 = load i32, i32* @x.65
  %120 = load i32, i32* @y.66
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret i8* %118, !dbg !4923

originalBBalteredBB:                              ; preds = %originalBB, %2
  %127 = alloca i8*, align 8
  %128 = alloca i8*, align 8
  %129 = alloca i32, align 4
  %130 = alloca i8*, align 8
  %131 = alloca i8*, align 8
  store i8* %0, i8** %128, align 8
  call void @llvm.dbg.declare(metadata i8** %128, metadata !4924, metadata !DIExpression()), !dbg !4891
  store i32 %1, i32* %129, align 4
  call void @llvm.dbg.declare(metadata i32* %129, metadata !4956, metadata !DIExpression()), !dbg !4893
  call void @llvm.dbg.declare(metadata i8** %130, metadata !4957, metadata !DIExpression()), !dbg !4895
  %132 = load i8*, i8** %128, align 8, !dbg !4896
  %133 = call i8* @gettext(i8* %132) #10, !dbg !4896
  store i8* %133, i8** %130, align 8, !dbg !4895
  call void @llvm.dbg.declare(metadata i8** %131, metadata !4958, metadata !DIExpression()), !dbg !4898
  %134 = load i8*, i8** %130, align 8, !dbg !4899
  %135 = load i8*, i8** %128, align 8, !dbg !4901
  %136 = icmp ne i8* %134, %135, !dbg !4902
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %36
  %137 = load i8*, i8** %12, align 8, !dbg !4911
  %138 = getelementptr inbounds i8, i8* %137, i64 0, !dbg !4911
  %139 = load i8, i8* %138, align 1, !dbg !4911
  %140 = sext i8 %139 to i32, !dbg !4911
  %141 = icmp eq i32 %140, 96, !dbg !4912
  %142 = zext i1 %141 to i64, !dbg !4911
  %143 = select i1 %141, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.124, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.125, i64 0, i64 0), !dbg !4911
  store i8* %143, i8** %11, align 8, !dbg !4913
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %60
  %144 = load i8*, i8** %15, align 8, !dbg !4914
  %145 = call i32 @c_strcasecmp(i8* %144, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.126, i64 0, i64 0)) #13, !dbg !4914
  %146 = icmp eq i32 %145, 0, !dbg !4914
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %80
  %147 = load i8*, i8** %12, align 8, !dbg !4917
  %148 = getelementptr inbounds i8, i8* %147, i64 0, !dbg !4917
  %149 = load i8, i8* %148, align 1, !dbg !4917
  %150 = sext i8 %149 to i32, !dbg !4917
  %151 = icmp eq i32 %150, 96, !dbg !4918
  %152 = zext i1 %151 to i64, !dbg !4917
  %153 = select i1 %151, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.127, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.128, i64 0, i64 0), !dbg !4917
  store i8* %153, i8** %11, align 8, !dbg !4919
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %109
  %154 = load i8*, i8** %11, align 8, !dbg !4923
  br label %originalBB14
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #8

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.__mbstate_t*) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char(i8*, i8 signext) #4 !dbg !4959 {
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4962, metadata !DIExpression()), !dbg !4963
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !4964, metadata !DIExpression()), !dbg !4965
  %5 = load i8*, i8** %3, align 8, !dbg !4966
  %6 = load i8, i8* %4, align 1, !dbg !4967
  %7 = call i8* @quotearg_char_mem(i8* %5, i64 -1, i8 signext %6), !dbg !4968
  ret i8* %7, !dbg !4969
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_colon(i8*) #4 !dbg !4970 {
  %2 = load i32, i32* @x.69
  %3 = load i32, i32* @y.70
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !4971, metadata !DIExpression()), !dbg !4972
  %11 = load i8*, i8** %10, align 8, !dbg !4973
  %12 = call i8* @quotearg_char(i8* %11, i8 signext 58), !dbg !4974
  %13 = load i32, i32* @x.69
  %14 = load i32, i32* @y.70
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !4975

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i8*, align 8
  store i8* %0, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !4976, metadata !DIExpression()), !dbg !4972
  %22 = load i8*, i8** %21, align 8, !dbg !4973
  %23 = call i8* @quotearg_char(i8* %22, i8 signext 58), !dbg !4974
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_style_colon(i32, i32, i8*) #4 !dbg !5008 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca %struct.quoting_options, align 8
  %8 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5011, metadata !DIExpression()), !dbg !5012
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5013, metadata !DIExpression()), !dbg !5014
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !5015, metadata !DIExpression()), !dbg !5016
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %7, metadata !5017, metadata !DIExpression()), !dbg !5018
  %9 = load i32, i32* %5, align 4, !dbg !5019
  call void @quoting_options_from_style(%struct.quoting_options* sret %8, i32 %9), !dbg !5020
  %10 = bitcast %struct.quoting_options* %7 to i8*, !dbg !5020
  %11 = bitcast %struct.quoting_options* %8 to i8*, !dbg !5020
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 56, i1 false), !dbg !5020
  %12 = call i32 @set_char_quoting(%struct.quoting_options* %7, i8 signext 58, i32 1), !dbg !5021
  %13 = load i32, i32* %4, align 4, !dbg !5022
  %14 = load i8*, i8** %6, align 8, !dbg !5023
  %15 = call i8* @quotearg_n_options(i32 %13, i8* %14, i64 -1, %struct.quoting_options* %7), !dbg !5024
  ret i8* %15, !dbg !5025
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret, i32) #4 !dbg !5026 {
  %3 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5029, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %0, metadata !5031, metadata !DIExpression()), !dbg !5032
  %4 = bitcast %struct.quoting_options* %0 to i8*, !dbg !5032
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 56, i1 false), !dbg !5032
  %5 = load i32, i32* %3, align 4, !dbg !5033
  %6 = icmp eq i32 %5, 10, !dbg !5035
  br i1 %6, label %7, label %24, !dbg !5036

7:                                                ; preds = %2
  %8 = load i32, i32* @x.73
  %9 = load i32, i32* @y.74
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %7, %originalBBalteredBB
  call void @abort() #12, !dbg !5037
  %16 = load i32, i32* @x.73
  %17 = load i32, i32* @y.74
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable, !dbg !5037

24:                                               ; preds = %2
  %25 = load i32, i32* %3, align 4, !dbg !5038
  %26 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %0, i32 0, i32 0, !dbg !5039
  store i32 %25, i32* %26, align 8, !dbg !5040
  ret void, !dbg !5041

originalBBalteredBB:                              ; preds = %originalBB, %7
  call void @abort() #12, !dbg !5037
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n_mem(i32, i8*, i64) #4 !dbg !5042 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5045, metadata !DIExpression()), !dbg !5046
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5047, metadata !DIExpression()), !dbg !5048
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !5049, metadata !DIExpression()), !dbg !5050
  %7 = load i32, i32* %4, align 4, !dbg !5051
  %8 = load i8*, i8** %5, align 8, !dbg !5052
  %9 = load i64, i64* %6, align 8, !dbg !5053
  %10 = call i8* @quotearg_n_options(i32 %7, i8* %8, i64 %9, %struct.quoting_options* @quote_quoting_options), !dbg !5054
  ret i8* %10, !dbg !5055
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n(i32, i8*) #4 !dbg !5056 {
  %3 = load i32, i32* @x.77
  %4 = load i32, i32* @y.78
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !5059, metadata !DIExpression()), !dbg !5060
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !5061, metadata !DIExpression()), !dbg !5062
  %13 = load i32, i32* %11, align 4, !dbg !5063
  %14 = load i8*, i8** %12, align 8, !dbg !5064
  %15 = call i8* @quote_n_mem(i32 %13, i8* %14, i64 -1), !dbg !5065
  %16 = load i32, i32* @x.77
  %17 = load i32, i32* @y.78
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %15, !dbg !5066

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  store i32 %0, i32* %24, align 4
  call void @llvm.dbg.declare(metadata i32* %24, metadata !5067, metadata !DIExpression()), !dbg !5060
  store i8* %1, i8** %25, align 8
  call void @llvm.dbg.declare(metadata i8** %25, metadata !5099, metadata !DIExpression()), !dbg !5062
  %26 = load i32, i32* %24, align 4, !dbg !5063
  %27 = load i8*, i8** %25, align 8, !dbg !5064
  %28 = call i8* @quote_n_mem(i32 %26, i8* %27, i64 -1), !dbg !5065
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote(i8*) #4 !dbg !5100 {
  %2 = load i32, i32* @x.79
  %3 = load i32, i32* @y.80
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !5103, metadata !DIExpression()), !dbg !5104
  %11 = load i8*, i8** %10, align 8, !dbg !5105
  %12 = call i8* @quote_n(i32 0, i8* %11), !dbg !5106
  %13 = load i32, i32* @x.79
  %14 = load i32, i32* @y.80
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !5107

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i8*, align 8
  store i8* %0, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !5108, metadata !DIExpression()), !dbg !5104
  %22 = load i8*, i8** %21, align 8, !dbg !5105
  %23 = call i8* @quote_n(i32 0, i8* %22), !dbg !5106
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setlocale_null_r(i32, i8* nonnull, i64) #4 !dbg !5140 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5144, metadata !DIExpression()), !dbg !5145
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5146, metadata !DIExpression()), !dbg !5147
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !5148, metadata !DIExpression()), !dbg !5149
  %7 = load i32, i32* %4, align 4, !dbg !5150
  %8 = load i8*, i8** %5, align 8, !dbg !5151
  %9 = load i64, i64* %6, align 8, !dbg !5152
  %10 = call i32 @setlocale_null_unlocked(i32 %7, i8* %8, i64 %9), !dbg !5153
  ret i32 %10, !dbg !5154
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setlocale_null_unlocked(i32, i8*, i64) #4 !dbg !5155 {
  %4 = load i32, i32* @x.83
  %5 = load i32, i32* @y.84
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i64, align 8
  store i32 %0, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5156, metadata !DIExpression()), !dbg !5157
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !5158, metadata !DIExpression()), !dbg !5159
  store i64 %2, i64* %15, align 8
  call void @llvm.dbg.declare(metadata i64* %15, metadata !5160, metadata !DIExpression()), !dbg !5161
  call void @llvm.dbg.declare(metadata i8** %16, metadata !5162, metadata !DIExpression()), !dbg !5163
  %18 = load i32, i32* %13, align 4, !dbg !5164
  %19 = call i8* @setlocale_null_androidfix(i32 %18), !dbg !5165
  store i8* %19, i8** %16, align 8, !dbg !5163
  %20 = load i8*, i8** %16, align 8, !dbg !5166
  %21 = icmp eq i8* %20, null, !dbg !5168
  %22 = load i32, i32* @x.83
  %23 = load i32, i32* @y.84
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %69, !dbg !5169

30:                                               ; preds = %originalBBpart2
  %31 = load i32, i32* @x.83
  %32 = load i32, i32* @y.84
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load i64, i64* %15, align 8, !dbg !5170
  %40 = icmp ugt i64 %39, 0, !dbg !5173
  %41 = load i32, i32* @x.83
  %42 = load i32, i32* @y.84
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %40, label %49, label %68, !dbg !5174

49:                                               ; preds = %originalBBpart24
  %50 = load i32, i32* @x.83
  %51 = load i32, i32* @y.84
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %49, %originalBB6alteredBB
  %58 = load i8*, i8** %14, align 8, !dbg !5175
  %59 = getelementptr inbounds i8, i8* %58, i64 0, !dbg !5175
  store i8 0, i8* %59, align 1, !dbg !5176
  %60 = load i32, i32* @x.83
  %61 = load i32, i32* @y.84
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %68, !dbg !5175

68:                                               ; preds = %originalBBpart28, %originalBBpart24
  store i32 22, i32* %12, align 4, !dbg !5177
  br label %109, !dbg !5177

69:                                               ; preds = %originalBBpart2
  call void @llvm.dbg.declare(metadata i64* %17, metadata !5178, metadata !DIExpression()), !dbg !5180
  %70 = load i8*, i8** %16, align 8, !dbg !5181
  %71 = call i64 @strlen(i8* %70) #13, !dbg !5182
  store i64 %71, i64* %17, align 8, !dbg !5180
  %72 = load i64, i64* %17, align 8, !dbg !5183
  %73 = load i64, i64* %15, align 8, !dbg !5185
  %74 = icmp ult i64 %72, %73, !dbg !5186
  br i1 %74, label %75, label %80, !dbg !5187

75:                                               ; preds = %69
  %76 = load i8*, i8** %14, align 8, !dbg !5188
  %77 = load i8*, i8** %16, align 8, !dbg !5190
  %78 = load i64, i64* %17, align 8, !dbg !5191
  %79 = add i64 %78, 1, !dbg !5192
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %76, i8* align 1 %77, i64 %79, i1 false), !dbg !5193
  store i32 0, i32* %12, align 4, !dbg !5194
  br label %109, !dbg !5194

80:                                               ; preds = %69
  %81 = load i32, i32* @x.83
  %82 = load i32, i32* @y.84
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %80, %originalBB10alteredBB
  %89 = load i64, i64* %15, align 8, !dbg !5195
  %90 = icmp ugt i64 %89, 0, !dbg !5198
  %91 = load i32, i32* @x.83
  %92 = load i32, i32* @y.84
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %90, label %99, label %108, !dbg !5199

99:                                               ; preds = %originalBBpart212
  %100 = load i8*, i8** %14, align 8, !dbg !5200
  %101 = load i8*, i8** %16, align 8, !dbg !5202
  %102 = load i64, i64* %15, align 8, !dbg !5203
  %103 = sub i64 %102, 1, !dbg !5204
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %100, i8* align 1 %101, i64 %103, i1 false), !dbg !5205
  %104 = load i8*, i8** %14, align 8, !dbg !5206
  %105 = load i64, i64* %15, align 8, !dbg !5207
  %106 = sub i64 %105, 1, !dbg !5208
  %107 = getelementptr inbounds i8, i8* %104, i64 %106, !dbg !5206
  store i8 0, i8* %107, align 1, !dbg !5209
  br label %108, !dbg !5210

108:                                              ; preds = %99, %originalBBpart212
  store i32 34, i32* %12, align 4, !dbg !5211
  br label %109, !dbg !5211

109:                                              ; preds = %108, %75, %68
  %110 = load i32, i32* @x.83
  %111 = load i32, i32* @y.84
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %109, %originalBB14alteredBB
  %118 = load i32, i32* %12, align 4, !dbg !5212
  %119 = load i32, i32* @x.83
  %120 = load i32, i32* @y.84
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret i32 %118, !dbg !5212

originalBBalteredBB:                              ; preds = %originalBB, %3
  %127 = alloca i32, align 4
  %128 = alloca i32, align 4
  %129 = alloca i8*, align 8
  %130 = alloca i64, align 8
  %131 = alloca i8*, align 8
  %132 = alloca i64, align 8
  store i32 %0, i32* %128, align 4
  call void @llvm.dbg.declare(metadata i32* %128, metadata !5213, metadata !DIExpression()), !dbg !5157
  store i8* %1, i8** %129, align 8
  call void @llvm.dbg.declare(metadata i8** %129, metadata !5216, metadata !DIExpression()), !dbg !5159
  store i64 %2, i64* %130, align 8
  call void @llvm.dbg.declare(metadata i64* %130, metadata !5217, metadata !DIExpression()), !dbg !5161
  call void @llvm.dbg.declare(metadata i8** %131, metadata !5218, metadata !DIExpression()), !dbg !5163
  %133 = load i32, i32* %128, align 4, !dbg !5164
  %134 = call i8* @setlocale_null_androidfix(i32 %133), !dbg !5165
  store i8* %134, i8** %131, align 8, !dbg !5163
  %135 = load i8*, i8** %131, align 8, !dbg !5166
  %136 = icmp eq i8* %135, null, !dbg !5168
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %137 = load i64, i64* %15, align 8, !dbg !5170
  %138 = icmp ugt i64 %137, 0, !dbg !5173
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  %139 = load i8*, i8** %14, align 8, !dbg !5175
  %140 = getelementptr inbounds i8, i8* %139, i64 0, !dbg !5175
  store i8 0, i8* %140, align 1, !dbg !5176
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %80
  %141 = load i64, i64* %15, align 8, !dbg !5195
  %142 = icmp ugt i64 %141, 0, !dbg !5198
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %109
  %143 = load i32, i32* %12, align 4, !dbg !5212
  br label %originalBB14
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @setlocale_null_androidfix(i32) #4 !dbg !5219 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5222, metadata !DIExpression()), !dbg !5223
  call void @llvm.dbg.declare(metadata i8** %3, metadata !5224, metadata !DIExpression()), !dbg !5225
  %4 = load i32, i32* %2, align 4, !dbg !5226
  %5 = call i8* @setlocale(i32 %4, i8* null) #10, !dbg !5227
  store i8* %5, i8** %3, align 8, !dbg !5225
  %6 = load i8*, i8** %3, align 8, !dbg !5228
  ret i8* %6, !dbg !5229
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_arn(%struct._IO_FILE*, i8*, i8*, i8*, i8**, i64) #4 !dbg !5230 {
  %7 = load i32, i32* @x.87
  %8 = load i32, i32* @y.88
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = alloca %struct._IO_FILE*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8**, align 8
  %20 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %15, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %15, metadata !5284, metadata !DIExpression()), !dbg !5285
  store i8* %1, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !5286, metadata !DIExpression()), !dbg !5287
  store i8* %2, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !5288, metadata !DIExpression()), !dbg !5289
  store i8* %3, i8** %18, align 8
  call void @llvm.dbg.declare(metadata i8** %18, metadata !5290, metadata !DIExpression()), !dbg !5291
  store i8** %4, i8*** %19, align 8
  call void @llvm.dbg.declare(metadata i8*** %19, metadata !5292, metadata !DIExpression()), !dbg !5293
  store i64 %5, i64* %20, align 8
  call void @llvm.dbg.declare(metadata i64* %20, metadata !5294, metadata !DIExpression()), !dbg !5295
  %21 = load i8*, i8** %16, align 8, !dbg !5296
  %22 = icmp ne i8* %21, null, !dbg !5296
  %23 = load i32, i32* @x.87
  %24 = load i32, i32* @y.88
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %37, !dbg !5298

31:                                               ; preds = %originalBBpart2
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5299
  %33 = load i8*, i8** %16, align 8, !dbg !5300
  %34 = load i8*, i8** %17, align 8, !dbg !5301
  %35 = load i8*, i8** %18, align 8, !dbg !5302
  %36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.137, i64 0, i64 0), i8* %33, i8* %34, i8* %35), !dbg !5303
  br label %42, !dbg !5303

37:                                               ; preds = %originalBBpart2
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5304
  %39 = load i8*, i8** %17, align 8, !dbg !5305
  %40 = load i8*, i8** %18, align 8, !dbg !5306
  %41 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.138, i64 0, i64 0), i8* %39, i8* %40), !dbg !5307
  br label %42

42:                                               ; preds = %37, %31
  %43 = load i32, i32* @x.87
  %44 = load i32, i32* @y.88
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %42, %originalBB1alteredBB
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5308
  %52 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.139, i64 0, i64 0)) #10, !dbg !5309
  %53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %52, i32 2020), !dbg !5310
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5311
  %55 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.140, i64 0, i64 0), %struct._IO_FILE* %54), !dbg !5311
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5312
  %57 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.141, i64 0, i64 0)) #10, !dbg !5313
  %58 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %56, i8* %57, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.142, i64 0, i64 0)), !dbg !5314
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5315
  %60 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.140, i64 0, i64 0), %struct._IO_FILE* %59), !dbg !5315
  %61 = load i64, i64* %20, align 8, !dbg !5316
  %62 = load i32, i32* @x.87
  %63 = load i32, i32* @y.88
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  switch i64 %61, label %370 [
    i64 0, label %70
    i64 1, label %87
    i64 2, label %110
    i64 3, label %120
    i64 4, label %133
    i64 5, label %165
    i64 6, label %200
    i64 7, label %238
    i64 8, label %279
    i64 9, label %323
  ], !dbg !5317

70:                                               ; preds = %originalBBpart24
  %71 = load i32, i32* @x.87
  %72 = load i32, i32* @y.88
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %70, %originalBB6alteredBB
  %79 = load i32, i32* @x.87
  %80 = load i32, i32* @y.88
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %417, !dbg !5318

87:                                               ; preds = %originalBBpart24
  %88 = load i32, i32* @x.87
  %89 = load i32, i32* @y.88
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %87, %originalBB10alteredBB
  %96 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5320
  %97 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.143, i64 0, i64 0)) #10, !dbg !5321
  %98 = load i8**, i8*** %19, align 8, !dbg !5322
  %99 = getelementptr inbounds i8*, i8** %98, i64 0, !dbg !5322
  %100 = load i8*, i8** %99, align 8, !dbg !5322
  %101 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %96, i8* %97, i8* %100), !dbg !5323
  %102 = load i32, i32* @x.87
  %103 = load i32, i32* @y.88
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %417, !dbg !5324

110:                                              ; preds = %originalBBpart24
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5325
  %112 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.144, i64 0, i64 0)) #10, !dbg !5326
  %113 = load i8**, i8*** %19, align 8, !dbg !5327
  %114 = getelementptr inbounds i8*, i8** %113, i64 0, !dbg !5327
  %115 = load i8*, i8** %114, align 8, !dbg !5327
  %116 = load i8**, i8*** %19, align 8, !dbg !5328
  %117 = getelementptr inbounds i8*, i8** %116, i64 1, !dbg !5328
  %118 = load i8*, i8** %117, align 8, !dbg !5328
  %119 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %111, i8* %112, i8* %115, i8* %118), !dbg !5329
  br label %417, !dbg !5330

120:                                              ; preds = %originalBBpart24
  %121 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5331
  %122 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.145, i64 0, i64 0)) #10, !dbg !5332
  %123 = load i8**, i8*** %19, align 8, !dbg !5333
  %124 = getelementptr inbounds i8*, i8** %123, i64 0, !dbg !5333
  %125 = load i8*, i8** %124, align 8, !dbg !5333
  %126 = load i8**, i8*** %19, align 8, !dbg !5334
  %127 = getelementptr inbounds i8*, i8** %126, i64 1, !dbg !5334
  %128 = load i8*, i8** %127, align 8, !dbg !5334
  %129 = load i8**, i8*** %19, align 8, !dbg !5335
  %130 = getelementptr inbounds i8*, i8** %129, i64 2, !dbg !5335
  %131 = load i8*, i8** %130, align 8, !dbg !5335
  %132 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %121, i8* %122, i8* %125, i8* %128, i8* %131), !dbg !5336
  br label %417, !dbg !5337

133:                                              ; preds = %originalBBpart24
  %134 = load i32, i32* @x.87
  %135 = load i32, i32* @y.88
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %133, %originalBB14alteredBB
  %142 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5338
  %143 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.146, i64 0, i64 0)) #10, !dbg !5339
  %144 = load i8**, i8*** %19, align 8, !dbg !5340
  %145 = getelementptr inbounds i8*, i8** %144, i64 0, !dbg !5340
  %146 = load i8*, i8** %145, align 8, !dbg !5340
  %147 = load i8**, i8*** %19, align 8, !dbg !5341
  %148 = getelementptr inbounds i8*, i8** %147, i64 1, !dbg !5341
  %149 = load i8*, i8** %148, align 8, !dbg !5341
  %150 = load i8**, i8*** %19, align 8, !dbg !5342
  %151 = getelementptr inbounds i8*, i8** %150, i64 2, !dbg !5342
  %152 = load i8*, i8** %151, align 8, !dbg !5342
  %153 = load i8**, i8*** %19, align 8, !dbg !5343
  %154 = getelementptr inbounds i8*, i8** %153, i64 3, !dbg !5343
  %155 = load i8*, i8** %154, align 8, !dbg !5343
  %156 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %142, i8* %143, i8* %146, i8* %149, i8* %152, i8* %155), !dbg !5344
  %157 = load i32, i32* @x.87
  %158 = load i32, i32* @y.88
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %417, !dbg !5345

165:                                              ; preds = %originalBBpart24
  %166 = load i32, i32* @x.87
  %167 = load i32, i32* @y.88
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %165, %originalBB18alteredBB
  %174 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5346
  %175 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.147, i64 0, i64 0)) #10, !dbg !5347
  %176 = load i8**, i8*** %19, align 8, !dbg !5348
  %177 = getelementptr inbounds i8*, i8** %176, i64 0, !dbg !5348
  %178 = load i8*, i8** %177, align 8, !dbg !5348
  %179 = load i8**, i8*** %19, align 8, !dbg !5349
  %180 = getelementptr inbounds i8*, i8** %179, i64 1, !dbg !5349
  %181 = load i8*, i8** %180, align 8, !dbg !5349
  %182 = load i8**, i8*** %19, align 8, !dbg !5350
  %183 = getelementptr inbounds i8*, i8** %182, i64 2, !dbg !5350
  %184 = load i8*, i8** %183, align 8, !dbg !5350
  %185 = load i8**, i8*** %19, align 8, !dbg !5351
  %186 = getelementptr inbounds i8*, i8** %185, i64 3, !dbg !5351
  %187 = load i8*, i8** %186, align 8, !dbg !5351
  %188 = load i8**, i8*** %19, align 8, !dbg !5352
  %189 = getelementptr inbounds i8*, i8** %188, i64 4, !dbg !5352
  %190 = load i8*, i8** %189, align 8, !dbg !5352
  %191 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %174, i8* %175, i8* %178, i8* %181, i8* %184, i8* %187, i8* %190), !dbg !5353
  %192 = load i32, i32* @x.87
  %193 = load i32, i32* @y.88
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %417, !dbg !5354

200:                                              ; preds = %originalBBpart24
  %201 = load i32, i32* @x.87
  %202 = load i32, i32* @y.88
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %200, %originalBB22alteredBB
  %209 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5355
  %210 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.148, i64 0, i64 0)) #10, !dbg !5356
  %211 = load i8**, i8*** %19, align 8, !dbg !5357
  %212 = getelementptr inbounds i8*, i8** %211, i64 0, !dbg !5357
  %213 = load i8*, i8** %212, align 8, !dbg !5357
  %214 = load i8**, i8*** %19, align 8, !dbg !5358
  %215 = getelementptr inbounds i8*, i8** %214, i64 1, !dbg !5358
  %216 = load i8*, i8** %215, align 8, !dbg !5358
  %217 = load i8**, i8*** %19, align 8, !dbg !5359
  %218 = getelementptr inbounds i8*, i8** %217, i64 2, !dbg !5359
  %219 = load i8*, i8** %218, align 8, !dbg !5359
  %220 = load i8**, i8*** %19, align 8, !dbg !5360
  %221 = getelementptr inbounds i8*, i8** %220, i64 3, !dbg !5360
  %222 = load i8*, i8** %221, align 8, !dbg !5360
  %223 = load i8**, i8*** %19, align 8, !dbg !5361
  %224 = getelementptr inbounds i8*, i8** %223, i64 4, !dbg !5361
  %225 = load i8*, i8** %224, align 8, !dbg !5361
  %226 = load i8**, i8*** %19, align 8, !dbg !5362
  %227 = getelementptr inbounds i8*, i8** %226, i64 5, !dbg !5362
  %228 = load i8*, i8** %227, align 8, !dbg !5362
  %229 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %209, i8* %210, i8* %213, i8* %216, i8* %219, i8* %222, i8* %225, i8* %228), !dbg !5363
  %230 = load i32, i32* @x.87
  %231 = load i32, i32* @y.88
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %417, !dbg !5364

238:                                              ; preds = %originalBBpart24
  %239 = load i32, i32* @x.87
  %240 = load i32, i32* @y.88
  %241 = sub i32 %239, 1
  %242 = mul i32 %239, %241
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %244, %245
  br i1 %246, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %238, %originalBB26alteredBB
  %247 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5365
  %248 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.149, i64 0, i64 0)) #10, !dbg !5366
  %249 = load i8**, i8*** %19, align 8, !dbg !5367
  %250 = getelementptr inbounds i8*, i8** %249, i64 0, !dbg !5367
  %251 = load i8*, i8** %250, align 8, !dbg !5367
  %252 = load i8**, i8*** %19, align 8, !dbg !5368
  %253 = getelementptr inbounds i8*, i8** %252, i64 1, !dbg !5368
  %254 = load i8*, i8** %253, align 8, !dbg !5368
  %255 = load i8**, i8*** %19, align 8, !dbg !5369
  %256 = getelementptr inbounds i8*, i8** %255, i64 2, !dbg !5369
  %257 = load i8*, i8** %256, align 8, !dbg !5369
  %258 = load i8**, i8*** %19, align 8, !dbg !5370
  %259 = getelementptr inbounds i8*, i8** %258, i64 3, !dbg !5370
  %260 = load i8*, i8** %259, align 8, !dbg !5370
  %261 = load i8**, i8*** %19, align 8, !dbg !5371
  %262 = getelementptr inbounds i8*, i8** %261, i64 4, !dbg !5371
  %263 = load i8*, i8** %262, align 8, !dbg !5371
  %264 = load i8**, i8*** %19, align 8, !dbg !5372
  %265 = getelementptr inbounds i8*, i8** %264, i64 5, !dbg !5372
  %266 = load i8*, i8** %265, align 8, !dbg !5372
  %267 = load i8**, i8*** %19, align 8, !dbg !5373
  %268 = getelementptr inbounds i8*, i8** %267, i64 6, !dbg !5373
  %269 = load i8*, i8** %268, align 8, !dbg !5373
  %270 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %247, i8* %248, i8* %251, i8* %254, i8* %257, i8* %260, i8* %263, i8* %266, i8* %269), !dbg !5374
  %271 = load i32, i32* @x.87
  %272 = load i32, i32* @y.88
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %417, !dbg !5375

279:                                              ; preds = %originalBBpart24
  %280 = load i32, i32* @x.87
  %281 = load i32, i32* @y.88
  %282 = sub i32 %280, 1
  %283 = mul i32 %280, %282
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %285, %286
  br i1 %287, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %279, %originalBB30alteredBB
  %288 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5376
  %289 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.150, i64 0, i64 0)) #10, !dbg !5377
  %290 = load i8**, i8*** %19, align 8, !dbg !5378
  %291 = getelementptr inbounds i8*, i8** %290, i64 0, !dbg !5378
  %292 = load i8*, i8** %291, align 8, !dbg !5378
  %293 = load i8**, i8*** %19, align 8, !dbg !5379
  %294 = getelementptr inbounds i8*, i8** %293, i64 1, !dbg !5379
  %295 = load i8*, i8** %294, align 8, !dbg !5379
  %296 = load i8**, i8*** %19, align 8, !dbg !5380
  %297 = getelementptr inbounds i8*, i8** %296, i64 2, !dbg !5380
  %298 = load i8*, i8** %297, align 8, !dbg !5380
  %299 = load i8**, i8*** %19, align 8, !dbg !5381
  %300 = getelementptr inbounds i8*, i8** %299, i64 3, !dbg !5381
  %301 = load i8*, i8** %300, align 8, !dbg !5381
  %302 = load i8**, i8*** %19, align 8, !dbg !5382
  %303 = getelementptr inbounds i8*, i8** %302, i64 4, !dbg !5382
  %304 = load i8*, i8** %303, align 8, !dbg !5382
  %305 = load i8**, i8*** %19, align 8, !dbg !5383
  %306 = getelementptr inbounds i8*, i8** %305, i64 5, !dbg !5383
  %307 = load i8*, i8** %306, align 8, !dbg !5383
  %308 = load i8**, i8*** %19, align 8, !dbg !5384
  %309 = getelementptr inbounds i8*, i8** %308, i64 6, !dbg !5384
  %310 = load i8*, i8** %309, align 8, !dbg !5384
  %311 = load i8**, i8*** %19, align 8, !dbg !5385
  %312 = getelementptr inbounds i8*, i8** %311, i64 7, !dbg !5385
  %313 = load i8*, i8** %312, align 8, !dbg !5385
  %314 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %288, i8* %289, i8* %292, i8* %295, i8* %298, i8* %301, i8* %304, i8* %307, i8* %310, i8* %313), !dbg !5386
  %315 = load i32, i32* @x.87
  %316 = load i32, i32* @y.88
  %317 = sub i32 %315, 1
  %318 = mul i32 %315, %317
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %320, %321
  br i1 %322, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %417, !dbg !5387

323:                                              ; preds = %originalBBpart24
  %324 = load i32, i32* @x.87
  %325 = load i32, i32* @y.88
  %326 = sub i32 %324, 1
  %327 = mul i32 %324, %326
  %328 = urem i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %329, %330
  br i1 %331, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %323, %originalBB34alteredBB
  %332 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5388
  %333 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.151, i64 0, i64 0)) #10, !dbg !5389
  %334 = load i8**, i8*** %19, align 8, !dbg !5390
  %335 = getelementptr inbounds i8*, i8** %334, i64 0, !dbg !5390
  %336 = load i8*, i8** %335, align 8, !dbg !5390
  %337 = load i8**, i8*** %19, align 8, !dbg !5391
  %338 = getelementptr inbounds i8*, i8** %337, i64 1, !dbg !5391
  %339 = load i8*, i8** %338, align 8, !dbg !5391
  %340 = load i8**, i8*** %19, align 8, !dbg !5392
  %341 = getelementptr inbounds i8*, i8** %340, i64 2, !dbg !5392
  %342 = load i8*, i8** %341, align 8, !dbg !5392
  %343 = load i8**, i8*** %19, align 8, !dbg !5393
  %344 = getelementptr inbounds i8*, i8** %343, i64 3, !dbg !5393
  %345 = load i8*, i8** %344, align 8, !dbg !5393
  %346 = load i8**, i8*** %19, align 8, !dbg !5394
  %347 = getelementptr inbounds i8*, i8** %346, i64 4, !dbg !5394
  %348 = load i8*, i8** %347, align 8, !dbg !5394
  %349 = load i8**, i8*** %19, align 8, !dbg !5395
  %350 = getelementptr inbounds i8*, i8** %349, i64 5, !dbg !5395
  %351 = load i8*, i8** %350, align 8, !dbg !5395
  %352 = load i8**, i8*** %19, align 8, !dbg !5396
  %353 = getelementptr inbounds i8*, i8** %352, i64 6, !dbg !5396
  %354 = load i8*, i8** %353, align 8, !dbg !5396
  %355 = load i8**, i8*** %19, align 8, !dbg !5397
  %356 = getelementptr inbounds i8*, i8** %355, i64 7, !dbg !5397
  %357 = load i8*, i8** %356, align 8, !dbg !5397
  %358 = load i8**, i8*** %19, align 8, !dbg !5398
  %359 = getelementptr inbounds i8*, i8** %358, i64 8, !dbg !5398
  %360 = load i8*, i8** %359, align 8, !dbg !5398
  %361 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %332, i8* %333, i8* %336, i8* %339, i8* %342, i8* %345, i8* %348, i8* %351, i8* %354, i8* %357, i8* %360), !dbg !5399
  %362 = load i32, i32* @x.87
  %363 = load i32, i32* @y.88
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %417, !dbg !5400

370:                                              ; preds = %originalBBpart24
  %371 = load i32, i32* @x.87
  %372 = load i32, i32* @y.88
  %373 = sub i32 %371, 1
  %374 = mul i32 %371, %373
  %375 = urem i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %372, 10
  %378 = or i1 %376, %377
  br i1 %378, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %370, %originalBB38alteredBB
  %379 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5401
  %380 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.152, i64 0, i64 0)) #10, !dbg !5402
  %381 = load i8**, i8*** %19, align 8, !dbg !5403
  %382 = getelementptr inbounds i8*, i8** %381, i64 0, !dbg !5403
  %383 = load i8*, i8** %382, align 8, !dbg !5403
  %384 = load i8**, i8*** %19, align 8, !dbg !5404
  %385 = getelementptr inbounds i8*, i8** %384, i64 1, !dbg !5404
  %386 = load i8*, i8** %385, align 8, !dbg !5404
  %387 = load i8**, i8*** %19, align 8, !dbg !5405
  %388 = getelementptr inbounds i8*, i8** %387, i64 2, !dbg !5405
  %389 = load i8*, i8** %388, align 8, !dbg !5405
  %390 = load i8**, i8*** %19, align 8, !dbg !5406
  %391 = getelementptr inbounds i8*, i8** %390, i64 3, !dbg !5406
  %392 = load i8*, i8** %391, align 8, !dbg !5406
  %393 = load i8**, i8*** %19, align 8, !dbg !5407
  %394 = getelementptr inbounds i8*, i8** %393, i64 4, !dbg !5407
  %395 = load i8*, i8** %394, align 8, !dbg !5407
  %396 = load i8**, i8*** %19, align 8, !dbg !5408
  %397 = getelementptr inbounds i8*, i8** %396, i64 5, !dbg !5408
  %398 = load i8*, i8** %397, align 8, !dbg !5408
  %399 = load i8**, i8*** %19, align 8, !dbg !5409
  %400 = getelementptr inbounds i8*, i8** %399, i64 6, !dbg !5409
  %401 = load i8*, i8** %400, align 8, !dbg !5409
  %402 = load i8**, i8*** %19, align 8, !dbg !5410
  %403 = getelementptr inbounds i8*, i8** %402, i64 7, !dbg !5410
  %404 = load i8*, i8** %403, align 8, !dbg !5410
  %405 = load i8**, i8*** %19, align 8, !dbg !5411
  %406 = getelementptr inbounds i8*, i8** %405, i64 8, !dbg !5411
  %407 = load i8*, i8** %406, align 8, !dbg !5411
  %408 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %379, i8* %380, i8* %383, i8* %386, i8* %389, i8* %392, i8* %395, i8* %398, i8* %401, i8* %404, i8* %407), !dbg !5412
  %409 = load i32, i32* @x.87
  %410 = load i32, i32* @y.88
  %411 = sub i32 %409, 1
  %412 = mul i32 %409, %411
  %413 = urem i32 %412, 2
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %410, 10
  %416 = or i1 %414, %415
  br i1 %416, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %417, !dbg !5413

417:                                              ; preds = %originalBBpart240, %originalBBpart236, %originalBBpart232, %originalBBpart228, %originalBBpart224, %originalBBpart220, %originalBBpart216, %120, %110, %originalBBpart212, %originalBBpart28
  %418 = load i32, i32* @x.87
  %419 = load i32, i32* @y.88
  %420 = sub i32 %418, 1
  %421 = mul i32 %418, %420
  %422 = urem i32 %421, 2
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %419, 10
  %425 = or i1 %423, %424
  br i1 %425, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %417, %originalBB42alteredBB
  %426 = load i32, i32* @x.87
  %427 = load i32, i32* @y.88
  %428 = sub i32 %426, 1
  %429 = mul i32 %426, %428
  %430 = urem i32 %429, 2
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %427, 10
  %433 = or i1 %431, %432
  br i1 %433, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  ret void, !dbg !5414

originalBBalteredBB:                              ; preds = %originalBB, %6
  %434 = alloca %struct._IO_FILE*, align 8
  %435 = alloca i8*, align 8
  %436 = alloca i8*, align 8
  %437 = alloca i8*, align 8
  %438 = alloca i8**, align 8
  %439 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %434, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %434, metadata !5415, metadata !DIExpression()), !dbg !5285
  store i8* %1, i8** %435, align 8
  call void @llvm.dbg.declare(metadata i8** %435, metadata !5454, metadata !DIExpression()), !dbg !5287
  store i8* %2, i8** %436, align 8
  call void @llvm.dbg.declare(metadata i8** %436, metadata !5455, metadata !DIExpression()), !dbg !5289
  store i8* %3, i8** %437, align 8
  call void @llvm.dbg.declare(metadata i8** %437, metadata !5456, metadata !DIExpression()), !dbg !5291
  store i8** %4, i8*** %438, align 8
  call void @llvm.dbg.declare(metadata i8*** %438, metadata !5457, metadata !DIExpression()), !dbg !5293
  store i64 %5, i64* %439, align 8
  call void @llvm.dbg.declare(metadata i64* %439, metadata !5458, metadata !DIExpression()), !dbg !5295
  %440 = load i8*, i8** %435, align 8, !dbg !5296
  %441 = icmp ne i8* %440, null, !dbg !5296
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  %442 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5308
  %443 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.139, i64 0, i64 0)) #10, !dbg !5309
  %444 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %442, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %443, i32 2020), !dbg !5310
  %445 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5311
  %446 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.140, i64 0, i64 0), %struct._IO_FILE* %445), !dbg !5311
  %447 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5312
  %448 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.141, i64 0, i64 0)) #10, !dbg !5313
  %449 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %447, i8* %448, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.142, i64 0, i64 0)), !dbg !5314
  %450 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5315
  %451 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.140, i64 0, i64 0), %struct._IO_FILE* %450), !dbg !5315
  %452 = load i64, i64* %20, align 8, !dbg !5316
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %70
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %87
  %453 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5320
  %454 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.143, i64 0, i64 0)) #10, !dbg !5321
  %455 = load i8**, i8*** %19, align 8, !dbg !5322
  %456 = getelementptr inbounds i8*, i8** %455, i64 0, !dbg !5322
  %457 = load i8*, i8** %456, align 8, !dbg !5322
  %458 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %453, i8* %454, i8* %457), !dbg !5323
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %133
  %459 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5338
  %460 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.146, i64 0, i64 0)) #10, !dbg !5339
  %461 = load i8**, i8*** %19, align 8, !dbg !5340
  %462 = getelementptr inbounds i8*, i8** %461, i64 0, !dbg !5340
  %463 = load i8*, i8** %462, align 8, !dbg !5340
  %464 = load i8**, i8*** %19, align 8, !dbg !5341
  %465 = getelementptr inbounds i8*, i8** %464, i64 1, !dbg !5341
  %466 = load i8*, i8** %465, align 8, !dbg !5341
  %467 = load i8**, i8*** %19, align 8, !dbg !5342
  %468 = getelementptr inbounds i8*, i8** %467, i64 2, !dbg !5342
  %469 = load i8*, i8** %468, align 8, !dbg !5342
  %470 = load i8**, i8*** %19, align 8, !dbg !5343
  %471 = getelementptr inbounds i8*, i8** %470, i64 3, !dbg !5343
  %472 = load i8*, i8** %471, align 8, !dbg !5343
  %473 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %459, i8* %460, i8* %463, i8* %466, i8* %469, i8* %472), !dbg !5344
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %165
  %474 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5346
  %475 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.147, i64 0, i64 0)) #10, !dbg !5347
  %476 = load i8**, i8*** %19, align 8, !dbg !5348
  %477 = getelementptr inbounds i8*, i8** %476, i64 0, !dbg !5348
  %478 = load i8*, i8** %477, align 8, !dbg !5348
  %479 = load i8**, i8*** %19, align 8, !dbg !5349
  %480 = getelementptr inbounds i8*, i8** %479, i64 1, !dbg !5349
  %481 = load i8*, i8** %480, align 8, !dbg !5349
  %482 = load i8**, i8*** %19, align 8, !dbg !5350
  %483 = getelementptr inbounds i8*, i8** %482, i64 2, !dbg !5350
  %484 = load i8*, i8** %483, align 8, !dbg !5350
  %485 = load i8**, i8*** %19, align 8, !dbg !5351
  %486 = getelementptr inbounds i8*, i8** %485, i64 3, !dbg !5351
  %487 = load i8*, i8** %486, align 8, !dbg !5351
  %488 = load i8**, i8*** %19, align 8, !dbg !5352
  %489 = getelementptr inbounds i8*, i8** %488, i64 4, !dbg !5352
  %490 = load i8*, i8** %489, align 8, !dbg !5352
  %491 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %474, i8* %475, i8* %478, i8* %481, i8* %484, i8* %487, i8* %490), !dbg !5353
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %200
  %492 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5355
  %493 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.148, i64 0, i64 0)) #10, !dbg !5356
  %494 = load i8**, i8*** %19, align 8, !dbg !5357
  %495 = getelementptr inbounds i8*, i8** %494, i64 0, !dbg !5357
  %496 = load i8*, i8** %495, align 8, !dbg !5357
  %497 = load i8**, i8*** %19, align 8, !dbg !5358
  %498 = getelementptr inbounds i8*, i8** %497, i64 1, !dbg !5358
  %499 = load i8*, i8** %498, align 8, !dbg !5358
  %500 = load i8**, i8*** %19, align 8, !dbg !5359
  %501 = getelementptr inbounds i8*, i8** %500, i64 2, !dbg !5359
  %502 = load i8*, i8** %501, align 8, !dbg !5359
  %503 = load i8**, i8*** %19, align 8, !dbg !5360
  %504 = getelementptr inbounds i8*, i8** %503, i64 3, !dbg !5360
  %505 = load i8*, i8** %504, align 8, !dbg !5360
  %506 = load i8**, i8*** %19, align 8, !dbg !5361
  %507 = getelementptr inbounds i8*, i8** %506, i64 4, !dbg !5361
  %508 = load i8*, i8** %507, align 8, !dbg !5361
  %509 = load i8**, i8*** %19, align 8, !dbg !5362
  %510 = getelementptr inbounds i8*, i8** %509, i64 5, !dbg !5362
  %511 = load i8*, i8** %510, align 8, !dbg !5362
  %512 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %492, i8* %493, i8* %496, i8* %499, i8* %502, i8* %505, i8* %508, i8* %511), !dbg !5363
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %238
  %513 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5365
  %514 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.149, i64 0, i64 0)) #10, !dbg !5366
  %515 = load i8**, i8*** %19, align 8, !dbg !5367
  %516 = getelementptr inbounds i8*, i8** %515, i64 0, !dbg !5367
  %517 = load i8*, i8** %516, align 8, !dbg !5367
  %518 = load i8**, i8*** %19, align 8, !dbg !5368
  %519 = getelementptr inbounds i8*, i8** %518, i64 1, !dbg !5368
  %520 = load i8*, i8** %519, align 8, !dbg !5368
  %521 = load i8**, i8*** %19, align 8, !dbg !5369
  %522 = getelementptr inbounds i8*, i8** %521, i64 2, !dbg !5369
  %523 = load i8*, i8** %522, align 8, !dbg !5369
  %524 = load i8**, i8*** %19, align 8, !dbg !5370
  %525 = getelementptr inbounds i8*, i8** %524, i64 3, !dbg !5370
  %526 = load i8*, i8** %525, align 8, !dbg !5370
  %527 = load i8**, i8*** %19, align 8, !dbg !5371
  %528 = getelementptr inbounds i8*, i8** %527, i64 4, !dbg !5371
  %529 = load i8*, i8** %528, align 8, !dbg !5371
  %530 = load i8**, i8*** %19, align 8, !dbg !5372
  %531 = getelementptr inbounds i8*, i8** %530, i64 5, !dbg !5372
  %532 = load i8*, i8** %531, align 8, !dbg !5372
  %533 = load i8**, i8*** %19, align 8, !dbg !5373
  %534 = getelementptr inbounds i8*, i8** %533, i64 6, !dbg !5373
  %535 = load i8*, i8** %534, align 8, !dbg !5373
  %536 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %513, i8* %514, i8* %517, i8* %520, i8* %523, i8* %526, i8* %529, i8* %532, i8* %535), !dbg !5374
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %279
  %537 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5376
  %538 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.150, i64 0, i64 0)) #10, !dbg !5377
  %539 = load i8**, i8*** %19, align 8, !dbg !5378
  %540 = getelementptr inbounds i8*, i8** %539, i64 0, !dbg !5378
  %541 = load i8*, i8** %540, align 8, !dbg !5378
  %542 = load i8**, i8*** %19, align 8, !dbg !5379
  %543 = getelementptr inbounds i8*, i8** %542, i64 1, !dbg !5379
  %544 = load i8*, i8** %543, align 8, !dbg !5379
  %545 = load i8**, i8*** %19, align 8, !dbg !5380
  %546 = getelementptr inbounds i8*, i8** %545, i64 2, !dbg !5380
  %547 = load i8*, i8** %546, align 8, !dbg !5380
  %548 = load i8**, i8*** %19, align 8, !dbg !5381
  %549 = getelementptr inbounds i8*, i8** %548, i64 3, !dbg !5381
  %550 = load i8*, i8** %549, align 8, !dbg !5381
  %551 = load i8**, i8*** %19, align 8, !dbg !5382
  %552 = getelementptr inbounds i8*, i8** %551, i64 4, !dbg !5382
  %553 = load i8*, i8** %552, align 8, !dbg !5382
  %554 = load i8**, i8*** %19, align 8, !dbg !5383
  %555 = getelementptr inbounds i8*, i8** %554, i64 5, !dbg !5383
  %556 = load i8*, i8** %555, align 8, !dbg !5383
  %557 = load i8**, i8*** %19, align 8, !dbg !5384
  %558 = getelementptr inbounds i8*, i8** %557, i64 6, !dbg !5384
  %559 = load i8*, i8** %558, align 8, !dbg !5384
  %560 = load i8**, i8*** %19, align 8, !dbg !5385
  %561 = getelementptr inbounds i8*, i8** %560, i64 7, !dbg !5385
  %562 = load i8*, i8** %561, align 8, !dbg !5385
  %563 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %537, i8* %538, i8* %541, i8* %544, i8* %547, i8* %550, i8* %553, i8* %556, i8* %559, i8* %562), !dbg !5386
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %323
  %564 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5388
  %565 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.151, i64 0, i64 0)) #10, !dbg !5389
  %566 = load i8**, i8*** %19, align 8, !dbg !5390
  %567 = getelementptr inbounds i8*, i8** %566, i64 0, !dbg !5390
  %568 = load i8*, i8** %567, align 8, !dbg !5390
  %569 = load i8**, i8*** %19, align 8, !dbg !5391
  %570 = getelementptr inbounds i8*, i8** %569, i64 1, !dbg !5391
  %571 = load i8*, i8** %570, align 8, !dbg !5391
  %572 = load i8**, i8*** %19, align 8, !dbg !5392
  %573 = getelementptr inbounds i8*, i8** %572, i64 2, !dbg !5392
  %574 = load i8*, i8** %573, align 8, !dbg !5392
  %575 = load i8**, i8*** %19, align 8, !dbg !5393
  %576 = getelementptr inbounds i8*, i8** %575, i64 3, !dbg !5393
  %577 = load i8*, i8** %576, align 8, !dbg !5393
  %578 = load i8**, i8*** %19, align 8, !dbg !5394
  %579 = getelementptr inbounds i8*, i8** %578, i64 4, !dbg !5394
  %580 = load i8*, i8** %579, align 8, !dbg !5394
  %581 = load i8**, i8*** %19, align 8, !dbg !5395
  %582 = getelementptr inbounds i8*, i8** %581, i64 5, !dbg !5395
  %583 = load i8*, i8** %582, align 8, !dbg !5395
  %584 = load i8**, i8*** %19, align 8, !dbg !5396
  %585 = getelementptr inbounds i8*, i8** %584, i64 6, !dbg !5396
  %586 = load i8*, i8** %585, align 8, !dbg !5396
  %587 = load i8**, i8*** %19, align 8, !dbg !5397
  %588 = getelementptr inbounds i8*, i8** %587, i64 7, !dbg !5397
  %589 = load i8*, i8** %588, align 8, !dbg !5397
  %590 = load i8**, i8*** %19, align 8, !dbg !5398
  %591 = getelementptr inbounds i8*, i8** %590, i64 8, !dbg !5398
  %592 = load i8*, i8** %591, align 8, !dbg !5398
  %593 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %564, i8* %565, i8* %568, i8* %571, i8* %574, i8* %577, i8* %580, i8* %583, i8* %586, i8* %589, i8* %592), !dbg !5399
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %370
  %594 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5401
  %595 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.152, i64 0, i64 0)) #10, !dbg !5402
  %596 = load i8**, i8*** %19, align 8, !dbg !5403
  %597 = getelementptr inbounds i8*, i8** %596, i64 0, !dbg !5403
  %598 = load i8*, i8** %597, align 8, !dbg !5403
  %599 = load i8**, i8*** %19, align 8, !dbg !5404
  %600 = getelementptr inbounds i8*, i8** %599, i64 1, !dbg !5404
  %601 = load i8*, i8** %600, align 8, !dbg !5404
  %602 = load i8**, i8*** %19, align 8, !dbg !5405
  %603 = getelementptr inbounds i8*, i8** %602, i64 2, !dbg !5405
  %604 = load i8*, i8** %603, align 8, !dbg !5405
  %605 = load i8**, i8*** %19, align 8, !dbg !5406
  %606 = getelementptr inbounds i8*, i8** %605, i64 3, !dbg !5406
  %607 = load i8*, i8** %606, align 8, !dbg !5406
  %608 = load i8**, i8*** %19, align 8, !dbg !5407
  %609 = getelementptr inbounds i8*, i8** %608, i64 4, !dbg !5407
  %610 = load i8*, i8** %609, align 8, !dbg !5407
  %611 = load i8**, i8*** %19, align 8, !dbg !5408
  %612 = getelementptr inbounds i8*, i8** %611, i64 5, !dbg !5408
  %613 = load i8*, i8** %612, align 8, !dbg !5408
  %614 = load i8**, i8*** %19, align 8, !dbg !5409
  %615 = getelementptr inbounds i8*, i8** %614, i64 6, !dbg !5409
  %616 = load i8*, i8** %615, align 8, !dbg !5409
  %617 = load i8**, i8*** %19, align 8, !dbg !5410
  %618 = getelementptr inbounds i8*, i8** %617, i64 7, !dbg !5410
  %619 = load i8*, i8** %618, align 8, !dbg !5410
  %620 = load i8**, i8*** %19, align 8, !dbg !5411
  %621 = getelementptr inbounds i8*, i8** %620, i64 8, !dbg !5411
  %622 = load i8*, i8** %621, align 8, !dbg !5411
  %623 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %594, i8* %595, i8* %598, i8* %601, i8* %604, i8* %607, i8* %610, i8* %613, i8* %616, i8* %619, i8* %622), !dbg !5412
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %417
  br label %originalBB42
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_va(%struct._IO_FILE*, i8*, i8*, i8*, %struct.__va_list_tag*) #4 !dbg !5459 {
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.__va_list_tag*, align 8
  %11 = alloca i64, align 8
  %12 = alloca [10 x i8*], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !5469, metadata !DIExpression()), !dbg !5470
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5471, metadata !DIExpression()), !dbg !5472
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !5473, metadata !DIExpression()), !dbg !5474
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !5475, metadata !DIExpression()), !dbg !5476
  store %struct.__va_list_tag* %4, %struct.__va_list_tag** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %10, metadata !5477, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.declare(metadata i64* %11, metadata !5479, metadata !DIExpression()), !dbg !5480
  call void @llvm.dbg.declare(metadata [10 x i8*]* %12, metadata !5481, metadata !DIExpression()), !dbg !5483
  store i64 0, i64* %11, align 8, !dbg !5484
  br label %13, !dbg !5486

13:                                               ; preds = %originalBBpart229, %5
  %14 = load i32, i32* @x.89
  %15 = load i32, i32* @y.90
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  %22 = load i64, i64* %11, align 8, !dbg !5487
  %23 = icmp ult i64 %22, 10, !dbg !5489
  %24 = load i32, i32* @x.89
  %25 = load i32, i32* @y.90
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %118, !dbg !5490

32:                                               ; preds = %originalBBpart2
  %33 = load i32, i32* @x.89
  %34 = load i32, i32* @y.90
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load %struct.__va_list_tag*, %struct.__va_list_tag** %10, align 8, !dbg !5491
  %42 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %41, i32 0, i32 0, !dbg !5491
  %43 = load i32, i32* %42, align 8, !dbg !5491
  %44 = icmp ule i32 %43, 40, !dbg !5491
  %45 = load i32, i32* @x.89
  %46 = load i32, i32* @y.90
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %44, label %53, label %75, !dbg !5491

53:                                               ; preds = %originalBBpart24
  %54 = load i32, i32* @x.89
  %55 = load i32, i32* @y.90
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %53, %originalBB6alteredBB
  %62 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %41, i32 0, i32 3, !dbg !5491
  %63 = load i8*, i8** %62, align 8, !dbg !5491
  %64 = getelementptr i8, i8* %63, i32 %43, !dbg !5491
  %65 = bitcast i8* %64 to i8**, !dbg !5491
  %66 = add i32 %43, 8, !dbg !5491
  store i32 %66, i32* %42, align 8, !dbg !5491
  %67 = load i32, i32* @x.89
  %68 = load i32, i32* @y.90
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %96, !dbg !5491

75:                                               ; preds = %originalBBpart24
  %76 = load i32, i32* @x.89
  %77 = load i32, i32* @y.90
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %75, %originalBB10alteredBB
  %84 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %41, i32 0, i32 2, !dbg !5491
  %85 = load i8*, i8** %84, align 8, !dbg !5491
  %86 = bitcast i8* %85 to i8**, !dbg !5491
  %87 = getelementptr i8, i8* %85, i32 8, !dbg !5491
  store i8* %87, i8** %84, align 8, !dbg !5491
  %88 = load i32, i32* @x.89
  %89 = load i32, i32* @y.90
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %96, !dbg !5491

96:                                               ; preds = %originalBBpart212, %originalBBpart28
  %97 = phi i8** [ %65, %originalBBpart28 ], [ %86, %originalBBpart212 ], !dbg !5491
  %98 = load i32, i32* @x.89
  %99 = load i32, i32* @y.90
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %96, %originalBB14alteredBB
  %106 = load i8*, i8** %97, align 8, !dbg !5491
  %107 = load i64, i64* %11, align 8, !dbg !5492
  %108 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 %107, !dbg !5493
  store i8* %106, i8** %108, align 8, !dbg !5494
  %109 = icmp ne i8* %106, null, !dbg !5495
  %110 = load i32, i32* @x.89
  %111 = load i32, i32* @y.90
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %118

118:                                              ; preds = %originalBBpart216, %originalBBpart2
  %119 = phi i1 [ false, %originalBBpart2 ], [ %109, %originalBBpart216 ], !dbg !5496
  br i1 %119, label %120, label %140, !dbg !5497

120:                                              ; preds = %118
  br label %121, !dbg !5497

121:                                              ; preds = %120
  %122 = load i32, i32* @x.89
  %123 = load i32, i32* @y.90
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %121, %originalBB18alteredBB
  %130 = load i64, i64* %11, align 8, !dbg !5498
  %131 = add i64 %130, 1, !dbg !5498
  store i64 %131, i64* %11, align 8, !dbg !5498
  %132 = load i32, i32* @x.89
  %133 = load i32, i32* @y.90
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBBpart229, label %originalBB18alteredBB

originalBBpart229:                                ; preds = %originalBB18
  br label %13, !dbg !5499, !llvm.loop !5500

140:                                              ; preds = %118
  %141 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !5502
  %142 = load i8*, i8** %7, align 8, !dbg !5503
  %143 = load i8*, i8** %8, align 8, !dbg !5504
  %144 = load i8*, i8** %9, align 8, !dbg !5505
  %145 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 0, !dbg !5506
  %146 = load i64, i64* %11, align 8, !dbg !5507
  call void @version_etc_arn(%struct._IO_FILE* %141, i8* %142, i8* %143, i8* %144, i8** %145, i64 %146), !dbg !5508
  ret void, !dbg !5509

originalBBalteredBB:                              ; preds = %originalBB, %13
  %147 = load i64, i64* %11, align 8, !dbg !5487
  %148 = icmp ult i64 %147, 10, !dbg !5489
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %149 = load %struct.__va_list_tag*, %struct.__va_list_tag** %10, align 8, !dbg !5491
  %150 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %149, i32 0, i32 0, !dbg !5491
  %151 = load i32, i32* %150, align 8, !dbg !5491
  %152 = icmp ule i32 %151, 40, !dbg !5491
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %53
  %153 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %41, i32 0, i32 3, !dbg !5491
  %154 = load i8*, i8** %153, align 8, !dbg !5491
  %155 = getelementptr i8, i8* %154, i32 %43, !dbg !5491
  %156 = bitcast i8* %155 to i8**, !dbg !5491
  %_ = shl i32 %43, 8
  %157 = add i32 %43, 8, !dbg !5491
  store i32 %157, i32* %42, align 8, !dbg !5491
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %75
  %158 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %41, i32 0, i32 2, !dbg !5491
  %159 = load i8*, i8** %158, align 8, !dbg !5491
  %160 = bitcast i8* %159 to i8**, !dbg !5491
  %161 = getelementptr i8, i8* %159, i32 8, !dbg !5491
  store i8* %161, i8** %158, align 8, !dbg !5491
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %96
  %162 = load i8*, i8** %97, align 8, !dbg !5491
  %163 = load i64, i64* %11, align 8, !dbg !5492
  %164 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 %163, !dbg !5493
  store i8* %162, i8** %164, align 8, !dbg !5494
  %165 = icmp ne i8* %162, null, !dbg !5495
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %121
  %166 = load i64, i64* %11, align 8, !dbg !5498
  %_19 = sub i64 %166, 1
  %gen = mul i64 %_19, 1
  %_20 = shl i64 %166, 1
  %_21 = shl i64 %166, 1
  %_22 = shl i64 %166, 1
  %_23 = sub i64 %166, 1
  %gen24 = mul i64 %_23, 1
  %_25 = shl i64 %166, 1
  %_26 = sub i64 %166, 1
  %gen27 = mul i64 %_26, 1
  %167 = add i64 %166, 1, !dbg !5498
  store i64 %167, i64* %11, align 8, !dbg !5498
  br label %originalBB18
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc(%struct._IO_FILE*, i8*, i8*, i8*, ...) #4 !dbg !5510 {
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %5, metadata !5513, metadata !DIExpression()), !dbg !5514
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !5515, metadata !DIExpression()), !dbg !5516
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5517, metadata !DIExpression()), !dbg !5518
  store i8* %3, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !5519, metadata !DIExpression()), !dbg !5520
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %9, metadata !5521, metadata !DIExpression()), !dbg !5528
  %10 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i64 0, i64 0, !dbg !5529
  %11 = bitcast %struct.__va_list_tag* %10 to i8*, !dbg !5529
  call void @llvm.va_start(i8* %11), !dbg !5529
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !5530
  %13 = load i8*, i8** %6, align 8, !dbg !5531
  %14 = load i8*, i8** %7, align 8, !dbg !5532
  %15 = load i8*, i8** %8, align 8, !dbg !5533
  %16 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i64 0, i64 0, !dbg !5534
  call void @version_etc_va(%struct._IO_FILE* %12, i8* %13, i8* %14, i8* %15, %struct.__va_list_tag* %16), !dbg !5535
  %17 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i64 0, i64 0, !dbg !5536
  %18 = bitcast %struct.__va_list_tag* %17 to i8*, !dbg !5536
  call void @llvm.va_end(i8* %18), !dbg !5536
  ret void, !dbg !5537
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #10

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #10

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xmalloc(i64) #4 !dbg !5538 {
  %2 = load i32, i32* @x.93
  %3 = load i32, i32* @y.94
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  store i64 %0, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !5542, metadata !DIExpression()), !dbg !5543
  call void @llvm.dbg.declare(metadata i8** %11, metadata !5544, metadata !DIExpression()), !dbg !5545
  %12 = load i64, i64* %10, align 8, !dbg !5546
  %13 = call noalias i8* @malloc(i64 %12) #10, !dbg !5547
  store i8* %13, i8** %11, align 8, !dbg !5545
  %14 = load i8*, i8** %11, align 8, !dbg !5548
  %15 = icmp ne i8* %14, null, !dbg !5548
  %16 = load i32, i32* @x.93
  %17 = load i32, i32* @y.94
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %28, label %24, !dbg !5550

24:                                               ; preds = %originalBBpart2
  %25 = load i64, i64* %10, align 8, !dbg !5551
  %26 = icmp ne i64 %25, 0, !dbg !5552
  br i1 %26, label %27, label %28, !dbg !5553

27:                                               ; preds = %24
  call void @xalloc_die() #14, !dbg !5554
  unreachable, !dbg !5554

28:                                               ; preds = %24, %originalBBpart2
  %29 = load i32, i32* @x.93
  %30 = load i32, i32* @y.94
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = load i8*, i8** %11, align 8, !dbg !5555
  %38 = load i32, i32* @x.93
  %39 = load i32, i32* @y.94
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret i8* %37, !dbg !5556

originalBBalteredBB:                              ; preds = %originalBB, %1
  %46 = alloca i64, align 8
  %47 = alloca i8*, align 8
  store i64 %0, i64* %46, align 8
  call void @llvm.dbg.declare(metadata i64* %46, metadata !5557, metadata !DIExpression()), !dbg !5543
  call void @llvm.dbg.declare(metadata i8** %47, metadata !5560, metadata !DIExpression()), !dbg !5545
  %48 = load i64, i64* %46, align 8, !dbg !5546
  %49 = call noalias i8* @malloc(i64 %48) #10, !dbg !5547
  store i8* %49, i8** %47, align 8, !dbg !5545
  %50 = load i8*, i8** %47, align 8, !dbg !5548
  %51 = icmp ne i8* %50, null, !dbg !5548
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %52 = load i8*, i8** %11, align 8, !dbg !5555
  br label %originalBB1
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xrealloc(i8*, i64) #4 !dbg !5561 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5564, metadata !DIExpression()), !dbg !5565
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !5566, metadata !DIExpression()), !dbg !5567
  %6 = load i64, i64* %5, align 8, !dbg !5568
  %7 = icmp ne i64 %6, 0, !dbg !5568
  br i1 %7, label %29, label %8, !dbg !5570

8:                                                ; preds = %2
  %9 = load i8*, i8** %4, align 8, !dbg !5571
  %10 = icmp ne i8* %9, null, !dbg !5571
  br i1 %10, label %11, label %29, !dbg !5572

11:                                               ; preds = %8
  %12 = load i32, i32* @x.95
  %13 = load i32, i32* @y.96
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i8*, i8** %4, align 8, !dbg !5573
  call void @free(i8* %20) #10, !dbg !5575
  store i8* null, i8** %3, align 8, !dbg !5576
  %21 = load i32, i32* @x.95
  %22 = load i32, i32* @y.96
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %89, !dbg !5576

29:                                               ; preds = %8, %2
  %30 = load i32, i32* @x.95
  %31 = load i32, i32* @y.96
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i8*, i8** %4, align 8, !dbg !5577
  %39 = load i64, i64* %5, align 8, !dbg !5578
  %40 = call i8* @realloc(i8* %38, i64 %39) #10, !dbg !5579
  store i8* %40, i8** %4, align 8, !dbg !5580
  %41 = load i8*, i8** %4, align 8, !dbg !5581
  %42 = icmp ne i8* %41, null, !dbg !5581
  %43 = load i32, i32* @x.95
  %44 = load i32, i32* @y.96
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %42, label %71, label %51, !dbg !5583

51:                                               ; preds = %originalBBpart24
  %52 = load i32, i32* @x.95
  %53 = load i32, i32* @y.96
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %51, %originalBB6alteredBB
  %60 = load i64, i64* %5, align 8, !dbg !5584
  %61 = icmp ne i64 %60, 0, !dbg !5584
  %62 = load i32, i32* @x.95
  %63 = load i32, i32* @y.96
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %61, label %70, label %71, !dbg !5585

70:                                               ; preds = %originalBBpart28
  call void @xalloc_die() #14, !dbg !5586
  unreachable, !dbg !5586

71:                                               ; preds = %originalBBpart28, %originalBBpart24
  %72 = load i32, i32* @x.95
  %73 = load i32, i32* @y.96
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %71, %originalBB10alteredBB
  %80 = load i8*, i8** %4, align 8, !dbg !5587
  store i8* %80, i8** %3, align 8, !dbg !5588
  %81 = load i32, i32* @x.95
  %82 = load i32, i32* @y.96
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %89, !dbg !5588

89:                                               ; preds = %originalBBpart212, %originalBBpart2
  %90 = load i32, i32* @x.95
  %91 = load i32, i32* @y.96
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %89, %originalBB14alteredBB
  %98 = load i8*, i8** %3, align 8, !dbg !5589
  %99 = load i32, i32* @x.95
  %100 = load i32, i32* @y.96
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret i8* %98, !dbg !5589

originalBBalteredBB:                              ; preds = %originalBB, %11
  %107 = load i8*, i8** %4, align 8, !dbg !5573
  call void @free(i8* %107) #10, !dbg !5575
  store i8* null, i8** %3, align 8, !dbg !5576
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %108 = load i8*, i8** %4, align 8, !dbg !5577
  %109 = load i64, i64* %5, align 8, !dbg !5578
  %110 = call i8* @realloc(i8* %108, i64 %109) #10, !dbg !5579
  store i8* %110, i8** %4, align 8, !dbg !5580
  %111 = load i8*, i8** %4, align 8, !dbg !5581
  %112 = icmp ne i8* %111, null, !dbg !5581
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %51
  %113 = load i64, i64* %5, align 8, !dbg !5584
  %114 = icmp ne i64 %113, 0, !dbg !5584
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %71
  %115 = load i8*, i8** %4, align 8, !dbg !5587
  store i8* %115, i8** %3, align 8, !dbg !5588
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %89
  %116 = load i8*, i8** %3, align 8, !dbg !5589
  br label %originalBB14
}

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @x2nrealloc(i8*, i64*, i64) #4 !dbg !5590 {
  %4 = alloca i8*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5595, metadata !DIExpression()), !dbg !5596
  store i64* %1, i64** %5, align 8
  call void @llvm.dbg.declare(metadata i64** %5, metadata !5597, metadata !DIExpression()), !dbg !5598
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !5599, metadata !DIExpression()), !dbg !5600
  call void @llvm.dbg.declare(metadata i64* %7, metadata !5601, metadata !DIExpression()), !dbg !5602
  %8 = load i64*, i64** %5, align 8, !dbg !5603
  %9 = load i64, i64* %8, align 8, !dbg !5604
  store i64 %9, i64* %7, align 8, !dbg !5602
  %10 = load i8*, i8** %4, align 8, !dbg !5605
  %11 = icmp ne i8* %10, null, !dbg !5605
  br i1 %11, label %80, label %12, !dbg !5607

12:                                               ; preds = %3
  %13 = load i32, i32* @x.97
  %14 = load i32, i32* @y.98
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = load i64, i64* %7, align 8, !dbg !5608
  %22 = icmp ne i64 %21, 0, !dbg !5608
  %23 = load i32, i32* @x.97
  %24 = load i32, i32* @y.98
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %41, label %31, !dbg !5611

31:                                               ; preds = %originalBBpart2
  %32 = load i64, i64* %6, align 8, !dbg !5612
  %33 = udiv i64 128, %32, !dbg !5614
  store i64 %33, i64* %7, align 8, !dbg !5615
  %34 = load i64, i64* %7, align 8, !dbg !5616
  %35 = icmp ne i64 %34, 0, !dbg !5617
  %36 = xor i1 %35, true, !dbg !5617
  %37 = zext i1 %36 to i32, !dbg !5617
  %38 = sext i32 %37 to i64, !dbg !5617
  %39 = load i64, i64* %7, align 8, !dbg !5618
  %40 = add i64 %39, %38, !dbg !5618
  store i64 %40, i64* %7, align 8, !dbg !5618
  br label %41, !dbg !5619

41:                                               ; preds = %31, %originalBBpart2
  %42 = load i32, i32* @x.97
  %43 = load i32, i32* @y.98
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %41, %originalBB1alteredBB
  %50 = load i64, i64* %6, align 8, !dbg !5620
  %51 = udiv i64 9223372036854775807, %50, !dbg !5620
  %52 = load i64, i64* %7, align 8, !dbg !5620
  %53 = icmp ult i64 %51, %52, !dbg !5620
  %54 = load i32, i32* @x.97
  %55 = load i32, i32* @y.98
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %53, label %62, label %79, !dbg !5622

62:                                               ; preds = %originalBBpart24
  %63 = load i32, i32* @x.97
  %64 = load i32, i32* @y.98
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %62, %originalBB6alteredBB
  call void @xalloc_die() #14, !dbg !5623
  %71 = load i32, i32* @x.97
  %72 = load i32, i32* @y.98
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable, !dbg !5623

79:                                               ; preds = %originalBBpart24
  br label %108, !dbg !5624

80:                                               ; preds = %3
  %81 = load i64, i64* %6, align 8, !dbg !5625
  %82 = udiv i64 6148914691236517204, %81, !dbg !5628
  %83 = load i64, i64* %7, align 8, !dbg !5629
  %84 = icmp ule i64 %82, %83, !dbg !5630
  br i1 %84, label %85, label %86, !dbg !5631

85:                                               ; preds = %80
  call void @xalloc_die() #14, !dbg !5632
  unreachable, !dbg !5632

86:                                               ; preds = %80
  %87 = load i32, i32* @x.97
  %88 = load i32, i32* @y.98
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %86, %originalBB10alteredBB
  %95 = load i64, i64* %7, align 8, !dbg !5633
  %96 = udiv i64 %95, 2, !dbg !5634
  %97 = add i64 %96, 1, !dbg !5635
  %98 = load i64, i64* %7, align 8, !dbg !5636
  %99 = add i64 %98, %97, !dbg !5636
  store i64 %99, i64* %7, align 8, !dbg !5636
  %100 = load i32, i32* @x.97
  %101 = load i32, i32* @y.98
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBBpart241, label %originalBB10alteredBB

originalBBpart241:                                ; preds = %originalBB10
  br label %108

108:                                              ; preds = %originalBBpart241, %79
  %109 = load i64, i64* %7, align 8, !dbg !5637
  %110 = load i64*, i64** %5, align 8, !dbg !5638
  store i64 %109, i64* %110, align 8, !dbg !5639
  %111 = load i8*, i8** %4, align 8, !dbg !5640
  %112 = load i64, i64* %7, align 8, !dbg !5641
  %113 = load i64, i64* %6, align 8, !dbg !5642
  %114 = mul i64 %112, %113, !dbg !5643
  %115 = call i8* @xrealloc(i8* %111, i64 %114), !dbg !5644
  ret i8* %115, !dbg !5645

originalBBalteredBB:                              ; preds = %originalBB, %12
  %116 = load i64, i64* %7, align 8, !dbg !5608
  %117 = icmp ne i64 %116, 0, !dbg !5608
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %41
  %118 = load i64, i64* %6, align 8, !dbg !5620
  %_ = sub i64 0, 9223372036854775807
  %gen = add i64 %_, %118
  %119 = udiv i64 9223372036854775807, %118, !dbg !5620
  %120 = load i64, i64* %7, align 8, !dbg !5620
  %121 = icmp ult i64 %119, %120, !dbg !5620
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %62
  call void @xalloc_die() #14, !dbg !5623
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %86
  %122 = load i64, i64* %7, align 8, !dbg !5633
  %_11 = shl i64 %122, 2
  %_12 = sub i64 %122, 2
  %gen13 = mul i64 %_12, 2
  %_14 = sub i64 %122, 2
  %gen15 = mul i64 %_14, 2
  %_16 = sub i64 0, %122
  %gen17 = add i64 %_16, 2
  %_18 = sub i64 0, %122
  %gen19 = add i64 %_18, 2
  %_20 = sub i64 0, %122
  %gen21 = add i64 %_20, 2
  %_22 = shl i64 %122, 2
  %_23 = sub i64 %122, 2
  %gen24 = mul i64 %_23, 2
  %_25 = shl i64 %122, 2
  %123 = udiv i64 %122, 2, !dbg !5634
  %_26 = sub i64 0, %123
  %gen27 = add i64 %_26, 1
  %_28 = sub i64 %123, 1
  %gen29 = mul i64 %_28, 1
  %_30 = sub i64 %123, 1
  %gen31 = mul i64 %_30, 1
  %_32 = sub i64 %123, 1
  %gen33 = mul i64 %_32, 1
  %_34 = sub i64 %123, 1
  %gen35 = mul i64 %_34, 1
  %_36 = sub i64 0, %123
  %gen37 = add i64 %_36, 1
  %124 = add i64 %123, 1, !dbg !5635
  %125 = load i64, i64* %7, align 8, !dbg !5636
  %_38 = sub i64 %125, %124
  %gen39 = mul i64 %_38, %124
  %126 = add i64 %125, %124, !dbg !5636
  store i64 %126, i64* %7, align 8, !dbg !5636
  br label %originalBB10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xcharalloc(i64) #4 !dbg !5646 {
  %2 = load i32, i32* @x.99
  %3 = load i32, i32* @y.100
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i64, align 8
  store i64 %0, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !5649, metadata !DIExpression()), !dbg !5650
  %11 = load i64, i64* %10, align 8, !dbg !5651
  %12 = call noalias i8* @xmalloc(i64 %11), !dbg !5651
  %13 = load i32, i32* @x.99
  %14 = load i32, i32* @y.100
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !5652

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i64, align 8
  store i64 %0, i64* %21, align 8
  call void @llvm.dbg.declare(metadata i64* %21, metadata !5653, metadata !DIExpression()), !dbg !5650
  %22 = load i64, i64* %21, align 8, !dbg !5651
  %23 = call noalias i8* @xmalloc(i64 %22), !dbg !5651
  br label %originalBB
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @xalloc_die() #0 !dbg !5656 {
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !5658
  %2 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.165, i64 0, i64 0)) #10, !dbg !5659
  call void (i32, i32, i8*, ...) @error(i32 %1, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.166, i64 0, i64 0), i8* %2), !dbg !5660
  call void @abort() #12, !dbg !5661
  unreachable, !dbg !5661
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @rpl_mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #4 !dbg !5662 {
  %5 = load i32, i32* @x.103
  %6 = load i32, i32* @y.104
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca i64, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i64, align 8
  %17 = alloca %struct.__mbstate_t*, align 8
  %18 = alloca i64, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  store i32* %0, i32** %14, align 8
  call void @llvm.dbg.declare(metadata i32** %14, metadata !5678, metadata !DIExpression()), !dbg !5679
  store i8* %1, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !5680, metadata !DIExpression()), !dbg !5681
  store i64 %2, i64* %16, align 8
  call void @llvm.dbg.declare(metadata i64* %16, metadata !5682, metadata !DIExpression()), !dbg !5683
  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %17, align 8
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %17, metadata !5684, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.declare(metadata i64* %18, metadata !5686, metadata !DIExpression()), !dbg !5687
  call void @llvm.dbg.declare(metadata i32* %19, metadata !5688, metadata !DIExpression()), !dbg !5689
  %21 = load i32*, i32** %14, align 8, !dbg !5690
  %22 = icmp ne i32* %21, null, !dbg !5690
  %23 = load i32, i32* @x.103
  %24 = load i32, i32* @y.104
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %48, label %31, !dbg !5692

31:                                               ; preds = %originalBBpart2
  %32 = load i32, i32* @x.103
  %33 = load i32, i32* @y.104
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  store i32* %19, i32** %14, align 8, !dbg !5693
  %40 = load i32, i32* @x.103
  %41 = load i32, i32* @y.104
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %48, !dbg !5694

48:                                               ; preds = %originalBBpart24, %originalBBpart2
  %49 = load i32, i32* @x.103
  %50 = load i32, i32* @y.104
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %48, %originalBB6alteredBB
  %57 = load i32*, i32** %14, align 8, !dbg !5695
  %58 = load i8*, i8** %15, align 8, !dbg !5696
  %59 = load i64, i64* %16, align 8, !dbg !5697
  %60 = load %struct.__mbstate_t*, %struct.__mbstate_t** %17, align 8, !dbg !5698
  %61 = call i64 @mbrtowc(i32* %57, i8* %58, i64 %59, %struct.__mbstate_t* %60) #10, !dbg !5699
  store i64 %61, i64* %18, align 8, !dbg !5700
  %62 = load i64, i64* %18, align 8, !dbg !5701
  %63 = icmp ule i64 -2, %62, !dbg !5703
  %64 = load i32, i32* @x.103
  %65 = load i32, i32* @y.104
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %63, label %72, label %115, !dbg !5704

72:                                               ; preds = %originalBBpart28
  %73 = load i32, i32* @x.103
  %74 = load i32, i32* @y.104
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %72, %originalBB10alteredBB
  %81 = load i64, i64* %16, align 8, !dbg !5705
  %82 = icmp ne i64 %81, 0, !dbg !5706
  %83 = load i32, i32* @x.103
  %84 = load i32, i32* @y.104
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %82, label %91, label %115, !dbg !5707

91:                                               ; preds = %originalBBpart212
  %92 = call zeroext i1 @hard_locale(i32 0), !dbg !5708
  br i1 %92, label %115, label %93, !dbg !5709

93:                                               ; preds = %91
  call void @llvm.dbg.declare(metadata i8* %20, metadata !5710, metadata !DIExpression()), !dbg !5712
  %94 = load i32, i32* @x.103
  %95 = load i32, i32* @y.104
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %93, %originalBB14alteredBB
  %102 = load i8*, i8** %15, align 8, !dbg !5713
  %103 = load i8, i8* %102, align 1, !dbg !5714
  store i8 %103, i8* %20, align 1, !dbg !5712
  %104 = load i8, i8* %20, align 1, !dbg !5715
  %105 = zext i8 %104 to i32, !dbg !5715
  %106 = load i32*, i32** %14, align 8, !dbg !5716
  store i32 %105, i32* %106, align 4, !dbg !5717
  store i64 1, i64* %13, align 8, !dbg !5718
  %107 = load i32, i32* @x.103
  %108 = load i32, i32* @y.104
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %133, !dbg !5718

115:                                              ; preds = %91, %originalBBpart212, %originalBBpart28
  %116 = load i32, i32* @x.103
  %117 = load i32, i32* @y.104
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %115, %originalBB18alteredBB
  %124 = load i64, i64* %18, align 8, !dbg !5719
  store i64 %124, i64* %13, align 8, !dbg !5720
  %125 = load i32, i32* @x.103
  %126 = load i32, i32* @y.104
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %133, !dbg !5720

133:                                              ; preds = %originalBBpart220, %originalBBpart216
  %134 = load i64, i64* %13, align 8, !dbg !5721
  ret i64 %134, !dbg !5721

originalBBalteredBB:                              ; preds = %originalBB, %4
  %135 = alloca i64, align 8
  %136 = alloca i32*, align 8
  %137 = alloca i8*, align 8
  %138 = alloca i64, align 8
  %139 = alloca %struct.__mbstate_t*, align 8
  %140 = alloca i64, align 8
  %141 = alloca i32, align 4
  %142 = alloca i8, align 1
  store i32* %0, i32** %136, align 8
  call void @llvm.dbg.declare(metadata i32** %136, metadata !5722, metadata !DIExpression()), !dbg !5679
  store i8* %1, i8** %137, align 8
  call void @llvm.dbg.declare(metadata i8** %137, metadata !5738, metadata !DIExpression()), !dbg !5681
  store i64 %2, i64* %138, align 8
  call void @llvm.dbg.declare(metadata i64* %138, metadata !5739, metadata !DIExpression()), !dbg !5683
  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %139, align 8
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %139, metadata !5740, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.declare(metadata i64* %140, metadata !5741, metadata !DIExpression()), !dbg !5687
  call void @llvm.dbg.declare(metadata i32* %141, metadata !5742, metadata !DIExpression()), !dbg !5689
  %143 = load i32*, i32** %136, align 8, !dbg !5690
  %144 = icmp ne i32* %143, null, !dbg !5690
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  store i32* %19, i32** %14, align 8, !dbg !5693
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  %145 = load i32*, i32** %14, align 8, !dbg !5695
  %146 = load i8*, i8** %15, align 8, !dbg !5696
  %147 = load i64, i64* %16, align 8, !dbg !5697
  %148 = load %struct.__mbstate_t*, %struct.__mbstate_t** %17, align 8, !dbg !5698
  %149 = call i64 @mbrtowc(i32* %145, i8* %146, i64 %147, %struct.__mbstate_t* %148) #10, !dbg !5699
  store i64 %149, i64* %18, align 8, !dbg !5700
  %150 = load i64, i64* %18, align 8, !dbg !5701
  %151 = icmp ule i64 -2, %150, !dbg !5703
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %72
  %152 = load i64, i64* %16, align 8, !dbg !5705
  %153 = icmp ne i64 %152, 0, !dbg !5706
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %93
  %154 = load i8*, i8** %15, align 8, !dbg !5713
  %155 = load i8, i8* %154, align 1, !dbg !5714
  store i8 %155, i8* %20, align 1, !dbg !5712
  %156 = load i8, i8* %20, align 1, !dbg !5715
  %157 = zext i8 %156 to i32, !dbg !5715
  %158 = load i32*, i32** %14, align 8, !dbg !5716
  store i32 %157, i32* %158, align 4, !dbg !5717
  store i64 1, i64* %13, align 8, !dbg !5718
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %115
  %159 = load i64, i64* %18, align 8, !dbg !5719
  store i64 %159, i64* %13, align 8, !dbg !5720
  br label %originalBB18
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @extract_trimmed_name(%struct.utmpx*) #4 !dbg !5743 {
  %2 = alloca %struct.utmpx*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %2, metadata !5771, metadata !DIExpression()), !dbg !5772
  call void @llvm.dbg.declare(metadata i8** %3, metadata !5773, metadata !DIExpression()), !dbg !5774
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5775, metadata !DIExpression()), !dbg !5776
  %5 = call noalias i8* @xmalloc(i64 33), !dbg !5777
  store i8* %5, i8** %4, align 8, !dbg !5778
  %6 = load i8*, i8** %4, align 8, !dbg !5779
  %7 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !5780
  %8 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %7, i32 0, i32 4, !dbg !5780
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i64 0, i64 0, !dbg !5780
  %10 = call i8* @strncpy(i8* %6, i8* %9, i64 32) #10, !dbg !5781
  %11 = load i8*, i8** %4, align 8, !dbg !5782
  %12 = getelementptr inbounds i8, i8* %11, i64 32, !dbg !5782
  store i8 0, i8* %12, align 1, !dbg !5783
  %13 = load i8*, i8** %4, align 8, !dbg !5784
  %14 = load i8*, i8** %4, align 8, !dbg !5786
  %15 = call i64 @strlen(i8* %14) #13, !dbg !5787
  %16 = getelementptr inbounds i8, i8* %13, i64 %15, !dbg !5788
  store i8* %16, i8** %3, align 8, !dbg !5789
  br label %17, !dbg !5790

17:                                               ; preds = %62, %1
  %18 = load i32, i32* @x.105
  %19 = load i32, i32* @y.106
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %17, %originalBBalteredBB
  %26 = load i8*, i8** %4, align 8, !dbg !5791
  %27 = load i8*, i8** %3, align 8, !dbg !5793
  %28 = icmp ult i8* %26, %27, !dbg !5794
  %29 = load i32, i32* @x.105
  %30 = load i32, i32* @y.106
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %28, label %37, label %59, !dbg !5795

37:                                               ; preds = %originalBBpart2
  %38 = load i32, i32* @x.105
  %39 = load i32, i32* @y.106
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = load i8*, i8** %3, align 8, !dbg !5796
  %47 = getelementptr inbounds i8, i8* %46, i64 -1, !dbg !5796
  %48 = load i8, i8* %47, align 1, !dbg !5796
  %49 = sext i8 %48 to i32, !dbg !5796
  %50 = icmp eq i32 %49, 32, !dbg !5797
  %51 = load i32, i32* @x.105
  %52 = load i32, i32* @y.106
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %59

59:                                               ; preds = %originalBBpart24, %originalBBpart2
  %60 = phi i1 [ false, %originalBBpart2 ], [ %50, %originalBBpart24 ], !dbg !5798
  br i1 %60, label %61, label %65, !dbg !5799

61:                                               ; preds = %59
  br label %62, !dbg !5800

62:                                               ; preds = %61
  %63 = load i8*, i8** %3, align 8, !dbg !5801
  %64 = getelementptr inbounds i8, i8* %63, i32 -1, !dbg !5801
  store i8* %64, i8** %3, align 8, !dbg !5801
  store i8 0, i8* %64, align 1, !dbg !5802
  br label %17, !dbg !5803, !llvm.loop !5804

65:                                               ; preds = %59
  %66 = load i8*, i8** %4, align 8, !dbg !5806
  ret i8* %66, !dbg !5807

originalBBalteredBB:                              ; preds = %originalBB, %17
  %67 = load i8*, i8** %4, align 8, !dbg !5791
  %68 = load i8*, i8** %3, align 8, !dbg !5793
  %69 = icmp ult i8* %67, %68, !dbg !5794
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %70 = load i8*, i8** %3, align 8, !dbg !5796
  %71 = getelementptr inbounds i8, i8* %70, i64 -1, !dbg !5796
  %72 = load i8, i8* %71, align 1, !dbg !5796
  %73 = sext i8 %72 to i32, !dbg !5796
  %74 = icmp eq i32 %73, 32, !dbg !5797
  br label %originalBB1
}

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @read_utmp(i8*, i64*, %struct.utmpx**, i32) #4 !dbg !5808 {
  %5 = alloca i8*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca %struct.utmpx**, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca %struct.utmpx*, align 8
  %12 = alloca %struct.utmpx*, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5813, metadata !DIExpression()), !dbg !5814
  store i64* %1, i64** %6, align 8
  call void @llvm.dbg.declare(metadata i64** %6, metadata !5815, metadata !DIExpression()), !dbg !5816
  store %struct.utmpx** %2, %struct.utmpx*** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx*** %7, metadata !5817, metadata !DIExpression()), !dbg !5818
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !5819, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.declare(metadata i64* %9, metadata !5821, metadata !DIExpression()), !dbg !5822
  store i64 0, i64* %9, align 8, !dbg !5822
  call void @llvm.dbg.declare(metadata i64* %10, metadata !5823, metadata !DIExpression()), !dbg !5824
  store i64 0, i64* %10, align 8, !dbg !5824
  call void @llvm.dbg.declare(metadata %struct.utmpx** %11, metadata !5825, metadata !DIExpression()), !dbg !5826
  store %struct.utmpx* null, %struct.utmpx** %11, align 8, !dbg !5826
  call void @llvm.dbg.declare(metadata %struct.utmpx** %12, metadata !5827, metadata !DIExpression()), !dbg !5828
  %13 = load i8*, i8** %5, align 8, !dbg !5829
  %14 = call i32 @utmpxname(i8* %13), !dbg !5830
  call void @setutxent(), !dbg !5831
  br label %15, !dbg !5832

15:                                               ; preds = %originalBBpart215, %4
  %16 = call %struct.utmpx* @getutxent(), !dbg !5833
  store %struct.utmpx* %16, %struct.utmpx** %12, align 8, !dbg !5834
  %17 = icmp ne %struct.utmpx* %16, null, !dbg !5835
  br i1 %17, label %18, label %72, !dbg !5832

18:                                               ; preds = %15
  %19 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !5836
  %20 = load i32, i32* %8, align 4, !dbg !5838
  %21 = call zeroext i1 @desirable_utmp_entry(%struct.utmpx* %19, i32 %20), !dbg !5839
  br i1 %21, label %22, label %55, !dbg !5840

22:                                               ; preds = %18
  %23 = load i64, i64* %9, align 8, !dbg !5841
  %24 = load i64, i64* %10, align 8, !dbg !5844
  %25 = icmp eq i64 %23, %24, !dbg !5845
  br i1 %25, label %26, label %31, !dbg !5846

26:                                               ; preds = %22
  %27 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !5847
  %28 = bitcast %struct.utmpx* %27 to i8*, !dbg !5847
  %29 = call i8* @x2nrealloc(i8* %28, i64* %10, i64 384), !dbg !5848
  %30 = bitcast i8* %29 to %struct.utmpx*, !dbg !5848
  store %struct.utmpx* %30, %struct.utmpx** %11, align 8, !dbg !5849
  br label %31, !dbg !5850

31:                                               ; preds = %26, %22
  %32 = load i32, i32* @x.107
  %33 = load i32, i32* @y.108
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %31, %originalBBalteredBB
  %40 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !5851
  %41 = load i64, i64* %9, align 8, !dbg !5852
  %42 = add i64 %41, 1, !dbg !5852
  store i64 %42, i64* %9, align 8, !dbg !5852
  %43 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %40, i64 %41, !dbg !5851
  %44 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !5853
  %45 = bitcast %struct.utmpx* %43 to i8*, !dbg !5854
  %46 = bitcast %struct.utmpx* %44 to i8*, !dbg !5854
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %46, i64 384, i1 false), !dbg !5854
  %47 = load i32, i32* @x.107
  %48 = load i32, i32* @y.108
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %55, !dbg !5855

55:                                               ; preds = %originalBBpart2, %18
  %56 = load i32, i32* @x.107
  %57 = load i32, i32* @y.108
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %55, %originalBB13alteredBB
  %64 = load i32, i32* @x.107
  %65 = load i32, i32* @y.108
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  br label %15, !dbg !5832, !llvm.loop !5856

72:                                               ; preds = %15
  %73 = load i32, i32* @x.107
  %74 = load i32, i32* @y.108
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %72, %originalBB17alteredBB
  call void @endutxent(), !dbg !5858
  %81 = load i64, i64* %9, align 8, !dbg !5859
  %82 = load i64*, i64** %6, align 8, !dbg !5860
  store i64 %81, i64* %82, align 8, !dbg !5861
  %83 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !5862
  %84 = load %struct.utmpx**, %struct.utmpx*** %7, align 8, !dbg !5863
  store %struct.utmpx* %83, %struct.utmpx** %84, align 8, !dbg !5864
  %85 = load i32, i32* @x.107
  %86 = load i32, i32* @y.108
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  ret i32 0, !dbg !5865

originalBBalteredBB:                              ; preds = %originalBB, %31
  %93 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !5851
  %94 = load i64, i64* %9, align 8, !dbg !5852
  %_ = shl i64 %94, 1
  %_1 = shl i64 %94, 1
  %_2 = shl i64 %94, 1
  %_3 = sub i64 0, %94
  %gen = add i64 %_3, 1
  %_4 = shl i64 %94, 1
  %_5 = sub i64 0, %94
  %gen6 = add i64 %_5, 1
  %_7 = shl i64 %94, 1
  %_8 = shl i64 %94, 1
  %_9 = sub i64 %94, 1
  %gen10 = mul i64 %_9, 1
  %_11 = sub i64 0, %94
  %gen12 = add i64 %_11, 1
  %95 = add i64 %94, 1, !dbg !5852
  store i64 %95, i64* %9, align 8, !dbg !5852
  %96 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %93, i64 %94, !dbg !5851
  %97 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !5853
  %98 = bitcast %struct.utmpx* %96 to i8*, !dbg !5854
  %99 = bitcast %struct.utmpx* %97 to i8*, !dbg !5854
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %98, i8* align 4 %99, i64 384, i1 false), !dbg !5854
  br label %originalBB

originalBB13alteredBB:                            ; preds = %originalBB13, %55
  br label %originalBB13

originalBB17alteredBB:                            ; preds = %originalBB17, %72
  call void @endutxent(), !dbg !5858
  %100 = load i64, i64* %9, align 8, !dbg !5859
  %101 = load i64*, i64** %6, align 8, !dbg !5860
  store i64 %100, i64* %101, align 8, !dbg !5861
  %102 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !5862
  %103 = load %struct.utmpx**, %struct.utmpx*** %7, align 8, !dbg !5863
  store %struct.utmpx* %102, %struct.utmpx** %103, align 8, !dbg !5864
  br label %originalBB17
}

declare dso_local i32 @utmpxname(i8*) #3

declare dso_local void @setutxent() #3

declare dso_local %struct.utmpx* @getutxent() #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @desirable_utmp_entry(%struct.utmpx*, i32) #4 !dbg !5866 {
  %3 = load i32, i32* @x.109
  %4 = load i32, i32* @y.110
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i1, align 1
  %12 = alloca %struct.utmpx*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  store %struct.utmpx* %0, %struct.utmpx** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %12, metadata !5869, metadata !DIExpression()), !dbg !5870
  store i32 %1, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5871, metadata !DIExpression()), !dbg !5872
  call void @llvm.dbg.declare(metadata i8* %14, metadata !5873, metadata !DIExpression()), !dbg !5874
  %15 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !5875
  %16 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %15, i32 0, i32 4, !dbg !5875
  %17 = getelementptr inbounds [32 x i8], [32 x i8]* %16, i64 0, i64 0, !dbg !5875
  %18 = load i8, i8* %17, align 4, !dbg !5875
  %19 = sext i8 %18 to i32, !dbg !5875
  %20 = icmp ne i32 %19, 0, !dbg !5875
  %21 = load i32, i32* @x.109
  %22 = load i32, i32* @y.110
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %29, label %212, !dbg !5875

29:                                               ; preds = %originalBBpart2
  %30 = load i32, i32* @x.109
  %31 = load i32, i32* @y.110
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !5875
  %39 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %38, i32 0, i32 0, !dbg !5875
  %40 = load i16, i16* %39, align 4, !dbg !5875
  %41 = sext i16 %40 to i32, !dbg !5875
  %42 = load i32, i32* @x.109
  %43 = load i32, i32* @y.110
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %50, !dbg !5875

50:                                               ; preds = %originalBBpart24
  %51 = load i32, i32* @x.109
  %52 = load i32, i32* @y.110
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %50, %originalBB6alteredBB
  %collatzVar = alloca i32
  %59 = load i32, i32* @x.109
  %60 = load i32, i32* @y.110
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %67

67:                                               ; preds = %originalBBpart28
  %68 = load i32, i32* @x.109
  %69 = load i32, i32* @y.110
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %67, %originalBB10alteredBB
  %76 = load i32, i32* @inVal0
  %77 = icmp sgt i32 %76, 1
  %78 = load i32, i32* @x.109
  %79 = load i32, i32* @y.110
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %77, label %103, label %86

86:                                               ; preds = %originalBBpart212
  %87 = load i32, i32* @x.109
  %88 = load i32, i32* @y.110
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %86, %originalBB14alteredBB
  store i32 52, i32* %collatzVar
  %95 = load i32, i32* @x.109
  %96 = load i32, i32* @y.110
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %103

103:                                              ; preds = %originalBBpart216, %originalBBpart212
  %104 = load i32, i32* @x.109
  %105 = load i32, i32* @y.110
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %103, %originalBB18alteredBB
  %112 = load i8**, i8*** @inVal1
  %113 = getelementptr inbounds i8*, i8** %112, i64 1
  %114 = load i8*, i8** %113
  %controle = call i32 @controle(i8* %114, i32 7)
  store i32 %controle, i32* %collatzVar
  %115 = load i32, i32* @x.109
  %116 = load i32, i32* @y.110
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %123

123:                                              ; preds = %173, %169, %originalBBpart220
  %124 = load i32, i32* @x.109
  %125 = load i32, i32* @y.110
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %123, %originalBB22alteredBB
  %132 = load i32, i32* %collatzVar
  %133 = icmp sgt i32 %132, 1
  %134 = load i32, i32* @x.109
  %135 = load i32, i32* @y.110
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %133, label %142, label %177

142:                                              ; preds = %originalBBpart224
  %143 = load i32, i32* @x.109
  %144 = load i32, i32* @y.110
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %142, %originalBB26alteredBB
  %151 = load i32, i32* %collatzVar
  %152 = srem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = load i32, i32* @x.109
  %155 = load i32, i32* @y.110
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBBpart231, label %originalBB26alteredBB

originalBBpart231:                                ; preds = %originalBB26
  br i1 %153, label %162, label %165

162:                                              ; preds = %originalBBpart231
  %163 = load i32, i32* %collatzVar
  %164 = sdiv i32 %163, 2
  store i32 %164, i32* %collatzVar
  br label %169

165:                                              ; preds = %originalBBpart231
  %166 = load i32, i32* %collatzVar
  %167 = mul i32 %166, 3
  %168 = add i32 %167, 1
  store i32 %168, i32* %collatzVar
  br label %169

169:                                              ; preds = %165, %162
  %170 = load i32, i32* %collatzVar
  %171 = sub i32 %41, %170
  %172 = icmp sgt i32 %171, 5
  br i1 %172, label %173, label %123

173:                                              ; preds = %169
  %174 = load i32, i32* %collatzVar
  %175 = add i32 %41, %174
  %176 = icmp slt i32 %175, 9
  br i1 %176, label %194, label %123

177:                                              ; preds = %originalBBpart224
  %178 = load i32, i32* @x.109
  %179 = load i32, i32* @y.110
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %177, %originalBB33alteredBB
  %186 = load i32, i32* @x.109
  %187 = load i32, i32* @y.110
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br label %194, !dbg !5875

194:                                              ; preds = %originalBBpart235, %173
  %195 = phi i1 [ true, %173 ], [ false, %originalBBpart235 ]
  %196 = load i32, i32* @x.109
  %197 = load i32, i32* @y.110
  %198 = sub i32 %196, 1
  %199 = mul i32 %196, %198
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %201, %202
  br i1 %203, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %194, %originalBB37alteredBB
  %204 = load i32, i32* @x.109
  %205 = load i32, i32* @y.110
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br label %212

212:                                              ; preds = %originalBBpart239, %originalBBpart2
  %213 = phi i1 [ false, %originalBBpart2 ], [ %195, %originalBBpart239 ], !dbg !5876
  %214 = load i32, i32* @x.109
  %215 = load i32, i32* @y.110
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %212, %originalBB41alteredBB
  %222 = zext i1 %213 to i8, !dbg !5874
  store i8 %222, i8* %14, align 1, !dbg !5874
  %223 = load i32, i32* %13, align 4, !dbg !5877
  %224 = and i32 %223, 2, !dbg !5879
  %225 = icmp ne i32 %224, 0, !dbg !5879
  %226 = load i32, i32* @x.109
  %227 = load i32, i32* @y.110
  %228 = sub i32 %226, 1
  %229 = mul i32 %226, %228
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %227, 10
  %233 = or i1 %231, %232
  br i1 %233, label %originalBBpart250, label %originalBB41alteredBB

originalBBpart250:                                ; preds = %originalBB41
  br i1 %225, label %234, label %254, !dbg !5880

234:                                              ; preds = %originalBBpart250
  %235 = load i32, i32* @x.109
  %236 = load i32, i32* @y.110
  %237 = sub i32 %235, 1
  %238 = mul i32 %235, %237
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %240, %241
  br i1 %242, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %234, %originalBB52alteredBB
  %243 = load i8, i8* %14, align 1, !dbg !5881
  %244 = trunc i8 %243 to i1, !dbg !5881
  %245 = load i32, i32* @x.109
  %246 = load i32, i32* @y.110
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBBpart254, label %originalBB52alteredBB

originalBBpart254:                                ; preds = %originalBB52
  br i1 %244, label %254, label %253, !dbg !5882

253:                                              ; preds = %originalBBpart254
  store i1 false, i1* %11, align 1, !dbg !5883
  br label %294, !dbg !5883

254:                                              ; preds = %originalBBpart254, %originalBBpart250
  %255 = load i32, i32* %13, align 4, !dbg !5884
  %256 = and i32 %255, 1, !dbg !5886
  %257 = icmp ne i32 %256, 0, !dbg !5886
  br i1 %257, label %258, label %293, !dbg !5887

258:                                              ; preds = %254
  %259 = load i8, i8* %14, align 1, !dbg !5888
  %260 = trunc i8 %259 to i1, !dbg !5888
  br i1 %260, label %261, label %293, !dbg !5889

261:                                              ; preds = %258
  %262 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !5890
  %263 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %262, i32 0, i32 1, !dbg !5890
  %264 = load i32, i32* %263, align 4, !dbg !5890
  %265 = icmp slt i32 0, %264, !dbg !5891
  br i1 %265, label %266, label %293, !dbg !5892

266:                                              ; preds = %261
  %267 = load i32, i32* @x.109
  %268 = load i32, i32* @y.110
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %266, %originalBB56alteredBB
  %275 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !5893
  %276 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %275, i32 0, i32 1, !dbg !5893
  %277 = load i32, i32* %276, align 4, !dbg !5893
  %278 = call i32 @kill(i32 %277, i32 0) #10, !dbg !5894
  %279 = icmp slt i32 %278, 0, !dbg !5895
  %280 = load i32, i32* @x.109
  %281 = load i32, i32* @y.110
  %282 = sub i32 %280, 1
  %283 = mul i32 %280, %282
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %285, %286
  br i1 %287, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  br i1 %279, label %288, label %293, !dbg !5896

288:                                              ; preds = %originalBBpart258
  %289 = call i32* @__errno_location() #15, !dbg !5897
  %290 = load i32, i32* %289, align 4, !dbg !5897
  %291 = icmp eq i32 %290, 3, !dbg !5898
  br i1 %291, label %292, label %293, !dbg !5899

292:                                              ; preds = %288
  store i1 false, i1* %11, align 1, !dbg !5900
  br label %294, !dbg !5900

293:                                              ; preds = %288, %originalBBpart258, %261, %258, %254
  store i1 true, i1* %11, align 1, !dbg !5901
  br label %294, !dbg !5901

294:                                              ; preds = %293, %292, %253
  %295 = load i32, i32* @x.109
  %296 = load i32, i32* @y.110
  %297 = sub i32 %295, 1
  %298 = mul i32 %295, %297
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %300, %301
  br i1 %302, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %294, %originalBB60alteredBB
  %303 = load i1, i1* %11, align 1, !dbg !5902
  %304 = load i32, i32* @x.109
  %305 = load i32, i32* @y.110
  %306 = sub i32 %304, 1
  %307 = mul i32 %304, %306
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %309, %310
  br i1 %311, label %originalBBpart262, label %originalBB60alteredBB

originalBBpart262:                                ; preds = %originalBB60
  ret i1 %303, !dbg !5902

originalBBalteredBB:                              ; preds = %originalBB, %2
  %312 = alloca i1, align 1
  %313 = alloca %struct.utmpx*, align 8
  %314 = alloca i32, align 4
  %315 = alloca i8, align 1
  store %struct.utmpx* %0, %struct.utmpx** %313, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %313, metadata !5903, metadata !DIExpression()), !dbg !5870
  store i32 %1, i32* %314, align 4
  call void @llvm.dbg.declare(metadata i32* %314, metadata !5932, metadata !DIExpression()), !dbg !5872
  call void @llvm.dbg.declare(metadata i8* %315, metadata !5933, metadata !DIExpression()), !dbg !5874
  %316 = load %struct.utmpx*, %struct.utmpx** %313, align 8, !dbg !5875
  %317 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %316, i32 0, i32 4, !dbg !5875
  %318 = getelementptr inbounds [32 x i8], [32 x i8]* %317, i64 0, i64 0, !dbg !5875
  %319 = load i8, i8* %318, align 4, !dbg !5875
  %320 = sext i8 %319 to i32, !dbg !5875
  %321 = icmp ne i32 %320, 0, !dbg !5875
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %322 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !5875
  %323 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %322, i32 0, i32 0, !dbg !5875
  %324 = load i16, i16* %323, align 4, !dbg !5875
  %325 = sext i16 %324 to i32, !dbg !5875
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %50
  %collatzVaralteredBB = alloca i32
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %67
  %326 = load i32, i32* @inVal0
  %327 = icmp sgt i32 %326, 1
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %86
  store i32 52, i32* %collatzVar
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %103
  %328 = load i8**, i8*** @inVal1
  %329 = getelementptr inbounds i8*, i8** %328, i64 1
  %330 = load i8*, i8** %329
  %controlealteredBB = call i32 @controle(i8* %330, i32 7)
  store i32 %controlealteredBB, i32* %collatzVar
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %123
  %331 = load i32, i32* %collatzVar
  %332 = icmp sgt i32 %331, 1
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %142
  %333 = load i32, i32* %collatzVar
  %_ = shl i32 %333, 2
  %_27 = sub i32 %333, 2
  %gen = mul i32 %_27, 2
  %_28 = sub i32 %333, 2
  %gen29 = mul i32 %_28, 2
  %334 = srem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  br label %originalBB26

originalBB33alteredBB:                            ; preds = %originalBB33, %177
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %194
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %212
  %336 = zext i1 %213 to i8, !dbg !5874
  store i8 %336, i8* %14, align 1, !dbg !5874
  %337 = load i32, i32* %13, align 4, !dbg !5877
  %_42 = sub i32 0, %337
  %gen43 = add i32 %_42, 2
  %_44 = sub i32 %337, 2
  %gen45 = mul i32 %_44, 2
  %_46 = shl i32 %337, 2
  %_47 = sub i32 0, %337
  %gen48 = add i32 %_47, 2
  %338 = and i32 %337, 2, !dbg !5879
  %339 = icmp ne i32 %338, 0, !dbg !5879
  br label %originalBB41

originalBB52alteredBB:                            ; preds = %originalBB52, %234
  %340 = load i8, i8* %14, align 1, !dbg !5881
  %341 = trunc i8 %340 to i1, !dbg !5881
  br label %originalBB52

originalBB56alteredBB:                            ; preds = %originalBB56, %266
  %342 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !5893
  %343 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %342, i32 0, i32 1, !dbg !5893
  %344 = load i32, i32* %343, align 4, !dbg !5893
  %345 = call i32 @kill(i32 %344, i32 0) #10, !dbg !5894
  %346 = icmp slt i32 %345, 0, !dbg !5895
  br label %originalBB56

originalBB60alteredBB:                            ; preds = %originalBB60, %294
  %347 = load i1, i1* %11, align 1, !dbg !5902
  br label %originalBB60
}

declare dso_local void @endutxent() #3

; Function Attrs: nounwind
declare dso_local i32 @kill(i32, i32) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @c_strcasecmp(i8*, i8*) #11 !dbg !5934 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5938, metadata !DIExpression()), !dbg !5939
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5940, metadata !DIExpression()), !dbg !5941
  call void @llvm.dbg.declare(metadata i8** %6, metadata !5942, metadata !DIExpression()), !dbg !5943
  %10 = load i8*, i8** %4, align 8, !dbg !5944
  store i8* %10, i8** %6, align 8, !dbg !5943
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5945, metadata !DIExpression()), !dbg !5946
  %11 = load i8*, i8** %5, align 8, !dbg !5947
  store i8* %11, i8** %7, align 8, !dbg !5946
  call void @llvm.dbg.declare(metadata i8* %8, metadata !5948, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.declare(metadata i8* %9, metadata !5950, metadata !DIExpression()), !dbg !5951
  %12 = load i8*, i8** %6, align 8, !dbg !5952
  %13 = load i8*, i8** %7, align 8, !dbg !5954
  %14 = icmp eq i8* %12, %13, !dbg !5955
  br i1 %14, label %15, label %32, !dbg !5956

15:                                               ; preds = %2
  %16 = load i32, i32* @x.111
  %17 = load i32, i32* @y.112
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  store i32 0, i32* %3, align 4, !dbg !5957
  %24 = load i32, i32* @x.111
  %25 = load i32, i32* @y.112
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %113, !dbg !5957

32:                                               ; preds = %2
  %33 = load i32, i32* @x.111
  %34 = load i32, i32* @y.112
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load i32, i32* @x.111
  %42 = load i32, i32* @y.112
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %49, !dbg !5958

49:                                               ; preds = %101, %originalBBpart24
  %50 = load i8*, i8** %6, align 8, !dbg !5959
  %51 = load i8, i8* %50, align 1, !dbg !5961
  %52 = zext i8 %51 to i32, !dbg !5961
  %53 = call i32 @c_tolower(i32 %52), !dbg !5962
  %54 = trunc i32 %53 to i8, !dbg !5962
  store i8 %54, i8* %8, align 1, !dbg !5963
  %55 = load i8*, i8** %7, align 8, !dbg !5964
  %56 = load i8, i8* %55, align 1, !dbg !5965
  %57 = zext i8 %56 to i32, !dbg !5965
  %58 = call i32 @c_tolower(i32 %57), !dbg !5966
  %59 = trunc i32 %58 to i8, !dbg !5966
  store i8 %59, i8* %9, align 1, !dbg !5967
  %60 = load i8, i8* %8, align 1, !dbg !5968
  %61 = zext i8 %60 to i32, !dbg !5968
  %62 = icmp eq i32 %61, 0, !dbg !5970
  br i1 %62, label %63, label %80, !dbg !5971

63:                                               ; preds = %49
  %64 = load i32, i32* @x.111
  %65 = load i32, i32* @y.112
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %63, %originalBB6alteredBB
  %72 = load i32, i32* @x.111
  %73 = load i32, i32* @y.112
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %107, !dbg !5972

80:                                               ; preds = %49
  %81 = load i32, i32* @x.111
  %82 = load i32, i32* @y.112
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %80, %originalBB10alteredBB
  %89 = load i8*, i8** %6, align 8, !dbg !5973
  %90 = getelementptr inbounds i8, i8* %89, i32 1, !dbg !5973
  store i8* %90, i8** %6, align 8, !dbg !5973
  %91 = load i8*, i8** %7, align 8, !dbg !5974
  %92 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !5974
  store i8* %92, i8** %7, align 8, !dbg !5974
  %93 = load i32, i32* @x.111
  %94 = load i32, i32* @y.112
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %101, !dbg !5975

101:                                              ; preds = %originalBBpart212
  %102 = load i8, i8* %8, align 1, !dbg !5976
  %103 = zext i8 %102 to i32, !dbg !5976
  %104 = load i8, i8* %9, align 1, !dbg !5977
  %105 = zext i8 %104 to i32, !dbg !5977
  %106 = icmp eq i32 %103, %105, !dbg !5978
  br i1 %106, label %49, label %107, !dbg !5975, !llvm.loop !5979

107:                                              ; preds = %101, %originalBBpart28
  %108 = load i8, i8* %8, align 1, !dbg !5981
  %109 = zext i8 %108 to i32, !dbg !5981
  %110 = load i8, i8* %9, align 1, !dbg !5983
  %111 = zext i8 %110 to i32, !dbg !5983
  %112 = sub nsw i32 %109, %111, !dbg !5984
  store i32 %112, i32* %3, align 4, !dbg !5985
  br label %113, !dbg !5985

113:                                              ; preds = %107, %originalBBpart2
  %114 = load i32, i32* @x.111
  %115 = load i32, i32* @y.112
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %113, %originalBB14alteredBB
  %122 = load i32, i32* %3, align 4, !dbg !5986
  %123 = load i32, i32* @x.111
  %124 = load i32, i32* @y.112
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret i32 %122, !dbg !5986

originalBBalteredBB:                              ; preds = %originalBB, %15
  store i32 0, i32* %3, align 4, !dbg !5957
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %63
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %80
  %131 = load i8*, i8** %6, align 8, !dbg !5973
  %132 = getelementptr inbounds i8, i8* %131, i32 1, !dbg !5973
  store i8* %132, i8** %6, align 8, !dbg !5973
  %133 = load i8*, i8** %7, align 8, !dbg !5974
  %134 = getelementptr inbounds i8, i8* %133, i32 1, !dbg !5974
  store i8* %134, i8** %7, align 8, !dbg !5974
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %113
  %135 = load i32, i32* %3, align 4, !dbg !5986
  br label %originalBB14
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @close_stream(%struct._IO_FILE*) #4 !dbg !5987 {
  %2 = load i32, i32* @x.113
  %3 = load i32, i32* @y.114
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %11, metadata !6025, metadata !DIExpression()), !dbg !6026
  call void @llvm.dbg.declare(metadata i8* %12, metadata !6027, metadata !DIExpression()), !dbg !6029
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6030
  %16 = call i64 @__fpending(%struct._IO_FILE* %15) #10, !dbg !6031
  %17 = icmp ne i64 %16, 0, !dbg !6032
  %18 = zext i1 %17 to i8, !dbg !6029
  store i8 %18, i8* %12, align 1, !dbg !6029
  call void @llvm.dbg.declare(metadata i8* %13, metadata !6033, metadata !DIExpression()), !dbg !6034
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6035
  %20 = call i32 @ferror_unlocked(%struct._IO_FILE* %19) #10, !dbg !6035
  %21 = icmp ne i32 %20, 0, !dbg !6036
  %22 = zext i1 %21 to i8, !dbg !6034
  store i8 %22, i8* %13, align 1, !dbg !6034
  call void @llvm.dbg.declare(metadata i8* %14, metadata !6037, metadata !DIExpression()), !dbg !6038
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6039
  %24 = call i32 @rpl_fclose(%struct._IO_FILE* %23), !dbg !6040
  %25 = icmp ne i32 %24, 0, !dbg !6041
  %26 = zext i1 %25 to i8, !dbg !6038
  store i8 %26, i8* %14, align 1, !dbg !6038
  %27 = load i8, i8* %13, align 1, !dbg !6042
  %28 = trunc i8 %27 to i1, !dbg !6042
  %29 = load i32, i32* @x.113
  %30 = load i32, i32* @y.114
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %28, label %79, label %37, !dbg !6044

37:                                               ; preds = %originalBBpart2
  %38 = load i8, i8* %14, align 1, !dbg !6045
  %39 = trunc i8 %38 to i1, !dbg !6045
  br i1 %39, label %40, label %117, !dbg !6046

40:                                               ; preds = %37
  %41 = load i32, i32* @x.113
  %42 = load i32, i32* @y.114
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %40, %originalBB1alteredBB
  %49 = load i8, i8* %12, align 1, !dbg !6047
  %50 = trunc i8 %49 to i1, !dbg !6047
  %51 = load i32, i32* @x.113
  %52 = load i32, i32* @y.114
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %50, label %79, label %59, !dbg !6048

59:                                               ; preds = %originalBBpart24
  %60 = load i32, i32* @x.113
  %61 = load i32, i32* @y.114
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %59, %originalBB6alteredBB
  %68 = call i32* @__errno_location() #15, !dbg !6049
  %69 = load i32, i32* %68, align 4, !dbg !6049
  %70 = icmp ne i32 %69, 9, !dbg !6050
  %71 = load i32, i32* @x.113
  %72 = load i32, i32* @y.114
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %70, label %79, label %117, !dbg !6051

79:                                               ; preds = %originalBBpart28, %originalBBpart24, %originalBBpart2
  %80 = load i32, i32* @x.113
  %81 = load i32, i32* @y.114
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %79, %originalBB10alteredBB
  %88 = load i8, i8* %14, align 1, !dbg !6052
  %89 = trunc i8 %88 to i1, !dbg !6052
  %90 = load i32, i32* @x.113
  %91 = load i32, i32* @y.114
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %89, label %100, label %98, !dbg !6055

98:                                               ; preds = %originalBBpart212
  %99 = call i32* @__errno_location() #15, !dbg !6056
  store i32 0, i32* %99, align 4, !dbg !6057
  br label %100, !dbg !6056

100:                                              ; preds = %98, %originalBBpart212
  %101 = load i32, i32* @x.113
  %102 = load i32, i32* @y.114
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %100, %originalBB14alteredBB
  store i32 -1, i32* %10, align 4, !dbg !6058
  %109 = load i32, i32* @x.113
  %110 = load i32, i32* @y.114
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %134, !dbg !6058

117:                                              ; preds = %originalBBpart28, %37
  %118 = load i32, i32* @x.113
  %119 = load i32, i32* @y.114
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %117, %originalBB18alteredBB
  store i32 0, i32* %10, align 4, !dbg !6059
  %126 = load i32, i32* @x.113
  %127 = load i32, i32* @y.114
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %134, !dbg !6059

134:                                              ; preds = %originalBBpart220, %originalBBpart216
  %135 = load i32, i32* @x.113
  %136 = load i32, i32* @y.114
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %134, %originalBB22alteredBB
  %143 = load i32, i32* %10, align 4, !dbg !6060
  %144 = load i32, i32* @x.113
  %145 = load i32, i32* @y.114
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret i32 %143, !dbg !6060

originalBBalteredBB:                              ; preds = %originalBB, %1
  %152 = alloca i32, align 4
  %153 = alloca %struct._IO_FILE*, align 8
  %154 = alloca i8, align 1
  %155 = alloca i8, align 1
  %156 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %153, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %153, metadata !6061, metadata !DIExpression()), !dbg !6026
  call void @llvm.dbg.declare(metadata i8* %154, metadata !6100, metadata !DIExpression()), !dbg !6029
  %157 = load %struct._IO_FILE*, %struct._IO_FILE** %153, align 8, !dbg !6030
  %158 = call i64 @__fpending(%struct._IO_FILE* %157) #10, !dbg !6031
  %159 = icmp ne i64 %158, 0, !dbg !6032
  %160 = zext i1 %159 to i8, !dbg !6029
  store i8 %160, i8* %154, align 1, !dbg !6029
  call void @llvm.dbg.declare(metadata i8* %155, metadata !6101, metadata !DIExpression()), !dbg !6034
  %161 = load %struct._IO_FILE*, %struct._IO_FILE** %153, align 8, !dbg !6035
  %162 = call i32 @ferror_unlocked(%struct._IO_FILE* %161) #10, !dbg !6035
  %163 = icmp ne i32 %162, 0, !dbg !6036
  %164 = zext i1 %163 to i8, !dbg !6034
  store i8 %164, i8* %155, align 1, !dbg !6034
  call void @llvm.dbg.declare(metadata i8* %156, metadata !6102, metadata !DIExpression()), !dbg !6038
  %165 = load %struct._IO_FILE*, %struct._IO_FILE** %153, align 8, !dbg !6039
  %166 = call i32 @rpl_fclose(%struct._IO_FILE* %165), !dbg !6040
  %167 = icmp ne i32 %166, 0, !dbg !6041
  %168 = zext i1 %167 to i8, !dbg !6038
  store i8 %168, i8* %156, align 1, !dbg !6038
  %169 = load i8, i8* %155, align 1, !dbg !6042
  %170 = trunc i8 %169 to i1, !dbg !6042
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %40
  %171 = load i8, i8* %12, align 1, !dbg !6047
  %172 = trunc i8 %171 to i1, !dbg !6047
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %59
  %173 = call i32* @__errno_location() #15, !dbg !6049
  %174 = load i32, i32* %173, align 4, !dbg !6049
  %175 = icmp ne i32 %174, 9, !dbg !6050
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %79
  %176 = load i8, i8* %14, align 1, !dbg !6052
  %177 = trunc i8 %176 to i1, !dbg !6052
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %100
  store i32 -1, i32* %10, align 4, !dbg !6058
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %117
  store i32 0, i32* %10, align 4, !dbg !6059
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %134
  %178 = load i32, i32* %10, align 4, !dbg !6060
  br label %originalBB22
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @locale_charset() #4 !dbg !6103 {
  %1 = load i32, i32* @x.115
  %2 = load i32, i32* @y.116
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !6107, metadata !DIExpression()), !dbg !6108
  %10 = call i8* @nl_langinfo(i32 14) #10, !dbg !6109
  store i8* %10, i8** %9, align 8, !dbg !6110
  %11 = load i8*, i8** %9, align 8, !dbg !6111
  %12 = icmp eq i8* %11, null, !dbg !6113
  %13 = load i32, i32* @x.115
  %14 = load i32, i32* @y.116
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %38, !dbg !6114

21:                                               ; preds = %originalBBpart2
  %22 = load i32, i32* @x.115
  %23 = load i32, i32* @y.116
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.179, i64 0, i64 0), i8** %9, align 8, !dbg !6115
  %30 = load i32, i32* @x.115
  %31 = load i32, i32* @y.116
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %38, !dbg !6116

38:                                               ; preds = %originalBBpart24, %originalBBpart2
  %39 = load i32, i32* @x.115
  %40 = load i32, i32* @y.116
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %38, %originalBB6alteredBB
  %47 = load i8*, i8** %9, align 8, !dbg !6117
  %48 = getelementptr inbounds i8, i8* %47, i64 0, !dbg !6117
  %49 = load i8, i8* %48, align 1, !dbg !6117
  %50 = sext i8 %49 to i32, !dbg !6117
  %51 = icmp eq i32 %50, 0, !dbg !6121
  %52 = load i32, i32* @x.115
  %53 = load i32, i32* @y.116
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %51, label %60, label %61, !dbg !6122

60:                                               ; preds = %originalBBpart28
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.180, i64 0, i64 0), i8** %9, align 8, !dbg !6123
  br label %61, !dbg !6124

61:                                               ; preds = %60, %originalBBpart28
  %62 = load i8*, i8** %9, align 8, !dbg !6125
  ret i8* %62, !dbg !6126

originalBBalteredBB:                              ; preds = %originalBB, %0
  %63 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %63, metadata !6127, metadata !DIExpression()), !dbg !6108
  %64 = call i8* @nl_langinfo(i32 14) #10, !dbg !6109
  store i8* %64, i8** %63, align 8, !dbg !6110
  %65 = load i8*, i8** %63, align 8, !dbg !6111
  %66 = icmp eq i8* %65, null, !dbg !6113
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.179, i64 0, i64 0), i8** %9, align 8, !dbg !6115
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %38
  %67 = load i8*, i8** %9, align 8, !dbg !6117
  %68 = getelementptr inbounds i8, i8* %67, i64 0, !dbg !6117
  %69 = load i8, i8* %68, align 1, !dbg !6117
  %70 = sext i8 %69 to i32, !dbg !6117
  %71 = icmp eq i32 %70, 0, !dbg !6121
  br label %originalBB6
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fclose(%struct._IO_FILE* nonnull) #4 !dbg !6130 {
  %2 = load i32, i32* @x.117
  %3 = load i32, i32* @y.118
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %11, metadata !6168, metadata !DIExpression()), !dbg !6169
  call void @llvm.dbg.declare(metadata i32* %12, metadata !6170, metadata !DIExpression()), !dbg !6171
  store i32 0, i32* %12, align 4, !dbg !6171
  call void @llvm.dbg.declare(metadata i32* %13, metadata !6172, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.declare(metadata i32* %14, metadata !6174, metadata !DIExpression()), !dbg !6175
  store i32 0, i32* %14, align 4, !dbg !6175
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6176
  %16 = call i32 @fileno(%struct._IO_FILE* %15) #10, !dbg !6177
  store i32 %16, i32* %13, align 4, !dbg !6178
  %17 = load i32, i32* %13, align 4, !dbg !6179
  %18 = icmp slt i32 %17, 0, !dbg !6181
  %19 = load i32, i32* @x.117
  %20 = load i32, i32* @y.118
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %30, !dbg !6182

27:                                               ; preds = %originalBBpart2
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6183
  %29 = call i32 @fclose(%struct._IO_FILE* %28), !dbg !6184
  store i32 %29, i32* %10, align 4, !dbg !6185
  br label %152, !dbg !6185

30:                                               ; preds = %originalBBpart2
  %31 = load i32, i32* @x.117
  %32 = load i32, i32* @y.118
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6186
  %40 = call i32 @__freading(%struct._IO_FILE* %39) #10, !dbg !6186
  %41 = icmp ne i32 %40, 0, !dbg !6186
  %42 = load i32, i32* @x.117
  %43 = load i32, i32* @y.118
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %41, label %50, label %71, !dbg !6188

50:                                               ; preds = %originalBBpart24
  %51 = load i32, i32* @x.117
  %52 = load i32, i32* @y.118
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %50, %originalBB6alteredBB
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6189
  %60 = call i32 @fileno(%struct._IO_FILE* %59) #10, !dbg !6190
  %61 = call i64 @lseek(i32 %60, i64 0, i32 1) #10, !dbg !6191
  %62 = icmp ne i64 %61, -1, !dbg !6192
  %63 = load i32, i32* @x.117
  %64 = load i32, i32* @y.118
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %62, label %71, label %110, !dbg !6193

71:                                               ; preds = %originalBBpart28, %originalBBpart24
  %72 = load i32, i32* @x.117
  %73 = load i32, i32* @y.118
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %71, %originalBB10alteredBB
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6194
  %81 = call i32 @rpl_fflush(%struct._IO_FILE* %80), !dbg !6195
  %82 = icmp ne i32 %81, 0, !dbg !6195
  %83 = load i32, i32* @x.117
  %84 = load i32, i32* @y.118
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %82, label %91, label %110, !dbg !6196

91:                                               ; preds = %originalBBpart212
  %92 = load i32, i32* @x.117
  %93 = load i32, i32* @y.118
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %91, %originalBB14alteredBB
  %100 = call i32* @__errno_location() #15, !dbg !6197
  %101 = load i32, i32* %100, align 4, !dbg !6197
  store i32 %101, i32* %12, align 4, !dbg !6198
  %102 = load i32, i32* @x.117
  %103 = load i32, i32* @y.118
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %110, !dbg !6199

110:                                              ; preds = %originalBBpart216, %originalBBpart212, %originalBBpart28
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6200
  %112 = call i32 @fclose(%struct._IO_FILE* %111), !dbg !6201
  store i32 %112, i32* %14, align 4, !dbg !6202
  %113 = load i32, i32* %12, align 4, !dbg !6203
  %114 = icmp ne i32 %113, 0, !dbg !6205
  br i1 %114, label %115, label %134, !dbg !6206

115:                                              ; preds = %110
  %116 = load i32, i32* @x.117
  %117 = load i32, i32* @y.118
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %115, %originalBB18alteredBB
  %124 = load i32, i32* %12, align 4, !dbg !6207
  %125 = call i32* @__errno_location() #15, !dbg !6209
  store i32 %124, i32* %125, align 4, !dbg !6210
  store i32 -1, i32* %14, align 4, !dbg !6211
  %126 = load i32, i32* @x.117
  %127 = load i32, i32* @y.118
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %134, !dbg !6212

134:                                              ; preds = %originalBBpart220, %110
  %135 = load i32, i32* @x.117
  %136 = load i32, i32* @y.118
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %134, %originalBB22alteredBB
  %143 = load i32, i32* %14, align 4, !dbg !6213
  store i32 %143, i32* %10, align 4, !dbg !6214
  %144 = load i32, i32* @x.117
  %145 = load i32, i32* @y.118
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %152, !dbg !6214

152:                                              ; preds = %originalBBpart224, %27
  %153 = load i32, i32* %10, align 4, !dbg !6215
  ret i32 %153, !dbg !6215

originalBBalteredBB:                              ; preds = %originalBB, %1
  %154 = alloca i32, align 4
  %155 = alloca %struct._IO_FILE*, align 8
  %156 = alloca i32, align 4
  %157 = alloca i32, align 4
  %158 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %155, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %155, metadata !6216, metadata !DIExpression()), !dbg !6169
  call void @llvm.dbg.declare(metadata i32* %156, metadata !6255, metadata !DIExpression()), !dbg !6171
  store i32 0, i32* %156, align 4, !dbg !6171
  call void @llvm.dbg.declare(metadata i32* %157, metadata !6256, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.declare(metadata i32* %158, metadata !6257, metadata !DIExpression()), !dbg !6175
  store i32 0, i32* %158, align 4, !dbg !6175
  %159 = load %struct._IO_FILE*, %struct._IO_FILE** %155, align 8, !dbg !6176
  %160 = call i32 @fileno(%struct._IO_FILE* %159) #10, !dbg !6177
  store i32 %160, i32* %157, align 4, !dbg !6178
  %161 = load i32, i32* %157, align 4, !dbg !6179
  %162 = icmp slt i32 %161, 0, !dbg !6181
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %163 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6186
  %164 = call i32 @__freading(%struct._IO_FILE* %163) #10, !dbg !6186
  %165 = icmp ne i32 %164, 0, !dbg !6186
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %50
  %166 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6189
  %167 = call i32 @fileno(%struct._IO_FILE* %166) #10, !dbg !6190
  %168 = call i64 @lseek(i32 %167, i64 0, i32 1) #10, !dbg !6191
  %169 = icmp ne i64 %168, -1, !dbg !6192
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %71
  %170 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6194
  %171 = call i32 @rpl_fflush(%struct._IO_FILE* %170), !dbg !6195
  %172 = icmp ne i32 %171, 0, !dbg !6195
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %91
  %173 = call i32* @__errno_location() #15, !dbg !6197
  %174 = load i32, i32* %173, align 4, !dbg !6197
  store i32 %174, i32* %12, align 4, !dbg !6198
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %115
  %175 = load i32, i32* %12, align 4, !dbg !6207
  %176 = call i32* @__errno_location() #15, !dbg !6209
  store i32 %175, i32* %176, align 4, !dbg !6210
  store i32 -1, i32* %14, align 4, !dbg !6211
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %134
  %177 = load i32, i32* %14, align 4, !dbg !6213
  store i32 %177, i32* %10, align 4, !dbg !6214
  br label %originalBB22
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fflush(%struct._IO_FILE*) #4 !dbg !6258 {
  %2 = load i32, i32* @x.119
  %3 = load i32, i32* @y.120
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %11, metadata !6296, metadata !DIExpression()), !dbg !6297
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6298
  %13 = icmp eq %struct._IO_FILE* %12, null, !dbg !6300
  %14 = load i32, i32* @x.119
  %15 = load i32, i32* @y.120
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %13, label %26, label %22, !dbg !6301

22:                                               ; preds = %originalBBpart2
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6302
  %24 = call i32 @__freading(%struct._IO_FILE* %23) #10, !dbg !6302
  %25 = icmp ne i32 %24, 0, !dbg !6302
  br i1 %25, label %45, label %26, !dbg !6303

26:                                               ; preds = %22, %originalBBpart2
  %27 = load i32, i32* @x.119
  %28 = load i32, i32* @y.120
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6304
  %36 = call i32 @fflush(%struct._IO_FILE* %35), !dbg !6305
  store i32 %36, i32* %10, align 4, !dbg !6306
  %37 = load i32, i32* @x.119
  %38 = load i32, i32* @y.120
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %65, !dbg !6306

45:                                               ; preds = %22
  %46 = load i32, i32* @x.119
  %47 = load i32, i32* @y.120
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %45, %originalBB6alteredBB
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6307
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %54), !dbg !6308
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6309
  %56 = call i32 @fflush(%struct._IO_FILE* %55), !dbg !6310
  store i32 %56, i32* %10, align 4, !dbg !6311
  %57 = load i32, i32* @x.119
  %58 = load i32, i32* @y.120
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %65, !dbg !6311

65:                                               ; preds = %originalBBpart28, %originalBBpart24
  %66 = load i32, i32* @x.119
  %67 = load i32, i32* @y.120
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %65, %originalBB10alteredBB
  %74 = load i32, i32* %10, align 4, !dbg !6312
  %75 = load i32, i32* @x.119
  %76 = load i32, i32* @y.120
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret i32 %74, !dbg !6312

originalBBalteredBB:                              ; preds = %originalBB, %1
  %83 = alloca i32, align 4
  %84 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %84, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %84, metadata !6313, metadata !DIExpression()), !dbg !6297
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** %84, align 8, !dbg !6298
  %86 = icmp eq %struct._IO_FILE* %85, null, !dbg !6300
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6304
  %88 = call i32 @fflush(%struct._IO_FILE* %87), !dbg !6305
  store i32 %88, i32* %10, align 4, !dbg !6306
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %45
  %89 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6307
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %89), !dbg !6308
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6309
  %91 = call i32 @fflush(%struct._IO_FILE* %90), !dbg !6310
  store i32 %91, i32* %10, align 4, !dbg !6311
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %65
  %92 = load i32, i32* %10, align 4, !dbg !6312
  br label %originalBB10
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE*) #4 !dbg !6352 {
  %2 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %2, metadata !6355, metadata !DIExpression()), !dbg !6356
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !dbg !6357
  %4 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %3, i32 0, i32 0, !dbg !6359
  %5 = load i32, i32* %4, align 8, !dbg !6359
  %6 = and i32 %5, 256, !dbg !6360
  %7 = icmp ne i32 %6, 0, !dbg !6360
  br i1 %7, label %8, label %11, !dbg !6361

8:                                                ; preds = %1
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !dbg !6362
  %10 = call i32 @rpl_fseeko(%struct._IO_FILE* %9, i64 0, i32 1), !dbg !6363
  br label %11, !dbg !6363

11:                                               ; preds = %8, %1
  %12 = load i32, i32* @x.121
  %13 = load i32, i32* @y.122
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i32, i32* @x.121
  %21 = load i32, i32* @y.122
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !6364

originalBBalteredBB:                              ; preds = %originalBB, %11
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fseeko(%struct._IO_FILE* nonnull, i64, i32) #4 !dbg !6365 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %5, metadata !6404, metadata !DIExpression()), !dbg !6405
  store i64 %1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !6406, metadata !DIExpression()), !dbg !6407
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !6408, metadata !DIExpression()), !dbg !6409
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !6410
  %10 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %9, i32 0, i32 2, !dbg !6412
  %11 = load i8*, i8** %10, align 8, !dbg !6412
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !6413
  %13 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %12, i32 0, i32 1, !dbg !6414
  %14 = load i8*, i8** %13, align 8, !dbg !6414
  %15 = icmp eq i8* %11, %14, !dbg !6415
  br i1 %15, label %16, label %78, !dbg !6416

16:                                               ; preds = %3
  %17 = load i32, i32* @x.123
  %18 = load i32, i32* @y.124
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !6417
  %26 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %25, i32 0, i32 5, !dbg !6418
  %27 = load i8*, i8** %26, align 8, !dbg !6418
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !6419
  %29 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %28, i32 0, i32 4, !dbg !6420
  %30 = load i8*, i8** %29, align 8, !dbg !6420
  %31 = icmp eq i8* %27, %30, !dbg !6421
  %32 = load i32, i32* @x.123
  %33 = load i32, i32* @y.124
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %31, label %40, label %78, !dbg !6422

40:                                               ; preds = %originalBBpart2
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !6423
  %42 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %41, i32 0, i32 9, !dbg !6424
  %43 = load i8*, i8** %42, align 8, !dbg !6424
  %44 = icmp eq i8* %43, null, !dbg !6425
  br i1 %44, label %45, label %78, !dbg !6426

45:                                               ; preds = %40
  call void @llvm.dbg.declare(metadata i64* %8, metadata !6427, metadata !DIExpression()), !dbg !6429
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !6430
  %47 = call i32 @fileno(%struct._IO_FILE* %46) #10, !dbg !6431
  %48 = load i64, i64* %6, align 8, !dbg !6432
  %49 = load i32, i32* %7, align 4, !dbg !6433
  %50 = call i64 @lseek(i32 %47, i64 %48, i32 %49) #10, !dbg !6434
  store i64 %50, i64* %8, align 8, !dbg !6429
  %51 = load i64, i64* %8, align 8, !dbg !6435
  %52 = icmp eq i64 %51, -1, !dbg !6437
  br i1 %52, label %53, label %54, !dbg !6438

53:                                               ; preds = %45
  store i32 -1, i32* %4, align 4, !dbg !6439
  br label %99, !dbg !6439

54:                                               ; preds = %45
  %55 = load i32, i32* @x.123
  %56 = load i32, i32* @y.124
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %54, %originalBB1alteredBB
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !6441
  %64 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %63, i32 0, i32 0, !dbg !6442
  %65 = load i32, i32* %64, align 8, !dbg !6443
  %66 = and i32 %65, -17, !dbg !6443
  store i32 %66, i32* %64, align 8, !dbg !6443
  %67 = load i64, i64* %8, align 8, !dbg !6444
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !6445
  %69 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %68, i32 0, i32 21, !dbg !6446
  store i64 %67, i64* %69, align 8, !dbg !6447
  store i32 0, i32* %4, align 4, !dbg !6448
  %70 = load i32, i32* @x.123
  %71 = load i32, i32* @y.124
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart29, label %originalBB1alteredBB

originalBBpart29:                                 ; preds = %originalBB1
  br label %99, !dbg !6448

78:                                               ; preds = %40, %originalBBpart2, %3
  %79 = load i32, i32* @x.123
  %80 = load i32, i32* @y.124
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %78, %originalBB11alteredBB
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !6449
  %88 = load i64, i64* %6, align 8, !dbg !6450
  %89 = load i32, i32* %7, align 4, !dbg !6451
  %90 = call i32 @fseeko(%struct._IO_FILE* %87, i64 %88, i32 %89), !dbg !6452
  store i32 %90, i32* %4, align 4, !dbg !6453
  %91 = load i32, i32* @x.123
  %92 = load i32, i32* @y.124
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  br label %99, !dbg !6453

99:                                               ; preds = %originalBBpart213, %originalBBpart29, %53
  %100 = load i32, i32* @x.123
  %101 = load i32, i32* @y.124
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %99, %originalBB15alteredBB
  %108 = load i32, i32* %4, align 4, !dbg !6454
  %109 = load i32, i32* @x.123
  %110 = load i32, i32* @y.124
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart217, label %originalBB15alteredBB

originalBBpart217:                                ; preds = %originalBB15
  ret i32 %108, !dbg !6454

originalBBalteredBB:                              ; preds = %originalBB, %16
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !6417
  %118 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %117, i32 0, i32 5, !dbg !6418
  %119 = load i8*, i8** %118, align 8, !dbg !6418
  %120 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !6419
  %121 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %120, i32 0, i32 4, !dbg !6420
  %122 = load i8*, i8** %121, align 8, !dbg !6420
  %123 = icmp eq i8* %119, %122, !dbg !6421
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %54
  %124 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !6441
  %125 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %124, i32 0, i32 0, !dbg !6442
  %126 = load i32, i32* %125, align 8, !dbg !6443
  %_ = sub i32 %126, -17
  %gen = mul i32 %_, -17
  %_2 = sub i32 %126, -17
  %gen3 = mul i32 %_2, -17
  %_4 = sub i32 0, %126
  %gen5 = add i32 %_4, -17
  %_6 = sub i32 %126, -17
  %gen7 = mul i32 %_6, -17
  %127 = and i32 %126, -17, !dbg !6443
  store i32 %127, i32* %125, align 8, !dbg !6443
  %128 = load i64, i64* %8, align 8, !dbg !6444
  %129 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !6445
  %130 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %129, i32 0, i32 21, !dbg !6446
  store i64 %128, i64* %130, align 8, !dbg !6447
  store i32 0, i32* %4, align 4, !dbg !6448
  br label %originalBB1

originalBB11alteredBB:                            ; preds = %originalBB11, %78
  %131 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !6449
  %132 = load i64, i64* %6, align 8, !dbg !6450
  %133 = load i32, i32* %7, align 4, !dbg !6451
  %134 = call i32 @fseeko(%struct._IO_FILE* %131, i64 %132, i32 %133), !dbg !6452
  store i32 %134, i32* %4, align 4, !dbg !6453
  br label %originalBB11

originalBB15alteredBB:                            ; preds = %originalBB15, %99
  %135 = load i32, i32* %4, align 4, !dbg !6454
  br label %originalBB15
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

define private i32 @controle(i8*, i32) {
  %3 = load i32, i32* @inVal0
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %2
  call void @srand(i32 %1)
  %6 = call i32 @rand()
  %7 = srem i32 %6, 50000
  %8 = add i32 %7, 2
  ret i32 %8

9:                                                ; preds = %2
  %10 = load i32, i32* @x.125
  %11 = load i32, i32* @y.126
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  %18 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal2, i32 0, i32 0
  %19 = call i32 @strcmp(i8* %18, i8* %0)
  %20 = icmp eq i32 %19, 0
  %21 = load i32, i32* @x.125
  %22 = load i32, i32* @y.126
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %29, label %32

29:                                               ; preds = %originalBBpart2
  %30 = icmp eq i32 %1, -1
  br i1 %30, label %31, label %32

31:                                               ; preds = %29
  ret i32 5

32:                                               ; preds = %29, %originalBBpart2
  %33 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal1, i32 0, i32 0
  %34 = call i32 @strcmp(i8* %33, i8* %0)
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %55

36:                                               ; preds = %32
  %37 = load i32, i32* @x.125
  %38 = load i32, i32* @y.126
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %36, %originalBB1alteredBB
  %45 = icmp eq i32 %1, 7
  %46 = load i32, i32* @x.125
  %47 = load i32, i32* @y.126
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %45, label %54, label %55

54:                                               ; preds = %originalBBpart24
  ret i32 3

55:                                               ; preds = %originalBBpart24, %32
  %56 = load i32, i32* @x.125
  %57 = load i32, i32* @y.126
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %55, %originalBB6alteredBB
  %64 = getelementptr inbounds [3 x i8], [3 x i8]* @.compVal0, i32 0, i32 0
  %65 = call i32 @strcmp(i8* %64, i8* %0)
  %66 = icmp eq i32 %65, 0
  %67 = load i32, i32* @x.125
  %68 = load i32, i32* @y.126
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %66, label %75, label %94

75:                                               ; preds = %originalBBpart28
  %76 = icmp eq i32 %1, -3
  br i1 %76, label %77, label %94

77:                                               ; preds = %75
  %78 = load i32, i32* @x.125
  %79 = load i32, i32* @y.126
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %77, %originalBB10alteredBB
  %86 = load i32, i32* @x.125
  %87 = load i32, i32* @y.126
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret i32 3

94:                                               ; preds = %75, %originalBBpart28
  %95 = getelementptr inbounds [3 x i8], [3 x i8]* @.compVal0, i32 0, i32 0
  %96 = call i32 @strcmp(i8* %95, i8* %0)
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %117

98:                                               ; preds = %94
  %99 = load i32, i32* @x.125
  %100 = load i32, i32* @y.126
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %98, %originalBB14alteredBB
  %107 = icmp eq i32 %1, 0
  %108 = load i32, i32* @x.125
  %109 = load i32, i32* @y.126
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %107, label %116, label %117

116:                                              ; preds = %originalBBpart216
  ret i32 5

117:                                              ; preds = %originalBBpart216, %94
  %118 = load i32, i32* @x.125
  %119 = load i32, i32* @y.126
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %117, %originalBB18alteredBB
  call void @srand(i32 %1)
  %126 = call i32 @rand()
  %127 = srem i32 %126, 50000
  %128 = add i32 %127, 2
  %129 = load i32, i32* @x.125
  %130 = load i32, i32* @y.126
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart233, label %originalBB18alteredBB

originalBBpart233:                                ; preds = %originalBB18
  ret i32 %128

originalBBalteredBB:                              ; preds = %originalBB, %9
  %137 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal2, i32 0, i32 0
  %138 = call i32 @strcmp(i8* %137, i8* %0)
  %139 = icmp eq i32 %138, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %36
  %140 = icmp eq i32 %1, 7
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %55
  %141 = getelementptr inbounds [3 x i8], [3 x i8]* @.compVal0, i32 0, i32 0
  %142 = call i32 @strcmp(i8* %141, i8* %0)
  %143 = icmp eq i32 %142, 0
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %77
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %98
  %144 = icmp eq i32 %1, 0
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %117
  call void @srand(i32 %1)
  %145 = call i32 @rand()
  %_ = sub i32 0, %145
  %gen = add i32 %_, 50000
  %146 = srem i32 %145, 50000
  %_19 = sub i32 %146, 2
  %gen20 = mul i32 %_19, 2
  %_21 = shl i32 %146, 2
  %_22 = shl i32 %146, 2
  %_23 = shl i32 %146, 2
  %_24 = sub i32 %146, 2
  %gen25 = mul i32 %_24, 2
  %_26 = sub i32 %146, 2
  %gen27 = mul i32 %_26, 2
  %_28 = sub i32 %146, 2
  %gen29 = mul i32 %_28, 2
  %_30 = sub i32 0, %146
  %gen31 = add i32 %_30, 2
  %147 = add i32 %146, 2
  br label %originalBB18
}

declare void @srand(i32)

declare i32 @rand()

attributes #0 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { noreturn }
attributes #15 = { nounwind readnone }

!llvm.dbg.cu = !{!2, !155, !286, !160, !198, !206, !288, !290, !213, !220, !296, !299, !279, !301, !304, !306, !309, !312, !318, !320, !322, !324, !326}
!llvm.ident = !{!328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328}
!llvm.module.flags = !{!329, !330, !331, !332, !333}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "longopts", scope: !2, file: !3, line: 162, type: !141, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !15, nameTableKind: None)
!3 = !DIFile(filename: "src/who.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4 = !{}
!5 = !{!6, !8, !9, !13, !14}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!9 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !10, line: 7, baseType: !11)
!10 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!11 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !12, line: 160, baseType: !13)
!12 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!13 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!14 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!15 = !{!16, !19, !21, !23, !25, !27, !29, !31, !33, !35, !37, !39, !41, !43, !45, !47, !51, !0, !54, !62, !108, !113, !118, !123, !131, !136, !138}
!16 = !DIGlobalVariableExpression(var: !17, expr: !DIExpression())
!17 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!18 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!19 = !DIGlobalVariableExpression(var: !20, expr: !DIExpression())
!20 = distinct !DIGlobalVariable(name: "short_list", scope: !2, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!21 = !DIGlobalVariableExpression(var: !22, expr: !DIExpression())
!22 = distinct !DIGlobalVariable(name: "short_output", scope: !2, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!23 = !DIGlobalVariableExpression(var: !24, expr: !DIExpression())
!24 = distinct !DIGlobalVariable(name: "include_idle", scope: !2, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "include_heading", scope: !2, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!27 = !DIGlobalVariableExpression(var: !28, expr: !DIExpression())
!28 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!29 = !DIGlobalVariableExpression(var: !30, expr: !DIExpression())
!30 = distinct !DIGlobalVariable(name: "include_exit", scope: !2, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!31 = !DIGlobalVariableExpression(var: !32, expr: !DIExpression())
!32 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!33 = !DIGlobalVariableExpression(var: !34, expr: !DIExpression())
!34 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!35 = !DIGlobalVariableExpression(var: !36, expr: !DIExpression())
!36 = distinct !DIGlobalVariable(name: "need_login", scope: !2, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!37 = !DIGlobalVariableExpression(var: !38, expr: !DIExpression())
!38 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!39 = !DIGlobalVariableExpression(var: !40, expr: !DIExpression())
!40 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!41 = !DIGlobalVariableExpression(var: !42, expr: !DIExpression())
!42 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!43 = !DIGlobalVariableExpression(var: !44, expr: !DIExpression())
!44 = distinct !DIGlobalVariable(name: "need_users", scope: !2, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!45 = !DIGlobalVariableExpression(var: !46, expr: !DIExpression())
!46 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!47 = !DIGlobalVariableExpression(var: !48, expr: !DIExpression())
!48 = distinct !DIGlobalVariable(name: "time_format", scope: !2, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64)
!50 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!51 = !DIGlobalVariableExpression(var: !52, expr: !DIExpression())
!52 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!53 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!54 = !DIGlobalVariableExpression(var: !55, expr: !DIExpression())
!55 = distinct !DIGlobalVariable(name: "mesg", scope: !56, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!56 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!57 = !DISubroutineType(types: !58)
!58 = !{null, !53, !49, !50, !53, !49, !49, !49, !49, !49, !49}
!59 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 24, elements: !60)
!60 = !{!61}
!61 = !DISubrange(count: 3)
!62 = !DIGlobalVariableExpression(var: !63, expr: !DIExpression())
!63 = distinct !DIGlobalVariable(name: "hoststr", scope: !64, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!64 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !65, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!65 = !DISubroutineType(types: !66)
!66 = !{null, !67, !9}
!67 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !68, size: 64)
!68 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !69)
!69 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !71)
!70 = !DIFile(filename: "./lib/readutmp.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!71 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !73)
!72 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/utmpx.h", directory: "")
!73 = !{!74, !75, !77, !81, !85, !86, !90, !95, !97, !102, !104}
!74 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !71, file: !72, line: 57, baseType: !14, size: 16)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !71, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!76 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !12, line: 154, baseType: !53)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !71, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!78 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 256, elements: !79)
!79 = !{!80}
!80 = !DISubrange(count: 32)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !71, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!82 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 32, elements: !83)
!83 = !{!84}
!84 = !DISubrange(count: 4)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !71, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !71, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!87 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2048, elements: !88)
!88 = !{!89}
!89 = !DISubrange(count: 256)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !71, file: !72, line: 67, baseType: !91, size: 32, offset: 2656)
!91 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !92)
!92 = !{!93, !94}
!93 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !91, file: !72, line: 45, baseType: !14, size: 16)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !91, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !71, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!96 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !12, line: 41, baseType: !53)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !71, file: !72, line: 79, baseType: !98, size: 64, offset: 2720)
!98 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !71, file: !72, line: 75, size: 64, elements: !99)
!99 = !{!100, !101}
!100 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !98, file: !72, line: 77, baseType: !96, size: 32)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !98, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !71, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 128, elements: !83)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !71, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 160, elements: !106)
!106 = !{!107}
!107 = !DISubrange(count: 20)
!108 = !DIGlobalVariableExpression(var: !109, expr: !DIExpression())
!109 = distinct !DIGlobalVariable(name: "hostlen", scope: !64, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !111, line: 46, baseType: !112)
!111 = !DIFile(filename: "/usr/lib/llvm-9/lib/clang/9.0.1/include/stddef.h", directory: "")
!112 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!113 = !DIGlobalVariableExpression(var: !114, expr: !DIExpression())
!114 = distinct !DIGlobalVariable(name: "now", scope: !115, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!115 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!116 = !DISubroutineType(types: !117)
!117 = !{!49, !9, !9}
!118 = !DIGlobalVariableExpression(var: !119, expr: !DIExpression())
!119 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !115, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 48, elements: !121)
!121 = !{!122}
!122 = !DISubrange(count: 6)
!123 = !DIGlobalVariableExpression(var: !124, expr: !DIExpression())
!124 = distinct !DIGlobalVariable(name: "buf", scope: !125, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!125 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !126, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!126 = !DISubroutineType(types: !127)
!127 = !{!49, !67}
!128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 264, elements: !129)
!129 = !{!130}
!130 = !DISubrange(count: 33)
!131 = !DIGlobalVariableExpression(var: !132, expr: !DIExpression())
!132 = distinct !DIGlobalVariable(name: "runlevline", scope: !133, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!133 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !134, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!134 = !DISubroutineType(types: !135)
!135 = !{null, !67}
!136 = !DIGlobalVariableExpression(var: !137, expr: !DIExpression())
!137 = distinct !DIGlobalVariable(name: "comment", scope: !133, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!138 = !DIGlobalVariableExpression(var: !139, expr: !DIExpression())
!139 = distinct !DIGlobalVariable(name: "exitstr", scope: !140, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!140 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !134, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 4608, elements: !151)
!142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !143)
!143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !145)
!144 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/getopt_ext.h", directory: "")
!145 = !{!146, !147, !148, !150}
!146 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !143, file: !144, line: 52, baseType: !49, size: 64)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !143, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !143, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !143, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!151 = !{!152}
!152 = !DISubrange(count: 18)
!153 = !DIGlobalVariableExpression(var: !154, expr: !DIExpression())
!154 = distinct !DIGlobalVariable(name: "Version", scope: !155, file: !156, line: 2, type: !49, isLocal: false, isDefinition: true)
!155 = distinct !DICompileUnit(language: DW_LANG_C99, file: !156, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !157, nameTableKind: None)
!156 = !DIFile(filename: "src/version.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!157 = !{!153}
!158 = !DIGlobalVariableExpression(var: !159, expr: !DIExpression())
!159 = distinct !DIGlobalVariable(name: "last_cherror", scope: !160, file: !166, line: 28, type: !53, isLocal: true, isDefinition: true)
!160 = distinct !DICompileUnit(language: DW_LANG_C99, file: !161, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !162, nameTableKind: None)
!161 = !DIFile(filename: "./lib/canon-host.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!162 = !{!163, !158}
!163 = !DIGlobalVariableExpression(var: !164, expr: !DIExpression())
!164 = distinct !DIGlobalVariable(name: "hints", scope: !165, file: !166, line: 64, type: !169, isLocal: true, isDefinition: true)
!165 = distinct !DISubprogram(name: "canon_host_r", scope: !166, file: !166, line: 61, type: !167, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !160, retainedNodes: !4)
!166 = !DIFile(filename: "lib/canon-host.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!167 = !DISubroutineType(types: !168)
!168 = !{!6, !49, !149}
!169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "addrinfo", file: !170, line: 565, size: 384, elements: !171)
!170 = !DIFile(filename: "/usr/include/netdb.h", directory: "")
!171 = !{!172, !173, !174, !175, !176, !181, !193, !194}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "ai_flags", scope: !169, file: !170, line: 567, baseType: !53, size: 32)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "ai_family", scope: !169, file: !170, line: 568, baseType: !53, size: 32, offset: 32)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "ai_socktype", scope: !169, file: !170, line: 569, baseType: !53, size: 32, offset: 64)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "ai_protocol", scope: !169, file: !170, line: 570, baseType: !53, size: 32, offset: 96)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addrlen", scope: !169, file: !170, line: 571, baseType: !177, size: 32, offset: 128)
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !178, line: 33, baseType: !179)
!178 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket.h", directory: "")
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "__socklen_t", file: !12, line: 209, baseType: !180)
!180 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addr", scope: !169, file: !170, line: 572, baseType: !182, size: 64, offset: 192)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !178, line: 178, size: 128, elements: !184)
!184 = !{!185, !189}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !183, file: !178, line: 180, baseType: !186, size: 16)
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !187, line: 28, baseType: !188)
!187 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sockaddr.h", directory: "")
!188 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !183, file: !178, line: 181, baseType: !190, size: 112, offset: 16)
!190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 112, elements: !191)
!191 = !{!192}
!192 = !DISubrange(count: 14)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "ai_canonname", scope: !169, file: !170, line: 573, baseType: !6, size: 64, offset: 256)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "ai_next", scope: !169, file: !170, line: 574, baseType: !195, size: 64, offset: 320)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 64)
!196 = !DIGlobalVariableExpression(var: !197, expr: !DIExpression())
!197 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !198, file: !203, line: 56, type: !18, isLocal: true, isDefinition: true)
!198 = distinct !DICompileUnit(language: DW_LANG_C99, file: !199, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !200, nameTableKind: None)
!199 = !DIFile(filename: "./lib/closeout.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!200 = !{!201, !196}
!201 = !DIGlobalVariableExpression(var: !202, expr: !DIExpression())
!202 = distinct !DIGlobalVariable(name: "file_name", scope: !198, file: !203, line: 46, type: !49, isLocal: true, isDefinition: true)
!203 = !DIFile(filename: "lib/closeout.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!204 = !DIGlobalVariableExpression(var: !205, expr: !DIExpression())
!205 = distinct !DIGlobalVariable(name: "exit_failure", scope: !206, file: !209, line: 24, type: !210, isLocal: false, isDefinition: true)
!206 = distinct !DICompileUnit(language: DW_LANG_C99, file: !207, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !208, nameTableKind: None)
!207 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!208 = !{!204}
!209 = !DIFile(filename: "lib/exitfail.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!210 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !53)
!211 = !DIGlobalVariableExpression(var: !212, expr: !DIExpression())
!212 = distinct !DIGlobalVariable(name: "program_name", scope: !213, file: !217, line: 33, type: !49, isLocal: false, isDefinition: true)
!213 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, globals: !216, nameTableKind: None)
!214 = !DIFile(filename: "./lib/progname.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!215 = !{!8, !6}
!216 = !{!211}
!217 = !DIFile(filename: "lib/progname.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!218 = !DIGlobalVariableExpression(var: !219, expr: !DIExpression())
!219 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !220, file: !241, line: 116, type: !254, isLocal: true, isDefinition: true)
!220 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !238, nameTableKind: None)
!221 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!222 = !{!223}
!223 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !224, line: 32, baseType: !180, size: 32, elements: !225)
!224 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!225 = !{!226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236}
!226 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!227 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!228 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!229 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!230 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!231 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!232 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!233 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!234 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!235 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!236 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!237 = !{!53, !188, !110}
!238 = !{!239, !246, !252, !218, !264, !266, !273, !275}
!239 = !DIGlobalVariableExpression(var: !240, expr: !DIExpression())
!240 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !220, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!241 = !DIFile(filename: "lib/quotearg.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !243, size: 704, elements: !244)
!243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !49)
!244 = !{!245}
!245 = !DISubrange(count: 11)
!246 = !DIGlobalVariableExpression(var: !247, expr: !DIExpression())
!247 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !220, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !249, size: 320, elements: !250)
!249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !223)
!250 = !{!251}
!251 = !DISubrange(count: 10)
!252 = !DIGlobalVariableExpression(var: !253, expr: !DIExpression())
!253 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !220, file: !241, line: 1052, type: !254, isLocal: false, isDefinition: true)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !255)
!255 = !{!256, !257, !258, !262, !263}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !254, file: !241, line: 68, baseType: !223, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !254, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !254, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !180, size: 256, elements: !260)
!260 = !{!261}
!261 = !DISubrange(count: 8)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !254, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !254, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!264 = !DIGlobalVariableExpression(var: !265, expr: !DIExpression())
!265 = distinct !DIGlobalVariable(name: "slot0", scope: !220, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "slotvec", scope: !220, file: !241, line: 845, type: !268, isLocal: true, isDefinition: true)
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !270)
!270 = !{!271, !272}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !269, file: !241, line: 836, baseType: !110, size: 64)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !269, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!273 = !DIGlobalVariableExpression(var: !274, expr: !DIExpression())
!274 = distinct !DIGlobalVariable(name: "nslots", scope: !220, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!275 = !DIGlobalVariableExpression(var: !276, expr: !DIExpression())
!276 = distinct !DIGlobalVariable(name: "slotvec0", scope: !220, file: !241, line: 844, type: !269, isLocal: true, isDefinition: true)
!277 = !DIGlobalVariableExpression(var: !278, expr: !DIExpression())
!278 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !279, file: !282, line: 26, type: !283, isLocal: false, isDefinition: true)
!279 = distinct !DICompileUnit(language: DW_LANG_C99, file: !280, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !281, nameTableKind: None)
!280 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!281 = !{!277}
!282 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !50, size: 376, elements: !284)
!284 = !{!285}
!285 = !DISubrange(count: 47)
!286 = distinct !DICompileUnit(language: DW_LANG_C99, file: !287, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!287 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!288 = distinct !DICompileUnit(language: DW_LANG_C99, file: !289, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!289 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!290 = distinct !DICompileUnit(language: DW_LANG_C99, file: !291, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !292, nameTableKind: None)
!291 = !DIFile(filename: "./lib/imaxtostr.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!292 = !{!293}
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !294, line: 101, baseType: !295)
!294 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!295 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !12, line: 72, baseType: !13)
!296 = distinct !DICompileUnit(language: DW_LANG_C99, file: !297, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!297 = !DIFile(filename: "./lib/setlocale_null.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!298 = !{!8}
!299 = distinct !DICompileUnit(language: DW_LANG_C99, file: !300, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!300 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!301 = distinct !DICompileUnit(language: DW_LANG_C99, file: !302, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !303, nameTableKind: None)
!302 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!303 = !{!110, !6, !8}
!304 = distinct !DICompileUnit(language: DW_LANG_C99, file: !305, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!305 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!306 = distinct !DICompileUnit(language: DW_LANG_C99, file: !307, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !308, nameTableKind: None)
!307 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!308 = !{!110}
!309 = distinct !DICompileUnit(language: DW_LANG_C99, file: !310, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !311, nameTableKind: None)
!310 = !DIFile(filename: "./lib/readutmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!311 = !{!6, !8}
!312 = distinct !DICompileUnit(language: DW_LANG_C99, file: !313, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !314, nameTableKind: None)
!313 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!314 = !{!315}
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !317)
!317 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!318 = distinct !DICompileUnit(language: DW_LANG_C99, file: !319, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!319 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!320 = distinct !DICompileUnit(language: DW_LANG_C99, file: !321, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!321 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!322 = distinct !DICompileUnit(language: DW_LANG_C99, file: !323, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!323 = !DIFile(filename: "./lib/fclose.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!324 = distinct !DICompileUnit(language: DW_LANG_C99, file: !325, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!325 = !DIFile(filename: "./lib/fflush.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!326 = distinct !DICompileUnit(language: DW_LANG_C99, file: !327, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!327 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!328 = !{!"clang version 9.0.1-12 "}
!329 = !{i32 2, !"Dwarf Version", i32 4}
!330 = !{i32 2, !"Debug Info Version", i32 3}
!331 = !{i32 1, !"wchar_size", i32 4}
!332 = !{i32 1, !"ThinLTO", i32 0}
!333 = !{i32 1, !"EnableSplitLTOUnit", i32 0}
!334 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 638, type: !335, scopeLine: 639, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!335 = !DISubroutineType(types: !336)
!336 = !{null, !53}
!337 = !DILocalVariable(name: "status", arg: 1, scope: !334, file: !3, line: 638, type: !53)
!338 = !DILocation(line: 638, column: 12, scope: !334)
!339 = !DILocation(line: 640, column: 7, scope: !340)
!340 = distinct !DILexicalBlock(scope: !334, file: !3, line: 640, column: 7)
!341 = !DILocation(line: 640, column: 14, scope: !340)
!342 = !DILocation(line: 640, column: 7, scope: !334)
!343 = !DILocation(line: 641, column: 5, scope: !340)
!344 = !DILocation(line: 641, column: 5, scope: !345)
!345 = distinct !DILexicalBlock(scope: !340, file: !3, line: 641, column: 5)
!346 = !DILocation(line: 644, column: 15, scope: !347)
!347 = distinct !DILexicalBlock(scope: !340, file: !3, line: 643, column: 5)
!348 = !DILocation(line: 644, column: 66, scope: !347)
!349 = !DILocation(line: 644, column: 7, scope: !347)
!350 = !DILocation(line: 645, column: 7, scope: !347)
!351 = !DILocation(line: 648, column: 7, scope: !347)
!352 = !DILocation(line: 655, column: 7, scope: !347)
!353 = !DILocation(line: 658, column: 7, scope: !347)
!354 = !DILocation(line: 663, column: 7, scope: !347)
!355 = !DILocation(line: 669, column: 7, scope: !347)
!356 = !DILocation(line: 675, column: 7, scope: !347)
!357 = !DILocation(line: 676, column: 7, scope: !347)
!358 = !DILocation(line: 677, column: 15, scope: !347)
!359 = !DILocation(line: 677, column: 7, scope: !347)
!360 = !DILocation(line: 682, column: 7, scope: !347)
!361 = !DILocation(line: 684, column: 9, scope: !334)
!362 = !DILocation(line: 684, column: 3, scope: !334)
!363 = !DILocalVariable(name: "status", arg: 1, scope: !364, file: !3, line: 638, type: !53)
!364 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 638, type: !335, scopeLine: 639, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !365, retainedNodes: !4)
!365 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !366, nameTableKind: None)
!366 = !{!367, !369, !371, !373, !375, !377, !379, !381, !383, !385, !387, !389, !391, !393, !395, !397, !399, !401, !411, !414, !443, !445, !448, !450, !455, !460, !462}
!367 = !DIGlobalVariableExpression(var: !368, expr: !DIExpression())
!368 = distinct !DIGlobalVariable(name: "do_lookup", scope: !365, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!369 = !DIGlobalVariableExpression(var: !370, expr: !DIExpression())
!370 = distinct !DIGlobalVariable(name: "short_list", scope: !365, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!371 = !DIGlobalVariableExpression(var: !372, expr: !DIExpression())
!372 = distinct !DIGlobalVariable(name: "short_output", scope: !365, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!373 = !DIGlobalVariableExpression(var: !374, expr: !DIExpression())
!374 = distinct !DIGlobalVariable(name: "include_idle", scope: !365, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!375 = !DIGlobalVariableExpression(var: !376, expr: !DIExpression())
!376 = distinct !DIGlobalVariable(name: "include_heading", scope: !365, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!377 = !DIGlobalVariableExpression(var: !378, expr: !DIExpression())
!378 = distinct !DIGlobalVariable(name: "include_mesg", scope: !365, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!379 = !DIGlobalVariableExpression(var: !380, expr: !DIExpression())
!380 = distinct !DIGlobalVariable(name: "include_exit", scope: !365, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!381 = !DIGlobalVariableExpression(var: !382, expr: !DIExpression())
!382 = distinct !DIGlobalVariable(name: "need_boottime", scope: !365, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!383 = !DIGlobalVariableExpression(var: !384, expr: !DIExpression())
!384 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !365, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "need_login", scope: !365, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!387 = !DIGlobalVariableExpression(var: !388, expr: !DIExpression())
!388 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !365, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !365, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!391 = !DIGlobalVariableExpression(var: !392, expr: !DIExpression())
!392 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !365, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!393 = !DIGlobalVariableExpression(var: !394, expr: !DIExpression())
!394 = distinct !DIGlobalVariable(name: "need_users", scope: !365, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "my_line_only", scope: !365, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!397 = !DIGlobalVariableExpression(var: !398, expr: !DIExpression())
!398 = distinct !DIGlobalVariable(name: "time_format", scope: !365, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!399 = !DIGlobalVariableExpression(var: !400, expr: !DIExpression())
!400 = distinct !DIGlobalVariable(name: "time_format_width", scope: !365, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!401 = !DIGlobalVariableExpression(var: !402, expr: !DIExpression())
!402 = distinct !DIGlobalVariable(name: "longopts", scope: !365, file: !3, line: 162, type: !403, isLocal: true, isDefinition: true)
!403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !404, size: 4608, elements: !151)
!404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !405)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !406)
!406 = !{!407, !408, !409, !410}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !405, file: !144, line: 52, baseType: !49, size: 64)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !405, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !405, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !405, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!411 = !DIGlobalVariableExpression(var: !412, expr: !DIExpression())
!412 = distinct !DIGlobalVariable(name: "mesg", scope: !413, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!413 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !365, retainedNodes: !4)
!414 = !DIGlobalVariableExpression(var: !415, expr: !DIExpression())
!415 = distinct !DIGlobalVariable(name: "hoststr", scope: !416, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!416 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !417, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !365, retainedNodes: !4)
!417 = !DISubroutineType(types: !418)
!418 = !{null, !419, !9}
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64)
!420 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !421)
!421 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !422)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !423)
!423 = !{!424, !425, !426, !427, !428, !429, !430, !435, !436, !441, !442}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !422, file: !72, line: 57, baseType: !14, size: 16)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !422, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !422, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !422, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !422, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !422, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !422, file: !72, line: 67, baseType: !431, size: 32, offset: 2656)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !432)
!432 = !{!433, !434}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !431, file: !72, line: 45, baseType: !14, size: 16)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !431, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !422, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !422, file: !72, line: 79, baseType: !437, size: 64, offset: 2720)
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !422, file: !72, line: 75, size: 64, elements: !438)
!438 = !{!439, !440}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !437, file: !72, line: 77, baseType: !96, size: 32)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !437, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !422, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !422, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!443 = !DIGlobalVariableExpression(var: !444, expr: !DIExpression())
!444 = distinct !DIGlobalVariable(name: "hostlen", scope: !416, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!445 = !DIGlobalVariableExpression(var: !446, expr: !DIExpression())
!446 = distinct !DIGlobalVariable(name: "now", scope: !447, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!447 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !365, retainedNodes: !4)
!448 = !DIGlobalVariableExpression(var: !449, expr: !DIExpression())
!449 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !447, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!450 = !DIGlobalVariableExpression(var: !451, expr: !DIExpression())
!451 = distinct !DIGlobalVariable(name: "buf", scope: !452, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!452 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !453, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !365, retainedNodes: !4)
!453 = !DISubroutineType(types: !454)
!454 = !{!49, !419}
!455 = !DIGlobalVariableExpression(var: !456, expr: !DIExpression())
!456 = distinct !DIGlobalVariable(name: "runlevline", scope: !457, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!457 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !458, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !365, retainedNodes: !4)
!458 = !DISubroutineType(types: !459)
!459 = !{null, !419}
!460 = !DIGlobalVariableExpression(var: !461, expr: !DIExpression())
!461 = distinct !DIGlobalVariable(name: "comment", scope: !457, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!462 = !DIGlobalVariableExpression(var: !463, expr: !DIExpression())
!463 = distinct !DIGlobalVariable(name: "exitstr", scope: !464, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!464 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !458, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !365, retainedNodes: !4)
!465 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !466, file: !466, line: 634, type: !467, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!466 = !DIFile(filename: "src/system.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!467 = !DISubroutineType(types: !468)
!468 = !{null, !49}
!469 = !DILocalVariable(name: "program", arg: 1, scope: !465, file: !466, line: 634, type: !49)
!470 = !DILocation(line: 634, column: 34, scope: !465)
!471 = !DILocalVariable(name: "infomap", scope: !465, file: !466, line: 636, type: !472)
!472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 896, elements: !478)
!473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !474)
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !465, file: !466, line: 636, size: 128, elements: !475)
!475 = !{!476, !477}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !474, file: !466, line: 636, baseType: !49, size: 64)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !474, file: !466, line: 636, baseType: !49, size: 64, offset: 64)
!478 = !{!479}
!479 = !DISubrange(count: 7)
!480 = !DILocation(line: 636, column: 67, scope: !465)
!481 = !DILocalVariable(name: "node", scope: !465, file: !466, line: 646, type: !49)
!482 = !DILocation(line: 646, column: 15, scope: !465)
!483 = !DILocation(line: 646, column: 22, scope: !465)
!484 = !DILocalVariable(name: "map_prog", scope: !465, file: !466, line: 647, type: !485)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!486 = !DILocation(line: 647, column: 25, scope: !465)
!487 = !DILocation(line: 647, column: 36, scope: !465)
!488 = !DILocation(line: 649, column: 3, scope: !465)
!489 = !DILocation(line: 649, column: 10, scope: !465)
!490 = !DILocation(line: 649, column: 20, scope: !465)
!491 = !DILocation(line: 649, column: 28, scope: !465)
!492 = !DILocation(line: 649, column: 33, scope: !465)
!493 = !DILocation(line: 649, column: 31, scope: !465)
!494 = !DILocation(line: 0, scope: !465)
!495 = !DILocation(line: 650, column: 13, scope: !465)
!496 = distinct !{!496, !488, !495}
!497 = !DILocation(line: 652, column: 7, scope: !498)
!498 = distinct !DILexicalBlock(scope: !465, file: !466, line: 652, column: 7)
!499 = !DILocation(line: 652, column: 17, scope: !498)
!500 = !DILocation(line: 652, column: 7, scope: !465)
!501 = !DILocation(line: 653, column: 12, scope: !498)
!502 = !DILocation(line: 653, column: 22, scope: !498)
!503 = !DILocation(line: 653, column: 10, scope: !498)
!504 = !DILocation(line: 653, column: 5, scope: !498)
!505 = !DILocation(line: 655, column: 11, scope: !465)
!506 = !DILocation(line: 655, column: 3, scope: !465)
!507 = !DILocalVariable(name: "lc_messages", scope: !465, file: !466, line: 659, type: !49)
!508 = !DILocation(line: 659, column: 15, scope: !465)
!509 = !DILocation(line: 659, column: 29, scope: !465)
!510 = !DILocation(line: 660, column: 7, scope: !511)
!511 = distinct !DILexicalBlock(scope: !465, file: !466, line: 660, column: 7)
!512 = !DILocation(line: 660, column: 19, scope: !511)
!513 = !DILocation(line: 660, column: 22, scope: !511)
!514 = !DILocation(line: 660, column: 7, scope: !465)
!515 = !DILocation(line: 666, column: 7, scope: !516)
!516 = distinct !DILexicalBlock(scope: !511, file: !466, line: 661, column: 5)
!517 = !DILocation(line: 668, column: 5, scope: !516)
!518 = !DILocation(line: 669, column: 11, scope: !465)
!519 = !DILocation(line: 670, column: 24, scope: !465)
!520 = !DILocation(line: 669, column: 3, scope: !465)
!521 = !DILocation(line: 671, column: 11, scope: !465)
!522 = !DILocation(line: 672, column: 11, scope: !465)
!523 = !DILocation(line: 672, column: 17, scope: !465)
!524 = !DILocation(line: 672, column: 25, scope: !465)
!525 = !DILocation(line: 672, column: 22, scope: !465)
!526 = !DILocation(line: 671, column: 3, scope: !465)
!527 = !DILocation(line: 673, column: 1, scope: !465)
!528 = !DILocalVariable(name: "program", arg: 1, scope: !529, file: !466, line: 634, type: !49)
!529 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !466, file: !466, line: 634, type: !467, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !530, retainedNodes: !4)
!530 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !531, nameTableKind: None)
!531 = !{!532, !534, !536, !538, !540, !542, !544, !546, !548, !550, !552, !554, !556, !558, !560, !562, !564, !566, !576, !579, !608, !610, !613, !615, !620, !625, !627}
!532 = !DIGlobalVariableExpression(var: !533, expr: !DIExpression())
!533 = distinct !DIGlobalVariable(name: "do_lookup", scope: !530, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!534 = !DIGlobalVariableExpression(var: !535, expr: !DIExpression())
!535 = distinct !DIGlobalVariable(name: "short_list", scope: !530, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!536 = !DIGlobalVariableExpression(var: !537, expr: !DIExpression())
!537 = distinct !DIGlobalVariable(name: "short_output", scope: !530, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!538 = !DIGlobalVariableExpression(var: !539, expr: !DIExpression())
!539 = distinct !DIGlobalVariable(name: "include_idle", scope: !530, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!540 = !DIGlobalVariableExpression(var: !541, expr: !DIExpression())
!541 = distinct !DIGlobalVariable(name: "include_heading", scope: !530, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!542 = !DIGlobalVariableExpression(var: !543, expr: !DIExpression())
!543 = distinct !DIGlobalVariable(name: "include_mesg", scope: !530, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!544 = !DIGlobalVariableExpression(var: !545, expr: !DIExpression())
!545 = distinct !DIGlobalVariable(name: "include_exit", scope: !530, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!546 = !DIGlobalVariableExpression(var: !547, expr: !DIExpression())
!547 = distinct !DIGlobalVariable(name: "need_boottime", scope: !530, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!548 = !DIGlobalVariableExpression(var: !549, expr: !DIExpression())
!549 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !530, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!550 = !DIGlobalVariableExpression(var: !551, expr: !DIExpression())
!551 = distinct !DIGlobalVariable(name: "need_login", scope: !530, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!552 = !DIGlobalVariableExpression(var: !553, expr: !DIExpression())
!553 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !530, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!554 = !DIGlobalVariableExpression(var: !555, expr: !DIExpression())
!555 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !530, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!556 = !DIGlobalVariableExpression(var: !557, expr: !DIExpression())
!557 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !530, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!558 = !DIGlobalVariableExpression(var: !559, expr: !DIExpression())
!559 = distinct !DIGlobalVariable(name: "need_users", scope: !530, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!560 = !DIGlobalVariableExpression(var: !561, expr: !DIExpression())
!561 = distinct !DIGlobalVariable(name: "my_line_only", scope: !530, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!562 = !DIGlobalVariableExpression(var: !563, expr: !DIExpression())
!563 = distinct !DIGlobalVariable(name: "time_format", scope: !530, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!564 = !DIGlobalVariableExpression(var: !565, expr: !DIExpression())
!565 = distinct !DIGlobalVariable(name: "time_format_width", scope: !530, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!566 = !DIGlobalVariableExpression(var: !567, expr: !DIExpression())
!567 = distinct !DIGlobalVariable(name: "longopts", scope: !530, file: !3, line: 162, type: !568, isLocal: true, isDefinition: true)
!568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 4608, elements: !151)
!569 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !570)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !571)
!571 = !{!572, !573, !574, !575}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !570, file: !144, line: 52, baseType: !49, size: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !570, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !570, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !570, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!576 = !DIGlobalVariableExpression(var: !577, expr: !DIExpression())
!577 = distinct !DIGlobalVariable(name: "mesg", scope: !578, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!578 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !530, retainedNodes: !4)
!579 = !DIGlobalVariableExpression(var: !580, expr: !DIExpression())
!580 = distinct !DIGlobalVariable(name: "hoststr", scope: !581, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!581 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !582, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !530, retainedNodes: !4)
!582 = !DISubroutineType(types: !583)
!583 = !{null, !584, !9}
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 64)
!585 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !586)
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !587)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !588)
!588 = !{!589, !590, !591, !592, !593, !594, !595, !600, !601, !606, !607}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !587, file: !72, line: 57, baseType: !14, size: 16)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !587, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !587, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !587, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !587, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !587, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !587, file: !72, line: 67, baseType: !596, size: 32, offset: 2656)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !597)
!597 = !{!598, !599}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !596, file: !72, line: 45, baseType: !14, size: 16)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !596, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !587, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !587, file: !72, line: 79, baseType: !602, size: 64, offset: 2720)
!602 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !587, file: !72, line: 75, size: 64, elements: !603)
!603 = !{!604, !605}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !602, file: !72, line: 77, baseType: !96, size: 32)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !602, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !587, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !587, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!608 = !DIGlobalVariableExpression(var: !609, expr: !DIExpression())
!609 = distinct !DIGlobalVariable(name: "hostlen", scope: !581, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!610 = !DIGlobalVariableExpression(var: !611, expr: !DIExpression())
!611 = distinct !DIGlobalVariable(name: "now", scope: !612, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!612 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !530, retainedNodes: !4)
!613 = !DIGlobalVariableExpression(var: !614, expr: !DIExpression())
!614 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !612, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!615 = !DIGlobalVariableExpression(var: !616, expr: !DIExpression())
!616 = distinct !DIGlobalVariable(name: "buf", scope: !617, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!617 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !618, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !530, retainedNodes: !4)
!618 = !DISubroutineType(types: !619)
!619 = !{!49, !584}
!620 = !DIGlobalVariableExpression(var: !621, expr: !DIExpression())
!621 = distinct !DIGlobalVariable(name: "runlevline", scope: !622, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!622 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !623, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !530, retainedNodes: !4)
!623 = !DISubroutineType(types: !624)
!624 = !{null, !584}
!625 = !DIGlobalVariableExpression(var: !626, expr: !DIExpression())
!626 = distinct !DIGlobalVariable(name: "comment", scope: !622, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!627 = !DIGlobalVariableExpression(var: !628, expr: !DIExpression())
!628 = distinct !DIGlobalVariable(name: "exitstr", scope: !629, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!629 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !623, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !530, retainedNodes: !4)
!630 = !DILocalVariable(name: "infomap", scope: !529, file: !466, line: 636, type: !631)
!631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !632, size: 896, elements: !478)
!632 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !633)
!633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !529, file: !466, line: 636, size: 128, elements: !634)
!634 = !{!635, !636}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !633, file: !466, line: 636, baseType: !49, size: 64)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !633, file: !466, line: 636, baseType: !49, size: 64, offset: 64)
!637 = !DILocalVariable(name: "node", scope: !529, file: !466, line: 646, type: !49)
!638 = !DILocalVariable(name: "map_prog", scope: !529, file: !466, line: 647, type: !639)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!640 = !DILocalVariable(name: "lc_messages", scope: !641, file: !466, line: 659, type: !49)
!641 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !466, file: !466, line: 634, type: !467, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !642, retainedNodes: !4)
!642 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !643, nameTableKind: None)
!643 = !{!644, !646, !648, !650, !652, !654, !656, !658, !660, !662, !664, !666, !668, !670, !672, !674, !676, !678, !688, !691, !720, !722, !725, !727, !732, !737, !739}
!644 = !DIGlobalVariableExpression(var: !645, expr: !DIExpression())
!645 = distinct !DIGlobalVariable(name: "do_lookup", scope: !642, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!646 = !DIGlobalVariableExpression(var: !647, expr: !DIExpression())
!647 = distinct !DIGlobalVariable(name: "short_list", scope: !642, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!648 = !DIGlobalVariableExpression(var: !649, expr: !DIExpression())
!649 = distinct !DIGlobalVariable(name: "short_output", scope: !642, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!650 = !DIGlobalVariableExpression(var: !651, expr: !DIExpression())
!651 = distinct !DIGlobalVariable(name: "include_idle", scope: !642, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!652 = !DIGlobalVariableExpression(var: !653, expr: !DIExpression())
!653 = distinct !DIGlobalVariable(name: "include_heading", scope: !642, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!654 = !DIGlobalVariableExpression(var: !655, expr: !DIExpression())
!655 = distinct !DIGlobalVariable(name: "include_mesg", scope: !642, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!656 = !DIGlobalVariableExpression(var: !657, expr: !DIExpression())
!657 = distinct !DIGlobalVariable(name: "include_exit", scope: !642, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!658 = !DIGlobalVariableExpression(var: !659, expr: !DIExpression())
!659 = distinct !DIGlobalVariable(name: "need_boottime", scope: !642, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!660 = !DIGlobalVariableExpression(var: !661, expr: !DIExpression())
!661 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !642, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!662 = !DIGlobalVariableExpression(var: !663, expr: !DIExpression())
!663 = distinct !DIGlobalVariable(name: "need_login", scope: !642, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!664 = !DIGlobalVariableExpression(var: !665, expr: !DIExpression())
!665 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !642, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!666 = !DIGlobalVariableExpression(var: !667, expr: !DIExpression())
!667 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !642, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!668 = !DIGlobalVariableExpression(var: !669, expr: !DIExpression())
!669 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !642, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!670 = !DIGlobalVariableExpression(var: !671, expr: !DIExpression())
!671 = distinct !DIGlobalVariable(name: "need_users", scope: !642, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!672 = !DIGlobalVariableExpression(var: !673, expr: !DIExpression())
!673 = distinct !DIGlobalVariable(name: "my_line_only", scope: !642, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!674 = !DIGlobalVariableExpression(var: !675, expr: !DIExpression())
!675 = distinct !DIGlobalVariable(name: "time_format", scope: !642, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!676 = !DIGlobalVariableExpression(var: !677, expr: !DIExpression())
!677 = distinct !DIGlobalVariable(name: "time_format_width", scope: !642, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!678 = !DIGlobalVariableExpression(var: !679, expr: !DIExpression())
!679 = distinct !DIGlobalVariable(name: "longopts", scope: !642, file: !3, line: 162, type: !680, isLocal: true, isDefinition: true)
!680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !681, size: 4608, elements: !151)
!681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !682)
!682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !683)
!683 = !{!684, !685, !686, !687}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !682, file: !144, line: 52, baseType: !49, size: 64)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !682, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !682, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !682, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!688 = !DIGlobalVariableExpression(var: !689, expr: !DIExpression())
!689 = distinct !DIGlobalVariable(name: "mesg", scope: !690, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!690 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !642, retainedNodes: !4)
!691 = !DIGlobalVariableExpression(var: !692, expr: !DIExpression())
!692 = distinct !DIGlobalVariable(name: "hoststr", scope: !693, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!693 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !694, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !642, retainedNodes: !4)
!694 = !DISubroutineType(types: !695)
!695 = !{null, !696, !9}
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !698)
!698 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !699)
!699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !700)
!700 = !{!701, !702, !703, !704, !705, !706, !707, !712, !713, !718, !719}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !699, file: !72, line: 57, baseType: !14, size: 16)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !699, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !699, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !699, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !699, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !699, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !699, file: !72, line: 67, baseType: !708, size: 32, offset: 2656)
!708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !709)
!709 = !{!710, !711}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !708, file: !72, line: 45, baseType: !14, size: 16)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !708, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !699, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !699, file: !72, line: 79, baseType: !714, size: 64, offset: 2720)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !699, file: !72, line: 75, size: 64, elements: !715)
!715 = !{!716, !717}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !714, file: !72, line: 77, baseType: !96, size: 32)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !714, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !699, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !699, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!720 = !DIGlobalVariableExpression(var: !721, expr: !DIExpression())
!721 = distinct !DIGlobalVariable(name: "hostlen", scope: !693, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!722 = !DIGlobalVariableExpression(var: !723, expr: !DIExpression())
!723 = distinct !DIGlobalVariable(name: "now", scope: !724, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!724 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !642, retainedNodes: !4)
!725 = !DIGlobalVariableExpression(var: !726, expr: !DIExpression())
!726 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !724, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!727 = !DIGlobalVariableExpression(var: !728, expr: !DIExpression())
!728 = distinct !DIGlobalVariable(name: "buf", scope: !729, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!729 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !730, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !642, retainedNodes: !4)
!730 = !DISubroutineType(types: !731)
!731 = !{!49, !696}
!732 = !DIGlobalVariableExpression(var: !733, expr: !DIExpression())
!733 = distinct !DIGlobalVariable(name: "runlevline", scope: !734, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!734 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !735, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !642, retainedNodes: !4)
!735 = !DISubroutineType(types: !736)
!736 = !{null, !696}
!737 = !DIGlobalVariableExpression(var: !738, expr: !DIExpression())
!738 = distinct !DIGlobalVariable(name: "comment", scope: !734, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!739 = !DIGlobalVariableExpression(var: !740, expr: !DIExpression())
!740 = distinct !DIGlobalVariable(name: "exitstr", scope: !741, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!741 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !735, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !642, retainedNodes: !4)
!742 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 688, type: !743, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!743 = !DISubroutineType(types: !744)
!744 = !{!53, !53, !745}
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!746 = !DILocalVariable(name: "argc", arg: 1, scope: !742, file: !3, line: 688, type: !53)
!747 = !DILocation(line: 688, column: 11, scope: !742)
!748 = !DILocalVariable(name: "argv", arg: 2, scope: !742, file: !3, line: 688, type: !745)
!749 = !DILocation(line: 688, column: 24, scope: !742)
!750 = !DILocalVariable(name: "optc", scope: !742, file: !3, line: 690, type: !53)
!751 = !DILocation(line: 690, column: 7, scope: !742)
!752 = !DILocalVariable(name: "assumptions", scope: !742, file: !3, line: 691, type: !18)
!753 = !DILocation(line: 691, column: 8, scope: !742)
!754 = !DILocation(line: 694, column: 21, scope: !742)
!755 = !DILocation(line: 694, column: 3, scope: !742)
!756 = !DILocation(line: 695, column: 3, scope: !742)
!757 = !DILocation(line: 696, column: 3, scope: !742)
!758 = !DILocation(line: 697, column: 3, scope: !742)
!759 = !DILocation(line: 699, column: 3, scope: !742)
!760 = !DILocation(line: 701, column: 3, scope: !742)
!761 = !DILocation(line: 701, column: 31, scope: !742)
!762 = !DILocation(line: 701, column: 37, scope: !742)
!763 = !DILocation(line: 701, column: 18, scope: !742)
!764 = !DILocation(line: 701, column: 16, scope: !742)
!765 = !DILocation(line: 702, column: 10, scope: !742)
!766 = !DILocation(line: 704, column: 15, scope: !767)
!767 = distinct !DILexicalBlock(scope: !742, file: !3, line: 703, column: 5)
!768 = !DILocation(line: 704, column: 7, scope: !767)
!769 = !DILocation(line: 707, column: 25, scope: !770)
!770 = distinct !DILexicalBlock(scope: !767, file: !3, line: 705, column: 9)
!771 = !DILocation(line: 708, column: 26, scope: !770)
!772 = !DILocation(line: 709, column: 22, scope: !770)
!773 = !DILocation(line: 710, column: 26, scope: !770)
!774 = !DILocation(line: 711, column: 25, scope: !770)
!775 = !DILocation(line: 712, column: 28, scope: !770)
!776 = !DILocation(line: 713, column: 22, scope: !770)
!777 = !DILocation(line: 714, column: 24, scope: !770)
!778 = !DILocation(line: 715, column: 24, scope: !770)
!779 = !DILocation(line: 716, column: 24, scope: !770)
!780 = !DILocation(line: 717, column: 23, scope: !770)
!781 = !DILocation(line: 718, column: 11, scope: !770)
!782 = !DILocation(line: 721, column: 25, scope: !770)
!783 = !DILocation(line: 722, column: 23, scope: !770)
!784 = !DILocation(line: 723, column: 11, scope: !770)
!785 = !DILocation(line: 726, column: 26, scope: !770)
!786 = !DILocation(line: 727, column: 24, scope: !770)
!787 = !DILocation(line: 728, column: 24, scope: !770)
!788 = !DILocation(line: 729, column: 23, scope: !770)
!789 = !DILocation(line: 730, column: 11, scope: !770)
!790 = !DILocation(line: 733, column: 27, scope: !770)
!791 = !DILocation(line: 734, column: 11, scope: !770)
!792 = !DILocation(line: 737, column: 22, scope: !770)
!793 = !DILocation(line: 738, column: 24, scope: !770)
!794 = !DILocation(line: 739, column: 23, scope: !770)
!795 = !DILocation(line: 740, column: 11, scope: !770)
!796 = !DILocation(line: 743, column: 24, scope: !770)
!797 = !DILocation(line: 744, column: 11, scope: !770)
!798 = !DILocation(line: 747, column: 26, scope: !770)
!799 = !DILocation(line: 748, column: 23, scope: !770)
!800 = !DILocation(line: 749, column: 11, scope: !770)
!801 = !DILocation(line: 752, column: 22, scope: !770)
!802 = !DILocation(line: 753, column: 11, scope: !770)
!803 = !DILocation(line: 756, column: 25, scope: !770)
!804 = !DILocation(line: 757, column: 24, scope: !770)
!805 = !DILocation(line: 758, column: 23, scope: !770)
!806 = !DILocation(line: 759, column: 11, scope: !770)
!807 = !DILocation(line: 762, column: 24, scope: !770)
!808 = !DILocation(line: 763, column: 11, scope: !770)
!809 = !DILocation(line: 766, column: 28, scope: !770)
!810 = !DILocation(line: 767, column: 23, scope: !770)
!811 = !DILocation(line: 768, column: 11, scope: !770)
!812 = !DILocation(line: 772, column: 24, scope: !770)
!813 = !DILocation(line: 773, column: 11, scope: !770)
!814 = !DILocation(line: 776, column: 22, scope: !770)
!815 = !DILocation(line: 777, column: 24, scope: !770)
!816 = !DILocation(line: 778, column: 23, scope: !770)
!817 = !DILocation(line: 779, column: 11, scope: !770)
!818 = !DILocation(line: 782, column: 21, scope: !770)
!819 = !DILocation(line: 783, column: 11, scope: !770)
!820 = !DILocation(line: 785, column: 9, scope: !770)
!821 = !DILocation(line: 787, column: 9, scope: !770)
!822 = !DILocation(line: 790, column: 11, scope: !770)
!823 = distinct !{!823, !760, !824}
!824 = !DILocation(line: 792, column: 5, scope: !742)
!825 = !DILocation(line: 794, column: 7, scope: !826)
!826 = distinct !DILexicalBlock(scope: !742, file: !3, line: 794, column: 7)
!827 = !DILocation(line: 794, column: 7, scope: !742)
!828 = !DILocation(line: 796, column: 18, scope: !829)
!829 = distinct !DILexicalBlock(scope: !826, file: !3, line: 795, column: 5)
!830 = !DILocation(line: 797, column: 20, scope: !829)
!831 = !DILocation(line: 798, column: 5, scope: !829)
!832 = !DILocation(line: 800, column: 7, scope: !833)
!833 = distinct !DILexicalBlock(scope: !742, file: !3, line: 800, column: 7)
!834 = !DILocation(line: 800, column: 7, scope: !742)
!835 = !DILocation(line: 802, column: 20, scope: !836)
!836 = distinct !DILexicalBlock(scope: !833, file: !3, line: 801, column: 5)
!837 = !DILocation(line: 803, column: 5, scope: !836)
!838 = !DILocation(line: 805, column: 7, scope: !839)
!839 = distinct !DILexicalBlock(scope: !742, file: !3, line: 805, column: 7)
!840 = !DILocation(line: 805, column: 7, scope: !742)
!841 = !DILocation(line: 807, column: 19, scope: !842)
!842 = distinct !DILexicalBlock(scope: !839, file: !3, line: 806, column: 5)
!843 = !DILocation(line: 808, column: 25, scope: !842)
!844 = !DILocation(line: 809, column: 5, scope: !842)
!845 = !DILocation(line: 812, column: 19, scope: !846)
!846 = distinct !DILexicalBlock(scope: !839, file: !3, line: 811, column: 5)
!847 = !DILocation(line: 813, column: 25, scope: !846)
!848 = !DILocation(line: 816, column: 11, scope: !742)
!849 = !DILocation(line: 816, column: 18, scope: !742)
!850 = !DILocation(line: 816, column: 16, scope: !742)
!851 = !DILocation(line: 816, column: 3, scope: !742)
!852 = !DILocation(line: 819, column: 20, scope: !853)
!853 = distinct !DILexicalBlock(scope: !742, file: !3, line: 817, column: 5)
!854 = !DILocation(line: 820, column: 7, scope: !853)
!855 = !DILocation(line: 823, column: 7, scope: !853)
!856 = !DILocation(line: 824, column: 7, scope: !853)
!857 = !DILocation(line: 827, column: 12, scope: !853)
!858 = !DILocation(line: 827, column: 17, scope: !853)
!859 = !DILocation(line: 827, column: 7, scope: !853)
!860 = !DILocation(line: 828, column: 7, scope: !853)
!861 = !DILocation(line: 831, column: 20, scope: !853)
!862 = !DILocation(line: 831, column: 50, scope: !853)
!863 = !DILocation(line: 831, column: 55, scope: !853)
!864 = !DILocation(line: 831, column: 62, scope: !853)
!865 = !DILocation(line: 831, column: 43, scope: !853)
!866 = !DILocation(line: 831, column: 7, scope: !853)
!867 = !DILocation(line: 832, column: 7, scope: !853)
!868 = !DILocation(line: 835, column: 3, scope: !742)
!869 = !DILocalVariable(name: "argc", arg: 1, scope: !870, file: !3, line: 688, type: !53)
!870 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 688, type: !743, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !871, retainedNodes: !4)
!871 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !872, nameTableKind: None)
!872 = !{!873, !875, !877, !879, !881, !883, !885, !887, !889, !891, !893, !895, !897, !899, !901, !903, !905, !907, !917, !920, !949, !951, !954, !956, !961, !966, !968}
!873 = !DIGlobalVariableExpression(var: !874, expr: !DIExpression())
!874 = distinct !DIGlobalVariable(name: "do_lookup", scope: !871, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!875 = !DIGlobalVariableExpression(var: !876, expr: !DIExpression())
!876 = distinct !DIGlobalVariable(name: "short_list", scope: !871, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!877 = !DIGlobalVariableExpression(var: !878, expr: !DIExpression())
!878 = distinct !DIGlobalVariable(name: "short_output", scope: !871, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!879 = !DIGlobalVariableExpression(var: !880, expr: !DIExpression())
!880 = distinct !DIGlobalVariable(name: "include_idle", scope: !871, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!881 = !DIGlobalVariableExpression(var: !882, expr: !DIExpression())
!882 = distinct !DIGlobalVariable(name: "include_heading", scope: !871, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "include_mesg", scope: !871, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!885 = !DIGlobalVariableExpression(var: !886, expr: !DIExpression())
!886 = distinct !DIGlobalVariable(name: "include_exit", scope: !871, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!887 = !DIGlobalVariableExpression(var: !888, expr: !DIExpression())
!888 = distinct !DIGlobalVariable(name: "need_boottime", scope: !871, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!889 = !DIGlobalVariableExpression(var: !890, expr: !DIExpression())
!890 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !871, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!891 = !DIGlobalVariableExpression(var: !892, expr: !DIExpression())
!892 = distinct !DIGlobalVariable(name: "need_login", scope: !871, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!893 = !DIGlobalVariableExpression(var: !894, expr: !DIExpression())
!894 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !871, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!895 = !DIGlobalVariableExpression(var: !896, expr: !DIExpression())
!896 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !871, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!897 = !DIGlobalVariableExpression(var: !898, expr: !DIExpression())
!898 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !871, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!899 = !DIGlobalVariableExpression(var: !900, expr: !DIExpression())
!900 = distinct !DIGlobalVariable(name: "need_users", scope: !871, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "my_line_only", scope: !871, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!903 = !DIGlobalVariableExpression(var: !904, expr: !DIExpression())
!904 = distinct !DIGlobalVariable(name: "time_format", scope: !871, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!905 = !DIGlobalVariableExpression(var: !906, expr: !DIExpression())
!906 = distinct !DIGlobalVariable(name: "time_format_width", scope: !871, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "longopts", scope: !871, file: !3, line: 162, type: !909, isLocal: true, isDefinition: true)
!909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !910, size: 4608, elements: !151)
!910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !911)
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !912)
!912 = !{!913, !914, !915, !916}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !911, file: !144, line: 52, baseType: !49, size: 64)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !911, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !911, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !911, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!917 = !DIGlobalVariableExpression(var: !918, expr: !DIExpression())
!918 = distinct !DIGlobalVariable(name: "mesg", scope: !919, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!919 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !871, retainedNodes: !4)
!920 = !DIGlobalVariableExpression(var: !921, expr: !DIExpression())
!921 = distinct !DIGlobalVariable(name: "hoststr", scope: !922, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!922 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !923, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !871, retainedNodes: !4)
!923 = !DISubroutineType(types: !924)
!924 = !{null, !925, !9}
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !927)
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !928)
!928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !929)
!929 = !{!930, !931, !932, !933, !934, !935, !936, !941, !942, !947, !948}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !928, file: !72, line: 57, baseType: !14, size: 16)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !928, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !928, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !928, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !928, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !928, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !928, file: !72, line: 67, baseType: !937, size: 32, offset: 2656)
!937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !938)
!938 = !{!939, !940}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !937, file: !72, line: 45, baseType: !14, size: 16)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !937, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !928, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !928, file: !72, line: 79, baseType: !943, size: 64, offset: 2720)
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !928, file: !72, line: 75, size: 64, elements: !944)
!944 = !{!945, !946}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !943, file: !72, line: 77, baseType: !96, size: 32)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !943, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !928, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !928, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!949 = !DIGlobalVariableExpression(var: !950, expr: !DIExpression())
!950 = distinct !DIGlobalVariable(name: "hostlen", scope: !922, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!951 = !DIGlobalVariableExpression(var: !952, expr: !DIExpression())
!952 = distinct !DIGlobalVariable(name: "now", scope: !953, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!953 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !871, retainedNodes: !4)
!954 = !DIGlobalVariableExpression(var: !955, expr: !DIExpression())
!955 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !953, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!956 = !DIGlobalVariableExpression(var: !957, expr: !DIExpression())
!957 = distinct !DIGlobalVariable(name: "buf", scope: !958, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!958 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !959, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !871, retainedNodes: !4)
!959 = !DISubroutineType(types: !960)
!960 = !{!49, !925}
!961 = !DIGlobalVariableExpression(var: !962, expr: !DIExpression())
!962 = distinct !DIGlobalVariable(name: "runlevline", scope: !963, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!963 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !964, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !871, retainedNodes: !4)
!964 = !DISubroutineType(types: !965)
!965 = !{null, !925}
!966 = !DIGlobalVariableExpression(var: !967, expr: !DIExpression())
!967 = distinct !DIGlobalVariable(name: "comment", scope: !963, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!968 = !DIGlobalVariableExpression(var: !969, expr: !DIExpression())
!969 = distinct !DIGlobalVariable(name: "exitstr", scope: !970, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!970 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !964, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !871, retainedNodes: !4)
!971 = !DILocalVariable(name: "argv", arg: 2, scope: !870, file: !3, line: 688, type: !745)
!972 = !DILocalVariable(name: "optc", scope: !870, file: !3, line: 690, type: !53)
!973 = !DILocalVariable(name: "assumptions", scope: !870, file: !3, line: 691, type: !18)
!974 = distinct !DISubprogram(name: "who", scope: !3, file: !3, line: 621, type: !975, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!975 = !DISubroutineType(types: !976)
!976 = !{null, !49, !53}
!977 = !DILocalVariable(name: "filename", arg: 1, scope: !974, file: !3, line: 621, type: !49)
!978 = !DILocation(line: 621, column: 18, scope: !974)
!979 = !DILocalVariable(name: "options", arg: 2, scope: !974, file: !3, line: 621, type: !53)
!980 = !DILocation(line: 621, column: 32, scope: !974)
!981 = !DILocalVariable(name: "n_users", scope: !974, file: !3, line: 623, type: !110)
!982 = !DILocation(line: 623, column: 10, scope: !974)
!983 = !DILocalVariable(name: "utmp_buf", scope: !974, file: !3, line: 624, type: !984)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 64)
!985 = !DILocation(line: 624, column: 16, scope: !974)
!986 = !DILocation(line: 626, column: 18, scope: !987)
!987 = distinct !DILexicalBlock(scope: !974, file: !3, line: 626, column: 7)
!988 = !DILocation(line: 626, column: 49, scope: !987)
!989 = !DILocation(line: 626, column: 7, scope: !987)
!990 = !DILocation(line: 626, column: 58, scope: !987)
!991 = !DILocation(line: 626, column: 7, scope: !974)
!992 = !DILocation(line: 627, column: 5, scope: !987)
!993 = !DILocation(line: 629, column: 7, scope: !994)
!994 = distinct !DILexicalBlock(scope: !974, file: !3, line: 629, column: 7)
!995 = !DILocation(line: 629, column: 7, scope: !974)
!996 = !DILocation(line: 630, column: 23, scope: !994)
!997 = !DILocation(line: 630, column: 32, scope: !994)
!998 = !DILocation(line: 630, column: 5, scope: !994)
!999 = !DILocation(line: 632, column: 19, scope: !994)
!1000 = !DILocation(line: 632, column: 28, scope: !994)
!1001 = !DILocation(line: 632, column: 5, scope: !994)
!1002 = !DILocation(line: 634, column: 9, scope: !974)
!1003 = !DILocation(line: 634, column: 3, scope: !974)
!1004 = !DILocation(line: 635, column: 1, scope: !974)
!1005 = !DILocalVariable(name: "filename", arg: 1, scope: !1006, file: !3, line: 621, type: !49)
!1006 = distinct !DISubprogram(name: "who", scope: !3, file: !3, line: 621, type: !975, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1007, retainedNodes: !4)
!1007 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1008, nameTableKind: None)
!1008 = !{!1009, !1011, !1013, !1015, !1017, !1019, !1021, !1023, !1025, !1027, !1029, !1031, !1033, !1035, !1037, !1039, !1041, !1043, !1053, !1056, !1085, !1087, !1090, !1092, !1097, !1102, !1104}
!1009 = !DIGlobalVariableExpression(var: !1010, expr: !DIExpression())
!1010 = distinct !DIGlobalVariable(name: "do_lookup", scope: !1007, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!1011 = !DIGlobalVariableExpression(var: !1012, expr: !DIExpression())
!1012 = distinct !DIGlobalVariable(name: "short_list", scope: !1007, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!1013 = !DIGlobalVariableExpression(var: !1014, expr: !DIExpression())
!1014 = distinct !DIGlobalVariable(name: "short_output", scope: !1007, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!1015 = !DIGlobalVariableExpression(var: !1016, expr: !DIExpression())
!1016 = distinct !DIGlobalVariable(name: "include_idle", scope: !1007, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!1017 = !DIGlobalVariableExpression(var: !1018, expr: !DIExpression())
!1018 = distinct !DIGlobalVariable(name: "include_heading", scope: !1007, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!1019 = !DIGlobalVariableExpression(var: !1020, expr: !DIExpression())
!1020 = distinct !DIGlobalVariable(name: "include_mesg", scope: !1007, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!1021 = !DIGlobalVariableExpression(var: !1022, expr: !DIExpression())
!1022 = distinct !DIGlobalVariable(name: "include_exit", scope: !1007, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!1023 = !DIGlobalVariableExpression(var: !1024, expr: !DIExpression())
!1024 = distinct !DIGlobalVariable(name: "need_boottime", scope: !1007, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!1025 = !DIGlobalVariableExpression(var: !1026, expr: !DIExpression())
!1026 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !1007, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!1027 = !DIGlobalVariableExpression(var: !1028, expr: !DIExpression())
!1028 = distinct !DIGlobalVariable(name: "need_login", scope: !1007, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!1029 = !DIGlobalVariableExpression(var: !1030, expr: !DIExpression())
!1030 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !1007, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!1031 = !DIGlobalVariableExpression(var: !1032, expr: !DIExpression())
!1032 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !1007, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!1033 = !DIGlobalVariableExpression(var: !1034, expr: !DIExpression())
!1034 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !1007, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!1035 = !DIGlobalVariableExpression(var: !1036, expr: !DIExpression())
!1036 = distinct !DIGlobalVariable(name: "need_users", scope: !1007, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!1037 = !DIGlobalVariableExpression(var: !1038, expr: !DIExpression())
!1038 = distinct !DIGlobalVariable(name: "my_line_only", scope: !1007, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!1039 = !DIGlobalVariableExpression(var: !1040, expr: !DIExpression())
!1040 = distinct !DIGlobalVariable(name: "time_format", scope: !1007, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!1041 = !DIGlobalVariableExpression(var: !1042, expr: !DIExpression())
!1042 = distinct !DIGlobalVariable(name: "time_format_width", scope: !1007, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!1043 = !DIGlobalVariableExpression(var: !1044, expr: !DIExpression())
!1044 = distinct !DIGlobalVariable(name: "longopts", scope: !1007, file: !3, line: 162, type: !1045, isLocal: true, isDefinition: true)
!1045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1046, size: 4608, elements: !151)
!1046 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1047)
!1047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !1048)
!1048 = !{!1049, !1050, !1051, !1052}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1047, file: !144, line: 52, baseType: !49, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1047, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1047, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1047, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!1053 = !DIGlobalVariableExpression(var: !1054, expr: !DIExpression())
!1054 = distinct !DIGlobalVariable(name: "mesg", scope: !1055, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!1055 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1007, retainedNodes: !4)
!1056 = !DIGlobalVariableExpression(var: !1057, expr: !DIExpression())
!1057 = distinct !DIGlobalVariable(name: "hoststr", scope: !1058, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!1058 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !1059, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1007, retainedNodes: !4)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{null, !1061, !9}
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1063)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1064)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1065)
!1065 = !{!1066, !1067, !1068, !1069, !1070, !1071, !1072, !1077, !1078, !1083, !1084}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1064, file: !72, line: 57, baseType: !14, size: 16)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1064, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1064, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1064, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1064, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1064, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1064, file: !72, line: 67, baseType: !1073, size: 32, offset: 2656)
!1073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !1074)
!1074 = !{!1075, !1076}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !1073, file: !72, line: 45, baseType: !14, size: 16)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !1073, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1064, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1064, file: !72, line: 79, baseType: !1079, size: 64, offset: 2720)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1064, file: !72, line: 75, size: 64, elements: !1080)
!1080 = !{!1081, !1082}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1079, file: !72, line: 77, baseType: !96, size: 32)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1079, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1064, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1064, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!1085 = !DIGlobalVariableExpression(var: !1086, expr: !DIExpression())
!1086 = distinct !DIGlobalVariable(name: "hostlen", scope: !1058, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!1087 = !DIGlobalVariableExpression(var: !1088, expr: !DIExpression())
!1088 = distinct !DIGlobalVariable(name: "now", scope: !1089, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!1089 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1007, retainedNodes: !4)
!1090 = !DIGlobalVariableExpression(var: !1091, expr: !DIExpression())
!1091 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !1089, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!1092 = !DIGlobalVariableExpression(var: !1093, expr: !DIExpression())
!1093 = distinct !DIGlobalVariable(name: "buf", scope: !1094, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!1094 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !1095, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1007, retainedNodes: !4)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!49, !1061}
!1097 = !DIGlobalVariableExpression(var: !1098, expr: !DIExpression())
!1098 = distinct !DIGlobalVariable(name: "runlevline", scope: !1099, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1099 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !1100, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1007, retainedNodes: !4)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{null, !1061}
!1102 = !DIGlobalVariableExpression(var: !1103, expr: !DIExpression())
!1103 = distinct !DIGlobalVariable(name: "comment", scope: !1099, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1104 = !DIGlobalVariableExpression(var: !1105, expr: !DIExpression())
!1105 = distinct !DIGlobalVariable(name: "exitstr", scope: !1106, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!1106 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !1100, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1007, retainedNodes: !4)
!1107 = !DILocalVariable(name: "options", arg: 2, scope: !1006, file: !3, line: 621, type: !53)
!1108 = !DILocalVariable(name: "n_users", scope: !1006, file: !3, line: 623, type: !110)
!1109 = !DILocalVariable(name: "utmp_buf", scope: !1006, file: !3, line: 624, type: !1110)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64)
!1111 = distinct !DISubprogram(name: "list_entries_who", scope: !3, file: !3, line: 537, type: !1112, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{null, !110, !67}
!1114 = !DILocalVariable(name: "n", arg: 1, scope: !1111, file: !3, line: 537, type: !110)
!1115 = !DILocation(line: 537, column: 26, scope: !1111)
!1116 = !DILocalVariable(name: "utmp_buf", arg: 2, scope: !1111, file: !3, line: 537, type: !67)
!1117 = !DILocation(line: 537, column: 48, scope: !1111)
!1118 = !DILocalVariable(name: "entries", scope: !1111, file: !3, line: 539, type: !112)
!1119 = !DILocation(line: 539, column: 21, scope: !1111)
!1120 = !DILocalVariable(name: "separator", scope: !1111, file: !3, line: 540, type: !49)
!1121 = !DILocation(line: 540, column: 15, scope: !1111)
!1122 = !DILocation(line: 542, column: 3, scope: !1111)
!1123 = !DILocation(line: 542, column: 11, scope: !1111)
!1124 = !DILocation(line: 544, column: 11, scope: !1125)
!1125 = distinct !DILexicalBlock(scope: !1126, file: !3, line: 544, column: 11)
!1126 = distinct !DILexicalBlock(scope: !1111, file: !3, line: 543, column: 5)
!1127 = !DILocation(line: 544, column: 11, scope: !1126)
!1128 = !DILocalVariable(name: "trimmed_name", scope: !1129, file: !3, line: 546, type: !6)
!1129 = distinct !DILexicalBlock(scope: !1125, file: !3, line: 545, column: 9)
!1130 = !DILocation(line: 546, column: 17, scope: !1129)
!1131 = !DILocation(line: 548, column: 48, scope: !1129)
!1132 = !DILocation(line: 548, column: 26, scope: !1129)
!1133 = !DILocation(line: 548, column: 24, scope: !1129)
!1134 = !DILocation(line: 550, column: 27, scope: !1129)
!1135 = !DILocation(line: 550, column: 38, scope: !1129)
!1136 = !DILocation(line: 550, column: 11, scope: !1129)
!1137 = !DILocation(line: 551, column: 17, scope: !1129)
!1138 = !DILocation(line: 551, column: 11, scope: !1129)
!1139 = !DILocation(line: 552, column: 21, scope: !1129)
!1140 = !DILocation(line: 553, column: 18, scope: !1129)
!1141 = !DILocation(line: 554, column: 9, scope: !1129)
!1142 = !DILocation(line: 555, column: 15, scope: !1126)
!1143 = distinct !{!1143, !1122, !1144}
!1144 = !DILocation(line: 556, column: 5, scope: !1111)
!1145 = !DILocation(line: 557, column: 11, scope: !1111)
!1146 = !DILocation(line: 557, column: 33, scope: !1111)
!1147 = !DILocation(line: 557, column: 3, scope: !1111)
!1148 = !DILocation(line: 558, column: 1, scope: !1111)
!1149 = !DILocalVariable(name: "n", arg: 1, scope: !1150, file: !3, line: 537, type: !110)
!1150 = distinct !DISubprogram(name: "list_entries_who", scope: !3, file: !3, line: 537, type: !1151, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1177, retainedNodes: !4)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{null, !110, !1153}
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!1154 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1155)
!1155 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1156)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1157)
!1157 = !{!1158, !1159, !1160, !1161, !1162, !1163, !1164, !1169, !1170, !1175, !1176}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1156, file: !72, line: 57, baseType: !14, size: 16)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1156, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1156, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1156, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1156, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1156, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1156, file: !72, line: 67, baseType: !1165, size: 32, offset: 2656)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !1166)
!1166 = !{!1167, !1168}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !1165, file: !72, line: 45, baseType: !14, size: 16)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !1165, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1156, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1156, file: !72, line: 79, baseType: !1171, size: 64, offset: 2720)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1156, file: !72, line: 75, size: 64, elements: !1172)
!1172 = !{!1173, !1174}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1171, file: !72, line: 77, baseType: !96, size: 32)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1171, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1156, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1156, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!1177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1178, nameTableKind: None)
!1178 = !{!1179, !1181, !1183, !1185, !1187, !1189, !1191, !1193, !1195, !1197, !1199, !1201, !1203, !1205, !1207, !1209, !1211, !1213, !1223, !1226, !1231, !1233, !1236, !1238, !1243, !1248, !1250}
!1179 = !DIGlobalVariableExpression(var: !1180, expr: !DIExpression())
!1180 = distinct !DIGlobalVariable(name: "do_lookup", scope: !1177, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!1181 = !DIGlobalVariableExpression(var: !1182, expr: !DIExpression())
!1182 = distinct !DIGlobalVariable(name: "short_list", scope: !1177, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!1183 = !DIGlobalVariableExpression(var: !1184, expr: !DIExpression())
!1184 = distinct !DIGlobalVariable(name: "short_output", scope: !1177, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!1185 = !DIGlobalVariableExpression(var: !1186, expr: !DIExpression())
!1186 = distinct !DIGlobalVariable(name: "include_idle", scope: !1177, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!1187 = !DIGlobalVariableExpression(var: !1188, expr: !DIExpression())
!1188 = distinct !DIGlobalVariable(name: "include_heading", scope: !1177, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!1189 = !DIGlobalVariableExpression(var: !1190, expr: !DIExpression())
!1190 = distinct !DIGlobalVariable(name: "include_mesg", scope: !1177, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!1191 = !DIGlobalVariableExpression(var: !1192, expr: !DIExpression())
!1192 = distinct !DIGlobalVariable(name: "include_exit", scope: !1177, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!1193 = !DIGlobalVariableExpression(var: !1194, expr: !DIExpression())
!1194 = distinct !DIGlobalVariable(name: "need_boottime", scope: !1177, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!1195 = !DIGlobalVariableExpression(var: !1196, expr: !DIExpression())
!1196 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !1177, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!1197 = !DIGlobalVariableExpression(var: !1198, expr: !DIExpression())
!1198 = distinct !DIGlobalVariable(name: "need_login", scope: !1177, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!1199 = !DIGlobalVariableExpression(var: !1200, expr: !DIExpression())
!1200 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !1177, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!1201 = !DIGlobalVariableExpression(var: !1202, expr: !DIExpression())
!1202 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !1177, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!1203 = !DIGlobalVariableExpression(var: !1204, expr: !DIExpression())
!1204 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !1177, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!1205 = !DIGlobalVariableExpression(var: !1206, expr: !DIExpression())
!1206 = distinct !DIGlobalVariable(name: "need_users", scope: !1177, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!1207 = !DIGlobalVariableExpression(var: !1208, expr: !DIExpression())
!1208 = distinct !DIGlobalVariable(name: "my_line_only", scope: !1177, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!1209 = !DIGlobalVariableExpression(var: !1210, expr: !DIExpression())
!1210 = distinct !DIGlobalVariable(name: "time_format", scope: !1177, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!1211 = !DIGlobalVariableExpression(var: !1212, expr: !DIExpression())
!1212 = distinct !DIGlobalVariable(name: "time_format_width", scope: !1177, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!1213 = !DIGlobalVariableExpression(var: !1214, expr: !DIExpression())
!1214 = distinct !DIGlobalVariable(name: "longopts", scope: !1177, file: !3, line: 162, type: !1215, isLocal: true, isDefinition: true)
!1215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1216, size: 4608, elements: !151)
!1216 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1217)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !1218)
!1218 = !{!1219, !1220, !1221, !1222}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1217, file: !144, line: 52, baseType: !49, size: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1217, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1217, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1217, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!1223 = !DIGlobalVariableExpression(var: !1224, expr: !DIExpression())
!1224 = distinct !DIGlobalVariable(name: "mesg", scope: !1225, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!1225 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1177, retainedNodes: !4)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "hoststr", scope: !1228, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!1228 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !1229, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1177, retainedNodes: !4)
!1229 = !DISubroutineType(types: !1230)
!1230 = !{null, !1153, !9}
!1231 = !DIGlobalVariableExpression(var: !1232, expr: !DIExpression())
!1232 = distinct !DIGlobalVariable(name: "hostlen", scope: !1228, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!1233 = !DIGlobalVariableExpression(var: !1234, expr: !DIExpression())
!1234 = distinct !DIGlobalVariable(name: "now", scope: !1235, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!1235 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1177, retainedNodes: !4)
!1236 = !DIGlobalVariableExpression(var: !1237, expr: !DIExpression())
!1237 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !1235, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!1238 = !DIGlobalVariableExpression(var: !1239, expr: !DIExpression())
!1239 = distinct !DIGlobalVariable(name: "buf", scope: !1240, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!1240 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !1241, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1177, retainedNodes: !4)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{!49, !1153}
!1243 = !DIGlobalVariableExpression(var: !1244, expr: !DIExpression())
!1244 = distinct !DIGlobalVariable(name: "runlevline", scope: !1245, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1245 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !1246, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1177, retainedNodes: !4)
!1246 = !DISubroutineType(types: !1247)
!1247 = !{null, !1153}
!1248 = !DIGlobalVariableExpression(var: !1249, expr: !DIExpression())
!1249 = distinct !DIGlobalVariable(name: "comment", scope: !1245, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1250 = !DIGlobalVariableExpression(var: !1251, expr: !DIExpression())
!1251 = distinct !DIGlobalVariable(name: "exitstr", scope: !1252, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!1252 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !1246, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1177, retainedNodes: !4)
!1253 = !DILocalVariable(name: "utmp_buf", arg: 2, scope: !1150, file: !3, line: 537, type: !1153)
!1254 = !DILocalVariable(name: "entries", scope: !1150, file: !3, line: 539, type: !112)
!1255 = !DILocalVariable(name: "separator", scope: !1150, file: !3, line: 540, type: !49)
!1256 = distinct !DISubprogram(name: "scan_entries", scope: !3, file: !3, line: 569, type: !1112, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1257 = !DILocalVariable(name: "n", arg: 1, scope: !1256, file: !3, line: 569, type: !110)
!1258 = !DILocation(line: 569, column: 22, scope: !1256)
!1259 = !DILocalVariable(name: "utmp_buf", arg: 2, scope: !1256, file: !3, line: 569, type: !67)
!1260 = !DILocation(line: 569, column: 44, scope: !1256)
!1261 = !DILocalVariable(name: "ttyname_b", scope: !1256, file: !3, line: 571, type: !6)
!1262 = !DILocation(line: 571, column: 9, scope: !1256)
!1263 = !DILocalVariable(name: "boottime", scope: !1256, file: !3, line: 572, type: !9)
!1264 = !DILocation(line: 572, column: 10, scope: !1256)
!1265 = !DILocation(line: 574, column: 7, scope: !1266)
!1266 = distinct !DILexicalBlock(scope: !1256, file: !3, line: 574, column: 7)
!1267 = !DILocation(line: 574, column: 7, scope: !1256)
!1268 = !DILocation(line: 575, column: 5, scope: !1266)
!1269 = !DILocation(line: 577, column: 7, scope: !1270)
!1270 = distinct !DILexicalBlock(scope: !1256, file: !3, line: 577, column: 7)
!1271 = !DILocation(line: 577, column: 7, scope: !1256)
!1272 = !DILocation(line: 579, column: 19, scope: !1273)
!1273 = distinct !DILexicalBlock(scope: !1270, file: !3, line: 578, column: 5)
!1274 = !DILocation(line: 579, column: 17, scope: !1273)
!1275 = !DILocation(line: 580, column: 12, scope: !1276)
!1276 = distinct !DILexicalBlock(scope: !1273, file: !3, line: 580, column: 11)
!1277 = !DILocation(line: 580, column: 11, scope: !1273)
!1278 = !DILocation(line: 581, column: 9, scope: !1276)
!1279 = !DILocation(line: 582, column: 11, scope: !1280)
!1280 = distinct !DILexicalBlock(scope: !1273, file: !3, line: 582, column: 11)
!1281 = !DILocation(line: 582, column: 64, scope: !1280)
!1282 = !DILocation(line: 583, column: 19, scope: !1280)
!1283 = !DILocation(line: 583, column: 9, scope: !1280)
!1284 = !DILocation(line: 584, column: 5, scope: !1273)
!1285 = !DILocation(line: 586, column: 3, scope: !1256)
!1286 = !DILocation(line: 586, column: 11, scope: !1256)
!1287 = !DILocation(line: 588, column: 12, scope: !1288)
!1288 = distinct !DILexicalBlock(scope: !1289, file: !3, line: 588, column: 11)
!1289 = distinct !DILexicalBlock(scope: !1256, file: !3, line: 587, column: 5)
!1290 = !DILocation(line: 589, column: 11, scope: !1288)
!1291 = !DILocation(line: 589, column: 14, scope: !1288)
!1292 = !DILocation(line: 588, column: 11, scope: !1289)
!1293 = !DILocation(line: 592, column: 15, scope: !1294)
!1294 = distinct !DILexicalBlock(scope: !1295, file: !3, line: 592, column: 15)
!1295 = distinct !DILexicalBlock(scope: !1288, file: !3, line: 591, column: 9)
!1296 = !DILocation(line: 592, column: 26, scope: !1294)
!1297 = !DILocation(line: 592, column: 29, scope: !1294)
!1298 = !DILocation(line: 592, column: 15, scope: !1295)
!1299 = !DILocation(line: 593, column: 25, scope: !1294)
!1300 = !DILocation(line: 593, column: 35, scope: !1294)
!1301 = !DILocation(line: 593, column: 13, scope: !1294)
!1302 = !DILocation(line: 594, column: 20, scope: !1303)
!1303 = distinct !DILexicalBlock(scope: !1294, file: !3, line: 594, column: 20)
!1304 = !DILocation(line: 594, column: 34, scope: !1303)
!1305 = !DILocation(line: 594, column: 37, scope: !1303)
!1306 = !DILocation(line: 594, column: 20, scope: !1294)
!1307 = !DILocation(line: 595, column: 29, scope: !1303)
!1308 = !DILocation(line: 595, column: 13, scope: !1303)
!1309 = !DILocation(line: 596, column: 20, scope: !1310)
!1310 = distinct !DILexicalBlock(scope: !1303, file: !3, line: 596, column: 20)
!1311 = !DILocation(line: 596, column: 34, scope: !1310)
!1312 = !DILocation(line: 596, column: 37, scope: !1310)
!1313 = !DILocation(line: 596, column: 20, scope: !1303)
!1314 = !DILocation(line: 597, column: 29, scope: !1310)
!1315 = !DILocation(line: 597, column: 13, scope: !1310)
!1316 = !DILocation(line: 601, column: 20, scope: !1317)
!1317 = distinct !DILexicalBlock(scope: !1310, file: !3, line: 601, column: 20)
!1318 = !DILocation(line: 601, column: 37, scope: !1317)
!1319 = !DILocation(line: 601, column: 40, scope: !1317)
!1320 = !DILocation(line: 601, column: 20, scope: !1310)
!1321 = !DILocation(line: 602, column: 32, scope: !1317)
!1322 = !DILocation(line: 602, column: 13, scope: !1317)
!1323 = !DILocation(line: 603, column: 20, scope: !1324)
!1324 = distinct !DILexicalBlock(scope: !1317, file: !3, line: 603, column: 20)
!1325 = !DILocation(line: 603, column: 35, scope: !1324)
!1326 = !DILocation(line: 603, column: 38, scope: !1324)
!1327 = !DILocation(line: 603, column: 20, scope: !1317)
!1328 = !DILocation(line: 604, column: 30, scope: !1324)
!1329 = !DILocation(line: 604, column: 13, scope: !1324)
!1330 = !DILocation(line: 605, column: 20, scope: !1331)
!1331 = distinct !DILexicalBlock(scope: !1324, file: !3, line: 605, column: 20)
!1332 = !DILocation(line: 605, column: 31, scope: !1331)
!1333 = !DILocation(line: 605, column: 34, scope: !1331)
!1334 = !DILocation(line: 605, column: 20, scope: !1324)
!1335 = !DILocation(line: 606, column: 26, scope: !1331)
!1336 = !DILocation(line: 606, column: 13, scope: !1331)
!1337 = !DILocation(line: 607, column: 20, scope: !1338)
!1338 = distinct !DILexicalBlock(scope: !1331, file: !3, line: 607, column: 20)
!1339 = !DILocation(line: 607, column: 35, scope: !1338)
!1340 = !DILocation(line: 607, column: 38, scope: !1338)
!1341 = !DILocation(line: 607, column: 20, scope: !1331)
!1342 = !DILocation(line: 608, column: 30, scope: !1338)
!1343 = !DILocation(line: 608, column: 13, scope: !1338)
!1344 = !DILocation(line: 609, column: 9, scope: !1295)
!1345 = !DILocation(line: 611, column: 11, scope: !1346)
!1346 = distinct !DILexicalBlock(scope: !1289, file: !3, line: 611, column: 11)
!1347 = !DILocation(line: 611, column: 11, scope: !1289)
!1348 = !DILocation(line: 612, column: 20, scope: !1346)
!1349 = !DILocation(line: 612, column: 18, scope: !1346)
!1350 = !DILocation(line: 612, column: 9, scope: !1346)
!1351 = !DILocation(line: 614, column: 15, scope: !1289)
!1352 = distinct !{!1352, !1285, !1353}
!1353 = !DILocation(line: 615, column: 5, scope: !1256)
!1354 = !DILocation(line: 616, column: 1, scope: !1256)
!1355 = !DILocalVariable(name: "n", arg: 1, scope: !1356, file: !3, line: 569, type: !110)
!1356 = distinct !DISubprogram(name: "scan_entries", scope: !3, file: !3, line: 569, type: !1357, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1383, retainedNodes: !4)
!1357 = !DISubroutineType(types: !1358)
!1358 = !{null, !110, !1359}
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1361)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1362)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1363)
!1363 = !{!1364, !1365, !1366, !1367, !1368, !1369, !1370, !1375, !1376, !1381, !1382}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1362, file: !72, line: 57, baseType: !14, size: 16)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1362, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1362, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1362, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1362, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1362, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1362, file: !72, line: 67, baseType: !1371, size: 32, offset: 2656)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !1372)
!1372 = !{!1373, !1374}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !1371, file: !72, line: 45, baseType: !14, size: 16)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !1371, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1362, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1362, file: !72, line: 79, baseType: !1377, size: 64, offset: 2720)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1362, file: !72, line: 75, size: 64, elements: !1378)
!1378 = !{!1379, !1380}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1377, file: !72, line: 77, baseType: !96, size: 32)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1377, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1362, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1362, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!1383 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1384, nameTableKind: None)
!1384 = !{!1385, !1387, !1389, !1391, !1393, !1395, !1397, !1399, !1401, !1403, !1405, !1407, !1409, !1411, !1413, !1415, !1417, !1419, !1429, !1432, !1437, !1439, !1442, !1444, !1449, !1454, !1456}
!1385 = !DIGlobalVariableExpression(var: !1386, expr: !DIExpression())
!1386 = distinct !DIGlobalVariable(name: "do_lookup", scope: !1383, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!1387 = !DIGlobalVariableExpression(var: !1388, expr: !DIExpression())
!1388 = distinct !DIGlobalVariable(name: "short_list", scope: !1383, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!1389 = !DIGlobalVariableExpression(var: !1390, expr: !DIExpression())
!1390 = distinct !DIGlobalVariable(name: "short_output", scope: !1383, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!1391 = !DIGlobalVariableExpression(var: !1392, expr: !DIExpression())
!1392 = distinct !DIGlobalVariable(name: "include_idle", scope: !1383, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!1393 = !DIGlobalVariableExpression(var: !1394, expr: !DIExpression())
!1394 = distinct !DIGlobalVariable(name: "include_heading", scope: !1383, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!1395 = !DIGlobalVariableExpression(var: !1396, expr: !DIExpression())
!1396 = distinct !DIGlobalVariable(name: "include_mesg", scope: !1383, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!1397 = !DIGlobalVariableExpression(var: !1398, expr: !DIExpression())
!1398 = distinct !DIGlobalVariable(name: "include_exit", scope: !1383, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!1399 = !DIGlobalVariableExpression(var: !1400, expr: !DIExpression())
!1400 = distinct !DIGlobalVariable(name: "need_boottime", scope: !1383, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!1401 = !DIGlobalVariableExpression(var: !1402, expr: !DIExpression())
!1402 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !1383, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!1403 = !DIGlobalVariableExpression(var: !1404, expr: !DIExpression())
!1404 = distinct !DIGlobalVariable(name: "need_login", scope: !1383, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!1405 = !DIGlobalVariableExpression(var: !1406, expr: !DIExpression())
!1406 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !1383, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!1407 = !DIGlobalVariableExpression(var: !1408, expr: !DIExpression())
!1408 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !1383, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!1409 = !DIGlobalVariableExpression(var: !1410, expr: !DIExpression())
!1410 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !1383, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!1411 = !DIGlobalVariableExpression(var: !1412, expr: !DIExpression())
!1412 = distinct !DIGlobalVariable(name: "need_users", scope: !1383, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!1413 = !DIGlobalVariableExpression(var: !1414, expr: !DIExpression())
!1414 = distinct !DIGlobalVariable(name: "my_line_only", scope: !1383, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!1415 = !DIGlobalVariableExpression(var: !1416, expr: !DIExpression())
!1416 = distinct !DIGlobalVariable(name: "time_format", scope: !1383, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!1417 = !DIGlobalVariableExpression(var: !1418, expr: !DIExpression())
!1418 = distinct !DIGlobalVariable(name: "time_format_width", scope: !1383, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "longopts", scope: !1383, file: !3, line: 162, type: !1421, isLocal: true, isDefinition: true)
!1421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1422, size: 4608, elements: !151)
!1422 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1423)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !1424)
!1424 = !{!1425, !1426, !1427, !1428}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1423, file: !144, line: 52, baseType: !49, size: 64)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1423, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1423, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1423, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!1429 = !DIGlobalVariableExpression(var: !1430, expr: !DIExpression())
!1430 = distinct !DIGlobalVariable(name: "mesg", scope: !1431, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!1431 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1383, retainedNodes: !4)
!1432 = !DIGlobalVariableExpression(var: !1433, expr: !DIExpression())
!1433 = distinct !DIGlobalVariable(name: "hoststr", scope: !1434, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!1434 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !1435, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1383, retainedNodes: !4)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{null, !1359, !9}
!1437 = !DIGlobalVariableExpression(var: !1438, expr: !DIExpression())
!1438 = distinct !DIGlobalVariable(name: "hostlen", scope: !1434, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(name: "now", scope: !1441, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!1441 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1383, retainedNodes: !4)
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !1441, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "buf", scope: !1446, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!1446 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !1447, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1383, retainedNodes: !4)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{!49, !1359}
!1449 = !DIGlobalVariableExpression(var: !1450, expr: !DIExpression())
!1450 = distinct !DIGlobalVariable(name: "runlevline", scope: !1451, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1451 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !1452, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1383, retainedNodes: !4)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{null, !1359}
!1454 = !DIGlobalVariableExpression(var: !1455, expr: !DIExpression())
!1455 = distinct !DIGlobalVariable(name: "comment", scope: !1451, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1456 = !DIGlobalVariableExpression(var: !1457, expr: !DIExpression())
!1457 = distinct !DIGlobalVariable(name: "exitstr", scope: !1458, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!1458 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !1452, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1383, retainedNodes: !4)
!1459 = !DILocalVariable(name: "utmp_buf", arg: 2, scope: !1356, file: !3, line: 569, type: !1359)
!1460 = !DILocalVariable(name: "ttyname_b", scope: !1356, file: !3, line: 571, type: !6)
!1461 = !DILocalVariable(name: "boottime", scope: !1356, file: !3, line: 572, type: !9)
!1462 = distinct !DISubprogram(name: "print_heading", scope: !3, file: !3, line: 561, type: !1463, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1463 = !DISubroutineType(types: !1464)
!1464 = !{null}
!1465 = !DILocation(line: 563, column: 19, scope: !1462)
!1466 = !DILocation(line: 563, column: 39, scope: !1462)
!1467 = !DILocation(line: 563, column: 50, scope: !1462)
!1468 = !DILocation(line: 563, column: 61, scope: !1462)
!1469 = !DILocation(line: 564, column: 15, scope: !1462)
!1470 = !DILocation(line: 564, column: 25, scope: !1462)
!1471 = !DILocation(line: 564, column: 39, scope: !1462)
!1472 = !DILocation(line: 563, column: 3, scope: !1462)
!1473 = !DILocation(line: 565, column: 1, scope: !1462)
!1474 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !64, file: !3, line: 333, type: !67)
!1475 = !DILocation(line: 333, column: 32, scope: !64)
!1476 = !DILocalVariable(name: "boottime", arg: 2, scope: !64, file: !3, line: 333, type: !9)
!1477 = !DILocation(line: 333, column: 49, scope: !64)
!1478 = !DILocalVariable(name: "stats", scope: !64, file: !3, line: 335, type: !1479)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !1480, line: 46, size: 1152, elements: !1481)
!1480 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!1481 = !{!1482, !1484, !1486, !1488, !1490, !1492, !1494, !1495, !1496, !1498, !1500, !1502, !1509, !1510, !1511}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1479, file: !1480, line: 48, baseType: !1483, size: 64)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !12, line: 145, baseType: !112)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1479, file: !1480, line: 53, baseType: !1485, size: 64, offset: 64)
!1485 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !12, line: 148, baseType: !112)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1479, file: !1480, line: 61, baseType: !1487, size: 64, offset: 128)
!1487 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !12, line: 151, baseType: !112)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1479, file: !1480, line: 62, baseType: !1489, size: 32, offset: 192)
!1489 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !12, line: 150, baseType: !180)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1479, file: !1480, line: 64, baseType: !1491, size: 32, offset: 224)
!1491 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !12, line: 146, baseType: !180)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1479, file: !1480, line: 65, baseType: !1493, size: 32, offset: 256)
!1493 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !12, line: 147, baseType: !180)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1479, file: !1480, line: 67, baseType: !53, size: 32, offset: 288)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1479, file: !1480, line: 69, baseType: !1483, size: 64, offset: 320)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1479, file: !1480, line: 74, baseType: !1497, size: 64, offset: 384)
!1497 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !12, line: 152, baseType: !13)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1479, file: !1480, line: 78, baseType: !1499, size: 64, offset: 448)
!1499 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !12, line: 174, baseType: !13)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1479, file: !1480, line: 80, baseType: !1501, size: 64, offset: 512)
!1501 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !12, line: 179, baseType: !13)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1479, file: !1480, line: 91, baseType: !1503, size: 128, offset: 576)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !1504, line: 10, size: 128, elements: !1505)
!1504 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!1505 = !{!1506, !1507}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1503, file: !1504, line: 12, baseType: !11, size: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1503, file: !1504, line: 16, baseType: !1508, size: 64, offset: 64)
!1508 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !12, line: 196, baseType: !13)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1479, file: !1480, line: 92, baseType: !1503, size: 128, offset: 704)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1479, file: !1480, line: 93, baseType: !1503, size: 128, offset: 832)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1479, file: !1480, line: 106, baseType: !1512, size: 192, offset: 960)
!1512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1508, size: 192, elements: !60)
!1513 = !DILocation(line: 335, column: 15, scope: !64)
!1514 = !DILocalVariable(name: "last_change", scope: !64, file: !3, line: 336, type: !9)
!1515 = !DILocation(line: 336, column: 10, scope: !64)
!1516 = !DILocalVariable(name: "mesg", scope: !64, file: !3, line: 337, type: !7)
!1517 = !DILocation(line: 337, column: 8, scope: !64)
!1518 = !DILocalVariable(name: "idlestr", scope: !64, file: !3, line: 338, type: !1519)
!1519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 56, elements: !478)
!1520 = !DILocation(line: 338, column: 8, scope: !64)
!1521 = !DILocalVariable(name: "line", scope: !64, file: !3, line: 347, type: !1522)
!1522 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 304, elements: !1523)
!1523 = !{!1524}
!1524 = !DISubrange(count: 38)
!1525 = !DILocation(line: 347, column: 8, scope: !64)
!1526 = !DILocalVariable(name: "p", scope: !64, file: !3, line: 348, type: !6)
!1527 = !DILocation(line: 348, column: 9, scope: !64)
!1528 = !DILocation(line: 348, column: 13, scope: !64)
!1529 = !DILocalVariable(name: "pidstr", scope: !64, file: !3, line: 349, type: !1530)
!1530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 96, elements: !1531)
!1531 = !{!1532}
!1532 = !DISubrange(count: 12)
!1533 = !DILocation(line: 349, column: 3, scope: !64)
!1534 = !DILocation(line: 354, column: 10, scope: !1535)
!1535 = distinct !DILexicalBlock(scope: !64, file: !3, line: 354, column: 8)
!1536 = !DILocation(line: 354, column: 8, scope: !64)
!1537 = !DILocation(line: 355, column: 17, scope: !1535)
!1538 = !DILocation(line: 355, column: 9, scope: !1535)
!1539 = !DILocation(line: 355, column: 7, scope: !1535)
!1540 = !DILocation(line: 355, column: 5, scope: !1535)
!1541 = !DILocation(line: 356, column: 12, scope: !64)
!1542 = !DILocation(line: 356, column: 15, scope: !64)
!1543 = !DILocation(line: 356, column: 25, scope: !64)
!1544 = !DILocation(line: 356, column: 3, scope: !64)
!1545 = !DILocation(line: 358, column: 13, scope: !1546)
!1546 = distinct !DILexicalBlock(scope: !64, file: !3, line: 358, column: 7)
!1547 = !DILocation(line: 358, column: 7, scope: !1546)
!1548 = !DILocation(line: 358, column: 27, scope: !1546)
!1549 = !DILocation(line: 358, column: 7, scope: !64)
!1550 = !DILocation(line: 360, column: 14, scope: !1551)
!1551 = distinct !DILexicalBlock(scope: !1546, file: !3, line: 359, column: 5)
!1552 = !DILocation(line: 360, column: 12, scope: !1551)
!1553 = !DILocation(line: 361, column: 27, scope: !1551)
!1554 = !DILocation(line: 361, column: 19, scope: !1551)
!1555 = !DILocation(line: 362, column: 5, scope: !1551)
!1556 = !DILocation(line: 365, column: 12, scope: !1557)
!1557 = distinct !DILexicalBlock(scope: !1546, file: !3, line: 364, column: 5)
!1558 = !DILocation(line: 366, column: 19, scope: !1557)
!1559 = !DILocation(line: 369, column: 7, scope: !1560)
!1560 = distinct !DILexicalBlock(scope: !64, file: !3, line: 369, column: 7)
!1561 = !DILocation(line: 369, column: 7, scope: !64)
!1562 = !DILocation(line: 370, column: 14, scope: !1560)
!1563 = !DILocation(line: 370, column: 57, scope: !1560)
!1564 = !DILocation(line: 370, column: 70, scope: !1560)
!1565 = !DILocation(line: 370, column: 44, scope: !1560)
!1566 = !DILocation(line: 370, column: 5, scope: !1560)
!1567 = !DILocation(line: 372, column: 14, scope: !1560)
!1568 = !DILocation(line: 372, column: 5, scope: !1560)
!1569 = !DILocation(line: 375, column: 7, scope: !1570)
!1570 = distinct !DILexicalBlock(scope: !64, file: !3, line: 375, column: 7)
!1571 = !DILocation(line: 375, column: 17, scope: !1570)
!1572 = !DILocation(line: 375, column: 7, scope: !64)
!1573 = !DILocalVariable(name: "ut_host", scope: !1574, file: !3, line: 377, type: !1575)
!1574 = distinct !DILexicalBlock(scope: !1570, file: !3, line: 376, column: 5)
!1575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2056, elements: !1576)
!1576 = !{!1577}
!1577 = !DISubrange(count: 257)
!1578 = !DILocation(line: 377, column: 12, scope: !1574)
!1579 = !DILocalVariable(name: "host", scope: !1574, file: !3, line: 378, type: !6)
!1580 = !DILocation(line: 378, column: 13, scope: !1574)
!1581 = !DILocalVariable(name: "display", scope: !1574, file: !3, line: 379, type: !6)
!1582 = !DILocation(line: 379, column: 13, scope: !1574)
!1583 = !DILocation(line: 382, column: 16, scope: !1574)
!1584 = !DILocation(line: 382, column: 25, scope: !1574)
!1585 = !DILocation(line: 382, column: 35, scope: !1574)
!1586 = !DILocation(line: 382, column: 7, scope: !1574)
!1587 = !DILocation(line: 385, column: 25, scope: !1574)
!1588 = !DILocation(line: 385, column: 17, scope: !1574)
!1589 = !DILocation(line: 385, column: 15, scope: !1574)
!1590 = !DILocation(line: 386, column: 11, scope: !1591)
!1591 = distinct !DILexicalBlock(scope: !1574, file: !3, line: 386, column: 11)
!1592 = !DILocation(line: 386, column: 11, scope: !1574)
!1593 = !DILocation(line: 387, column: 17, scope: !1591)
!1594 = !DILocation(line: 387, column: 20, scope: !1591)
!1595 = !DILocation(line: 387, column: 9, scope: !1591)
!1596 = !DILocation(line: 389, column: 11, scope: !1597)
!1597 = distinct !DILexicalBlock(scope: !1574, file: !3, line: 389, column: 11)
!1598 = !DILocation(line: 389, column: 20, scope: !1597)
!1599 = !DILocation(line: 389, column: 23, scope: !1597)
!1600 = !DILocation(line: 389, column: 11, scope: !1574)
!1601 = !DILocation(line: 392, column: 30, scope: !1602)
!1602 = distinct !DILexicalBlock(scope: !1597, file: !3, line: 390, column: 9)
!1603 = !DILocation(line: 392, column: 18, scope: !1602)
!1604 = !DILocation(line: 392, column: 16, scope: !1602)
!1605 = !DILocation(line: 393, column: 9, scope: !1602)
!1606 = !DILocation(line: 395, column: 13, scope: !1607)
!1607 = distinct !DILexicalBlock(scope: !1574, file: !3, line: 395, column: 11)
!1608 = !DILocation(line: 395, column: 11, scope: !1574)
!1609 = !DILocation(line: 396, column: 16, scope: !1607)
!1610 = !DILocation(line: 396, column: 14, scope: !1607)
!1611 = !DILocation(line: 396, column: 9, scope: !1607)
!1612 = !DILocation(line: 398, column: 11, scope: !1613)
!1613 = distinct !DILexicalBlock(scope: !1574, file: !3, line: 398, column: 11)
!1614 = !DILocation(line: 398, column: 11, scope: !1574)
!1615 = !DILocation(line: 400, column: 15, scope: !1616)
!1616 = distinct !DILexicalBlock(scope: !1617, file: !3, line: 400, column: 15)
!1617 = distinct !DILexicalBlock(scope: !1613, file: !3, line: 399, column: 9)
!1618 = !DILocation(line: 400, column: 33, scope: !1616)
!1619 = !DILocation(line: 400, column: 25, scope: !1616)
!1620 = !DILocation(line: 400, column: 49, scope: !1616)
!1621 = !DILocation(line: 400, column: 41, scope: !1616)
!1622 = !DILocation(line: 400, column: 39, scope: !1616)
!1623 = !DILocation(line: 400, column: 58, scope: !1616)
!1624 = !DILocation(line: 400, column: 23, scope: !1616)
!1625 = !DILocation(line: 400, column: 15, scope: !1617)
!1626 = !DILocation(line: 402, column: 33, scope: !1627)
!1627 = distinct !DILexicalBlock(scope: !1616, file: !3, line: 401, column: 13)
!1628 = !DILocation(line: 402, column: 25, scope: !1627)
!1629 = !DILocation(line: 402, column: 49, scope: !1627)
!1630 = !DILocation(line: 402, column: 41, scope: !1627)
!1631 = !DILocation(line: 402, column: 39, scope: !1627)
!1632 = !DILocation(line: 402, column: 58, scope: !1627)
!1633 = !DILocation(line: 402, column: 23, scope: !1627)
!1634 = !DILocation(line: 403, column: 21, scope: !1627)
!1635 = !DILocation(line: 403, column: 15, scope: !1627)
!1636 = !DILocation(line: 404, column: 34, scope: !1627)
!1637 = !DILocation(line: 404, column: 25, scope: !1627)
!1638 = !DILocation(line: 404, column: 23, scope: !1627)
!1639 = !DILocation(line: 405, column: 13, scope: !1627)
!1640 = !DILocation(line: 406, column: 20, scope: !1617)
!1641 = !DILocation(line: 406, column: 40, scope: !1617)
!1642 = !DILocation(line: 406, column: 46, scope: !1617)
!1643 = !DILocation(line: 406, column: 11, scope: !1617)
!1644 = !DILocation(line: 407, column: 9, scope: !1617)
!1645 = !DILocation(line: 410, column: 15, scope: !1646)
!1646 = distinct !DILexicalBlock(scope: !1647, file: !3, line: 410, column: 15)
!1647 = distinct !DILexicalBlock(scope: !1613, file: !3, line: 409, column: 9)
!1648 = !DILocation(line: 410, column: 33, scope: !1646)
!1649 = !DILocation(line: 410, column: 25, scope: !1646)
!1650 = !DILocation(line: 410, column: 39, scope: !1646)
!1651 = !DILocation(line: 410, column: 23, scope: !1646)
!1652 = !DILocation(line: 410, column: 15, scope: !1647)
!1653 = !DILocation(line: 412, column: 33, scope: !1654)
!1654 = distinct !DILexicalBlock(scope: !1646, file: !3, line: 411, column: 13)
!1655 = !DILocation(line: 412, column: 25, scope: !1654)
!1656 = !DILocation(line: 412, column: 39, scope: !1654)
!1657 = !DILocation(line: 412, column: 23, scope: !1654)
!1658 = !DILocation(line: 413, column: 21, scope: !1654)
!1659 = !DILocation(line: 413, column: 15, scope: !1654)
!1660 = !DILocation(line: 414, column: 34, scope: !1654)
!1661 = !DILocation(line: 414, column: 25, scope: !1654)
!1662 = !DILocation(line: 414, column: 23, scope: !1654)
!1663 = !DILocation(line: 415, column: 13, scope: !1654)
!1664 = !DILocation(line: 416, column: 20, scope: !1647)
!1665 = !DILocation(line: 416, column: 37, scope: !1647)
!1666 = !DILocation(line: 416, column: 11, scope: !1647)
!1667 = !DILocation(line: 419, column: 11, scope: !1668)
!1668 = distinct !DILexicalBlock(scope: !1574, file: !3, line: 419, column: 11)
!1669 = !DILocation(line: 419, column: 19, scope: !1668)
!1670 = !DILocation(line: 419, column: 16, scope: !1668)
!1671 = !DILocation(line: 419, column: 11, scope: !1574)
!1672 = !DILocation(line: 420, column: 15, scope: !1668)
!1673 = !DILocation(line: 420, column: 9, scope: !1668)
!1674 = !DILocation(line: 421, column: 5, scope: !1574)
!1675 = !DILocation(line: 424, column: 11, scope: !1676)
!1676 = distinct !DILexicalBlock(scope: !1677, file: !3, line: 424, column: 11)
!1677 = distinct !DILexicalBlock(scope: !1570, file: !3, line: 423, column: 5)
!1678 = !DILocation(line: 424, column: 19, scope: !1676)
!1679 = !DILocation(line: 424, column: 11, scope: !1677)
!1680 = !DILocation(line: 426, column: 19, scope: !1681)
!1681 = distinct !DILexicalBlock(scope: !1676, file: !3, line: 425, column: 9)
!1682 = !DILocation(line: 427, column: 17, scope: !1681)
!1683 = !DILocation(line: 427, column: 11, scope: !1681)
!1684 = !DILocation(line: 428, column: 30, scope: !1681)
!1685 = !DILocation(line: 428, column: 21, scope: !1681)
!1686 = !DILocation(line: 428, column: 19, scope: !1681)
!1687 = !DILocation(line: 429, column: 9, scope: !1681)
!1688 = !DILocation(line: 430, column: 8, scope: !1677)
!1689 = !DILocation(line: 430, column: 16, scope: !1677)
!1690 = !DILocation(line: 434, column: 42, scope: !64)
!1691 = !DILocation(line: 434, column: 62, scope: !64)
!1692 = !DILocation(line: 435, column: 41, scope: !64)
!1693 = !DILocation(line: 435, column: 51, scope: !64)
!1694 = !DILocation(line: 436, column: 28, scope: !64)
!1695 = !DILocation(line: 436, column: 15, scope: !64)
!1696 = !DILocation(line: 436, column: 39, scope: !64)
!1697 = !DILocation(line: 436, column: 48, scope: !64)
!1698 = !DILocation(line: 437, column: 15, scope: !64)
!1699 = !DILocation(line: 437, column: 25, scope: !64)
!1700 = !DILocation(line: 434, column: 3, scope: !64)
!1701 = !DILocation(line: 438, column: 1, scope: !64)
!1702 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1703, file: !3, line: 333, type: !1706)
!1703 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !1704, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1730, retainedNodes: !4)
!1704 = !DISubroutineType(types: !1705)
!1705 = !{null, !1706, !9}
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64)
!1707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1708)
!1708 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1709)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1710)
!1710 = !{!1711, !1712, !1713, !1714, !1715, !1716, !1717, !1722, !1723, !1728, !1729}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1709, file: !72, line: 57, baseType: !14, size: 16)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1709, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1709, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1709, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1709, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1709, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1709, file: !72, line: 67, baseType: !1718, size: 32, offset: 2656)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !1719)
!1719 = !{!1720, !1721}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !1718, file: !72, line: 45, baseType: !14, size: 16)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !1718, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1709, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1709, file: !72, line: 79, baseType: !1724, size: 64, offset: 2720)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1709, file: !72, line: 75, size: 64, elements: !1725)
!1725 = !{!1726, !1727}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1724, file: !72, line: 77, baseType: !96, size: 32)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1724, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1709, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1709, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!1730 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1731, nameTableKind: None)
!1731 = !{!1732, !1734, !1736, !1738, !1740, !1742, !1744, !1746, !1748, !1750, !1752, !1754, !1756, !1758, !1760, !1762, !1764, !1766, !1776, !1779, !1781, !1783, !1786, !1788, !1793, !1798, !1800}
!1732 = !DIGlobalVariableExpression(var: !1733, expr: !DIExpression())
!1733 = distinct !DIGlobalVariable(name: "do_lookup", scope: !1730, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!1734 = !DIGlobalVariableExpression(var: !1735, expr: !DIExpression())
!1735 = distinct !DIGlobalVariable(name: "short_list", scope: !1730, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!1736 = !DIGlobalVariableExpression(var: !1737, expr: !DIExpression())
!1737 = distinct !DIGlobalVariable(name: "short_output", scope: !1730, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!1738 = !DIGlobalVariableExpression(var: !1739, expr: !DIExpression())
!1739 = distinct !DIGlobalVariable(name: "include_idle", scope: !1730, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!1740 = !DIGlobalVariableExpression(var: !1741, expr: !DIExpression())
!1741 = distinct !DIGlobalVariable(name: "include_heading", scope: !1730, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!1742 = !DIGlobalVariableExpression(var: !1743, expr: !DIExpression())
!1743 = distinct !DIGlobalVariable(name: "include_mesg", scope: !1730, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!1744 = !DIGlobalVariableExpression(var: !1745, expr: !DIExpression())
!1745 = distinct !DIGlobalVariable(name: "include_exit", scope: !1730, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!1746 = !DIGlobalVariableExpression(var: !1747, expr: !DIExpression())
!1747 = distinct !DIGlobalVariable(name: "need_boottime", scope: !1730, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!1748 = !DIGlobalVariableExpression(var: !1749, expr: !DIExpression())
!1749 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !1730, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!1750 = !DIGlobalVariableExpression(var: !1751, expr: !DIExpression())
!1751 = distinct !DIGlobalVariable(name: "need_login", scope: !1730, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!1752 = !DIGlobalVariableExpression(var: !1753, expr: !DIExpression())
!1753 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !1730, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!1754 = !DIGlobalVariableExpression(var: !1755, expr: !DIExpression())
!1755 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !1730, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!1756 = !DIGlobalVariableExpression(var: !1757, expr: !DIExpression())
!1757 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !1730, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!1758 = !DIGlobalVariableExpression(var: !1759, expr: !DIExpression())
!1759 = distinct !DIGlobalVariable(name: "need_users", scope: !1730, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!1760 = !DIGlobalVariableExpression(var: !1761, expr: !DIExpression())
!1761 = distinct !DIGlobalVariable(name: "my_line_only", scope: !1730, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!1762 = !DIGlobalVariableExpression(var: !1763, expr: !DIExpression())
!1763 = distinct !DIGlobalVariable(name: "time_format", scope: !1730, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!1764 = !DIGlobalVariableExpression(var: !1765, expr: !DIExpression())
!1765 = distinct !DIGlobalVariable(name: "time_format_width", scope: !1730, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!1766 = !DIGlobalVariableExpression(var: !1767, expr: !DIExpression())
!1767 = distinct !DIGlobalVariable(name: "longopts", scope: !1730, file: !3, line: 162, type: !1768, isLocal: true, isDefinition: true)
!1768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1769, size: 4608, elements: !151)
!1769 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1770)
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !1771)
!1771 = !{!1772, !1773, !1774, !1775}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1770, file: !144, line: 52, baseType: !49, size: 64)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1770, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1770, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1770, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!1776 = !DIGlobalVariableExpression(var: !1777, expr: !DIExpression())
!1777 = distinct !DIGlobalVariable(name: "mesg", scope: !1778, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!1778 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1730, retainedNodes: !4)
!1779 = !DIGlobalVariableExpression(var: !1780, expr: !DIExpression())
!1780 = distinct !DIGlobalVariable(name: "hoststr", scope: !1703, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!1781 = !DIGlobalVariableExpression(var: !1782, expr: !DIExpression())
!1782 = distinct !DIGlobalVariable(name: "hostlen", scope: !1703, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!1783 = !DIGlobalVariableExpression(var: !1784, expr: !DIExpression())
!1784 = distinct !DIGlobalVariable(name: "now", scope: !1785, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!1785 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1730, retainedNodes: !4)
!1786 = !DIGlobalVariableExpression(var: !1787, expr: !DIExpression())
!1787 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !1785, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!1788 = !DIGlobalVariableExpression(var: !1789, expr: !DIExpression())
!1789 = distinct !DIGlobalVariable(name: "buf", scope: !1790, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!1790 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !1791, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1730, retainedNodes: !4)
!1791 = !DISubroutineType(types: !1792)
!1792 = !{!49, !1706}
!1793 = !DIGlobalVariableExpression(var: !1794, expr: !DIExpression())
!1794 = distinct !DIGlobalVariable(name: "runlevline", scope: !1795, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1795 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !1796, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1730, retainedNodes: !4)
!1796 = !DISubroutineType(types: !1797)
!1797 = !{null, !1706}
!1798 = !DIGlobalVariableExpression(var: !1799, expr: !DIExpression())
!1799 = distinct !DIGlobalVariable(name: "comment", scope: !1795, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1800 = !DIGlobalVariableExpression(var: !1801, expr: !DIExpression())
!1801 = distinct !DIGlobalVariable(name: "exitstr", scope: !1802, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!1802 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !1796, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1730, retainedNodes: !4)
!1803 = !DILocalVariable(name: "boottime", arg: 2, scope: !1703, file: !3, line: 333, type: !9)
!1804 = !DILocalVariable(name: "stats", scope: !1703, file: !3, line: 335, type: !1805)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !1480, line: 46, size: 1152, elements: !1806)
!1806 = !{!1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1823, !1824, !1825}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1805, file: !1480, line: 48, baseType: !1483, size: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1805, file: !1480, line: 53, baseType: !1485, size: 64, offset: 64)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1805, file: !1480, line: 61, baseType: !1487, size: 64, offset: 128)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1805, file: !1480, line: 62, baseType: !1489, size: 32, offset: 192)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1805, file: !1480, line: 64, baseType: !1491, size: 32, offset: 224)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1805, file: !1480, line: 65, baseType: !1493, size: 32, offset: 256)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1805, file: !1480, line: 67, baseType: !53, size: 32, offset: 288)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1805, file: !1480, line: 69, baseType: !1483, size: 64, offset: 320)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1805, file: !1480, line: 74, baseType: !1497, size: 64, offset: 384)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1805, file: !1480, line: 78, baseType: !1499, size: 64, offset: 448)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1805, file: !1480, line: 80, baseType: !1501, size: 64, offset: 512)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1805, file: !1480, line: 91, baseType: !1819, size: 128, offset: 576)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !1504, line: 10, size: 128, elements: !1820)
!1820 = !{!1821, !1822}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1819, file: !1504, line: 12, baseType: !11, size: 64)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1819, file: !1504, line: 16, baseType: !1508, size: 64, offset: 64)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1805, file: !1480, line: 92, baseType: !1819, size: 128, offset: 704)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1805, file: !1480, line: 93, baseType: !1819, size: 128, offset: 832)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1805, file: !1480, line: 106, baseType: !1512, size: 192, offset: 960)
!1826 = !DILocalVariable(name: "last_change", scope: !1703, file: !3, line: 336, type: !9)
!1827 = !DILocalVariable(name: "mesg", scope: !1703, file: !3, line: 337, type: !7)
!1828 = !DILocalVariable(name: "idlestr", scope: !1703, file: !3, line: 338, type: !1519)
!1829 = !DILocalVariable(name: "line", scope: !1703, file: !3, line: 347, type: !1522)
!1830 = !DILocalVariable(name: "p", scope: !1703, file: !3, line: 348, type: !6)
!1831 = !DILocalVariable(name: "pidstr", scope: !1703, file: !3, line: 349, type: !1530)
!1832 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !133, file: !3, line: 514, type: !67)
!1833 = !DILocation(line: 514, column: 36, scope: !133)
!1834 = !DILocalVariable(name: "last", scope: !133, file: !3, line: 517, type: !317)
!1835 = !DILocation(line: 517, column: 17, scope: !133)
!1836 = !DILocation(line: 517, column: 24, scope: !133)
!1837 = !DILocation(line: 517, column: 42, scope: !133)
!1838 = !DILocalVariable(name: "curr", scope: !133, file: !3, line: 518, type: !317)
!1839 = !DILocation(line: 518, column: 17, scope: !133)
!1840 = !DILocation(line: 518, column: 24, scope: !133)
!1841 = !DILocation(line: 518, column: 42, scope: !133)
!1842 = !DILocation(line: 520, column: 8, scope: !1843)
!1843 = distinct !DILexicalBlock(scope: !133, file: !3, line: 520, column: 7)
!1844 = !DILocation(line: 520, column: 7, scope: !133)
!1845 = !DILocation(line: 521, column: 35, scope: !1843)
!1846 = !DILocation(line: 521, column: 27, scope: !1843)
!1847 = !DILocation(line: 521, column: 51, scope: !1843)
!1848 = !DILocation(line: 521, column: 18, scope: !1843)
!1849 = !DILocation(line: 521, column: 16, scope: !1843)
!1850 = !DILocation(line: 521, column: 5, scope: !1843)
!1851 = !DILocation(line: 522, column: 12, scope: !133)
!1852 = !DILocation(line: 522, column: 33, scope: !133)
!1853 = !DILocation(line: 522, column: 49, scope: !133)
!1854 = !DILocation(line: 522, column: 3, scope: !133)
!1855 = !DILocation(line: 524, column: 8, scope: !1856)
!1856 = distinct !DILexicalBlock(scope: !133, file: !3, line: 524, column: 7)
!1857 = !DILocation(line: 524, column: 7, scope: !133)
!1858 = !DILocation(line: 525, column: 32, scope: !1856)
!1859 = !DILocation(line: 525, column: 24, scope: !1856)
!1860 = !DILocation(line: 525, column: 44, scope: !1856)
!1861 = !DILocation(line: 525, column: 15, scope: !1856)
!1862 = !DILocation(line: 525, column: 13, scope: !1856)
!1863 = !DILocation(line: 525, column: 5, scope: !1856)
!1864 = !DILocation(line: 526, column: 12, scope: !133)
!1865 = !DILocation(line: 526, column: 29, scope: !133)
!1866 = !DILocation(line: 526, column: 42, scope: !133)
!1867 = !DILocation(line: 526, column: 47, scope: !133)
!1868 = !DILocation(line: 526, column: 41, scope: !133)
!1869 = !DILocation(line: 526, column: 63, scope: !133)
!1870 = !DILocation(line: 526, column: 3, scope: !133)
!1871 = !DILocation(line: 528, column: 32, scope: !133)
!1872 = !DILocation(line: 528, column: 57, scope: !133)
!1873 = !DILocation(line: 528, column: 44, scope: !133)
!1874 = !DILocation(line: 529, column: 34, scope: !133)
!1875 = !DILocation(line: 529, column: 23, scope: !133)
!1876 = !DILocation(line: 529, column: 42, scope: !133)
!1877 = !DILocation(line: 528, column: 3, scope: !133)
!1878 = !DILocation(line: 531, column: 3, scope: !133)
!1879 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1880, file: !3, line: 514, type: !1883)
!1880 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !1881, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1907, retainedNodes: !4)
!1881 = !DISubroutineType(types: !1882)
!1882 = !{null, !1883}
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1885)
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1886)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1887)
!1887 = !{!1888, !1889, !1890, !1891, !1892, !1893, !1894, !1899, !1900, !1905, !1906}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1886, file: !72, line: 57, baseType: !14, size: 16)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1886, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1886, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1886, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1886, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1886, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1886, file: !72, line: 67, baseType: !1895, size: 32, offset: 2656)
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !1896)
!1896 = !{!1897, !1898}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !1895, file: !72, line: 45, baseType: !14, size: 16)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !1895, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1886, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1886, file: !72, line: 79, baseType: !1901, size: 64, offset: 2720)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1886, file: !72, line: 75, size: 64, elements: !1902)
!1902 = !{!1903, !1904}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1901, file: !72, line: 77, baseType: !96, size: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1901, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1886, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1886, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!1907 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1908, nameTableKind: None)
!1908 = !{!1909, !1911, !1913, !1915, !1917, !1919, !1921, !1923, !1925, !1927, !1929, !1931, !1933, !1935, !1937, !1939, !1941, !1943, !1953, !1956, !1961, !1963, !1966, !1968, !1973, !1975, !1977}
!1909 = !DIGlobalVariableExpression(var: !1910, expr: !DIExpression())
!1910 = distinct !DIGlobalVariable(name: "do_lookup", scope: !1907, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!1911 = !DIGlobalVariableExpression(var: !1912, expr: !DIExpression())
!1912 = distinct !DIGlobalVariable(name: "short_list", scope: !1907, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!1913 = !DIGlobalVariableExpression(var: !1914, expr: !DIExpression())
!1914 = distinct !DIGlobalVariable(name: "short_output", scope: !1907, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!1915 = !DIGlobalVariableExpression(var: !1916, expr: !DIExpression())
!1916 = distinct !DIGlobalVariable(name: "include_idle", scope: !1907, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!1917 = !DIGlobalVariableExpression(var: !1918, expr: !DIExpression())
!1918 = distinct !DIGlobalVariable(name: "include_heading", scope: !1907, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!1919 = !DIGlobalVariableExpression(var: !1920, expr: !DIExpression())
!1920 = distinct !DIGlobalVariable(name: "include_mesg", scope: !1907, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!1921 = !DIGlobalVariableExpression(var: !1922, expr: !DIExpression())
!1922 = distinct !DIGlobalVariable(name: "include_exit", scope: !1907, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!1923 = !DIGlobalVariableExpression(var: !1924, expr: !DIExpression())
!1924 = distinct !DIGlobalVariable(name: "need_boottime", scope: !1907, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!1925 = !DIGlobalVariableExpression(var: !1926, expr: !DIExpression())
!1926 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !1907, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!1927 = !DIGlobalVariableExpression(var: !1928, expr: !DIExpression())
!1928 = distinct !DIGlobalVariable(name: "need_login", scope: !1907, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!1929 = !DIGlobalVariableExpression(var: !1930, expr: !DIExpression())
!1930 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !1907, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!1931 = !DIGlobalVariableExpression(var: !1932, expr: !DIExpression())
!1932 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !1907, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!1933 = !DIGlobalVariableExpression(var: !1934, expr: !DIExpression())
!1934 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !1907, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!1935 = !DIGlobalVariableExpression(var: !1936, expr: !DIExpression())
!1936 = distinct !DIGlobalVariable(name: "need_users", scope: !1907, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!1937 = !DIGlobalVariableExpression(var: !1938, expr: !DIExpression())
!1938 = distinct !DIGlobalVariable(name: "my_line_only", scope: !1907, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!1939 = !DIGlobalVariableExpression(var: !1940, expr: !DIExpression())
!1940 = distinct !DIGlobalVariable(name: "time_format", scope: !1907, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!1941 = !DIGlobalVariableExpression(var: !1942, expr: !DIExpression())
!1942 = distinct !DIGlobalVariable(name: "time_format_width", scope: !1907, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!1943 = !DIGlobalVariableExpression(var: !1944, expr: !DIExpression())
!1944 = distinct !DIGlobalVariable(name: "longopts", scope: !1907, file: !3, line: 162, type: !1945, isLocal: true, isDefinition: true)
!1945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1946, size: 4608, elements: !151)
!1946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1947)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !1948)
!1948 = !{!1949, !1950, !1951, !1952}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1947, file: !144, line: 52, baseType: !49, size: 64)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1947, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1947, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1947, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!1953 = !DIGlobalVariableExpression(var: !1954, expr: !DIExpression())
!1954 = distinct !DIGlobalVariable(name: "mesg", scope: !1955, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!1955 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1907, retainedNodes: !4)
!1956 = !DIGlobalVariableExpression(var: !1957, expr: !DIExpression())
!1957 = distinct !DIGlobalVariable(name: "hoststr", scope: !1958, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!1958 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !1959, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1907, retainedNodes: !4)
!1959 = !DISubroutineType(types: !1960)
!1960 = !{null, !1883, !9}
!1961 = !DIGlobalVariableExpression(var: !1962, expr: !DIExpression())
!1962 = distinct !DIGlobalVariable(name: "hostlen", scope: !1958, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!1963 = !DIGlobalVariableExpression(var: !1964, expr: !DIExpression())
!1964 = distinct !DIGlobalVariable(name: "now", scope: !1965, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!1965 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1907, retainedNodes: !4)
!1966 = !DIGlobalVariableExpression(var: !1967, expr: !DIExpression())
!1967 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !1965, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!1968 = !DIGlobalVariableExpression(var: !1969, expr: !DIExpression())
!1969 = distinct !DIGlobalVariable(name: "buf", scope: !1970, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!1970 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !1971, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1907, retainedNodes: !4)
!1971 = !DISubroutineType(types: !1972)
!1972 = !{!49, !1883}
!1973 = !DIGlobalVariableExpression(var: !1974, expr: !DIExpression())
!1974 = distinct !DIGlobalVariable(name: "runlevline", scope: !1880, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1975 = !DIGlobalVariableExpression(var: !1976, expr: !DIExpression())
!1976 = distinct !DIGlobalVariable(name: "comment", scope: !1880, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1977 = !DIGlobalVariableExpression(var: !1978, expr: !DIExpression())
!1978 = distinct !DIGlobalVariable(name: "exitstr", scope: !1979, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!1979 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !1881, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1907, retainedNodes: !4)
!1980 = !DILocalVariable(name: "last", scope: !1880, file: !3, line: 517, type: !317)
!1981 = !DILocalVariable(name: "curr", scope: !1880, file: !3, line: 518, type: !317)
!1982 = distinct !DISubprogram(name: "print_boottime", scope: !3, file: !3, line: 441, type: !134, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1983 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1982, file: !3, line: 441, type: !67)
!1984 = !DILocation(line: 441, column: 36, scope: !1982)
!1985 = !DILocation(line: 443, column: 32, scope: !1982)
!1986 = !DILocation(line: 444, column: 28, scope: !1982)
!1987 = !DILocation(line: 444, column: 15, scope: !1982)
!1988 = !DILocation(line: 443, column: 3, scope: !1982)
!1989 = !DILocation(line: 445, column: 1, scope: !1982)
!1990 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1991, file: !3, line: 441, type: !1994)
!1991 = distinct !DISubprogram(name: "print_boottime", scope: !3, file: !3, line: 441, type: !1992, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2018, retainedNodes: !4)
!1992 = !DISubroutineType(types: !1993)
!1993 = !{null, !1994}
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 64)
!1995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1996)
!1996 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1997)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1998)
!1998 = !{!1999, !2000, !2001, !2002, !2003, !2004, !2005, !2010, !2011, !2016, !2017}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1997, file: !72, line: 57, baseType: !14, size: 16)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1997, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1997, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1997, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1997, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1997, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1997, file: !72, line: 67, baseType: !2006, size: 32, offset: 2656)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !2007)
!2007 = !{!2008, !2009}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !2006, file: !72, line: 45, baseType: !14, size: 16)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !2006, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1997, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1997, file: !72, line: 79, baseType: !2012, size: 64, offset: 2720)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1997, file: !72, line: 75, size: 64, elements: !2013)
!2013 = !{!2014, !2015}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2012, file: !72, line: 77, baseType: !96, size: 32)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2012, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1997, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1997, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!2018 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2019, nameTableKind: None)
!2019 = !{!2020, !2022, !2024, !2026, !2028, !2030, !2032, !2034, !2036, !2038, !2040, !2042, !2044, !2046, !2048, !2050, !2052, !2054, !2064, !2067, !2072, !2074, !2077, !2079, !2084, !2087, !2089}
!2020 = !DIGlobalVariableExpression(var: !2021, expr: !DIExpression())
!2021 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2018, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!2022 = !DIGlobalVariableExpression(var: !2023, expr: !DIExpression())
!2023 = distinct !DIGlobalVariable(name: "short_list", scope: !2018, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!2024 = !DIGlobalVariableExpression(var: !2025, expr: !DIExpression())
!2025 = distinct !DIGlobalVariable(name: "short_output", scope: !2018, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!2026 = !DIGlobalVariableExpression(var: !2027, expr: !DIExpression())
!2027 = distinct !DIGlobalVariable(name: "include_idle", scope: !2018, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!2028 = !DIGlobalVariableExpression(var: !2029, expr: !DIExpression())
!2029 = distinct !DIGlobalVariable(name: "include_heading", scope: !2018, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!2030 = !DIGlobalVariableExpression(var: !2031, expr: !DIExpression())
!2031 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2018, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!2032 = !DIGlobalVariableExpression(var: !2033, expr: !DIExpression())
!2033 = distinct !DIGlobalVariable(name: "include_exit", scope: !2018, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!2034 = !DIGlobalVariableExpression(var: !2035, expr: !DIExpression())
!2035 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2018, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!2036 = !DIGlobalVariableExpression(var: !2037, expr: !DIExpression())
!2037 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2018, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!2038 = !DIGlobalVariableExpression(var: !2039, expr: !DIExpression())
!2039 = distinct !DIGlobalVariable(name: "need_login", scope: !2018, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!2040 = !DIGlobalVariableExpression(var: !2041, expr: !DIExpression())
!2041 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2018, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!2042 = !DIGlobalVariableExpression(var: !2043, expr: !DIExpression())
!2043 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2018, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!2044 = !DIGlobalVariableExpression(var: !2045, expr: !DIExpression())
!2045 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2018, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!2046 = !DIGlobalVariableExpression(var: !2047, expr: !DIExpression())
!2047 = distinct !DIGlobalVariable(name: "need_users", scope: !2018, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!2048 = !DIGlobalVariableExpression(var: !2049, expr: !DIExpression())
!2049 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2018, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!2050 = !DIGlobalVariableExpression(var: !2051, expr: !DIExpression())
!2051 = distinct !DIGlobalVariable(name: "time_format", scope: !2018, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!2052 = !DIGlobalVariableExpression(var: !2053, expr: !DIExpression())
!2053 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2018, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!2054 = !DIGlobalVariableExpression(var: !2055, expr: !DIExpression())
!2055 = distinct !DIGlobalVariable(name: "longopts", scope: !2018, file: !3, line: 162, type: !2056, isLocal: true, isDefinition: true)
!2056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2057, size: 4608, elements: !151)
!2057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2058)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !2059)
!2059 = !{!2060, !2061, !2062, !2063}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2058, file: !144, line: 52, baseType: !49, size: 64)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2058, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2058, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2058, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!2064 = !DIGlobalVariableExpression(var: !2065, expr: !DIExpression())
!2065 = distinct !DIGlobalVariable(name: "mesg", scope: !2066, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!2066 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2018, retainedNodes: !4)
!2067 = !DIGlobalVariableExpression(var: !2068, expr: !DIExpression())
!2068 = distinct !DIGlobalVariable(name: "hoststr", scope: !2069, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!2069 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !2070, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2018, retainedNodes: !4)
!2070 = !DISubroutineType(types: !2071)
!2071 = !{null, !1994, !9}
!2072 = !DIGlobalVariableExpression(var: !2073, expr: !DIExpression())
!2073 = distinct !DIGlobalVariable(name: "hostlen", scope: !2069, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!2074 = !DIGlobalVariableExpression(var: !2075, expr: !DIExpression())
!2075 = distinct !DIGlobalVariable(name: "now", scope: !2076, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!2076 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2018, retainedNodes: !4)
!2077 = !DIGlobalVariableExpression(var: !2078, expr: !DIExpression())
!2078 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !2076, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!2079 = !DIGlobalVariableExpression(var: !2080, expr: !DIExpression())
!2080 = distinct !DIGlobalVariable(name: "buf", scope: !2081, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!2081 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !2082, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2018, retainedNodes: !4)
!2082 = !DISubroutineType(types: !2083)
!2083 = !{!49, !1994}
!2084 = !DIGlobalVariableExpression(var: !2085, expr: !DIExpression())
!2085 = distinct !DIGlobalVariable(name: "runlevline", scope: !2086, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2086 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !1992, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2018, retainedNodes: !4)
!2087 = !DIGlobalVariableExpression(var: !2088, expr: !DIExpression())
!2088 = distinct !DIGlobalVariable(name: "comment", scope: !2086, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2089 = !DIGlobalVariableExpression(var: !2090, expr: !DIExpression())
!2090 = distinct !DIGlobalVariable(name: "exitstr", scope: !2091, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!2091 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !1992, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2018, retainedNodes: !4)
!2092 = distinct !DISubprogram(name: "print_clockchange", scope: !3, file: !3, line: 506, type: !134, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2093 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2092, file: !3, line: 506, type: !67)
!2094 = !DILocation(line: 506, column: 39, scope: !2092)
!2095 = !DILocation(line: 509, column: 32, scope: !2092)
!2096 = !DILocation(line: 510, column: 28, scope: !2092)
!2097 = !DILocation(line: 510, column: 15, scope: !2092)
!2098 = !DILocation(line: 509, column: 3, scope: !2092)
!2099 = !DILocation(line: 511, column: 1, scope: !2092)
!2100 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2101, file: !3, line: 506, type: !2104)
!2101 = distinct !DISubprogram(name: "print_clockchange", scope: !3, file: !3, line: 506, type: !2102, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2128, retainedNodes: !4)
!2102 = !DISubroutineType(types: !2103)
!2103 = !{null, !2104}
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 64)
!2105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2106)
!2106 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !2107)
!2107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !2108)
!2108 = !{!2109, !2110, !2111, !2112, !2113, !2114, !2115, !2120, !2121, !2126, !2127}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !2107, file: !72, line: 57, baseType: !14, size: 16)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !2107, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !2107, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !2107, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !2107, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !2107, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !2107, file: !72, line: 67, baseType: !2116, size: 32, offset: 2656)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !2117)
!2117 = !{!2118, !2119}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !2116, file: !72, line: 45, baseType: !14, size: 16)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !2116, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !2107, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !2107, file: !72, line: 79, baseType: !2122, size: 64, offset: 2720)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2107, file: !72, line: 75, size: 64, elements: !2123)
!2123 = !{!2124, !2125}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2122, file: !72, line: 77, baseType: !96, size: 32)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2122, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !2107, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2107, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!2128 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2129, nameTableKind: None)
!2129 = !{!2130, !2132, !2134, !2136, !2138, !2140, !2142, !2144, !2146, !2148, !2150, !2152, !2154, !2156, !2158, !2160, !2162, !2164, !2174, !2177, !2182, !2184, !2187, !2189, !2194, !2197, !2199}
!2130 = !DIGlobalVariableExpression(var: !2131, expr: !DIExpression())
!2131 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2128, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!2132 = !DIGlobalVariableExpression(var: !2133, expr: !DIExpression())
!2133 = distinct !DIGlobalVariable(name: "short_list", scope: !2128, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!2134 = !DIGlobalVariableExpression(var: !2135, expr: !DIExpression())
!2135 = distinct !DIGlobalVariable(name: "short_output", scope: !2128, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!2136 = !DIGlobalVariableExpression(var: !2137, expr: !DIExpression())
!2137 = distinct !DIGlobalVariable(name: "include_idle", scope: !2128, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!2138 = !DIGlobalVariableExpression(var: !2139, expr: !DIExpression())
!2139 = distinct !DIGlobalVariable(name: "include_heading", scope: !2128, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!2140 = !DIGlobalVariableExpression(var: !2141, expr: !DIExpression())
!2141 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2128, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!2142 = !DIGlobalVariableExpression(var: !2143, expr: !DIExpression())
!2143 = distinct !DIGlobalVariable(name: "include_exit", scope: !2128, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!2144 = !DIGlobalVariableExpression(var: !2145, expr: !DIExpression())
!2145 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2128, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!2146 = !DIGlobalVariableExpression(var: !2147, expr: !DIExpression())
!2147 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2128, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!2148 = !DIGlobalVariableExpression(var: !2149, expr: !DIExpression())
!2149 = distinct !DIGlobalVariable(name: "need_login", scope: !2128, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!2150 = !DIGlobalVariableExpression(var: !2151, expr: !DIExpression())
!2151 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2128, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!2152 = !DIGlobalVariableExpression(var: !2153, expr: !DIExpression())
!2153 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2128, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!2154 = !DIGlobalVariableExpression(var: !2155, expr: !DIExpression())
!2155 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2128, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!2156 = !DIGlobalVariableExpression(var: !2157, expr: !DIExpression())
!2157 = distinct !DIGlobalVariable(name: "need_users", scope: !2128, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!2158 = !DIGlobalVariableExpression(var: !2159, expr: !DIExpression())
!2159 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2128, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!2160 = !DIGlobalVariableExpression(var: !2161, expr: !DIExpression())
!2161 = distinct !DIGlobalVariable(name: "time_format", scope: !2128, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!2162 = !DIGlobalVariableExpression(var: !2163, expr: !DIExpression())
!2163 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2128, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!2164 = !DIGlobalVariableExpression(var: !2165, expr: !DIExpression())
!2165 = distinct !DIGlobalVariable(name: "longopts", scope: !2128, file: !3, line: 162, type: !2166, isLocal: true, isDefinition: true)
!2166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2167, size: 4608, elements: !151)
!2167 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2168)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !2169)
!2169 = !{!2170, !2171, !2172, !2173}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2168, file: !144, line: 52, baseType: !49, size: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2168, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2168, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2168, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!2174 = !DIGlobalVariableExpression(var: !2175, expr: !DIExpression())
!2175 = distinct !DIGlobalVariable(name: "mesg", scope: !2176, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!2176 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2128, retainedNodes: !4)
!2177 = !DIGlobalVariableExpression(var: !2178, expr: !DIExpression())
!2178 = distinct !DIGlobalVariable(name: "hoststr", scope: !2179, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!2179 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !2180, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2128, retainedNodes: !4)
!2180 = !DISubroutineType(types: !2181)
!2181 = !{null, !2104, !9}
!2182 = !DIGlobalVariableExpression(var: !2183, expr: !DIExpression())
!2183 = distinct !DIGlobalVariable(name: "hostlen", scope: !2179, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!2184 = !DIGlobalVariableExpression(var: !2185, expr: !DIExpression())
!2185 = distinct !DIGlobalVariable(name: "now", scope: !2186, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!2186 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2128, retainedNodes: !4)
!2187 = !DIGlobalVariableExpression(var: !2188, expr: !DIExpression())
!2188 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !2186, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!2189 = !DIGlobalVariableExpression(var: !2190, expr: !DIExpression())
!2190 = distinct !DIGlobalVariable(name: "buf", scope: !2191, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!2191 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !2192, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2128, retainedNodes: !4)
!2192 = !DISubroutineType(types: !2193)
!2193 = !{!49, !2104}
!2194 = !DIGlobalVariableExpression(var: !2195, expr: !DIExpression())
!2195 = distinct !DIGlobalVariable(name: "runlevline", scope: !2196, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2196 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !2102, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2128, retainedNodes: !4)
!2197 = !DIGlobalVariableExpression(var: !2198, expr: !DIExpression())
!2198 = distinct !DIGlobalVariable(name: "comment", scope: !2196, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2199 = !DIGlobalVariableExpression(var: !2200, expr: !DIExpression())
!2200 = distinct !DIGlobalVariable(name: "exitstr", scope: !2201, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!2201 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !2102, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2128, retainedNodes: !4)
!2202 = distinct !DISubprogram(name: "print_initspawn", scope: !3, file: !3, line: 495, type: !134, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2203 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2202, file: !3, line: 495, type: !67)
!2204 = !DILocation(line: 495, column: 37, scope: !2202)
!2205 = !DILocalVariable(name: "comment", scope: !2202, file: !3, line: 497, type: !6)
!2206 = !DILocation(line: 497, column: 9, scope: !2202)
!2207 = !DILocation(line: 497, column: 43, scope: !2202)
!2208 = !DILocation(line: 497, column: 19, scope: !2202)
!2209 = !DILocalVariable(name: "pidstr", scope: !2202, file: !3, line: 498, type: !1530)
!2210 = !DILocation(line: 498, column: 3, scope: !2202)
!2211 = !DILocation(line: 500, column: 54, scope: !2202)
!2212 = !DILocation(line: 500, column: 64, scope: !2202)
!2213 = !DILocation(line: 501, column: 28, scope: !2202)
!2214 = !DILocation(line: 501, column: 15, scope: !2202)
!2215 = !DILocation(line: 501, column: 43, scope: !2202)
!2216 = !DILocation(line: 501, column: 51, scope: !2202)
!2217 = !DILocation(line: 500, column: 3, scope: !2202)
!2218 = !DILocation(line: 502, column: 9, scope: !2202)
!2219 = !DILocation(line: 502, column: 3, scope: !2202)
!2220 = !DILocation(line: 503, column: 1, scope: !2202)
!2221 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2222, file: !3, line: 495, type: !2225)
!2222 = distinct !DISubprogram(name: "print_initspawn", scope: !3, file: !3, line: 495, type: !2223, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2249, retainedNodes: !4)
!2223 = !DISubroutineType(types: !2224)
!2224 = !{null, !2225}
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 64)
!2226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2227)
!2227 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !2228)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !2229)
!2229 = !{!2230, !2231, !2232, !2233, !2234, !2235, !2236, !2241, !2242, !2247, !2248}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !2228, file: !72, line: 57, baseType: !14, size: 16)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !2228, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !2228, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !2228, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !2228, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !2228, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !2228, file: !72, line: 67, baseType: !2237, size: 32, offset: 2656)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !2238)
!2238 = !{!2239, !2240}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !2237, file: !72, line: 45, baseType: !14, size: 16)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !2237, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !2228, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !2228, file: !72, line: 79, baseType: !2243, size: 64, offset: 2720)
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2228, file: !72, line: 75, size: 64, elements: !2244)
!2244 = !{!2245, !2246}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2243, file: !72, line: 77, baseType: !96, size: 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2243, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !2228, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2228, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!2249 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2250, nameTableKind: None)
!2250 = !{!2251, !2253, !2255, !2257, !2259, !2261, !2263, !2265, !2267, !2269, !2271, !2273, !2275, !2277, !2279, !2281, !2283, !2285, !2295, !2298, !2303, !2305, !2308, !2310, !2315, !2318, !2320}
!2251 = !DIGlobalVariableExpression(var: !2252, expr: !DIExpression())
!2252 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2249, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!2253 = !DIGlobalVariableExpression(var: !2254, expr: !DIExpression())
!2254 = distinct !DIGlobalVariable(name: "short_list", scope: !2249, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!2255 = !DIGlobalVariableExpression(var: !2256, expr: !DIExpression())
!2256 = distinct !DIGlobalVariable(name: "short_output", scope: !2249, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!2257 = !DIGlobalVariableExpression(var: !2258, expr: !DIExpression())
!2258 = distinct !DIGlobalVariable(name: "include_idle", scope: !2249, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!2259 = !DIGlobalVariableExpression(var: !2260, expr: !DIExpression())
!2260 = distinct !DIGlobalVariable(name: "include_heading", scope: !2249, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!2261 = !DIGlobalVariableExpression(var: !2262, expr: !DIExpression())
!2262 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2249, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!2263 = !DIGlobalVariableExpression(var: !2264, expr: !DIExpression())
!2264 = distinct !DIGlobalVariable(name: "include_exit", scope: !2249, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!2265 = !DIGlobalVariableExpression(var: !2266, expr: !DIExpression())
!2266 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2249, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!2267 = !DIGlobalVariableExpression(var: !2268, expr: !DIExpression())
!2268 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2249, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!2269 = !DIGlobalVariableExpression(var: !2270, expr: !DIExpression())
!2270 = distinct !DIGlobalVariable(name: "need_login", scope: !2249, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!2271 = !DIGlobalVariableExpression(var: !2272, expr: !DIExpression())
!2272 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2249, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!2273 = !DIGlobalVariableExpression(var: !2274, expr: !DIExpression())
!2274 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2249, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!2275 = !DIGlobalVariableExpression(var: !2276, expr: !DIExpression())
!2276 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2249, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!2277 = !DIGlobalVariableExpression(var: !2278, expr: !DIExpression())
!2278 = distinct !DIGlobalVariable(name: "need_users", scope: !2249, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!2279 = !DIGlobalVariableExpression(var: !2280, expr: !DIExpression())
!2280 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2249, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!2281 = !DIGlobalVariableExpression(var: !2282, expr: !DIExpression())
!2282 = distinct !DIGlobalVariable(name: "time_format", scope: !2249, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!2283 = !DIGlobalVariableExpression(var: !2284, expr: !DIExpression())
!2284 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2249, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!2285 = !DIGlobalVariableExpression(var: !2286, expr: !DIExpression())
!2286 = distinct !DIGlobalVariable(name: "longopts", scope: !2249, file: !3, line: 162, type: !2287, isLocal: true, isDefinition: true)
!2287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2288, size: 4608, elements: !151)
!2288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2289)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !2290)
!2290 = !{!2291, !2292, !2293, !2294}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2289, file: !144, line: 52, baseType: !49, size: 64)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2289, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2289, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2289, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!2295 = !DIGlobalVariableExpression(var: !2296, expr: !DIExpression())
!2296 = distinct !DIGlobalVariable(name: "mesg", scope: !2297, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!2297 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2249, retainedNodes: !4)
!2298 = !DIGlobalVariableExpression(var: !2299, expr: !DIExpression())
!2299 = distinct !DIGlobalVariable(name: "hoststr", scope: !2300, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!2300 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !2301, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2249, retainedNodes: !4)
!2301 = !DISubroutineType(types: !2302)
!2302 = !{null, !2225, !9}
!2303 = !DIGlobalVariableExpression(var: !2304, expr: !DIExpression())
!2304 = distinct !DIGlobalVariable(name: "hostlen", scope: !2300, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!2305 = !DIGlobalVariableExpression(var: !2306, expr: !DIExpression())
!2306 = distinct !DIGlobalVariable(name: "now", scope: !2307, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!2307 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2249, retainedNodes: !4)
!2308 = !DIGlobalVariableExpression(var: !2309, expr: !DIExpression())
!2309 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !2307, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!2310 = !DIGlobalVariableExpression(var: !2311, expr: !DIExpression())
!2311 = distinct !DIGlobalVariable(name: "buf", scope: !2312, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!2312 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !2313, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2249, retainedNodes: !4)
!2313 = !DISubroutineType(types: !2314)
!2314 = !{!49, !2225}
!2315 = !DIGlobalVariableExpression(var: !2316, expr: !DIExpression())
!2316 = distinct !DIGlobalVariable(name: "runlevline", scope: !2317, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2317 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !2223, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2249, retainedNodes: !4)
!2318 = !DIGlobalVariableExpression(var: !2319, expr: !DIExpression())
!2319 = distinct !DIGlobalVariable(name: "comment", scope: !2317, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2320 = !DIGlobalVariableExpression(var: !2321, expr: !DIExpression())
!2321 = distinct !DIGlobalVariable(name: "exitstr", scope: !2322, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!2322 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !2223, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2249, retainedNodes: !4)
!2323 = !DILocalVariable(name: "comment", scope: !2222, file: !3, line: 497, type: !6)
!2324 = !DILocalVariable(name: "pidstr", scope: !2222, file: !3, line: 498, type: !1530)
!2325 = distinct !DISubprogram(name: "print_login", scope: !3, file: !3, line: 482, type: !134, scopeLine: 483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2326 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2325, file: !3, line: 482, type: !67)
!2327 = !DILocation(line: 482, column: 33, scope: !2325)
!2328 = !DILocalVariable(name: "comment", scope: !2325, file: !3, line: 484, type: !6)
!2329 = !DILocation(line: 484, column: 9, scope: !2325)
!2330 = !DILocation(line: 484, column: 43, scope: !2325)
!2331 = !DILocation(line: 484, column: 19, scope: !2325)
!2332 = !DILocalVariable(name: "pidstr", scope: !2325, file: !3, line: 485, type: !1530)
!2333 = !DILocation(line: 485, column: 3, scope: !2325)
!2334 = !DILocation(line: 489, column: 19, scope: !2325)
!2335 = !DILocation(line: 489, column: 62, scope: !2325)
!2336 = !DILocation(line: 489, column: 72, scope: !2325)
!2337 = !DILocation(line: 490, column: 28, scope: !2325)
!2338 = !DILocation(line: 490, column: 15, scope: !2325)
!2339 = !DILocation(line: 490, column: 43, scope: !2325)
!2340 = !DILocation(line: 490, column: 51, scope: !2325)
!2341 = !DILocation(line: 489, column: 3, scope: !2325)
!2342 = !DILocation(line: 491, column: 9, scope: !2325)
!2343 = !DILocation(line: 491, column: 3, scope: !2325)
!2344 = !DILocation(line: 492, column: 1, scope: !2325)
!2345 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2346, file: !3, line: 482, type: !2349)
!2346 = distinct !DISubprogram(name: "print_login", scope: !3, file: !3, line: 482, type: !2347, scopeLine: 483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2373, retainedNodes: !4)
!2347 = !DISubroutineType(types: !2348)
!2348 = !{null, !2349}
!2349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 64)
!2350 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2351)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !2352)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !2353)
!2353 = !{!2354, !2355, !2356, !2357, !2358, !2359, !2360, !2365, !2366, !2371, !2372}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !2352, file: !72, line: 57, baseType: !14, size: 16)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !2352, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !2352, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !2352, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !2352, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !2352, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !2352, file: !72, line: 67, baseType: !2361, size: 32, offset: 2656)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !2362)
!2362 = !{!2363, !2364}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !2361, file: !72, line: 45, baseType: !14, size: 16)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !2361, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !2352, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !2352, file: !72, line: 79, baseType: !2367, size: 64, offset: 2720)
!2367 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2352, file: !72, line: 75, size: 64, elements: !2368)
!2368 = !{!2369, !2370}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2367, file: !72, line: 77, baseType: !96, size: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2367, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !2352, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2352, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!2373 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2374, nameTableKind: None)
!2374 = !{!2375, !2377, !2379, !2381, !2383, !2385, !2387, !2389, !2391, !2393, !2395, !2397, !2399, !2401, !2403, !2405, !2407, !2409, !2419, !2422, !2427, !2429, !2432, !2434, !2439, !2442, !2444}
!2375 = !DIGlobalVariableExpression(var: !2376, expr: !DIExpression())
!2376 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2373, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!2377 = !DIGlobalVariableExpression(var: !2378, expr: !DIExpression())
!2378 = distinct !DIGlobalVariable(name: "short_list", scope: !2373, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!2379 = !DIGlobalVariableExpression(var: !2380, expr: !DIExpression())
!2380 = distinct !DIGlobalVariable(name: "short_output", scope: !2373, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!2381 = !DIGlobalVariableExpression(var: !2382, expr: !DIExpression())
!2382 = distinct !DIGlobalVariable(name: "include_idle", scope: !2373, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!2383 = !DIGlobalVariableExpression(var: !2384, expr: !DIExpression())
!2384 = distinct !DIGlobalVariable(name: "include_heading", scope: !2373, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!2385 = !DIGlobalVariableExpression(var: !2386, expr: !DIExpression())
!2386 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2373, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!2387 = !DIGlobalVariableExpression(var: !2388, expr: !DIExpression())
!2388 = distinct !DIGlobalVariable(name: "include_exit", scope: !2373, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!2389 = !DIGlobalVariableExpression(var: !2390, expr: !DIExpression())
!2390 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2373, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!2391 = !DIGlobalVariableExpression(var: !2392, expr: !DIExpression())
!2392 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2373, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!2393 = !DIGlobalVariableExpression(var: !2394, expr: !DIExpression())
!2394 = distinct !DIGlobalVariable(name: "need_login", scope: !2373, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!2395 = !DIGlobalVariableExpression(var: !2396, expr: !DIExpression())
!2396 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2373, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!2397 = !DIGlobalVariableExpression(var: !2398, expr: !DIExpression())
!2398 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2373, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!2399 = !DIGlobalVariableExpression(var: !2400, expr: !DIExpression())
!2400 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2373, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!2401 = !DIGlobalVariableExpression(var: !2402, expr: !DIExpression())
!2402 = distinct !DIGlobalVariable(name: "need_users", scope: !2373, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!2403 = !DIGlobalVariableExpression(var: !2404, expr: !DIExpression())
!2404 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2373, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!2405 = !DIGlobalVariableExpression(var: !2406, expr: !DIExpression())
!2406 = distinct !DIGlobalVariable(name: "time_format", scope: !2373, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!2407 = !DIGlobalVariableExpression(var: !2408, expr: !DIExpression())
!2408 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2373, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!2409 = !DIGlobalVariableExpression(var: !2410, expr: !DIExpression())
!2410 = distinct !DIGlobalVariable(name: "longopts", scope: !2373, file: !3, line: 162, type: !2411, isLocal: true, isDefinition: true)
!2411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2412, size: 4608, elements: !151)
!2412 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2413)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !2414)
!2414 = !{!2415, !2416, !2417, !2418}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2413, file: !144, line: 52, baseType: !49, size: 64)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2413, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2413, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2413, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!2419 = !DIGlobalVariableExpression(var: !2420, expr: !DIExpression())
!2420 = distinct !DIGlobalVariable(name: "mesg", scope: !2421, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!2421 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2373, retainedNodes: !4)
!2422 = !DIGlobalVariableExpression(var: !2423, expr: !DIExpression())
!2423 = distinct !DIGlobalVariable(name: "hoststr", scope: !2424, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!2424 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !2425, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2373, retainedNodes: !4)
!2425 = !DISubroutineType(types: !2426)
!2426 = !{null, !2349, !9}
!2427 = !DIGlobalVariableExpression(var: !2428, expr: !DIExpression())
!2428 = distinct !DIGlobalVariable(name: "hostlen", scope: !2424, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!2429 = !DIGlobalVariableExpression(var: !2430, expr: !DIExpression())
!2430 = distinct !DIGlobalVariable(name: "now", scope: !2431, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!2431 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2373, retainedNodes: !4)
!2432 = !DIGlobalVariableExpression(var: !2433, expr: !DIExpression())
!2433 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !2431, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!2434 = !DIGlobalVariableExpression(var: !2435, expr: !DIExpression())
!2435 = distinct !DIGlobalVariable(name: "buf", scope: !2436, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!2436 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !2437, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2373, retainedNodes: !4)
!2437 = !DISubroutineType(types: !2438)
!2438 = !{!49, !2349}
!2439 = !DIGlobalVariableExpression(var: !2440, expr: !DIExpression())
!2440 = distinct !DIGlobalVariable(name: "runlevline", scope: !2441, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2441 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !2347, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2373, retainedNodes: !4)
!2442 = !DIGlobalVariableExpression(var: !2443, expr: !DIExpression())
!2443 = distinct !DIGlobalVariable(name: "comment", scope: !2441, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2444 = !DIGlobalVariableExpression(var: !2445, expr: !DIExpression())
!2445 = distinct !DIGlobalVariable(name: "exitstr", scope: !2446, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!2446 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !2347, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2373, retainedNodes: !4)
!2447 = !DILocalVariable(name: "comment", scope: !2346, file: !3, line: 484, type: !6)
!2448 = !DILocalVariable(name: "pidstr", scope: !2346, file: !3, line: 485, type: !1530)
!2449 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !140, file: !3, line: 459, type: !67)
!2450 = !DILocation(line: 459, column: 37, scope: !140)
!2451 = !DILocalVariable(name: "comment", scope: !140, file: !3, line: 462, type: !6)
!2452 = !DILocation(line: 462, column: 9, scope: !140)
!2453 = !DILocation(line: 462, column: 43, scope: !140)
!2454 = !DILocation(line: 462, column: 19, scope: !140)
!2455 = !DILocalVariable(name: "pidstr", scope: !140, file: !3, line: 463, type: !1530)
!2456 = !DILocation(line: 463, column: 3, scope: !140)
!2457 = !DILocation(line: 465, column: 8, scope: !2458)
!2458 = distinct !DILexicalBlock(scope: !140, file: !3, line: 465, column: 7)
!2459 = !DILocation(line: 465, column: 7, scope: !140)
!2460 = !DILocation(line: 466, column: 32, scope: !2458)
!2461 = !DILocation(line: 466, column: 24, scope: !2458)
!2462 = !DILocation(line: 467, column: 24, scope: !2458)
!2463 = !DILocation(line: 467, column: 78, scope: !2458)
!2464 = !DILocation(line: 468, column: 34, scope: !2458)
!2465 = !DILocation(line: 468, column: 26, scope: !2458)
!2466 = !DILocation(line: 468, column: 24, scope: !2458)
!2467 = !DILocation(line: 469, column: 24, scope: !2458)
!2468 = !DILocation(line: 470, column: 24, scope: !2458)
!2469 = !DILocation(line: 466, column: 15, scope: !2458)
!2470 = !DILocation(line: 466, column: 13, scope: !2458)
!2471 = !DILocation(line: 466, column: 5, scope: !2458)
!2472 = !DILocation(line: 471, column: 12, scope: !140)
!2473 = !DILocation(line: 471, column: 34, scope: !140)
!2474 = !DILocation(line: 471, column: 46, scope: !140)
!2475 = !DILocation(line: 472, column: 12, scope: !140)
!2476 = !DILocation(line: 472, column: 24, scope: !140)
!2477 = !DILocation(line: 471, column: 3, scope: !140)
!2478 = !DILocation(line: 476, column: 54, scope: !140)
!2479 = !DILocation(line: 476, column: 64, scope: !140)
!2480 = !DILocation(line: 477, column: 28, scope: !140)
!2481 = !DILocation(line: 477, column: 15, scope: !140)
!2482 = !DILocation(line: 477, column: 43, scope: !140)
!2483 = !DILocation(line: 477, column: 51, scope: !140)
!2484 = !DILocation(line: 477, column: 60, scope: !140)
!2485 = !DILocation(line: 476, column: 3, scope: !140)
!2486 = !DILocation(line: 478, column: 9, scope: !140)
!2487 = !DILocation(line: 478, column: 3, scope: !140)
!2488 = !DILocation(line: 479, column: 1, scope: !140)
!2489 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2490, file: !3, line: 459, type: !2493)
!2490 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !2491, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2517, retainedNodes: !4)
!2491 = !DISubroutineType(types: !2492)
!2492 = !{null, !2493}
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 64)
!2494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2495)
!2495 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !2496)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !2497)
!2497 = !{!2498, !2499, !2500, !2501, !2502, !2503, !2504, !2509, !2510, !2515, !2516}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !2496, file: !72, line: 57, baseType: !14, size: 16)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !2496, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !2496, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !2496, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !2496, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !2496, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !2496, file: !72, line: 67, baseType: !2505, size: 32, offset: 2656)
!2505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !2506)
!2506 = !{!2507, !2508}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !2505, file: !72, line: 45, baseType: !14, size: 16)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !2505, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !2496, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !2496, file: !72, line: 79, baseType: !2511, size: 64, offset: 2720)
!2511 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2496, file: !72, line: 75, size: 64, elements: !2512)
!2512 = !{!2513, !2514}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2511, file: !72, line: 77, baseType: !96, size: 32)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2511, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !2496, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2496, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!2517 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2518, nameTableKind: None)
!2518 = !{!2519, !2521, !2523, !2525, !2527, !2529, !2531, !2533, !2535, !2537, !2539, !2541, !2543, !2545, !2547, !2549, !2551, !2553, !2563, !2566, !2571, !2573, !2576, !2578, !2583, !2586, !2588}
!2519 = !DIGlobalVariableExpression(var: !2520, expr: !DIExpression())
!2520 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2517, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!2521 = !DIGlobalVariableExpression(var: !2522, expr: !DIExpression())
!2522 = distinct !DIGlobalVariable(name: "short_list", scope: !2517, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!2523 = !DIGlobalVariableExpression(var: !2524, expr: !DIExpression())
!2524 = distinct !DIGlobalVariable(name: "short_output", scope: !2517, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!2525 = !DIGlobalVariableExpression(var: !2526, expr: !DIExpression())
!2526 = distinct !DIGlobalVariable(name: "include_idle", scope: !2517, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!2527 = !DIGlobalVariableExpression(var: !2528, expr: !DIExpression())
!2528 = distinct !DIGlobalVariable(name: "include_heading", scope: !2517, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!2529 = !DIGlobalVariableExpression(var: !2530, expr: !DIExpression())
!2530 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2517, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!2531 = !DIGlobalVariableExpression(var: !2532, expr: !DIExpression())
!2532 = distinct !DIGlobalVariable(name: "include_exit", scope: !2517, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!2533 = !DIGlobalVariableExpression(var: !2534, expr: !DIExpression())
!2534 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2517, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!2535 = !DIGlobalVariableExpression(var: !2536, expr: !DIExpression())
!2536 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2517, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!2537 = !DIGlobalVariableExpression(var: !2538, expr: !DIExpression())
!2538 = distinct !DIGlobalVariable(name: "need_login", scope: !2517, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!2539 = !DIGlobalVariableExpression(var: !2540, expr: !DIExpression())
!2540 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2517, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!2541 = !DIGlobalVariableExpression(var: !2542, expr: !DIExpression())
!2542 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2517, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!2543 = !DIGlobalVariableExpression(var: !2544, expr: !DIExpression())
!2544 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2517, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!2545 = !DIGlobalVariableExpression(var: !2546, expr: !DIExpression())
!2546 = distinct !DIGlobalVariable(name: "need_users", scope: !2517, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!2547 = !DIGlobalVariableExpression(var: !2548, expr: !DIExpression())
!2548 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2517, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!2549 = !DIGlobalVariableExpression(var: !2550, expr: !DIExpression())
!2550 = distinct !DIGlobalVariable(name: "time_format", scope: !2517, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!2551 = !DIGlobalVariableExpression(var: !2552, expr: !DIExpression())
!2552 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2517, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!2553 = !DIGlobalVariableExpression(var: !2554, expr: !DIExpression())
!2554 = distinct !DIGlobalVariable(name: "longopts", scope: !2517, file: !3, line: 162, type: !2555, isLocal: true, isDefinition: true)
!2555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2556, size: 4608, elements: !151)
!2556 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2557)
!2557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !2558)
!2558 = !{!2559, !2560, !2561, !2562}
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2557, file: !144, line: 52, baseType: !49, size: 64)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2557, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2557, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2557, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!2563 = !DIGlobalVariableExpression(var: !2564, expr: !DIExpression())
!2564 = distinct !DIGlobalVariable(name: "mesg", scope: !2565, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!2565 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2517, retainedNodes: !4)
!2566 = !DIGlobalVariableExpression(var: !2567, expr: !DIExpression())
!2567 = distinct !DIGlobalVariable(name: "hoststr", scope: !2568, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!2568 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !2569, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2517, retainedNodes: !4)
!2569 = !DISubroutineType(types: !2570)
!2570 = !{null, !2493, !9}
!2571 = !DIGlobalVariableExpression(var: !2572, expr: !DIExpression())
!2572 = distinct !DIGlobalVariable(name: "hostlen", scope: !2568, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!2573 = !DIGlobalVariableExpression(var: !2574, expr: !DIExpression())
!2574 = distinct !DIGlobalVariable(name: "now", scope: !2575, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!2575 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2517, retainedNodes: !4)
!2576 = !DIGlobalVariableExpression(var: !2577, expr: !DIExpression())
!2577 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !2575, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!2578 = !DIGlobalVariableExpression(var: !2579, expr: !DIExpression())
!2579 = distinct !DIGlobalVariable(name: "buf", scope: !2580, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!2580 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !2581, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2517, retainedNodes: !4)
!2581 = !DISubroutineType(types: !2582)
!2582 = !{!49, !2493}
!2583 = !DIGlobalVariableExpression(var: !2584, expr: !DIExpression())
!2584 = distinct !DIGlobalVariable(name: "runlevline", scope: !2585, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2585 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !2491, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2517, retainedNodes: !4)
!2586 = !DIGlobalVariableExpression(var: !2587, expr: !DIExpression())
!2587 = distinct !DIGlobalVariable(name: "comment", scope: !2585, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2588 = !DIGlobalVariableExpression(var: !2589, expr: !DIExpression())
!2589 = distinct !DIGlobalVariable(name: "exitstr", scope: !2490, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!2590 = !DILocalVariable(name: "comment", scope: !2490, file: !3, line: 462, type: !6)
!2591 = !DILocalVariable(name: "pidstr", scope: !2490, file: !3, line: 463, type: !1530)
!2592 = distinct !DISubprogram(name: "make_id_equals_comment", scope: !3, file: !3, line: 448, type: !2593, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2593 = !DISubroutineType(types: !2594)
!2594 = !{!6, !67}
!2595 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2592, file: !3, line: 448, type: !67)
!2596 = !DILocation(line: 448, column: 44, scope: !2592)
!2597 = !DILocalVariable(name: "utmpsize", scope: !2592, file: !3, line: 450, type: !110)
!2598 = !DILocation(line: 450, column: 10, scope: !2592)
!2599 = !DILocalVariable(name: "comment", scope: !2592, file: !3, line: 451, type: !6)
!2600 = !DILocation(line: 451, column: 9, scope: !2592)
!2601 = !DILocation(line: 451, column: 36, scope: !2592)
!2602 = !DILocation(line: 451, column: 28, scope: !2592)
!2603 = !DILocation(line: 451, column: 48, scope: !2592)
!2604 = !DILocation(line: 451, column: 46, scope: !2592)
!2605 = !DILocation(line: 451, column: 57, scope: !2592)
!2606 = !DILocation(line: 451, column: 19, scope: !2592)
!2607 = !DILocation(line: 453, column: 11, scope: !2592)
!2608 = !DILocation(line: 453, column: 20, scope: !2592)
!2609 = !DILocation(line: 453, column: 3, scope: !2592)
!2610 = !DILocation(line: 454, column: 12, scope: !2592)
!2611 = !DILocation(line: 454, column: 21, scope: !2592)
!2612 = !DILocation(line: 454, column: 39, scope: !2592)
!2613 = !DILocation(line: 454, column: 3, scope: !2592)
!2614 = !DILocation(line: 455, column: 10, scope: !2592)
!2615 = !DILocation(line: 455, column: 3, scope: !2592)
!2616 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2617, file: !3, line: 448, type: !2620)
!2617 = distinct !DISubprogram(name: "make_id_equals_comment", scope: !3, file: !3, line: 448, type: !2618, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2644, retainedNodes: !4)
!2618 = !DISubroutineType(types: !2619)
!2619 = !{!6, !2620}
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 64)
!2621 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2622)
!2622 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !2623)
!2623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !2624)
!2624 = !{!2625, !2626, !2627, !2628, !2629, !2630, !2631, !2636, !2637, !2642, !2643}
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !2623, file: !72, line: 57, baseType: !14, size: 16)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !2623, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !2623, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !2623, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !2623, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !2623, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !2623, file: !72, line: 67, baseType: !2632, size: 32, offset: 2656)
!2632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !2633)
!2633 = !{!2634, !2635}
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !2632, file: !72, line: 45, baseType: !14, size: 16)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !2632, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !2623, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !2623, file: !72, line: 79, baseType: !2638, size: 64, offset: 2720)
!2638 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2623, file: !72, line: 75, size: 64, elements: !2639)
!2639 = !{!2640, !2641}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2638, file: !72, line: 77, baseType: !96, size: 32)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2638, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !2623, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2623, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!2644 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2645, nameTableKind: None)
!2645 = !{!2646, !2648, !2650, !2652, !2654, !2656, !2658, !2660, !2662, !2664, !2666, !2668, !2670, !2672, !2674, !2676, !2678, !2680, !2690, !2693, !2698, !2700, !2703, !2705, !2710, !2715, !2717}
!2646 = !DIGlobalVariableExpression(var: !2647, expr: !DIExpression())
!2647 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2644, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!2648 = !DIGlobalVariableExpression(var: !2649, expr: !DIExpression())
!2649 = distinct !DIGlobalVariable(name: "short_list", scope: !2644, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!2650 = !DIGlobalVariableExpression(var: !2651, expr: !DIExpression())
!2651 = distinct !DIGlobalVariable(name: "short_output", scope: !2644, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!2652 = !DIGlobalVariableExpression(var: !2653, expr: !DIExpression())
!2653 = distinct !DIGlobalVariable(name: "include_idle", scope: !2644, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!2654 = !DIGlobalVariableExpression(var: !2655, expr: !DIExpression())
!2655 = distinct !DIGlobalVariable(name: "include_heading", scope: !2644, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!2656 = !DIGlobalVariableExpression(var: !2657, expr: !DIExpression())
!2657 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2644, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!2658 = !DIGlobalVariableExpression(var: !2659, expr: !DIExpression())
!2659 = distinct !DIGlobalVariable(name: "include_exit", scope: !2644, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!2660 = !DIGlobalVariableExpression(var: !2661, expr: !DIExpression())
!2661 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2644, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!2662 = !DIGlobalVariableExpression(var: !2663, expr: !DIExpression())
!2663 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2644, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!2664 = !DIGlobalVariableExpression(var: !2665, expr: !DIExpression())
!2665 = distinct !DIGlobalVariable(name: "need_login", scope: !2644, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!2666 = !DIGlobalVariableExpression(var: !2667, expr: !DIExpression())
!2667 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2644, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!2668 = !DIGlobalVariableExpression(var: !2669, expr: !DIExpression())
!2669 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2644, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!2670 = !DIGlobalVariableExpression(var: !2671, expr: !DIExpression())
!2671 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2644, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!2672 = !DIGlobalVariableExpression(var: !2673, expr: !DIExpression())
!2673 = distinct !DIGlobalVariable(name: "need_users", scope: !2644, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!2674 = !DIGlobalVariableExpression(var: !2675, expr: !DIExpression())
!2675 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2644, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!2676 = !DIGlobalVariableExpression(var: !2677, expr: !DIExpression())
!2677 = distinct !DIGlobalVariable(name: "time_format", scope: !2644, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!2678 = !DIGlobalVariableExpression(var: !2679, expr: !DIExpression())
!2679 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2644, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!2680 = !DIGlobalVariableExpression(var: !2681, expr: !DIExpression())
!2681 = distinct !DIGlobalVariable(name: "longopts", scope: !2644, file: !3, line: 162, type: !2682, isLocal: true, isDefinition: true)
!2682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2683, size: 4608, elements: !151)
!2683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2684)
!2684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !2685)
!2685 = !{!2686, !2687, !2688, !2689}
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2684, file: !144, line: 52, baseType: !49, size: 64)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2684, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2684, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2684, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!2690 = !DIGlobalVariableExpression(var: !2691, expr: !DIExpression())
!2691 = distinct !DIGlobalVariable(name: "mesg", scope: !2692, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!2692 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2644, retainedNodes: !4)
!2693 = !DIGlobalVariableExpression(var: !2694, expr: !DIExpression())
!2694 = distinct !DIGlobalVariable(name: "hoststr", scope: !2695, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!2695 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !2696, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2644, retainedNodes: !4)
!2696 = !DISubroutineType(types: !2697)
!2697 = !{null, !2620, !9}
!2698 = !DIGlobalVariableExpression(var: !2699, expr: !DIExpression())
!2699 = distinct !DIGlobalVariable(name: "hostlen", scope: !2695, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!2700 = !DIGlobalVariableExpression(var: !2701, expr: !DIExpression())
!2701 = distinct !DIGlobalVariable(name: "now", scope: !2702, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!2702 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2644, retainedNodes: !4)
!2703 = !DIGlobalVariableExpression(var: !2704, expr: !DIExpression())
!2704 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !2702, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!2705 = !DIGlobalVariableExpression(var: !2706, expr: !DIExpression())
!2706 = distinct !DIGlobalVariable(name: "buf", scope: !2707, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!2707 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !2708, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2644, retainedNodes: !4)
!2708 = !DISubroutineType(types: !2709)
!2709 = !{!49, !2620}
!2710 = !DIGlobalVariableExpression(var: !2711, expr: !DIExpression())
!2711 = distinct !DIGlobalVariable(name: "runlevline", scope: !2712, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2712 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !2713, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2644, retainedNodes: !4)
!2713 = !DISubroutineType(types: !2714)
!2714 = !{null, !2620}
!2715 = !DIGlobalVariableExpression(var: !2716, expr: !DIExpression())
!2716 = distinct !DIGlobalVariable(name: "comment", scope: !2712, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2717 = !DIGlobalVariableExpression(var: !2718, expr: !DIExpression())
!2718 = distinct !DIGlobalVariable(name: "exitstr", scope: !2719, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!2719 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !2713, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2644, retainedNodes: !4)
!2720 = !DILocalVariable(name: "utmpsize", scope: !2617, file: !3, line: 450, type: !110)
!2721 = !DILocalVariable(name: "comment", scope: !2617, file: !3, line: 451, type: !6)
!2722 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !125, file: !3, line: 218, type: !67)
!2723 = !DILocation(line: 218, column: 33, scope: !125)
!2724 = !DILocalVariable(name: "t", scope: !125, file: !3, line: 228, type: !9)
!2725 = !DILocation(line: 228, column: 10, scope: !125)
!2726 = !DILocation(line: 228, column: 14, scope: !125)
!2727 = !DILocalVariable(name: "tmp", scope: !125, file: !3, line: 229, type: !2728)
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 64)
!2729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !2730, line: 7, size: 448, elements: !2731)
!2730 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h", directory: "")
!2731 = !{!2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742}
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !2729, file: !2730, line: 9, baseType: !53, size: 32)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !2729, file: !2730, line: 10, baseType: !53, size: 32, offset: 32)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !2729, file: !2730, line: 11, baseType: !53, size: 32, offset: 64)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !2729, file: !2730, line: 12, baseType: !53, size: 32, offset: 96)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !2729, file: !2730, line: 13, baseType: !53, size: 32, offset: 128)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !2729, file: !2730, line: 14, baseType: !53, size: 32, offset: 160)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !2729, file: !2730, line: 15, baseType: !53, size: 32, offset: 192)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !2729, file: !2730, line: 16, baseType: !53, size: 32, offset: 224)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !2729, file: !2730, line: 17, baseType: !53, size: 32, offset: 256)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !2729, file: !2730, line: 20, baseType: !13, size: 64, offset: 320)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !2729, file: !2730, line: 21, baseType: !49, size: 64, offset: 384)
!2743 = !DILocation(line: 229, column: 14, scope: !125)
!2744 = !DILocation(line: 229, column: 20, scope: !125)
!2745 = !DILocation(line: 231, column: 7, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !125, file: !3, line: 231, column: 7)
!2747 = !DILocation(line: 231, column: 7, scope: !125)
!2748 = !DILocation(line: 233, column: 34, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !2746, file: !3, line: 232, column: 5)
!2750 = !DILocation(line: 233, column: 47, scope: !2749)
!2751 = !DILocation(line: 233, column: 7, scope: !2749)
!2752 = !DILocation(line: 234, column: 7, scope: !2749)
!2753 = !DILocation(line: 237, column: 23, scope: !2746)
!2754 = !DILocation(line: 237, column: 12, scope: !2746)
!2755 = !DILocation(line: 237, column: 5, scope: !2746)
!2756 = !DILocation(line: 238, column: 1, scope: !125)
!2757 = !DILocalVariable(name: "userlen", arg: 1, scope: !56, file: !3, line: 244, type: !53)
!2758 = !DILocation(line: 244, column: 17, scope: !56)
!2759 = !DILocalVariable(name: "user", arg: 2, scope: !56, file: !3, line: 244, type: !49)
!2760 = !DILocation(line: 244, column: 38, scope: !56)
!2761 = !DILocalVariable(name: "state", arg: 3, scope: !56, file: !3, line: 244, type: !50)
!2762 = !DILocation(line: 244, column: 55, scope: !56)
!2763 = !DILocalVariable(name: "linelen", arg: 4, scope: !56, file: !3, line: 245, type: !53)
!2764 = !DILocation(line: 245, column: 17, scope: !56)
!2765 = !DILocalVariable(name: "line", arg: 5, scope: !56, file: !3, line: 245, type: !49)
!2766 = !DILocation(line: 245, column: 38, scope: !56)
!2767 = !DILocalVariable(name: "time_str", arg: 6, scope: !56, file: !3, line: 246, type: !49)
!2768 = !DILocation(line: 246, column: 25, scope: !56)
!2769 = !DILocalVariable(name: "idle", arg: 7, scope: !56, file: !3, line: 246, type: !49)
!2770 = !DILocation(line: 246, column: 47, scope: !56)
!2771 = !DILocalVariable(name: "pid", arg: 8, scope: !56, file: !3, line: 246, type: !49)
!2772 = !DILocation(line: 246, column: 65, scope: !56)
!2773 = !DILocalVariable(name: "comment", arg: 9, scope: !56, file: !3, line: 247, type: !49)
!2774 = !DILocation(line: 247, column: 25, scope: !56)
!2775 = !DILocalVariable(name: "exitstr", arg: 10, scope: !56, file: !3, line: 247, type: !49)
!2776 = !DILocation(line: 247, column: 46, scope: !56)
!2777 = !DILocalVariable(name: "buf", scope: !56, file: !3, line: 250, type: !6)
!2778 = !DILocation(line: 250, column: 9, scope: !56)
!2779 = !DILocalVariable(name: "x_idle", scope: !56, file: !3, line: 251, type: !2780)
!2780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !260)
!2781 = !DILocation(line: 251, column: 8, scope: !56)
!2782 = !DILocalVariable(name: "x_pid", scope: !56, file: !3, line: 252, type: !2783)
!2783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 104, elements: !2784)
!2784 = !{!2785}
!2785 = !DISubrange(count: 13)
!2786 = !DILocation(line: 252, column: 8, scope: !56)
!2787 = !DILocalVariable(name: "x_exitstr", scope: !56, file: !3, line: 253, type: !6)
!2788 = !DILocation(line: 253, column: 9, scope: !56)
!2789 = !DILocalVariable(name: "err", scope: !56, file: !3, line: 254, type: !53)
!2790 = !DILocation(line: 254, column: 7, scope: !56)
!2791 = !DILocation(line: 256, column: 13, scope: !56)
!2792 = !DILocation(line: 256, column: 11, scope: !56)
!2793 = !DILocation(line: 258, column: 7, scope: !2794)
!2794 = distinct !DILexicalBlock(scope: !56, file: !3, line: 258, column: 7)
!2795 = !DILocation(line: 258, column: 20, scope: !2794)
!2796 = !DILocation(line: 258, column: 24, scope: !2794)
!2797 = !DILocation(line: 258, column: 37, scope: !2794)
!2798 = !DILocation(line: 258, column: 48, scope: !2794)
!2799 = !DILocation(line: 258, column: 40, scope: !2794)
!2800 = !DILocation(line: 258, column: 54, scope: !2794)
!2801 = !DILocation(line: 258, column: 7, scope: !56)
!2802 = !DILocation(line: 259, column: 14, scope: !2794)
!2803 = !DILocation(line: 259, column: 31, scope: !2794)
!2804 = !DILocation(line: 259, column: 5, scope: !2794)
!2805 = !DILocation(line: 261, column: 5, scope: !2794)
!2806 = !DILocation(line: 261, column: 13, scope: !2794)
!2807 = !DILocation(line: 263, column: 8, scope: !2808)
!2808 = distinct !DILexicalBlock(scope: !56, file: !3, line: 263, column: 7)
!2809 = !DILocation(line: 263, column: 21, scope: !2808)
!2810 = !DILocation(line: 263, column: 32, scope: !2808)
!2811 = !DILocation(line: 263, column: 24, scope: !2808)
!2812 = !DILocation(line: 263, column: 37, scope: !2808)
!2813 = !DILocation(line: 263, column: 7, scope: !56)
!2814 = !DILocation(line: 264, column: 14, scope: !2808)
!2815 = !DILocation(line: 264, column: 30, scope: !2808)
!2816 = !DILocation(line: 264, column: 5, scope: !2808)
!2817 = !DILocation(line: 266, column: 5, scope: !2808)
!2818 = !DILocation(line: 266, column: 12, scope: !2808)
!2819 = !DILocation(line: 268, column: 24, scope: !56)
!2820 = !DILocation(line: 268, column: 43, scope: !56)
!2821 = !DILocation(line: 268, column: 41, scope: !56)
!2822 = !DILocation(line: 268, column: 70, scope: !56)
!2823 = !DILocation(line: 268, column: 15, scope: !56)
!2824 = !DILocation(line: 268, column: 13, scope: !56)
!2825 = !DILocation(line: 269, column: 7, scope: !2826)
!2826 = distinct !DILexicalBlock(scope: !56, file: !3, line: 269, column: 7)
!2827 = !DILocation(line: 269, column: 7, scope: !56)
!2828 = !DILocation(line: 270, column: 14, scope: !2826)
!2829 = !DILocation(line: 270, column: 35, scope: !2826)
!2830 = !DILocation(line: 270, column: 5, scope: !2826)
!2831 = !DILocation(line: 272, column: 6, scope: !2826)
!2832 = !DILocation(line: 272, column: 16, scope: !2826)
!2833 = !DILocation(line: 284, column: 19, scope: !56)
!2834 = !DILocation(line: 284, column: 28, scope: !56)
!2835 = !DILocation(line: 284, column: 35, scope: !56)
!2836 = !DILocation(line: 285, column: 19, scope: !56)
!2837 = !DILocation(line: 286, column: 19, scope: !56)
!2838 = !DILocation(line: 286, column: 28, scope: !56)
!2839 = !DILocation(line: 287, column: 19, scope: !56)
!2840 = !DILocation(line: 288, column: 19, scope: !56)
!2841 = !DILocation(line: 289, column: 19, scope: !56)
!2842 = !DILocation(line: 290, column: 19, scope: !56)
!2843 = !DILocation(line: 295, column: 19, scope: !56)
!2844 = !DILocation(line: 296, column: 19, scope: !56)
!2845 = !DILocation(line: 274, column: 9, scope: !56)
!2846 = !DILocation(line: 274, column: 7, scope: !56)
!2847 = !DILocation(line: 298, column: 7, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !56, file: !3, line: 298, column: 7)
!2849 = !DILocation(line: 298, column: 11, scope: !2848)
!2850 = !DILocation(line: 299, column: 5, scope: !2848)
!2851 = !DILocalVariable(name: "p", scope: !2852, file: !3, line: 303, type: !6)
!2852 = distinct !DILexicalBlock(scope: !56, file: !3, line: 301, column: 3)
!2853 = !DILocation(line: 303, column: 11, scope: !2852)
!2854 = !DILocation(line: 303, column: 15, scope: !2852)
!2855 = !DILocation(line: 303, column: 29, scope: !2852)
!2856 = !DILocation(line: 303, column: 21, scope: !2852)
!2857 = !DILocation(line: 303, column: 19, scope: !2852)
!2858 = !DILocation(line: 304, column: 5, scope: !2852)
!2859 = !DILocation(line: 304, column: 13, scope: !2852)
!2860 = !DILocation(line: 304, column: 12, scope: !2852)
!2861 = !DILocation(line: 304, column: 17, scope: !2852)
!2862 = distinct !{!2862, !2858, !2863}
!2863 = !DILocation(line: 305, column: 18, scope: !2852)
!2864 = !DILocation(line: 306, column: 7, scope: !2852)
!2865 = !DILocation(line: 306, column: 9, scope: !2852)
!2866 = !DILocation(line: 306, column: 14, scope: !2852)
!2867 = !DILocation(line: 309, column: 9, scope: !56)
!2868 = !DILocation(line: 309, column: 3, scope: !56)
!2869 = !DILocation(line: 310, column: 9, scope: !56)
!2870 = !DILocation(line: 310, column: 3, scope: !56)
!2871 = !DILocation(line: 311, column: 9, scope: !56)
!2872 = !DILocation(line: 311, column: 3, scope: !56)
!2873 = !DILocation(line: 312, column: 1, scope: !56)
!2874 = distinct !DISubprogram(name: "timetostr", scope: !466, file: !466, line: 690, type: !2875, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2875 = !DISubroutineType(types: !2876)
!2876 = !{!6, !9, !6}
!2877 = !DILocalVariable(name: "t", arg: 1, scope: !2874, file: !466, line: 690, type: !9)
!2878 = !DILocation(line: 690, column: 19, scope: !2874)
!2879 = !DILocalVariable(name: "buf", arg: 2, scope: !2874, file: !466, line: 690, type: !6)
!2880 = !DILocation(line: 690, column: 28, scope: !2874)
!2881 = !DILocation(line: 693, column: 24, scope: !2874)
!2882 = !DILocation(line: 693, column: 27, scope: !2874)
!2883 = !DILocation(line: 693, column: 13, scope: !2874)
!2884 = !DILocation(line: 692, column: 3, scope: !2874)
!2885 = distinct !DISubprogram(name: "stzncpy", scope: !466, file: !466, line: 741, type: !2886, scopeLine: 742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2886 = !DISubroutineType(types: !2887)
!2887 = !{!6, !2888, !2889, !110}
!2888 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !6)
!2889 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !49)
!2890 = !DILocalVariable(name: "dest", arg: 1, scope: !2885, file: !466, line: 741, type: !2888)
!2891 = !DILocation(line: 741, column: 25, scope: !2885)
!2892 = !DILocalVariable(name: "src", arg: 2, scope: !2885, file: !466, line: 741, type: !2889)
!2893 = !DILocation(line: 741, column: 52, scope: !2885)
!2894 = !DILocalVariable(name: "len", arg: 3, scope: !2885, file: !466, line: 741, type: !110)
!2895 = !DILocation(line: 741, column: 64, scope: !2885)
!2896 = !DILocalVariable(name: "src_end", scope: !2885, file: !466, line: 743, type: !49)
!2897 = !DILocation(line: 743, column: 15, scope: !2885)
!2898 = !DILocation(line: 743, column: 25, scope: !2885)
!2899 = !DILocation(line: 743, column: 31, scope: !2885)
!2900 = !DILocation(line: 743, column: 29, scope: !2885)
!2901 = !DILocation(line: 744, column: 3, scope: !2885)
!2902 = !DILocation(line: 744, column: 10, scope: !2885)
!2903 = !DILocation(line: 744, column: 16, scope: !2885)
!2904 = !DILocation(line: 744, column: 14, scope: !2885)
!2905 = !DILocation(line: 744, column: 24, scope: !2885)
!2906 = !DILocation(line: 744, column: 28, scope: !2885)
!2907 = !DILocation(line: 744, column: 27, scope: !2885)
!2908 = !DILocation(line: 0, scope: !2885)
!2909 = !DILocation(line: 745, column: 19, scope: !2885)
!2910 = !DILocation(line: 745, column: 15, scope: !2885)
!2911 = !DILocation(line: 745, column: 10, scope: !2885)
!2912 = !DILocation(line: 745, column: 13, scope: !2885)
!2913 = distinct !{!2913, !2901, !2909}
!2914 = !DILocation(line: 746, column: 4, scope: !2885)
!2915 = !DILocation(line: 746, column: 9, scope: !2885)
!2916 = !DILocation(line: 747, column: 10, scope: !2885)
!2917 = !DILocation(line: 747, column: 3, scope: !2885)
!2918 = distinct !DISubprogram(name: "is_tty_writable", scope: !3, file: !3, line: 317, type: !2919, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2919 = !DISubroutineType(types: !2920)
!2920 = !{!18, !2921}
!2921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2922, size: 64)
!2922 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1479)
!2923 = !DILocalVariable(name: "pstat", arg: 1, scope: !2918, file: !3, line: 317, type: !2921)
!2924 = !DILocation(line: 317, column: 37, scope: !2918)
!2925 = !DILocation(line: 327, column: 10, scope: !2918)
!2926 = !DILocation(line: 327, column: 17, scope: !2918)
!2927 = !DILocation(line: 327, column: 25, scope: !2918)
!2928 = !DILocation(line: 327, column: 3, scope: !2918)
!2929 = !DILocalVariable(name: "pstat", arg: 1, scope: !2930, file: !3, line: 317, type: !2933)
!2930 = distinct !DISubprogram(name: "is_tty_writable", scope: !3, file: !3, line: 317, type: !2931, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2956, retainedNodes: !4)
!2931 = !DISubroutineType(types: !2932)
!2932 = !{!18, !2933}
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 64)
!2934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2935)
!2935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !1480, line: 46, size: 1152, elements: !2936)
!2936 = !{!2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2953, !2954, !2955}
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2935, file: !1480, line: 48, baseType: !1483, size: 64)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2935, file: !1480, line: 53, baseType: !1485, size: 64, offset: 64)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2935, file: !1480, line: 61, baseType: !1487, size: 64, offset: 128)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2935, file: !1480, line: 62, baseType: !1489, size: 32, offset: 192)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2935, file: !1480, line: 64, baseType: !1491, size: 32, offset: 224)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2935, file: !1480, line: 65, baseType: !1493, size: 32, offset: 256)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2935, file: !1480, line: 67, baseType: !53, size: 32, offset: 288)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2935, file: !1480, line: 69, baseType: !1483, size: 64, offset: 320)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2935, file: !1480, line: 74, baseType: !1497, size: 64, offset: 384)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2935, file: !1480, line: 78, baseType: !1499, size: 64, offset: 448)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2935, file: !1480, line: 80, baseType: !1501, size: 64, offset: 512)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2935, file: !1480, line: 91, baseType: !2949, size: 128, offset: 576)
!2949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !1504, line: 10, size: 128, elements: !2950)
!2950 = !{!2951, !2952}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2949, file: !1504, line: 12, baseType: !11, size: 64)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2949, file: !1504, line: 16, baseType: !1508, size: 64, offset: 64)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2935, file: !1480, line: 92, baseType: !2949, size: 128, offset: 704)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2935, file: !1480, line: 93, baseType: !2949, size: 128, offset: 832)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2935, file: !1480, line: 106, baseType: !1512, size: 192, offset: 960)
!2956 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2957, nameTableKind: None)
!2957 = !{!2958, !2960, !2962, !2964, !2966, !2968, !2970, !2972, !2974, !2976, !2978, !2980, !2982, !2984, !2986, !2988, !2990, !2992, !3002, !3005, !3034, !3036, !3039, !3041, !3046, !3051, !3053}
!2958 = !DIGlobalVariableExpression(var: !2959, expr: !DIExpression())
!2959 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2956, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!2960 = !DIGlobalVariableExpression(var: !2961, expr: !DIExpression())
!2961 = distinct !DIGlobalVariable(name: "short_list", scope: !2956, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!2962 = !DIGlobalVariableExpression(var: !2963, expr: !DIExpression())
!2963 = distinct !DIGlobalVariable(name: "short_output", scope: !2956, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!2964 = !DIGlobalVariableExpression(var: !2965, expr: !DIExpression())
!2965 = distinct !DIGlobalVariable(name: "include_idle", scope: !2956, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!2966 = !DIGlobalVariableExpression(var: !2967, expr: !DIExpression())
!2967 = distinct !DIGlobalVariable(name: "include_heading", scope: !2956, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!2968 = !DIGlobalVariableExpression(var: !2969, expr: !DIExpression())
!2969 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2956, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!2970 = !DIGlobalVariableExpression(var: !2971, expr: !DIExpression())
!2971 = distinct !DIGlobalVariable(name: "include_exit", scope: !2956, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!2972 = !DIGlobalVariableExpression(var: !2973, expr: !DIExpression())
!2973 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2956, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!2974 = !DIGlobalVariableExpression(var: !2975, expr: !DIExpression())
!2975 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2956, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!2976 = !DIGlobalVariableExpression(var: !2977, expr: !DIExpression())
!2977 = distinct !DIGlobalVariable(name: "need_login", scope: !2956, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!2978 = !DIGlobalVariableExpression(var: !2979, expr: !DIExpression())
!2979 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2956, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!2980 = !DIGlobalVariableExpression(var: !2981, expr: !DIExpression())
!2981 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2956, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!2982 = !DIGlobalVariableExpression(var: !2983, expr: !DIExpression())
!2983 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2956, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!2984 = !DIGlobalVariableExpression(var: !2985, expr: !DIExpression())
!2985 = distinct !DIGlobalVariable(name: "need_users", scope: !2956, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!2986 = !DIGlobalVariableExpression(var: !2987, expr: !DIExpression())
!2987 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2956, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!2988 = !DIGlobalVariableExpression(var: !2989, expr: !DIExpression())
!2989 = distinct !DIGlobalVariable(name: "time_format", scope: !2956, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!2990 = !DIGlobalVariableExpression(var: !2991, expr: !DIExpression())
!2991 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2956, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!2992 = !DIGlobalVariableExpression(var: !2993, expr: !DIExpression())
!2993 = distinct !DIGlobalVariable(name: "longopts", scope: !2956, file: !3, line: 162, type: !2994, isLocal: true, isDefinition: true)
!2994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2995, size: 4608, elements: !151)
!2995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2996)
!2996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !2997)
!2997 = !{!2998, !2999, !3000, !3001}
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2996, file: !144, line: 52, baseType: !49, size: 64)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2996, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2996, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2996, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!3002 = !DIGlobalVariableExpression(var: !3003, expr: !DIExpression())
!3003 = distinct !DIGlobalVariable(name: "mesg", scope: !3004, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!3004 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2956, retainedNodes: !4)
!3005 = !DIGlobalVariableExpression(var: !3006, expr: !DIExpression())
!3006 = distinct !DIGlobalVariable(name: "hoststr", scope: !3007, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!3007 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !3008, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2956, retainedNodes: !4)
!3008 = !DISubroutineType(types: !3009)
!3009 = !{null, !3010, !9}
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 64)
!3011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3012)
!3012 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !3013)
!3013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !3014)
!3014 = !{!3015, !3016, !3017, !3018, !3019, !3020, !3021, !3026, !3027, !3032, !3033}
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !3013, file: !72, line: 57, baseType: !14, size: 16)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !3013, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !3013, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !3013, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !3013, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !3013, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !3013, file: !72, line: 67, baseType: !3022, size: 32, offset: 2656)
!3022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !3023)
!3023 = !{!3024, !3025}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !3022, file: !72, line: 45, baseType: !14, size: 16)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !3022, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !3013, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !3013, file: !72, line: 79, baseType: !3028, size: 64, offset: 2720)
!3028 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3013, file: !72, line: 75, size: 64, elements: !3029)
!3029 = !{!3030, !3031}
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3028, file: !72, line: 77, baseType: !96, size: 32)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !3028, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !3013, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3013, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!3034 = !DIGlobalVariableExpression(var: !3035, expr: !DIExpression())
!3035 = distinct !DIGlobalVariable(name: "hostlen", scope: !3007, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!3036 = !DIGlobalVariableExpression(var: !3037, expr: !DIExpression())
!3037 = distinct !DIGlobalVariable(name: "now", scope: !3038, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!3038 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2956, retainedNodes: !4)
!3039 = !DIGlobalVariableExpression(var: !3040, expr: !DIExpression())
!3040 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !3038, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!3041 = !DIGlobalVariableExpression(var: !3042, expr: !DIExpression())
!3042 = distinct !DIGlobalVariable(name: "buf", scope: !3043, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!3043 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !3044, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2956, retainedNodes: !4)
!3044 = !DISubroutineType(types: !3045)
!3045 = !{!49, !3010}
!3046 = !DIGlobalVariableExpression(var: !3047, expr: !DIExpression())
!3047 = distinct !DIGlobalVariable(name: "runlevline", scope: !3048, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!3048 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !3049, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2956, retainedNodes: !4)
!3049 = !DISubroutineType(types: !3050)
!3050 = !{null, !3010}
!3051 = !DIGlobalVariableExpression(var: !3052, expr: !DIExpression())
!3052 = distinct !DIGlobalVariable(name: "comment", scope: !3048, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!3053 = !DIGlobalVariableExpression(var: !3054, expr: !DIExpression())
!3054 = distinct !DIGlobalVariable(name: "exitstr", scope: !3055, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!3055 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !3049, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2956, retainedNodes: !4)
!3056 = !DILocalVariable(name: "when", arg: 1, scope: !115, file: !3, line: 188, type: !9)
!3057 = !DILocation(line: 188, column: 21, scope: !115)
!3058 = !DILocalVariable(name: "boottime", arg: 2, scope: !115, file: !3, line: 188, type: !9)
!3059 = !DILocation(line: 188, column: 34, scope: !115)
!3060 = !DILocation(line: 192, column: 7, scope: !3061)
!3061 = distinct !DILexicalBlock(scope: !115, file: !3, line: 192, column: 7)
!3062 = !DILocation(line: 192, column: 11, scope: !3061)
!3063 = !DILocation(line: 192, column: 7, scope: !115)
!3064 = !DILocation(line: 193, column: 5, scope: !3061)
!3065 = !DILocation(line: 195, column: 7, scope: !3066)
!3066 = distinct !DILexicalBlock(scope: !115, file: !3, line: 195, column: 7)
!3067 = !DILocation(line: 195, column: 18, scope: !3066)
!3068 = !DILocation(line: 195, column: 16, scope: !3066)
!3069 = !DILocation(line: 195, column: 23, scope: !3066)
!3070 = !DILocation(line: 195, column: 26, scope: !3066)
!3071 = !DILocation(line: 195, column: 30, scope: !3066)
!3072 = !DILocation(line: 195, column: 47, scope: !3066)
!3073 = !DILocation(line: 195, column: 45, scope: !3066)
!3074 = !DILocation(line: 195, column: 52, scope: !3066)
!3075 = !DILocation(line: 195, column: 55, scope: !3066)
!3076 = !DILocation(line: 195, column: 63, scope: !3066)
!3077 = !DILocation(line: 195, column: 60, scope: !3066)
!3078 = !DILocation(line: 195, column: 7, scope: !115)
!3079 = !DILocalVariable(name: "seconds_idle", scope: !3080, file: !3, line: 197, type: !53)
!3080 = distinct !DILexicalBlock(scope: !3066, file: !3, line: 196, column: 5)
!3081 = !DILocation(line: 197, column: 11, scope: !3080)
!3082 = !DILocation(line: 197, column: 26, scope: !3080)
!3083 = !DILocation(line: 197, column: 32, scope: !3080)
!3084 = !DILocation(line: 197, column: 30, scope: !3080)
!3085 = !DILocation(line: 198, column: 11, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !3080, file: !3, line: 198, column: 11)
!3087 = !DILocation(line: 198, column: 24, scope: !3086)
!3088 = !DILocation(line: 198, column: 11, scope: !3080)
!3089 = !DILocation(line: 199, column: 9, scope: !3086)
!3090 = !DILocation(line: 205, column: 11, scope: !3091)
!3091 = distinct !DILexicalBlock(scope: !3092, file: !3, line: 205, column: 11)
!3092 = distinct !DILexicalBlock(scope: !3093, file: !3, line: 205, column: 11)
!3093 = distinct !DILexicalBlock(scope: !3086, file: !3, line: 201, column: 9)
!3094 = !DILocation(line: 205, column: 11, scope: !3092)
!3095 = !DILocation(line: 207, column: 20, scope: !3093)
!3096 = !DILocation(line: 207, column: 33, scope: !3093)
!3097 = !DILocation(line: 208, column: 21, scope: !3093)
!3098 = !DILocation(line: 208, column: 34, scope: !3093)
!3099 = !DILocation(line: 208, column: 47, scope: !3093)
!3100 = !DILocation(line: 206, column: 11, scope: !3093)
!3101 = !DILocation(line: 209, column: 11, scope: !3093)
!3102 = !DILocation(line: 213, column: 10, scope: !115)
!3103 = !DILocation(line: 213, column: 3, scope: !115)
!3104 = !DILocation(line: 214, column: 1, scope: !115)
!3105 = !DILocalVariable(name: "when", arg: 1, scope: !3106, file: !3, line: 188, type: !9)
!3106 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3107, retainedNodes: !4)
!3107 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !3108, nameTableKind: None)
!3108 = !{!3109, !3111, !3113, !3115, !3117, !3119, !3121, !3123, !3125, !3127, !3129, !3131, !3133, !3135, !3137, !3139, !3141, !3143, !3153, !3156, !3185, !3187, !3189, !3191, !3196, !3201, !3203}
!3109 = !DIGlobalVariableExpression(var: !3110, expr: !DIExpression())
!3110 = distinct !DIGlobalVariable(name: "do_lookup", scope: !3107, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!3111 = !DIGlobalVariableExpression(var: !3112, expr: !DIExpression())
!3112 = distinct !DIGlobalVariable(name: "short_list", scope: !3107, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!3113 = !DIGlobalVariableExpression(var: !3114, expr: !DIExpression())
!3114 = distinct !DIGlobalVariable(name: "short_output", scope: !3107, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!3115 = !DIGlobalVariableExpression(var: !3116, expr: !DIExpression())
!3116 = distinct !DIGlobalVariable(name: "include_idle", scope: !3107, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!3117 = !DIGlobalVariableExpression(var: !3118, expr: !DIExpression())
!3118 = distinct !DIGlobalVariable(name: "include_heading", scope: !3107, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!3119 = !DIGlobalVariableExpression(var: !3120, expr: !DIExpression())
!3120 = distinct !DIGlobalVariable(name: "include_mesg", scope: !3107, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!3121 = !DIGlobalVariableExpression(var: !3122, expr: !DIExpression())
!3122 = distinct !DIGlobalVariable(name: "include_exit", scope: !3107, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!3123 = !DIGlobalVariableExpression(var: !3124, expr: !DIExpression())
!3124 = distinct !DIGlobalVariable(name: "need_boottime", scope: !3107, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!3125 = !DIGlobalVariableExpression(var: !3126, expr: !DIExpression())
!3126 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !3107, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!3127 = !DIGlobalVariableExpression(var: !3128, expr: !DIExpression())
!3128 = distinct !DIGlobalVariable(name: "need_login", scope: !3107, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!3129 = !DIGlobalVariableExpression(var: !3130, expr: !DIExpression())
!3130 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !3107, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!3131 = !DIGlobalVariableExpression(var: !3132, expr: !DIExpression())
!3132 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !3107, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!3133 = !DIGlobalVariableExpression(var: !3134, expr: !DIExpression())
!3134 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !3107, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!3135 = !DIGlobalVariableExpression(var: !3136, expr: !DIExpression())
!3136 = distinct !DIGlobalVariable(name: "need_users", scope: !3107, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!3137 = !DIGlobalVariableExpression(var: !3138, expr: !DIExpression())
!3138 = distinct !DIGlobalVariable(name: "my_line_only", scope: !3107, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!3139 = !DIGlobalVariableExpression(var: !3140, expr: !DIExpression())
!3140 = distinct !DIGlobalVariable(name: "time_format", scope: !3107, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!3141 = !DIGlobalVariableExpression(var: !3142, expr: !DIExpression())
!3142 = distinct !DIGlobalVariable(name: "time_format_width", scope: !3107, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!3143 = !DIGlobalVariableExpression(var: !3144, expr: !DIExpression())
!3144 = distinct !DIGlobalVariable(name: "longopts", scope: !3107, file: !3, line: 162, type: !3145, isLocal: true, isDefinition: true)
!3145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3146, size: 4608, elements: !151)
!3146 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3147)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !3148)
!3148 = !{!3149, !3150, !3151, !3152}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3147, file: !144, line: 52, baseType: !49, size: 64)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !3147, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3147, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3147, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!3153 = !DIGlobalVariableExpression(var: !3154, expr: !DIExpression())
!3154 = distinct !DIGlobalVariable(name: "mesg", scope: !3155, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!3155 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3107, retainedNodes: !4)
!3156 = !DIGlobalVariableExpression(var: !3157, expr: !DIExpression())
!3157 = distinct !DIGlobalVariable(name: "hoststr", scope: !3158, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!3158 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !3159, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3107, retainedNodes: !4)
!3159 = !DISubroutineType(types: !3160)
!3160 = !{null, !3161, !9}
!3161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3162, size: 64)
!3162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3163)
!3163 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !3164)
!3164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !3165)
!3165 = !{!3166, !3167, !3168, !3169, !3170, !3171, !3172, !3177, !3178, !3183, !3184}
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !3164, file: !72, line: 57, baseType: !14, size: 16)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !3164, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !3164, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !3164, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !3164, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !3164, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !3164, file: !72, line: 67, baseType: !3173, size: 32, offset: 2656)
!3173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !3174)
!3174 = !{!3175, !3176}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !3173, file: !72, line: 45, baseType: !14, size: 16)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !3173, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !3164, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !3164, file: !72, line: 79, baseType: !3179, size: 64, offset: 2720)
!3179 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3164, file: !72, line: 75, size: 64, elements: !3180)
!3180 = !{!3181, !3182}
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3179, file: !72, line: 77, baseType: !96, size: 32)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !3179, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !3164, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3164, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!3185 = !DIGlobalVariableExpression(var: !3186, expr: !DIExpression())
!3186 = distinct !DIGlobalVariable(name: "hostlen", scope: !3158, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!3187 = !DIGlobalVariableExpression(var: !3188, expr: !DIExpression())
!3188 = distinct !DIGlobalVariable(name: "now", scope: !3106, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!3189 = !DIGlobalVariableExpression(var: !3190, expr: !DIExpression())
!3190 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !3106, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!3191 = !DIGlobalVariableExpression(var: !3192, expr: !DIExpression())
!3192 = distinct !DIGlobalVariable(name: "buf", scope: !3193, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!3193 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !3194, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3107, retainedNodes: !4)
!3194 = !DISubroutineType(types: !3195)
!3195 = !{!49, !3161}
!3196 = !DIGlobalVariableExpression(var: !3197, expr: !DIExpression())
!3197 = distinct !DIGlobalVariable(name: "runlevline", scope: !3198, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!3198 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !3199, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3107, retainedNodes: !4)
!3199 = !DISubroutineType(types: !3200)
!3200 = !{null, !3161}
!3201 = !DIGlobalVariableExpression(var: !3202, expr: !DIExpression())
!3202 = distinct !DIGlobalVariable(name: "comment", scope: !3198, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!3203 = !DIGlobalVariableExpression(var: !3204, expr: !DIExpression())
!3204 = distinct !DIGlobalVariable(name: "exitstr", scope: !3205, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!3205 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !3199, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3107, retainedNodes: !4)
!3206 = !DILocalVariable(name: "boottime", arg: 2, scope: !3106, file: !3, line: 188, type: !9)
!3207 = distinct !DISubprogram(name: "c_isprint", scope: !3208, file: !3208, line: 272, type: !3209, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !286, retainedNodes: !4)
!3208 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3209 = !DISubroutineType(types: !3210)
!3210 = !{!18, !53}
!3211 = !DILocalVariable(name: "c", arg: 1, scope: !3207, file: !3208, line: 272, type: !53)
!3212 = !DILocation(line: 272, column: 16, scope: !3207)
!3213 = !DILocation(line: 274, column: 11, scope: !3207)
!3214 = !DILocation(line: 274, column: 3, scope: !3207)
!3215 = !DILocation(line: 281, column: 7, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3207, file: !3208, line: 275, column: 5)
!3217 = !DILocation(line: 283, column: 7, scope: !3216)
!3218 = !DILocation(line: 285, column: 1, scope: !3207)
!3219 = !DILocalVariable(name: "c", arg: 1, scope: !3220, file: !3208, line: 272, type: !53)
!3220 = distinct !DISubprogram(name: "c_isprint", scope: !3208, file: !3208, line: 272, type: !3209, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3221, retainedNodes: !4)
!3221 = distinct !DICompileUnit(language: DW_LANG_C99, file: !287, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!3222 = distinct !DISubprogram(name: "c_tolower", scope: !3208, file: !3208, line: 337, type: !3223, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !286, retainedNodes: !4)
!3223 = !DISubroutineType(types: !3224)
!3224 = !{!53, !53}
!3225 = !DILocalVariable(name: "c", arg: 1, scope: !3222, file: !3208, line: 337, type: !53)
!3226 = !DILocation(line: 337, column: 16, scope: !3222)
!3227 = !DILocation(line: 339, column: 11, scope: !3222)
!3228 = !DILocation(line: 339, column: 3, scope: !3222)
!3229 = !DILocation(line: 342, column: 14, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !3222, file: !3208, line: 340, column: 5)
!3231 = !DILocation(line: 342, column: 16, scope: !3230)
!3232 = !DILocation(line: 342, column: 22, scope: !3230)
!3233 = !DILocation(line: 342, column: 7, scope: !3230)
!3234 = !DILocation(line: 344, column: 14, scope: !3230)
!3235 = !DILocation(line: 344, column: 7, scope: !3230)
!3236 = !DILocation(line: 346, column: 1, scope: !3222)
!3237 = !DILocalVariable(name: "c", arg: 1, scope: !3238, file: !3208, line: 337, type: !53)
!3238 = distinct !DISubprogram(name: "c_tolower", scope: !3208, file: !3208, line: 337, type: !3223, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3239, retainedNodes: !4)
!3239 = distinct !DICompileUnit(language: DW_LANG_C99, file: !287, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!3240 = distinct !DISubprogram(name: "canon_host", scope: !166, file: !166, line: 33, type: !3241, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !160, retainedNodes: !4)
!3241 = !DISubroutineType(types: !3242)
!3242 = !{!6, !49}
!3243 = !DILocalVariable(name: "host", arg: 1, scope: !3240, file: !166, line: 33, type: !49)
!3244 = !DILocation(line: 33, column: 25, scope: !3240)
!3245 = !DILocation(line: 35, column: 24, scope: !3240)
!3246 = !DILocation(line: 35, column: 10, scope: !3240)
!3247 = !DILocation(line: 35, column: 3, scope: !3240)
!3248 = !DILocalVariable(name: "host", arg: 1, scope: !3249, file: !166, line: 33, type: !49)
!3249 = distinct !DISubprogram(name: "canon_host", scope: !166, file: !166, line: 33, type: !3241, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3250, retainedNodes: !4)
!3250 = distinct !DICompileUnit(language: DW_LANG_C99, file: !161, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !3251, nameTableKind: None)
!3251 = !{!3252, !3271}
!3252 = !DIGlobalVariableExpression(var: !3253, expr: !DIExpression())
!3253 = distinct !DIGlobalVariable(name: "hints", scope: !3254, file: !166, line: 64, type: !3255, isLocal: true, isDefinition: true)
!3254 = distinct !DISubprogram(name: "canon_host_r", scope: !166, file: !166, line: 61, type: !167, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3250, retainedNodes: !4)
!3255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "addrinfo", file: !170, line: 565, size: 384, elements: !3256)
!3256 = !{!3257, !3258, !3259, !3260, !3261, !3262, !3268, !3269}
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "ai_flags", scope: !3255, file: !170, line: 567, baseType: !53, size: 32)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "ai_family", scope: !3255, file: !170, line: 568, baseType: !53, size: 32, offset: 32)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "ai_socktype", scope: !3255, file: !170, line: 569, baseType: !53, size: 32, offset: 64)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "ai_protocol", scope: !3255, file: !170, line: 570, baseType: !53, size: 32, offset: 96)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addrlen", scope: !3255, file: !170, line: 571, baseType: !177, size: 32, offset: 128)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addr", scope: !3255, file: !170, line: 572, baseType: !3263, size: 64, offset: 192)
!3263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3264, size: 64)
!3264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !178, line: 178, size: 128, elements: !3265)
!3265 = !{!3266, !3267}
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !3264, file: !178, line: 180, baseType: !186, size: 16)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !3264, file: !178, line: 181, baseType: !190, size: 112, offset: 16)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "ai_canonname", scope: !3255, file: !170, line: 573, baseType: !6, size: 64, offset: 256)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "ai_next", scope: !3255, file: !170, line: 574, baseType: !3270, size: 64, offset: 320)
!3270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3255, size: 64)
!3271 = !DIGlobalVariableExpression(var: !3272, expr: !DIExpression())
!3272 = distinct !DIGlobalVariable(name: "last_cherror", scope: !3250, file: !166, line: 28, type: !53, isLocal: true, isDefinition: true)
!3273 = !DILocalVariable(name: "host", arg: 1, scope: !165, file: !166, line: 61, type: !49)
!3274 = !DILocation(line: 61, column: 27, scope: !165)
!3275 = !DILocalVariable(name: "cherror", arg: 2, scope: !165, file: !166, line: 61, type: !149)
!3276 = !DILocation(line: 61, column: 38, scope: !165)
!3277 = !DILocalVariable(name: "retval", scope: !165, file: !166, line: 63, type: !6)
!3278 = !DILocation(line: 63, column: 9, scope: !165)
!3279 = !DILocalVariable(name: "res", scope: !165, file: !166, line: 65, type: !195)
!3280 = !DILocation(line: 65, column: 20, scope: !165)
!3281 = !DILocalVariable(name: "status", scope: !165, file: !166, line: 66, type: !53)
!3282 = !DILocation(line: 66, column: 7, scope: !165)
!3283 = !DILocation(line: 68, column: 18, scope: !165)
!3284 = !DILocation(line: 69, column: 25, scope: !165)
!3285 = !DILocation(line: 69, column: 12, scope: !165)
!3286 = !DILocation(line: 69, column: 10, scope: !165)
!3287 = !DILocation(line: 70, column: 8, scope: !3288)
!3288 = distinct !DILexicalBlock(scope: !165, file: !166, line: 70, column: 7)
!3289 = !DILocation(line: 70, column: 7, scope: !165)
!3290 = !DILocation(line: 75, column: 24, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3288, file: !166, line: 71, column: 5)
!3292 = !DILocation(line: 75, column: 29, scope: !3291)
!3293 = !DILocation(line: 75, column: 44, scope: !3291)
!3294 = !DILocation(line: 75, column: 49, scope: !3291)
!3295 = !DILocation(line: 75, column: 64, scope: !3291)
!3296 = !DILocation(line: 75, column: 16, scope: !3291)
!3297 = !DILocation(line: 75, column: 14, scope: !3291)
!3298 = !DILocation(line: 76, column: 12, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3291, file: !166, line: 76, column: 11)
!3300 = !DILocation(line: 76, column: 19, scope: !3299)
!3301 = !DILocation(line: 76, column: 22, scope: !3299)
!3302 = !DILocation(line: 76, column: 11, scope: !3291)
!3303 = !DILocation(line: 77, column: 10, scope: !3299)
!3304 = !DILocation(line: 77, column: 18, scope: !3299)
!3305 = !DILocation(line: 77, column: 9, scope: !3299)
!3306 = !DILocation(line: 78, column: 21, scope: !3291)
!3307 = !DILocation(line: 78, column: 7, scope: !3291)
!3308 = !DILocation(line: 79, column: 5, scope: !3291)
!3309 = !DILocation(line: 80, column: 12, scope: !3310)
!3310 = distinct !DILexicalBlock(scope: !3288, file: !166, line: 80, column: 12)
!3311 = !DILocation(line: 80, column: 12, scope: !3288)
!3312 = !DILocation(line: 81, column: 16, scope: !3310)
!3313 = !DILocation(line: 81, column: 6, scope: !3310)
!3314 = !DILocation(line: 81, column: 14, scope: !3310)
!3315 = !DILocation(line: 81, column: 5, scope: !3310)
!3316 = !DILocation(line: 83, column: 10, scope: !165)
!3317 = !DILocation(line: 83, column: 3, scope: !165)
!3318 = !DILocalVariable(name: "host", arg: 1, scope: !3319, file: !166, line: 61, type: !49)
!3319 = distinct !DISubprogram(name: "canon_host_r", scope: !166, file: !166, line: 61, type: !167, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3320, retainedNodes: !4)
!3320 = distinct !DICompileUnit(language: DW_LANG_C99, file: !161, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !3321, nameTableKind: None)
!3321 = !{!3322, !3340}
!3322 = !DIGlobalVariableExpression(var: !3323, expr: !DIExpression())
!3323 = distinct !DIGlobalVariable(name: "hints", scope: !3319, file: !166, line: 64, type: !3324, isLocal: true, isDefinition: true)
!3324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "addrinfo", file: !170, line: 565, size: 384, elements: !3325)
!3325 = !{!3326, !3327, !3328, !3329, !3330, !3331, !3337, !3338}
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "ai_flags", scope: !3324, file: !170, line: 567, baseType: !53, size: 32)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "ai_family", scope: !3324, file: !170, line: 568, baseType: !53, size: 32, offset: 32)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "ai_socktype", scope: !3324, file: !170, line: 569, baseType: !53, size: 32, offset: 64)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "ai_protocol", scope: !3324, file: !170, line: 570, baseType: !53, size: 32, offset: 96)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addrlen", scope: !3324, file: !170, line: 571, baseType: !177, size: 32, offset: 128)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addr", scope: !3324, file: !170, line: 572, baseType: !3332, size: 64, offset: 192)
!3332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3333, size: 64)
!3333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !178, line: 178, size: 128, elements: !3334)
!3334 = !{!3335, !3336}
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !3333, file: !178, line: 180, baseType: !186, size: 16)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !3333, file: !178, line: 181, baseType: !190, size: 112, offset: 16)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "ai_canonname", scope: !3324, file: !170, line: 573, baseType: !6, size: 64, offset: 256)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "ai_next", scope: !3324, file: !170, line: 574, baseType: !3339, size: 64, offset: 320)
!3339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3324, size: 64)
!3340 = !DIGlobalVariableExpression(var: !3341, expr: !DIExpression())
!3341 = distinct !DIGlobalVariable(name: "last_cherror", scope: !3320, file: !166, line: 28, type: !53, isLocal: true, isDefinition: true)
!3342 = !DILocalVariable(name: "cherror", arg: 2, scope: !3319, file: !166, line: 61, type: !149)
!3343 = !DILocalVariable(name: "retval", scope: !3319, file: !166, line: 63, type: !6)
!3344 = !DILocalVariable(name: "res", scope: !3319, file: !166, line: 65, type: !3339)
!3345 = !DILocalVariable(name: "status", scope: !3319, file: !166, line: 66, type: !53)
!3346 = distinct !DISubprogram(name: "close_stdout", scope: !203, file: !203, line: 117, type: !1463, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !198, retainedNodes: !4)
!3347 = !DILocation(line: 119, column: 21, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3346, file: !203, line: 119, column: 7)
!3349 = !DILocation(line: 119, column: 7, scope: !3348)
!3350 = !DILocation(line: 119, column: 29, scope: !3348)
!3351 = !DILocation(line: 120, column: 7, scope: !3348)
!3352 = !DILocation(line: 120, column: 12, scope: !3348)
!3353 = !DILocation(line: 120, column: 25, scope: !3348)
!3354 = !DILocation(line: 120, column: 28, scope: !3348)
!3355 = !DILocation(line: 120, column: 34, scope: !3348)
!3356 = !DILocation(line: 119, column: 7, scope: !3346)
!3357 = !DILocalVariable(name: "write_error", scope: !3358, file: !203, line: 122, type: !49)
!3358 = distinct !DILexicalBlock(scope: !3348, file: !203, line: 121, column: 5)
!3359 = !DILocation(line: 122, column: 19, scope: !3358)
!3360 = !DILocation(line: 122, column: 33, scope: !3358)
!3361 = !DILocation(line: 123, column: 11, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3358, file: !203, line: 123, column: 11)
!3363 = !DILocation(line: 123, column: 11, scope: !3358)
!3364 = !DILocation(line: 124, column: 19, scope: !3362)
!3365 = !DILocation(line: 124, column: 52, scope: !3362)
!3366 = !DILocation(line: 124, column: 36, scope: !3362)
!3367 = !DILocation(line: 125, column: 16, scope: !3362)
!3368 = !DILocation(line: 124, column: 9, scope: !3362)
!3369 = !DILocation(line: 127, column: 19, scope: !3362)
!3370 = !DILocation(line: 127, column: 32, scope: !3362)
!3371 = !DILocation(line: 127, column: 9, scope: !3362)
!3372 = !DILocation(line: 129, column: 14, scope: !3358)
!3373 = !DILocation(line: 129, column: 7, scope: !3358)
!3374 = !DILocation(line: 134, column: 42, scope: !3375)
!3375 = distinct !DILexicalBlock(scope: !3346, file: !203, line: 134, column: 7)
!3376 = !DILocation(line: 134, column: 28, scope: !3375)
!3377 = !DILocation(line: 134, column: 50, scope: !3375)
!3378 = !DILocation(line: 134, column: 7, scope: !3346)
!3379 = !DILocation(line: 135, column: 12, scope: !3375)
!3380 = !DILocation(line: 135, column: 5, scope: !3375)
!3381 = !DILocation(line: 136, column: 1, scope: !3346)
!3382 = distinct !DISubprogram(name: "hard_locale", scope: !3383, file: !3383, line: 27, type: !3209, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !288, retainedNodes: !4)
!3383 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3384 = !DILocalVariable(name: "category", arg: 1, scope: !3382, file: !3383, line: 27, type: !53)
!3385 = !DILocation(line: 27, column: 18, scope: !3382)
!3386 = !DILocalVariable(name: "locale", scope: !3382, file: !3383, line: 29, type: !1575)
!3387 = !DILocation(line: 29, column: 8, scope: !3382)
!3388 = !DILocation(line: 31, column: 25, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3382, file: !3383, line: 31, column: 7)
!3390 = !DILocation(line: 31, column: 35, scope: !3389)
!3391 = !DILocation(line: 31, column: 7, scope: !3389)
!3392 = !DILocation(line: 31, column: 7, scope: !3382)
!3393 = !DILocation(line: 32, column: 5, scope: !3389)
!3394 = !DILocation(line: 34, column: 20, scope: !3382)
!3395 = !DILocation(line: 34, column: 12, scope: !3382)
!3396 = !DILocation(line: 34, column: 33, scope: !3382)
!3397 = !DILocation(line: 34, column: 49, scope: !3382)
!3398 = !DILocation(line: 34, column: 41, scope: !3382)
!3399 = !DILocation(line: 34, column: 66, scope: !3382)
!3400 = !DILocation(line: 34, column: 38, scope: !3382)
!3401 = !DILocation(line: 34, column: 10, scope: !3382)
!3402 = !DILocation(line: 34, column: 3, scope: !3382)
!3403 = !DILocation(line: 35, column: 1, scope: !3382)
!3404 = distinct !DISubprogram(name: "imaxtostr", scope: !3405, file: !3405, line: 36, type: !3406, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !290, retainedNodes: !4)
!3405 = !DIFile(filename: "./lib/anytostr.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3406 = !DISubroutineType(types: !3407)
!3407 = !{!6, !293, !6}
!3408 = !DILocalVariable(name: "i", arg: 1, scope: !3404, file: !3405, line: 36, type: !293)
!3409 = !DILocation(line: 36, column: 19, scope: !3404)
!3410 = !DILocalVariable(name: "buf", arg: 2, scope: !3404, file: !3405, line: 36, type: !6)
!3411 = !DILocation(line: 36, column: 28, scope: !3404)
!3412 = !DILocalVariable(name: "p", scope: !3404, file: !3405, line: 38, type: !6)
!3413 = !DILocation(line: 38, column: 9, scope: !3404)
!3414 = !DILocation(line: 38, column: 13, scope: !3404)
!3415 = !DILocation(line: 38, column: 17, scope: !3404)
!3416 = !DILocation(line: 39, column: 4, scope: !3404)
!3417 = !DILocation(line: 39, column: 6, scope: !3404)
!3418 = !DILocation(line: 41, column: 7, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3404, file: !3405, line: 41, column: 7)
!3420 = !DILocation(line: 41, column: 9, scope: !3419)
!3421 = !DILocation(line: 41, column: 7, scope: !3404)
!3422 = !DILocation(line: 43, column: 7, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3419, file: !3405, line: 42, column: 5)
!3424 = !DILocation(line: 44, column: 22, scope: !3423)
!3425 = !DILocation(line: 44, column: 24, scope: !3423)
!3426 = !DILocation(line: 44, column: 20, scope: !3423)
!3427 = !DILocation(line: 44, column: 16, scope: !3423)
!3428 = !DILocation(line: 44, column: 10, scope: !3423)
!3429 = !DILocation(line: 44, column: 14, scope: !3423)
!3430 = !DILocation(line: 44, column: 9, scope: !3423)
!3431 = !DILocation(line: 45, column: 17, scope: !3423)
!3432 = !DILocation(line: 45, column: 24, scope: !3423)
!3433 = distinct !{!3433, !3422, !3434}
!3434 = !DILocation(line: 45, column: 28, scope: !3423)
!3435 = !DILocation(line: 47, column: 8, scope: !3423)
!3436 = !DILocation(line: 47, column: 12, scope: !3423)
!3437 = !DILocation(line: 48, column: 5, scope: !3423)
!3438 = !DILocation(line: 51, column: 7, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3419, file: !3405, line: 50, column: 5)
!3440 = !DILocation(line: 52, column: 22, scope: !3439)
!3441 = !DILocation(line: 52, column: 24, scope: !3439)
!3442 = !DILocation(line: 52, column: 20, scope: !3439)
!3443 = !DILocation(line: 52, column: 16, scope: !3439)
!3444 = !DILocation(line: 52, column: 10, scope: !3439)
!3445 = !DILocation(line: 52, column: 14, scope: !3439)
!3446 = !DILocation(line: 52, column: 9, scope: !3439)
!3447 = !DILocation(line: 53, column: 17, scope: !3439)
!3448 = !DILocation(line: 53, column: 24, scope: !3439)
!3449 = distinct !{!3449, !3438, !3450}
!3450 = !DILocation(line: 53, column: 28, scope: !3439)
!3451 = !DILocation(line: 56, column: 10, scope: !3404)
!3452 = !DILocation(line: 56, column: 3, scope: !3404)
!3453 = distinct !DISubprogram(name: "set_program_name", scope: !217, file: !217, line: 39, type: !467, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!3454 = !DILocalVariable(name: "argv0", arg: 1, scope: !3453, file: !217, line: 39, type: !49)
!3455 = !DILocation(line: 39, column: 31, scope: !3453)
!3456 = !DILocalVariable(name: "slash", scope: !3453, file: !217, line: 46, type: !49)
!3457 = !DILocation(line: 46, column: 15, scope: !3453)
!3458 = !DILocalVariable(name: "base", scope: !3453, file: !217, line: 47, type: !49)
!3459 = !DILocation(line: 47, column: 15, scope: !3453)
!3460 = !DILocation(line: 51, column: 7, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3453, file: !217, line: 51, column: 7)
!3462 = !DILocation(line: 51, column: 13, scope: !3461)
!3463 = !DILocation(line: 51, column: 7, scope: !3453)
!3464 = !DILocation(line: 55, column: 14, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3461, file: !217, line: 52, column: 5)
!3466 = !DILocation(line: 54, column: 7, scope: !3465)
!3467 = !DILocation(line: 56, column: 7, scope: !3465)
!3468 = !DILocation(line: 59, column: 20, scope: !3453)
!3469 = !DILocation(line: 59, column: 11, scope: !3453)
!3470 = !DILocation(line: 59, column: 9, scope: !3453)
!3471 = !DILocation(line: 60, column: 11, scope: !3453)
!3472 = !DILocation(line: 60, column: 17, scope: !3453)
!3473 = !DILocation(line: 60, column: 27, scope: !3453)
!3474 = !DILocation(line: 60, column: 33, scope: !3453)
!3475 = !DILocation(line: 60, column: 39, scope: !3453)
!3476 = !DILocation(line: 60, column: 8, scope: !3453)
!3477 = !DILocation(line: 61, column: 7, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3453, file: !217, line: 61, column: 7)
!3479 = !DILocation(line: 61, column: 14, scope: !3478)
!3480 = !DILocation(line: 61, column: 12, scope: !3478)
!3481 = !DILocation(line: 61, column: 20, scope: !3478)
!3482 = !DILocation(line: 61, column: 25, scope: !3478)
!3483 = !DILocation(line: 61, column: 37, scope: !3478)
!3484 = !DILocation(line: 61, column: 42, scope: !3478)
!3485 = !DILocation(line: 61, column: 28, scope: !3478)
!3486 = !DILocation(line: 61, column: 61, scope: !3478)
!3487 = !DILocation(line: 61, column: 7, scope: !3453)
!3488 = !DILocation(line: 63, column: 15, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3478, file: !217, line: 62, column: 5)
!3490 = !DILocation(line: 63, column: 13, scope: !3489)
!3491 = !DILocation(line: 64, column: 20, scope: !3492)
!3492 = distinct !DILexicalBlock(scope: !3489, file: !217, line: 64, column: 11)
!3493 = !DILocation(line: 64, column: 11, scope: !3492)
!3494 = !DILocation(line: 64, column: 36, scope: !3492)
!3495 = !DILocation(line: 64, column: 11, scope: !3489)
!3496 = !DILocation(line: 66, column: 19, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3492, file: !217, line: 65, column: 9)
!3498 = !DILocation(line: 66, column: 24, scope: !3497)
!3499 = !DILocation(line: 66, column: 17, scope: !3497)
!3500 = !DILocation(line: 70, column: 52, scope: !3497)
!3501 = !DILocation(line: 70, column: 41, scope: !3497)
!3502 = !DILocation(line: 72, column: 9, scope: !3497)
!3503 = !DILocation(line: 73, column: 5, scope: !3489)
!3504 = !DILocation(line: 84, column: 18, scope: !3453)
!3505 = !DILocation(line: 84, column: 16, scope: !3453)
!3506 = !DILocation(line: 90, column: 38, scope: !3453)
!3507 = !DILocation(line: 90, column: 27, scope: !3453)
!3508 = !DILocation(line: 92, column: 1, scope: !3453)
!3509 = !DILocalVariable(name: "argv0", arg: 1, scope: !3510, file: !217, line: 39, type: !49)
!3510 = distinct !DISubprogram(name: "set_program_name", scope: !217, file: !217, line: 39, type: !467, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3511, retainedNodes: !4)
!3511 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, globals: !3512, nameTableKind: None)
!3512 = !{!3513}
!3513 = !DIGlobalVariableExpression(var: !3514, expr: !DIExpression())
!3514 = distinct !DIGlobalVariable(name: "program_name", scope: !3511, file: !217, line: 33, type: !49, isLocal: false, isDefinition: true)
!3515 = !DILocalVariable(name: "slash", scope: !3510, file: !217, line: 46, type: !49)
!3516 = !DILocalVariable(name: "base", scope: !3510, file: !217, line: 47, type: !49)
!3517 = distinct !DISubprogram(name: "set_char_quoting", scope: !241, file: !241, line: 152, type: !3518, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!3518 = !DISubroutineType(types: !3519)
!3519 = !{!53, !3520, !7, !53}
!3520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!3521 = !DILocalVariable(name: "o", arg: 1, scope: !3517, file: !241, line: 152, type: !3520)
!3522 = !DILocation(line: 152, column: 43, scope: !3517)
!3523 = !DILocalVariable(name: "c", arg: 2, scope: !3517, file: !241, line: 152, type: !7)
!3524 = !DILocation(line: 152, column: 51, scope: !3517)
!3525 = !DILocalVariable(name: "i", arg: 3, scope: !3517, file: !241, line: 152, type: !53)
!3526 = !DILocation(line: 152, column: 58, scope: !3517)
!3527 = !DILocalVariable(name: "uc", scope: !3517, file: !241, line: 154, type: !317)
!3528 = !DILocation(line: 154, column: 17, scope: !3517)
!3529 = !DILocation(line: 154, column: 22, scope: !3517)
!3530 = !DILocalVariable(name: "p", scope: !3517, file: !241, line: 155, type: !3531)
!3531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 64)
!3532 = !DILocation(line: 155, column: 17, scope: !3517)
!3533 = !DILocation(line: 156, column: 6, scope: !3517)
!3534 = !DILocation(line: 156, column: 10, scope: !3517)
!3535 = !DILocation(line: 156, column: 41, scope: !3517)
!3536 = !DILocation(line: 156, column: 5, scope: !3517)
!3537 = !DILocation(line: 156, column: 59, scope: !3517)
!3538 = !DILocation(line: 156, column: 62, scope: !3517)
!3539 = !DILocation(line: 156, column: 57, scope: !3517)
!3540 = !DILocalVariable(name: "shift", scope: !3517, file: !241, line: 157, type: !53)
!3541 = !DILocation(line: 157, column: 7, scope: !3517)
!3542 = !DILocation(line: 157, column: 15, scope: !3517)
!3543 = !DILocation(line: 157, column: 18, scope: !3517)
!3544 = !DILocalVariable(name: "r", scope: !3517, file: !241, line: 158, type: !53)
!3545 = !DILocation(line: 158, column: 7, scope: !3517)
!3546 = !DILocation(line: 158, column: 13, scope: !3517)
!3547 = !DILocation(line: 158, column: 12, scope: !3517)
!3548 = !DILocation(line: 158, column: 18, scope: !3517)
!3549 = !DILocation(line: 158, column: 15, scope: !3517)
!3550 = !DILocation(line: 158, column: 25, scope: !3517)
!3551 = !DILocation(line: 159, column: 11, scope: !3517)
!3552 = !DILocation(line: 159, column: 13, scope: !3517)
!3553 = !DILocation(line: 159, column: 20, scope: !3517)
!3554 = !DILocation(line: 159, column: 18, scope: !3517)
!3555 = !DILocation(line: 159, column: 26, scope: !3517)
!3556 = !DILocation(line: 159, column: 23, scope: !3517)
!3557 = !DILocation(line: 159, column: 4, scope: !3517)
!3558 = !DILocation(line: 159, column: 6, scope: !3517)
!3559 = !DILocation(line: 160, column: 10, scope: !3517)
!3560 = !DILocation(line: 160, column: 3, scope: !3517)
!3561 = !DILocalVariable(name: "shift", scope: !3562, file: !241, line: 157, type: !53)
!3562 = distinct !DISubprogram(name: "set_char_quoting", scope: !241, file: !241, line: 152, type: !3563, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3573, retainedNodes: !4)
!3563 = !DISubroutineType(types: !3564)
!3564 = !{!53, !3565, !7, !53}
!3565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3566, size: 64)
!3566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !3567)
!3567 = !{!3568, !3569, !3570, !3571, !3572}
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3566, file: !241, line: 68, baseType: !223, size: 32)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3566, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3566, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3566, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3566, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!3573 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !3574, nameTableKind: None)
!3574 = !{!3575, !3577, !3579, !3581, !3583, !3585, !3592, !3594}
!3575 = !DIGlobalVariableExpression(var: !3576, expr: !DIExpression())
!3576 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3573, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!3577 = !DIGlobalVariableExpression(var: !3578, expr: !DIExpression())
!3578 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3573, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!3579 = !DIGlobalVariableExpression(var: !3580, expr: !DIExpression())
!3580 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3573, file: !241, line: 1052, type: !3566, isLocal: false, isDefinition: true)
!3581 = !DIGlobalVariableExpression(var: !3582, expr: !DIExpression())
!3582 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3573, file: !241, line: 116, type: !3566, isLocal: true, isDefinition: true)
!3583 = !DIGlobalVariableExpression(var: !3584, expr: !DIExpression())
!3584 = distinct !DIGlobalVariable(name: "slot0", scope: !3573, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!3585 = !DIGlobalVariableExpression(var: !3586, expr: !DIExpression())
!3586 = distinct !DIGlobalVariable(name: "slotvec", scope: !3573, file: !241, line: 845, type: !3587, isLocal: true, isDefinition: true)
!3587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3588, size: 64)
!3588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !3589)
!3589 = !{!3590, !3591}
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3588, file: !241, line: 836, baseType: !110, size: 64)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3588, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!3592 = !DIGlobalVariableExpression(var: !3593, expr: !DIExpression())
!3593 = distinct !DIGlobalVariable(name: "nslots", scope: !3573, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!3594 = !DIGlobalVariableExpression(var: !3595, expr: !DIExpression())
!3595 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3573, file: !241, line: 844, type: !3588, isLocal: true, isDefinition: true)
!3596 = !DILocalVariable(name: "r", scope: !3562, file: !241, line: 158, type: !53)
!3597 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !241, file: !241, line: 982, type: !3598, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!3598 = !DISubroutineType(types: !3599)
!3599 = !{!6, !49, !110, !7}
!3600 = !DILocalVariable(name: "arg", arg: 1, scope: !3597, file: !241, line: 982, type: !49)
!3601 = !DILocation(line: 982, column: 32, scope: !3597)
!3602 = !DILocalVariable(name: "argsize", arg: 2, scope: !3597, file: !241, line: 982, type: !110)
!3603 = !DILocation(line: 982, column: 44, scope: !3597)
!3604 = !DILocalVariable(name: "ch", arg: 3, scope: !3597, file: !241, line: 982, type: !7)
!3605 = !DILocation(line: 982, column: 58, scope: !3597)
!3606 = !DILocalVariable(name: "options", scope: !3597, file: !241, line: 984, type: !254)
!3607 = !DILocation(line: 984, column: 26, scope: !3597)
!3608 = !DILocation(line: 985, column: 13, scope: !3597)
!3609 = !DILocation(line: 986, column: 31, scope: !3597)
!3610 = !DILocation(line: 986, column: 3, scope: !3597)
!3611 = !DILocation(line: 987, column: 33, scope: !3597)
!3612 = !DILocation(line: 987, column: 38, scope: !3597)
!3613 = !DILocation(line: 987, column: 10, scope: !3597)
!3614 = !DILocation(line: 987, column: 3, scope: !3597)
!3615 = !DILocalVariable(name: "arg", arg: 1, scope: !3616, file: !241, line: 982, type: !49)
!3616 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !241, file: !241, line: 982, type: !3598, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3617, retainedNodes: !4)
!3617 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !3618, nameTableKind: None)
!3618 = !{!3619, !3621, !3623, !3632, !3634, !3636, !3643, !3645}
!3619 = !DIGlobalVariableExpression(var: !3620, expr: !DIExpression())
!3620 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3617, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!3621 = !DIGlobalVariableExpression(var: !3622, expr: !DIExpression())
!3622 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3617, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!3623 = !DIGlobalVariableExpression(var: !3624, expr: !DIExpression())
!3624 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3617, file: !241, line: 1052, type: !3625, isLocal: false, isDefinition: true)
!3625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !3626)
!3626 = !{!3627, !3628, !3629, !3630, !3631}
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3625, file: !241, line: 68, baseType: !223, size: 32)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3625, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3625, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3625, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3625, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!3632 = !DIGlobalVariableExpression(var: !3633, expr: !DIExpression())
!3633 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3617, file: !241, line: 116, type: !3625, isLocal: true, isDefinition: true)
!3634 = !DIGlobalVariableExpression(var: !3635, expr: !DIExpression())
!3635 = distinct !DIGlobalVariable(name: "slot0", scope: !3617, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!3636 = !DIGlobalVariableExpression(var: !3637, expr: !DIExpression())
!3637 = distinct !DIGlobalVariable(name: "slotvec", scope: !3617, file: !241, line: 845, type: !3638, isLocal: true, isDefinition: true)
!3638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3639, size: 64)
!3639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !3640)
!3640 = !{!3641, !3642}
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3639, file: !241, line: 836, baseType: !110, size: 64)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3639, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!3643 = !DIGlobalVariableExpression(var: !3644, expr: !DIExpression())
!3644 = distinct !DIGlobalVariable(name: "nslots", scope: !3617, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!3645 = !DIGlobalVariableExpression(var: !3646, expr: !DIExpression())
!3646 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3617, file: !241, line: 844, type: !3639, isLocal: true, isDefinition: true)
!3647 = !DILocalVariable(name: "argsize", arg: 2, scope: !3616, file: !241, line: 982, type: !110)
!3648 = !DILocalVariable(name: "ch", arg: 3, scope: !3616, file: !241, line: 982, type: !7)
!3649 = !DILocalVariable(name: "options", scope: !3616, file: !241, line: 984, type: !3625)
!3650 = distinct !DISubprogram(name: "quotearg_n_options", scope: !241, file: !241, line: 877, type: !3651, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!3651 = !DISubroutineType(types: !3652)
!3652 = !{!6, !53, !49, !110, !3653}
!3653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3654, size: 64)
!3654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !254)
!3655 = !DILocalVariable(name: "n", arg: 1, scope: !3650, file: !241, line: 877, type: !53)
!3656 = !DILocation(line: 877, column: 25, scope: !3650)
!3657 = !DILocalVariable(name: "arg", arg: 2, scope: !3650, file: !241, line: 877, type: !49)
!3658 = !DILocation(line: 877, column: 40, scope: !3650)
!3659 = !DILocalVariable(name: "argsize", arg: 3, scope: !3650, file: !241, line: 877, type: !110)
!3660 = !DILocation(line: 877, column: 52, scope: !3650)
!3661 = !DILocalVariable(name: "options", arg: 4, scope: !3650, file: !241, line: 878, type: !3653)
!3662 = !DILocation(line: 878, column: 51, scope: !3650)
!3663 = !DILocalVariable(name: "e", scope: !3650, file: !241, line: 880, type: !53)
!3664 = !DILocation(line: 880, column: 7, scope: !3650)
!3665 = !DILocation(line: 880, column: 11, scope: !3650)
!3666 = !DILocalVariable(name: "sv", scope: !3650, file: !241, line: 882, type: !268)
!3667 = !DILocation(line: 882, column: 19, scope: !3650)
!3668 = !DILocation(line: 882, column: 24, scope: !3650)
!3669 = !DILocation(line: 884, column: 7, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3650, file: !241, line: 884, column: 7)
!3671 = !DILocation(line: 884, column: 9, scope: !3670)
!3672 = !DILocation(line: 884, column: 7, scope: !3650)
!3673 = !DILocation(line: 885, column: 5, scope: !3670)
!3674 = !DILocation(line: 887, column: 7, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3650, file: !241, line: 887, column: 7)
!3676 = !DILocation(line: 887, column: 17, scope: !3675)
!3677 = !DILocation(line: 887, column: 14, scope: !3675)
!3678 = !DILocation(line: 887, column: 7, scope: !3650)
!3679 = !DILocalVariable(name: "preallocated", scope: !3680, file: !241, line: 889, type: !18)
!3680 = distinct !DILexicalBlock(scope: !3675, file: !241, line: 888, column: 5)
!3681 = !DILocation(line: 889, column: 12, scope: !3680)
!3682 = !DILocation(line: 889, column: 28, scope: !3680)
!3683 = !DILocation(line: 889, column: 31, scope: !3680)
!3684 = !DILocalVariable(name: "nmax", scope: !3680, file: !241, line: 890, type: !53)
!3685 = !DILocation(line: 890, column: 11, scope: !3680)
!3686 = !DILocation(line: 892, column: 11, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3680, file: !241, line: 892, column: 11)
!3688 = !DILocation(line: 892, column: 18, scope: !3687)
!3689 = !DILocation(line: 892, column: 16, scope: !3687)
!3690 = !DILocation(line: 892, column: 11, scope: !3680)
!3691 = !DILocation(line: 893, column: 9, scope: !3687)
!3692 = !DILocation(line: 895, column: 32, scope: !3680)
!3693 = !DILocation(line: 895, column: 54, scope: !3680)
!3694 = !DILocation(line: 895, column: 59, scope: !3680)
!3695 = !DILocation(line: 895, column: 61, scope: !3680)
!3696 = !DILocation(line: 895, column: 58, scope: !3680)
!3697 = !DILocation(line: 895, column: 66, scope: !3680)
!3698 = !DILocation(line: 895, column: 22, scope: !3680)
!3699 = !DILocation(line: 895, column: 20, scope: !3680)
!3700 = !DILocation(line: 895, column: 15, scope: !3680)
!3701 = !DILocation(line: 896, column: 11, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3680, file: !241, line: 896, column: 11)
!3703 = !DILocation(line: 896, column: 11, scope: !3680)
!3704 = !DILocation(line: 897, column: 10, scope: !3702)
!3705 = !DILocation(line: 897, column: 15, scope: !3702)
!3706 = !DILocation(line: 897, column: 9, scope: !3702)
!3707 = !DILocation(line: 898, column: 15, scope: !3680)
!3708 = !DILocation(line: 898, column: 20, scope: !3680)
!3709 = !DILocation(line: 898, column: 18, scope: !3680)
!3710 = !DILocation(line: 898, column: 7, scope: !3680)
!3711 = !DILocation(line: 898, column: 32, scope: !3680)
!3712 = !DILocation(line: 898, column: 34, scope: !3680)
!3713 = !DILocation(line: 898, column: 40, scope: !3680)
!3714 = !DILocation(line: 898, column: 38, scope: !3680)
!3715 = !DILocation(line: 898, column: 31, scope: !3680)
!3716 = !DILocation(line: 898, column: 48, scope: !3680)
!3717 = !DILocation(line: 899, column: 16, scope: !3680)
!3718 = !DILocation(line: 899, column: 18, scope: !3680)
!3719 = !DILocation(line: 899, column: 14, scope: !3680)
!3720 = !DILocation(line: 900, column: 5, scope: !3680)
!3721 = !DILocalVariable(name: "size", scope: !3722, file: !241, line: 903, type: !110)
!3722 = distinct !DILexicalBlock(scope: !3650, file: !241, line: 902, column: 3)
!3723 = !DILocation(line: 903, column: 12, scope: !3722)
!3724 = !DILocation(line: 903, column: 19, scope: !3722)
!3725 = !DILocation(line: 903, column: 22, scope: !3722)
!3726 = !DILocation(line: 903, column: 25, scope: !3722)
!3727 = !DILocalVariable(name: "val", scope: !3722, file: !241, line: 904, type: !6)
!3728 = !DILocation(line: 904, column: 11, scope: !3722)
!3729 = !DILocation(line: 904, column: 17, scope: !3722)
!3730 = !DILocation(line: 904, column: 20, scope: !3722)
!3731 = !DILocation(line: 904, column: 23, scope: !3722)
!3732 = !DILocalVariable(name: "flags", scope: !3722, file: !241, line: 906, type: !53)
!3733 = !DILocation(line: 906, column: 9, scope: !3722)
!3734 = !DILocation(line: 906, column: 17, scope: !3722)
!3735 = !DILocation(line: 906, column: 26, scope: !3722)
!3736 = !DILocation(line: 906, column: 32, scope: !3722)
!3737 = !DILocalVariable(name: "qsize", scope: !3722, file: !241, line: 907, type: !110)
!3738 = !DILocation(line: 907, column: 12, scope: !3722)
!3739 = !DILocation(line: 907, column: 46, scope: !3722)
!3740 = !DILocation(line: 907, column: 51, scope: !3722)
!3741 = !DILocation(line: 907, column: 57, scope: !3722)
!3742 = !DILocation(line: 907, column: 62, scope: !3722)
!3743 = !DILocation(line: 908, column: 46, scope: !3722)
!3744 = !DILocation(line: 908, column: 55, scope: !3722)
!3745 = !DILocation(line: 908, column: 62, scope: !3722)
!3746 = !DILocation(line: 909, column: 46, scope: !3722)
!3747 = !DILocation(line: 909, column: 55, scope: !3722)
!3748 = !DILocation(line: 910, column: 46, scope: !3722)
!3749 = !DILocation(line: 910, column: 55, scope: !3722)
!3750 = !DILocation(line: 911, column: 46, scope: !3722)
!3751 = !DILocation(line: 911, column: 55, scope: !3722)
!3752 = !DILocation(line: 907, column: 20, scope: !3722)
!3753 = !DILocation(line: 913, column: 9, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3722, file: !241, line: 913, column: 9)
!3755 = !DILocation(line: 913, column: 17, scope: !3754)
!3756 = !DILocation(line: 913, column: 14, scope: !3754)
!3757 = !DILocation(line: 913, column: 9, scope: !3722)
!3758 = !DILocation(line: 915, column: 29, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3754, file: !241, line: 914, column: 7)
!3760 = !DILocation(line: 915, column: 35, scope: !3759)
!3761 = !DILocation(line: 915, column: 27, scope: !3759)
!3762 = !DILocation(line: 915, column: 9, scope: !3759)
!3763 = !DILocation(line: 915, column: 12, scope: !3759)
!3764 = !DILocation(line: 915, column: 15, scope: !3759)
!3765 = !DILocation(line: 915, column: 20, scope: !3759)
!3766 = !DILocation(line: 916, column: 13, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3759, file: !241, line: 916, column: 13)
!3768 = !DILocation(line: 916, column: 17, scope: !3767)
!3769 = !DILocation(line: 916, column: 13, scope: !3759)
!3770 = !DILocation(line: 917, column: 17, scope: !3767)
!3771 = !DILocation(line: 917, column: 11, scope: !3767)
!3772 = !DILocation(line: 918, column: 39, scope: !3759)
!3773 = !DILocation(line: 918, column: 27, scope: !3759)
!3774 = !DILocation(line: 918, column: 25, scope: !3759)
!3775 = !DILocation(line: 918, column: 9, scope: !3759)
!3776 = !DILocation(line: 918, column: 12, scope: !3759)
!3777 = !DILocation(line: 918, column: 15, scope: !3759)
!3778 = !DILocation(line: 918, column: 19, scope: !3759)
!3779 = !DILocation(line: 919, column: 35, scope: !3759)
!3780 = !DILocation(line: 919, column: 40, scope: !3759)
!3781 = !DILocation(line: 919, column: 46, scope: !3759)
!3782 = !DILocation(line: 919, column: 51, scope: !3759)
!3783 = !DILocation(line: 919, column: 60, scope: !3759)
!3784 = !DILocation(line: 919, column: 69, scope: !3759)
!3785 = !DILocation(line: 920, column: 35, scope: !3759)
!3786 = !DILocation(line: 920, column: 42, scope: !3759)
!3787 = !DILocation(line: 920, column: 51, scope: !3759)
!3788 = !DILocation(line: 921, column: 35, scope: !3759)
!3789 = !DILocation(line: 921, column: 44, scope: !3759)
!3790 = !DILocation(line: 922, column: 35, scope: !3759)
!3791 = !DILocation(line: 922, column: 44, scope: !3759)
!3792 = !DILocation(line: 919, column: 9, scope: !3759)
!3793 = !DILocation(line: 923, column: 7, scope: !3759)
!3794 = !DILocation(line: 925, column: 13, scope: !3722)
!3795 = !DILocation(line: 925, column: 5, scope: !3722)
!3796 = !DILocation(line: 925, column: 11, scope: !3722)
!3797 = !DILocation(line: 926, column: 12, scope: !3722)
!3798 = !DILocation(line: 926, column: 5, scope: !3722)
!3799 = !DILocalVariable(name: "n", arg: 1, scope: !3800, file: !241, line: 877, type: !53)
!3800 = distinct !DISubprogram(name: "quotearg_n_options", scope: !241, file: !241, line: 877, type: !3801, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3812, retainedNodes: !4)
!3801 = !DISubroutineType(types: !3802)
!3802 = !{!6, !53, !49, !110, !3803}
!3803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3804, size: 64)
!3804 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3805)
!3805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !3806)
!3806 = !{!3807, !3808, !3809, !3810, !3811}
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3805, file: !241, line: 68, baseType: !223, size: 32)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3805, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3805, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3805, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3805, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!3812 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !3813, nameTableKind: None)
!3813 = !{!3814, !3816, !3818, !3820, !3822, !3824, !3831, !3833}
!3814 = !DIGlobalVariableExpression(var: !3815, expr: !DIExpression())
!3815 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3812, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!3816 = !DIGlobalVariableExpression(var: !3817, expr: !DIExpression())
!3817 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3812, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!3818 = !DIGlobalVariableExpression(var: !3819, expr: !DIExpression())
!3819 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3812, file: !241, line: 1052, type: !3805, isLocal: false, isDefinition: true)
!3820 = !DIGlobalVariableExpression(var: !3821, expr: !DIExpression())
!3821 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3812, file: !241, line: 116, type: !3805, isLocal: true, isDefinition: true)
!3822 = !DIGlobalVariableExpression(var: !3823, expr: !DIExpression())
!3823 = distinct !DIGlobalVariable(name: "slot0", scope: !3812, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!3824 = !DIGlobalVariableExpression(var: !3825, expr: !DIExpression())
!3825 = distinct !DIGlobalVariable(name: "slotvec", scope: !3812, file: !241, line: 845, type: !3826, isLocal: true, isDefinition: true)
!3826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3827, size: 64)
!3827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !3828)
!3828 = !{!3829, !3830}
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3827, file: !241, line: 836, baseType: !110, size: 64)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3827, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!3831 = !DIGlobalVariableExpression(var: !3832, expr: !DIExpression())
!3832 = distinct !DIGlobalVariable(name: "nslots", scope: !3812, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!3833 = !DIGlobalVariableExpression(var: !3834, expr: !DIExpression())
!3834 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3812, file: !241, line: 844, type: !3827, isLocal: true, isDefinition: true)
!3835 = !DILocalVariable(name: "arg", arg: 2, scope: !3800, file: !241, line: 877, type: !49)
!3836 = !DILocalVariable(name: "argsize", arg: 3, scope: !3800, file: !241, line: 877, type: !110)
!3837 = !DILocalVariable(name: "options", arg: 4, scope: !3800, file: !241, line: 878, type: !3803)
!3838 = !DILocalVariable(name: "e", scope: !3800, file: !241, line: 880, type: !53)
!3839 = !DILocalVariable(name: "sv", scope: !3800, file: !241, line: 882, type: !3826)
!3840 = !DILocalVariable(name: "nmax", scope: !3841, file: !241, line: 890, type: !53)
!3841 = distinct !DILexicalBlock(scope: !3842, file: !241, line: 888, column: 5)
!3842 = distinct !DILexicalBlock(scope: !3843, file: !241, line: 887, column: 7)
!3843 = distinct !DISubprogram(name: "quotearg_n_options", scope: !241, file: !241, line: 877, type: !3844, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3855, retainedNodes: !4)
!3844 = !DISubroutineType(types: !3845)
!3845 = !{!6, !53, !49, !110, !3846}
!3846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3847, size: 64)
!3847 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3848)
!3848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !3849)
!3849 = !{!3850, !3851, !3852, !3853, !3854}
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3848, file: !241, line: 68, baseType: !223, size: 32)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3848, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3848, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3848, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3848, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!3855 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !3856, nameTableKind: None)
!3856 = !{!3857, !3859, !3861, !3863, !3865, !3867, !3874, !3876}
!3857 = !DIGlobalVariableExpression(var: !3858, expr: !DIExpression())
!3858 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3855, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!3859 = !DIGlobalVariableExpression(var: !3860, expr: !DIExpression())
!3860 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3855, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!3861 = !DIGlobalVariableExpression(var: !3862, expr: !DIExpression())
!3862 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3855, file: !241, line: 1052, type: !3848, isLocal: false, isDefinition: true)
!3863 = !DIGlobalVariableExpression(var: !3864, expr: !DIExpression())
!3864 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3855, file: !241, line: 116, type: !3848, isLocal: true, isDefinition: true)
!3865 = !DIGlobalVariableExpression(var: !3866, expr: !DIExpression())
!3866 = distinct !DIGlobalVariable(name: "slot0", scope: !3855, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!3867 = !DIGlobalVariableExpression(var: !3868, expr: !DIExpression())
!3868 = distinct !DIGlobalVariable(name: "slotvec", scope: !3855, file: !241, line: 845, type: !3869, isLocal: true, isDefinition: true)
!3869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3870, size: 64)
!3870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !3871)
!3871 = !{!3872, !3873}
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3870, file: !241, line: 836, baseType: !110, size: 64)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3870, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!3874 = !DIGlobalVariableExpression(var: !3875, expr: !DIExpression())
!3875 = distinct !DIGlobalVariable(name: "nslots", scope: !3855, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!3876 = !DIGlobalVariableExpression(var: !3877, expr: !DIExpression())
!3877 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3855, file: !241, line: 844, type: !3870, isLocal: true, isDefinition: true)
!3878 = !DILocalVariable(name: "val", scope: !3879, file: !241, line: 904, type: !6)
!3879 = distinct !DILexicalBlock(scope: !3880, file: !241, line: 902, column: 3)
!3880 = distinct !DISubprogram(name: "quotearg_n_options", scope: !241, file: !241, line: 877, type: !3881, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3892, retainedNodes: !4)
!3881 = !DISubroutineType(types: !3882)
!3882 = !{!6, !53, !49, !110, !3883}
!3883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3884, size: 64)
!3884 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3885)
!3885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !3886)
!3886 = !{!3887, !3888, !3889, !3890, !3891}
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3885, file: !241, line: 68, baseType: !223, size: 32)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3885, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3885, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3885, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3885, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!3892 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !3893, nameTableKind: None)
!3893 = !{!3894, !3896, !3898, !3900, !3902, !3904, !3911, !3913}
!3894 = !DIGlobalVariableExpression(var: !3895, expr: !DIExpression())
!3895 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3892, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!3896 = !DIGlobalVariableExpression(var: !3897, expr: !DIExpression())
!3897 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3892, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!3898 = !DIGlobalVariableExpression(var: !3899, expr: !DIExpression())
!3899 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3892, file: !241, line: 1052, type: !3885, isLocal: false, isDefinition: true)
!3900 = !DIGlobalVariableExpression(var: !3901, expr: !DIExpression())
!3901 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3892, file: !241, line: 116, type: !3885, isLocal: true, isDefinition: true)
!3902 = !DIGlobalVariableExpression(var: !3903, expr: !DIExpression())
!3903 = distinct !DIGlobalVariable(name: "slot0", scope: !3892, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!3904 = !DIGlobalVariableExpression(var: !3905, expr: !DIExpression())
!3905 = distinct !DIGlobalVariable(name: "slotvec", scope: !3892, file: !241, line: 845, type: !3906, isLocal: true, isDefinition: true)
!3906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3907, size: 64)
!3907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !3908)
!3908 = !{!3909, !3910}
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3907, file: !241, line: 836, baseType: !110, size: 64)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3907, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!3911 = !DIGlobalVariableExpression(var: !3912, expr: !DIExpression())
!3912 = distinct !DIGlobalVariable(name: "nslots", scope: !3892, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!3913 = !DIGlobalVariableExpression(var: !3914, expr: !DIExpression())
!3914 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3892, file: !241, line: 844, type: !3907, isLocal: true, isDefinition: true)
!3915 = !DILocalVariable(name: "flags", scope: !3879, file: !241, line: 906, type: !53)
!3916 = !DILocalVariable(name: "qsize", scope: !3879, file: !241, line: 907, type: !110)
!3917 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !241, file: !241, line: 256, type: !3918, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!3918 = !DISubroutineType(types: !3919)
!3919 = !{!110, !6, !110, !49, !110, !223, !53, !3920, !49, !49}
!3920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3921, size: 64)
!3921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !180)
!3922 = !DILocalVariable(name: "buffer", arg: 1, scope: !3917, file: !241, line: 256, type: !6)
!3923 = !DILocation(line: 256, column: 33, scope: !3917)
!3924 = !DILocalVariable(name: "buffersize", arg: 2, scope: !3917, file: !241, line: 256, type: !110)
!3925 = !DILocation(line: 256, column: 48, scope: !3917)
!3926 = !DILocalVariable(name: "arg", arg: 3, scope: !3917, file: !241, line: 257, type: !49)
!3927 = !DILocation(line: 257, column: 39, scope: !3917)
!3928 = !DILocalVariable(name: "argsize", arg: 4, scope: !3917, file: !241, line: 257, type: !110)
!3929 = !DILocation(line: 257, column: 51, scope: !3917)
!3930 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !3917, file: !241, line: 258, type: !223)
!3931 = !DILocation(line: 258, column: 46, scope: !3917)
!3932 = !DILocalVariable(name: "flags", arg: 6, scope: !3917, file: !241, line: 258, type: !53)
!3933 = !DILocation(line: 258, column: 65, scope: !3917)
!3934 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !3917, file: !241, line: 259, type: !3920)
!3935 = !DILocation(line: 259, column: 47, scope: !3917)
!3936 = !DILocalVariable(name: "left_quote", arg: 8, scope: !3917, file: !241, line: 260, type: !49)
!3937 = !DILocation(line: 260, column: 39, scope: !3917)
!3938 = !DILocalVariable(name: "right_quote", arg: 9, scope: !3917, file: !241, line: 261, type: !49)
!3939 = !DILocation(line: 261, column: 39, scope: !3917)
!3940 = !DILocalVariable(name: "i", scope: !3917, file: !241, line: 263, type: !110)
!3941 = !DILocation(line: 263, column: 10, scope: !3917)
!3942 = !DILocalVariable(name: "len", scope: !3917, file: !241, line: 264, type: !110)
!3943 = !DILocation(line: 264, column: 10, scope: !3917)
!3944 = !DILocalVariable(name: "orig_buffersize", scope: !3917, file: !241, line: 265, type: !110)
!3945 = !DILocation(line: 265, column: 10, scope: !3917)
!3946 = !DILocalVariable(name: "quote_string", scope: !3917, file: !241, line: 266, type: !49)
!3947 = !DILocation(line: 266, column: 15, scope: !3917)
!3948 = !DILocalVariable(name: "quote_string_len", scope: !3917, file: !241, line: 267, type: !110)
!3949 = !DILocation(line: 267, column: 10, scope: !3917)
!3950 = !DILocalVariable(name: "backslash_escapes", scope: !3917, file: !241, line: 268, type: !18)
!3951 = !DILocation(line: 268, column: 8, scope: !3917)
!3952 = !DILocalVariable(name: "unibyte_locale", scope: !3917, file: !241, line: 269, type: !18)
!3953 = !DILocation(line: 269, column: 8, scope: !3917)
!3954 = !DILocation(line: 269, column: 25, scope: !3917)
!3955 = !DILocation(line: 269, column: 36, scope: !3917)
!3956 = !DILocalVariable(name: "elide_outer_quotes", scope: !3917, file: !241, line: 270, type: !18)
!3957 = !DILocation(line: 270, column: 8, scope: !3917)
!3958 = !DILocation(line: 270, column: 30, scope: !3917)
!3959 = !DILocation(line: 270, column: 36, scope: !3917)
!3960 = !DILocation(line: 270, column: 61, scope: !3917)
!3961 = !DILocalVariable(name: "pending_shell_escape_end", scope: !3917, file: !241, line: 271, type: !18)
!3962 = !DILocation(line: 271, column: 8, scope: !3917)
!3963 = !DILocalVariable(name: "encountered_single_quote", scope: !3917, file: !241, line: 272, type: !18)
!3964 = !DILocation(line: 272, column: 8, scope: !3917)
!3965 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !3917, file: !241, line: 273, type: !18)
!3966 = !DILocation(line: 273, column: 8, scope: !3917)
!3967 = !DILocation(line: 273, column: 3, scope: !3917)
!3968 = !DILabel(scope: !3917, name: "process_input", file: !241, line: 314)
!3969 = !DILocation(line: 314, column: 2, scope: !3917)
!3970 = !DILocation(line: 316, column: 11, scope: !3917)
!3971 = !DILocation(line: 316, column: 3, scope: !3917)
!3972 = !DILocation(line: 319, column: 21, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3917, file: !241, line: 317, column: 5)
!3974 = !DILocation(line: 320, column: 26, scope: !3973)
!3975 = !DILocation(line: 321, column: 7, scope: !3973)
!3976 = !DILocation(line: 323, column: 12, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3973, file: !241, line: 323, column: 11)
!3978 = !DILocation(line: 323, column: 11, scope: !3973)
!3979 = !DILocation(line: 324, column: 9, scope: !3977)
!3980 = !DILocation(line: 324, column: 9, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3982, file: !241, line: 324, column: 9)
!3982 = distinct !DILexicalBlock(scope: !3977, file: !241, line: 324, column: 9)
!3983 = !DILocation(line: 324, column: 9, scope: !3982)
!3984 = !DILocation(line: 325, column: 25, scope: !3973)
!3985 = !DILocation(line: 326, column: 20, scope: !3973)
!3986 = !DILocation(line: 327, column: 24, scope: !3973)
!3987 = !DILocation(line: 328, column: 7, scope: !3973)
!3988 = !DILocation(line: 331, column: 25, scope: !3973)
!3989 = !DILocation(line: 332, column: 26, scope: !3973)
!3990 = !DILocation(line: 333, column: 7, scope: !3973)
!3991 = !DILocation(line: 339, column: 13, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3993, file: !241, line: 339, column: 13)
!3993 = distinct !DILexicalBlock(scope: !3973, file: !241, line: 338, column: 7)
!3994 = !DILocation(line: 339, column: 27, scope: !3992)
!3995 = !DILocation(line: 339, column: 13, scope: !3993)
!3996 = !DILocation(line: 362, column: 50, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3992, file: !241, line: 340, column: 11)
!3998 = !DILocation(line: 362, column: 26, scope: !3997)
!3999 = !DILocation(line: 362, column: 24, scope: !3997)
!4000 = !DILocation(line: 363, column: 51, scope: !3997)
!4001 = !DILocation(line: 363, column: 27, scope: !3997)
!4002 = !DILocation(line: 363, column: 25, scope: !3997)
!4003 = !DILocation(line: 364, column: 11, scope: !3997)
!4004 = !DILocation(line: 365, column: 14, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !3993, file: !241, line: 365, column: 13)
!4006 = !DILocation(line: 365, column: 13, scope: !3993)
!4007 = !DILocation(line: 366, column: 31, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !4005, file: !241, line: 366, column: 11)
!4009 = !DILocation(line: 366, column: 29, scope: !4008)
!4010 = !DILocation(line: 366, column: 16, scope: !4008)
!4011 = !DILocation(line: 366, column: 44, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !4008, file: !241, line: 366, column: 11)
!4013 = !DILocation(line: 366, column: 43, scope: !4012)
!4014 = !DILocation(line: 366, column: 11, scope: !4008)
!4015 = !DILocation(line: 367, column: 13, scope: !4012)
!4016 = !DILocation(line: 367, column: 13, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !4018, file: !241, line: 367, column: 13)
!4018 = distinct !DILexicalBlock(scope: !4012, file: !241, line: 367, column: 13)
!4019 = !DILocation(line: 367, column: 13, scope: !4018)
!4020 = !DILocation(line: 366, column: 70, scope: !4012)
!4021 = !DILocation(line: 366, column: 11, scope: !4012)
!4022 = distinct !{!4022, !4014, !4023}
!4023 = !DILocation(line: 367, column: 13, scope: !4008)
!4024 = !DILocation(line: 368, column: 27, scope: !3993)
!4025 = !DILocation(line: 369, column: 24, scope: !3993)
!4026 = !DILocation(line: 369, column: 22, scope: !3993)
!4027 = !DILocation(line: 370, column: 36, scope: !3993)
!4028 = !DILocation(line: 370, column: 28, scope: !3993)
!4029 = !DILocation(line: 370, column: 26, scope: !3993)
!4030 = !DILocation(line: 372, column: 7, scope: !3973)
!4031 = !DILocation(line: 375, column: 25, scope: !3973)
!4032 = !DILocation(line: 376, column: 7, scope: !3973)
!4033 = !DILocation(line: 378, column: 26, scope: !3973)
!4034 = !DILocation(line: 379, column: 7, scope: !3973)
!4035 = !DILocation(line: 381, column: 12, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !3973, file: !241, line: 381, column: 11)
!4037 = !DILocation(line: 381, column: 11, scope: !3973)
!4038 = !DILocation(line: 382, column: 27, scope: !4036)
!4039 = !DILocation(line: 382, column: 9, scope: !4036)
!4040 = !DILocation(line: 383, column: 7, scope: !3973)
!4041 = !DILocation(line: 385, column: 21, scope: !3973)
!4042 = !DILocation(line: 386, column: 12, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !3973, file: !241, line: 386, column: 11)
!4044 = !DILocation(line: 386, column: 11, scope: !3973)
!4045 = !DILocation(line: 387, column: 9, scope: !4043)
!4046 = !DILocation(line: 387, column: 9, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !4048, file: !241, line: 387, column: 9)
!4048 = distinct !DILexicalBlock(scope: !4043, file: !241, line: 387, column: 9)
!4049 = !DILocation(line: 387, column: 9, scope: !4048)
!4050 = !DILocation(line: 388, column: 20, scope: !3973)
!4051 = !DILocation(line: 389, column: 24, scope: !3973)
!4052 = !DILocation(line: 390, column: 7, scope: !3973)
!4053 = !DILocation(line: 393, column: 26, scope: !3973)
!4054 = !DILocation(line: 394, column: 7, scope: !3973)
!4055 = !DILocation(line: 397, column: 7, scope: !3973)
!4056 = !DILocation(line: 400, column: 10, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !3917, file: !241, line: 400, column: 3)
!4058 = !DILocation(line: 400, column: 8, scope: !4057)
!4059 = !DILocation(line: 400, column: 19, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4057, file: !241, line: 400, column: 3)
!4061 = !DILocation(line: 400, column: 27, scope: !4060)
!4062 = !DILocation(line: 400, column: 41, scope: !4060)
!4063 = !DILocation(line: 400, column: 45, scope: !4060)
!4064 = !DILocation(line: 400, column: 48, scope: !4060)
!4065 = !DILocation(line: 400, column: 58, scope: !4060)
!4066 = !DILocation(line: 400, column: 63, scope: !4060)
!4067 = !DILocation(line: 400, column: 60, scope: !4060)
!4068 = !DILocation(line: 400, column: 16, scope: !4060)
!4069 = !DILocation(line: 400, column: 3, scope: !4057)
!4070 = !DILocalVariable(name: "c", scope: !4071, file: !241, line: 402, type: !317)
!4071 = distinct !DILexicalBlock(scope: !4060, file: !241, line: 401, column: 5)
!4072 = !DILocation(line: 402, column: 21, scope: !4071)
!4073 = !DILocalVariable(name: "esc", scope: !4071, file: !241, line: 403, type: !317)
!4074 = !DILocation(line: 403, column: 21, scope: !4071)
!4075 = !DILocalVariable(name: "is_right_quote", scope: !4071, file: !241, line: 404, type: !18)
!4076 = !DILocation(line: 404, column: 12, scope: !4071)
!4077 = !DILocalVariable(name: "escaping", scope: !4071, file: !241, line: 405, type: !18)
!4078 = !DILocation(line: 405, column: 12, scope: !4071)
!4079 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !4071, file: !241, line: 406, type: !18)
!4080 = !DILocation(line: 406, column: 12, scope: !4071)
!4081 = !DILocation(line: 408, column: 11, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4071, file: !241, line: 408, column: 11)
!4083 = !DILocation(line: 409, column: 11, scope: !4082)
!4084 = !DILocation(line: 409, column: 14, scope: !4082)
!4085 = !DILocation(line: 409, column: 28, scope: !4082)
!4086 = !DILocation(line: 410, column: 11, scope: !4082)
!4087 = !DILocation(line: 410, column: 14, scope: !4082)
!4088 = !DILocation(line: 411, column: 11, scope: !4082)
!4089 = !DILocation(line: 411, column: 15, scope: !4082)
!4090 = !DILocation(line: 411, column: 19, scope: !4082)
!4091 = !DILocation(line: 411, column: 17, scope: !4082)
!4092 = !DILocation(line: 412, column: 19, scope: !4082)
!4093 = !DILocation(line: 412, column: 27, scope: !4082)
!4094 = !DILocation(line: 412, column: 39, scope: !4082)
!4095 = !DILocation(line: 412, column: 46, scope: !4082)
!4096 = !DILocation(line: 412, column: 44, scope: !4082)
!4097 = !DILocation(line: 416, column: 40, scope: !4082)
!4098 = !DILocation(line: 416, column: 32, scope: !4082)
!4099 = !DILocation(line: 416, column: 30, scope: !4082)
!4100 = !DILocation(line: 416, column: 48, scope: !4082)
!4101 = !DILocation(line: 412, column: 15, scope: !4082)
!4102 = !DILocation(line: 417, column: 11, scope: !4082)
!4103 = !DILocation(line: 417, column: 22, scope: !4082)
!4104 = !DILocation(line: 417, column: 28, scope: !4082)
!4105 = !DILocation(line: 417, column: 26, scope: !4082)
!4106 = !DILocation(line: 417, column: 31, scope: !4082)
!4107 = !DILocation(line: 417, column: 45, scope: !4082)
!4108 = !DILocation(line: 417, column: 14, scope: !4082)
!4109 = !DILocation(line: 417, column: 63, scope: !4082)
!4110 = !DILocation(line: 408, column: 11, scope: !4071)
!4111 = !DILocation(line: 419, column: 15, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4113, file: !241, line: 419, column: 15)
!4113 = distinct !DILexicalBlock(scope: !4082, file: !241, line: 418, column: 9)
!4114 = !DILocation(line: 419, column: 15, scope: !4113)
!4115 = !DILocation(line: 420, column: 13, scope: !4112)
!4116 = !DILocation(line: 421, column: 26, scope: !4113)
!4117 = !DILocation(line: 422, column: 9, scope: !4113)
!4118 = !DILocation(line: 424, column: 11, scope: !4071)
!4119 = !DILocation(line: 424, column: 15, scope: !4071)
!4120 = !DILocation(line: 424, column: 9, scope: !4071)
!4121 = !DILocation(line: 425, column: 15, scope: !4071)
!4122 = !DILocation(line: 425, column: 7, scope: !4071)
!4123 = !DILocation(line: 428, column: 15, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4125, file: !241, line: 428, column: 15)
!4125 = distinct !DILexicalBlock(scope: !4071, file: !241, line: 426, column: 9)
!4126 = !DILocation(line: 428, column: 15, scope: !4125)
!4127 = !DILocation(line: 430, column: 15, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4124, file: !241, line: 429, column: 13)
!4129 = !DILocation(line: 430, column: 15, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4131, file: !241, line: 430, column: 15)
!4131 = distinct !DILexicalBlock(scope: !4128, file: !241, line: 430, column: 15)
!4132 = !DILocation(line: 430, column: 15, scope: !4131)
!4133 = !DILocation(line: 430, column: 15, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4131, file: !241, line: 430, column: 15)
!4135 = !DILocation(line: 430, column: 15, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4134, file: !241, line: 430, column: 15)
!4137 = !DILocation(line: 430, column: 15, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4139, file: !241, line: 430, column: 15)
!4139 = distinct !DILexicalBlock(scope: !4136, file: !241, line: 430, column: 15)
!4140 = !DILocation(line: 430, column: 15, scope: !4139)
!4141 = !DILocation(line: 430, column: 15, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4143, file: !241, line: 430, column: 15)
!4143 = distinct !DILexicalBlock(scope: !4136, file: !241, line: 430, column: 15)
!4144 = !DILocation(line: 430, column: 15, scope: !4143)
!4145 = !DILocation(line: 430, column: 15, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4147, file: !241, line: 430, column: 15)
!4147 = distinct !DILexicalBlock(scope: !4136, file: !241, line: 430, column: 15)
!4148 = !DILocation(line: 430, column: 15, scope: !4147)
!4149 = !DILocation(line: 430, column: 15, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4151, file: !241, line: 430, column: 15)
!4151 = distinct !DILexicalBlock(scope: !4131, file: !241, line: 430, column: 15)
!4152 = !DILocation(line: 430, column: 15, scope: !4151)
!4153 = !DILocation(line: 437, column: 19, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4128, file: !241, line: 437, column: 19)
!4155 = !DILocation(line: 437, column: 33, scope: !4154)
!4156 = !DILocation(line: 438, column: 19, scope: !4154)
!4157 = !DILocation(line: 438, column: 22, scope: !4154)
!4158 = !DILocation(line: 438, column: 24, scope: !4154)
!4159 = !DILocation(line: 438, column: 30, scope: !4154)
!4160 = !DILocation(line: 438, column: 28, scope: !4154)
!4161 = !DILocation(line: 438, column: 38, scope: !4154)
!4162 = !DILocation(line: 438, column: 48, scope: !4154)
!4163 = !DILocation(line: 438, column: 52, scope: !4154)
!4164 = !DILocation(line: 438, column: 54, scope: !4154)
!4165 = !DILocation(line: 438, column: 45, scope: !4154)
!4166 = !DILocation(line: 438, column: 59, scope: !4154)
!4167 = !DILocation(line: 438, column: 62, scope: !4154)
!4168 = !DILocation(line: 438, column: 66, scope: !4154)
!4169 = !DILocation(line: 438, column: 68, scope: !4154)
!4170 = !DILocation(line: 438, column: 73, scope: !4154)
!4171 = !DILocation(line: 437, column: 19, scope: !4128)
!4172 = !DILocation(line: 440, column: 19, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4154, file: !241, line: 439, column: 17)
!4174 = !DILocation(line: 440, column: 19, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4176, file: !241, line: 440, column: 19)
!4176 = distinct !DILexicalBlock(scope: !4173, file: !241, line: 440, column: 19)
!4177 = !DILocation(line: 440, column: 19, scope: !4176)
!4178 = !DILocation(line: 441, column: 19, scope: !4173)
!4179 = !DILocation(line: 441, column: 19, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4181, file: !241, line: 441, column: 19)
!4181 = distinct !DILexicalBlock(scope: !4173, file: !241, line: 441, column: 19)
!4182 = !DILocation(line: 441, column: 19, scope: !4181)
!4183 = !DILocation(line: 442, column: 17, scope: !4173)
!4184 = !DILocation(line: 443, column: 17, scope: !4128)
!4185 = !DILocation(line: 448, column: 13, scope: !4128)
!4186 = !DILocation(line: 449, column: 20, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4124, file: !241, line: 449, column: 20)
!4188 = !DILocation(line: 449, column: 26, scope: !4187)
!4189 = !DILocation(line: 449, column: 20, scope: !4124)
!4190 = !DILocation(line: 450, column: 13, scope: !4187)
!4191 = !DILocation(line: 451, column: 11, scope: !4125)
!4192 = !DILocation(line: 454, column: 19, scope: !4125)
!4193 = !DILocation(line: 454, column: 11, scope: !4125)
!4194 = !DILocation(line: 457, column: 19, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4196, file: !241, line: 457, column: 19)
!4196 = distinct !DILexicalBlock(scope: !4125, file: !241, line: 455, column: 13)
!4197 = !DILocation(line: 457, column: 19, scope: !4196)
!4198 = !DILocation(line: 458, column: 17, scope: !4195)
!4199 = !DILocation(line: 459, column: 15, scope: !4196)
!4200 = !DILocation(line: 462, column: 20, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4196, file: !241, line: 462, column: 19)
!4202 = !DILocation(line: 462, column: 26, scope: !4201)
!4203 = !DILocation(line: 463, column: 19, scope: !4201)
!4204 = !DILocation(line: 463, column: 22, scope: !4201)
!4205 = !DILocation(line: 463, column: 24, scope: !4201)
!4206 = !DILocation(line: 463, column: 30, scope: !4201)
!4207 = !DILocation(line: 463, column: 28, scope: !4201)
!4208 = !DILocation(line: 463, column: 38, scope: !4201)
!4209 = !DILocation(line: 463, column: 41, scope: !4201)
!4210 = !DILocation(line: 463, column: 45, scope: !4201)
!4211 = !DILocation(line: 463, column: 47, scope: !4201)
!4212 = !DILocation(line: 463, column: 52, scope: !4201)
!4213 = !DILocation(line: 462, column: 19, scope: !4196)
!4214 = !DILocation(line: 464, column: 25, scope: !4201)
!4215 = !DILocation(line: 464, column: 29, scope: !4201)
!4216 = !DILocation(line: 464, column: 31, scope: !4201)
!4217 = !DILocation(line: 464, column: 17, scope: !4201)
!4218 = !DILocation(line: 471, column: 25, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4220, file: !241, line: 471, column: 25)
!4220 = distinct !DILexicalBlock(scope: !4201, file: !241, line: 465, column: 19)
!4221 = !DILocation(line: 471, column: 25, scope: !4220)
!4222 = !DILocation(line: 472, column: 23, scope: !4219)
!4223 = !DILocation(line: 473, column: 25, scope: !4220)
!4224 = !DILocation(line: 473, column: 29, scope: !4220)
!4225 = !DILocation(line: 473, column: 31, scope: !4220)
!4226 = !DILocation(line: 473, column: 23, scope: !4220)
!4227 = !DILocation(line: 474, column: 23, scope: !4220)
!4228 = !DILocation(line: 475, column: 21, scope: !4220)
!4229 = !DILocation(line: 475, column: 21, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4231, file: !241, line: 475, column: 21)
!4231 = distinct !DILexicalBlock(scope: !4220, file: !241, line: 475, column: 21)
!4232 = !DILocation(line: 475, column: 21, scope: !4231)
!4233 = !DILocation(line: 476, column: 21, scope: !4220)
!4234 = !DILocation(line: 476, column: 21, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4236, file: !241, line: 476, column: 21)
!4236 = distinct !DILexicalBlock(scope: !4220, file: !241, line: 476, column: 21)
!4237 = !DILocation(line: 476, column: 21, scope: !4236)
!4238 = !DILocation(line: 477, column: 21, scope: !4220)
!4239 = !DILocation(line: 477, column: 21, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4241, file: !241, line: 477, column: 21)
!4241 = distinct !DILexicalBlock(scope: !4220, file: !241, line: 477, column: 21)
!4242 = !DILocation(line: 477, column: 21, scope: !4241)
!4243 = !DILocation(line: 478, column: 21, scope: !4220)
!4244 = !DILocation(line: 478, column: 21, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4246, file: !241, line: 478, column: 21)
!4246 = distinct !DILexicalBlock(scope: !4220, file: !241, line: 478, column: 21)
!4247 = !DILocation(line: 478, column: 21, scope: !4246)
!4248 = !DILocation(line: 479, column: 21, scope: !4220)
!4249 = !DILocation(line: 482, column: 21, scope: !4220)
!4250 = !DILocation(line: 483, column: 19, scope: !4220)
!4251 = !DILocation(line: 484, column: 15, scope: !4196)
!4252 = !DILocation(line: 487, column: 15, scope: !4196)
!4253 = !DILocation(line: 489, column: 11, scope: !4125)
!4254 = !DILocation(line: 491, column: 24, scope: !4125)
!4255 = !DILocation(line: 491, column: 31, scope: !4125)
!4256 = !DILocation(line: 492, column: 24, scope: !4125)
!4257 = !DILocation(line: 492, column: 31, scope: !4125)
!4258 = !DILocation(line: 493, column: 24, scope: !4125)
!4259 = !DILocation(line: 493, column: 31, scope: !4125)
!4260 = !DILocation(line: 494, column: 24, scope: !4125)
!4261 = !DILocation(line: 494, column: 31, scope: !4125)
!4262 = !DILocation(line: 495, column: 24, scope: !4125)
!4263 = !DILocation(line: 495, column: 31, scope: !4125)
!4264 = !DILocation(line: 496, column: 24, scope: !4125)
!4265 = !DILocation(line: 496, column: 31, scope: !4125)
!4266 = !DILocation(line: 497, column: 24, scope: !4125)
!4267 = !DILocation(line: 497, column: 31, scope: !4125)
!4268 = !DILocation(line: 498, column: 26, scope: !4125)
!4269 = !DILocation(line: 498, column: 24, scope: !4125)
!4270 = !DILocation(line: 500, column: 15, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4125, file: !241, line: 500, column: 15)
!4272 = !DILocation(line: 500, column: 29, scope: !4271)
!4273 = !DILocation(line: 500, column: 15, scope: !4125)
!4274 = !DILocation(line: 502, column: 19, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4276, file: !241, line: 502, column: 19)
!4276 = distinct !DILexicalBlock(scope: !4271, file: !241, line: 501, column: 13)
!4277 = !DILocation(line: 502, column: 19, scope: !4276)
!4278 = !DILocation(line: 503, column: 17, scope: !4275)
!4279 = !DILocation(line: 504, column: 15, scope: !4276)
!4280 = !DILocation(line: 509, column: 15, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4125, file: !241, line: 509, column: 15)
!4282 = !DILocation(line: 509, column: 33, scope: !4281)
!4283 = !DILocation(line: 509, column: 36, scope: !4281)
!4284 = !DILocation(line: 509, column: 55, scope: !4281)
!4285 = !DILocation(line: 509, column: 58, scope: !4281)
!4286 = !DILocation(line: 509, column: 15, scope: !4125)
!4287 = !DILocation(line: 510, column: 13, scope: !4281)
!4288 = !DILabel(scope: !4125, name: "c_and_shell_escape", file: !241, line: 512)
!4289 = !DILocation(line: 512, column: 9, scope: !4125)
!4290 = !DILocation(line: 513, column: 15, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4125, file: !241, line: 513, column: 15)
!4292 = !DILocation(line: 513, column: 29, scope: !4291)
!4293 = !DILocation(line: 514, column: 15, scope: !4291)
!4294 = !DILocation(line: 514, column: 18, scope: !4291)
!4295 = !DILocation(line: 513, column: 15, scope: !4125)
!4296 = !DILocation(line: 515, column: 13, scope: !4291)
!4297 = !DILabel(scope: !4125, name: "c_escape", file: !241, line: 517)
!4298 = !DILocation(line: 517, column: 9, scope: !4125)
!4299 = !DILocation(line: 518, column: 15, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4125, file: !241, line: 518, column: 15)
!4301 = !DILocation(line: 518, column: 15, scope: !4125)
!4302 = !DILocation(line: 520, column: 19, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4300, file: !241, line: 519, column: 13)
!4304 = !DILocation(line: 520, column: 17, scope: !4303)
!4305 = !DILocation(line: 521, column: 15, scope: !4303)
!4306 = !DILocation(line: 523, column: 11, scope: !4125)
!4307 = !DILocation(line: 526, column: 18, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4125, file: !241, line: 526, column: 15)
!4309 = !DILocation(line: 526, column: 26, scope: !4308)
!4310 = !DILocation(line: 526, column: 15, scope: !4125)
!4311 = !DILocation(line: 526, column: 40, scope: !4308)
!4312 = !DILocation(line: 526, column: 47, scope: !4308)
!4313 = !DILocation(line: 526, column: 57, scope: !4308)
!4314 = !DILocation(line: 526, column: 65, scope: !4308)
!4315 = !DILocation(line: 527, column: 13, scope: !4308)
!4316 = !DILocation(line: 528, column: 11, scope: !4125)
!4317 = !DILocation(line: 530, column: 15, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4125, file: !241, line: 530, column: 15)
!4319 = !DILocation(line: 530, column: 17, scope: !4318)
!4320 = !DILocation(line: 530, column: 15, scope: !4125)
!4321 = !DILocation(line: 531, column: 13, scope: !4318)
!4322 = !DILocation(line: 532, column: 11, scope: !4125)
!4323 = !DILocation(line: 534, column: 36, scope: !4125)
!4324 = !DILocation(line: 535, column: 11, scope: !4125)
!4325 = !DILocation(line: 548, column: 15, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4125, file: !241, line: 548, column: 15)
!4327 = !DILocation(line: 548, column: 29, scope: !4326)
!4328 = !DILocation(line: 549, column: 15, scope: !4326)
!4329 = !DILocation(line: 549, column: 18, scope: !4326)
!4330 = !DILocation(line: 548, column: 15, scope: !4125)
!4331 = !DILocation(line: 550, column: 13, scope: !4326)
!4332 = !DILocation(line: 551, column: 11, scope: !4125)
!4333 = !DILocation(line: 554, column: 36, scope: !4125)
!4334 = !DILocation(line: 555, column: 36, scope: !4125)
!4335 = !DILocation(line: 556, column: 15, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4125, file: !241, line: 556, column: 15)
!4337 = !DILocation(line: 556, column: 29, scope: !4336)
!4338 = !DILocation(line: 556, column: 15, scope: !4125)
!4339 = !DILocation(line: 558, column: 19, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4341, file: !241, line: 558, column: 19)
!4341 = distinct !DILexicalBlock(scope: !4336, file: !241, line: 557, column: 13)
!4342 = !DILocation(line: 558, column: 19, scope: !4341)
!4343 = !DILocation(line: 559, column: 17, scope: !4340)
!4344 = !DILocation(line: 561, column: 19, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4341, file: !241, line: 561, column: 19)
!4346 = !DILocation(line: 561, column: 30, scope: !4345)
!4347 = !DILocation(line: 561, column: 35, scope: !4345)
!4348 = !DILocation(line: 561, column: 19, scope: !4341)
!4349 = !DILocation(line: 566, column: 37, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4345, file: !241, line: 562, column: 17)
!4351 = !DILocation(line: 566, column: 35, scope: !4350)
!4352 = !DILocation(line: 567, column: 30, scope: !4350)
!4353 = !DILocation(line: 568, column: 17, scope: !4350)
!4354 = !DILocation(line: 570, column: 15, scope: !4341)
!4355 = !DILocation(line: 570, column: 15, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4357, file: !241, line: 570, column: 15)
!4357 = distinct !DILexicalBlock(scope: !4341, file: !241, line: 570, column: 15)
!4358 = !DILocation(line: 570, column: 15, scope: !4357)
!4359 = !DILocation(line: 571, column: 15, scope: !4341)
!4360 = !DILocation(line: 571, column: 15, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4362, file: !241, line: 571, column: 15)
!4362 = distinct !DILexicalBlock(scope: !4341, file: !241, line: 571, column: 15)
!4363 = !DILocation(line: 571, column: 15, scope: !4362)
!4364 = !DILocation(line: 572, column: 15, scope: !4341)
!4365 = !DILocation(line: 572, column: 15, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4367, file: !241, line: 572, column: 15)
!4367 = distinct !DILexicalBlock(scope: !4341, file: !241, line: 572, column: 15)
!4368 = !DILocation(line: 572, column: 15, scope: !4367)
!4369 = !DILocation(line: 573, column: 40, scope: !4341)
!4370 = !DILocation(line: 574, column: 13, scope: !4341)
!4371 = !DILocation(line: 575, column: 11, scope: !4125)
!4372 = !DILocation(line: 599, column: 36, scope: !4125)
!4373 = !DILocation(line: 600, column: 11, scope: !4125)
!4374 = !DILocalVariable(name: "m", scope: !4375, file: !241, line: 610, type: !110)
!4375 = distinct !DILexicalBlock(scope: !4125, file: !241, line: 608, column: 11)
!4376 = !DILocation(line: 610, column: 20, scope: !4375)
!4377 = !DILocalVariable(name: "printable", scope: !4375, file: !241, line: 612, type: !18)
!4378 = !DILocation(line: 612, column: 18, scope: !4375)
!4379 = !DILocation(line: 614, column: 17, scope: !4380)
!4380 = distinct !DILexicalBlock(scope: !4375, file: !241, line: 614, column: 17)
!4381 = !DILocation(line: 614, column: 17, scope: !4375)
!4382 = !DILocation(line: 616, column: 19, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4380, file: !241, line: 615, column: 15)
!4384 = !DILocation(line: 617, column: 29, scope: !4383)
!4385 = !DILocation(line: 617, column: 41, scope: !4383)
!4386 = !DILocation(line: 617, column: 27, scope: !4383)
!4387 = !DILocation(line: 618, column: 15, scope: !4383)
!4388 = !DILocalVariable(name: "mbstate", scope: !4389, file: !241, line: 621, type: !4390)
!4389 = distinct !DILexicalBlock(scope: !4380, file: !241, line: 620, column: 15)
!4390 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !4391, line: 6, baseType: !4392)
!4391 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h", directory: "")
!4392 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !4393, line: 21, baseType: !4394)
!4393 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", directory: "")
!4394 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4393, line: 13, size: 64, elements: !4395)
!4395 = !{!4396, !4397}
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !4394, file: !4393, line: 15, baseType: !53, size: 32)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !4394, file: !4393, line: 20, baseType: !4398, size: 32, offset: 32)
!4398 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4394, file: !4393, line: 16, size: 32, elements: !4399)
!4399 = !{!4400, !4401}
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !4398, file: !4393, line: 18, baseType: !180, size: 32)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !4398, file: !4393, line: 19, baseType: !82, size: 32)
!4402 = !DILocation(line: 621, column: 27, scope: !4389)
!4403 = !DILocation(line: 622, column: 17, scope: !4389)
!4404 = !DILocation(line: 624, column: 19, scope: !4389)
!4405 = !DILocation(line: 625, column: 27, scope: !4389)
!4406 = !DILocation(line: 626, column: 21, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4389, file: !241, line: 626, column: 21)
!4408 = !DILocation(line: 626, column: 29, scope: !4407)
!4409 = !DILocation(line: 626, column: 21, scope: !4389)
!4410 = !DILocation(line: 627, column: 37, scope: !4407)
!4411 = !DILocation(line: 627, column: 29, scope: !4407)
!4412 = !DILocation(line: 627, column: 27, scope: !4407)
!4413 = !DILocation(line: 627, column: 19, scope: !4407)
!4414 = !DILocation(line: 629, column: 17, scope: !4389)
!4415 = !DILocalVariable(name: "w", scope: !4416, file: !241, line: 631, type: !4417)
!4416 = distinct !DILexicalBlock(scope: !4389, file: !241, line: 630, column: 19)
!4417 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !111, line: 74, baseType: !53)
!4418 = !DILocation(line: 631, column: 29, scope: !4416)
!4419 = !DILocalVariable(name: "bytes", scope: !4416, file: !241, line: 632, type: !110)
!4420 = !DILocation(line: 632, column: 28, scope: !4416)
!4421 = !DILocation(line: 632, column: 50, scope: !4416)
!4422 = !DILocation(line: 632, column: 54, scope: !4416)
!4423 = !DILocation(line: 632, column: 58, scope: !4416)
!4424 = !DILocation(line: 632, column: 56, scope: !4416)
!4425 = !DILocation(line: 633, column: 45, scope: !4416)
!4426 = !DILocation(line: 633, column: 56, scope: !4416)
!4427 = !DILocation(line: 633, column: 60, scope: !4416)
!4428 = !DILocation(line: 633, column: 58, scope: !4416)
!4429 = !DILocation(line: 633, column: 53, scope: !4416)
!4430 = !DILocation(line: 632, column: 36, scope: !4416)
!4431 = !DILocation(line: 634, column: 25, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4416, file: !241, line: 634, column: 25)
!4433 = !DILocation(line: 634, column: 31, scope: !4432)
!4434 = !DILocation(line: 634, column: 25, scope: !4416)
!4435 = !DILocation(line: 635, column: 23, scope: !4432)
!4436 = !DILocation(line: 636, column: 30, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4432, file: !241, line: 636, column: 30)
!4438 = !DILocation(line: 636, column: 36, scope: !4437)
!4439 = !DILocation(line: 636, column: 30, scope: !4432)
!4440 = !DILocation(line: 638, column: 35, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4437, file: !241, line: 637, column: 23)
!4442 = !DILocation(line: 639, column: 25, scope: !4441)
!4443 = !DILocation(line: 641, column: 30, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4437, file: !241, line: 641, column: 30)
!4445 = !DILocation(line: 641, column: 36, scope: !4444)
!4446 = !DILocation(line: 641, column: 30, scope: !4437)
!4447 = !DILocation(line: 643, column: 35, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4444, file: !241, line: 642, column: 23)
!4449 = !DILocation(line: 644, column: 25, scope: !4448)
!4450 = !DILocation(line: 644, column: 32, scope: !4448)
!4451 = !DILocation(line: 644, column: 36, scope: !4448)
!4452 = !DILocation(line: 644, column: 34, scope: !4448)
!4453 = !DILocation(line: 644, column: 40, scope: !4448)
!4454 = !DILocation(line: 644, column: 38, scope: !4448)
!4455 = !DILocation(line: 644, column: 48, scope: !4448)
!4456 = !DILocation(line: 644, column: 51, scope: !4448)
!4457 = !DILocation(line: 644, column: 55, scope: !4448)
!4458 = !DILocation(line: 644, column: 59, scope: !4448)
!4459 = !DILocation(line: 644, column: 57, scope: !4448)
!4460 = !DILocation(line: 0, scope: !4448)
!4461 = !DILocation(line: 645, column: 28, scope: !4448)
!4462 = distinct !{!4462, !4449, !4461}
!4463 = !DILocation(line: 646, column: 25, scope: !4448)
!4464 = !DILocation(line: 654, column: 44, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4466, file: !241, line: 654, column: 29)
!4466 = distinct !DILexicalBlock(scope: !4444, file: !241, line: 649, column: 23)
!4467 = !DILocation(line: 655, column: 29, scope: !4465)
!4468 = !DILocation(line: 655, column: 32, scope: !4465)
!4469 = !DILocation(line: 655, column: 46, scope: !4465)
!4470 = !DILocation(line: 654, column: 29, scope: !4466)
!4471 = !DILocalVariable(name: "j", scope: !4472, file: !241, line: 657, type: !110)
!4472 = distinct !DILexicalBlock(scope: !4465, file: !241, line: 656, column: 27)
!4473 = !DILocation(line: 657, column: 36, scope: !4472)
!4474 = !DILocation(line: 658, column: 36, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4472, file: !241, line: 658, column: 29)
!4476 = !DILocation(line: 658, column: 34, scope: !4475)
!4477 = !DILocation(line: 658, column: 41, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4475, file: !241, line: 658, column: 29)
!4479 = !DILocation(line: 658, column: 45, scope: !4478)
!4480 = !DILocation(line: 658, column: 43, scope: !4478)
!4481 = !DILocation(line: 658, column: 29, scope: !4475)
!4482 = !DILocation(line: 659, column: 39, scope: !4478)
!4483 = !DILocation(line: 659, column: 43, scope: !4478)
!4484 = !DILocation(line: 659, column: 47, scope: !4478)
!4485 = !DILocation(line: 659, column: 45, scope: !4478)
!4486 = !DILocation(line: 659, column: 51, scope: !4478)
!4487 = !DILocation(line: 659, column: 49, scope: !4478)
!4488 = !DILocation(line: 659, column: 31, scope: !4478)
!4489 = !DILocation(line: 663, column: 35, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4478, file: !241, line: 660, column: 33)
!4491 = !DILocation(line: 666, column: 35, scope: !4490)
!4492 = !DILocation(line: 667, column: 33, scope: !4490)
!4493 = !DILocation(line: 658, column: 53, scope: !4478)
!4494 = !DILocation(line: 658, column: 29, scope: !4478)
!4495 = distinct !{!4495, !4481, !4496}
!4496 = !DILocation(line: 667, column: 33, scope: !4475)
!4497 = !DILocation(line: 668, column: 27, scope: !4472)
!4498 = !DILocation(line: 670, column: 41, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4466, file: !241, line: 670, column: 29)
!4500 = !DILocation(line: 670, column: 31, scope: !4499)
!4501 = !DILocation(line: 670, column: 29, scope: !4466)
!4502 = !DILocation(line: 671, column: 37, scope: !4499)
!4503 = !DILocation(line: 671, column: 27, scope: !4499)
!4504 = !DILocation(line: 672, column: 30, scope: !4466)
!4505 = !DILocation(line: 672, column: 27, scope: !4466)
!4506 = !DILocation(line: 674, column: 19, scope: !4416)
!4507 = !DILocation(line: 675, column: 26, scope: !4389)
!4508 = !DILocation(line: 675, column: 24, scope: !4389)
!4509 = distinct !{!4509, !4414, !4510}
!4510 = !DILocation(line: 675, column: 44, scope: !4389)
!4511 = !DILocation(line: 678, column: 40, scope: !4375)
!4512 = !DILocation(line: 678, column: 38, scope: !4375)
!4513 = !DILocation(line: 680, column: 21, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4375, file: !241, line: 680, column: 17)
!4515 = !DILocation(line: 680, column: 19, scope: !4514)
!4516 = !DILocation(line: 680, column: 23, scope: !4514)
!4517 = !DILocation(line: 680, column: 27, scope: !4514)
!4518 = !DILocation(line: 680, column: 45, scope: !4514)
!4519 = !DILocation(line: 680, column: 50, scope: !4514)
!4520 = !DILocation(line: 680, column: 17, scope: !4375)
!4521 = !DILocalVariable(name: "ilim", scope: !4522, file: !241, line: 684, type: !110)
!4522 = distinct !DILexicalBlock(scope: !4514, file: !241, line: 681, column: 15)
!4523 = !DILocation(line: 684, column: 24, scope: !4522)
!4524 = !DILocation(line: 684, column: 31, scope: !4522)
!4525 = !DILocation(line: 684, column: 35, scope: !4522)
!4526 = !DILocation(line: 684, column: 33, scope: !4522)
!4527 = !DILocation(line: 686, column: 17, scope: !4522)
!4528 = !DILocation(line: 688, column: 25, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4530, file: !241, line: 688, column: 25)
!4530 = distinct !DILexicalBlock(scope: !4531, file: !241, line: 687, column: 19)
!4531 = distinct !DILexicalBlock(scope: !4532, file: !241, line: 686, column: 17)
!4532 = distinct !DILexicalBlock(scope: !4522, file: !241, line: 686, column: 17)
!4533 = !DILocation(line: 688, column: 43, scope: !4529)
!4534 = !DILocation(line: 688, column: 48, scope: !4529)
!4535 = !DILocation(line: 688, column: 25, scope: !4530)
!4536 = !DILocation(line: 690, column: 25, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4529, file: !241, line: 689, column: 23)
!4538 = !DILocation(line: 690, column: 25, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4540, file: !241, line: 690, column: 25)
!4540 = distinct !DILexicalBlock(scope: !4537, file: !241, line: 690, column: 25)
!4541 = !DILocation(line: 690, column: 25, scope: !4540)
!4542 = !DILocation(line: 690, column: 25, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4540, file: !241, line: 690, column: 25)
!4544 = !DILocation(line: 690, column: 25, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4543, file: !241, line: 690, column: 25)
!4546 = !DILocation(line: 690, column: 25, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4548, file: !241, line: 690, column: 25)
!4548 = distinct !DILexicalBlock(scope: !4545, file: !241, line: 690, column: 25)
!4549 = !DILocation(line: 690, column: 25, scope: !4548)
!4550 = !DILocation(line: 690, column: 25, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4552, file: !241, line: 690, column: 25)
!4552 = distinct !DILexicalBlock(scope: !4545, file: !241, line: 690, column: 25)
!4553 = !DILocation(line: 690, column: 25, scope: !4552)
!4554 = !DILocation(line: 690, column: 25, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4556, file: !241, line: 690, column: 25)
!4556 = distinct !DILexicalBlock(scope: !4545, file: !241, line: 690, column: 25)
!4557 = !DILocation(line: 690, column: 25, scope: !4556)
!4558 = !DILocation(line: 690, column: 25, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4560, file: !241, line: 690, column: 25)
!4560 = distinct !DILexicalBlock(scope: !4540, file: !241, line: 690, column: 25)
!4561 = !DILocation(line: 690, column: 25, scope: !4560)
!4562 = !DILocation(line: 691, column: 25, scope: !4537)
!4563 = !DILocation(line: 691, column: 25, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4565, file: !241, line: 691, column: 25)
!4565 = distinct !DILexicalBlock(scope: !4537, file: !241, line: 691, column: 25)
!4566 = !DILocation(line: 691, column: 25, scope: !4565)
!4567 = !DILocation(line: 692, column: 25, scope: !4537)
!4568 = !DILocation(line: 692, column: 25, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4570, file: !241, line: 692, column: 25)
!4570 = distinct !DILexicalBlock(scope: !4537, file: !241, line: 692, column: 25)
!4571 = !DILocation(line: 692, column: 25, scope: !4570)
!4572 = !DILocation(line: 693, column: 36, scope: !4537)
!4573 = !DILocation(line: 693, column: 38, scope: !4537)
!4574 = !DILocation(line: 693, column: 33, scope: !4537)
!4575 = !DILocation(line: 693, column: 29, scope: !4537)
!4576 = !DILocation(line: 693, column: 27, scope: !4537)
!4577 = !DILocation(line: 694, column: 23, scope: !4537)
!4578 = !DILocation(line: 695, column: 30, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4529, file: !241, line: 695, column: 30)
!4580 = !DILocation(line: 695, column: 30, scope: !4529)
!4581 = !DILocation(line: 697, column: 25, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4579, file: !241, line: 696, column: 23)
!4583 = !DILocation(line: 697, column: 25, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4585, file: !241, line: 697, column: 25)
!4585 = distinct !DILexicalBlock(scope: !4582, file: !241, line: 697, column: 25)
!4586 = !DILocation(line: 697, column: 25, scope: !4585)
!4587 = !DILocation(line: 698, column: 40, scope: !4582)
!4588 = !DILocation(line: 699, column: 23, scope: !4582)
!4589 = !DILocation(line: 700, column: 25, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4530, file: !241, line: 700, column: 25)
!4591 = !DILocation(line: 700, column: 33, scope: !4590)
!4592 = !DILocation(line: 700, column: 35, scope: !4590)
!4593 = !DILocation(line: 700, column: 30, scope: !4590)
!4594 = !DILocation(line: 700, column: 25, scope: !4530)
!4595 = !DILocation(line: 701, column: 23, scope: !4590)
!4596 = !DILocation(line: 702, column: 21, scope: !4530)
!4597 = !DILocation(line: 702, column: 21, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4599, file: !241, line: 702, column: 21)
!4599 = distinct !DILexicalBlock(scope: !4530, file: !241, line: 702, column: 21)
!4600 = !DILocation(line: 702, column: 21, scope: !4599)
!4601 = !DILocation(line: 702, column: 21, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4598, file: !241, line: 702, column: 21)
!4603 = !DILocation(line: 702, column: 21, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4605, file: !241, line: 702, column: 21)
!4605 = distinct !DILexicalBlock(scope: !4602, file: !241, line: 702, column: 21)
!4606 = !DILocation(line: 702, column: 21, scope: !4605)
!4607 = !DILocation(line: 702, column: 21, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4609, file: !241, line: 702, column: 21)
!4609 = distinct !DILexicalBlock(scope: !4602, file: !241, line: 702, column: 21)
!4610 = !DILocation(line: 702, column: 21, scope: !4609)
!4611 = !DILocation(line: 703, column: 21, scope: !4530)
!4612 = !DILocation(line: 703, column: 21, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4614, file: !241, line: 703, column: 21)
!4614 = distinct !DILexicalBlock(scope: !4530, file: !241, line: 703, column: 21)
!4615 = !DILocation(line: 703, column: 21, scope: !4614)
!4616 = !DILocation(line: 704, column: 25, scope: !4530)
!4617 = !DILocation(line: 704, column: 29, scope: !4530)
!4618 = !DILocation(line: 704, column: 23, scope: !4530)
!4619 = !DILocation(line: 686, column: 17, scope: !4531)
!4620 = distinct !{!4620, !4621, !4622}
!4621 = !DILocation(line: 686, column: 17, scope: !4532)
!4622 = !DILocation(line: 705, column: 19, scope: !4532)
!4623 = !DILocation(line: 707, column: 17, scope: !4522)
!4624 = !DILocation(line: 710, column: 9, scope: !4125)
!4625 = !DILocation(line: 712, column: 16, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4071, file: !241, line: 712, column: 11)
!4627 = !DILocation(line: 712, column: 34, scope: !4626)
!4628 = !DILocation(line: 712, column: 37, scope: !4626)
!4629 = !DILocation(line: 712, column: 51, scope: !4626)
!4630 = !DILocation(line: 713, column: 15, scope: !4626)
!4631 = !DILocation(line: 713, column: 18, scope: !4626)
!4632 = !DILocation(line: 714, column: 14, scope: !4626)
!4633 = !DILocation(line: 714, column: 17, scope: !4626)
!4634 = !DILocation(line: 715, column: 14, scope: !4626)
!4635 = !DILocation(line: 715, column: 17, scope: !4626)
!4636 = !DILocation(line: 715, column: 33, scope: !4626)
!4637 = !DILocation(line: 715, column: 35, scope: !4626)
!4638 = !DILocation(line: 715, column: 51, scope: !4626)
!4639 = !DILocation(line: 715, column: 53, scope: !4626)
!4640 = !DILocation(line: 715, column: 47, scope: !4626)
!4641 = !DILocation(line: 715, column: 65, scope: !4626)
!4642 = !DILocation(line: 716, column: 11, scope: !4626)
!4643 = !DILocation(line: 716, column: 15, scope: !4626)
!4644 = !DILocation(line: 712, column: 11, scope: !4071)
!4645 = !DILocation(line: 717, column: 9, scope: !4626)
!4646 = !DILabel(scope: !4071, name: "store_escape", file: !241, line: 719)
!4647 = !DILocation(line: 719, column: 5, scope: !4071)
!4648 = !DILocation(line: 720, column: 7, scope: !4071)
!4649 = !DILocation(line: 720, column: 7, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4651, file: !241, line: 720, column: 7)
!4651 = distinct !DILexicalBlock(scope: !4071, file: !241, line: 720, column: 7)
!4652 = !DILocation(line: 720, column: 7, scope: !4651)
!4653 = !DILocation(line: 720, column: 7, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4651, file: !241, line: 720, column: 7)
!4655 = !DILocation(line: 720, column: 7, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4654, file: !241, line: 720, column: 7)
!4657 = !DILocation(line: 720, column: 7, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4659, file: !241, line: 720, column: 7)
!4659 = distinct !DILexicalBlock(scope: !4656, file: !241, line: 720, column: 7)
!4660 = !DILocation(line: 720, column: 7, scope: !4659)
!4661 = !DILocation(line: 720, column: 7, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4663, file: !241, line: 720, column: 7)
!4663 = distinct !DILexicalBlock(scope: !4656, file: !241, line: 720, column: 7)
!4664 = !DILocation(line: 720, column: 7, scope: !4663)
!4665 = !DILocation(line: 720, column: 7, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4667, file: !241, line: 720, column: 7)
!4667 = distinct !DILexicalBlock(scope: !4656, file: !241, line: 720, column: 7)
!4668 = !DILocation(line: 720, column: 7, scope: !4667)
!4669 = !DILocation(line: 720, column: 7, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4671, file: !241, line: 720, column: 7)
!4671 = distinct !DILexicalBlock(scope: !4651, file: !241, line: 720, column: 7)
!4672 = !DILocation(line: 720, column: 7, scope: !4671)
!4673 = !DILabel(scope: !4071, name: "store_c", file: !241, line: 722)
!4674 = !DILocation(line: 722, column: 5, scope: !4071)
!4675 = !DILocation(line: 723, column: 7, scope: !4071)
!4676 = !DILocation(line: 723, column: 7, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4678, file: !241, line: 723, column: 7)
!4678 = distinct !DILexicalBlock(scope: !4071, file: !241, line: 723, column: 7)
!4679 = !DILocation(line: 723, column: 7, scope: !4678)
!4680 = !DILocation(line: 723, column: 7, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4677, file: !241, line: 723, column: 7)
!4682 = !DILocation(line: 723, column: 7, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4684, file: !241, line: 723, column: 7)
!4684 = distinct !DILexicalBlock(scope: !4681, file: !241, line: 723, column: 7)
!4685 = !DILocation(line: 723, column: 7, scope: !4684)
!4686 = !DILocation(line: 723, column: 7, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4688, file: !241, line: 723, column: 7)
!4688 = distinct !DILexicalBlock(scope: !4681, file: !241, line: 723, column: 7)
!4689 = !DILocation(line: 723, column: 7, scope: !4688)
!4690 = !DILocation(line: 724, column: 7, scope: !4071)
!4691 = !DILocation(line: 724, column: 7, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4693, file: !241, line: 724, column: 7)
!4693 = distinct !DILexicalBlock(scope: !4071, file: !241, line: 724, column: 7)
!4694 = !DILocation(line: 724, column: 7, scope: !4693)
!4695 = !DILocation(line: 726, column: 13, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4071, file: !241, line: 726, column: 11)
!4697 = !DILocation(line: 726, column: 11, scope: !4071)
!4698 = !DILocation(line: 727, column: 38, scope: !4696)
!4699 = !DILocation(line: 727, column: 9, scope: !4696)
!4700 = !DILocation(line: 728, column: 5, scope: !4071)
!4701 = !DILocation(line: 400, column: 75, scope: !4060)
!4702 = !DILocation(line: 400, column: 3, scope: !4060)
!4703 = distinct !{!4703, !4069, !4704}
!4704 = !DILocation(line: 728, column: 5, scope: !4057)
!4705 = !DILocation(line: 730, column: 7, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !3917, file: !241, line: 730, column: 7)
!4707 = !DILocation(line: 730, column: 11, scope: !4706)
!4708 = !DILocation(line: 730, column: 16, scope: !4706)
!4709 = !DILocation(line: 730, column: 19, scope: !4706)
!4710 = !DILocation(line: 730, column: 33, scope: !4706)
!4711 = !DILocation(line: 731, column: 7, scope: !4706)
!4712 = !DILocation(line: 731, column: 10, scope: !4706)
!4713 = !DILocation(line: 730, column: 7, scope: !3917)
!4714 = !DILocation(line: 732, column: 5, scope: !4706)
!4715 = !DILocation(line: 738, column: 7, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !3917, file: !241, line: 738, column: 7)
!4717 = !DILocation(line: 738, column: 21, scope: !4716)
!4718 = !DILocation(line: 738, column: 51, scope: !4716)
!4719 = !DILocation(line: 738, column: 56, scope: !4716)
!4720 = !DILocation(line: 739, column: 7, scope: !4716)
!4721 = !DILocation(line: 739, column: 10, scope: !4716)
!4722 = !DILocation(line: 738, column: 7, scope: !3917)
!4723 = !DILocation(line: 741, column: 11, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4725, file: !241, line: 741, column: 11)
!4725 = distinct !DILexicalBlock(scope: !4716, file: !241, line: 740, column: 5)
!4726 = !DILocation(line: 741, column: 11, scope: !4725)
!4727 = !DILocation(line: 742, column: 42, scope: !4724)
!4728 = !DILocation(line: 742, column: 50, scope: !4724)
!4729 = !DILocation(line: 742, column: 67, scope: !4724)
!4730 = !DILocation(line: 742, column: 72, scope: !4724)
!4731 = !DILocation(line: 744, column: 42, scope: !4724)
!4732 = !DILocation(line: 744, column: 49, scope: !4724)
!4733 = !DILocation(line: 745, column: 42, scope: !4724)
!4734 = !DILocation(line: 745, column: 54, scope: !4724)
!4735 = !DILocation(line: 742, column: 16, scope: !4724)
!4736 = !DILocation(line: 742, column: 9, scope: !4724)
!4737 = !DILocation(line: 746, column: 18, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4724, file: !241, line: 746, column: 16)
!4739 = !DILocation(line: 746, column: 29, scope: !4738)
!4740 = !DILocation(line: 746, column: 32, scope: !4738)
!4741 = !DILocation(line: 746, column: 16, scope: !4724)
!4742 = !DILocation(line: 749, column: 24, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4738, file: !241, line: 747, column: 9)
!4744 = !DILocation(line: 749, column: 22, scope: !4743)
!4745 = !DILocation(line: 750, column: 15, scope: !4743)
!4746 = !DILocation(line: 751, column: 11, scope: !4743)
!4747 = !DILocation(line: 753, column: 5, scope: !4725)
!4748 = !DILocation(line: 755, column: 7, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !3917, file: !241, line: 755, column: 7)
!4750 = !DILocation(line: 755, column: 20, scope: !4749)
!4751 = !DILocation(line: 755, column: 24, scope: !4749)
!4752 = !DILocation(line: 755, column: 7, scope: !3917)
!4753 = !DILocation(line: 756, column: 5, scope: !4749)
!4754 = !DILocation(line: 756, column: 13, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4756, file: !241, line: 756, column: 5)
!4756 = distinct !DILexicalBlock(scope: !4749, file: !241, line: 756, column: 5)
!4757 = !DILocation(line: 756, column: 12, scope: !4755)
!4758 = !DILocation(line: 756, column: 5, scope: !4756)
!4759 = !DILocation(line: 757, column: 7, scope: !4755)
!4760 = !DILocation(line: 757, column: 7, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4762, file: !241, line: 757, column: 7)
!4762 = distinct !DILexicalBlock(scope: !4755, file: !241, line: 757, column: 7)
!4763 = !DILocation(line: 757, column: 7, scope: !4762)
!4764 = !DILocation(line: 756, column: 39, scope: !4755)
!4765 = !DILocation(line: 756, column: 5, scope: !4755)
!4766 = distinct !{!4766, !4758, !4767}
!4767 = !DILocation(line: 757, column: 7, scope: !4756)
!4768 = !DILocation(line: 759, column: 7, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !3917, file: !241, line: 759, column: 7)
!4770 = !DILocation(line: 759, column: 13, scope: !4769)
!4771 = !DILocation(line: 759, column: 11, scope: !4769)
!4772 = !DILocation(line: 759, column: 7, scope: !3917)
!4773 = !DILocation(line: 760, column: 5, scope: !4769)
!4774 = !DILocation(line: 760, column: 12, scope: !4769)
!4775 = !DILocation(line: 760, column: 17, scope: !4769)
!4776 = !DILocation(line: 761, column: 10, scope: !3917)
!4777 = !DILocation(line: 761, column: 3, scope: !3917)
!4778 = !DILabel(scope: !3917, name: "force_outer_quoting_style", file: !241, line: 763)
!4779 = !DILocation(line: 763, column: 2, scope: !3917)
!4780 = !DILocation(line: 766, column: 7, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !3917, file: !241, line: 766, column: 7)
!4782 = !DILocation(line: 766, column: 21, scope: !4781)
!4783 = !DILocation(line: 766, column: 51, scope: !4781)
!4784 = !DILocation(line: 766, column: 54, scope: !4781)
!4785 = !DILocation(line: 766, column: 7, scope: !3917)
!4786 = !DILocation(line: 767, column: 19, scope: !4781)
!4787 = !DILocation(line: 767, column: 5, scope: !4781)
!4788 = !DILocation(line: 768, column: 36, scope: !3917)
!4789 = !DILocation(line: 768, column: 44, scope: !3917)
!4790 = !DILocation(line: 768, column: 56, scope: !3917)
!4791 = !DILocation(line: 768, column: 61, scope: !3917)
!4792 = !DILocation(line: 769, column: 36, scope: !3917)
!4793 = !DILocation(line: 770, column: 36, scope: !3917)
!4794 = !DILocation(line: 770, column: 42, scope: !3917)
!4795 = !DILocation(line: 771, column: 36, scope: !3917)
!4796 = !DILocation(line: 771, column: 48, scope: !3917)
!4797 = !DILocation(line: 768, column: 10, scope: !3917)
!4798 = !DILocation(line: 768, column: 3, scope: !3917)
!4799 = !DILocation(line: 772, column: 1, scope: !3917)
!4800 = !DILocalVariable(name: "buffer", arg: 1, scope: !4801, file: !241, line: 256, type: !6)
!4801 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !241, file: !241, line: 256, type: !3918, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4802, retainedNodes: !4)
!4802 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !4803, nameTableKind: None)
!4803 = !{!4804, !4806, !4808, !4817, !4819, !4821, !4828, !4830}
!4804 = !DIGlobalVariableExpression(var: !4805, expr: !DIExpression())
!4805 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !4802, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!4806 = !DIGlobalVariableExpression(var: !4807, expr: !DIExpression())
!4807 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !4802, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!4808 = !DIGlobalVariableExpression(var: !4809, expr: !DIExpression())
!4809 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !4802, file: !241, line: 1052, type: !4810, isLocal: false, isDefinition: true)
!4810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !4811)
!4811 = !{!4812, !4813, !4814, !4815, !4816}
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !4810, file: !241, line: 68, baseType: !223, size: 32)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4810, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !4810, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !4810, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !4810, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!4817 = !DIGlobalVariableExpression(var: !4818, expr: !DIExpression())
!4818 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !4802, file: !241, line: 116, type: !4810, isLocal: true, isDefinition: true)
!4819 = !DIGlobalVariableExpression(var: !4820, expr: !DIExpression())
!4820 = distinct !DIGlobalVariable(name: "slot0", scope: !4802, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!4821 = !DIGlobalVariableExpression(var: !4822, expr: !DIExpression())
!4822 = distinct !DIGlobalVariable(name: "slotvec", scope: !4802, file: !241, line: 845, type: !4823, isLocal: true, isDefinition: true)
!4823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4824, size: 64)
!4824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !4825)
!4825 = !{!4826, !4827}
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4824, file: !241, line: 836, baseType: !110, size: 64)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4824, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!4828 = !DIGlobalVariableExpression(var: !4829, expr: !DIExpression())
!4829 = distinct !DIGlobalVariable(name: "nslots", scope: !4802, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!4830 = !DIGlobalVariableExpression(var: !4831, expr: !DIExpression())
!4831 = distinct !DIGlobalVariable(name: "slotvec0", scope: !4802, file: !241, line: 844, type: !4824, isLocal: true, isDefinition: true)
!4832 = !DILocalVariable(name: "buffersize", arg: 2, scope: !4801, file: !241, line: 256, type: !110)
!4833 = !DILocalVariable(name: "arg", arg: 3, scope: !4801, file: !241, line: 257, type: !49)
!4834 = !DILocalVariable(name: "argsize", arg: 4, scope: !4801, file: !241, line: 257, type: !110)
!4835 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !4801, file: !241, line: 258, type: !223)
!4836 = !DILocalVariable(name: "flags", arg: 6, scope: !4801, file: !241, line: 258, type: !53)
!4837 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !4801, file: !241, line: 259, type: !3920)
!4838 = !DILocalVariable(name: "left_quote", arg: 8, scope: !4801, file: !241, line: 260, type: !49)
!4839 = !DILocalVariable(name: "right_quote", arg: 9, scope: !4801, file: !241, line: 261, type: !49)
!4840 = !DILocalVariable(name: "i", scope: !4801, file: !241, line: 263, type: !110)
!4841 = !DILocalVariable(name: "len", scope: !4801, file: !241, line: 264, type: !110)
!4842 = !DILocalVariable(name: "orig_buffersize", scope: !4801, file: !241, line: 265, type: !110)
!4843 = !DILocalVariable(name: "quote_string", scope: !4801, file: !241, line: 266, type: !49)
!4844 = !DILocalVariable(name: "quote_string_len", scope: !4801, file: !241, line: 267, type: !110)
!4845 = !DILocalVariable(name: "backslash_escapes", scope: !4801, file: !241, line: 268, type: !18)
!4846 = !DILocalVariable(name: "unibyte_locale", scope: !4801, file: !241, line: 269, type: !18)
!4847 = !DILocalVariable(name: "elide_outer_quotes", scope: !4801, file: !241, line: 270, type: !18)
!4848 = !DILocalVariable(name: "pending_shell_escape_end", scope: !4801, file: !241, line: 271, type: !18)
!4849 = !DILocalVariable(name: "encountered_single_quote", scope: !4801, file: !241, line: 272, type: !18)
!4850 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !4801, file: !241, line: 273, type: !18)
!4851 = !DILocalVariable(name: "escaping", scope: !4852, file: !241, line: 405, type: !18)
!4852 = distinct !DILexicalBlock(scope: !4853, file: !241, line: 401, column: 5)
!4853 = distinct !DILexicalBlock(scope: !4854, file: !241, line: 400, column: 3)
!4854 = distinct !DILexicalBlock(scope: !4855, file: !241, line: 400, column: 3)
!4855 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !241, file: !241, line: 256, type: !3918, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4856, retainedNodes: !4)
!4856 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !4857, nameTableKind: None)
!4857 = !{!4858, !4860, !4862, !4871, !4873, !4875, !4882, !4884}
!4858 = !DIGlobalVariableExpression(var: !4859, expr: !DIExpression())
!4859 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !4856, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!4860 = !DIGlobalVariableExpression(var: !4861, expr: !DIExpression())
!4861 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !4856, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!4862 = !DIGlobalVariableExpression(var: !4863, expr: !DIExpression())
!4863 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !4856, file: !241, line: 1052, type: !4864, isLocal: false, isDefinition: true)
!4864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !4865)
!4865 = !{!4866, !4867, !4868, !4869, !4870}
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !4864, file: !241, line: 68, baseType: !223, size: 32)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4864, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !4864, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !4864, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !4864, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!4871 = !DIGlobalVariableExpression(var: !4872, expr: !DIExpression())
!4872 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !4856, file: !241, line: 116, type: !4864, isLocal: true, isDefinition: true)
!4873 = !DIGlobalVariableExpression(var: !4874, expr: !DIExpression())
!4874 = distinct !DIGlobalVariable(name: "slot0", scope: !4856, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!4875 = !DIGlobalVariableExpression(var: !4876, expr: !DIExpression())
!4876 = distinct !DIGlobalVariable(name: "slotvec", scope: !4856, file: !241, line: 845, type: !4877, isLocal: true, isDefinition: true)
!4877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4878, size: 64)
!4878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !4879)
!4879 = !{!4880, !4881}
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4878, file: !241, line: 836, baseType: !110, size: 64)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4878, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!4882 = !DIGlobalVariableExpression(var: !4883, expr: !DIExpression())
!4883 = distinct !DIGlobalVariable(name: "nslots", scope: !4856, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!4884 = !DIGlobalVariableExpression(var: !4885, expr: !DIExpression())
!4885 = distinct !DIGlobalVariable(name: "slotvec0", scope: !4856, file: !241, line: 844, type: !4878, isLocal: true, isDefinition: true)
!4886 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !4852, file: !241, line: 406, type: !18)
!4887 = distinct !DISubprogram(name: "gettext_quote", scope: !241, file: !241, line: 207, type: !4888, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4888 = !DISubroutineType(types: !4889)
!4889 = !{!49, !49, !223}
!4890 = !DILocalVariable(name: "msgid", arg: 1, scope: !4887, file: !241, line: 207, type: !49)
!4891 = !DILocation(line: 207, column: 28, scope: !4887)
!4892 = !DILocalVariable(name: "s", arg: 2, scope: !4887, file: !241, line: 207, type: !223)
!4893 = !DILocation(line: 207, column: 54, scope: !4887)
!4894 = !DILocalVariable(name: "translation", scope: !4887, file: !241, line: 209, type: !49)
!4895 = !DILocation(line: 209, column: 15, scope: !4887)
!4896 = !DILocation(line: 209, column: 29, scope: !4887)
!4897 = !DILocalVariable(name: "locale_code", scope: !4887, file: !241, line: 210, type: !49)
!4898 = !DILocation(line: 210, column: 15, scope: !4887)
!4899 = !DILocation(line: 212, column: 7, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4887, file: !241, line: 212, column: 7)
!4901 = !DILocation(line: 212, column: 22, scope: !4900)
!4902 = !DILocation(line: 212, column: 19, scope: !4900)
!4903 = !DILocation(line: 212, column: 7, scope: !4887)
!4904 = !DILocation(line: 213, column: 12, scope: !4900)
!4905 = !DILocation(line: 213, column: 5, scope: !4900)
!4906 = !DILocation(line: 233, column: 17, scope: !4887)
!4907 = !DILocation(line: 233, column: 15, scope: !4887)
!4908 = !DILocation(line: 234, column: 7, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4887, file: !241, line: 234, column: 7)
!4910 = !DILocation(line: 234, column: 7, scope: !4887)
!4911 = !DILocation(line: 235, column: 12, scope: !4909)
!4912 = !DILocation(line: 235, column: 21, scope: !4909)
!4913 = !DILocation(line: 235, column: 5, scope: !4909)
!4914 = !DILocation(line: 236, column: 7, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4887, file: !241, line: 236, column: 7)
!4916 = !DILocation(line: 236, column: 7, scope: !4887)
!4917 = !DILocation(line: 237, column: 12, scope: !4915)
!4918 = !DILocation(line: 237, column: 21, scope: !4915)
!4919 = !DILocation(line: 237, column: 5, scope: !4915)
!4920 = !DILocation(line: 239, column: 11, scope: !4887)
!4921 = !DILocation(line: 239, column: 13, scope: !4887)
!4922 = !DILocation(line: 239, column: 3, scope: !4887)
!4923 = !DILocation(line: 240, column: 1, scope: !4887)
!4924 = !DILocalVariable(name: "msgid", arg: 1, scope: !4925, file: !241, line: 207, type: !49)
!4925 = distinct !DISubprogram(name: "gettext_quote", scope: !241, file: !241, line: 207, type: !4888, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4926, retainedNodes: !4)
!4926 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !4927, nameTableKind: None)
!4927 = !{!4928, !4930, !4932, !4941, !4943, !4945, !4952, !4954}
!4928 = !DIGlobalVariableExpression(var: !4929, expr: !DIExpression())
!4929 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !4926, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!4930 = !DIGlobalVariableExpression(var: !4931, expr: !DIExpression())
!4931 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !4926, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!4932 = !DIGlobalVariableExpression(var: !4933, expr: !DIExpression())
!4933 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !4926, file: !241, line: 1052, type: !4934, isLocal: false, isDefinition: true)
!4934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !4935)
!4935 = !{!4936, !4937, !4938, !4939, !4940}
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !4934, file: !241, line: 68, baseType: !223, size: 32)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4934, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !4934, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !4934, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !4934, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!4941 = !DIGlobalVariableExpression(var: !4942, expr: !DIExpression())
!4942 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !4926, file: !241, line: 116, type: !4934, isLocal: true, isDefinition: true)
!4943 = !DIGlobalVariableExpression(var: !4944, expr: !DIExpression())
!4944 = distinct !DIGlobalVariable(name: "slot0", scope: !4926, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!4945 = !DIGlobalVariableExpression(var: !4946, expr: !DIExpression())
!4946 = distinct !DIGlobalVariable(name: "slotvec", scope: !4926, file: !241, line: 845, type: !4947, isLocal: true, isDefinition: true)
!4947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4948, size: 64)
!4948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !4949)
!4949 = !{!4950, !4951}
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4948, file: !241, line: 836, baseType: !110, size: 64)
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4948, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!4952 = !DIGlobalVariableExpression(var: !4953, expr: !DIExpression())
!4953 = distinct !DIGlobalVariable(name: "nslots", scope: !4926, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!4954 = !DIGlobalVariableExpression(var: !4955, expr: !DIExpression())
!4955 = distinct !DIGlobalVariable(name: "slotvec0", scope: !4926, file: !241, line: 844, type: !4948, isLocal: true, isDefinition: true)
!4956 = !DILocalVariable(name: "s", arg: 2, scope: !4925, file: !241, line: 207, type: !223)
!4957 = !DILocalVariable(name: "translation", scope: !4925, file: !241, line: 209, type: !49)
!4958 = !DILocalVariable(name: "locale_code", scope: !4925, file: !241, line: 210, type: !49)
!4959 = distinct !DISubprogram(name: "quotearg_char", scope: !241, file: !241, line: 991, type: !4960, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4960 = !DISubroutineType(types: !4961)
!4961 = !{!6, !49, !7}
!4962 = !DILocalVariable(name: "arg", arg: 1, scope: !4959, file: !241, line: 991, type: !49)
!4963 = !DILocation(line: 991, column: 28, scope: !4959)
!4964 = !DILocalVariable(name: "ch", arg: 2, scope: !4959, file: !241, line: 991, type: !7)
!4965 = !DILocation(line: 991, column: 38, scope: !4959)
!4966 = !DILocation(line: 993, column: 29, scope: !4959)
!4967 = !DILocation(line: 993, column: 44, scope: !4959)
!4968 = !DILocation(line: 993, column: 10, scope: !4959)
!4969 = !DILocation(line: 993, column: 3, scope: !4959)
!4970 = distinct !DISubprogram(name: "quotearg_colon", scope: !241, file: !241, line: 997, type: !3241, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4971 = !DILocalVariable(name: "arg", arg: 1, scope: !4970, file: !241, line: 997, type: !49)
!4972 = !DILocation(line: 997, column: 29, scope: !4970)
!4973 = !DILocation(line: 999, column: 25, scope: !4970)
!4974 = !DILocation(line: 999, column: 10, scope: !4970)
!4975 = !DILocation(line: 999, column: 3, scope: !4970)
!4976 = !DILocalVariable(name: "arg", arg: 1, scope: !4977, file: !241, line: 997, type: !49)
!4977 = distinct !DISubprogram(name: "quotearg_colon", scope: !241, file: !241, line: 997, type: !3241, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4978, retainedNodes: !4)
!4978 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !4979, nameTableKind: None)
!4979 = !{!4980, !4982, !4984, !4993, !4995, !4997, !5004, !5006}
!4980 = !DIGlobalVariableExpression(var: !4981, expr: !DIExpression())
!4981 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !4978, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!4982 = !DIGlobalVariableExpression(var: !4983, expr: !DIExpression())
!4983 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !4978, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!4984 = !DIGlobalVariableExpression(var: !4985, expr: !DIExpression())
!4985 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !4978, file: !241, line: 1052, type: !4986, isLocal: false, isDefinition: true)
!4986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !4987)
!4987 = !{!4988, !4989, !4990, !4991, !4992}
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !4986, file: !241, line: 68, baseType: !223, size: 32)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4986, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !4986, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !4986, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !4986, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!4993 = !DIGlobalVariableExpression(var: !4994, expr: !DIExpression())
!4994 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !4978, file: !241, line: 116, type: !4986, isLocal: true, isDefinition: true)
!4995 = !DIGlobalVariableExpression(var: !4996, expr: !DIExpression())
!4996 = distinct !DIGlobalVariable(name: "slot0", scope: !4978, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!4997 = !DIGlobalVariableExpression(var: !4998, expr: !DIExpression())
!4998 = distinct !DIGlobalVariable(name: "slotvec", scope: !4978, file: !241, line: 845, type: !4999, isLocal: true, isDefinition: true)
!4999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5000, size: 64)
!5000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !5001)
!5001 = !{!5002, !5003}
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5000, file: !241, line: 836, baseType: !110, size: 64)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5000, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!5004 = !DIGlobalVariableExpression(var: !5005, expr: !DIExpression())
!5005 = distinct !DIGlobalVariable(name: "nslots", scope: !4978, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!5006 = !DIGlobalVariableExpression(var: !5007, expr: !DIExpression())
!5007 = distinct !DIGlobalVariable(name: "slotvec0", scope: !4978, file: !241, line: 844, type: !5000, isLocal: true, isDefinition: true)
!5008 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !241, file: !241, line: 1009, type: !5009, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!5009 = !DISubroutineType(types: !5010)
!5010 = !{!6, !53, !223, !49}
!5011 = !DILocalVariable(name: "n", arg: 1, scope: !5008, file: !241, line: 1009, type: !53)
!5012 = !DILocation(line: 1009, column: 29, scope: !5008)
!5013 = !DILocalVariable(name: "s", arg: 2, scope: !5008, file: !241, line: 1009, type: !223)
!5014 = !DILocation(line: 1009, column: 51, scope: !5008)
!5015 = !DILocalVariable(name: "arg", arg: 3, scope: !5008, file: !241, line: 1009, type: !49)
!5016 = !DILocation(line: 1009, column: 66, scope: !5008)
!5017 = !DILocalVariable(name: "options", scope: !5008, file: !241, line: 1011, type: !254)
!5018 = !DILocation(line: 1011, column: 26, scope: !5008)
!5019 = !DILocation(line: 1012, column: 41, scope: !5008)
!5020 = !DILocation(line: 1012, column: 13, scope: !5008)
!5021 = !DILocation(line: 1013, column: 3, scope: !5008)
!5022 = !DILocation(line: 1014, column: 30, scope: !5008)
!5023 = !DILocation(line: 1014, column: 33, scope: !5008)
!5024 = !DILocation(line: 1014, column: 10, scope: !5008)
!5025 = !DILocation(line: 1014, column: 3, scope: !5008)
!5026 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !241, file: !241, line: 193, type: !5027, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!5027 = !DISubroutineType(types: !5028)
!5028 = !{!254, !223}
!5029 = !DILocalVariable(name: "style", arg: 1, scope: !5026, file: !241, line: 193, type: !223)
!5030 = !DILocation(line: 193, column: 48, scope: !5026)
!5031 = !DILocalVariable(name: "o", scope: !5026, file: !241, line: 195, type: !254)
!5032 = !DILocation(line: 195, column: 26, scope: !5026)
!5033 = !DILocation(line: 196, column: 7, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5026, file: !241, line: 196, column: 7)
!5035 = !DILocation(line: 196, column: 13, scope: !5034)
!5036 = !DILocation(line: 196, column: 7, scope: !5026)
!5037 = !DILocation(line: 197, column: 5, scope: !5034)
!5038 = !DILocation(line: 198, column: 13, scope: !5026)
!5039 = !DILocation(line: 198, column: 5, scope: !5026)
!5040 = !DILocation(line: 198, column: 11, scope: !5026)
!5041 = !DILocation(line: 199, column: 3, scope: !5026)
!5042 = distinct !DISubprogram(name: "quote_n_mem", scope: !241, file: !241, line: 1061, type: !5043, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!5043 = !DISubroutineType(types: !5044)
!5044 = !{!49, !53, !49, !110}
!5045 = !DILocalVariable(name: "n", arg: 1, scope: !5042, file: !241, line: 1061, type: !53)
!5046 = !DILocation(line: 1061, column: 18, scope: !5042)
!5047 = !DILocalVariable(name: "arg", arg: 2, scope: !5042, file: !241, line: 1061, type: !49)
!5048 = !DILocation(line: 1061, column: 33, scope: !5042)
!5049 = !DILocalVariable(name: "argsize", arg: 3, scope: !5042, file: !241, line: 1061, type: !110)
!5050 = !DILocation(line: 1061, column: 45, scope: !5042)
!5051 = !DILocation(line: 1063, column: 30, scope: !5042)
!5052 = !DILocation(line: 1063, column: 33, scope: !5042)
!5053 = !DILocation(line: 1063, column: 38, scope: !5042)
!5054 = !DILocation(line: 1063, column: 10, scope: !5042)
!5055 = !DILocation(line: 1063, column: 3, scope: !5042)
!5056 = distinct !DISubprogram(name: "quote_n", scope: !241, file: !241, line: 1073, type: !5057, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!5057 = !DISubroutineType(types: !5058)
!5058 = !{!49, !53, !49}
!5059 = !DILocalVariable(name: "n", arg: 1, scope: !5056, file: !241, line: 1073, type: !53)
!5060 = !DILocation(line: 1073, column: 14, scope: !5056)
!5061 = !DILocalVariable(name: "arg", arg: 2, scope: !5056, file: !241, line: 1073, type: !49)
!5062 = !DILocation(line: 1073, column: 29, scope: !5056)
!5063 = !DILocation(line: 1075, column: 23, scope: !5056)
!5064 = !DILocation(line: 1075, column: 26, scope: !5056)
!5065 = !DILocation(line: 1075, column: 10, scope: !5056)
!5066 = !DILocation(line: 1075, column: 3, scope: !5056)
!5067 = !DILocalVariable(name: "n", arg: 1, scope: !5068, file: !241, line: 1073, type: !53)
!5068 = distinct !DISubprogram(name: "quote_n", scope: !241, file: !241, line: 1073, type: !5057, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5069, retainedNodes: !4)
!5069 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !5070, nameTableKind: None)
!5070 = !{!5071, !5073, !5075, !5084, !5086, !5088, !5095, !5097}
!5071 = !DIGlobalVariableExpression(var: !5072, expr: !DIExpression())
!5072 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !5069, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!5073 = !DIGlobalVariableExpression(var: !5074, expr: !DIExpression())
!5074 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !5069, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!5075 = !DIGlobalVariableExpression(var: !5076, expr: !DIExpression())
!5076 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !5069, file: !241, line: 1052, type: !5077, isLocal: false, isDefinition: true)
!5077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !5078)
!5078 = !{!5079, !5080, !5081, !5082, !5083}
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !5077, file: !241, line: 68, baseType: !223, size: 32)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5077, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !5077, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !5077, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !5077, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!5084 = !DIGlobalVariableExpression(var: !5085, expr: !DIExpression())
!5085 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !5069, file: !241, line: 116, type: !5077, isLocal: true, isDefinition: true)
!5086 = !DIGlobalVariableExpression(var: !5087, expr: !DIExpression())
!5087 = distinct !DIGlobalVariable(name: "slot0", scope: !5069, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!5088 = !DIGlobalVariableExpression(var: !5089, expr: !DIExpression())
!5089 = distinct !DIGlobalVariable(name: "slotvec", scope: !5069, file: !241, line: 845, type: !5090, isLocal: true, isDefinition: true)
!5090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5091, size: 64)
!5091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !5092)
!5092 = !{!5093, !5094}
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5091, file: !241, line: 836, baseType: !110, size: 64)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5091, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!5095 = !DIGlobalVariableExpression(var: !5096, expr: !DIExpression())
!5096 = distinct !DIGlobalVariable(name: "nslots", scope: !5069, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!5097 = !DIGlobalVariableExpression(var: !5098, expr: !DIExpression())
!5098 = distinct !DIGlobalVariable(name: "slotvec0", scope: !5069, file: !241, line: 844, type: !5091, isLocal: true, isDefinition: true)
!5099 = !DILocalVariable(name: "arg", arg: 2, scope: !5068, file: !241, line: 1073, type: !49)
!5100 = distinct !DISubprogram(name: "quote", scope: !241, file: !241, line: 1079, type: !5101, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!5101 = !DISubroutineType(types: !5102)
!5102 = !{!49, !49}
!5103 = !DILocalVariable(name: "arg", arg: 1, scope: !5100, file: !241, line: 1079, type: !49)
!5104 = !DILocation(line: 1079, column: 20, scope: !5100)
!5105 = !DILocation(line: 1081, column: 22, scope: !5100)
!5106 = !DILocation(line: 1081, column: 10, scope: !5100)
!5107 = !DILocation(line: 1081, column: 3, scope: !5100)
!5108 = !DILocalVariable(name: "arg", arg: 1, scope: !5109, file: !241, line: 1079, type: !49)
!5109 = distinct !DISubprogram(name: "quote", scope: !241, file: !241, line: 1079, type: !5101, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5110, retainedNodes: !4)
!5110 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !5111, nameTableKind: None)
!5111 = !{!5112, !5114, !5116, !5125, !5127, !5129, !5136, !5138}
!5112 = !DIGlobalVariableExpression(var: !5113, expr: !DIExpression())
!5113 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !5110, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!5114 = !DIGlobalVariableExpression(var: !5115, expr: !DIExpression())
!5115 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !5110, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!5116 = !DIGlobalVariableExpression(var: !5117, expr: !DIExpression())
!5117 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !5110, file: !241, line: 1052, type: !5118, isLocal: false, isDefinition: true)
!5118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !5119)
!5119 = !{!5120, !5121, !5122, !5123, !5124}
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !5118, file: !241, line: 68, baseType: !223, size: 32)
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5118, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !5118, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !5118, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !5118, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!5125 = !DIGlobalVariableExpression(var: !5126, expr: !DIExpression())
!5126 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !5110, file: !241, line: 116, type: !5118, isLocal: true, isDefinition: true)
!5127 = !DIGlobalVariableExpression(var: !5128, expr: !DIExpression())
!5128 = distinct !DIGlobalVariable(name: "slot0", scope: !5110, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!5129 = !DIGlobalVariableExpression(var: !5130, expr: !DIExpression())
!5130 = distinct !DIGlobalVariable(name: "slotvec", scope: !5110, file: !241, line: 845, type: !5131, isLocal: true, isDefinition: true)
!5131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5132, size: 64)
!5132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !5133)
!5133 = !{!5134, !5135}
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5132, file: !241, line: 836, baseType: !110, size: 64)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5132, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!5136 = !DIGlobalVariableExpression(var: !5137, expr: !DIExpression())
!5137 = distinct !DIGlobalVariable(name: "nslots", scope: !5110, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!5138 = !DIGlobalVariableExpression(var: !5139, expr: !DIExpression())
!5139 = distinct !DIGlobalVariable(name: "slotvec0", scope: !5110, file: !241, line: 844, type: !5132, isLocal: true, isDefinition: true)
!5140 = distinct !DISubprogram(name: "setlocale_null_r", scope: !5141, file: !5141, line: 269, type: !5142, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !296, retainedNodes: !4)
!5141 = !DIFile(filename: "lib/setlocale_null.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5142 = !DISubroutineType(types: !5143)
!5143 = !{!53, !53, !6, !110}
!5144 = !DILocalVariable(name: "category", arg: 1, scope: !5140, file: !5141, line: 269, type: !53)
!5145 = !DILocation(line: 269, column: 23, scope: !5140)
!5146 = !DILocalVariable(name: "buf", arg: 2, scope: !5140, file: !5141, line: 269, type: !6)
!5147 = !DILocation(line: 269, column: 39, scope: !5140)
!5148 = !DILocalVariable(name: "bufsize", arg: 3, scope: !5140, file: !5141, line: 269, type: !110)
!5149 = !DILocation(line: 269, column: 51, scope: !5140)
!5150 = !DILocation(line: 274, column: 35, scope: !5140)
!5151 = !DILocation(line: 274, column: 45, scope: !5140)
!5152 = !DILocation(line: 274, column: 50, scope: !5140)
!5153 = !DILocation(line: 274, column: 10, scope: !5140)
!5154 = !DILocation(line: 274, column: 3, scope: !5140)
!5155 = distinct !DISubprogram(name: "setlocale_null_unlocked", scope: !5141, file: !5141, line: 91, type: !5142, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !296, retainedNodes: !4)
!5156 = !DILocalVariable(name: "category", arg: 1, scope: !5155, file: !5141, line: 91, type: !53)
!5157 = !DILocation(line: 91, column: 30, scope: !5155)
!5158 = !DILocalVariable(name: "buf", arg: 2, scope: !5155, file: !5141, line: 91, type: !6)
!5159 = !DILocation(line: 91, column: 46, scope: !5155)
!5160 = !DILocalVariable(name: "bufsize", arg: 3, scope: !5155, file: !5141, line: 91, type: !110)
!5161 = !DILocation(line: 91, column: 58, scope: !5155)
!5162 = !DILocalVariable(name: "result", scope: !5155, file: !5141, line: 140, type: !49)
!5163 = !DILocation(line: 140, column: 15, scope: !5155)
!5164 = !DILocation(line: 140, column: 51, scope: !5155)
!5165 = !DILocation(line: 140, column: 24, scope: !5155)
!5166 = !DILocation(line: 142, column: 7, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5155, file: !5141, line: 142, column: 7)
!5168 = !DILocation(line: 142, column: 14, scope: !5167)
!5169 = !DILocation(line: 142, column: 7, scope: !5155)
!5170 = !DILocation(line: 145, column: 11, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5172, file: !5141, line: 145, column: 11)
!5172 = distinct !DILexicalBlock(scope: !5167, file: !5141, line: 143, column: 5)
!5173 = !DILocation(line: 145, column: 19, scope: !5171)
!5174 = !DILocation(line: 145, column: 11, scope: !5172)
!5175 = !DILocation(line: 149, column: 9, scope: !5171)
!5176 = !DILocation(line: 149, column: 16, scope: !5171)
!5177 = !DILocation(line: 150, column: 7, scope: !5172)
!5178 = !DILocalVariable(name: "length", scope: !5179, file: !5141, line: 154, type: !110)
!5179 = distinct !DILexicalBlock(scope: !5167, file: !5141, line: 153, column: 5)
!5180 = !DILocation(line: 154, column: 14, scope: !5179)
!5181 = !DILocation(line: 154, column: 31, scope: !5179)
!5182 = !DILocation(line: 154, column: 23, scope: !5179)
!5183 = !DILocation(line: 155, column: 11, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5179, file: !5141, line: 155, column: 11)
!5185 = !DILocation(line: 155, column: 20, scope: !5184)
!5186 = !DILocation(line: 155, column: 18, scope: !5184)
!5187 = !DILocation(line: 155, column: 11, scope: !5179)
!5188 = !DILocation(line: 157, column: 19, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5184, file: !5141, line: 156, column: 9)
!5190 = !DILocation(line: 157, column: 24, scope: !5189)
!5191 = !DILocation(line: 157, column: 32, scope: !5189)
!5192 = !DILocation(line: 157, column: 39, scope: !5189)
!5193 = !DILocation(line: 157, column: 11, scope: !5189)
!5194 = !DILocation(line: 158, column: 11, scope: !5189)
!5195 = !DILocation(line: 162, column: 15, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5197, file: !5141, line: 162, column: 15)
!5197 = distinct !DILexicalBlock(scope: !5184, file: !5141, line: 161, column: 9)
!5198 = !DILocation(line: 162, column: 23, scope: !5196)
!5199 = !DILocation(line: 162, column: 15, scope: !5197)
!5200 = !DILocation(line: 167, column: 23, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5196, file: !5141, line: 163, column: 13)
!5202 = !DILocation(line: 167, column: 28, scope: !5201)
!5203 = !DILocation(line: 167, column: 36, scope: !5201)
!5204 = !DILocation(line: 167, column: 44, scope: !5201)
!5205 = !DILocation(line: 167, column: 15, scope: !5201)
!5206 = !DILocation(line: 168, column: 15, scope: !5201)
!5207 = !DILocation(line: 168, column: 19, scope: !5201)
!5208 = !DILocation(line: 168, column: 27, scope: !5201)
!5209 = !DILocation(line: 168, column: 32, scope: !5201)
!5210 = !DILocation(line: 169, column: 13, scope: !5201)
!5211 = !DILocation(line: 170, column: 11, scope: !5197)
!5212 = !DILocation(line: 174, column: 1, scope: !5155)
!5213 = !DILocalVariable(name: "category", arg: 1, scope: !5214, file: !5141, line: 91, type: !53)
!5214 = distinct !DISubprogram(name: "setlocale_null_unlocked", scope: !5141, file: !5141, line: 91, type: !5142, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5215, retainedNodes: !4)
!5215 = distinct !DICompileUnit(language: DW_LANG_C99, file: !297, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!5216 = !DILocalVariable(name: "buf", arg: 2, scope: !5214, file: !5141, line: 91, type: !6)
!5217 = !DILocalVariable(name: "bufsize", arg: 3, scope: !5214, file: !5141, line: 91, type: !110)
!5218 = !DILocalVariable(name: "result", scope: !5214, file: !5141, line: 140, type: !49)
!5219 = distinct !DISubprogram(name: "setlocale_null_androidfix", scope: !5141, file: !5141, line: 60, type: !5220, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !296, retainedNodes: !4)
!5220 = !DISubroutineType(types: !5221)
!5221 = !{!49, !53}
!5222 = !DILocalVariable(name: "category", arg: 1, scope: !5219, file: !5141, line: 60, type: !53)
!5223 = !DILocation(line: 60, column: 32, scope: !5219)
!5224 = !DILocalVariable(name: "result", scope: !5219, file: !5141, line: 62, type: !49)
!5225 = !DILocation(line: 62, column: 15, scope: !5219)
!5226 = !DILocation(line: 62, column: 35, scope: !5219)
!5227 = !DILocation(line: 62, column: 24, scope: !5219)
!5228 = !DILocation(line: 87, column: 10, scope: !5219)
!5229 = !DILocation(line: 87, column: 3, scope: !5219)
!5230 = distinct !DISubprogram(name: "version_etc_arn", scope: !5231, file: !5231, line: 61, type: !5232, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !299, retainedNodes: !4)
!5231 = !DIFile(filename: "lib/version-etc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5232 = !DISubroutineType(types: !5233)
!5233 = !{null, !5234, !49, !49, !49, !5283, !110}
!5234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5235, size: 64)
!5235 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5236, line: 7, baseType: !5237)
!5236 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!5237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5238, line: 49, size: 1728, elements: !5239)
!5238 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!5239 = !{!5240, !5241, !5242, !5243, !5244, !5245, !5246, !5247, !5248, !5249, !5250, !5251, !5252, !5255, !5257, !5258, !5259, !5260, !5261, !5263, !5267, !5270, !5272, !5275, !5278, !5279, !5280, !5281, !5282}
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5237, file: !5238, line: 51, baseType: !53, size: 32)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5237, file: !5238, line: 54, baseType: !6, size: 64, offset: 64)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5237, file: !5238, line: 55, baseType: !6, size: 64, offset: 128)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5237, file: !5238, line: 56, baseType: !6, size: 64, offset: 192)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5237, file: !5238, line: 57, baseType: !6, size: 64, offset: 256)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5237, file: !5238, line: 58, baseType: !6, size: 64, offset: 320)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5237, file: !5238, line: 59, baseType: !6, size: 64, offset: 384)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5237, file: !5238, line: 60, baseType: !6, size: 64, offset: 448)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5237, file: !5238, line: 61, baseType: !6, size: 64, offset: 512)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5237, file: !5238, line: 64, baseType: !6, size: 64, offset: 576)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5237, file: !5238, line: 65, baseType: !6, size: 64, offset: 640)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5237, file: !5238, line: 66, baseType: !6, size: 64, offset: 704)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5237, file: !5238, line: 68, baseType: !5253, size: 64, offset: 768)
!5253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5254, size: 64)
!5254 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !5238, line: 36, flags: DIFlagFwdDecl)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5237, file: !5238, line: 70, baseType: !5256, size: 64, offset: 832)
!5256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5237, size: 64)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5237, file: !5238, line: 72, baseType: !53, size: 32, offset: 896)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5237, file: !5238, line: 73, baseType: !53, size: 32, offset: 928)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5237, file: !5238, line: 74, baseType: !1497, size: 64, offset: 960)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5237, file: !5238, line: 77, baseType: !188, size: 16, offset: 1024)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5237, file: !5238, line: 78, baseType: !5262, size: 8, offset: 1040)
!5262 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5237, file: !5238, line: 79, baseType: !5264, size: 8, offset: 1048)
!5264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 8, elements: !5265)
!5265 = !{!5266}
!5266 = !DISubrange(count: 1)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5237, file: !5238, line: 81, baseType: !5268, size: 64, offset: 1088)
!5268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5269, size: 64)
!5269 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !5238, line: 43, baseType: null)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5237, file: !5238, line: 89, baseType: !5271, size: 64, offset: 1152)
!5271 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !12, line: 153, baseType: !13)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5237, file: !5238, line: 91, baseType: !5273, size: 64, offset: 1216)
!5273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5274, size: 64)
!5274 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !5238, line: 37, flags: DIFlagFwdDecl)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5237, file: !5238, line: 92, baseType: !5276, size: 64, offset: 1280)
!5276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5277, size: 64)
!5277 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !5238, line: 38, flags: DIFlagFwdDecl)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5237, file: !5238, line: 93, baseType: !5256, size: 64, offset: 1344)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5237, file: !5238, line: 94, baseType: !8, size: 64, offset: 1408)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5237, file: !5238, line: 95, baseType: !110, size: 64, offset: 1472)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5237, file: !5238, line: 96, baseType: !53, size: 32, offset: 1536)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5237, file: !5238, line: 98, baseType: !105, size: 160, offset: 1568)
!5283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!5284 = !DILocalVariable(name: "stream", arg: 1, scope: !5230, file: !5231, line: 61, type: !5234)
!5285 = !DILocation(line: 61, column: 24, scope: !5230)
!5286 = !DILocalVariable(name: "command_name", arg: 2, scope: !5230, file: !5231, line: 62, type: !49)
!5287 = !DILocation(line: 62, column: 30, scope: !5230)
!5288 = !DILocalVariable(name: "package", arg: 3, scope: !5230, file: !5231, line: 62, type: !49)
!5289 = !DILocation(line: 62, column: 56, scope: !5230)
!5290 = !DILocalVariable(name: "version", arg: 4, scope: !5230, file: !5231, line: 63, type: !49)
!5291 = !DILocation(line: 63, column: 30, scope: !5230)
!5292 = !DILocalVariable(name: "authors", arg: 5, scope: !5230, file: !5231, line: 64, type: !5283)
!5293 = !DILocation(line: 64, column: 39, scope: !5230)
!5294 = !DILocalVariable(name: "n_authors", arg: 6, scope: !5230, file: !5231, line: 64, type: !110)
!5295 = !DILocation(line: 64, column: 55, scope: !5230)
!5296 = !DILocation(line: 66, column: 7, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5230, file: !5231, line: 66, column: 7)
!5298 = !DILocation(line: 66, column: 7, scope: !5230)
!5299 = !DILocation(line: 67, column: 14, scope: !5297)
!5300 = !DILocation(line: 67, column: 38, scope: !5297)
!5301 = !DILocation(line: 67, column: 52, scope: !5297)
!5302 = !DILocation(line: 67, column: 61, scope: !5297)
!5303 = !DILocation(line: 67, column: 5, scope: !5297)
!5304 = !DILocation(line: 69, column: 14, scope: !5297)
!5305 = !DILocation(line: 69, column: 33, scope: !5297)
!5306 = !DILocation(line: 69, column: 42, scope: !5297)
!5307 = !DILocation(line: 69, column: 5, scope: !5297)
!5308 = !DILocation(line: 83, column: 12, scope: !5230)
!5309 = !DILocation(line: 83, column: 43, scope: !5230)
!5310 = !DILocation(line: 83, column: 3, scope: !5230)
!5311 = !DILocation(line: 85, column: 3, scope: !5230)
!5312 = !DILocation(line: 88, column: 12, scope: !5230)
!5313 = !DILocation(line: 88, column: 20, scope: !5230)
!5314 = !DILocation(line: 88, column: 3, scope: !5230)
!5315 = !DILocation(line: 95, column: 3, scope: !5230)
!5316 = !DILocation(line: 97, column: 11, scope: !5230)
!5317 = !DILocation(line: 97, column: 3, scope: !5230)
!5318 = !DILocation(line: 102, column: 7, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5230, file: !5231, line: 98, column: 5)
!5320 = !DILocation(line: 105, column: 16, scope: !5319)
!5321 = !DILocation(line: 105, column: 24, scope: !5319)
!5322 = !DILocation(line: 105, column: 47, scope: !5319)
!5323 = !DILocation(line: 105, column: 7, scope: !5319)
!5324 = !DILocation(line: 106, column: 7, scope: !5319)
!5325 = !DILocation(line: 109, column: 16, scope: !5319)
!5326 = !DILocation(line: 109, column: 24, scope: !5319)
!5327 = !DILocation(line: 109, column: 54, scope: !5319)
!5328 = !DILocation(line: 109, column: 66, scope: !5319)
!5329 = !DILocation(line: 109, column: 7, scope: !5319)
!5330 = !DILocation(line: 110, column: 7, scope: !5319)
!5331 = !DILocation(line: 113, column: 16, scope: !5319)
!5332 = !DILocation(line: 113, column: 24, scope: !5319)
!5333 = !DILocation(line: 114, column: 16, scope: !5319)
!5334 = !DILocation(line: 114, column: 28, scope: !5319)
!5335 = !DILocation(line: 114, column: 40, scope: !5319)
!5336 = !DILocation(line: 113, column: 7, scope: !5319)
!5337 = !DILocation(line: 115, column: 7, scope: !5319)
!5338 = !DILocation(line: 120, column: 16, scope: !5319)
!5339 = !DILocation(line: 120, column: 24, scope: !5319)
!5340 = !DILocation(line: 121, column: 16, scope: !5319)
!5341 = !DILocation(line: 121, column: 28, scope: !5319)
!5342 = !DILocation(line: 121, column: 40, scope: !5319)
!5343 = !DILocation(line: 121, column: 52, scope: !5319)
!5344 = !DILocation(line: 120, column: 7, scope: !5319)
!5345 = !DILocation(line: 122, column: 7, scope: !5319)
!5346 = !DILocation(line: 127, column: 16, scope: !5319)
!5347 = !DILocation(line: 127, column: 24, scope: !5319)
!5348 = !DILocation(line: 128, column: 16, scope: !5319)
!5349 = !DILocation(line: 128, column: 28, scope: !5319)
!5350 = !DILocation(line: 128, column: 40, scope: !5319)
!5351 = !DILocation(line: 128, column: 52, scope: !5319)
!5352 = !DILocation(line: 128, column: 64, scope: !5319)
!5353 = !DILocation(line: 127, column: 7, scope: !5319)
!5354 = !DILocation(line: 129, column: 7, scope: !5319)
!5355 = !DILocation(line: 134, column: 16, scope: !5319)
!5356 = !DILocation(line: 134, column: 24, scope: !5319)
!5357 = !DILocation(line: 135, column: 16, scope: !5319)
!5358 = !DILocation(line: 135, column: 28, scope: !5319)
!5359 = !DILocation(line: 135, column: 40, scope: !5319)
!5360 = !DILocation(line: 135, column: 52, scope: !5319)
!5361 = !DILocation(line: 135, column: 64, scope: !5319)
!5362 = !DILocation(line: 136, column: 16, scope: !5319)
!5363 = !DILocation(line: 134, column: 7, scope: !5319)
!5364 = !DILocation(line: 137, column: 7, scope: !5319)
!5365 = !DILocation(line: 142, column: 16, scope: !5319)
!5366 = !DILocation(line: 142, column: 24, scope: !5319)
!5367 = !DILocation(line: 143, column: 16, scope: !5319)
!5368 = !DILocation(line: 143, column: 28, scope: !5319)
!5369 = !DILocation(line: 143, column: 40, scope: !5319)
!5370 = !DILocation(line: 143, column: 52, scope: !5319)
!5371 = !DILocation(line: 143, column: 64, scope: !5319)
!5372 = !DILocation(line: 144, column: 16, scope: !5319)
!5373 = !DILocation(line: 144, column: 28, scope: !5319)
!5374 = !DILocation(line: 142, column: 7, scope: !5319)
!5375 = !DILocation(line: 145, column: 7, scope: !5319)
!5376 = !DILocation(line: 150, column: 16, scope: !5319)
!5377 = !DILocation(line: 150, column: 24, scope: !5319)
!5378 = !DILocation(line: 152, column: 17, scope: !5319)
!5379 = !DILocation(line: 152, column: 29, scope: !5319)
!5380 = !DILocation(line: 152, column: 41, scope: !5319)
!5381 = !DILocation(line: 152, column: 53, scope: !5319)
!5382 = !DILocation(line: 152, column: 65, scope: !5319)
!5383 = !DILocation(line: 153, column: 17, scope: !5319)
!5384 = !DILocation(line: 153, column: 29, scope: !5319)
!5385 = !DILocation(line: 153, column: 41, scope: !5319)
!5386 = !DILocation(line: 150, column: 7, scope: !5319)
!5387 = !DILocation(line: 154, column: 7, scope: !5319)
!5388 = !DILocation(line: 159, column: 16, scope: !5319)
!5389 = !DILocation(line: 159, column: 24, scope: !5319)
!5390 = !DILocation(line: 161, column: 16, scope: !5319)
!5391 = !DILocation(line: 161, column: 28, scope: !5319)
!5392 = !DILocation(line: 161, column: 40, scope: !5319)
!5393 = !DILocation(line: 161, column: 52, scope: !5319)
!5394 = !DILocation(line: 161, column: 64, scope: !5319)
!5395 = !DILocation(line: 162, column: 16, scope: !5319)
!5396 = !DILocation(line: 162, column: 28, scope: !5319)
!5397 = !DILocation(line: 162, column: 40, scope: !5319)
!5398 = !DILocation(line: 162, column: 52, scope: !5319)
!5399 = !DILocation(line: 159, column: 7, scope: !5319)
!5400 = !DILocation(line: 163, column: 7, scope: !5319)
!5401 = !DILocation(line: 170, column: 16, scope: !5319)
!5402 = !DILocation(line: 170, column: 24, scope: !5319)
!5403 = !DILocation(line: 172, column: 17, scope: !5319)
!5404 = !DILocation(line: 172, column: 29, scope: !5319)
!5405 = !DILocation(line: 172, column: 41, scope: !5319)
!5406 = !DILocation(line: 172, column: 53, scope: !5319)
!5407 = !DILocation(line: 172, column: 65, scope: !5319)
!5408 = !DILocation(line: 173, column: 17, scope: !5319)
!5409 = !DILocation(line: 173, column: 29, scope: !5319)
!5410 = !DILocation(line: 173, column: 41, scope: !5319)
!5411 = !DILocation(line: 173, column: 53, scope: !5319)
!5412 = !DILocation(line: 170, column: 7, scope: !5319)
!5413 = !DILocation(line: 174, column: 7, scope: !5319)
!5414 = !DILocation(line: 176, column: 1, scope: !5230)
!5415 = !DILocalVariable(name: "stream", arg: 1, scope: !5416, file: !5231, line: 61, type: !5419)
!5416 = distinct !DISubprogram(name: "version_etc_arn", scope: !5231, file: !5231, line: 61, type: !5417, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5453, retainedNodes: !4)
!5417 = !DISubroutineType(types: !5418)
!5418 = !{null, !5419, !49, !49, !49, !5283, !110}
!5419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5420, size: 64)
!5420 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5236, line: 7, baseType: !5421)
!5421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5238, line: 49, size: 1728, elements: !5422)
!5422 = !{!5423, !5424, !5425, !5426, !5427, !5428, !5429, !5430, !5431, !5432, !5433, !5434, !5435, !5436, !5438, !5439, !5440, !5441, !5442, !5443, !5444, !5445, !5446, !5447, !5448, !5449, !5450, !5451, !5452}
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5421, file: !5238, line: 51, baseType: !53, size: 32)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5421, file: !5238, line: 54, baseType: !6, size: 64, offset: 64)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5421, file: !5238, line: 55, baseType: !6, size: 64, offset: 128)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5421, file: !5238, line: 56, baseType: !6, size: 64, offset: 192)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5421, file: !5238, line: 57, baseType: !6, size: 64, offset: 256)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5421, file: !5238, line: 58, baseType: !6, size: 64, offset: 320)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5421, file: !5238, line: 59, baseType: !6, size: 64, offset: 384)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5421, file: !5238, line: 60, baseType: !6, size: 64, offset: 448)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5421, file: !5238, line: 61, baseType: !6, size: 64, offset: 512)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5421, file: !5238, line: 64, baseType: !6, size: 64, offset: 576)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5421, file: !5238, line: 65, baseType: !6, size: 64, offset: 640)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5421, file: !5238, line: 66, baseType: !6, size: 64, offset: 704)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5421, file: !5238, line: 68, baseType: !5253, size: 64, offset: 768)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5421, file: !5238, line: 70, baseType: !5437, size: 64, offset: 832)
!5437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5421, size: 64)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5421, file: !5238, line: 72, baseType: !53, size: 32, offset: 896)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5421, file: !5238, line: 73, baseType: !53, size: 32, offset: 928)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5421, file: !5238, line: 74, baseType: !1497, size: 64, offset: 960)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5421, file: !5238, line: 77, baseType: !188, size: 16, offset: 1024)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5421, file: !5238, line: 78, baseType: !5262, size: 8, offset: 1040)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5421, file: !5238, line: 79, baseType: !5264, size: 8, offset: 1048)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5421, file: !5238, line: 81, baseType: !5268, size: 64, offset: 1088)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5421, file: !5238, line: 89, baseType: !5271, size: 64, offset: 1152)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5421, file: !5238, line: 91, baseType: !5273, size: 64, offset: 1216)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5421, file: !5238, line: 92, baseType: !5276, size: 64, offset: 1280)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5421, file: !5238, line: 93, baseType: !5437, size: 64, offset: 1344)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5421, file: !5238, line: 94, baseType: !8, size: 64, offset: 1408)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5421, file: !5238, line: 95, baseType: !110, size: 64, offset: 1472)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5421, file: !5238, line: 96, baseType: !53, size: 32, offset: 1536)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5421, file: !5238, line: 98, baseType: !105, size: 160, offset: 1568)
!5453 = distinct !DICompileUnit(language: DW_LANG_C99, file: !300, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!5454 = !DILocalVariable(name: "command_name", arg: 2, scope: !5416, file: !5231, line: 62, type: !49)
!5455 = !DILocalVariable(name: "package", arg: 3, scope: !5416, file: !5231, line: 62, type: !49)
!5456 = !DILocalVariable(name: "version", arg: 4, scope: !5416, file: !5231, line: 63, type: !49)
!5457 = !DILocalVariable(name: "authors", arg: 5, scope: !5416, file: !5231, line: 64, type: !5283)
!5458 = !DILocalVariable(name: "n_authors", arg: 6, scope: !5416, file: !5231, line: 64, type: !110)
!5459 = distinct !DISubprogram(name: "version_etc_va", scope: !5231, file: !5231, line: 199, type: !5460, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !299, retainedNodes: !4)
!5460 = !DISubroutineType(types: !5461)
!5461 = !{null, !5234, !49, !49, !49, !5462}
!5462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5463, size: 64)
!5463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !300, line: 192, size: 192, elements: !5464)
!5464 = !{!5465, !5466, !5467, !5468}
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !5463, file: !300, line: 192, baseType: !180, size: 32)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !5463, file: !300, line: 192, baseType: !180, size: 32, offset: 32)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !5463, file: !300, line: 192, baseType: !8, size: 64, offset: 64)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !5463, file: !300, line: 192, baseType: !8, size: 64, offset: 128)
!5469 = !DILocalVariable(name: "stream", arg: 1, scope: !5459, file: !5231, line: 199, type: !5234)
!5470 = !DILocation(line: 199, column: 23, scope: !5459)
!5471 = !DILocalVariable(name: "command_name", arg: 2, scope: !5459, file: !5231, line: 200, type: !49)
!5472 = !DILocation(line: 200, column: 29, scope: !5459)
!5473 = !DILocalVariable(name: "package", arg: 3, scope: !5459, file: !5231, line: 200, type: !49)
!5474 = !DILocation(line: 200, column: 55, scope: !5459)
!5475 = !DILocalVariable(name: "version", arg: 4, scope: !5459, file: !5231, line: 201, type: !49)
!5476 = !DILocation(line: 201, column: 29, scope: !5459)
!5477 = !DILocalVariable(name: "authors", arg: 5, scope: !5459, file: !5231, line: 201, type: !5462)
!5478 = !DILocation(line: 201, column: 46, scope: !5459)
!5479 = !DILocalVariable(name: "n_authors", scope: !5459, file: !5231, line: 203, type: !110)
!5480 = !DILocation(line: 203, column: 10, scope: !5459)
!5481 = !DILocalVariable(name: "authtab", scope: !5459, file: !5231, line: 204, type: !5482)
!5482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !49, size: 640, elements: !250)
!5483 = !DILocation(line: 204, column: 15, scope: !5459)
!5484 = !DILocation(line: 206, column: 18, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5459, file: !5231, line: 206, column: 3)
!5486 = !DILocation(line: 206, column: 8, scope: !5485)
!5487 = !DILocation(line: 207, column: 8, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5485, file: !5231, line: 206, column: 3)
!5489 = !DILocation(line: 207, column: 18, scope: !5488)
!5490 = !DILocation(line: 208, column: 10, scope: !5488)
!5491 = !DILocation(line: 208, column: 35, scope: !5488)
!5492 = !DILocation(line: 208, column: 22, scope: !5488)
!5493 = !DILocation(line: 208, column: 14, scope: !5488)
!5494 = !DILocation(line: 208, column: 33, scope: !5488)
!5495 = !DILocation(line: 208, column: 67, scope: !5488)
!5496 = !DILocation(line: 0, scope: !5488)
!5497 = !DILocation(line: 206, column: 3, scope: !5485)
!5498 = !DILocation(line: 209, column: 17, scope: !5488)
!5499 = !DILocation(line: 206, column: 3, scope: !5488)
!5500 = distinct !{!5500, !5497, !5501}
!5501 = !DILocation(line: 210, column: 5, scope: !5485)
!5502 = !DILocation(line: 211, column: 20, scope: !5459)
!5503 = !DILocation(line: 211, column: 28, scope: !5459)
!5504 = !DILocation(line: 211, column: 42, scope: !5459)
!5505 = !DILocation(line: 211, column: 51, scope: !5459)
!5506 = !DILocation(line: 212, column: 20, scope: !5459)
!5507 = !DILocation(line: 212, column: 29, scope: !5459)
!5508 = !DILocation(line: 211, column: 3, scope: !5459)
!5509 = !DILocation(line: 213, column: 1, scope: !5459)
!5510 = distinct !DISubprogram(name: "version_etc", scope: !5231, file: !5231, line: 230, type: !5511, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !299, retainedNodes: !4)
!5511 = !DISubroutineType(types: !5512)
!5512 = !{null, !5234, !49, !49, !49, null}
!5513 = !DILocalVariable(name: "stream", arg: 1, scope: !5510, file: !5231, line: 230, type: !5234)
!5514 = !DILocation(line: 230, column: 20, scope: !5510)
!5515 = !DILocalVariable(name: "command_name", arg: 2, scope: !5510, file: !5231, line: 231, type: !49)
!5516 = !DILocation(line: 231, column: 26, scope: !5510)
!5517 = !DILocalVariable(name: "package", arg: 3, scope: !5510, file: !5231, line: 231, type: !49)
!5518 = !DILocation(line: 231, column: 52, scope: !5510)
!5519 = !DILocalVariable(name: "version", arg: 4, scope: !5510, file: !5231, line: 232, type: !49)
!5520 = !DILocation(line: 232, column: 26, scope: !5510)
!5521 = !DILocalVariable(name: "authors", scope: !5510, file: !5231, line: 234, type: !5522)
!5522 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !5523, line: 52, baseType: !5524)
!5523 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!5524 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5525, line: 32, baseType: !5526)
!5525 = !DIFile(filename: "/usr/lib/llvm-9/lib/clang/9.0.1/include/stdarg.h", directory: "")
!5526 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !300, line: 234, baseType: !5527)
!5527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5463, size: 192, elements: !5265)
!5528 = !DILocation(line: 234, column: 11, scope: !5510)
!5529 = !DILocation(line: 236, column: 3, scope: !5510)
!5530 = !DILocation(line: 237, column: 19, scope: !5510)
!5531 = !DILocation(line: 237, column: 27, scope: !5510)
!5532 = !DILocation(line: 237, column: 41, scope: !5510)
!5533 = !DILocation(line: 237, column: 50, scope: !5510)
!5534 = !DILocation(line: 237, column: 59, scope: !5510)
!5535 = !DILocation(line: 237, column: 3, scope: !5510)
!5536 = !DILocation(line: 238, column: 3, scope: !5510)
!5537 = !DILocation(line: 239, column: 1, scope: !5510)
!5538 = distinct !DISubprogram(name: "xmalloc", scope: !5539, file: !5539, line: 39, type: !5540, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !301, retainedNodes: !4)
!5539 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5540 = !DISubroutineType(types: !5541)
!5541 = !{!8, !110}
!5542 = !DILocalVariable(name: "n", arg: 1, scope: !5538, file: !5539, line: 39, type: !110)
!5543 = !DILocation(line: 39, column: 17, scope: !5538)
!5544 = !DILocalVariable(name: "p", scope: !5538, file: !5539, line: 41, type: !8)
!5545 = !DILocation(line: 41, column: 9, scope: !5538)
!5546 = !DILocation(line: 41, column: 21, scope: !5538)
!5547 = !DILocation(line: 41, column: 13, scope: !5538)
!5548 = !DILocation(line: 42, column: 8, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5538, file: !5539, line: 42, column: 7)
!5550 = !DILocation(line: 42, column: 10, scope: !5549)
!5551 = !DILocation(line: 42, column: 13, scope: !5549)
!5552 = !DILocation(line: 42, column: 15, scope: !5549)
!5553 = !DILocation(line: 42, column: 7, scope: !5538)
!5554 = !DILocation(line: 43, column: 5, scope: !5549)
!5555 = !DILocation(line: 44, column: 10, scope: !5538)
!5556 = !DILocation(line: 44, column: 3, scope: !5538)
!5557 = !DILocalVariable(name: "n", arg: 1, scope: !5558, file: !5539, line: 39, type: !110)
!5558 = distinct !DISubprogram(name: "xmalloc", scope: !5539, file: !5539, line: 39, type: !5540, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5559, retainedNodes: !4)
!5559 = distinct !DICompileUnit(language: DW_LANG_C99, file: !302, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !303, nameTableKind: None)
!5560 = !DILocalVariable(name: "p", scope: !5558, file: !5539, line: 41, type: !8)
!5561 = distinct !DISubprogram(name: "xrealloc", scope: !5539, file: !5539, line: 51, type: !5562, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !301, retainedNodes: !4)
!5562 = !DISubroutineType(types: !5563)
!5563 = !{!8, !8, !110}
!5564 = !DILocalVariable(name: "p", arg: 1, scope: !5561, file: !5539, line: 51, type: !8)
!5565 = !DILocation(line: 51, column: 17, scope: !5561)
!5566 = !DILocalVariable(name: "n", arg: 2, scope: !5561, file: !5539, line: 51, type: !110)
!5567 = !DILocation(line: 51, column: 27, scope: !5561)
!5568 = !DILocation(line: 53, column: 8, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5561, file: !5539, line: 53, column: 7)
!5570 = !DILocation(line: 53, column: 10, scope: !5569)
!5571 = !DILocation(line: 53, column: 13, scope: !5569)
!5572 = !DILocation(line: 53, column: 7, scope: !5561)
!5573 = !DILocation(line: 57, column: 13, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5569, file: !5539, line: 54, column: 5)
!5575 = !DILocation(line: 57, column: 7, scope: !5574)
!5576 = !DILocation(line: 58, column: 7, scope: !5574)
!5577 = !DILocation(line: 61, column: 16, scope: !5561)
!5578 = !DILocation(line: 61, column: 19, scope: !5561)
!5579 = !DILocation(line: 61, column: 7, scope: !5561)
!5580 = !DILocation(line: 61, column: 5, scope: !5561)
!5581 = !DILocation(line: 62, column: 8, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5561, file: !5539, line: 62, column: 7)
!5583 = !DILocation(line: 62, column: 10, scope: !5582)
!5584 = !DILocation(line: 62, column: 13, scope: !5582)
!5585 = !DILocation(line: 62, column: 7, scope: !5561)
!5586 = !DILocation(line: 63, column: 5, scope: !5582)
!5587 = !DILocation(line: 64, column: 10, scope: !5561)
!5588 = !DILocation(line: 64, column: 3, scope: !5561)
!5589 = !DILocation(line: 65, column: 1, scope: !5561)
!5590 = distinct !DISubprogram(name: "x2nrealloc", scope: !5591, file: !5591, line: 174, type: !5592, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !301, retainedNodes: !4)
!5591 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5592 = !DISubroutineType(types: !5593)
!5593 = !{!8, !8, !5594, !110}
!5594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64)
!5595 = !DILocalVariable(name: "p", arg: 1, scope: !5590, file: !5591, line: 174, type: !8)
!5596 = !DILocation(line: 174, column: 19, scope: !5590)
!5597 = !DILocalVariable(name: "pn", arg: 2, scope: !5590, file: !5591, line: 174, type: !5594)
!5598 = !DILocation(line: 174, column: 30, scope: !5590)
!5599 = !DILocalVariable(name: "s", arg: 3, scope: !5590, file: !5591, line: 174, type: !110)
!5600 = !DILocation(line: 174, column: 41, scope: !5590)
!5601 = !DILocalVariable(name: "n", scope: !5590, file: !5591, line: 176, type: !110)
!5602 = !DILocation(line: 176, column: 10, scope: !5590)
!5603 = !DILocation(line: 176, column: 15, scope: !5590)
!5604 = !DILocation(line: 176, column: 14, scope: !5590)
!5605 = !DILocation(line: 178, column: 9, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5590, file: !5591, line: 178, column: 7)
!5607 = !DILocation(line: 178, column: 7, scope: !5590)
!5608 = !DILocation(line: 180, column: 13, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5610, file: !5591, line: 180, column: 11)
!5610 = distinct !DILexicalBlock(scope: !5606, file: !5591, line: 179, column: 5)
!5611 = !DILocation(line: 180, column: 11, scope: !5610)
!5612 = !DILocation(line: 188, column: 32, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5609, file: !5591, line: 181, column: 9)
!5614 = !DILocation(line: 188, column: 30, scope: !5613)
!5615 = !DILocation(line: 188, column: 13, scope: !5613)
!5616 = !DILocation(line: 189, column: 17, scope: !5613)
!5617 = !DILocation(line: 189, column: 16, scope: !5613)
!5618 = !DILocation(line: 189, column: 13, scope: !5613)
!5619 = !DILocation(line: 190, column: 9, scope: !5613)
!5620 = !DILocation(line: 191, column: 11, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5610, file: !5591, line: 191, column: 11)
!5622 = !DILocation(line: 191, column: 11, scope: !5610)
!5623 = !DILocation(line: 192, column: 9, scope: !5621)
!5624 = !DILocation(line: 193, column: 5, scope: !5610)
!5625 = !DILocation(line: 200, column: 71, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5627, file: !5591, line: 200, column: 11)
!5627 = distinct !DILexicalBlock(scope: !5606, file: !5591, line: 195, column: 5)
!5628 = !DILocation(line: 200, column: 69, scope: !5626)
!5629 = !DILocation(line: 201, column: 14, scope: !5626)
!5630 = !DILocation(line: 201, column: 11, scope: !5626)
!5631 = !DILocation(line: 200, column: 11, scope: !5627)
!5632 = !DILocation(line: 202, column: 9, scope: !5626)
!5633 = !DILocation(line: 203, column: 12, scope: !5627)
!5634 = !DILocation(line: 203, column: 14, scope: !5627)
!5635 = !DILocation(line: 203, column: 18, scope: !5627)
!5636 = !DILocation(line: 203, column: 9, scope: !5627)
!5637 = !DILocation(line: 206, column: 9, scope: !5590)
!5638 = !DILocation(line: 206, column: 4, scope: !5590)
!5639 = !DILocation(line: 206, column: 7, scope: !5590)
!5640 = !DILocation(line: 207, column: 20, scope: !5590)
!5641 = !DILocation(line: 207, column: 23, scope: !5590)
!5642 = !DILocation(line: 207, column: 27, scope: !5590)
!5643 = !DILocation(line: 207, column: 25, scope: !5590)
!5644 = !DILocation(line: 207, column: 10, scope: !5590)
!5645 = !DILocation(line: 207, column: 3, scope: !5590)
!5646 = distinct !DISubprogram(name: "xcharalloc", scope: !5591, file: !5591, line: 216, type: !5647, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !301, retainedNodes: !4)
!5647 = !DISubroutineType(types: !5648)
!5648 = !{!6, !110}
!5649 = !DILocalVariable(name: "n", arg: 1, scope: !5646, file: !5591, line: 216, type: !110)
!5650 = !DILocation(line: 216, column: 20, scope: !5646)
!5651 = !DILocation(line: 218, column: 10, scope: !5646)
!5652 = !DILocation(line: 218, column: 3, scope: !5646)
!5653 = !DILocalVariable(name: "n", arg: 1, scope: !5654, file: !5591, line: 216, type: !110)
!5654 = distinct !DISubprogram(name: "xcharalloc", scope: !5591, file: !5591, line: 216, type: !5647, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5655, retainedNodes: !4)
!5655 = distinct !DICompileUnit(language: DW_LANG_C99, file: !302, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !303, nameTableKind: None)
!5656 = distinct !DISubprogram(name: "xalloc_die", scope: !5657, file: !5657, line: 32, type: !1463, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !304, retainedNodes: !4)
!5657 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5658 = !DILocation(line: 34, column: 10, scope: !5656)
!5659 = !DILocation(line: 34, column: 33, scope: !5656)
!5660 = !DILocation(line: 34, column: 3, scope: !5656)
!5661 = !DILocation(line: 40, column: 3, scope: !5656)
!5662 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !5663, file: !5663, line: 86, type: !5664, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !306, retainedNodes: !4)
!5663 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5664 = !DISubroutineType(types: !5665)
!5665 = !{!110, !5666, !49, !110, !5667}
!5666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4417, size: 64)
!5667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5668, size: 64)
!5668 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !4391, line: 6, baseType: !5669)
!5669 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !4393, line: 21, baseType: !5670)
!5670 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4393, line: 13, size: 64, elements: !5671)
!5671 = !{!5672, !5673}
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !5670, file: !4393, line: 15, baseType: !53, size: 32)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !5670, file: !4393, line: 20, baseType: !5674, size: 32, offset: 32)
!5674 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5670, file: !4393, line: 16, size: 32, elements: !5675)
!5675 = !{!5676, !5677}
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !5674, file: !4393, line: 18, baseType: !180, size: 32)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !5674, file: !4393, line: 19, baseType: !82, size: 32)
!5678 = !DILocalVariable(name: "pwc", arg: 1, scope: !5662, file: !5663, line: 86, type: !5666)
!5679 = !DILocation(line: 86, column: 23, scope: !5662)
!5680 = !DILocalVariable(name: "s", arg: 2, scope: !5662, file: !5663, line: 86, type: !49)
!5681 = !DILocation(line: 86, column: 40, scope: !5662)
!5682 = !DILocalVariable(name: "n", arg: 3, scope: !5662, file: !5663, line: 86, type: !110)
!5683 = !DILocation(line: 86, column: 50, scope: !5662)
!5684 = !DILocalVariable(name: "ps", arg: 4, scope: !5662, file: !5663, line: 86, type: !5667)
!5685 = !DILocation(line: 86, column: 64, scope: !5662)
!5686 = !DILocalVariable(name: "ret", scope: !5662, file: !5663, line: 88, type: !110)
!5687 = !DILocation(line: 88, column: 10, scope: !5662)
!5688 = !DILocalVariable(name: "wc", scope: !5662, file: !5663, line: 89, type: !4417)
!5689 = !DILocation(line: 89, column: 11, scope: !5662)
!5690 = !DILocation(line: 105, column: 9, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !5662, file: !5663, line: 105, column: 7)
!5692 = !DILocation(line: 105, column: 7, scope: !5662)
!5693 = !DILocation(line: 106, column: 9, scope: !5691)
!5694 = !DILocation(line: 106, column: 5, scope: !5691)
!5695 = !DILocation(line: 145, column: 18, scope: !5662)
!5696 = !DILocation(line: 145, column: 23, scope: !5662)
!5697 = !DILocation(line: 145, column: 26, scope: !5662)
!5698 = !DILocation(line: 145, column: 29, scope: !5662)
!5699 = !DILocation(line: 145, column: 9, scope: !5662)
!5700 = !DILocation(line: 145, column: 7, scope: !5662)
!5701 = !DILocation(line: 154, column: 22, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5662, file: !5663, line: 154, column: 7)
!5703 = !DILocation(line: 154, column: 19, scope: !5702)
!5704 = !DILocation(line: 154, column: 26, scope: !5702)
!5705 = !DILocation(line: 154, column: 29, scope: !5702)
!5706 = !DILocation(line: 154, column: 31, scope: !5702)
!5707 = !DILocation(line: 154, column: 36, scope: !5702)
!5708 = !DILocation(line: 154, column: 41, scope: !5702)
!5709 = !DILocation(line: 154, column: 7, scope: !5662)
!5710 = !DILocalVariable(name: "uc", scope: !5711, file: !5663, line: 156, type: !317)
!5711 = distinct !DILexicalBlock(scope: !5702, file: !5663, line: 155, column: 5)
!5712 = !DILocation(line: 156, column: 21, scope: !5711)
!5713 = !DILocation(line: 156, column: 27, scope: !5711)
!5714 = !DILocation(line: 156, column: 26, scope: !5711)
!5715 = !DILocation(line: 157, column: 14, scope: !5711)
!5716 = !DILocation(line: 157, column: 8, scope: !5711)
!5717 = !DILocation(line: 157, column: 12, scope: !5711)
!5718 = !DILocation(line: 158, column: 7, scope: !5711)
!5719 = !DILocation(line: 162, column: 10, scope: !5662)
!5720 = !DILocation(line: 162, column: 3, scope: !5662)
!5721 = !DILocation(line: 163, column: 1, scope: !5662)
!5722 = !DILocalVariable(name: "pwc", arg: 1, scope: !5723, file: !5663, line: 86, type: !5666)
!5723 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !5663, file: !5663, line: 86, type: !5724, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5737, retainedNodes: !4)
!5724 = !DISubroutineType(types: !5725)
!5725 = !{!110, !5666, !49, !110, !5726}
!5726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5727, size: 64)
!5727 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !4391, line: 6, baseType: !5728)
!5728 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !4393, line: 21, baseType: !5729)
!5729 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4393, line: 13, size: 64, elements: !5730)
!5730 = !{!5731, !5732}
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !5729, file: !4393, line: 15, baseType: !53, size: 32)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !5729, file: !4393, line: 20, baseType: !5733, size: 32, offset: 32)
!5733 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5729, file: !4393, line: 16, size: 32, elements: !5734)
!5734 = !{!5735, !5736}
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !5733, file: !4393, line: 18, baseType: !180, size: 32)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !5733, file: !4393, line: 19, baseType: !82, size: 32)
!5737 = distinct !DICompileUnit(language: DW_LANG_C99, file: !307, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !308, nameTableKind: None)
!5738 = !DILocalVariable(name: "s", arg: 2, scope: !5723, file: !5663, line: 86, type: !49)
!5739 = !DILocalVariable(name: "n", arg: 3, scope: !5723, file: !5663, line: 86, type: !110)
!5740 = !DILocalVariable(name: "ps", arg: 4, scope: !5723, file: !5663, line: 86, type: !5726)
!5741 = !DILocalVariable(name: "ret", scope: !5723, file: !5663, line: 88, type: !110)
!5742 = !DILocalVariable(name: "wc", scope: !5723, file: !5663, line: 89, type: !4417)
!5743 = distinct !DISubprogram(name: "extract_trimmed_name", scope: !5744, file: !5744, line: 49, type: !5745, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !309, retainedNodes: !4)
!5744 = !DIFile(filename: "lib/readutmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5745 = !DISubroutineType(types: !5746)
!5746 = !{!6, !5747}
!5747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5748, size: 64)
!5748 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5749)
!5749 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !5750)
!5750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !5751)
!5751 = !{!5752, !5753, !5754, !5755, !5756, !5757, !5758, !5763, !5764, !5769, !5770}
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !5750, file: !72, line: 57, baseType: !14, size: 16)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !5750, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !5750, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !5750, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !5750, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !5750, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !5750, file: !72, line: 67, baseType: !5759, size: 32, offset: 2656)
!5759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !5760)
!5760 = !{!5761, !5762}
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !5759, file: !72, line: 45, baseType: !14, size: 16)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !5759, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !5750, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !5750, file: !72, line: 79, baseType: !5765, size: 64, offset: 2720)
!5765 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5750, file: !72, line: 75, size: 64, elements: !5766)
!5766 = !{!5767, !5768}
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !5765, file: !72, line: 77, baseType: !96, size: 32)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !5765, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !5750, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !5750, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!5771 = !DILocalVariable(name: "ut", arg: 1, scope: !5743, file: !5744, line: 49, type: !5747)
!5772 = !DILocation(line: 49, column: 42, scope: !5743)
!5773 = !DILocalVariable(name: "p", scope: !5743, file: !5744, line: 51, type: !6)
!5774 = !DILocation(line: 51, column: 9, scope: !5743)
!5775 = !DILocalVariable(name: "trimmed_name", scope: !5743, file: !5744, line: 51, type: !6)
!5776 = !DILocation(line: 51, column: 13, scope: !5743)
!5777 = !DILocation(line: 53, column: 18, scope: !5743)
!5778 = !DILocation(line: 53, column: 16, scope: !5743)
!5779 = !DILocation(line: 54, column: 12, scope: !5743)
!5780 = !DILocation(line: 54, column: 26, scope: !5743)
!5781 = !DILocation(line: 54, column: 3, scope: !5743)
!5782 = !DILocation(line: 58, column: 3, scope: !5743)
!5783 = !DILocation(line: 58, column: 39, scope: !5743)
!5784 = !DILocation(line: 59, column: 12, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5743, file: !5744, line: 59, column: 3)
!5786 = !DILocation(line: 59, column: 35, scope: !5785)
!5787 = !DILocation(line: 59, column: 27, scope: !5785)
!5788 = !DILocation(line: 59, column: 25, scope: !5785)
!5789 = !DILocation(line: 59, column: 10, scope: !5785)
!5790 = !DILocation(line: 59, column: 8, scope: !5785)
!5791 = !DILocation(line: 60, column: 8, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5785, file: !5744, line: 59, column: 3)
!5793 = !DILocation(line: 60, column: 23, scope: !5792)
!5794 = !DILocation(line: 60, column: 21, scope: !5792)
!5795 = !DILocation(line: 60, column: 25, scope: !5792)
!5796 = !DILocation(line: 60, column: 28, scope: !5792)
!5797 = !DILocation(line: 60, column: 34, scope: !5792)
!5798 = !DILocation(line: 0, scope: !5792)
!5799 = !DILocation(line: 59, column: 3, scope: !5785)
!5800 = !DILocation(line: 62, column: 5, scope: !5792)
!5801 = !DILocation(line: 61, column: 9, scope: !5792)
!5802 = !DILocation(line: 61, column: 13, scope: !5792)
!5803 = !DILocation(line: 59, column: 3, scope: !5792)
!5804 = distinct !{!5804, !5799, !5805}
!5805 = !DILocation(line: 62, column: 5, scope: !5785)
!5806 = !DILocation(line: 63, column: 10, scope: !5743)
!5807 = !DILocation(line: 63, column: 3, scope: !5743)
!5808 = distinct !DISubprogram(name: "read_utmp", scope: !5744, file: !5744, line: 92, type: !5809, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !309, retainedNodes: !4)
!5809 = !DISubroutineType(types: !5810)
!5810 = !{!53, !49, !5594, !5811, !53}
!5811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5812, size: 64)
!5812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5749, size: 64)
!5813 = !DILocalVariable(name: "file", arg: 1, scope: !5808, file: !5744, line: 92, type: !49)
!5814 = !DILocation(line: 92, column: 24, scope: !5808)
!5815 = !DILocalVariable(name: "n_entries", arg: 2, scope: !5808, file: !5744, line: 92, type: !5594)
!5816 = !DILocation(line: 92, column: 38, scope: !5808)
!5817 = !DILocalVariable(name: "utmp_buf", arg: 3, scope: !5808, file: !5744, line: 92, type: !5811)
!5818 = !DILocation(line: 92, column: 63, scope: !5808)
!5819 = !DILocalVariable(name: "options", arg: 4, scope: !5808, file: !5744, line: 93, type: !53)
!5820 = !DILocation(line: 93, column: 16, scope: !5808)
!5821 = !DILocalVariable(name: "n_read", scope: !5808, file: !5744, line: 95, type: !110)
!5822 = !DILocation(line: 95, column: 10, scope: !5808)
!5823 = !DILocalVariable(name: "n_alloc", scope: !5808, file: !5744, line: 96, type: !110)
!5824 = !DILocation(line: 96, column: 10, scope: !5808)
!5825 = !DILocalVariable(name: "utmp", scope: !5808, file: !5744, line: 97, type: !5812)
!5826 = !DILocation(line: 97, column: 16, scope: !5808)
!5827 = !DILocalVariable(name: "u", scope: !5808, file: !5744, line: 98, type: !5812)
!5828 = !DILocation(line: 98, column: 16, scope: !5808)
!5829 = !DILocation(line: 104, column: 32, scope: !5808)
!5830 = !DILocation(line: 104, column: 3, scope: !5808)
!5831 = !DILocation(line: 106, column: 3, scope: !5808)
!5832 = !DILocation(line: 108, column: 3, scope: !5808)
!5833 = !DILocation(line: 108, column: 15, scope: !5808)
!5834 = !DILocation(line: 108, column: 13, scope: !5808)
!5835 = !DILocation(line: 108, column: 32, scope: !5808)
!5836 = !DILocation(line: 109, column: 31, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5808, file: !5744, line: 109, column: 9)
!5838 = !DILocation(line: 109, column: 34, scope: !5837)
!5839 = !DILocation(line: 109, column: 9, scope: !5837)
!5840 = !DILocation(line: 109, column: 9, scope: !5808)
!5841 = !DILocation(line: 111, column: 13, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5843, file: !5744, line: 111, column: 13)
!5843 = distinct !DILexicalBlock(scope: !5837, file: !5744, line: 110, column: 7)
!5844 = !DILocation(line: 111, column: 23, scope: !5842)
!5845 = !DILocation(line: 111, column: 20, scope: !5842)
!5846 = !DILocation(line: 111, column: 13, scope: !5843)
!5847 = !DILocation(line: 112, column: 30, scope: !5842)
!5848 = !DILocation(line: 112, column: 18, scope: !5842)
!5849 = !DILocation(line: 112, column: 16, scope: !5842)
!5850 = !DILocation(line: 112, column: 11, scope: !5842)
!5851 = !DILocation(line: 114, column: 9, scope: !5843)
!5852 = !DILocation(line: 114, column: 20, scope: !5843)
!5853 = !DILocation(line: 114, column: 27, scope: !5843)
!5854 = !DILocation(line: 114, column: 26, scope: !5843)
!5855 = !DILocation(line: 115, column: 7, scope: !5843)
!5856 = distinct !{!5856, !5832, !5857}
!5857 = !DILocation(line: 115, column: 7, scope: !5808)
!5858 = !DILocation(line: 117, column: 3, scope: !5808)
!5859 = !DILocation(line: 119, column: 16, scope: !5808)
!5860 = !DILocation(line: 119, column: 4, scope: !5808)
!5861 = !DILocation(line: 119, column: 14, scope: !5808)
!5862 = !DILocation(line: 120, column: 15, scope: !5808)
!5863 = !DILocation(line: 120, column: 4, scope: !5808)
!5864 = !DILocation(line: 120, column: 13, scope: !5808)
!5865 = !DILocation(line: 122, column: 3, scope: !5808)
!5866 = distinct !DISubprogram(name: "desirable_utmp_entry", scope: !5744, file: !5744, line: 69, type: !5867, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !309, retainedNodes: !4)
!5867 = !DISubroutineType(types: !5868)
!5868 = !{!18, !5747, !53}
!5869 = !DILocalVariable(name: "u", arg: 1, scope: !5866, file: !5744, line: 69, type: !5747)
!5870 = !DILocation(line: 69, column: 42, scope: !5866)
!5871 = !DILocalVariable(name: "options", arg: 2, scope: !5866, file: !5744, line: 69, type: !53)
!5872 = !DILocation(line: 69, column: 49, scope: !5866)
!5873 = !DILocalVariable(name: "user_proc", scope: !5866, file: !5744, line: 71, type: !18)
!5874 = !DILocation(line: 71, column: 8, scope: !5866)
!5875 = !DILocation(line: 71, column: 20, scope: !5866)
!5876 = !DILocation(line: 0, scope: !5866)
!5877 = !DILocation(line: 72, column: 8, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5866, file: !5744, line: 72, column: 7)
!5879 = !DILocation(line: 72, column: 16, scope: !5878)
!5880 = !DILocation(line: 72, column: 42, scope: !5878)
!5881 = !DILocation(line: 72, column: 46, scope: !5878)
!5882 = !DILocation(line: 72, column: 7, scope: !5866)
!5883 = !DILocation(line: 73, column: 5, scope: !5878)
!5884 = !DILocation(line: 74, column: 8, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5866, file: !5744, line: 74, column: 7)
!5886 = !DILocation(line: 74, column: 16, scope: !5885)
!5887 = !DILocation(line: 75, column: 7, scope: !5885)
!5888 = !DILocation(line: 75, column: 10, scope: !5885)
!5889 = !DILocation(line: 76, column: 7, scope: !5885)
!5890 = !DILocation(line: 76, column: 14, scope: !5885)
!5891 = !DILocation(line: 76, column: 12, scope: !5885)
!5892 = !DILocation(line: 77, column: 7, scope: !5885)
!5893 = !DILocation(line: 77, column: 17, scope: !5885)
!5894 = !DILocation(line: 77, column: 11, scope: !5885)
!5895 = !DILocation(line: 77, column: 32, scope: !5885)
!5896 = !DILocation(line: 77, column: 36, scope: !5885)
!5897 = !DILocation(line: 77, column: 39, scope: !5885)
!5898 = !DILocation(line: 77, column: 45, scope: !5885)
!5899 = !DILocation(line: 74, column: 7, scope: !5866)
!5900 = !DILocation(line: 78, column: 5, scope: !5885)
!5901 = !DILocation(line: 79, column: 3, scope: !5866)
!5902 = !DILocation(line: 80, column: 1, scope: !5866)
!5903 = !DILocalVariable(name: "u", arg: 1, scope: !5904, file: !5744, line: 69, type: !5907)
!5904 = distinct !DISubprogram(name: "desirable_utmp_entry", scope: !5744, file: !5744, line: 69, type: !5905, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5931, retainedNodes: !4)
!5905 = !DISubroutineType(types: !5906)
!5906 = !{!18, !5907, !53}
!5907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5908, size: 64)
!5908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5909)
!5909 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !5910)
!5910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !5911)
!5911 = !{!5912, !5913, !5914, !5915, !5916, !5917, !5918, !5923, !5924, !5929, !5930}
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !5910, file: !72, line: 57, baseType: !14, size: 16)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !5910, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !5910, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !5910, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !5910, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !5910, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !5910, file: !72, line: 67, baseType: !5919, size: 32, offset: 2656)
!5919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !5920)
!5920 = !{!5921, !5922}
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !5919, file: !72, line: 45, baseType: !14, size: 16)
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !5919, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !5910, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!5924 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !5910, file: !72, line: 79, baseType: !5925, size: 64, offset: 2720)
!5925 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5910, file: !72, line: 75, size: 64, elements: !5926)
!5926 = !{!5927, !5928}
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !5925, file: !72, line: 77, baseType: !96, size: 32)
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !5925, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !5910, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !5910, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!5931 = distinct !DICompileUnit(language: DW_LANG_C99, file: !310, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !311, nameTableKind: None)
!5932 = !DILocalVariable(name: "options", arg: 2, scope: !5904, file: !5744, line: 69, type: !53)
!5933 = !DILocalVariable(name: "user_proc", scope: !5904, file: !5744, line: 71, type: !18)
!5934 = distinct !DISubprogram(name: "c_strcasecmp", scope: !5935, file: !5935, line: 27, type: !5936, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !312, retainedNodes: !4)
!5935 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5936 = !DISubroutineType(types: !5937)
!5937 = !{!53, !49, !49}
!5938 = !DILocalVariable(name: "s1", arg: 1, scope: !5934, file: !5935, line: 27, type: !49)
!5939 = !DILocation(line: 27, column: 27, scope: !5934)
!5940 = !DILocalVariable(name: "s2", arg: 2, scope: !5934, file: !5935, line: 27, type: !49)
!5941 = !DILocation(line: 27, column: 43, scope: !5934)
!5942 = !DILocalVariable(name: "p1", scope: !5934, file: !5935, line: 29, type: !315)
!5943 = !DILocation(line: 29, column: 33, scope: !5934)
!5944 = !DILocation(line: 29, column: 62, scope: !5934)
!5945 = !DILocalVariable(name: "p2", scope: !5934, file: !5935, line: 30, type: !315)
!5946 = !DILocation(line: 30, column: 33, scope: !5934)
!5947 = !DILocation(line: 30, column: 62, scope: !5934)
!5948 = !DILocalVariable(name: "c1", scope: !5934, file: !5935, line: 31, type: !317)
!5949 = !DILocation(line: 31, column: 17, scope: !5934)
!5950 = !DILocalVariable(name: "c2", scope: !5934, file: !5935, line: 31, type: !317)
!5951 = !DILocation(line: 31, column: 21, scope: !5934)
!5952 = !DILocation(line: 33, column: 7, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5934, file: !5935, line: 33, column: 7)
!5954 = !DILocation(line: 33, column: 13, scope: !5953)
!5955 = !DILocation(line: 33, column: 10, scope: !5953)
!5956 = !DILocation(line: 33, column: 7, scope: !5934)
!5957 = !DILocation(line: 34, column: 5, scope: !5953)
!5958 = !DILocation(line: 36, column: 3, scope: !5934)
!5959 = !DILocation(line: 38, column: 24, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5934, file: !5935, line: 37, column: 5)
!5961 = !DILocation(line: 38, column: 23, scope: !5960)
!5962 = !DILocation(line: 38, column: 12, scope: !5960)
!5963 = !DILocation(line: 38, column: 10, scope: !5960)
!5964 = !DILocation(line: 39, column: 24, scope: !5960)
!5965 = !DILocation(line: 39, column: 23, scope: !5960)
!5966 = !DILocation(line: 39, column: 12, scope: !5960)
!5967 = !DILocation(line: 39, column: 10, scope: !5960)
!5968 = !DILocation(line: 41, column: 11, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5960, file: !5935, line: 41, column: 11)
!5970 = !DILocation(line: 41, column: 14, scope: !5969)
!5971 = !DILocation(line: 41, column: 11, scope: !5960)
!5972 = !DILocation(line: 42, column: 9, scope: !5969)
!5973 = !DILocation(line: 44, column: 7, scope: !5960)
!5974 = !DILocation(line: 45, column: 7, scope: !5960)
!5975 = !DILocation(line: 46, column: 5, scope: !5960)
!5976 = !DILocation(line: 47, column: 10, scope: !5934)
!5977 = !DILocation(line: 47, column: 16, scope: !5934)
!5978 = !DILocation(line: 47, column: 13, scope: !5934)
!5979 = distinct !{!5979, !5958, !5980}
!5980 = !DILocation(line: 47, column: 18, scope: !5934)
!5981 = !DILocation(line: 50, column: 12, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5934, file: !5935, line: 49, column: 7)
!5983 = !DILocation(line: 50, column: 17, scope: !5982)
!5984 = !DILocation(line: 50, column: 15, scope: !5982)
!5985 = !DILocation(line: 50, column: 5, scope: !5982)
!5986 = !DILocation(line: 56, column: 1, scope: !5934)
!5987 = distinct !DISubprogram(name: "close_stream", scope: !5988, file: !5988, line: 56, type: !5989, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !318, retainedNodes: !4)
!5988 = !DIFile(filename: "lib/close-stream.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5989 = !DISubroutineType(types: !5990)
!5990 = !{!53, !5991}
!5991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5992, size: 64)
!5992 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5236, line: 7, baseType: !5993)
!5993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5238, line: 49, size: 1728, elements: !5994)
!5994 = !{!5995, !5996, !5997, !5998, !5999, !6000, !6001, !6002, !6003, !6004, !6005, !6006, !6007, !6008, !6010, !6011, !6012, !6013, !6014, !6015, !6016, !6017, !6018, !6019, !6020, !6021, !6022, !6023, !6024}
!5995 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5993, file: !5238, line: 51, baseType: !53, size: 32)
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5993, file: !5238, line: 54, baseType: !6, size: 64, offset: 64)
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5993, file: !5238, line: 55, baseType: !6, size: 64, offset: 128)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5993, file: !5238, line: 56, baseType: !6, size: 64, offset: 192)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5993, file: !5238, line: 57, baseType: !6, size: 64, offset: 256)
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5993, file: !5238, line: 58, baseType: !6, size: 64, offset: 320)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5993, file: !5238, line: 59, baseType: !6, size: 64, offset: 384)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5993, file: !5238, line: 60, baseType: !6, size: 64, offset: 448)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5993, file: !5238, line: 61, baseType: !6, size: 64, offset: 512)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5993, file: !5238, line: 64, baseType: !6, size: 64, offset: 576)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5993, file: !5238, line: 65, baseType: !6, size: 64, offset: 640)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5993, file: !5238, line: 66, baseType: !6, size: 64, offset: 704)
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5993, file: !5238, line: 68, baseType: !5253, size: 64, offset: 768)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5993, file: !5238, line: 70, baseType: !6009, size: 64, offset: 832)
!6009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5993, size: 64)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5993, file: !5238, line: 72, baseType: !53, size: 32, offset: 896)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5993, file: !5238, line: 73, baseType: !53, size: 32, offset: 928)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5993, file: !5238, line: 74, baseType: !1497, size: 64, offset: 960)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5993, file: !5238, line: 77, baseType: !188, size: 16, offset: 1024)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5993, file: !5238, line: 78, baseType: !5262, size: 8, offset: 1040)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5993, file: !5238, line: 79, baseType: !5264, size: 8, offset: 1048)
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5993, file: !5238, line: 81, baseType: !5268, size: 64, offset: 1088)
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5993, file: !5238, line: 89, baseType: !5271, size: 64, offset: 1152)
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5993, file: !5238, line: 91, baseType: !5273, size: 64, offset: 1216)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5993, file: !5238, line: 92, baseType: !5276, size: 64, offset: 1280)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5993, file: !5238, line: 93, baseType: !6009, size: 64, offset: 1344)
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5993, file: !5238, line: 94, baseType: !8, size: 64, offset: 1408)
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5993, file: !5238, line: 95, baseType: !110, size: 64, offset: 1472)
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5993, file: !5238, line: 96, baseType: !53, size: 32, offset: 1536)
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5993, file: !5238, line: 98, baseType: !105, size: 160, offset: 1568)
!6025 = !DILocalVariable(name: "stream", arg: 1, scope: !5987, file: !5988, line: 56, type: !5991)
!6026 = !DILocation(line: 56, column: 21, scope: !5987)
!6027 = !DILocalVariable(name: "some_pending", scope: !5987, file: !5988, line: 58, type: !6028)
!6028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18)
!6029 = !DILocation(line: 58, column: 14, scope: !5987)
!6030 = !DILocation(line: 58, column: 42, scope: !5987)
!6031 = !DILocation(line: 58, column: 30, scope: !5987)
!6032 = !DILocation(line: 58, column: 50, scope: !5987)
!6033 = !DILocalVariable(name: "prev_fail", scope: !5987, file: !5988, line: 59, type: !6028)
!6034 = !DILocation(line: 59, column: 14, scope: !5987)
!6035 = !DILocation(line: 59, column: 27, scope: !5987)
!6036 = !DILocation(line: 59, column: 43, scope: !5987)
!6037 = !DILocalVariable(name: "fclose_fail", scope: !5987, file: !5988, line: 60, type: !6028)
!6038 = !DILocation(line: 60, column: 14, scope: !5987)
!6039 = !DILocation(line: 60, column: 37, scope: !5987)
!6040 = !DILocation(line: 60, column: 29, scope: !5987)
!6041 = !DILocation(line: 60, column: 45, scope: !5987)
!6042 = !DILocation(line: 70, column: 7, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !5987, file: !5988, line: 70, column: 7)
!6044 = !DILocation(line: 70, column: 17, scope: !6043)
!6045 = !DILocation(line: 70, column: 21, scope: !6043)
!6046 = !DILocation(line: 70, column: 33, scope: !6043)
!6047 = !DILocation(line: 70, column: 37, scope: !6043)
!6048 = !DILocation(line: 70, column: 50, scope: !6043)
!6049 = !DILocation(line: 70, column: 53, scope: !6043)
!6050 = !DILocation(line: 70, column: 59, scope: !6043)
!6051 = !DILocation(line: 70, column: 7, scope: !5987)
!6052 = !DILocation(line: 72, column: 13, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6054, file: !5988, line: 72, column: 11)
!6054 = distinct !DILexicalBlock(scope: !6043, file: !5988, line: 71, column: 5)
!6055 = !DILocation(line: 72, column: 11, scope: !6054)
!6056 = !DILocation(line: 73, column: 9, scope: !6053)
!6057 = !DILocation(line: 73, column: 15, scope: !6053)
!6058 = !DILocation(line: 74, column: 7, scope: !6054)
!6059 = !DILocation(line: 77, column: 3, scope: !5987)
!6060 = !DILocation(line: 78, column: 1, scope: !5987)
!6061 = !DILocalVariable(name: "stream", arg: 1, scope: !6062, file: !5988, line: 56, type: !6065)
!6062 = distinct !DISubprogram(name: "close_stream", scope: !5988, file: !5988, line: 56, type: !6063, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6099, retainedNodes: !4)
!6063 = !DISubroutineType(types: !6064)
!6064 = !{!53, !6065}
!6065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6066, size: 64)
!6066 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5236, line: 7, baseType: !6067)
!6067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5238, line: 49, size: 1728, elements: !6068)
!6068 = !{!6069, !6070, !6071, !6072, !6073, !6074, !6075, !6076, !6077, !6078, !6079, !6080, !6081, !6082, !6084, !6085, !6086, !6087, !6088, !6089, !6090, !6091, !6092, !6093, !6094, !6095, !6096, !6097, !6098}
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6067, file: !5238, line: 51, baseType: !53, size: 32)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6067, file: !5238, line: 54, baseType: !6, size: 64, offset: 64)
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6067, file: !5238, line: 55, baseType: !6, size: 64, offset: 128)
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6067, file: !5238, line: 56, baseType: !6, size: 64, offset: 192)
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6067, file: !5238, line: 57, baseType: !6, size: 64, offset: 256)
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6067, file: !5238, line: 58, baseType: !6, size: 64, offset: 320)
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6067, file: !5238, line: 59, baseType: !6, size: 64, offset: 384)
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6067, file: !5238, line: 60, baseType: !6, size: 64, offset: 448)
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6067, file: !5238, line: 61, baseType: !6, size: 64, offset: 512)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6067, file: !5238, line: 64, baseType: !6, size: 64, offset: 576)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6067, file: !5238, line: 65, baseType: !6, size: 64, offset: 640)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6067, file: !5238, line: 66, baseType: !6, size: 64, offset: 704)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6067, file: !5238, line: 68, baseType: !5253, size: 64, offset: 768)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6067, file: !5238, line: 70, baseType: !6083, size: 64, offset: 832)
!6083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6067, size: 64)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6067, file: !5238, line: 72, baseType: !53, size: 32, offset: 896)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6067, file: !5238, line: 73, baseType: !53, size: 32, offset: 928)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6067, file: !5238, line: 74, baseType: !1497, size: 64, offset: 960)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6067, file: !5238, line: 77, baseType: !188, size: 16, offset: 1024)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6067, file: !5238, line: 78, baseType: !5262, size: 8, offset: 1040)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6067, file: !5238, line: 79, baseType: !5264, size: 8, offset: 1048)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6067, file: !5238, line: 81, baseType: !5268, size: 64, offset: 1088)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6067, file: !5238, line: 89, baseType: !5271, size: 64, offset: 1152)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !6067, file: !5238, line: 91, baseType: !5273, size: 64, offset: 1216)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !6067, file: !5238, line: 92, baseType: !5276, size: 64, offset: 1280)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !6067, file: !5238, line: 93, baseType: !6083, size: 64, offset: 1344)
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !6067, file: !5238, line: 94, baseType: !8, size: 64, offset: 1408)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6067, file: !5238, line: 95, baseType: !110, size: 64, offset: 1472)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6067, file: !5238, line: 96, baseType: !53, size: 32, offset: 1536)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6067, file: !5238, line: 98, baseType: !105, size: 160, offset: 1568)
!6099 = distinct !DICompileUnit(language: DW_LANG_C99, file: !319, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!6100 = !DILocalVariable(name: "some_pending", scope: !6062, file: !5988, line: 58, type: !6028)
!6101 = !DILocalVariable(name: "prev_fail", scope: !6062, file: !5988, line: 59, type: !6028)
!6102 = !DILocalVariable(name: "fclose_fail", scope: !6062, file: !5988, line: 60, type: !6028)
!6103 = distinct !DISubprogram(name: "locale_charset", scope: !6104, file: !6104, line: 831, type: !6105, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !320, retainedNodes: !4)
!6104 = !DIFile(filename: "lib/localcharset.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!6105 = !DISubroutineType(types: !6106)
!6106 = !{!49}
!6107 = !DILocalVariable(name: "codeset", scope: !6103, file: !6104, line: 833, type: !49)
!6108 = !DILocation(line: 833, column: 15, scope: !6103)
!6109 = !DILocation(line: 847, column: 13, scope: !6103)
!6110 = !DILocation(line: 847, column: 11, scope: !6103)
!6111 = !DILocation(line: 911, column: 7, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6103, file: !6104, line: 911, column: 7)
!6113 = !DILocation(line: 911, column: 15, scope: !6112)
!6114 = !DILocation(line: 911, column: 7, scope: !6103)
!6115 = !DILocation(line: 913, column: 13, scope: !6112)
!6116 = !DILocation(line: 913, column: 5, scope: !6112)
!6117 = !DILocation(line: 1070, column: 13, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6119, file: !6104, line: 1070, column: 13)
!6119 = distinct !DILexicalBlock(scope: !6120, file: !6104, line: 1060, column: 7)
!6120 = distinct !DILexicalBlock(scope: !6103, file: !6104, line: 1019, column: 3)
!6121 = !DILocation(line: 1070, column: 24, scope: !6118)
!6122 = !DILocation(line: 1070, column: 13, scope: !6119)
!6123 = !DILocation(line: 1071, column: 19, scope: !6118)
!6124 = !DILocation(line: 1071, column: 11, scope: !6118)
!6125 = !DILocation(line: 1158, column: 10, scope: !6103)
!6126 = !DILocation(line: 1158, column: 3, scope: !6103)
!6127 = !DILocalVariable(name: "codeset", scope: !6128, file: !6104, line: 833, type: !49)
!6128 = distinct !DISubprogram(name: "locale_charset", scope: !6104, file: !6104, line: 831, type: !6105, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6129, retainedNodes: !4)
!6129 = distinct !DICompileUnit(language: DW_LANG_C99, file: !321, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!6130 = distinct !DISubprogram(name: "rpl_fclose", scope: !6131, file: !6131, line: 58, type: !6132, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !322, retainedNodes: !4)
!6131 = !DIFile(filename: "lib/fclose.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!6132 = !DISubroutineType(types: !6133)
!6133 = !{!53, !6134}
!6134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6135, size: 64)
!6135 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5236, line: 7, baseType: !6136)
!6136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5238, line: 49, size: 1728, elements: !6137)
!6137 = !{!6138, !6139, !6140, !6141, !6142, !6143, !6144, !6145, !6146, !6147, !6148, !6149, !6150, !6151, !6153, !6154, !6155, !6156, !6157, !6158, !6159, !6160, !6161, !6162, !6163, !6164, !6165, !6166, !6167}
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6136, file: !5238, line: 51, baseType: !53, size: 32)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6136, file: !5238, line: 54, baseType: !6, size: 64, offset: 64)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6136, file: !5238, line: 55, baseType: !6, size: 64, offset: 128)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6136, file: !5238, line: 56, baseType: !6, size: 64, offset: 192)
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6136, file: !5238, line: 57, baseType: !6, size: 64, offset: 256)
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6136, file: !5238, line: 58, baseType: !6, size: 64, offset: 320)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6136, file: !5238, line: 59, baseType: !6, size: 64, offset: 384)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6136, file: !5238, line: 60, baseType: !6, size: 64, offset: 448)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6136, file: !5238, line: 61, baseType: !6, size: 64, offset: 512)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6136, file: !5238, line: 64, baseType: !6, size: 64, offset: 576)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6136, file: !5238, line: 65, baseType: !6, size: 64, offset: 640)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6136, file: !5238, line: 66, baseType: !6, size: 64, offset: 704)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6136, file: !5238, line: 68, baseType: !5253, size: 64, offset: 768)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6136, file: !5238, line: 70, baseType: !6152, size: 64, offset: 832)
!6152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6136, size: 64)
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6136, file: !5238, line: 72, baseType: !53, size: 32, offset: 896)
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6136, file: !5238, line: 73, baseType: !53, size: 32, offset: 928)
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6136, file: !5238, line: 74, baseType: !1497, size: 64, offset: 960)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6136, file: !5238, line: 77, baseType: !188, size: 16, offset: 1024)
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6136, file: !5238, line: 78, baseType: !5262, size: 8, offset: 1040)
!6158 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6136, file: !5238, line: 79, baseType: !5264, size: 8, offset: 1048)
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6136, file: !5238, line: 81, baseType: !5268, size: 64, offset: 1088)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6136, file: !5238, line: 89, baseType: !5271, size: 64, offset: 1152)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !6136, file: !5238, line: 91, baseType: !5273, size: 64, offset: 1216)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !6136, file: !5238, line: 92, baseType: !5276, size: 64, offset: 1280)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !6136, file: !5238, line: 93, baseType: !6152, size: 64, offset: 1344)
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !6136, file: !5238, line: 94, baseType: !8, size: 64, offset: 1408)
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6136, file: !5238, line: 95, baseType: !110, size: 64, offset: 1472)
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6136, file: !5238, line: 96, baseType: !53, size: 32, offset: 1536)
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6136, file: !5238, line: 98, baseType: !105, size: 160, offset: 1568)
!6168 = !DILocalVariable(name: "fp", arg: 1, scope: !6130, file: !6131, line: 58, type: !6134)
!6169 = !DILocation(line: 58, column: 19, scope: !6130)
!6170 = !DILocalVariable(name: "saved_errno", scope: !6130, file: !6131, line: 60, type: !53)
!6171 = !DILocation(line: 60, column: 7, scope: !6130)
!6172 = !DILocalVariable(name: "fd", scope: !6130, file: !6131, line: 61, type: !53)
!6173 = !DILocation(line: 61, column: 7, scope: !6130)
!6174 = !DILocalVariable(name: "result", scope: !6130, file: !6131, line: 62, type: !53)
!6175 = !DILocation(line: 62, column: 7, scope: !6130)
!6176 = !DILocation(line: 65, column: 16, scope: !6130)
!6177 = !DILocation(line: 65, column: 8, scope: !6130)
!6178 = !DILocation(line: 65, column: 6, scope: !6130)
!6179 = !DILocation(line: 66, column: 7, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6130, file: !6131, line: 66, column: 7)
!6181 = !DILocation(line: 66, column: 10, scope: !6180)
!6182 = !DILocation(line: 66, column: 7, scope: !6130)
!6183 = !DILocation(line: 67, column: 28, scope: !6180)
!6184 = !DILocation(line: 67, column: 12, scope: !6180)
!6185 = !DILocation(line: 67, column: 5, scope: !6180)
!6186 = !DILocation(line: 72, column: 9, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6130, file: !6131, line: 72, column: 7)
!6188 = !DILocation(line: 72, column: 23, scope: !6187)
!6189 = !DILocation(line: 72, column: 41, scope: !6187)
!6190 = !DILocation(line: 72, column: 33, scope: !6187)
!6191 = !DILocation(line: 72, column: 26, scope: !6187)
!6192 = !DILocation(line: 72, column: 59, scope: !6187)
!6193 = !DILocation(line: 73, column: 7, scope: !6187)
!6194 = !DILocation(line: 73, column: 18, scope: !6187)
!6195 = !DILocation(line: 73, column: 10, scope: !6187)
!6196 = !DILocation(line: 72, column: 7, scope: !6130)
!6197 = !DILocation(line: 74, column: 19, scope: !6187)
!6198 = !DILocation(line: 74, column: 17, scope: !6187)
!6199 = !DILocation(line: 74, column: 5, scope: !6187)
!6200 = !DILocation(line: 100, column: 28, scope: !6130)
!6201 = !DILocation(line: 100, column: 12, scope: !6130)
!6202 = !DILocation(line: 100, column: 10, scope: !6130)
!6203 = !DILocation(line: 105, column: 7, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6130, file: !6131, line: 105, column: 7)
!6205 = !DILocation(line: 105, column: 19, scope: !6204)
!6206 = !DILocation(line: 105, column: 7, scope: !6130)
!6207 = !DILocation(line: 107, column: 15, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6204, file: !6131, line: 106, column: 5)
!6209 = !DILocation(line: 107, column: 7, scope: !6208)
!6210 = !DILocation(line: 107, column: 13, scope: !6208)
!6211 = !DILocation(line: 108, column: 14, scope: !6208)
!6212 = !DILocation(line: 109, column: 5, scope: !6208)
!6213 = !DILocation(line: 111, column: 10, scope: !6130)
!6214 = !DILocation(line: 111, column: 3, scope: !6130)
!6215 = !DILocation(line: 112, column: 1, scope: !6130)
!6216 = !DILocalVariable(name: "fp", arg: 1, scope: !6217, file: !6131, line: 58, type: !6220)
!6217 = distinct !DISubprogram(name: "rpl_fclose", scope: !6131, file: !6131, line: 58, type: !6218, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6254, retainedNodes: !4)
!6218 = !DISubroutineType(types: !6219)
!6219 = !{!53, !6220}
!6220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6221, size: 64)
!6221 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5236, line: 7, baseType: !6222)
!6222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5238, line: 49, size: 1728, elements: !6223)
!6223 = !{!6224, !6225, !6226, !6227, !6228, !6229, !6230, !6231, !6232, !6233, !6234, !6235, !6236, !6237, !6239, !6240, !6241, !6242, !6243, !6244, !6245, !6246, !6247, !6248, !6249, !6250, !6251, !6252, !6253}
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6222, file: !5238, line: 51, baseType: !53, size: 32)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6222, file: !5238, line: 54, baseType: !6, size: 64, offset: 64)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6222, file: !5238, line: 55, baseType: !6, size: 64, offset: 128)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6222, file: !5238, line: 56, baseType: !6, size: 64, offset: 192)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6222, file: !5238, line: 57, baseType: !6, size: 64, offset: 256)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6222, file: !5238, line: 58, baseType: !6, size: 64, offset: 320)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6222, file: !5238, line: 59, baseType: !6, size: 64, offset: 384)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6222, file: !5238, line: 60, baseType: !6, size: 64, offset: 448)
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6222, file: !5238, line: 61, baseType: !6, size: 64, offset: 512)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6222, file: !5238, line: 64, baseType: !6, size: 64, offset: 576)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6222, file: !5238, line: 65, baseType: !6, size: 64, offset: 640)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6222, file: !5238, line: 66, baseType: !6, size: 64, offset: 704)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6222, file: !5238, line: 68, baseType: !5253, size: 64, offset: 768)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6222, file: !5238, line: 70, baseType: !6238, size: 64, offset: 832)
!6238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6222, size: 64)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6222, file: !5238, line: 72, baseType: !53, size: 32, offset: 896)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6222, file: !5238, line: 73, baseType: !53, size: 32, offset: 928)
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6222, file: !5238, line: 74, baseType: !1497, size: 64, offset: 960)
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6222, file: !5238, line: 77, baseType: !188, size: 16, offset: 1024)
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6222, file: !5238, line: 78, baseType: !5262, size: 8, offset: 1040)
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6222, file: !5238, line: 79, baseType: !5264, size: 8, offset: 1048)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6222, file: !5238, line: 81, baseType: !5268, size: 64, offset: 1088)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6222, file: !5238, line: 89, baseType: !5271, size: 64, offset: 1152)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !6222, file: !5238, line: 91, baseType: !5273, size: 64, offset: 1216)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !6222, file: !5238, line: 92, baseType: !5276, size: 64, offset: 1280)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !6222, file: !5238, line: 93, baseType: !6238, size: 64, offset: 1344)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !6222, file: !5238, line: 94, baseType: !8, size: 64, offset: 1408)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6222, file: !5238, line: 95, baseType: !110, size: 64, offset: 1472)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6222, file: !5238, line: 96, baseType: !53, size: 32, offset: 1536)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6222, file: !5238, line: 98, baseType: !105, size: 160, offset: 1568)
!6254 = distinct !DICompileUnit(language: DW_LANG_C99, file: !323, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!6255 = !DILocalVariable(name: "saved_errno", scope: !6217, file: !6131, line: 60, type: !53)
!6256 = !DILocalVariable(name: "fd", scope: !6217, file: !6131, line: 61, type: !53)
!6257 = !DILocalVariable(name: "result", scope: !6217, file: !6131, line: 62, type: !53)
!6258 = distinct !DISubprogram(name: "rpl_fflush", scope: !6259, file: !6259, line: 129, type: !6260, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !324, retainedNodes: !4)
!6259 = !DIFile(filename: "lib/fflush.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!6260 = !DISubroutineType(types: !6261)
!6261 = !{!53, !6262}
!6262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6263, size: 64)
!6263 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5236, line: 7, baseType: !6264)
!6264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5238, line: 49, size: 1728, elements: !6265)
!6265 = !{!6266, !6267, !6268, !6269, !6270, !6271, !6272, !6273, !6274, !6275, !6276, !6277, !6278, !6279, !6281, !6282, !6283, !6284, !6285, !6286, !6287, !6288, !6289, !6290, !6291, !6292, !6293, !6294, !6295}
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6264, file: !5238, line: 51, baseType: !53, size: 32)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6264, file: !5238, line: 54, baseType: !6, size: 64, offset: 64)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6264, file: !5238, line: 55, baseType: !6, size: 64, offset: 128)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6264, file: !5238, line: 56, baseType: !6, size: 64, offset: 192)
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6264, file: !5238, line: 57, baseType: !6, size: 64, offset: 256)
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6264, file: !5238, line: 58, baseType: !6, size: 64, offset: 320)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6264, file: !5238, line: 59, baseType: !6, size: 64, offset: 384)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6264, file: !5238, line: 60, baseType: !6, size: 64, offset: 448)
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6264, file: !5238, line: 61, baseType: !6, size: 64, offset: 512)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6264, file: !5238, line: 64, baseType: !6, size: 64, offset: 576)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6264, file: !5238, line: 65, baseType: !6, size: 64, offset: 640)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6264, file: !5238, line: 66, baseType: !6, size: 64, offset: 704)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6264, file: !5238, line: 68, baseType: !5253, size: 64, offset: 768)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6264, file: !5238, line: 70, baseType: !6280, size: 64, offset: 832)
!6280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6264, size: 64)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6264, file: !5238, line: 72, baseType: !53, size: 32, offset: 896)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6264, file: !5238, line: 73, baseType: !53, size: 32, offset: 928)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6264, file: !5238, line: 74, baseType: !1497, size: 64, offset: 960)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6264, file: !5238, line: 77, baseType: !188, size: 16, offset: 1024)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6264, file: !5238, line: 78, baseType: !5262, size: 8, offset: 1040)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6264, file: !5238, line: 79, baseType: !5264, size: 8, offset: 1048)
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6264, file: !5238, line: 81, baseType: !5268, size: 64, offset: 1088)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6264, file: !5238, line: 89, baseType: !5271, size: 64, offset: 1152)
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !6264, file: !5238, line: 91, baseType: !5273, size: 64, offset: 1216)
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !6264, file: !5238, line: 92, baseType: !5276, size: 64, offset: 1280)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !6264, file: !5238, line: 93, baseType: !6280, size: 64, offset: 1344)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !6264, file: !5238, line: 94, baseType: !8, size: 64, offset: 1408)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6264, file: !5238, line: 95, baseType: !110, size: 64, offset: 1472)
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6264, file: !5238, line: 96, baseType: !53, size: 32, offset: 1536)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6264, file: !5238, line: 98, baseType: !105, size: 160, offset: 1568)
!6296 = !DILocalVariable(name: "stream", arg: 1, scope: !6258, file: !6259, line: 129, type: !6262)
!6297 = !DILocation(line: 129, column: 19, scope: !6258)
!6298 = !DILocation(line: 150, column: 7, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6258, file: !6259, line: 150, column: 7)
!6300 = !DILocation(line: 150, column: 14, scope: !6299)
!6301 = !DILocation(line: 150, column: 22, scope: !6299)
!6302 = !DILocation(line: 150, column: 27, scope: !6299)
!6303 = !DILocation(line: 150, column: 7, scope: !6258)
!6304 = !DILocation(line: 151, column: 20, scope: !6299)
!6305 = !DILocation(line: 151, column: 12, scope: !6299)
!6306 = !DILocation(line: 151, column: 5, scope: !6299)
!6307 = !DILocation(line: 156, column: 44, scope: !6258)
!6308 = !DILocation(line: 156, column: 3, scope: !6258)
!6309 = !DILocation(line: 158, column: 18, scope: !6258)
!6310 = !DILocation(line: 158, column: 10, scope: !6258)
!6311 = !DILocation(line: 158, column: 3, scope: !6258)
!6312 = !DILocation(line: 235, column: 1, scope: !6258)
!6313 = !DILocalVariable(name: "stream", arg: 1, scope: !6314, file: !6259, line: 129, type: !6317)
!6314 = distinct !DISubprogram(name: "rpl_fflush", scope: !6259, file: !6259, line: 129, type: !6315, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6351, retainedNodes: !4)
!6315 = !DISubroutineType(types: !6316)
!6316 = !{!53, !6317}
!6317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6318, size: 64)
!6318 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5236, line: 7, baseType: !6319)
!6319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5238, line: 49, size: 1728, elements: !6320)
!6320 = !{!6321, !6322, !6323, !6324, !6325, !6326, !6327, !6328, !6329, !6330, !6331, !6332, !6333, !6334, !6336, !6337, !6338, !6339, !6340, !6341, !6342, !6343, !6344, !6345, !6346, !6347, !6348, !6349, !6350}
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6319, file: !5238, line: 51, baseType: !53, size: 32)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6319, file: !5238, line: 54, baseType: !6, size: 64, offset: 64)
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6319, file: !5238, line: 55, baseType: !6, size: 64, offset: 128)
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6319, file: !5238, line: 56, baseType: !6, size: 64, offset: 192)
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6319, file: !5238, line: 57, baseType: !6, size: 64, offset: 256)
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6319, file: !5238, line: 58, baseType: !6, size: 64, offset: 320)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6319, file: !5238, line: 59, baseType: !6, size: 64, offset: 384)
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6319, file: !5238, line: 60, baseType: !6, size: 64, offset: 448)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6319, file: !5238, line: 61, baseType: !6, size: 64, offset: 512)
!6330 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6319, file: !5238, line: 64, baseType: !6, size: 64, offset: 576)
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6319, file: !5238, line: 65, baseType: !6, size: 64, offset: 640)
!6332 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6319, file: !5238, line: 66, baseType: !6, size: 64, offset: 704)
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6319, file: !5238, line: 68, baseType: !5253, size: 64, offset: 768)
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6319, file: !5238, line: 70, baseType: !6335, size: 64, offset: 832)
!6335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6319, size: 64)
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6319, file: !5238, line: 72, baseType: !53, size: 32, offset: 896)
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6319, file: !5238, line: 73, baseType: !53, size: 32, offset: 928)
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6319, file: !5238, line: 74, baseType: !1497, size: 64, offset: 960)
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6319, file: !5238, line: 77, baseType: !188, size: 16, offset: 1024)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6319, file: !5238, line: 78, baseType: !5262, size: 8, offset: 1040)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6319, file: !5238, line: 79, baseType: !5264, size: 8, offset: 1048)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6319, file: !5238, line: 81, baseType: !5268, size: 64, offset: 1088)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6319, file: !5238, line: 89, baseType: !5271, size: 64, offset: 1152)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !6319, file: !5238, line: 91, baseType: !5273, size: 64, offset: 1216)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !6319, file: !5238, line: 92, baseType: !5276, size: 64, offset: 1280)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !6319, file: !5238, line: 93, baseType: !6335, size: 64, offset: 1344)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !6319, file: !5238, line: 94, baseType: !8, size: 64, offset: 1408)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6319, file: !5238, line: 95, baseType: !110, size: 64, offset: 1472)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6319, file: !5238, line: 96, baseType: !53, size: 32, offset: 1536)
!6350 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6319, file: !5238, line: 98, baseType: !105, size: 160, offset: 1568)
!6351 = distinct !DICompileUnit(language: DW_LANG_C99, file: !325, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!6352 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !6259, file: !6259, line: 41, type: !6353, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !324, retainedNodes: !4)
!6353 = !DISubroutineType(types: !6354)
!6354 = !{null, !6262}
!6355 = !DILocalVariable(name: "fp", arg: 1, scope: !6352, file: !6259, line: 41, type: !6262)
!6356 = !DILocation(line: 41, column: 48, scope: !6352)
!6357 = !DILocation(line: 43, column: 7, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6352, file: !6259, line: 43, column: 7)
!6359 = !DILocation(line: 43, column: 11, scope: !6358)
!6360 = !DILocation(line: 43, column: 18, scope: !6358)
!6361 = !DILocation(line: 43, column: 7, scope: !6352)
!6362 = !DILocation(line: 45, column: 13, scope: !6358)
!6363 = !DILocation(line: 45, column: 5, scope: !6358)
!6364 = !DILocation(line: 46, column: 1, scope: !6352)
!6365 = distinct !DISubprogram(name: "rpl_fseeko", scope: !6366, file: !6366, line: 28, type: !6367, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !326, retainedNodes: !4)
!6366 = !DIFile(filename: "lib/fseeko.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!6367 = !DISubroutineType(types: !6368)
!6368 = !{!53, !6369, !6403, !53}
!6369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6370, size: 64)
!6370 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5236, line: 7, baseType: !6371)
!6371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5238, line: 49, size: 1728, elements: !6372)
!6372 = !{!6373, !6374, !6375, !6376, !6377, !6378, !6379, !6380, !6381, !6382, !6383, !6384, !6385, !6386, !6388, !6389, !6390, !6391, !6392, !6393, !6394, !6395, !6396, !6397, !6398, !6399, !6400, !6401, !6402}
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6371, file: !5238, line: 51, baseType: !53, size: 32)
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6371, file: !5238, line: 54, baseType: !6, size: 64, offset: 64)
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6371, file: !5238, line: 55, baseType: !6, size: 64, offset: 128)
!6376 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6371, file: !5238, line: 56, baseType: !6, size: 64, offset: 192)
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6371, file: !5238, line: 57, baseType: !6, size: 64, offset: 256)
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6371, file: !5238, line: 58, baseType: !6, size: 64, offset: 320)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6371, file: !5238, line: 59, baseType: !6, size: 64, offset: 384)
!6380 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6371, file: !5238, line: 60, baseType: !6, size: 64, offset: 448)
!6381 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6371, file: !5238, line: 61, baseType: !6, size: 64, offset: 512)
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6371, file: !5238, line: 64, baseType: !6, size: 64, offset: 576)
!6383 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6371, file: !5238, line: 65, baseType: !6, size: 64, offset: 640)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6371, file: !5238, line: 66, baseType: !6, size: 64, offset: 704)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6371, file: !5238, line: 68, baseType: !5253, size: 64, offset: 768)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6371, file: !5238, line: 70, baseType: !6387, size: 64, offset: 832)
!6387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6371, size: 64)
!6388 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6371, file: !5238, line: 72, baseType: !53, size: 32, offset: 896)
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6371, file: !5238, line: 73, baseType: !53, size: 32, offset: 928)
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6371, file: !5238, line: 74, baseType: !1497, size: 64, offset: 960)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6371, file: !5238, line: 77, baseType: !188, size: 16, offset: 1024)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6371, file: !5238, line: 78, baseType: !5262, size: 8, offset: 1040)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6371, file: !5238, line: 79, baseType: !5264, size: 8, offset: 1048)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6371, file: !5238, line: 81, baseType: !5268, size: 64, offset: 1088)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6371, file: !5238, line: 89, baseType: !5271, size: 64, offset: 1152)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !6371, file: !5238, line: 91, baseType: !5273, size: 64, offset: 1216)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !6371, file: !5238, line: 92, baseType: !5276, size: 64, offset: 1280)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !6371, file: !5238, line: 93, baseType: !6387, size: 64, offset: 1344)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !6371, file: !5238, line: 94, baseType: !8, size: 64, offset: 1408)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6371, file: !5238, line: 95, baseType: !110, size: 64, offset: 1472)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6371, file: !5238, line: 96, baseType: !53, size: 32, offset: 1536)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6371, file: !5238, line: 98, baseType: !105, size: 160, offset: 1568)
!6403 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !5523, line: 63, baseType: !1497)
!6404 = !DILocalVariable(name: "fp", arg: 1, scope: !6365, file: !6366, line: 28, type: !6369)
!6405 = !DILocation(line: 28, column: 15, scope: !6365)
!6406 = !DILocalVariable(name: "offset", arg: 2, scope: !6365, file: !6366, line: 28, type: !6403)
!6407 = !DILocation(line: 28, column: 25, scope: !6365)
!6408 = !DILocalVariable(name: "whence", arg: 3, scope: !6365, file: !6366, line: 28, type: !53)
!6409 = !DILocation(line: 28, column: 37, scope: !6365)
!6410 = !DILocation(line: 52, column: 7, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6365, file: !6366, line: 52, column: 7)
!6412 = !DILocation(line: 52, column: 11, scope: !6411)
!6413 = !DILocation(line: 52, column: 27, scope: !6411)
!6414 = !DILocation(line: 52, column: 31, scope: !6411)
!6415 = !DILocation(line: 52, column: 24, scope: !6411)
!6416 = !DILocation(line: 53, column: 7, scope: !6411)
!6417 = !DILocation(line: 53, column: 10, scope: !6411)
!6418 = !DILocation(line: 53, column: 14, scope: !6411)
!6419 = !DILocation(line: 53, column: 31, scope: !6411)
!6420 = !DILocation(line: 53, column: 35, scope: !6411)
!6421 = !DILocation(line: 53, column: 28, scope: !6411)
!6422 = !DILocation(line: 54, column: 7, scope: !6411)
!6423 = !DILocation(line: 54, column: 10, scope: !6411)
!6424 = !DILocation(line: 54, column: 14, scope: !6411)
!6425 = !DILocation(line: 54, column: 28, scope: !6411)
!6426 = !DILocation(line: 52, column: 7, scope: !6365)
!6427 = !DILocalVariable(name: "pos", scope: !6428, file: !6366, line: 117, type: !6403)
!6428 = distinct !DILexicalBlock(scope: !6411, file: !6366, line: 113, column: 5)
!6429 = !DILocation(line: 117, column: 13, scope: !6428)
!6430 = !DILocation(line: 117, column: 34, scope: !6428)
!6431 = !DILocation(line: 117, column: 26, scope: !6428)
!6432 = !DILocation(line: 117, column: 39, scope: !6428)
!6433 = !DILocation(line: 117, column: 47, scope: !6428)
!6434 = !DILocation(line: 117, column: 19, scope: !6428)
!6435 = !DILocation(line: 118, column: 11, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6428, file: !6366, line: 118, column: 11)
!6437 = !DILocation(line: 118, column: 15, scope: !6436)
!6438 = !DILocation(line: 118, column: 11, scope: !6428)
!6439 = !DILocation(line: 124, column: 11, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6436, file: !6366, line: 119, column: 9)
!6441 = !DILocation(line: 129, column: 7, scope: !6428)
!6442 = !DILocation(line: 129, column: 11, scope: !6428)
!6443 = !DILocation(line: 129, column: 18, scope: !6428)
!6444 = !DILocation(line: 130, column: 21, scope: !6428)
!6445 = !DILocation(line: 130, column: 7, scope: !6428)
!6446 = !DILocation(line: 130, column: 11, scope: !6428)
!6447 = !DILocation(line: 130, column: 19, scope: !6428)
!6448 = !DILocation(line: 161, column: 7, scope: !6428)
!6449 = !DILocation(line: 163, column: 18, scope: !6365)
!6450 = !DILocation(line: 163, column: 22, scope: !6365)
!6451 = !DILocation(line: 163, column: 30, scope: !6365)
!6452 = !DILocation(line: 163, column: 10, scope: !6365)
!6453 = !DILocation(line: 163, column: 3, scope: !6365)
!6454 = !DILocation(line: 164, column: 1, scope: !6365)
