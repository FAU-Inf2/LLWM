; ModuleID = '<stdin>'
source_filename = "ld-temp.o"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.infomap = type { i8*, i8* }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.addrinfo = type { i32, i32, i32, i32, i32, %struct.sockaddr*, i8*, %struct.addrinfo* }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.utmpx = type { i16, i32, [32 x i8], [4 x i8], [32 x i8], [256 x i8], %struct.__exit_status, i32, %struct.anon, [4 x i32], [20 x i8] }
%struct.__exit_status = type { i16, i16 }
%struct.anon = type { i32, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.__mbstate_t = type { i32, %union.anon }
%union.anon = type { i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [44 x i8] c"Usage: %s [OPTION]... [ FILE | ARG1 ARG2 ]\0A\00", align 1
@.str.2 = private unnamed_addr constant [60 x i8] c"Print information about users who are currently logged in.\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [195 x i8] c"\0A  -a, --all         same as -b -d --login -p -r -t -T -u\0A  -b, --boot        time of last system boot\0A  -d, --dead        print dead processes\0A  -H, --heading     print line of column headings\0A\00", align 1
@.str.4 = private unnamed_addr constant [50 x i8] c"  -l, --login       print system login processes\0A\00", align 1
@.str.5 = private unnamed_addr constant [187 x i8] c"      --lookup      attempt to canonicalize hostnames via DNS\0A  -m                only hostname and user associated with stdin\0A  -p, --process     print active processes spawned by init\0A\00", align 1
@.str.6 = private unnamed_addr constant [223 x i8] c"  -q, --count       all login names and number of users logged on\0A  -r, --runlevel    print current runlevel\0A  -s, --short       print only name, line, and time (default)\0A  -t, --time        print last system clock change\0A\00", align 1
@.str.7 = private unnamed_addr constant [163 x i8] c"  -T, -w, --mesg    add user's message status as +, - or ?\0A  -u, --users       list users logged in\0A      --message     same as -T\0A      --writable    same as -T\0A\00", align 1
@.str.8 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.9 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.10 = private unnamed_addr constant [125 x i8] c"\0AIf FILE is not specified, use %s.  %s as FILE is common.\0AIf ARG1 ARG2 given, -m presumed: 'am i' or 'mom likes' are usual.\0A\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"/var/run/utmp\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"/var/log/wtmp\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"who\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.27, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.33 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.18 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.34 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.36 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.37 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.38 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.39 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.14 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.25 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.26 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.27 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.16 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"abdlmpqrstuwHT\00", align 1
@longopts = internal constant [18 x %struct.option] [%struct.option { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0), i32 0, i32* null, i32 97 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0), i32 0, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i32 0, i32 0), i32 0, i32* null, i32 113 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i32 0, i32 0), i32 0, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i32 0, i32 0), i32 0, i32* null, i32 72 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i32 0, i32 0), i32 0, i32* null, i32 108 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i32 0, i32 0), i32 0, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0), i32 0, i32* null, i32 112 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i32 0, i32 0), i32 0, i32* null, i32 114 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i32 0, i32 0), i32 0, i32* null, i32 115 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i32 0, i32 0), i32 0, i32* null, i32 116 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i32 0, i32 0), i32 0, i32* null, i32 117 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.56, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !0
@need_boottime = internal global i8 0, align 1, !dbg !31
@need_deadprocs = internal global i8 0, align 1, !dbg !33
@need_login = internal global i8 0, align 1, !dbg !35
@need_initspawn = internal global i8 0, align 1, !dbg !37
@need_runlevel = internal global i8 0, align 1, !dbg !41
@need_clockchange = internal global i8 0, align 1, !dbg !39
@need_users = internal global i8 0, align 1, !dbg !43
@include_mesg = internal global i8 0, align 1, !dbg !27
@include_idle = internal global i8 0, align 1, !dbg !23
@include_exit = internal global i8 0, align 1, !dbg !29
@include_heading = internal global i8 0, align 1, !dbg !25
@my_line_only = internal global i8 0, align 1, !dbg !45
@short_list = internal global i8 0, align 1, !dbg !19
@short_output = internal global i8 0, align 1, !dbg !21
@do_lookup = internal global i8 0, align 1, !dbg !16
@.str.19 = private unnamed_addr constant [17 x i8] c"Joseph Arceneaux\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str.21 = private unnamed_addr constant [14 x i8] c"Michael Stone\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"%Y-%m-%d %H:%M\00", align 1
@time_format = internal global i8* null, align 8, !dbg !47
@time_format_width = internal global i32 0, align 4, !dbg !51
@.str.23 = private unnamed_addr constant [12 x i8] c"%b %e %H:%M\00", align 1
@optind = external dso_local global i32, align 4
@.str.24 = private unnamed_addr constant [17 x i8] c"extra operand %s\00", align 1
@.str.57 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"/dev/\00", align 1
@.str.74 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@print_deadprocs.exitstr = internal global i8* null, align 8, !dbg !138
@.str.92 = private unnamed_addr constant [6 x i8] c"term=\00", align 1
@.str.93 = private unnamed_addr constant [6 x i8] c"exit=\00", align 1
@.str.94 = private unnamed_addr constant [10 x i8] c"%s%d %s%d\00", align 1
@print_line.mesg = internal global [3 x i8] c" x\00", align 1, !dbg !54
@.str.69 = private unnamed_addr constant [6 x i8] c" %-6s\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c" %10s\00", align 1
@.str.71 = private unnamed_addr constant [7 x i8] c" %-12s\00", align 1
@.str.73 = private unnamed_addr constant [5 x i8] c"   .\00", align 1
@.str.72 = private unnamed_addr constant [33 x i8] c"%-8.*s%s %-12.*s %-*s%s%s %-8s%s\00", align 1
@time_string.buf = internal global [33 x i8] zeroinitializer, align 16, !dbg !123
@.str.90 = private unnamed_addr constant [4 x i8] c"id=\00", align 1
@.str.91 = private unnamed_addr constant [6 x i8] c"LOGIN\00", align 1
@.str.89 = private unnamed_addr constant [13 x i8] c"clock change\00", align 1
@.str.88 = private unnamed_addr constant [12 x i8] c"system boot\00", align 1
@print_runlevel.runlevline = internal global i8* null, align 8, !dbg !131
@.str.84 = private unnamed_addr constant [10 x i8] c"run-level\00", align 1
@.str.85 = private unnamed_addr constant [6 x i8] c"%s %c\00", align 1
@print_runlevel.comment = internal global i8* null, align 8, !dbg !136
@.str.86 = private unnamed_addr constant [6 x i8] c"last=\00", align 1
@.str.87 = private unnamed_addr constant [5 x i8] c"%s%c\00", align 1
@.str.75 = private unnamed_addr constant [5 x i8] c"%.*s\00", align 1
@.str.76 = private unnamed_addr constant [4 x i8] c"  ?\00", align 1
@print_user.hostlen = internal global i64 0, align 8, !dbg !108
@print_user.hoststr = internal global i8* null, align 8, !dbg !62
@.str.77 = private unnamed_addr constant [8 x i8] c"(%s:%s)\00", align 1
@.str.78 = private unnamed_addr constant [5 x i8] c"(%s)\00", align 1
@idle_string.now = internal global i64 -9223372036854775808, align 8, !dbg !113
@.str.79 = private unnamed_addr constant [6 x i8] c"  .  \00", align 1
@.str.80 = private unnamed_addr constant [30 x i8] c"seconds_idle / (60 * 60) < 24\00", align 1
@.str.81 = private unnamed_addr constant [10 x i8] c"src/who.c\00", align 1
@__PRETTY_FUNCTION__.idle_string = private unnamed_addr constant [40 x i8] c"const char *idle_string(time_t, time_t)\00", align 1
@idle_string.idle_hhmm = internal global [6 x i8] zeroinitializer, align 1, !dbg !118
@.str.82 = private unnamed_addr constant [10 x i8] c"%02d:%02d\00", align 1
@.str.83 = private unnamed_addr constant [6 x i8] c" old \00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c"NAME\00", align 1
@.str.63 = private unnamed_addr constant [5 x i8] c"LINE\00", align 1
@.str.64 = private unnamed_addr constant [5 x i8] c"TIME\00", align 1
@.str.65 = private unnamed_addr constant [5 x i8] c"IDLE\00", align 1
@.str.66 = private unnamed_addr constant [4 x i8] c"PID\00", align 1
@.str.67 = private unnamed_addr constant [8 x i8] c"COMMENT\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"EXIT\00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.59 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.60 = private unnamed_addr constant [14 x i8] c"\0A# users=%lu\0A\00", align 1
@.str.40 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c"boot\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.44 = private unnamed_addr constant [8 x i8] c"heading\00", align 1
@.str.45 = private unnamed_addr constant [6 x i8] c"login\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"lookup\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"message\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"mesg\00", align 1
@.str.49 = private unnamed_addr constant [8 x i8] c"process\00", align 1
@.str.50 = private unnamed_addr constant [9 x i8] c"runlevel\00", align 1
@.str.51 = private unnamed_addr constant [6 x i8] c"short\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"users\00", align 1
@.str.54 = private unnamed_addr constant [9 x i8] c"writable\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@Version = internal global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.95, i32 0, i32 0), align 8, !dbg !153
@.str.95 = private unnamed_addr constant [5 x i8] c"8.32\00", align 1
@last_cherror = internal global i32 0, align 4, !dbg !158
@canon_host_r.hints = internal global %struct.addrinfo zeroinitializer, align 8, !dbg !163
@ignore_EPIPE = internal global i8 0, align 1, !dbg !196
@.str.102 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@file_name = internal global i8* null, align 8, !dbg !201
@.str.1.103 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.104 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = internal global i32 1, align 4, !dbg !204
@.str.109 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.110 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.115 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.116 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.117 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8
@program_name = internal global i8* null, align 8, !dbg !211
@program_invocation_name = external dso_local global i8*, align 8
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !218
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !266
@nslots = internal global i32 1, align 4, !dbg !273
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !275
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !264
@.str.10.120 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.121 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.122 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.123 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.124 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.125 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.126 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.127 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.128 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@quote_quoting_options = internal global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !252
@.str.137 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.138 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.139 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.140 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4.141 = private unnamed_addr constant [171 x i8] c"License GPLv3+: GNU GPL version 3 or later <%s>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\00", align 1
@.str.5.142 = private unnamed_addr constant [34 x i8] c"https://gnu.org/licenses/gpl.html\00", align 1
@.str.6.143 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.7.144 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.8.145 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.9.146 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.10.147 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.11.148 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.12.149 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.13.150 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.14.151 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.15.152 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@version_etc_copyright = internal constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !277
@.str.1.165 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.166 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.179 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.180 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@inVal0 = global i32 0
@inVal1 = global i8** null
@.compVal0 = private global [3 x i8] c"-m\00"
@.compVal1 = private global [4 x i8] c"-ma\00"
@.compVal2 = private global [4 x i8] c"-Hm\00"
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @usage(i32) #0 !dbg !334 {
  %2 = load i32, i32* @x
  %3 = load i32, i32* @y
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  store i32 %0, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !337, metadata !DIExpression()), !dbg !338
  %11 = load i32, i32* %10, align 4, !dbg !339
  %12 = icmp ne i32 %11, 0, !dbg !341
  %13 = load i32, i32* @x
  %14 = load i32, i32* @y
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %76, !dbg !342

21:                                               ; preds = %originalBBpart2
  %22 = load i32, i32* @x
  %23 = load i32, i32* @y
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  %30 = load i32, i32* @x
  %31 = load i32, i32* @y
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %38, !dbg !343

38:                                               ; preds = %originalBBpart24
  %39 = load i32, i32* @x
  %40 = load i32, i32* @y
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %38, %originalBB6alteredBB
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !344
  %48 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #10, !dbg !344
  %49 = load i8*, i8** @program_name, align 8, !dbg !344
  %50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %47, i8* %48, i8* %49), !dbg !344
  %51 = load i32, i32* @x
  %52 = load i32, i32* @y
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %59, !dbg !344

59:                                               ; preds = %originalBBpart28
  %60 = load i32, i32* @x
  %61 = load i32, i32* @y
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %59, %originalBB10alteredBB
  %68 = load i32, i32* @x
  %69 = load i32, i32* @y
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %122, !dbg !344

76:                                               ; preds = %originalBBpart2
  %77 = load i32, i32* @x
  %78 = load i32, i32* @y
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %76, %originalBB14alteredBB
  %85 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0)) #10, !dbg !346
  %86 = load i8*, i8** @program_name, align 8, !dbg !348
  %87 = call i32 (i8*, ...) @printf(i8* %85, i8* %86), !dbg !349
  %88 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !350
  %89 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !350
  %90 = call i32 @fputs_unlocked(i8* %88, %struct._IO_FILE* %89), !dbg !350
  %91 = call i8* @gettext(i8* getelementptr inbounds ([195 x i8], [195 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !351
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !351
  %93 = call i32 @fputs_unlocked(i8* %91, %struct._IO_FILE* %92), !dbg !351
  %94 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i64 0, i64 0)) #10, !dbg !352
  %95 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !352
  %96 = call i32 @fputs_unlocked(i8* %94, %struct._IO_FILE* %95), !dbg !352
  %97 = call i8* @gettext(i8* getelementptr inbounds ([187 x i8], [187 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !353
  %98 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !353
  %99 = call i32 @fputs_unlocked(i8* %97, %struct._IO_FILE* %98), !dbg !353
  %100 = call i8* @gettext(i8* getelementptr inbounds ([223 x i8], [223 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !354
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !354
  %102 = call i32 @fputs_unlocked(i8* %100, %struct._IO_FILE* %101), !dbg !354
  %103 = call i8* @gettext(i8* getelementptr inbounds ([163 x i8], [163 x i8]* @.str.7, i64 0, i64 0)) #10, !dbg !355
  %104 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !355
  %105 = call i32 @fputs_unlocked(i8* %103, %struct._IO_FILE* %104), !dbg !355
  %106 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8, i64 0, i64 0)) #10, !dbg !356
  %107 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !356
  %108 = call i32 @fputs_unlocked(i8* %106, %struct._IO_FILE* %107), !dbg !356
  %109 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !357
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !357
  %111 = call i32 @fputs_unlocked(i8* %109, %struct._IO_FILE* %110), !dbg !357
  %112 = call i8* @gettext(i8* getelementptr inbounds ([125 x i8], [125 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !358
  %113 = call i32 (i8*, ...) @printf(i8* %112, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0)), !dbg !359
  call void @emit_ancillary_info(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)), !dbg !360
  %114 = load i32, i32* @x
  %115 = load i32, i32* @y
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %122

122:                                              ; preds = %originalBBpart216, %originalBBpart212
  %123 = load i32, i32* @x
  %124 = load i32, i32* @y
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %122, %originalBB18alteredBB
  %131 = load i32, i32* %10, align 4, !dbg !361
  call void @exit(i32 %131) #12, !dbg !362
  %132 = load i32, i32* @x
  %133 = load i32, i32* @y
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  unreachable, !dbg !362

originalBBalteredBB:                              ; preds = %originalBB, %1
  %140 = alloca i32, align 4
  store i32 %0, i32* %140, align 4
  call void @llvm.dbg.declare(metadata i32* %140, metadata !363, metadata !DIExpression()), !dbg !338
  %141 = load i32, i32* %140, align 4, !dbg !339
  %142 = icmp ne i32 %141, 0, !dbg !341
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %38
  %143 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !344
  %144 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #10, !dbg !344
  %145 = load i8*, i8** @program_name, align 8, !dbg !344
  %146 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %143, i8* %144, i8* %145), !dbg !344
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %59
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %76
  %147 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0)) #10, !dbg !346
  %148 = load i8*, i8** @program_name, align 8, !dbg !348
  %149 = call i32 (i8*, ...) @printf(i8* %147, i8* %148), !dbg !349
  %150 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !350
  %151 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !350
  %152 = call i32 @fputs_unlocked(i8* %150, %struct._IO_FILE* %151), !dbg !350
  %153 = call i8* @gettext(i8* getelementptr inbounds ([195 x i8], [195 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !351
  %154 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !351
  %155 = call i32 @fputs_unlocked(i8* %153, %struct._IO_FILE* %154), !dbg !351
  %156 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i64 0, i64 0)) #10, !dbg !352
  %157 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !352
  %158 = call i32 @fputs_unlocked(i8* %156, %struct._IO_FILE* %157), !dbg !352
  %159 = call i8* @gettext(i8* getelementptr inbounds ([187 x i8], [187 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !353
  %160 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !353
  %161 = call i32 @fputs_unlocked(i8* %159, %struct._IO_FILE* %160), !dbg !353
  %162 = call i8* @gettext(i8* getelementptr inbounds ([223 x i8], [223 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !354
  %163 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !354
  %164 = call i32 @fputs_unlocked(i8* %162, %struct._IO_FILE* %163), !dbg !354
  %165 = call i8* @gettext(i8* getelementptr inbounds ([163 x i8], [163 x i8]* @.str.7, i64 0, i64 0)) #10, !dbg !355
  %166 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !355
  %167 = call i32 @fputs_unlocked(i8* %165, %struct._IO_FILE* %166), !dbg !355
  %168 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8, i64 0, i64 0)) #10, !dbg !356
  %169 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !356
  %170 = call i32 @fputs_unlocked(i8* %168, %struct._IO_FILE* %169), !dbg !356
  %171 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !357
  %172 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !357
  %173 = call i32 @fputs_unlocked(i8* %171, %struct._IO_FILE* %172), !dbg !357
  %174 = call i8* @gettext(i8* getelementptr inbounds ([125 x i8], [125 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !358
  %175 = call i32 (i8*, ...) @printf(i8* %174, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0)), !dbg !359
  call void @emit_ancillary_info(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)), !dbg !360
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %122
  %176 = load i32, i32* %10, align 4, !dbg !361
  call void @exit(i32 %176) #12, !dbg !362
  br label %originalBB18
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8*) #4 !dbg !465 {
  %2 = load i32, i32* @x.1
  %3 = load i32, i32* @y.2
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  %11 = alloca [7 x %struct.infomap], align 16
  %12 = alloca i8*, align 8
  %13 = alloca %struct.infomap*, align 8
  %14 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !469, metadata !DIExpression()), !dbg !470
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %11, metadata !471, metadata !DIExpression()), !dbg !480
  %15 = bitcast [7 x %struct.infomap]* %11 to i8*, !dbg !480
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %15, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !480
  call void @llvm.dbg.declare(metadata i8** %12, metadata !481, metadata !DIExpression()), !dbg !482
  %16 = load i8*, i8** %10, align 8, !dbg !483
  store i8* %16, i8** %12, align 8, !dbg !482
  call void @llvm.dbg.declare(metadata %struct.infomap** %13, metadata !484, metadata !DIExpression()), !dbg !486
  %17 = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %11, i64 0, i64 0, !dbg !487
  store %struct.infomap* %17, %struct.infomap** %13, align 8, !dbg !486
  %18 = load i32, i32* @x.1
  %19 = load i32, i32* @y.2
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %26, !dbg !488

26:                                               ; preds = %originalBBpart224, %originalBBpart2
  %27 = load i32, i32* @x.1
  %28 = load i32, i32* @y.2
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !489
  %36 = getelementptr inbounds %struct.infomap, %struct.infomap* %35, i32 0, i32 0, !dbg !490
  %37 = load i8*, i8** %36, align 8, !dbg !490
  %38 = icmp ne i8* %37, null, !dbg !489
  %39 = load i32, i32* @x.1
  %40 = load i32, i32* @y.2
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %38, label %47, label %71, !dbg !491

47:                                               ; preds = %originalBBpart24
  %48 = load i32, i32* @x.1
  %49 = load i32, i32* @y.2
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %47, %originalBB6alteredBB
  %56 = load i8*, i8** %10, align 8, !dbg !492
  %57 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !492
  %58 = getelementptr inbounds %struct.infomap, %struct.infomap* %57, i32 0, i32 0, !dbg !492
  %59 = load i8*, i8** %58, align 8, !dbg !492
  %60 = call i32 @strcmp(i8* %56, i8* %59) #13, !dbg !492
  %61 = icmp eq i32 %60, 0, !dbg !492
  %62 = xor i1 %61, true, !dbg !493
  %63 = load i32, i32* @x.1
  %64 = load i32, i32* @y.2
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart216, label %originalBB6alteredBB

originalBBpart216:                                ; preds = %originalBB6
  br label %71

71:                                               ; preds = %originalBBpart216, %originalBBpart24
  %72 = phi i1 [ false, %originalBBpart24 ], [ %62, %originalBBpart216 ], !dbg !494
  %73 = load i32, i32* @x.1
  %74 = load i32, i32* @y.2
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %71, %originalBB18alteredBB
  %81 = load i32, i32* @x.1
  %82 = load i32, i32* @y.2
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %72, label %89, label %108, !dbg !488

89:                                               ; preds = %originalBBpart220
  %90 = load i32, i32* @x.1
  %91 = load i32, i32* @y.2
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %89, %originalBB22alteredBB
  %98 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !495
  %99 = getelementptr inbounds %struct.infomap, %struct.infomap* %98, i32 1, !dbg !495
  store %struct.infomap* %99, %struct.infomap** %13, align 8, !dbg !495
  %100 = load i32, i32* @x.1
  %101 = load i32, i32* @y.2
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %26, !dbg !488, !llvm.loop !496

108:                                              ; preds = %originalBBpart220
  %109 = load i32, i32* @x.1
  %110 = load i32, i32* @y.2
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %108, %originalBB26alteredBB
  %117 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !497
  %118 = getelementptr inbounds %struct.infomap, %struct.infomap* %117, i32 0, i32 1, !dbg !499
  %119 = load i8*, i8** %118, align 8, !dbg !499
  %120 = icmp ne i8* %119, null, !dbg !497
  %121 = load i32, i32* @x.1
  %122 = load i32, i32* @y.2
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %120, label %129, label %149, !dbg !500

129:                                              ; preds = %originalBBpart228
  %130 = load i32, i32* @x.1
  %131 = load i32, i32* @y.2
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %129, %originalBB30alteredBB
  %138 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !501
  %139 = getelementptr inbounds %struct.infomap, %struct.infomap* %138, i32 0, i32 1, !dbg !502
  %140 = load i8*, i8** %139, align 8, !dbg !502
  store i8* %140, i8** %12, align 8, !dbg !503
  %141 = load i32, i32* @x.1
  %142 = load i32, i32* @y.2
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %149, !dbg !504

149:                                              ; preds = %originalBBpart232, %originalBBpart228
  %150 = load i32, i32* @x.1
  %151 = load i32, i32* @y.2
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %149, %originalBB34alteredBB
  %158 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0)) #10, !dbg !505
  %159 = call i32 (i8*, ...) @printf(i8* %158, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34, i64 0, i64 0)), !dbg !506
  call void @llvm.dbg.declare(metadata i8** %14, metadata !507, metadata !DIExpression()), !dbg !508
  %160 = call i8* @setlocale(i32 5, i8* null) #10, !dbg !509
  store i8* %160, i8** %14, align 8, !dbg !508
  %161 = load i8*, i8** %14, align 8, !dbg !510
  %162 = icmp ne i8* %161, null, !dbg !510
  %163 = load i32, i32* @x.1
  %164 = load i32, i32* @y.2
  %165 = sub i32 %163, 1
  %166 = mul i32 %163, %165
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %168, %169
  br i1 %170, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %162, label %171, label %211, !dbg !512

171:                                              ; preds = %originalBBpart236
  %172 = load i32, i32* @x.1
  %173 = load i32, i32* @y.2
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %171, %originalBB38alteredBB
  %180 = load i8*, i8** %14, align 8, !dbg !513
  %181 = call i32 @strncmp(i8* %180, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), i64 3) #13, !dbg !513
  %182 = icmp ne i32 %181, 0, !dbg !513
  %183 = load i32, i32* @x.1
  %184 = load i32, i32* @y.2
  %185 = sub i32 %183, 1
  %186 = mul i32 %183, %185
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %188, %189
  br i1 %190, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %182, label %191, label %211, !dbg !514

191:                                              ; preds = %originalBBpart240
  %192 = load i32, i32* @x.1
  %193 = load i32, i32* @y.2
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %191, %originalBB42alteredBB
  %200 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.36, i64 0, i64 0)) #10, !dbg !515
  %201 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !515
  %202 = call i32 @fputs_unlocked(i8* %200, %struct._IO_FILE* %201), !dbg !515
  %203 = load i32, i32* @x.1
  %204 = load i32, i32* @y.2
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %211, !dbg !517

211:                                              ; preds = %originalBBpart244, %originalBBpart240, %originalBBpart236
  %212 = load i32, i32* @x.1
  %213 = load i32, i32* @y.2
  %214 = sub i32 %212, 1
  %215 = mul i32 %212, %214
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %217, %218
  br i1 %219, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %211, %originalBB46alteredBB
  %220 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37, i64 0, i64 0)) #10, !dbg !518
  %221 = load i8*, i8** %10, align 8, !dbg !519
  %222 = call i32 (i8*, ...) @printf(i8* %220, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34, i64 0, i64 0), i8* %221), !dbg !520
  %223 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.38, i64 0, i64 0)) #10, !dbg !521
  %224 = load i8*, i8** %12, align 8, !dbg !522
  %225 = load i8*, i8** %12, align 8, !dbg !523
  %226 = load i8*, i8** %10, align 8, !dbg !524
  %227 = icmp eq i8* %225, %226, !dbg !525
  %228 = zext i1 %227 to i64, !dbg !523
  %229 = select i1 %227, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !523
  %230 = call i32 (i8*, ...) @printf(i8* %223, i8* %224, i8* %229), !dbg !526
  %231 = load i32, i32* @x.1
  %232 = load i32, i32* @y.2
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  ret void, !dbg !527

originalBBalteredBB:                              ; preds = %originalBB, %1
  %239 = alloca i8*, align 8
  %240 = alloca [7 x %struct.infomap], align 16
  %241 = alloca i8*, align 8
  %242 = alloca %struct.infomap*, align 8
  %243 = alloca i8*, align 8
  store i8* %0, i8** %239, align 8
  call void @llvm.dbg.declare(metadata i8** %239, metadata !528, metadata !DIExpression()), !dbg !470
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %240, metadata !630, metadata !DIExpression()), !dbg !480
  %244 = bitcast [7 x %struct.infomap]* %240 to i8*, !dbg !480
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %244, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !480
  call void @llvm.dbg.declare(metadata i8** %241, metadata !637, metadata !DIExpression()), !dbg !482
  %245 = load i8*, i8** %239, align 8, !dbg !483
  store i8* %245, i8** %241, align 8, !dbg !482
  call void @llvm.dbg.declare(metadata %struct.infomap** %242, metadata !638, metadata !DIExpression()), !dbg !486
  %246 = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %240, i64 0, i64 0, !dbg !487
  store %struct.infomap* %246, %struct.infomap** %242, align 8, !dbg !486
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %247 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !489
  %248 = getelementptr inbounds %struct.infomap, %struct.infomap* %247, i32 0, i32 0, !dbg !490
  %249 = load i8*, i8** %248, align 8, !dbg !490
  %250 = icmp ne i8* %249, null, !dbg !489
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %47
  %251 = load i8*, i8** %10, align 8, !dbg !492
  %252 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !492
  %253 = getelementptr inbounds %struct.infomap, %struct.infomap* %252, i32 0, i32 0, !dbg !492
  %254 = load i8*, i8** %253, align 8, !dbg !492
  %255 = call i32 @strcmp(i8* %251, i8* %254) #13, !dbg !492
  %256 = icmp eq i32 %255, 0, !dbg !492
  %_ = sub i1 false, %256
  %gen = add i1 %_, true
  %_7 = shl i1 %256, true
  %_8 = shl i1 %256, true
  %_9 = shl i1 %256, true
  %_10 = sub i1 %256, true
  %gen11 = mul i1 %_10, true
  %_12 = shl i1 %256, true
  %_13 = sub i1 false, %256
  %gen14 = add i1 %_13, true
  %257 = xor i1 %256, true, !dbg !493
  br label %originalBB6

originalBB18alteredBB:                            ; preds = %originalBB18, %71
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %89
  %258 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !495
  %259 = getelementptr inbounds %struct.infomap, %struct.infomap* %258, i32 1, !dbg !495
  store %struct.infomap* %259, %struct.infomap** %13, align 8, !dbg !495
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %108
  %260 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !497
  %261 = getelementptr inbounds %struct.infomap, %struct.infomap* %260, i32 0, i32 1, !dbg !499
  %262 = load i8*, i8** %261, align 8, !dbg !499
  %263 = icmp ne i8* %262, null, !dbg !497
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %129
  %264 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !501
  %265 = getelementptr inbounds %struct.infomap, %struct.infomap* %264, i32 0, i32 1, !dbg !502
  %266 = load i8*, i8** %265, align 8, !dbg !502
  store i8* %266, i8** %12, align 8, !dbg !503
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %149
  %267 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0)) #10, !dbg !505
  %268 = call i32 (i8*, ...) @printf(i8* %267, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34, i64 0, i64 0)), !dbg !506
  call void @llvm.dbg.declare(metadata !4, metadata !640, metadata !DIExpression()), !dbg !508
  %269 = call i8* @setlocale(i32 5, i8* null) #10, !dbg !509
  store i8* %269, i8** %14, align 8, !dbg !508
  %270 = load i8*, i8** %14, align 8, !dbg !510
  %271 = icmp ne i8* %270, null, !dbg !510
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %171
  %272 = load i8*, i8** %14, align 8, !dbg !513
  %273 = call i32 @strncmp(i8* %272, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), i64 3) #13, !dbg !513
  %274 = icmp ne i32 %273, 0, !dbg !513
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %191
  %275 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.36, i64 0, i64 0)) #10, !dbg !515
  %276 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !515
  %277 = call i32 @fputs_unlocked(i8* %275, %struct._IO_FILE* %276), !dbg !515
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %211
  %278 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37, i64 0, i64 0)) #10, !dbg !518
  %279 = load i8*, i8** %10, align 8, !dbg !519
  %280 = call i32 (i8*, ...) @printf(i8* %278, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34, i64 0, i64 0), i8* %279), !dbg !520
  %281 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.38, i64 0, i64 0)) #10, !dbg !521
  %282 = load i8*, i8** %12, align 8, !dbg !522
  %283 = load i8*, i8** %12, align 8, !dbg !523
  %284 = load i8*, i8** %10, align 8, !dbg !524
  %285 = icmp eq i8* %283, %284, !dbg !525
  %286 = zext i1 %285 to i64, !dbg !523
  %287 = select i1 %285, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !523
  %288 = call i32 (i8*, ...) @printf(i8* %281, i8* %282, i8* %287), !dbg !526
  br label %originalBB46
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32, i8**) #4 !dbg !742 {
  %3 = load i32, i32* @x.3
  %4 = load i32, i32* @y.4
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  store i8** %1, i8*** @inVal1
  store i32 %0, i32* @inVal0
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8**, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  store i32 0, i32* %11, align 4
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !746, metadata !DIExpression()), !dbg !747
  store i8** %1, i8*** %13, align 8
  call void @llvm.dbg.declare(metadata i8*** %13, metadata !748, metadata !DIExpression()), !dbg !749
  call void @llvm.dbg.declare(metadata i32* %14, metadata !750, metadata !DIExpression()), !dbg !751
  call void @llvm.dbg.declare(metadata i8* %15, metadata !752, metadata !DIExpression()), !dbg !753
  store i8 1, i8* %15, align 1, !dbg !753
  %16 = load i8**, i8*** %13, align 8, !dbg !754
  %17 = getelementptr inbounds i8*, i8** %16, i64 0, !dbg !754
  %18 = load i8*, i8** %17, align 8, !dbg !754
  call void @set_program_name(i8* %18), !dbg !755
  %19 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)) #10, !dbg !756
  %20 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0)) #10, !dbg !757
  %21 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0)) #10, !dbg !758
  %22 = call i32 @atexit(void ()* @close_stdout) #10, !dbg !759
  %23 = load i32, i32* @x.3
  %24 = load i32, i32* @y.4
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31, !dbg !760

31:                                               ; preds = %originalBBpart272, %originalBBpart2
  %32 = load i32, i32* @x.3
  %33 = load i32, i32* @y.4
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load i32, i32* %12, align 4, !dbg !761
  %41 = load i8**, i8*** %13, align 8, !dbg !762
  %42 = call i32 @getopt_long(i32 %40, i8** %41, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0), %struct.option* getelementptr inbounds ([18 x %struct.option], [18 x %struct.option]* @longopts, i64 0, i64 0), i32* null) #10, !dbg !763
  store i32 %42, i32* %14, align 4, !dbg !764
  %43 = icmp ne i32 %42, -1, !dbg !765
  %44 = load i32, i32* @x.3
  %45 = load i32, i32* @y.4
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %43, label %52, label %346, !dbg !760

52:                                               ; preds = %originalBBpart24
  %53 = load i32, i32* @x.3
  %54 = load i32, i32* @y.4
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %52, %originalBB6alteredBB
  %61 = load i32, i32* %14, align 4, !dbg !766
  %62 = load i32, i32* @x.3
  %63 = load i32, i32* @y.4
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  switch i32 %61, label %312 [
    i32 97, label %70
    i32 98, label %87
    i32 100, label %104
    i32 72, label %121
    i32 108, label %138
    i32 109, label %155
    i32 112, label %172
    i32 113, label %189
    i32 114, label %206
    i32 115, label %223
    i32 116, label %240
    i32 84, label %241
    i32 119, label %241
    i32 117, label %258
    i32 128, label %259
    i32 -130, label %276
    i32 -131, label %293
  ], !dbg !768

70:                                               ; preds = %originalBBpart28
  %71 = load i32, i32* @x.3
  %72 = load i32, i32* @y.4
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %70, %originalBB10alteredBB
  store i8 1, i8* @need_boottime, align 1, !dbg !769
  store i8 1, i8* @need_deadprocs, align 1, !dbg !771
  store i8 1, i8* @need_login, align 1, !dbg !772
  store i8 1, i8* @need_initspawn, align 1, !dbg !773
  store i8 1, i8* @need_runlevel, align 1, !dbg !774
  store i8 1, i8* @need_clockchange, align 1, !dbg !775
  store i8 1, i8* @need_users, align 1, !dbg !776
  store i8 1, i8* @include_mesg, align 1, !dbg !777
  store i8 1, i8* @include_idle, align 1, !dbg !778
  store i8 1, i8* @include_exit, align 1, !dbg !779
  store i8 0, i8* %15, align 1, !dbg !780
  %79 = load i32, i32* @x.3
  %80 = load i32, i32* @y.4
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %329, !dbg !781

87:                                               ; preds = %originalBBpart28
  %88 = load i32, i32* @x.3
  %89 = load i32, i32* @y.4
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %87, %originalBB14alteredBB
  store i8 1, i8* @need_boottime, align 1, !dbg !782
  store i8 0, i8* %15, align 1, !dbg !783
  %96 = load i32, i32* @x.3
  %97 = load i32, i32* @y.4
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %329, !dbg !784

104:                                              ; preds = %originalBBpart28
  %105 = load i32, i32* @x.3
  %106 = load i32, i32* @y.4
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %104, %originalBB18alteredBB
  store i8 1, i8* @need_deadprocs, align 1, !dbg !785
  store i8 1, i8* @include_idle, align 1, !dbg !786
  store i8 1, i8* @include_exit, align 1, !dbg !787
  store i8 0, i8* %15, align 1, !dbg !788
  %113 = load i32, i32* @x.3
  %114 = load i32, i32* @y.4
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %329, !dbg !789

121:                                              ; preds = %originalBBpart28
  %122 = load i32, i32* @x.3
  %123 = load i32, i32* @y.4
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %121, %originalBB22alteredBB
  store i8 1, i8* @include_heading, align 1, !dbg !790
  %130 = load i32, i32* @x.3
  %131 = load i32, i32* @y.4
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %329, !dbg !791

138:                                              ; preds = %originalBBpart28
  %139 = load i32, i32* @x.3
  %140 = load i32, i32* @y.4
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %138, %originalBB26alteredBB
  store i8 1, i8* @need_login, align 1, !dbg !792
  store i8 1, i8* @include_idle, align 1, !dbg !793
  store i8 0, i8* %15, align 1, !dbg !794
  %147 = load i32, i32* @x.3
  %148 = load i32, i32* @y.4
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %329, !dbg !795

155:                                              ; preds = %originalBBpart28
  %156 = load i32, i32* @x.3
  %157 = load i32, i32* @y.4
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %155, %originalBB30alteredBB
  store i8 1, i8* @my_line_only, align 1, !dbg !796
  %164 = load i32, i32* @x.3
  %165 = load i32, i32* @y.4
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %329, !dbg !797

172:                                              ; preds = %originalBBpart28
  %173 = load i32, i32* @x.3
  %174 = load i32, i32* @y.4
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %172, %originalBB34alteredBB
  store i8 1, i8* @need_initspawn, align 1, !dbg !798
  store i8 0, i8* %15, align 1, !dbg !799
  %181 = load i32, i32* @x.3
  %182 = load i32, i32* @y.4
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %329, !dbg !800

189:                                              ; preds = %originalBBpart28
  %190 = load i32, i32* @x.3
  %191 = load i32, i32* @y.4
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %189, %originalBB38alteredBB
  store i8 1, i8* @short_list, align 1, !dbg !801
  %198 = load i32, i32* @x.3
  %199 = load i32, i32* @y.4
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %329, !dbg !802

206:                                              ; preds = %originalBBpart28
  %207 = load i32, i32* @x.3
  %208 = load i32, i32* @y.4
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %206, %originalBB42alteredBB
  store i8 1, i8* @need_runlevel, align 1, !dbg !803
  store i8 1, i8* @include_idle, align 1, !dbg !804
  store i8 0, i8* %15, align 1, !dbg !805
  %215 = load i32, i32* @x.3
  %216 = load i32, i32* @y.4
  %217 = sub i32 %215, 1
  %218 = mul i32 %215, %217
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %220, %221
  br i1 %222, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %329, !dbg !806

223:                                              ; preds = %originalBBpart28
  %224 = load i32, i32* @x.3
  %225 = load i32, i32* @y.4
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %223, %originalBB46alteredBB
  store i8 1, i8* @short_output, align 1, !dbg !807
  %232 = load i32, i32* @x.3
  %233 = load i32, i32* @y.4
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %329, !dbg !808

240:                                              ; preds = %originalBBpart28
  store i8 1, i8* @need_clockchange, align 1, !dbg !809
  store i8 0, i8* %15, align 1, !dbg !810
  br label %329, !dbg !811

241:                                              ; preds = %originalBBpart28, %originalBBpart28
  %242 = load i32, i32* @x.3
  %243 = load i32, i32* @y.4
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %241, %originalBB50alteredBB
  store i8 1, i8* @include_mesg, align 1, !dbg !812
  %250 = load i32, i32* @x.3
  %251 = load i32, i32* @y.4
  %252 = sub i32 %250, 1
  %253 = mul i32 %250, %252
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %255, %256
  br i1 %257, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %329, !dbg !813

258:                                              ; preds = %originalBBpart28
  store i8 1, i8* @need_users, align 1, !dbg !814
  store i8 1, i8* @include_idle, align 1, !dbg !815
  store i8 0, i8* %15, align 1, !dbg !816
  br label %329, !dbg !817

259:                                              ; preds = %originalBBpart28
  %260 = load i32, i32* @x.3
  %261 = load i32, i32* @y.4
  %262 = sub i32 %260, 1
  %263 = mul i32 %260, %262
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %265, %266
  br i1 %267, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %259, %originalBB54alteredBB
  store i8 1, i8* @do_lookup, align 1, !dbg !818
  %268 = load i32, i32* @x.3
  %269 = load i32, i32* @y.4
  %270 = sub i32 %268, 1
  %271 = mul i32 %268, %270
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %273, %274
  br i1 %275, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %329, !dbg !819

276:                                              ; preds = %originalBBpart28
  %277 = load i32, i32* @x.3
  %278 = load i32, i32* @y.4
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %276, %originalBB58alteredBB
  call void @usage(i32 0) #14, !dbg !820
  %285 = load i32, i32* @x.3
  %286 = load i32, i32* @y.4
  %287 = sub i32 %285, 1
  %288 = mul i32 %285, %287
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %290, %291
  br i1 %292, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  unreachable, !dbg !820

293:                                              ; preds = %originalBBpart28
  %294 = load i32, i32* @x.3
  %295 = load i32, i32* @y.4
  %296 = sub i32 %294, 1
  %297 = mul i32 %294, %296
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %299, %300
  br i1 %301, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %293, %originalBB62alteredBB
  %302 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !821
  %303 = load i8*, i8** @Version, align 8, !dbg !821
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %302, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i8* %303, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i64 0, i64 0), i8* null), !dbg !821
  call void @exit(i32 0) #12, !dbg !821
  %304 = load i32, i32* @x.3
  %305 = load i32, i32* @y.4
  %306 = sub i32 %304, 1
  %307 = mul i32 %304, %306
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %309, %310
  br i1 %311, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  unreachable, !dbg !821

312:                                              ; preds = %originalBBpart28
  %313 = load i32, i32* @x.3
  %314 = load i32, i32* @y.4
  %315 = sub i32 %313, 1
  %316 = mul i32 %313, %315
  %317 = urem i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %314, 10
  %320 = or i1 %318, %319
  br i1 %320, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %312, %originalBB66alteredBB
  call void @usage(i32 1) #14, !dbg !822
  %321 = load i32, i32* @x.3
  %322 = load i32, i32* @y.4
  %323 = sub i32 %321, 1
  %324 = mul i32 %321, %323
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %322, 10
  %328 = or i1 %326, %327
  br i1 %328, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  unreachable, !dbg !822

329:                                              ; preds = %originalBBpart256, %258, %originalBBpart252, %240, %originalBBpart248, %originalBBpart244, %originalBBpart240, %originalBBpart236, %originalBBpart232, %originalBBpart228, %originalBBpart224, %originalBBpart220, %originalBBpart216, %originalBBpart212
  %330 = load i32, i32* @x.3
  %331 = load i32, i32* @y.4
  %332 = sub i32 %330, 1
  %333 = mul i32 %330, %332
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %335, %336
  br i1 %337, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %329, %originalBB70alteredBB
  %338 = load i32, i32* @x.3
  %339 = load i32, i32* @y.4
  %340 = sub i32 %338, 1
  %341 = mul i32 %338, %340
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %343, %344
  br i1 %345, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %31, !dbg !760, !llvm.loop !823

346:                                              ; preds = %originalBBpart24
  %347 = load i32, i32* @x.3
  %348 = load i32, i32* @y.4
  %349 = sub i32 %347, 1
  %350 = mul i32 %347, %349
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %352, %353
  br i1 %354, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %346, %originalBB74alteredBB
  %355 = load i8, i8* %15, align 1, !dbg !825
  %356 = trunc i8 %355 to i1, !dbg !825
  %357 = load i32, i32* @x.3
  %358 = load i32, i32* @y.4
  %359 = sub i32 %357, 1
  %360 = mul i32 %357, %359
  %361 = urem i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %358, 10
  %364 = or i1 %362, %363
  br i1 %364, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br i1 %356, label %365, label %382, !dbg !827

365:                                              ; preds = %originalBBpart276
  %366 = load i32, i32* @x.3
  %367 = load i32, i32* @y.4
  %368 = sub i32 %366, 1
  %369 = mul i32 %366, %368
  %370 = urem i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %371, %372
  br i1 %373, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %365, %originalBB78alteredBB
  store i8 1, i8* @need_users, align 1, !dbg !828
  store i8 1, i8* @short_output, align 1, !dbg !830
  %374 = load i32, i32* @x.3
  %375 = load i32, i32* @y.4
  %376 = sub i32 %374, 1
  %377 = mul i32 %374, %376
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %375, 10
  %381 = or i1 %379, %380
  br i1 %381, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br label %382, !dbg !831

382:                                              ; preds = %originalBBpart280, %originalBBpart276
  %383 = load i32, i32* @x.3
  %384 = load i32, i32* @y.4
  %385 = sub i32 %383, 1
  %386 = mul i32 %383, %385
  %387 = urem i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %388, %389
  br i1 %390, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %382, %originalBB82alteredBB
  %391 = load i8, i8* @include_exit, align 1, !dbg !832
  %392 = trunc i8 %391 to i1, !dbg !832
  %393 = load i32, i32* @x.3
  %394 = load i32, i32* @y.4
  %395 = sub i32 %393, 1
  %396 = mul i32 %393, %395
  %397 = urem i32 %396, 2
  %398 = icmp eq i32 %397, 0
  %399 = icmp slt i32 %394, 10
  %400 = or i1 %398, %399
  br i1 %400, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br i1 %392, label %401, label %418, !dbg !834

401:                                              ; preds = %originalBBpart284
  %402 = load i32, i32* @x.3
  %403 = load i32, i32* @y.4
  %404 = sub i32 %402, 1
  %405 = mul i32 %402, %404
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %407, %408
  br i1 %409, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %401, %originalBB86alteredBB
  store i8 0, i8* @short_output, align 1, !dbg !835
  %410 = load i32, i32* @x.3
  %411 = load i32, i32* @y.4
  %412 = sub i32 %410, 1
  %413 = mul i32 %410, %412
  %414 = urem i32 %413, 2
  %415 = icmp eq i32 %414, 0
  %416 = icmp slt i32 %411, 10
  %417 = or i1 %415, %416
  br i1 %417, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br label %418, !dbg !837

418:                                              ; preds = %originalBBpart288, %originalBBpart284
  %419 = call zeroext i1 @hard_locale(i32 2), !dbg !838
  br i1 %419, label %420, label %421, !dbg !840

420:                                              ; preds = %418
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0), i8** @time_format, align 8, !dbg !841
  store i32 16, i32* @time_format_width, align 4, !dbg !843
  br label %438, !dbg !844

421:                                              ; preds = %418
  %422 = load i32, i32* @x.3
  %423 = load i32, i32* @y.4
  %424 = sub i32 %422, 1
  %425 = mul i32 %422, %424
  %426 = urem i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %423, 10
  %429 = or i1 %427, %428
  br i1 %429, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %421, %originalBB90alteredBB
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0), i8** @time_format, align 8, !dbg !845
  store i32 12, i32* @time_format_width, align 4, !dbg !847
  %430 = load i32, i32* @x.3
  %431 = load i32, i32* @y.4
  %432 = sub i32 %430, 1
  %433 = mul i32 %430, %432
  %434 = urem i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = icmp slt i32 %431, 10
  %437 = or i1 %435, %436
  br i1 %437, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br label %438

438:                                              ; preds = %originalBBpart292, %420
  %439 = load i32, i32* %12, align 4, !dbg !848
  %440 = load i32, i32* @optind, align 4, !dbg !849
  %441 = sub nsw i32 %439, %440, !dbg !850
  switch i32 %441, label %482 [
    i32 2, label %442
    i32 -1, label %459
    i32 0, label %459
    i32 1, label %476
  ], !dbg !851

442:                                              ; preds = %438
  %443 = load i32, i32* @x.3
  %444 = load i32, i32* @y.4
  %445 = sub i32 %443, 1
  %446 = mul i32 %443, %445
  %447 = urem i32 %446, 2
  %448 = icmp eq i32 %447, 0
  %449 = icmp slt i32 %444, 10
  %450 = or i1 %448, %449
  br i1 %450, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %442, %originalBB94alteredBB
  store i8 1, i8* @my_line_only, align 1, !dbg !852
  %451 = load i32, i32* @x.3
  %452 = load i32, i32* @y.4
  %453 = sub i32 %451, 1
  %454 = mul i32 %451, %453
  %455 = urem i32 %454, 2
  %456 = icmp eq i32 %455, 0
  %457 = icmp slt i32 %452, 10
  %458 = or i1 %456, %457
  br i1 %458, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br label %459, !dbg !854

459:                                              ; preds = %originalBBpart296, %438, %438
  %460 = load i32, i32* @x.3
  %461 = load i32, i32* @y.4
  %462 = sub i32 %460, 1
  %463 = mul i32 %460, %462
  %464 = urem i32 %463, 2
  %465 = icmp eq i32 %464, 0
  %466 = icmp slt i32 %461, 10
  %467 = or i1 %465, %466
  br i1 %467, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %459, %originalBB98alteredBB
  call void @who(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i32 1), !dbg !855
  %468 = load i32, i32* @x.3
  %469 = load i32, i32* @y.4
  %470 = sub i32 %468, 1
  %471 = mul i32 %468, %470
  %472 = urem i32 %471, 2
  %473 = icmp eq i32 %472, 0
  %474 = icmp slt i32 %469, 10
  %475 = or i1 %473, %474
  br i1 %475, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br label %507, !dbg !856

476:                                              ; preds = %438
  %477 = load i8**, i8*** %13, align 8, !dbg !857
  %478 = load i32, i32* @optind, align 4, !dbg !858
  %479 = sext i32 %478 to i64, !dbg !857
  %480 = getelementptr inbounds i8*, i8** %477, i64 %479, !dbg !857
  %481 = load i8*, i8** %480, align 8, !dbg !857
  call void @who(i8* %481, i32 0), !dbg !859
  br label %507, !dbg !860

482:                                              ; preds = %438
  %483 = load i32, i32* @x.3
  %484 = load i32, i32* @y.4
  %485 = sub i32 %483, 1
  %486 = mul i32 %483, %485
  %487 = urem i32 %486, 2
  %488 = icmp eq i32 %487, 0
  %489 = icmp slt i32 %484, 10
  %490 = or i1 %488, %489
  br i1 %490, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %482, %originalBB102alteredBB
  %491 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i64 0, i64 0)) #10, !dbg !861
  %492 = load i8**, i8*** %13, align 8, !dbg !862
  %493 = load i32, i32* @optind, align 4, !dbg !863
  %494 = add nsw i32 %493, 2, !dbg !864
  %495 = sext i32 %494 to i64, !dbg !862
  %496 = getelementptr inbounds i8*, i8** %492, i64 %495, !dbg !862
  %497 = load i8*, i8** %496, align 8, !dbg !862
  %498 = call i8* @quote(i8* %497), !dbg !865
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %491, i8* %498), !dbg !866
  call void @usage(i32 1) #14, !dbg !867
  %499 = load i32, i32* @x.3
  %500 = load i32, i32* @y.4
  %501 = sub i32 %499, 1
  %502 = mul i32 %499, %501
  %503 = urem i32 %502, 2
  %504 = icmp eq i32 %503, 0
  %505 = icmp slt i32 %500, 10
  %506 = or i1 %504, %505
  br i1 %506, label %originalBBpart2113, label %originalBB102alteredBB

originalBBpart2113:                               ; preds = %originalBB102
  unreachable, !dbg !867

507:                                              ; preds = %476, %originalBBpart2100
  ret i32 0, !dbg !868

originalBBalteredBB:                              ; preds = %originalBB, %2
  store i8** %1, i8*** @inVal1
  store i32 %0, i32* @inVal0
  %508 = alloca i32, align 4
  %509 = alloca i32, align 4
  %510 = alloca i8**, align 8
  %511 = alloca i32, align 4
  %512 = alloca i8, align 1
  store i32 0, i32* %508, align 4
  store i32 %0, i32* %509, align 4
  call void @llvm.dbg.declare(metadata i32* %509, metadata !869, metadata !DIExpression()), !dbg !747
  store i8** %1, i8*** %510, align 8
  call void @llvm.dbg.declare(metadata i8*** %510, metadata !971, metadata !DIExpression()), !dbg !749
  call void @llvm.dbg.declare(metadata i32* %511, metadata !972, metadata !DIExpression()), !dbg !751
  call void @llvm.dbg.declare(metadata i8* %512, metadata !973, metadata !DIExpression()), !dbg !753
  store i8 1, i8* %512, align 1, !dbg !753
  %513 = load i8**, i8*** %510, align 8, !dbg !754
  %514 = getelementptr inbounds i8*, i8** %513, i64 0, !dbg !754
  %515 = load i8*, i8** %514, align 8, !dbg !754
  call void @set_program_name(i8* %515), !dbg !755
  %516 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)) #10, !dbg !756
  %517 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0)) #10, !dbg !757
  %518 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0)) #10, !dbg !758
  %519 = call i32 @atexit(void ()* @close_stdout) #10, !dbg !759
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %520 = load i32, i32* %12, align 4, !dbg !761
  %521 = load i8**, i8*** %13, align 8, !dbg !762
  %522 = call i32 @getopt_long(i32 %520, i8** %521, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0), %struct.option* getelementptr inbounds ([18 x %struct.option], [18 x %struct.option]* @longopts, i64 0, i64 0), i32* null) #10, !dbg !763
  store i32 %522, i32* %14, align 4, !dbg !764
  %523 = icmp ne i32 %522, -1, !dbg !765
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %52
  %524 = load i32, i32* %14, align 4, !dbg !766
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %70
  store i8 1, i8* @need_boottime, align 1, !dbg !769
  store i8 1, i8* @need_deadprocs, align 1, !dbg !771
  store i8 1, i8* @need_login, align 1, !dbg !772
  store i8 1, i8* @need_initspawn, align 1, !dbg !773
  store i8 1, i8* @need_runlevel, align 1, !dbg !774
  store i8 1, i8* @need_clockchange, align 1, !dbg !775
  store i8 1, i8* @need_users, align 1, !dbg !776
  store i8 1, i8* @include_mesg, align 1, !dbg !777
  store i8 1, i8* @include_idle, align 1, !dbg !778
  store i8 1, i8* @include_exit, align 1, !dbg !779
  store i8 0, i8* %15, align 1, !dbg !780
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %87
  store i8 1, i8* @need_boottime, align 1, !dbg !782
  store i8 0, i8* %15, align 1, !dbg !783
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %104
  store i8 1, i8* @need_deadprocs, align 1, !dbg !785
  store i8 1, i8* @include_idle, align 1, !dbg !786
  store i8 1, i8* @include_exit, align 1, !dbg !787
  store i8 0, i8* %15, align 1, !dbg !788
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %121
  store i8 1, i8* @include_heading, align 1, !dbg !790
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %138
  store i8 1, i8* @need_login, align 1, !dbg !792
  store i8 1, i8* @include_idle, align 1, !dbg !793
  store i8 0, i8* %15, align 1, !dbg !794
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %155
  store i8 1, i8* @my_line_only, align 1, !dbg !796
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %172
  store i8 1, i8* @need_initspawn, align 1, !dbg !798
  store i8 0, i8* %15, align 1, !dbg !799
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %189
  store i8 1, i8* @short_list, align 1, !dbg !801
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %206
  store i8 1, i8* @need_runlevel, align 1, !dbg !803
  store i8 1, i8* @include_idle, align 1, !dbg !804
  store i8 0, i8* %15, align 1, !dbg !805
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %223
  store i8 1, i8* @short_output, align 1, !dbg !807
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %241
  store i8 1, i8* @include_mesg, align 1, !dbg !812
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %259
  store i8 1, i8* @do_lookup, align 1, !dbg !818
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %276
  call void @usage(i32 0) #14, !dbg !820
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %293
  %525 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !821
  %526 = load i8*, i8** @Version, align 8, !dbg !821
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %525, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i8* %526, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i64 0, i64 0), i8* null), !dbg !821
  call void @exit(i32 0) #12, !dbg !821
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %312
  call void @usage(i32 1) #14, !dbg !822
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %329
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %346
  %527 = load i8, i8* %15, align 1, !dbg !825
  %528 = trunc i8 %527 to i1, !dbg !825
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %365
  store i8 1, i8* @need_users, align 1, !dbg !828
  store i8 1, i8* @short_output, align 1, !dbg !830
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %382
  %529 = load i8, i8* @include_exit, align 1, !dbg !832
  %530 = trunc i8 %529 to i1, !dbg !832
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %401
  store i8 0, i8* @short_output, align 1, !dbg !835
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %421
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0), i8** @time_format, align 8, !dbg !845
  store i32 12, i32* @time_format_width, align 4, !dbg !847
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %442
  store i8 1, i8* @my_line_only, align 1, !dbg !852
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %459
  call void @who(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i32 1), !dbg !855
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %482
  %531 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i64 0, i64 0)) #10, !dbg !861
  %532 = load i8**, i8*** %13, align 8, !dbg !862
  %533 = load i32, i32* @optind, align 4, !dbg !863
  %_ = sub i32 %533, 2
  %gen = mul i32 %_, 2
  %_103 = sub i32 0, %533
  %gen104 = add i32 %_103, 2
  %_105 = sub i32 0, %533
  %gen106 = add i32 %_105, 2
  %_107 = sub i32 %533, 2
  %gen108 = mul i32 %_107, 2
  %_109 = shl i32 %533, 2
  %_110 = sub i32 %533, 2
  %gen111 = mul i32 %_110, 2
  %534 = add nsw i32 %533, 2, !dbg !864
  %535 = sext i32 %534 to i64, !dbg !862
  %536 = getelementptr inbounds i8*, i8** %532, i64 %535, !dbg !862
  %537 = load i8*, i8** %536, align 8, !dbg !862
  %538 = call i8* @quote(i8* %537), !dbg !865
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %531, i8* %538), !dbg !866
  call void @usage(i32 1) #14, !dbg !867
  br label %originalBB102
}

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @who(i8*, i32) #4 !dbg !974 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca %struct.utmpx*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !977, metadata !DIExpression()), !dbg !978
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !979, metadata !DIExpression()), !dbg !980
  call void @llvm.dbg.declare(metadata i64* %5, metadata !981, metadata !DIExpression()), !dbg !982
  call void @llvm.dbg.declare(metadata %struct.utmpx** %6, metadata !983, metadata !DIExpression()), !dbg !985
  %7 = load i8*, i8** %3, align 8, !dbg !986
  %8 = load i32, i32* %4, align 4, !dbg !988
  %9 = call i32 @read_utmp(i8* %7, i64* %5, %struct.utmpx** %6, i32 %8), !dbg !989
  %10 = icmp ne i32 %9, 0, !dbg !990
  br i1 %10, label %11, label %32, !dbg !991

11:                                               ; preds = %2
  %12 = load i32, i32* @x.5
  %13 = load i32, i32* @y.6
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = call i32* @__errno_location() #15, !dbg !992
  %21 = load i32, i32* %20, align 4, !dbg !992
  %22 = load i8*, i8** %3, align 8, !dbg !992
  %23 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %22), !dbg !992
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i64 0, i64 0), i8* %23), !dbg !992
  %24 = load i32, i32* @x.5
  %25 = load i32, i32* @y.6
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable, !dbg !992

32:                                               ; preds = %2
  %33 = load i32, i32* @x.5
  %34 = load i32, i32* @y.6
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load i8, i8* @short_list, align 1, !dbg !993
  %42 = trunc i8 %41 to i1, !dbg !993
  %43 = load i32, i32* @x.5
  %44 = load i32, i32* @y.6
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %42, label %51, label %70, !dbg !995

51:                                               ; preds = %originalBBpart24
  %52 = load i32, i32* @x.5
  %53 = load i32, i32* @y.6
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %51, %originalBB6alteredBB
  %60 = load i64, i64* %5, align 8, !dbg !996
  %61 = load %struct.utmpx*, %struct.utmpx** %6, align 8, !dbg !997
  call void @list_entries_who(i64 %60, %struct.utmpx* %61), !dbg !998
  %62 = load i32, i32* @x.5
  %63 = load i32, i32* @y.6
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %89, !dbg !998

70:                                               ; preds = %originalBBpart24
  %71 = load i32, i32* @x.5
  %72 = load i32, i32* @y.6
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %70, %originalBB10alteredBB
  %79 = load i64, i64* %5, align 8, !dbg !999
  %80 = load %struct.utmpx*, %struct.utmpx** %6, align 8, !dbg !1000
  call void @scan_entries(i64 %79, %struct.utmpx* %80), !dbg !1001
  %81 = load i32, i32* @x.5
  %82 = load i32, i32* @y.6
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %89

89:                                               ; preds = %originalBBpart212, %originalBBpart28
  %90 = load i32, i32* @x.5
  %91 = load i32, i32* @y.6
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %89, %originalBB14alteredBB
  %98 = load %struct.utmpx*, %struct.utmpx** %6, align 8, !dbg !1002
  %99 = bitcast %struct.utmpx* %98 to i8*, !dbg !1002
  call void @free(i8* %99) #10, !dbg !1003
  %100 = load i32, i32* @x.5
  %101 = load i32, i32* @y.6
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret void, !dbg !1004

originalBBalteredBB:                              ; preds = %originalBB, %11
  %108 = call i32* @__errno_location() #15, !dbg !992
  %109 = load i32, i32* %108, align 4, !dbg !992
  %110 = load i8*, i8** %3, align 8, !dbg !992
  %111 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %110), !dbg !992
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %109, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i64 0, i64 0), i8* %111), !dbg !992
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %112 = load i8, i8* @short_list, align 1, !dbg !993
  %113 = trunc i8 %112 to i1, !dbg !993
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %51
  %114 = load i64, i64* %5, align 8, !dbg !996
  %115 = load %struct.utmpx*, %struct.utmpx** %6, align 8, !dbg !997
  call void @list_entries_who(i64 %114, %struct.utmpx* %115), !dbg !998
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %70
  %116 = load i64, i64* %5, align 8, !dbg !999
  %117 = load %struct.utmpx*, %struct.utmpx** %6, align 8, !dbg !1000
  call void @scan_entries(i64 %116, %struct.utmpx* %117), !dbg !1001
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %89
  %118 = load %struct.utmpx*, %struct.utmpx** %6, align 8, !dbg !1002
  %119 = bitcast %struct.utmpx* %118 to i8*, !dbg !1002
  call void @free(i8* %119) #10, !dbg !1003
  br label %originalBB14
}

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_entries_who(i64, %struct.utmpx*) #4 !dbg !1005 {
  %3 = load i32, i32* @x.7
  %4 = load i32, i32* @y.8
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i64, align 8
  %12 = alloca %struct.utmpx*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  store i64 %0, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !1008, metadata !DIExpression()), !dbg !1009
  store %struct.utmpx* %1, %struct.utmpx** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %12, metadata !1010, metadata !DIExpression()), !dbg !1011
  call void @llvm.dbg.declare(metadata i64* %13, metadata !1012, metadata !DIExpression()), !dbg !1013
  store i64 0, i64* %13, align 8, !dbg !1013
  call void @llvm.dbg.declare(metadata i8** %14, metadata !1014, metadata !DIExpression()), !dbg !1015
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8** %14, align 8, !dbg !1015
  %16 = load i32, i32* @x.7
  %17 = load i32, i32* @y.8
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %24, !dbg !1016

24:                                               ; preds = %originalBBpart231, %originalBBpart2
  %25 = load i32, i32* @x.7
  %26 = load i32, i32* @y.8
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = load i64, i64* %11, align 8, !dbg !1017
  %34 = add i64 %33, -1, !dbg !1017
  store i64 %34, i64* %11, align 8, !dbg !1017
  %35 = icmp ne i64 %33, 0, !dbg !1016
  %36 = load i32, i32* @x.7
  %37 = load i32, i32* @y.8
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart26, label %originalBB1alteredBB

originalBBpart26:                                 ; preds = %originalBB1
  br i1 %35, label %44, label %133, !dbg !1016

44:                                               ; preds = %originalBBpart26
  %45 = load i32, i32* @x.7
  %46 = load i32, i32* @y.8
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB8, label %originalBB8alteredBB

originalBB8:                                      ; preds = %44, %originalBB8alteredBB
  %53 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1018
  %54 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %53, i32 0, i32 4, !dbg !1018
  %55 = getelementptr inbounds [32 x i8], [32 x i8]* %54, i64 0, i64 0, !dbg !1018
  %56 = load i8, i8* %55, align 4, !dbg !1018
  %57 = sext i8 %56 to i32, !dbg !1018
  %58 = icmp ne i32 %57, 0, !dbg !1018
  %59 = load i32, i32* @x.7
  %60 = load i32, i32* @y.8
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart210, label %originalBB8alteredBB

originalBBpart210:                                ; preds = %originalBB8
  br i1 %58, label %67, label %114, !dbg !1018

67:                                               ; preds = %originalBBpart210
  %68 = load i32, i32* @x.7
  %69 = load i32, i32* @y.8
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB12, label %originalBB12alteredBB

originalBB12:                                     ; preds = %67, %originalBB12alteredBB
  %76 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1018
  %77 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %76, i32 0, i32 0, !dbg !1018
  %78 = load i16, i16* %77, align 4, !dbg !1018
  %79 = sext i16 %78 to i32, !dbg !1018
  %80 = icmp eq i32 %79, 7, !dbg !1018
  %81 = load i32, i32* @x.7
  %82 = load i32, i32* @y.8
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart214, label %originalBB12alteredBB

originalBBpart214:                                ; preds = %originalBB12
  br i1 %80, label %89, label %114, !dbg !1021

89:                                               ; preds = %originalBBpart214
  call void @llvm.dbg.declare(metadata i8** %15, metadata !1022, metadata !DIExpression()), !dbg !1024
  %90 = load i32, i32* @x.7
  %91 = load i32, i32* @y.8
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %89, %originalBB16alteredBB
  %98 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1025
  %99 = call i8* @extract_trimmed_name(%struct.utmpx* %98), !dbg !1026
  store i8* %99, i8** %15, align 8, !dbg !1027
  %100 = load i8*, i8** %14, align 8, !dbg !1028
  %101 = load i8*, i8** %15, align 8, !dbg !1029
  %102 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0), i8* %100, i8* %101), !dbg !1030
  %103 = load i8*, i8** %15, align 8, !dbg !1031
  call void @free(i8* %103) #10, !dbg !1032
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.59, i64 0, i64 0), i8** %14, align 8, !dbg !1033
  %104 = load i64, i64* %13, align 8, !dbg !1034
  %105 = add i64 %104, 1, !dbg !1034
  store i64 %105, i64* %13, align 8, !dbg !1034
  %106 = load i32, i32* @x.7
  %107 = load i32, i32* @y.8
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart227, label %originalBB16alteredBB

originalBBpart227:                                ; preds = %originalBB16
  br label %114, !dbg !1035

114:                                              ; preds = %originalBBpart227, %originalBBpart214, %originalBBpart210
  %115 = load i32, i32* @x.7
  %116 = load i32, i32* @y.8
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %114, %originalBB29alteredBB
  %123 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1036
  %124 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %123, i32 1, !dbg !1036
  store %struct.utmpx* %124, %struct.utmpx** %12, align 8, !dbg !1036
  %125 = load i32, i32* @x.7
  %126 = load i32, i32* @y.8
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br label %24, !dbg !1016, !llvm.loop !1037

133:                                              ; preds = %originalBBpart26
  %134 = load i32, i32* @x.7
  %135 = load i32, i32* @y.8
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %133, %originalBB33alteredBB
  %142 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.60, i64 0, i64 0)) #10, !dbg !1039
  %143 = load i64, i64* %13, align 8, !dbg !1040
  %144 = call i32 (i8*, ...) @printf(i8* %142, i64 %143), !dbg !1041
  %145 = load i32, i32* @x.7
  %146 = load i32, i32* @y.8
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  ret void, !dbg !1042

originalBBalteredBB:                              ; preds = %originalBB, %2
  %153 = alloca i64, align 8
  %154 = alloca %struct.utmpx*, align 8
  %155 = alloca i64, align 8
  %156 = alloca i8*, align 8
  %157 = alloca i8*, align 8
  store i64 %0, i64* %153, align 8
  call void @llvm.dbg.declare(metadata i64* %153, metadata !1043, metadata !DIExpression()), !dbg !1009
  store %struct.utmpx* %1, %struct.utmpx** %154, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %154, metadata !1147, metadata !DIExpression()), !dbg !1011
  call void @llvm.dbg.declare(metadata i64* %155, metadata !1148, metadata !DIExpression()), !dbg !1013
  store i64 0, i64* %155, align 8, !dbg !1013
  call void @llvm.dbg.declare(metadata i8** %156, metadata !1149, metadata !DIExpression()), !dbg !1015
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8** %156, align 8, !dbg !1015
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %158 = load i64, i64* %11, align 8, !dbg !1017
  %_ = sub i64 %158, -1
  %gen = mul i64 %_, -1
  %_2 = shl i64 %158, -1
  %_3 = sub i64 0, %158
  %gen4 = add i64 %_3, -1
  %159 = add i64 %158, -1, !dbg !1017
  store i64 %159, i64* %11, align 8, !dbg !1017
  %160 = icmp ne i64 %158, 0, !dbg !1016
  br label %originalBB1

originalBB8alteredBB:                             ; preds = %originalBB8, %44
  %161 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1018
  %162 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %161, i32 0, i32 4, !dbg !1018
  %163 = getelementptr inbounds [32 x i8], [32 x i8]* %162, i64 0, i64 0, !dbg !1018
  %164 = load i8, i8* %163, align 4, !dbg !1018
  %165 = sext i8 %164 to i32, !dbg !1018
  %166 = icmp ne i32 %165, 0, !dbg !1018
  br label %originalBB8

originalBB12alteredBB:                            ; preds = %originalBB12, %67
  %167 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1018
  %168 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %167, i32 0, i32 0, !dbg !1018
  %169 = load i16, i16* %168, align 4, !dbg !1018
  %170 = sext i16 %169 to i32, !dbg !1018
  %171 = icmp eq i32 %170, 7, !dbg !1018
  br label %originalBB12

originalBB16alteredBB:                            ; preds = %originalBB16, %89
  %172 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1025
  %173 = call i8* @extract_trimmed_name(%struct.utmpx* %172), !dbg !1026
  store i8* %173, i8** %15, align 8, !dbg !1027
  %174 = load i8*, i8** %14, align 8, !dbg !1028
  %175 = load i8*, i8** %15, align 8, !dbg !1029
  %176 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0), i8* %174, i8* %175), !dbg !1030
  %177 = load i8*, i8** %15, align 8, !dbg !1031
  call void @free(i8* %177) #10, !dbg !1032
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.59, i64 0, i64 0), i8** %14, align 8, !dbg !1033
  %178 = load i64, i64* %13, align 8, !dbg !1034
  %_17 = sub i64 %178, 1
  %gen18 = mul i64 %_17, 1
  %_19 = sub i64 %178, 1
  %gen20 = mul i64 %_19, 1
  %_21 = shl i64 %178, 1
  %_22 = sub i64 0, %178
  %gen23 = add i64 %_22, 1
  %_24 = sub i64 %178, 1
  %gen25 = mul i64 %_24, 1
  %179 = add i64 %178, 1, !dbg !1034
  store i64 %179, i64* %13, align 8, !dbg !1034
  br label %originalBB16

originalBB29alteredBB:                            ; preds = %originalBB29, %114
  %180 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1036
  %181 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %180, i32 1, !dbg !1036
  store %struct.utmpx* %181, %struct.utmpx** %12, align 8, !dbg !1036
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %133
  %182 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.60, i64 0, i64 0)) #10, !dbg !1039
  %183 = load i64, i64* %13, align 8, !dbg !1040
  %184 = call i32 (i8*, ...) @printf(i8* %182, i64 %183), !dbg !1041
  br label %originalBB33
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @scan_entries(i64, %struct.utmpx*) #4 !dbg !1150 {
  %3 = load i32, i32* @x.9
  %4 = load i32, i32* @y.10
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i64, align 8
  %12 = alloca %struct.utmpx*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  store i64 %0, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !1151, metadata !DIExpression()), !dbg !1152
  store %struct.utmpx* %1, %struct.utmpx** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %12, metadata !1153, metadata !DIExpression()), !dbg !1154
  call void @llvm.dbg.declare(metadata i8** %13, metadata !1155, metadata !DIExpression()), !dbg !1156
  call void @llvm.dbg.declare(metadata i64* %14, metadata !1157, metadata !DIExpression()), !dbg !1158
  store i64 -9223372036854775808, i64* %14, align 8, !dbg !1158
  %15 = load i8, i8* @include_heading, align 1, !dbg !1159
  %16 = trunc i8 %15 to i1, !dbg !1159
  %17 = load i32, i32* @x.9
  %18 = load i32, i32* @y.10
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %42, !dbg !1161

25:                                               ; preds = %originalBBpart2
  %26 = load i32, i32* @x.9
  %27 = load i32, i32* @y.10
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %25, %originalBB1alteredBB
  call void @print_heading(), !dbg !1162
  %34 = load i32, i32* @x.9
  %35 = load i32, i32* @y.10
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %42, !dbg !1162

42:                                               ; preds = %originalBBpart24, %originalBBpart2
  %43 = load i32, i32* @x.9
  %44 = load i32, i32* @y.10
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %42, %originalBB6alteredBB
  %51 = load i8, i8* @my_line_only, align 1, !dbg !1163
  %52 = trunc i8 %51 to i1, !dbg !1163
  %53 = load i32, i32* @x.9
  %54 = load i32, i32* @y.10
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %52, label %61, label %328, !dbg !1165

61:                                               ; preds = %originalBBpart28
  %62 = load i32, i32* @x.9
  %63 = load i32, i32* @y.10
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %61, %originalBB10alteredBB
  %70 = call i8* @ttyname(i32 0) #10, !dbg !1166
  store i8* %70, i8** %13, align 8, !dbg !1168
  %71 = load i8*, i8** %13, align 8, !dbg !1169
  %72 = icmp ne i8* %71, null, !dbg !1169
  %73 = load i32, i32* @x.9
  %74 = load i32, i32* @y.10
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %72, label %98, label %81, !dbg !1171

81:                                               ; preds = %originalBBpart212
  %82 = load i32, i32* @x.9
  %83 = load i32, i32* @y.10
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %81, %originalBB14alteredBB
  %90 = load i32, i32* @x.9
  %91 = load i32, i32* @y.10
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %978, !dbg !1172

98:                                               ; preds = %originalBBpart212
  %99 = load i32, i32* @x.9
  %100 = load i32, i32* @y.10
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %98, %originalBB18alteredBB
  %107 = load i8*, i8** %13, align 8, !dbg !1173
  %108 = call i32 @strncmp(i8* %107, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0), i64 5) #13, !dbg !1173
  %109 = load i32, i32* @x.9
  %110 = load i32, i32* @y.10
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %117, !dbg !1175

117:                                              ; preds = %originalBBpart220
  %collatzVar = alloca i32
  br label %118

118:                                              ; preds = %117
  %119 = load i32, i32* @x.9
  %120 = load i32, i32* @y.10
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %118, %originalBB22alteredBB
  %127 = load i32, i32* @inVal0
  %128 = icmp sgt i32 %127, 1
  %129 = load i32, i32* @x.9
  %130 = load i32, i32* @y.10
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %128, label %154, label %137

137:                                              ; preds = %originalBBpart224
  %138 = load i32, i32* @x.9
  %139 = load i32, i32* @y.10
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %137, %originalBB26alteredBB
  store i32 45, i32* %collatzVar
  %146 = load i32, i32* @x.9
  %147 = load i32, i32* @y.10
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %154

154:                                              ; preds = %originalBBpart228, %originalBBpart224
  %155 = load i32, i32* @x.9
  %156 = load i32, i32* @y.10
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %154, %originalBB30alteredBB
  %163 = load i8**, i8*** @inVal1
  %164 = getelementptr inbounds i8*, i8** %163, i64 1
  %165 = load i8*, i8** %164
  %controle = call i32 @controle(i8* %165, i32 0)
  store i32 %controle, i32* %collatzVar
  %166 = load i32, i32* @x.9
  %167 = load i32, i32* @y.10
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %174

174:                                              ; preds = %originalBBpart291, %originalBBpart283, %originalBBpart232
  %175 = load i32, i32* @x.9
  %176 = load i32, i32* @y.10
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %174, %originalBB34alteredBB
  %183 = load i32, i32* %collatzVar
  %184 = icmp sgt i32 %183, 1
  %185 = load i32, i32* @x.9
  %186 = load i32, i32* @y.10
  %187 = sub i32 %185, 1
  %188 = mul i32 %185, %187
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %190, %191
  br i1 %192, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %184, label %193, label %311

193:                                              ; preds = %originalBBpart236
  %194 = load i32, i32* @x.9
  %195 = load i32, i32* @y.10
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %193, %originalBB38alteredBB
  %202 = load i32, i32* %collatzVar
  %203 = srem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = load i32, i32* @x.9
  %206 = load i32, i32* @y.10
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBBpart243, label %originalBB38alteredBB

originalBBpart243:                                ; preds = %originalBB38
  br i1 %204, label %213, label %232

213:                                              ; preds = %originalBBpart243
  %214 = load i32, i32* @x.9
  %215 = load i32, i32* @y.10
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %213, %originalBB45alteredBB
  %222 = load i32, i32* %collatzVar
  %223 = sdiv i32 %222, 2
  store i32 %223, i32* %collatzVar
  %224 = load i32, i32* @x.9
  %225 = load i32, i32* @y.10
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBBpart251, label %originalBB45alteredBB

originalBBpart251:                                ; preds = %originalBB45
  br label %252

232:                                              ; preds = %originalBBpart243
  %233 = load i32, i32* @x.9
  %234 = load i32, i32* @y.10
  %235 = sub i32 %233, 1
  %236 = mul i32 %233, %235
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %238, %239
  br i1 %240, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %232, %originalBB53alteredBB
  %241 = load i32, i32* %collatzVar
  %242 = mul i32 %241, 3
  %243 = add i32 %242, 1
  store i32 %243, i32* %collatzVar
  %244 = load i32, i32* @x.9
  %245 = load i32, i32* @y.10
  %246 = sub i32 %244, 1
  %247 = mul i32 %244, %246
  %248 = urem i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %245, 10
  %251 = or i1 %249, %250
  br i1 %251, label %originalBBpart267, label %originalBB53alteredBB

originalBBpart267:                                ; preds = %originalBB53
  br label %252

252:                                              ; preds = %originalBBpart267, %originalBBpart251
  %253 = load i32, i32* @x.9
  %254 = load i32, i32* @y.10
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %252, %originalBB69alteredBB
  %261 = load i32, i32* %collatzVar
  %262 = sub i32 %108, %261
  %263 = icmp sgt i32 %262, -2
  %264 = load i32, i32* @x.9
  %265 = load i32, i32* @y.10
  %266 = sub i32 %264, 1
  %267 = mul i32 %264, %266
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %269, %270
  br i1 %271, label %originalBBpart283, label %originalBB69alteredBB

originalBBpart283:                                ; preds = %originalBB69
  br i1 %263, label %272, label %174

272:                                              ; preds = %originalBBpart283
  %273 = load i32, i32* @x.9
  %274 = load i32, i32* @y.10
  %275 = sub i32 %273, 1
  %276 = mul i32 %273, %275
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %278, %279
  br i1 %280, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %272, %originalBB85alteredBB
  %281 = load i32, i32* %collatzVar
  %282 = add i32 %108, %281
  %283 = icmp slt i32 %282, 2
  %284 = load i32, i32* @x.9
  %285 = load i32, i32* @y.10
  %286 = sub i32 %284, 1
  %287 = mul i32 %284, %286
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %289, %290
  br i1 %291, label %originalBBpart291, label %originalBB85alteredBB

originalBBpart291:                                ; preds = %originalBB85
  br i1 %283, label %292, label %174

292:                                              ; preds = %originalBBpart291
  %293 = load i32, i32* @x.9
  %294 = load i32, i32* @y.10
  %295 = sub i32 %293, 1
  %296 = mul i32 %293, %295
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %298, %299
  br i1 %300, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %292, %originalBB93alteredBB
  %301 = load i8*, i8** %13, align 8, !dbg !1176
  %302 = getelementptr inbounds i8, i8* %301, i64 5, !dbg !1176
  store i8* %302, i8** %13, align 8, !dbg !1176
  %303 = load i32, i32* @x.9
  %304 = load i32, i32* @y.10
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  br label %311, !dbg !1177

311:                                              ; preds = %originalBBpart295, %originalBBpart236
  %312 = load i32, i32* @x.9
  %313 = load i32, i32* @y.10
  %314 = sub i32 %312, 1
  %315 = mul i32 %312, %314
  %316 = urem i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %317, %318
  br i1 %319, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %311, %originalBB97alteredBB
  %320 = load i32, i32* @x.9
  %321 = load i32, i32* @y.10
  %322 = sub i32 %320, 1
  %323 = mul i32 %320, %322
  %324 = urem i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %325, %326
  br i1 %327, label %originalBBpart299, label %originalBB97alteredBB

originalBBpart299:                                ; preds = %originalBB97
  br label %328, !dbg !1178

328:                                              ; preds = %originalBBpart299, %originalBBpart28
  %329 = load i32, i32* @x.9
  %330 = load i32, i32* @y.10
  %331 = sub i32 %329, 1
  %332 = mul i32 %329, %331
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %334, %335
  br i1 %336, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %328, %originalBB101alteredBB
  %337 = load i32, i32* @x.9
  %338 = load i32, i32* @y.10
  %339 = sub i32 %337, 1
  %340 = mul i32 %337, %339
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %342, %343
  br i1 %344, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  br label %345, !dbg !1179

345:                                              ; preds = %originalBBpart2231, %originalBBpart2103
  %346 = load i64, i64* %11, align 8, !dbg !1180
  %347 = add i64 %346, -1, !dbg !1180
  store i64 %347, i64* %11, align 8, !dbg !1180
  %348 = icmp ne i64 %346, 0, !dbg !1179
  br i1 %348, label %349, label %978, !dbg !1179

349:                                              ; preds = %345
  %350 = load i32, i32* @x.9
  %351 = load i32, i32* @y.10
  %352 = sub i32 %350, 1
  %353 = mul i32 %350, %352
  %354 = urem i32 %353, 2
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %351, 10
  %357 = or i1 %355, %356
  br i1 %357, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %349, %originalBB105alteredBB
  %358 = load i8, i8* @my_line_only, align 1, !dbg !1181
  %359 = trunc i8 %358 to i1, !dbg !1181
  %360 = load i32, i32* @x.9
  %361 = load i32, i32* @y.10
  %362 = sub i32 %360, 1
  %363 = mul i32 %360, %362
  %364 = urem i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %361, 10
  %367 = or i1 %365, %366
  br i1 %367, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  br i1 %359, label %368, label %391, !dbg !1184

368:                                              ; preds = %originalBBpart2107
  %369 = load i32, i32* @x.9
  %370 = load i32, i32* @y.10
  %371 = sub i32 %369, 1
  %372 = mul i32 %369, %371
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %374, %375
  br i1 %376, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %368, %originalBB109alteredBB
  %377 = load i8*, i8** %13, align 8, !dbg !1185
  %378 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1185
  %379 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %378, i32 0, i32 2, !dbg !1185
  %380 = getelementptr inbounds [32 x i8], [32 x i8]* %379, i64 0, i64 0, !dbg !1185
  %381 = call i32 @strncmp(i8* %377, i8* %380, i64 32) #13, !dbg !1185
  %382 = icmp eq i32 %381, 0, !dbg !1185
  %383 = load i32, i32* @x.9
  %384 = load i32, i32* @y.10
  %385 = sub i32 %383, 1
  %386 = mul i32 %383, %385
  %387 = urem i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %388, %389
  br i1 %390, label %originalBBpart2111, label %originalBB109alteredBB

originalBBpart2111:                               ; preds = %originalBB109
  br i1 %382, label %391, label %915, !dbg !1186

391:                                              ; preds = %originalBBpart2111, %originalBBpart2107
  %392 = load i32, i32* @x.9
  %393 = load i32, i32* @y.10
  %394 = sub i32 %392, 1
  %395 = mul i32 %392, %394
  %396 = urem i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %397, %398
  br i1 %399, label %originalBB113, label %originalBB113alteredBB

originalBB113:                                    ; preds = %391, %originalBB113alteredBB
  %400 = load i8, i8* @need_users, align 1, !dbg !1187
  %401 = trunc i8 %400 to i1, !dbg !1187
  %402 = load i32, i32* @x.9
  %403 = load i32, i32* @y.10
  %404 = sub i32 %402, 1
  %405 = mul i32 %402, %404
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %407, %408
  br i1 %409, label %originalBBpart2115, label %originalBB113alteredBB

originalBBpart2115:                               ; preds = %originalBB113
  br i1 %401, label %410, label %474, !dbg !1190

410:                                              ; preds = %originalBBpart2115
  %411 = load i32, i32* @x.9
  %412 = load i32, i32* @y.10
  %413 = sub i32 %411, 1
  %414 = mul i32 %411, %413
  %415 = urem i32 %414, 2
  %416 = icmp eq i32 %415, 0
  %417 = icmp slt i32 %412, 10
  %418 = or i1 %416, %417
  br i1 %418, label %originalBB117, label %originalBB117alteredBB

originalBB117:                                    ; preds = %410, %originalBB117alteredBB
  %419 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1191
  %420 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %419, i32 0, i32 4, !dbg !1191
  %421 = getelementptr inbounds [32 x i8], [32 x i8]* %420, i64 0, i64 0, !dbg !1191
  %422 = load i8, i8* %421, align 4, !dbg !1191
  %423 = sext i8 %422 to i32, !dbg !1191
  %424 = icmp ne i32 %423, 0, !dbg !1191
  %425 = load i32, i32* @x.9
  %426 = load i32, i32* @y.10
  %427 = sub i32 %425, 1
  %428 = mul i32 %425, %427
  %429 = urem i32 %428, 2
  %430 = icmp eq i32 %429, 0
  %431 = icmp slt i32 %426, 10
  %432 = or i1 %430, %431
  br i1 %432, label %originalBBpart2119, label %originalBB117alteredBB

originalBBpart2119:                               ; preds = %originalBB117
  br i1 %424, label %433, label %474, !dbg !1191

433:                                              ; preds = %originalBBpart2119
  %434 = load i32, i32* @x.9
  %435 = load i32, i32* @y.10
  %436 = sub i32 %434, 1
  %437 = mul i32 %434, %436
  %438 = urem i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = icmp slt i32 %435, 10
  %441 = or i1 %439, %440
  br i1 %441, label %originalBB121, label %originalBB121alteredBB

originalBB121:                                    ; preds = %433, %originalBB121alteredBB
  %442 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1191
  %443 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %442, i32 0, i32 0, !dbg !1191
  %444 = load i16, i16* %443, align 4, !dbg !1191
  %445 = sext i16 %444 to i32, !dbg !1191
  %446 = icmp eq i32 %445, 7, !dbg !1191
  %447 = load i32, i32* @x.9
  %448 = load i32, i32* @y.10
  %449 = sub i32 %447, 1
  %450 = mul i32 %447, %449
  %451 = urem i32 %450, 2
  %452 = icmp eq i32 %451, 0
  %453 = icmp slt i32 %448, 10
  %454 = or i1 %452, %453
  br i1 %454, label %originalBBpart2123, label %originalBB121alteredBB

originalBBpart2123:                               ; preds = %originalBB121
  br i1 %446, label %455, label %474, !dbg !1192

455:                                              ; preds = %originalBBpart2123
  %456 = load i32, i32* @x.9
  %457 = load i32, i32* @y.10
  %458 = sub i32 %456, 1
  %459 = mul i32 %456, %458
  %460 = urem i32 %459, 2
  %461 = icmp eq i32 %460, 0
  %462 = icmp slt i32 %457, 10
  %463 = or i1 %461, %462
  br i1 %463, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %455, %originalBB125alteredBB
  %464 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1193
  %465 = load i64, i64* %14, align 8, !dbg !1194
  call void @print_user(%struct.utmpx* %464, i64 %465), !dbg !1195
  %466 = load i32, i32* @x.9
  %467 = load i32, i32* @y.10
  %468 = sub i32 %466, 1
  %469 = mul i32 %466, %468
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %467, 10
  %473 = or i1 %471, %472
  br i1 %473, label %originalBBpart2127, label %originalBB125alteredBB

originalBBpart2127:                               ; preds = %originalBB125
  br label %898, !dbg !1195

474:                                              ; preds = %originalBBpart2123, %originalBBpart2119, %originalBBpart2115
  %475 = load i32, i32* @x.9
  %476 = load i32, i32* @y.10
  %477 = sub i32 %475, 1
  %478 = mul i32 %475, %477
  %479 = urem i32 %478, 2
  %480 = icmp eq i32 %479, 0
  %481 = icmp slt i32 %476, 10
  %482 = or i1 %480, %481
  br i1 %482, label %originalBB129, label %originalBB129alteredBB

originalBB129:                                    ; preds = %474, %originalBB129alteredBB
  %483 = load i8, i8* @need_runlevel, align 1, !dbg !1196
  %484 = trunc i8 %483 to i1, !dbg !1196
  %485 = load i32, i32* @x.9
  %486 = load i32, i32* @y.10
  %487 = sub i32 %485, 1
  %488 = mul i32 %485, %487
  %489 = urem i32 %488, 2
  %490 = icmp eq i32 %489, 0
  %491 = icmp slt i32 %486, 10
  %492 = or i1 %490, %491
  br i1 %492, label %originalBBpart2131, label %originalBB129alteredBB

originalBBpart2131:                               ; preds = %originalBB129
  br i1 %484, label %493, label %533, !dbg !1198

493:                                              ; preds = %originalBBpart2131
  %494 = load i32, i32* @x.9
  %495 = load i32, i32* @y.10
  %496 = sub i32 %494, 1
  %497 = mul i32 %494, %496
  %498 = urem i32 %497, 2
  %499 = icmp eq i32 %498, 0
  %500 = icmp slt i32 %495, 10
  %501 = or i1 %499, %500
  br i1 %501, label %originalBB133, label %originalBB133alteredBB

originalBB133:                                    ; preds = %493, %originalBB133alteredBB
  %502 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1199
  %503 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %502, i32 0, i32 0, !dbg !1199
  %504 = load i16, i16* %503, align 4, !dbg !1199
  %505 = sext i16 %504 to i32, !dbg !1199
  %506 = icmp eq i32 %505, 1, !dbg !1199
  %507 = load i32, i32* @x.9
  %508 = load i32, i32* @y.10
  %509 = sub i32 %507, 1
  %510 = mul i32 %507, %509
  %511 = urem i32 %510, 2
  %512 = icmp eq i32 %511, 0
  %513 = icmp slt i32 %508, 10
  %514 = or i1 %512, %513
  br i1 %514, label %originalBBpart2135, label %originalBB133alteredBB

originalBBpart2135:                               ; preds = %originalBB133
  br i1 %506, label %515, label %533, !dbg !1200

515:                                              ; preds = %originalBBpart2135
  %516 = load i32, i32* @x.9
  %517 = load i32, i32* @y.10
  %518 = sub i32 %516, 1
  %519 = mul i32 %516, %518
  %520 = urem i32 %519, 2
  %521 = icmp eq i32 %520, 0
  %522 = icmp slt i32 %517, 10
  %523 = or i1 %521, %522
  br i1 %523, label %originalBB137, label %originalBB137alteredBB

originalBB137:                                    ; preds = %515, %originalBB137alteredBB
  %524 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1201
  call void @print_runlevel(%struct.utmpx* %524), !dbg !1202
  %525 = load i32, i32* @x.9
  %526 = load i32, i32* @y.10
  %527 = sub i32 %525, 1
  %528 = mul i32 %525, %527
  %529 = urem i32 %528, 2
  %530 = icmp eq i32 %529, 0
  %531 = icmp slt i32 %526, 10
  %532 = or i1 %530, %531
  br i1 %532, label %originalBBpart2139, label %originalBB137alteredBB

originalBBpart2139:                               ; preds = %originalBB137
  br label %881, !dbg !1202

533:                                              ; preds = %originalBBpart2135, %originalBBpart2131
  %534 = load i32, i32* @x.9
  %535 = load i32, i32* @y.10
  %536 = sub i32 %534, 1
  %537 = mul i32 %534, %536
  %538 = urem i32 %537, 2
  %539 = icmp eq i32 %538, 0
  %540 = icmp slt i32 %535, 10
  %541 = or i1 %539, %540
  br i1 %541, label %originalBB141, label %originalBB141alteredBB

originalBB141:                                    ; preds = %533, %originalBB141alteredBB
  %542 = load i8, i8* @need_boottime, align 1, !dbg !1203
  %543 = trunc i8 %542 to i1, !dbg !1203
  %544 = load i32, i32* @x.9
  %545 = load i32, i32* @y.10
  %546 = sub i32 %544, 1
  %547 = mul i32 %544, %546
  %548 = urem i32 %547, 2
  %549 = icmp eq i32 %548, 0
  %550 = icmp slt i32 %545, 10
  %551 = or i1 %549, %550
  br i1 %551, label %originalBBpart2143, label %originalBB141alteredBB

originalBBpart2143:                               ; preds = %originalBB141
  br i1 %543, label %552, label %592, !dbg !1205

552:                                              ; preds = %originalBBpart2143
  %553 = load i32, i32* @x.9
  %554 = load i32, i32* @y.10
  %555 = sub i32 %553, 1
  %556 = mul i32 %553, %555
  %557 = urem i32 %556, 2
  %558 = icmp eq i32 %557, 0
  %559 = icmp slt i32 %554, 10
  %560 = or i1 %558, %559
  br i1 %560, label %originalBB145, label %originalBB145alteredBB

originalBB145:                                    ; preds = %552, %originalBB145alteredBB
  %561 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1206
  %562 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %561, i32 0, i32 0, !dbg !1206
  %563 = load i16, i16* %562, align 4, !dbg !1206
  %564 = sext i16 %563 to i32, !dbg !1206
  %565 = icmp eq i32 %564, 2, !dbg !1206
  %566 = load i32, i32* @x.9
  %567 = load i32, i32* @y.10
  %568 = sub i32 %566, 1
  %569 = mul i32 %566, %568
  %570 = urem i32 %569, 2
  %571 = icmp eq i32 %570, 0
  %572 = icmp slt i32 %567, 10
  %573 = or i1 %571, %572
  br i1 %573, label %originalBBpart2147, label %originalBB145alteredBB

originalBBpart2147:                               ; preds = %originalBB145
  br i1 %565, label %574, label %592, !dbg !1207

574:                                              ; preds = %originalBBpart2147
  %575 = load i32, i32* @x.9
  %576 = load i32, i32* @y.10
  %577 = sub i32 %575, 1
  %578 = mul i32 %575, %577
  %579 = urem i32 %578, 2
  %580 = icmp eq i32 %579, 0
  %581 = icmp slt i32 %576, 10
  %582 = or i1 %580, %581
  br i1 %582, label %originalBB149, label %originalBB149alteredBB

originalBB149:                                    ; preds = %574, %originalBB149alteredBB
  %583 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1208
  call void @print_boottime(%struct.utmpx* %583), !dbg !1209
  %584 = load i32, i32* @x.9
  %585 = load i32, i32* @y.10
  %586 = sub i32 %584, 1
  %587 = mul i32 %584, %586
  %588 = urem i32 %587, 2
  %589 = icmp eq i32 %588, 0
  %590 = icmp slt i32 %585, 10
  %591 = or i1 %589, %590
  br i1 %591, label %originalBBpart2151, label %originalBB149alteredBB

originalBBpart2151:                               ; preds = %originalBB149
  br label %864, !dbg !1209

592:                                              ; preds = %originalBBpart2147, %originalBBpart2143
  %593 = load i8, i8* @need_clockchange, align 1, !dbg !1210
  %594 = trunc i8 %593 to i1, !dbg !1210
  br i1 %594, label %595, label %635, !dbg !1212

595:                                              ; preds = %592
  %596 = load i32, i32* @x.9
  %597 = load i32, i32* @y.10
  %598 = sub i32 %596, 1
  %599 = mul i32 %596, %598
  %600 = urem i32 %599, 2
  %601 = icmp eq i32 %600, 0
  %602 = icmp slt i32 %597, 10
  %603 = or i1 %601, %602
  br i1 %603, label %originalBB153, label %originalBB153alteredBB

originalBB153:                                    ; preds = %595, %originalBB153alteredBB
  %604 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1213
  %605 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %604, i32 0, i32 0, !dbg !1213
  %606 = load i16, i16* %605, align 4, !dbg !1213
  %607 = sext i16 %606 to i32, !dbg !1213
  %608 = icmp eq i32 %607, 3, !dbg !1213
  %609 = load i32, i32* @x.9
  %610 = load i32, i32* @y.10
  %611 = sub i32 %609, 1
  %612 = mul i32 %609, %611
  %613 = urem i32 %612, 2
  %614 = icmp eq i32 %613, 0
  %615 = icmp slt i32 %610, 10
  %616 = or i1 %614, %615
  br i1 %616, label %originalBBpart2155, label %originalBB153alteredBB

originalBBpart2155:                               ; preds = %originalBB153
  br i1 %608, label %617, label %635, !dbg !1214

617:                                              ; preds = %originalBBpart2155
  %618 = load i32, i32* @x.9
  %619 = load i32, i32* @y.10
  %620 = sub i32 %618, 1
  %621 = mul i32 %618, %620
  %622 = urem i32 %621, 2
  %623 = icmp eq i32 %622, 0
  %624 = icmp slt i32 %619, 10
  %625 = or i1 %623, %624
  br i1 %625, label %originalBB157, label %originalBB157alteredBB

originalBB157:                                    ; preds = %617, %originalBB157alteredBB
  %626 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1215
  call void @print_clockchange(%struct.utmpx* %626), !dbg !1216
  %627 = load i32, i32* @x.9
  %628 = load i32, i32* @y.10
  %629 = sub i32 %627, 1
  %630 = mul i32 %627, %629
  %631 = urem i32 %630, 2
  %632 = icmp eq i32 %631, 0
  %633 = icmp slt i32 %628, 10
  %634 = or i1 %632, %633
  br i1 %634, label %originalBBpart2159, label %originalBB157alteredBB

originalBBpart2159:                               ; preds = %originalBB157
  br label %847, !dbg !1216

635:                                              ; preds = %originalBBpart2155, %592
  %636 = load i32, i32* @x.9
  %637 = load i32, i32* @y.10
  %638 = sub i32 %636, 1
  %639 = mul i32 %636, %638
  %640 = urem i32 %639, 2
  %641 = icmp eq i32 %640, 0
  %642 = icmp slt i32 %637, 10
  %643 = or i1 %641, %642
  br i1 %643, label %originalBB161, label %originalBB161alteredBB

originalBB161:                                    ; preds = %635, %originalBB161alteredBB
  %644 = load i8, i8* @need_initspawn, align 1, !dbg !1217
  %645 = trunc i8 %644 to i1, !dbg !1217
  %646 = load i32, i32* @x.9
  %647 = load i32, i32* @y.10
  %648 = sub i32 %646, 1
  %649 = mul i32 %646, %648
  %650 = urem i32 %649, 2
  %651 = icmp eq i32 %650, 0
  %652 = icmp slt i32 %647, 10
  %653 = or i1 %651, %652
  br i1 %653, label %originalBBpart2163, label %originalBB161alteredBB

originalBBpart2163:                               ; preds = %originalBB161
  br i1 %645, label %654, label %694, !dbg !1219

654:                                              ; preds = %originalBBpart2163
  %655 = load i32, i32* @x.9
  %656 = load i32, i32* @y.10
  %657 = sub i32 %655, 1
  %658 = mul i32 %655, %657
  %659 = urem i32 %658, 2
  %660 = icmp eq i32 %659, 0
  %661 = icmp slt i32 %656, 10
  %662 = or i1 %660, %661
  br i1 %662, label %originalBB165, label %originalBB165alteredBB

originalBB165:                                    ; preds = %654, %originalBB165alteredBB
  %663 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1220
  %664 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %663, i32 0, i32 0, !dbg !1220
  %665 = load i16, i16* %664, align 4, !dbg !1220
  %666 = sext i16 %665 to i32, !dbg !1220
  %667 = icmp eq i32 %666, 5, !dbg !1220
  %668 = load i32, i32* @x.9
  %669 = load i32, i32* @y.10
  %670 = sub i32 %668, 1
  %671 = mul i32 %668, %670
  %672 = urem i32 %671, 2
  %673 = icmp eq i32 %672, 0
  %674 = icmp slt i32 %669, 10
  %675 = or i1 %673, %674
  br i1 %675, label %originalBBpart2167, label %originalBB165alteredBB

originalBBpart2167:                               ; preds = %originalBB165
  br i1 %667, label %676, label %694, !dbg !1221

676:                                              ; preds = %originalBBpart2167
  %677 = load i32, i32* @x.9
  %678 = load i32, i32* @y.10
  %679 = sub i32 %677, 1
  %680 = mul i32 %677, %679
  %681 = urem i32 %680, 2
  %682 = icmp eq i32 %681, 0
  %683 = icmp slt i32 %678, 10
  %684 = or i1 %682, %683
  br i1 %684, label %originalBB169, label %originalBB169alteredBB

originalBB169:                                    ; preds = %676, %originalBB169alteredBB
  %685 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1222
  call void @print_initspawn(%struct.utmpx* %685), !dbg !1223
  %686 = load i32, i32* @x.9
  %687 = load i32, i32* @y.10
  %688 = sub i32 %686, 1
  %689 = mul i32 %686, %688
  %690 = urem i32 %689, 2
  %691 = icmp eq i32 %690, 0
  %692 = icmp slt i32 %687, 10
  %693 = or i1 %691, %692
  br i1 %693, label %originalBBpart2171, label %originalBB169alteredBB

originalBBpart2171:                               ; preds = %originalBB169
  br label %830, !dbg !1223

694:                                              ; preds = %originalBBpart2167, %originalBBpart2163
  %695 = load i32, i32* @x.9
  %696 = load i32, i32* @y.10
  %697 = sub i32 %695, 1
  %698 = mul i32 %695, %697
  %699 = urem i32 %698, 2
  %700 = icmp eq i32 %699, 0
  %701 = icmp slt i32 %696, 10
  %702 = or i1 %700, %701
  br i1 %702, label %originalBB173, label %originalBB173alteredBB

originalBB173:                                    ; preds = %694, %originalBB173alteredBB
  %703 = load i8, i8* @need_login, align 1, !dbg !1224
  %704 = trunc i8 %703 to i1, !dbg !1224
  %705 = load i32, i32* @x.9
  %706 = load i32, i32* @y.10
  %707 = sub i32 %705, 1
  %708 = mul i32 %705, %707
  %709 = urem i32 %708, 2
  %710 = icmp eq i32 %709, 0
  %711 = icmp slt i32 %706, 10
  %712 = or i1 %710, %711
  br i1 %712, label %originalBBpart2175, label %originalBB173alteredBB

originalBBpart2175:                               ; preds = %originalBB173
  br i1 %704, label %713, label %737, !dbg !1226

713:                                              ; preds = %originalBBpart2175
  %714 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1227
  %715 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %714, i32 0, i32 0, !dbg !1227
  %716 = load i16, i16* %715, align 4, !dbg !1227
  %717 = sext i16 %716 to i32, !dbg !1227
  %718 = icmp eq i32 %717, 6, !dbg !1227
  br i1 %718, label %719, label %737, !dbg !1228

719:                                              ; preds = %713
  %720 = load i32, i32* @x.9
  %721 = load i32, i32* @y.10
  %722 = sub i32 %720, 1
  %723 = mul i32 %720, %722
  %724 = urem i32 %723, 2
  %725 = icmp eq i32 %724, 0
  %726 = icmp slt i32 %721, 10
  %727 = or i1 %725, %726
  br i1 %727, label %originalBB177, label %originalBB177alteredBB

originalBB177:                                    ; preds = %719, %originalBB177alteredBB
  %728 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1229
  call void @print_login(%struct.utmpx* %728), !dbg !1230
  %729 = load i32, i32* @x.9
  %730 = load i32, i32* @y.10
  %731 = sub i32 %729, 1
  %732 = mul i32 %729, %731
  %733 = urem i32 %732, 2
  %734 = icmp eq i32 %733, 0
  %735 = icmp slt i32 %730, 10
  %736 = or i1 %734, %735
  br i1 %736, label %originalBBpart2179, label %originalBB177alteredBB

originalBBpart2179:                               ; preds = %originalBB177
  br label %813, !dbg !1230

737:                                              ; preds = %713, %originalBBpart2175
  %738 = load i32, i32* @x.9
  %739 = load i32, i32* @y.10
  %740 = sub i32 %738, 1
  %741 = mul i32 %738, %740
  %742 = urem i32 %741, 2
  %743 = icmp eq i32 %742, 0
  %744 = icmp slt i32 %739, 10
  %745 = or i1 %743, %744
  br i1 %745, label %originalBB181, label %originalBB181alteredBB

originalBB181:                                    ; preds = %737, %originalBB181alteredBB
  %746 = load i8, i8* @need_deadprocs, align 1, !dbg !1231
  %747 = trunc i8 %746 to i1, !dbg !1231
  %748 = load i32, i32* @x.9
  %749 = load i32, i32* @y.10
  %750 = sub i32 %748, 1
  %751 = mul i32 %748, %750
  %752 = urem i32 %751, 2
  %753 = icmp eq i32 %752, 0
  %754 = icmp slt i32 %749, 10
  %755 = or i1 %753, %754
  br i1 %755, label %originalBBpart2183, label %originalBB181alteredBB

originalBBpart2183:                               ; preds = %originalBB181
  br i1 %747, label %756, label %796, !dbg !1233

756:                                              ; preds = %originalBBpart2183
  %757 = load i32, i32* @x.9
  %758 = load i32, i32* @y.10
  %759 = sub i32 %757, 1
  %760 = mul i32 %757, %759
  %761 = urem i32 %760, 2
  %762 = icmp eq i32 %761, 0
  %763 = icmp slt i32 %758, 10
  %764 = or i1 %762, %763
  br i1 %764, label %originalBB185, label %originalBB185alteredBB

originalBB185:                                    ; preds = %756, %originalBB185alteredBB
  %765 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1234
  %766 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %765, i32 0, i32 0, !dbg !1234
  %767 = load i16, i16* %766, align 4, !dbg !1234
  %768 = sext i16 %767 to i32, !dbg !1234
  %769 = icmp eq i32 %768, 8, !dbg !1234
  %770 = load i32, i32* @x.9
  %771 = load i32, i32* @y.10
  %772 = sub i32 %770, 1
  %773 = mul i32 %770, %772
  %774 = urem i32 %773, 2
  %775 = icmp eq i32 %774, 0
  %776 = icmp slt i32 %771, 10
  %777 = or i1 %775, %776
  br i1 %777, label %originalBBpart2187, label %originalBB185alteredBB

originalBBpart2187:                               ; preds = %originalBB185
  br i1 %769, label %778, label %796, !dbg !1235

778:                                              ; preds = %originalBBpart2187
  %779 = load i32, i32* @x.9
  %780 = load i32, i32* @y.10
  %781 = sub i32 %779, 1
  %782 = mul i32 %779, %781
  %783 = urem i32 %782, 2
  %784 = icmp eq i32 %783, 0
  %785 = icmp slt i32 %780, 10
  %786 = or i1 %784, %785
  br i1 %786, label %originalBB189, label %originalBB189alteredBB

originalBB189:                                    ; preds = %778, %originalBB189alteredBB
  %787 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1236
  call void @print_deadprocs(%struct.utmpx* %787), !dbg !1237
  %788 = load i32, i32* @x.9
  %789 = load i32, i32* @y.10
  %790 = sub i32 %788, 1
  %791 = mul i32 %788, %790
  %792 = urem i32 %791, 2
  %793 = icmp eq i32 %792, 0
  %794 = icmp slt i32 %789, 10
  %795 = or i1 %793, %794
  br i1 %795, label %originalBBpart2191, label %originalBB189alteredBB

originalBBpart2191:                               ; preds = %originalBB189
  br label %796, !dbg !1237

796:                                              ; preds = %originalBBpart2191, %originalBBpart2187, %originalBBpart2183
  %797 = load i32, i32* @x.9
  %798 = load i32, i32* @y.10
  %799 = sub i32 %797, 1
  %800 = mul i32 %797, %799
  %801 = urem i32 %800, 2
  %802 = icmp eq i32 %801, 0
  %803 = icmp slt i32 %798, 10
  %804 = or i1 %802, %803
  br i1 %804, label %originalBB193, label %originalBB193alteredBB

originalBB193:                                    ; preds = %796, %originalBB193alteredBB
  %805 = load i32, i32* @x.9
  %806 = load i32, i32* @y.10
  %807 = sub i32 %805, 1
  %808 = mul i32 %805, %807
  %809 = urem i32 %808, 2
  %810 = icmp eq i32 %809, 0
  %811 = icmp slt i32 %806, 10
  %812 = or i1 %810, %811
  br i1 %812, label %originalBBpart2195, label %originalBB193alteredBB

originalBBpart2195:                               ; preds = %originalBB193
  br label %813

813:                                              ; preds = %originalBBpart2195, %originalBBpart2179
  %814 = load i32, i32* @x.9
  %815 = load i32, i32* @y.10
  %816 = sub i32 %814, 1
  %817 = mul i32 %814, %816
  %818 = urem i32 %817, 2
  %819 = icmp eq i32 %818, 0
  %820 = icmp slt i32 %815, 10
  %821 = or i1 %819, %820
  br i1 %821, label %originalBB197, label %originalBB197alteredBB

originalBB197:                                    ; preds = %813, %originalBB197alteredBB
  %822 = load i32, i32* @x.9
  %823 = load i32, i32* @y.10
  %824 = sub i32 %822, 1
  %825 = mul i32 %822, %824
  %826 = urem i32 %825, 2
  %827 = icmp eq i32 %826, 0
  %828 = icmp slt i32 %823, 10
  %829 = or i1 %827, %828
  br i1 %829, label %originalBBpart2199, label %originalBB197alteredBB

originalBBpart2199:                               ; preds = %originalBB197
  br label %830

830:                                              ; preds = %originalBBpart2199, %originalBBpart2171
  %831 = load i32, i32* @x.9
  %832 = load i32, i32* @y.10
  %833 = sub i32 %831, 1
  %834 = mul i32 %831, %833
  %835 = urem i32 %834, 2
  %836 = icmp eq i32 %835, 0
  %837 = icmp slt i32 %832, 10
  %838 = or i1 %836, %837
  br i1 %838, label %originalBB201, label %originalBB201alteredBB

originalBB201:                                    ; preds = %830, %originalBB201alteredBB
  %839 = load i32, i32* @x.9
  %840 = load i32, i32* @y.10
  %841 = sub i32 %839, 1
  %842 = mul i32 %839, %841
  %843 = urem i32 %842, 2
  %844 = icmp eq i32 %843, 0
  %845 = icmp slt i32 %840, 10
  %846 = or i1 %844, %845
  br i1 %846, label %originalBBpart2203, label %originalBB201alteredBB

originalBBpart2203:                               ; preds = %originalBB201
  br label %847

847:                                              ; preds = %originalBBpart2203, %originalBBpart2159
  %848 = load i32, i32* @x.9
  %849 = load i32, i32* @y.10
  %850 = sub i32 %848, 1
  %851 = mul i32 %848, %850
  %852 = urem i32 %851, 2
  %853 = icmp eq i32 %852, 0
  %854 = icmp slt i32 %849, 10
  %855 = or i1 %853, %854
  br i1 %855, label %originalBB205, label %originalBB205alteredBB

originalBB205:                                    ; preds = %847, %originalBB205alteredBB
  %856 = load i32, i32* @x.9
  %857 = load i32, i32* @y.10
  %858 = sub i32 %856, 1
  %859 = mul i32 %856, %858
  %860 = urem i32 %859, 2
  %861 = icmp eq i32 %860, 0
  %862 = icmp slt i32 %857, 10
  %863 = or i1 %861, %862
  br i1 %863, label %originalBBpart2207, label %originalBB205alteredBB

originalBBpart2207:                               ; preds = %originalBB205
  br label %864

864:                                              ; preds = %originalBBpart2207, %originalBBpart2151
  %865 = load i32, i32* @x.9
  %866 = load i32, i32* @y.10
  %867 = sub i32 %865, 1
  %868 = mul i32 %865, %867
  %869 = urem i32 %868, 2
  %870 = icmp eq i32 %869, 0
  %871 = icmp slt i32 %866, 10
  %872 = or i1 %870, %871
  br i1 %872, label %originalBB209, label %originalBB209alteredBB

originalBB209:                                    ; preds = %864, %originalBB209alteredBB
  %873 = load i32, i32* @x.9
  %874 = load i32, i32* @y.10
  %875 = sub i32 %873, 1
  %876 = mul i32 %873, %875
  %877 = urem i32 %876, 2
  %878 = icmp eq i32 %877, 0
  %879 = icmp slt i32 %874, 10
  %880 = or i1 %878, %879
  br i1 %880, label %originalBBpart2211, label %originalBB209alteredBB

originalBBpart2211:                               ; preds = %originalBB209
  br label %881

881:                                              ; preds = %originalBBpart2211, %originalBBpart2139
  %882 = load i32, i32* @x.9
  %883 = load i32, i32* @y.10
  %884 = sub i32 %882, 1
  %885 = mul i32 %882, %884
  %886 = urem i32 %885, 2
  %887 = icmp eq i32 %886, 0
  %888 = icmp slt i32 %883, 10
  %889 = or i1 %887, %888
  br i1 %889, label %originalBB213, label %originalBB213alteredBB

originalBB213:                                    ; preds = %881, %originalBB213alteredBB
  %890 = load i32, i32* @x.9
  %891 = load i32, i32* @y.10
  %892 = sub i32 %890, 1
  %893 = mul i32 %890, %892
  %894 = urem i32 %893, 2
  %895 = icmp eq i32 %894, 0
  %896 = icmp slt i32 %891, 10
  %897 = or i1 %895, %896
  br i1 %897, label %originalBBpart2215, label %originalBB213alteredBB

originalBBpart2215:                               ; preds = %originalBB213
  br label %898

898:                                              ; preds = %originalBBpart2215, %originalBBpart2127
  %899 = load i32, i32* @x.9
  %900 = load i32, i32* @y.10
  %901 = sub i32 %899, 1
  %902 = mul i32 %899, %901
  %903 = urem i32 %902, 2
  %904 = icmp eq i32 %903, 0
  %905 = icmp slt i32 %900, 10
  %906 = or i1 %904, %905
  br i1 %906, label %originalBB217, label %originalBB217alteredBB

originalBB217:                                    ; preds = %898, %originalBB217alteredBB
  %907 = load i32, i32* @x.9
  %908 = load i32, i32* @y.10
  %909 = sub i32 %907, 1
  %910 = mul i32 %907, %909
  %911 = urem i32 %910, 2
  %912 = icmp eq i32 %911, 0
  %913 = icmp slt i32 %908, 10
  %914 = or i1 %912, %913
  br i1 %914, label %originalBBpart2219, label %originalBB217alteredBB

originalBBpart2219:                               ; preds = %originalBB217
  br label %915, !dbg !1238

915:                                              ; preds = %originalBBpart2219, %originalBBpart2111
  %916 = load i32, i32* @x.9
  %917 = load i32, i32* @y.10
  %918 = sub i32 %916, 1
  %919 = mul i32 %916, %918
  %920 = urem i32 %919, 2
  %921 = icmp eq i32 %920, 0
  %922 = icmp slt i32 %917, 10
  %923 = or i1 %921, %922
  br i1 %923, label %originalBB221, label %originalBB221alteredBB

originalBB221:                                    ; preds = %915, %originalBB221alteredBB
  %924 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1239
  %925 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %924, i32 0, i32 0, !dbg !1239
  %926 = load i16, i16* %925, align 4, !dbg !1239
  %927 = sext i16 %926 to i32, !dbg !1239
  %928 = icmp eq i32 %927, 2, !dbg !1239
  %929 = load i32, i32* @x.9
  %930 = load i32, i32* @y.10
  %931 = sub i32 %929, 1
  %932 = mul i32 %929, %931
  %933 = urem i32 %932, 2
  %934 = icmp eq i32 %933, 0
  %935 = icmp slt i32 %930, 10
  %936 = or i1 %934, %935
  br i1 %936, label %originalBBpart2223, label %originalBB221alteredBB

originalBBpart2223:                               ; preds = %originalBB221
  br i1 %928, label %937, label %959, !dbg !1241

937:                                              ; preds = %originalBBpart2223
  %938 = load i32, i32* @x.9
  %939 = load i32, i32* @y.10
  %940 = sub i32 %938, 1
  %941 = mul i32 %938, %940
  %942 = urem i32 %941, 2
  %943 = icmp eq i32 %942, 0
  %944 = icmp slt i32 %939, 10
  %945 = or i1 %943, %944
  br i1 %945, label %originalBB225, label %originalBB225alteredBB

originalBB225:                                    ; preds = %937, %originalBB225alteredBB
  %946 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1242
  %947 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %946, i32 0, i32 8, !dbg !1242
  %948 = getelementptr inbounds %struct.anon, %struct.anon* %947, i32 0, i32 0, !dbg !1242
  %949 = load i32, i32* %948, align 4, !dbg !1242
  %950 = sext i32 %949 to i64, !dbg !1242
  store i64 %950, i64* %14, align 8, !dbg !1243
  %951 = load i32, i32* @x.9
  %952 = load i32, i32* @y.10
  %953 = sub i32 %951, 1
  %954 = mul i32 %951, %953
  %955 = urem i32 %954, 2
  %956 = icmp eq i32 %955, 0
  %957 = icmp slt i32 %952, 10
  %958 = or i1 %956, %957
  br i1 %958, label %originalBBpart2227, label %originalBB225alteredBB

originalBBpart2227:                               ; preds = %originalBB225
  br label %959, !dbg !1244

959:                                              ; preds = %originalBBpart2227, %originalBBpart2223
  %960 = load i32, i32* @x.9
  %961 = load i32, i32* @y.10
  %962 = sub i32 %960, 1
  %963 = mul i32 %960, %962
  %964 = urem i32 %963, 2
  %965 = icmp eq i32 %964, 0
  %966 = icmp slt i32 %961, 10
  %967 = or i1 %965, %966
  br i1 %967, label %originalBB229, label %originalBB229alteredBB

originalBB229:                                    ; preds = %959, %originalBB229alteredBB
  %968 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1245
  %969 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %968, i32 1, !dbg !1245
  store %struct.utmpx* %969, %struct.utmpx** %12, align 8, !dbg !1245
  %970 = load i32, i32* @x.9
  %971 = load i32, i32* @y.10
  %972 = sub i32 %970, 1
  %973 = mul i32 %970, %972
  %974 = urem i32 %973, 2
  %975 = icmp eq i32 %974, 0
  %976 = icmp slt i32 %971, 10
  %977 = or i1 %975, %976
  br i1 %977, label %originalBBpart2231, label %originalBB229alteredBB

originalBBpart2231:                               ; preds = %originalBB229
  br label %345, !dbg !1179, !llvm.loop !1246

978:                                              ; preds = %345, %originalBBpart216
  ret void, !dbg !1248

originalBBalteredBB:                              ; preds = %originalBB, %2
  %979 = alloca i64, align 8
  %980 = alloca %struct.utmpx*, align 8
  %981 = alloca i8*, align 8
  %982 = alloca i64, align 8
  store i64 %0, i64* %979, align 8
  call void @llvm.dbg.declare(metadata i64* %979, metadata !1249, metadata !DIExpression()), !dbg !1152
  store %struct.utmpx* %1, %struct.utmpx** %980, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %980, metadata !1353, metadata !DIExpression()), !dbg !1154
  call void @llvm.dbg.declare(metadata i8** %981, metadata !1354, metadata !DIExpression()), !dbg !1156
  call void @llvm.dbg.declare(metadata i64* %982, metadata !1355, metadata !DIExpression()), !dbg !1158
  store i64 -9223372036854775808, i64* %982, align 8, !dbg !1158
  %983 = load i8, i8* @include_heading, align 1, !dbg !1159
  %984 = trunc i8 %983 to i1, !dbg !1159
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  call void @print_heading(), !dbg !1162
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %42
  %985 = load i8, i8* @my_line_only, align 1, !dbg !1163
  %986 = trunc i8 %985 to i1, !dbg !1163
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %61
  %987 = call i8* @ttyname(i32 0) #10, !dbg !1166
  store i8* %987, i8** %13, align 8, !dbg !1168
  %988 = load i8*, i8** %13, align 8, !dbg !1169
  %989 = icmp ne i8* %988, null, !dbg !1169
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %81
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %98
  %990 = load i8*, i8** %13, align 8, !dbg !1173
  %991 = call i32 @strncmp(i8* %990, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0), i64 5) #13, !dbg !1173
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %118
  %992 = load i32, i32* @inVal0
  %993 = icmp sgt i32 %992, 1
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %137
  store i32 45, i32* %collatzVar
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %154
  %994 = load i8**, i8*** @inVal1
  %995 = getelementptr inbounds i8*, i8** %994, i64 1
  %996 = load i8*, i8** %995
  %controlealteredBB = call i32 @controle(i8* %996, i32 0)
  store i32 %controlealteredBB, i32* %collatzVar
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %174
  %997 = load i32, i32* %collatzVar
  %998 = icmp sgt i32 %997, 1
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %193
  %999 = load i32, i32* %collatzVar
  %_ = shl i32 %999, 2
  %_39 = sub i32 0, %999
  %gen = add i32 %_39, 2
  %_40 = sub i32 0, %999
  %gen41 = add i32 %_40, 2
  %1000 = srem i32 %999, 2
  %1001 = icmp eq i32 %1000, 0
  br label %originalBB38

originalBB45alteredBB:                            ; preds = %originalBB45, %213
  %1002 = load i32, i32* %collatzVar
  %_46 = sub i32 %1002, 2
  %gen47 = mul i32 %_46, 2
  %_48 = sub i32 0, %1002
  %gen49 = add i32 %_48, 2
  %1003 = sdiv i32 %1002, 2
  store i32 %1003, i32* %collatzVar
  br label %originalBB45

originalBB53alteredBB:                            ; preds = %originalBB53, %232
  %1004 = load i32, i32* %collatzVar
  %_54 = sub i32 %1004, 3
  %gen55 = mul i32 %_54, 3
  %_56 = sub i32 0, %1004
  %gen57 = add i32 %_56, 3
  %_58 = sub i32 0, %1004
  %gen59 = add i32 %_58, 3
  %_60 = shl i32 %1004, 3
  %_61 = shl i32 %1004, 3
  %_62 = shl i32 %1004, 3
  %1005 = mul i32 %1004, 3
  %_63 = shl i32 %1005, 1
  %_64 = shl i32 %1005, 1
  %_65 = shl i32 %1005, 1
  %1006 = add i32 %1005, 1
  store i32 %1006, i32* %collatzVar
  br label %originalBB53

originalBB69alteredBB:                            ; preds = %originalBB69, %252
  %1007 = load i32, i32* %collatzVar
  %_70 = shl i32 %108, %1007
  %_71 = sub i32 0, %108
  %gen72 = add i32 %_71, %1007
  %_73 = sub i32 0, %108
  %gen74 = add i32 %_73, %1007
  %_75 = shl i32 %108, %1007
  %_76 = sub i32 %108, %1007
  %gen77 = mul i32 %_76, %1007
  %_78 = shl i32 %108, %1007
  %_79 = sub i32 %108, %1007
  %gen80 = mul i32 %_79, %1007
  %_81 = shl i32 %108, %1007
  %1008 = sub i32 %108, %1007
  %1009 = icmp sgt i32 %1008, -2
  br label %originalBB69

originalBB85alteredBB:                            ; preds = %originalBB85, %272
  %1010 = load i32, i32* %collatzVar
  %_86 = sub i32 %108, %1010
  %gen87 = mul i32 %_86, %1010
  %_88 = sub i32 0, %108
  %gen89 = add i32 %_88, %1010
  %1011 = add i32 %108, %1010
  %1012 = icmp slt i32 %1011, 2
  br label %originalBB85

originalBB93alteredBB:                            ; preds = %originalBB93, %292
  %1013 = load i8*, i8** %13, align 8, !dbg !1176
  %1014 = getelementptr inbounds i8, i8* %1013, i64 5, !dbg !1176
  store i8* %1014, i8** %13, align 8, !dbg !1176
  br label %originalBB93

originalBB97alteredBB:                            ; preds = %originalBB97, %311
  br label %originalBB97

originalBB101alteredBB:                           ; preds = %originalBB101, %328
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %349
  %1015 = load i8, i8* @my_line_only, align 1, !dbg !1181
  %1016 = trunc i8 %1015 to i1, !dbg !1181
  br label %originalBB105

originalBB109alteredBB:                           ; preds = %originalBB109, %368
  %1017 = load i8*, i8** %13, align 8, !dbg !1185
  %1018 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1185
  %1019 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %1018, i32 0, i32 2, !dbg !1185
  %1020 = getelementptr inbounds [32 x i8], [32 x i8]* %1019, i64 0, i64 0, !dbg !1185
  %1021 = call i32 @strncmp(i8* %1017, i8* %1020, i64 32) #13, !dbg !1185
  %1022 = icmp eq i32 %1021, 0, !dbg !1185
  br label %originalBB109

originalBB113alteredBB:                           ; preds = %originalBB113, %391
  %1023 = load i8, i8* @need_users, align 1, !dbg !1187
  %1024 = trunc i8 %1023 to i1, !dbg !1187
  br label %originalBB113

originalBB117alteredBB:                           ; preds = %originalBB117, %410
  %1025 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1191
  %1026 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %1025, i32 0, i32 4, !dbg !1191
  %1027 = getelementptr inbounds [32 x i8], [32 x i8]* %1026, i64 0, i64 0, !dbg !1191
  %1028 = load i8, i8* %1027, align 4, !dbg !1191
  %1029 = sext i8 %1028 to i32, !dbg !1191
  %1030 = icmp ne i32 %1029, 0, !dbg !1191
  br label %originalBB117

originalBB121alteredBB:                           ; preds = %originalBB121, %433
  %1031 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1191
  %1032 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %1031, i32 0, i32 0, !dbg !1191
  %1033 = load i16, i16* %1032, align 4, !dbg !1191
  %1034 = sext i16 %1033 to i32, !dbg !1191
  %1035 = icmp eq i32 %1034, 7, !dbg !1191
  br label %originalBB121

originalBB125alteredBB:                           ; preds = %originalBB125, %455
  %1036 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1193
  %1037 = load i64, i64* %14, align 8, !dbg !1194
  call void @print_user(%struct.utmpx* %1036, i64 %1037), !dbg !1195
  br label %originalBB125

originalBB129alteredBB:                           ; preds = %originalBB129, %474
  %1038 = load i8, i8* @need_runlevel, align 1, !dbg !1196
  %1039 = trunc i8 %1038 to i1, !dbg !1196
  br label %originalBB129

originalBB133alteredBB:                           ; preds = %originalBB133, %493
  %1040 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1199
  %1041 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %1040, i32 0, i32 0, !dbg !1199
  %1042 = load i16, i16* %1041, align 4, !dbg !1199
  %1043 = sext i16 %1042 to i32, !dbg !1199
  %1044 = icmp eq i32 %1043, 1, !dbg !1199
  br label %originalBB133

originalBB137alteredBB:                           ; preds = %originalBB137, %515
  %1045 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1201
  call void @print_runlevel(%struct.utmpx* %1045), !dbg !1202
  br label %originalBB137

originalBB141alteredBB:                           ; preds = %originalBB141, %533
  %1046 = load i8, i8* @need_boottime, align 1, !dbg !1203
  %1047 = trunc i8 %1046 to i1, !dbg !1203
  br label %originalBB141

originalBB145alteredBB:                           ; preds = %originalBB145, %552
  %1048 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1206
  %1049 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %1048, i32 0, i32 0, !dbg !1206
  %1050 = load i16, i16* %1049, align 4, !dbg !1206
  %1051 = sext i16 %1050 to i32, !dbg !1206
  %1052 = icmp eq i32 %1051, 2, !dbg !1206
  br label %originalBB145

originalBB149alteredBB:                           ; preds = %originalBB149, %574
  %1053 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1208
  call void @print_boottime(%struct.utmpx* %1053), !dbg !1209
  br label %originalBB149

originalBB153alteredBB:                           ; preds = %originalBB153, %595
  %1054 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1213
  %1055 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %1054, i32 0, i32 0, !dbg !1213
  %1056 = load i16, i16* %1055, align 4, !dbg !1213
  %1057 = sext i16 %1056 to i32, !dbg !1213
  %1058 = icmp eq i32 %1057, 3, !dbg !1213
  br label %originalBB153

originalBB157alteredBB:                           ; preds = %originalBB157, %617
  %1059 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1215
  call void @print_clockchange(%struct.utmpx* %1059), !dbg !1216
  br label %originalBB157

originalBB161alteredBB:                           ; preds = %originalBB161, %635
  %1060 = load i8, i8* @need_initspawn, align 1, !dbg !1217
  %1061 = trunc i8 %1060 to i1, !dbg !1217
  br label %originalBB161

originalBB165alteredBB:                           ; preds = %originalBB165, %654
  %1062 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1220
  %1063 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %1062, i32 0, i32 0, !dbg !1220
  %1064 = load i16, i16* %1063, align 4, !dbg !1220
  %1065 = sext i16 %1064 to i32, !dbg !1220
  %1066 = icmp eq i32 %1065, 5, !dbg !1220
  br label %originalBB165

originalBB169alteredBB:                           ; preds = %originalBB169, %676
  %1067 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1222
  call void @print_initspawn(%struct.utmpx* %1067), !dbg !1223
  br label %originalBB169

originalBB173alteredBB:                           ; preds = %originalBB173, %694
  %1068 = load i8, i8* @need_login, align 1, !dbg !1224
  %1069 = trunc i8 %1068 to i1, !dbg !1224
  br label %originalBB173

originalBB177alteredBB:                           ; preds = %originalBB177, %719
  %1070 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1229
  call void @print_login(%struct.utmpx* %1070), !dbg !1230
  br label %originalBB177

originalBB181alteredBB:                           ; preds = %originalBB181, %737
  %1071 = load i8, i8* @need_deadprocs, align 1, !dbg !1231
  %1072 = trunc i8 %1071 to i1, !dbg !1231
  br label %originalBB181

originalBB185alteredBB:                           ; preds = %originalBB185, %756
  %1073 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1234
  %1074 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %1073, i32 0, i32 0, !dbg !1234
  %1075 = load i16, i16* %1074, align 4, !dbg !1234
  %1076 = sext i16 %1075 to i32, !dbg !1234
  %1077 = icmp eq i32 %1076, 8, !dbg !1234
  br label %originalBB185

originalBB189alteredBB:                           ; preds = %originalBB189, %778
  %1078 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1236
  call void @print_deadprocs(%struct.utmpx* %1078), !dbg !1237
  br label %originalBB189

originalBB193alteredBB:                           ; preds = %originalBB193, %796
  br label %originalBB193

originalBB197alteredBB:                           ; preds = %originalBB197, %813
  br label %originalBB197

originalBB201alteredBB:                           ; preds = %originalBB201, %830
  br label %originalBB201

originalBB205alteredBB:                           ; preds = %originalBB205, %847
  br label %originalBB205

originalBB209alteredBB:                           ; preds = %originalBB209, %864
  br label %originalBB209

originalBB213alteredBB:                           ; preds = %originalBB213, %881
  br label %originalBB213

originalBB217alteredBB:                           ; preds = %originalBB217, %898
  br label %originalBB217

originalBB221alteredBB:                           ; preds = %originalBB221, %915
  %1079 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1239
  %1080 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %1079, i32 0, i32 0, !dbg !1239
  %1081 = load i16, i16* %1080, align 4, !dbg !1239
  %1082 = sext i16 %1081 to i32, !dbg !1239
  %1083 = icmp eq i32 %1082, 2, !dbg !1239
  br label %originalBB221

originalBB225alteredBB:                           ; preds = %originalBB225, %937
  %1084 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1242
  %1085 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %1084, i32 0, i32 8, !dbg !1242
  %1086 = getelementptr inbounds %struct.anon, %struct.anon* %1085, i32 0, i32 0, !dbg !1242
  %1087 = load i32, i32* %1086, align 4, !dbg !1242
  %1088 = sext i32 %1087 to i64, !dbg !1242
  store i64 %1088, i64* %14, align 8, !dbg !1243
  br label %originalBB225

originalBB229alteredBB:                           ; preds = %originalBB229, %959
  %1089 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !1245
  %1090 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %1089, i32 1, !dbg !1245
  store %struct.utmpx* %1090, %struct.utmpx** %12, align 8, !dbg !1245
  br label %originalBB229
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_heading() #4 !dbg !1356 {
  %1 = load i32, i32* @x.11
  %2 = load i32, i32* @y.12
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0)) #10, !dbg !1359
  %10 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i64 0, i64 0)) #10, !dbg !1360
  %11 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i64 0, i64 0)) #10, !dbg !1361
  %12 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i64 0, i64 0)) #10, !dbg !1362
  %13 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i64 0, i64 0)) #10, !dbg !1363
  %14 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i64 0, i64 0)) #10, !dbg !1364
  %15 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0)) #10, !dbg !1365
  call void @print_line(i32 -1, i8* %9, i8 signext 32, i32 -1, i8* %10, i8* %11, i8* %12, i8* %13, i8* %14, i8* %15), !dbg !1366
  %16 = load i32, i32* @x.11
  %17 = load i32, i32* @y.12
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !1367

originalBBalteredBB:                              ; preds = %originalBB, %0
  %24 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0)) #10, !dbg !1359
  %25 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i64 0, i64 0)) #10, !dbg !1360
  %26 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i64 0, i64 0)) #10, !dbg !1361
  %27 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i64 0, i64 0)) #10, !dbg !1362
  %28 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i64 0, i64 0)) #10, !dbg !1363
  %29 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i64 0, i64 0)) #10, !dbg !1364
  %30 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0)) #10, !dbg !1365
  call void @print_line(i32 -1, i8* %24, i8 signext 32, i32 -1, i8* %25, i8* %26, i8* %27, i8* %28, i8* %29, i8* %30), !dbg !1366
  br label %originalBB
}

; Function Attrs: nounwind
declare dso_local i8* @ttyname(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_user(%struct.utmpx*, i64) #4 !dbg !64 {
  %3 = load i32, i32* @x.13
  %4 = load i32, i32* @y.14
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %struct.utmpx*, align 8
  %12 = alloca i64, align 8
  %13 = alloca %struct.stat, align 8
  %14 = alloca i64, align 8
  %15 = alloca i8, align 1
  %16 = alloca [7 x i8], align 1
  %17 = alloca [38 x i8], align 16
  %18 = alloca i8*, align 8
  %19 = alloca [12 x i8], align 1
  %20 = alloca [257 x i8], align 16
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %11, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %11, metadata !1368, metadata !DIExpression()), !dbg !1369
  store i64 %1, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !1370, metadata !DIExpression()), !dbg !1371
  call void @llvm.dbg.declare(metadata %struct.stat* %13, metadata !1372, metadata !DIExpression()), !dbg !1407
  call void @llvm.dbg.declare(metadata i64* %14, metadata !1408, metadata !DIExpression()), !dbg !1409
  call void @llvm.dbg.declare(metadata i8* %15, metadata !1410, metadata !DIExpression()), !dbg !1411
  call void @llvm.dbg.declare(metadata [7 x i8]* %16, metadata !1412, metadata !DIExpression()), !dbg !1414
  call void @llvm.dbg.declare(metadata [38 x i8]* %17, metadata !1415, metadata !DIExpression()), !dbg !1419
  call void @llvm.dbg.declare(metadata i8** %18, metadata !1420, metadata !DIExpression()), !dbg !1421
  %23 = getelementptr inbounds [38 x i8], [38 x i8]* %17, i64 0, i64 0, !dbg !1422
  store i8* %23, i8** %18, align 8, !dbg !1421
  call void @llvm.dbg.declare(metadata [12 x i8]* %19, metadata !1423, metadata !DIExpression()), !dbg !1427
  %24 = getelementptr inbounds [12 x i8], [12 x i8]* %19, i64 0, i64 0, !dbg !1427
  %25 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1427
  %26 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %25, i32 0, i32 1, !dbg !1427
  %27 = load i32, i32* %26, align 4, !dbg !1427
  %28 = sext i32 %27 to i64, !dbg !1427
  %29 = call i32 (i8*, i8*, ...) @sprintf(i8* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %28) #10, !dbg !1427
  %30 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1428
  %31 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %30, i32 0, i32 2, !dbg !1428
  %32 = getelementptr inbounds [32 x i8], [32 x i8]* %31, i64 0, i64 0, !dbg !1428
  %33 = load i8, i8* %32, align 4, !dbg !1428
  %34 = sext i8 %33 to i32, !dbg !1428
  %35 = icmp eq i32 %34, 47, !dbg !1428
  %36 = load i32, i32* @x.13
  %37 = load i32, i32* @y.14
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %35, label %63, label %44, !dbg !1430

44:                                               ; preds = %originalBBpart2
  %45 = load i32, i32* @x.13
  %46 = load i32, i32* @y.14
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %44, %originalBB1alteredBB
  %53 = load i8*, i8** %18, align 8, !dbg !1431
  %54 = call i8* @stpcpy(i8* %53, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0)) #10, !dbg !1432
  store i8* %54, i8** %18, align 8, !dbg !1433
  %55 = load i32, i32* @x.13
  %56 = load i32, i32* @y.14
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %63, !dbg !1434

63:                                               ; preds = %originalBBpart24, %originalBBpart2
  %64 = load i32, i32* @x.13
  %65 = load i32, i32* @y.14
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %63, %originalBB6alteredBB
  %72 = load i8*, i8** %18, align 8, !dbg !1435
  %73 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1436
  %74 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %73, i32 0, i32 2, !dbg !1437
  %75 = getelementptr inbounds [32 x i8], [32 x i8]* %74, i64 0, i64 0, !dbg !1436
  %76 = call i8* @stzncpy(i8* %72, i8* %75, i64 32), !dbg !1438
  %77 = getelementptr inbounds [38 x i8], [38 x i8]* %17, i64 0, i64 0, !dbg !1439
  %78 = call i32 @stat(i8* %77, %struct.stat* %13) #10, !dbg !1441
  %79 = icmp eq i32 %78, 0, !dbg !1442
  %80 = load i32, i32* @x.13
  %81 = load i32, i32* @y.14
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %79, label %88, label %96, !dbg !1443

88:                                               ; preds = %originalBBpart28
  %89 = call zeroext i1 @is_tty_writable(%struct.stat* %13), !dbg !1444
  %90 = zext i1 %89 to i64, !dbg !1444
  %91 = select i1 %89, i32 43, i32 45, !dbg !1444
  %92 = trunc i32 %91 to i8, !dbg !1444
  store i8 %92, i8* %15, align 1, !dbg !1446
  %93 = getelementptr inbounds %struct.stat, %struct.stat* %13, i32 0, i32 11, !dbg !1447
  %94 = getelementptr inbounds %struct.timespec, %struct.timespec* %93, i32 0, i32 0, !dbg !1447
  %95 = load i64, i64* %94, align 8, !dbg !1447
  store i64 %95, i64* %14, align 8, !dbg !1448
  br label %113, !dbg !1449

96:                                               ; preds = %originalBBpart28
  %97 = load i32, i32* @x.13
  %98 = load i32, i32* @y.14
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %96, %originalBB10alteredBB
  store i8 63, i8* %15, align 1, !dbg !1450
  store i64 0, i64* %14, align 8, !dbg !1452
  %105 = load i32, i32* @x.13
  %106 = load i32, i32* @y.14
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %113

113:                                              ; preds = %originalBBpart212, %88
  %114 = load i32, i32* @x.13
  %115 = load i32, i32* @y.14
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %113, %originalBB14alteredBB
  %122 = load i64, i64* %14, align 8, !dbg !1453
  %123 = icmp ne i64 %122, 0, !dbg !1453
  %124 = load i32, i32* @x.13
  %125 = load i32, i32* @y.14
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %123, label %132, label %154, !dbg !1455

132:                                              ; preds = %originalBBpart216
  %133 = load i32, i32* @x.13
  %134 = load i32, i32* @y.14
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %132, %originalBB18alteredBB
  %141 = getelementptr inbounds [7 x i8], [7 x i8]* %16, i64 0, i64 0, !dbg !1456
  %142 = load i64, i64* %14, align 8, !dbg !1457
  %143 = load i64, i64* %12, align 8, !dbg !1458
  %144 = call i8* @idle_string(i64 %142, i64 %143), !dbg !1459
  %145 = call i32 (i8*, i8*, ...) @sprintf(i8* %141, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i64 0, i64 0), i32 6, i8* %144) #10, !dbg !1460
  %146 = load i32, i32* @x.13
  %147 = load i32, i32* @y.14
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %173, !dbg !1460

154:                                              ; preds = %originalBBpart216
  %155 = load i32, i32* @x.13
  %156 = load i32, i32* @y.14
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %154, %originalBB22alteredBB
  %163 = getelementptr inbounds [7 x i8], [7 x i8]* %16, i64 0, i64 0, !dbg !1461
  %164 = call i32 (i8*, i8*, ...) @sprintf(i8* %163, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i64 0, i64 0)) #10, !dbg !1462
  %165 = load i32, i32* @x.13
  %166 = load i32, i32* @y.14
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %173

173:                                              ; preds = %originalBBpart224, %originalBBpart220
  %174 = load i32, i32* @x.13
  %175 = load i32, i32* @y.14
  %176 = sub i32 %174, 1
  %177 = mul i32 %174, %176
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %179, %180
  br i1 %181, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %173, %originalBB26alteredBB
  %182 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1463
  %183 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %182, i32 0, i32 5, !dbg !1465
  %184 = getelementptr inbounds [256 x i8], [256 x i8]* %183, i64 0, i64 0, !dbg !1463
  %185 = load i8, i8* %184, align 4, !dbg !1463
  %186 = icmp ne i8 %185, 0, !dbg !1463
  %187 = load i32, i32* @x.13
  %188 = load i32, i32* @y.14
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %186, label %195, label %499, !dbg !1466

195:                                              ; preds = %originalBBpart228
  call void @llvm.dbg.declare(metadata [257 x i8]* %20, metadata !1467, metadata !DIExpression()), !dbg !1472
  call void @llvm.dbg.declare(metadata i8** %21, metadata !1473, metadata !DIExpression()), !dbg !1474
  %196 = load i32, i32* @x.13
  %197 = load i32, i32* @y.14
  %198 = sub i32 %196, 1
  %199 = mul i32 %196, %198
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %201, %202
  br i1 %203, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %195, %originalBB30alteredBB
  store i8* null, i8** %21, align 8, !dbg !1474
  call void @llvm.dbg.declare(metadata i8** %22, metadata !1475, metadata !DIExpression()), !dbg !1476
  store i8* null, i8** %22, align 8, !dbg !1476
  %204 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1477
  %205 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1478
  %206 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %205, i32 0, i32 5, !dbg !1479
  %207 = getelementptr inbounds [256 x i8], [256 x i8]* %206, i64 0, i64 0, !dbg !1478
  %208 = call i8* @stzncpy(i8* %204, i8* %207, i64 256), !dbg !1480
  %209 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1481
  %210 = call i8* @strchr(i8* %209, i32 58) #13, !dbg !1482
  store i8* %210, i8** %22, align 8, !dbg !1483
  %211 = load i8*, i8** %22, align 8, !dbg !1484
  %212 = icmp ne i8* %211, null, !dbg !1484
  %213 = load i32, i32* @x.13
  %214 = load i32, i32* @y.14
  %215 = sub i32 %213, 1
  %216 = mul i32 %213, %215
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %218, %219
  br i1 %220, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %212, label %221, label %240, !dbg !1486

221:                                              ; preds = %originalBBpart232
  %222 = load i32, i32* @x.13
  %223 = load i32, i32* @y.14
  %224 = sub i32 %222, 1
  %225 = mul i32 %222, %224
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %227, %228
  br i1 %229, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %221, %originalBB34alteredBB
  %230 = load i8*, i8** %22, align 8, !dbg !1487
  %231 = getelementptr inbounds i8, i8* %230, i32 1, !dbg !1487
  store i8* %231, i8** %22, align 8, !dbg !1487
  store i8 0, i8* %230, align 1, !dbg !1488
  %232 = load i32, i32* @x.13
  %233 = load i32, i32* @y.14
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %240, !dbg !1489

240:                                              ; preds = %originalBBpart236, %originalBBpart232
  %241 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1490
  %242 = load i8, i8* %241, align 16, !dbg !1490
  %243 = sext i8 %242 to i32, !dbg !1490
  %244 = icmp ne i32 %243, 0, !dbg !1490
  br i1 %244, label %245, label %283, !dbg !1492

245:                                              ; preds = %240
  %246 = load i32, i32* @x.13
  %247 = load i32, i32* @y.14
  %248 = sub i32 %246, 1
  %249 = mul i32 %246, %248
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %251, %252
  br i1 %253, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %245, %originalBB38alteredBB
  %254 = load i8, i8* @do_lookup, align 1, !dbg !1493
  %255 = trunc i8 %254 to i1, !dbg !1493
  %256 = load i32, i32* @x.13
  %257 = load i32, i32* @y.14
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %255, label %264, label %283, !dbg !1494

264:                                              ; preds = %originalBBpart240
  %265 = load i32, i32* @x.13
  %266 = load i32, i32* @y.14
  %267 = sub i32 %265, 1
  %268 = mul i32 %265, %267
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %270, %271
  br i1 %272, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %264, %originalBB42alteredBB
  %273 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1495
  %274 = call noalias i8* @canon_host(i8* %273), !dbg !1497
  store i8* %274, i8** %21, align 8, !dbg !1498
  %275 = load i32, i32* @x.13
  %276 = load i32, i32* @y.14
  %277 = sub i32 %275, 1
  %278 = mul i32 %275, %277
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %280, %281
  br i1 %282, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %283, !dbg !1499

283:                                              ; preds = %originalBBpart244, %originalBBpart240, %240
  %284 = load i8*, i8** %21, align 8, !dbg !1500
  %285 = icmp ne i8* %284, null, !dbg !1500
  br i1 %285, label %304, label %286, !dbg !1502

286:                                              ; preds = %283
  %287 = load i32, i32* @x.13
  %288 = load i32, i32* @y.14
  %289 = sub i32 %287, 1
  %290 = mul i32 %287, %289
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %288, 10
  %294 = or i1 %292, %293
  br i1 %294, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %286, %originalBB46alteredBB
  %295 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1503
  store i8* %295, i8** %21, align 8, !dbg !1504
  %296 = load i32, i32* @x.13
  %297 = load i32, i32* @y.14
  %298 = sub i32 %296, 1
  %299 = mul i32 %296, %298
  %300 = urem i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %301, %302
  br i1 %303, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %304, !dbg !1505

304:                                              ; preds = %originalBBpart248, %283
  %305 = load i32, i32* @x.13
  %306 = load i32, i32* @y.14
  %307 = sub i32 %305, 1
  %308 = mul i32 %305, %307
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %310, %311
  br i1 %312, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %304, %originalBB50alteredBB
  %313 = load i8*, i8** %22, align 8, !dbg !1506
  %314 = icmp ne i8* %313, null, !dbg !1506
  %315 = load i32, i32* @x.13
  %316 = load i32, i32* @y.14
  %317 = sub i32 %315, 1
  %318 = mul i32 %315, %317
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %320, %321
  br i1 %322, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br i1 %314, label %323, label %395, !dbg !1508

323:                                              ; preds = %originalBBpart252
  %324 = load i32, i32* @x.13
  %325 = load i32, i32* @y.14
  %326 = sub i32 %324, 1
  %327 = mul i32 %324, %326
  %328 = urem i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %329, %330
  br i1 %331, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %323, %originalBB54alteredBB
  %332 = load i64, i64* @print_user.hostlen, align 8, !dbg !1509
  %333 = load i8*, i8** %21, align 8, !dbg !1512
  %334 = call i64 @strlen(i8* %333) #13, !dbg !1513
  %335 = load i8*, i8** %22, align 8, !dbg !1514
  %336 = call i64 @strlen(i8* %335) #13, !dbg !1515
  %337 = add i64 %334, %336, !dbg !1516
  %338 = add i64 %337, 4, !dbg !1517
  %339 = icmp ult i64 %332, %338, !dbg !1518
  %340 = load i32, i32* @x.13
  %341 = load i32, i32* @y.14
  %342 = sub i32 %340, 1
  %343 = mul i32 %340, %342
  %344 = urem i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %345, %346
  br i1 %347, label %originalBBpart267, label %originalBB54alteredBB

originalBBpart267:                                ; preds = %originalBB54
  br i1 %339, label %348, label %374, !dbg !1519

348:                                              ; preds = %originalBBpart267
  %349 = load i32, i32* @x.13
  %350 = load i32, i32* @y.14
  %351 = sub i32 %349, 1
  %352 = mul i32 %349, %351
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %350, 10
  %356 = or i1 %354, %355
  br i1 %356, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %348, %originalBB69alteredBB
  %357 = load i8*, i8** %21, align 8, !dbg !1520
  %358 = call i64 @strlen(i8* %357) #13, !dbg !1522
  %359 = load i8*, i8** %22, align 8, !dbg !1523
  %360 = call i64 @strlen(i8* %359) #13, !dbg !1524
  %361 = add i64 %358, %360, !dbg !1525
  %362 = add i64 %361, 4, !dbg !1526
  store i64 %362, i64* @print_user.hostlen, align 8, !dbg !1527
  %363 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1528
  call void @free(i8* %363) #10, !dbg !1529
  %364 = load i64, i64* @print_user.hostlen, align 8, !dbg !1530
  %365 = call noalias i8* @xmalloc(i64 %364), !dbg !1531
  store i8* %365, i8** @print_user.hoststr, align 8, !dbg !1532
  %366 = load i32, i32* @x.13
  %367 = load i32, i32* @y.14
  %368 = sub i32 %366, 1
  %369 = mul i32 %366, %368
  %370 = urem i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %371, %372
  br i1 %373, label %originalBBpart285, label %originalBB69alteredBB

originalBBpart285:                                ; preds = %originalBB69
  br label %374, !dbg !1533

374:                                              ; preds = %originalBBpart285, %originalBBpart267
  %375 = load i32, i32* @x.13
  %376 = load i32, i32* @y.14
  %377 = sub i32 %375, 1
  %378 = mul i32 %375, %377
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %380, %381
  br i1 %382, label %originalBB87, label %originalBB87alteredBB

originalBB87:                                     ; preds = %374, %originalBB87alteredBB
  %383 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1534
  %384 = load i8*, i8** %21, align 8, !dbg !1535
  %385 = load i8*, i8** %22, align 8, !dbg !1536
  %386 = call i32 (i8*, i8*, ...) @sprintf(i8* %383, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i64 0, i64 0), i8* %384, i8* %385) #10, !dbg !1537
  %387 = load i32, i32* @x.13
  %388 = load i32, i32* @y.14
  %389 = sub i32 %387, 1
  %390 = mul i32 %387, %389
  %391 = urem i32 %390, 2
  %392 = icmp eq i32 %391, 0
  %393 = icmp slt i32 %388, 10
  %394 = or i1 %392, %393
  br i1 %394, label %originalBBpart289, label %originalBB87alteredBB

originalBBpart289:                                ; preds = %originalBB87
  br label %460, !dbg !1538

395:                                              ; preds = %originalBBpart252
  %396 = load i32, i32* @x.13
  %397 = load i32, i32* @y.14
  %398 = sub i32 %396, 1
  %399 = mul i32 %396, %398
  %400 = urem i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = icmp slt i32 %397, 10
  %403 = or i1 %401, %402
  br i1 %403, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %395, %originalBB91alteredBB
  %404 = load i64, i64* @print_user.hostlen, align 8, !dbg !1539
  %405 = load i8*, i8** %21, align 8, !dbg !1542
  %406 = call i64 @strlen(i8* %405) #13, !dbg !1543
  %407 = add i64 %406, 3, !dbg !1544
  %408 = icmp ult i64 %404, %407, !dbg !1545
  %409 = load i32, i32* @x.13
  %410 = load i32, i32* @y.14
  %411 = sub i32 %409, 1
  %412 = mul i32 %409, %411
  %413 = urem i32 %412, 2
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %410, 10
  %416 = or i1 %414, %415
  br i1 %416, label %originalBBpart2105, label %originalBB91alteredBB

originalBBpart2105:                               ; preds = %originalBB91
  br i1 %408, label %417, label %440, !dbg !1546

417:                                              ; preds = %originalBBpart2105
  %418 = load i32, i32* @x.13
  %419 = load i32, i32* @y.14
  %420 = sub i32 %418, 1
  %421 = mul i32 %418, %420
  %422 = urem i32 %421, 2
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %419, 10
  %425 = or i1 %423, %424
  br i1 %425, label %originalBB107, label %originalBB107alteredBB

originalBB107:                                    ; preds = %417, %originalBB107alteredBB
  %426 = load i8*, i8** %21, align 8, !dbg !1547
  %427 = call i64 @strlen(i8* %426) #13, !dbg !1549
  %428 = add i64 %427, 3, !dbg !1550
  store i64 %428, i64* @print_user.hostlen, align 8, !dbg !1551
  %429 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1552
  call void @free(i8* %429) #10, !dbg !1553
  %430 = load i64, i64* @print_user.hostlen, align 8, !dbg !1554
  %431 = call noalias i8* @xmalloc(i64 %430), !dbg !1555
  store i8* %431, i8** @print_user.hoststr, align 8, !dbg !1556
  %432 = load i32, i32* @x.13
  %433 = load i32, i32* @y.14
  %434 = sub i32 %432, 1
  %435 = mul i32 %432, %434
  %436 = urem i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = icmp slt i32 %433, 10
  %439 = or i1 %437, %438
  br i1 %439, label %originalBBpart2120, label %originalBB107alteredBB

originalBBpart2120:                               ; preds = %originalBB107
  br label %440, !dbg !1557

440:                                              ; preds = %originalBBpart2120, %originalBBpart2105
  %441 = load i32, i32* @x.13
  %442 = load i32, i32* @y.14
  %443 = sub i32 %441, 1
  %444 = mul i32 %441, %443
  %445 = urem i32 %444, 2
  %446 = icmp eq i32 %445, 0
  %447 = icmp slt i32 %442, 10
  %448 = or i1 %446, %447
  br i1 %448, label %originalBB122, label %originalBB122alteredBB

originalBB122:                                    ; preds = %440, %originalBB122alteredBB
  %449 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1558
  %450 = load i8*, i8** %21, align 8, !dbg !1559
  %451 = call i32 (i8*, i8*, ...) @sprintf(i8* %449, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i64 0, i64 0), i8* %450) #10, !dbg !1560
  %452 = load i32, i32* @x.13
  %453 = load i32, i32* @y.14
  %454 = sub i32 %452, 1
  %455 = mul i32 %452, %454
  %456 = urem i32 %455, 2
  %457 = icmp eq i32 %456, 0
  %458 = icmp slt i32 %453, 10
  %459 = or i1 %457, %458
  br i1 %459, label %originalBBpart2124, label %originalBB122alteredBB

originalBBpart2124:                               ; preds = %originalBB122
  br label %460

460:                                              ; preds = %originalBBpart2124, %originalBBpart289
  %461 = load i32, i32* @x.13
  %462 = load i32, i32* @y.14
  %463 = sub i32 %461, 1
  %464 = mul i32 %461, %463
  %465 = urem i32 %464, 2
  %466 = icmp eq i32 %465, 0
  %467 = icmp slt i32 %462, 10
  %468 = or i1 %466, %467
  br i1 %468, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %460, %originalBB126alteredBB
  %469 = load i8*, i8** %21, align 8, !dbg !1561
  %470 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1563
  %471 = icmp ne i8* %469, %470, !dbg !1564
  %472 = load i32, i32* @x.13
  %473 = load i32, i32* @y.14
  %474 = sub i32 %472, 1
  %475 = mul i32 %472, %474
  %476 = urem i32 %475, 2
  %477 = icmp eq i32 %476, 0
  %478 = icmp slt i32 %473, 10
  %479 = or i1 %477, %478
  br i1 %479, label %originalBBpart2128, label %originalBB126alteredBB

originalBBpart2128:                               ; preds = %originalBB126
  br i1 %471, label %480, label %498, !dbg !1565

480:                                              ; preds = %originalBBpart2128
  %481 = load i32, i32* @x.13
  %482 = load i32, i32* @y.14
  %483 = sub i32 %481, 1
  %484 = mul i32 %481, %483
  %485 = urem i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = icmp slt i32 %482, 10
  %488 = or i1 %486, %487
  br i1 %488, label %originalBB130, label %originalBB130alteredBB

originalBB130:                                    ; preds = %480, %originalBB130alteredBB
  %489 = load i8*, i8** %21, align 8, !dbg !1566
  call void @free(i8* %489) #10, !dbg !1567
  %490 = load i32, i32* @x.13
  %491 = load i32, i32* @y.14
  %492 = sub i32 %490, 1
  %493 = mul i32 %490, %492
  %494 = urem i32 %493, 2
  %495 = icmp eq i32 %494, 0
  %496 = icmp slt i32 %491, 10
  %497 = or i1 %495, %496
  br i1 %497, label %originalBBpart2132, label %originalBB130alteredBB

originalBBpart2132:                               ; preds = %originalBB130
  br label %498, !dbg !1567

498:                                              ; preds = %originalBBpart2132, %originalBBpart2128
  br label %556, !dbg !1568

499:                                              ; preds = %originalBBpart228
  %500 = load i32, i32* @x.13
  %501 = load i32, i32* @y.14
  %502 = sub i32 %500, 1
  %503 = mul i32 %500, %502
  %504 = urem i32 %503, 2
  %505 = icmp eq i32 %504, 0
  %506 = icmp slt i32 %501, 10
  %507 = or i1 %505, %506
  br i1 %507, label %originalBB134, label %originalBB134alteredBB

originalBB134:                                    ; preds = %499, %originalBB134alteredBB
  %508 = load i64, i64* @print_user.hostlen, align 8, !dbg !1569
  %509 = icmp ult i64 %508, 1, !dbg !1572
  %510 = load i32, i32* @x.13
  %511 = load i32, i32* @y.14
  %512 = sub i32 %510, 1
  %513 = mul i32 %510, %512
  %514 = urem i32 %513, 2
  %515 = icmp eq i32 %514, 0
  %516 = icmp slt i32 %511, 10
  %517 = or i1 %515, %516
  br i1 %517, label %originalBBpart2136, label %originalBB134alteredBB

originalBBpart2136:                               ; preds = %originalBB134
  br i1 %509, label %518, label %538, !dbg !1573

518:                                              ; preds = %originalBBpart2136
  %519 = load i32, i32* @x.13
  %520 = load i32, i32* @y.14
  %521 = sub i32 %519, 1
  %522 = mul i32 %519, %521
  %523 = urem i32 %522, 2
  %524 = icmp eq i32 %523, 0
  %525 = icmp slt i32 %520, 10
  %526 = or i1 %524, %525
  br i1 %526, label %originalBB138, label %originalBB138alteredBB

originalBB138:                                    ; preds = %518, %originalBB138alteredBB
  store i64 1, i64* @print_user.hostlen, align 8, !dbg !1574
  %527 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1576
  call void @free(i8* %527) #10, !dbg !1577
  %528 = load i64, i64* @print_user.hostlen, align 8, !dbg !1578
  %529 = call noalias i8* @xmalloc(i64 %528), !dbg !1579
  store i8* %529, i8** @print_user.hoststr, align 8, !dbg !1580
  %530 = load i32, i32* @x.13
  %531 = load i32, i32* @y.14
  %532 = sub i32 %530, 1
  %533 = mul i32 %530, %532
  %534 = urem i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %531, 10
  %537 = or i1 %535, %536
  br i1 %537, label %originalBBpart2140, label %originalBB138alteredBB

originalBBpart2140:                               ; preds = %originalBB138
  br label %538, !dbg !1581

538:                                              ; preds = %originalBBpart2140, %originalBBpart2136
  %539 = load i32, i32* @x.13
  %540 = load i32, i32* @y.14
  %541 = sub i32 %539, 1
  %542 = mul i32 %539, %541
  %543 = urem i32 %542, 2
  %544 = icmp eq i32 %543, 0
  %545 = icmp slt i32 %540, 10
  %546 = or i1 %544, %545
  br i1 %546, label %originalBB142, label %originalBB142alteredBB

originalBB142:                                    ; preds = %538, %originalBB142alteredBB
  %547 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1582
  store i8 0, i8* %547, align 1, !dbg !1583
  %548 = load i32, i32* @x.13
  %549 = load i32, i32* @y.14
  %550 = sub i32 %548, 1
  %551 = mul i32 %548, %550
  %552 = urem i32 %551, 2
  %553 = icmp eq i32 %552, 0
  %554 = icmp slt i32 %549, 10
  %555 = or i1 %553, %554
  br i1 %555, label %originalBBpart2144, label %originalBB142alteredBB

originalBBpart2144:                               ; preds = %originalBB142
  br label %556

556:                                              ; preds = %originalBBpart2144, %498
  %557 = load i32, i32* @x.13
  %558 = load i32, i32* @y.14
  %559 = sub i32 %557, 1
  %560 = mul i32 %557, %559
  %561 = urem i32 %560, 2
  %562 = icmp eq i32 %561, 0
  %563 = icmp slt i32 %558, 10
  %564 = or i1 %562, %563
  br i1 %564, label %originalBB146, label %originalBB146alteredBB

originalBB146:                                    ; preds = %556, %originalBB146alteredBB
  %565 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1584
  %566 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %565, i32 0, i32 4, !dbg !1584
  %567 = getelementptr inbounds [32 x i8], [32 x i8]* %566, i64 0, i64 0, !dbg !1584
  %568 = load i8, i8* %15, align 1, !dbg !1585
  %569 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1586
  %570 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %569, i32 0, i32 2, !dbg !1587
  %571 = getelementptr inbounds [32 x i8], [32 x i8]* %570, i64 0, i64 0, !dbg !1586
  %572 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1588
  %573 = call i8* @time_string(%struct.utmpx* %572), !dbg !1589
  %574 = getelementptr inbounds [7 x i8], [7 x i8]* %16, i64 0, i64 0, !dbg !1590
  %575 = getelementptr inbounds [12 x i8], [12 x i8]* %19, i64 0, i64 0, !dbg !1591
  %576 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1592
  %577 = icmp ne i8* %576, null, !dbg !1592
  %578 = load i32, i32* @x.13
  %579 = load i32, i32* @y.14
  %580 = sub i32 %578, 1
  %581 = mul i32 %578, %580
  %582 = urem i32 %581, 2
  %583 = icmp eq i32 %582, 0
  %584 = icmp slt i32 %579, 10
  %585 = or i1 %583, %584
  br i1 %585, label %originalBBpart2148, label %originalBB146alteredBB

originalBBpart2148:                               ; preds = %originalBB146
  br i1 %577, label %586, label %604, !dbg !1592

586:                                              ; preds = %originalBBpart2148
  %587 = load i32, i32* @x.13
  %588 = load i32, i32* @y.14
  %589 = sub i32 %587, 1
  %590 = mul i32 %587, %589
  %591 = urem i32 %590, 2
  %592 = icmp eq i32 %591, 0
  %593 = icmp slt i32 %588, 10
  %594 = or i1 %592, %593
  br i1 %594, label %originalBB150, label %originalBB150alteredBB

originalBB150:                                    ; preds = %586, %originalBB150alteredBB
  %595 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1593
  %596 = load i32, i32* @x.13
  %597 = load i32, i32* @y.14
  %598 = sub i32 %596, 1
  %599 = mul i32 %596, %598
  %600 = urem i32 %599, 2
  %601 = icmp eq i32 %600, 0
  %602 = icmp slt i32 %597, 10
  %603 = or i1 %601, %602
  br i1 %603, label %originalBBpart2152, label %originalBB150alteredBB

originalBBpart2152:                               ; preds = %originalBB150
  br label %621, !dbg !1592

604:                                              ; preds = %originalBBpart2148
  %605 = load i32, i32* @x.13
  %606 = load i32, i32* @y.14
  %607 = sub i32 %605, 1
  %608 = mul i32 %605, %607
  %609 = urem i32 %608, 2
  %610 = icmp eq i32 %609, 0
  %611 = icmp slt i32 %606, 10
  %612 = or i1 %610, %611
  br i1 %612, label %originalBB154, label %originalBB154alteredBB

originalBB154:                                    ; preds = %604, %originalBB154alteredBB
  %613 = load i32, i32* @x.13
  %614 = load i32, i32* @y.14
  %615 = sub i32 %613, 1
  %616 = mul i32 %613, %615
  %617 = urem i32 %616, 2
  %618 = icmp eq i32 %617, 0
  %619 = icmp slt i32 %614, 10
  %620 = or i1 %618, %619
  br i1 %620, label %originalBBpart2156, label %originalBB154alteredBB

originalBBpart2156:                               ; preds = %originalBB154
  br label %621, !dbg !1592

621:                                              ; preds = %originalBBpart2156, %originalBBpart2152
  %622 = phi i8* [ %595, %originalBBpart2152 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), %originalBBpart2156 ], !dbg !1592
  %623 = load i32, i32* @x.13
  %624 = load i32, i32* @y.14
  %625 = sub i32 %623, 1
  %626 = mul i32 %623, %625
  %627 = urem i32 %626, 2
  %628 = icmp eq i32 %627, 0
  %629 = icmp slt i32 %624, 10
  %630 = or i1 %628, %629
  br i1 %630, label %originalBB158, label %originalBB158alteredBB

originalBB158:                                    ; preds = %621, %originalBB158alteredBB
  call void @print_line(i32 32, i8* %567, i8 signext %568, i32 32, i8* %571, i8* %573, i8* %574, i8* %575, i8* %622, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1594
  %631 = load i32, i32* @x.13
  %632 = load i32, i32* @y.14
  %633 = sub i32 %631, 1
  %634 = mul i32 %631, %633
  %635 = urem i32 %634, 2
  %636 = icmp eq i32 %635, 0
  %637 = icmp slt i32 %632, 10
  %638 = or i1 %636, %637
  br i1 %638, label %originalBBpart2160, label %originalBB158alteredBB

originalBBpart2160:                               ; preds = %originalBB158
  ret void, !dbg !1595

originalBBalteredBB:                              ; preds = %originalBB, %2
  %639 = alloca %struct.utmpx*, align 8
  %640 = alloca i64, align 8
  %641 = alloca %struct.stat, align 8
  %642 = alloca i64, align 8
  %643 = alloca i8, align 1
  %644 = alloca [7 x i8], align 1
  %645 = alloca [38 x i8], align 16
  %646 = alloca i8*, align 8
  %647 = alloca [12 x i8], align 1
  %648 = alloca [257 x i8], align 16
  %649 = alloca i8*, align 8
  %650 = alloca i8*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %639, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %639, metadata !1596, metadata !DIExpression()), !dbg !1369
  store i64 %1, i64* %640, align 8
  call void @llvm.dbg.declare(metadata i64* %640, metadata !1697, metadata !DIExpression()), !dbg !1371
  call void @llvm.dbg.declare(metadata %struct.stat* %641, metadata !1698, metadata !DIExpression()), !dbg !1407
  call void @llvm.dbg.declare(metadata i64* %642, metadata !1720, metadata !DIExpression()), !dbg !1409
  call void @llvm.dbg.declare(metadata i8* %643, metadata !1721, metadata !DIExpression()), !dbg !1411
  call void @llvm.dbg.declare(metadata [7 x i8]* %644, metadata !1722, metadata !DIExpression()), !dbg !1414
  call void @llvm.dbg.declare(metadata [38 x i8]* %645, metadata !1723, metadata !DIExpression()), !dbg !1419
  call void @llvm.dbg.declare(metadata i8** %646, metadata !1724, metadata !DIExpression()), !dbg !1421
  %651 = getelementptr inbounds [38 x i8], [38 x i8]* %645, i64 0, i64 0, !dbg !1422
  store i8* %651, i8** %646, align 8, !dbg !1421
  call void @llvm.dbg.declare(metadata [12 x i8]* %647, metadata !1725, metadata !DIExpression()), !dbg !1427
  %652 = getelementptr inbounds [12 x i8], [12 x i8]* %647, i64 0, i64 0, !dbg !1427
  %653 = load %struct.utmpx*, %struct.utmpx** %639, align 8, !dbg !1427
  %654 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %653, i32 0, i32 1, !dbg !1427
  %655 = load i32, i32* %654, align 4, !dbg !1427
  %656 = sext i32 %655 to i64, !dbg !1427
  %657 = call i32 (i8*, i8*, ...) @sprintf(i8* %652, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %656) #10, !dbg !1427
  %658 = load %struct.utmpx*, %struct.utmpx** %639, align 8, !dbg !1428
  %659 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %658, i32 0, i32 2, !dbg !1428
  %660 = getelementptr inbounds [32 x i8], [32 x i8]* %659, i64 0, i64 0, !dbg !1428
  %661 = load i8, i8* %660, align 4, !dbg !1428
  %662 = sext i8 %661 to i32, !dbg !1428
  %663 = icmp eq i32 %662, 47, !dbg !1428
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %44
  %664 = load i8*, i8** %18, align 8, !dbg !1431
  %665 = call i8* @stpcpy(i8* %664, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0)) #10, !dbg !1432
  store i8* %665, i8** %18, align 8, !dbg !1433
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %63
  %666 = load i8*, i8** %18, align 8, !dbg !1435
  %667 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1436
  %668 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %667, i32 0, i32 2, !dbg !1437
  %669 = getelementptr inbounds [32 x i8], [32 x i8]* %668, i64 0, i64 0, !dbg !1436
  %670 = call i8* @stzncpy(i8* %666, i8* %669, i64 32), !dbg !1438
  %671 = getelementptr inbounds [38 x i8], [38 x i8]* %17, i64 0, i64 0, !dbg !1439
  %672 = call i32 @stat(i8* %671, %struct.stat* %13) #10, !dbg !1441
  %673 = icmp eq i32 %672, 0, !dbg !1442
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %96
  store i8 63, i8* %15, align 1, !dbg !1450
  store i64 0, i64* %14, align 8, !dbg !1452
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %113
  %674 = load i64, i64* %14, align 8, !dbg !1453
  %675 = icmp ne i64 %674, 0, !dbg !1453
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %132
  %676 = getelementptr inbounds [7 x i8], [7 x i8]* %16, i64 0, i64 0, !dbg !1456
  %677 = load i64, i64* %14, align 8, !dbg !1457
  %678 = load i64, i64* %12, align 8, !dbg !1458
  %679 = call i8* @idle_string(i64 %677, i64 %678), !dbg !1459
  %680 = call i32 (i8*, i8*, ...) @sprintf(i8* %676, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i64 0, i64 0), i32 6, i8* %679) #10, !dbg !1460
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %154
  %681 = getelementptr inbounds [7 x i8], [7 x i8]* %16, i64 0, i64 0, !dbg !1461
  %682 = call i32 (i8*, i8*, ...) @sprintf(i8* %681, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i64 0, i64 0)) #10, !dbg !1462
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %173
  %683 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1463
  %684 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %683, i32 0, i32 5, !dbg !1465
  %685 = getelementptr inbounds [256 x i8], [256 x i8]* %684, i64 0, i64 0, !dbg !1463
  %686 = load i8, i8* %685, align 4, !dbg !1463
  %687 = icmp ne i8 %686, 0, !dbg !1463
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %195
  store i8* null, i8** %21, align 8, !dbg !1474
  call void @llvm.dbg.declare(metadata !4, metadata !1726, metadata !DIExpression()), !dbg !1476
  store i8* null, i8** %22, align 8, !dbg !1476
  %688 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1477
  %689 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1478
  %690 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %689, i32 0, i32 5, !dbg !1479
  %691 = getelementptr inbounds [256 x i8], [256 x i8]* %690, i64 0, i64 0, !dbg !1478
  %692 = call i8* @stzncpy(i8* %688, i8* %691, i64 256), !dbg !1480
  %693 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1481
  %694 = call i8* @strchr(i8* %693, i32 58) #13, !dbg !1482
  store i8* %694, i8** %22, align 8, !dbg !1483
  %695 = load i8*, i8** %22, align 8, !dbg !1484
  %696 = icmp ne i8* %695, null, !dbg !1484
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %221
  %697 = load i8*, i8** %22, align 8, !dbg !1487
  %698 = getelementptr inbounds i8, i8* %697, i32 1, !dbg !1487
  store i8* %698, i8** %22, align 8, !dbg !1487
  store i8 0, i8* %697, align 1, !dbg !1488
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %245
  %699 = load i8, i8* @do_lookup, align 1, !dbg !1493
  %700 = trunc i8 %699 to i1, !dbg !1493
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %264
  %701 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1495
  %702 = call noalias i8* @canon_host(i8* %701), !dbg !1497
  store i8* %702, i8** %21, align 8, !dbg !1498
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %286
  %703 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1503
  store i8* %703, i8** %21, align 8, !dbg !1504
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %304
  %704 = load i8*, i8** %22, align 8, !dbg !1506
  %705 = icmp ne i8* %704, null, !dbg !1506
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %323
  %706 = load i64, i64* @print_user.hostlen, align 8, !dbg !1509
  %707 = load i8*, i8** %21, align 8, !dbg !1512
  %708 = call i64 @strlen(i8* %707) #13, !dbg !1513
  %709 = load i8*, i8** %22, align 8, !dbg !1514
  %710 = call i64 @strlen(i8* %709) #13, !dbg !1515
  %_ = shl i64 %708, %710
  %_55 = sub i64 %708, %710
  %gen = mul i64 %_55, %710
  %_56 = sub i64 0, %708
  %gen57 = add i64 %_56, %710
  %_58 = sub i64 %708, %710
  %gen59 = mul i64 %_58, %710
  %_60 = sub i64 %708, %710
  %gen61 = mul i64 %_60, %710
  %711 = add i64 %708, %710, !dbg !1516
  %_62 = sub i64 0, %711
  %gen63 = add i64 %_62, 4
  %_64 = sub i64 %711, 4
  %gen65 = mul i64 %_64, 4
  %712 = add i64 %711, 4, !dbg !1517
  %713 = icmp ult i64 %706, %712, !dbg !1518
  br label %originalBB54

originalBB69alteredBB:                            ; preds = %originalBB69, %348
  %714 = load i8*, i8** %21, align 8, !dbg !1520
  %715 = call i64 @strlen(i8* %714) #13, !dbg !1522
  %716 = load i8*, i8** %22, align 8, !dbg !1523
  %717 = call i64 @strlen(i8* %716) #13, !dbg !1524
  %_70 = sub i64 %715, %717
  %gen71 = mul i64 %_70, %717
  %_72 = sub i64 0, %715
  %gen73 = add i64 %_72, %717
  %_74 = sub i64 0, %715
  %gen75 = add i64 %_74, %717
  %718 = add i64 %715, %717, !dbg !1525
  %_76 = sub i64 0, %718
  %gen77 = add i64 %_76, 4
  %_78 = shl i64 %718, 4
  %_79 = shl i64 %718, 4
  %_80 = sub i64 0, %718
  %gen81 = add i64 %_80, 4
  %_82 = sub i64 %718, 4
  %gen83 = mul i64 %_82, 4
  %719 = add i64 %718, 4, !dbg !1526
  store i64 %719, i64* @print_user.hostlen, align 8, !dbg !1527
  %720 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1528
  call void @free(i8* %720) #10, !dbg !1529
  %721 = load i64, i64* @print_user.hostlen, align 8, !dbg !1530
  %722 = call noalias i8* @xmalloc(i64 %721), !dbg !1531
  store i8* %722, i8** @print_user.hoststr, align 8, !dbg !1532
  br label %originalBB69

originalBB87alteredBB:                            ; preds = %originalBB87, %374
  %723 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1534
  %724 = load i8*, i8** %21, align 8, !dbg !1535
  %725 = load i8*, i8** %22, align 8, !dbg !1536
  %726 = call i32 (i8*, i8*, ...) @sprintf(i8* %723, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i64 0, i64 0), i8* %724, i8* %725) #10, !dbg !1537
  br label %originalBB87

originalBB91alteredBB:                            ; preds = %originalBB91, %395
  %727 = load i64, i64* @print_user.hostlen, align 8, !dbg !1539
  %728 = load i8*, i8** %21, align 8, !dbg !1542
  %729 = call i64 @strlen(i8* %728) #13, !dbg !1543
  %_92 = sub i64 0, %729
  %gen93 = add i64 %_92, 3
  %_94 = sub i64 0, %729
  %gen95 = add i64 %_94, 3
  %_96 = sub i64 0, %729
  %gen97 = add i64 %_96, 3
  %_98 = sub i64 %729, 3
  %gen99 = mul i64 %_98, 3
  %_100 = sub i64 %729, 3
  %gen101 = mul i64 %_100, 3
  %_102 = sub i64 %729, 3
  %gen103 = mul i64 %_102, 3
  %730 = add i64 %729, 3, !dbg !1544
  %731 = icmp ult i64 %727, %730, !dbg !1545
  br label %originalBB91

originalBB107alteredBB:                           ; preds = %originalBB107, %417
  %732 = load i8*, i8** %21, align 8, !dbg !1547
  %733 = call i64 @strlen(i8* %732) #13, !dbg !1549
  %_108 = sub i64 0, %733
  %gen109 = add i64 %_108, 3
  %_110 = sub i64 %733, 3
  %gen111 = mul i64 %_110, 3
  %_112 = sub i64 0, %733
  %gen113 = add i64 %_112, 3
  %_114 = shl i64 %733, 3
  %_115 = sub i64 %733, 3
  %gen116 = mul i64 %_115, 3
  %_117 = sub i64 %733, 3
  %gen118 = mul i64 %_117, 3
  %734 = add i64 %733, 3, !dbg !1550
  store i64 %734, i64* @print_user.hostlen, align 8, !dbg !1551
  %735 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1552
  call void @free(i8* %735) #10, !dbg !1553
  %736 = load i64, i64* @print_user.hostlen, align 8, !dbg !1554
  %737 = call noalias i8* @xmalloc(i64 %736), !dbg !1555
  store i8* %737, i8** @print_user.hoststr, align 8, !dbg !1556
  br label %originalBB107

originalBB122alteredBB:                           ; preds = %originalBB122, %440
  %738 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1558
  %739 = load i8*, i8** %21, align 8, !dbg !1559
  %740 = call i32 (i8*, i8*, ...) @sprintf(i8* %738, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i64 0, i64 0), i8* %739) #10, !dbg !1560
  br label %originalBB122

originalBB126alteredBB:                           ; preds = %originalBB126, %460
  %741 = load i8*, i8** %21, align 8, !dbg !1561
  %742 = getelementptr inbounds [257 x i8], [257 x i8]* %20, i64 0, i64 0, !dbg !1563
  %743 = icmp ne i8* %741, %742, !dbg !1564
  br label %originalBB126

originalBB130alteredBB:                           ; preds = %originalBB130, %480
  %744 = load i8*, i8** %21, align 8, !dbg !1566
  call void @free(i8* %744) #10, !dbg !1567
  br label %originalBB130

originalBB134alteredBB:                           ; preds = %originalBB134, %499
  %745 = load i64, i64* @print_user.hostlen, align 8, !dbg !1569
  %746 = icmp ult i64 %745, 1, !dbg !1572
  br label %originalBB134

originalBB138alteredBB:                           ; preds = %originalBB138, %518
  store i64 1, i64* @print_user.hostlen, align 8, !dbg !1574
  %747 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1576
  call void @free(i8* %747) #10, !dbg !1577
  %748 = load i64, i64* @print_user.hostlen, align 8, !dbg !1578
  %749 = call noalias i8* @xmalloc(i64 %748), !dbg !1579
  store i8* %749, i8** @print_user.hoststr, align 8, !dbg !1580
  br label %originalBB138

originalBB142alteredBB:                           ; preds = %originalBB142, %538
  %750 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1582
  store i8 0, i8* %750, align 1, !dbg !1583
  br label %originalBB142

originalBB146alteredBB:                           ; preds = %originalBB146, %556
  %751 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1584
  %752 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %751, i32 0, i32 4, !dbg !1584
  %753 = getelementptr inbounds [32 x i8], [32 x i8]* %752, i64 0, i64 0, !dbg !1584
  %754 = load i8, i8* %15, align 1, !dbg !1585
  %755 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1586
  %756 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %755, i32 0, i32 2, !dbg !1587
  %757 = getelementptr inbounds [32 x i8], [32 x i8]* %756, i64 0, i64 0, !dbg !1586
  %758 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1588
  %759 = call i8* @time_string(%struct.utmpx* %758), !dbg !1589
  %760 = getelementptr inbounds [7 x i8], [7 x i8]* %16, i64 0, i64 0, !dbg !1590
  %761 = getelementptr inbounds [12 x i8], [12 x i8]* %19, i64 0, i64 0, !dbg !1591
  %762 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1592
  %763 = icmp ne i8* %762, null, !dbg !1592
  br label %originalBB146

originalBB150alteredBB:                           ; preds = %originalBB150, %586
  %764 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1593
  br label %originalBB150

originalBB154alteredBB:                           ; preds = %originalBB154, %604
  br label %originalBB154

originalBB158alteredBB:                           ; preds = %originalBB158, %621
  call void @print_line(i32 32, i8* %567, i8 signext %568, i32 32, i8* %571, i8* %573, i8* %574, i8* %575, i8* %622, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1594
  br label %originalBB158
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_runlevel(%struct.utmpx*) #4 !dbg !133 {
  %2 = load i32, i32* @x.15
  %3 = load i32, i32* @y.16
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !1829, metadata !DIExpression()), !dbg !1830
  call void @llvm.dbg.declare(metadata i8* %11, metadata !1831, metadata !DIExpression()), !dbg !1832
  %13 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1833
  %14 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %13, i32 0, i32 1, !dbg !1833
  %15 = load i32, i32* %14, align 4, !dbg !1833
  %16 = sdiv i32 %15, 256, !dbg !1834
  %17 = trunc i32 %16 to i8, !dbg !1833
  store i8 %17, i8* %11, align 1, !dbg !1832
  call void @llvm.dbg.declare(metadata i8* %12, metadata !1835, metadata !DIExpression()), !dbg !1836
  %18 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1837
  %19 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %18, i32 0, i32 1, !dbg !1837
  %20 = load i32, i32* %19, align 4, !dbg !1837
  %21 = srem i32 %20, 256, !dbg !1838
  %22 = trunc i32 %21 to i8, !dbg !1837
  store i8 %22, i8* %12, align 1, !dbg !1836
  %23 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1839
  %24 = icmp ne i8* %23, null, !dbg !1839
  %25 = load i32, i32* @x.15
  %26 = load i32, i32* @y.16
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %24, label %54, label %33, !dbg !1841

33:                                               ; preds = %originalBBpart2
  %34 = load i32, i32* @x.15
  %35 = load i32, i32* @y.16
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %33, %originalBB21alteredBB
  %42 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i64 0, i64 0)) #10, !dbg !1842
  %43 = call i64 @strlen(i8* %42) #13, !dbg !1843
  %44 = add i64 %43, 3, !dbg !1844
  %45 = call noalias i8* @xmalloc(i64 %44), !dbg !1845
  store i8* %45, i8** @print_runlevel.runlevline, align 8, !dbg !1846
  %46 = load i32, i32* @x.15
  %47 = load i32, i32* @y.16
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart233, label %originalBB21alteredBB

originalBBpart233:                                ; preds = %originalBB21
  br label %54, !dbg !1847

54:                                               ; preds = %originalBBpart233, %originalBBpart2
  %55 = load i32, i32* @x.15
  %56 = load i32, i32* @y.16
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %54, %originalBB35alteredBB
  %63 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1848
  %64 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i64 0, i64 0)) #10, !dbg !1849
  %65 = load i8, i8* %12, align 1, !dbg !1850
  %66 = zext i8 %65 to i32, !dbg !1850
  %67 = call i32 (i8*, i8*, ...) @sprintf(i8* %63, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i64 0, i64 0), i8* %64, i32 %66) #10, !dbg !1851
  %68 = load i8*, i8** @print_runlevel.comment, align 8, !dbg !1852
  %69 = icmp ne i8* %68, null, !dbg !1852
  %70 = load i32, i32* @x.15
  %71 = load i32, i32* @y.16
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  br i1 %69, label %99, label %78, !dbg !1854

78:                                               ; preds = %originalBBpart237
  %79 = load i32, i32* @x.15
  %80 = load i32, i32* @y.16
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %78, %originalBB39alteredBB
  %87 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i64 0, i64 0)) #10, !dbg !1855
  %88 = call i64 @strlen(i8* %87) #13, !dbg !1856
  %89 = add i64 %88, 2, !dbg !1857
  %90 = call noalias i8* @xmalloc(i64 %89), !dbg !1858
  store i8* %90, i8** @print_runlevel.comment, align 8, !dbg !1859
  %91 = load i32, i32* @x.15
  %92 = load i32, i32* @y.16
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart248, label %originalBB39alteredBB

originalBBpart248:                                ; preds = %originalBB39
  br label %99, !dbg !1860

99:                                               ; preds = %originalBBpart248, %originalBBpart237
  %100 = load i8*, i8** @print_runlevel.comment, align 8, !dbg !1861
  %101 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i64 0, i64 0)) #10, !dbg !1862
  %102 = load i8, i8* %11, align 1, !dbg !1863
  %103 = zext i8 %102 to i32, !dbg !1863
  %104 = icmp eq i32 %103, 78, !dbg !1864
  br i1 %104, label %105, label %122, !dbg !1865

105:                                              ; preds = %99
  %106 = load i32, i32* @x.15
  %107 = load i32, i32* @y.16
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %105, %originalBB50alteredBB
  %114 = load i32, i32* @x.15
  %115 = load i32, i32* @y.16
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %141, !dbg !1865

122:                                              ; preds = %99
  %123 = load i32, i32* @x.15
  %124 = load i32, i32* @y.16
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %122, %originalBB54alteredBB
  %131 = load i8, i8* %11, align 1, !dbg !1866
  %132 = zext i8 %131 to i32, !dbg !1866
  %133 = load i32, i32* @x.15
  %134 = load i32, i32* @y.16
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %141, !dbg !1865

141:                                              ; preds = %originalBBpart256, %originalBBpart252
  %142 = phi i32 [ 83, %originalBBpart252 ], [ %132, %originalBBpart256 ], !dbg !1865
  %143 = load i32, i32* @x.15
  %144 = load i32, i32* @y.16
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %141, %originalBB58alteredBB
  %151 = call i32 (i8*, i8*, ...) @sprintf(i8* %100, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i64 0, i64 0), i8* %101, i32 %142) #10, !dbg !1867
  %152 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1868
  %153 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1869
  %154 = call i8* @time_string(%struct.utmpx* %153), !dbg !1870
  %155 = load i8, i8* %11, align 1, !dbg !1871
  %156 = zext i8 %155 to i32, !dbg !1871
  %157 = call zeroext i1 @c_isprint(i32 %156), !dbg !1872
  %158 = load i32, i32* @x.15
  %159 = load i32, i32* @y.16
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br i1 %157, label %166, label %184, !dbg !1872

166:                                              ; preds = %originalBBpart260
  %167 = load i32, i32* @x.15
  %168 = load i32, i32* @y.16
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %166, %originalBB62alteredBB
  %175 = load i8*, i8** @print_runlevel.comment, align 8, !dbg !1873
  %176 = load i32, i32* @x.15
  %177 = load i32, i32* @y.16
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %201, !dbg !1872

184:                                              ; preds = %originalBBpart260
  %185 = load i32, i32* @x.15
  %186 = load i32, i32* @y.16
  %187 = sub i32 %185, 1
  %188 = mul i32 %185, %187
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %190, %191
  br i1 %192, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %184, %originalBB66alteredBB
  %193 = load i32, i32* @x.15
  %194 = load i32, i32* @y.16
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %201, !dbg !1872

201:                                              ; preds = %originalBBpart268, %originalBBpart264
  %202 = phi i8* [ %175, %originalBBpart264 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), %originalBBpart268 ], !dbg !1872
  %203 = load i32, i32* @x.15
  %204 = load i32, i32* @y.16
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %201, %originalBB70alteredBB
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %152, i8* %154, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %202, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1874
  %211 = load i32, i32* @x.15
  %212 = load i32, i32* @y.16
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  ret void, !dbg !1875

originalBBalteredBB:                              ; preds = %originalBB, %1
  %219 = alloca %struct.utmpx*, align 8
  %220 = alloca i8, align 1
  %221 = alloca i8, align 1
  store %struct.utmpx* %0, %struct.utmpx** %219, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %219, metadata !1876, metadata !DIExpression()), !dbg !1830
  call void @llvm.dbg.declare(metadata i8* %220, metadata !1977, metadata !DIExpression()), !dbg !1832
  %222 = load %struct.utmpx*, %struct.utmpx** %219, align 8, !dbg !1833
  %223 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %222, i32 0, i32 1, !dbg !1833
  %224 = load i32, i32* %223, align 4, !dbg !1833
  %_ = sub i32 0, %224
  %gen = add i32 %_, 256
  %_1 = shl i32 %224, 256
  %_2 = sub i32 %224, 256
  %gen3 = mul i32 %_2, 256
  %_4 = shl i32 %224, 256
  %_5 = sub i32 0, %224
  %gen6 = add i32 %_5, 256
  %_7 = sub i32 0, %224
  %gen8 = add i32 %_7, 256
  %_9 = shl i32 %224, 256
  %_10 = sub i32 %224, 256
  %gen11 = mul i32 %_10, 256
  %225 = sdiv i32 %224, 256, !dbg !1834
  %226 = trunc i32 %225 to i8, !dbg !1833
  store i8 %226, i8* %220, align 1, !dbg !1832
  call void @llvm.dbg.declare(metadata i8* %221, metadata !1978, metadata !DIExpression()), !dbg !1836
  %227 = load %struct.utmpx*, %struct.utmpx** %219, align 8, !dbg !1837
  %228 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %227, i32 0, i32 1, !dbg !1837
  %229 = load i32, i32* %228, align 4, !dbg !1837
  %_12 = shl i32 %229, 256
  %_13 = shl i32 %229, 256
  %_14 = sub i32 0, %229
  %gen15 = add i32 %_14, 256
  %_16 = sub i32 0, %229
  %gen17 = add i32 %_16, 256
  %_18 = shl i32 %229, 256
  %_19 = sub i32 %229, 256
  %gen20 = mul i32 %_19, 256
  %230 = srem i32 %229, 256, !dbg !1838
  %231 = trunc i32 %230 to i8, !dbg !1837
  store i8 %231, i8* %221, align 1, !dbg !1836
  %232 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1839
  %233 = icmp ne i8* %232, null, !dbg !1839
  br label %originalBB

originalBB21alteredBB:                            ; preds = %originalBB21, %33
  %234 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i64 0, i64 0)) #10, !dbg !1842
  %235 = call i64 @strlen(i8* %234) #13, !dbg !1843
  %_22 = sub i64 %235, 3
  %gen23 = mul i64 %_22, 3
  %_24 = sub i64 0, %235
  %gen25 = add i64 %_24, 3
  %_26 = sub i64 %235, 3
  %gen27 = mul i64 %_26, 3
  %_28 = shl i64 %235, 3
  %_29 = shl i64 %235, 3
  %_30 = shl i64 %235, 3
  %_31 = shl i64 %235, 3
  %236 = add i64 %235, 3, !dbg !1844
  %237 = call noalias i8* @xmalloc(i64 %236), !dbg !1845
  store i8* %237, i8** @print_runlevel.runlevline, align 8, !dbg !1846
  br label %originalBB21

originalBB35alteredBB:                            ; preds = %originalBB35, %54
  %238 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1848
  %239 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i64 0, i64 0)) #10, !dbg !1849
  %240 = load i8, i8* %12, align 1, !dbg !1850
  %241 = zext i8 %240 to i32, !dbg !1850
  %242 = call i32 (i8*, i8*, ...) @sprintf(i8* %238, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i64 0, i64 0), i8* %239, i32 %241) #10, !dbg !1851
  %243 = load i8*, i8** @print_runlevel.comment, align 8, !dbg !1852
  %244 = icmp ne i8* %243, null, !dbg !1852
  br label %originalBB35

originalBB39alteredBB:                            ; preds = %originalBB39, %78
  %245 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i64 0, i64 0)) #10, !dbg !1855
  %246 = call i64 @strlen(i8* %245) #13, !dbg !1856
  %_40 = shl i64 %246, 2
  %_41 = sub i64 0, %246
  %gen42 = add i64 %_41, 2
  %_43 = sub i64 %246, 2
  %gen44 = mul i64 %_43, 2
  %_45 = sub i64 0, %246
  %gen46 = add i64 %_45, 2
  %247 = add i64 %246, 2, !dbg !1857
  %248 = call noalias i8* @xmalloc(i64 %247), !dbg !1858
  store i8* %248, i8** @print_runlevel.comment, align 8, !dbg !1859
  br label %originalBB39

originalBB50alteredBB:                            ; preds = %originalBB50, %105
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %122
  %249 = load i8, i8* %11, align 1, !dbg !1866
  %250 = zext i8 %249 to i32, !dbg !1866
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %141
  %251 = call i32 (i8*, i8*, ...) @sprintf(i8* %100, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i64 0, i64 0), i8* %101, i32 %142) #10, !dbg !1867
  %252 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1868
  %253 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1869
  %254 = call i8* @time_string(%struct.utmpx* %253), !dbg !1870
  %255 = load i8, i8* %11, align 1, !dbg !1871
  %256 = zext i8 %255 to i32, !dbg !1871
  %257 = call zeroext i1 @c_isprint(i32 %256), !dbg !1872
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %166
  %258 = load i8*, i8** @print_runlevel.comment, align 8, !dbg !1873
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %184
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %201
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %152, i8* %154, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %202, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1874
  br label %originalBB70
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_boottime(%struct.utmpx*) #4 !dbg !1979 {
  %2 = load i32, i32* @x.17
  %3 = load i32, i32* @y.18
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !1980, metadata !DIExpression()), !dbg !1981
  %11 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.88, i64 0, i64 0)) #10, !dbg !1982
  %12 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1983
  %13 = call i8* @time_string(%struct.utmpx* %12), !dbg !1984
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %11, i8* %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1985
  %14 = load i32, i32* @x.17
  %15 = load i32, i32* @y.18
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !1986

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %struct.utmpx*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %22, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %22, metadata !1987, metadata !DIExpression()), !dbg !1981
  %23 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.88, i64 0, i64 0)) #10, !dbg !1982
  %24 = load %struct.utmpx*, %struct.utmpx** %22, align 8, !dbg !1983
  %25 = call i8* @time_string(%struct.utmpx* %24), !dbg !1984
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %23, i8* %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1985
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_clockchange(%struct.utmpx*) #4 !dbg !2089 {
  %2 = load i32, i32* @x.19
  %3 = load i32, i32* @y.20
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !2090, metadata !DIExpression()), !dbg !2091
  %11 = call i8* @gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.89, i64 0, i64 0)) #10, !dbg !2092
  %12 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2093
  %13 = call i8* @time_string(%struct.utmpx* %12), !dbg !2094
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %11, i8* %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !2095
  %14 = load i32, i32* @x.19
  %15 = load i32, i32* @y.20
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !2096

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %struct.utmpx*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %22, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %22, metadata !2097, metadata !DIExpression()), !dbg !2091
  %23 = call i8* @gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.89, i64 0, i64 0)) #10, !dbg !2092
  %24 = load %struct.utmpx*, %struct.utmpx** %22, align 8, !dbg !2093
  %25 = call i8* @time_string(%struct.utmpx* %24), !dbg !2094
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %23, i8* %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !2095
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_initspawn(%struct.utmpx*) #4 !dbg !2199 {
  %2 = load i32, i32* @x.21
  %3 = load i32, i32* @y.22
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca [12 x i8], align 1
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !2200, metadata !DIExpression()), !dbg !2201
  call void @llvm.dbg.declare(metadata i8** %11, metadata !2202, metadata !DIExpression()), !dbg !2203
  %13 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2204
  %14 = call i8* @make_id_equals_comment(%struct.utmpx* %13), !dbg !2205
  store i8* %14, i8** %11, align 8, !dbg !2203
  call void @llvm.dbg.declare(metadata [12 x i8]* %12, metadata !2206, metadata !DIExpression()), !dbg !2207
  %15 = getelementptr inbounds [12 x i8], [12 x i8]* %12, i64 0, i64 0, !dbg !2207
  %16 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2207
  %17 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %16, i32 0, i32 1, !dbg !2207
  %18 = load i32, i32* %17, align 4, !dbg !2207
  %19 = sext i32 %18 to i64, !dbg !2207
  %20 = call i32 (i8*, i8*, ...) @sprintf(i8* %15, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %19) #10, !dbg !2207
  %21 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2208
  %22 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %21, i32 0, i32 2, !dbg !2209
  %23 = getelementptr inbounds [32 x i8], [32 x i8]* %22, i64 0, i64 0, !dbg !2208
  %24 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2210
  %25 = call i8* @time_string(%struct.utmpx* %24), !dbg !2211
  %26 = getelementptr inbounds [12 x i8], [12 x i8]* %12, i64 0, i64 0, !dbg !2212
  %27 = load i8*, i8** %11, align 8, !dbg !2213
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 32, i8* %23, i8* %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %26, i8* %27, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !2214
  %28 = load i8*, i8** %11, align 8, !dbg !2215
  call void @free(i8* %28) #10, !dbg !2216
  %29 = load i32, i32* @x.21
  %30 = load i32, i32* @y.22
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !2217

originalBBalteredBB:                              ; preds = %originalBB, %1
  %37 = alloca %struct.utmpx*, align 8
  %38 = alloca i8*, align 8
  %39 = alloca [12 x i8], align 1
  store %struct.utmpx* %0, %struct.utmpx** %37, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %37, metadata !2218, metadata !DIExpression()), !dbg !2201
  call void @llvm.dbg.declare(metadata i8** %38, metadata !2320, metadata !DIExpression()), !dbg !2203
  %40 = load %struct.utmpx*, %struct.utmpx** %37, align 8, !dbg !2204
  %41 = call i8* @make_id_equals_comment(%struct.utmpx* %40), !dbg !2205
  store i8* %41, i8** %38, align 8, !dbg !2203
  call void @llvm.dbg.declare(metadata [12 x i8]* %39, metadata !2321, metadata !DIExpression()), !dbg !2207
  %42 = getelementptr inbounds [12 x i8], [12 x i8]* %39, i64 0, i64 0, !dbg !2207
  %43 = load %struct.utmpx*, %struct.utmpx** %37, align 8, !dbg !2207
  %44 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %43, i32 0, i32 1, !dbg !2207
  %45 = load i32, i32* %44, align 4, !dbg !2207
  %46 = sext i32 %45 to i64, !dbg !2207
  %47 = call i32 (i8*, i8*, ...) @sprintf(i8* %42, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %46) #10, !dbg !2207
  %48 = load %struct.utmpx*, %struct.utmpx** %37, align 8, !dbg !2208
  %49 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %48, i32 0, i32 2, !dbg !2209
  %50 = getelementptr inbounds [32 x i8], [32 x i8]* %49, i64 0, i64 0, !dbg !2208
  %51 = load %struct.utmpx*, %struct.utmpx** %37, align 8, !dbg !2210
  %52 = call i8* @time_string(%struct.utmpx* %51), !dbg !2211
  %53 = getelementptr inbounds [12 x i8], [12 x i8]* %39, i64 0, i64 0, !dbg !2212
  %54 = load i8*, i8** %38, align 8, !dbg !2213
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 32, i8* %50, i8* %52, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %53, i8* %54, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !2214
  %55 = load i8*, i8** %38, align 8, !dbg !2215
  call void @free(i8* %55) #10, !dbg !2216
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_login(%struct.utmpx*) #4 !dbg !2322 {
  %2 = load i32, i32* @x.23
  %3 = load i32, i32* @y.24
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca [12 x i8], align 1
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !2323, metadata !DIExpression()), !dbg !2324
  call void @llvm.dbg.declare(metadata i8** %11, metadata !2325, metadata !DIExpression()), !dbg !2326
  %13 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2327
  %14 = call i8* @make_id_equals_comment(%struct.utmpx* %13), !dbg !2328
  store i8* %14, i8** %11, align 8, !dbg !2326
  call void @llvm.dbg.declare(metadata [12 x i8]* %12, metadata !2329, metadata !DIExpression()), !dbg !2330
  %15 = getelementptr inbounds [12 x i8], [12 x i8]* %12, i64 0, i64 0, !dbg !2330
  %16 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2330
  %17 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %16, i32 0, i32 1, !dbg !2330
  %18 = load i32, i32* %17, align 4, !dbg !2330
  %19 = sext i32 %18 to i64, !dbg !2330
  %20 = call i32 (i8*, i8*, ...) @sprintf(i8* %15, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %19) #10, !dbg !2330
  %21 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i64 0, i64 0)) #10, !dbg !2331
  %22 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2332
  %23 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %22, i32 0, i32 2, !dbg !2333
  %24 = getelementptr inbounds [32 x i8], [32 x i8]* %23, i64 0, i64 0, !dbg !2332
  %25 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2334
  %26 = call i8* @time_string(%struct.utmpx* %25), !dbg !2335
  %27 = getelementptr inbounds [12 x i8], [12 x i8]* %12, i64 0, i64 0, !dbg !2336
  %28 = load i8*, i8** %11, align 8, !dbg !2337
  call void @print_line(i32 -1, i8* %21, i8 signext 32, i32 32, i8* %24, i8* %26, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %27, i8* %28, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !2338
  %29 = load i8*, i8** %11, align 8, !dbg !2339
  call void @free(i8* %29) #10, !dbg !2340
  %30 = load i32, i32* @x.23
  %31 = load i32, i32* @y.24
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !2341

originalBBalteredBB:                              ; preds = %originalBB, %1
  %38 = alloca %struct.utmpx*, align 8
  %39 = alloca i8*, align 8
  %40 = alloca [12 x i8], align 1
  store %struct.utmpx* %0, %struct.utmpx** %38, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %38, metadata !2342, metadata !DIExpression()), !dbg !2324
  call void @llvm.dbg.declare(metadata i8** %39, metadata !2444, metadata !DIExpression()), !dbg !2326
  %41 = load %struct.utmpx*, %struct.utmpx** %38, align 8, !dbg !2327
  %42 = call i8* @make_id_equals_comment(%struct.utmpx* %41), !dbg !2328
  store i8* %42, i8** %39, align 8, !dbg !2326
  call void @llvm.dbg.declare(metadata [12 x i8]* %40, metadata !2445, metadata !DIExpression()), !dbg !2330
  %43 = getelementptr inbounds [12 x i8], [12 x i8]* %40, i64 0, i64 0, !dbg !2330
  %44 = load %struct.utmpx*, %struct.utmpx** %38, align 8, !dbg !2330
  %45 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %44, i32 0, i32 1, !dbg !2330
  %46 = load i32, i32* %45, align 4, !dbg !2330
  %47 = sext i32 %46 to i64, !dbg !2330
  %48 = call i32 (i8*, i8*, ...) @sprintf(i8* %43, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %47) #10, !dbg !2330
  %49 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i64 0, i64 0)) #10, !dbg !2331
  %50 = load %struct.utmpx*, %struct.utmpx** %38, align 8, !dbg !2332
  %51 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %50, i32 0, i32 2, !dbg !2333
  %52 = getelementptr inbounds [32 x i8], [32 x i8]* %51, i64 0, i64 0, !dbg !2332
  %53 = load %struct.utmpx*, %struct.utmpx** %38, align 8, !dbg !2334
  %54 = call i8* @time_string(%struct.utmpx* %53), !dbg !2335
  %55 = getelementptr inbounds [12 x i8], [12 x i8]* %40, i64 0, i64 0, !dbg !2336
  %56 = load i8*, i8** %39, align 8, !dbg !2337
  call void @print_line(i32 -1, i8* %49, i8 signext 32, i32 32, i8* %52, i8* %54, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %55, i8* %56, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !2338
  %57 = load i8*, i8** %39, align 8, !dbg !2339
  call void @free(i8* %57) #10, !dbg !2340
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_deadprocs(%struct.utmpx*) #4 !dbg !140 {
  %2 = load i32, i32* @x.25
  %3 = load i32, i32* @y.26
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca [12 x i8], align 1
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !2446, metadata !DIExpression()), !dbg !2447
  call void @llvm.dbg.declare(metadata i8** %11, metadata !2448, metadata !DIExpression()), !dbg !2449
  %13 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2450
  %14 = call i8* @make_id_equals_comment(%struct.utmpx* %13), !dbg !2451
  store i8* %14, i8** %11, align 8, !dbg !2449
  call void @llvm.dbg.declare(metadata [12 x i8]* %12, metadata !2452, metadata !DIExpression()), !dbg !2453
  %15 = getelementptr inbounds [12 x i8], [12 x i8]* %12, i64 0, i64 0, !dbg !2453
  %16 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2453
  %17 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %16, i32 0, i32 1, !dbg !2453
  %18 = load i32, i32* %17, align 4, !dbg !2453
  %19 = sext i32 %18 to i64, !dbg !2453
  %20 = call i32 (i8*, i8*, ...) @sprintf(i8* %15, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %19) #10, !dbg !2453
  %21 = load i8*, i8** @print_deadprocs.exitstr, align 8, !dbg !2454
  %22 = icmp ne i8* %21, null, !dbg !2454
  %23 = load i32, i32* @x.25
  %24 = load i32, i32* @y.26
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %58, label %31, !dbg !2456

31:                                               ; preds = %originalBBpart2
  %32 = load i32, i32* @x.25
  %33 = load i32, i32* @y.26
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0)) #10, !dbg !2457
  %41 = call i64 @strlen(i8* %40) #13, !dbg !2458
  %42 = add i64 %41, 6, !dbg !2459
  %43 = add i64 %42, 1, !dbg !2460
  %44 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0)) #10, !dbg !2461
  %45 = call i64 @strlen(i8* %44) #13, !dbg !2462
  %46 = add i64 %43, %45, !dbg !2463
  %47 = add i64 %46, 6, !dbg !2464
  %48 = add i64 %47, 1, !dbg !2465
  %49 = call noalias i8* @xmalloc(i64 %48), !dbg !2466
  store i8* %49, i8** @print_deadprocs.exitstr, align 8, !dbg !2467
  %50 = load i32, i32* @x.25
  %51 = load i32, i32* @y.26
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart221, label %originalBB1alteredBB

originalBBpart221:                                ; preds = %originalBB1
  br label %58, !dbg !2468

58:                                               ; preds = %originalBBpart221, %originalBBpart2
  %59 = load i32, i32* @x.25
  %60 = load i32, i32* @y.26
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %58, %originalBB23alteredBB
  %67 = load i8*, i8** @print_deadprocs.exitstr, align 8, !dbg !2469
  %68 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0)) #10, !dbg !2470
  %69 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2471
  %70 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %69, i32 0, i32 6, !dbg !2471
  %71 = getelementptr inbounds %struct.__exit_status, %struct.__exit_status* %70, i32 0, i32 0, !dbg !2471
  %72 = load i16, i16* %71, align 4, !dbg !2471
  %73 = sext i16 %72 to i32, !dbg !2471
  %74 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0)) #10, !dbg !2472
  %75 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2473
  %76 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %75, i32 0, i32 6, !dbg !2473
  %77 = getelementptr inbounds %struct.__exit_status, %struct.__exit_status* %76, i32 0, i32 1, !dbg !2473
  %78 = load i16, i16* %77, align 2, !dbg !2473
  %79 = sext i16 %78 to i32, !dbg !2473
  %80 = call i32 (i8*, i8*, ...) @sprintf(i8* %67, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.94, i64 0, i64 0), i8* %68, i32 %73, i8* %74, i32 %79) #10, !dbg !2474
  %81 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2475
  %82 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %81, i32 0, i32 2, !dbg !2476
  %83 = getelementptr inbounds [32 x i8], [32 x i8]* %82, i64 0, i64 0, !dbg !2475
  %84 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2477
  %85 = call i8* @time_string(%struct.utmpx* %84), !dbg !2478
  %86 = getelementptr inbounds [12 x i8], [12 x i8]* %12, i64 0, i64 0, !dbg !2479
  %87 = load i8*, i8** %11, align 8, !dbg !2480
  %88 = load i8*, i8** @print_deadprocs.exitstr, align 8, !dbg !2481
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 32, i8* %83, i8* %85, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %86, i8* %87, i8* %88), !dbg !2482
  %89 = load i8*, i8** %11, align 8, !dbg !2483
  call void @free(i8* %89) #10, !dbg !2484
  %90 = load i32, i32* @x.25
  %91 = load i32, i32* @y.26
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  ret void, !dbg !2485

originalBBalteredBB:                              ; preds = %originalBB, %1
  %98 = alloca %struct.utmpx*, align 8
  %99 = alloca i8*, align 8
  %100 = alloca [12 x i8], align 1
  store %struct.utmpx* %0, %struct.utmpx** %98, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %98, metadata !2486, metadata !DIExpression()), !dbg !2447
  call void @llvm.dbg.declare(metadata i8** %99, metadata !2587, metadata !DIExpression()), !dbg !2449
  %101 = load %struct.utmpx*, %struct.utmpx** %98, align 8, !dbg !2450
  %102 = call i8* @make_id_equals_comment(%struct.utmpx* %101), !dbg !2451
  store i8* %102, i8** %99, align 8, !dbg !2449
  call void @llvm.dbg.declare(metadata [12 x i8]* %100, metadata !2588, metadata !DIExpression()), !dbg !2453
  %103 = getelementptr inbounds [12 x i8], [12 x i8]* %100, i64 0, i64 0, !dbg !2453
  %104 = load %struct.utmpx*, %struct.utmpx** %98, align 8, !dbg !2453
  %105 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %104, i32 0, i32 1, !dbg !2453
  %106 = load i32, i32* %105, align 4, !dbg !2453
  %107 = sext i32 %106 to i64, !dbg !2453
  %108 = call i32 (i8*, i8*, ...) @sprintf(i8* %103, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %107) #10, !dbg !2453
  %109 = load i8*, i8** @print_deadprocs.exitstr, align 8, !dbg !2454
  %110 = icmp ne i8* %109, null, !dbg !2454
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %111 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0)) #10, !dbg !2457
  %112 = call i64 @strlen(i8* %111) #13, !dbg !2458
  %_ = sub i64 0, %112
  %gen = add i64 %_, 6
  %_2 = sub i64 %112, 6
  %gen3 = mul i64 %_2, 6
  %_4 = sub i64 %112, 6
  %gen5 = mul i64 %_4, 6
  %113 = add i64 %112, 6, !dbg !2459
  %_6 = sub i64 0, %113
  %gen7 = add i64 %_6, 1
  %_8 = shl i64 %113, 1
  %_9 = shl i64 %113, 1
  %_10 = sub i64 0, %113
  %gen11 = add i64 %_10, 1
  %114 = add i64 %113, 1, !dbg !2460
  %115 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0)) #10, !dbg !2461
  %116 = call i64 @strlen(i8* %115) #13, !dbg !2462
  %_12 = sub i64 0, %114
  %gen13 = add i64 %_12, %116
  %117 = add i64 %114, %116, !dbg !2463
  %_14 = sub i64 0, %117
  %gen15 = add i64 %_14, 6
  %_16 = sub i64 0, %117
  %gen17 = add i64 %_16, 6
  %118 = add i64 %117, 6, !dbg !2464
  %_18 = shl i64 %118, 1
  %_19 = shl i64 %118, 1
  %119 = add i64 %118, 1, !dbg !2465
  %120 = call noalias i8* @xmalloc(i64 %119), !dbg !2466
  store i8* %120, i8** @print_deadprocs.exitstr, align 8, !dbg !2467
  br label %originalBB1

originalBB23alteredBB:                            ; preds = %originalBB23, %58
  %121 = load i8*, i8** @print_deadprocs.exitstr, align 8, !dbg !2469
  %122 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0)) #10, !dbg !2470
  %123 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2471
  %124 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %123, i32 0, i32 6, !dbg !2471
  %125 = getelementptr inbounds %struct.__exit_status, %struct.__exit_status* %124, i32 0, i32 0, !dbg !2471
  %126 = load i16, i16* %125, align 4, !dbg !2471
  %127 = sext i16 %126 to i32, !dbg !2471
  %128 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0)) #10, !dbg !2472
  %129 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2473
  %130 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %129, i32 0, i32 6, !dbg !2473
  %131 = getelementptr inbounds %struct.__exit_status, %struct.__exit_status* %130, i32 0, i32 1, !dbg !2473
  %132 = load i16, i16* %131, align 2, !dbg !2473
  %133 = sext i16 %132 to i32, !dbg !2473
  %134 = call i32 (i8*, i8*, ...) @sprintf(i8* %121, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.94, i64 0, i64 0), i8* %122, i32 %127, i8* %128, i32 %133) #10, !dbg !2474
  %135 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2475
  %136 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %135, i32 0, i32 2, !dbg !2476
  %137 = getelementptr inbounds [32 x i8], [32 x i8]* %136, i64 0, i64 0, !dbg !2475
  %138 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2477
  %139 = call i8* @time_string(%struct.utmpx* %138), !dbg !2478
  %140 = getelementptr inbounds [12 x i8], [12 x i8]* %12, i64 0, i64 0, !dbg !2479
  %141 = load i8*, i8** %11, align 8, !dbg !2480
  %142 = load i8*, i8** @print_deadprocs.exitstr, align 8, !dbg !2481
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 32, i8* %137, i8* %139, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %140, i8* %141, i8* %142), !dbg !2482
  %143 = load i8*, i8** %11, align 8, !dbg !2483
  call void @free(i8* %143) #10, !dbg !2484
  br label %originalBB23
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @make_id_equals_comment(%struct.utmpx*) #4 !dbg !2589 {
  %2 = load i32, i32* @x.27
  %3 = load i32, i32* @y.28
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !2592, metadata !DIExpression()), !dbg !2593
  call void @llvm.dbg.declare(metadata i64* %11, metadata !2594, metadata !DIExpression()), !dbg !2595
  store i64 4, i64* %11, align 8, !dbg !2595
  call void @llvm.dbg.declare(metadata i8** %12, metadata !2596, metadata !DIExpression()), !dbg !2597
  %13 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i64 0, i64 0)) #10, !dbg !2598
  %14 = call i64 @strlen(i8* %13) #13, !dbg !2599
  %15 = load i64, i64* %11, align 8, !dbg !2600
  %16 = add i64 %14, %15, !dbg !2601
  %17 = add i64 %16, 1, !dbg !2602
  %18 = call noalias i8* @xmalloc(i64 %17), !dbg !2603
  store i8* %18, i8** %12, align 8, !dbg !2597
  %19 = load i8*, i8** %12, align 8, !dbg !2604
  %20 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i64 0, i64 0)) #10, !dbg !2605
  %21 = call i8* @strcpy(i8* %19, i8* %20) #10, !dbg !2606
  %22 = load i8*, i8** %12, align 8, !dbg !2607
  %23 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !2608
  %24 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %23, i32 0, i32 3, !dbg !2608
  %25 = getelementptr inbounds [4 x i8], [4 x i8]* %24, i64 0, i64 0, !dbg !2608
  %26 = load i64, i64* %11, align 8, !dbg !2609
  %27 = call i8* @strncat(i8* %22, i8* %25, i64 %26) #10, !dbg !2610
  %28 = load i8*, i8** %12, align 8, !dbg !2611
  %29 = load i32, i32* @x.27
  %30 = load i32, i32* @y.28
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %28, !dbg !2612

originalBBalteredBB:                              ; preds = %originalBB, %1
  %37 = alloca %struct.utmpx*, align 8
  %38 = alloca i64, align 8
  %39 = alloca i8*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %37, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %37, metadata !2613, metadata !DIExpression()), !dbg !2593
  call void @llvm.dbg.declare(metadata i64* %38, metadata !2717, metadata !DIExpression()), !dbg !2595
  store i64 4, i64* %38, align 8, !dbg !2595
  call void @llvm.dbg.declare(metadata i8** %39, metadata !2718, metadata !DIExpression()), !dbg !2597
  %40 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i64 0, i64 0)) #10, !dbg !2598
  %41 = call i64 @strlen(i8* %40) #13, !dbg !2599
  %42 = load i64, i64* %38, align 8, !dbg !2600
  %_ = shl i64 %41, %42
  %_1 = sub i64 %41, %42
  %gen = mul i64 %_1, %42
  %_2 = sub i64 0, %41
  %gen3 = add i64 %_2, %42
  %_4 = shl i64 %41, %42
  %_5 = sub i64 0, %41
  %gen6 = add i64 %_5, %42
  %43 = add i64 %41, %42, !dbg !2601
  %_7 = sub i64 0, %43
  %gen8 = add i64 %_7, 1
  %_9 = sub i64 0, %43
  %gen10 = add i64 %_9, 1
  %_11 = sub i64 %43, 1
  %gen12 = mul i64 %_11, 1
  %44 = add i64 %43, 1, !dbg !2602
  %45 = call noalias i8* @xmalloc(i64 %44), !dbg !2603
  store i8* %45, i8** %39, align 8, !dbg !2597
  %46 = load i8*, i8** %39, align 8, !dbg !2604
  %47 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i64 0, i64 0)) #10, !dbg !2605
  %48 = call i8* @strcpy(i8* %46, i8* %47) #10, !dbg !2606
  %49 = load i8*, i8** %39, align 8, !dbg !2607
  %50 = load %struct.utmpx*, %struct.utmpx** %37, align 8, !dbg !2608
  %51 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %50, i32 0, i32 3, !dbg !2608
  %52 = getelementptr inbounds [4 x i8], [4 x i8]* %51, i64 0, i64 0, !dbg !2608
  %53 = load i64, i64* %38, align 8, !dbg !2609
  %54 = call i8* @strncat(i8* %49, i8* %52, i64 %53) #10, !dbg !2610
  %55 = load i8*, i8** %39, align 8, !dbg !2611
  br label %originalBB
}

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @time_string(%struct.utmpx*) #4 !dbg !125 {
  %2 = load i32, i32* @x.29
  %3 = load i32, i32* @y.30
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  %11 = alloca %struct.utmpx*, align 8
  %12 = alloca i64, align 8
  %13 = alloca %struct.tm*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %11, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %11, metadata !2719, metadata !DIExpression()), !dbg !2720
  call void @llvm.dbg.declare(metadata i64* %12, metadata !2721, metadata !DIExpression()), !dbg !2722
  %14 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !2723
  %15 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %14, i32 0, i32 8, !dbg !2723
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %15, i32 0, i32 0, !dbg !2723
  %17 = load i32, i32* %16, align 4, !dbg !2723
  %18 = sext i32 %17 to i64, !dbg !2723
  store i64 %18, i64* %12, align 8, !dbg !2722
  call void @llvm.dbg.declare(metadata %struct.tm** %13, metadata !2724, metadata !DIExpression()), !dbg !2740
  %19 = call %struct.tm* @localtime(i64* %12) #10, !dbg !2741
  store %struct.tm* %19, %struct.tm** %13, align 8, !dbg !2740
  %20 = load %struct.tm*, %struct.tm** %13, align 8, !dbg !2742
  %21 = icmp ne %struct.tm* %20, null, !dbg !2742
  %22 = load i32, i32* @x.29
  %23 = load i32, i32* @y.30
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %50, !dbg !2744

30:                                               ; preds = %originalBBpart2
  %31 = load i32, i32* @x.29
  %32 = load i32, i32* @y.30
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load i8*, i8** @time_format, align 8, !dbg !2745
  %40 = load %struct.tm*, %struct.tm** %13, align 8, !dbg !2747
  %41 = call i64 @strftime(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @time_string.buf, i64 0, i64 0), i64 33, i8* %39, %struct.tm* %40) #10, !dbg !2748
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @time_string.buf, i64 0, i64 0), i8** %10, align 8, !dbg !2749
  %42 = load i32, i32* @x.29
  %43 = load i32, i32* @y.30
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %69, !dbg !2749

50:                                               ; preds = %originalBBpart2
  %51 = load i32, i32* @x.29
  %52 = load i32, i32* @y.30
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %50, %originalBB6alteredBB
  %59 = load i64, i64* %12, align 8, !dbg !2750
  %60 = call i8* @timetostr(i64 %59, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @time_string.buf, i64 0, i64 0)), !dbg !2751
  store i8* %60, i8** %10, align 8, !dbg !2752
  %61 = load i32, i32* @x.29
  %62 = load i32, i32* @y.30
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %69, !dbg !2752

69:                                               ; preds = %originalBBpart28, %originalBBpart24
  %70 = load i32, i32* @x.29
  %71 = load i32, i32* @y.30
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %69, %originalBB10alteredBB
  %78 = load i8*, i8** %10, align 8, !dbg !2753
  %79 = load i32, i32* @x.29
  %80 = load i32, i32* @y.30
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret i8* %78, !dbg !2753

originalBBalteredBB:                              ; preds = %originalBB, %1
  %87 = alloca i8*, align 8
  %88 = alloca %struct.utmpx*, align 8
  %89 = alloca i64, align 8
  %90 = alloca %struct.tm*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %88, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %88, metadata !2754, metadata !DIExpression()), !dbg !2720
  call void @llvm.dbg.declare(metadata i64* %89, metadata !2855, metadata !DIExpression()), !dbg !2722
  %91 = load %struct.utmpx*, %struct.utmpx** %88, align 8, !dbg !2723
  %92 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %91, i32 0, i32 8, !dbg !2723
  %93 = getelementptr inbounds %struct.anon, %struct.anon* %92, i32 0, i32 0, !dbg !2723
  %94 = load i32, i32* %93, align 4, !dbg !2723
  %95 = sext i32 %94 to i64, !dbg !2723
  store i64 %95, i64* %89, align 8, !dbg !2722
  call void @llvm.dbg.declare(metadata %struct.tm** %90, metadata !2856, metadata !DIExpression()), !dbg !2740
  %96 = call %struct.tm* @localtime(i64* %89) #10, !dbg !2741
  store %struct.tm* %96, %struct.tm** %90, align 8, !dbg !2740
  %97 = load %struct.tm*, %struct.tm** %90, align 8, !dbg !2742
  %98 = icmp ne %struct.tm* %97, null, !dbg !2742
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %99 = load i8*, i8** @time_format, align 8, !dbg !2745
  %100 = load %struct.tm*, %struct.tm** %13, align 8, !dbg !2747
  %101 = call i64 @strftime(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @time_string.buf, i64 0, i64 0), i64 33, i8* %99, %struct.tm* %100) #10, !dbg !2748
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @time_string.buf, i64 0, i64 0), i8** %10, align 8, !dbg !2749
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %50
  %102 = load i64, i64* %12, align 8, !dbg !2750
  %103 = call i8* @timetostr(i64 %102, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @time_string.buf, i64 0, i64 0)), !dbg !2751
  store i8* %103, i8** %10, align 8, !dbg !2752
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %69
  %104 = load i8*, i8** %10, align 8, !dbg !2753
  br label %originalBB10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_line(i32, i8*, i8 signext, i32, i8*, i8*, i8*, i8*, i8*, i8*) #4 !dbg !56 {
  %11 = load i32, i32* @x.31
  %12 = load i32, i32* @y.32
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i8, align 1
  %22 = alloca i32, align 4
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i8*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i8*, align 8
  %29 = alloca i8*, align 8
  %30 = alloca [8 x i8], align 1
  %31 = alloca [13 x i8], align 1
  %32 = alloca i8*, align 8
  %33 = alloca i32, align 4
  %34 = alloca i8*, align 8
  store i32 %0, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !2871, metadata !DIExpression()), !dbg !2872
  store i8* %1, i8** %20, align 8
  call void @llvm.dbg.declare(metadata i8** %20, metadata !2873, metadata !DIExpression()), !dbg !2874
  store i8 %2, i8* %21, align 1
  call void @llvm.dbg.declare(metadata i8* %21, metadata !2875, metadata !DIExpression()), !dbg !2876
  store i32 %3, i32* %22, align 4
  call void @llvm.dbg.declare(metadata i32* %22, metadata !2877, metadata !DIExpression()), !dbg !2878
  store i8* %4, i8** %23, align 8
  call void @llvm.dbg.declare(metadata i8** %23, metadata !2879, metadata !DIExpression()), !dbg !2880
  store i8* %5, i8** %24, align 8
  call void @llvm.dbg.declare(metadata i8** %24, metadata !2881, metadata !DIExpression()), !dbg !2882
  store i8* %6, i8** %25, align 8
  call void @llvm.dbg.declare(metadata i8** %25, metadata !2883, metadata !DIExpression()), !dbg !2884
  store i8* %7, i8** %26, align 8
  call void @llvm.dbg.declare(metadata i8** %26, metadata !2885, metadata !DIExpression()), !dbg !2886
  store i8* %8, i8** %27, align 8
  call void @llvm.dbg.declare(metadata i8** %27, metadata !2887, metadata !DIExpression()), !dbg !2888
  store i8* %9, i8** %28, align 8
  call void @llvm.dbg.declare(metadata i8** %28, metadata !2889, metadata !DIExpression()), !dbg !2890
  call void @llvm.dbg.declare(metadata i8** %29, metadata !2891, metadata !DIExpression()), !dbg !2892
  call void @llvm.dbg.declare(metadata [8 x i8]* %30, metadata !2893, metadata !DIExpression()), !dbg !2895
  call void @llvm.dbg.declare(metadata [13 x i8]* %31, metadata !2896, metadata !DIExpression()), !dbg !2900
  call void @llvm.dbg.declare(metadata i8** %32, metadata !2901, metadata !DIExpression()), !dbg !2902
  call void @llvm.dbg.declare(metadata i32* %33, metadata !2903, metadata !DIExpression()), !dbg !2904
  %35 = load i8, i8* %21, align 1, !dbg !2905
  store i8 %35, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @print_line.mesg, i64 0, i64 1), align 1, !dbg !2906
  %36 = load i8, i8* @include_idle, align 1, !dbg !2907
  %37 = trunc i8 %36 to i1, !dbg !2907
  %38 = load i32, i32* @x.31
  %39 = load i32, i32* @y.32
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %37, label %46, label %105, !dbg !2909

46:                                               ; preds = %originalBBpart2
  %47 = load i32, i32* @x.31
  %48 = load i32, i32* @y.32
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %46, %originalBB1alteredBB
  %55 = load i8, i8* @short_output, align 1, !dbg !2910
  %56 = trunc i8 %55 to i1, !dbg !2910
  %57 = load i32, i32* @x.31
  %58 = load i32, i32* @y.32
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %56, label %105, label %65, !dbg !2911

65:                                               ; preds = %originalBBpart24
  %66 = load i32, i32* @x.31
  %67 = load i32, i32* @y.32
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %65, %originalBB6alteredBB
  %74 = load i8*, i8** %25, align 8, !dbg !2912
  %75 = call i64 @strlen(i8* %74) #13, !dbg !2913
  %76 = icmp ult i64 %75, 7, !dbg !2914
  %77 = load i32, i32* @x.31
  %78 = load i32, i32* @y.32
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %76, label %85, label %105, !dbg !2915

85:                                               ; preds = %originalBBpart28
  %86 = load i32, i32* @x.31
  %87 = load i32, i32* @y.32
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %85, %originalBB10alteredBB
  %94 = getelementptr inbounds [8 x i8], [8 x i8]* %30, i64 0, i64 0, !dbg !2916
  %95 = load i8*, i8** %25, align 8, !dbg !2917
  %96 = call i32 (i8*, i8*, ...) @sprintf(i8* %94, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0), i8* %95) #10, !dbg !2918
  %97 = load i32, i32* @x.31
  %98 = load i32, i32* @y.32
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %123, !dbg !2918

105:                                              ; preds = %originalBBpart28, %originalBBpart24, %originalBBpart2
  %106 = load i32, i32* @x.31
  %107 = load i32, i32* @y.32
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %105, %originalBB14alteredBB
  %114 = getelementptr inbounds [8 x i8], [8 x i8]* %30, i64 0, i64 0, !dbg !2919
  store i8 0, i8* %114, align 1, !dbg !2920
  %115 = load i32, i32* @x.31
  %116 = load i32, i32* @y.32
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %123

123:                                              ; preds = %originalBBpart216, %originalBBpart212
  %124 = load i32, i32* @x.31
  %125 = load i32, i32* @y.32
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %123, %originalBB18alteredBB
  %132 = load i8, i8* @short_output, align 1, !dbg !2921
  %133 = trunc i8 %132 to i1, !dbg !2921
  %134 = load i32, i32* @x.31
  %135 = load i32, i32* @y.32
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %133, label %182, label %142, !dbg !2923

142:                                              ; preds = %originalBBpart220
  %143 = load i32, i32* @x.31
  %144 = load i32, i32* @y.32
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %142, %originalBB22alteredBB
  %151 = load i8*, i8** %26, align 8, !dbg !2924
  %152 = call i64 @strlen(i8* %151) #13, !dbg !2925
  %153 = icmp ult i64 %152, 12, !dbg !2926
  %154 = load i32, i32* @x.31
  %155 = load i32, i32* @y.32
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %153, label %162, label %182, !dbg !2927

162:                                              ; preds = %originalBBpart224
  %163 = load i32, i32* @x.31
  %164 = load i32, i32* @y.32
  %165 = sub i32 %163, 1
  %166 = mul i32 %163, %165
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %168, %169
  br i1 %170, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %162, %originalBB26alteredBB
  %171 = getelementptr inbounds [13 x i8], [13 x i8]* %31, i64 0, i64 0, !dbg !2928
  %172 = load i8*, i8** %26, align 8, !dbg !2929
  %173 = call i32 (i8*, i8*, ...) @sprintf(i8* %171, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), i8* %172) #10, !dbg !2930
  %174 = load i32, i32* @x.31
  %175 = load i32, i32* @y.32
  %176 = sub i32 %174, 1
  %177 = mul i32 %174, %176
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %179, %180
  br i1 %181, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %200, !dbg !2930

182:                                              ; preds = %originalBBpart224, %originalBBpart220
  %183 = load i32, i32* @x.31
  %184 = load i32, i32* @y.32
  %185 = sub i32 %183, 1
  %186 = mul i32 %183, %185
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %188, %189
  br i1 %190, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %182, %originalBB30alteredBB
  %191 = getelementptr inbounds [13 x i8], [13 x i8]* %31, i64 0, i64 0, !dbg !2931
  store i8 0, i8* %191, align 1, !dbg !2932
  %192 = load i32, i32* @x.31
  %193 = load i32, i32* @y.32
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %200

200:                                              ; preds = %originalBBpart232, %originalBBpart228
  %201 = load i32, i32* @x.31
  %202 = load i32, i32* @y.32
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %200, %originalBB34alteredBB
  %209 = load i8, i8* @include_exit, align 1, !dbg !2933
  %210 = trunc i8 %209 to i1, !dbg !2933
  %211 = load i32, i32* @x.31
  %212 = load i32, i32* @y.32
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %210, label %219, label %295, !dbg !2933

219:                                              ; preds = %originalBBpart236
  %220 = load i32, i32* @x.31
  %221 = load i32, i32* @y.32
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %219, %originalBB38alteredBB
  %228 = load i8*, i8** %28, align 8, !dbg !2934
  %229 = call i64 @strlen(i8* %228) #13, !dbg !2934
  %230 = icmp ugt i64 12, %229, !dbg !2934
  %231 = load i32, i32* @x.31
  %232 = load i32, i32* @y.32
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %230, label %239, label %256, !dbg !2934

239:                                              ; preds = %originalBBpart240
  %240 = load i32, i32* @x.31
  %241 = load i32, i32* @y.32
  %242 = sub i32 %240, 1
  %243 = mul i32 %240, %242
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %245, %246
  br i1 %247, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %239, %originalBB42alteredBB
  %248 = load i32, i32* @x.31
  %249 = load i32, i32* @y.32
  %250 = sub i32 %248, 1
  %251 = mul i32 %248, %250
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %253, %254
  br i1 %255, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %275, !dbg !2934

256:                                              ; preds = %originalBBpart240
  %257 = load i32, i32* @x.31
  %258 = load i32, i32* @y.32
  %259 = sub i32 %257, 1
  %260 = mul i32 %257, %259
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %258, 10
  %264 = or i1 %262, %263
  br i1 %264, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %256, %originalBB46alteredBB
  %265 = load i8*, i8** %28, align 8, !dbg !2934
  %266 = call i64 @strlen(i8* %265) #13, !dbg !2934
  %267 = load i32, i32* @x.31
  %268 = load i32, i32* @y.32
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %275, !dbg !2934

275:                                              ; preds = %originalBBpart248, %originalBBpart244
  %276 = phi i64 [ 12, %originalBBpart244 ], [ %266, %originalBBpart248 ], !dbg !2934
  %277 = load i32, i32* @x.31
  %278 = load i32, i32* @y.32
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %275, %originalBB50alteredBB
  %285 = add i64 1, %276, !dbg !2935
  %286 = add i64 %285, 1, !dbg !2936
  %287 = load i32, i32* @x.31
  %288 = load i32, i32* @y.32
  %289 = sub i32 %287, 1
  %290 = mul i32 %287, %289
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %288, 10
  %294 = or i1 %292, %293
  br i1 %294, label %originalBBpart262, label %originalBB50alteredBB

originalBBpart262:                                ; preds = %originalBB50
  br label %312, !dbg !2933

295:                                              ; preds = %originalBBpart236
  %296 = load i32, i32* @x.31
  %297 = load i32, i32* @y.32
  %298 = sub i32 %296, 1
  %299 = mul i32 %296, %298
  %300 = urem i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %301, %302
  br i1 %303, label %originalBB64, label %originalBB64alteredBB

originalBB64:                                     ; preds = %295, %originalBB64alteredBB
  %304 = load i32, i32* @x.31
  %305 = load i32, i32* @y.32
  %306 = sub i32 %304, 1
  %307 = mul i32 %304, %306
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %309, %310
  br i1 %311, label %originalBBpart266, label %originalBB64alteredBB

originalBBpart266:                                ; preds = %originalBB64
  br label %312, !dbg !2933

312:                                              ; preds = %originalBBpart266, %originalBBpart262
  %313 = phi i64 [ %286, %originalBBpart262 ], [ 1, %originalBBpart266 ], !dbg !2933
  %314 = load i32, i32* @x.31
  %315 = load i32, i32* @y.32
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %312, %originalBB68alteredBB
  %322 = call noalias i8* @xmalloc(i64 %313), !dbg !2937
  store i8* %322, i8** %32, align 8, !dbg !2938
  %323 = load i8, i8* @include_exit, align 1, !dbg !2939
  %324 = trunc i8 %323 to i1, !dbg !2939
  %325 = load i32, i32* @x.31
  %326 = load i32, i32* @y.32
  %327 = sub i32 %325, 1
  %328 = mul i32 %325, %327
  %329 = urem i32 %328, 2
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %330, %331
  br i1 %332, label %originalBBpart270, label %originalBB68alteredBB

originalBBpart270:                                ; preds = %originalBB68
  br i1 %324, label %333, label %353, !dbg !2941

333:                                              ; preds = %originalBBpart270
  %334 = load i32, i32* @x.31
  %335 = load i32, i32* @y.32
  %336 = sub i32 %334, 1
  %337 = mul i32 %334, %336
  %338 = urem i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %339, %340
  br i1 %341, label %originalBB72, label %originalBB72alteredBB

originalBB72:                                     ; preds = %333, %originalBB72alteredBB
  %342 = load i8*, i8** %32, align 8, !dbg !2942
  %343 = load i8*, i8** %28, align 8, !dbg !2943
  %344 = call i32 (i8*, i8*, ...) @sprintf(i8* %342, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.71, i64 0, i64 0), i8* %343) #10, !dbg !2944
  %345 = load i32, i32* @x.31
  %346 = load i32, i32* @y.32
  %347 = sub i32 %345, 1
  %348 = mul i32 %345, %347
  %349 = urem i32 %348, 2
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %346, 10
  %352 = or i1 %350, %351
  br i1 %352, label %originalBBpart274, label %originalBB72alteredBB

originalBBpart274:                                ; preds = %originalBB72
  br label %371, !dbg !2944

353:                                              ; preds = %originalBBpart270
  %354 = load i32, i32* @x.31
  %355 = load i32, i32* @y.32
  %356 = sub i32 %354, 1
  %357 = mul i32 %354, %356
  %358 = urem i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %359, %360
  br i1 %361, label %originalBB76, label %originalBB76alteredBB

originalBB76:                                     ; preds = %353, %originalBB76alteredBB
  %362 = load i8*, i8** %32, align 8, !dbg !2945
  store i8 0, i8* %362, align 1, !dbg !2946
  %363 = load i32, i32* @x.31
  %364 = load i32, i32* @y.32
  %365 = sub i32 %363, 1
  %366 = mul i32 %363, %365
  %367 = urem i32 %366, 2
  %368 = icmp eq i32 %367, 0
  %369 = icmp slt i32 %364, 10
  %370 = or i1 %368, %369
  br i1 %370, label %originalBBpart278, label %originalBB76alteredBB

originalBBpart278:                                ; preds = %originalBB76
  br label %371

371:                                              ; preds = %originalBBpart278, %originalBBpart274
  %372 = load i32, i32* @x.31
  %373 = load i32, i32* @y.32
  %374 = sub i32 %372, 1
  %375 = mul i32 %372, %374
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %377, %378
  br i1 %379, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %371, %originalBB80alteredBB
  %380 = load i32, i32* %19, align 4, !dbg !2947
  %381 = load i8*, i8** %20, align 8, !dbg !2948
  %382 = icmp ne i8* %381, null, !dbg !2948
  %383 = load i32, i32* @x.31
  %384 = load i32, i32* @y.32
  %385 = sub i32 %383, 1
  %386 = mul i32 %383, %385
  %387 = urem i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %388, %389
  br i1 %390, label %originalBBpart282, label %originalBB80alteredBB

originalBBpart282:                                ; preds = %originalBB80
  br i1 %382, label %391, label %409, !dbg !2948

391:                                              ; preds = %originalBBpart282
  %392 = load i32, i32* @x.31
  %393 = load i32, i32* @y.32
  %394 = sub i32 %392, 1
  %395 = mul i32 %392, %394
  %396 = urem i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %397, %398
  br i1 %399, label %originalBB84, label %originalBB84alteredBB

originalBB84:                                     ; preds = %391, %originalBB84alteredBB
  %400 = load i8*, i8** %20, align 8, !dbg !2949
  %401 = load i32, i32* @x.31
  %402 = load i32, i32* @y.32
  %403 = sub i32 %401, 1
  %404 = mul i32 %401, %403
  %405 = urem i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %406, %407
  br i1 %408, label %originalBBpart286, label %originalBB84alteredBB

originalBBpart286:                                ; preds = %originalBB84
  br label %426, !dbg !2948

409:                                              ; preds = %originalBBpart282
  %410 = load i32, i32* @x.31
  %411 = load i32, i32* @y.32
  %412 = sub i32 %410, 1
  %413 = mul i32 %410, %412
  %414 = urem i32 %413, 2
  %415 = icmp eq i32 %414, 0
  %416 = icmp slt i32 %411, 10
  %417 = or i1 %415, %416
  br i1 %417, label %originalBB88, label %originalBB88alteredBB

originalBB88:                                     ; preds = %409, %originalBB88alteredBB
  %418 = load i32, i32* @x.31
  %419 = load i32, i32* @y.32
  %420 = sub i32 %418, 1
  %421 = mul i32 %418, %420
  %422 = urem i32 %421, 2
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %419, 10
  %425 = or i1 %423, %424
  br i1 %425, label %originalBBpart290, label %originalBB88alteredBB

originalBBpart290:                                ; preds = %originalBB88
  br label %426, !dbg !2948

426:                                              ; preds = %originalBBpart290, %originalBBpart286
  %427 = phi i8* [ %400, %originalBBpart286 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73, i64 0, i64 0), %originalBBpart290 ], !dbg !2948
  %428 = load i32, i32* @x.31
  %429 = load i32, i32* @y.32
  %430 = sub i32 %428, 1
  %431 = mul i32 %428, %430
  %432 = urem i32 %431, 2
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %429, 10
  %435 = or i1 %433, %434
  br i1 %435, label %originalBB92, label %originalBB92alteredBB

originalBB92:                                     ; preds = %426, %originalBB92alteredBB
  %436 = load i8, i8* @include_mesg, align 1, !dbg !2950
  %437 = trunc i8 %436 to i1, !dbg !2950
  %438 = zext i1 %437 to i64, !dbg !2950
  %439 = select i1 %437, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @print_line.mesg, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !2950
  %440 = load i32, i32* %22, align 4, !dbg !2951
  %441 = load i8*, i8** %23, align 8, !dbg !2952
  %442 = load i32, i32* @time_format_width, align 4, !dbg !2953
  %443 = load i8*, i8** %24, align 8, !dbg !2954
  %444 = getelementptr inbounds [8 x i8], [8 x i8]* %30, i64 0, i64 0, !dbg !2955
  %445 = getelementptr inbounds [13 x i8], [13 x i8]* %31, i64 0, i64 0, !dbg !2956
  %446 = load i8*, i8** %27, align 8, !dbg !2957
  %447 = load i8*, i8** %32, align 8, !dbg !2958
  %448 = call i32 (i8**, i8*, ...) @asprintf(i8** %29, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.72, i64 0, i64 0), i32 %380, i8* %427, i8* %439, i32 %440, i8* %441, i32 %442, i8* %443, i8* %444, i8* %445, i8* %446, i8* %447) #10, !dbg !2959
  store i32 %448, i32* %33, align 4, !dbg !2960
  %449 = load i32, i32* %33, align 4, !dbg !2961
  %450 = load i32, i32* @x.31
  %451 = load i32, i32* @y.32
  %452 = sub i32 %450, 1
  %453 = mul i32 %450, %452
  %454 = urem i32 %453, 2
  %455 = icmp eq i32 %454, 0
  %456 = icmp slt i32 %451, 10
  %457 = or i1 %455, %456
  br i1 %457, label %originalBBpart294, label %originalBB92alteredBB

originalBBpart294:                                ; preds = %originalBB92
  br label %458, !dbg !2963

458:                                              ; preds = %originalBBpart294
  %459 = load i32, i32* @x.31
  %460 = load i32, i32* @y.32
  %461 = sub i32 %459, 1
  %462 = mul i32 %459, %461
  %463 = urem i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %460, 10
  %466 = or i1 %464, %465
  br i1 %466, label %originalBB96, label %originalBB96alteredBB

originalBB96:                                     ; preds = %458, %originalBB96alteredBB
  %collatzVar = alloca i32
  %467 = load i32, i32* @x.31
  %468 = load i32, i32* @y.32
  %469 = sub i32 %467, 1
  %470 = mul i32 %467, %469
  %471 = urem i32 %470, 2
  %472 = icmp eq i32 %471, 0
  %473 = icmp slt i32 %468, 10
  %474 = or i1 %472, %473
  br i1 %474, label %originalBBpart298, label %originalBB96alteredBB

originalBBpart298:                                ; preds = %originalBB96
  br label %475

475:                                              ; preds = %originalBBpart298
  %476 = load i32, i32* @x.31
  %477 = load i32, i32* @y.32
  %478 = sub i32 %476, 1
  %479 = mul i32 %476, %478
  %480 = urem i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = icmp slt i32 %477, 10
  %483 = or i1 %481, %482
  br i1 %483, label %originalBB100, label %originalBB100alteredBB

originalBB100:                                    ; preds = %475, %originalBB100alteredBB
  %484 = load i32, i32* @inVal0
  %485 = icmp sgt i32 %484, 1
  %486 = load i32, i32* @x.31
  %487 = load i32, i32* @y.32
  %488 = sub i32 %486, 1
  %489 = mul i32 %486, %488
  %490 = urem i32 %489, 2
  %491 = icmp eq i32 %490, 0
  %492 = icmp slt i32 %487, 10
  %493 = or i1 %491, %492
  br i1 %493, label %originalBBpart2102, label %originalBB100alteredBB

originalBBpart2102:                               ; preds = %originalBB100
  br i1 %485, label %511, label %494

494:                                              ; preds = %originalBBpart2102
  %495 = load i32, i32* @x.31
  %496 = load i32, i32* @y.32
  %497 = sub i32 %495, 1
  %498 = mul i32 %495, %497
  %499 = urem i32 %498, 2
  %500 = icmp eq i32 %499, 0
  %501 = icmp slt i32 %496, 10
  %502 = or i1 %500, %501
  br i1 %502, label %originalBB104, label %originalBB104alteredBB

originalBB104:                                    ; preds = %494, %originalBB104alteredBB
  store i32 21, i32* %collatzVar
  %503 = load i32, i32* @x.31
  %504 = load i32, i32* @y.32
  %505 = sub i32 %503, 1
  %506 = mul i32 %503, %505
  %507 = urem i32 %506, 2
  %508 = icmp eq i32 %507, 0
  %509 = icmp slt i32 %504, 10
  %510 = or i1 %508, %509
  br i1 %510, label %originalBBpart2106, label %originalBB104alteredBB

originalBBpart2106:                               ; preds = %originalBB104
  br label %511

511:                                              ; preds = %originalBBpart2106, %originalBBpart2102
  %512 = load i32, i32* @x.31
  %513 = load i32, i32* @y.32
  %514 = sub i32 %512, 1
  %515 = mul i32 %512, %514
  %516 = urem i32 %515, 2
  %517 = icmp eq i32 %516, 0
  %518 = icmp slt i32 %513, 10
  %519 = or i1 %517, %518
  br i1 %519, label %originalBB108, label %originalBB108alteredBB

originalBB108:                                    ; preds = %511, %originalBB108alteredBB
  %520 = load i8**, i8*** @inVal1
  %521 = getelementptr inbounds i8*, i8** %520, i64 1
  %522 = load i8*, i8** %521
  %controle = call i32 @controle(i8* %522, i32 -1)
  store i32 %controle, i32* %collatzVar
  %523 = load i32, i32* @x.31
  %524 = load i32, i32* @y.32
  %525 = sub i32 %523, 1
  %526 = mul i32 %523, %525
  %527 = urem i32 %526, 2
  %528 = icmp eq i32 %527, 0
  %529 = icmp slt i32 %524, 10
  %530 = or i1 %528, %529
  br i1 %530, label %originalBBpart2110, label %originalBB108alteredBB

originalBBpart2110:                               ; preds = %originalBB108
  br label %531

531:                                              ; preds = %originalBBpart2177, %originalBBpart2161, %originalBBpart2110
  %532 = load i32, i32* @x.31
  %533 = load i32, i32* @y.32
  %534 = sub i32 %532, 1
  %535 = mul i32 %532, %534
  %536 = urem i32 %535, 2
  %537 = icmp eq i32 %536, 0
  %538 = icmp slt i32 %533, 10
  %539 = or i1 %537, %538
  br i1 %539, label %originalBB112, label %originalBB112alteredBB

originalBB112:                                    ; preds = %531, %originalBB112alteredBB
  %540 = load i32, i32* %collatzVar
  %541 = icmp sgt i32 %540, 1
  %542 = load i32, i32* @x.31
  %543 = load i32, i32* @y.32
  %544 = sub i32 %542, 1
  %545 = mul i32 %542, %544
  %546 = urem i32 %545, 2
  %547 = icmp eq i32 %546, 0
  %548 = icmp slt i32 %543, 10
  %549 = or i1 %547, %548
  br i1 %549, label %originalBBpart2114, label %originalBB112alteredBB

originalBBpart2114:                               ; preds = %originalBB112
  br i1 %541, label %550, label %666

550:                                              ; preds = %originalBBpart2114
  %551 = load i32, i32* @x.31
  %552 = load i32, i32* @y.32
  %553 = sub i32 %551, 1
  %554 = mul i32 %551, %553
  %555 = urem i32 %554, 2
  %556 = icmp eq i32 %555, 0
  %557 = icmp slt i32 %552, 10
  %558 = or i1 %556, %557
  br i1 %558, label %originalBB116, label %originalBB116alteredBB

originalBB116:                                    ; preds = %550, %originalBB116alteredBB
  %559 = load i32, i32* %collatzVar
  %560 = srem i32 %559, 2
  %561 = icmp eq i32 %560, 0
  %562 = load i32, i32* @x.31
  %563 = load i32, i32* @y.32
  %564 = sub i32 %562, 1
  %565 = mul i32 %562, %564
  %566 = urem i32 %565, 2
  %567 = icmp eq i32 %566, 0
  %568 = icmp slt i32 %563, 10
  %569 = or i1 %567, %568
  br i1 %569, label %originalBBpart2125, label %originalBB116alteredBB

originalBBpart2125:                               ; preds = %originalBB116
  br i1 %561, label %570, label %589

570:                                              ; preds = %originalBBpart2125
  %571 = load i32, i32* @x.31
  %572 = load i32, i32* @y.32
  %573 = sub i32 %571, 1
  %574 = mul i32 %571, %573
  %575 = urem i32 %574, 2
  %576 = icmp eq i32 %575, 0
  %577 = icmp slt i32 %572, 10
  %578 = or i1 %576, %577
  br i1 %578, label %originalBB127, label %originalBB127alteredBB

originalBB127:                                    ; preds = %570, %originalBB127alteredBB
  %579 = load i32, i32* %collatzVar
  %580 = sdiv i32 %579, 2
  store i32 %580, i32* %collatzVar
  %581 = load i32, i32* @x.31
  %582 = load i32, i32* @y.32
  %583 = sub i32 %581, 1
  %584 = mul i32 %581, %583
  %585 = urem i32 %584, 2
  %586 = icmp eq i32 %585, 0
  %587 = icmp slt i32 %582, 10
  %588 = or i1 %586, %587
  br i1 %588, label %originalBBpart2134, label %originalBB127alteredBB

originalBBpart2134:                               ; preds = %originalBB127
  br label %609

589:                                              ; preds = %originalBBpart2125
  %590 = load i32, i32* @x.31
  %591 = load i32, i32* @y.32
  %592 = sub i32 %590, 1
  %593 = mul i32 %590, %592
  %594 = urem i32 %593, 2
  %595 = icmp eq i32 %594, 0
  %596 = icmp slt i32 %591, 10
  %597 = or i1 %595, %596
  br i1 %597, label %originalBB136, label %originalBB136alteredBB

originalBB136:                                    ; preds = %589, %originalBB136alteredBB
  %598 = load i32, i32* %collatzVar
  %599 = mul i32 %598, 3
  %600 = add i32 %599, 1
  store i32 %600, i32* %collatzVar
  %601 = load i32, i32* @x.31
  %602 = load i32, i32* @y.32
  %603 = sub i32 %601, 1
  %604 = mul i32 %601, %603
  %605 = urem i32 %604, 2
  %606 = icmp eq i32 %605, 0
  %607 = icmp slt i32 %602, 10
  %608 = or i1 %606, %607
  br i1 %608, label %originalBBpart2149, label %originalBB136alteredBB

originalBBpart2149:                               ; preds = %originalBB136
  br label %609

609:                                              ; preds = %originalBBpart2149, %originalBBpart2134
  %610 = load i32, i32* @x.31
  %611 = load i32, i32* @y.32
  %612 = sub i32 %610, 1
  %613 = mul i32 %610, %612
  %614 = urem i32 %613, 2
  %615 = icmp eq i32 %614, 0
  %616 = icmp slt i32 %611, 10
  %617 = or i1 %615, %616
  br i1 %617, label %originalBB151, label %originalBB151alteredBB

originalBB151:                                    ; preds = %609, %originalBB151alteredBB
  %618 = load i32, i32* %collatzVar
  %619 = sub i32 %449, %618
  %620 = icmp sgt i32 %619, -3
  %621 = load i32, i32* @x.31
  %622 = load i32, i32* @y.32
  %623 = sub i32 %621, 1
  %624 = mul i32 %621, %623
  %625 = urem i32 %624, 2
  %626 = icmp eq i32 %625, 0
  %627 = icmp slt i32 %622, 10
  %628 = or i1 %626, %627
  br i1 %628, label %originalBBpart2161, label %originalBB151alteredBB

originalBBpart2161:                               ; preds = %originalBB151
  br i1 %620, label %629, label %531

629:                                              ; preds = %originalBBpart2161
  %630 = load i32, i32* @x.31
  %631 = load i32, i32* @y.32
  %632 = sub i32 %630, 1
  %633 = mul i32 %630, %632
  %634 = urem i32 %633, 2
  %635 = icmp eq i32 %634, 0
  %636 = icmp slt i32 %631, 10
  %637 = or i1 %635, %636
  br i1 %637, label %originalBB163, label %originalBB163alteredBB

originalBB163:                                    ; preds = %629, %originalBB163alteredBB
  %638 = load i32, i32* %collatzVar
  %639 = add i32 %449, %638
  %640 = icmp slt i32 %639, 1
  %641 = load i32, i32* @x.31
  %642 = load i32, i32* @y.32
  %643 = sub i32 %641, 1
  %644 = mul i32 %641, %643
  %645 = urem i32 %644, 2
  %646 = icmp eq i32 %645, 0
  %647 = icmp slt i32 %642, 10
  %648 = or i1 %646, %647
  br i1 %648, label %originalBBpart2177, label %originalBB163alteredBB

originalBBpart2177:                               ; preds = %originalBB163
  br i1 %640, label %649, label %531

649:                                              ; preds = %originalBBpart2177
  %650 = load i32, i32* @x.31
  %651 = load i32, i32* @y.32
  %652 = sub i32 %650, 1
  %653 = mul i32 %650, %652
  %654 = urem i32 %653, 2
  %655 = icmp eq i32 %654, 0
  %656 = icmp slt i32 %651, 10
  %657 = or i1 %655, %656
  br i1 %657, label %originalBB179, label %originalBB179alteredBB

originalBB179:                                    ; preds = %649, %originalBB179alteredBB
  call void @xalloc_die() #14, !dbg !2964
  %658 = load i32, i32* @x.31
  %659 = load i32, i32* @y.32
  %660 = sub i32 %658, 1
  %661 = mul i32 %658, %660
  %662 = urem i32 %661, 2
  %663 = icmp eq i32 %662, 0
  %664 = icmp slt i32 %659, 10
  %665 = or i1 %663, %664
  br i1 %665, label %originalBBpart2181, label %originalBB179alteredBB

originalBBpart2181:                               ; preds = %originalBB179
  unreachable, !dbg !2964

666:                                              ; preds = %originalBBpart2114
  call void @llvm.dbg.declare(metadata i8** %34, metadata !2965, metadata !DIExpression()), !dbg !2967
  %667 = load i32, i32* @x.31
  %668 = load i32, i32* @y.32
  %669 = sub i32 %667, 1
  %670 = mul i32 %667, %669
  %671 = urem i32 %670, 2
  %672 = icmp eq i32 %671, 0
  %673 = icmp slt i32 %668, 10
  %674 = or i1 %672, %673
  br i1 %674, label %originalBB183, label %originalBB183alteredBB

originalBB183:                                    ; preds = %666, %originalBB183alteredBB
  %675 = load i8*, i8** %29, align 8, !dbg !2968
  %676 = load i8*, i8** %29, align 8, !dbg !2969
  %677 = call i64 @strlen(i8* %676) #13, !dbg !2970
  %678 = getelementptr inbounds i8, i8* %675, i64 %677, !dbg !2971
  store i8* %678, i8** %34, align 8, !dbg !2967
  %679 = load i32, i32* @x.31
  %680 = load i32, i32* @y.32
  %681 = sub i32 %679, 1
  %682 = mul i32 %679, %681
  %683 = urem i32 %682, 2
  %684 = icmp eq i32 %683, 0
  %685 = icmp slt i32 %680, 10
  %686 = or i1 %684, %685
  br i1 %686, label %originalBBpart2185, label %originalBB183alteredBB

originalBBpart2185:                               ; preds = %originalBB183
  br label %687, !dbg !2972

687:                                              ; preds = %originalBBpart2193, %originalBBpart2185
  %688 = load i32, i32* @x.31
  %689 = load i32, i32* @y.32
  %690 = sub i32 %688, 1
  %691 = mul i32 %688, %690
  %692 = urem i32 %691, 2
  %693 = icmp eq i32 %692, 0
  %694 = icmp slt i32 %689, 10
  %695 = or i1 %693, %694
  br i1 %695, label %originalBB187, label %originalBB187alteredBB

originalBB187:                                    ; preds = %687, %originalBB187alteredBB
  %696 = load i8*, i8** %34, align 8, !dbg !2973
  %697 = getelementptr inbounds i8, i8* %696, i32 -1, !dbg !2973
  store i8* %697, i8** %34, align 8, !dbg !2973
  %698 = load i8, i8* %697, align 1, !dbg !2974
  %699 = sext i8 %698 to i32, !dbg !2974
  %700 = icmp eq i32 %699, 32, !dbg !2975
  %701 = load i32, i32* @x.31
  %702 = load i32, i32* @y.32
  %703 = sub i32 %701, 1
  %704 = mul i32 %701, %703
  %705 = urem i32 %704, 2
  %706 = icmp eq i32 %705, 0
  %707 = icmp slt i32 %702, 10
  %708 = or i1 %706, %707
  br i1 %708, label %originalBBpart2189, label %originalBB187alteredBB

originalBBpart2189:                               ; preds = %originalBB187
  br i1 %700, label %709, label %726, !dbg !2972

709:                                              ; preds = %originalBBpart2189
  %710 = load i32, i32* @x.31
  %711 = load i32, i32* @y.32
  %712 = sub i32 %710, 1
  %713 = mul i32 %710, %712
  %714 = urem i32 %713, 2
  %715 = icmp eq i32 %714, 0
  %716 = icmp slt i32 %711, 10
  %717 = or i1 %715, %716
  br i1 %717, label %originalBB191, label %originalBB191alteredBB

originalBB191:                                    ; preds = %709, %originalBB191alteredBB
  %718 = load i32, i32* @x.31
  %719 = load i32, i32* @y.32
  %720 = sub i32 %718, 1
  %721 = mul i32 %718, %720
  %722 = urem i32 %721, 2
  %723 = icmp eq i32 %722, 0
  %724 = icmp slt i32 %719, 10
  %725 = or i1 %723, %724
  br i1 %725, label %originalBBpart2193, label %originalBB191alteredBB

originalBBpart2193:                               ; preds = %originalBB191
  br label %687, !dbg !2972, !llvm.loop !2976

726:                                              ; preds = %originalBBpart2189
  %727 = load i32, i32* @x.31
  %728 = load i32, i32* @y.32
  %729 = sub i32 %727, 1
  %730 = mul i32 %727, %729
  %731 = urem i32 %730, 2
  %732 = icmp eq i32 %731, 0
  %733 = icmp slt i32 %728, 10
  %734 = or i1 %732, %733
  br i1 %734, label %originalBB195, label %originalBB195alteredBB

originalBB195:                                    ; preds = %726, %originalBB195alteredBB
  %735 = load i8*, i8** %34, align 8, !dbg !2978
  %736 = getelementptr inbounds i8, i8* %735, i64 1, !dbg !2979
  store i8 0, i8* %736, align 1, !dbg !2980
  %737 = load i8*, i8** %29, align 8, !dbg !2981
  %738 = call i32 @puts(i8* %737), !dbg !2982
  %739 = load i8*, i8** %29, align 8, !dbg !2983
  call void @free(i8* %739) #10, !dbg !2984
  %740 = load i8*, i8** %32, align 8, !dbg !2985
  call void @free(i8* %740) #10, !dbg !2986
  %741 = load i32, i32* @x.31
  %742 = load i32, i32* @y.32
  %743 = sub i32 %741, 1
  %744 = mul i32 %741, %743
  %745 = urem i32 %744, 2
  %746 = icmp eq i32 %745, 0
  %747 = icmp slt i32 %742, 10
  %748 = or i1 %746, %747
  br i1 %748, label %originalBBpart2197, label %originalBB195alteredBB

originalBBpart2197:                               ; preds = %originalBB195
  ret void, !dbg !2987

originalBBalteredBB:                              ; preds = %originalBB, %10
  %749 = alloca i32, align 4
  %750 = alloca i8*, align 8
  %751 = alloca i8, align 1
  %752 = alloca i32, align 4
  %753 = alloca i8*, align 8
  %754 = alloca i8*, align 8
  %755 = alloca i8*, align 8
  %756 = alloca i8*, align 8
  %757 = alloca i8*, align 8
  %758 = alloca i8*, align 8
  %759 = alloca i8*, align 8
  %760 = alloca [8 x i8], align 1
  %761 = alloca [13 x i8], align 1
  %762 = alloca i8*, align 8
  %763 = alloca i32, align 4
  %764 = alloca i8*, align 8
  store i32 %0, i32* %749, align 4
  call void @llvm.dbg.declare(metadata i32* %749, metadata !2988, metadata !DIExpression()), !dbg !2872
  store i8* %1, i8** %750, align 8
  call void @llvm.dbg.declare(metadata i8** %750, metadata !3089, metadata !DIExpression()), !dbg !2874
  store i8 %2, i8* %751, align 1
  call void @llvm.dbg.declare(metadata i8* %751, metadata !3090, metadata !DIExpression()), !dbg !2876
  store i32 %3, i32* %752, align 4
  call void @llvm.dbg.declare(metadata i32* %752, metadata !3091, metadata !DIExpression()), !dbg !2878
  store i8* %4, i8** %753, align 8
  call void @llvm.dbg.declare(metadata i8** %753, metadata !3092, metadata !DIExpression()), !dbg !2880
  store i8* %5, i8** %754, align 8
  call void @llvm.dbg.declare(metadata i8** %754, metadata !3093, metadata !DIExpression()), !dbg !2882
  store i8* %6, i8** %755, align 8
  call void @llvm.dbg.declare(metadata i8** %755, metadata !3094, metadata !DIExpression()), !dbg !2884
  store i8* %7, i8** %756, align 8
  call void @llvm.dbg.declare(metadata i8** %756, metadata !3095, metadata !DIExpression()), !dbg !2886
  store i8* %8, i8** %757, align 8
  call void @llvm.dbg.declare(metadata i8** %757, metadata !3096, metadata !DIExpression()), !dbg !2888
  store i8* %9, i8** %758, align 8
  call void @llvm.dbg.declare(metadata i8** %758, metadata !3097, metadata !DIExpression()), !dbg !2890
  call void @llvm.dbg.declare(metadata i8** %759, metadata !3098, metadata !DIExpression()), !dbg !2892
  call void @llvm.dbg.declare(metadata [8 x i8]* %760, metadata !3099, metadata !DIExpression()), !dbg !2895
  call void @llvm.dbg.declare(metadata [13 x i8]* %761, metadata !3100, metadata !DIExpression()), !dbg !2900
  call void @llvm.dbg.declare(metadata i8** %762, metadata !3101, metadata !DIExpression()), !dbg !2902
  call void @llvm.dbg.declare(metadata i32* %763, metadata !3102, metadata !DIExpression()), !dbg !2904
  %765 = load i8, i8* %751, align 1, !dbg !2905
  store i8 %765, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @print_line.mesg, i64 0, i64 1), align 1, !dbg !2906
  %766 = load i8, i8* @include_idle, align 1, !dbg !2907
  %767 = trunc i8 %766 to i1, !dbg !2907
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %46
  %768 = load i8, i8* @short_output, align 1, !dbg !2910
  %769 = trunc i8 %768 to i1, !dbg !2910
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %65
  %770 = load i8*, i8** %25, align 8, !dbg !2912
  %771 = call i64 @strlen(i8* %770) #13, !dbg !2913
  %772 = icmp ult i64 %771, 7, !dbg !2914
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %85
  %773 = getelementptr inbounds [8 x i8], [8 x i8]* %30, i64 0, i64 0, !dbg !2916
  %774 = load i8*, i8** %25, align 8, !dbg !2917
  %775 = call i32 (i8*, i8*, ...) @sprintf(i8* %773, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0), i8* %774) #10, !dbg !2918
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %105
  %776 = getelementptr inbounds [8 x i8], [8 x i8]* %30, i64 0, i64 0, !dbg !2919
  store i8 0, i8* %776, align 1, !dbg !2920
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %123
  %777 = load i8, i8* @short_output, align 1, !dbg !2921
  %778 = trunc i8 %777 to i1, !dbg !2921
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %142
  %779 = load i8*, i8** %26, align 8, !dbg !2924
  %780 = call i64 @strlen(i8* %779) #13, !dbg !2925
  %781 = icmp ult i64 %780, 12, !dbg !2926
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %162
  %782 = getelementptr inbounds [13 x i8], [13 x i8]* %31, i64 0, i64 0, !dbg !2928
  %783 = load i8*, i8** %26, align 8, !dbg !2929
  %784 = call i32 (i8*, i8*, ...) @sprintf(i8* %782, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), i8* %783) #10, !dbg !2930
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %182
  %785 = getelementptr inbounds [13 x i8], [13 x i8]* %31, i64 0, i64 0, !dbg !2931
  store i8 0, i8* %785, align 1, !dbg !2932
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %200
  %786 = load i8, i8* @include_exit, align 1, !dbg !2933
  %787 = trunc i8 %786 to i1, !dbg !2933
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %219
  %788 = load i8*, i8** %28, align 8, !dbg !2934
  %789 = call i64 @strlen(i8* %788) #13, !dbg !2934
  %790 = icmp ugt i64 12, %789, !dbg !2934
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %239
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %256
  %791 = load i8*, i8** %28, align 8, !dbg !2934
  %792 = call i64 @strlen(i8* %791) #13, !dbg !2934
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %275
  %_ = sub i64 0, 1
  %gen = add i64 %_, %276
  %_51 = sub i64 0, 1
  %gen52 = add i64 %_51, %276
  %793 = add i64 1, %276, !dbg !2935
  %_53 = sub i64 %793, 1
  %gen54 = mul i64 %_53, 1
  %_55 = sub i64 0, %793
  %gen56 = add i64 %_55, 1
  %_57 = sub i64 0, %793
  %gen58 = add i64 %_57, 1
  %_59 = shl i64 %793, 1
  %_60 = shl i64 %793, 1
  %794 = add i64 %793, 1, !dbg !2936
  br label %originalBB50

originalBB64alteredBB:                            ; preds = %originalBB64, %295
  br label %originalBB64

originalBB68alteredBB:                            ; preds = %originalBB68, %312
  %795 = call noalias i8* @xmalloc(i64 %313), !dbg !2937
  store i8* %795, i8** %32, align 8, !dbg !2938
  %796 = load i8, i8* @include_exit, align 1, !dbg !2939
  %797 = trunc i8 %796 to i1, !dbg !2939
  br label %originalBB68

originalBB72alteredBB:                            ; preds = %originalBB72, %333
  %798 = load i8*, i8** %32, align 8, !dbg !2942
  %799 = load i8*, i8** %28, align 8, !dbg !2943
  %800 = call i32 (i8*, i8*, ...) @sprintf(i8* %798, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.71, i64 0, i64 0), i8* %799) #10, !dbg !2944
  br label %originalBB72

originalBB76alteredBB:                            ; preds = %originalBB76, %353
  %801 = load i8*, i8** %32, align 8, !dbg !2945
  store i8 0, i8* %801, align 1, !dbg !2946
  br label %originalBB76

originalBB80alteredBB:                            ; preds = %originalBB80, %371
  %802 = load i32, i32* %19, align 4, !dbg !2947
  %803 = load i8*, i8** %20, align 8, !dbg !2948
  %804 = icmp ne i8* %803, null, !dbg !2948
  br label %originalBB80

originalBB84alteredBB:                            ; preds = %originalBB84, %391
  %805 = load i8*, i8** %20, align 8, !dbg !2949
  br label %originalBB84

originalBB88alteredBB:                            ; preds = %originalBB88, %409
  br label %originalBB88

originalBB92alteredBB:                            ; preds = %originalBB92, %426
  %806 = load i8, i8* @include_mesg, align 1, !dbg !2950
  %807 = trunc i8 %806 to i1, !dbg !2950
  %808 = zext i1 %807 to i64, !dbg !2950
  %809 = select i1 %807, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @print_line.mesg, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !2950
  %810 = load i32, i32* %22, align 4, !dbg !2951
  %811 = load i8*, i8** %23, align 8, !dbg !2952
  %812 = load i32, i32* @time_format_width, align 4, !dbg !2953
  %813 = load i8*, i8** %24, align 8, !dbg !2954
  %814 = getelementptr inbounds [8 x i8], [8 x i8]* %30, i64 0, i64 0, !dbg !2955
  %815 = getelementptr inbounds [13 x i8], [13 x i8]* %31, i64 0, i64 0, !dbg !2956
  %816 = load i8*, i8** %27, align 8, !dbg !2957
  %817 = load i8*, i8** %32, align 8, !dbg !2958
  %818 = call i32 (i8**, i8*, ...) @asprintf(i8** %29, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.72, i64 0, i64 0), i32 %380, i8* %427, i8* %809, i32 %810, i8* %811, i32 %812, i8* %813, i8* %814, i8* %815, i8* %816, i8* %817) #10, !dbg !2959
  store i32 %818, i32* %33, align 4, !dbg !2960
  %819 = load i32, i32* %33, align 4, !dbg !2961
  br label %originalBB92

originalBB96alteredBB:                            ; preds = %originalBB96, %458
  %collatzVaralteredBB = alloca i32
  br label %originalBB96

originalBB100alteredBB:                           ; preds = %originalBB100, %475
  %820 = load i32, i32* @inVal0
  %821 = icmp sgt i32 %820, 1
  br label %originalBB100

originalBB104alteredBB:                           ; preds = %originalBB104, %494
  store i32 21, i32* %collatzVar
  br label %originalBB104

originalBB108alteredBB:                           ; preds = %originalBB108, %511
  %822 = load i8**, i8*** @inVal1
  %823 = getelementptr inbounds i8*, i8** %822, i64 1
  %824 = load i8*, i8** %823
  %controlealteredBB = call i32 @controle(i8* %824, i32 -1)
  store i32 %controlealteredBB, i32* %collatzVar
  br label %originalBB108

originalBB112alteredBB:                           ; preds = %originalBB112, %531
  %825 = load i32, i32* %collatzVar
  %826 = icmp sgt i32 %825, 1
  br label %originalBB112

originalBB116alteredBB:                           ; preds = %originalBB116, %550
  %827 = load i32, i32* %collatzVar
  %_117 = sub i32 0, %827
  %gen118 = add i32 %_117, 2
  %_119 = shl i32 %827, 2
  %_120 = sub i32 0, %827
  %gen121 = add i32 %_120, 2
  %_122 = sub i32 0, %827
  %gen123 = add i32 %_122, 2
  %828 = srem i32 %827, 2
  %829 = icmp eq i32 %828, 0
  br label %originalBB116

originalBB127alteredBB:                           ; preds = %originalBB127, %570
  %830 = load i32, i32* %collatzVar
  %_128 = shl i32 %830, 2
  %_129 = shl i32 %830, 2
  %_130 = shl i32 %830, 2
  %_131 = sub i32 %830, 2
  %gen132 = mul i32 %_131, 2
  %831 = sdiv i32 %830, 2
  store i32 %831, i32* %collatzVar
  br label %originalBB127

originalBB136alteredBB:                           ; preds = %originalBB136, %589
  %832 = load i32, i32* %collatzVar
  %_137 = sub i32 0, %832
  %gen138 = add i32 %_137, 3
  %_139 = sub i32 %832, 3
  %gen140 = mul i32 %_139, 3
  %_141 = shl i32 %832, 3
  %_142 = shl i32 %832, 3
  %833 = mul i32 %832, 3
  %_143 = shl i32 %833, 1
  %_144 = shl i32 %833, 1
  %_145 = shl i32 %833, 1
  %_146 = sub i32 %833, 1
  %gen147 = mul i32 %_146, 1
  %834 = add i32 %833, 1
  store i32 %834, i32* %collatzVar
  br label %originalBB136

originalBB151alteredBB:                           ; preds = %originalBB151, %609
  %835 = load i32, i32* %collatzVar
  %_152 = sub i32 0, %449
  %gen153 = add i32 %_152, %835
  %_154 = sub i32 0, %449
  %gen155 = add i32 %_154, %835
  %_156 = sub i32 %449, %835
  %gen157 = mul i32 %_156, %835
  %_158 = sub i32 0, %449
  %gen159 = add i32 %_158, %835
  %836 = sub i32 %449, %835
  %837 = icmp sgt i32 %836, -3
  br label %originalBB151

originalBB163alteredBB:                           ; preds = %originalBB163, %629
  %838 = load i32, i32* %collatzVar
  %_164 = sub i32 0, %449
  %gen165 = add i32 %_164, %838
  %_166 = shl i32 %449, %838
  %_167 = shl i32 %449, %838
  %_168 = sub i32 %449, %838
  %gen169 = mul i32 %_168, %838
  %_170 = sub i32 0, %449
  %gen171 = add i32 %_170, %838
  %_172 = sub i32 0, %449
  %gen173 = add i32 %_172, %838
  %_174 = sub i32 %449, %838
  %gen175 = mul i32 %_174, %838
  %839 = add i32 %449, %838
  %840 = icmp slt i32 %839, 1
  br label %originalBB163

originalBB179alteredBB:                           ; preds = %originalBB179, %649
  call void @xalloc_die() #14, !dbg !2964
  br label %originalBB179

originalBB183alteredBB:                           ; preds = %originalBB183, %666
  %841 = load i8*, i8** %29, align 8, !dbg !2968
  %842 = load i8*, i8** %29, align 8, !dbg !2969
  %843 = call i64 @strlen(i8* %842) #13, !dbg !2970
  %844 = getelementptr inbounds i8, i8* %841, i64 %843, !dbg !2971
  store i8* %844, i8** %34, align 8, !dbg !2967
  br label %originalBB183

originalBB187alteredBB:                           ; preds = %originalBB187, %687
  %845 = load i8*, i8** %34, align 8, !dbg !2973
  %846 = getelementptr inbounds i8, i8* %845, i32 -1, !dbg !2973
  store i8* %846, i8** %34, align 8, !dbg !2973
  %847 = load i8, i8* %846, align 1, !dbg !2974
  %848 = sext i8 %847 to i32, !dbg !2974
  %849 = icmp eq i32 %848, 32, !dbg !2975
  br label %originalBB187

originalBB191alteredBB:                           ; preds = %originalBB191, %709
  br label %originalBB191

originalBB195alteredBB:                           ; preds = %originalBB195, %726
  %850 = load i8*, i8** %34, align 8, !dbg !2978
  %851 = getelementptr inbounds i8, i8* %850, i64 1, !dbg !2979
  store i8 0, i8* %851, align 1, !dbg !2980
  %852 = load i8*, i8** %29, align 8, !dbg !2981
  %853 = call i32 @puts(i8* %852), !dbg !2982
  %854 = load i8*, i8** %29, align 8, !dbg !2983
  call void @free(i8* %854) #10, !dbg !2984
  %855 = load i8*, i8** %32, align 8, !dbg !2985
  call void @free(i8* %855) #10, !dbg !2986
  br label %originalBB195
}

; Function Attrs: nounwind
declare dso_local i32 @asprintf(i8**, i8*, ...) #2

declare dso_local i32 @puts(i8*) #3

; Function Attrs: nounwind
declare dso_local %struct.tm* @localtime(i64*) #2

; Function Attrs: nounwind
declare dso_local i64 @strftime(i8*, i64, i8*, %struct.tm*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @timetostr(i64, i8*) #4 !dbg !3103 {
  %3 = load i32, i32* @x.33
  %4 = load i32, i32* @y.34
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  store i64 %0, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !3106, metadata !DIExpression()), !dbg !3107
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !3108, metadata !DIExpression()), !dbg !3109
  %13 = load i64, i64* %11, align 8, !dbg !3110
  %14 = load i8*, i8** %12, align 8, !dbg !3111
  %15 = call i8* @imaxtostr(i64 %13, i8* %14), !dbg !3112
  %16 = load i32, i32* @x.33
  %17 = load i32, i32* @y.34
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %15, !dbg !3113

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca i64, align 8
  %25 = alloca i8*, align 8
  store i64 %0, i64* %24, align 8
  call void @llvm.dbg.declare(metadata i64* %24, metadata !3114, metadata !DIExpression()), !dbg !3107
  store i8* %1, i8** %25, align 8
  call void @llvm.dbg.declare(metadata i8** %25, metadata !3216, metadata !DIExpression()), !dbg !3109
  %26 = load i64, i64* %24, align 8, !dbg !3110
  %27 = load i8*, i8** %25, align 8, !dbg !3111
  %28 = call i8* @imaxtostr(i64 %26, i8* %27), !dbg !3112
  br label %originalBB
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @strncat(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @stpcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @stzncpy(i8* noalias, i8* noalias, i64) #4 !dbg !3217 {
  %4 = load i32, i32* @x.35
  %5 = load i32, i32* @y.36
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i8*, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !3222, metadata !DIExpression()), !dbg !3223
  store i8* %1, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !3224, metadata !DIExpression()), !dbg !3225
  store i64 %2, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !3226, metadata !DIExpression()), !dbg !3227
  call void @llvm.dbg.declare(metadata i8** %15, metadata !3228, metadata !DIExpression()), !dbg !3229
  %16 = load i8*, i8** %13, align 8, !dbg !3230
  %17 = load i64, i64* %14, align 8, !dbg !3231
  %18 = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !3232
  store i8* %18, i8** %15, align 8, !dbg !3229
  %19 = load i32, i32* @x.35
  %20 = load i32, i32* @y.36
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27, !dbg !3233

27:                                               ; preds = %originalBBpart216, %originalBBpart2
  %28 = load i32, i32* @x.35
  %29 = load i32, i32* @y.36
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load i8*, i8** %13, align 8, !dbg !3234
  %37 = load i8*, i8** %15, align 8, !dbg !3235
  %38 = icmp ult i8* %36, %37, !dbg !3236
  %39 = load i32, i32* @x.35
  %40 = load i32, i32* @y.36
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %38, label %47, label %68, !dbg !3237

47:                                               ; preds = %originalBBpart24
  %48 = load i32, i32* @x.35
  %49 = load i32, i32* @y.36
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %47, %originalBB6alteredBB
  %56 = load i8*, i8** %13, align 8, !dbg !3238
  %57 = load i8, i8* %56, align 1, !dbg !3239
  %58 = sext i8 %57 to i32, !dbg !3239
  %59 = icmp ne i32 %58, 0, !dbg !3237
  %60 = load i32, i32* @x.35
  %61 = load i32, i32* @y.36
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %68

68:                                               ; preds = %originalBBpart28, %originalBBpart24
  %69 = phi i1 [ false, %originalBBpart24 ], [ %59, %originalBBpart28 ], !dbg !3240
  %70 = load i32, i32* @x.35
  %71 = load i32, i32* @y.36
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %68, %originalBB10alteredBB
  %78 = load i32, i32* @x.35
  %79 = load i32, i32* @y.36
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %69, label %86, label %108, !dbg !3233

86:                                               ; preds = %originalBBpart212
  %87 = load i32, i32* @x.35
  %88 = load i32, i32* @y.36
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %86, %originalBB14alteredBB
  %95 = load i8*, i8** %13, align 8, !dbg !3241
  %96 = getelementptr inbounds i8, i8* %95, i32 1, !dbg !3241
  store i8* %96, i8** %13, align 8, !dbg !3241
  %97 = load i8, i8* %95, align 1, !dbg !3242
  %98 = load i8*, i8** %12, align 8, !dbg !3243
  %99 = getelementptr inbounds i8, i8* %98, i32 1, !dbg !3243
  store i8* %99, i8** %12, align 8, !dbg !3243
  store i8 %97, i8* %98, align 1, !dbg !3244
  %100 = load i32, i32* @x.35
  %101 = load i32, i32* @y.36
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %27, !dbg !3233, !llvm.loop !3245

108:                                              ; preds = %originalBBpart212
  %109 = load i32, i32* @x.35
  %110 = load i32, i32* @y.36
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %108, %originalBB18alteredBB
  %117 = load i8*, i8** %12, align 8, !dbg !3246
  store i8 0, i8* %117, align 1, !dbg !3247
  %118 = load i8*, i8** %12, align 8, !dbg !3248
  %119 = load i32, i32* @x.35
  %120 = load i32, i32* @y.36
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  ret i8* %118, !dbg !3249

originalBBalteredBB:                              ; preds = %originalBB, %3
  %127 = alloca i8*, align 8
  %128 = alloca i8*, align 8
  %129 = alloca i64, align 8
  %130 = alloca i8*, align 8
  store i8* %0, i8** %127, align 8
  call void @llvm.dbg.declare(metadata i8** %127, metadata !3250, metadata !DIExpression()), !dbg !3223
  store i8* %1, i8** %128, align 8
  call void @llvm.dbg.declare(metadata i8** %128, metadata !3352, metadata !DIExpression()), !dbg !3225
  store i64 %2, i64* %129, align 8
  call void @llvm.dbg.declare(metadata i64* %129, metadata !3353, metadata !DIExpression()), !dbg !3227
  call void @llvm.dbg.declare(metadata i8** %130, metadata !3354, metadata !DIExpression()), !dbg !3229
  %131 = load i8*, i8** %128, align 8, !dbg !3230
  %132 = load i64, i64* %129, align 8, !dbg !3231
  %133 = getelementptr inbounds i8, i8* %131, i64 %132, !dbg !3232
  store i8* %133, i8** %130, align 8, !dbg !3229
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %134 = load i8*, i8** %13, align 8, !dbg !3234
  %135 = load i8*, i8** %15, align 8, !dbg !3235
  %136 = icmp ult i8* %134, %135, !dbg !3236
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %47
  %137 = load i8*, i8** %13, align 8, !dbg !3238
  %138 = load i8, i8* %137, align 1, !dbg !3239
  %139 = sext i8 %138 to i32, !dbg !3239
  %140 = icmp ne i32 %139, 0, !dbg !3237
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %68
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %86
  %141 = load i8*, i8** %13, align 8, !dbg !3241
  %142 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3241
  store i8* %142, i8** %13, align 8, !dbg !3241
  %143 = load i8, i8* %141, align 1, !dbg !3242
  %144 = load i8*, i8** %12, align 8, !dbg !3243
  %145 = getelementptr inbounds i8, i8* %144, i32 1, !dbg !3243
  store i8* %145, i8** %12, align 8, !dbg !3243
  store i8 %143, i8* %144, align 1, !dbg !3244
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %108
  %146 = load i8*, i8** %12, align 8, !dbg !3246
  store i8 0, i8* %146, align 1, !dbg !3247
  %147 = load i8*, i8** %12, align 8, !dbg !3248
  br label %originalBB18
}

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_tty_writable(%struct.stat*) #4 !dbg !3355 {
  %2 = load i32, i32* @x.37
  %3 = load i32, i32* @y.38
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.stat*, align 8
  store %struct.stat* %0, %struct.stat** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %10, metadata !3360, metadata !DIExpression()), !dbg !3361
  %11 = load %struct.stat*, %struct.stat** %10, align 8, !dbg !3362
  %12 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 3, !dbg !3363
  %13 = load i32, i32* %12, align 8, !dbg !3363
  %14 = and i32 %13, 16, !dbg !3364
  %15 = icmp ne i32 %14, 0, !dbg !3362
  %16 = load i32, i32* @x.37
  %17 = load i32, i32* @y.38
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i1 %15, !dbg !3365

originalBBalteredBB:                              ; preds = %originalBB, %1
  %24 = alloca %struct.stat*, align 8
  store %struct.stat* %0, %struct.stat** %24, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %24, metadata !3366, metadata !DIExpression()), !dbg !3361
  %25 = load %struct.stat*, %struct.stat** %24, align 8, !dbg !3362
  %26 = getelementptr inbounds %struct.stat, %struct.stat* %25, i32 0, i32 3, !dbg !3363
  %27 = load i32, i32* %26, align 8, !dbg !3363
  %_ = sub i32 %27, 16
  %gen = mul i32 %_, 16
  %_1 = shl i32 %27, 16
  %_2 = sub i32 0, %27
  %gen3 = add i32 %_2, 16
  %_4 = sub i32 0, %27
  %gen5 = add i32 %_4, 16
  %_6 = sub i32 0, %27
  %gen7 = add i32 %_6, 16
  %_8 = sub i32 0, %27
  %gen9 = add i32 %_8, 16
  %28 = and i32 %27, 16, !dbg !3364
  %29 = icmp ne i32 %28, 0, !dbg !3362
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @idle_string(i64, i64) #4 !dbg !115 {
  %3 = load i32, i32* @x.39
  %4 = load i32, i32* @y.40
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  store i64 %0, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !3493, metadata !DIExpression()), !dbg !3494
  store i64 %1, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !3495, metadata !DIExpression()), !dbg !3496
  %15 = load i64, i64* @idle_string.now, align 8, !dbg !3497
  %16 = icmp eq i64 %15, -9223372036854775808, !dbg !3499
  %17 = load i32, i32* @x.39
  %18 = load i32, i32* @y.40
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %43, !dbg !3500

25:                                               ; preds = %originalBBpart2
  %26 = load i32, i32* @x.39
  %27 = load i32, i32* @y.40
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %25, %originalBB1alteredBB
  %34 = call i64 @time(i64* @idle_string.now) #10, !dbg !3501
  %35 = load i32, i32* @x.39
  %36 = load i32, i32* @y.40
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %43, !dbg !3501

43:                                               ; preds = %originalBBpart24, %originalBBpart2
  %44 = load i64, i64* %13, align 8, !dbg !3502
  %45 = load i64, i64* %12, align 8, !dbg !3504
  %46 = icmp slt i64 %44, %45, !dbg !3505
  br i1 %46, label %47, label %205, !dbg !3506

47:                                               ; preds = %43
  %48 = load i32, i32* @x.39
  %49 = load i32, i32* @y.40
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %47, %originalBB6alteredBB
  %56 = load i64, i64* @idle_string.now, align 8, !dbg !3507
  %57 = sub nsw i64 %56, 86400, !dbg !3508
  %58 = load i64, i64* %12, align 8, !dbg !3509
  %59 = icmp slt i64 %57, %58, !dbg !3510
  %60 = load i32, i32* @x.39
  %61 = load i32, i32* @y.40
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart29, label %originalBB6alteredBB

originalBBpart29:                                 ; preds = %originalBB6
  br i1 %59, label %68, label %205, !dbg !3511

68:                                               ; preds = %originalBBpart29
  %69 = load i32, i32* @x.39
  %70 = load i32, i32* @y.40
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %68, %originalBB11alteredBB
  %77 = load i64, i64* %12, align 8, !dbg !3512
  %78 = load i64, i64* @idle_string.now, align 8, !dbg !3513
  %79 = icmp sle i64 %77, %78, !dbg !3514
  %80 = load i32, i32* @x.39
  %81 = load i32, i32* @y.40
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  br i1 %79, label %88, label %205, !dbg !3515

88:                                               ; preds = %originalBBpart213
  call void @llvm.dbg.declare(metadata i32* %14, metadata !3516, metadata !DIExpression()), !dbg !3518
  %89 = load i32, i32* @x.39
  %90 = load i32, i32* @y.40
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %88, %originalBB15alteredBB
  %97 = load i64, i64* @idle_string.now, align 8, !dbg !3519
  %98 = load i64, i64* %12, align 8, !dbg !3520
  %99 = sub nsw i64 %97, %98, !dbg !3521
  %100 = trunc i64 %99 to i32, !dbg !3519
  store i32 %100, i32* %14, align 4, !dbg !3518
  %101 = load i32, i32* %14, align 4, !dbg !3522
  %102 = icmp slt i32 %101, 60, !dbg !3524
  %103 = load i32, i32* @x.39
  %104 = load i32, i32* @y.40
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart227, label %originalBB15alteredBB

originalBBpart227:                                ; preds = %originalBB15
  br i1 %102, label %111, label %128, !dbg !3525

111:                                              ; preds = %originalBBpart227
  %112 = load i32, i32* @x.39
  %113 = load i32, i32* @y.40
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %111, %originalBB29alteredBB
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i64 0, i64 0), i8** %11, align 8, !dbg !3526
  %120 = load i32, i32* @x.39
  %121 = load i32, i32* @y.40
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br label %223, !dbg !3526

128:                                              ; preds = %originalBBpart227
  %129 = load i32, i32* @x.39
  %130 = load i32, i32* @y.40
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %128, %originalBB33alteredBB
  %137 = load i32, i32* %14, align 4, !dbg !3527
  %138 = sdiv i32 %137, 3600, !dbg !3527
  %139 = icmp slt i32 %138, 24, !dbg !3527
  %140 = load i32, i32* @x.39
  %141 = load i32, i32* @y.40
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBBpart237, label %originalBB33alteredBB

originalBBpart237:                                ; preds = %originalBB33
  br i1 %139, label %148, label %165, !dbg !3531

148:                                              ; preds = %originalBBpart237
  %149 = load i32, i32* @x.39
  %150 = load i32, i32* @y.40
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %148, %originalBB39alteredBB
  %157 = load i32, i32* @x.39
  %158 = load i32, i32* @y.40
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  br label %182, !dbg !3531

165:                                              ; preds = %originalBBpart237
  %166 = load i32, i32* @x.39
  %167 = load i32, i32* @y.40
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %165, %originalBB43alteredBB
  call void @__assert_fail(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.81, i64 0, i64 0), i32 205, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__PRETTY_FUNCTION__.idle_string, i64 0, i64 0)) #12, !dbg !3527
  %174 = load i32, i32* @x.39
  %175 = load i32, i32* @y.40
  %176 = sub i32 %174, 1
  %177 = mul i32 %174, %176
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %179, %180
  br i1 %181, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  unreachable, !dbg !3527

182:                                              ; preds = %originalBBpart241
  %183 = load i32, i32* @x.39
  %184 = load i32, i32* @y.40
  %185 = sub i32 %183, 1
  %186 = mul i32 %183, %185
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %188, %189
  br i1 %190, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %182, %originalBB47alteredBB
  %191 = load i32, i32* %14, align 4, !dbg !3532
  %192 = sdiv i32 %191, 3600, !dbg !3533
  %193 = load i32, i32* %14, align 4, !dbg !3534
  %194 = srem i32 %193, 3600, !dbg !3535
  %195 = sdiv i32 %194, 60, !dbg !3536
  %196 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @idle_string.idle_hhmm, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.82, i64 0, i64 0), i32 %192, i32 %195) #10, !dbg !3537
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @idle_string.idle_hhmm, i64 0, i64 0), i8** %11, align 8, !dbg !3538
  %197 = load i32, i32* @x.39
  %198 = load i32, i32* @y.40
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBBpart278, label %originalBB47alteredBB

originalBBpart278:                                ; preds = %originalBB47
  br label %223, !dbg !3538

205:                                              ; preds = %originalBBpart213, %originalBBpart29, %43
  %206 = load i32, i32* @x.39
  %207 = load i32, i32* @y.40
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %205, %originalBB80alteredBB
  %214 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i64 0, i64 0)) #10, !dbg !3539
  store i8* %214, i8** %11, align 8, !dbg !3540
  %215 = load i32, i32* @x.39
  %216 = load i32, i32* @y.40
  %217 = sub i32 %215, 1
  %218 = mul i32 %215, %217
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %220, %221
  br i1 %222, label %originalBBpart282, label %originalBB80alteredBB

originalBBpart282:                                ; preds = %originalBB80
  br label %223, !dbg !3540

223:                                              ; preds = %originalBBpart282, %originalBBpart278, %originalBBpart231
  %224 = load i32, i32* @x.39
  %225 = load i32, i32* @y.40
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBB84, label %originalBB84alteredBB

originalBB84:                                     ; preds = %223, %originalBB84alteredBB
  %232 = load i8*, i8** %11, align 8, !dbg !3541
  %233 = load i32, i32* @x.39
  %234 = load i32, i32* @y.40
  %235 = sub i32 %233, 1
  %236 = mul i32 %233, %235
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %238, %239
  br i1 %240, label %originalBBpart286, label %originalBB84alteredBB

originalBBpart286:                                ; preds = %originalBB84
  ret i8* %232, !dbg !3541

originalBBalteredBB:                              ; preds = %originalBB, %2
  %241 = alloca i8*, align 8
  %242 = alloca i64, align 8
  %243 = alloca i64, align 8
  %244 = alloca i32, align 4
  store i64 %0, i64* %242, align 8
  call void @llvm.dbg.declare(metadata i64* %242, metadata !3542, metadata !DIExpression()), !dbg !3494
  store i64 %1, i64* %243, align 8
  call void @llvm.dbg.declare(metadata i64* %243, metadata !3643, metadata !DIExpression()), !dbg !3496
  %245 = load i64, i64* @idle_string.now, align 8, !dbg !3497
  %246 = icmp eq i64 %245, -9223372036854775808, !dbg !3499
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  %247 = call i64 @time(i64* @idle_string.now) #10, !dbg !3501
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %47
  %248 = load i64, i64* @idle_string.now, align 8, !dbg !3507
  %_ = sub i64 %248, 86400
  %gen = mul i64 %_, 86400
  %_7 = shl i64 %248, 86400
  %249 = sub nsw i64 %248, 86400, !dbg !3508
  %250 = load i64, i64* %12, align 8, !dbg !3509
  %251 = icmp slt i64 %249, %250, !dbg !3510
  br label %originalBB6

originalBB11alteredBB:                            ; preds = %originalBB11, %68
  %252 = load i64, i64* %12, align 8, !dbg !3512
  %253 = load i64, i64* @idle_string.now, align 8, !dbg !3513
  %254 = icmp sle i64 %252, %253, !dbg !3514
  br label %originalBB11

originalBB15alteredBB:                            ; preds = %originalBB15, %88
  %255 = load i64, i64* @idle_string.now, align 8, !dbg !3519
  %256 = load i64, i64* %12, align 8, !dbg !3520
  %_16 = shl i64 %255, %256
  %_17 = sub i64 %255, %256
  %gen18 = mul i64 %_17, %256
  %_19 = sub i64 0, %255
  %gen20 = add i64 %_19, %256
  %_21 = shl i64 %255, %256
  %_22 = shl i64 %255, %256
  %_23 = sub i64 0, %255
  %gen24 = add i64 %_23, %256
  %_25 = shl i64 %255, %256
  %257 = sub nsw i64 %255, %256, !dbg !3521
  %258 = trunc i64 %257 to i32, !dbg !3519
  store i32 %258, i32* %14, align 4, !dbg !3518
  %259 = load i32, i32* %14, align 4, !dbg !3522
  %260 = icmp slt i32 %259, 60, !dbg !3524
  br label %originalBB15

originalBB29alteredBB:                            ; preds = %originalBB29, %111
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i64 0, i64 0), i8** %11, align 8, !dbg !3526
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %128
  %261 = load i32, i32* %14, align 4, !dbg !3527
  %_34 = sub i32 %261, 3600
  %gen35 = mul i32 %_34, 3600
  %262 = sdiv i32 %261, 3600, !dbg !3527
  %263 = icmp slt i32 %262, 24, !dbg !3527
  br label %originalBB33

originalBB39alteredBB:                            ; preds = %originalBB39, %148
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %165
  call void @__assert_fail(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.81, i64 0, i64 0), i32 205, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__PRETTY_FUNCTION__.idle_string, i64 0, i64 0)) #12, !dbg !3527
  br label %originalBB43

originalBB47alteredBB:                            ; preds = %originalBB47, %182
  %264 = load i32, i32* %14, align 4, !dbg !3532
  %_48 = sub i32 %264, 3600
  %gen49 = mul i32 %_48, 3600
  %_50 = shl i32 %264, 3600
  %_51 = sub i32 %264, 3600
  %gen52 = mul i32 %_51, 3600
  %_53 = shl i32 %264, 3600
  %_54 = shl i32 %264, 3600
  %_55 = sub i32 0, %264
  %gen56 = add i32 %_55, 3600
  %_57 = sub i32 0, %264
  %gen58 = add i32 %_57, 3600
  %_59 = sub i32 0, %264
  %gen60 = add i32 %_59, 3600
  %265 = sdiv i32 %264, 3600, !dbg !3533
  %266 = load i32, i32* %14, align 4, !dbg !3534
  %_61 = sub i32 %266, 3600
  %gen62 = mul i32 %_61, 3600
  %_63 = sub i32 %266, 3600
  %gen64 = mul i32 %_63, 3600
  %_65 = sub i32 0, %266
  %gen66 = add i32 %_65, 3600
  %_67 = shl i32 %266, 3600
  %267 = srem i32 %266, 3600, !dbg !3535
  %_68 = sub i32 %267, 60
  %gen69 = mul i32 %_68, 60
  %_70 = sub i32 %267, 60
  %gen71 = mul i32 %_70, 60
  %_72 = sub i32 0, %267
  %gen73 = add i32 %_72, 60
  %_74 = shl i32 %267, 60
  %_75 = sub i32 0, %267
  %gen76 = add i32 %_75, 60
  %268 = sdiv i32 %267, 60, !dbg !3536
  %269 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @idle_string.idle_hhmm, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.82, i64 0, i64 0), i32 %265, i32 %268) #10, !dbg !3537
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @idle_string.idle_hhmm, i64 0, i64 0), i8** %11, align 8, !dbg !3538
  br label %originalBB47

originalBB80alteredBB:                            ; preds = %originalBB80, %205
  %270 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i64 0, i64 0)) #10, !dbg !3539
  store i8* %270, i8** %11, align 8, !dbg !3540
  br label %originalBB80

originalBB84alteredBB:                            ; preds = %originalBB84, %223
  %271 = load i8*, i8** %11, align 8, !dbg !3541
  br label %originalBB84
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #7

; Function Attrs: nounwind
declare dso_local i64 @time(i64*) #2

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @c_isprint(i32) #4 !dbg !3644 {
  %2 = load i32, i32* @x.41
  %3 = load i32, i32* @y.42
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i1, align 1
  %11 = alloca i32, align 4
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3648, metadata !DIExpression()), !dbg !3649
  %12 = load i32, i32* %11, align 4, !dbg !3650
  %13 = load i32, i32* @x.41
  %14 = load i32, i32* @y.42
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  switch i32 %12, label %22 [
    i32 32, label %21
    i32 48, label %21
    i32 49, label %21
    i32 50, label %21
    i32 51, label %21
    i32 52, label %21
    i32 53, label %21
    i32 54, label %21
    i32 55, label %21
    i32 56, label %21
    i32 57, label %21
    i32 97, label %21
    i32 98, label %21
    i32 99, label %21
    i32 100, label %21
    i32 101, label %21
    i32 102, label %21
    i32 103, label %21
    i32 104, label %21
    i32 105, label %21
    i32 106, label %21
    i32 107, label %21
    i32 108, label %21
    i32 109, label %21
    i32 110, label %21
    i32 111, label %21
    i32 112, label %21
    i32 113, label %21
    i32 114, label %21
    i32 115, label %21
    i32 116, label %21
    i32 117, label %21
    i32 118, label %21
    i32 119, label %21
    i32 120, label %21
    i32 121, label %21
    i32 122, label %21
    i32 33, label %21
    i32 34, label %21
    i32 35, label %21
    i32 36, label %21
    i32 37, label %21
    i32 38, label %21
    i32 39, label %21
    i32 40, label %21
    i32 41, label %21
    i32 42, label %21
    i32 43, label %21
    i32 44, label %21
    i32 45, label %21
    i32 46, label %21
    i32 47, label %21
    i32 58, label %21
    i32 59, label %21
    i32 60, label %21
    i32 61, label %21
    i32 62, label %21
    i32 63, label %21
    i32 64, label %21
    i32 91, label %21
    i32 92, label %21
    i32 93, label %21
    i32 94, label %21
    i32 95, label %21
    i32 96, label %21
    i32 123, label %21
    i32 124, label %21
    i32 125, label %21
    i32 126, label %21
    i32 65, label %21
    i32 66, label %21
    i32 67, label %21
    i32 68, label %21
    i32 69, label %21
    i32 70, label %21
    i32 71, label %21
    i32 72, label %21
    i32 73, label %21
    i32 74, label %21
    i32 75, label %21
    i32 76, label %21
    i32 77, label %21
    i32 78, label %21
    i32 79, label %21
    i32 80, label %21
    i32 81, label %21
    i32 82, label %21
    i32 83, label %21
    i32 84, label %21
    i32 85, label %21
    i32 86, label %21
    i32 87, label %21
    i32 88, label %21
    i32 89, label %21
    i32 90, label %21
  ], !dbg !3651

21:                                               ; preds = %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2
  store i1 true, i1* %10, align 1, !dbg !3652
  br label %39, !dbg !3652

22:                                               ; preds = %originalBBpart2
  %23 = load i32, i32* @x.41
  %24 = load i32, i32* @y.42
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %22, %originalBB1alteredBB
  store i1 false, i1* %10, align 1, !dbg !3654
  %31 = load i32, i32* @x.41
  %32 = load i32, i32* @y.42
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %39, !dbg !3654

39:                                               ; preds = %originalBBpart24, %21
  %40 = load i32, i32* @x.41
  %41 = load i32, i32* @y.42
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %39, %originalBB6alteredBB
  %48 = load i1, i1* %10, align 1, !dbg !3655
  %49 = load i32, i32* @x.41
  %50 = load i32, i32* @y.42
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i1 %48, !dbg !3655

originalBBalteredBB:                              ; preds = %originalBB, %1
  %57 = alloca i1, align 1
  %58 = alloca i32, align 4
  store i32 %0, i32* %58, align 4
  call void @llvm.dbg.declare(metadata i32* %58, metadata !3656, metadata !DIExpression()), !dbg !3649
  %59 = load i32, i32* %58, align 4, !dbg !3650
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %22
  store i1 false, i1* %10, align 1, !dbg !3654
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %39
  %60 = load i1, i1* %10, align 1, !dbg !3655
  br label %originalBB6
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @c_tolower(i32) #4 !dbg !3659 {
  %2 = load i32, i32* @x.43
  %3 = load i32, i32* @y.44
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3662, metadata !DIExpression()), !dbg !3663
  %12 = load i32, i32* %11, align 4, !dbg !3664
  %13 = load i32, i32* @x.43
  %14 = load i32, i32* @y.44
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  switch i32 %12, label %41 [
    i32 65, label %21
    i32 66, label %21
    i32 67, label %21
    i32 68, label %21
    i32 69, label %21
    i32 70, label %21
    i32 71, label %21
    i32 72, label %21
    i32 73, label %21
    i32 74, label %21
    i32 75, label %21
    i32 76, label %21
    i32 77, label %21
    i32 78, label %21
    i32 79, label %21
    i32 80, label %21
    i32 81, label %21
    i32 82, label %21
    i32 83, label %21
    i32 84, label %21
    i32 85, label %21
    i32 86, label %21
    i32 87, label %21
    i32 88, label %21
    i32 89, label %21
    i32 90, label %21
  ], !dbg !3665

21:                                               ; preds = %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2
  %22 = load i32, i32* @x.43
  %23 = load i32, i32* @y.44
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  %30 = load i32, i32* %11, align 4, !dbg !3666
  %31 = sub nsw i32 %30, 65, !dbg !3668
  %32 = add nsw i32 %31, 97, !dbg !3669
  store i32 %32, i32* %10, align 4, !dbg !3670
  %33 = load i32, i32* @x.43
  %34 = load i32, i32* @y.44
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart27, label %originalBB1alteredBB

originalBBpart27:                                 ; preds = %originalBB1
  br label %59, !dbg !3670

41:                                               ; preds = %originalBBpart2
  %42 = load i32, i32* @x.43
  %43 = load i32, i32* @y.44
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB9, label %originalBB9alteredBB

originalBB9:                                      ; preds = %41, %originalBB9alteredBB
  %50 = load i32, i32* %11, align 4, !dbg !3671
  store i32 %50, i32* %10, align 4, !dbg !3672
  %51 = load i32, i32* @x.43
  %52 = load i32, i32* @y.44
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart211, label %originalBB9alteredBB

originalBBpart211:                                ; preds = %originalBB9
  br label %59, !dbg !3672

59:                                               ; preds = %originalBBpart211, %originalBBpart27
  %60 = load i32, i32* @x.43
  %61 = load i32, i32* @y.44
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %59, %originalBB13alteredBB
  %68 = load i32, i32* %10, align 4, !dbg !3673
  %69 = load i32, i32* @x.43
  %70 = load i32, i32* @y.44
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  ret i32 %68, !dbg !3673

originalBBalteredBB:                              ; preds = %originalBB, %1
  %77 = alloca i32, align 4
  %78 = alloca i32, align 4
  store i32 %0, i32* %78, align 4
  call void @llvm.dbg.declare(metadata i32* %78, metadata !3674, metadata !DIExpression()), !dbg !3663
  %79 = load i32, i32* %78, align 4, !dbg !3664
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  %80 = load i32, i32* %11, align 4, !dbg !3666
  %_ = sub i32 0, %80
  %gen = add i32 %_, 65
  %81 = sub nsw i32 %80, 65, !dbg !3668
  %_2 = sub i32 0, %81
  %gen3 = add i32 %_2, 97
  %_4 = sub i32 %81, 97
  %gen5 = mul i32 %_4, 97
  %82 = add nsw i32 %81, 97, !dbg !3669
  store i32 %82, i32* %10, align 4, !dbg !3670
  br label %originalBB1

originalBB9alteredBB:                             ; preds = %originalBB9, %41
  %83 = load i32, i32* %11, align 4, !dbg !3671
  store i32 %83, i32* %10, align 4, !dbg !3672
  br label %originalBB9

originalBB13alteredBB:                            ; preds = %originalBB13, %59
  %84 = load i32, i32* %10, align 4, !dbg !3673
  br label %originalBB13
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @canon_host(i8*) #4 !dbg !3677 {
  %2 = load i32, i32* @x.45
  %3 = load i32, i32* @y.46
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !3680, metadata !DIExpression()), !dbg !3681
  %11 = load i8*, i8** %10, align 8, !dbg !3682
  %12 = call noalias i8* @canon_host_r(i8* %11, i32* @last_cherror), !dbg !3683
  %13 = load i32, i32* @x.45
  %14 = load i32, i32* @y.46
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !3684

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i8*, align 8
  store i8* %0, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !3685, metadata !DIExpression()), !dbg !3681
  %22 = load i8*, i8** %21, align 8, !dbg !3682
  %23 = call noalias i8* @canon_host_r(i8* %22, i32* @last_cherror), !dbg !3683
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @canon_host_r(i8*, i32*) #4 !dbg !165 {
  %3 = alloca i8*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.addrinfo*, align 8
  %7 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3710, metadata !DIExpression()), !dbg !3711
  store i32* %1, i32** %4, align 8
  call void @llvm.dbg.declare(metadata i32** %4, metadata !3712, metadata !DIExpression()), !dbg !3713
  call void @llvm.dbg.declare(metadata i8** %5, metadata !3714, metadata !DIExpression()), !dbg !3715
  store i8* null, i8** %5, align 8, !dbg !3715
  call void @llvm.dbg.declare(metadata %struct.addrinfo** %6, metadata !3716, metadata !DIExpression()), !dbg !3717
  store %struct.addrinfo* null, %struct.addrinfo** %6, align 8, !dbg !3717
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3718, metadata !DIExpression()), !dbg !3719
  store i32 2, i32* getelementptr inbounds (%struct.addrinfo, %struct.addrinfo* @canon_host_r.hints, i32 0, i32 0), align 8, !dbg !3720
  %8 = load i8*, i8** %3, align 8, !dbg !3721
  %9 = call i32 @getaddrinfo(i8* %8, i8* null, %struct.addrinfo* @canon_host_r.hints, %struct.addrinfo** %6), !dbg !3722
  store i32 %9, i32* %7, align 4, !dbg !3723
  %10 = load i32, i32* %7, align 4, !dbg !3724
  %11 = icmp ne i32 %10, 0, !dbg !3724
  br i1 %11, label %147, label %12, !dbg !3726

12:                                               ; preds = %2
  %13 = load i32, i32* @x.47
  %14 = load i32, i32* @y.48
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = load %struct.addrinfo*, %struct.addrinfo** %6, align 8, !dbg !3727
  %22 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %21, i32 0, i32 6, !dbg !3729
  %23 = load i8*, i8** %22, align 8, !dbg !3729
  %24 = icmp ne i8* %23, null, !dbg !3727
  %25 = load i32, i32* @x.47
  %26 = load i32, i32* @y.48
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %24, label %33, label %53, !dbg !3727

33:                                               ; preds = %originalBBpart2
  %34 = load i32, i32* @x.47
  %35 = load i32, i32* @y.48
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %33, %originalBB1alteredBB
  %42 = load %struct.addrinfo*, %struct.addrinfo** %6, align 8, !dbg !3730
  %43 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %42, i32 0, i32 6, !dbg !3731
  %44 = load i8*, i8** %43, align 8, !dbg !3731
  %45 = load i32, i32* @x.47
  %46 = load i32, i32* @y.48
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %71, !dbg !3727

53:                                               ; preds = %originalBBpart2
  %54 = load i32, i32* @x.47
  %55 = load i32, i32* @y.48
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %53, %originalBB6alteredBB
  %62 = load i8*, i8** %3, align 8, !dbg !3732
  %63 = load i32, i32* @x.47
  %64 = load i32, i32* @y.48
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %71, !dbg !3727

71:                                               ; preds = %originalBBpart28, %originalBBpart24
  %72 = phi i8* [ %44, %originalBBpart24 ], [ %62, %originalBBpart28 ], !dbg !3727
  %73 = load i32, i32* @x.47
  %74 = load i32, i32* @y.48
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %71, %originalBB10alteredBB
  %81 = call noalias i8* @strdup(i8* %72) #10, !dbg !3733
  store i8* %81, i8** %5, align 8, !dbg !3734
  %82 = load i8*, i8** %5, align 8, !dbg !3735
  %83 = icmp ne i8* %82, null, !dbg !3735
  %84 = load i32, i32* @x.47
  %85 = load i32, i32* @y.48
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %83, label %129, label %92, !dbg !3737

92:                                               ; preds = %originalBBpart212
  %93 = load i32, i32* @x.47
  %94 = load i32, i32* @y.48
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %92, %originalBB14alteredBB
  %101 = load i32*, i32** %4, align 8, !dbg !3738
  %102 = icmp ne i32* %101, null, !dbg !3738
  %103 = load i32, i32* @x.47
  %104 = load i32, i32* @y.48
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %102, label %111, label %129, !dbg !3739

111:                                              ; preds = %originalBBpart216
  %112 = load i32, i32* @x.47
  %113 = load i32, i32* @y.48
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %111, %originalBB18alteredBB
  %120 = load i32*, i32** %4, align 8, !dbg !3740
  store i32 -10, i32* %120, align 4, !dbg !3741
  %121 = load i32, i32* @x.47
  %122 = load i32, i32* @y.48
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %129, !dbg !3742

129:                                              ; preds = %originalBBpart220, %originalBBpart216, %originalBBpart212
  %130 = load i32, i32* @x.47
  %131 = load i32, i32* @y.48
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %129, %originalBB22alteredBB
  %138 = load %struct.addrinfo*, %struct.addrinfo** %6, align 8, !dbg !3743
  call void @freeaddrinfo(%struct.addrinfo* %138) #10, !dbg !3744
  %139 = load i32, i32* @x.47
  %140 = load i32, i32* @y.48
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %202, !dbg !3745

147:                                              ; preds = %2
  %148 = load i32, i32* @x.47
  %149 = load i32, i32* @y.48
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %147, %originalBB26alteredBB
  %156 = load i32*, i32** %4, align 8, !dbg !3746
  %157 = icmp ne i32* %156, null, !dbg !3746
  %158 = load i32, i32* @x.47
  %159 = load i32, i32* @y.48
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %157, label %166, label %185, !dbg !3748

166:                                              ; preds = %originalBBpart228
  %167 = load i32, i32* @x.47
  %168 = load i32, i32* @y.48
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %166, %originalBB30alteredBB
  %175 = load i32, i32* %7, align 4, !dbg !3749
  %176 = load i32*, i32** %4, align 8, !dbg !3750
  store i32 %175, i32* %176, align 4, !dbg !3751
  %177 = load i32, i32* @x.47
  %178 = load i32, i32* @y.48
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %185, !dbg !3752

185:                                              ; preds = %originalBBpart232, %originalBBpart228
  %186 = load i32, i32* @x.47
  %187 = load i32, i32* @y.48
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %185, %originalBB34alteredBB
  %194 = load i32, i32* @x.47
  %195 = load i32, i32* @y.48
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %202

202:                                              ; preds = %originalBBpart236, %originalBBpart224
  %203 = load i8*, i8** %5, align 8, !dbg !3753
  ret i8* %203, !dbg !3754

originalBBalteredBB:                              ; preds = %originalBB, %12
  %204 = load %struct.addrinfo*, %struct.addrinfo** %6, align 8, !dbg !3727
  %205 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %204, i32 0, i32 6, !dbg !3729
  %206 = load i8*, i8** %205, align 8, !dbg !3729
  %207 = icmp ne i8* %206, null, !dbg !3727
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %33
  %208 = load %struct.addrinfo*, %struct.addrinfo** %6, align 8, !dbg !3730
  %209 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %208, i32 0, i32 6, !dbg !3731
  %210 = load i8*, i8** %209, align 8, !dbg !3731
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %53
  %211 = load i8*, i8** %3, align 8, !dbg !3732
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %71
  %212 = call noalias i8* @strdup(i8* %72) #10, !dbg !3733
  store i8* %212, i8** %5, align 8, !dbg !3734
  %213 = load i8*, i8** %5, align 8, !dbg !3735
  %214 = icmp ne i8* %213, null, !dbg !3735
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %92
  %215 = load i32*, i32** %4, align 8, !dbg !3738
  %216 = icmp ne i32* %215, null, !dbg !3738
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %111
  %217 = load i32*, i32** %4, align 8, !dbg !3740
  store i32 -10, i32* %217, align 4, !dbg !3741
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %129
  %218 = load %struct.addrinfo*, %struct.addrinfo** %6, align 8, !dbg !3743
  call void @freeaddrinfo(%struct.addrinfo* %218) #10, !dbg !3744
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %147
  %219 = load i32*, i32** %4, align 8, !dbg !3746
  %220 = icmp ne i32* %219, null, !dbg !3746
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %166
  %221 = load i32, i32* %7, align 4, !dbg !3749
  %222 = load i32*, i32** %4, align 8, !dbg !3750
  store i32 %221, i32* %222, align 4, !dbg !3751
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %185
  br label %originalBB34
}

declare dso_local i32 @getaddrinfo(i8*, i8*, %struct.addrinfo*, %struct.addrinfo**) #3

; Function Attrs: nounwind
declare dso_local noalias i8* @strdup(i8*) #2

; Function Attrs: nounwind
declare dso_local void @freeaddrinfo(%struct.addrinfo*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @close_stdout() #4 !dbg !3755 {
  %1 = load i32, i32* @x.49
  %2 = load i32, i32* @y.50
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = alloca i8*, align 8
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3756
  %11 = call i32 @close_stream(%struct._IO_FILE* %10), !dbg !3758
  %12 = icmp ne i32 %11, 0, !dbg !3759
  %13 = load i32, i32* @x.49
  %14 = load i32, i32* @y.50
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %124, !dbg !3760

21:                                               ; preds = %originalBBpart2
  %22 = load i32, i32* @x.49
  %23 = load i32, i32* @y.50
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  %30 = load i8, i8* @ignore_EPIPE, align 1, !dbg !3761
  %31 = trunc i8 %30 to i1, !dbg !3761
  %32 = load i32, i32* @x.49
  %33 = load i32, i32* @y.50
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %31, label %40, label %44, !dbg !3762

40:                                               ; preds = %originalBBpart24
  %41 = call i32* @__errno_location() #15, !dbg !3763
  %42 = load i32, i32* %41, align 4, !dbg !3763
  %43 = icmp eq i32 %42, 32, !dbg !3764
  br i1 %43, label %124, label %44, !dbg !3765

44:                                               ; preds = %40, %originalBBpart24
  call void @llvm.dbg.declare(metadata i8** %9, metadata !3766, metadata !DIExpression()), !dbg !3768
  %45 = load i32, i32* @x.49
  %46 = load i32, i32* @y.50
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %44, %originalBB6alteredBB
  %53 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.102, i64 0, i64 0)) #10, !dbg !3769
  store i8* %53, i8** %9, align 8, !dbg !3768
  %54 = load i8*, i8** @file_name, align 8, !dbg !3770
  %55 = icmp ne i8* %54, null, !dbg !3770
  %56 = load i32, i32* @x.49
  %57 = load i32, i32* @y.50
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %55, label %64, label %86, !dbg !3772

64:                                               ; preds = %originalBBpart28
  %65 = load i32, i32* @x.49
  %66 = load i32, i32* @y.50
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %64, %originalBB10alteredBB
  %73 = call i32* @__errno_location() #15, !dbg !3773
  %74 = load i32, i32* %73, align 4, !dbg !3773
  %75 = load i8*, i8** @file_name, align 8, !dbg !3774
  %76 = call i8* @quotearg_colon(i8* %75), !dbg !3775
  %77 = load i8*, i8** %9, align 8, !dbg !3776
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %74, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.103, i64 0, i64 0), i8* %76, i8* %77), !dbg !3777
  %78 = load i32, i32* @x.49
  %79 = load i32, i32* @y.50
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %106, !dbg !3777

86:                                               ; preds = %originalBBpart28
  %87 = load i32, i32* @x.49
  %88 = load i32, i32* @y.50
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %86, %originalBB14alteredBB
  %95 = call i32* @__errno_location() #15, !dbg !3778
  %96 = load i32, i32* %95, align 4, !dbg !3778
  %97 = load i8*, i8** %9, align 8, !dbg !3779
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %96, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.104, i64 0, i64 0), i8* %97), !dbg !3780
  %98 = load i32, i32* @x.49
  %99 = load i32, i32* @y.50
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %106

106:                                              ; preds = %originalBBpart216, %originalBBpart212
  %107 = load i32, i32* @x.49
  %108 = load i32, i32* @y.50
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %106, %originalBB18alteredBB
  %115 = load volatile i32, i32* @exit_failure, align 4, !dbg !3781
  call void @_exit(i32 %115) #14, !dbg !3782
  %116 = load i32, i32* @x.49
  %117 = load i32, i32* @y.50
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  unreachable, !dbg !3782

124:                                              ; preds = %40, %originalBBpart2
  %125 = load i32, i32* @x.49
  %126 = load i32, i32* @y.50
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %124, %originalBB22alteredBB
  %133 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3783
  %134 = call i32 @close_stream(%struct._IO_FILE* %133), !dbg !3785
  %135 = icmp ne i32 %134, 0, !dbg !3786
  %136 = load i32, i32* @x.49
  %137 = load i32, i32* @y.50
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %135, label %144, label %162, !dbg !3787

144:                                              ; preds = %originalBBpart224
  %145 = load i32, i32* @x.49
  %146 = load i32, i32* @y.50
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %144, %originalBB26alteredBB
  %153 = load volatile i32, i32* @exit_failure, align 4, !dbg !3788
  call void @_exit(i32 %153) #14, !dbg !3789
  %154 = load i32, i32* @x.49
  %155 = load i32, i32* @y.50
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  unreachable, !dbg !3789

162:                                              ; preds = %originalBBpart224
  %163 = load i32, i32* @x.49
  %164 = load i32, i32* @y.50
  %165 = sub i32 %163, 1
  %166 = mul i32 %163, %165
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %168, %169
  br i1 %170, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %162, %originalBB30alteredBB
  %171 = load i32, i32* @x.49
  %172 = load i32, i32* @y.50
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  ret void, !dbg !3790

originalBBalteredBB:                              ; preds = %originalBB, %0
  %179 = alloca i8*, align 8
  %180 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3756
  %181 = call i32 @close_stream(%struct._IO_FILE* %180), !dbg !3758
  %182 = icmp ne i32 %181, 0, !dbg !3759
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  %183 = load i8, i8* @ignore_EPIPE, align 1, !dbg !3761
  %184 = trunc i8 %183 to i1, !dbg !3761
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %44
  %185 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.102, i64 0, i64 0)) #10, !dbg !3769
  store i8* %185, i8** %9, align 8, !dbg !3768
  %186 = load i8*, i8** @file_name, align 8, !dbg !3770
  %187 = icmp ne i8* %186, null, !dbg !3770
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %64
  %188 = call i32* @__errno_location() #15, !dbg !3773
  %189 = load i32, i32* %188, align 4, !dbg !3773
  %190 = load i8*, i8** @file_name, align 8, !dbg !3774
  %191 = call i8* @quotearg_colon(i8* %190), !dbg !3775
  %192 = load i8*, i8** %9, align 8, !dbg !3776
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %189, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.103, i64 0, i64 0), i8* %191, i8* %192), !dbg !3777
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %86
  %193 = call i32* @__errno_location() #15, !dbg !3778
  %194 = load i32, i32* %193, align 4, !dbg !3778
  %195 = load i8*, i8** %9, align 8, !dbg !3779
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %194, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.104, i64 0, i64 0), i8* %195), !dbg !3780
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %106
  %196 = load volatile i32, i32* @exit_failure, align 4, !dbg !3781
  call void @_exit(i32 %196) #14, !dbg !3782
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %124
  %197 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3783
  %198 = call i32 @close_stream(%struct._IO_FILE* %197), !dbg !3785
  %199 = icmp ne i32 %198, 0, !dbg !3786
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %144
  %200 = load volatile i32, i32* @exit_failure, align 4, !dbg !3788
  call void @_exit(i32 %200) #14, !dbg !3789
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %162
  br label %originalBB30
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #9

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @hard_locale(i32) #4 !dbg !3791 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  %4 = alloca [257 x i8], align 16
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3793, metadata !DIExpression()), !dbg !3794
  call void @llvm.dbg.declare(metadata [257 x i8]* %4, metadata !3795, metadata !DIExpression()), !dbg !3796
  %5 = load i32, i32* %3, align 4, !dbg !3797
  %6 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !3799
  %7 = call i32 @setlocale_null_r(i32 %5, i8* %6, i64 257), !dbg !3800
  %8 = icmp ne i32 %7, 0, !dbg !3800
  br i1 %8, label %9, label %26, !dbg !3801

9:                                                ; preds = %1
  %10 = load i32, i32* @x.51
  %11 = load i32, i32* @y.52
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  store i1 false, i1* %2, align 1, !dbg !3802
  %18 = load i32, i32* @x.51
  %19 = load i32, i32* @y.52
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %276, !dbg !3802

26:                                               ; preds = %1
  %27 = load i32, i32* @x.51
  %28 = load i32, i32* @y.52
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !3803
  %36 = call i32 @strcmp(i8* %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i64 0, i64 0)) #13, !dbg !3804
  %37 = load i32, i32* @x.51
  %38 = load i32, i32* @y.52
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %45, !dbg !3805

45:                                               ; preds = %originalBBpart24
  %46 = load i32, i32* @x.51
  %47 = load i32, i32* @y.52
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %45, %originalBB6alteredBB
  %collatzVar = alloca i32
  %54 = load i32, i32* @x.51
  %55 = load i32, i32* @y.52
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %62

62:                                               ; preds = %originalBBpart28
  %63 = load i32, i32* @x.51
  %64 = load i32, i32* @y.52
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %62, %originalBB10alteredBB
  %71 = load i32, i32* @inVal0
  %72 = icmp sgt i32 %71, 1
  %73 = load i32, i32* @x.51
  %74 = load i32, i32* @y.52
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %72, label %98, label %81

81:                                               ; preds = %originalBBpart212
  %82 = load i32, i32* @x.51
  %83 = load i32, i32* @y.52
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %81, %originalBB14alteredBB
  store i32 3, i32* %collatzVar
  %90 = load i32, i32* @x.51
  %91 = load i32, i32* @y.52
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %98

98:                                               ; preds = %originalBBpart216, %originalBBpart212
  %99 = load i32, i32* @x.51
  %100 = load i32, i32* @y.52
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %98, %originalBB18alteredBB
  %107 = load i8**, i8*** @inVal1
  %108 = getelementptr inbounds i8*, i8** %107, i64 1
  %109 = load i8*, i8** %108
  %110 = add i32 0, -3
  %controle = call i32 @controle(i8* %109, i32 %110)
  store i32 %controle, i32* %collatzVar
  %111 = load i32, i32* @x.51
  %112 = load i32, i32* @y.52
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart221, label %originalBB18alteredBB

originalBBpart221:                                ; preds = %originalBB18
  br label %119

119:                                              ; preds = %originalBBpart276, %originalBBpart265, %originalBBpart221
  %120 = load i32, i32* @x.51
  %121 = load i32, i32* @y.52
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %119, %originalBB23alteredBB
  %128 = load i32, i32* %collatzVar
  %129 = icmp sgt i32 %128, 1
  %130 = load i32, i32* @x.51
  %131 = load i32, i32* @y.52
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br i1 %129, label %138, label %237

138:                                              ; preds = %originalBBpart225
  %139 = load i32, i32* @x.51
  %140 = load i32, i32* @y.52
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %138, %originalBB27alteredBB
  %147 = load i32, i32* %collatzVar
  %148 = srem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = load i32, i32* @x.51
  %151 = load i32, i32* @y.52
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBBpart242, label %originalBB27alteredBB

originalBBpart242:                                ; preds = %originalBB27
  br i1 %149, label %158, label %177

158:                                              ; preds = %originalBBpart242
  %159 = load i32, i32* @x.51
  %160 = load i32, i32* @y.52
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBB44, label %originalBB44alteredBB

originalBB44:                                     ; preds = %158, %originalBB44alteredBB
  %167 = load i32, i32* %collatzVar
  %168 = sdiv i32 %167, 2
  store i32 %168, i32* %collatzVar
  %169 = load i32, i32* @x.51
  %170 = load i32, i32* @y.52
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBBpart247, label %originalBB44alteredBB

originalBBpart247:                                ; preds = %originalBB44
  br label %197

177:                                              ; preds = %originalBBpart242
  %178 = load i32, i32* @x.51
  %179 = load i32, i32* @y.52
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %177, %originalBB49alteredBB
  %186 = load i32, i32* %collatzVar
  %187 = mul i32 %186, 3
  %188 = add i32 %187, 1
  store i32 %188, i32* %collatzVar
  %189 = load i32, i32* @x.51
  %190 = load i32, i32* @y.52
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  br label %197

197:                                              ; preds = %originalBBpart251, %originalBBpart247
  %198 = load i32, i32* @x.51
  %199 = load i32, i32* @y.52
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %197, %originalBB53alteredBB
  %206 = load i32, i32* %collatzVar
  %207 = sub i32 %36, %206
  %208 = icmp sgt i32 %207, -2
  %209 = load i32, i32* @x.51
  %210 = load i32, i32* @y.52
  %211 = sub i32 %209, 1
  %212 = mul i32 %209, %211
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %214, %215
  br i1 %216, label %originalBBpart265, label %originalBB53alteredBB

originalBBpart265:                                ; preds = %originalBB53
  br i1 %208, label %217, label %119

217:                                              ; preds = %originalBBpart265
  %218 = load i32, i32* @x.51
  %219 = load i32, i32* @y.52
  %220 = sub i32 %218, 1
  %221 = mul i32 %218, %220
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %223, %224
  br i1 %225, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %217, %originalBB67alteredBB
  %226 = load i32, i32* %collatzVar
  %227 = add i32 %36, %226
  %228 = icmp slt i32 %227, 2
  %229 = load i32, i32* @x.51
  %230 = load i32, i32* @y.52
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBBpart276, label %originalBB67alteredBB

originalBBpart276:                                ; preds = %originalBB67
  br i1 %228, label %257, label %119

237:                                              ; preds = %originalBBpart225
  %238 = load i32, i32* @x.51
  %239 = load i32, i32* @y.52
  %240 = sub i32 %238, 1
  %241 = mul i32 %238, %240
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %243, %244
  br i1 %245, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %237, %originalBB78alteredBB
  %246 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !3806
  %247 = call i32 @strcmp(i8* %246, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.110, i64 0, i64 0)) #13, !dbg !3807
  %248 = icmp eq i32 %247, 0, !dbg !3808
  %249 = load i32, i32* @x.51
  %250 = load i32, i32* @y.52
  %251 = sub i32 %249, 1
  %252 = mul i32 %249, %251
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %254, %255
  br i1 %256, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br label %257, !dbg !3809

257:                                              ; preds = %originalBBpart280, %originalBBpart276
  %258 = phi i1 [ true, %originalBBpart276 ], [ %248, %originalBBpart280 ]
  %259 = load i32, i32* @x.51
  %260 = load i32, i32* @y.52
  %261 = sub i32 %259, 1
  %262 = mul i32 %259, %261
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %264, %265
  br i1 %266, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %257, %originalBB82alteredBB
  %267 = xor i1 %258, true, !dbg !3810
  store i1 %267, i1* %2, align 1, !dbg !3811
  %268 = load i32, i32* @x.51
  %269 = load i32, i32* @y.52
  %270 = sub i32 %268, 1
  %271 = mul i32 %268, %270
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %273, %274
  br i1 %275, label %originalBBpart287, label %originalBB82alteredBB

originalBBpart287:                                ; preds = %originalBB82
  br label %276, !dbg !3811

276:                                              ; preds = %originalBBpart287, %originalBBpart2
  %277 = load i32, i32* @x.51
  %278 = load i32, i32* @y.52
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %276, %originalBB89alteredBB
  %285 = load i1, i1* %2, align 1, !dbg !3812
  %286 = load i32, i32* @x.51
  %287 = load i32, i32* @y.52
  %288 = sub i32 %286, 1
  %289 = mul i32 %286, %288
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %291, %292
  br i1 %293, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  ret i1 %285, !dbg !3812

originalBBalteredBB:                              ; preds = %originalBB, %9
  store i1 false, i1* %2, align 1, !dbg !3802
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %294 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !3803
  %295 = call i32 @strcmp(i8* %294, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i64 0, i64 0)) #13, !dbg !3804
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %45
  %collatzVaralteredBB = alloca i32
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %62
  %296 = load i32, i32* @inVal0
  %297 = icmp sgt i32 %296, 1
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %81
  store i32 3, i32* %collatzVar
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %98
  %298 = load i8**, i8*** @inVal1
  %299 = getelementptr inbounds i8*, i8** %298, i64 1
  %300 = load i8*, i8** %299
  %_ = shl i32 0, -3
  %_19 = sub i32 0, 0
  %gen = add i32 %_19, -3
  %301 = add i32 0, -3
  %controlealteredBB = call i32 @controle(i8* %300, i32 %301)
  store i32 %controlealteredBB, i32* %collatzVar
  br label %originalBB18

originalBB23alteredBB:                            ; preds = %originalBB23, %119
  %302 = load i32, i32* %collatzVar
  %303 = icmp sgt i32 %302, 1
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %138
  %304 = load i32, i32* %collatzVar
  %_28 = sub i32 %304, 2
  %gen29 = mul i32 %_28, 2
  %_30 = shl i32 %304, 2
  %_31 = shl i32 %304, 2
  %_32 = sub i32 %304, 2
  %gen33 = mul i32 %_32, 2
  %_34 = sub i32 0, %304
  %gen35 = add i32 %_34, 2
  %_36 = shl i32 %304, 2
  %_37 = sub i32 %304, 2
  %gen38 = mul i32 %_37, 2
  %_39 = sub i32 %304, 2
  %gen40 = mul i32 %_39, 2
  %305 = srem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  br label %originalBB27

originalBB44alteredBB:                            ; preds = %originalBB44, %158
  %307 = load i32, i32* %collatzVar
  %_45 = shl i32 %307, 2
  %308 = sdiv i32 %307, 2
  store i32 %308, i32* %collatzVar
  br label %originalBB44

originalBB49alteredBB:                            ; preds = %originalBB49, %177
  %309 = load i32, i32* %collatzVar
  %310 = mul i32 %309, 3
  %311 = add i32 %310, 1
  store i32 %311, i32* %collatzVar
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %197
  %312 = load i32, i32* %collatzVar
  %_54 = sub i32 %36, %312
  %gen55 = mul i32 %_54, %312
  %_56 = shl i32 %36, %312
  %_57 = sub i32 0, %36
  %gen58 = add i32 %_57, %312
  %_59 = sub i32 %36, %312
  %gen60 = mul i32 %_59, %312
  %_61 = sub i32 0, %36
  %gen62 = add i32 %_61, %312
  %_63 = shl i32 %36, %312
  %313 = sub i32 %36, %312
  %314 = icmp sgt i32 %313, -2
  br label %originalBB53

originalBB67alteredBB:                            ; preds = %originalBB67, %217
  %315 = load i32, i32* %collatzVar
  %_68 = sub i32 0, %36
  %gen69 = add i32 %_68, %315
  %_70 = shl i32 %36, %315
  %_71 = sub i32 %36, %315
  %gen72 = mul i32 %_71, %315
  %_73 = sub i32 %36, %315
  %gen74 = mul i32 %_73, %315
  %316 = add i32 %36, %315
  %317 = icmp slt i32 %316, 2
  br label %originalBB67

originalBB78alteredBB:                            ; preds = %originalBB78, %237
  %318 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !3806
  %319 = call i32 @strcmp(i8* %318, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.110, i64 0, i64 0)) #13, !dbg !3807
  %320 = icmp eq i32 %319, 0, !dbg !3808
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %257
  %_83 = sub i1 %258, true
  %gen84 = mul i1 %_83, true
  %_85 = shl i1 %258, true
  %321 = xor i1 %258, true, !dbg !3810
  store i1 %321, i1* %2, align 1, !dbg !3811
  br label %originalBB82

originalBB89alteredBB:                            ; preds = %originalBB89, %276
  %322 = load i1, i1* %2, align 1, !dbg !3812
  br label %originalBB89
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @imaxtostr(i64, i8*) #4 !dbg !3813 {
  %3 = load i32, i32* @x.53
  %4 = load i32, i32* @y.54
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  store i64 %0, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !3817, metadata !DIExpression()), !dbg !3818
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !3819, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.declare(metadata i8** %13, metadata !3821, metadata !DIExpression()), !dbg !3822
  %14 = load i8*, i8** %12, align 8, !dbg !3823
  %15 = getelementptr inbounds i8, i8* %14, i64 20, !dbg !3824
  store i8* %15, i8** %13, align 8, !dbg !3822
  %16 = load i8*, i8** %13, align 8, !dbg !3825
  store i8 0, i8* %16, align 1, !dbg !3826
  %17 = load i64, i64* %11, align 8, !dbg !3827
  %18 = icmp slt i64 %17, 0, !dbg !3829
  %19 = load i32, i32* @x.53
  %20 = load i32, i32* @y.54
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %106, !dbg !3830

27:                                               ; preds = %originalBBpart2
  %28 = load i32, i32* @x.53
  %29 = load i32, i32* @y.54
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load i32, i32* @x.53
  %37 = load i32, i32* @y.54
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %44, !dbg !3831

44:                                               ; preds = %originalBBpart242, %originalBBpart24
  %45 = load i32, i32* @x.53
  %46 = load i32, i32* @y.54
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %44, %originalBB6alteredBB
  %53 = load i64, i64* %11, align 8, !dbg !3833
  %54 = srem i64 %53, 10, !dbg !3834
  %55 = sub nsw i64 48, %54, !dbg !3835
  %56 = trunc i64 %55 to i8, !dbg !3836
  %57 = load i8*, i8** %13, align 8, !dbg !3837
  %58 = getelementptr inbounds i8, i8* %57, i32 -1, !dbg !3837
  store i8* %58, i8** %13, align 8, !dbg !3837
  store i8 %56, i8* %58, align 1, !dbg !3838
  %59 = load i32, i32* @x.53
  %60 = load i32, i32* @y.54
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart225, label %originalBB6alteredBB

originalBBpart225:                                ; preds = %originalBB6
  br label %67, !dbg !3839

67:                                               ; preds = %originalBBpart225
  %68 = load i32, i32* @x.53
  %69 = load i32, i32* @y.54
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %67, %originalBB27alteredBB
  %76 = load i64, i64* %11, align 8, !dbg !3840
  %77 = sdiv i64 %76, 10, !dbg !3840
  store i64 %77, i64* %11, align 8, !dbg !3840
  %78 = icmp ne i64 %77, 0, !dbg !3841
  %79 = load i32, i32* @x.53
  %80 = load i32, i32* @y.54
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart242, label %originalBB27alteredBB

originalBBpart242:                                ; preds = %originalBB27
  br i1 %78, label %44, label %87, !dbg !3839, !llvm.loop !3842

87:                                               ; preds = %originalBBpart242
  %88 = load i32, i32* @x.53
  %89 = load i32, i32* @y.54
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB44, label %originalBB44alteredBB

originalBB44:                                     ; preds = %87, %originalBB44alteredBB
  %96 = load i8*, i8** %13, align 8, !dbg !3844
  %97 = getelementptr inbounds i8, i8* %96, i32 -1, !dbg !3844
  store i8* %97, i8** %13, align 8, !dbg !3844
  store i8 45, i8* %97, align 1, !dbg !3845
  %98 = load i32, i32* @x.53
  %99 = load i32, i32* @y.54
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBBpart246, label %originalBB44alteredBB

originalBBpart246:                                ; preds = %originalBB44
  br label %183, !dbg !3846

106:                                              ; preds = %originalBBpart2
  %107 = load i32, i32* @x.53
  %108 = load i32, i32* @y.54
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBB48, label %originalBB48alteredBB

originalBB48:                                     ; preds = %106, %originalBB48alteredBB
  %115 = load i32, i32* @x.53
  %116 = load i32, i32* @y.54
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBBpart250, label %originalBB48alteredBB

originalBBpart250:                                ; preds = %originalBB48
  br label %123, !dbg !3847

123:                                              ; preds = %originalBBpart284, %originalBBpart250
  %124 = load i32, i32* @x.53
  %125 = load i32, i32* @y.54
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %123, %originalBB52alteredBB
  %132 = load i64, i64* %11, align 8, !dbg !3849
  %133 = srem i64 %132, 10, !dbg !3850
  %134 = add nsw i64 48, %133, !dbg !3851
  %135 = trunc i64 %134 to i8, !dbg !3852
  %136 = load i8*, i8** %13, align 8, !dbg !3853
  %137 = getelementptr inbounds i8, i8* %136, i32 -1, !dbg !3853
  store i8* %137, i8** %13, align 8, !dbg !3853
  store i8 %135, i8* %137, align 1, !dbg !3854
  %138 = load i32, i32* @x.53
  %139 = load i32, i32* @y.54
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart273, label %originalBB52alteredBB

originalBBpart273:                                ; preds = %originalBB52
  br label %146, !dbg !3855

146:                                              ; preds = %originalBBpart273
  %147 = load i32, i32* @x.53
  %148 = load i32, i32* @y.54
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %146, %originalBB75alteredBB
  %155 = load i64, i64* %11, align 8, !dbg !3856
  %156 = sdiv i64 %155, 10, !dbg !3856
  store i64 %156, i64* %11, align 8, !dbg !3856
  %157 = icmp ne i64 %156, 0, !dbg !3857
  %158 = load i32, i32* @x.53
  %159 = load i32, i32* @y.54
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBBpart284, label %originalBB75alteredBB

originalBBpart284:                                ; preds = %originalBB75
  br i1 %157, label %123, label %166, !dbg !3855, !llvm.loop !3858

166:                                              ; preds = %originalBBpart284
  %167 = load i32, i32* @x.53
  %168 = load i32, i32* @y.54
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %166, %originalBB86alteredBB
  %175 = load i32, i32* @x.53
  %176 = load i32, i32* @y.54
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br label %183

183:                                              ; preds = %originalBBpart288, %originalBBpart246
  %184 = load i32, i32* @x.53
  %185 = load i32, i32* @y.54
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %183, %originalBB90alteredBB
  %192 = load i8*, i8** %13, align 8, !dbg !3860
  %193 = load i32, i32* @x.53
  %194 = load i32, i32* @y.54
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  ret i8* %192, !dbg !3861

originalBBalteredBB:                              ; preds = %originalBB, %2
  %201 = alloca i64, align 8
  %202 = alloca i8*, align 8
  %203 = alloca i8*, align 8
  store i64 %0, i64* %201, align 8
  call void @llvm.dbg.declare(metadata i64* %201, metadata !3862, metadata !DIExpression()), !dbg !3818
  store i8* %1, i8** %202, align 8
  call void @llvm.dbg.declare(metadata i8** %202, metadata !3865, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.declare(metadata i8** %203, metadata !3866, metadata !DIExpression()), !dbg !3822
  %204 = load i8*, i8** %202, align 8, !dbg !3823
  %205 = getelementptr inbounds i8, i8* %204, i64 20, !dbg !3824
  store i8* %205, i8** %203, align 8, !dbg !3822
  %206 = load i8*, i8** %203, align 8, !dbg !3825
  store i8 0, i8* %206, align 1, !dbg !3826
  %207 = load i64, i64* %201, align 8, !dbg !3827
  %208 = icmp slt i64 %207, 0, !dbg !3829
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %44
  %209 = load i64, i64* %11, align 8, !dbg !3833
  %_ = sub i64 %209, 10
  %gen = mul i64 %_, 10
  %_7 = sub i64 %209, 10
  %gen8 = mul i64 %_7, 10
  %_9 = shl i64 %209, 10
  %_10 = sub i64 %209, 10
  %gen11 = mul i64 %_10, 10
  %210 = srem i64 %209, 10, !dbg !3834
  %_12 = sub i64 0, 48
  %gen13 = add i64 %_12, %210
  %_14 = sub i64 48, %210
  %gen15 = mul i64 %_14, %210
  %_16 = sub i64 0, 48
  %gen17 = add i64 %_16, %210
  %_18 = sub i64 48, %210
  %gen19 = mul i64 %_18, %210
  %_20 = sub i64 48, %210
  %gen21 = mul i64 %_20, %210
  %_22 = sub i64 0, 48
  %gen23 = add i64 %_22, %210
  %211 = sub nsw i64 48, %210, !dbg !3835
  %212 = trunc i64 %211 to i8, !dbg !3836
  %213 = load i8*, i8** %13, align 8, !dbg !3837
  %214 = getelementptr inbounds i8, i8* %213, i32 -1, !dbg !3837
  store i8* %214, i8** %13, align 8, !dbg !3837
  store i8 %212, i8* %214, align 1, !dbg !3838
  br label %originalBB6

originalBB27alteredBB:                            ; preds = %originalBB27, %67
  %215 = load i64, i64* %11, align 8, !dbg !3840
  %_28 = sub i64 %215, 10
  %gen29 = mul i64 %_28, 10
  %_30 = shl i64 %215, 10
  %_31 = sub i64 %215, 10
  %gen32 = mul i64 %_31, 10
  %_33 = shl i64 %215, 10
  %_34 = sub i64 %215, 10
  %gen35 = mul i64 %_34, 10
  %_36 = sub i64 %215, 10
  %gen37 = mul i64 %_36, 10
  %_38 = shl i64 %215, 10
  %_39 = shl i64 %215, 10
  %_40 = shl i64 %215, 10
  %216 = sdiv i64 %215, 10, !dbg !3840
  store i64 %216, i64* %11, align 8, !dbg !3840
  %217 = icmp ne i64 %216, 0, !dbg !3841
  br label %originalBB27

originalBB44alteredBB:                            ; preds = %originalBB44, %87
  %218 = load i8*, i8** %13, align 8, !dbg !3844
  %219 = getelementptr inbounds i8, i8* %218, i32 -1, !dbg !3844
  store i8* %219, i8** %13, align 8, !dbg !3844
  store i8 45, i8* %219, align 1, !dbg !3845
  br label %originalBB44

originalBB48alteredBB:                            ; preds = %originalBB48, %106
  br label %originalBB48

originalBB52alteredBB:                            ; preds = %originalBB52, %123
  %220 = load i64, i64* %11, align 8, !dbg !3849
  %_53 = sub i64 0, %220
  %gen54 = add i64 %_53, 10
  %_55 = sub i64 %220, 10
  %gen56 = mul i64 %_55, 10
  %_57 = shl i64 %220, 10
  %221 = srem i64 %220, 10, !dbg !3850
  %_58 = sub i64 0, 48
  %gen59 = add i64 %_58, %221
  %_60 = sub i64 0, 48
  %gen61 = add i64 %_60, %221
  %_62 = sub i64 0, 48
  %gen63 = add i64 %_62, %221
  %_64 = shl i64 48, %221
  %_65 = sub i64 0, 48
  %gen66 = add i64 %_65, %221
  %_67 = shl i64 48, %221
  %_68 = sub i64 0, 48
  %gen69 = add i64 %_68, %221
  %_70 = sub i64 48, %221
  %gen71 = mul i64 %_70, %221
  %222 = add nsw i64 48, %221, !dbg !3851
  %223 = trunc i64 %222 to i8, !dbg !3852
  %224 = load i8*, i8** %13, align 8, !dbg !3853
  %225 = getelementptr inbounds i8, i8* %224, i32 -1, !dbg !3853
  store i8* %225, i8** %13, align 8, !dbg !3853
  store i8 %223, i8* %225, align 1, !dbg !3854
  br label %originalBB52

originalBB75alteredBB:                            ; preds = %originalBB75, %146
  %226 = load i64, i64* %11, align 8, !dbg !3856
  %_76 = shl i64 %226, 10
  %_77 = shl i64 %226, 10
  %_78 = shl i64 %226, 10
  %_79 = sub i64 %226, 10
  %gen80 = mul i64 %_79, 10
  %_81 = sub i64 %226, 10
  %gen82 = mul i64 %_81, 10
  %227 = sdiv i64 %226, 10, !dbg !3856
  store i64 %227, i64* %11, align 8, !dbg !3856
  %228 = icmp ne i64 %227, 0, !dbg !3857
  br label %originalBB75

originalBB86alteredBB:                            ; preds = %originalBB86, %166
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %183
  %229 = load i8*, i8** %13, align 8, !dbg !3860
  br label %originalBB90
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_program_name(i8*) #4 !dbg !3867 {
  %2 = load i32, i32* @x.55
  %3 = load i32, i32* @y.56
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !3868, metadata !DIExpression()), !dbg !3869
  call void @llvm.dbg.declare(metadata i8** %11, metadata !3870, metadata !DIExpression()), !dbg !3871
  call void @llvm.dbg.declare(metadata i8** %12, metadata !3872, metadata !DIExpression()), !dbg !3873
  %13 = load i8*, i8** %10, align 8, !dbg !3874
  %14 = icmp eq i8* %13, null, !dbg !3876
  %15 = load i32, i32* @x.55
  %16 = load i32, i32* @y.56
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %14, label %23, label %42, !dbg !3877

23:                                               ; preds = %originalBBpart2
  %24 = load i32, i32* @x.55
  %25 = load i32, i32* @y.56
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %23, %originalBB1alteredBB
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3878
  %33 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.115, i64 0, i64 0), %struct._IO_FILE* %32), !dbg !3880
  call void @abort() #12, !dbg !3881
  %34 = load i32, i32* @x.55
  %35 = load i32, i32* @y.56
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable, !dbg !3881

42:                                               ; preds = %originalBBpart2
  %43 = load i32, i32* @x.55
  %44 = load i32, i32* @y.56
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %42, %originalBB6alteredBB
  %51 = load i8*, i8** %10, align 8, !dbg !3882
  %52 = call i8* @strrchr(i8* %51, i32 47) #13, !dbg !3883
  store i8* %52, i8** %11, align 8, !dbg !3884
  %53 = load i8*, i8** %11, align 8, !dbg !3885
  %54 = icmp ne i8* %53, null, !dbg !3886
  %55 = load i32, i32* @x.55
  %56 = load i32, i32* @y.56
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %54, label %63, label %82, !dbg !3885

63:                                               ; preds = %originalBBpart28
  %64 = load i32, i32* @x.55
  %65 = load i32, i32* @y.56
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %63, %originalBB10alteredBB
  %72 = load i8*, i8** %11, align 8, !dbg !3887
  %73 = getelementptr inbounds i8, i8* %72, i64 1, !dbg !3888
  %74 = load i32, i32* @x.55
  %75 = load i32, i32* @y.56
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %100, !dbg !3885

82:                                               ; preds = %originalBBpart28
  %83 = load i32, i32* @x.55
  %84 = load i32, i32* @y.56
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %82, %originalBB14alteredBB
  %91 = load i8*, i8** %10, align 8, !dbg !3889
  %92 = load i32, i32* @x.55
  %93 = load i32, i32* @y.56
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %100, !dbg !3885

100:                                              ; preds = %originalBBpart216, %originalBBpart212
  %101 = phi i8* [ %73, %originalBBpart212 ], [ %91, %originalBBpart216 ], !dbg !3885
  %102 = load i32, i32* @x.55
  %103 = load i32, i32* @y.56
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %100, %originalBB18alteredBB
  store i8* %101, i8** %12, align 8, !dbg !3890
  %110 = load i8*, i8** %12, align 8, !dbg !3891
  %111 = load i8*, i8** %10, align 8, !dbg !3893
  %112 = ptrtoint i8* %110 to i64, !dbg !3894
  %113 = ptrtoint i8* %111 to i64, !dbg !3894
  %114 = sub i64 %112, %113, !dbg !3894
  %115 = icmp sge i64 %114, 7, !dbg !3895
  %116 = load i32, i32* @x.55
  %117 = load i32, i32* @y.56
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBBpart232, label %originalBB18alteredBB

originalBBpart232:                                ; preds = %originalBB18
  br i1 %115, label %124, label %203, !dbg !3896

124:                                              ; preds = %originalBBpart232
  %125 = load i32, i32* @x.55
  %126 = load i32, i32* @y.56
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %124, %originalBB34alteredBB
  %133 = load i8*, i8** %12, align 8, !dbg !3897
  %134 = getelementptr inbounds i8, i8* %133, i64 -7, !dbg !3898
  %135 = call i32 @strncmp(i8* %134, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.116, i64 0, i64 0), i64 7) #13, !dbg !3899
  %136 = icmp eq i32 %135, 0, !dbg !3900
  %137 = load i32, i32* @x.55
  %138 = load i32, i32* @y.56
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %136, label %145, label %203, !dbg !3901

145:                                              ; preds = %originalBBpart236
  %146 = load i32, i32* @x.55
  %147 = load i32, i32* @y.56
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %145, %originalBB38alteredBB
  %154 = load i8*, i8** %12, align 8, !dbg !3902
  store i8* %154, i8** %10, align 8, !dbg !3904
  %155 = load i8*, i8** %12, align 8, !dbg !3905
  %156 = call i32 @strncmp(i8* %155, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.117, i64 0, i64 0), i64 3) #13, !dbg !3907
  %157 = icmp eq i32 %156, 0, !dbg !3908
  %158 = load i32, i32* @x.55
  %159 = load i32, i32* @y.56
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %157, label %166, label %186, !dbg !3909

166:                                              ; preds = %originalBBpart240
  %167 = load i32, i32* @x.55
  %168 = load i32, i32* @y.56
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %166, %originalBB42alteredBB
  %175 = load i8*, i8** %12, align 8, !dbg !3910
  %176 = getelementptr inbounds i8, i8* %175, i64 3, !dbg !3912
  store i8* %176, i8** %10, align 8, !dbg !3913
  %177 = load i8*, i8** %10, align 8, !dbg !3914
  store i8* %177, i8** @program_invocation_short_name, align 8, !dbg !3915
  %178 = load i32, i32* @x.55
  %179 = load i32, i32* @y.56
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %186, !dbg !3916

186:                                              ; preds = %originalBBpart244, %originalBBpart240
  %187 = load i32, i32* @x.55
  %188 = load i32, i32* @y.56
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %186, %originalBB46alteredBB
  %195 = load i32, i32* @x.55
  %196 = load i32, i32* @y.56
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %203, !dbg !3917

203:                                              ; preds = %originalBBpart248, %originalBBpart236, %originalBBpart232
  %204 = load i32, i32* @x.55
  %205 = load i32, i32* @y.56
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %203, %originalBB50alteredBB
  %212 = load i8*, i8** %10, align 8, !dbg !3918
  store i8* %212, i8** @program_name, align 8, !dbg !3919
  %213 = load i8*, i8** %10, align 8, !dbg !3920
  store i8* %213, i8** @program_invocation_name, align 8, !dbg !3921
  %214 = load i32, i32* @x.55
  %215 = load i32, i32* @y.56
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  ret void, !dbg !3922

originalBBalteredBB:                              ; preds = %originalBB, %1
  %222 = alloca i8*, align 8
  %223 = alloca i8*, align 8
  %224 = alloca i8*, align 8
  store i8* %0, i8** %222, align 8
  call void @llvm.dbg.declare(metadata i8** %222, metadata !3923, metadata !DIExpression()), !dbg !3869
  call void @llvm.dbg.declare(metadata i8** %223, metadata !3929, metadata !DIExpression()), !dbg !3871
  call void @llvm.dbg.declare(metadata i8** %224, metadata !3930, metadata !DIExpression()), !dbg !3873
  %225 = load i8*, i8** %222, align 8, !dbg !3874
  %226 = icmp eq i8* %225, null, !dbg !3876
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %23
  %227 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3878
  %228 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.115, i64 0, i64 0), %struct._IO_FILE* %227), !dbg !3880
  call void @abort() #12, !dbg !3881
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %42
  %229 = load i8*, i8** %10, align 8, !dbg !3882
  %230 = call i8* @strrchr(i8* %229, i32 47) #13, !dbg !3883
  store i8* %230, i8** %11, align 8, !dbg !3884
  %231 = load i8*, i8** %11, align 8, !dbg !3885
  %232 = icmp ne i8* %231, null, !dbg !3886
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %63
  %233 = load i8*, i8** %11, align 8, !dbg !3887
  %234 = getelementptr inbounds i8, i8* %233, i64 1, !dbg !3888
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %82
  %235 = load i8*, i8** %10, align 8, !dbg !3889
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %100
  store i8* %101, i8** %12, align 8, !dbg !3890
  %236 = load i8*, i8** %12, align 8, !dbg !3891
  %237 = load i8*, i8** %10, align 8, !dbg !3893
  %238 = ptrtoint i8* %236 to i64, !dbg !3894
  %239 = ptrtoint i8* %237 to i64, !dbg !3894
  %_ = shl i64 %238, %239
  %_19 = sub i64 %238, %239
  %gen = mul i64 %_19, %239
  %_20 = sub i64 0, %238
  %gen21 = add i64 %_20, %239
  %_22 = sub i64 %238, %239
  %gen23 = mul i64 %_22, %239
  %_24 = shl i64 %238, %239
  %_25 = sub i64 0, %238
  %gen26 = add i64 %_25, %239
  %_27 = sub i64 0, %238
  %gen28 = add i64 %_27, %239
  %_29 = sub i64 0, %238
  %gen30 = add i64 %_29, %239
  %240 = sub i64 %238, %239, !dbg !3894
  %241 = icmp sge i64 %240, 7, !dbg !3895
  br label %originalBB18

originalBB34alteredBB:                            ; preds = %originalBB34, %124
  %242 = load i8*, i8** %12, align 8, !dbg !3897
  %243 = getelementptr inbounds i8, i8* %242, i64 -7, !dbg !3898
  %244 = call i32 @strncmp(i8* %243, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.116, i64 0, i64 0), i64 7) #13, !dbg !3899
  %245 = icmp eq i32 %244, 0, !dbg !3900
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %145
  %246 = load i8*, i8** %12, align 8, !dbg !3902
  store i8* %246, i8** %10, align 8, !dbg !3904
  %247 = load i8*, i8** %12, align 8, !dbg !3905
  %248 = call i32 @strncmp(i8* %247, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.117, i64 0, i64 0), i64 3) #13, !dbg !3907
  %249 = icmp eq i32 %248, 0, !dbg !3908
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %166
  %250 = load i8*, i8** %12, align 8, !dbg !3910
  %251 = getelementptr inbounds i8, i8* %250, i64 3, !dbg !3912
  store i8* %251, i8** %10, align 8, !dbg !3913
  %252 = load i8*, i8** %10, align 8, !dbg !3914
  store i8* %252, i8** @program_invocation_short_name, align 8, !dbg !3915
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %186
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %203
  %253 = load i8*, i8** %10, align 8, !dbg !3918
  store i8* %253, i8** @program_name, align 8, !dbg !3919
  %254 = load i8*, i8** %10, align 8, !dbg !3920
  store i8* %254, i8** @program_invocation_name, align 8, !dbg !3921
  br label %originalBB50
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #5

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_char_quoting(%struct.quoting_options*, i8 signext, i32) #4 !dbg !3931 {
  %4 = load i32, i32* @x.57
  %5 = load i32, i32* @y.58
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %struct.quoting_options*, align 8
  %13 = alloca i8, align 1
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  %16 = alloca i32*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %12, metadata !3935, metadata !DIExpression()), !dbg !3936
  store i8 %1, i8* %13, align 1
  call void @llvm.dbg.declare(metadata i8* %13, metadata !3937, metadata !DIExpression()), !dbg !3938
  store i32 %2, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !3939, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.declare(metadata i8* %15, metadata !3941, metadata !DIExpression()), !dbg !3942
  %19 = load i8, i8* %13, align 1, !dbg !3943
  store i8 %19, i8* %15, align 1, !dbg !3942
  call void @llvm.dbg.declare(metadata i32** %16, metadata !3944, metadata !DIExpression()), !dbg !3946
  %20 = load %struct.quoting_options*, %struct.quoting_options** %12, align 8, !dbg !3947
  %21 = icmp ne %struct.quoting_options* %20, null, !dbg !3947
  %22 = load i32, i32* @x.57
  %23 = load i32, i32* @y.58
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %48, !dbg !3947

30:                                               ; preds = %originalBBpart2
  %31 = load i32, i32* @x.57
  %32 = load i32, i32* @y.58
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load %struct.quoting_options*, %struct.quoting_options** %12, align 8, !dbg !3948
  %40 = load i32, i32* @x.57
  %41 = load i32, i32* @y.58
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %65, !dbg !3947

48:                                               ; preds = %originalBBpart2
  %49 = load i32, i32* @x.57
  %50 = load i32, i32* @y.58
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %48, %originalBB6alteredBB
  %57 = load i32, i32* @x.57
  %58 = load i32, i32* @y.58
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %65, !dbg !3947

65:                                               ; preds = %originalBBpart28, %originalBBpart24
  %66 = phi %struct.quoting_options* [ %39, %originalBBpart24 ], [ @default_quoting_options, %originalBBpart28 ], !dbg !3947
  %67 = load i32, i32* @x.57
  %68 = load i32, i32* @y.58
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %65, %originalBB10alteredBB
  %75 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %66, i32 0, i32 2, !dbg !3949
  %76 = getelementptr inbounds [8 x i32], [8 x i32]* %75, i64 0, i64 0, !dbg !3950
  %77 = load i8, i8* %15, align 1, !dbg !3951
  %78 = zext i8 %77 to i64, !dbg !3951
  %79 = udiv i64 %78, 32, !dbg !3952
  %80 = getelementptr inbounds i32, i32* %76, i64 %79, !dbg !3953
  store i32* %80, i32** %16, align 8, !dbg !3946
  call void @llvm.dbg.declare(metadata i32* %17, metadata !3954, metadata !DIExpression()), !dbg !3955
  %81 = load i8, i8* %15, align 1, !dbg !3956
  %82 = zext i8 %81 to i64, !dbg !3956
  %83 = urem i64 %82, 32, !dbg !3957
  %84 = trunc i64 %83 to i32, !dbg !3956
  store i32 %84, i32* %17, align 4, !dbg !3955
  call void @llvm.dbg.declare(metadata i32* %18, metadata !3958, metadata !DIExpression()), !dbg !3959
  %85 = load i32*, i32** %16, align 8, !dbg !3960
  %86 = load i32, i32* %85, align 4, !dbg !3961
  %87 = load i32, i32* %17, align 4, !dbg !3962
  %88 = lshr i32 %86, %87, !dbg !3963
  %89 = and i32 %88, 1, !dbg !3964
  store i32 %89, i32* %18, align 4, !dbg !3959
  %90 = load i32, i32* %14, align 4, !dbg !3965
  %91 = and i32 %90, 1, !dbg !3966
  %92 = load i32, i32* %18, align 4, !dbg !3967
  %93 = xor i32 %91, %92, !dbg !3968
  %94 = load i32, i32* %17, align 4, !dbg !3969
  %95 = shl i32 %93, %94, !dbg !3970
  %96 = load i32*, i32** %16, align 8, !dbg !3971
  %97 = load i32, i32* %96, align 4, !dbg !3972
  %98 = xor i32 %97, %95, !dbg !3972
  store i32 %98, i32* %96, align 4, !dbg !3972
  %99 = load i32, i32* %18, align 4, !dbg !3973
  %100 = load i32, i32* @x.57
  %101 = load i32, i32* @y.58
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBBpart279, label %originalBB10alteredBB

originalBBpart279:                                ; preds = %originalBB10
  ret i32 %99, !dbg !3974

originalBBalteredBB:                              ; preds = %originalBB, %3
  %108 = alloca %struct.quoting_options*, align 8
  %109 = alloca i8, align 1
  %110 = alloca i32, align 4
  %111 = alloca i8, align 1
  %112 = alloca i32*, align 8
  %113 = alloca i32, align 4
  %114 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %108, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %108, metadata !3975, metadata !DIExpression()), !dbg !3936
  store i8 %1, i8* %109, align 1
  call void @llvm.dbg.declare(metadata i8* %109, metadata !4010, metadata !DIExpression()), !dbg !3938
  store i32 %2, i32* %110, align 4
  call void @llvm.dbg.declare(metadata i32* %110, metadata !4011, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.declare(metadata i8* %111, metadata !4012, metadata !DIExpression()), !dbg !3942
  %115 = load i8, i8* %109, align 1, !dbg !3943
  store i8 %115, i8* %111, align 1, !dbg !3942
  call void @llvm.dbg.declare(metadata i32** %112, metadata !4013, metadata !DIExpression()), !dbg !3946
  %116 = load %struct.quoting_options*, %struct.quoting_options** %108, align 8, !dbg !3947
  %117 = icmp ne %struct.quoting_options* %116, null, !dbg !3947
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %118 = load %struct.quoting_options*, %struct.quoting_options** %12, align 8, !dbg !3948
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %65
  %119 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %66, i32 0, i32 2, !dbg !3949
  %120 = getelementptr inbounds [8 x i32], [8 x i32]* %119, i64 0, i64 0, !dbg !3950
  %121 = load i8, i8* %15, align 1, !dbg !3951
  %122 = zext i8 %121 to i64, !dbg !3951
  %_ = shl i64 %122, 32
  %_11 = shl i64 %122, 32
  %_12 = sub i64 0, %122
  %gen = add i64 %_12, 32
  %_13 = sub i64 0, %122
  %gen14 = add i64 %_13, 32
  %_15 = sub i64 %122, 32
  %gen16 = mul i64 %_15, 32
  %_17 = shl i64 %122, 32
  %_18 = sub i64 %122, 32
  %gen19 = mul i64 %_18, 32
  %123 = udiv i64 %122, 32, !dbg !3952
  %124 = getelementptr inbounds i32, i32* %120, i64 %123, !dbg !3953
  store i32* %124, i32** %16, align 8, !dbg !3946
  call void @llvm.dbg.declare(metadata !4, metadata !4014, metadata !DIExpression()), !dbg !3955
  %125 = load i8, i8* %15, align 1, !dbg !3956
  %126 = zext i8 %125 to i64, !dbg !3956
  %_20 = sub i64 %126, 32
  %gen21 = mul i64 %_20, 32
  %_22 = sub i64 %126, 32
  %gen23 = mul i64 %_22, 32
  %_24 = shl i64 %126, 32
  %127 = urem i64 %126, 32, !dbg !3957
  %128 = trunc i64 %127 to i32, !dbg !3956
  store i32 %128, i32* %17, align 4, !dbg !3955
  call void @llvm.dbg.declare(metadata !4, metadata !4049, metadata !DIExpression()), !dbg !3959
  %129 = load i32*, i32** %16, align 8, !dbg !3960
  %130 = load i32, i32* %129, align 4, !dbg !3961
  %131 = load i32, i32* %17, align 4, !dbg !3962
  %_25 = shl i32 %130, %131
  %_26 = sub i32 %130, %131
  %gen27 = mul i32 %_26, %131
  %_28 = shl i32 %130, %131
  %_29 = sub i32 0, %130
  %gen30 = add i32 %_29, %131
  %_31 = sub i32 %130, %131
  %gen32 = mul i32 %_31, %131
  %_33 = sub i32 0, %130
  %gen34 = add i32 %_33, %131
  %132 = lshr i32 %130, %131, !dbg !3963
  %_35 = sub i32 0, %132
  %gen36 = add i32 %_35, 1
  %_37 = sub i32 %132, 1
  %gen38 = mul i32 %_37, 1
  %133 = and i32 %132, 1, !dbg !3964
  store i32 %133, i32* %18, align 4, !dbg !3959
  %134 = load i32, i32* %14, align 4, !dbg !3965
  %_39 = sub i32 %134, 1
  %gen40 = mul i32 %_39, 1
  %_41 = sub i32 0, %134
  %gen42 = add i32 %_41, 1
  %_43 = sub i32 0, %134
  %gen44 = add i32 %_43, 1
  %_45 = sub i32 0, %134
  %gen46 = add i32 %_45, 1
  %_47 = sub i32 %134, 1
  %gen48 = mul i32 %_47, 1
  %135 = and i32 %134, 1, !dbg !3966
  %136 = load i32, i32* %18, align 4, !dbg !3967
  %_49 = sub i32 %135, %136
  %gen50 = mul i32 %_49, %136
  %_51 = sub i32 0, %135
  %gen52 = add i32 %_51, %136
  %_53 = shl i32 %135, %136
  %_54 = sub i32 0, %135
  %gen55 = add i32 %_54, %136
  %_56 = sub i32 %135, %136
  %gen57 = mul i32 %_56, %136
  %_58 = sub i32 0, %135
  %gen59 = add i32 %_58, %136
  %137 = xor i32 %135, %136, !dbg !3968
  %138 = load i32, i32* %17, align 4, !dbg !3969
  %_60 = shl i32 %137, %138
  %_61 = sub i32 0, %137
  %gen62 = add i32 %_61, %138
  %_63 = sub i32 0, %137
  %gen64 = add i32 %_63, %138
  %_65 = shl i32 %137, %138
  %139 = shl i32 %137, %138, !dbg !3970
  %140 = load i32*, i32** %16, align 8, !dbg !3971
  %141 = load i32, i32* %140, align 4, !dbg !3972
  %_66 = shl i32 %141, %139
  %_67 = sub i32 0, %141
  %gen68 = add i32 %_67, %139
  %_69 = shl i32 %141, %139
  %_70 = sub i32 %141, %139
  %gen71 = mul i32 %_70, %139
  %_72 = sub i32 0, %141
  %gen73 = add i32 %_72, %139
  %_74 = sub i32 0, %141
  %gen75 = add i32 %_74, %139
  %_76 = shl i32 %141, %139
  %_77 = shl i32 %141, %139
  %142 = xor i32 %141, %139, !dbg !3972
  store i32 %142, i32* %140, align 4, !dbg !3972
  %143 = load i32, i32* %18, align 4, !dbg !3973
  br label %originalBB10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char_mem(i8*, i64, i8 signext) #4 !dbg !4050 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  %7 = alloca %struct.quoting_options, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4053, metadata !DIExpression()), !dbg !4054
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !4055, metadata !DIExpression()), !dbg !4056
  store i8 %2, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !4057, metadata !DIExpression()), !dbg !4058
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %7, metadata !4059, metadata !DIExpression()), !dbg !4060
  %8 = bitcast %struct.quoting_options* %7 to i8*, !dbg !4061
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !4061
  %9 = load i8, i8* %6, align 1, !dbg !4062
  %10 = call i32 @set_char_quoting(%struct.quoting_options* %7, i8 signext %9, i32 1), !dbg !4063
  %11 = load i8*, i8** %4, align 8, !dbg !4064
  %12 = load i64, i64* %5, align 8, !dbg !4065
  %13 = call i8* @quotearg_n_options(i32 0, i8* %11, i64 %12, %struct.quoting_options* %7), !dbg !4066
  ret i8* %13, !dbg !4067
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32, i8*, i64, %struct.quoting_options*) #4 !dbg !4068 {
  %5 = load i32, i32* @x.61
  %6 = load i32, i32* @y.62
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca %struct.quoting_options*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct.slotvec*, align 8
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i64, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i32, align 4
  %24 = alloca i64, align 8
  store i32 %0, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4073, metadata !DIExpression()), !dbg !4074
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !4075, metadata !DIExpression()), !dbg !4076
  store i64 %2, i64* %15, align 8
  call void @llvm.dbg.declare(metadata i64* %15, metadata !4077, metadata !DIExpression()), !dbg !4078
  store %struct.quoting_options* %3, %struct.quoting_options** %16, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %16, metadata !4079, metadata !DIExpression()), !dbg !4080
  call void @llvm.dbg.declare(metadata i32* %17, metadata !4081, metadata !DIExpression()), !dbg !4082
  %25 = call i32* @__errno_location() #15, !dbg !4083
  %26 = load i32, i32* %25, align 4, !dbg !4083
  store i32 %26, i32* %17, align 4, !dbg !4082
  call void @llvm.dbg.declare(metadata %struct.slotvec** %18, metadata !4084, metadata !DIExpression()), !dbg !4085
  %27 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !4086
  store %struct.slotvec* %27, %struct.slotvec** %18, align 8, !dbg !4085
  %28 = load i32, i32* %13, align 4, !dbg !4087
  %29 = icmp slt i32 %28, 0, !dbg !4089
  %30 = load i32, i32* @x.61
  %31 = load i32, i32* @y.62
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %29, label %38, label %55, !dbg !4090

38:                                               ; preds = %originalBBpart2
  %39 = load i32, i32* @x.61
  %40 = load i32, i32* @y.62
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %38, %originalBB1alteredBB
  call void @abort() #12, !dbg !4091
  %47 = load i32, i32* @x.61
  %48 = load i32, i32* @y.62
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable, !dbg !4091

55:                                               ; preds = %originalBBpart2
  %56 = load i32, i32* @x.61
  %57 = load i32, i32* @y.62
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %55, %originalBB6alteredBB
  %64 = load i32, i32* @nslots, align 4, !dbg !4092
  %65 = load i32, i32* %13, align 4, !dbg !4094
  %66 = icmp sle i32 %64, %65, !dbg !4095
  %67 = load i32, i32* @x.61
  %68 = load i32, i32* @y.62
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %66, label %75, label %229, !dbg !4096

75:                                               ; preds = %originalBBpart28
  call void @llvm.dbg.declare(metadata i8* %19, metadata !4097, metadata !DIExpression()), !dbg !4099
  %76 = load i32, i32* @x.61
  %77 = load i32, i32* @y.62
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %75, %originalBB10alteredBB
  %84 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !4100
  %85 = icmp eq %struct.slotvec* %84, @slotvec0, !dbg !4101
  %86 = zext i1 %85 to i8, !dbg !4099
  store i8 %86, i8* %19, align 1, !dbg !4099
  call void @llvm.dbg.declare(metadata i32* %20, metadata !4102, metadata !DIExpression()), !dbg !4103
  store i32 2147483646, i32* %20, align 4, !dbg !4103
  %87 = load i32, i32* %20, align 4, !dbg !4104
  %88 = load i32, i32* %13, align 4, !dbg !4106
  %89 = icmp slt i32 %87, %88, !dbg !4107
  %90 = load i32, i32* @x.61
  %91 = load i32, i32* @y.62
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %89, label %98, label %115, !dbg !4108

98:                                               ; preds = %originalBBpart212
  %99 = load i32, i32* @x.61
  %100 = load i32, i32* @y.62
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %98, %originalBB14alteredBB
  call void @xalloc_die() #14, !dbg !4109
  %107 = load i32, i32* @x.61
  %108 = load i32, i32* @y.62
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  unreachable, !dbg !4109

115:                                              ; preds = %originalBBpart212
  %116 = load i32, i32* @x.61
  %117 = load i32, i32* @y.62
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %115, %originalBB18alteredBB
  %124 = load i8, i8* %19, align 1, !dbg !4110
  %125 = trunc i8 %124 to i1, !dbg !4110
  %126 = load i32, i32* @x.61
  %127 = load i32, i32* @y.62
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %125, label %134, label %151, !dbg !4110

134:                                              ; preds = %originalBBpart220
  %135 = load i32, i32* @x.61
  %136 = load i32, i32* @y.62
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %134, %originalBB22alteredBB
  %143 = load i32, i32* @x.61
  %144 = load i32, i32* @y.62
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %169, !dbg !4110

151:                                              ; preds = %originalBBpart220
  %152 = load i32, i32* @x.61
  %153 = load i32, i32* @y.62
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %151, %originalBB26alteredBB
  %160 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !4111
  %161 = load i32, i32* @x.61
  %162 = load i32, i32* @y.62
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %169, !dbg !4110

169:                                              ; preds = %originalBBpart228, %originalBBpart224
  %170 = phi %struct.slotvec* [ null, %originalBBpart224 ], [ %160, %originalBBpart228 ], !dbg !4110
  %171 = load i32, i32* @x.61
  %172 = load i32, i32* @y.62
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %169, %originalBB30alteredBB
  %179 = bitcast %struct.slotvec* %170 to i8*, !dbg !4110
  %180 = load i32, i32* %13, align 4, !dbg !4112
  %181 = add nsw i32 %180, 1, !dbg !4113
  %182 = sext i32 %181 to i64, !dbg !4114
  %183 = mul i64 %182, 16, !dbg !4115
  %184 = call i8* @xrealloc(i8* %179, i64 %183), !dbg !4116
  %185 = bitcast i8* %184 to %struct.slotvec*, !dbg !4116
  store %struct.slotvec* %185, %struct.slotvec** %18, align 8, !dbg !4117
  store %struct.slotvec* %185, %struct.slotvec** @slotvec, align 8, !dbg !4118
  %186 = load i8, i8* %19, align 1, !dbg !4119
  %187 = trunc i8 %186 to i1, !dbg !4119
  %188 = load i32, i32* @x.61
  %189 = load i32, i32* @y.62
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBBpart234, label %originalBB30alteredBB

originalBBpart234:                                ; preds = %originalBB30
  br i1 %187, label %196, label %199, !dbg !4121

196:                                              ; preds = %originalBBpart234
  %197 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !4122
  %198 = bitcast %struct.slotvec* %197 to i8*, !dbg !4123
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %198, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !4123
  br label %199, !dbg !4124

199:                                              ; preds = %196, %originalBBpart234
  %200 = load i32, i32* @x.61
  %201 = load i32, i32* @y.62
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBB36, label %originalBB36alteredBB

originalBB36:                                     ; preds = %199, %originalBB36alteredBB
  %208 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !4125
  %209 = load i32, i32* @nslots, align 4, !dbg !4126
  %210 = sext i32 %209 to i64, !dbg !4127
  %211 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %208, i64 %210, !dbg !4127
  %212 = bitcast %struct.slotvec* %211 to i8*, !dbg !4128
  %213 = load i32, i32* %13, align 4, !dbg !4129
  %214 = add nsw i32 %213, 1, !dbg !4130
  %215 = load i32, i32* @nslots, align 4, !dbg !4131
  %216 = sub nsw i32 %214, %215, !dbg !4132
  %217 = sext i32 %216 to i64, !dbg !4133
  %218 = mul i64 %217, 16, !dbg !4134
  call void @llvm.memset.p0i8.i64(i8* align 8 %212, i8 0, i64 %218, i1 false), !dbg !4128
  %219 = load i32, i32* %13, align 4, !dbg !4135
  %220 = add nsw i32 %219, 1, !dbg !4136
  store i32 %220, i32* @nslots, align 4, !dbg !4137
  %221 = load i32, i32* @x.61
  %222 = load i32, i32* @y.62
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBBpart258, label %originalBB36alteredBB

originalBBpart258:                                ; preds = %originalBB36
  br label %229, !dbg !4138

229:                                              ; preds = %originalBBpart258, %originalBBpart28
  call void @llvm.dbg.declare(metadata i64* %21, metadata !4139, metadata !DIExpression()), !dbg !4141
  %230 = load i32, i32* @x.61
  %231 = load i32, i32* @y.62
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %229, %originalBB60alteredBB
  %238 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !4142
  %239 = load i32, i32* %13, align 4, !dbg !4143
  %240 = sext i32 %239 to i64, !dbg !4142
  %241 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %238, i64 %240, !dbg !4142
  %242 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %241, i32 0, i32 0, !dbg !4144
  %243 = load i64, i64* %242, align 8, !dbg !4144
  store i64 %243, i64* %21, align 8, !dbg !4141
  call void @llvm.dbg.declare(metadata i8** %22, metadata !4145, metadata !DIExpression()), !dbg !4146
  %244 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !4147
  %245 = load i32, i32* %13, align 4, !dbg !4148
  %246 = sext i32 %245 to i64, !dbg !4147
  %247 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %244, i64 %246, !dbg !4147
  %248 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %247, i32 0, i32 1, !dbg !4149
  %249 = load i8*, i8** %248, align 8, !dbg !4149
  store i8* %249, i8** %22, align 8, !dbg !4146
  call void @llvm.dbg.declare(metadata i32* %23, metadata !4150, metadata !DIExpression()), !dbg !4151
  %250 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !4152
  %251 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %250, i32 0, i32 1, !dbg !4153
  %252 = load i32, i32* %251, align 4, !dbg !4153
  %253 = or i32 %252, 1, !dbg !4154
  store i32 %253, i32* %23, align 4, !dbg !4151
  call void @llvm.dbg.declare(metadata i64* %24, metadata !4155, metadata !DIExpression()), !dbg !4156
  %254 = load i8*, i8** %22, align 8, !dbg !4157
  %255 = load i64, i64* %21, align 8, !dbg !4158
  %256 = load i8*, i8** %14, align 8, !dbg !4159
  %257 = load i64, i64* %15, align 8, !dbg !4160
  %258 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !4161
  %259 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %258, i32 0, i32 0, !dbg !4162
  %260 = load i32, i32* %259, align 8, !dbg !4162
  %261 = load i32, i32* %23, align 4, !dbg !4163
  %262 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !4164
  %263 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %262, i32 0, i32 2, !dbg !4165
  %264 = getelementptr inbounds [8 x i32], [8 x i32]* %263, i64 0, i64 0, !dbg !4164
  %265 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !4166
  %266 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %265, i32 0, i32 3, !dbg !4167
  %267 = load i8*, i8** %266, align 8, !dbg !4167
  %268 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !4168
  %269 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %268, i32 0, i32 4, !dbg !4169
  %270 = load i8*, i8** %269, align 8, !dbg !4169
  %271 = call i64 @quotearg_buffer_restyled(i8* %254, i64 %255, i8* %256, i64 %257, i32 %260, i32 %261, i32* %264, i8* %267, i8* %270), !dbg !4170
  store i64 %271, i64* %24, align 8, !dbg !4156
  %272 = load i64, i64* %21, align 8, !dbg !4171
  %273 = load i64, i64* %24, align 8, !dbg !4173
  %274 = icmp ule i64 %272, %273, !dbg !4174
  %275 = load i32, i32* @x.61
  %276 = load i32, i32* @y.62
  %277 = sub i32 %275, 1
  %278 = mul i32 %275, %277
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %280, %281
  br i1 %282, label %originalBBpart267, label %originalBB60alteredBB

originalBBpart267:                                ; preds = %originalBB60
  br i1 %274, label %283, label %369, !dbg !4175

283:                                              ; preds = %originalBBpart267
  %284 = load i32, i32* @x.61
  %285 = load i32, i32* @y.62
  %286 = sub i32 %284, 1
  %287 = mul i32 %284, %286
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %289, %290
  br i1 %291, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %283, %originalBB69alteredBB
  %292 = load i64, i64* %24, align 8, !dbg !4176
  %293 = add i64 %292, 1, !dbg !4178
  store i64 %293, i64* %21, align 8, !dbg !4179
  %294 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !4180
  %295 = load i32, i32* %13, align 4, !dbg !4181
  %296 = sext i32 %295 to i64, !dbg !4180
  %297 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %294, i64 %296, !dbg !4180
  %298 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %297, i32 0, i32 0, !dbg !4182
  store i64 %293, i64* %298, align 8, !dbg !4183
  %299 = load i8*, i8** %22, align 8, !dbg !4184
  %300 = icmp ne i8* %299, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !4186
  %301 = load i32, i32* @x.61
  %302 = load i32, i32* @y.62
  %303 = sub i32 %301, 1
  %304 = mul i32 %301, %303
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %302, 10
  %308 = or i1 %306, %307
  br i1 %308, label %originalBBpart279, label %originalBB69alteredBB

originalBBpart279:                                ; preds = %originalBB69
  br i1 %300, label %309, label %327, !dbg !4187

309:                                              ; preds = %originalBBpart279
  %310 = load i32, i32* @x.61
  %311 = load i32, i32* @y.62
  %312 = sub i32 %310, 1
  %313 = mul i32 %310, %312
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %315, %316
  br i1 %317, label %originalBB81, label %originalBB81alteredBB

originalBB81:                                     ; preds = %309, %originalBB81alteredBB
  %318 = load i8*, i8** %22, align 8, !dbg !4188
  call void @free(i8* %318) #10, !dbg !4189
  %319 = load i32, i32* @x.61
  %320 = load i32, i32* @y.62
  %321 = sub i32 %319, 1
  %322 = mul i32 %319, %321
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %324, %325
  br i1 %326, label %originalBBpart283, label %originalBB81alteredBB

originalBBpart283:                                ; preds = %originalBB81
  br label %327, !dbg !4189

327:                                              ; preds = %originalBBpart283, %originalBBpart279
  %328 = load i32, i32* @x.61
  %329 = load i32, i32* @y.62
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %327, %originalBB85alteredBB
  %336 = load i64, i64* %21, align 8, !dbg !4190
  %337 = call noalias i8* @xcharalloc(i64 %336), !dbg !4191
  store i8* %337, i8** %22, align 8, !dbg !4192
  %338 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !4193
  %339 = load i32, i32* %13, align 4, !dbg !4194
  %340 = sext i32 %339 to i64, !dbg !4193
  %341 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %338, i64 %340, !dbg !4193
  %342 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %341, i32 0, i32 1, !dbg !4195
  store i8* %337, i8** %342, align 8, !dbg !4196
  %343 = load i8*, i8** %22, align 8, !dbg !4197
  %344 = load i64, i64* %21, align 8, !dbg !4198
  %345 = load i8*, i8** %14, align 8, !dbg !4199
  %346 = load i64, i64* %15, align 8, !dbg !4200
  %347 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !4201
  %348 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %347, i32 0, i32 0, !dbg !4202
  %349 = load i32, i32* %348, align 8, !dbg !4202
  %350 = load i32, i32* %23, align 4, !dbg !4203
  %351 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !4204
  %352 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %351, i32 0, i32 2, !dbg !4205
  %353 = getelementptr inbounds [8 x i32], [8 x i32]* %352, i64 0, i64 0, !dbg !4204
  %354 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !4206
  %355 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %354, i32 0, i32 3, !dbg !4207
  %356 = load i8*, i8** %355, align 8, !dbg !4207
  %357 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !4208
  %358 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %357, i32 0, i32 4, !dbg !4209
  %359 = load i8*, i8** %358, align 8, !dbg !4209
  %360 = call i64 @quotearg_buffer_restyled(i8* %343, i64 %344, i8* %345, i64 %346, i32 %349, i32 %350, i32* %353, i8* %356, i8* %359), !dbg !4210
  %361 = load i32, i32* @x.61
  %362 = load i32, i32* @y.62
  %363 = sub i32 %361, 1
  %364 = mul i32 %361, %363
  %365 = urem i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = icmp slt i32 %362, 10
  %368 = or i1 %366, %367
  br i1 %368, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  br label %369, !dbg !4211

369:                                              ; preds = %originalBBpart287, %originalBBpart267
  %370 = load i32, i32* @x.61
  %371 = load i32, i32* @y.62
  %372 = sub i32 %370, 1
  %373 = mul i32 %370, %372
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %371, 10
  %377 = or i1 %375, %376
  br i1 %377, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %369, %originalBB89alteredBB
  %378 = load i32, i32* %17, align 4, !dbg !4212
  %379 = call i32* @__errno_location() #15, !dbg !4213
  store i32 %378, i32* %379, align 4, !dbg !4214
  %380 = load i8*, i8** %22, align 8, !dbg !4215
  %381 = load i32, i32* @x.61
  %382 = load i32, i32* @y.62
  %383 = sub i32 %381, 1
  %384 = mul i32 %381, %383
  %385 = urem i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %382, 10
  %388 = or i1 %386, %387
  br i1 %388, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  ret i8* %380, !dbg !4216

originalBBalteredBB:                              ; preds = %originalBB, %4
  %389 = alloca i32, align 4
  %390 = alloca i8*, align 8
  %391 = alloca i64, align 8
  %392 = alloca %struct.quoting_options*, align 8
  %393 = alloca i32, align 4
  %394 = alloca %struct.slotvec*, align 8
  %395 = alloca i8, align 1
  %396 = alloca i32, align 4
  %397 = alloca i64, align 8
  %398 = alloca i8*, align 8
  %399 = alloca i32, align 4
  %400 = alloca i64, align 8
  store i32 %0, i32* %389, align 4
  call void @llvm.dbg.declare(metadata i32* %389, metadata !4217, metadata !DIExpression()), !dbg !4074
  store i8* %1, i8** %390, align 8
  call void @llvm.dbg.declare(metadata i8** %390, metadata !4253, metadata !DIExpression()), !dbg !4076
  store i64 %2, i64* %391, align 8
  call void @llvm.dbg.declare(metadata i64* %391, metadata !4254, metadata !DIExpression()), !dbg !4078
  store %struct.quoting_options* %3, %struct.quoting_options** %392, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %392, metadata !4255, metadata !DIExpression()), !dbg !4080
  call void @llvm.dbg.declare(metadata i32* %393, metadata !4256, metadata !DIExpression()), !dbg !4082
  %401 = call i32* @__errno_location() #15, !dbg !4083
  %402 = load i32, i32* %401, align 4, !dbg !4083
  store i32 %402, i32* %393, align 4, !dbg !4082
  call void @llvm.dbg.declare(metadata %struct.slotvec** %394, metadata !4257, metadata !DIExpression()), !dbg !4085
  %403 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !4086
  store %struct.slotvec* %403, %struct.slotvec** %394, align 8, !dbg !4085
  %404 = load i32, i32* %389, align 4, !dbg !4087
  %405 = icmp slt i32 %404, 0, !dbg !4089
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %38
  call void @abort() #12, !dbg !4091
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %55
  %406 = load i32, i32* @nslots, align 4, !dbg !4092
  %407 = load i32, i32* %13, align 4, !dbg !4094
  %408 = icmp sle i32 %406, %407, !dbg !4095
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %75
  %409 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !4100
  %410 = icmp eq %struct.slotvec* %409, @slotvec0, !dbg !4101
  %411 = zext i1 %410 to i8, !dbg !4099
  store i8 %411, i8* %19, align 1, !dbg !4099
  call void @llvm.dbg.declare(metadata !4, metadata !4258, metadata !DIExpression()), !dbg !4103
  store i32 2147483646, i32* %20, align 4, !dbg !4103
  %412 = load i32, i32* %20, align 4, !dbg !4104
  %413 = load i32, i32* %13, align 4, !dbg !4106
  %414 = icmp slt i32 %412, %413, !dbg !4107
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %98
  call void @xalloc_die() #14, !dbg !4109
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %115
  %415 = load i8, i8* %19, align 1, !dbg !4110
  %416 = trunc i8 %415 to i1, !dbg !4110
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %134
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %151
  %417 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !4111
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %169
  %418 = bitcast %struct.slotvec* %170 to i8*, !dbg !4110
  %419 = load i32, i32* %13, align 4, !dbg !4112
  %_ = shl i32 %419, 1
  %_31 = shl i32 %419, 1
  %420 = add nsw i32 %419, 1, !dbg !4113
  %421 = sext i32 %420 to i64, !dbg !4114
  %_32 = sub i64 %421, 16
  %gen = mul i64 %_32, 16
  %422 = mul i64 %421, 16, !dbg !4115
  %423 = call i8* @xrealloc(i8* %418, i64 %422), !dbg !4116
  %424 = bitcast i8* %423 to %struct.slotvec*, !dbg !4116
  store %struct.slotvec* %424, %struct.slotvec** %18, align 8, !dbg !4117
  store %struct.slotvec* %424, %struct.slotvec** @slotvec, align 8, !dbg !4118
  %425 = load i8, i8* %19, align 1, !dbg !4119
  %426 = trunc i8 %425 to i1, !dbg !4119
  br label %originalBB30

originalBB36alteredBB:                            ; preds = %originalBB36, %199
  %427 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !4125
  %428 = load i32, i32* @nslots, align 4, !dbg !4126
  %429 = sext i32 %428 to i64, !dbg !4127
  %430 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %427, i64 %429, !dbg !4127
  %431 = bitcast %struct.slotvec* %430 to i8*, !dbg !4128
  %432 = load i32, i32* %13, align 4, !dbg !4129
  %_37 = sub i32 0, %432
  %gen38 = add i32 %_37, 1
  %433 = add nsw i32 %432, 1, !dbg !4130
  %434 = load i32, i32* @nslots, align 4, !dbg !4131
  %_39 = sub i32 %433, %434
  %gen40 = mul i32 %_39, %434
  %_41 = sub i32 %433, %434
  %gen42 = mul i32 %_41, %434
  %_43 = shl i32 %433, %434
  %_44 = sub i32 0, %433
  %gen45 = add i32 %_44, %434
  %_46 = sub i32 %433, %434
  %gen47 = mul i32 %_46, %434
  %_48 = sub i32 %433, %434
  %gen49 = mul i32 %_48, %434
  %435 = sub nsw i32 %433, %434, !dbg !4132
  %436 = sext i32 %435 to i64, !dbg !4133
  %_50 = shl i64 %436, 16
  %_51 = sub i64 0, %436
  %gen52 = add i64 %_51, 16
  %_53 = sub i64 %436, 16
  %gen54 = mul i64 %_53, 16
  %437 = mul i64 %436, 16, !dbg !4134
  call void @llvm.memset.p0i8.i64(i8* align 8 %431, i8 0, i64 %437, i1 false), !dbg !4128
  %438 = load i32, i32* %13, align 4, !dbg !4135
  %_55 = sub i32 0, %438
  %gen56 = add i32 %_55, 1
  %439 = add nsw i32 %438, 1, !dbg !4136
  store i32 %439, i32* @nslots, align 4, !dbg !4137
  br label %originalBB36

originalBB60alteredBB:                            ; preds = %originalBB60, %229
  %440 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !4142
  %441 = load i32, i32* %13, align 4, !dbg !4143
  %442 = sext i32 %441 to i64, !dbg !4142
  %443 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %440, i64 %442, !dbg !4142
  %444 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %443, i32 0, i32 0, !dbg !4144
  %445 = load i64, i64* %444, align 8, !dbg !4144
  store i64 %445, i64* %21, align 8, !dbg !4141
  call void @llvm.dbg.declare(metadata !4, metadata !4296, metadata !DIExpression()), !dbg !4146
  %446 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !4147
  %447 = load i32, i32* %13, align 4, !dbg !4148
  %448 = sext i32 %447 to i64, !dbg !4147
  %449 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %446, i64 %448, !dbg !4147
  %450 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %449, i32 0, i32 1, !dbg !4149
  %451 = load i8*, i8** %450, align 8, !dbg !4149
  store i8* %451, i8** %22, align 8, !dbg !4146
  call void @llvm.dbg.declare(metadata !4, metadata !4333, metadata !DIExpression()), !dbg !4151
  %452 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !4152
  %453 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %452, i32 0, i32 1, !dbg !4153
  %454 = load i32, i32* %453, align 4, !dbg !4153
  %_61 = shl i32 %454, 1
  %_62 = sub i32 0, %454
  %gen63 = add i32 %_62, 1
  %_64 = shl i32 %454, 1
  %_65 = shl i32 %454, 1
  %455 = or i32 %454, 1, !dbg !4154
  store i32 %455, i32* %23, align 4, !dbg !4151
  call void @llvm.dbg.declare(metadata !4, metadata !4334, metadata !DIExpression()), !dbg !4156
  %456 = load i8*, i8** %22, align 8, !dbg !4157
  %457 = load i64, i64* %21, align 8, !dbg !4158
  %458 = load i8*, i8** %14, align 8, !dbg !4159
  %459 = load i64, i64* %15, align 8, !dbg !4160
  %460 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !4161
  %461 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %460, i32 0, i32 0, !dbg !4162
  %462 = load i32, i32* %461, align 8, !dbg !4162
  %463 = load i32, i32* %23, align 4, !dbg !4163
  %464 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !4164
  %465 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %464, i32 0, i32 2, !dbg !4165
  %466 = getelementptr inbounds [8 x i32], [8 x i32]* %465, i64 0, i64 0, !dbg !4164
  %467 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !4166
  %468 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %467, i32 0, i32 3, !dbg !4167
  %469 = load i8*, i8** %468, align 8, !dbg !4167
  %470 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !4168
  %471 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %470, i32 0, i32 4, !dbg !4169
  %472 = load i8*, i8** %471, align 8, !dbg !4169
  %473 = call i64 @quotearg_buffer_restyled(i8* %456, i64 %457, i8* %458, i64 %459, i32 %462, i32 %463, i32* %466, i8* %469, i8* %472), !dbg !4170
  store i64 %473, i64* %24, align 8, !dbg !4156
  %474 = load i64, i64* %21, align 8, !dbg !4171
  %475 = load i64, i64* %24, align 8, !dbg !4173
  %476 = icmp ule i64 %474, %475, !dbg !4174
  br label %originalBB60

originalBB69alteredBB:                            ; preds = %originalBB69, %283
  %477 = load i64, i64* %24, align 8, !dbg !4176
  %_70 = sub i64 %477, 1
  %gen71 = mul i64 %_70, 1
  %_72 = shl i64 %477, 1
  %_73 = sub i64 0, %477
  %gen74 = add i64 %_73, 1
  %_75 = shl i64 %477, 1
  %_76 = sub i64 %477, 1
  %gen77 = mul i64 %_76, 1
  %478 = add i64 %477, 1, !dbg !4178
  store i64 %478, i64* %21, align 8, !dbg !4179
  %479 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !4180
  %480 = load i32, i32* %13, align 4, !dbg !4181
  %481 = sext i32 %480 to i64, !dbg !4180
  %482 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %479, i64 %481, !dbg !4180
  %483 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %482, i32 0, i32 0, !dbg !4182
  store i64 %478, i64* %483, align 8, !dbg !4183
  %484 = load i8*, i8** %22, align 8, !dbg !4184
  %485 = icmp ne i8* %484, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !4186
  br label %originalBB69

originalBB81alteredBB:                            ; preds = %originalBB81, %309
  %486 = load i8*, i8** %22, align 8, !dbg !4188
  call void @free(i8* %486) #10, !dbg !4189
  br label %originalBB81

originalBB85alteredBB:                            ; preds = %originalBB85, %327
  %487 = load i64, i64* %21, align 8, !dbg !4190
  %488 = call noalias i8* @xcharalloc(i64 %487), !dbg !4191
  store i8* %488, i8** %22, align 8, !dbg !4192
  %489 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !4193
  %490 = load i32, i32* %13, align 4, !dbg !4194
  %491 = sext i32 %490 to i64, !dbg !4193
  %492 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %489, i64 %491, !dbg !4193
  %493 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %492, i32 0, i32 1, !dbg !4195
  store i8* %488, i8** %493, align 8, !dbg !4196
  %494 = load i8*, i8** %22, align 8, !dbg !4197
  %495 = load i64, i64* %21, align 8, !dbg !4198
  %496 = load i8*, i8** %14, align 8, !dbg !4199
  %497 = load i64, i64* %15, align 8, !dbg !4200
  %498 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !4201
  %499 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %498, i32 0, i32 0, !dbg !4202
  %500 = load i32, i32* %499, align 8, !dbg !4202
  %501 = load i32, i32* %23, align 4, !dbg !4203
  %502 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !4204
  %503 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %502, i32 0, i32 2, !dbg !4205
  %504 = getelementptr inbounds [8 x i32], [8 x i32]* %503, i64 0, i64 0, !dbg !4204
  %505 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !4206
  %506 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %505, i32 0, i32 3, !dbg !4207
  %507 = load i8*, i8** %506, align 8, !dbg !4207
  %508 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !4208
  %509 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %508, i32 0, i32 4, !dbg !4209
  %510 = load i8*, i8** %509, align 8, !dbg !4209
  %511 = call i64 @quotearg_buffer_restyled(i8* %494, i64 %495, i8* %496, i64 %497, i32 %500, i32 %501, i32* %504, i8* %507, i8* %510), !dbg !4210
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %369
  %512 = load i32, i32* %17, align 4, !dbg !4212
  %513 = call i32* @__errno_location() #15, !dbg !4213
  store i32 %512, i32* %513, align 4, !dbg !4214
  %514 = load i8*, i8** %22, align 8, !dbg !4215
  br label %originalBB89
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8*, i64, i8*, i64, i32, i32, i32*, i8*, i8*) #4 !dbg !4335 {
  %10 = load i32, i32* @x.63
  %11 = load i32, i32* @y.64
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  %18 = alloca i64, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i64, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca i64, align 8
  %31 = alloca i8*, align 8
  %32 = alloca i64, align 8
  %33 = alloca i8, align 1
  %34 = alloca i8, align 1
  %35 = alloca i8, align 1
  %36 = alloca i8, align 1
  %37 = alloca i8, align 1
  %38 = alloca i8, align 1
  %39 = alloca i8, align 1
  %40 = alloca i8, align 1
  %41 = alloca i8, align 1
  %42 = alloca i8, align 1
  %43 = alloca i8, align 1
  %44 = alloca i64, align 8
  %45 = alloca i8, align 1
  %46 = alloca %struct.__mbstate_t, align 4
  %47 = alloca i32, align 4
  %48 = alloca i64, align 8
  %49 = alloca i64, align 8
  %50 = alloca i64, align 8
  store i8* %0, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !4340, metadata !DIExpression()), !dbg !4341
  store i64 %1, i64* %20, align 8
  call void @llvm.dbg.declare(metadata i64* %20, metadata !4342, metadata !DIExpression()), !dbg !4343
  store i8* %2, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !4344, metadata !DIExpression()), !dbg !4345
  store i64 %3, i64* %22, align 8
  call void @llvm.dbg.declare(metadata i64* %22, metadata !4346, metadata !DIExpression()), !dbg !4347
  store i32 %4, i32* %23, align 4
  call void @llvm.dbg.declare(metadata i32* %23, metadata !4348, metadata !DIExpression()), !dbg !4349
  store i32 %5, i32* %24, align 4
  call void @llvm.dbg.declare(metadata i32* %24, metadata !4350, metadata !DIExpression()), !dbg !4351
  store i32* %6, i32** %25, align 8
  call void @llvm.dbg.declare(metadata i32** %25, metadata !4352, metadata !DIExpression()), !dbg !4353
  store i8* %7, i8** %26, align 8
  call void @llvm.dbg.declare(metadata i8** %26, metadata !4354, metadata !DIExpression()), !dbg !4355
  store i8* %8, i8** %27, align 8
  call void @llvm.dbg.declare(metadata i8** %27, metadata !4356, metadata !DIExpression()), !dbg !4357
  call void @llvm.dbg.declare(metadata i64* %28, metadata !4358, metadata !DIExpression()), !dbg !4359
  call void @llvm.dbg.declare(metadata i64* %29, metadata !4360, metadata !DIExpression()), !dbg !4361
  store i64 0, i64* %29, align 8, !dbg !4361
  call void @llvm.dbg.declare(metadata i64* %30, metadata !4362, metadata !DIExpression()), !dbg !4363
  store i64 0, i64* %30, align 8, !dbg !4363
  call void @llvm.dbg.declare(metadata i8** %31, metadata !4364, metadata !DIExpression()), !dbg !4365
  store i8* null, i8** %31, align 8, !dbg !4365
  call void @llvm.dbg.declare(metadata i64* %32, metadata !4366, metadata !DIExpression()), !dbg !4367
  store i64 0, i64* %32, align 8, !dbg !4367
  call void @llvm.dbg.declare(metadata i8* %33, metadata !4368, metadata !DIExpression()), !dbg !4369
  store i8 0, i8* %33, align 1, !dbg !4369
  call void @llvm.dbg.declare(metadata i8* %34, metadata !4370, metadata !DIExpression()), !dbg !4371
  %51 = call i64 @__ctype_get_mb_cur_max() #10, !dbg !4372
  %52 = icmp eq i64 %51, 1, !dbg !4373
  %53 = zext i1 %52 to i8, !dbg !4371
  store i8 %53, i8* %34, align 1, !dbg !4371
  call void @llvm.dbg.declare(metadata i8* %35, metadata !4374, metadata !DIExpression()), !dbg !4375
  %54 = load i32, i32* %24, align 4, !dbg !4376
  %55 = and i32 %54, 2, !dbg !4377
  %56 = icmp ne i32 %55, 0, !dbg !4378
  %57 = zext i1 %56 to i8, !dbg !4375
  store i8 %57, i8* %35, align 1, !dbg !4375
  call void @llvm.dbg.declare(metadata i8* %36, metadata !4379, metadata !DIExpression()), !dbg !4380
  store i8 0, i8* %36, align 1, !dbg !4380
  call void @llvm.dbg.declare(metadata i8* %37, metadata !4381, metadata !DIExpression()), !dbg !4382
  store i8 0, i8* %37, align 1, !dbg !4382
  call void @llvm.dbg.declare(metadata i8* %38, metadata !4383, metadata !DIExpression()), !dbg !4384
  store i8 1, i8* %38, align 1, !dbg !4384
  %58 = load i32, i32* @x.63
  %59 = load i32, i32* @y.64
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %66, !dbg !4385

66:                                               ; preds = %originalBBpart21696, %originalBBpart2
  call void @llvm.dbg.label(metadata !4386), !dbg !4387
  %67 = load i32, i32* @x.63
  %68 = load i32, i32* @y.64
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB9, label %originalBB9alteredBB

originalBB9:                                      ; preds = %66, %originalBB9alteredBB
  %75 = load i32, i32* %23, align 4, !dbg !4388
  %76 = load i32, i32* @x.63
  %77 = load i32, i32* @y.64
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart211, label %originalBB9alteredBB

originalBBpart211:                                ; preds = %originalBB9
  switch i32 %75, label %664 [
    i32 6, label %84
    i32 5, label %101
    i32 7, label %230
    i32 8, label %247
    i32 9, label %247
    i32 10, label %247
    i32 3, label %431
    i32 1, label %448
    i32 4, label %465
    i32 2, label %518
    i32 0, label %647
  ], !dbg !4389

84:                                               ; preds = %originalBBpart211
  %85 = load i32, i32* @x.63
  %86 = load i32, i32* @y.64
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %84, %originalBB13alteredBB
  store i32 5, i32* %23, align 4, !dbg !4390
  store i8 1, i8* %35, align 1, !dbg !4392
  %93 = load i32, i32* @x.63
  %94 = load i32, i32* @y.64
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  br label %101, !dbg !4393

101:                                              ; preds = %originalBBpart215, %originalBBpart211
  %102 = load i32, i32* @x.63
  %103 = load i32, i32* @y.64
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %101, %originalBB17alteredBB
  %110 = load i8, i8* %35, align 1, !dbg !4394
  %111 = trunc i8 %110 to i1, !dbg !4394
  %112 = load i32, i32* @x.63
  %113 = load i32, i32* @y.64
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  br i1 %111, label %213, label %120, !dbg !4396

120:                                              ; preds = %originalBBpart219
  %121 = load i32, i32* @x.63
  %122 = load i32, i32* @y.64
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %120, %originalBB21alteredBB
  %129 = load i32, i32* @x.63
  %130 = load i32, i32* @y.64
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  br label %137, !dbg !4397

137:                                              ; preds = %originalBBpart223
  %138 = load i32, i32* @x.63
  %139 = load i32, i32* @y.64
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %137, %originalBB25alteredBB
  %146 = load i64, i64* %29, align 8, !dbg !4398
  %147 = load i64, i64* %20, align 8, !dbg !4398
  %148 = icmp ult i64 %146, %147, !dbg !4398
  %149 = load i32, i32* @x.63
  %150 = load i32, i32* @y.64
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  br i1 %148, label %157, label %177, !dbg !4401

157:                                              ; preds = %originalBBpart227
  %158 = load i32, i32* @x.63
  %159 = load i32, i32* @y.64
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %157, %originalBB29alteredBB
  %166 = load i8*, i8** %19, align 8, !dbg !4398
  %167 = load i64, i64* %29, align 8, !dbg !4398
  %168 = getelementptr inbounds i8, i8* %166, i64 %167, !dbg !4398
  store i8 34, i8* %168, align 1, !dbg !4398
  %169 = load i32, i32* @x.63
  %170 = load i32, i32* @y.64
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br label %177, !dbg !4398

177:                                              ; preds = %originalBBpart231, %originalBBpart227
  %178 = load i32, i32* @x.63
  %179 = load i32, i32* @y.64
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %177, %originalBB33alteredBB
  %186 = load i64, i64* %29, align 8, !dbg !4401
  %187 = add i64 %186, 1, !dbg !4401
  store i64 %187, i64* %29, align 8, !dbg !4401
  %188 = load i32, i32* @x.63
  %189 = load i32, i32* @y.64
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBBpart239, label %originalBB33alteredBB

originalBBpart239:                                ; preds = %originalBB33
  br label %196, !dbg !4401

196:                                              ; preds = %originalBBpart239
  %197 = load i32, i32* @x.63
  %198 = load i32, i32* @y.64
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %196, %originalBB41alteredBB
  %205 = load i32, i32* @x.63
  %206 = load i32, i32* @y.64
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  br label %213, !dbg !4401

213:                                              ; preds = %originalBBpart243, %originalBBpart219
  %214 = load i32, i32* @x.63
  %215 = load i32, i32* @y.64
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %213, %originalBB45alteredBB
  store i8 1, i8* %33, align 1, !dbg !4402
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.120, i64 0, i64 0), i8** %31, align 8, !dbg !4403
  store i64 1, i64* %32, align 8, !dbg !4404
  %222 = load i32, i32* @x.63
  %223 = load i32, i32* @y.64
  %224 = sub i32 %222, 1
  %225 = mul i32 %222, %224
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %227, %228
  br i1 %229, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  br label %665, !dbg !4405

230:                                              ; preds = %originalBBpart211
  %231 = load i32, i32* @x.63
  %232 = load i32, i32* @y.64
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %230, %originalBB49alteredBB
  store i8 1, i8* %33, align 1, !dbg !4406
  store i8 0, i8* %35, align 1, !dbg !4407
  %239 = load i32, i32* @x.63
  %240 = load i32, i32* @y.64
  %241 = sub i32 %239, 1
  %242 = mul i32 %239, %241
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %244, %245
  br i1 %246, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  br label %665, !dbg !4408

247:                                              ; preds = %originalBBpart211, %originalBBpart211, %originalBBpart211
  %248 = load i32, i32* %23, align 4, !dbg !4409
  %249 = icmp ne i32 %248, 10, !dbg !4412
  br i1 %249, label %250, label %271, !dbg !4413

250:                                              ; preds = %247
  %251 = load i32, i32* @x.63
  %252 = load i32, i32* @y.64
  %253 = sub i32 %251, 1
  %254 = mul i32 %251, %253
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %256, %257
  br i1 %258, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %250, %originalBB53alteredBB
  %259 = load i32, i32* %23, align 4, !dbg !4414
  %260 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.121, i64 0, i64 0), i32 %259), !dbg !4416
  store i8* %260, i8** %26, align 8, !dbg !4417
  %261 = load i32, i32* %23, align 4, !dbg !4418
  %262 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.122, i64 0, i64 0), i32 %261), !dbg !4419
  store i8* %262, i8** %27, align 8, !dbg !4420
  %263 = load i32, i32* @x.63
  %264 = load i32, i32* @y.64
  %265 = sub i32 %263, 1
  %266 = mul i32 %263, %265
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %268, %269
  br i1 %270, label %originalBBpart255, label %originalBB53alteredBB

originalBBpart255:                                ; preds = %originalBB53
  br label %271, !dbg !4421

271:                                              ; preds = %originalBBpart255, %247
  %272 = load i8, i8* %35, align 1, !dbg !4422
  %273 = trunc i8 %272 to i1, !dbg !4422
  br i1 %273, label %411, label %274, !dbg !4424

274:                                              ; preds = %271
  %275 = load i32, i32* @x.63
  %276 = load i32, i32* @y.64
  %277 = sub i32 %275, 1
  %278 = mul i32 %275, %277
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %280, %281
  br i1 %282, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %274, %originalBB57alteredBB
  %283 = load i8*, i8** %26, align 8, !dbg !4425
  store i8* %283, i8** %31, align 8, !dbg !4427
  %284 = load i32, i32* @x.63
  %285 = load i32, i32* @y.64
  %286 = sub i32 %284, 1
  %287 = mul i32 %284, %286
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %289, %290
  br i1 %291, label %originalBBpart259, label %originalBB57alteredBB

originalBBpart259:                                ; preds = %originalBB57
  br label %292, !dbg !4428

292:                                              ; preds = %originalBBpart289, %originalBBpart259
  %293 = load i8*, i8** %31, align 8, !dbg !4429
  %294 = load i8, i8* %293, align 1, !dbg !4431
  %295 = icmp ne i8 %294, 0, !dbg !4432
  br i1 %295, label %296, label %394, !dbg !4432

296:                                              ; preds = %292
  %297 = load i32, i32* @x.63
  %298 = load i32, i32* @y.64
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %296, %originalBB61alteredBB
  %305 = load i32, i32* @x.63
  %306 = load i32, i32* @y.64
  %307 = sub i32 %305, 1
  %308 = mul i32 %305, %307
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %310, %311
  br i1 %312, label %originalBBpart263, label %originalBB61alteredBB

originalBBpart263:                                ; preds = %originalBB61
  br label %313, !dbg !4433

313:                                              ; preds = %originalBBpart263
  %314 = load i32, i32* @x.63
  %315 = load i32, i32* @y.64
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %313, %originalBB65alteredBB
  %322 = load i64, i64* %29, align 8, !dbg !4434
  %323 = load i64, i64* %20, align 8, !dbg !4434
  %324 = icmp ult i64 %322, %323, !dbg !4434
  %325 = load i32, i32* @x.63
  %326 = load i32, i32* @y.64
  %327 = sub i32 %325, 1
  %328 = mul i32 %325, %327
  %329 = urem i32 %328, 2
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %330, %331
  br i1 %332, label %originalBBpart267, label %originalBB65alteredBB

originalBBpart267:                                ; preds = %originalBB65
  br i1 %324, label %333, label %355, !dbg !4437

333:                                              ; preds = %originalBBpart267
  %334 = load i32, i32* @x.63
  %335 = load i32, i32* @y.64
  %336 = sub i32 %334, 1
  %337 = mul i32 %334, %336
  %338 = urem i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %339, %340
  br i1 %341, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %333, %originalBB69alteredBB
  %342 = load i8*, i8** %31, align 8, !dbg !4434
  %343 = load i8, i8* %342, align 1, !dbg !4434
  %344 = load i8*, i8** %19, align 8, !dbg !4434
  %345 = load i64, i64* %29, align 8, !dbg !4434
  %346 = getelementptr inbounds i8, i8* %344, i64 %345, !dbg !4434
  store i8 %343, i8* %346, align 1, !dbg !4434
  %347 = load i32, i32* @x.63
  %348 = load i32, i32* @y.64
  %349 = sub i32 %347, 1
  %350 = mul i32 %347, %349
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %352, %353
  br i1 %354, label %originalBBpart271, label %originalBB69alteredBB

originalBBpart271:                                ; preds = %originalBB69
  br label %355, !dbg !4434

355:                                              ; preds = %originalBBpart271, %originalBBpart267
  %356 = load i32, i32* @x.63
  %357 = load i32, i32* @y.64
  %358 = sub i32 %356, 1
  %359 = mul i32 %356, %358
  %360 = urem i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %361, %362
  br i1 %363, label %originalBB73, label %originalBB73alteredBB

originalBB73:                                     ; preds = %355, %originalBB73alteredBB
  %364 = load i64, i64* %29, align 8, !dbg !4437
  %365 = add i64 %364, 1, !dbg !4437
  store i64 %365, i64* %29, align 8, !dbg !4437
  %366 = load i32, i32* @x.63
  %367 = load i32, i32* @y.64
  %368 = sub i32 %366, 1
  %369 = mul i32 %366, %368
  %370 = urem i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %371, %372
  br i1 %373, label %originalBBpart285, label %originalBB73alteredBB

originalBBpart285:                                ; preds = %originalBB73
  br label %374, !dbg !4437

374:                                              ; preds = %originalBBpart285
  br label %375, !dbg !4437

375:                                              ; preds = %374
  %376 = load i32, i32* @x.63
  %377 = load i32, i32* @y.64
  %378 = sub i32 %376, 1
  %379 = mul i32 %376, %378
  %380 = urem i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %381, %382
  br i1 %383, label %originalBB87, label %originalBB87alteredBB

originalBB87:                                     ; preds = %375, %originalBB87alteredBB
  %384 = load i8*, i8** %31, align 8, !dbg !4438
  %385 = getelementptr inbounds i8, i8* %384, i32 1, !dbg !4438
  store i8* %385, i8** %31, align 8, !dbg !4438
  %386 = load i32, i32* @x.63
  %387 = load i32, i32* @y.64
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBBpart289, label %originalBB87alteredBB

originalBBpart289:                                ; preds = %originalBB87
  br label %292, !dbg !4439, !llvm.loop !4440

394:                                              ; preds = %292
  %395 = load i32, i32* @x.63
  %396 = load i32, i32* @y.64
  %397 = sub i32 %395, 1
  %398 = mul i32 %395, %397
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %400, %401
  br i1 %402, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %394, %originalBB91alteredBB
  %403 = load i32, i32* @x.63
  %404 = load i32, i32* @y.64
  %405 = sub i32 %403, 1
  %406 = mul i32 %403, %405
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %404, 10
  %410 = or i1 %408, %409
  br i1 %410, label %originalBBpart293, label %originalBB91alteredBB

originalBBpart293:                                ; preds = %originalBB91
  br label %411, !dbg !4441

411:                                              ; preds = %originalBBpart293, %271
  %412 = load i32, i32* @x.63
  %413 = load i32, i32* @y.64
  %414 = sub i32 %412, 1
  %415 = mul i32 %412, %414
  %416 = urem i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %413, 10
  %419 = or i1 %417, %418
  br i1 %419, label %originalBB95, label %originalBB95alteredBB

originalBB95:                                     ; preds = %411, %originalBB95alteredBB
  store i8 1, i8* %33, align 1, !dbg !4442
  %420 = load i8*, i8** %27, align 8, !dbg !4443
  store i8* %420, i8** %31, align 8, !dbg !4444
  %421 = load i8*, i8** %31, align 8, !dbg !4445
  %422 = call i64 @strlen(i8* %421) #13, !dbg !4446
  store i64 %422, i64* %32, align 8, !dbg !4447
  %423 = load i32, i32* @x.63
  %424 = load i32, i32* @y.64
  %425 = sub i32 %423, 1
  %426 = mul i32 %423, %425
  %427 = urem i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %424, 10
  %430 = or i1 %428, %429
  br i1 %430, label %originalBBpart297, label %originalBB95alteredBB

originalBBpart297:                                ; preds = %originalBB95
  br label %665, !dbg !4448

431:                                              ; preds = %originalBBpart211
  %432 = load i32, i32* @x.63
  %433 = load i32, i32* @y.64
  %434 = sub i32 %432, 1
  %435 = mul i32 %432, %434
  %436 = urem i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = icmp slt i32 %433, 10
  %439 = or i1 %437, %438
  br i1 %439, label %originalBB99, label %originalBB99alteredBB

originalBB99:                                     ; preds = %431, %originalBB99alteredBB
  store i8 1, i8* %33, align 1, !dbg !4449
  %440 = load i32, i32* @x.63
  %441 = load i32, i32* @y.64
  %442 = sub i32 %440, 1
  %443 = mul i32 %440, %442
  %444 = urem i32 %443, 2
  %445 = icmp eq i32 %444, 0
  %446 = icmp slt i32 %441, 10
  %447 = or i1 %445, %446
  br i1 %447, label %originalBBpart2101, label %originalBB99alteredBB

originalBBpart2101:                               ; preds = %originalBB99
  br label %448, !dbg !4450

448:                                              ; preds = %originalBBpart2101, %originalBBpart211
  %449 = load i32, i32* @x.63
  %450 = load i32, i32* @y.64
  %451 = sub i32 %449, 1
  %452 = mul i32 %449, %451
  %453 = urem i32 %452, 2
  %454 = icmp eq i32 %453, 0
  %455 = icmp slt i32 %450, 10
  %456 = or i1 %454, %455
  br i1 %456, label %originalBB103, label %originalBB103alteredBB

originalBB103:                                    ; preds = %448, %originalBB103alteredBB
  store i8 1, i8* %35, align 1, !dbg !4451
  %457 = load i32, i32* @x.63
  %458 = load i32, i32* @y.64
  %459 = sub i32 %457, 1
  %460 = mul i32 %457, %459
  %461 = urem i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = icmp slt i32 %458, 10
  %464 = or i1 %462, %463
  br i1 %464, label %originalBBpart2105, label %originalBB103alteredBB

originalBBpart2105:                               ; preds = %originalBB103
  br label %465, !dbg !4452

465:                                              ; preds = %originalBBpart2105, %originalBBpart211
  %466 = load i32, i32* @x.63
  %467 = load i32, i32* @y.64
  %468 = sub i32 %466, 1
  %469 = mul i32 %466, %468
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %467, 10
  %473 = or i1 %471, %472
  br i1 %473, label %originalBB107, label %originalBB107alteredBB

originalBB107:                                    ; preds = %465, %originalBB107alteredBB
  %474 = load i8, i8* %35, align 1, !dbg !4453
  %475 = trunc i8 %474 to i1, !dbg !4453
  %476 = load i32, i32* @x.63
  %477 = load i32, i32* @y.64
  %478 = sub i32 %476, 1
  %479 = mul i32 %476, %478
  %480 = urem i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = icmp slt i32 %477, 10
  %483 = or i1 %481, %482
  br i1 %483, label %originalBBpart2109, label %originalBB107alteredBB

originalBBpart2109:                               ; preds = %originalBB107
  br i1 %475, label %501, label %484, !dbg !4455

484:                                              ; preds = %originalBBpart2109
  %485 = load i32, i32* @x.63
  %486 = load i32, i32* @y.64
  %487 = sub i32 %485, 1
  %488 = mul i32 %485, %487
  %489 = urem i32 %488, 2
  %490 = icmp eq i32 %489, 0
  %491 = icmp slt i32 %486, 10
  %492 = or i1 %490, %491
  br i1 %492, label %originalBB111, label %originalBB111alteredBB

originalBB111:                                    ; preds = %484, %originalBB111alteredBB
  store i8 1, i8* %33, align 1, !dbg !4456
  %493 = load i32, i32* @x.63
  %494 = load i32, i32* @y.64
  %495 = sub i32 %493, 1
  %496 = mul i32 %493, %495
  %497 = urem i32 %496, 2
  %498 = icmp eq i32 %497, 0
  %499 = icmp slt i32 %494, 10
  %500 = or i1 %498, %499
  br i1 %500, label %originalBBpart2113, label %originalBB111alteredBB

originalBBpart2113:                               ; preds = %originalBB111
  br label %501, !dbg !4457

501:                                              ; preds = %originalBBpart2113, %originalBBpart2109
  %502 = load i32, i32* @x.63
  %503 = load i32, i32* @y.64
  %504 = sub i32 %502, 1
  %505 = mul i32 %502, %504
  %506 = urem i32 %505, 2
  %507 = icmp eq i32 %506, 0
  %508 = icmp slt i32 %503, 10
  %509 = or i1 %507, %508
  br i1 %509, label %originalBB115, label %originalBB115alteredBB

originalBB115:                                    ; preds = %501, %originalBB115alteredBB
  %510 = load i32, i32* @x.63
  %511 = load i32, i32* @y.64
  %512 = sub i32 %510, 1
  %513 = mul i32 %510, %512
  %514 = urem i32 %513, 2
  %515 = icmp eq i32 %514, 0
  %516 = icmp slt i32 %511, 10
  %517 = or i1 %515, %516
  br i1 %517, label %originalBBpart2117, label %originalBB115alteredBB

originalBBpart2117:                               ; preds = %originalBB115
  br label %518, !dbg !4458

518:                                              ; preds = %originalBBpart2117, %originalBBpart211
  %519 = load i32, i32* @x.63
  %520 = load i32, i32* @y.64
  %521 = sub i32 %519, 1
  %522 = mul i32 %519, %521
  %523 = urem i32 %522, 2
  %524 = icmp eq i32 %523, 0
  %525 = icmp slt i32 %520, 10
  %526 = or i1 %524, %525
  br i1 %526, label %originalBB119, label %originalBB119alteredBB

originalBB119:                                    ; preds = %518, %originalBB119alteredBB
  store i32 2, i32* %23, align 4, !dbg !4459
  %527 = load i8, i8* %35, align 1, !dbg !4460
  %528 = trunc i8 %527 to i1, !dbg !4460
  %529 = load i32, i32* @x.63
  %530 = load i32, i32* @y.64
  %531 = sub i32 %529, 1
  %532 = mul i32 %529, %531
  %533 = urem i32 %532, 2
  %534 = icmp eq i32 %533, 0
  %535 = icmp slt i32 %530, 10
  %536 = or i1 %534, %535
  br i1 %536, label %originalBBpart2121, label %originalBB119alteredBB

originalBBpart2121:                               ; preds = %originalBB119
  br i1 %528, label %630, label %537, !dbg !4462

537:                                              ; preds = %originalBBpart2121
  %538 = load i32, i32* @x.63
  %539 = load i32, i32* @y.64
  %540 = sub i32 %538, 1
  %541 = mul i32 %538, %540
  %542 = urem i32 %541, 2
  %543 = icmp eq i32 %542, 0
  %544 = icmp slt i32 %539, 10
  %545 = or i1 %543, %544
  br i1 %545, label %originalBB123, label %originalBB123alteredBB

originalBB123:                                    ; preds = %537, %originalBB123alteredBB
  %546 = load i32, i32* @x.63
  %547 = load i32, i32* @y.64
  %548 = sub i32 %546, 1
  %549 = mul i32 %546, %548
  %550 = urem i32 %549, 2
  %551 = icmp eq i32 %550, 0
  %552 = icmp slt i32 %547, 10
  %553 = or i1 %551, %552
  br i1 %553, label %originalBBpart2125, label %originalBB123alteredBB

originalBBpart2125:                               ; preds = %originalBB123
  br label %554, !dbg !4463

554:                                              ; preds = %originalBBpart2125
  %555 = load i32, i32* @x.63
  %556 = load i32, i32* @y.64
  %557 = sub i32 %555, 1
  %558 = mul i32 %555, %557
  %559 = urem i32 %558, 2
  %560 = icmp eq i32 %559, 0
  %561 = icmp slt i32 %556, 10
  %562 = or i1 %560, %561
  br i1 %562, label %originalBB127, label %originalBB127alteredBB

originalBB127:                                    ; preds = %554, %originalBB127alteredBB
  %563 = load i64, i64* %29, align 8, !dbg !4464
  %564 = load i64, i64* %20, align 8, !dbg !4464
  %565 = icmp ult i64 %563, %564, !dbg !4464
  %566 = load i32, i32* @x.63
  %567 = load i32, i32* @y.64
  %568 = sub i32 %566, 1
  %569 = mul i32 %566, %568
  %570 = urem i32 %569, 2
  %571 = icmp eq i32 %570, 0
  %572 = icmp slt i32 %567, 10
  %573 = or i1 %571, %572
  br i1 %573, label %originalBBpart2129, label %originalBB127alteredBB

originalBBpart2129:                               ; preds = %originalBB127
  br i1 %565, label %574, label %594, !dbg !4467

574:                                              ; preds = %originalBBpart2129
  %575 = load i32, i32* @x.63
  %576 = load i32, i32* @y.64
  %577 = sub i32 %575, 1
  %578 = mul i32 %575, %577
  %579 = urem i32 %578, 2
  %580 = icmp eq i32 %579, 0
  %581 = icmp slt i32 %576, 10
  %582 = or i1 %580, %581
  br i1 %582, label %originalBB131, label %originalBB131alteredBB

originalBB131:                                    ; preds = %574, %originalBB131alteredBB
  %583 = load i8*, i8** %19, align 8, !dbg !4464
  %584 = load i64, i64* %29, align 8, !dbg !4464
  %585 = getelementptr inbounds i8, i8* %583, i64 %584, !dbg !4464
  store i8 39, i8* %585, align 1, !dbg !4464
  %586 = load i32, i32* @x.63
  %587 = load i32, i32* @y.64
  %588 = sub i32 %586, 1
  %589 = mul i32 %586, %588
  %590 = urem i32 %589, 2
  %591 = icmp eq i32 %590, 0
  %592 = icmp slt i32 %587, 10
  %593 = or i1 %591, %592
  br i1 %593, label %originalBBpart2133, label %originalBB131alteredBB

originalBBpart2133:                               ; preds = %originalBB131
  br label %594, !dbg !4464

594:                                              ; preds = %originalBBpart2133, %originalBBpart2129
  %595 = load i32, i32* @x.63
  %596 = load i32, i32* @y.64
  %597 = sub i32 %595, 1
  %598 = mul i32 %595, %597
  %599 = urem i32 %598, 2
  %600 = icmp eq i32 %599, 0
  %601 = icmp slt i32 %596, 10
  %602 = or i1 %600, %601
  br i1 %602, label %originalBB135, label %originalBB135alteredBB

originalBB135:                                    ; preds = %594, %originalBB135alteredBB
  %603 = load i64, i64* %29, align 8, !dbg !4467
  %604 = add i64 %603, 1, !dbg !4467
  store i64 %604, i64* %29, align 8, !dbg !4467
  %605 = load i32, i32* @x.63
  %606 = load i32, i32* @y.64
  %607 = sub i32 %605, 1
  %608 = mul i32 %605, %607
  %609 = urem i32 %608, 2
  %610 = icmp eq i32 %609, 0
  %611 = icmp slt i32 %606, 10
  %612 = or i1 %610, %611
  br i1 %612, label %originalBBpart2151, label %originalBB135alteredBB

originalBBpart2151:                               ; preds = %originalBB135
  br label %613, !dbg !4467

613:                                              ; preds = %originalBBpart2151
  %614 = load i32, i32* @x.63
  %615 = load i32, i32* @y.64
  %616 = sub i32 %614, 1
  %617 = mul i32 %614, %616
  %618 = urem i32 %617, 2
  %619 = icmp eq i32 %618, 0
  %620 = icmp slt i32 %615, 10
  %621 = or i1 %619, %620
  br i1 %621, label %originalBB153, label %originalBB153alteredBB

originalBB153:                                    ; preds = %613, %originalBB153alteredBB
  %622 = load i32, i32* @x.63
  %623 = load i32, i32* @y.64
  %624 = sub i32 %622, 1
  %625 = mul i32 %622, %624
  %626 = urem i32 %625, 2
  %627 = icmp eq i32 %626, 0
  %628 = icmp slt i32 %623, 10
  %629 = or i1 %627, %628
  br i1 %629, label %originalBBpart2155, label %originalBB153alteredBB

originalBBpart2155:                               ; preds = %originalBB153
  br label %630, !dbg !4467

630:                                              ; preds = %originalBBpart2155, %originalBBpart2121
  %631 = load i32, i32* @x.63
  %632 = load i32, i32* @y.64
  %633 = sub i32 %631, 1
  %634 = mul i32 %631, %633
  %635 = urem i32 %634, 2
  %636 = icmp eq i32 %635, 0
  %637 = icmp slt i32 %632, 10
  %638 = or i1 %636, %637
  br i1 %638, label %originalBB157, label %originalBB157alteredBB

originalBB157:                                    ; preds = %630, %originalBB157alteredBB
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.122, i64 0, i64 0), i8** %31, align 8, !dbg !4468
  store i64 1, i64* %32, align 8, !dbg !4469
  %639 = load i32, i32* @x.63
  %640 = load i32, i32* @y.64
  %641 = sub i32 %639, 1
  %642 = mul i32 %639, %641
  %643 = urem i32 %642, 2
  %644 = icmp eq i32 %643, 0
  %645 = icmp slt i32 %640, 10
  %646 = or i1 %644, %645
  br i1 %646, label %originalBBpart2159, label %originalBB157alteredBB

originalBBpart2159:                               ; preds = %originalBB157
  br label %665, !dbg !4470

647:                                              ; preds = %originalBBpart211
  %648 = load i32, i32* @x.63
  %649 = load i32, i32* @y.64
  %650 = sub i32 %648, 1
  %651 = mul i32 %648, %650
  %652 = urem i32 %651, 2
  %653 = icmp eq i32 %652, 0
  %654 = icmp slt i32 %649, 10
  %655 = or i1 %653, %654
  br i1 %655, label %originalBB161, label %originalBB161alteredBB

originalBB161:                                    ; preds = %647, %originalBB161alteredBB
  store i8 0, i8* %35, align 1, !dbg !4471
  %656 = load i32, i32* @x.63
  %657 = load i32, i32* @y.64
  %658 = sub i32 %656, 1
  %659 = mul i32 %656, %658
  %660 = urem i32 %659, 2
  %661 = icmp eq i32 %660, 0
  %662 = icmp slt i32 %657, 10
  %663 = or i1 %661, %662
  br i1 %663, label %originalBBpart2163, label %originalBB161alteredBB

originalBBpart2163:                               ; preds = %originalBB161
  br label %665, !dbg !4472

664:                                              ; preds = %originalBBpart211
  call void @abort() #12, !dbg !4473
  unreachable, !dbg !4473

665:                                              ; preds = %originalBBpart2163, %originalBBpart2159, %originalBBpart297, %originalBBpart251, %originalBBpart247
  store i64 0, i64* %28, align 8, !dbg !4474
  br label %666, !dbg !4476

666:                                              ; preds = %originalBBpart21656, %665
  %667 = load i32, i32* @x.63
  %668 = load i32, i32* @y.64
  %669 = sub i32 %667, 1
  %670 = mul i32 %667, %669
  %671 = urem i32 %670, 2
  %672 = icmp eq i32 %671, 0
  %673 = icmp slt i32 %668, 10
  %674 = or i1 %672, %673
  br i1 %674, label %originalBB165, label %originalBB165alteredBB

originalBB165:                                    ; preds = %666, %originalBB165alteredBB
  %675 = load i64, i64* %22, align 8, !dbg !4477
  %676 = icmp eq i64 %675, -1, !dbg !4479
  %677 = load i32, i32* @x.63
  %678 = load i32, i32* @y.64
  %679 = sub i32 %677, 1
  %680 = mul i32 %677, %679
  %681 = urem i32 %680, 2
  %682 = icmp eq i32 %681, 0
  %683 = icmp slt i32 %678, 10
  %684 = or i1 %682, %683
  br i1 %684, label %originalBBpart2167, label %originalBB165alteredBB

originalBBpart2167:                               ; preds = %originalBB165
  br i1 %676, label %685, label %693, !dbg !4477

685:                                              ; preds = %originalBBpart2167
  %686 = load i8*, i8** %21, align 8, !dbg !4480
  %687 = load i64, i64* %28, align 8, !dbg !4481
  %688 = getelementptr inbounds i8, i8* %686, i64 %687, !dbg !4480
  %689 = load i8, i8* %688, align 1, !dbg !4480
  %690 = sext i8 %689 to i32, !dbg !4480
  %691 = icmp eq i32 %690, 0, !dbg !4482
  %692 = zext i1 %691 to i32, !dbg !4482
  br label %698, !dbg !4477

693:                                              ; preds = %originalBBpart2167
  %694 = load i64, i64* %28, align 8, !dbg !4483
  %695 = load i64, i64* %22, align 8, !dbg !4484
  %696 = icmp eq i64 %694, %695, !dbg !4485
  %697 = zext i1 %696 to i32, !dbg !4485
  br label %698, !dbg !4477

698:                                              ; preds = %693, %685
  %699 = phi i32 [ %692, %685 ], [ %697, %693 ], !dbg !4477
  %700 = load i32, i32* @x.63
  %701 = load i32, i32* @y.64
  %702 = sub i32 %700, 1
  %703 = mul i32 %700, %702
  %704 = urem i32 %703, 2
  %705 = icmp eq i32 %704, 0
  %706 = icmp slt i32 %701, 10
  %707 = or i1 %705, %706
  br i1 %707, label %originalBB169, label %originalBB169alteredBB

originalBB169:                                    ; preds = %698, %originalBB169alteredBB
  %708 = icmp ne i32 %699, 0, !dbg !4486
  %709 = xor i1 %708, true, !dbg !4486
  %710 = load i32, i32* @x.63
  %711 = load i32, i32* @y.64
  %712 = sub i32 %710, 1
  %713 = mul i32 %710, %712
  %714 = urem i32 %713, 2
  %715 = icmp eq i32 %714, 0
  %716 = icmp slt i32 %711, 10
  %717 = or i1 %715, %716
  br i1 %717, label %originalBBpart2172, label %originalBB169alteredBB

originalBBpart2172:                               ; preds = %originalBB169
  br i1 %709, label %718, label %5868, !dbg !4487

718:                                              ; preds = %originalBBpart2172
  call void @llvm.dbg.declare(metadata i8* %39, metadata !4488, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.declare(metadata i8* %40, metadata !4491, metadata !DIExpression()), !dbg !4492
  call void @llvm.dbg.declare(metadata i8* %41, metadata !4493, metadata !DIExpression()), !dbg !4494
  %719 = load i32, i32* @x.63
  %720 = load i32, i32* @y.64
  %721 = sub i32 %719, 1
  %722 = mul i32 %719, %721
  %723 = urem i32 %722, 2
  %724 = icmp eq i32 %723, 0
  %725 = icmp slt i32 %720, 10
  %726 = or i1 %724, %725
  br i1 %726, label %originalBB174, label %originalBB174alteredBB

originalBB174:                                    ; preds = %718, %originalBB174alteredBB
  store i8 0, i8* %41, align 1, !dbg !4494
  call void @llvm.dbg.declare(metadata i8* %42, metadata !4495, metadata !DIExpression()), !dbg !4496
  store i8 0, i8* %42, align 1, !dbg !4496
  call void @llvm.dbg.declare(metadata i8* %43, metadata !4497, metadata !DIExpression()), !dbg !4498
  store i8 0, i8* %43, align 1, !dbg !4498
  %727 = load i8, i8* %33, align 1, !dbg !4499
  %728 = trunc i8 %727 to i1, !dbg !4499
  %729 = load i32, i32* @x.63
  %730 = load i32, i32* @y.64
  %731 = sub i32 %729, 1
  %732 = mul i32 %729, %731
  %733 = urem i32 %732, 2
  %734 = icmp eq i32 %733, 0
  %735 = icmp slt i32 %730, 10
  %736 = or i1 %734, %735
  br i1 %736, label %originalBBpart2176, label %originalBB174alteredBB

originalBBpart2176:                               ; preds = %originalBB174
  br i1 %728, label %737, label %933, !dbg !4501

737:                                              ; preds = %originalBBpart2176
  %738 = load i32, i32* @x.63
  %739 = load i32, i32* @y.64
  %740 = sub i32 %738, 1
  %741 = mul i32 %738, %740
  %742 = urem i32 %741, 2
  %743 = icmp eq i32 %742, 0
  %744 = icmp slt i32 %739, 10
  %745 = or i1 %743, %744
  br i1 %745, label %originalBB178, label %originalBB178alteredBB

originalBB178:                                    ; preds = %737, %originalBB178alteredBB
  %746 = load i32, i32* %23, align 4, !dbg !4502
  %747 = icmp ne i32 %746, 2, !dbg !4503
  %748 = load i32, i32* @x.63
  %749 = load i32, i32* @y.64
  %750 = sub i32 %748, 1
  %751 = mul i32 %748, %750
  %752 = urem i32 %751, 2
  %753 = icmp eq i32 %752, 0
  %754 = icmp slt i32 %749, 10
  %755 = or i1 %753, %754
  br i1 %755, label %originalBBpart2180, label %originalBB178alteredBB

originalBBpart2180:                               ; preds = %originalBB178
  br i1 %747, label %756, label %933, !dbg !4504

756:                                              ; preds = %originalBBpart2180
  %757 = load i32, i32* @x.63
  %758 = load i32, i32* @y.64
  %759 = sub i32 %757, 1
  %760 = mul i32 %757, %759
  %761 = urem i32 %760, 2
  %762 = icmp eq i32 %761, 0
  %763 = icmp slt i32 %758, 10
  %764 = or i1 %762, %763
  br i1 %764, label %originalBB182, label %originalBB182alteredBB

originalBB182:                                    ; preds = %756, %originalBB182alteredBB
  %765 = load i64, i64* %32, align 8, !dbg !4505
  %766 = icmp ne i64 %765, 0, !dbg !4505
  %767 = load i32, i32* @x.63
  %768 = load i32, i32* @y.64
  %769 = sub i32 %767, 1
  %770 = mul i32 %767, %769
  %771 = urem i32 %770, 2
  %772 = icmp eq i32 %771, 0
  %773 = icmp slt i32 %768, 10
  %774 = or i1 %772, %773
  br i1 %774, label %originalBBpart2184, label %originalBB182alteredBB

originalBBpart2184:                               ; preds = %originalBB182
  br i1 %766, label %775, label %933, !dbg !4506

775:                                              ; preds = %originalBBpart2184
  %776 = load i32, i32* @x.63
  %777 = load i32, i32* @y.64
  %778 = sub i32 %776, 1
  %779 = mul i32 %776, %778
  %780 = urem i32 %779, 2
  %781 = icmp eq i32 %780, 0
  %782 = icmp slt i32 %777, 10
  %783 = or i1 %781, %782
  br i1 %783, label %originalBB186, label %originalBB186alteredBB

originalBB186:                                    ; preds = %775, %originalBB186alteredBB
  %784 = load i64, i64* %28, align 8, !dbg !4507
  %785 = load i64, i64* %32, align 8, !dbg !4508
  %786 = add i64 %784, %785, !dbg !4509
  %787 = load i64, i64* %22, align 8, !dbg !4510
  %788 = icmp eq i64 %787, -1, !dbg !4511
  %789 = load i32, i32* @x.63
  %790 = load i32, i32* @y.64
  %791 = sub i32 %789, 1
  %792 = mul i32 %789, %791
  %793 = urem i32 %792, 2
  %794 = icmp eq i32 %793, 0
  %795 = icmp slt i32 %790, 10
  %796 = or i1 %794, %795
  br i1 %796, label %originalBBpart2197, label %originalBB186alteredBB

originalBBpart2197:                               ; preds = %originalBB186
  br i1 %788, label %797, label %835, !dbg !4512

797:                                              ; preds = %originalBBpart2197
  %798 = load i32, i32* @x.63
  %799 = load i32, i32* @y.64
  %800 = sub i32 %798, 1
  %801 = mul i32 %798, %800
  %802 = urem i32 %801, 2
  %803 = icmp eq i32 %802, 0
  %804 = icmp slt i32 %799, 10
  %805 = or i1 %803, %804
  br i1 %805, label %originalBB199, label %originalBB199alteredBB

originalBB199:                                    ; preds = %797, %originalBB199alteredBB
  %806 = load i64, i64* %32, align 8, !dbg !4513
  %807 = icmp ult i64 1, %806, !dbg !4514
  %808 = load i32, i32* @x.63
  %809 = load i32, i32* @y.64
  %810 = sub i32 %808, 1
  %811 = mul i32 %808, %810
  %812 = urem i32 %811, 2
  %813 = icmp eq i32 %812, 0
  %814 = icmp slt i32 %809, 10
  %815 = or i1 %813, %814
  br i1 %815, label %originalBBpart2201, label %originalBB199alteredBB

originalBBpart2201:                               ; preds = %originalBB199
  br i1 %807, label %816, label %835, !dbg !4510

816:                                              ; preds = %originalBBpart2201
  %817 = load i32, i32* @x.63
  %818 = load i32, i32* @y.64
  %819 = sub i32 %817, 1
  %820 = mul i32 %817, %819
  %821 = urem i32 %820, 2
  %822 = icmp eq i32 %821, 0
  %823 = icmp slt i32 %818, 10
  %824 = or i1 %822, %823
  br i1 %824, label %originalBB203, label %originalBB203alteredBB

originalBB203:                                    ; preds = %816, %originalBB203alteredBB
  %825 = load i8*, i8** %21, align 8, !dbg !4515
  %826 = call i64 @strlen(i8* %825) #13, !dbg !4516
  store i64 %826, i64* %22, align 8, !dbg !4517
  %827 = load i32, i32* @x.63
  %828 = load i32, i32* @y.64
  %829 = sub i32 %827, 1
  %830 = mul i32 %827, %829
  %831 = urem i32 %830, 2
  %832 = icmp eq i32 %831, 0
  %833 = icmp slt i32 %828, 10
  %834 = or i1 %832, %833
  br i1 %834, label %originalBBpart2205, label %originalBB203alteredBB

originalBBpart2205:                               ; preds = %originalBB203
  br label %853, !dbg !4510

835:                                              ; preds = %originalBBpart2201, %originalBBpart2197
  %836 = load i32, i32* @x.63
  %837 = load i32, i32* @y.64
  %838 = sub i32 %836, 1
  %839 = mul i32 %836, %838
  %840 = urem i32 %839, 2
  %841 = icmp eq i32 %840, 0
  %842 = icmp slt i32 %837, 10
  %843 = or i1 %841, %842
  br i1 %843, label %originalBB207, label %originalBB207alteredBB

originalBB207:                                    ; preds = %835, %originalBB207alteredBB
  %844 = load i64, i64* %22, align 8, !dbg !4518
  %845 = load i32, i32* @x.63
  %846 = load i32, i32* @y.64
  %847 = sub i32 %845, 1
  %848 = mul i32 %845, %847
  %849 = urem i32 %848, 2
  %850 = icmp eq i32 %849, 0
  %851 = icmp slt i32 %846, 10
  %852 = or i1 %850, %851
  br i1 %852, label %originalBBpart2209, label %originalBB207alteredBB

originalBBpart2209:                               ; preds = %originalBB207
  br label %853, !dbg !4510

853:                                              ; preds = %originalBBpart2209, %originalBBpart2205
  %854 = phi i64 [ %826, %originalBBpart2205 ], [ %844, %originalBBpart2209 ], !dbg !4510
  %855 = load i32, i32* @x.63
  %856 = load i32, i32* @y.64
  %857 = sub i32 %855, 1
  %858 = mul i32 %855, %857
  %859 = urem i32 %858, 2
  %860 = icmp eq i32 %859, 0
  %861 = icmp slt i32 %856, 10
  %862 = or i1 %860, %861
  br i1 %862, label %originalBB211, label %originalBB211alteredBB

originalBB211:                                    ; preds = %853, %originalBB211alteredBB
  %863 = icmp ule i64 %786, %854, !dbg !4519
  %864 = load i32, i32* @x.63
  %865 = load i32, i32* @y.64
  %866 = sub i32 %864, 1
  %867 = mul i32 %864, %866
  %868 = urem i32 %867, 2
  %869 = icmp eq i32 %868, 0
  %870 = icmp slt i32 %865, 10
  %871 = or i1 %869, %870
  br i1 %871, label %originalBBpart2214, label %originalBB211alteredBB

originalBBpart2214:                               ; preds = %originalBB211
  br i1 %863, label %872, label %933, !dbg !4520

872:                                              ; preds = %originalBBpart2214
  %873 = load i8*, i8** %21, align 8, !dbg !4521
  %874 = load i64, i64* %28, align 8, !dbg !4522
  %875 = getelementptr inbounds i8, i8* %873, i64 %874, !dbg !4523
  %876 = load i8*, i8** %31, align 8, !dbg !4524
  %877 = load i64, i64* %32, align 8, !dbg !4525
  %878 = call i32 @memcmp(i8* %875, i8* %876, i64 %877) #13, !dbg !4526
  %879 = icmp eq i32 %878, 0, !dbg !4527
  br i1 %879, label %880, label %933, !dbg !4528

880:                                              ; preds = %872
  %881 = load i32, i32* @x.63
  %882 = load i32, i32* @y.64
  %883 = sub i32 %881, 1
  %884 = mul i32 %881, %883
  %885 = urem i32 %884, 2
  %886 = icmp eq i32 %885, 0
  %887 = icmp slt i32 %882, 10
  %888 = or i1 %886, %887
  br i1 %888, label %originalBB216, label %originalBB216alteredBB

originalBB216:                                    ; preds = %880, %originalBB216alteredBB
  %889 = load i8, i8* %35, align 1, !dbg !4529
  %890 = trunc i8 %889 to i1, !dbg !4529
  %891 = load i32, i32* @x.63
  %892 = load i32, i32* @y.64
  %893 = sub i32 %891, 1
  %894 = mul i32 %891, %893
  %895 = urem i32 %894, 2
  %896 = icmp eq i32 %895, 0
  %897 = icmp slt i32 %892, 10
  %898 = or i1 %896, %897
  br i1 %898, label %originalBBpart2218, label %originalBB216alteredBB

originalBBpart2218:                               ; preds = %originalBB216
  br i1 %890, label %899, label %916, !dbg !4532

899:                                              ; preds = %originalBBpart2218
  %900 = load i32, i32* @x.63
  %901 = load i32, i32* @y.64
  %902 = sub i32 %900, 1
  %903 = mul i32 %900, %902
  %904 = urem i32 %903, 2
  %905 = icmp eq i32 %904, 0
  %906 = icmp slt i32 %901, 10
  %907 = or i1 %905, %906
  br i1 %907, label %originalBB220, label %originalBB220alteredBB

originalBB220:                                    ; preds = %899, %originalBB220alteredBB
  %908 = load i32, i32* @x.63
  %909 = load i32, i32* @y.64
  %910 = sub i32 %908, 1
  %911 = mul i32 %908, %910
  %912 = urem i32 %911, 2
  %913 = icmp eq i32 %912, 0
  %914 = icmp slt i32 %909, 10
  %915 = or i1 %913, %914
  br i1 %915, label %originalBBpart2222, label %originalBB220alteredBB

originalBBpart2222:                               ; preds = %originalBB220
  br label %6366, !dbg !4533

916:                                              ; preds = %originalBBpart2218
  %917 = load i32, i32* @x.63
  %918 = load i32, i32* @y.64
  %919 = sub i32 %917, 1
  %920 = mul i32 %917, %919
  %921 = urem i32 %920, 2
  %922 = icmp eq i32 %921, 0
  %923 = icmp slt i32 %918, 10
  %924 = or i1 %922, %923
  br i1 %924, label %originalBB224, label %originalBB224alteredBB

originalBB224:                                    ; preds = %916, %originalBB224alteredBB
  store i8 1, i8* %41, align 1, !dbg !4534
  %925 = load i32, i32* @x.63
  %926 = load i32, i32* @y.64
  %927 = sub i32 %925, 1
  %928 = mul i32 %925, %927
  %929 = urem i32 %928, 2
  %930 = icmp eq i32 %929, 0
  %931 = icmp slt i32 %926, 10
  %932 = or i1 %930, %931
  br i1 %932, label %originalBBpart2226, label %originalBB224alteredBB

originalBBpart2226:                               ; preds = %originalBB224
  br label %933, !dbg !4535

933:                                              ; preds = %originalBBpart2226, %872, %originalBBpart2214, %originalBBpart2184, %originalBBpart2180, %originalBBpart2176
  %934 = load i32, i32* @x.63
  %935 = load i32, i32* @y.64
  %936 = sub i32 %934, 1
  %937 = mul i32 %934, %936
  %938 = urem i32 %937, 2
  %939 = icmp eq i32 %938, 0
  %940 = icmp slt i32 %935, 10
  %941 = or i1 %939, %940
  br i1 %941, label %originalBB228, label %originalBB228alteredBB

originalBB228:                                    ; preds = %933, %originalBB228alteredBB
  %942 = load i8*, i8** %21, align 8, !dbg !4536
  %943 = load i64, i64* %28, align 8, !dbg !4537
  %944 = getelementptr inbounds i8, i8* %942, i64 %943, !dbg !4536
  %945 = load i8, i8* %944, align 1, !dbg !4536
  store i8 %945, i8* %39, align 1, !dbg !4538
  %946 = load i8, i8* %39, align 1, !dbg !4539
  %947 = zext i8 %946 to i32, !dbg !4539
  %948 = load i32, i32* @x.63
  %949 = load i32, i32* @y.64
  %950 = sub i32 %948, 1
  %951 = mul i32 %948, %950
  %952 = urem i32 %951, 2
  %953 = icmp eq i32 %952, 0
  %954 = icmp slt i32 %949, 10
  %955 = or i1 %953, %954
  br i1 %955, label %originalBBpart2230, label %originalBB228alteredBB

originalBBpart2230:                               ; preds = %originalBB228
  switch i32 %947, label %3184 [
    i32 0, label %956
    i32 63, label %1669
    i32 7, label %2213
    i32 8, label %2230
    i32 12, label %2247
    i32 10, label %2264
    i32 13, label %2281
    i32 9, label %2298
    i32 11, label %2299
    i32 92, label %2316
    i32 123, label %2590
    i32 125, label %2590
    i32 35, label %2684
    i32 126, label %2684
    i32 32, label %2721
    i32 33, label %2738
    i32 34, label %2738
    i32 36, label %2738
    i32 38, label %2738
    i32 40, label %2738
    i32 41, label %2738
    i32 42, label %2738
    i32 59, label %2738
    i32 60, label %2738
    i32 61, label %2738
    i32 62, label %2738
    i32 91, label %2738
    i32 94, label %2738
    i32 96, label %2738
    i32 124, label %2738
    i32 39, label %2810
    i32 37, label %3167
    i32 43, label %3167
    i32 44, label %3167
    i32 45, label %3167
    i32 46, label %3167
    i32 47, label %3167
    i32 48, label %3167
    i32 49, label %3167
    i32 50, label %3167
    i32 51, label %3167
    i32 52, label %3167
    i32 53, label %3167
    i32 54, label %3167
    i32 55, label %3167
    i32 56, label %3167
    i32 57, label %3167
    i32 58, label %3167
    i32 65, label %3167
    i32 66, label %3167
    i32 67, label %3167
    i32 68, label %3167
    i32 69, label %3167
    i32 70, label %3167
    i32 71, label %3167
    i32 72, label %3167
    i32 73, label %3167
    i32 74, label %3167
    i32 75, label %3167
    i32 76, label %3167
    i32 77, label %3167
    i32 78, label %3167
    i32 79, label %3167
    i32 80, label %3167
    i32 81, label %3167
    i32 82, label %3167
    i32 83, label %3167
    i32 84, label %3167
    i32 85, label %3167
    i32 86, label %3167
    i32 87, label %3167
    i32 88, label %3167
    i32 89, label %3167
    i32 90, label %3167
    i32 93, label %3167
    i32 95, label %3167
    i32 97, label %3167
    i32 98, label %3167
    i32 99, label %3167
    i32 100, label %3167
    i32 101, label %3167
    i32 102, label %3167
    i32 103, label %3167
    i32 104, label %3167
    i32 105, label %3167
    i32 106, label %3167
    i32 107, label %3167
    i32 108, label %3167
    i32 109, label %3167
    i32 110, label %3167
    i32 111, label %3167
    i32 112, label %3167
    i32 113, label %3167
    i32 114, label %3167
    i32 115, label %3167
    i32 116, label %3167
    i32 117, label %3167
    i32 118, label %3167
    i32 119, label %3167
    i32 120, label %3167
    i32 121, label %3167
    i32 122, label %3167
  ], !dbg !4540

956:                                              ; preds = %originalBBpart2230
  %957 = load i32, i32* @x.63
  %958 = load i32, i32* @y.64
  %959 = sub i32 %957, 1
  %960 = mul i32 %957, %959
  %961 = urem i32 %960, 2
  %962 = icmp eq i32 %961, 0
  %963 = icmp slt i32 %958, 10
  %964 = or i1 %962, %963
  br i1 %964, label %originalBB232, label %originalBB232alteredBB

originalBB232:                                    ; preds = %956, %originalBB232alteredBB
  %965 = load i8, i8* %33, align 1, !dbg !4541
  %966 = trunc i8 %965 to i1, !dbg !4541
  %967 = load i32, i32* @x.63
  %968 = load i32, i32* @y.64
  %969 = sub i32 %967, 1
  %970 = mul i32 %967, %969
  %971 = urem i32 %970, 2
  %972 = icmp eq i32 %971, 0
  %973 = icmp slt i32 %968, 10
  %974 = or i1 %972, %973
  br i1 %974, label %originalBBpart2234, label %originalBB232alteredBB

originalBBpart2234:                               ; preds = %originalBB232
  br i1 %966, label %975, label %1598, !dbg !4544

975:                                              ; preds = %originalBBpart2234
  %976 = load i32, i32* @x.63
  %977 = load i32, i32* @y.64
  %978 = sub i32 %976, 1
  %979 = mul i32 %976, %978
  %980 = urem i32 %979, 2
  %981 = icmp eq i32 %980, 0
  %982 = icmp slt i32 %977, 10
  %983 = or i1 %981, %982
  br i1 %983, label %originalBB236, label %originalBB236alteredBB

originalBB236:                                    ; preds = %975, %originalBB236alteredBB
  %984 = load i32, i32* @x.63
  %985 = load i32, i32* @y.64
  %986 = sub i32 %984, 1
  %987 = mul i32 %984, %986
  %988 = urem i32 %987, 2
  %989 = icmp eq i32 %988, 0
  %990 = icmp slt i32 %985, 10
  %991 = or i1 %989, %990
  br i1 %991, label %originalBBpart2238, label %originalBB236alteredBB

originalBBpart2238:                               ; preds = %originalBB236
  br label %992, !dbg !4545

992:                                              ; preds = %originalBBpart2238
  %993 = load i32, i32* @x.63
  %994 = load i32, i32* @y.64
  %995 = sub i32 %993, 1
  %996 = mul i32 %993, %995
  %997 = urem i32 %996, 2
  %998 = icmp eq i32 %997, 0
  %999 = icmp slt i32 %994, 10
  %1000 = or i1 %998, %999
  br i1 %1000, label %originalBB240, label %originalBB240alteredBB

originalBB240:                                    ; preds = %992, %originalBB240alteredBB
  %1001 = load i8, i8* %35, align 1, !dbg !4547
  %1002 = trunc i8 %1001 to i1, !dbg !4547
  %1003 = load i32, i32* @x.63
  %1004 = load i32, i32* @y.64
  %1005 = sub i32 %1003, 1
  %1006 = mul i32 %1003, %1005
  %1007 = urem i32 %1006, 2
  %1008 = icmp eq i32 %1007, 0
  %1009 = icmp slt i32 %1004, 10
  %1010 = or i1 %1008, %1009
  br i1 %1010, label %originalBBpart2242, label %originalBB240alteredBB

originalBBpart2242:                               ; preds = %originalBB240
  br i1 %1002, label %1011, label %1028, !dbg !4550

1011:                                             ; preds = %originalBBpart2242
  %1012 = load i32, i32* @x.63
  %1013 = load i32, i32* @y.64
  %1014 = sub i32 %1012, 1
  %1015 = mul i32 %1012, %1014
  %1016 = urem i32 %1015, 2
  %1017 = icmp eq i32 %1016, 0
  %1018 = icmp slt i32 %1013, 10
  %1019 = or i1 %1017, %1018
  br i1 %1019, label %originalBB244, label %originalBB244alteredBB

originalBB244:                                    ; preds = %1011, %originalBB244alteredBB
  %1020 = load i32, i32* @x.63
  %1021 = load i32, i32* @y.64
  %1022 = sub i32 %1020, 1
  %1023 = mul i32 %1020, %1022
  %1024 = urem i32 %1023, 2
  %1025 = icmp eq i32 %1024, 0
  %1026 = icmp slt i32 %1021, 10
  %1027 = or i1 %1025, %1026
  br i1 %1027, label %originalBBpart2246, label %originalBB244alteredBB

originalBBpart2246:                               ; preds = %originalBB244
  br label %6366, !dbg !4547

1028:                                             ; preds = %originalBBpart2242
  %1029 = load i32, i32* @x.63
  %1030 = load i32, i32* @y.64
  %1031 = sub i32 %1029, 1
  %1032 = mul i32 %1029, %1031
  %1033 = urem i32 %1032, 2
  %1034 = icmp eq i32 %1033, 0
  %1035 = icmp slt i32 %1030, 10
  %1036 = or i1 %1034, %1035
  br i1 %1036, label %originalBB248, label %originalBB248alteredBB

originalBB248:                                    ; preds = %1028, %originalBB248alteredBB
  store i8 1, i8* %42, align 1, !dbg !4550
  %1037 = load i32, i32* %23, align 4, !dbg !4551
  %1038 = icmp eq i32 %1037, 2, !dbg !4551
  %1039 = load i32, i32* @x.63
  %1040 = load i32, i32* @y.64
  %1041 = sub i32 %1039, 1
  %1042 = mul i32 %1039, %1041
  %1043 = urem i32 %1042, 2
  %1044 = icmp eq i32 %1043, 0
  %1045 = icmp slt i32 %1040, 10
  %1046 = or i1 %1044, %1045
  br i1 %1046, label %originalBBpart2250, label %originalBB248alteredBB

originalBBpart2250:                               ; preds = %originalBB248
  br i1 %1038, label %1047, label %1279, !dbg !4551

1047:                                             ; preds = %originalBBpart2250
  %1048 = load i32, i32* @x.63
  %1049 = load i32, i32* @y.64
  %1050 = sub i32 %1048, 1
  %1051 = mul i32 %1048, %1050
  %1052 = urem i32 %1051, 2
  %1053 = icmp eq i32 %1052, 0
  %1054 = icmp slt i32 %1049, 10
  %1055 = or i1 %1053, %1054
  br i1 %1055, label %originalBB252, label %originalBB252alteredBB

originalBB252:                                    ; preds = %1047, %originalBB252alteredBB
  %1056 = load i8, i8* %36, align 1, !dbg !4551
  %1057 = trunc i8 %1056 to i1, !dbg !4551
  %1058 = load i32, i32* @x.63
  %1059 = load i32, i32* @y.64
  %1060 = sub i32 %1058, 1
  %1061 = mul i32 %1058, %1060
  %1062 = urem i32 %1061, 2
  %1063 = icmp eq i32 %1062, 0
  %1064 = icmp slt i32 %1059, 10
  %1065 = or i1 %1063, %1064
  br i1 %1065, label %originalBBpart2254, label %originalBB252alteredBB

originalBBpart2254:                               ; preds = %originalBB252
  br i1 %1057, label %1279, label %1066, !dbg !4550

1066:                                             ; preds = %originalBBpart2254
  %1067 = load i32, i32* @x.63
  %1068 = load i32, i32* @y.64
  %1069 = sub i32 %1067, 1
  %1070 = mul i32 %1067, %1069
  %1071 = urem i32 %1070, 2
  %1072 = icmp eq i32 %1071, 0
  %1073 = icmp slt i32 %1068, 10
  %1074 = or i1 %1072, %1073
  br i1 %1074, label %originalBB256, label %originalBB256alteredBB

originalBB256:                                    ; preds = %1066, %originalBB256alteredBB
  %1075 = load i32, i32* @x.63
  %1076 = load i32, i32* @y.64
  %1077 = sub i32 %1075, 1
  %1078 = mul i32 %1075, %1077
  %1079 = urem i32 %1078, 2
  %1080 = icmp eq i32 %1079, 0
  %1081 = icmp slt i32 %1076, 10
  %1082 = or i1 %1080, %1081
  br i1 %1082, label %originalBBpart2258, label %originalBB256alteredBB

originalBBpart2258:                               ; preds = %originalBB256
  br label %1083, !dbg !4553

1083:                                             ; preds = %originalBBpart2258
  %1084 = load i32, i32* @x.63
  %1085 = load i32, i32* @y.64
  %1086 = sub i32 %1084, 1
  %1087 = mul i32 %1084, %1086
  %1088 = urem i32 %1087, 2
  %1089 = icmp eq i32 %1088, 0
  %1090 = icmp slt i32 %1085, 10
  %1091 = or i1 %1089, %1090
  br i1 %1091, label %originalBB260, label %originalBB260alteredBB

originalBB260:                                    ; preds = %1083, %originalBB260alteredBB
  %1092 = load i64, i64* %29, align 8, !dbg !4555
  %1093 = load i64, i64* %20, align 8, !dbg !4555
  %1094 = icmp ult i64 %1092, %1093, !dbg !4555
  %1095 = load i32, i32* @x.63
  %1096 = load i32, i32* @y.64
  %1097 = sub i32 %1095, 1
  %1098 = mul i32 %1095, %1097
  %1099 = urem i32 %1098, 2
  %1100 = icmp eq i32 %1099, 0
  %1101 = icmp slt i32 %1096, 10
  %1102 = or i1 %1100, %1101
  br i1 %1102, label %originalBBpart2262, label %originalBB260alteredBB

originalBBpart2262:                               ; preds = %originalBB260
  br i1 %1094, label %1103, label %1123, !dbg !4558

1103:                                             ; preds = %originalBBpart2262
  %1104 = load i32, i32* @x.63
  %1105 = load i32, i32* @y.64
  %1106 = sub i32 %1104, 1
  %1107 = mul i32 %1104, %1106
  %1108 = urem i32 %1107, 2
  %1109 = icmp eq i32 %1108, 0
  %1110 = icmp slt i32 %1105, 10
  %1111 = or i1 %1109, %1110
  br i1 %1111, label %originalBB264, label %originalBB264alteredBB

originalBB264:                                    ; preds = %1103, %originalBB264alteredBB
  %1112 = load i8*, i8** %19, align 8, !dbg !4555
  %1113 = load i64, i64* %29, align 8, !dbg !4555
  %1114 = getelementptr inbounds i8, i8* %1112, i64 %1113, !dbg !4555
  store i8 39, i8* %1114, align 1, !dbg !4555
  %1115 = load i32, i32* @x.63
  %1116 = load i32, i32* @y.64
  %1117 = sub i32 %1115, 1
  %1118 = mul i32 %1115, %1117
  %1119 = urem i32 %1118, 2
  %1120 = icmp eq i32 %1119, 0
  %1121 = icmp slt i32 %1116, 10
  %1122 = or i1 %1120, %1121
  br i1 %1122, label %originalBBpart2266, label %originalBB264alteredBB

originalBBpart2266:                               ; preds = %originalBB264
  br label %1123, !dbg !4555

1123:                                             ; preds = %originalBBpart2266, %originalBBpart2262
  %1124 = load i32, i32* @x.63
  %1125 = load i32, i32* @y.64
  %1126 = sub i32 %1124, 1
  %1127 = mul i32 %1124, %1126
  %1128 = urem i32 %1127, 2
  %1129 = icmp eq i32 %1128, 0
  %1130 = icmp slt i32 %1125, 10
  %1131 = or i1 %1129, %1130
  br i1 %1131, label %originalBB268, label %originalBB268alteredBB

originalBB268:                                    ; preds = %1123, %originalBB268alteredBB
  %1132 = load i64, i64* %29, align 8, !dbg !4558
  %1133 = add i64 %1132, 1, !dbg !4558
  store i64 %1133, i64* %29, align 8, !dbg !4558
  %1134 = load i32, i32* @x.63
  %1135 = load i32, i32* @y.64
  %1136 = sub i32 %1134, 1
  %1137 = mul i32 %1134, %1136
  %1138 = urem i32 %1137, 2
  %1139 = icmp eq i32 %1138, 0
  %1140 = icmp slt i32 %1135, 10
  %1141 = or i1 %1139, %1140
  br i1 %1141, label %originalBBpart2274, label %originalBB268alteredBB

originalBBpart2274:                               ; preds = %originalBB268
  br label %1142, !dbg !4558

1142:                                             ; preds = %originalBBpart2274
  br label %1143, !dbg !4553

1143:                                             ; preds = %1142
  %1144 = load i32, i32* @x.63
  %1145 = load i32, i32* @y.64
  %1146 = sub i32 %1144, 1
  %1147 = mul i32 %1144, %1146
  %1148 = urem i32 %1147, 2
  %1149 = icmp eq i32 %1148, 0
  %1150 = icmp slt i32 %1145, 10
  %1151 = or i1 %1149, %1150
  br i1 %1151, label %originalBB276, label %originalBB276alteredBB

originalBB276:                                    ; preds = %1143, %originalBB276alteredBB
  %1152 = load i64, i64* %29, align 8, !dbg !4559
  %1153 = load i64, i64* %20, align 8, !dbg !4559
  %1154 = icmp ult i64 %1152, %1153, !dbg !4559
  %1155 = load i32, i32* @x.63
  %1156 = load i32, i32* @y.64
  %1157 = sub i32 %1155, 1
  %1158 = mul i32 %1155, %1157
  %1159 = urem i32 %1158, 2
  %1160 = icmp eq i32 %1159, 0
  %1161 = icmp slt i32 %1156, 10
  %1162 = or i1 %1160, %1161
  br i1 %1162, label %originalBBpart2278, label %originalBB276alteredBB

originalBBpart2278:                               ; preds = %originalBB276
  br i1 %1154, label %1163, label %1183, !dbg !4562

1163:                                             ; preds = %originalBBpart2278
  %1164 = load i32, i32* @x.63
  %1165 = load i32, i32* @y.64
  %1166 = sub i32 %1164, 1
  %1167 = mul i32 %1164, %1166
  %1168 = urem i32 %1167, 2
  %1169 = icmp eq i32 %1168, 0
  %1170 = icmp slt i32 %1165, 10
  %1171 = or i1 %1169, %1170
  br i1 %1171, label %originalBB280, label %originalBB280alteredBB

originalBB280:                                    ; preds = %1163, %originalBB280alteredBB
  %1172 = load i8*, i8** %19, align 8, !dbg !4559
  %1173 = load i64, i64* %29, align 8, !dbg !4559
  %1174 = getelementptr inbounds i8, i8* %1172, i64 %1173, !dbg !4559
  store i8 36, i8* %1174, align 1, !dbg !4559
  %1175 = load i32, i32* @x.63
  %1176 = load i32, i32* @y.64
  %1177 = sub i32 %1175, 1
  %1178 = mul i32 %1175, %1177
  %1179 = urem i32 %1178, 2
  %1180 = icmp eq i32 %1179, 0
  %1181 = icmp slt i32 %1176, 10
  %1182 = or i1 %1180, %1181
  br i1 %1182, label %originalBBpart2282, label %originalBB280alteredBB

originalBBpart2282:                               ; preds = %originalBB280
  br label %1183, !dbg !4559

1183:                                             ; preds = %originalBBpart2282, %originalBBpart2278
  %1184 = load i32, i32* @x.63
  %1185 = load i32, i32* @y.64
  %1186 = sub i32 %1184, 1
  %1187 = mul i32 %1184, %1186
  %1188 = urem i32 %1187, 2
  %1189 = icmp eq i32 %1188, 0
  %1190 = icmp slt i32 %1185, 10
  %1191 = or i1 %1189, %1190
  br i1 %1191, label %originalBB284, label %originalBB284alteredBB

originalBB284:                                    ; preds = %1183, %originalBB284alteredBB
  %1192 = load i64, i64* %29, align 8, !dbg !4562
  %1193 = add i64 %1192, 1, !dbg !4562
  store i64 %1193, i64* %29, align 8, !dbg !4562
  %1194 = load i32, i32* @x.63
  %1195 = load i32, i32* @y.64
  %1196 = sub i32 %1194, 1
  %1197 = mul i32 %1194, %1196
  %1198 = urem i32 %1197, 2
  %1199 = icmp eq i32 %1198, 0
  %1200 = icmp slt i32 %1195, 10
  %1201 = or i1 %1199, %1200
  br i1 %1201, label %originalBBpart2292, label %originalBB284alteredBB

originalBBpart2292:                               ; preds = %originalBB284
  br label %1202, !dbg !4562

1202:                                             ; preds = %originalBBpart2292
  %1203 = load i32, i32* @x.63
  %1204 = load i32, i32* @y.64
  %1205 = sub i32 %1203, 1
  %1206 = mul i32 %1203, %1205
  %1207 = urem i32 %1206, 2
  %1208 = icmp eq i32 %1207, 0
  %1209 = icmp slt i32 %1204, 10
  %1210 = or i1 %1208, %1209
  br i1 %1210, label %originalBB294, label %originalBB294alteredBB

originalBB294:                                    ; preds = %1202, %originalBB294alteredBB
  %1211 = load i32, i32* @x.63
  %1212 = load i32, i32* @y.64
  %1213 = sub i32 %1211, 1
  %1214 = mul i32 %1211, %1213
  %1215 = urem i32 %1214, 2
  %1216 = icmp eq i32 %1215, 0
  %1217 = icmp slt i32 %1212, 10
  %1218 = or i1 %1216, %1217
  br i1 %1218, label %originalBBpart2296, label %originalBB294alteredBB

originalBBpart2296:                               ; preds = %originalBB294
  br label %1219, !dbg !4553

1219:                                             ; preds = %originalBBpart2296
  %1220 = load i64, i64* %29, align 8, !dbg !4563
  %1221 = load i64, i64* %20, align 8, !dbg !4563
  %1222 = icmp ult i64 %1220, %1221, !dbg !4563
  br i1 %1222, label %1223, label %1243, !dbg !4566

1223:                                             ; preds = %1219
  %1224 = load i32, i32* @x.63
  %1225 = load i32, i32* @y.64
  %1226 = sub i32 %1224, 1
  %1227 = mul i32 %1224, %1226
  %1228 = urem i32 %1227, 2
  %1229 = icmp eq i32 %1228, 0
  %1230 = icmp slt i32 %1225, 10
  %1231 = or i1 %1229, %1230
  br i1 %1231, label %originalBB298, label %originalBB298alteredBB

originalBB298:                                    ; preds = %1223, %originalBB298alteredBB
  %1232 = load i8*, i8** %19, align 8, !dbg !4563
  %1233 = load i64, i64* %29, align 8, !dbg !4563
  %1234 = getelementptr inbounds i8, i8* %1232, i64 %1233, !dbg !4563
  store i8 39, i8* %1234, align 1, !dbg !4563
  %1235 = load i32, i32* @x.63
  %1236 = load i32, i32* @y.64
  %1237 = sub i32 %1235, 1
  %1238 = mul i32 %1235, %1237
  %1239 = urem i32 %1238, 2
  %1240 = icmp eq i32 %1239, 0
  %1241 = icmp slt i32 %1236, 10
  %1242 = or i1 %1240, %1241
  br i1 %1242, label %originalBBpart2300, label %originalBB298alteredBB

originalBBpart2300:                               ; preds = %originalBB298
  br label %1243, !dbg !4563

1243:                                             ; preds = %originalBBpart2300, %1219
  %1244 = load i32, i32* @x.63
  %1245 = load i32, i32* @y.64
  %1246 = sub i32 %1244, 1
  %1247 = mul i32 %1244, %1246
  %1248 = urem i32 %1247, 2
  %1249 = icmp eq i32 %1248, 0
  %1250 = icmp slt i32 %1245, 10
  %1251 = or i1 %1249, %1250
  br i1 %1251, label %originalBB302, label %originalBB302alteredBB

originalBB302:                                    ; preds = %1243, %originalBB302alteredBB
  %1252 = load i64, i64* %29, align 8, !dbg !4566
  %1253 = add i64 %1252, 1, !dbg !4566
  store i64 %1253, i64* %29, align 8, !dbg !4566
  %1254 = load i32, i32* @x.63
  %1255 = load i32, i32* @y.64
  %1256 = sub i32 %1254, 1
  %1257 = mul i32 %1254, %1256
  %1258 = urem i32 %1257, 2
  %1259 = icmp eq i32 %1258, 0
  %1260 = icmp slt i32 %1255, 10
  %1261 = or i1 %1259, %1260
  br i1 %1261, label %originalBBpart2307, label %originalBB302alteredBB

originalBBpart2307:                               ; preds = %originalBB302
  br label %1262, !dbg !4566

1262:                                             ; preds = %originalBBpart2307
  %1263 = load i32, i32* @x.63
  %1264 = load i32, i32* @y.64
  %1265 = sub i32 %1263, 1
  %1266 = mul i32 %1263, %1265
  %1267 = urem i32 %1266, 2
  %1268 = icmp eq i32 %1267, 0
  %1269 = icmp slt i32 %1264, 10
  %1270 = or i1 %1268, %1269
  br i1 %1270, label %originalBB309, label %originalBB309alteredBB

originalBB309:                                    ; preds = %1262, %originalBB309alteredBB
  store i8 1, i8* %36, align 1, !dbg !4553
  %1271 = load i32, i32* @x.63
  %1272 = load i32, i32* @y.64
  %1273 = sub i32 %1271, 1
  %1274 = mul i32 %1271, %1273
  %1275 = urem i32 %1274, 2
  %1276 = icmp eq i32 %1275, 0
  %1277 = icmp slt i32 %1272, 10
  %1278 = or i1 %1276, %1277
  br i1 %1278, label %originalBBpart2311, label %originalBB309alteredBB

originalBBpart2311:                               ; preds = %originalBB309
  br label %1279, !dbg !4553

1279:                                             ; preds = %originalBBpart2311, %originalBBpart2254, %originalBBpart2250
  %1280 = load i32, i32* @x.63
  %1281 = load i32, i32* @y.64
  %1282 = sub i32 %1280, 1
  %1283 = mul i32 %1280, %1282
  %1284 = urem i32 %1283, 2
  %1285 = icmp eq i32 %1284, 0
  %1286 = icmp slt i32 %1281, 10
  %1287 = or i1 %1285, %1286
  br i1 %1287, label %originalBB313, label %originalBB313alteredBB

originalBB313:                                    ; preds = %1279, %originalBB313alteredBB
  %1288 = load i32, i32* @x.63
  %1289 = load i32, i32* @y.64
  %1290 = sub i32 %1288, 1
  %1291 = mul i32 %1288, %1290
  %1292 = urem i32 %1291, 2
  %1293 = icmp eq i32 %1292, 0
  %1294 = icmp slt i32 %1289, 10
  %1295 = or i1 %1293, %1294
  br i1 %1295, label %originalBBpart2315, label %originalBB313alteredBB

originalBBpart2315:                               ; preds = %originalBB313
  br label %1296, !dbg !4550

1296:                                             ; preds = %originalBBpart2315
  %1297 = load i32, i32* @x.63
  %1298 = load i32, i32* @y.64
  %1299 = sub i32 %1297, 1
  %1300 = mul i32 %1297, %1299
  %1301 = urem i32 %1300, 2
  %1302 = icmp eq i32 %1301, 0
  %1303 = icmp slt i32 %1298, 10
  %1304 = or i1 %1302, %1303
  br i1 %1304, label %originalBB317, label %originalBB317alteredBB

originalBB317:                                    ; preds = %1296, %originalBB317alteredBB
  %1305 = load i64, i64* %29, align 8, !dbg !4567
  %1306 = load i64, i64* %20, align 8, !dbg !4567
  %1307 = icmp ult i64 %1305, %1306, !dbg !4567
  %1308 = load i32, i32* @x.63
  %1309 = load i32, i32* @y.64
  %1310 = sub i32 %1308, 1
  %1311 = mul i32 %1308, %1310
  %1312 = urem i32 %1311, 2
  %1313 = icmp eq i32 %1312, 0
  %1314 = icmp slt i32 %1309, 10
  %1315 = or i1 %1313, %1314
  br i1 %1315, label %originalBBpart2319, label %originalBB317alteredBB

originalBBpart2319:                               ; preds = %originalBB317
  br i1 %1307, label %1316, label %1336, !dbg !4570

1316:                                             ; preds = %originalBBpart2319
  %1317 = load i32, i32* @x.63
  %1318 = load i32, i32* @y.64
  %1319 = sub i32 %1317, 1
  %1320 = mul i32 %1317, %1319
  %1321 = urem i32 %1320, 2
  %1322 = icmp eq i32 %1321, 0
  %1323 = icmp slt i32 %1318, 10
  %1324 = or i1 %1322, %1323
  br i1 %1324, label %originalBB321, label %originalBB321alteredBB

originalBB321:                                    ; preds = %1316, %originalBB321alteredBB
  %1325 = load i8*, i8** %19, align 8, !dbg !4567
  %1326 = load i64, i64* %29, align 8, !dbg !4567
  %1327 = getelementptr inbounds i8, i8* %1325, i64 %1326, !dbg !4567
  store i8 92, i8* %1327, align 1, !dbg !4567
  %1328 = load i32, i32* @x.63
  %1329 = load i32, i32* @y.64
  %1330 = sub i32 %1328, 1
  %1331 = mul i32 %1328, %1330
  %1332 = urem i32 %1331, 2
  %1333 = icmp eq i32 %1332, 0
  %1334 = icmp slt i32 %1329, 10
  %1335 = or i1 %1333, %1334
  br i1 %1335, label %originalBBpart2323, label %originalBB321alteredBB

originalBBpart2323:                               ; preds = %originalBB321
  br label %1336, !dbg !4567

1336:                                             ; preds = %originalBBpart2323, %originalBBpart2319
  %1337 = load i32, i32* @x.63
  %1338 = load i32, i32* @y.64
  %1339 = sub i32 %1337, 1
  %1340 = mul i32 %1337, %1339
  %1341 = urem i32 %1340, 2
  %1342 = icmp eq i32 %1341, 0
  %1343 = icmp slt i32 %1338, 10
  %1344 = or i1 %1342, %1343
  br i1 %1344, label %originalBB325, label %originalBB325alteredBB

originalBB325:                                    ; preds = %1336, %originalBB325alteredBB
  %1345 = load i64, i64* %29, align 8, !dbg !4570
  %1346 = add i64 %1345, 1, !dbg !4570
  store i64 %1346, i64* %29, align 8, !dbg !4570
  %1347 = load i32, i32* @x.63
  %1348 = load i32, i32* @y.64
  %1349 = sub i32 %1347, 1
  %1350 = mul i32 %1347, %1349
  %1351 = urem i32 %1350, 2
  %1352 = icmp eq i32 %1351, 0
  %1353 = icmp slt i32 %1348, 10
  %1354 = or i1 %1352, %1353
  br i1 %1354, label %originalBBpart2327, label %originalBB325alteredBB

originalBBpart2327:                               ; preds = %originalBB325
  br label %1355, !dbg !4570

1355:                                             ; preds = %originalBBpart2327
  %1356 = load i32, i32* @x.63
  %1357 = load i32, i32* @y.64
  %1358 = sub i32 %1356, 1
  %1359 = mul i32 %1356, %1358
  %1360 = urem i32 %1359, 2
  %1361 = icmp eq i32 %1360, 0
  %1362 = icmp slt i32 %1357, 10
  %1363 = or i1 %1361, %1362
  br i1 %1363, label %originalBB329, label %originalBB329alteredBB

originalBB329:                                    ; preds = %1355, %originalBB329alteredBB
  %1364 = load i32, i32* @x.63
  %1365 = load i32, i32* @y.64
  %1366 = sub i32 %1364, 1
  %1367 = mul i32 %1364, %1366
  %1368 = urem i32 %1367, 2
  %1369 = icmp eq i32 %1368, 0
  %1370 = icmp slt i32 %1365, 10
  %1371 = or i1 %1369, %1370
  br i1 %1371, label %originalBBpart2331, label %originalBB329alteredBB

originalBBpart2331:                               ; preds = %originalBB329
  br label %1372, !dbg !4550

1372:                                             ; preds = %originalBBpart2331
  %1373 = load i32, i32* %23, align 4, !dbg !4571
  %1374 = icmp ne i32 %1373, 2, !dbg !4573
  br i1 %1374, label %1375, label %1581, !dbg !4574

1375:                                             ; preds = %1372
  %1376 = load i32, i32* @x.63
  %1377 = load i32, i32* @y.64
  %1378 = sub i32 %1376, 1
  %1379 = mul i32 %1376, %1378
  %1380 = urem i32 %1379, 2
  %1381 = icmp eq i32 %1380, 0
  %1382 = icmp slt i32 %1377, 10
  %1383 = or i1 %1381, %1382
  br i1 %1383, label %originalBB333, label %originalBB333alteredBB

originalBB333:                                    ; preds = %1375, %originalBB333alteredBB
  %1384 = load i64, i64* %28, align 8, !dbg !4575
  %1385 = add i64 %1384, 1, !dbg !4576
  %1386 = load i64, i64* %22, align 8, !dbg !4577
  %1387 = icmp ult i64 %1385, %1386, !dbg !4578
  %1388 = load i32, i32* @x.63
  %1389 = load i32, i32* @y.64
  %1390 = sub i32 %1388, 1
  %1391 = mul i32 %1388, %1390
  %1392 = urem i32 %1391, 2
  %1393 = icmp eq i32 %1392, 0
  %1394 = icmp slt i32 %1389, 10
  %1395 = or i1 %1393, %1394
  br i1 %1395, label %originalBBpart2341, label %originalBB333alteredBB

originalBBpart2341:                               ; preds = %originalBB333
  br i1 %1387, label %1396, label %1581, !dbg !4579

1396:                                             ; preds = %originalBBpart2341
  %1397 = load i32, i32* @x.63
  %1398 = load i32, i32* @y.64
  %1399 = sub i32 %1397, 1
  %1400 = mul i32 %1397, %1399
  %1401 = urem i32 %1400, 2
  %1402 = icmp eq i32 %1401, 0
  %1403 = icmp slt i32 %1398, 10
  %1404 = or i1 %1402, %1403
  br i1 %1404, label %originalBB343, label %originalBB343alteredBB

originalBB343:                                    ; preds = %1396, %originalBB343alteredBB
  %1405 = load i8*, i8** %21, align 8, !dbg !4580
  %1406 = load i64, i64* %28, align 8, !dbg !4581
  %1407 = add i64 %1406, 1, !dbg !4582
  %1408 = getelementptr inbounds i8, i8* %1405, i64 %1407, !dbg !4580
  %1409 = load i8, i8* %1408, align 1, !dbg !4580
  %1410 = sext i8 %1409 to i32, !dbg !4580
  %1411 = icmp sle i32 48, %1410, !dbg !4583
  %1412 = load i32, i32* @x.63
  %1413 = load i32, i32* @y.64
  %1414 = sub i32 %1412, 1
  %1415 = mul i32 %1412, %1414
  %1416 = urem i32 %1415, 2
  %1417 = icmp eq i32 %1416, 0
  %1418 = icmp slt i32 %1413, 10
  %1419 = or i1 %1417, %1418
  br i1 %1419, label %originalBBpart2355, label %originalBB343alteredBB

originalBBpart2355:                               ; preds = %originalBB343
  br i1 %1411, label %1420, label %1581, !dbg !4584

1420:                                             ; preds = %originalBBpart2355
  %1421 = load i32, i32* @x.63
  %1422 = load i32, i32* @y.64
  %1423 = sub i32 %1421, 1
  %1424 = mul i32 %1421, %1423
  %1425 = urem i32 %1424, 2
  %1426 = icmp eq i32 %1425, 0
  %1427 = icmp slt i32 %1422, 10
  %1428 = or i1 %1426, %1427
  br i1 %1428, label %originalBB357, label %originalBB357alteredBB

originalBB357:                                    ; preds = %1420, %originalBB357alteredBB
  %1429 = load i8*, i8** %21, align 8, !dbg !4585
  %1430 = load i64, i64* %28, align 8, !dbg !4586
  %1431 = add i64 %1430, 1, !dbg !4587
  %1432 = getelementptr inbounds i8, i8* %1429, i64 %1431, !dbg !4585
  %1433 = load i8, i8* %1432, align 1, !dbg !4585
  %1434 = sext i8 %1433 to i32, !dbg !4585
  %1435 = icmp sle i32 %1434, 57, !dbg !4588
  %1436 = load i32, i32* @x.63
  %1437 = load i32, i32* @y.64
  %1438 = sub i32 %1436, 1
  %1439 = mul i32 %1436, %1438
  %1440 = urem i32 %1439, 2
  %1441 = icmp eq i32 %1440, 0
  %1442 = icmp slt i32 %1437, 10
  %1443 = or i1 %1441, %1442
  br i1 %1443, label %originalBBpart2361, label %originalBB357alteredBB

originalBBpart2361:                               ; preds = %originalBB357
  br i1 %1435, label %1444, label %1581, !dbg !4589

1444:                                             ; preds = %originalBBpart2361
  %1445 = load i32, i32* @x.63
  %1446 = load i32, i32* @y.64
  %1447 = sub i32 %1445, 1
  %1448 = mul i32 %1445, %1447
  %1449 = urem i32 %1448, 2
  %1450 = icmp eq i32 %1449, 0
  %1451 = icmp slt i32 %1446, 10
  %1452 = or i1 %1450, %1451
  br i1 %1452, label %originalBB363, label %originalBB363alteredBB

originalBB363:                                    ; preds = %1444, %originalBB363alteredBB
  %1453 = load i32, i32* @x.63
  %1454 = load i32, i32* @y.64
  %1455 = sub i32 %1453, 1
  %1456 = mul i32 %1453, %1455
  %1457 = urem i32 %1456, 2
  %1458 = icmp eq i32 %1457, 0
  %1459 = icmp slt i32 %1454, 10
  %1460 = or i1 %1458, %1459
  br i1 %1460, label %originalBBpart2365, label %originalBB363alteredBB

originalBBpart2365:                               ; preds = %originalBB363
  br label %1461, !dbg !4590

1461:                                             ; preds = %originalBBpart2365
  %1462 = load i32, i32* @x.63
  %1463 = load i32, i32* @y.64
  %1464 = sub i32 %1462, 1
  %1465 = mul i32 %1462, %1464
  %1466 = urem i32 %1465, 2
  %1467 = icmp eq i32 %1466, 0
  %1468 = icmp slt i32 %1463, 10
  %1469 = or i1 %1467, %1468
  br i1 %1469, label %originalBB367, label %originalBB367alteredBB

originalBB367:                                    ; preds = %1461, %originalBB367alteredBB
  %1470 = load i64, i64* %29, align 8, !dbg !4592
  %1471 = load i64, i64* %20, align 8, !dbg !4592
  %1472 = icmp ult i64 %1470, %1471, !dbg !4592
  %1473 = load i32, i32* @x.63
  %1474 = load i32, i32* @y.64
  %1475 = sub i32 %1473, 1
  %1476 = mul i32 %1473, %1475
  %1477 = urem i32 %1476, 2
  %1478 = icmp eq i32 %1477, 0
  %1479 = icmp slt i32 %1474, 10
  %1480 = or i1 %1478, %1479
  br i1 %1480, label %originalBBpart2369, label %originalBB367alteredBB

originalBBpart2369:                               ; preds = %originalBB367
  br i1 %1472, label %1481, label %1501, !dbg !4595

1481:                                             ; preds = %originalBBpart2369
  %1482 = load i32, i32* @x.63
  %1483 = load i32, i32* @y.64
  %1484 = sub i32 %1482, 1
  %1485 = mul i32 %1482, %1484
  %1486 = urem i32 %1485, 2
  %1487 = icmp eq i32 %1486, 0
  %1488 = icmp slt i32 %1483, 10
  %1489 = or i1 %1487, %1488
  br i1 %1489, label %originalBB371, label %originalBB371alteredBB

originalBB371:                                    ; preds = %1481, %originalBB371alteredBB
  %1490 = load i8*, i8** %19, align 8, !dbg !4592
  %1491 = load i64, i64* %29, align 8, !dbg !4592
  %1492 = getelementptr inbounds i8, i8* %1490, i64 %1491, !dbg !4592
  store i8 48, i8* %1492, align 1, !dbg !4592
  %1493 = load i32, i32* @x.63
  %1494 = load i32, i32* @y.64
  %1495 = sub i32 %1493, 1
  %1496 = mul i32 %1493, %1495
  %1497 = urem i32 %1496, 2
  %1498 = icmp eq i32 %1497, 0
  %1499 = icmp slt i32 %1494, 10
  %1500 = or i1 %1498, %1499
  br i1 %1500, label %originalBBpart2373, label %originalBB371alteredBB

originalBBpart2373:                               ; preds = %originalBB371
  br label %1501, !dbg !4592

1501:                                             ; preds = %originalBBpart2373, %originalBBpart2369
  %1502 = load i64, i64* %29, align 8, !dbg !4595
  %1503 = add i64 %1502, 1, !dbg !4595
  store i64 %1503, i64* %29, align 8, !dbg !4595
  br label %1504, !dbg !4595

1504:                                             ; preds = %1501
  %1505 = load i32, i32* @x.63
  %1506 = load i32, i32* @y.64
  %1507 = sub i32 %1505, 1
  %1508 = mul i32 %1505, %1507
  %1509 = urem i32 %1508, 2
  %1510 = icmp eq i32 %1509, 0
  %1511 = icmp slt i32 %1506, 10
  %1512 = or i1 %1510, %1511
  br i1 %1512, label %originalBB375, label %originalBB375alteredBB

originalBB375:                                    ; preds = %1504, %originalBB375alteredBB
  %1513 = load i32, i32* @x.63
  %1514 = load i32, i32* @y.64
  %1515 = sub i32 %1513, 1
  %1516 = mul i32 %1513, %1515
  %1517 = urem i32 %1516, 2
  %1518 = icmp eq i32 %1517, 0
  %1519 = icmp slt i32 %1514, 10
  %1520 = or i1 %1518, %1519
  br i1 %1520, label %originalBBpart2377, label %originalBB375alteredBB

originalBBpart2377:                               ; preds = %originalBB375
  br label %1521, !dbg !4596

1521:                                             ; preds = %originalBBpart2377
  %1522 = load i32, i32* @x.63
  %1523 = load i32, i32* @y.64
  %1524 = sub i32 %1522, 1
  %1525 = mul i32 %1522, %1524
  %1526 = urem i32 %1525, 2
  %1527 = icmp eq i32 %1526, 0
  %1528 = icmp slt i32 %1523, 10
  %1529 = or i1 %1527, %1528
  br i1 %1529, label %originalBB379, label %originalBB379alteredBB

originalBB379:                                    ; preds = %1521, %originalBB379alteredBB
  %1530 = load i64, i64* %29, align 8, !dbg !4597
  %1531 = load i64, i64* %20, align 8, !dbg !4597
  %1532 = icmp ult i64 %1530, %1531, !dbg !4597
  %1533 = load i32, i32* @x.63
  %1534 = load i32, i32* @y.64
  %1535 = sub i32 %1533, 1
  %1536 = mul i32 %1533, %1535
  %1537 = urem i32 %1536, 2
  %1538 = icmp eq i32 %1537, 0
  %1539 = icmp slt i32 %1534, 10
  %1540 = or i1 %1538, %1539
  br i1 %1540, label %originalBBpart2381, label %originalBB379alteredBB

originalBBpart2381:                               ; preds = %originalBB379
  br i1 %1532, label %1541, label %1561, !dbg !4600

1541:                                             ; preds = %originalBBpart2381
  %1542 = load i32, i32* @x.63
  %1543 = load i32, i32* @y.64
  %1544 = sub i32 %1542, 1
  %1545 = mul i32 %1542, %1544
  %1546 = urem i32 %1545, 2
  %1547 = icmp eq i32 %1546, 0
  %1548 = icmp slt i32 %1543, 10
  %1549 = or i1 %1547, %1548
  br i1 %1549, label %originalBB383, label %originalBB383alteredBB

originalBB383:                                    ; preds = %1541, %originalBB383alteredBB
  %1550 = load i8*, i8** %19, align 8, !dbg !4597
  %1551 = load i64, i64* %29, align 8, !dbg !4597
  %1552 = getelementptr inbounds i8, i8* %1550, i64 %1551, !dbg !4597
  store i8 48, i8* %1552, align 1, !dbg !4597
  %1553 = load i32, i32* @x.63
  %1554 = load i32, i32* @y.64
  %1555 = sub i32 %1553, 1
  %1556 = mul i32 %1553, %1555
  %1557 = urem i32 %1556, 2
  %1558 = icmp eq i32 %1557, 0
  %1559 = icmp slt i32 %1554, 10
  %1560 = or i1 %1558, %1559
  br i1 %1560, label %originalBBpart2385, label %originalBB383alteredBB

originalBBpart2385:                               ; preds = %originalBB383
  br label %1561, !dbg !4597

1561:                                             ; preds = %originalBBpart2385, %originalBBpart2381
  %1562 = load i64, i64* %29, align 8, !dbg !4600
  %1563 = add i64 %1562, 1, !dbg !4600
  store i64 %1563, i64* %29, align 8, !dbg !4600
  br label %1564, !dbg !4600

1564:                                             ; preds = %1561
  %1565 = load i32, i32* @x.63
  %1566 = load i32, i32* @y.64
  %1567 = sub i32 %1565, 1
  %1568 = mul i32 %1565, %1567
  %1569 = urem i32 %1568, 2
  %1570 = icmp eq i32 %1569, 0
  %1571 = icmp slt i32 %1566, 10
  %1572 = or i1 %1570, %1571
  br i1 %1572, label %originalBB387, label %originalBB387alteredBB

originalBB387:                                    ; preds = %1564, %originalBB387alteredBB
  %1573 = load i32, i32* @x.63
  %1574 = load i32, i32* @y.64
  %1575 = sub i32 %1573, 1
  %1576 = mul i32 %1573, %1575
  %1577 = urem i32 %1576, 2
  %1578 = icmp eq i32 %1577, 0
  %1579 = icmp slt i32 %1574, 10
  %1580 = or i1 %1578, %1579
  br i1 %1580, label %originalBBpart2389, label %originalBB387alteredBB

originalBBpart2389:                               ; preds = %originalBB387
  br label %1581, !dbg !4601

1581:                                             ; preds = %originalBBpart2389, %originalBBpart2361, %originalBBpart2355, %originalBBpart2341, %1372
  %1582 = load i32, i32* @x.63
  %1583 = load i32, i32* @y.64
  %1584 = sub i32 %1582, 1
  %1585 = mul i32 %1582, %1584
  %1586 = urem i32 %1585, 2
  %1587 = icmp eq i32 %1586, 0
  %1588 = icmp slt i32 %1583, 10
  %1589 = or i1 %1587, %1588
  br i1 %1589, label %originalBB391, label %originalBB391alteredBB

originalBB391:                                    ; preds = %1581, %originalBB391alteredBB
  store i8 48, i8* %39, align 1, !dbg !4602
  %1590 = load i32, i32* @x.63
  %1591 = load i32, i32* @y.64
  %1592 = sub i32 %1590, 1
  %1593 = mul i32 %1590, %1592
  %1594 = urem i32 %1593, 2
  %1595 = icmp eq i32 %1594, 0
  %1596 = icmp slt i32 %1591, 10
  %1597 = or i1 %1595, %1596
  br i1 %1597, label %originalBBpart2393, label %originalBB391alteredBB

originalBBpart2393:                               ; preds = %originalBB391
  br label %1652, !dbg !4603

1598:                                             ; preds = %originalBBpart2234
  %1599 = load i32, i32* @x.63
  %1600 = load i32, i32* @y.64
  %1601 = sub i32 %1599, 1
  %1602 = mul i32 %1599, %1601
  %1603 = urem i32 %1602, 2
  %1604 = icmp eq i32 %1603, 0
  %1605 = icmp slt i32 %1600, 10
  %1606 = or i1 %1604, %1605
  br i1 %1606, label %originalBB395, label %originalBB395alteredBB

originalBB395:                                    ; preds = %1598, %originalBB395alteredBB
  %1607 = load i32, i32* %24, align 4, !dbg !4604
  %1608 = and i32 %1607, 1, !dbg !4606
  %1609 = icmp ne i32 %1608, 0, !dbg !4606
  %1610 = load i32, i32* @x.63
  %1611 = load i32, i32* @y.64
  %1612 = sub i32 %1610, 1
  %1613 = mul i32 %1610, %1612
  %1614 = urem i32 %1613, 2
  %1615 = icmp eq i32 %1614, 0
  %1616 = icmp slt i32 %1611, 10
  %1617 = or i1 %1615, %1616
  br i1 %1617, label %originalBBpart2399, label %originalBB395alteredBB

originalBBpart2399:                               ; preds = %originalBB395
  br i1 %1609, label %1618, label %1635, !dbg !4607

1618:                                             ; preds = %originalBBpart2399
  %1619 = load i32, i32* @x.63
  %1620 = load i32, i32* @y.64
  %1621 = sub i32 %1619, 1
  %1622 = mul i32 %1619, %1621
  %1623 = urem i32 %1622, 2
  %1624 = icmp eq i32 %1623, 0
  %1625 = icmp slt i32 %1620, 10
  %1626 = or i1 %1624, %1625
  br i1 %1626, label %originalBB401, label %originalBB401alteredBB

originalBB401:                                    ; preds = %1618, %originalBB401alteredBB
  %1627 = load i32, i32* @x.63
  %1628 = load i32, i32* @y.64
  %1629 = sub i32 %1627, 1
  %1630 = mul i32 %1627, %1629
  %1631 = urem i32 %1630, 2
  %1632 = icmp eq i32 %1631, 0
  %1633 = icmp slt i32 %1628, 10
  %1634 = or i1 %1632, %1633
  br i1 %1634, label %originalBBpart2403, label %originalBB401alteredBB

originalBBpart2403:                               ; preds = %originalBB401
  br label %5849, !dbg !4608

1635:                                             ; preds = %originalBBpart2399
  %1636 = load i32, i32* @x.63
  %1637 = load i32, i32* @y.64
  %1638 = sub i32 %1636, 1
  %1639 = mul i32 %1636, %1638
  %1640 = urem i32 %1639, 2
  %1641 = icmp eq i32 %1640, 0
  %1642 = icmp slt i32 %1637, 10
  %1643 = or i1 %1641, %1642
  br i1 %1643, label %originalBB405, label %originalBB405alteredBB

originalBB405:                                    ; preds = %1635, %originalBB405alteredBB
  %1644 = load i32, i32* @x.63
  %1645 = load i32, i32* @y.64
  %1646 = sub i32 %1644, 1
  %1647 = mul i32 %1644, %1646
  %1648 = urem i32 %1647, 2
  %1649 = icmp eq i32 %1648, 0
  %1650 = icmp slt i32 %1645, 10
  %1651 = or i1 %1649, %1650
  br i1 %1651, label %originalBBpart2407, label %originalBB405alteredBB

originalBBpart2407:                               ; preds = %originalBB405
  br label %1652

1652:                                             ; preds = %originalBBpart2407, %originalBBpart2393
  %1653 = load i32, i32* @x.63
  %1654 = load i32, i32* @y.64
  %1655 = sub i32 %1653, 1
  %1656 = mul i32 %1653, %1655
  %1657 = urem i32 %1656, 2
  %1658 = icmp eq i32 %1657, 0
  %1659 = icmp slt i32 %1654, 10
  %1660 = or i1 %1658, %1659
  br i1 %1660, label %originalBB409, label %originalBB409alteredBB

originalBB409:                                    ; preds = %1652, %originalBB409alteredBB
  %1661 = load i32, i32* @x.63
  %1662 = load i32, i32* @y.64
  %1663 = sub i32 %1661, 1
  %1664 = mul i32 %1661, %1663
  %1665 = urem i32 %1664, 2
  %1666 = icmp eq i32 %1665, 0
  %1667 = icmp slt i32 %1662, 10
  %1668 = or i1 %1666, %1667
  br i1 %1668, label %originalBBpart2411, label %originalBB409alteredBB

originalBBpart2411:                               ; preds = %originalBB409
  br label %4969, !dbg !4609

1669:                                             ; preds = %originalBBpart2230
  %1670 = load i32, i32* @x.63
  %1671 = load i32, i32* @y.64
  %1672 = sub i32 %1670, 1
  %1673 = mul i32 %1670, %1672
  %1674 = urem i32 %1673, 2
  %1675 = icmp eq i32 %1674, 0
  %1676 = icmp slt i32 %1671, 10
  %1677 = or i1 %1675, %1676
  br i1 %1677, label %originalBB413, label %originalBB413alteredBB

originalBB413:                                    ; preds = %1669, %originalBB413alteredBB
  %1678 = load i32, i32* %23, align 4, !dbg !4610
  %1679 = load i32, i32* @x.63
  %1680 = load i32, i32* @y.64
  %1681 = sub i32 %1679, 1
  %1682 = mul i32 %1679, %1681
  %1683 = urem i32 %1682, 2
  %1684 = icmp eq i32 %1683, 0
  %1685 = icmp slt i32 %1680, 10
  %1686 = or i1 %1684, %1685
  br i1 %1686, label %originalBBpart2415, label %originalBB413alteredBB

originalBBpart2415:                               ; preds = %originalBB413
  switch i32 %1678, label %2211 [
    i32 2, label %1687
    i32 5, label %1740
  ], !dbg !4611

1687:                                             ; preds = %originalBBpart2415
  %1688 = load i32, i32* @x.63
  %1689 = load i32, i32* @y.64
  %1690 = sub i32 %1688, 1
  %1691 = mul i32 %1688, %1690
  %1692 = urem i32 %1691, 2
  %1693 = icmp eq i32 %1692, 0
  %1694 = icmp slt i32 %1689, 10
  %1695 = or i1 %1693, %1694
  br i1 %1695, label %originalBB417, label %originalBB417alteredBB

originalBB417:                                    ; preds = %1687, %originalBB417alteredBB
  %1696 = load i8, i8* %35, align 1, !dbg !4612
  %1697 = trunc i8 %1696 to i1, !dbg !4612
  %1698 = load i32, i32* @x.63
  %1699 = load i32, i32* @y.64
  %1700 = sub i32 %1698, 1
  %1701 = mul i32 %1698, %1700
  %1702 = urem i32 %1701, 2
  %1703 = icmp eq i32 %1702, 0
  %1704 = icmp slt i32 %1699, 10
  %1705 = or i1 %1703, %1704
  br i1 %1705, label %originalBBpart2419, label %originalBB417alteredBB

originalBBpart2419:                               ; preds = %originalBB417
  br i1 %1697, label %1706, label %1723, !dbg !4615

1706:                                             ; preds = %originalBBpart2419
  %1707 = load i32, i32* @x.63
  %1708 = load i32, i32* @y.64
  %1709 = sub i32 %1707, 1
  %1710 = mul i32 %1707, %1709
  %1711 = urem i32 %1710, 2
  %1712 = icmp eq i32 %1711, 0
  %1713 = icmp slt i32 %1708, 10
  %1714 = or i1 %1712, %1713
  br i1 %1714, label %originalBB421, label %originalBB421alteredBB

originalBB421:                                    ; preds = %1706, %originalBB421alteredBB
  %1715 = load i32, i32* @x.63
  %1716 = load i32, i32* @y.64
  %1717 = sub i32 %1715, 1
  %1718 = mul i32 %1715, %1717
  %1719 = urem i32 %1718, 2
  %1720 = icmp eq i32 %1719, 0
  %1721 = icmp slt i32 %1716, 10
  %1722 = or i1 %1720, %1721
  br i1 %1722, label %originalBBpart2423, label %originalBB421alteredBB

originalBBpart2423:                               ; preds = %originalBB421
  br label %6366, !dbg !4616

1723:                                             ; preds = %originalBBpart2419
  %1724 = load i32, i32* @x.63
  %1725 = load i32, i32* @y.64
  %1726 = sub i32 %1724, 1
  %1727 = mul i32 %1724, %1726
  %1728 = urem i32 %1727, 2
  %1729 = icmp eq i32 %1728, 0
  %1730 = icmp slt i32 %1725, 10
  %1731 = or i1 %1729, %1730
  br i1 %1731, label %originalBB425, label %originalBB425alteredBB

originalBB425:                                    ; preds = %1723, %originalBB425alteredBB
  %1732 = load i32, i32* @x.63
  %1733 = load i32, i32* @y.64
  %1734 = sub i32 %1732, 1
  %1735 = mul i32 %1732, %1734
  %1736 = urem i32 %1735, 2
  %1737 = icmp eq i32 %1736, 0
  %1738 = icmp slt i32 %1733, 10
  %1739 = or i1 %1737, %1738
  br i1 %1739, label %originalBBpart2427, label %originalBB425alteredBB

originalBBpart2427:                               ; preds = %originalBB425
  br label %2212, !dbg !4617

1740:                                             ; preds = %originalBBpart2415
  %1741 = load i32, i32* @x.63
  %1742 = load i32, i32* @y.64
  %1743 = sub i32 %1741, 1
  %1744 = mul i32 %1741, %1743
  %1745 = urem i32 %1744, 2
  %1746 = icmp eq i32 %1745, 0
  %1747 = icmp slt i32 %1742, 10
  %1748 = or i1 %1746, %1747
  br i1 %1748, label %originalBB429, label %originalBB429alteredBB

originalBB429:                                    ; preds = %1740, %originalBB429alteredBB
  %1749 = load i32, i32* %24, align 4, !dbg !4618
  %1750 = and i32 %1749, 4, !dbg !4620
  %1751 = icmp ne i32 %1750, 0, !dbg !4620
  %1752 = load i32, i32* @x.63
  %1753 = load i32, i32* @y.64
  %1754 = sub i32 %1752, 1
  %1755 = mul i32 %1752, %1754
  %1756 = urem i32 %1755, 2
  %1757 = icmp eq i32 %1756, 0
  %1758 = icmp slt i32 %1753, 10
  %1759 = or i1 %1757, %1758
  br i1 %1759, label %originalBBpart2434, label %originalBB429alteredBB

originalBBpart2434:                               ; preds = %originalBB429
  br i1 %1751, label %1760, label %2194, !dbg !4621

1760:                                             ; preds = %originalBBpart2434
  %1761 = load i32, i32* @x.63
  %1762 = load i32, i32* @y.64
  %1763 = sub i32 %1761, 1
  %1764 = mul i32 %1761, %1763
  %1765 = urem i32 %1764, 2
  %1766 = icmp eq i32 %1765, 0
  %1767 = icmp slt i32 %1762, 10
  %1768 = or i1 %1766, %1767
  br i1 %1768, label %originalBB436, label %originalBB436alteredBB

originalBB436:                                    ; preds = %1760, %originalBB436alteredBB
  %1769 = load i64, i64* %28, align 8, !dbg !4622
  %1770 = add i64 %1769, 2, !dbg !4623
  %1771 = load i64, i64* %22, align 8, !dbg !4624
  %1772 = icmp ult i64 %1770, %1771, !dbg !4625
  %1773 = load i32, i32* @x.63
  %1774 = load i32, i32* @y.64
  %1775 = sub i32 %1773, 1
  %1776 = mul i32 %1773, %1775
  %1777 = urem i32 %1776, 2
  %1778 = icmp eq i32 %1777, 0
  %1779 = icmp slt i32 %1774, 10
  %1780 = or i1 %1778, %1779
  br i1 %1780, label %originalBBpart2448, label %originalBB436alteredBB

originalBBpart2448:                               ; preds = %originalBB436
  br i1 %1772, label %1781, label %2194, !dbg !4626

1781:                                             ; preds = %originalBBpart2448
  %1782 = load i32, i32* @x.63
  %1783 = load i32, i32* @y.64
  %1784 = sub i32 %1782, 1
  %1785 = mul i32 %1782, %1784
  %1786 = urem i32 %1785, 2
  %1787 = icmp eq i32 %1786, 0
  %1788 = icmp slt i32 %1783, 10
  %1789 = or i1 %1787, %1788
  br i1 %1789, label %originalBB450, label %originalBB450alteredBB

originalBB450:                                    ; preds = %1781, %originalBB450alteredBB
  %1790 = load i8*, i8** %21, align 8, !dbg !4627
  %1791 = load i64, i64* %28, align 8, !dbg !4628
  %1792 = add i64 %1791, 1, !dbg !4629
  %1793 = getelementptr inbounds i8, i8* %1790, i64 %1792, !dbg !4627
  %1794 = load i8, i8* %1793, align 1, !dbg !4627
  %1795 = sext i8 %1794 to i32, !dbg !4627
  %1796 = icmp eq i32 %1795, 63, !dbg !4630
  %1797 = load i32, i32* @x.63
  %1798 = load i32, i32* @y.64
  %1799 = sub i32 %1797, 1
  %1800 = mul i32 %1797, %1799
  %1801 = urem i32 %1800, 2
  %1802 = icmp eq i32 %1801, 0
  %1803 = icmp slt i32 %1798, 10
  %1804 = or i1 %1802, %1803
  br i1 %1804, label %originalBBpart2456, label %originalBB450alteredBB

originalBBpart2456:                               ; preds = %originalBB450
  br i1 %1796, label %1805, label %2194, !dbg !4631

1805:                                             ; preds = %originalBBpart2456
  %1806 = load i32, i32* @x.63
  %1807 = load i32, i32* @y.64
  %1808 = sub i32 %1806, 1
  %1809 = mul i32 %1806, %1808
  %1810 = urem i32 %1809, 2
  %1811 = icmp eq i32 %1810, 0
  %1812 = icmp slt i32 %1807, 10
  %1813 = or i1 %1811, %1812
  br i1 %1813, label %originalBB458, label %originalBB458alteredBB

originalBB458:                                    ; preds = %1805, %originalBB458alteredBB
  %1814 = load i8*, i8** %21, align 8, !dbg !4632
  %1815 = load i64, i64* %28, align 8, !dbg !4633
  %1816 = add i64 %1815, 2, !dbg !4634
  %1817 = getelementptr inbounds i8, i8* %1814, i64 %1816, !dbg !4632
  %1818 = load i8, i8* %1817, align 1, !dbg !4632
  %1819 = sext i8 %1818 to i32, !dbg !4632
  %1820 = load i32, i32* @x.63
  %1821 = load i32, i32* @y.64
  %1822 = sub i32 %1820, 1
  %1823 = mul i32 %1820, %1822
  %1824 = urem i32 %1823, 2
  %1825 = icmp eq i32 %1824, 0
  %1826 = icmp slt i32 %1821, 10
  %1827 = or i1 %1825, %1826
  br i1 %1827, label %originalBBpart2469, label %originalBB458alteredBB

originalBBpart2469:                               ; preds = %originalBB458
  switch i32 %1819, label %2160 [
    i32 33, label %1828
    i32 39, label %1828
    i32 40, label %1828
    i32 41, label %1828
    i32 45, label %1828
    i32 47, label %1828
    i32 60, label %1828
    i32 61, label %1828
    i32 62, label %1828
  ], !dbg !4635

1828:                                             ; preds = %originalBBpart2469, %originalBBpart2469, %originalBBpart2469, %originalBBpart2469, %originalBBpart2469, %originalBBpart2469, %originalBBpart2469, %originalBBpart2469, %originalBBpart2469
  %1829 = load i32, i32* @x.63
  %1830 = load i32, i32* @y.64
  %1831 = sub i32 %1829, 1
  %1832 = mul i32 %1829, %1831
  %1833 = urem i32 %1832, 2
  %1834 = icmp eq i32 %1833, 0
  %1835 = icmp slt i32 %1830, 10
  %1836 = or i1 %1834, %1835
  br i1 %1836, label %originalBB471, label %originalBB471alteredBB

originalBB471:                                    ; preds = %1828, %originalBB471alteredBB
  %1837 = load i8, i8* %35, align 1, !dbg !4636
  %1838 = trunc i8 %1837 to i1, !dbg !4636
  %1839 = load i32, i32* @x.63
  %1840 = load i32, i32* @y.64
  %1841 = sub i32 %1839, 1
  %1842 = mul i32 %1839, %1841
  %1843 = urem i32 %1842, 2
  %1844 = icmp eq i32 %1843, 0
  %1845 = icmp slt i32 %1840, 10
  %1846 = or i1 %1844, %1845
  br i1 %1846, label %originalBBpart2473, label %originalBB471alteredBB

originalBBpart2473:                               ; preds = %originalBB471
  br i1 %1838, label %1847, label %1864, !dbg !4639

1847:                                             ; preds = %originalBBpart2473
  %1848 = load i32, i32* @x.63
  %1849 = load i32, i32* @y.64
  %1850 = sub i32 %1848, 1
  %1851 = mul i32 %1848, %1850
  %1852 = urem i32 %1851, 2
  %1853 = icmp eq i32 %1852, 0
  %1854 = icmp slt i32 %1849, 10
  %1855 = or i1 %1853, %1854
  br i1 %1855, label %originalBB475, label %originalBB475alteredBB

originalBB475:                                    ; preds = %1847, %originalBB475alteredBB
  %1856 = load i32, i32* @x.63
  %1857 = load i32, i32* @y.64
  %1858 = sub i32 %1856, 1
  %1859 = mul i32 %1856, %1858
  %1860 = urem i32 %1859, 2
  %1861 = icmp eq i32 %1860, 0
  %1862 = icmp slt i32 %1857, 10
  %1863 = or i1 %1861, %1862
  br i1 %1863, label %originalBBpart2477, label %originalBB475alteredBB

originalBBpart2477:                               ; preds = %originalBB475
  br label %6366, !dbg !4640

1864:                                             ; preds = %originalBBpart2473
  %1865 = load i32, i32* @x.63
  %1866 = load i32, i32* @y.64
  %1867 = sub i32 %1865, 1
  %1868 = mul i32 %1865, %1867
  %1869 = urem i32 %1868, 2
  %1870 = icmp eq i32 %1869, 0
  %1871 = icmp slt i32 %1866, 10
  %1872 = or i1 %1870, %1871
  br i1 %1872, label %originalBB479, label %originalBB479alteredBB

originalBB479:                                    ; preds = %1864, %originalBB479alteredBB
  %1873 = load i8*, i8** %21, align 8, !dbg !4641
  %1874 = load i64, i64* %28, align 8, !dbg !4642
  %1875 = add i64 %1874, 2, !dbg !4643
  %1876 = getelementptr inbounds i8, i8* %1873, i64 %1875, !dbg !4641
  %1877 = load i8, i8* %1876, align 1, !dbg !4641
  store i8 %1877, i8* %39, align 1, !dbg !4644
  %1878 = load i64, i64* %28, align 8, !dbg !4645
  %1879 = add i64 %1878, 2, !dbg !4645
  store i64 %1879, i64* %28, align 8, !dbg !4645
  %1880 = load i32, i32* @x.63
  %1881 = load i32, i32* @y.64
  %1882 = sub i32 %1880, 1
  %1883 = mul i32 %1880, %1882
  %1884 = urem i32 %1883, 2
  %1885 = icmp eq i32 %1884, 0
  %1886 = icmp slt i32 %1881, 10
  %1887 = or i1 %1885, %1886
  br i1 %1887, label %originalBBpart2493, label %originalBB479alteredBB

originalBBpart2493:                               ; preds = %originalBB479
  br label %1888, !dbg !4646

1888:                                             ; preds = %originalBBpart2493
  %1889 = load i32, i32* @x.63
  %1890 = load i32, i32* @y.64
  %1891 = sub i32 %1889, 1
  %1892 = mul i32 %1889, %1891
  %1893 = urem i32 %1892, 2
  %1894 = icmp eq i32 %1893, 0
  %1895 = icmp slt i32 %1890, 10
  %1896 = or i1 %1894, %1895
  br i1 %1896, label %originalBB495, label %originalBB495alteredBB

originalBB495:                                    ; preds = %1888, %originalBB495alteredBB
  %1897 = load i64, i64* %29, align 8, !dbg !4647
  %1898 = load i64, i64* %20, align 8, !dbg !4647
  %1899 = icmp ult i64 %1897, %1898, !dbg !4647
  %1900 = load i32, i32* @x.63
  %1901 = load i32, i32* @y.64
  %1902 = sub i32 %1900, 1
  %1903 = mul i32 %1900, %1902
  %1904 = urem i32 %1903, 2
  %1905 = icmp eq i32 %1904, 0
  %1906 = icmp slt i32 %1901, 10
  %1907 = or i1 %1905, %1906
  br i1 %1907, label %originalBBpart2497, label %originalBB495alteredBB

originalBBpart2497:                               ; preds = %originalBB495
  br i1 %1899, label %1908, label %1912, !dbg !4650

1908:                                             ; preds = %originalBBpart2497
  %1909 = load i8*, i8** %19, align 8, !dbg !4647
  %1910 = load i64, i64* %29, align 8, !dbg !4647
  %1911 = getelementptr inbounds i8, i8* %1909, i64 %1910, !dbg !4647
  store i8 63, i8* %1911, align 1, !dbg !4647
  br label %1912, !dbg !4647

1912:                                             ; preds = %1908, %originalBBpart2497
  %1913 = load i32, i32* @x.63
  %1914 = load i32, i32* @y.64
  %1915 = sub i32 %1913, 1
  %1916 = mul i32 %1913, %1915
  %1917 = urem i32 %1916, 2
  %1918 = icmp eq i32 %1917, 0
  %1919 = icmp slt i32 %1914, 10
  %1920 = or i1 %1918, %1919
  br i1 %1920, label %originalBB499, label %originalBB499alteredBB

originalBB499:                                    ; preds = %1912, %originalBB499alteredBB
  %1921 = load i64, i64* %29, align 8, !dbg !4650
  %1922 = add i64 %1921, 1, !dbg !4650
  store i64 %1922, i64* %29, align 8, !dbg !4650
  %1923 = load i32, i32* @x.63
  %1924 = load i32, i32* @y.64
  %1925 = sub i32 %1923, 1
  %1926 = mul i32 %1923, %1925
  %1927 = urem i32 %1926, 2
  %1928 = icmp eq i32 %1927, 0
  %1929 = icmp slt i32 %1924, 10
  %1930 = or i1 %1928, %1929
  br i1 %1930, label %originalBBpart2507, label %originalBB499alteredBB

originalBBpart2507:                               ; preds = %originalBB499
  br label %1931, !dbg !4650

1931:                                             ; preds = %originalBBpart2507
  %1932 = load i32, i32* @x.63
  %1933 = load i32, i32* @y.64
  %1934 = sub i32 %1932, 1
  %1935 = mul i32 %1932, %1934
  %1936 = urem i32 %1935, 2
  %1937 = icmp eq i32 %1936, 0
  %1938 = icmp slt i32 %1933, 10
  %1939 = or i1 %1937, %1938
  br i1 %1939, label %originalBB509, label %originalBB509alteredBB

originalBB509:                                    ; preds = %1931, %originalBB509alteredBB
  %1940 = load i32, i32* @x.63
  %1941 = load i32, i32* @y.64
  %1942 = sub i32 %1940, 1
  %1943 = mul i32 %1940, %1942
  %1944 = urem i32 %1943, 2
  %1945 = icmp eq i32 %1944, 0
  %1946 = icmp slt i32 %1941, 10
  %1947 = or i1 %1945, %1946
  br i1 %1947, label %originalBBpart2511, label %originalBB509alteredBB

originalBBpart2511:                               ; preds = %originalBB509
  br label %1948, !dbg !4651

1948:                                             ; preds = %originalBBpart2511
  %1949 = load i64, i64* %29, align 8, !dbg !4652
  %1950 = load i64, i64* %20, align 8, !dbg !4652
  %1951 = icmp ult i64 %1949, %1950, !dbg !4652
  br i1 %1951, label %1952, label %1972, !dbg !4655

1952:                                             ; preds = %1948
  %1953 = load i32, i32* @x.63
  %1954 = load i32, i32* @y.64
  %1955 = sub i32 %1953, 1
  %1956 = mul i32 %1953, %1955
  %1957 = urem i32 %1956, 2
  %1958 = icmp eq i32 %1957, 0
  %1959 = icmp slt i32 %1954, 10
  %1960 = or i1 %1958, %1959
  br i1 %1960, label %originalBB513, label %originalBB513alteredBB

originalBB513:                                    ; preds = %1952, %originalBB513alteredBB
  %1961 = load i8*, i8** %19, align 8, !dbg !4652
  %1962 = load i64, i64* %29, align 8, !dbg !4652
  %1963 = getelementptr inbounds i8, i8* %1961, i64 %1962, !dbg !4652
  store i8 34, i8* %1963, align 1, !dbg !4652
  %1964 = load i32, i32* @x.63
  %1965 = load i32, i32* @y.64
  %1966 = sub i32 %1964, 1
  %1967 = mul i32 %1964, %1966
  %1968 = urem i32 %1967, 2
  %1969 = icmp eq i32 %1968, 0
  %1970 = icmp slt i32 %1965, 10
  %1971 = or i1 %1969, %1970
  br i1 %1971, label %originalBBpart2515, label %originalBB513alteredBB

originalBBpart2515:                               ; preds = %originalBB513
  br label %1972, !dbg !4652

1972:                                             ; preds = %originalBBpart2515, %1948
  %1973 = load i32, i32* @x.63
  %1974 = load i32, i32* @y.64
  %1975 = sub i32 %1973, 1
  %1976 = mul i32 %1973, %1975
  %1977 = urem i32 %1976, 2
  %1978 = icmp eq i32 %1977, 0
  %1979 = icmp slt i32 %1974, 10
  %1980 = or i1 %1978, %1979
  br i1 %1980, label %originalBB517, label %originalBB517alteredBB

originalBB517:                                    ; preds = %1972, %originalBB517alteredBB
  %1981 = load i64, i64* %29, align 8, !dbg !4655
  %1982 = add i64 %1981, 1, !dbg !4655
  store i64 %1982, i64* %29, align 8, !dbg !4655
  %1983 = load i32, i32* @x.63
  %1984 = load i32, i32* @y.64
  %1985 = sub i32 %1983, 1
  %1986 = mul i32 %1983, %1985
  %1987 = urem i32 %1986, 2
  %1988 = icmp eq i32 %1987, 0
  %1989 = icmp slt i32 %1984, 10
  %1990 = or i1 %1988, %1989
  br i1 %1990, label %originalBBpart2521, label %originalBB517alteredBB

originalBBpart2521:                               ; preds = %originalBB517
  br label %1991, !dbg !4655

1991:                                             ; preds = %originalBBpart2521
  %1992 = load i32, i32* @x.63
  %1993 = load i32, i32* @y.64
  %1994 = sub i32 %1992, 1
  %1995 = mul i32 %1992, %1994
  %1996 = urem i32 %1995, 2
  %1997 = icmp eq i32 %1996, 0
  %1998 = icmp slt i32 %1993, 10
  %1999 = or i1 %1997, %1998
  br i1 %1999, label %originalBB523, label %originalBB523alteredBB

originalBB523:                                    ; preds = %1991, %originalBB523alteredBB
  %2000 = load i32, i32* @x.63
  %2001 = load i32, i32* @y.64
  %2002 = sub i32 %2000, 1
  %2003 = mul i32 %2000, %2002
  %2004 = urem i32 %2003, 2
  %2005 = icmp eq i32 %2004, 0
  %2006 = icmp slt i32 %2001, 10
  %2007 = or i1 %2005, %2006
  br i1 %2007, label %originalBBpart2525, label %originalBB523alteredBB

originalBBpart2525:                               ; preds = %originalBB523
  br label %2008, !dbg !4656

2008:                                             ; preds = %originalBBpart2525
  %2009 = load i32, i32* @x.63
  %2010 = load i32, i32* @y.64
  %2011 = sub i32 %2009, 1
  %2012 = mul i32 %2009, %2011
  %2013 = urem i32 %2012, 2
  %2014 = icmp eq i32 %2013, 0
  %2015 = icmp slt i32 %2010, 10
  %2016 = or i1 %2014, %2015
  br i1 %2016, label %originalBB527, label %originalBB527alteredBB

originalBB527:                                    ; preds = %2008, %originalBB527alteredBB
  %2017 = load i64, i64* %29, align 8, !dbg !4657
  %2018 = load i64, i64* %20, align 8, !dbg !4657
  %2019 = icmp ult i64 %2017, %2018, !dbg !4657
  %2020 = load i32, i32* @x.63
  %2021 = load i32, i32* @y.64
  %2022 = sub i32 %2020, 1
  %2023 = mul i32 %2020, %2022
  %2024 = urem i32 %2023, 2
  %2025 = icmp eq i32 %2024, 0
  %2026 = icmp slt i32 %2021, 10
  %2027 = or i1 %2025, %2026
  br i1 %2027, label %originalBBpart2529, label %originalBB527alteredBB

originalBBpart2529:                               ; preds = %originalBB527
  br i1 %2019, label %2028, label %2048, !dbg !4660

2028:                                             ; preds = %originalBBpart2529
  %2029 = load i32, i32* @x.63
  %2030 = load i32, i32* @y.64
  %2031 = sub i32 %2029, 1
  %2032 = mul i32 %2029, %2031
  %2033 = urem i32 %2032, 2
  %2034 = icmp eq i32 %2033, 0
  %2035 = icmp slt i32 %2030, 10
  %2036 = or i1 %2034, %2035
  br i1 %2036, label %originalBB531, label %originalBB531alteredBB

originalBB531:                                    ; preds = %2028, %originalBB531alteredBB
  %2037 = load i8*, i8** %19, align 8, !dbg !4657
  %2038 = load i64, i64* %29, align 8, !dbg !4657
  %2039 = getelementptr inbounds i8, i8* %2037, i64 %2038, !dbg !4657
  store i8 34, i8* %2039, align 1, !dbg !4657
  %2040 = load i32, i32* @x.63
  %2041 = load i32, i32* @y.64
  %2042 = sub i32 %2040, 1
  %2043 = mul i32 %2040, %2042
  %2044 = urem i32 %2043, 2
  %2045 = icmp eq i32 %2044, 0
  %2046 = icmp slt i32 %2041, 10
  %2047 = or i1 %2045, %2046
  br i1 %2047, label %originalBBpart2533, label %originalBB531alteredBB

originalBBpart2533:                               ; preds = %originalBB531
  br label %2048, !dbg !4657

2048:                                             ; preds = %originalBBpart2533, %originalBBpart2529
  %2049 = load i32, i32* @x.63
  %2050 = load i32, i32* @y.64
  %2051 = sub i32 %2049, 1
  %2052 = mul i32 %2049, %2051
  %2053 = urem i32 %2052, 2
  %2054 = icmp eq i32 %2053, 0
  %2055 = icmp slt i32 %2050, 10
  %2056 = or i1 %2054, %2055
  br i1 %2056, label %originalBB535, label %originalBB535alteredBB

originalBB535:                                    ; preds = %2048, %originalBB535alteredBB
  %2057 = load i64, i64* %29, align 8, !dbg !4660
  %2058 = add i64 %2057, 1, !dbg !4660
  store i64 %2058, i64* %29, align 8, !dbg !4660
  %2059 = load i32, i32* @x.63
  %2060 = load i32, i32* @y.64
  %2061 = sub i32 %2059, 1
  %2062 = mul i32 %2059, %2061
  %2063 = urem i32 %2062, 2
  %2064 = icmp eq i32 %2063, 0
  %2065 = icmp slt i32 %2060, 10
  %2066 = or i1 %2064, %2065
  br i1 %2066, label %originalBBpart2543, label %originalBB535alteredBB

originalBBpart2543:                               ; preds = %originalBB535
  br label %2067, !dbg !4660

2067:                                             ; preds = %originalBBpart2543
  %2068 = load i32, i32* @x.63
  %2069 = load i32, i32* @y.64
  %2070 = sub i32 %2068, 1
  %2071 = mul i32 %2068, %2070
  %2072 = urem i32 %2071, 2
  %2073 = icmp eq i32 %2072, 0
  %2074 = icmp slt i32 %2069, 10
  %2075 = or i1 %2073, %2074
  br i1 %2075, label %originalBB545, label %originalBB545alteredBB

originalBB545:                                    ; preds = %2067, %originalBB545alteredBB
  %2076 = load i32, i32* @x.63
  %2077 = load i32, i32* @y.64
  %2078 = sub i32 %2076, 1
  %2079 = mul i32 %2076, %2078
  %2080 = urem i32 %2079, 2
  %2081 = icmp eq i32 %2080, 0
  %2082 = icmp slt i32 %2077, 10
  %2083 = or i1 %2081, %2082
  br i1 %2083, label %originalBBpart2547, label %originalBB545alteredBB

originalBBpart2547:                               ; preds = %originalBB545
  br label %2084, !dbg !4661

2084:                                             ; preds = %originalBBpart2547
  %2085 = load i32, i32* @x.63
  %2086 = load i32, i32* @y.64
  %2087 = sub i32 %2085, 1
  %2088 = mul i32 %2085, %2087
  %2089 = urem i32 %2088, 2
  %2090 = icmp eq i32 %2089, 0
  %2091 = icmp slt i32 %2086, 10
  %2092 = or i1 %2090, %2091
  br i1 %2092, label %originalBB549, label %originalBB549alteredBB

originalBB549:                                    ; preds = %2084, %originalBB549alteredBB
  %2093 = load i64, i64* %29, align 8, !dbg !4662
  %2094 = load i64, i64* %20, align 8, !dbg !4662
  %2095 = icmp ult i64 %2093, %2094, !dbg !4662
  %2096 = load i32, i32* @x.63
  %2097 = load i32, i32* @y.64
  %2098 = sub i32 %2096, 1
  %2099 = mul i32 %2096, %2098
  %2100 = urem i32 %2099, 2
  %2101 = icmp eq i32 %2100, 0
  %2102 = icmp slt i32 %2097, 10
  %2103 = or i1 %2101, %2102
  br i1 %2103, label %originalBBpart2551, label %originalBB549alteredBB

originalBBpart2551:                               ; preds = %originalBB549
  br i1 %2095, label %2104, label %2124, !dbg !4665

2104:                                             ; preds = %originalBBpart2551
  %2105 = load i32, i32* @x.63
  %2106 = load i32, i32* @y.64
  %2107 = sub i32 %2105, 1
  %2108 = mul i32 %2105, %2107
  %2109 = urem i32 %2108, 2
  %2110 = icmp eq i32 %2109, 0
  %2111 = icmp slt i32 %2106, 10
  %2112 = or i1 %2110, %2111
  br i1 %2112, label %originalBB553, label %originalBB553alteredBB

originalBB553:                                    ; preds = %2104, %originalBB553alteredBB
  %2113 = load i8*, i8** %19, align 8, !dbg !4662
  %2114 = load i64, i64* %29, align 8, !dbg !4662
  %2115 = getelementptr inbounds i8, i8* %2113, i64 %2114, !dbg !4662
  store i8 63, i8* %2115, align 1, !dbg !4662
  %2116 = load i32, i32* @x.63
  %2117 = load i32, i32* @y.64
  %2118 = sub i32 %2116, 1
  %2119 = mul i32 %2116, %2118
  %2120 = urem i32 %2119, 2
  %2121 = icmp eq i32 %2120, 0
  %2122 = icmp slt i32 %2117, 10
  %2123 = or i1 %2121, %2122
  br i1 %2123, label %originalBBpart2555, label %originalBB553alteredBB

originalBBpart2555:                               ; preds = %originalBB553
  br label %2124, !dbg !4662

2124:                                             ; preds = %originalBBpart2555, %originalBBpart2551
  %2125 = load i32, i32* @x.63
  %2126 = load i32, i32* @y.64
  %2127 = sub i32 %2125, 1
  %2128 = mul i32 %2125, %2127
  %2129 = urem i32 %2128, 2
  %2130 = icmp eq i32 %2129, 0
  %2131 = icmp slt i32 %2126, 10
  %2132 = or i1 %2130, %2131
  br i1 %2132, label %originalBB557, label %originalBB557alteredBB

originalBB557:                                    ; preds = %2124, %originalBB557alteredBB
  %2133 = load i64, i64* %29, align 8, !dbg !4665
  %2134 = add i64 %2133, 1, !dbg !4665
  store i64 %2134, i64* %29, align 8, !dbg !4665
  %2135 = load i32, i32* @x.63
  %2136 = load i32, i32* @y.64
  %2137 = sub i32 %2135, 1
  %2138 = mul i32 %2135, %2137
  %2139 = urem i32 %2138, 2
  %2140 = icmp eq i32 %2139, 0
  %2141 = icmp slt i32 %2136, 10
  %2142 = or i1 %2140, %2141
  br i1 %2142, label %originalBBpart2567, label %originalBB557alteredBB

originalBBpart2567:                               ; preds = %originalBB557
  br label %2143, !dbg !4665

2143:                                             ; preds = %originalBBpart2567
  %2144 = load i32, i32* @x.63
  %2145 = load i32, i32* @y.64
  %2146 = sub i32 %2144, 1
  %2147 = mul i32 %2144, %2146
  %2148 = urem i32 %2147, 2
  %2149 = icmp eq i32 %2148, 0
  %2150 = icmp slt i32 %2145, 10
  %2151 = or i1 %2149, %2150
  br i1 %2151, label %originalBB569, label %originalBB569alteredBB

originalBB569:                                    ; preds = %2143, %originalBB569alteredBB
  %2152 = load i32, i32* @x.63
  %2153 = load i32, i32* @y.64
  %2154 = sub i32 %2152, 1
  %2155 = mul i32 %2152, %2154
  %2156 = urem i32 %2155, 2
  %2157 = icmp eq i32 %2156, 0
  %2158 = icmp slt i32 %2153, 10
  %2159 = or i1 %2157, %2158
  br i1 %2159, label %originalBBpart2571, label %originalBB569alteredBB

originalBBpart2571:                               ; preds = %originalBB569
  br label %2177, !dbg !4666

2160:                                             ; preds = %originalBBpart2469
  %2161 = load i32, i32* @x.63
  %2162 = load i32, i32* @y.64
  %2163 = sub i32 %2161, 1
  %2164 = mul i32 %2161, %2163
  %2165 = urem i32 %2164, 2
  %2166 = icmp eq i32 %2165, 0
  %2167 = icmp slt i32 %2162, 10
  %2168 = or i1 %2166, %2167
  br i1 %2168, label %originalBB573, label %originalBB573alteredBB

originalBB573:                                    ; preds = %2160, %originalBB573alteredBB
  %2169 = load i32, i32* @x.63
  %2170 = load i32, i32* @y.64
  %2171 = sub i32 %2169, 1
  %2172 = mul i32 %2169, %2171
  %2173 = urem i32 %2172, 2
  %2174 = icmp eq i32 %2173, 0
  %2175 = icmp slt i32 %2170, 10
  %2176 = or i1 %2174, %2175
  br i1 %2176, label %originalBBpart2575, label %originalBB573alteredBB

originalBBpart2575:                               ; preds = %originalBB573
  br label %2177, !dbg !4667

2177:                                             ; preds = %originalBBpart2575, %originalBBpart2571
  %2178 = load i32, i32* @x.63
  %2179 = load i32, i32* @y.64
  %2180 = sub i32 %2178, 1
  %2181 = mul i32 %2178, %2180
  %2182 = urem i32 %2181, 2
  %2183 = icmp eq i32 %2182, 0
  %2184 = icmp slt i32 %2179, 10
  %2185 = or i1 %2183, %2184
  br i1 %2185, label %originalBB577, label %originalBB577alteredBB

originalBB577:                                    ; preds = %2177, %originalBB577alteredBB
  %2186 = load i32, i32* @x.63
  %2187 = load i32, i32* @y.64
  %2188 = sub i32 %2186, 1
  %2189 = mul i32 %2186, %2188
  %2190 = urem i32 %2189, 2
  %2191 = icmp eq i32 %2190, 0
  %2192 = icmp slt i32 %2187, 10
  %2193 = or i1 %2191, %2192
  br i1 %2193, label %originalBBpart2579, label %originalBB577alteredBB

originalBBpart2579:                               ; preds = %originalBB577
  br label %2194, !dbg !4668

2194:                                             ; preds = %originalBBpart2579, %originalBBpart2456, %originalBBpart2448, %originalBBpart2434
  %2195 = load i32, i32* @x.63
  %2196 = load i32, i32* @y.64
  %2197 = sub i32 %2195, 1
  %2198 = mul i32 %2195, %2197
  %2199 = urem i32 %2198, 2
  %2200 = icmp eq i32 %2199, 0
  %2201 = icmp slt i32 %2196, 10
  %2202 = or i1 %2200, %2201
  br i1 %2202, label %originalBB581, label %originalBB581alteredBB

originalBB581:                                    ; preds = %2194, %originalBB581alteredBB
  %2203 = load i32, i32* @x.63
  %2204 = load i32, i32* @y.64
  %2205 = sub i32 %2203, 1
  %2206 = mul i32 %2203, %2205
  %2207 = urem i32 %2206, 2
  %2208 = icmp eq i32 %2207, 0
  %2209 = icmp slt i32 %2204, 10
  %2210 = or i1 %2208, %2209
  br i1 %2210, label %originalBBpart2583, label %originalBB581alteredBB

originalBBpart2583:                               ; preds = %originalBB581
  br label %2212, !dbg !4669

2211:                                             ; preds = %originalBBpart2415
  br label %2212, !dbg !4670

2212:                                             ; preds = %2211, %originalBBpart2583, %originalBBpart2427
  br label %4969, !dbg !4671

2213:                                             ; preds = %originalBBpart2230
  %2214 = load i32, i32* @x.63
  %2215 = load i32, i32* @y.64
  %2216 = sub i32 %2214, 1
  %2217 = mul i32 %2214, %2216
  %2218 = urem i32 %2217, 2
  %2219 = icmp eq i32 %2218, 0
  %2220 = icmp slt i32 %2215, 10
  %2221 = or i1 %2219, %2220
  br i1 %2221, label %originalBB585, label %originalBB585alteredBB

originalBB585:                                    ; preds = %2213, %originalBB585alteredBB
  store i8 97, i8* %40, align 1, !dbg !4672
  %2222 = load i32, i32* @x.63
  %2223 = load i32, i32* @y.64
  %2224 = sub i32 %2222, 1
  %2225 = mul i32 %2222, %2224
  %2226 = urem i32 %2225, 2
  %2227 = icmp eq i32 %2226, 0
  %2228 = icmp slt i32 %2223, 10
  %2229 = or i1 %2227, %2228
  br i1 %2229, label %originalBBpart2587, label %originalBB585alteredBB

originalBBpart2587:                               ; preds = %originalBB585
  br label %2536, !dbg !4673

2230:                                             ; preds = %originalBBpart2230
  %2231 = load i32, i32* @x.63
  %2232 = load i32, i32* @y.64
  %2233 = sub i32 %2231, 1
  %2234 = mul i32 %2231, %2233
  %2235 = urem i32 %2234, 2
  %2236 = icmp eq i32 %2235, 0
  %2237 = icmp slt i32 %2232, 10
  %2238 = or i1 %2236, %2237
  br i1 %2238, label %originalBB589, label %originalBB589alteredBB

originalBB589:                                    ; preds = %2230, %originalBB589alteredBB
  store i8 98, i8* %40, align 1, !dbg !4674
  %2239 = load i32, i32* @x.63
  %2240 = load i32, i32* @y.64
  %2241 = sub i32 %2239, 1
  %2242 = mul i32 %2239, %2241
  %2243 = urem i32 %2242, 2
  %2244 = icmp eq i32 %2243, 0
  %2245 = icmp slt i32 %2240, 10
  %2246 = or i1 %2244, %2245
  br i1 %2246, label %originalBBpart2591, label %originalBB589alteredBB

originalBBpart2591:                               ; preds = %originalBB589
  br label %2536, !dbg !4675

2247:                                             ; preds = %originalBBpart2230
  %2248 = load i32, i32* @x.63
  %2249 = load i32, i32* @y.64
  %2250 = sub i32 %2248, 1
  %2251 = mul i32 %2248, %2250
  %2252 = urem i32 %2251, 2
  %2253 = icmp eq i32 %2252, 0
  %2254 = icmp slt i32 %2249, 10
  %2255 = or i1 %2253, %2254
  br i1 %2255, label %originalBB593, label %originalBB593alteredBB

originalBB593:                                    ; preds = %2247, %originalBB593alteredBB
  store i8 102, i8* %40, align 1, !dbg !4676
  %2256 = load i32, i32* @x.63
  %2257 = load i32, i32* @y.64
  %2258 = sub i32 %2256, 1
  %2259 = mul i32 %2256, %2258
  %2260 = urem i32 %2259, 2
  %2261 = icmp eq i32 %2260, 0
  %2262 = icmp slt i32 %2257, 10
  %2263 = or i1 %2261, %2262
  br i1 %2263, label %originalBBpart2595, label %originalBB593alteredBB

originalBBpart2595:                               ; preds = %originalBB593
  br label %2536, !dbg !4677

2264:                                             ; preds = %originalBBpart2230
  %2265 = load i32, i32* @x.63
  %2266 = load i32, i32* @y.64
  %2267 = sub i32 %2265, 1
  %2268 = mul i32 %2265, %2267
  %2269 = urem i32 %2268, 2
  %2270 = icmp eq i32 %2269, 0
  %2271 = icmp slt i32 %2266, 10
  %2272 = or i1 %2270, %2271
  br i1 %2272, label %originalBB597, label %originalBB597alteredBB

originalBB597:                                    ; preds = %2264, %originalBB597alteredBB
  store i8 110, i8* %40, align 1, !dbg !4678
  %2273 = load i32, i32* @x.63
  %2274 = load i32, i32* @y.64
  %2275 = sub i32 %2273, 1
  %2276 = mul i32 %2273, %2275
  %2277 = urem i32 %2276, 2
  %2278 = icmp eq i32 %2277, 0
  %2279 = icmp slt i32 %2274, 10
  %2280 = or i1 %2278, %2279
  br i1 %2280, label %originalBBpart2599, label %originalBB597alteredBB

originalBBpart2599:                               ; preds = %originalBB597
  br label %2464, !dbg !4679

2281:                                             ; preds = %originalBBpart2230
  %2282 = load i32, i32* @x.63
  %2283 = load i32, i32* @y.64
  %2284 = sub i32 %2282, 1
  %2285 = mul i32 %2282, %2284
  %2286 = urem i32 %2285, 2
  %2287 = icmp eq i32 %2286, 0
  %2288 = icmp slt i32 %2283, 10
  %2289 = or i1 %2287, %2288
  br i1 %2289, label %originalBB601, label %originalBB601alteredBB

originalBB601:                                    ; preds = %2281, %originalBB601alteredBB
  store i8 114, i8* %40, align 1, !dbg !4680
  %2290 = load i32, i32* @x.63
  %2291 = load i32, i32* @y.64
  %2292 = sub i32 %2290, 1
  %2293 = mul i32 %2290, %2292
  %2294 = urem i32 %2293, 2
  %2295 = icmp eq i32 %2294, 0
  %2296 = icmp slt i32 %2291, 10
  %2297 = or i1 %2295, %2296
  br i1 %2297, label %originalBBpart2603, label %originalBB601alteredBB

originalBBpart2603:                               ; preds = %originalBB601
  br label %2464, !dbg !4681

2298:                                             ; preds = %originalBBpart2230
  store i8 116, i8* %40, align 1, !dbg !4682
  br label %2464, !dbg !4683

2299:                                             ; preds = %originalBBpart2230
  %2300 = load i32, i32* @x.63
  %2301 = load i32, i32* @y.64
  %2302 = sub i32 %2300, 1
  %2303 = mul i32 %2300, %2302
  %2304 = urem i32 %2303, 2
  %2305 = icmp eq i32 %2304, 0
  %2306 = icmp slt i32 %2301, 10
  %2307 = or i1 %2305, %2306
  br i1 %2307, label %originalBB605, label %originalBB605alteredBB

originalBB605:                                    ; preds = %2299, %originalBB605alteredBB
  store i8 118, i8* %40, align 1, !dbg !4684
  %2308 = load i32, i32* @x.63
  %2309 = load i32, i32* @y.64
  %2310 = sub i32 %2308, 1
  %2311 = mul i32 %2308, %2310
  %2312 = urem i32 %2311, 2
  %2313 = icmp eq i32 %2312, 0
  %2314 = icmp slt i32 %2309, 10
  %2315 = or i1 %2313, %2314
  br i1 %2315, label %originalBBpart2607, label %originalBB605alteredBB

originalBBpart2607:                               ; preds = %originalBB605
  br label %2536, !dbg !4685

2316:                                             ; preds = %originalBBpart2230
  %2317 = load i8, i8* %39, align 1, !dbg !4686
  store i8 %2317, i8* %40, align 1, !dbg !4687
  %2318 = load i32, i32* %23, align 4, !dbg !4688
  %2319 = icmp eq i32 %2318, 2, !dbg !4690
  br i1 %2319, label %2320, label %2373, !dbg !4691

2320:                                             ; preds = %2316
  %2321 = load i32, i32* @x.63
  %2322 = load i32, i32* @y.64
  %2323 = sub i32 %2321, 1
  %2324 = mul i32 %2321, %2323
  %2325 = urem i32 %2324, 2
  %2326 = icmp eq i32 %2325, 0
  %2327 = icmp slt i32 %2322, 10
  %2328 = or i1 %2326, %2327
  br i1 %2328, label %originalBB609, label %originalBB609alteredBB

originalBB609:                                    ; preds = %2320, %originalBB609alteredBB
  %2329 = load i8, i8* %35, align 1, !dbg !4692
  %2330 = trunc i8 %2329 to i1, !dbg !4692
  %2331 = load i32, i32* @x.63
  %2332 = load i32, i32* @y.64
  %2333 = sub i32 %2331, 1
  %2334 = mul i32 %2331, %2333
  %2335 = urem i32 %2334, 2
  %2336 = icmp eq i32 %2335, 0
  %2337 = icmp slt i32 %2332, 10
  %2338 = or i1 %2336, %2337
  br i1 %2338, label %originalBBpart2611, label %originalBB609alteredBB

originalBBpart2611:                               ; preds = %originalBB609
  br i1 %2330, label %2339, label %2356, !dbg !4695

2339:                                             ; preds = %originalBBpart2611
  %2340 = load i32, i32* @x.63
  %2341 = load i32, i32* @y.64
  %2342 = sub i32 %2340, 1
  %2343 = mul i32 %2340, %2342
  %2344 = urem i32 %2343, 2
  %2345 = icmp eq i32 %2344, 0
  %2346 = icmp slt i32 %2341, 10
  %2347 = or i1 %2345, %2346
  br i1 %2347, label %originalBB613, label %originalBB613alteredBB

originalBB613:                                    ; preds = %2339, %originalBB613alteredBB
  %2348 = load i32, i32* @x.63
  %2349 = load i32, i32* @y.64
  %2350 = sub i32 %2348, 1
  %2351 = mul i32 %2348, %2350
  %2352 = urem i32 %2351, 2
  %2353 = icmp eq i32 %2352, 0
  %2354 = icmp slt i32 %2349, 10
  %2355 = or i1 %2353, %2354
  br i1 %2355, label %originalBBpart2615, label %originalBB613alteredBB

originalBBpart2615:                               ; preds = %originalBB613
  br label %6366, !dbg !4696

2356:                                             ; preds = %originalBBpart2611
  %2357 = load i32, i32* @x.63
  %2358 = load i32, i32* @y.64
  %2359 = sub i32 %2357, 1
  %2360 = mul i32 %2357, %2359
  %2361 = urem i32 %2360, 2
  %2362 = icmp eq i32 %2361, 0
  %2363 = icmp slt i32 %2358, 10
  %2364 = or i1 %2362, %2363
  br i1 %2364, label %originalBB617, label %originalBB617alteredBB

originalBB617:                                    ; preds = %2356, %originalBB617alteredBB
  %2365 = load i32, i32* @x.63
  %2366 = load i32, i32* @y.64
  %2367 = sub i32 %2365, 1
  %2368 = mul i32 %2365, %2367
  %2369 = urem i32 %2368, 2
  %2370 = icmp eq i32 %2369, 0
  %2371 = icmp slt i32 %2366, 10
  %2372 = or i1 %2370, %2371
  br i1 %2372, label %originalBBpart2619, label %originalBB617alteredBB

originalBBpart2619:                               ; preds = %originalBB617
  br label %5526, !dbg !4697

2373:                                             ; preds = %2316
  %2374 = load i32, i32* @x.63
  %2375 = load i32, i32* @y.64
  %2376 = sub i32 %2374, 1
  %2377 = mul i32 %2374, %2376
  %2378 = urem i32 %2377, 2
  %2379 = icmp eq i32 %2378, 0
  %2380 = icmp slt i32 %2375, 10
  %2381 = or i1 %2379, %2380
  br i1 %2381, label %originalBB621, label %originalBB621alteredBB

originalBB621:                                    ; preds = %2373, %originalBB621alteredBB
  %2382 = load i8, i8* %33, align 1, !dbg !4698
  %2383 = trunc i8 %2382 to i1, !dbg !4698
  %2384 = load i32, i32* @x.63
  %2385 = load i32, i32* @y.64
  %2386 = sub i32 %2384, 1
  %2387 = mul i32 %2384, %2386
  %2388 = urem i32 %2387, 2
  %2389 = icmp eq i32 %2388, 0
  %2390 = icmp slt i32 %2385, 10
  %2391 = or i1 %2389, %2390
  br i1 %2391, label %originalBBpart2623, label %originalBB621alteredBB

originalBBpart2623:                               ; preds = %originalBB621
  br i1 %2383, label %2392, label %2447, !dbg !4700

2392:                                             ; preds = %originalBBpart2623
  %2393 = load i32, i32* @x.63
  %2394 = load i32, i32* @y.64
  %2395 = sub i32 %2393, 1
  %2396 = mul i32 %2393, %2395
  %2397 = urem i32 %2396, 2
  %2398 = icmp eq i32 %2397, 0
  %2399 = icmp slt i32 %2394, 10
  %2400 = or i1 %2398, %2399
  br i1 %2400, label %originalBB625, label %originalBB625alteredBB

originalBB625:                                    ; preds = %2392, %originalBB625alteredBB
  %2401 = load i8, i8* %35, align 1, !dbg !4701
  %2402 = trunc i8 %2401 to i1, !dbg !4701
  %2403 = load i32, i32* @x.63
  %2404 = load i32, i32* @y.64
  %2405 = sub i32 %2403, 1
  %2406 = mul i32 %2403, %2405
  %2407 = urem i32 %2406, 2
  %2408 = icmp eq i32 %2407, 0
  %2409 = icmp slt i32 %2404, 10
  %2410 = or i1 %2408, %2409
  br i1 %2410, label %originalBBpart2627, label %originalBB625alteredBB

originalBBpart2627:                               ; preds = %originalBB625
  br i1 %2402, label %2411, label %2447, !dbg !4702

2411:                                             ; preds = %originalBBpart2627
  %2412 = load i32, i32* @x.63
  %2413 = load i32, i32* @y.64
  %2414 = sub i32 %2412, 1
  %2415 = mul i32 %2412, %2414
  %2416 = urem i32 %2415, 2
  %2417 = icmp eq i32 %2416, 0
  %2418 = icmp slt i32 %2413, 10
  %2419 = or i1 %2417, %2418
  br i1 %2419, label %originalBB629, label %originalBB629alteredBB

originalBB629:                                    ; preds = %2411, %originalBB629alteredBB
  %2420 = load i64, i64* %32, align 8, !dbg !4703
  %2421 = icmp ne i64 %2420, 0, !dbg !4703
  %2422 = load i32, i32* @x.63
  %2423 = load i32, i32* @y.64
  %2424 = sub i32 %2422, 1
  %2425 = mul i32 %2422, %2424
  %2426 = urem i32 %2425, 2
  %2427 = icmp eq i32 %2426, 0
  %2428 = icmp slt i32 %2423, 10
  %2429 = or i1 %2427, %2428
  br i1 %2429, label %originalBBpart2631, label %originalBB629alteredBB

originalBBpart2631:                               ; preds = %originalBB629
  br i1 %2421, label %2430, label %2447, !dbg !4704

2430:                                             ; preds = %originalBBpart2631
  %2431 = load i32, i32* @x.63
  %2432 = load i32, i32* @y.64
  %2433 = sub i32 %2431, 1
  %2434 = mul i32 %2431, %2433
  %2435 = urem i32 %2434, 2
  %2436 = icmp eq i32 %2435, 0
  %2437 = icmp slt i32 %2432, 10
  %2438 = or i1 %2436, %2437
  br i1 %2438, label %originalBB633, label %originalBB633alteredBB

originalBB633:                                    ; preds = %2430, %originalBB633alteredBB
  %2439 = load i32, i32* @x.63
  %2440 = load i32, i32* @y.64
  %2441 = sub i32 %2439, 1
  %2442 = mul i32 %2439, %2441
  %2443 = urem i32 %2442, 2
  %2444 = icmp eq i32 %2443, 0
  %2445 = icmp slt i32 %2440, 10
  %2446 = or i1 %2444, %2445
  br i1 %2446, label %originalBBpart2635, label %originalBB633alteredBB

originalBBpart2635:                               ; preds = %originalBB633
  br label %5526, !dbg !4705

2447:                                             ; preds = %originalBBpart2631, %originalBBpart2627, %originalBBpart2623
  %2448 = load i32, i32* @x.63
  %2449 = load i32, i32* @y.64
  %2450 = sub i32 %2448, 1
  %2451 = mul i32 %2448, %2450
  %2452 = urem i32 %2451, 2
  %2453 = icmp eq i32 %2452, 0
  %2454 = icmp slt i32 %2449, 10
  %2455 = or i1 %2453, %2454
  br i1 %2455, label %originalBB637, label %originalBB637alteredBB

originalBB637:                                    ; preds = %2447, %originalBB637alteredBB
  %2456 = load i32, i32* @x.63
  %2457 = load i32, i32* @y.64
  %2458 = sub i32 %2456, 1
  %2459 = mul i32 %2456, %2458
  %2460 = urem i32 %2459, 2
  %2461 = icmp eq i32 %2460, 0
  %2462 = icmp slt i32 %2457, 10
  %2463 = or i1 %2461, %2462
  br i1 %2463, label %originalBBpart2639, label %originalBB637alteredBB

originalBBpart2639:                               ; preds = %originalBB637
  br label %2464, !dbg !4703

2464:                                             ; preds = %originalBBpart2639, %2298, %originalBBpart2603, %originalBBpart2599
  call void @llvm.dbg.label(metadata !4706), !dbg !4707
  %2465 = load i32, i32* @x.63
  %2466 = load i32, i32* @y.64
  %2467 = sub i32 %2465, 1
  %2468 = mul i32 %2465, %2467
  %2469 = urem i32 %2468, 2
  %2470 = icmp eq i32 %2469, 0
  %2471 = icmp slt i32 %2466, 10
  %2472 = or i1 %2470, %2471
  br i1 %2472, label %originalBB641, label %originalBB641alteredBB

originalBB641:                                    ; preds = %2464, %originalBB641alteredBB
  %2473 = load i32, i32* %23, align 4, !dbg !4708
  %2474 = icmp eq i32 %2473, 2, !dbg !4710
  %2475 = load i32, i32* @x.63
  %2476 = load i32, i32* @y.64
  %2477 = sub i32 %2475, 1
  %2478 = mul i32 %2475, %2477
  %2479 = urem i32 %2478, 2
  %2480 = icmp eq i32 %2479, 0
  %2481 = icmp slt i32 %2476, 10
  %2482 = or i1 %2480, %2481
  br i1 %2482, label %originalBBpart2643, label %originalBB641alteredBB

originalBBpart2643:                               ; preds = %originalBB641
  br i1 %2474, label %2483, label %2519, !dbg !4711

2483:                                             ; preds = %originalBBpart2643
  %2484 = load i32, i32* @x.63
  %2485 = load i32, i32* @y.64
  %2486 = sub i32 %2484, 1
  %2487 = mul i32 %2484, %2486
  %2488 = urem i32 %2487, 2
  %2489 = icmp eq i32 %2488, 0
  %2490 = icmp slt i32 %2485, 10
  %2491 = or i1 %2489, %2490
  br i1 %2491, label %originalBB645, label %originalBB645alteredBB

originalBB645:                                    ; preds = %2483, %originalBB645alteredBB
  %2492 = load i8, i8* %35, align 1, !dbg !4712
  %2493 = trunc i8 %2492 to i1, !dbg !4712
  %2494 = load i32, i32* @x.63
  %2495 = load i32, i32* @y.64
  %2496 = sub i32 %2494, 1
  %2497 = mul i32 %2494, %2496
  %2498 = urem i32 %2497, 2
  %2499 = icmp eq i32 %2498, 0
  %2500 = icmp slt i32 %2495, 10
  %2501 = or i1 %2499, %2500
  br i1 %2501, label %originalBBpart2647, label %originalBB645alteredBB

originalBBpart2647:                               ; preds = %originalBB645
  br i1 %2493, label %2502, label %2519, !dbg !4713

2502:                                             ; preds = %originalBBpart2647
  %2503 = load i32, i32* @x.63
  %2504 = load i32, i32* @y.64
  %2505 = sub i32 %2503, 1
  %2506 = mul i32 %2503, %2505
  %2507 = urem i32 %2506, 2
  %2508 = icmp eq i32 %2507, 0
  %2509 = icmp slt i32 %2504, 10
  %2510 = or i1 %2508, %2509
  br i1 %2510, label %originalBB649, label %originalBB649alteredBB

originalBB649:                                    ; preds = %2502, %originalBB649alteredBB
  %2511 = load i32, i32* @x.63
  %2512 = load i32, i32* @y.64
  %2513 = sub i32 %2511, 1
  %2514 = mul i32 %2511, %2513
  %2515 = urem i32 %2514, 2
  %2516 = icmp eq i32 %2515, 0
  %2517 = icmp slt i32 %2512, 10
  %2518 = or i1 %2516, %2517
  br i1 %2518, label %originalBBpart2651, label %originalBB649alteredBB

originalBBpart2651:                               ; preds = %originalBB649
  br label %6366, !dbg !4714

2519:                                             ; preds = %originalBBpart2647, %originalBBpart2643
  %2520 = load i32, i32* @x.63
  %2521 = load i32, i32* @y.64
  %2522 = sub i32 %2520, 1
  %2523 = mul i32 %2520, %2522
  %2524 = urem i32 %2523, 2
  %2525 = icmp eq i32 %2524, 0
  %2526 = icmp slt i32 %2521, 10
  %2527 = or i1 %2525, %2526
  br i1 %2527, label %originalBB653, label %originalBB653alteredBB

originalBB653:                                    ; preds = %2519, %originalBB653alteredBB
  %2528 = load i32, i32* @x.63
  %2529 = load i32, i32* @y.64
  %2530 = sub i32 %2528, 1
  %2531 = mul i32 %2528, %2530
  %2532 = urem i32 %2531, 2
  %2533 = icmp eq i32 %2532, 0
  %2534 = icmp slt i32 %2529, 10
  %2535 = or i1 %2533, %2534
  br i1 %2535, label %originalBBpart2655, label %originalBB653alteredBB

originalBBpart2655:                               ; preds = %originalBB653
  br label %2536, !dbg !4712

2536:                                             ; preds = %originalBBpart2655, %originalBBpart2607, %originalBBpart2595, %originalBBpart2591, %originalBBpart2587
  call void @llvm.dbg.label(metadata !4715), !dbg !4716
  %2537 = load i32, i32* @x.63
  %2538 = load i32, i32* @y.64
  %2539 = sub i32 %2537, 1
  %2540 = mul i32 %2537, %2539
  %2541 = urem i32 %2540, 2
  %2542 = icmp eq i32 %2541, 0
  %2543 = icmp slt i32 %2538, 10
  %2544 = or i1 %2542, %2543
  br i1 %2544, label %originalBB657, label %originalBB657alteredBB

originalBB657:                                    ; preds = %2536, %originalBB657alteredBB
  %2545 = load i8, i8* %33, align 1, !dbg !4717
  %2546 = trunc i8 %2545 to i1, !dbg !4717
  %2547 = load i32, i32* @x.63
  %2548 = load i32, i32* @y.64
  %2549 = sub i32 %2547, 1
  %2550 = mul i32 %2547, %2549
  %2551 = urem i32 %2550, 2
  %2552 = icmp eq i32 %2551, 0
  %2553 = icmp slt i32 %2548, 10
  %2554 = or i1 %2552, %2553
  br i1 %2554, label %originalBBpart2659, label %originalBB657alteredBB

originalBBpart2659:                               ; preds = %originalBB657
  br i1 %2546, label %2555, label %2573, !dbg !4719

2555:                                             ; preds = %originalBBpart2659
  %2556 = load i32, i32* @x.63
  %2557 = load i32, i32* @y.64
  %2558 = sub i32 %2556, 1
  %2559 = mul i32 %2556, %2558
  %2560 = urem i32 %2559, 2
  %2561 = icmp eq i32 %2560, 0
  %2562 = icmp slt i32 %2557, 10
  %2563 = or i1 %2561, %2562
  br i1 %2563, label %originalBB661, label %originalBB661alteredBB

originalBB661:                                    ; preds = %2555, %originalBB661alteredBB
  %2564 = load i8, i8* %40, align 1, !dbg !4720
  store i8 %2564, i8* %39, align 1, !dbg !4722
  %2565 = load i32, i32* @x.63
  %2566 = load i32, i32* @y.64
  %2567 = sub i32 %2565, 1
  %2568 = mul i32 %2565, %2567
  %2569 = urem i32 %2568, 2
  %2570 = icmp eq i32 %2569, 0
  %2571 = icmp slt i32 %2566, 10
  %2572 = or i1 %2570, %2571
  br i1 %2572, label %originalBBpart2663, label %originalBB661alteredBB

originalBBpart2663:                               ; preds = %originalBB661
  br label %5128, !dbg !4723

2573:                                             ; preds = %originalBBpart2659
  %2574 = load i32, i32* @x.63
  %2575 = load i32, i32* @y.64
  %2576 = sub i32 %2574, 1
  %2577 = mul i32 %2574, %2576
  %2578 = urem i32 %2577, 2
  %2579 = icmp eq i32 %2578, 0
  %2580 = icmp slt i32 %2575, 10
  %2581 = or i1 %2579, %2580
  br i1 %2581, label %originalBB665, label %originalBB665alteredBB

originalBB665:                                    ; preds = %2573, %originalBB665alteredBB
  %2582 = load i32, i32* @x.63
  %2583 = load i32, i32* @y.64
  %2584 = sub i32 %2582, 1
  %2585 = mul i32 %2582, %2584
  %2586 = urem i32 %2585, 2
  %2587 = icmp eq i32 %2586, 0
  %2588 = icmp slt i32 %2583, 10
  %2589 = or i1 %2587, %2588
  br i1 %2589, label %originalBBpart2667, label %originalBB665alteredBB

originalBBpart2667:                               ; preds = %originalBB665
  br label %4969, !dbg !4724

2590:                                             ; preds = %originalBBpart2230, %originalBBpart2230
  %2591 = load i32, i32* @x.63
  %2592 = load i32, i32* @y.64
  %2593 = sub i32 %2591, 1
  %2594 = mul i32 %2591, %2593
  %2595 = urem i32 %2594, 2
  %2596 = icmp eq i32 %2595, 0
  %2597 = icmp slt i32 %2592, 10
  %2598 = or i1 %2596, %2597
  br i1 %2598, label %originalBB669, label %originalBB669alteredBB

originalBB669:                                    ; preds = %2590, %originalBB669alteredBB
  %2599 = load i64, i64* %22, align 8, !dbg !4725
  %2600 = icmp eq i64 %2599, -1, !dbg !4727
  %2601 = load i32, i32* @x.63
  %2602 = load i32, i32* @y.64
  %2603 = sub i32 %2601, 1
  %2604 = mul i32 %2601, %2603
  %2605 = urem i32 %2604, 2
  %2606 = icmp eq i32 %2605, 0
  %2607 = icmp slt i32 %2602, 10
  %2608 = or i1 %2606, %2607
  br i1 %2608, label %originalBBpart2671, label %originalBB669alteredBB

originalBBpart2671:                               ; preds = %originalBB669
  br i1 %2600, label %2609, label %2631, !dbg !4728

2609:                                             ; preds = %originalBBpart2671
  %2610 = load i32, i32* @x.63
  %2611 = load i32, i32* @y.64
  %2612 = sub i32 %2610, 1
  %2613 = mul i32 %2610, %2612
  %2614 = urem i32 %2613, 2
  %2615 = icmp eq i32 %2614, 0
  %2616 = icmp slt i32 %2611, 10
  %2617 = or i1 %2615, %2616
  br i1 %2617, label %originalBB673, label %originalBB673alteredBB

originalBB673:                                    ; preds = %2609, %originalBB673alteredBB
  %2618 = load i8*, i8** %21, align 8, !dbg !4729
  %2619 = getelementptr inbounds i8, i8* %2618, i64 1, !dbg !4729
  %2620 = load i8, i8* %2619, align 1, !dbg !4729
  %2621 = sext i8 %2620 to i32, !dbg !4729
  %2622 = icmp eq i32 %2621, 0, !dbg !4730
  %2623 = load i32, i32* @x.63
  %2624 = load i32, i32* @y.64
  %2625 = sub i32 %2623, 1
  %2626 = mul i32 %2623, %2625
  %2627 = urem i32 %2626, 2
  %2628 = icmp eq i32 %2627, 0
  %2629 = icmp slt i32 %2624, 10
  %2630 = or i1 %2628, %2629
  br i1 %2630, label %originalBBpart2675, label %originalBB673alteredBB

originalBBpart2675:                               ; preds = %originalBB673
  br i1 %2622, label %2667, label %2650, !dbg !4725

2631:                                             ; preds = %originalBBpart2671
  %2632 = load i32, i32* @x.63
  %2633 = load i32, i32* @y.64
  %2634 = sub i32 %2632, 1
  %2635 = mul i32 %2632, %2634
  %2636 = urem i32 %2635, 2
  %2637 = icmp eq i32 %2636, 0
  %2638 = icmp slt i32 %2633, 10
  %2639 = or i1 %2637, %2638
  br i1 %2639, label %originalBB677, label %originalBB677alteredBB

originalBB677:                                    ; preds = %2631, %originalBB677alteredBB
  %2640 = load i64, i64* %22, align 8, !dbg !4731
  %2641 = icmp eq i64 %2640, 1, !dbg !4732
  %2642 = load i32, i32* @x.63
  %2643 = load i32, i32* @y.64
  %2644 = sub i32 %2642, 1
  %2645 = mul i32 %2642, %2644
  %2646 = urem i32 %2645, 2
  %2647 = icmp eq i32 %2646, 0
  %2648 = icmp slt i32 %2643, 10
  %2649 = or i1 %2647, %2648
  br i1 %2649, label %originalBBpart2679, label %originalBB677alteredBB

originalBBpart2679:                               ; preds = %originalBB677
  br i1 %2641, label %2667, label %2650, !dbg !4728

2650:                                             ; preds = %originalBBpart2679, %originalBBpart2675
  %2651 = load i32, i32* @x.63
  %2652 = load i32, i32* @y.64
  %2653 = sub i32 %2651, 1
  %2654 = mul i32 %2651, %2653
  %2655 = urem i32 %2654, 2
  %2656 = icmp eq i32 %2655, 0
  %2657 = icmp slt i32 %2652, 10
  %2658 = or i1 %2656, %2657
  br i1 %2658, label %originalBB681, label %originalBB681alteredBB

originalBB681:                                    ; preds = %2650, %originalBB681alteredBB
  %2659 = load i32, i32* @x.63
  %2660 = load i32, i32* @y.64
  %2661 = sub i32 %2659, 1
  %2662 = mul i32 %2659, %2661
  %2663 = urem i32 %2662, 2
  %2664 = icmp eq i32 %2663, 0
  %2665 = icmp slt i32 %2660, 10
  %2666 = or i1 %2664, %2665
  br i1 %2666, label %originalBBpart2683, label %originalBB681alteredBB

originalBBpart2683:                               ; preds = %originalBB681
  br label %4969, !dbg !4733

2667:                                             ; preds = %originalBBpart2679, %originalBBpart2675
  %2668 = load i32, i32* @x.63
  %2669 = load i32, i32* @y.64
  %2670 = sub i32 %2668, 1
  %2671 = mul i32 %2668, %2670
  %2672 = urem i32 %2671, 2
  %2673 = icmp eq i32 %2672, 0
  %2674 = icmp slt i32 %2669, 10
  %2675 = or i1 %2673, %2674
  br i1 %2675, label %originalBB685, label %originalBB685alteredBB

originalBB685:                                    ; preds = %2667, %originalBB685alteredBB
  %2676 = load i32, i32* @x.63
  %2677 = load i32, i32* @y.64
  %2678 = sub i32 %2676, 1
  %2679 = mul i32 %2676, %2678
  %2680 = urem i32 %2679, 2
  %2681 = icmp eq i32 %2680, 0
  %2682 = icmp slt i32 %2677, 10
  %2683 = or i1 %2681, %2682
  br i1 %2683, label %originalBBpart2687, label %originalBB685alteredBB

originalBBpart2687:                               ; preds = %originalBB685
  br label %2684, !dbg !4734

2684:                                             ; preds = %originalBBpart2687, %originalBBpart2230, %originalBBpart2230
  %2685 = load i32, i32* @x.63
  %2686 = load i32, i32* @y.64
  %2687 = sub i32 %2685, 1
  %2688 = mul i32 %2685, %2687
  %2689 = urem i32 %2688, 2
  %2690 = icmp eq i32 %2689, 0
  %2691 = icmp slt i32 %2686, 10
  %2692 = or i1 %2690, %2691
  br i1 %2692, label %originalBB689, label %originalBB689alteredBB

originalBB689:                                    ; preds = %2684, %originalBB689alteredBB
  %2693 = load i64, i64* %28, align 8, !dbg !4735
  %2694 = icmp ne i64 %2693, 0, !dbg !4737
  %2695 = load i32, i32* @x.63
  %2696 = load i32, i32* @y.64
  %2697 = sub i32 %2695, 1
  %2698 = mul i32 %2695, %2697
  %2699 = urem i32 %2698, 2
  %2700 = icmp eq i32 %2699, 0
  %2701 = icmp slt i32 %2696, 10
  %2702 = or i1 %2700, %2701
  br i1 %2702, label %originalBBpart2691, label %originalBB689alteredBB

originalBBpart2691:                               ; preds = %originalBB689
  br i1 %2694, label %2703, label %2720, !dbg !4738

2703:                                             ; preds = %originalBBpart2691
  %2704 = load i32, i32* @x.63
  %2705 = load i32, i32* @y.64
  %2706 = sub i32 %2704, 1
  %2707 = mul i32 %2704, %2706
  %2708 = urem i32 %2707, 2
  %2709 = icmp eq i32 %2708, 0
  %2710 = icmp slt i32 %2705, 10
  %2711 = or i1 %2709, %2710
  br i1 %2711, label %originalBB693, label %originalBB693alteredBB

originalBB693:                                    ; preds = %2703, %originalBB693alteredBB
  %2712 = load i32, i32* @x.63
  %2713 = load i32, i32* @y.64
  %2714 = sub i32 %2712, 1
  %2715 = mul i32 %2712, %2714
  %2716 = urem i32 %2715, 2
  %2717 = icmp eq i32 %2716, 0
  %2718 = icmp slt i32 %2713, 10
  %2719 = or i1 %2717, %2718
  br i1 %2719, label %originalBBpart2695, label %originalBB693alteredBB

originalBBpart2695:                               ; preds = %originalBB693
  br label %4969, !dbg !4739

2720:                                             ; preds = %originalBBpart2691
  br label %2721, !dbg !4740

2721:                                             ; preds = %2720, %originalBBpart2230
  %2722 = load i32, i32* @x.63
  %2723 = load i32, i32* @y.64
  %2724 = sub i32 %2722, 1
  %2725 = mul i32 %2722, %2724
  %2726 = urem i32 %2725, 2
  %2727 = icmp eq i32 %2726, 0
  %2728 = icmp slt i32 %2723, 10
  %2729 = or i1 %2727, %2728
  br i1 %2729, label %originalBB697, label %originalBB697alteredBB

originalBB697:                                    ; preds = %2721, %originalBB697alteredBB
  store i8 1, i8* %43, align 1, !dbg !4741
  %2730 = load i32, i32* @x.63
  %2731 = load i32, i32* @y.64
  %2732 = sub i32 %2730, 1
  %2733 = mul i32 %2730, %2732
  %2734 = urem i32 %2733, 2
  %2735 = icmp eq i32 %2734, 0
  %2736 = icmp slt i32 %2731, 10
  %2737 = or i1 %2735, %2736
  br i1 %2737, label %originalBBpart2699, label %originalBB697alteredBB

originalBBpart2699:                               ; preds = %originalBB697
  br label %2738, !dbg !4742

2738:                                             ; preds = %originalBBpart2699, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230
  %2739 = load i32, i32* @x.63
  %2740 = load i32, i32* @y.64
  %2741 = sub i32 %2739, 1
  %2742 = mul i32 %2739, %2741
  %2743 = urem i32 %2742, 2
  %2744 = icmp eq i32 %2743, 0
  %2745 = icmp slt i32 %2740, 10
  %2746 = or i1 %2744, %2745
  br i1 %2746, label %originalBB701, label %originalBB701alteredBB

originalBB701:                                    ; preds = %2738, %originalBB701alteredBB
  %2747 = load i32, i32* %23, align 4, !dbg !4743
  %2748 = icmp eq i32 %2747, 2, !dbg !4745
  %2749 = load i32, i32* @x.63
  %2750 = load i32, i32* @y.64
  %2751 = sub i32 %2749, 1
  %2752 = mul i32 %2749, %2751
  %2753 = urem i32 %2752, 2
  %2754 = icmp eq i32 %2753, 0
  %2755 = icmp slt i32 %2750, 10
  %2756 = or i1 %2754, %2755
  br i1 %2756, label %originalBBpart2703, label %originalBB701alteredBB

originalBBpart2703:                               ; preds = %originalBB701
  br i1 %2748, label %2757, label %2793, !dbg !4746

2757:                                             ; preds = %originalBBpart2703
  %2758 = load i32, i32* @x.63
  %2759 = load i32, i32* @y.64
  %2760 = sub i32 %2758, 1
  %2761 = mul i32 %2758, %2760
  %2762 = urem i32 %2761, 2
  %2763 = icmp eq i32 %2762, 0
  %2764 = icmp slt i32 %2759, 10
  %2765 = or i1 %2763, %2764
  br i1 %2765, label %originalBB705, label %originalBB705alteredBB

originalBB705:                                    ; preds = %2757, %originalBB705alteredBB
  %2766 = load i8, i8* %35, align 1, !dbg !4747
  %2767 = trunc i8 %2766 to i1, !dbg !4747
  %2768 = load i32, i32* @x.63
  %2769 = load i32, i32* @y.64
  %2770 = sub i32 %2768, 1
  %2771 = mul i32 %2768, %2770
  %2772 = urem i32 %2771, 2
  %2773 = icmp eq i32 %2772, 0
  %2774 = icmp slt i32 %2769, 10
  %2775 = or i1 %2773, %2774
  br i1 %2775, label %originalBBpart2707, label %originalBB705alteredBB

originalBBpart2707:                               ; preds = %originalBB705
  br i1 %2767, label %2776, label %2793, !dbg !4748

2776:                                             ; preds = %originalBBpart2707
  %2777 = load i32, i32* @x.63
  %2778 = load i32, i32* @y.64
  %2779 = sub i32 %2777, 1
  %2780 = mul i32 %2777, %2779
  %2781 = urem i32 %2780, 2
  %2782 = icmp eq i32 %2781, 0
  %2783 = icmp slt i32 %2778, 10
  %2784 = or i1 %2782, %2783
  br i1 %2784, label %originalBB709, label %originalBB709alteredBB

originalBB709:                                    ; preds = %2776, %originalBB709alteredBB
  %2785 = load i32, i32* @x.63
  %2786 = load i32, i32* @y.64
  %2787 = sub i32 %2785, 1
  %2788 = mul i32 %2785, %2787
  %2789 = urem i32 %2788, 2
  %2790 = icmp eq i32 %2789, 0
  %2791 = icmp slt i32 %2786, 10
  %2792 = or i1 %2790, %2791
  br i1 %2792, label %originalBBpart2711, label %originalBB709alteredBB

originalBBpart2711:                               ; preds = %originalBB709
  br label %6366, !dbg !4749

2793:                                             ; preds = %originalBBpart2707, %originalBBpart2703
  %2794 = load i32, i32* @x.63
  %2795 = load i32, i32* @y.64
  %2796 = sub i32 %2794, 1
  %2797 = mul i32 %2794, %2796
  %2798 = urem i32 %2797, 2
  %2799 = icmp eq i32 %2798, 0
  %2800 = icmp slt i32 %2795, 10
  %2801 = or i1 %2799, %2800
  br i1 %2801, label %originalBB713, label %originalBB713alteredBB

originalBB713:                                    ; preds = %2793, %originalBB713alteredBB
  %2802 = load i32, i32* @x.63
  %2803 = load i32, i32* @y.64
  %2804 = sub i32 %2802, 1
  %2805 = mul i32 %2802, %2804
  %2806 = urem i32 %2805, 2
  %2807 = icmp eq i32 %2806, 0
  %2808 = icmp slt i32 %2803, 10
  %2809 = or i1 %2807, %2808
  br i1 %2809, label %originalBBpart2715, label %originalBB713alteredBB

originalBBpart2715:                               ; preds = %originalBB713
  br label %4969, !dbg !4750

2810:                                             ; preds = %originalBBpart2230
  %2811 = load i32, i32* @x.63
  %2812 = load i32, i32* @y.64
  %2813 = sub i32 %2811, 1
  %2814 = mul i32 %2811, %2813
  %2815 = urem i32 %2814, 2
  %2816 = icmp eq i32 %2815, 0
  %2817 = icmp slt i32 %2812, 10
  %2818 = or i1 %2816, %2817
  br i1 %2818, label %originalBB717, label %originalBB717alteredBB

originalBB717:                                    ; preds = %2810, %originalBB717alteredBB
  store i8 1, i8* %37, align 1, !dbg !4751
  store i8 1, i8* %43, align 1, !dbg !4752
  %2819 = load i32, i32* %23, align 4, !dbg !4753
  %2820 = icmp eq i32 %2819, 2, !dbg !4755
  %2821 = load i32, i32* @x.63
  %2822 = load i32, i32* @y.64
  %2823 = sub i32 %2821, 1
  %2824 = mul i32 %2821, %2823
  %2825 = urem i32 %2824, 2
  %2826 = icmp eq i32 %2825, 0
  %2827 = icmp slt i32 %2822, 10
  %2828 = or i1 %2826, %2827
  br i1 %2828, label %originalBBpart2719, label %originalBB717alteredBB

originalBBpart2719:                               ; preds = %originalBB717
  br i1 %2820, label %2829, label %3150, !dbg !4756

2829:                                             ; preds = %originalBBpart2719
  %2830 = load i32, i32* @x.63
  %2831 = load i32, i32* @y.64
  %2832 = sub i32 %2830, 1
  %2833 = mul i32 %2830, %2832
  %2834 = urem i32 %2833, 2
  %2835 = icmp eq i32 %2834, 0
  %2836 = icmp slt i32 %2831, 10
  %2837 = or i1 %2835, %2836
  br i1 %2837, label %originalBB721, label %originalBB721alteredBB

originalBB721:                                    ; preds = %2829, %originalBB721alteredBB
  %2838 = load i8, i8* %35, align 1, !dbg !4757
  %2839 = trunc i8 %2838 to i1, !dbg !4757
  %2840 = load i32, i32* @x.63
  %2841 = load i32, i32* @y.64
  %2842 = sub i32 %2840, 1
  %2843 = mul i32 %2840, %2842
  %2844 = urem i32 %2843, 2
  %2845 = icmp eq i32 %2844, 0
  %2846 = icmp slt i32 %2841, 10
  %2847 = or i1 %2845, %2846
  br i1 %2847, label %originalBBpart2723, label %originalBB721alteredBB

originalBBpart2723:                               ; preds = %originalBB721
  br i1 %2839, label %2848, label %2865, !dbg !4760

2848:                                             ; preds = %originalBBpart2723
  %2849 = load i32, i32* @x.63
  %2850 = load i32, i32* @y.64
  %2851 = sub i32 %2849, 1
  %2852 = mul i32 %2849, %2851
  %2853 = urem i32 %2852, 2
  %2854 = icmp eq i32 %2853, 0
  %2855 = icmp slt i32 %2850, 10
  %2856 = or i1 %2854, %2855
  br i1 %2856, label %originalBB725, label %originalBB725alteredBB

originalBB725:                                    ; preds = %2848, %originalBB725alteredBB
  %2857 = load i32, i32* @x.63
  %2858 = load i32, i32* @y.64
  %2859 = sub i32 %2857, 1
  %2860 = mul i32 %2857, %2859
  %2861 = urem i32 %2860, 2
  %2862 = icmp eq i32 %2861, 0
  %2863 = icmp slt i32 %2858, 10
  %2864 = or i1 %2862, %2863
  br i1 %2864, label %originalBBpart2727, label %originalBB725alteredBB

originalBBpart2727:                               ; preds = %originalBB725
  br label %6366, !dbg !4761

2865:                                             ; preds = %originalBBpart2723
  %2866 = load i32, i32* @x.63
  %2867 = load i32, i32* @y.64
  %2868 = sub i32 %2866, 1
  %2869 = mul i32 %2866, %2868
  %2870 = urem i32 %2869, 2
  %2871 = icmp eq i32 %2870, 0
  %2872 = icmp slt i32 %2867, 10
  %2873 = or i1 %2871, %2872
  br i1 %2873, label %originalBB729, label %originalBB729alteredBB

originalBB729:                                    ; preds = %2865, %originalBB729alteredBB
  %2874 = load i64, i64* %20, align 8, !dbg !4762
  %2875 = icmp ne i64 %2874, 0, !dbg !4762
  %2876 = load i32, i32* @x.63
  %2877 = load i32, i32* @y.64
  %2878 = sub i32 %2876, 1
  %2879 = mul i32 %2876, %2878
  %2880 = urem i32 %2879, 2
  %2881 = icmp eq i32 %2880, 0
  %2882 = icmp slt i32 %2877, 10
  %2883 = or i1 %2881, %2882
  br i1 %2883, label %originalBBpart2731, label %originalBB729alteredBB

originalBBpart2731:                               ; preds = %originalBB729
  br i1 %2875, label %2884, label %2921, !dbg !4764

2884:                                             ; preds = %originalBBpart2731
  %2885 = load i32, i32* @x.63
  %2886 = load i32, i32* @y.64
  %2887 = sub i32 %2885, 1
  %2888 = mul i32 %2885, %2887
  %2889 = urem i32 %2888, 2
  %2890 = icmp eq i32 %2889, 0
  %2891 = icmp slt i32 %2886, 10
  %2892 = or i1 %2890, %2891
  br i1 %2892, label %originalBB733, label %originalBB733alteredBB

originalBB733:                                    ; preds = %2884, %originalBB733alteredBB
  %2893 = load i64, i64* %30, align 8, !dbg !4765
  %2894 = icmp ne i64 %2893, 0, !dbg !4765
  %2895 = load i32, i32* @x.63
  %2896 = load i32, i32* @y.64
  %2897 = sub i32 %2895, 1
  %2898 = mul i32 %2895, %2897
  %2899 = urem i32 %2898, 2
  %2900 = icmp eq i32 %2899, 0
  %2901 = icmp slt i32 %2896, 10
  %2902 = or i1 %2900, %2901
  br i1 %2902, label %originalBBpart2735, label %originalBB733alteredBB

originalBBpart2735:                               ; preds = %originalBB733
  br i1 %2894, label %2921, label %2903, !dbg !4766

2903:                                             ; preds = %originalBBpart2735
  %2904 = load i32, i32* @x.63
  %2905 = load i32, i32* @y.64
  %2906 = sub i32 %2904, 1
  %2907 = mul i32 %2904, %2906
  %2908 = urem i32 %2907, 2
  %2909 = icmp eq i32 %2908, 0
  %2910 = icmp slt i32 %2905, 10
  %2911 = or i1 %2909, %2910
  br i1 %2911, label %originalBB737, label %originalBB737alteredBB

originalBB737:                                    ; preds = %2903, %originalBB737alteredBB
  %2912 = load i64, i64* %20, align 8, !dbg !4767
  store i64 %2912, i64* %30, align 8, !dbg !4769
  store i64 0, i64* %20, align 8, !dbg !4770
  %2913 = load i32, i32* @x.63
  %2914 = load i32, i32* @y.64
  %2915 = sub i32 %2913, 1
  %2916 = mul i32 %2913, %2915
  %2917 = urem i32 %2916, 2
  %2918 = icmp eq i32 %2917, 0
  %2919 = icmp slt i32 %2914, 10
  %2920 = or i1 %2918, %2919
  br i1 %2920, label %originalBBpart2739, label %originalBB737alteredBB

originalBBpart2739:                               ; preds = %originalBB737
  br label %2921, !dbg !4771

2921:                                             ; preds = %originalBBpart2739, %originalBBpart2735, %originalBBpart2731
  %2922 = load i32, i32* @x.63
  %2923 = load i32, i32* @y.64
  %2924 = sub i32 %2922, 1
  %2925 = mul i32 %2922, %2924
  %2926 = urem i32 %2925, 2
  %2927 = icmp eq i32 %2926, 0
  %2928 = icmp slt i32 %2923, 10
  %2929 = or i1 %2927, %2928
  br i1 %2929, label %originalBB741, label %originalBB741alteredBB

originalBB741:                                    ; preds = %2921, %originalBB741alteredBB
  %2930 = load i32, i32* @x.63
  %2931 = load i32, i32* @y.64
  %2932 = sub i32 %2930, 1
  %2933 = mul i32 %2930, %2932
  %2934 = urem i32 %2933, 2
  %2935 = icmp eq i32 %2934, 0
  %2936 = icmp slt i32 %2931, 10
  %2937 = or i1 %2935, %2936
  br i1 %2937, label %originalBBpart2743, label %originalBB741alteredBB

originalBBpart2743:                               ; preds = %originalBB741
  br label %2938, !dbg !4772

2938:                                             ; preds = %originalBBpart2743
  %2939 = load i32, i32* @x.63
  %2940 = load i32, i32* @y.64
  %2941 = sub i32 %2939, 1
  %2942 = mul i32 %2939, %2941
  %2943 = urem i32 %2942, 2
  %2944 = icmp eq i32 %2943, 0
  %2945 = icmp slt i32 %2940, 10
  %2946 = or i1 %2944, %2945
  br i1 %2946, label %originalBB745, label %originalBB745alteredBB

originalBB745:                                    ; preds = %2938, %originalBB745alteredBB
  %2947 = load i64, i64* %29, align 8, !dbg !4773
  %2948 = load i64, i64* %20, align 8, !dbg !4773
  %2949 = icmp ult i64 %2947, %2948, !dbg !4773
  %2950 = load i32, i32* @x.63
  %2951 = load i32, i32* @y.64
  %2952 = sub i32 %2950, 1
  %2953 = mul i32 %2950, %2952
  %2954 = urem i32 %2953, 2
  %2955 = icmp eq i32 %2954, 0
  %2956 = icmp slt i32 %2951, 10
  %2957 = or i1 %2955, %2956
  br i1 %2957, label %originalBBpart2747, label %originalBB745alteredBB

originalBBpart2747:                               ; preds = %originalBB745
  br i1 %2949, label %2958, label %2978, !dbg !4776

2958:                                             ; preds = %originalBBpart2747
  %2959 = load i32, i32* @x.63
  %2960 = load i32, i32* @y.64
  %2961 = sub i32 %2959, 1
  %2962 = mul i32 %2959, %2961
  %2963 = urem i32 %2962, 2
  %2964 = icmp eq i32 %2963, 0
  %2965 = icmp slt i32 %2960, 10
  %2966 = or i1 %2964, %2965
  br i1 %2966, label %originalBB749, label %originalBB749alteredBB

originalBB749:                                    ; preds = %2958, %originalBB749alteredBB
  %2967 = load i8*, i8** %19, align 8, !dbg !4773
  %2968 = load i64, i64* %29, align 8, !dbg !4773
  %2969 = getelementptr inbounds i8, i8* %2967, i64 %2968, !dbg !4773
  store i8 39, i8* %2969, align 1, !dbg !4773
  %2970 = load i32, i32* @x.63
  %2971 = load i32, i32* @y.64
  %2972 = sub i32 %2970, 1
  %2973 = mul i32 %2970, %2972
  %2974 = urem i32 %2973, 2
  %2975 = icmp eq i32 %2974, 0
  %2976 = icmp slt i32 %2971, 10
  %2977 = or i1 %2975, %2976
  br i1 %2977, label %originalBBpart2751, label %originalBB749alteredBB

originalBBpart2751:                               ; preds = %originalBB749
  br label %2978, !dbg !4773

2978:                                             ; preds = %originalBBpart2751, %originalBBpart2747
  %2979 = load i32, i32* @x.63
  %2980 = load i32, i32* @y.64
  %2981 = sub i32 %2979, 1
  %2982 = mul i32 %2979, %2981
  %2983 = urem i32 %2982, 2
  %2984 = icmp eq i32 %2983, 0
  %2985 = icmp slt i32 %2980, 10
  %2986 = or i1 %2984, %2985
  br i1 %2986, label %originalBB753, label %originalBB753alteredBB

originalBB753:                                    ; preds = %2978, %originalBB753alteredBB
  %2987 = load i64, i64* %29, align 8, !dbg !4776
  %2988 = add i64 %2987, 1, !dbg !4776
  store i64 %2988, i64* %29, align 8, !dbg !4776
  %2989 = load i32, i32* @x.63
  %2990 = load i32, i32* @y.64
  %2991 = sub i32 %2989, 1
  %2992 = mul i32 %2989, %2991
  %2993 = urem i32 %2992, 2
  %2994 = icmp eq i32 %2993, 0
  %2995 = icmp slt i32 %2990, 10
  %2996 = or i1 %2994, %2995
  br i1 %2996, label %originalBBpart2766, label %originalBB753alteredBB

originalBBpart2766:                               ; preds = %originalBB753
  br label %2997, !dbg !4776

2997:                                             ; preds = %originalBBpart2766
  %2998 = load i32, i32* @x.63
  %2999 = load i32, i32* @y.64
  %3000 = sub i32 %2998, 1
  %3001 = mul i32 %2998, %3000
  %3002 = urem i32 %3001, 2
  %3003 = icmp eq i32 %3002, 0
  %3004 = icmp slt i32 %2999, 10
  %3005 = or i1 %3003, %3004
  br i1 %3005, label %originalBB768, label %originalBB768alteredBB

originalBB768:                                    ; preds = %2997, %originalBB768alteredBB
  %3006 = load i32, i32* @x.63
  %3007 = load i32, i32* @y.64
  %3008 = sub i32 %3006, 1
  %3009 = mul i32 %3006, %3008
  %3010 = urem i32 %3009, 2
  %3011 = icmp eq i32 %3010, 0
  %3012 = icmp slt i32 %3007, 10
  %3013 = or i1 %3011, %3012
  br i1 %3013, label %originalBBpart2770, label %originalBB768alteredBB

originalBBpart2770:                               ; preds = %originalBB768
  br label %3014, !dbg !4777

3014:                                             ; preds = %originalBBpart2770
  %3015 = load i32, i32* @x.63
  %3016 = load i32, i32* @y.64
  %3017 = sub i32 %3015, 1
  %3018 = mul i32 %3015, %3017
  %3019 = urem i32 %3018, 2
  %3020 = icmp eq i32 %3019, 0
  %3021 = icmp slt i32 %3016, 10
  %3022 = or i1 %3020, %3021
  br i1 %3022, label %originalBB772, label %originalBB772alteredBB

originalBB772:                                    ; preds = %3014, %originalBB772alteredBB
  %3023 = load i64, i64* %29, align 8, !dbg !4778
  %3024 = load i64, i64* %20, align 8, !dbg !4778
  %3025 = icmp ult i64 %3023, %3024, !dbg !4778
  %3026 = load i32, i32* @x.63
  %3027 = load i32, i32* @y.64
  %3028 = sub i32 %3026, 1
  %3029 = mul i32 %3026, %3028
  %3030 = urem i32 %3029, 2
  %3031 = icmp eq i32 %3030, 0
  %3032 = icmp slt i32 %3027, 10
  %3033 = or i1 %3031, %3032
  br i1 %3033, label %originalBBpart2774, label %originalBB772alteredBB

originalBBpart2774:                               ; preds = %originalBB772
  br i1 %3025, label %3034, label %3038, !dbg !4781

3034:                                             ; preds = %originalBBpart2774
  %3035 = load i8*, i8** %19, align 8, !dbg !4778
  %3036 = load i64, i64* %29, align 8, !dbg !4778
  %3037 = getelementptr inbounds i8, i8* %3035, i64 %3036, !dbg !4778
  store i8 92, i8* %3037, align 1, !dbg !4778
  br label %3038, !dbg !4778

3038:                                             ; preds = %3034, %originalBBpart2774
  %3039 = load i32, i32* @x.63
  %3040 = load i32, i32* @y.64
  %3041 = sub i32 %3039, 1
  %3042 = mul i32 %3039, %3041
  %3043 = urem i32 %3042, 2
  %3044 = icmp eq i32 %3043, 0
  %3045 = icmp slt i32 %3040, 10
  %3046 = or i1 %3044, %3045
  br i1 %3046, label %originalBB776, label %originalBB776alteredBB

originalBB776:                                    ; preds = %3038, %originalBB776alteredBB
  %3047 = load i64, i64* %29, align 8, !dbg !4781
  %3048 = add i64 %3047, 1, !dbg !4781
  store i64 %3048, i64* %29, align 8, !dbg !4781
  %3049 = load i32, i32* @x.63
  %3050 = load i32, i32* @y.64
  %3051 = sub i32 %3049, 1
  %3052 = mul i32 %3049, %3051
  %3053 = urem i32 %3052, 2
  %3054 = icmp eq i32 %3053, 0
  %3055 = icmp slt i32 %3050, 10
  %3056 = or i1 %3054, %3055
  br i1 %3056, label %originalBBpart2783, label %originalBB776alteredBB

originalBBpart2783:                               ; preds = %originalBB776
  br label %3057, !dbg !4781

3057:                                             ; preds = %originalBBpart2783
  %3058 = load i32, i32* @x.63
  %3059 = load i32, i32* @y.64
  %3060 = sub i32 %3058, 1
  %3061 = mul i32 %3058, %3060
  %3062 = urem i32 %3061, 2
  %3063 = icmp eq i32 %3062, 0
  %3064 = icmp slt i32 %3059, 10
  %3065 = or i1 %3063, %3064
  br i1 %3065, label %originalBB785, label %originalBB785alteredBB

originalBB785:                                    ; preds = %3057, %originalBB785alteredBB
  %3066 = load i32, i32* @x.63
  %3067 = load i32, i32* @y.64
  %3068 = sub i32 %3066, 1
  %3069 = mul i32 %3066, %3068
  %3070 = urem i32 %3069, 2
  %3071 = icmp eq i32 %3070, 0
  %3072 = icmp slt i32 %3067, 10
  %3073 = or i1 %3071, %3072
  br i1 %3073, label %originalBBpart2787, label %originalBB785alteredBB

originalBBpart2787:                               ; preds = %originalBB785
  br label %3074, !dbg !4782

3074:                                             ; preds = %originalBBpart2787
  %3075 = load i32, i32* @x.63
  %3076 = load i32, i32* @y.64
  %3077 = sub i32 %3075, 1
  %3078 = mul i32 %3075, %3077
  %3079 = urem i32 %3078, 2
  %3080 = icmp eq i32 %3079, 0
  %3081 = icmp slt i32 %3076, 10
  %3082 = or i1 %3080, %3081
  br i1 %3082, label %originalBB789, label %originalBB789alteredBB

originalBB789:                                    ; preds = %3074, %originalBB789alteredBB
  %3083 = load i64, i64* %29, align 8, !dbg !4783
  %3084 = load i64, i64* %20, align 8, !dbg !4783
  %3085 = icmp ult i64 %3083, %3084, !dbg !4783
  %3086 = load i32, i32* @x.63
  %3087 = load i32, i32* @y.64
  %3088 = sub i32 %3086, 1
  %3089 = mul i32 %3086, %3088
  %3090 = urem i32 %3089, 2
  %3091 = icmp eq i32 %3090, 0
  %3092 = icmp slt i32 %3087, 10
  %3093 = or i1 %3091, %3092
  br i1 %3093, label %originalBBpart2791, label %originalBB789alteredBB

originalBBpart2791:                               ; preds = %originalBB789
  br i1 %3085, label %3094, label %3114, !dbg !4786

3094:                                             ; preds = %originalBBpart2791
  %3095 = load i32, i32* @x.63
  %3096 = load i32, i32* @y.64
  %3097 = sub i32 %3095, 1
  %3098 = mul i32 %3095, %3097
  %3099 = urem i32 %3098, 2
  %3100 = icmp eq i32 %3099, 0
  %3101 = icmp slt i32 %3096, 10
  %3102 = or i1 %3100, %3101
  br i1 %3102, label %originalBB793, label %originalBB793alteredBB

originalBB793:                                    ; preds = %3094, %originalBB793alteredBB
  %3103 = load i8*, i8** %19, align 8, !dbg !4783
  %3104 = load i64, i64* %29, align 8, !dbg !4783
  %3105 = getelementptr inbounds i8, i8* %3103, i64 %3104, !dbg !4783
  store i8 39, i8* %3105, align 1, !dbg !4783
  %3106 = load i32, i32* @x.63
  %3107 = load i32, i32* @y.64
  %3108 = sub i32 %3106, 1
  %3109 = mul i32 %3106, %3108
  %3110 = urem i32 %3109, 2
  %3111 = icmp eq i32 %3110, 0
  %3112 = icmp slt i32 %3107, 10
  %3113 = or i1 %3111, %3112
  br i1 %3113, label %originalBBpart2795, label %originalBB793alteredBB

originalBBpart2795:                               ; preds = %originalBB793
  br label %3114, !dbg !4783

3114:                                             ; preds = %originalBBpart2795, %originalBBpart2791
  %3115 = load i32, i32* @x.63
  %3116 = load i32, i32* @y.64
  %3117 = sub i32 %3115, 1
  %3118 = mul i32 %3115, %3117
  %3119 = urem i32 %3118, 2
  %3120 = icmp eq i32 %3119, 0
  %3121 = icmp slt i32 %3116, 10
  %3122 = or i1 %3120, %3121
  br i1 %3122, label %originalBB797, label %originalBB797alteredBB

originalBB797:                                    ; preds = %3114, %originalBB797alteredBB
  %3123 = load i64, i64* %29, align 8, !dbg !4786
  %3124 = add i64 %3123, 1, !dbg !4786
  store i64 %3124, i64* %29, align 8, !dbg !4786
  %3125 = load i32, i32* @x.63
  %3126 = load i32, i32* @y.64
  %3127 = sub i32 %3125, 1
  %3128 = mul i32 %3125, %3127
  %3129 = urem i32 %3128, 2
  %3130 = icmp eq i32 %3129, 0
  %3131 = icmp slt i32 %3126, 10
  %3132 = or i1 %3130, %3131
  br i1 %3132, label %originalBBpart2801, label %originalBB797alteredBB

originalBBpart2801:                               ; preds = %originalBB797
  br label %3133, !dbg !4786

3133:                                             ; preds = %originalBBpart2801
  %3134 = load i32, i32* @x.63
  %3135 = load i32, i32* @y.64
  %3136 = sub i32 %3134, 1
  %3137 = mul i32 %3134, %3136
  %3138 = urem i32 %3137, 2
  %3139 = icmp eq i32 %3138, 0
  %3140 = icmp slt i32 %3135, 10
  %3141 = or i1 %3139, %3140
  br i1 %3141, label %originalBB803, label %originalBB803alteredBB

originalBB803:                                    ; preds = %3133, %originalBB803alteredBB
  store i8 0, i8* %36, align 1, !dbg !4787
  %3142 = load i32, i32* @x.63
  %3143 = load i32, i32* @y.64
  %3144 = sub i32 %3142, 1
  %3145 = mul i32 %3142, %3144
  %3146 = urem i32 %3145, 2
  %3147 = icmp eq i32 %3146, 0
  %3148 = icmp slt i32 %3143, 10
  %3149 = or i1 %3147, %3148
  br i1 %3149, label %originalBBpart2805, label %originalBB803alteredBB

originalBBpart2805:                               ; preds = %originalBB803
  br label %3150, !dbg !4788

3150:                                             ; preds = %originalBBpart2805, %originalBBpart2719
  %3151 = load i32, i32* @x.63
  %3152 = load i32, i32* @y.64
  %3153 = sub i32 %3151, 1
  %3154 = mul i32 %3151, %3153
  %3155 = urem i32 %3154, 2
  %3156 = icmp eq i32 %3155, 0
  %3157 = icmp slt i32 %3152, 10
  %3158 = or i1 %3156, %3157
  br i1 %3158, label %originalBB807, label %originalBB807alteredBB

originalBB807:                                    ; preds = %3150, %originalBB807alteredBB
  %3159 = load i32, i32* @x.63
  %3160 = load i32, i32* @y.64
  %3161 = sub i32 %3159, 1
  %3162 = mul i32 %3159, %3161
  %3163 = urem i32 %3162, 2
  %3164 = icmp eq i32 %3163, 0
  %3165 = icmp slt i32 %3160, 10
  %3166 = or i1 %3164, %3165
  br i1 %3166, label %originalBBpart2809, label %originalBB807alteredBB

originalBBpart2809:                               ; preds = %originalBB807
  br label %4969, !dbg !4789

3167:                                             ; preds = %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230, %originalBBpart2230
  %3168 = load i32, i32* @x.63
  %3169 = load i32, i32* @y.64
  %3170 = sub i32 %3168, 1
  %3171 = mul i32 %3168, %3170
  %3172 = urem i32 %3171, 2
  %3173 = icmp eq i32 %3172, 0
  %3174 = icmp slt i32 %3169, 10
  %3175 = or i1 %3173, %3174
  br i1 %3175, label %originalBB811, label %originalBB811alteredBB

originalBB811:                                    ; preds = %3167, %originalBB811alteredBB
  store i8 1, i8* %43, align 1, !dbg !4790
  %3176 = load i32, i32* @x.63
  %3177 = load i32, i32* @y.64
  %3178 = sub i32 %3176, 1
  %3179 = mul i32 %3176, %3178
  %3180 = urem i32 %3179, 2
  %3181 = icmp eq i32 %3180, 0
  %3182 = icmp slt i32 %3177, 10
  %3183 = or i1 %3181, %3182
  br i1 %3183, label %originalBBpart2813, label %originalBB811alteredBB

originalBBpart2813:                               ; preds = %originalBB811
  br label %4969, !dbg !4791

3184:                                             ; preds = %originalBBpart2230
  call void @llvm.dbg.declare(metadata i64* %44, metadata !4792, metadata !DIExpression()), !dbg !4794
  call void @llvm.dbg.declare(metadata i8* %45, metadata !4795, metadata !DIExpression()), !dbg !4796
  %3185 = load i32, i32* @x.63
  %3186 = load i32, i32* @y.64
  %3187 = sub i32 %3185, 1
  %3188 = mul i32 %3185, %3187
  %3189 = urem i32 %3188, 2
  %3190 = icmp eq i32 %3189, 0
  %3191 = icmp slt i32 %3186, 10
  %3192 = or i1 %3190, %3191
  br i1 %3192, label %originalBB815, label %originalBB815alteredBB

originalBB815:                                    ; preds = %3184, %originalBB815alteredBB
  %3193 = load i8, i8* %34, align 1, !dbg !4797
  %3194 = trunc i8 %3193 to i1, !dbg !4797
  %3195 = load i32, i32* @x.63
  %3196 = load i32, i32* @y.64
  %3197 = sub i32 %3195, 1
  %3198 = mul i32 %3195, %3197
  %3199 = urem i32 %3198, 2
  %3200 = icmp eq i32 %3199, 0
  %3201 = icmp slt i32 %3196, 10
  %3202 = or i1 %3200, %3201
  br i1 %3202, label %originalBBpart2817, label %originalBB815alteredBB

originalBBpart2817:                               ; preds = %originalBB815
  br i1 %3194, label %3203, label %3231, !dbg !4799

3203:                                             ; preds = %originalBBpart2817
  %3204 = load i32, i32* @x.63
  %3205 = load i32, i32* @y.64
  %3206 = sub i32 %3204, 1
  %3207 = mul i32 %3204, %3206
  %3208 = urem i32 %3207, 2
  %3209 = icmp eq i32 %3208, 0
  %3210 = icmp slt i32 %3205, 10
  %3211 = or i1 %3209, %3210
  br i1 %3211, label %originalBB819, label %originalBB819alteredBB

originalBB819:                                    ; preds = %3203, %originalBB819alteredBB
  store i64 1, i64* %44, align 8, !dbg !4800
  %3212 = call i16** @__ctype_b_loc() #15, !dbg !4802
  %3213 = load i16*, i16** %3212, align 8, !dbg !4802
  %3214 = load i8, i8* %39, align 1, !dbg !4802
  %3215 = zext i8 %3214 to i32, !dbg !4802
  %3216 = sext i32 %3215 to i64, !dbg !4802
  %3217 = getelementptr inbounds i16, i16* %3213, i64 %3216, !dbg !4802
  %3218 = load i16, i16* %3217, align 2, !dbg !4802
  %3219 = zext i16 %3218 to i32, !dbg !4802
  %3220 = and i32 %3219, 16384, !dbg !4802
  %3221 = icmp ne i32 %3220, 0, !dbg !4803
  %3222 = zext i1 %3221 to i8, !dbg !4804
  store i8 %3222, i8* %45, align 1, !dbg !4804
  %3223 = load i32, i32* @x.63
  %3224 = load i32, i32* @y.64
  %3225 = sub i32 %3223, 1
  %3226 = mul i32 %3223, %3225
  %3227 = urem i32 %3226, 2
  %3228 = icmp eq i32 %3227, 0
  %3229 = icmp slt i32 %3224, 10
  %3230 = or i1 %3228, %3229
  br i1 %3230, label %originalBBpart2825, label %originalBB819alteredBB

originalBBpart2825:                               ; preds = %originalBB819
  br label %3824, !dbg !4805

3231:                                             ; preds = %originalBBpart2817
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %46, metadata !4806, metadata !DIExpression()), !dbg !4820
  %3232 = load i32, i32* @x.63
  %3233 = load i32, i32* @y.64
  %3234 = sub i32 %3232, 1
  %3235 = mul i32 %3232, %3234
  %3236 = urem i32 %3235, 2
  %3237 = icmp eq i32 %3236, 0
  %3238 = icmp slt i32 %3233, 10
  %3239 = or i1 %3237, %3238
  br i1 %3239, label %originalBB827, label %originalBB827alteredBB

originalBB827:                                    ; preds = %3231, %originalBB827alteredBB
  %3240 = bitcast %struct.__mbstate_t* %46 to i8*, !dbg !4821
  call void @llvm.memset.p0i8.i64(i8* align 4 %3240, i8 0, i64 8, i1 false), !dbg !4821
  store i64 0, i64* %44, align 8, !dbg !4822
  store i8 1, i8* %45, align 1, !dbg !4823
  %3241 = load i64, i64* %22, align 8, !dbg !4824
  %3242 = icmp eq i64 %3241, -1, !dbg !4826
  %3243 = load i32, i32* @x.63
  %3244 = load i32, i32* @y.64
  %3245 = sub i32 %3243, 1
  %3246 = mul i32 %3243, %3245
  %3247 = urem i32 %3246, 2
  %3248 = icmp eq i32 %3247, 0
  %3249 = icmp slt i32 %3244, 10
  %3250 = or i1 %3248, %3249
  br i1 %3250, label %originalBBpart2829, label %originalBB827alteredBB

originalBBpart2829:                               ; preds = %originalBB827
  br i1 %3242, label %3251, label %3270, !dbg !4827

3251:                                             ; preds = %originalBBpart2829
  %3252 = load i32, i32* @x.63
  %3253 = load i32, i32* @y.64
  %3254 = sub i32 %3252, 1
  %3255 = mul i32 %3252, %3254
  %3256 = urem i32 %3255, 2
  %3257 = icmp eq i32 %3256, 0
  %3258 = icmp slt i32 %3253, 10
  %3259 = or i1 %3257, %3258
  br i1 %3259, label %originalBB831, label %originalBB831alteredBB

originalBB831:                                    ; preds = %3251, %originalBB831alteredBB
  %3260 = load i8*, i8** %21, align 8, !dbg !4828
  %3261 = call i64 @strlen(i8* %3260) #13, !dbg !4829
  store i64 %3261, i64* %22, align 8, !dbg !4830
  %3262 = load i32, i32* @x.63
  %3263 = load i32, i32* @y.64
  %3264 = sub i32 %3262, 1
  %3265 = mul i32 %3262, %3264
  %3266 = urem i32 %3265, 2
  %3267 = icmp eq i32 %3266, 0
  %3268 = icmp slt i32 %3263, 10
  %3269 = or i1 %3267, %3268
  br i1 %3269, label %originalBBpart2833, label %originalBB831alteredBB

originalBBpart2833:                               ; preds = %originalBB831
  br label %3270, !dbg !4831

3270:                                             ; preds = %originalBBpart2833, %originalBBpart2829
  %3271 = load i32, i32* @x.63
  %3272 = load i32, i32* @y.64
  %3273 = sub i32 %3271, 1
  %3274 = mul i32 %3271, %3273
  %3275 = urem i32 %3274, 2
  %3276 = icmp eq i32 %3275, 0
  %3277 = icmp slt i32 %3272, 10
  %3278 = or i1 %3276, %3277
  br i1 %3278, label %originalBB835, label %originalBB835alteredBB

originalBB835:                                    ; preds = %3270, %originalBB835alteredBB
  %3279 = load i32, i32* @x.63
  %3280 = load i32, i32* @y.64
  %3281 = sub i32 %3279, 1
  %3282 = mul i32 %3279, %3281
  %3283 = urem i32 %3282, 2
  %3284 = icmp eq i32 %3283, 0
  %3285 = icmp slt i32 %3280, 10
  %3286 = or i1 %3284, %3285
  br i1 %3286, label %originalBBpart2837, label %originalBB835alteredBB

originalBBpart2837:                               ; preds = %originalBB835
  br label %3287, !dbg !4832

3287:                                             ; preds = %originalBBpart21037, %originalBBpart2837
  call void @llvm.dbg.declare(metadata i32* %47, metadata !4833, metadata !DIExpression()), !dbg !4836
  call void @llvm.dbg.declare(metadata i64* %48, metadata !4837, metadata !DIExpression()), !dbg !4838
  %3288 = load i32, i32* @x.63
  %3289 = load i32, i32* @y.64
  %3290 = sub i32 %3288, 1
  %3291 = mul i32 %3288, %3290
  %3292 = urem i32 %3291, 2
  %3293 = icmp eq i32 %3292, 0
  %3294 = icmp slt i32 %3289, 10
  %3295 = or i1 %3293, %3294
  br i1 %3295, label %originalBB839, label %originalBB839alteredBB

originalBB839:                                    ; preds = %3287, %originalBB839alteredBB
  %3296 = load i8*, i8** %21, align 8, !dbg !4839
  %3297 = load i64, i64* %28, align 8, !dbg !4840
  %3298 = load i64, i64* %44, align 8, !dbg !4841
  %3299 = add i64 %3297, %3298, !dbg !4842
  %3300 = getelementptr inbounds i8, i8* %3296, i64 %3299, !dbg !4839
  %3301 = load i64, i64* %22, align 8, !dbg !4843
  %3302 = load i64, i64* %28, align 8, !dbg !4844
  %3303 = load i64, i64* %44, align 8, !dbg !4845
  %3304 = add i64 %3302, %3303, !dbg !4846
  %3305 = sub i64 %3301, %3304, !dbg !4847
  %3306 = call i64 @rpl_mbrtowc(i32* %47, i8* %3300, i64 %3305, %struct.__mbstate_t* %46), !dbg !4848
  store i64 %3306, i64* %48, align 8, !dbg !4838
  %3307 = load i64, i64* %48, align 8, !dbg !4849
  %3308 = icmp eq i64 %3307, 0, !dbg !4851
  %3309 = load i32, i32* @x.63
  %3310 = load i32, i32* @y.64
  %3311 = sub i32 %3309, 1
  %3312 = mul i32 %3309, %3311
  %3313 = urem i32 %3312, 2
  %3314 = icmp eq i32 %3313, 0
  %3315 = icmp slt i32 %3310, 10
  %3316 = or i1 %3314, %3315
  br i1 %3316, label %originalBBpart2853, label %originalBB839alteredBB

originalBBpart2853:                               ; preds = %originalBB839
  br i1 %3308, label %3317, label %3334, !dbg !4852

3317:                                             ; preds = %originalBBpart2853
  %3318 = load i32, i32* @x.63
  %3319 = load i32, i32* @y.64
  %3320 = sub i32 %3318, 1
  %3321 = mul i32 %3318, %3320
  %3322 = urem i32 %3321, 2
  %3323 = icmp eq i32 %3322, 0
  %3324 = icmp slt i32 %3319, 10
  %3325 = or i1 %3323, %3324
  br i1 %3325, label %originalBB855, label %originalBB855alteredBB

originalBB855:                                    ; preds = %3317, %originalBB855alteredBB
  %3326 = load i32, i32* @x.63
  %3327 = load i32, i32* @y.64
  %3328 = sub i32 %3326, 1
  %3329 = mul i32 %3326, %3328
  %3330 = urem i32 %3329, 2
  %3331 = icmp eq i32 %3330, 0
  %3332 = icmp slt i32 %3327, 10
  %3333 = or i1 %3331, %3332
  br i1 %3333, label %originalBBpart2857, label %originalBB855alteredBB

originalBBpart2857:                               ; preds = %originalBB855
  br label %3807, !dbg !4853

3334:                                             ; preds = %originalBBpart2853
  %3335 = load i32, i32* @x.63
  %3336 = load i32, i32* @y.64
  %3337 = sub i32 %3335, 1
  %3338 = mul i32 %3335, %3337
  %3339 = urem i32 %3338, 2
  %3340 = icmp eq i32 %3339, 0
  %3341 = icmp slt i32 %3336, 10
  %3342 = or i1 %3340, %3341
  br i1 %3342, label %originalBB859, label %originalBB859alteredBB

originalBB859:                                    ; preds = %3334, %originalBB859alteredBB
  %3343 = load i64, i64* %48, align 8, !dbg !4854
  %3344 = icmp eq i64 %3343, -1, !dbg !4856
  %3345 = load i32, i32* @x.63
  %3346 = load i32, i32* @y.64
  %3347 = sub i32 %3345, 1
  %3348 = mul i32 %3345, %3347
  %3349 = urem i32 %3348, 2
  %3350 = icmp eq i32 %3349, 0
  %3351 = icmp slt i32 %3346, 10
  %3352 = or i1 %3350, %3351
  br i1 %3352, label %originalBBpart2861, label %originalBB859alteredBB

originalBBpart2861:                               ; preds = %originalBB859
  br i1 %3344, label %3353, label %3370, !dbg !4857

3353:                                             ; preds = %originalBBpart2861
  %3354 = load i32, i32* @x.63
  %3355 = load i32, i32* @y.64
  %3356 = sub i32 %3354, 1
  %3357 = mul i32 %3354, %3356
  %3358 = urem i32 %3357, 2
  %3359 = icmp eq i32 %3358, 0
  %3360 = icmp slt i32 %3355, 10
  %3361 = or i1 %3359, %3360
  br i1 %3361, label %originalBB863, label %originalBB863alteredBB

originalBB863:                                    ; preds = %3353, %originalBB863alteredBB
  store i8 0, i8* %45, align 1, !dbg !4858
  %3362 = load i32, i32* @x.63
  %3363 = load i32, i32* @y.64
  %3364 = sub i32 %3362, 1
  %3365 = mul i32 %3362, %3364
  %3366 = urem i32 %3365, 2
  %3367 = icmp eq i32 %3366, 0
  %3368 = icmp slt i32 %3363, 10
  %3369 = or i1 %3367, %3368
  br i1 %3369, label %originalBBpart2865, label %originalBB863alteredBB

originalBBpart2865:                               ; preds = %originalBB863
  br label %3807, !dbg !4860

3370:                                             ; preds = %originalBBpart2861
  %3371 = load i32, i32* @x.63
  %3372 = load i32, i32* @y.64
  %3373 = sub i32 %3371, 1
  %3374 = mul i32 %3371, %3373
  %3375 = urem i32 %3374, 2
  %3376 = icmp eq i32 %3375, 0
  %3377 = icmp slt i32 %3372, 10
  %3378 = or i1 %3376, %3377
  br i1 %3378, label %originalBB867, label %originalBB867alteredBB

originalBB867:                                    ; preds = %3370, %originalBB867alteredBB
  %3379 = load i64, i64* %48, align 8, !dbg !4861
  %3380 = icmp eq i64 %3379, -2, !dbg !4863
  %3381 = load i32, i32* @x.63
  %3382 = load i32, i32* @y.64
  %3383 = sub i32 %3381, 1
  %3384 = mul i32 %3381, %3383
  %3385 = urem i32 %3384, 2
  %3386 = icmp eq i32 %3385, 0
  %3387 = icmp slt i32 %3382, 10
  %3388 = or i1 %3386, %3387
  br i1 %3388, label %originalBBpart2869, label %originalBB867alteredBB

originalBBpart2869:                               ; preds = %originalBB867
  br i1 %3380, label %3389, label %3491, !dbg !4864

3389:                                             ; preds = %originalBBpart2869
  %3390 = load i32, i32* @x.63
  %3391 = load i32, i32* @y.64
  %3392 = sub i32 %3390, 1
  %3393 = mul i32 %3390, %3392
  %3394 = urem i32 %3393, 2
  %3395 = icmp eq i32 %3394, 0
  %3396 = icmp slt i32 %3391, 10
  %3397 = or i1 %3395, %3396
  br i1 %3397, label %originalBB871, label %originalBB871alteredBB

originalBB871:                                    ; preds = %3389, %originalBB871alteredBB
  store i8 0, i8* %45, align 1, !dbg !4865
  %3398 = load i32, i32* @x.63
  %3399 = load i32, i32* @y.64
  %3400 = sub i32 %3398, 1
  %3401 = mul i32 %3398, %3400
  %3402 = urem i32 %3401, 2
  %3403 = icmp eq i32 %3402, 0
  %3404 = icmp slt i32 %3399, 10
  %3405 = or i1 %3403, %3404
  br i1 %3405, label %originalBBpart2873, label %originalBB871alteredBB

originalBBpart2873:                               ; preds = %originalBB871
  br label %3406, !dbg !4867

3406:                                             ; preds = %originalBBpart2925, %originalBBpart2873
  %3407 = load i32, i32* @x.63
  %3408 = load i32, i32* @y.64
  %3409 = sub i32 %3407, 1
  %3410 = mul i32 %3407, %3409
  %3411 = urem i32 %3410, 2
  %3412 = icmp eq i32 %3411, 0
  %3413 = icmp slt i32 %3408, 10
  %3414 = or i1 %3412, %3413
  br i1 %3414, label %originalBB875, label %originalBB875alteredBB

originalBB875:                                    ; preds = %3406, %originalBB875alteredBB
  %3415 = load i64, i64* %28, align 8, !dbg !4868
  %3416 = load i64, i64* %44, align 8, !dbg !4869
  %3417 = add i64 %3415, %3416, !dbg !4870
  %3418 = load i64, i64* %22, align 8, !dbg !4871
  %3419 = icmp ult i64 %3417, %3418, !dbg !4872
  %3420 = load i32, i32* @x.63
  %3421 = load i32, i32* @y.64
  %3422 = sub i32 %3420, 1
  %3423 = mul i32 %3420, %3422
  %3424 = urem i32 %3423, 2
  %3425 = icmp eq i32 %3424, 0
  %3426 = icmp slt i32 %3421, 10
  %3427 = or i1 %3425, %3426
  br i1 %3427, label %originalBBpart2891, label %originalBB875alteredBB

originalBBpart2891:                               ; preds = %originalBB875
  br i1 %3419, label %3428, label %3453, !dbg !4873

3428:                                             ; preds = %originalBBpart2891
  %3429 = load i32, i32* @x.63
  %3430 = load i32, i32* @y.64
  %3431 = sub i32 %3429, 1
  %3432 = mul i32 %3429, %3431
  %3433 = urem i32 %3432, 2
  %3434 = icmp eq i32 %3433, 0
  %3435 = icmp slt i32 %3430, 10
  %3436 = or i1 %3434, %3435
  br i1 %3436, label %originalBB893, label %originalBB893alteredBB

originalBB893:                                    ; preds = %3428, %originalBB893alteredBB
  %3437 = load i8*, i8** %21, align 8, !dbg !4874
  %3438 = load i64, i64* %28, align 8, !dbg !4875
  %3439 = load i64, i64* %44, align 8, !dbg !4876
  %3440 = add i64 %3438, %3439, !dbg !4877
  %3441 = getelementptr inbounds i8, i8* %3437, i64 %3440, !dbg !4874
  %3442 = load i8, i8* %3441, align 1, !dbg !4874
  %3443 = sext i8 %3442 to i32, !dbg !4874
  %3444 = icmp ne i32 %3443, 0, !dbg !4873
  %3445 = load i32, i32* @x.63
  %3446 = load i32, i32* @y.64
  %3447 = sub i32 %3445, 1
  %3448 = mul i32 %3445, %3447
  %3449 = urem i32 %3448, 2
  %3450 = icmp eq i32 %3449, 0
  %3451 = icmp slt i32 %3446, 10
  %3452 = or i1 %3450, %3451
  br i1 %3452, label %originalBBpart2911, label %originalBB893alteredBB

originalBBpart2911:                               ; preds = %originalBB893
  br label %3453

3453:                                             ; preds = %originalBBpart2911, %originalBBpart2891
  %3454 = phi i1 [ false, %originalBBpart2891 ], [ %3444, %originalBBpart2911 ], !dbg !4878
  %3455 = load i32, i32* @x.63
  %3456 = load i32, i32* @y.64
  %3457 = sub i32 %3455, 1
  %3458 = mul i32 %3455, %3457
  %3459 = urem i32 %3458, 2
  %3460 = icmp eq i32 %3459, 0
  %3461 = icmp slt i32 %3456, 10
  %3462 = or i1 %3460, %3461
  br i1 %3462, label %originalBB913, label %originalBB913alteredBB

originalBB913:                                    ; preds = %3453, %originalBB913alteredBB
  %3463 = load i32, i32* @x.63
  %3464 = load i32, i32* @y.64
  %3465 = sub i32 %3463, 1
  %3466 = mul i32 %3463, %3465
  %3467 = urem i32 %3466, 2
  %3468 = icmp eq i32 %3467, 0
  %3469 = icmp slt i32 %3464, 10
  %3470 = or i1 %3468, %3469
  br i1 %3470, label %originalBBpart2915, label %originalBB913alteredBB

originalBBpart2915:                               ; preds = %originalBB913
  br i1 %3454, label %3471, label %3490, !dbg !4867

3471:                                             ; preds = %originalBBpart2915
  %3472 = load i32, i32* @x.63
  %3473 = load i32, i32* @y.64
  %3474 = sub i32 %3472, 1
  %3475 = mul i32 %3472, %3474
  %3476 = urem i32 %3475, 2
  %3477 = icmp eq i32 %3476, 0
  %3478 = icmp slt i32 %3473, 10
  %3479 = or i1 %3477, %3478
  br i1 %3479, label %originalBB917, label %originalBB917alteredBB

originalBB917:                                    ; preds = %3471, %originalBB917alteredBB
  %3480 = load i64, i64* %44, align 8, !dbg !4879
  %3481 = add i64 %3480, 1, !dbg !4879
  store i64 %3481, i64* %44, align 8, !dbg !4879
  %3482 = load i32, i32* @x.63
  %3483 = load i32, i32* @y.64
  %3484 = sub i32 %3482, 1
  %3485 = mul i32 %3482, %3484
  %3486 = urem i32 %3485, 2
  %3487 = icmp eq i32 %3486, 0
  %3488 = icmp slt i32 %3483, 10
  %3489 = or i1 %3487, %3488
  br i1 %3489, label %originalBBpart2925, label %originalBB917alteredBB

originalBBpart2925:                               ; preds = %originalBB917
  br label %3406, !dbg !4867, !llvm.loop !4880

3490:                                             ; preds = %originalBBpart2915
  br label %3807, !dbg !4881

3491:                                             ; preds = %originalBBpart2869
  %3492 = load i32, i32* @x.63
  %3493 = load i32, i32* @y.64
  %3494 = sub i32 %3492, 1
  %3495 = mul i32 %3492, %3494
  %3496 = urem i32 %3495, 2
  %3497 = icmp eq i32 %3496, 0
  %3498 = icmp slt i32 %3493, 10
  %3499 = or i1 %3497, %3498
  br i1 %3499, label %originalBB927, label %originalBB927alteredBB

originalBB927:                                    ; preds = %3491, %originalBB927alteredBB
  %3500 = load i8, i8* %35, align 1, !dbg !4882
  %3501 = trunc i8 %3500 to i1, !dbg !4882
  %3502 = load i32, i32* @x.63
  %3503 = load i32, i32* @y.64
  %3504 = sub i32 %3502, 1
  %3505 = mul i32 %3502, %3504
  %3506 = urem i32 %3505, 2
  %3507 = icmp eq i32 %3506, 0
  %3508 = icmp slt i32 %3503, 10
  %3509 = or i1 %3507, %3508
  br i1 %3509, label %originalBBpart2929, label %originalBB927alteredBB

originalBBpart2929:                               ; preds = %originalBB927
  br i1 %3501, label %3510, label %3679, !dbg !4885

3510:                                             ; preds = %originalBBpart2929
  %3511 = load i32, i32* @x.63
  %3512 = load i32, i32* @y.64
  %3513 = sub i32 %3511, 1
  %3514 = mul i32 %3511, %3513
  %3515 = urem i32 %3514, 2
  %3516 = icmp eq i32 %3515, 0
  %3517 = icmp slt i32 %3512, 10
  %3518 = or i1 %3516, %3517
  br i1 %3518, label %originalBB931, label %originalBB931alteredBB

originalBB931:                                    ; preds = %3510, %originalBB931alteredBB
  %3519 = load i32, i32* %23, align 4, !dbg !4886
  %3520 = icmp eq i32 %3519, 2, !dbg !4887
  %3521 = load i32, i32* @x.63
  %3522 = load i32, i32* @y.64
  %3523 = sub i32 %3521, 1
  %3524 = mul i32 %3521, %3523
  %3525 = urem i32 %3524, 2
  %3526 = icmp eq i32 %3525, 0
  %3527 = icmp slt i32 %3522, 10
  %3528 = or i1 %3526, %3527
  br i1 %3528, label %originalBBpart2933, label %originalBB931alteredBB

originalBBpart2933:                               ; preds = %originalBB931
  br i1 %3520, label %3529, label %3679, !dbg !4888

3529:                                             ; preds = %originalBBpart2933
  call void @llvm.dbg.declare(metadata i64* %49, metadata !4889, metadata !DIExpression()), !dbg !4891
  %3530 = load i32, i32* @x.63
  %3531 = load i32, i32* @y.64
  %3532 = sub i32 %3530, 1
  %3533 = mul i32 %3530, %3532
  %3534 = urem i32 %3533, 2
  %3535 = icmp eq i32 %3534, 0
  %3536 = icmp slt i32 %3531, 10
  %3537 = or i1 %3535, %3536
  br i1 %3537, label %originalBB935, label %originalBB935alteredBB

originalBB935:                                    ; preds = %3529, %originalBB935alteredBB
  store i64 1, i64* %49, align 8, !dbg !4892
  %3538 = load i32, i32* @x.63
  %3539 = load i32, i32* @y.64
  %3540 = sub i32 %3538, 1
  %3541 = mul i32 %3538, %3540
  %3542 = urem i32 %3541, 2
  %3543 = icmp eq i32 %3542, 0
  %3544 = icmp slt i32 %3539, 10
  %3545 = or i1 %3543, %3544
  br i1 %3545, label %originalBBpart2937, label %originalBB935alteredBB

originalBBpart2937:                               ; preds = %originalBB935
  br label %3546, !dbg !4894

3546:                                             ; preds = %originalBBpart2993, %originalBBpart2937
  %3547 = load i32, i32* @x.63
  %3548 = load i32, i32* @y.64
  %3549 = sub i32 %3547, 1
  %3550 = mul i32 %3547, %3549
  %3551 = urem i32 %3550, 2
  %3552 = icmp eq i32 %3551, 0
  %3553 = icmp slt i32 %3548, 10
  %3554 = or i1 %3552, %3553
  br i1 %3554, label %originalBB939, label %originalBB939alteredBB

originalBB939:                                    ; preds = %3546, %originalBB939alteredBB
  %3555 = load i64, i64* %49, align 8, !dbg !4895
  %3556 = load i64, i64* %48, align 8, !dbg !4897
  %3557 = icmp ult i64 %3555, %3556, !dbg !4898
  %3558 = load i32, i32* @x.63
  %3559 = load i32, i32* @y.64
  %3560 = sub i32 %3558, 1
  %3561 = mul i32 %3558, %3560
  %3562 = urem i32 %3561, 2
  %3563 = icmp eq i32 %3562, 0
  %3564 = icmp slt i32 %3559, 10
  %3565 = or i1 %3563, %3564
  br i1 %3565, label %originalBBpart2941, label %originalBB939alteredBB

originalBBpart2941:                               ; preds = %originalBB939
  br i1 %3557, label %3566, label %3662, !dbg !4899

3566:                                             ; preds = %originalBBpart2941
  %3567 = load i32, i32* @x.63
  %3568 = load i32, i32* @y.64
  %3569 = sub i32 %3567, 1
  %3570 = mul i32 %3567, %3569
  %3571 = urem i32 %3570, 2
  %3572 = icmp eq i32 %3571, 0
  %3573 = icmp slt i32 %3568, 10
  %3574 = or i1 %3572, %3573
  br i1 %3574, label %originalBB943, label %originalBB943alteredBB

originalBB943:                                    ; preds = %3566, %originalBB943alteredBB
  %3575 = load i8*, i8** %21, align 8, !dbg !4900
  %3576 = load i64, i64* %28, align 8, !dbg !4901
  %3577 = load i64, i64* %44, align 8, !dbg !4902
  %3578 = add i64 %3576, %3577, !dbg !4903
  %3579 = load i64, i64* %49, align 8, !dbg !4904
  %3580 = add i64 %3578, %3579, !dbg !4905
  %3581 = getelementptr inbounds i8, i8* %3575, i64 %3580, !dbg !4900
  %3582 = load i8, i8* %3581, align 1, !dbg !4900
  %3583 = sext i8 %3582 to i32, !dbg !4900
  %3584 = load i32, i32* @x.63
  %3585 = load i32, i32* @y.64
  %3586 = sub i32 %3584, 1
  %3587 = mul i32 %3584, %3586
  %3588 = urem i32 %3587, 2
  %3589 = icmp eq i32 %3588, 0
  %3590 = icmp slt i32 %3585, 10
  %3591 = or i1 %3589, %3590
  br i1 %3591, label %originalBBpart2967, label %originalBB943alteredBB

originalBBpart2967:                               ; preds = %originalBB943
  switch i32 %3583, label %3609 [
    i32 91, label %3592
    i32 92, label %3592
    i32 94, label %3592
    i32 96, label %3592
    i32 124, label %3592
  ], !dbg !4906

3592:                                             ; preds = %originalBBpart2967, %originalBBpart2967, %originalBBpart2967, %originalBBpart2967, %originalBBpart2967
  %3593 = load i32, i32* @x.63
  %3594 = load i32, i32* @y.64
  %3595 = sub i32 %3593, 1
  %3596 = mul i32 %3593, %3595
  %3597 = urem i32 %3596, 2
  %3598 = icmp eq i32 %3597, 0
  %3599 = icmp slt i32 %3594, 10
  %3600 = or i1 %3598, %3599
  br i1 %3600, label %originalBB969, label %originalBB969alteredBB

originalBB969:                                    ; preds = %3592, %originalBB969alteredBB
  %3601 = load i32, i32* @x.63
  %3602 = load i32, i32* @y.64
  %3603 = sub i32 %3601, 1
  %3604 = mul i32 %3601, %3603
  %3605 = urem i32 %3604, 2
  %3606 = icmp eq i32 %3605, 0
  %3607 = icmp slt i32 %3602, 10
  %3608 = or i1 %3606, %3607
  br i1 %3608, label %originalBBpart2971, label %originalBB969alteredBB

originalBBpart2971:                               ; preds = %originalBB969
  br label %6366, !dbg !4907

3609:                                             ; preds = %originalBBpart2967
  %3610 = load i32, i32* @x.63
  %3611 = load i32, i32* @y.64
  %3612 = sub i32 %3610, 1
  %3613 = mul i32 %3610, %3612
  %3614 = urem i32 %3613, 2
  %3615 = icmp eq i32 %3614, 0
  %3616 = icmp slt i32 %3611, 10
  %3617 = or i1 %3615, %3616
  br i1 %3617, label %originalBB973, label %originalBB973alteredBB

originalBB973:                                    ; preds = %3609, %originalBB973alteredBB
  %3618 = load i32, i32* @x.63
  %3619 = load i32, i32* @y.64
  %3620 = sub i32 %3618, 1
  %3621 = mul i32 %3618, %3620
  %3622 = urem i32 %3621, 2
  %3623 = icmp eq i32 %3622, 0
  %3624 = icmp slt i32 %3619, 10
  %3625 = or i1 %3623, %3624
  br i1 %3625, label %originalBBpart2975, label %originalBB973alteredBB

originalBBpart2975:                               ; preds = %originalBB973
  br label %3626, !dbg !4909

3626:                                             ; preds = %originalBBpart2975
  %3627 = load i32, i32* @x.63
  %3628 = load i32, i32* @y.64
  %3629 = sub i32 %3627, 1
  %3630 = mul i32 %3627, %3629
  %3631 = urem i32 %3630, 2
  %3632 = icmp eq i32 %3631, 0
  %3633 = icmp slt i32 %3628, 10
  %3634 = or i1 %3632, %3633
  br i1 %3634, label %originalBB977, label %originalBB977alteredBB

originalBB977:                                    ; preds = %3626, %originalBB977alteredBB
  %3635 = load i32, i32* @x.63
  %3636 = load i32, i32* @y.64
  %3637 = sub i32 %3635, 1
  %3638 = mul i32 %3635, %3637
  %3639 = urem i32 %3638, 2
  %3640 = icmp eq i32 %3639, 0
  %3641 = icmp slt i32 %3636, 10
  %3642 = or i1 %3640, %3641
  br i1 %3642, label %originalBBpart2979, label %originalBB977alteredBB

originalBBpart2979:                               ; preds = %originalBB977
  br label %3643, !dbg !4910

3643:                                             ; preds = %originalBBpart2979
  %3644 = load i32, i32* @x.63
  %3645 = load i32, i32* @y.64
  %3646 = sub i32 %3644, 1
  %3647 = mul i32 %3644, %3646
  %3648 = urem i32 %3647, 2
  %3649 = icmp eq i32 %3648, 0
  %3650 = icmp slt i32 %3645, 10
  %3651 = or i1 %3649, %3650
  br i1 %3651, label %originalBB981, label %originalBB981alteredBB

originalBB981:                                    ; preds = %3643, %originalBB981alteredBB
  %3652 = load i64, i64* %49, align 8, !dbg !4911
  %3653 = add i64 %3652, 1, !dbg !4911
  store i64 %3653, i64* %49, align 8, !dbg !4911
  %3654 = load i32, i32* @x.63
  %3655 = load i32, i32* @y.64
  %3656 = sub i32 %3654, 1
  %3657 = mul i32 %3654, %3656
  %3658 = urem i32 %3657, 2
  %3659 = icmp eq i32 %3658, 0
  %3660 = icmp slt i32 %3655, 10
  %3661 = or i1 %3659, %3660
  br i1 %3661, label %originalBBpart2993, label %originalBB981alteredBB

originalBBpart2993:                               ; preds = %originalBB981
  br label %3546, !dbg !4912, !llvm.loop !4913

3662:                                             ; preds = %originalBBpart2941
  %3663 = load i32, i32* @x.63
  %3664 = load i32, i32* @y.64
  %3665 = sub i32 %3663, 1
  %3666 = mul i32 %3663, %3665
  %3667 = urem i32 %3666, 2
  %3668 = icmp eq i32 %3667, 0
  %3669 = icmp slt i32 %3664, 10
  %3670 = or i1 %3668, %3669
  br i1 %3670, label %originalBB995, label %originalBB995alteredBB

originalBB995:                                    ; preds = %3662, %originalBB995alteredBB
  %3671 = load i32, i32* @x.63
  %3672 = load i32, i32* @y.64
  %3673 = sub i32 %3671, 1
  %3674 = mul i32 %3671, %3673
  %3675 = urem i32 %3674, 2
  %3676 = icmp eq i32 %3675, 0
  %3677 = icmp slt i32 %3672, 10
  %3678 = or i1 %3676, %3677
  br i1 %3678, label %originalBBpart2997, label %originalBB995alteredBB

originalBBpart2997:                               ; preds = %originalBB995
  br label %3679, !dbg !4915

3679:                                             ; preds = %originalBBpart2997, %originalBBpart2933, %originalBBpart2929
  %3680 = load i32, i32* @x.63
  %3681 = load i32, i32* @y.64
  %3682 = sub i32 %3680, 1
  %3683 = mul i32 %3680, %3682
  %3684 = urem i32 %3683, 2
  %3685 = icmp eq i32 %3684, 0
  %3686 = icmp slt i32 %3681, 10
  %3687 = or i1 %3685, %3686
  br i1 %3687, label %originalBB999, label %originalBB999alteredBB

originalBB999:                                    ; preds = %3679, %originalBB999alteredBB
  %3688 = load i32, i32* %47, align 4, !dbg !4916
  %3689 = call i32 @iswprint(i32 %3688) #10, !dbg !4918
  %3690 = icmp ne i32 %3689, 0, !dbg !4918
  %3691 = load i32, i32* @x.63
  %3692 = load i32, i32* @y.64
  %3693 = sub i32 %3691, 1
  %3694 = mul i32 %3691, %3693
  %3695 = urem i32 %3694, 2
  %3696 = icmp eq i32 %3695, 0
  %3697 = icmp slt i32 %3692, 10
  %3698 = or i1 %3696, %3697
  br i1 %3698, label %originalBBpart21001, label %originalBB999alteredBB

originalBBpart21001:                              ; preds = %originalBB999
  br i1 %3690, label %3716, label %3699, !dbg !4919

3699:                                             ; preds = %originalBBpart21001
  %3700 = load i32, i32* @x.63
  %3701 = load i32, i32* @y.64
  %3702 = sub i32 %3700, 1
  %3703 = mul i32 %3700, %3702
  %3704 = urem i32 %3703, 2
  %3705 = icmp eq i32 %3704, 0
  %3706 = icmp slt i32 %3701, 10
  %3707 = or i1 %3705, %3706
  br i1 %3707, label %originalBB1003, label %originalBB1003alteredBB

originalBB1003:                                   ; preds = %3699, %originalBB1003alteredBB
  store i8 0, i8* %45, align 1, !dbg !4920
  %3708 = load i32, i32* @x.63
  %3709 = load i32, i32* @y.64
  %3710 = sub i32 %3708, 1
  %3711 = mul i32 %3708, %3710
  %3712 = urem i32 %3711, 2
  %3713 = icmp eq i32 %3712, 0
  %3714 = icmp slt i32 %3709, 10
  %3715 = or i1 %3713, %3714
  br i1 %3715, label %originalBBpart21005, label %originalBB1003alteredBB

originalBBpart21005:                              ; preds = %originalBB1003
  br label %3716, !dbg !4921

3716:                                             ; preds = %originalBBpart21005, %originalBBpart21001
  %3717 = load i32, i32* @x.63
  %3718 = load i32, i32* @y.64
  %3719 = sub i32 %3717, 1
  %3720 = mul i32 %3717, %3719
  %3721 = urem i32 %3720, 2
  %3722 = icmp eq i32 %3721, 0
  %3723 = icmp slt i32 %3718, 10
  %3724 = or i1 %3722, %3723
  br i1 %3724, label %originalBB1007, label %originalBB1007alteredBB

originalBB1007:                                   ; preds = %3716, %originalBB1007alteredBB
  %3725 = load i64, i64* %48, align 8, !dbg !4922
  %3726 = load i64, i64* %44, align 8, !dbg !4923
  %3727 = add i64 %3726, %3725, !dbg !4923
  store i64 %3727, i64* %44, align 8, !dbg !4923
  %3728 = load i32, i32* @x.63
  %3729 = load i32, i32* @y.64
  %3730 = sub i32 %3728, 1
  %3731 = mul i32 %3728, %3730
  %3732 = urem i32 %3731, 2
  %3733 = icmp eq i32 %3732, 0
  %3734 = icmp slt i32 %3729, 10
  %3735 = or i1 %3733, %3734
  br i1 %3735, label %originalBBpart21011, label %originalBB1007alteredBB

originalBBpart21011:                              ; preds = %originalBB1007
  br label %3736

3736:                                             ; preds = %originalBBpart21011
  %3737 = load i32, i32* @x.63
  %3738 = load i32, i32* @y.64
  %3739 = sub i32 %3737, 1
  %3740 = mul i32 %3737, %3739
  %3741 = urem i32 %3740, 2
  %3742 = icmp eq i32 %3741, 0
  %3743 = icmp slt i32 %3738, 10
  %3744 = or i1 %3742, %3743
  br i1 %3744, label %originalBB1013, label %originalBB1013alteredBB

originalBB1013:                                   ; preds = %3736, %originalBB1013alteredBB
  %3745 = load i32, i32* @x.63
  %3746 = load i32, i32* @y.64
  %3747 = sub i32 %3745, 1
  %3748 = mul i32 %3745, %3747
  %3749 = urem i32 %3748, 2
  %3750 = icmp eq i32 %3749, 0
  %3751 = icmp slt i32 %3746, 10
  %3752 = or i1 %3750, %3751
  br i1 %3752, label %originalBBpart21015, label %originalBB1013alteredBB

originalBBpart21015:                              ; preds = %originalBB1013
  br label %3753

3753:                                             ; preds = %originalBBpart21015
  %3754 = load i32, i32* @x.63
  %3755 = load i32, i32* @y.64
  %3756 = sub i32 %3754, 1
  %3757 = mul i32 %3754, %3756
  %3758 = urem i32 %3757, 2
  %3759 = icmp eq i32 %3758, 0
  %3760 = icmp slt i32 %3755, 10
  %3761 = or i1 %3759, %3760
  br i1 %3761, label %originalBB1017, label %originalBB1017alteredBB

originalBB1017:                                   ; preds = %3753, %originalBB1017alteredBB
  %3762 = load i32, i32* @x.63
  %3763 = load i32, i32* @y.64
  %3764 = sub i32 %3762, 1
  %3765 = mul i32 %3762, %3764
  %3766 = urem i32 %3765, 2
  %3767 = icmp eq i32 %3766, 0
  %3768 = icmp slt i32 %3763, 10
  %3769 = or i1 %3767, %3768
  br i1 %3769, label %originalBBpart21019, label %originalBB1017alteredBB

originalBBpart21019:                              ; preds = %originalBB1017
  br label %3770

3770:                                             ; preds = %originalBBpart21019
  %3771 = load i32, i32* @x.63
  %3772 = load i32, i32* @y.64
  %3773 = sub i32 %3771, 1
  %3774 = mul i32 %3771, %3773
  %3775 = urem i32 %3774, 2
  %3776 = icmp eq i32 %3775, 0
  %3777 = icmp slt i32 %3772, 10
  %3778 = or i1 %3776, %3777
  br i1 %3778, label %originalBB1021, label %originalBB1021alteredBB

originalBB1021:                                   ; preds = %3770, %originalBB1021alteredBB
  %3779 = load i32, i32* @x.63
  %3780 = load i32, i32* @y.64
  %3781 = sub i32 %3779, 1
  %3782 = mul i32 %3779, %3781
  %3783 = urem i32 %3782, 2
  %3784 = icmp eq i32 %3783, 0
  %3785 = icmp slt i32 %3780, 10
  %3786 = or i1 %3784, %3785
  br i1 %3786, label %originalBBpart21023, label %originalBB1021alteredBB

originalBBpart21023:                              ; preds = %originalBB1021
  br label %3787, !dbg !4924

3787:                                             ; preds = %originalBBpart21023
  %3788 = load i32, i32* @x.63
  %3789 = load i32, i32* @y.64
  %3790 = sub i32 %3788, 1
  %3791 = mul i32 %3788, %3790
  %3792 = urem i32 %3791, 2
  %3793 = icmp eq i32 %3792, 0
  %3794 = icmp slt i32 %3789, 10
  %3795 = or i1 %3793, %3794
  br i1 %3795, label %originalBB1025, label %originalBB1025alteredBB

originalBB1025:                                   ; preds = %3787, %originalBB1025alteredBB
  %3796 = call i32 @mbsinit(%struct.__mbstate_t* %46) #13, !dbg !4925
  %3797 = icmp ne i32 %3796, 0, !dbg !4926
  %3798 = xor i1 %3797, true, !dbg !4926
  %3799 = load i32, i32* @x.63
  %3800 = load i32, i32* @y.64
  %3801 = sub i32 %3799, 1
  %3802 = mul i32 %3799, %3801
  %3803 = urem i32 %3802, 2
  %3804 = icmp eq i32 %3803, 0
  %3805 = icmp slt i32 %3800, 10
  %3806 = or i1 %3804, %3805
  br i1 %3806, label %originalBBpart21037, label %originalBB1025alteredBB

originalBBpart21037:                              ; preds = %originalBB1025
  br i1 %3798, label %3287, label %3807, !dbg !4924, !llvm.loop !4927

3807:                                             ; preds = %originalBBpart21037, %3490, %originalBBpart2865, %originalBBpart2857
  %3808 = load i32, i32* @x.63
  %3809 = load i32, i32* @y.64
  %3810 = sub i32 %3808, 1
  %3811 = mul i32 %3808, %3810
  %3812 = urem i32 %3811, 2
  %3813 = icmp eq i32 %3812, 0
  %3814 = icmp slt i32 %3809, 10
  %3815 = or i1 %3813, %3814
  br i1 %3815, label %originalBB1039, label %originalBB1039alteredBB

originalBB1039:                                   ; preds = %3807, %originalBB1039alteredBB
  %3816 = load i32, i32* @x.63
  %3817 = load i32, i32* @y.64
  %3818 = sub i32 %3816, 1
  %3819 = mul i32 %3816, %3818
  %3820 = urem i32 %3819, 2
  %3821 = icmp eq i32 %3820, 0
  %3822 = icmp slt i32 %3817, 10
  %3823 = or i1 %3821, %3822
  br i1 %3823, label %originalBBpart21041, label %originalBB1039alteredBB

originalBBpart21041:                              ; preds = %originalBB1039
  br label %3824

3824:                                             ; preds = %originalBBpart21041, %originalBBpart2825
  %3825 = load i32, i32* @x.63
  %3826 = load i32, i32* @y.64
  %3827 = sub i32 %3825, 1
  %3828 = mul i32 %3825, %3827
  %3829 = urem i32 %3828, 2
  %3830 = icmp eq i32 %3829, 0
  %3831 = icmp slt i32 %3826, 10
  %3832 = or i1 %3830, %3831
  br i1 %3832, label %originalBB1043, label %originalBB1043alteredBB

originalBB1043:                                   ; preds = %3824, %originalBB1043alteredBB
  %3833 = load i8, i8* %45, align 1, !dbg !4929
  %3834 = trunc i8 %3833 to i1, !dbg !4929
  %3835 = zext i1 %3834 to i8, !dbg !4930
  store i8 %3835, i8* %43, align 1, !dbg !4930
  %3836 = load i64, i64* %44, align 8, !dbg !4931
  %3837 = icmp ult i64 1, %3836, !dbg !4933
  %3838 = load i32, i32* @x.63
  %3839 = load i32, i32* @y.64
  %3840 = sub i32 %3838, 1
  %3841 = mul i32 %3838, %3840
  %3842 = urem i32 %3841, 2
  %3843 = icmp eq i32 %3842, 0
  %3844 = icmp slt i32 %3839, 10
  %3845 = or i1 %3843, %3844
  br i1 %3845, label %originalBBpart21045, label %originalBB1043alteredBB

originalBBpart21045:                              ; preds = %originalBB1043
  br i1 %3837, label %3868, label %3846, !dbg !4934

3846:                                             ; preds = %originalBBpart21045
  %3847 = load i8, i8* %33, align 1, !dbg !4935
  %3848 = trunc i8 %3847 to i1, !dbg !4935
  br i1 %3848, label %3849, label %4952, !dbg !4936

3849:                                             ; preds = %3846
  %3850 = load i32, i32* @x.63
  %3851 = load i32, i32* @y.64
  %3852 = sub i32 %3850, 1
  %3853 = mul i32 %3850, %3852
  %3854 = urem i32 %3853, 2
  %3855 = icmp eq i32 %3854, 0
  %3856 = icmp slt i32 %3851, 10
  %3857 = or i1 %3855, %3856
  br i1 %3857, label %originalBB1047, label %originalBB1047alteredBB

originalBB1047:                                   ; preds = %3849, %originalBB1047alteredBB
  %3858 = load i8, i8* %45, align 1, !dbg !4937
  %3859 = trunc i8 %3858 to i1, !dbg !4937
  %3860 = load i32, i32* @x.63
  %3861 = load i32, i32* @y.64
  %3862 = sub i32 %3860, 1
  %3863 = mul i32 %3860, %3862
  %3864 = urem i32 %3863, 2
  %3865 = icmp eq i32 %3864, 0
  %3866 = icmp slt i32 %3861, 10
  %3867 = or i1 %3865, %3866
  br i1 %3867, label %originalBBpart21049, label %originalBB1047alteredBB

originalBBpart21049:                              ; preds = %originalBB1047
  br i1 %3859, label %4952, label %3868, !dbg !4938

3868:                                             ; preds = %originalBBpart21049, %originalBBpart21045
  call void @llvm.dbg.declare(metadata i64* %50, metadata !4939, metadata !DIExpression()), !dbg !4941
  %3869 = load i32, i32* @x.63
  %3870 = load i32, i32* @y.64
  %3871 = sub i32 %3869, 1
  %3872 = mul i32 %3869, %3871
  %3873 = urem i32 %3872, 2
  %3874 = icmp eq i32 %3873, 0
  %3875 = icmp slt i32 %3870, 10
  %3876 = or i1 %3874, %3875
  br i1 %3876, label %originalBB1051, label %originalBB1051alteredBB

originalBB1051:                                   ; preds = %3868, %originalBB1051alteredBB
  %3877 = load i64, i64* %28, align 8, !dbg !4942
  %3878 = load i64, i64* %44, align 8, !dbg !4943
  %3879 = add i64 %3877, %3878, !dbg !4944
  store i64 %3879, i64* %50, align 8, !dbg !4941
  %3880 = load i32, i32* @x.63
  %3881 = load i32, i32* @y.64
  %3882 = sub i32 %3880, 1
  %3883 = mul i32 %3880, %3882
  %3884 = urem i32 %3883, 2
  %3885 = icmp eq i32 %3884, 0
  %3886 = icmp slt i32 %3881, 10
  %3887 = or i1 %3885, %3886
  br i1 %3887, label %originalBBpart21068, label %originalBB1051alteredBB

originalBBpart21068:                              ; preds = %originalBB1051
  br label %3888, !dbg !4945

3888:                                             ; preds = %originalBBpart21384, %originalBBpart21068
  %3889 = load i32, i32* @x.63
  %3890 = load i32, i32* @y.64
  %3891 = sub i32 %3889, 1
  %3892 = mul i32 %3889, %3891
  %3893 = urem i32 %3892, 2
  %3894 = icmp eq i32 %3893, 0
  %3895 = icmp slt i32 %3890, 10
  %3896 = or i1 %3894, %3895
  br i1 %3896, label %originalBB1070, label %originalBB1070alteredBB

originalBB1070:                                   ; preds = %3888, %originalBB1070alteredBB
  %3897 = load i8, i8* %33, align 1, !dbg !4946
  %3898 = trunc i8 %3897 to i1, !dbg !4946
  %3899 = load i32, i32* @x.63
  %3900 = load i32, i32* @y.64
  %3901 = sub i32 %3899, 1
  %3902 = mul i32 %3899, %3901
  %3903 = urem i32 %3902, 2
  %3904 = icmp eq i32 %3903, 0
  %3905 = icmp slt i32 %3900, 10
  %3906 = or i1 %3904, %3905
  br i1 %3906, label %originalBBpart21072, label %originalBB1070alteredBB

originalBBpart21072:                              ; preds = %originalBB1070
  br i1 %3898, label %3907, label %4508, !dbg !4951

3907:                                             ; preds = %originalBBpart21072
  %3908 = load i32, i32* @x.63
  %3909 = load i32, i32* @y.64
  %3910 = sub i32 %3908, 1
  %3911 = mul i32 %3908, %3910
  %3912 = urem i32 %3911, 2
  %3913 = icmp eq i32 %3912, 0
  %3914 = icmp slt i32 %3909, 10
  %3915 = or i1 %3913, %3914
  br i1 %3915, label %originalBB1074, label %originalBB1074alteredBB

originalBB1074:                                   ; preds = %3907, %originalBB1074alteredBB
  %3916 = load i8, i8* %45, align 1, !dbg !4952
  %3917 = trunc i8 %3916 to i1, !dbg !4952
  %3918 = load i32, i32* @x.63
  %3919 = load i32, i32* @y.64
  %3920 = sub i32 %3918, 1
  %3921 = mul i32 %3918, %3920
  %3922 = urem i32 %3921, 2
  %3923 = icmp eq i32 %3922, 0
  %3924 = icmp slt i32 %3919, 10
  %3925 = or i1 %3923, %3924
  br i1 %3925, label %originalBBpart21076, label %originalBB1074alteredBB

originalBBpart21076:                              ; preds = %originalBB1074
  br i1 %3917, label %4508, label %3926, !dbg !4953

3926:                                             ; preds = %originalBBpart21076
  %3927 = load i32, i32* @x.63
  %3928 = load i32, i32* @y.64
  %3929 = sub i32 %3927, 1
  %3930 = mul i32 %3927, %3929
  %3931 = urem i32 %3930, 2
  %3932 = icmp eq i32 %3931, 0
  %3933 = icmp slt i32 %3928, 10
  %3934 = or i1 %3932, %3933
  br i1 %3934, label %originalBB1078, label %originalBB1078alteredBB

originalBB1078:                                   ; preds = %3926, %originalBB1078alteredBB
  %3935 = load i32, i32* @x.63
  %3936 = load i32, i32* @y.64
  %3937 = sub i32 %3935, 1
  %3938 = mul i32 %3935, %3937
  %3939 = urem i32 %3938, 2
  %3940 = icmp eq i32 %3939, 0
  %3941 = icmp slt i32 %3936, 10
  %3942 = or i1 %3940, %3941
  br i1 %3942, label %originalBBpart21080, label %originalBB1078alteredBB

originalBBpart21080:                              ; preds = %originalBB1078
  br label %3943, !dbg !4954

3943:                                             ; preds = %originalBBpart21080
  %3944 = load i32, i32* @x.63
  %3945 = load i32, i32* @y.64
  %3946 = sub i32 %3944, 1
  %3947 = mul i32 %3944, %3946
  %3948 = urem i32 %3947, 2
  %3949 = icmp eq i32 %3948, 0
  %3950 = icmp slt i32 %3945, 10
  %3951 = or i1 %3949, %3950
  br i1 %3951, label %originalBB1082, label %originalBB1082alteredBB

originalBB1082:                                   ; preds = %3943, %originalBB1082alteredBB
  %3952 = load i8, i8* %35, align 1, !dbg !4956
  %3953 = trunc i8 %3952 to i1, !dbg !4956
  %3954 = load i32, i32* @x.63
  %3955 = load i32, i32* @y.64
  %3956 = sub i32 %3954, 1
  %3957 = mul i32 %3954, %3956
  %3958 = urem i32 %3957, 2
  %3959 = icmp eq i32 %3958, 0
  %3960 = icmp slt i32 %3955, 10
  %3961 = or i1 %3959, %3960
  br i1 %3961, label %originalBBpart21084, label %originalBB1082alteredBB

originalBBpart21084:                              ; preds = %originalBB1082
  br i1 %3953, label %3962, label %3963, !dbg !4959

3962:                                             ; preds = %originalBBpart21084
  br label %6366, !dbg !4956

3963:                                             ; preds = %originalBBpart21084
  %3964 = load i32, i32* @x.63
  %3965 = load i32, i32* @y.64
  %3966 = sub i32 %3964, 1
  %3967 = mul i32 %3964, %3966
  %3968 = urem i32 %3967, 2
  %3969 = icmp eq i32 %3968, 0
  %3970 = icmp slt i32 %3965, 10
  %3971 = or i1 %3969, %3970
  br i1 %3971, label %originalBB1086, label %originalBB1086alteredBB

originalBB1086:                                   ; preds = %3963, %originalBB1086alteredBB
  store i8 1, i8* %42, align 1, !dbg !4959
  %3972 = load i32, i32* %23, align 4, !dbg !4960
  %3973 = icmp eq i32 %3972, 2, !dbg !4960
  %3974 = load i32, i32* @x.63
  %3975 = load i32, i32* @y.64
  %3976 = sub i32 %3974, 1
  %3977 = mul i32 %3974, %3976
  %3978 = urem i32 %3977, 2
  %3979 = icmp eq i32 %3978, 0
  %3980 = icmp slt i32 %3975, 10
  %3981 = or i1 %3979, %3980
  br i1 %3981, label %originalBBpart21088, label %originalBB1086alteredBB

originalBBpart21088:                              ; preds = %originalBB1086
  br i1 %3973, label %3982, label %4230, !dbg !4960

3982:                                             ; preds = %originalBBpart21088
  %3983 = load i32, i32* @x.63
  %3984 = load i32, i32* @y.64
  %3985 = sub i32 %3983, 1
  %3986 = mul i32 %3983, %3985
  %3987 = urem i32 %3986, 2
  %3988 = icmp eq i32 %3987, 0
  %3989 = icmp slt i32 %3984, 10
  %3990 = or i1 %3988, %3989
  br i1 %3990, label %originalBB1090, label %originalBB1090alteredBB

originalBB1090:                                   ; preds = %3982, %originalBB1090alteredBB
  %3991 = load i8, i8* %36, align 1, !dbg !4960
  %3992 = trunc i8 %3991 to i1, !dbg !4960
  %3993 = load i32, i32* @x.63
  %3994 = load i32, i32* @y.64
  %3995 = sub i32 %3993, 1
  %3996 = mul i32 %3993, %3995
  %3997 = urem i32 %3996, 2
  %3998 = icmp eq i32 %3997, 0
  %3999 = icmp slt i32 %3994, 10
  %4000 = or i1 %3998, %3999
  br i1 %4000, label %originalBBpart21092, label %originalBB1090alteredBB

originalBBpart21092:                              ; preds = %originalBB1090
  br i1 %3992, label %4230, label %4001, !dbg !4959

4001:                                             ; preds = %originalBBpart21092
  %4002 = load i32, i32* @x.63
  %4003 = load i32, i32* @y.64
  %4004 = sub i32 %4002, 1
  %4005 = mul i32 %4002, %4004
  %4006 = urem i32 %4005, 2
  %4007 = icmp eq i32 %4006, 0
  %4008 = icmp slt i32 %4003, 10
  %4009 = or i1 %4007, %4008
  br i1 %4009, label %originalBB1094, label %originalBB1094alteredBB

originalBB1094:                                   ; preds = %4001, %originalBB1094alteredBB
  %4010 = load i32, i32* @x.63
  %4011 = load i32, i32* @y.64
  %4012 = sub i32 %4010, 1
  %4013 = mul i32 %4010, %4012
  %4014 = urem i32 %4013, 2
  %4015 = icmp eq i32 %4014, 0
  %4016 = icmp slt i32 %4011, 10
  %4017 = or i1 %4015, %4016
  br i1 %4017, label %originalBBpart21096, label %originalBB1094alteredBB

originalBBpart21096:                              ; preds = %originalBB1094
  br label %4018, !dbg !4962

4018:                                             ; preds = %originalBBpart21096
  %4019 = load i32, i32* @x.63
  %4020 = load i32, i32* @y.64
  %4021 = sub i32 %4019, 1
  %4022 = mul i32 %4019, %4021
  %4023 = urem i32 %4022, 2
  %4024 = icmp eq i32 %4023, 0
  %4025 = icmp slt i32 %4020, 10
  %4026 = or i1 %4024, %4025
  br i1 %4026, label %originalBB1098, label %originalBB1098alteredBB

originalBB1098:                                   ; preds = %4018, %originalBB1098alteredBB
  %4027 = load i64, i64* %29, align 8, !dbg !4964
  %4028 = load i64, i64* %20, align 8, !dbg !4964
  %4029 = icmp ult i64 %4027, %4028, !dbg !4964
  %4030 = load i32, i32* @x.63
  %4031 = load i32, i32* @y.64
  %4032 = sub i32 %4030, 1
  %4033 = mul i32 %4030, %4032
  %4034 = urem i32 %4033, 2
  %4035 = icmp eq i32 %4034, 0
  %4036 = icmp slt i32 %4031, 10
  %4037 = or i1 %4035, %4036
  br i1 %4037, label %originalBBpart21100, label %originalBB1098alteredBB

originalBBpart21100:                              ; preds = %originalBB1098
  br i1 %4029, label %4038, label %4058, !dbg !4967

4038:                                             ; preds = %originalBBpart21100
  %4039 = load i32, i32* @x.63
  %4040 = load i32, i32* @y.64
  %4041 = sub i32 %4039, 1
  %4042 = mul i32 %4039, %4041
  %4043 = urem i32 %4042, 2
  %4044 = icmp eq i32 %4043, 0
  %4045 = icmp slt i32 %4040, 10
  %4046 = or i1 %4044, %4045
  br i1 %4046, label %originalBB1102, label %originalBB1102alteredBB

originalBB1102:                                   ; preds = %4038, %originalBB1102alteredBB
  %4047 = load i8*, i8** %19, align 8, !dbg !4964
  %4048 = load i64, i64* %29, align 8, !dbg !4964
  %4049 = getelementptr inbounds i8, i8* %4047, i64 %4048, !dbg !4964
  store i8 39, i8* %4049, align 1, !dbg !4964
  %4050 = load i32, i32* @x.63
  %4051 = load i32, i32* @y.64
  %4052 = sub i32 %4050, 1
  %4053 = mul i32 %4050, %4052
  %4054 = urem i32 %4053, 2
  %4055 = icmp eq i32 %4054, 0
  %4056 = icmp slt i32 %4051, 10
  %4057 = or i1 %4055, %4056
  br i1 %4057, label %originalBBpart21104, label %originalBB1102alteredBB

originalBBpart21104:                              ; preds = %originalBB1102
  br label %4058, !dbg !4964

4058:                                             ; preds = %originalBBpart21104, %originalBBpart21100
  %4059 = load i32, i32* @x.63
  %4060 = load i32, i32* @y.64
  %4061 = sub i32 %4059, 1
  %4062 = mul i32 %4059, %4061
  %4063 = urem i32 %4062, 2
  %4064 = icmp eq i32 %4063, 0
  %4065 = icmp slt i32 %4060, 10
  %4066 = or i1 %4064, %4065
  br i1 %4066, label %originalBB1106, label %originalBB1106alteredBB

originalBB1106:                                   ; preds = %4058, %originalBB1106alteredBB
  %4067 = load i64, i64* %29, align 8, !dbg !4967
  %4068 = add i64 %4067, 1, !dbg !4967
  store i64 %4068, i64* %29, align 8, !dbg !4967
  %4069 = load i32, i32* @x.63
  %4070 = load i32, i32* @y.64
  %4071 = sub i32 %4069, 1
  %4072 = mul i32 %4069, %4071
  %4073 = urem i32 %4072, 2
  %4074 = icmp eq i32 %4073, 0
  %4075 = icmp slt i32 %4070, 10
  %4076 = or i1 %4074, %4075
  br i1 %4076, label %originalBBpart21118, label %originalBB1106alteredBB

originalBBpart21118:                              ; preds = %originalBB1106
  br label %4077, !dbg !4967

4077:                                             ; preds = %originalBBpart21118
  %4078 = load i32, i32* @x.63
  %4079 = load i32, i32* @y.64
  %4080 = sub i32 %4078, 1
  %4081 = mul i32 %4078, %4080
  %4082 = urem i32 %4081, 2
  %4083 = icmp eq i32 %4082, 0
  %4084 = icmp slt i32 %4079, 10
  %4085 = or i1 %4083, %4084
  br i1 %4085, label %originalBB1120, label %originalBB1120alteredBB

originalBB1120:                                   ; preds = %4077, %originalBB1120alteredBB
  %4086 = load i32, i32* @x.63
  %4087 = load i32, i32* @y.64
  %4088 = sub i32 %4086, 1
  %4089 = mul i32 %4086, %4088
  %4090 = urem i32 %4089, 2
  %4091 = icmp eq i32 %4090, 0
  %4092 = icmp slt i32 %4087, 10
  %4093 = or i1 %4091, %4092
  br i1 %4093, label %originalBBpart21122, label %originalBB1120alteredBB

originalBBpart21122:                              ; preds = %originalBB1120
  br label %4094, !dbg !4962

4094:                                             ; preds = %originalBBpart21122
  %4095 = load i32, i32* @x.63
  %4096 = load i32, i32* @y.64
  %4097 = sub i32 %4095, 1
  %4098 = mul i32 %4095, %4097
  %4099 = urem i32 %4098, 2
  %4100 = icmp eq i32 %4099, 0
  %4101 = icmp slt i32 %4096, 10
  %4102 = or i1 %4100, %4101
  br i1 %4102, label %originalBB1124, label %originalBB1124alteredBB

originalBB1124:                                   ; preds = %4094, %originalBB1124alteredBB
  %4103 = load i64, i64* %29, align 8, !dbg !4968
  %4104 = load i64, i64* %20, align 8, !dbg !4968
  %4105 = icmp ult i64 %4103, %4104, !dbg !4968
  %4106 = load i32, i32* @x.63
  %4107 = load i32, i32* @y.64
  %4108 = sub i32 %4106, 1
  %4109 = mul i32 %4106, %4108
  %4110 = urem i32 %4109, 2
  %4111 = icmp eq i32 %4110, 0
  %4112 = icmp slt i32 %4107, 10
  %4113 = or i1 %4111, %4112
  br i1 %4113, label %originalBBpart21126, label %originalBB1124alteredBB

originalBBpart21126:                              ; preds = %originalBB1124
  br i1 %4105, label %4114, label %4134, !dbg !4971

4114:                                             ; preds = %originalBBpart21126
  %4115 = load i32, i32* @x.63
  %4116 = load i32, i32* @y.64
  %4117 = sub i32 %4115, 1
  %4118 = mul i32 %4115, %4117
  %4119 = urem i32 %4118, 2
  %4120 = icmp eq i32 %4119, 0
  %4121 = icmp slt i32 %4116, 10
  %4122 = or i1 %4120, %4121
  br i1 %4122, label %originalBB1128, label %originalBB1128alteredBB

originalBB1128:                                   ; preds = %4114, %originalBB1128alteredBB
  %4123 = load i8*, i8** %19, align 8, !dbg !4968
  %4124 = load i64, i64* %29, align 8, !dbg !4968
  %4125 = getelementptr inbounds i8, i8* %4123, i64 %4124, !dbg !4968
  store i8 36, i8* %4125, align 1, !dbg !4968
  %4126 = load i32, i32* @x.63
  %4127 = load i32, i32* @y.64
  %4128 = sub i32 %4126, 1
  %4129 = mul i32 %4126, %4128
  %4130 = urem i32 %4129, 2
  %4131 = icmp eq i32 %4130, 0
  %4132 = icmp slt i32 %4127, 10
  %4133 = or i1 %4131, %4132
  br i1 %4133, label %originalBBpart21130, label %originalBB1128alteredBB

originalBBpart21130:                              ; preds = %originalBB1128
  br label %4134, !dbg !4968

4134:                                             ; preds = %originalBBpart21130, %originalBBpart21126
  %4135 = load i32, i32* @x.63
  %4136 = load i32, i32* @y.64
  %4137 = sub i32 %4135, 1
  %4138 = mul i32 %4135, %4137
  %4139 = urem i32 %4138, 2
  %4140 = icmp eq i32 %4139, 0
  %4141 = icmp slt i32 %4136, 10
  %4142 = or i1 %4140, %4141
  br i1 %4142, label %originalBB1132, label %originalBB1132alteredBB

originalBB1132:                                   ; preds = %4134, %originalBB1132alteredBB
  %4143 = load i64, i64* %29, align 8, !dbg !4971
  %4144 = add i64 %4143, 1, !dbg !4971
  store i64 %4144, i64* %29, align 8, !dbg !4971
  %4145 = load i32, i32* @x.63
  %4146 = load i32, i32* @y.64
  %4147 = sub i32 %4145, 1
  %4148 = mul i32 %4145, %4147
  %4149 = urem i32 %4148, 2
  %4150 = icmp eq i32 %4149, 0
  %4151 = icmp slt i32 %4146, 10
  %4152 = or i1 %4150, %4151
  br i1 %4152, label %originalBBpart21138, label %originalBB1132alteredBB

originalBBpart21138:                              ; preds = %originalBB1132
  br label %4153, !dbg !4971

4153:                                             ; preds = %originalBBpart21138
  %4154 = load i32, i32* @x.63
  %4155 = load i32, i32* @y.64
  %4156 = sub i32 %4154, 1
  %4157 = mul i32 %4154, %4156
  %4158 = urem i32 %4157, 2
  %4159 = icmp eq i32 %4158, 0
  %4160 = icmp slt i32 %4155, 10
  %4161 = or i1 %4159, %4160
  br i1 %4161, label %originalBB1140, label %originalBB1140alteredBB

originalBB1140:                                   ; preds = %4153, %originalBB1140alteredBB
  %4162 = load i32, i32* @x.63
  %4163 = load i32, i32* @y.64
  %4164 = sub i32 %4162, 1
  %4165 = mul i32 %4162, %4164
  %4166 = urem i32 %4165, 2
  %4167 = icmp eq i32 %4166, 0
  %4168 = icmp slt i32 %4163, 10
  %4169 = or i1 %4167, %4168
  br i1 %4169, label %originalBBpart21142, label %originalBB1140alteredBB

originalBBpart21142:                              ; preds = %originalBB1140
  br label %4170, !dbg !4962

4170:                                             ; preds = %originalBBpart21142
  %4171 = load i32, i32* @x.63
  %4172 = load i32, i32* @y.64
  %4173 = sub i32 %4171, 1
  %4174 = mul i32 %4171, %4173
  %4175 = urem i32 %4174, 2
  %4176 = icmp eq i32 %4175, 0
  %4177 = icmp slt i32 %4172, 10
  %4178 = or i1 %4176, %4177
  br i1 %4178, label %originalBB1144, label %originalBB1144alteredBB

originalBB1144:                                   ; preds = %4170, %originalBB1144alteredBB
  %4179 = load i64, i64* %29, align 8, !dbg !4972
  %4180 = load i64, i64* %20, align 8, !dbg !4972
  %4181 = icmp ult i64 %4179, %4180, !dbg !4972
  %4182 = load i32, i32* @x.63
  %4183 = load i32, i32* @y.64
  %4184 = sub i32 %4182, 1
  %4185 = mul i32 %4182, %4184
  %4186 = urem i32 %4185, 2
  %4187 = icmp eq i32 %4186, 0
  %4188 = icmp slt i32 %4183, 10
  %4189 = or i1 %4187, %4188
  br i1 %4189, label %originalBBpart21146, label %originalBB1144alteredBB

originalBBpart21146:                              ; preds = %originalBB1144
  br i1 %4181, label %4190, label %4210, !dbg !4975

4190:                                             ; preds = %originalBBpart21146
  %4191 = load i32, i32* @x.63
  %4192 = load i32, i32* @y.64
  %4193 = sub i32 %4191, 1
  %4194 = mul i32 %4191, %4193
  %4195 = urem i32 %4194, 2
  %4196 = icmp eq i32 %4195, 0
  %4197 = icmp slt i32 %4192, 10
  %4198 = or i1 %4196, %4197
  br i1 %4198, label %originalBB1148, label %originalBB1148alteredBB

originalBB1148:                                   ; preds = %4190, %originalBB1148alteredBB
  %4199 = load i8*, i8** %19, align 8, !dbg !4972
  %4200 = load i64, i64* %29, align 8, !dbg !4972
  %4201 = getelementptr inbounds i8, i8* %4199, i64 %4200, !dbg !4972
  store i8 39, i8* %4201, align 1, !dbg !4972
  %4202 = load i32, i32* @x.63
  %4203 = load i32, i32* @y.64
  %4204 = sub i32 %4202, 1
  %4205 = mul i32 %4202, %4204
  %4206 = urem i32 %4205, 2
  %4207 = icmp eq i32 %4206, 0
  %4208 = icmp slt i32 %4203, 10
  %4209 = or i1 %4207, %4208
  br i1 %4209, label %originalBBpart21150, label %originalBB1148alteredBB

originalBBpart21150:                              ; preds = %originalBB1148
  br label %4210, !dbg !4972

4210:                                             ; preds = %originalBBpart21150, %originalBBpart21146
  %4211 = load i32, i32* @x.63
  %4212 = load i32, i32* @y.64
  %4213 = sub i32 %4211, 1
  %4214 = mul i32 %4211, %4213
  %4215 = urem i32 %4214, 2
  %4216 = icmp eq i32 %4215, 0
  %4217 = icmp slt i32 %4212, 10
  %4218 = or i1 %4216, %4217
  br i1 %4218, label %originalBB1152, label %originalBB1152alteredBB

originalBB1152:                                   ; preds = %4210, %originalBB1152alteredBB
  %4219 = load i64, i64* %29, align 8, !dbg !4975
  %4220 = add i64 %4219, 1, !dbg !4975
  store i64 %4220, i64* %29, align 8, !dbg !4975
  %4221 = load i32, i32* @x.63
  %4222 = load i32, i32* @y.64
  %4223 = sub i32 %4221, 1
  %4224 = mul i32 %4221, %4223
  %4225 = urem i32 %4224, 2
  %4226 = icmp eq i32 %4225, 0
  %4227 = icmp slt i32 %4222, 10
  %4228 = or i1 %4226, %4227
  br i1 %4228, label %originalBBpart21158, label %originalBB1152alteredBB

originalBBpart21158:                              ; preds = %originalBB1152
  br label %4229, !dbg !4975

4229:                                             ; preds = %originalBBpart21158
  store i8 1, i8* %36, align 1, !dbg !4962
  br label %4230, !dbg !4962

4230:                                             ; preds = %4229, %originalBBpart21092, %originalBBpart21088
  %4231 = load i32, i32* @x.63
  %4232 = load i32, i32* @y.64
  %4233 = sub i32 %4231, 1
  %4234 = mul i32 %4231, %4233
  %4235 = urem i32 %4234, 2
  %4236 = icmp eq i32 %4235, 0
  %4237 = icmp slt i32 %4232, 10
  %4238 = or i1 %4236, %4237
  br i1 %4238, label %originalBB1160, label %originalBB1160alteredBB

originalBB1160:                                   ; preds = %4230, %originalBB1160alteredBB
  %4239 = load i32, i32* @x.63
  %4240 = load i32, i32* @y.64
  %4241 = sub i32 %4239, 1
  %4242 = mul i32 %4239, %4241
  %4243 = urem i32 %4242, 2
  %4244 = icmp eq i32 %4243, 0
  %4245 = icmp slt i32 %4240, 10
  %4246 = or i1 %4244, %4245
  br i1 %4246, label %originalBBpart21162, label %originalBB1160alteredBB

originalBBpart21162:                              ; preds = %originalBB1160
  br label %4247, !dbg !4959

4247:                                             ; preds = %originalBBpart21162
  %4248 = load i32, i32* @x.63
  %4249 = load i32, i32* @y.64
  %4250 = sub i32 %4248, 1
  %4251 = mul i32 %4248, %4250
  %4252 = urem i32 %4251, 2
  %4253 = icmp eq i32 %4252, 0
  %4254 = icmp slt i32 %4249, 10
  %4255 = or i1 %4253, %4254
  br i1 %4255, label %originalBB1164, label %originalBB1164alteredBB

originalBB1164:                                   ; preds = %4247, %originalBB1164alteredBB
  %4256 = load i64, i64* %29, align 8, !dbg !4976
  %4257 = load i64, i64* %20, align 8, !dbg !4976
  %4258 = icmp ult i64 %4256, %4257, !dbg !4976
  %4259 = load i32, i32* @x.63
  %4260 = load i32, i32* @y.64
  %4261 = sub i32 %4259, 1
  %4262 = mul i32 %4259, %4261
  %4263 = urem i32 %4262, 2
  %4264 = icmp eq i32 %4263, 0
  %4265 = icmp slt i32 %4260, 10
  %4266 = or i1 %4264, %4265
  br i1 %4266, label %originalBBpart21166, label %originalBB1164alteredBB

originalBBpart21166:                              ; preds = %originalBB1164
  br i1 %4258, label %4267, label %4287, !dbg !4979

4267:                                             ; preds = %originalBBpart21166
  %4268 = load i32, i32* @x.63
  %4269 = load i32, i32* @y.64
  %4270 = sub i32 %4268, 1
  %4271 = mul i32 %4268, %4270
  %4272 = urem i32 %4271, 2
  %4273 = icmp eq i32 %4272, 0
  %4274 = icmp slt i32 %4269, 10
  %4275 = or i1 %4273, %4274
  br i1 %4275, label %originalBB1168, label %originalBB1168alteredBB

originalBB1168:                                   ; preds = %4267, %originalBB1168alteredBB
  %4276 = load i8*, i8** %19, align 8, !dbg !4976
  %4277 = load i64, i64* %29, align 8, !dbg !4976
  %4278 = getelementptr inbounds i8, i8* %4276, i64 %4277, !dbg !4976
  store i8 92, i8* %4278, align 1, !dbg !4976
  %4279 = load i32, i32* @x.63
  %4280 = load i32, i32* @y.64
  %4281 = sub i32 %4279, 1
  %4282 = mul i32 %4279, %4281
  %4283 = urem i32 %4282, 2
  %4284 = icmp eq i32 %4283, 0
  %4285 = icmp slt i32 %4280, 10
  %4286 = or i1 %4284, %4285
  br i1 %4286, label %originalBBpart21170, label %originalBB1168alteredBB

originalBBpart21170:                              ; preds = %originalBB1168
  br label %4287, !dbg !4976

4287:                                             ; preds = %originalBBpart21170, %originalBBpart21166
  %4288 = load i32, i32* @x.63
  %4289 = load i32, i32* @y.64
  %4290 = sub i32 %4288, 1
  %4291 = mul i32 %4288, %4290
  %4292 = urem i32 %4291, 2
  %4293 = icmp eq i32 %4292, 0
  %4294 = icmp slt i32 %4289, 10
  %4295 = or i1 %4293, %4294
  br i1 %4295, label %originalBB1172, label %originalBB1172alteredBB

originalBB1172:                                   ; preds = %4287, %originalBB1172alteredBB
  %4296 = load i64, i64* %29, align 8, !dbg !4979
  %4297 = add i64 %4296, 1, !dbg !4979
  store i64 %4297, i64* %29, align 8, !dbg !4979
  %4298 = load i32, i32* @x.63
  %4299 = load i32, i32* @y.64
  %4300 = sub i32 %4298, 1
  %4301 = mul i32 %4298, %4300
  %4302 = urem i32 %4301, 2
  %4303 = icmp eq i32 %4302, 0
  %4304 = icmp slt i32 %4299, 10
  %4305 = or i1 %4303, %4304
  br i1 %4305, label %originalBBpart21184, label %originalBB1172alteredBB

originalBBpart21184:                              ; preds = %originalBB1172
  br label %4306, !dbg !4979

4306:                                             ; preds = %originalBBpart21184
  %4307 = load i32, i32* @x.63
  %4308 = load i32, i32* @y.64
  %4309 = sub i32 %4307, 1
  %4310 = mul i32 %4307, %4309
  %4311 = urem i32 %4310, 2
  %4312 = icmp eq i32 %4311, 0
  %4313 = icmp slt i32 %4308, 10
  %4314 = or i1 %4312, %4313
  br i1 %4314, label %originalBB1186, label %originalBB1186alteredBB

originalBB1186:                                   ; preds = %4306, %originalBB1186alteredBB
  %4315 = load i32, i32* @x.63
  %4316 = load i32, i32* @y.64
  %4317 = sub i32 %4315, 1
  %4318 = mul i32 %4315, %4317
  %4319 = urem i32 %4318, 2
  %4320 = icmp eq i32 %4319, 0
  %4321 = icmp slt i32 %4316, 10
  %4322 = or i1 %4320, %4321
  br i1 %4322, label %originalBBpart21188, label %originalBB1186alteredBB

originalBBpart21188:                              ; preds = %originalBB1186
  br label %4323, !dbg !4959

4323:                                             ; preds = %originalBBpart21188
  %4324 = load i32, i32* @x.63
  %4325 = load i32, i32* @y.64
  %4326 = sub i32 %4324, 1
  %4327 = mul i32 %4324, %4326
  %4328 = urem i32 %4327, 2
  %4329 = icmp eq i32 %4328, 0
  %4330 = icmp slt i32 %4325, 10
  %4331 = or i1 %4329, %4330
  br i1 %4331, label %originalBB1190, label %originalBB1190alteredBB

originalBB1190:                                   ; preds = %4323, %originalBB1190alteredBB
  %4332 = load i32, i32* @x.63
  %4333 = load i32, i32* @y.64
  %4334 = sub i32 %4332, 1
  %4335 = mul i32 %4332, %4334
  %4336 = urem i32 %4335, 2
  %4337 = icmp eq i32 %4336, 0
  %4338 = icmp slt i32 %4333, 10
  %4339 = or i1 %4337, %4338
  br i1 %4339, label %originalBBpart21192, label %originalBB1190alteredBB

originalBBpart21192:                              ; preds = %originalBB1190
  br label %4340, !dbg !4980

4340:                                             ; preds = %originalBBpart21192
  %4341 = load i32, i32* @x.63
  %4342 = load i32, i32* @y.64
  %4343 = sub i32 %4341, 1
  %4344 = mul i32 %4341, %4343
  %4345 = urem i32 %4344, 2
  %4346 = icmp eq i32 %4345, 0
  %4347 = icmp slt i32 %4342, 10
  %4348 = or i1 %4346, %4347
  br i1 %4348, label %originalBB1194, label %originalBB1194alteredBB

originalBB1194:                                   ; preds = %4340, %originalBB1194alteredBB
  %4349 = load i64, i64* %29, align 8, !dbg !4981
  %4350 = load i64, i64* %20, align 8, !dbg !4981
  %4351 = icmp ult i64 %4349, %4350, !dbg !4981
  %4352 = load i32, i32* @x.63
  %4353 = load i32, i32* @y.64
  %4354 = sub i32 %4352, 1
  %4355 = mul i32 %4352, %4354
  %4356 = urem i32 %4355, 2
  %4357 = icmp eq i32 %4356, 0
  %4358 = icmp slt i32 %4353, 10
  %4359 = or i1 %4357, %4358
  br i1 %4359, label %originalBBpart21196, label %originalBB1194alteredBB

originalBBpart21196:                              ; preds = %originalBB1194
  br i1 %4351, label %4360, label %4385, !dbg !4984

4360:                                             ; preds = %originalBBpart21196
  %4361 = load i32, i32* @x.63
  %4362 = load i32, i32* @y.64
  %4363 = sub i32 %4361, 1
  %4364 = mul i32 %4361, %4363
  %4365 = urem i32 %4364, 2
  %4366 = icmp eq i32 %4365, 0
  %4367 = icmp slt i32 %4362, 10
  %4368 = or i1 %4366, %4367
  br i1 %4368, label %originalBB1198, label %originalBB1198alteredBB

originalBB1198:                                   ; preds = %4360, %originalBB1198alteredBB
  %4369 = load i8, i8* %39, align 1, !dbg !4981
  %4370 = zext i8 %4369 to i32, !dbg !4981
  %4371 = ashr i32 %4370, 6, !dbg !4981
  %4372 = add nsw i32 48, %4371, !dbg !4981
  %4373 = trunc i32 %4372 to i8, !dbg !4981
  %4374 = load i8*, i8** %19, align 8, !dbg !4981
  %4375 = load i64, i64* %29, align 8, !dbg !4981
  %4376 = getelementptr inbounds i8, i8* %4374, i64 %4375, !dbg !4981
  store i8 %4373, i8* %4376, align 1, !dbg !4981
  %4377 = load i32, i32* @x.63
  %4378 = load i32, i32* @y.64
  %4379 = sub i32 %4377, 1
  %4380 = mul i32 %4377, %4379
  %4381 = urem i32 %4380, 2
  %4382 = icmp eq i32 %4381, 0
  %4383 = icmp slt i32 %4378, 10
  %4384 = or i1 %4382, %4383
  br i1 %4384, label %originalBBpart21211, label %originalBB1198alteredBB

originalBBpart21211:                              ; preds = %originalBB1198
  br label %4385, !dbg !4981

4385:                                             ; preds = %originalBBpart21211, %originalBBpart21196
  %4386 = load i32, i32* @x.63
  %4387 = load i32, i32* @y.64
  %4388 = sub i32 %4386, 1
  %4389 = mul i32 %4386, %4388
  %4390 = urem i32 %4389, 2
  %4391 = icmp eq i32 %4390, 0
  %4392 = icmp slt i32 %4387, 10
  %4393 = or i1 %4391, %4392
  br i1 %4393, label %originalBB1213, label %originalBB1213alteredBB

originalBB1213:                                   ; preds = %4385, %originalBB1213alteredBB
  %4394 = load i64, i64* %29, align 8, !dbg !4984
  %4395 = add i64 %4394, 1, !dbg !4984
  store i64 %4395, i64* %29, align 8, !dbg !4984
  %4396 = load i32, i32* @x.63
  %4397 = load i32, i32* @y.64
  %4398 = sub i32 %4396, 1
  %4399 = mul i32 %4396, %4398
  %4400 = urem i32 %4399, 2
  %4401 = icmp eq i32 %4400, 0
  %4402 = icmp slt i32 %4397, 10
  %4403 = or i1 %4401, %4402
  br i1 %4403, label %originalBBpart21219, label %originalBB1213alteredBB

originalBBpart21219:                              ; preds = %originalBB1213
  br label %4404, !dbg !4984

4404:                                             ; preds = %originalBBpart21219
  %4405 = load i32, i32* @x.63
  %4406 = load i32, i32* @y.64
  %4407 = sub i32 %4405, 1
  %4408 = mul i32 %4405, %4407
  %4409 = urem i32 %4408, 2
  %4410 = icmp eq i32 %4409, 0
  %4411 = icmp slt i32 %4406, 10
  %4412 = or i1 %4410, %4411
  br i1 %4412, label %originalBB1221, label %originalBB1221alteredBB

originalBB1221:                                   ; preds = %4404, %originalBB1221alteredBB
  %4413 = load i32, i32* @x.63
  %4414 = load i32, i32* @y.64
  %4415 = sub i32 %4413, 1
  %4416 = mul i32 %4413, %4415
  %4417 = urem i32 %4416, 2
  %4418 = icmp eq i32 %4417, 0
  %4419 = icmp slt i32 %4414, 10
  %4420 = or i1 %4418, %4419
  br i1 %4420, label %originalBBpart21223, label %originalBB1221alteredBB

originalBBpart21223:                              ; preds = %originalBB1221
  br label %4421, !dbg !4985

4421:                                             ; preds = %originalBBpart21223
  %4422 = load i32, i32* @x.63
  %4423 = load i32, i32* @y.64
  %4424 = sub i32 %4422, 1
  %4425 = mul i32 %4422, %4424
  %4426 = urem i32 %4425, 2
  %4427 = icmp eq i32 %4426, 0
  %4428 = icmp slt i32 %4423, 10
  %4429 = or i1 %4427, %4428
  br i1 %4429, label %originalBB1225, label %originalBB1225alteredBB

originalBB1225:                                   ; preds = %4421, %originalBB1225alteredBB
  %4430 = load i64, i64* %29, align 8, !dbg !4986
  %4431 = load i64, i64* %20, align 8, !dbg !4986
  %4432 = icmp ult i64 %4430, %4431, !dbg !4986
  %4433 = load i32, i32* @x.63
  %4434 = load i32, i32* @y.64
  %4435 = sub i32 %4433, 1
  %4436 = mul i32 %4433, %4435
  %4437 = urem i32 %4436, 2
  %4438 = icmp eq i32 %4437, 0
  %4439 = icmp slt i32 %4434, 10
  %4440 = or i1 %4438, %4439
  br i1 %4440, label %originalBBpart21227, label %originalBB1225alteredBB

originalBBpart21227:                              ; preds = %originalBB1225
  br i1 %4432, label %4441, label %4467, !dbg !4989

4441:                                             ; preds = %originalBBpart21227
  %4442 = load i32, i32* @x.63
  %4443 = load i32, i32* @y.64
  %4444 = sub i32 %4442, 1
  %4445 = mul i32 %4442, %4444
  %4446 = urem i32 %4445, 2
  %4447 = icmp eq i32 %4446, 0
  %4448 = icmp slt i32 %4443, 10
  %4449 = or i1 %4447, %4448
  br i1 %4449, label %originalBB1229, label %originalBB1229alteredBB

originalBB1229:                                   ; preds = %4441, %originalBB1229alteredBB
  %4450 = load i8, i8* %39, align 1, !dbg !4986
  %4451 = zext i8 %4450 to i32, !dbg !4986
  %4452 = ashr i32 %4451, 3, !dbg !4986
  %4453 = and i32 %4452, 7, !dbg !4986
  %4454 = add nsw i32 48, %4453, !dbg !4986
  %4455 = trunc i32 %4454 to i8, !dbg !4986
  %4456 = load i8*, i8** %19, align 8, !dbg !4986
  %4457 = load i64, i64* %29, align 8, !dbg !4986
  %4458 = getelementptr inbounds i8, i8* %4456, i64 %4457, !dbg !4986
  store i8 %4455, i8* %4458, align 1, !dbg !4986
  %4459 = load i32, i32* @x.63
  %4460 = load i32, i32* @y.64
  %4461 = sub i32 %4459, 1
  %4462 = mul i32 %4459, %4461
  %4463 = urem i32 %4462, 2
  %4464 = icmp eq i32 %4463, 0
  %4465 = icmp slt i32 %4460, 10
  %4466 = or i1 %4464, %4465
  br i1 %4466, label %originalBBpart21258, label %originalBB1229alteredBB

originalBBpart21258:                              ; preds = %originalBB1229
  br label %4467, !dbg !4986

4467:                                             ; preds = %originalBBpart21258, %originalBBpart21227
  %4468 = load i32, i32* @x.63
  %4469 = load i32, i32* @y.64
  %4470 = sub i32 %4468, 1
  %4471 = mul i32 %4468, %4470
  %4472 = urem i32 %4471, 2
  %4473 = icmp eq i32 %4472, 0
  %4474 = icmp slt i32 %4469, 10
  %4475 = or i1 %4473, %4474
  br i1 %4475, label %originalBB1260, label %originalBB1260alteredBB

originalBB1260:                                   ; preds = %4467, %originalBB1260alteredBB
  %4476 = load i64, i64* %29, align 8, !dbg !4989
  %4477 = add i64 %4476, 1, !dbg !4989
  store i64 %4477, i64* %29, align 8, !dbg !4989
  %4478 = load i32, i32* @x.63
  %4479 = load i32, i32* @y.64
  %4480 = sub i32 %4478, 1
  %4481 = mul i32 %4478, %4480
  %4482 = urem i32 %4481, 2
  %4483 = icmp eq i32 %4482, 0
  %4484 = icmp slt i32 %4479, 10
  %4485 = or i1 %4483, %4484
  br i1 %4485, label %originalBBpart21264, label %originalBB1260alteredBB

originalBBpart21264:                              ; preds = %originalBB1260
  br label %4486, !dbg !4989

4486:                                             ; preds = %originalBBpart21264
  %4487 = load i32, i32* @x.63
  %4488 = load i32, i32* @y.64
  %4489 = sub i32 %4487, 1
  %4490 = mul i32 %4487, %4489
  %4491 = urem i32 %4490, 2
  %4492 = icmp eq i32 %4491, 0
  %4493 = icmp slt i32 %4488, 10
  %4494 = or i1 %4492, %4493
  br i1 %4494, label %originalBB1266, label %originalBB1266alteredBB

originalBB1266:                                   ; preds = %4486, %originalBB1266alteredBB
  %4495 = load i8, i8* %39, align 1, !dbg !4990
  %4496 = zext i8 %4495 to i32, !dbg !4990
  %4497 = and i32 %4496, 7, !dbg !4991
  %4498 = add nsw i32 48, %4497, !dbg !4992
  %4499 = trunc i32 %4498 to i8, !dbg !4993
  store i8 %4499, i8* %39, align 1, !dbg !4994
  %4500 = load i32, i32* @x.63
  %4501 = load i32, i32* @y.64
  %4502 = sub i32 %4500, 1
  %4503 = mul i32 %4500, %4502
  %4504 = urem i32 %4503, 2
  %4505 = icmp eq i32 %4504, 0
  %4506 = icmp slt i32 %4501, 10
  %4507 = or i1 %4505, %4506
  br i1 %4507, label %originalBBpart21278, label %originalBB1266alteredBB

originalBBpart21278:                              ; preds = %originalBB1266
  br label %4605, !dbg !4995

4508:                                             ; preds = %originalBBpart21076, %originalBBpart21072
  %4509 = load i32, i32* @x.63
  %4510 = load i32, i32* @y.64
  %4511 = sub i32 %4509, 1
  %4512 = mul i32 %4509, %4511
  %4513 = urem i32 %4512, 2
  %4514 = icmp eq i32 %4513, 0
  %4515 = icmp slt i32 %4510, 10
  %4516 = or i1 %4514, %4515
  br i1 %4516, label %originalBB1280, label %originalBB1280alteredBB

originalBB1280:                                   ; preds = %4508, %originalBB1280alteredBB
  %4517 = load i8, i8* %41, align 1, !dbg !4996
  %4518 = trunc i8 %4517 to i1, !dbg !4996
  %4519 = load i32, i32* @x.63
  %4520 = load i32, i32* @y.64
  %4521 = sub i32 %4519, 1
  %4522 = mul i32 %4519, %4521
  %4523 = urem i32 %4522, 2
  %4524 = icmp eq i32 %4523, 0
  %4525 = icmp slt i32 %4520, 10
  %4526 = or i1 %4524, %4525
  br i1 %4526, label %originalBBpart21282, label %originalBB1280alteredBB

originalBBpart21282:                              ; preds = %originalBB1280
  br i1 %4518, label %4527, label %4604, !dbg !4998

4527:                                             ; preds = %originalBBpart21282
  %4528 = load i32, i32* @x.63
  %4529 = load i32, i32* @y.64
  %4530 = sub i32 %4528, 1
  %4531 = mul i32 %4528, %4530
  %4532 = urem i32 %4531, 2
  %4533 = icmp eq i32 %4532, 0
  %4534 = icmp slt i32 %4529, 10
  %4535 = or i1 %4533, %4534
  br i1 %4535, label %originalBB1284, label %originalBB1284alteredBB

originalBB1284:                                   ; preds = %4527, %originalBB1284alteredBB
  %4536 = load i32, i32* @x.63
  %4537 = load i32, i32* @y.64
  %4538 = sub i32 %4536, 1
  %4539 = mul i32 %4536, %4538
  %4540 = urem i32 %4539, 2
  %4541 = icmp eq i32 %4540, 0
  %4542 = icmp slt i32 %4537, 10
  %4543 = or i1 %4541, %4542
  br i1 %4543, label %originalBBpart21286, label %originalBB1284alteredBB

originalBBpart21286:                              ; preds = %originalBB1284
  br label %4544, !dbg !4999

4544:                                             ; preds = %originalBBpart21286
  %4545 = load i32, i32* @x.63
  %4546 = load i32, i32* @y.64
  %4547 = sub i32 %4545, 1
  %4548 = mul i32 %4545, %4547
  %4549 = urem i32 %4548, 2
  %4550 = icmp eq i32 %4549, 0
  %4551 = icmp slt i32 %4546, 10
  %4552 = or i1 %4550, %4551
  br i1 %4552, label %originalBB1288, label %originalBB1288alteredBB

originalBB1288:                                   ; preds = %4544, %originalBB1288alteredBB
  %4553 = load i64, i64* %29, align 8, !dbg !5001
  %4554 = load i64, i64* %20, align 8, !dbg !5001
  %4555 = icmp ult i64 %4553, %4554, !dbg !5001
  %4556 = load i32, i32* @x.63
  %4557 = load i32, i32* @y.64
  %4558 = sub i32 %4556, 1
  %4559 = mul i32 %4556, %4558
  %4560 = urem i32 %4559, 2
  %4561 = icmp eq i32 %4560, 0
  %4562 = icmp slt i32 %4557, 10
  %4563 = or i1 %4561, %4562
  br i1 %4563, label %originalBBpart21290, label %originalBB1288alteredBB

originalBBpart21290:                              ; preds = %originalBB1288
  br i1 %4555, label %4564, label %4584, !dbg !5004

4564:                                             ; preds = %originalBBpart21290
  %4565 = load i32, i32* @x.63
  %4566 = load i32, i32* @y.64
  %4567 = sub i32 %4565, 1
  %4568 = mul i32 %4565, %4567
  %4569 = urem i32 %4568, 2
  %4570 = icmp eq i32 %4569, 0
  %4571 = icmp slt i32 %4566, 10
  %4572 = or i1 %4570, %4571
  br i1 %4572, label %originalBB1292, label %originalBB1292alteredBB

originalBB1292:                                   ; preds = %4564, %originalBB1292alteredBB
  %4573 = load i8*, i8** %19, align 8, !dbg !5001
  %4574 = load i64, i64* %29, align 8, !dbg !5001
  %4575 = getelementptr inbounds i8, i8* %4573, i64 %4574, !dbg !5001
  store i8 92, i8* %4575, align 1, !dbg !5001
  %4576 = load i32, i32* @x.63
  %4577 = load i32, i32* @y.64
  %4578 = sub i32 %4576, 1
  %4579 = mul i32 %4576, %4578
  %4580 = urem i32 %4579, 2
  %4581 = icmp eq i32 %4580, 0
  %4582 = icmp slt i32 %4577, 10
  %4583 = or i1 %4581, %4582
  br i1 %4583, label %originalBBpart21294, label %originalBB1292alteredBB

originalBBpart21294:                              ; preds = %originalBB1292
  br label %4584, !dbg !5001

4584:                                             ; preds = %originalBBpart21294, %originalBBpart21290
  %4585 = load i64, i64* %29, align 8, !dbg !5004
  %4586 = add i64 %4585, 1, !dbg !5004
  store i64 %4586, i64* %29, align 8, !dbg !5004
  br label %4587, !dbg !5004

4587:                                             ; preds = %4584
  %4588 = load i32, i32* @x.63
  %4589 = load i32, i32* @y.64
  %4590 = sub i32 %4588, 1
  %4591 = mul i32 %4588, %4590
  %4592 = urem i32 %4591, 2
  %4593 = icmp eq i32 %4592, 0
  %4594 = icmp slt i32 %4589, 10
  %4595 = or i1 %4593, %4594
  br i1 %4595, label %originalBB1296, label %originalBB1296alteredBB

originalBB1296:                                   ; preds = %4587, %originalBB1296alteredBB
  store i8 0, i8* %41, align 1, !dbg !5005
  %4596 = load i32, i32* @x.63
  %4597 = load i32, i32* @y.64
  %4598 = sub i32 %4596, 1
  %4599 = mul i32 %4596, %4598
  %4600 = urem i32 %4599, 2
  %4601 = icmp eq i32 %4600, 0
  %4602 = icmp slt i32 %4597, 10
  %4603 = or i1 %4601, %4602
  br i1 %4603, label %originalBBpart21298, label %originalBB1296alteredBB

originalBBpart21298:                              ; preds = %originalBB1296
  br label %4604, !dbg !5006

4604:                                             ; preds = %originalBBpart21298, %originalBBpart21282
  br label %4605

4605:                                             ; preds = %4604, %originalBBpart21278
  %4606 = load i64, i64* %50, align 8, !dbg !5007
  %4607 = load i64, i64* %28, align 8, !dbg !5009
  %4608 = add i64 %4607, 1, !dbg !5010
  %4609 = icmp ule i64 %4606, %4608, !dbg !5011
  br i1 %4609, label %4610, label %4627, !dbg !5012

4610:                                             ; preds = %4605
  %4611 = load i32, i32* @x.63
  %4612 = load i32, i32* @y.64
  %4613 = sub i32 %4611, 1
  %4614 = mul i32 %4611, %4613
  %4615 = urem i32 %4614, 2
  %4616 = icmp eq i32 %4615, 0
  %4617 = icmp slt i32 %4612, 10
  %4618 = or i1 %4616, %4617
  br i1 %4618, label %originalBB1300, label %originalBB1300alteredBB

originalBB1300:                                   ; preds = %4610, %originalBB1300alteredBB
  %4619 = load i32, i32* @x.63
  %4620 = load i32, i32* @y.64
  %4621 = sub i32 %4619, 1
  %4622 = mul i32 %4619, %4621
  %4623 = urem i32 %4622, 2
  %4624 = icmp eq i32 %4623, 0
  %4625 = icmp slt i32 %4620, 10
  %4626 = or i1 %4624, %4625
  br i1 %4626, label %originalBBpart21302, label %originalBB1300alteredBB

originalBBpart21302:                              ; preds = %originalBB1300
  br label %4935, !dbg !5013

4627:                                             ; preds = %4605
  %4628 = load i32, i32* @x.63
  %4629 = load i32, i32* @y.64
  %4630 = sub i32 %4628, 1
  %4631 = mul i32 %4628, %4630
  %4632 = urem i32 %4631, 2
  %4633 = icmp eq i32 %4632, 0
  %4634 = icmp slt i32 %4629, 10
  %4635 = or i1 %4633, %4634
  br i1 %4635, label %originalBB1304, label %originalBB1304alteredBB

originalBB1304:                                   ; preds = %4627, %originalBB1304alteredBB
  %4636 = load i32, i32* @x.63
  %4637 = load i32, i32* @y.64
  %4638 = sub i32 %4636, 1
  %4639 = mul i32 %4636, %4638
  %4640 = urem i32 %4639, 2
  %4641 = icmp eq i32 %4640, 0
  %4642 = icmp slt i32 %4637, 10
  %4643 = or i1 %4641, %4642
  br i1 %4643, label %originalBBpart21306, label %originalBB1304alteredBB

originalBBpart21306:                              ; preds = %originalBB1304
  br label %4644, !dbg !5014

4644:                                             ; preds = %originalBBpart21306
  %4645 = load i8, i8* %36, align 1, !dbg !5015
  %4646 = trunc i8 %4645 to i1, !dbg !5015
  br i1 %4646, label %4647, label %4819, !dbg !5015

4647:                                             ; preds = %4644
  %4648 = load i32, i32* @x.63
  %4649 = load i32, i32* @y.64
  %4650 = sub i32 %4648, 1
  %4651 = mul i32 %4648, %4650
  %4652 = urem i32 %4651, 2
  %4653 = icmp eq i32 %4652, 0
  %4654 = icmp slt i32 %4649, 10
  %4655 = or i1 %4653, %4654
  br i1 %4655, label %originalBB1308, label %originalBB1308alteredBB

originalBB1308:                                   ; preds = %4647, %originalBB1308alteredBB
  %4656 = load i8, i8* %42, align 1, !dbg !5015
  %4657 = trunc i8 %4656 to i1, !dbg !5015
  %4658 = load i32, i32* @x.63
  %4659 = load i32, i32* @y.64
  %4660 = sub i32 %4658, 1
  %4661 = mul i32 %4658, %4660
  %4662 = urem i32 %4661, 2
  %4663 = icmp eq i32 %4662, 0
  %4664 = icmp slt i32 %4659, 10
  %4665 = or i1 %4663, %4664
  br i1 %4665, label %originalBBpart21310, label %originalBB1308alteredBB

originalBBpart21310:                              ; preds = %originalBB1308
  br i1 %4657, label %4819, label %4666, !dbg !5018

4666:                                             ; preds = %originalBBpart21310
  %4667 = load i32, i32* @x.63
  %4668 = load i32, i32* @y.64
  %4669 = sub i32 %4667, 1
  %4670 = mul i32 %4667, %4669
  %4671 = urem i32 %4670, 2
  %4672 = icmp eq i32 %4671, 0
  %4673 = icmp slt i32 %4668, 10
  %4674 = or i1 %4672, %4673
  br i1 %4674, label %originalBB1312, label %originalBB1312alteredBB

originalBB1312:                                   ; preds = %4666, %originalBB1312alteredBB
  %4675 = load i32, i32* @x.63
  %4676 = load i32, i32* @y.64
  %4677 = sub i32 %4675, 1
  %4678 = mul i32 %4675, %4677
  %4679 = urem i32 %4678, 2
  %4680 = icmp eq i32 %4679, 0
  %4681 = icmp slt i32 %4676, 10
  %4682 = or i1 %4680, %4681
  br i1 %4682, label %originalBBpart21314, label %originalBB1312alteredBB

originalBBpart21314:                              ; preds = %originalBB1312
  br label %4683, !dbg !5019

4683:                                             ; preds = %originalBBpart21314
  %4684 = load i32, i32* @x.63
  %4685 = load i32, i32* @y.64
  %4686 = sub i32 %4684, 1
  %4687 = mul i32 %4684, %4686
  %4688 = urem i32 %4687, 2
  %4689 = icmp eq i32 %4688, 0
  %4690 = icmp slt i32 %4685, 10
  %4691 = or i1 %4689, %4690
  br i1 %4691, label %originalBB1316, label %originalBB1316alteredBB

originalBB1316:                                   ; preds = %4683, %originalBB1316alteredBB
  %4692 = load i64, i64* %29, align 8, !dbg !5021
  %4693 = load i64, i64* %20, align 8, !dbg !5021
  %4694 = icmp ult i64 %4692, %4693, !dbg !5021
  %4695 = load i32, i32* @x.63
  %4696 = load i32, i32* @y.64
  %4697 = sub i32 %4695, 1
  %4698 = mul i32 %4695, %4697
  %4699 = urem i32 %4698, 2
  %4700 = icmp eq i32 %4699, 0
  %4701 = icmp slt i32 %4696, 10
  %4702 = or i1 %4700, %4701
  br i1 %4702, label %originalBBpart21318, label %originalBB1316alteredBB

originalBBpart21318:                              ; preds = %originalBB1316
  br i1 %4694, label %4703, label %4723, !dbg !5024

4703:                                             ; preds = %originalBBpart21318
  %4704 = load i32, i32* @x.63
  %4705 = load i32, i32* @y.64
  %4706 = sub i32 %4704, 1
  %4707 = mul i32 %4704, %4706
  %4708 = urem i32 %4707, 2
  %4709 = icmp eq i32 %4708, 0
  %4710 = icmp slt i32 %4705, 10
  %4711 = or i1 %4709, %4710
  br i1 %4711, label %originalBB1320, label %originalBB1320alteredBB

originalBB1320:                                   ; preds = %4703, %originalBB1320alteredBB
  %4712 = load i8*, i8** %19, align 8, !dbg !5021
  %4713 = load i64, i64* %29, align 8, !dbg !5021
  %4714 = getelementptr inbounds i8, i8* %4712, i64 %4713, !dbg !5021
  store i8 39, i8* %4714, align 1, !dbg !5021
  %4715 = load i32, i32* @x.63
  %4716 = load i32, i32* @y.64
  %4717 = sub i32 %4715, 1
  %4718 = mul i32 %4715, %4717
  %4719 = urem i32 %4718, 2
  %4720 = icmp eq i32 %4719, 0
  %4721 = icmp slt i32 %4716, 10
  %4722 = or i1 %4720, %4721
  br i1 %4722, label %originalBBpart21322, label %originalBB1320alteredBB

originalBBpart21322:                              ; preds = %originalBB1320
  br label %4723, !dbg !5021

4723:                                             ; preds = %originalBBpart21322, %originalBBpart21318
  %4724 = load i32, i32* @x.63
  %4725 = load i32, i32* @y.64
  %4726 = sub i32 %4724, 1
  %4727 = mul i32 %4724, %4726
  %4728 = urem i32 %4727, 2
  %4729 = icmp eq i32 %4728, 0
  %4730 = icmp slt i32 %4725, 10
  %4731 = or i1 %4729, %4730
  br i1 %4731, label %originalBB1324, label %originalBB1324alteredBB

originalBB1324:                                   ; preds = %4723, %originalBB1324alteredBB
  %4732 = load i64, i64* %29, align 8, !dbg !5024
  %4733 = add i64 %4732, 1, !dbg !5024
  store i64 %4733, i64* %29, align 8, !dbg !5024
  %4734 = load i32, i32* @x.63
  %4735 = load i32, i32* @y.64
  %4736 = sub i32 %4734, 1
  %4737 = mul i32 %4734, %4736
  %4738 = urem i32 %4737, 2
  %4739 = icmp eq i32 %4738, 0
  %4740 = icmp slt i32 %4735, 10
  %4741 = or i1 %4739, %4740
  br i1 %4741, label %originalBBpart21328, label %originalBB1324alteredBB

originalBBpart21328:                              ; preds = %originalBB1324
  br label %4742, !dbg !5024

4742:                                             ; preds = %originalBBpart21328
  %4743 = load i32, i32* @x.63
  %4744 = load i32, i32* @y.64
  %4745 = sub i32 %4743, 1
  %4746 = mul i32 %4743, %4745
  %4747 = urem i32 %4746, 2
  %4748 = icmp eq i32 %4747, 0
  %4749 = icmp slt i32 %4744, 10
  %4750 = or i1 %4748, %4749
  br i1 %4750, label %originalBB1330, label %originalBB1330alteredBB

originalBB1330:                                   ; preds = %4742, %originalBB1330alteredBB
  %4751 = load i32, i32* @x.63
  %4752 = load i32, i32* @y.64
  %4753 = sub i32 %4751, 1
  %4754 = mul i32 %4751, %4753
  %4755 = urem i32 %4754, 2
  %4756 = icmp eq i32 %4755, 0
  %4757 = icmp slt i32 %4752, 10
  %4758 = or i1 %4756, %4757
  br i1 %4758, label %originalBBpart21332, label %originalBB1330alteredBB

originalBBpart21332:                              ; preds = %originalBB1330
  br label %4759, !dbg !5019

4759:                                             ; preds = %originalBBpart21332
  %4760 = load i32, i32* @x.63
  %4761 = load i32, i32* @y.64
  %4762 = sub i32 %4760, 1
  %4763 = mul i32 %4760, %4762
  %4764 = urem i32 %4763, 2
  %4765 = icmp eq i32 %4764, 0
  %4766 = icmp slt i32 %4761, 10
  %4767 = or i1 %4765, %4766
  br i1 %4767, label %originalBB1334, label %originalBB1334alteredBB

originalBB1334:                                   ; preds = %4759, %originalBB1334alteredBB
  %4768 = load i64, i64* %29, align 8, !dbg !5025
  %4769 = load i64, i64* %20, align 8, !dbg !5025
  %4770 = icmp ult i64 %4768, %4769, !dbg !5025
  %4771 = load i32, i32* @x.63
  %4772 = load i32, i32* @y.64
  %4773 = sub i32 %4771, 1
  %4774 = mul i32 %4771, %4773
  %4775 = urem i32 %4774, 2
  %4776 = icmp eq i32 %4775, 0
  %4777 = icmp slt i32 %4772, 10
  %4778 = or i1 %4776, %4777
  br i1 %4778, label %originalBBpart21336, label %originalBB1334alteredBB

originalBBpart21336:                              ; preds = %originalBB1334
  br i1 %4770, label %4779, label %4783, !dbg !5028

4779:                                             ; preds = %originalBBpart21336
  %4780 = load i8*, i8** %19, align 8, !dbg !5025
  %4781 = load i64, i64* %29, align 8, !dbg !5025
  %4782 = getelementptr inbounds i8, i8* %4780, i64 %4781, !dbg !5025
  store i8 39, i8* %4782, align 1, !dbg !5025
  br label %4783, !dbg !5025

4783:                                             ; preds = %4779, %originalBBpart21336
  %4784 = load i32, i32* @x.63
  %4785 = load i32, i32* @y.64
  %4786 = sub i32 %4784, 1
  %4787 = mul i32 %4784, %4786
  %4788 = urem i32 %4787, 2
  %4789 = icmp eq i32 %4788, 0
  %4790 = icmp slt i32 %4785, 10
  %4791 = or i1 %4789, %4790
  br i1 %4791, label %originalBB1338, label %originalBB1338alteredBB

originalBB1338:                                   ; preds = %4783, %originalBB1338alteredBB
  %4792 = load i64, i64* %29, align 8, !dbg !5028
  %4793 = add i64 %4792, 1, !dbg !5028
  store i64 %4793, i64* %29, align 8, !dbg !5028
  %4794 = load i32, i32* @x.63
  %4795 = load i32, i32* @y.64
  %4796 = sub i32 %4794, 1
  %4797 = mul i32 %4794, %4796
  %4798 = urem i32 %4797, 2
  %4799 = icmp eq i32 %4798, 0
  %4800 = icmp slt i32 %4795, 10
  %4801 = or i1 %4799, %4800
  br i1 %4801, label %originalBBpart21344, label %originalBB1338alteredBB

originalBBpart21344:                              ; preds = %originalBB1338
  br label %4802, !dbg !5028

4802:                                             ; preds = %originalBBpart21344
  %4803 = load i32, i32* @x.63
  %4804 = load i32, i32* @y.64
  %4805 = sub i32 %4803, 1
  %4806 = mul i32 %4803, %4805
  %4807 = urem i32 %4806, 2
  %4808 = icmp eq i32 %4807, 0
  %4809 = icmp slt i32 %4804, 10
  %4810 = or i1 %4808, %4809
  br i1 %4810, label %originalBB1346, label %originalBB1346alteredBB

originalBB1346:                                   ; preds = %4802, %originalBB1346alteredBB
  store i8 0, i8* %36, align 1, !dbg !5019
  %4811 = load i32, i32* @x.63
  %4812 = load i32, i32* @y.64
  %4813 = sub i32 %4811, 1
  %4814 = mul i32 %4811, %4813
  %4815 = urem i32 %4814, 2
  %4816 = icmp eq i32 %4815, 0
  %4817 = icmp slt i32 %4812, 10
  %4818 = or i1 %4816, %4817
  br i1 %4818, label %originalBBpart21348, label %originalBB1346alteredBB

originalBBpart21348:                              ; preds = %originalBB1346
  br label %4819, !dbg !5019

4819:                                             ; preds = %originalBBpart21348, %originalBBpart21310, %4644
  %4820 = load i32, i32* @x.63
  %4821 = load i32, i32* @y.64
  %4822 = sub i32 %4820, 1
  %4823 = mul i32 %4820, %4822
  %4824 = urem i32 %4823, 2
  %4825 = icmp eq i32 %4824, 0
  %4826 = icmp slt i32 %4821, 10
  %4827 = or i1 %4825, %4826
  br i1 %4827, label %originalBB1350, label %originalBB1350alteredBB

originalBB1350:                                   ; preds = %4819, %originalBB1350alteredBB
  %4828 = load i32, i32* @x.63
  %4829 = load i32, i32* @y.64
  %4830 = sub i32 %4828, 1
  %4831 = mul i32 %4828, %4830
  %4832 = urem i32 %4831, 2
  %4833 = icmp eq i32 %4832, 0
  %4834 = icmp slt i32 %4829, 10
  %4835 = or i1 %4833, %4834
  br i1 %4835, label %originalBBpart21352, label %originalBB1350alteredBB

originalBBpart21352:                              ; preds = %originalBB1350
  br label %4836, !dbg !5018

4836:                                             ; preds = %originalBBpart21352
  %4837 = load i32, i32* @x.63
  %4838 = load i32, i32* @y.64
  %4839 = sub i32 %4837, 1
  %4840 = mul i32 %4837, %4839
  %4841 = urem i32 %4840, 2
  %4842 = icmp eq i32 %4841, 0
  %4843 = icmp slt i32 %4838, 10
  %4844 = or i1 %4842, %4843
  br i1 %4844, label %originalBB1354, label %originalBB1354alteredBB

originalBB1354:                                   ; preds = %4836, %originalBB1354alteredBB
  %4845 = load i32, i32* @x.63
  %4846 = load i32, i32* @y.64
  %4847 = sub i32 %4845, 1
  %4848 = mul i32 %4845, %4847
  %4849 = urem i32 %4848, 2
  %4850 = icmp eq i32 %4849, 0
  %4851 = icmp slt i32 %4846, 10
  %4852 = or i1 %4850, %4851
  br i1 %4852, label %originalBBpart21356, label %originalBB1354alteredBB

originalBBpart21356:                              ; preds = %originalBB1354
  br label %4853, !dbg !5029

4853:                                             ; preds = %originalBBpart21356
  %4854 = load i32, i32* @x.63
  %4855 = load i32, i32* @y.64
  %4856 = sub i32 %4854, 1
  %4857 = mul i32 %4854, %4856
  %4858 = urem i32 %4857, 2
  %4859 = icmp eq i32 %4858, 0
  %4860 = icmp slt i32 %4855, 10
  %4861 = or i1 %4859, %4860
  br i1 %4861, label %originalBB1358, label %originalBB1358alteredBB

originalBB1358:                                   ; preds = %4853, %originalBB1358alteredBB
  %4862 = load i64, i64* %29, align 8, !dbg !5030
  %4863 = load i64, i64* %20, align 8, !dbg !5030
  %4864 = icmp ult i64 %4862, %4863, !dbg !5030
  %4865 = load i32, i32* @x.63
  %4866 = load i32, i32* @y.64
  %4867 = sub i32 %4865, 1
  %4868 = mul i32 %4865, %4867
  %4869 = urem i32 %4868, 2
  %4870 = icmp eq i32 %4869, 0
  %4871 = icmp slt i32 %4866, 10
  %4872 = or i1 %4870, %4871
  br i1 %4872, label %originalBBpart21360, label %originalBB1358alteredBB

originalBBpart21360:                              ; preds = %originalBB1358
  br i1 %4864, label %4873, label %4894, !dbg !5033

4873:                                             ; preds = %originalBBpart21360
  %4874 = load i32, i32* @x.63
  %4875 = load i32, i32* @y.64
  %4876 = sub i32 %4874, 1
  %4877 = mul i32 %4874, %4876
  %4878 = urem i32 %4877, 2
  %4879 = icmp eq i32 %4878, 0
  %4880 = icmp slt i32 %4875, 10
  %4881 = or i1 %4879, %4880
  br i1 %4881, label %originalBB1362, label %originalBB1362alteredBB

originalBB1362:                                   ; preds = %4873, %originalBB1362alteredBB
  %4882 = load i8, i8* %39, align 1, !dbg !5030
  %4883 = load i8*, i8** %19, align 8, !dbg !5030
  %4884 = load i64, i64* %29, align 8, !dbg !5030
  %4885 = getelementptr inbounds i8, i8* %4883, i64 %4884, !dbg !5030
  store i8 %4882, i8* %4885, align 1, !dbg !5030
  %4886 = load i32, i32* @x.63
  %4887 = load i32, i32* @y.64
  %4888 = sub i32 %4886, 1
  %4889 = mul i32 %4886, %4888
  %4890 = urem i32 %4889, 2
  %4891 = icmp eq i32 %4890, 0
  %4892 = icmp slt i32 %4887, 10
  %4893 = or i1 %4891, %4892
  br i1 %4893, label %originalBBpart21364, label %originalBB1362alteredBB

originalBBpart21364:                              ; preds = %originalBB1362
  br label %4894, !dbg !5030

4894:                                             ; preds = %originalBBpart21364, %originalBBpart21360
  %4895 = load i32, i32* @x.63
  %4896 = load i32, i32* @y.64
  %4897 = sub i32 %4895, 1
  %4898 = mul i32 %4895, %4897
  %4899 = urem i32 %4898, 2
  %4900 = icmp eq i32 %4899, 0
  %4901 = icmp slt i32 %4896, 10
  %4902 = or i1 %4900, %4901
  br i1 %4902, label %originalBB1366, label %originalBB1366alteredBB

originalBB1366:                                   ; preds = %4894, %originalBB1366alteredBB
  %4903 = load i64, i64* %29, align 8, !dbg !5033
  %4904 = add i64 %4903, 1, !dbg !5033
  store i64 %4904, i64* %29, align 8, !dbg !5033
  %4905 = load i32, i32* @x.63
  %4906 = load i32, i32* @y.64
  %4907 = sub i32 %4905, 1
  %4908 = mul i32 %4905, %4907
  %4909 = urem i32 %4908, 2
  %4910 = icmp eq i32 %4909, 0
  %4911 = icmp slt i32 %4906, 10
  %4912 = or i1 %4910, %4911
  br i1 %4912, label %originalBBpart21371, label %originalBB1366alteredBB

originalBBpart21371:                              ; preds = %originalBB1366
  br label %4913, !dbg !5033

4913:                                             ; preds = %originalBBpart21371
  %4914 = load i32, i32* @x.63
  %4915 = load i32, i32* @y.64
  %4916 = sub i32 %4914, 1
  %4917 = mul i32 %4914, %4916
  %4918 = urem i32 %4917, 2
  %4919 = icmp eq i32 %4918, 0
  %4920 = icmp slt i32 %4915, 10
  %4921 = or i1 %4919, %4920
  br i1 %4921, label %originalBB1373, label %originalBB1373alteredBB

originalBB1373:                                   ; preds = %4913, %originalBB1373alteredBB
  %4922 = load i8*, i8** %21, align 8, !dbg !5034
  %4923 = load i64, i64* %28, align 8, !dbg !5035
  %4924 = add i64 %4923, 1, !dbg !5035
  store i64 %4924, i64* %28, align 8, !dbg !5035
  %4925 = getelementptr inbounds i8, i8* %4922, i64 %4924, !dbg !5034
  %4926 = load i8, i8* %4925, align 1, !dbg !5034
  store i8 %4926, i8* %39, align 1, !dbg !5036
  %4927 = load i32, i32* @x.63
  %4928 = load i32, i32* @y.64
  %4929 = sub i32 %4927, 1
  %4930 = mul i32 %4927, %4929
  %4931 = urem i32 %4930, 2
  %4932 = icmp eq i32 %4931, 0
  %4933 = icmp slt i32 %4928, 10
  %4934 = or i1 %4932, %4933
  br i1 %4934, label %originalBBpart21384, label %originalBB1373alteredBB

originalBBpart21384:                              ; preds = %originalBB1373
  br label %3888, !dbg !5037, !llvm.loop !5038

4935:                                             ; preds = %originalBBpart21302
  %4936 = load i32, i32* @x.63
  %4937 = load i32, i32* @y.64
  %4938 = sub i32 %4936, 1
  %4939 = mul i32 %4936, %4938
  %4940 = urem i32 %4939, 2
  %4941 = icmp eq i32 %4940, 0
  %4942 = icmp slt i32 %4937, 10
  %4943 = or i1 %4941, %4942
  br i1 %4943, label %originalBB1386, label %originalBB1386alteredBB

originalBB1386:                                   ; preds = %4935, %originalBB1386alteredBB
  %4944 = load i32, i32* @x.63
  %4945 = load i32, i32* @y.64
  %4946 = sub i32 %4944, 1
  %4947 = mul i32 %4944, %4946
  %4948 = urem i32 %4947, 2
  %4949 = icmp eq i32 %4948, 0
  %4950 = icmp slt i32 %4945, 10
  %4951 = or i1 %4949, %4950
  br i1 %4951, label %originalBBpart21388, label %originalBB1386alteredBB

originalBBpart21388:                              ; preds = %originalBB1386
  br label %5526, !dbg !5041

4952:                                             ; preds = %originalBBpart21049, %3846
  %4953 = load i32, i32* @x.63
  %4954 = load i32, i32* @y.64
  %4955 = sub i32 %4953, 1
  %4956 = mul i32 %4953, %4955
  %4957 = urem i32 %4956, 2
  %4958 = icmp eq i32 %4957, 0
  %4959 = icmp slt i32 %4954, 10
  %4960 = or i1 %4958, %4959
  br i1 %4960, label %originalBB1390, label %originalBB1390alteredBB

originalBB1390:                                   ; preds = %4952, %originalBB1390alteredBB
  %4961 = load i32, i32* @x.63
  %4962 = load i32, i32* @y.64
  %4963 = sub i32 %4961, 1
  %4964 = mul i32 %4961, %4963
  %4965 = urem i32 %4964, 2
  %4966 = icmp eq i32 %4965, 0
  %4967 = icmp slt i32 %4962, 10
  %4968 = or i1 %4966, %4967
  br i1 %4968, label %originalBBpart21392, label %originalBB1390alteredBB

originalBBpart21392:                              ; preds = %originalBB1390
  br label %4969, !dbg !5042

4969:                                             ; preds = %originalBBpart21392, %originalBBpart2813, %originalBBpart2809, %originalBBpart2715, %originalBBpart2695, %originalBBpart2683, %originalBBpart2667, %2212, %originalBBpart2411
  %4970 = load i32, i32* @x.63
  %4971 = load i32, i32* @y.64
  %4972 = sub i32 %4970, 1
  %4973 = mul i32 %4970, %4972
  %4974 = urem i32 %4973, 2
  %4975 = icmp eq i32 %4974, 0
  %4976 = icmp slt i32 %4971, 10
  %4977 = or i1 %4975, %4976
  br i1 %4977, label %originalBB1394, label %originalBB1394alteredBB

originalBB1394:                                   ; preds = %4969, %originalBB1394alteredBB
  %4978 = load i8, i8* %33, align 1, !dbg !5043
  %4979 = trunc i8 %4978 to i1, !dbg !5043
  %4980 = load i32, i32* @x.63
  %4981 = load i32, i32* @y.64
  %4982 = sub i32 %4980, 1
  %4983 = mul i32 %4980, %4982
  %4984 = urem i32 %4983, 2
  %4985 = icmp eq i32 %4984, 0
  %4986 = icmp slt i32 %4981, 10
  %4987 = or i1 %4985, %4986
  br i1 %4987, label %originalBBpart21396, label %originalBB1394alteredBB

originalBBpart21396:                              ; preds = %originalBB1394
  br i1 %4979, label %4988, label %5007, !dbg !5045

4988:                                             ; preds = %originalBBpart21396
  %4989 = load i32, i32* @x.63
  %4990 = load i32, i32* @y.64
  %4991 = sub i32 %4989, 1
  %4992 = mul i32 %4989, %4991
  %4993 = urem i32 %4992, 2
  %4994 = icmp eq i32 %4993, 0
  %4995 = icmp slt i32 %4990, 10
  %4996 = or i1 %4994, %4995
  br i1 %4996, label %originalBB1398, label %originalBB1398alteredBB

originalBB1398:                                   ; preds = %4988, %originalBB1398alteredBB
  %4997 = load i32, i32* %23, align 4, !dbg !5046
  %4998 = icmp ne i32 %4997, 2, !dbg !5047
  %4999 = load i32, i32* @x.63
  %5000 = load i32, i32* @y.64
  %5001 = sub i32 %4999, 1
  %5002 = mul i32 %4999, %5001
  %5003 = urem i32 %5002, 2
  %5004 = icmp eq i32 %5003, 0
  %5005 = icmp slt i32 %5000, 10
  %5006 = or i1 %5004, %5005
  br i1 %5006, label %originalBBpart21400, label %originalBB1398alteredBB

originalBBpart21400:                              ; preds = %originalBB1398
  br i1 %4998, label %5026, label %5007, !dbg !5048

5007:                                             ; preds = %originalBBpart21400, %originalBBpart21396
  %5008 = load i32, i32* @x.63
  %5009 = load i32, i32* @y.64
  %5010 = sub i32 %5008, 1
  %5011 = mul i32 %5008, %5010
  %5012 = urem i32 %5011, 2
  %5013 = icmp eq i32 %5012, 0
  %5014 = icmp slt i32 %5009, 10
  %5015 = or i1 %5013, %5014
  br i1 %5015, label %originalBB1402, label %originalBB1402alteredBB

originalBB1402:                                   ; preds = %5007, %originalBB1402alteredBB
  %5016 = load i8, i8* %35, align 1, !dbg !5049
  %5017 = trunc i8 %5016 to i1, !dbg !5049
  %5018 = load i32, i32* @x.63
  %5019 = load i32, i32* @y.64
  %5020 = sub i32 %5018, 1
  %5021 = mul i32 %5018, %5020
  %5022 = urem i32 %5021, 2
  %5023 = icmp eq i32 %5022, 0
  %5024 = icmp slt i32 %5019, 10
  %5025 = or i1 %5023, %5024
  br i1 %5025, label %originalBBpart21404, label %originalBB1402alteredBB

originalBBpart21404:                              ; preds = %originalBB1402
  br i1 %5017, label %5026, label %5075, !dbg !5050

5026:                                             ; preds = %originalBBpart21404, %originalBBpart21400
  %5027 = load i32, i32* @x.63
  %5028 = load i32, i32* @y.64
  %5029 = sub i32 %5027, 1
  %5030 = mul i32 %5027, %5029
  %5031 = urem i32 %5030, 2
  %5032 = icmp eq i32 %5031, 0
  %5033 = icmp slt i32 %5028, 10
  %5034 = or i1 %5032, %5033
  br i1 %5034, label %originalBB1406, label %originalBB1406alteredBB

originalBB1406:                                   ; preds = %5026, %originalBB1406alteredBB
  %5035 = load i32*, i32** %25, align 8, !dbg !5051
  %5036 = icmp ne i32* %5035, null, !dbg !5051
  %5037 = load i32, i32* @x.63
  %5038 = load i32, i32* @y.64
  %5039 = sub i32 %5037, 1
  %5040 = mul i32 %5037, %5039
  %5041 = urem i32 %5040, 2
  %5042 = icmp eq i32 %5041, 0
  %5043 = icmp slt i32 %5038, 10
  %5044 = or i1 %5042, %5043
  br i1 %5044, label %originalBBpart21408, label %originalBB1406alteredBB

originalBBpart21408:                              ; preds = %originalBB1406
  br i1 %5036, label %5045, label %5075, !dbg !5052

5045:                                             ; preds = %originalBBpart21408
  %5046 = load i32, i32* @x.63
  %5047 = load i32, i32* @y.64
  %5048 = sub i32 %5046, 1
  %5049 = mul i32 %5046, %5048
  %5050 = urem i32 %5049, 2
  %5051 = icmp eq i32 %5050, 0
  %5052 = icmp slt i32 %5047, 10
  %5053 = or i1 %5051, %5052
  br i1 %5053, label %originalBB1410, label %originalBB1410alteredBB

originalBB1410:                                   ; preds = %5045, %originalBB1410alteredBB
  %5054 = load i32*, i32** %25, align 8, !dbg !5053
  %5055 = load i8, i8* %39, align 1, !dbg !5054
  %5056 = zext i8 %5055 to i64, !dbg !5054
  %5057 = udiv i64 %5056, 32, !dbg !5055
  %5058 = getelementptr inbounds i32, i32* %5054, i64 %5057, !dbg !5053
  %5059 = load i32, i32* %5058, align 4, !dbg !5053
  %5060 = load i8, i8* %39, align 1, !dbg !5056
  %5061 = zext i8 %5060 to i64, !dbg !5056
  %5062 = urem i64 %5061, 32, !dbg !5057
  %5063 = trunc i64 %5062 to i32, !dbg !5058
  %5064 = lshr i32 %5059, %5063, !dbg !5058
  %5065 = and i32 %5064, 1, !dbg !5059
  %5066 = icmp ne i32 %5065, 0, !dbg !5059
  %5067 = load i32, i32* @x.63
  %5068 = load i32, i32* @y.64
  %5069 = sub i32 %5067, 1
  %5070 = mul i32 %5067, %5069
  %5071 = urem i32 %5070, 2
  %5072 = icmp eq i32 %5071, 0
  %5073 = icmp slt i32 %5068, 10
  %5074 = or i1 %5072, %5073
  br i1 %5074, label %originalBBpart21446, label %originalBB1410alteredBB

originalBBpart21446:                              ; preds = %originalBB1410
  br i1 %5066, label %5111, label %5075, !dbg !5060

5075:                                             ; preds = %originalBBpart21446, %originalBBpart21408, %originalBBpart21404
  %5076 = load i32, i32* @x.63
  %5077 = load i32, i32* @y.64
  %5078 = sub i32 %5076, 1
  %5079 = mul i32 %5076, %5078
  %5080 = urem i32 %5079, 2
  %5081 = icmp eq i32 %5080, 0
  %5082 = icmp slt i32 %5077, 10
  %5083 = or i1 %5081, %5082
  br i1 %5083, label %originalBB1448, label %originalBB1448alteredBB

originalBB1448:                                   ; preds = %5075, %originalBB1448alteredBB
  %5084 = load i8, i8* %41, align 1, !dbg !5061
  %5085 = trunc i8 %5084 to i1, !dbg !5061
  %5086 = load i32, i32* @x.63
  %5087 = load i32, i32* @y.64
  %5088 = sub i32 %5086, 1
  %5089 = mul i32 %5086, %5088
  %5090 = urem i32 %5089, 2
  %5091 = icmp eq i32 %5090, 0
  %5092 = icmp slt i32 %5087, 10
  %5093 = or i1 %5091, %5092
  br i1 %5093, label %originalBBpart21450, label %originalBB1448alteredBB

originalBBpart21450:                              ; preds = %originalBB1448
  br i1 %5085, label %5111, label %5094, !dbg !5062

5094:                                             ; preds = %originalBBpart21450
  %5095 = load i32, i32* @x.63
  %5096 = load i32, i32* @y.64
  %5097 = sub i32 %5095, 1
  %5098 = mul i32 %5095, %5097
  %5099 = urem i32 %5098, 2
  %5100 = icmp eq i32 %5099, 0
  %5101 = icmp slt i32 %5096, 10
  %5102 = or i1 %5100, %5101
  br i1 %5102, label %originalBB1452, label %originalBB1452alteredBB

originalBB1452:                                   ; preds = %5094, %originalBB1452alteredBB
  %5103 = load i32, i32* @x.63
  %5104 = load i32, i32* @y.64
  %5105 = sub i32 %5103, 1
  %5106 = mul i32 %5103, %5105
  %5107 = urem i32 %5106, 2
  %5108 = icmp eq i32 %5107, 0
  %5109 = icmp slt i32 %5104, 10
  %5110 = or i1 %5108, %5109
  br i1 %5110, label %originalBBpart21454, label %originalBB1452alteredBB

originalBBpart21454:                              ; preds = %originalBB1452
  br label %5526, !dbg !5063

5111:                                             ; preds = %originalBBpart21450, %originalBBpart21446
  %5112 = load i32, i32* @x.63
  %5113 = load i32, i32* @y.64
  %5114 = sub i32 %5112, 1
  %5115 = mul i32 %5112, %5114
  %5116 = urem i32 %5115, 2
  %5117 = icmp eq i32 %5116, 0
  %5118 = icmp slt i32 %5113, 10
  %5119 = or i1 %5117, %5118
  br i1 %5119, label %originalBB1456, label %originalBB1456alteredBB

originalBB1456:                                   ; preds = %5111, %originalBB1456alteredBB
  %5120 = load i32, i32* @x.63
  %5121 = load i32, i32* @y.64
  %5122 = sub i32 %5120, 1
  %5123 = mul i32 %5120, %5122
  %5124 = urem i32 %5123, 2
  %5125 = icmp eq i32 %5124, 0
  %5126 = icmp slt i32 %5121, 10
  %5127 = or i1 %5125, %5126
  br i1 %5127, label %originalBBpart21458, label %originalBB1456alteredBB

originalBBpart21458:                              ; preds = %originalBB1456
  br label %5128, !dbg !5061

5128:                                             ; preds = %originalBBpart21458, %originalBBpart2663
  call void @llvm.dbg.label(metadata !5064), !dbg !5065
  %5129 = load i32, i32* @x.63
  %5130 = load i32, i32* @y.64
  %5131 = sub i32 %5129, 1
  %5132 = mul i32 %5129, %5131
  %5133 = urem i32 %5132, 2
  %5134 = icmp eq i32 %5133, 0
  %5135 = icmp slt i32 %5130, 10
  %5136 = or i1 %5134, %5135
  br i1 %5136, label %originalBB1460, label %originalBB1460alteredBB

originalBB1460:                                   ; preds = %5128, %originalBB1460alteredBB
  %5137 = load i32, i32* @x.63
  %5138 = load i32, i32* @y.64
  %5139 = sub i32 %5137, 1
  %5140 = mul i32 %5137, %5139
  %5141 = urem i32 %5140, 2
  %5142 = icmp eq i32 %5141, 0
  %5143 = icmp slt i32 %5138, 10
  %5144 = or i1 %5142, %5143
  br i1 %5144, label %originalBBpart21462, label %originalBB1460alteredBB

originalBBpart21462:                              ; preds = %originalBB1460
  br label %5145, !dbg !5066

5145:                                             ; preds = %originalBBpart21462
  %5146 = load i32, i32* @x.63
  %5147 = load i32, i32* @y.64
  %5148 = sub i32 %5146, 1
  %5149 = mul i32 %5146, %5148
  %5150 = urem i32 %5149, 2
  %5151 = icmp eq i32 %5150, 0
  %5152 = icmp slt i32 %5147, 10
  %5153 = or i1 %5151, %5152
  br i1 %5153, label %originalBB1464, label %originalBB1464alteredBB

originalBB1464:                                   ; preds = %5145, %originalBB1464alteredBB
  %5154 = load i8, i8* %35, align 1, !dbg !5067
  %5155 = trunc i8 %5154 to i1, !dbg !5067
  %5156 = load i32, i32* @x.63
  %5157 = load i32, i32* @y.64
  %5158 = sub i32 %5156, 1
  %5159 = mul i32 %5156, %5158
  %5160 = urem i32 %5159, 2
  %5161 = icmp eq i32 %5160, 0
  %5162 = icmp slt i32 %5157, 10
  %5163 = or i1 %5161, %5162
  br i1 %5163, label %originalBBpart21466, label %originalBB1464alteredBB

originalBBpart21466:                              ; preds = %originalBB1464
  br i1 %5155, label %5164, label %5181, !dbg !5070

5164:                                             ; preds = %originalBBpart21466
  %5165 = load i32, i32* @x.63
  %5166 = load i32, i32* @y.64
  %5167 = sub i32 %5165, 1
  %5168 = mul i32 %5165, %5167
  %5169 = urem i32 %5168, 2
  %5170 = icmp eq i32 %5169, 0
  %5171 = icmp slt i32 %5166, 10
  %5172 = or i1 %5170, %5171
  br i1 %5172, label %originalBB1468, label %originalBB1468alteredBB

originalBB1468:                                   ; preds = %5164, %originalBB1468alteredBB
  %5173 = load i32, i32* @x.63
  %5174 = load i32, i32* @y.64
  %5175 = sub i32 %5173, 1
  %5176 = mul i32 %5173, %5175
  %5177 = urem i32 %5176, 2
  %5178 = icmp eq i32 %5177, 0
  %5179 = icmp slt i32 %5174, 10
  %5180 = or i1 %5178, %5179
  br i1 %5180, label %originalBBpart21470, label %originalBB1468alteredBB

originalBBpart21470:                              ; preds = %originalBB1468
  br label %6366, !dbg !5067

5181:                                             ; preds = %originalBBpart21466
  %5182 = load i32, i32* @x.63
  %5183 = load i32, i32* @y.64
  %5184 = sub i32 %5182, 1
  %5185 = mul i32 %5182, %5184
  %5186 = urem i32 %5185, 2
  %5187 = icmp eq i32 %5186, 0
  %5188 = icmp slt i32 %5183, 10
  %5189 = or i1 %5187, %5188
  br i1 %5189, label %originalBB1472, label %originalBB1472alteredBB

originalBB1472:                                   ; preds = %5181, %originalBB1472alteredBB
  store i8 1, i8* %42, align 1, !dbg !5070
  %5190 = load i32, i32* %23, align 4, !dbg !5071
  %5191 = icmp eq i32 %5190, 2, !dbg !5071
  %5192 = load i32, i32* @x.63
  %5193 = load i32, i32* @y.64
  %5194 = sub i32 %5192, 1
  %5195 = mul i32 %5192, %5194
  %5196 = urem i32 %5195, 2
  %5197 = icmp eq i32 %5196, 0
  %5198 = icmp slt i32 %5193, 10
  %5199 = or i1 %5197, %5198
  br i1 %5199, label %originalBBpart21474, label %originalBB1472alteredBB

originalBBpart21474:                              ; preds = %originalBB1472
  br i1 %5191, label %5200, label %5416, !dbg !5071

5200:                                             ; preds = %originalBBpart21474
  %5201 = load i32, i32* @x.63
  %5202 = load i32, i32* @y.64
  %5203 = sub i32 %5201, 1
  %5204 = mul i32 %5201, %5203
  %5205 = urem i32 %5204, 2
  %5206 = icmp eq i32 %5205, 0
  %5207 = icmp slt i32 %5202, 10
  %5208 = or i1 %5206, %5207
  br i1 %5208, label %originalBB1476, label %originalBB1476alteredBB

originalBB1476:                                   ; preds = %5200, %originalBB1476alteredBB
  %5209 = load i8, i8* %36, align 1, !dbg !5071
  %5210 = trunc i8 %5209 to i1, !dbg !5071
  %5211 = load i32, i32* @x.63
  %5212 = load i32, i32* @y.64
  %5213 = sub i32 %5211, 1
  %5214 = mul i32 %5211, %5213
  %5215 = urem i32 %5214, 2
  %5216 = icmp eq i32 %5215, 0
  %5217 = icmp slt i32 %5212, 10
  %5218 = or i1 %5216, %5217
  br i1 %5218, label %originalBBpart21478, label %originalBB1476alteredBB

originalBBpart21478:                              ; preds = %originalBB1476
  br i1 %5210, label %5416, label %5219, !dbg !5070

5219:                                             ; preds = %originalBBpart21478
  %5220 = load i32, i32* @x.63
  %5221 = load i32, i32* @y.64
  %5222 = sub i32 %5220, 1
  %5223 = mul i32 %5220, %5222
  %5224 = urem i32 %5223, 2
  %5225 = icmp eq i32 %5224, 0
  %5226 = icmp slt i32 %5221, 10
  %5227 = or i1 %5225, %5226
  br i1 %5227, label %originalBB1480, label %originalBB1480alteredBB

originalBB1480:                                   ; preds = %5219, %originalBB1480alteredBB
  %5228 = load i32, i32* @x.63
  %5229 = load i32, i32* @y.64
  %5230 = sub i32 %5228, 1
  %5231 = mul i32 %5228, %5230
  %5232 = urem i32 %5231, 2
  %5233 = icmp eq i32 %5232, 0
  %5234 = icmp slt i32 %5229, 10
  %5235 = or i1 %5233, %5234
  br i1 %5235, label %originalBBpart21482, label %originalBB1480alteredBB

originalBBpart21482:                              ; preds = %originalBB1480
  br label %5236, !dbg !5073

5236:                                             ; preds = %originalBBpart21482
  %5237 = load i32, i32* @x.63
  %5238 = load i32, i32* @y.64
  %5239 = sub i32 %5237, 1
  %5240 = mul i32 %5237, %5239
  %5241 = urem i32 %5240, 2
  %5242 = icmp eq i32 %5241, 0
  %5243 = icmp slt i32 %5238, 10
  %5244 = or i1 %5242, %5243
  br i1 %5244, label %originalBB1484, label %originalBB1484alteredBB

originalBB1484:                                   ; preds = %5236, %originalBB1484alteredBB
  %5245 = load i64, i64* %29, align 8, !dbg !5075
  %5246 = load i64, i64* %20, align 8, !dbg !5075
  %5247 = icmp ult i64 %5245, %5246, !dbg !5075
  %5248 = load i32, i32* @x.63
  %5249 = load i32, i32* @y.64
  %5250 = sub i32 %5248, 1
  %5251 = mul i32 %5248, %5250
  %5252 = urem i32 %5251, 2
  %5253 = icmp eq i32 %5252, 0
  %5254 = icmp slt i32 %5249, 10
  %5255 = or i1 %5253, %5254
  br i1 %5255, label %originalBBpart21486, label %originalBB1484alteredBB

originalBBpart21486:                              ; preds = %originalBB1484
  br i1 %5247, label %5256, label %5276, !dbg !5078

5256:                                             ; preds = %originalBBpart21486
  %5257 = load i32, i32* @x.63
  %5258 = load i32, i32* @y.64
  %5259 = sub i32 %5257, 1
  %5260 = mul i32 %5257, %5259
  %5261 = urem i32 %5260, 2
  %5262 = icmp eq i32 %5261, 0
  %5263 = icmp slt i32 %5258, 10
  %5264 = or i1 %5262, %5263
  br i1 %5264, label %originalBB1488, label %originalBB1488alteredBB

originalBB1488:                                   ; preds = %5256, %originalBB1488alteredBB
  %5265 = load i8*, i8** %19, align 8, !dbg !5075
  %5266 = load i64, i64* %29, align 8, !dbg !5075
  %5267 = getelementptr inbounds i8, i8* %5265, i64 %5266, !dbg !5075
  store i8 39, i8* %5267, align 1, !dbg !5075
  %5268 = load i32, i32* @x.63
  %5269 = load i32, i32* @y.64
  %5270 = sub i32 %5268, 1
  %5271 = mul i32 %5268, %5270
  %5272 = urem i32 %5271, 2
  %5273 = icmp eq i32 %5272, 0
  %5274 = icmp slt i32 %5269, 10
  %5275 = or i1 %5273, %5274
  br i1 %5275, label %originalBBpart21490, label %originalBB1488alteredBB

originalBBpart21490:                              ; preds = %originalBB1488
  br label %5276, !dbg !5075

5276:                                             ; preds = %originalBBpart21490, %originalBBpart21486
  %5277 = load i64, i64* %29, align 8, !dbg !5078
  %5278 = add i64 %5277, 1, !dbg !5078
  store i64 %5278, i64* %29, align 8, !dbg !5078
  br label %5279, !dbg !5078

5279:                                             ; preds = %5276
  %5280 = load i32, i32* @x.63
  %5281 = load i32, i32* @y.64
  %5282 = sub i32 %5280, 1
  %5283 = mul i32 %5280, %5282
  %5284 = urem i32 %5283, 2
  %5285 = icmp eq i32 %5284, 0
  %5286 = icmp slt i32 %5281, 10
  %5287 = or i1 %5285, %5286
  br i1 %5287, label %originalBB1492, label %originalBB1492alteredBB

originalBB1492:                                   ; preds = %5279, %originalBB1492alteredBB
  %5288 = load i32, i32* @x.63
  %5289 = load i32, i32* @y.64
  %5290 = sub i32 %5288, 1
  %5291 = mul i32 %5288, %5290
  %5292 = urem i32 %5291, 2
  %5293 = icmp eq i32 %5292, 0
  %5294 = icmp slt i32 %5289, 10
  %5295 = or i1 %5293, %5294
  br i1 %5295, label %originalBBpart21494, label %originalBB1492alteredBB

originalBBpart21494:                              ; preds = %originalBB1492
  br label %5296, !dbg !5073

5296:                                             ; preds = %originalBBpart21494
  %5297 = load i64, i64* %29, align 8, !dbg !5079
  %5298 = load i64, i64* %20, align 8, !dbg !5079
  %5299 = icmp ult i64 %5297, %5298, !dbg !5079
  br i1 %5299, label %5300, label %5320, !dbg !5082

5300:                                             ; preds = %5296
  %5301 = load i32, i32* @x.63
  %5302 = load i32, i32* @y.64
  %5303 = sub i32 %5301, 1
  %5304 = mul i32 %5301, %5303
  %5305 = urem i32 %5304, 2
  %5306 = icmp eq i32 %5305, 0
  %5307 = icmp slt i32 %5302, 10
  %5308 = or i1 %5306, %5307
  br i1 %5308, label %originalBB1496, label %originalBB1496alteredBB

originalBB1496:                                   ; preds = %5300, %originalBB1496alteredBB
  %5309 = load i8*, i8** %19, align 8, !dbg !5079
  %5310 = load i64, i64* %29, align 8, !dbg !5079
  %5311 = getelementptr inbounds i8, i8* %5309, i64 %5310, !dbg !5079
  store i8 36, i8* %5311, align 1, !dbg !5079
  %5312 = load i32, i32* @x.63
  %5313 = load i32, i32* @y.64
  %5314 = sub i32 %5312, 1
  %5315 = mul i32 %5312, %5314
  %5316 = urem i32 %5315, 2
  %5317 = icmp eq i32 %5316, 0
  %5318 = icmp slt i32 %5313, 10
  %5319 = or i1 %5317, %5318
  br i1 %5319, label %originalBBpart21498, label %originalBB1496alteredBB

originalBBpart21498:                              ; preds = %originalBB1496
  br label %5320, !dbg !5079

5320:                                             ; preds = %originalBBpart21498, %5296
  %5321 = load i32, i32* @x.63
  %5322 = load i32, i32* @y.64
  %5323 = sub i32 %5321, 1
  %5324 = mul i32 %5321, %5323
  %5325 = urem i32 %5324, 2
  %5326 = icmp eq i32 %5325, 0
  %5327 = icmp slt i32 %5322, 10
  %5328 = or i1 %5326, %5327
  br i1 %5328, label %originalBB1500, label %originalBB1500alteredBB

originalBB1500:                                   ; preds = %5320, %originalBB1500alteredBB
  %5329 = load i64, i64* %29, align 8, !dbg !5082
  %5330 = add i64 %5329, 1, !dbg !5082
  store i64 %5330, i64* %29, align 8, !dbg !5082
  %5331 = load i32, i32* @x.63
  %5332 = load i32, i32* @y.64
  %5333 = sub i32 %5331, 1
  %5334 = mul i32 %5331, %5333
  %5335 = urem i32 %5334, 2
  %5336 = icmp eq i32 %5335, 0
  %5337 = icmp slt i32 %5332, 10
  %5338 = or i1 %5336, %5337
  br i1 %5338, label %originalBBpart21508, label %originalBB1500alteredBB

originalBBpart21508:                              ; preds = %originalBB1500
  br label %5339, !dbg !5082

5339:                                             ; preds = %originalBBpart21508
  %5340 = load i32, i32* @x.63
  %5341 = load i32, i32* @y.64
  %5342 = sub i32 %5340, 1
  %5343 = mul i32 %5340, %5342
  %5344 = urem i32 %5343, 2
  %5345 = icmp eq i32 %5344, 0
  %5346 = icmp slt i32 %5341, 10
  %5347 = or i1 %5345, %5346
  br i1 %5347, label %originalBB1510, label %originalBB1510alteredBB

originalBB1510:                                   ; preds = %5339, %originalBB1510alteredBB
  %5348 = load i32, i32* @x.63
  %5349 = load i32, i32* @y.64
  %5350 = sub i32 %5348, 1
  %5351 = mul i32 %5348, %5350
  %5352 = urem i32 %5351, 2
  %5353 = icmp eq i32 %5352, 0
  %5354 = icmp slt i32 %5349, 10
  %5355 = or i1 %5353, %5354
  br i1 %5355, label %originalBBpart21512, label %originalBB1510alteredBB

originalBBpart21512:                              ; preds = %originalBB1510
  br label %5356, !dbg !5073

5356:                                             ; preds = %originalBBpart21512
  %5357 = load i32, i32* @x.63
  %5358 = load i32, i32* @y.64
  %5359 = sub i32 %5357, 1
  %5360 = mul i32 %5357, %5359
  %5361 = urem i32 %5360, 2
  %5362 = icmp eq i32 %5361, 0
  %5363 = icmp slt i32 %5358, 10
  %5364 = or i1 %5362, %5363
  br i1 %5364, label %originalBB1514, label %originalBB1514alteredBB

originalBB1514:                                   ; preds = %5356, %originalBB1514alteredBB
  %5365 = load i64, i64* %29, align 8, !dbg !5083
  %5366 = load i64, i64* %20, align 8, !dbg !5083
  %5367 = icmp ult i64 %5365, %5366, !dbg !5083
  %5368 = load i32, i32* @x.63
  %5369 = load i32, i32* @y.64
  %5370 = sub i32 %5368, 1
  %5371 = mul i32 %5368, %5370
  %5372 = urem i32 %5371, 2
  %5373 = icmp eq i32 %5372, 0
  %5374 = icmp slt i32 %5369, 10
  %5375 = or i1 %5373, %5374
  br i1 %5375, label %originalBBpart21516, label %originalBB1514alteredBB

originalBBpart21516:                              ; preds = %originalBB1514
  br i1 %5367, label %5376, label %5396, !dbg !5086

5376:                                             ; preds = %originalBBpart21516
  %5377 = load i32, i32* @x.63
  %5378 = load i32, i32* @y.64
  %5379 = sub i32 %5377, 1
  %5380 = mul i32 %5377, %5379
  %5381 = urem i32 %5380, 2
  %5382 = icmp eq i32 %5381, 0
  %5383 = icmp slt i32 %5378, 10
  %5384 = or i1 %5382, %5383
  br i1 %5384, label %originalBB1518, label %originalBB1518alteredBB

originalBB1518:                                   ; preds = %5376, %originalBB1518alteredBB
  %5385 = load i8*, i8** %19, align 8, !dbg !5083
  %5386 = load i64, i64* %29, align 8, !dbg !5083
  %5387 = getelementptr inbounds i8, i8* %5385, i64 %5386, !dbg !5083
  store i8 39, i8* %5387, align 1, !dbg !5083
  %5388 = load i32, i32* @x.63
  %5389 = load i32, i32* @y.64
  %5390 = sub i32 %5388, 1
  %5391 = mul i32 %5388, %5390
  %5392 = urem i32 %5391, 2
  %5393 = icmp eq i32 %5392, 0
  %5394 = icmp slt i32 %5389, 10
  %5395 = or i1 %5393, %5394
  br i1 %5395, label %originalBBpart21520, label %originalBB1518alteredBB

originalBBpart21520:                              ; preds = %originalBB1518
  br label %5396, !dbg !5083

5396:                                             ; preds = %originalBBpart21520, %originalBBpart21516
  %5397 = load i32, i32* @x.63
  %5398 = load i32, i32* @y.64
  %5399 = sub i32 %5397, 1
  %5400 = mul i32 %5397, %5399
  %5401 = urem i32 %5400, 2
  %5402 = icmp eq i32 %5401, 0
  %5403 = icmp slt i32 %5398, 10
  %5404 = or i1 %5402, %5403
  br i1 %5404, label %originalBB1522, label %originalBB1522alteredBB

originalBB1522:                                   ; preds = %5396, %originalBB1522alteredBB
  %5405 = load i64, i64* %29, align 8, !dbg !5086
  %5406 = add i64 %5405, 1, !dbg !5086
  store i64 %5406, i64* %29, align 8, !dbg !5086
  %5407 = load i32, i32* @x.63
  %5408 = load i32, i32* @y.64
  %5409 = sub i32 %5407, 1
  %5410 = mul i32 %5407, %5409
  %5411 = urem i32 %5410, 2
  %5412 = icmp eq i32 %5411, 0
  %5413 = icmp slt i32 %5408, 10
  %5414 = or i1 %5412, %5413
  br i1 %5414, label %originalBBpart21533, label %originalBB1522alteredBB

originalBBpart21533:                              ; preds = %originalBB1522
  br label %5415, !dbg !5086

5415:                                             ; preds = %originalBBpart21533
  store i8 1, i8* %36, align 1, !dbg !5073
  br label %5416, !dbg !5073

5416:                                             ; preds = %5415, %originalBBpart21478, %originalBBpart21474
  %5417 = load i32, i32* @x.63
  %5418 = load i32, i32* @y.64
  %5419 = sub i32 %5417, 1
  %5420 = mul i32 %5417, %5419
  %5421 = urem i32 %5420, 2
  %5422 = icmp eq i32 %5421, 0
  %5423 = icmp slt i32 %5418, 10
  %5424 = or i1 %5422, %5423
  br i1 %5424, label %originalBB1535, label %originalBB1535alteredBB

originalBB1535:                                   ; preds = %5416, %originalBB1535alteredBB
  %5425 = load i32, i32* @x.63
  %5426 = load i32, i32* @y.64
  %5427 = sub i32 %5425, 1
  %5428 = mul i32 %5425, %5427
  %5429 = urem i32 %5428, 2
  %5430 = icmp eq i32 %5429, 0
  %5431 = icmp slt i32 %5426, 10
  %5432 = or i1 %5430, %5431
  br i1 %5432, label %originalBBpart21537, label %originalBB1535alteredBB

originalBBpart21537:                              ; preds = %originalBB1535
  br label %5433, !dbg !5070

5433:                                             ; preds = %originalBBpart21537
  %5434 = load i32, i32* @x.63
  %5435 = load i32, i32* @y.64
  %5436 = sub i32 %5434, 1
  %5437 = mul i32 %5434, %5436
  %5438 = urem i32 %5437, 2
  %5439 = icmp eq i32 %5438, 0
  %5440 = icmp slt i32 %5435, 10
  %5441 = or i1 %5439, %5440
  br i1 %5441, label %originalBB1539, label %originalBB1539alteredBB

originalBB1539:                                   ; preds = %5433, %originalBB1539alteredBB
  %5442 = load i64, i64* %29, align 8, !dbg !5087
  %5443 = load i64, i64* %20, align 8, !dbg !5087
  %5444 = icmp ult i64 %5442, %5443, !dbg !5087
  %5445 = load i32, i32* @x.63
  %5446 = load i32, i32* @y.64
  %5447 = sub i32 %5445, 1
  %5448 = mul i32 %5445, %5447
  %5449 = urem i32 %5448, 2
  %5450 = icmp eq i32 %5449, 0
  %5451 = icmp slt i32 %5446, 10
  %5452 = or i1 %5450, %5451
  br i1 %5452, label %originalBBpart21541, label %originalBB1539alteredBB

originalBBpart21541:                              ; preds = %originalBB1539
  br i1 %5444, label %5453, label %5473, !dbg !5090

5453:                                             ; preds = %originalBBpart21541
  %5454 = load i32, i32* @x.63
  %5455 = load i32, i32* @y.64
  %5456 = sub i32 %5454, 1
  %5457 = mul i32 %5454, %5456
  %5458 = urem i32 %5457, 2
  %5459 = icmp eq i32 %5458, 0
  %5460 = icmp slt i32 %5455, 10
  %5461 = or i1 %5459, %5460
  br i1 %5461, label %originalBB1543, label %originalBB1543alteredBB

originalBB1543:                                   ; preds = %5453, %originalBB1543alteredBB
  %5462 = load i8*, i8** %19, align 8, !dbg !5087
  %5463 = load i64, i64* %29, align 8, !dbg !5087
  %5464 = getelementptr inbounds i8, i8* %5462, i64 %5463, !dbg !5087
  store i8 92, i8* %5464, align 1, !dbg !5087
  %5465 = load i32, i32* @x.63
  %5466 = load i32, i32* @y.64
  %5467 = sub i32 %5465, 1
  %5468 = mul i32 %5465, %5467
  %5469 = urem i32 %5468, 2
  %5470 = icmp eq i32 %5469, 0
  %5471 = icmp slt i32 %5466, 10
  %5472 = or i1 %5470, %5471
  br i1 %5472, label %originalBBpart21545, label %originalBB1543alteredBB

originalBBpart21545:                              ; preds = %originalBB1543
  br label %5473, !dbg !5087

5473:                                             ; preds = %originalBBpart21545, %originalBBpart21541
  %5474 = load i32, i32* @x.63
  %5475 = load i32, i32* @y.64
  %5476 = sub i32 %5474, 1
  %5477 = mul i32 %5474, %5476
  %5478 = urem i32 %5477, 2
  %5479 = icmp eq i32 %5478, 0
  %5480 = icmp slt i32 %5475, 10
  %5481 = or i1 %5479, %5480
  br i1 %5481, label %originalBB1547, label %originalBB1547alteredBB

originalBB1547:                                   ; preds = %5473, %originalBB1547alteredBB
  %5482 = load i64, i64* %29, align 8, !dbg !5090
  %5483 = add i64 %5482, 1, !dbg !5090
  store i64 %5483, i64* %29, align 8, !dbg !5090
  %5484 = load i32, i32* @x.63
  %5485 = load i32, i32* @y.64
  %5486 = sub i32 %5484, 1
  %5487 = mul i32 %5484, %5486
  %5488 = urem i32 %5487, 2
  %5489 = icmp eq i32 %5488, 0
  %5490 = icmp slt i32 %5485, 10
  %5491 = or i1 %5489, %5490
  br i1 %5491, label %originalBBpart21557, label %originalBB1547alteredBB

originalBBpart21557:                              ; preds = %originalBB1547
  br label %5492, !dbg !5090

5492:                                             ; preds = %originalBBpart21557
  %5493 = load i32, i32* @x.63
  %5494 = load i32, i32* @y.64
  %5495 = sub i32 %5493, 1
  %5496 = mul i32 %5493, %5495
  %5497 = urem i32 %5496, 2
  %5498 = icmp eq i32 %5497, 0
  %5499 = icmp slt i32 %5494, 10
  %5500 = or i1 %5498, %5499
  br i1 %5500, label %originalBB1559, label %originalBB1559alteredBB

originalBB1559:                                   ; preds = %5492, %originalBB1559alteredBB
  %5501 = load i32, i32* @x.63
  %5502 = load i32, i32* @y.64
  %5503 = sub i32 %5501, 1
  %5504 = mul i32 %5501, %5503
  %5505 = urem i32 %5504, 2
  %5506 = icmp eq i32 %5505, 0
  %5507 = icmp slt i32 %5502, 10
  %5508 = or i1 %5506, %5507
  br i1 %5508, label %originalBBpart21561, label %originalBB1559alteredBB

originalBBpart21561:                              ; preds = %originalBB1559
  br label %5509, !dbg !5070

5509:                                             ; preds = %originalBBpart21561
  %5510 = load i32, i32* @x.63
  %5511 = load i32, i32* @y.64
  %5512 = sub i32 %5510, 1
  %5513 = mul i32 %5510, %5512
  %5514 = urem i32 %5513, 2
  %5515 = icmp eq i32 %5514, 0
  %5516 = icmp slt i32 %5511, 10
  %5517 = or i1 %5515, %5516
  br i1 %5517, label %originalBB1563, label %originalBB1563alteredBB

originalBB1563:                                   ; preds = %5509, %originalBB1563alteredBB
  %5518 = load i32, i32* @x.63
  %5519 = load i32, i32* @y.64
  %5520 = sub i32 %5518, 1
  %5521 = mul i32 %5518, %5520
  %5522 = urem i32 %5521, 2
  %5523 = icmp eq i32 %5522, 0
  %5524 = icmp slt i32 %5519, 10
  %5525 = or i1 %5523, %5524
  br i1 %5525, label %originalBBpart21565, label %originalBB1563alteredBB

originalBBpart21565:                              ; preds = %originalBB1563
  br label %5526, !dbg !5070

5526:                                             ; preds = %originalBBpart21565, %originalBBpart21454, %originalBBpart21388, %originalBBpart2635, %originalBBpart2619
  call void @llvm.dbg.label(metadata !5091), !dbg !5092
  br label %5527, !dbg !5093

5527:                                             ; preds = %5526
  %5528 = load i32, i32* @x.63
  %5529 = load i32, i32* @y.64
  %5530 = sub i32 %5528, 1
  %5531 = mul i32 %5528, %5530
  %5532 = urem i32 %5531, 2
  %5533 = icmp eq i32 %5532, 0
  %5534 = icmp slt i32 %5529, 10
  %5535 = or i1 %5533, %5534
  br i1 %5535, label %originalBB1567, label %originalBB1567alteredBB

originalBB1567:                                   ; preds = %5527, %originalBB1567alteredBB
  %5536 = load i8, i8* %36, align 1, !dbg !5094
  %5537 = trunc i8 %5536 to i1, !dbg !5094
  %5538 = load i32, i32* @x.63
  %5539 = load i32, i32* @y.64
  %5540 = sub i32 %5538, 1
  %5541 = mul i32 %5538, %5540
  %5542 = urem i32 %5541, 2
  %5543 = icmp eq i32 %5542, 0
  %5544 = icmp slt i32 %5539, 10
  %5545 = or i1 %5543, %5544
  br i1 %5545, label %originalBBpart21569, label %originalBB1567alteredBB

originalBBpart21569:                              ; preds = %originalBB1567
  br i1 %5537, label %5546, label %5718, !dbg !5094

5546:                                             ; preds = %originalBBpart21569
  %5547 = load i32, i32* @x.63
  %5548 = load i32, i32* @y.64
  %5549 = sub i32 %5547, 1
  %5550 = mul i32 %5547, %5549
  %5551 = urem i32 %5550, 2
  %5552 = icmp eq i32 %5551, 0
  %5553 = icmp slt i32 %5548, 10
  %5554 = or i1 %5552, %5553
  br i1 %5554, label %originalBB1571, label %originalBB1571alteredBB

originalBB1571:                                   ; preds = %5546, %originalBB1571alteredBB
  %5555 = load i8, i8* %42, align 1, !dbg !5094
  %5556 = trunc i8 %5555 to i1, !dbg !5094
  %5557 = load i32, i32* @x.63
  %5558 = load i32, i32* @y.64
  %5559 = sub i32 %5557, 1
  %5560 = mul i32 %5557, %5559
  %5561 = urem i32 %5560, 2
  %5562 = icmp eq i32 %5561, 0
  %5563 = icmp slt i32 %5558, 10
  %5564 = or i1 %5562, %5563
  br i1 %5564, label %originalBBpart21573, label %originalBB1571alteredBB

originalBBpart21573:                              ; preds = %originalBB1571
  br i1 %5556, label %5718, label %5565, !dbg !5097

5565:                                             ; preds = %originalBBpart21573
  %5566 = load i32, i32* @x.63
  %5567 = load i32, i32* @y.64
  %5568 = sub i32 %5566, 1
  %5569 = mul i32 %5566, %5568
  %5570 = urem i32 %5569, 2
  %5571 = icmp eq i32 %5570, 0
  %5572 = icmp slt i32 %5567, 10
  %5573 = or i1 %5571, %5572
  br i1 %5573, label %originalBB1575, label %originalBB1575alteredBB

originalBB1575:                                   ; preds = %5565, %originalBB1575alteredBB
  %5574 = load i32, i32* @x.63
  %5575 = load i32, i32* @y.64
  %5576 = sub i32 %5574, 1
  %5577 = mul i32 %5574, %5576
  %5578 = urem i32 %5577, 2
  %5579 = icmp eq i32 %5578, 0
  %5580 = icmp slt i32 %5575, 10
  %5581 = or i1 %5579, %5580
  br i1 %5581, label %originalBBpart21577, label %originalBB1575alteredBB

originalBBpart21577:                              ; preds = %originalBB1575
  br label %5582, !dbg !5098

5582:                                             ; preds = %originalBBpart21577
  %5583 = load i32, i32* @x.63
  %5584 = load i32, i32* @y.64
  %5585 = sub i32 %5583, 1
  %5586 = mul i32 %5583, %5585
  %5587 = urem i32 %5586, 2
  %5588 = icmp eq i32 %5587, 0
  %5589 = icmp slt i32 %5584, 10
  %5590 = or i1 %5588, %5589
  br i1 %5590, label %originalBB1579, label %originalBB1579alteredBB

originalBB1579:                                   ; preds = %5582, %originalBB1579alteredBB
  %5591 = load i64, i64* %29, align 8, !dbg !5100
  %5592 = load i64, i64* %20, align 8, !dbg !5100
  %5593 = icmp ult i64 %5591, %5592, !dbg !5100
  %5594 = load i32, i32* @x.63
  %5595 = load i32, i32* @y.64
  %5596 = sub i32 %5594, 1
  %5597 = mul i32 %5594, %5596
  %5598 = urem i32 %5597, 2
  %5599 = icmp eq i32 %5598, 0
  %5600 = icmp slt i32 %5595, 10
  %5601 = or i1 %5599, %5600
  br i1 %5601, label %originalBBpart21581, label %originalBB1579alteredBB

originalBBpart21581:                              ; preds = %originalBB1579
  br i1 %5593, label %5602, label %5622, !dbg !5103

5602:                                             ; preds = %originalBBpart21581
  %5603 = load i32, i32* @x.63
  %5604 = load i32, i32* @y.64
  %5605 = sub i32 %5603, 1
  %5606 = mul i32 %5603, %5605
  %5607 = urem i32 %5606, 2
  %5608 = icmp eq i32 %5607, 0
  %5609 = icmp slt i32 %5604, 10
  %5610 = or i1 %5608, %5609
  br i1 %5610, label %originalBB1583, label %originalBB1583alteredBB

originalBB1583:                                   ; preds = %5602, %originalBB1583alteredBB
  %5611 = load i8*, i8** %19, align 8, !dbg !5100
  %5612 = load i64, i64* %29, align 8, !dbg !5100
  %5613 = getelementptr inbounds i8, i8* %5611, i64 %5612, !dbg !5100
  store i8 39, i8* %5613, align 1, !dbg !5100
  %5614 = load i32, i32* @x.63
  %5615 = load i32, i32* @y.64
  %5616 = sub i32 %5614, 1
  %5617 = mul i32 %5614, %5616
  %5618 = urem i32 %5617, 2
  %5619 = icmp eq i32 %5618, 0
  %5620 = icmp slt i32 %5615, 10
  %5621 = or i1 %5619, %5620
  br i1 %5621, label %originalBBpart21585, label %originalBB1583alteredBB

originalBBpart21585:                              ; preds = %originalBB1583
  br label %5622, !dbg !5100

5622:                                             ; preds = %originalBBpart21585, %originalBBpart21581
  %5623 = load i32, i32* @x.63
  %5624 = load i32, i32* @y.64
  %5625 = sub i32 %5623, 1
  %5626 = mul i32 %5623, %5625
  %5627 = urem i32 %5626, 2
  %5628 = icmp eq i32 %5627, 0
  %5629 = icmp slt i32 %5624, 10
  %5630 = or i1 %5628, %5629
  br i1 %5630, label %originalBB1587, label %originalBB1587alteredBB

originalBB1587:                                   ; preds = %5622, %originalBB1587alteredBB
  %5631 = load i64, i64* %29, align 8, !dbg !5103
  %5632 = add i64 %5631, 1, !dbg !5103
  store i64 %5632, i64* %29, align 8, !dbg !5103
  %5633 = load i32, i32* @x.63
  %5634 = load i32, i32* @y.64
  %5635 = sub i32 %5633, 1
  %5636 = mul i32 %5633, %5635
  %5637 = urem i32 %5636, 2
  %5638 = icmp eq i32 %5637, 0
  %5639 = icmp slt i32 %5634, 10
  %5640 = or i1 %5638, %5639
  br i1 %5640, label %originalBBpart21602, label %originalBB1587alteredBB

originalBBpart21602:                              ; preds = %originalBB1587
  br label %5641, !dbg !5103

5641:                                             ; preds = %originalBBpart21602
  br label %5642, !dbg !5098

5642:                                             ; preds = %5641
  %5643 = load i32, i32* @x.63
  %5644 = load i32, i32* @y.64
  %5645 = sub i32 %5643, 1
  %5646 = mul i32 %5643, %5645
  %5647 = urem i32 %5646, 2
  %5648 = icmp eq i32 %5647, 0
  %5649 = icmp slt i32 %5644, 10
  %5650 = or i1 %5648, %5649
  br i1 %5650, label %originalBB1604, label %originalBB1604alteredBB

originalBB1604:                                   ; preds = %5642, %originalBB1604alteredBB
  %5651 = load i64, i64* %29, align 8, !dbg !5104
  %5652 = load i64, i64* %20, align 8, !dbg !5104
  %5653 = icmp ult i64 %5651, %5652, !dbg !5104
  %5654 = load i32, i32* @x.63
  %5655 = load i32, i32* @y.64
  %5656 = sub i32 %5654, 1
  %5657 = mul i32 %5654, %5656
  %5658 = urem i32 %5657, 2
  %5659 = icmp eq i32 %5658, 0
  %5660 = icmp slt i32 %5655, 10
  %5661 = or i1 %5659, %5660
  br i1 %5661, label %originalBBpart21606, label %originalBB1604alteredBB

originalBBpart21606:                              ; preds = %originalBB1604
  br i1 %5653, label %5662, label %5682, !dbg !5107

5662:                                             ; preds = %originalBBpart21606
  %5663 = load i32, i32* @x.63
  %5664 = load i32, i32* @y.64
  %5665 = sub i32 %5663, 1
  %5666 = mul i32 %5663, %5665
  %5667 = urem i32 %5666, 2
  %5668 = icmp eq i32 %5667, 0
  %5669 = icmp slt i32 %5664, 10
  %5670 = or i1 %5668, %5669
  br i1 %5670, label %originalBB1608, label %originalBB1608alteredBB

originalBB1608:                                   ; preds = %5662, %originalBB1608alteredBB
  %5671 = load i8*, i8** %19, align 8, !dbg !5104
  %5672 = load i64, i64* %29, align 8, !dbg !5104
  %5673 = getelementptr inbounds i8, i8* %5671, i64 %5672, !dbg !5104
  store i8 39, i8* %5673, align 1, !dbg !5104
  %5674 = load i32, i32* @x.63
  %5675 = load i32, i32* @y.64
  %5676 = sub i32 %5674, 1
  %5677 = mul i32 %5674, %5676
  %5678 = urem i32 %5677, 2
  %5679 = icmp eq i32 %5678, 0
  %5680 = icmp slt i32 %5675, 10
  %5681 = or i1 %5679, %5680
  br i1 %5681, label %originalBBpart21610, label %originalBB1608alteredBB

originalBBpart21610:                              ; preds = %originalBB1608
  br label %5682, !dbg !5104

5682:                                             ; preds = %originalBBpart21610, %originalBBpart21606
  %5683 = load i32, i32* @x.63
  %5684 = load i32, i32* @y.64
  %5685 = sub i32 %5683, 1
  %5686 = mul i32 %5683, %5685
  %5687 = urem i32 %5686, 2
  %5688 = icmp eq i32 %5687, 0
  %5689 = icmp slt i32 %5684, 10
  %5690 = or i1 %5688, %5689
  br i1 %5690, label %originalBB1612, label %originalBB1612alteredBB

originalBB1612:                                   ; preds = %5682, %originalBB1612alteredBB
  %5691 = load i64, i64* %29, align 8, !dbg !5107
  %5692 = add i64 %5691, 1, !dbg !5107
  store i64 %5692, i64* %29, align 8, !dbg !5107
  %5693 = load i32, i32* @x.63
  %5694 = load i32, i32* @y.64
  %5695 = sub i32 %5693, 1
  %5696 = mul i32 %5693, %5695
  %5697 = urem i32 %5696, 2
  %5698 = icmp eq i32 %5697, 0
  %5699 = icmp slt i32 %5694, 10
  %5700 = or i1 %5698, %5699
  br i1 %5700, label %originalBBpart21616, label %originalBB1612alteredBB

originalBBpart21616:                              ; preds = %originalBB1612
  br label %5701, !dbg !5107

5701:                                             ; preds = %originalBBpart21616
  %5702 = load i32, i32* @x.63
  %5703 = load i32, i32* @y.64
  %5704 = sub i32 %5702, 1
  %5705 = mul i32 %5702, %5704
  %5706 = urem i32 %5705, 2
  %5707 = icmp eq i32 %5706, 0
  %5708 = icmp slt i32 %5703, 10
  %5709 = or i1 %5707, %5708
  br i1 %5709, label %originalBB1618, label %originalBB1618alteredBB

originalBB1618:                                   ; preds = %5701, %originalBB1618alteredBB
  store i8 0, i8* %36, align 1, !dbg !5098
  %5710 = load i32, i32* @x.63
  %5711 = load i32, i32* @y.64
  %5712 = sub i32 %5710, 1
  %5713 = mul i32 %5710, %5712
  %5714 = urem i32 %5713, 2
  %5715 = icmp eq i32 %5714, 0
  %5716 = icmp slt i32 %5711, 10
  %5717 = or i1 %5715, %5716
  br i1 %5717, label %originalBBpart21620, label %originalBB1618alteredBB

originalBBpart21620:                              ; preds = %originalBB1618
  br label %5718, !dbg !5098

5718:                                             ; preds = %originalBBpart21620, %originalBBpart21573, %originalBBpart21569
  %5719 = load i32, i32* @x.63
  %5720 = load i32, i32* @y.64
  %5721 = sub i32 %5719, 1
  %5722 = mul i32 %5719, %5721
  %5723 = urem i32 %5722, 2
  %5724 = icmp eq i32 %5723, 0
  %5725 = icmp slt i32 %5720, 10
  %5726 = or i1 %5724, %5725
  br i1 %5726, label %originalBB1622, label %originalBB1622alteredBB

originalBB1622:                                   ; preds = %5718, %originalBB1622alteredBB
  %5727 = load i32, i32* @x.63
  %5728 = load i32, i32* @y.64
  %5729 = sub i32 %5727, 1
  %5730 = mul i32 %5727, %5729
  %5731 = urem i32 %5730, 2
  %5732 = icmp eq i32 %5731, 0
  %5733 = icmp slt i32 %5728, 10
  %5734 = or i1 %5732, %5733
  br i1 %5734, label %originalBBpart21624, label %originalBB1622alteredBB

originalBBpart21624:                              ; preds = %originalBB1622
  br label %5735, !dbg !5097

5735:                                             ; preds = %originalBBpart21624
  %5736 = load i32, i32* @x.63
  %5737 = load i32, i32* @y.64
  %5738 = sub i32 %5736, 1
  %5739 = mul i32 %5736, %5738
  %5740 = urem i32 %5739, 2
  %5741 = icmp eq i32 %5740, 0
  %5742 = icmp slt i32 %5737, 10
  %5743 = or i1 %5741, %5742
  br i1 %5743, label %originalBB1626, label %originalBB1626alteredBB

originalBB1626:                                   ; preds = %5735, %originalBB1626alteredBB
  %5744 = load i32, i32* @x.63
  %5745 = load i32, i32* @y.64
  %5746 = sub i32 %5744, 1
  %5747 = mul i32 %5744, %5746
  %5748 = urem i32 %5747, 2
  %5749 = icmp eq i32 %5748, 0
  %5750 = icmp slt i32 %5745, 10
  %5751 = or i1 %5749, %5750
  br i1 %5751, label %originalBBpart21628, label %originalBB1626alteredBB

originalBBpart21628:                              ; preds = %originalBB1626
  br label %5752, !dbg !5108

5752:                                             ; preds = %originalBBpart21628
  %5753 = load i32, i32* @x.63
  %5754 = load i32, i32* @y.64
  %5755 = sub i32 %5753, 1
  %5756 = mul i32 %5753, %5755
  %5757 = urem i32 %5756, 2
  %5758 = icmp eq i32 %5757, 0
  %5759 = icmp slt i32 %5754, 10
  %5760 = or i1 %5758, %5759
  br i1 %5760, label %originalBB1630, label %originalBB1630alteredBB

originalBB1630:                                   ; preds = %5752, %originalBB1630alteredBB
  %5761 = load i64, i64* %29, align 8, !dbg !5109
  %5762 = load i64, i64* %20, align 8, !dbg !5109
  %5763 = icmp ult i64 %5761, %5762, !dbg !5109
  %5764 = load i32, i32* @x.63
  %5765 = load i32, i32* @y.64
  %5766 = sub i32 %5764, 1
  %5767 = mul i32 %5764, %5766
  %5768 = urem i32 %5767, 2
  %5769 = icmp eq i32 %5768, 0
  %5770 = icmp slt i32 %5765, 10
  %5771 = or i1 %5769, %5770
  br i1 %5771, label %originalBBpart21632, label %originalBB1630alteredBB

originalBBpart21632:                              ; preds = %originalBB1630
  br i1 %5763, label %5772, label %5793, !dbg !5112

5772:                                             ; preds = %originalBBpart21632
  %5773 = load i32, i32* @x.63
  %5774 = load i32, i32* @y.64
  %5775 = sub i32 %5773, 1
  %5776 = mul i32 %5773, %5775
  %5777 = urem i32 %5776, 2
  %5778 = icmp eq i32 %5777, 0
  %5779 = icmp slt i32 %5774, 10
  %5780 = or i1 %5778, %5779
  br i1 %5780, label %originalBB1634, label %originalBB1634alteredBB

originalBB1634:                                   ; preds = %5772, %originalBB1634alteredBB
  %5781 = load i8, i8* %39, align 1, !dbg !5109
  %5782 = load i8*, i8** %19, align 8, !dbg !5109
  %5783 = load i64, i64* %29, align 8, !dbg !5109
  %5784 = getelementptr inbounds i8, i8* %5782, i64 %5783, !dbg !5109
  store i8 %5781, i8* %5784, align 1, !dbg !5109
  %5785 = load i32, i32* @x.63
  %5786 = load i32, i32* @y.64
  %5787 = sub i32 %5785, 1
  %5788 = mul i32 %5785, %5787
  %5789 = urem i32 %5788, 2
  %5790 = icmp eq i32 %5789, 0
  %5791 = icmp slt i32 %5786, 10
  %5792 = or i1 %5790, %5791
  br i1 %5792, label %originalBBpart21636, label %originalBB1634alteredBB

originalBBpart21636:                              ; preds = %originalBB1634
  br label %5793, !dbg !5109

5793:                                             ; preds = %originalBBpart21636, %originalBBpart21632
  %5794 = load i32, i32* @x.63
  %5795 = load i32, i32* @y.64
  %5796 = sub i32 %5794, 1
  %5797 = mul i32 %5794, %5796
  %5798 = urem i32 %5797, 2
  %5799 = icmp eq i32 %5798, 0
  %5800 = icmp slt i32 %5795, 10
  %5801 = or i1 %5799, %5800
  br i1 %5801, label %originalBB1638, label %originalBB1638alteredBB

originalBB1638:                                   ; preds = %5793, %originalBB1638alteredBB
  %5802 = load i64, i64* %29, align 8, !dbg !5112
  %5803 = add i64 %5802, 1, !dbg !5112
  store i64 %5803, i64* %29, align 8, !dbg !5112
  %5804 = load i32, i32* @x.63
  %5805 = load i32, i32* @y.64
  %5806 = sub i32 %5804, 1
  %5807 = mul i32 %5804, %5806
  %5808 = urem i32 %5807, 2
  %5809 = icmp eq i32 %5808, 0
  %5810 = icmp slt i32 %5805, 10
  %5811 = or i1 %5809, %5810
  br i1 %5811, label %originalBBpart21643, label %originalBB1638alteredBB

originalBBpart21643:                              ; preds = %originalBB1638
  br label %5812, !dbg !5112

5812:                                             ; preds = %originalBBpart21643
  %5813 = load i32, i32* @x.63
  %5814 = load i32, i32* @y.64
  %5815 = sub i32 %5813, 1
  %5816 = mul i32 %5813, %5815
  %5817 = urem i32 %5816, 2
  %5818 = icmp eq i32 %5817, 0
  %5819 = icmp slt i32 %5814, 10
  %5820 = or i1 %5818, %5819
  br i1 %5820, label %originalBB1645, label %originalBB1645alteredBB

originalBB1645:                                   ; preds = %5812, %originalBB1645alteredBB
  %5821 = load i8, i8* %43, align 1, !dbg !5113
  %5822 = trunc i8 %5821 to i1, !dbg !5113
  %5823 = load i32, i32* @x.63
  %5824 = load i32, i32* @y.64
  %5825 = sub i32 %5823, 1
  %5826 = mul i32 %5823, %5825
  %5827 = urem i32 %5826, 2
  %5828 = icmp eq i32 %5827, 0
  %5829 = icmp slt i32 %5824, 10
  %5830 = or i1 %5828, %5829
  br i1 %5830, label %originalBBpart21647, label %originalBB1645alteredBB

originalBBpart21647:                              ; preds = %originalBB1645
  br i1 %5822, label %5832, label %5831, !dbg !5115

5831:                                             ; preds = %originalBBpart21647
  store i8 0, i8* %38, align 1, !dbg !5116
  br label %5832, !dbg !5117

5832:                                             ; preds = %5831, %originalBBpart21647
  %5833 = load i32, i32* @x.63
  %5834 = load i32, i32* @y.64
  %5835 = sub i32 %5833, 1
  %5836 = mul i32 %5833, %5835
  %5837 = urem i32 %5836, 2
  %5838 = icmp eq i32 %5837, 0
  %5839 = icmp slt i32 %5834, 10
  %5840 = or i1 %5838, %5839
  br i1 %5840, label %originalBB1649, label %originalBB1649alteredBB

originalBB1649:                                   ; preds = %5832, %originalBB1649alteredBB
  %5841 = load i32, i32* @x.63
  %5842 = load i32, i32* @y.64
  %5843 = sub i32 %5841, 1
  %5844 = mul i32 %5841, %5843
  %5845 = urem i32 %5844, 2
  %5846 = icmp eq i32 %5845, 0
  %5847 = icmp slt i32 %5842, 10
  %5848 = or i1 %5846, %5847
  br i1 %5848, label %originalBBpart21651, label %originalBB1649alteredBB

originalBBpart21651:                              ; preds = %originalBB1649
  br label %5849, !dbg !5118

5849:                                             ; preds = %originalBBpart21651, %originalBBpart2403
  %5850 = load i32, i32* @x.63
  %5851 = load i32, i32* @y.64
  %5852 = sub i32 %5850, 1
  %5853 = mul i32 %5850, %5852
  %5854 = urem i32 %5853, 2
  %5855 = icmp eq i32 %5854, 0
  %5856 = icmp slt i32 %5851, 10
  %5857 = or i1 %5855, %5856
  br i1 %5857, label %originalBB1653, label %originalBB1653alteredBB

originalBB1653:                                   ; preds = %5849, %originalBB1653alteredBB
  %5858 = load i64, i64* %28, align 8, !dbg !5119
  %5859 = add i64 %5858, 1, !dbg !5119
  store i64 %5859, i64* %28, align 8, !dbg !5119
  %5860 = load i32, i32* @x.63
  %5861 = load i32, i32* @y.64
  %5862 = sub i32 %5860, 1
  %5863 = mul i32 %5860, %5862
  %5864 = urem i32 %5863, 2
  %5865 = icmp eq i32 %5864, 0
  %5866 = icmp slt i32 %5861, 10
  %5867 = or i1 %5865, %5866
  br i1 %5867, label %originalBBpart21656, label %originalBB1653alteredBB

originalBBpart21656:                              ; preds = %originalBB1653
  br label %666, !dbg !5120, !llvm.loop !5121

5868:                                             ; preds = %originalBBpart2172
  %5869 = load i32, i32* @x.63
  %5870 = load i32, i32* @y.64
  %5871 = sub i32 %5869, 1
  %5872 = mul i32 %5869, %5871
  %5873 = urem i32 %5872, 2
  %5874 = icmp eq i32 %5873, 0
  %5875 = icmp slt i32 %5870, 10
  %5876 = or i1 %5874, %5875
  br i1 %5876, label %originalBB1658, label %originalBB1658alteredBB

originalBB1658:                                   ; preds = %5868, %originalBB1658alteredBB
  %5877 = load i64, i64* %29, align 8, !dbg !5123
  %5878 = icmp eq i64 %5877, 0, !dbg !5125
  %5879 = load i32, i32* @x.63
  %5880 = load i32, i32* @y.64
  %5881 = sub i32 %5879, 1
  %5882 = mul i32 %5879, %5881
  %5883 = urem i32 %5882, 2
  %5884 = icmp eq i32 %5883, 0
  %5885 = icmp slt i32 %5880, 10
  %5886 = or i1 %5884, %5885
  br i1 %5886, label %originalBBpart21660, label %originalBB1658alteredBB

originalBBpart21660:                              ; preds = %originalBB1658
  br i1 %5878, label %5887, label %5926, !dbg !5126

5887:                                             ; preds = %originalBBpart21660
  %5888 = load i32, i32* %23, align 4, !dbg !5127
  %5889 = icmp eq i32 %5888, 2, !dbg !5128
  br i1 %5889, label %5890, label %5926, !dbg !5129

5890:                                             ; preds = %5887
  %5891 = load i32, i32* @x.63
  %5892 = load i32, i32* @y.64
  %5893 = sub i32 %5891, 1
  %5894 = mul i32 %5891, %5893
  %5895 = urem i32 %5894, 2
  %5896 = icmp eq i32 %5895, 0
  %5897 = icmp slt i32 %5892, 10
  %5898 = or i1 %5896, %5897
  br i1 %5898, label %originalBB1662, label %originalBB1662alteredBB

originalBB1662:                                   ; preds = %5890, %originalBB1662alteredBB
  %5899 = load i8, i8* %35, align 1, !dbg !5130
  %5900 = trunc i8 %5899 to i1, !dbg !5130
  %5901 = load i32, i32* @x.63
  %5902 = load i32, i32* @y.64
  %5903 = sub i32 %5901, 1
  %5904 = mul i32 %5901, %5903
  %5905 = urem i32 %5904, 2
  %5906 = icmp eq i32 %5905, 0
  %5907 = icmp slt i32 %5902, 10
  %5908 = or i1 %5906, %5907
  br i1 %5908, label %originalBBpart21664, label %originalBB1662alteredBB

originalBBpart21664:                              ; preds = %originalBB1662
  br i1 %5900, label %5909, label %5926, !dbg !5131

5909:                                             ; preds = %originalBBpart21664
  %5910 = load i32, i32* @x.63
  %5911 = load i32, i32* @y.64
  %5912 = sub i32 %5910, 1
  %5913 = mul i32 %5910, %5912
  %5914 = urem i32 %5913, 2
  %5915 = icmp eq i32 %5914, 0
  %5916 = icmp slt i32 %5911, 10
  %5917 = or i1 %5915, %5916
  br i1 %5917, label %originalBB1666, label %originalBB1666alteredBB

originalBB1666:                                   ; preds = %5909, %originalBB1666alteredBB
  %5918 = load i32, i32* @x.63
  %5919 = load i32, i32* @y.64
  %5920 = sub i32 %5918, 1
  %5921 = mul i32 %5918, %5920
  %5922 = urem i32 %5921, 2
  %5923 = icmp eq i32 %5922, 0
  %5924 = icmp slt i32 %5919, 10
  %5925 = or i1 %5923, %5924
  br i1 %5925, label %originalBBpart21668, label %originalBB1666alteredBB

originalBBpart21668:                              ; preds = %originalBB1666
  br label %6366, !dbg !5132

5926:                                             ; preds = %originalBBpart21664, %5887, %originalBBpart21660
  %5927 = load i32, i32* @x.63
  %5928 = load i32, i32* @y.64
  %5929 = sub i32 %5927, 1
  %5930 = mul i32 %5927, %5929
  %5931 = urem i32 %5930, 2
  %5932 = icmp eq i32 %5931, 0
  %5933 = icmp slt i32 %5928, 10
  %5934 = or i1 %5932, %5933
  br i1 %5934, label %originalBB1670, label %originalBB1670alteredBB

originalBB1670:                                   ; preds = %5926, %originalBB1670alteredBB
  %5935 = load i32, i32* %23, align 4, !dbg !5133
  %5936 = icmp eq i32 %5935, 2, !dbg !5135
  %5937 = load i32, i32* @x.63
  %5938 = load i32, i32* @y.64
  %5939 = sub i32 %5937, 1
  %5940 = mul i32 %5937, %5939
  %5941 = urem i32 %5940, 2
  %5942 = icmp eq i32 %5941, 0
  %5943 = icmp slt i32 %5938, 10
  %5944 = or i1 %5942, %5943
  br i1 %5944, label %originalBBpart21672, label %originalBB1670alteredBB

originalBBpart21672:                              ; preds = %originalBB1670
  br i1 %5936, label %5945, label %6102, !dbg !5136

5945:                                             ; preds = %originalBBpart21672
  %5946 = load i32, i32* @x.63
  %5947 = load i32, i32* @y.64
  %5948 = sub i32 %5946, 1
  %5949 = mul i32 %5946, %5948
  %5950 = urem i32 %5949, 2
  %5951 = icmp eq i32 %5950, 0
  %5952 = icmp slt i32 %5947, 10
  %5953 = or i1 %5951, %5952
  br i1 %5953, label %originalBB1674, label %originalBB1674alteredBB

originalBB1674:                                   ; preds = %5945, %originalBB1674alteredBB
  %5954 = load i8, i8* %35, align 1, !dbg !5137
  %5955 = trunc i8 %5954 to i1, !dbg !5137
  %5956 = load i32, i32* @x.63
  %5957 = load i32, i32* @y.64
  %5958 = sub i32 %5956, 1
  %5959 = mul i32 %5956, %5958
  %5960 = urem i32 %5959, 2
  %5961 = icmp eq i32 %5960, 0
  %5962 = icmp slt i32 %5957, 10
  %5963 = or i1 %5961, %5962
  br i1 %5963, label %originalBBpart21676, label %originalBB1674alteredBB

originalBBpart21676:                              ; preds = %originalBB1674
  br i1 %5955, label %6102, label %5964, !dbg !5138

5964:                                             ; preds = %originalBBpart21676
  %5965 = load i32, i32* @x.63
  %5966 = load i32, i32* @y.64
  %5967 = sub i32 %5965, 1
  %5968 = mul i32 %5965, %5967
  %5969 = urem i32 %5968, 2
  %5970 = icmp eq i32 %5969, 0
  %5971 = icmp slt i32 %5966, 10
  %5972 = or i1 %5970, %5971
  br i1 %5972, label %originalBB1678, label %originalBB1678alteredBB

originalBB1678:                                   ; preds = %5964, %originalBB1678alteredBB
  %5973 = load i8, i8* %37, align 1, !dbg !5139
  %5974 = trunc i8 %5973 to i1, !dbg !5139
  %5975 = load i32, i32* @x.63
  %5976 = load i32, i32* @y.64
  %5977 = sub i32 %5975, 1
  %5978 = mul i32 %5975, %5977
  %5979 = urem i32 %5978, 2
  %5980 = icmp eq i32 %5979, 0
  %5981 = icmp slt i32 %5976, 10
  %5982 = or i1 %5980, %5981
  br i1 %5982, label %originalBBpart21680, label %originalBB1678alteredBB

originalBBpart21680:                              ; preds = %originalBB1678
  br i1 %5974, label %5983, label %6102, !dbg !5140

5983:                                             ; preds = %originalBBpart21680
  %5984 = load i32, i32* @x.63
  %5985 = load i32, i32* @y.64
  %5986 = sub i32 %5984, 1
  %5987 = mul i32 %5984, %5986
  %5988 = urem i32 %5987, 2
  %5989 = icmp eq i32 %5988, 0
  %5990 = icmp slt i32 %5985, 10
  %5991 = or i1 %5989, %5990
  br i1 %5991, label %originalBB1682, label %originalBB1682alteredBB

originalBB1682:                                   ; preds = %5983, %originalBB1682alteredBB
  %5992 = load i8, i8* %38, align 1, !dbg !5141
  %5993 = trunc i8 %5992 to i1, !dbg !5141
  %5994 = load i32, i32* @x.63
  %5995 = load i32, i32* @y.64
  %5996 = sub i32 %5994, 1
  %5997 = mul i32 %5994, %5996
  %5998 = urem i32 %5997, 2
  %5999 = icmp eq i32 %5998, 0
  %6000 = icmp slt i32 %5995, 10
  %6001 = or i1 %5999, %6000
  br i1 %6001, label %originalBBpart21684, label %originalBB1682alteredBB

originalBBpart21684:                              ; preds = %originalBB1682
  br i1 %5993, label %6002, label %6028, !dbg !5144

6002:                                             ; preds = %originalBBpart21684
  %6003 = load i32, i32* @x.63
  %6004 = load i32, i32* @y.64
  %6005 = sub i32 %6003, 1
  %6006 = mul i32 %6003, %6005
  %6007 = urem i32 %6006, 2
  %6008 = icmp eq i32 %6007, 0
  %6009 = icmp slt i32 %6004, 10
  %6010 = or i1 %6008, %6009
  br i1 %6010, label %originalBB1686, label %originalBB1686alteredBB

originalBB1686:                                   ; preds = %6002, %originalBB1686alteredBB
  %6011 = load i8*, i8** %19, align 8, !dbg !5145
  %6012 = load i64, i64* %30, align 8, !dbg !5146
  %6013 = load i8*, i8** %21, align 8, !dbg !5147
  %6014 = load i64, i64* %22, align 8, !dbg !5148
  %6015 = load i32, i32* %24, align 4, !dbg !5149
  %6016 = load i32*, i32** %25, align 8, !dbg !5150
  %6017 = load i8*, i8** %26, align 8, !dbg !5151
  %6018 = load i8*, i8** %27, align 8, !dbg !5152
  %6019 = call i64 @quotearg_buffer_restyled(i8* %6011, i64 %6012, i8* %6013, i64 %6014, i32 5, i32 %6015, i32* %6016, i8* %6017, i8* %6018), !dbg !5153
  store i64 %6019, i64* %18, align 8, !dbg !5154
  %6020 = load i32, i32* @x.63
  %6021 = load i32, i32* @y.64
  %6022 = sub i32 %6020, 1
  %6023 = mul i32 %6020, %6022
  %6024 = urem i32 %6023, 2
  %6025 = icmp eq i32 %6024, 0
  %6026 = icmp slt i32 %6021, 10
  %6027 = or i1 %6025, %6026
  br i1 %6027, label %originalBBpart21688, label %originalBB1686alteredBB

originalBBpart21688:                              ; preds = %originalBB1686
  br label %6448, !dbg !5154

6028:                                             ; preds = %originalBBpart21684
  %6029 = load i32, i32* @x.63
  %6030 = load i32, i32* @y.64
  %6031 = sub i32 %6029, 1
  %6032 = mul i32 %6029, %6031
  %6033 = urem i32 %6032, 2
  %6034 = icmp eq i32 %6033, 0
  %6035 = icmp slt i32 %6030, 10
  %6036 = or i1 %6034, %6035
  br i1 %6036, label %originalBB1690, label %originalBB1690alteredBB

originalBB1690:                                   ; preds = %6028, %originalBB1690alteredBB
  %6037 = load i64, i64* %20, align 8, !dbg !5155
  %6038 = icmp ne i64 %6037, 0, !dbg !5155
  %6039 = load i32, i32* @x.63
  %6040 = load i32, i32* @y.64
  %6041 = sub i32 %6039, 1
  %6042 = mul i32 %6039, %6041
  %6043 = urem i32 %6042, 2
  %6044 = icmp eq i32 %6043, 0
  %6045 = icmp slt i32 %6040, 10
  %6046 = or i1 %6044, %6045
  br i1 %6046, label %originalBBpart21692, label %originalBB1690alteredBB

originalBBpart21692:                              ; preds = %originalBB1690
  br i1 %6038, label %6068, label %6047, !dbg !5157

6047:                                             ; preds = %originalBBpart21692
  %6048 = load i64, i64* %30, align 8, !dbg !5158
  %6049 = icmp ne i64 %6048, 0, !dbg !5158
  br i1 %6049, label %6050, label %6068, !dbg !5159

6050:                                             ; preds = %6047
  %6051 = load i32, i32* @x.63
  %6052 = load i32, i32* @y.64
  %6053 = sub i32 %6051, 1
  %6054 = mul i32 %6051, %6053
  %6055 = urem i32 %6054, 2
  %6056 = icmp eq i32 %6055, 0
  %6057 = icmp slt i32 %6052, 10
  %6058 = or i1 %6056, %6057
  br i1 %6058, label %originalBB1694, label %originalBB1694alteredBB

originalBB1694:                                   ; preds = %6050, %originalBB1694alteredBB
  %6059 = load i64, i64* %30, align 8, !dbg !5160
  store i64 %6059, i64* %20, align 8, !dbg !5162
  store i64 0, i64* %29, align 8, !dbg !5163
  %6060 = load i32, i32* @x.63
  %6061 = load i32, i32* @y.64
  %6062 = sub i32 %6060, 1
  %6063 = mul i32 %6060, %6062
  %6064 = urem i32 %6063, 2
  %6065 = icmp eq i32 %6064, 0
  %6066 = icmp slt i32 %6061, 10
  %6067 = or i1 %6065, %6066
  br i1 %6067, label %originalBBpart21696, label %originalBB1694alteredBB

originalBBpart21696:                              ; preds = %originalBB1694
  br label %66, !dbg !5164

6068:                                             ; preds = %6047, %originalBBpart21692
  %6069 = load i32, i32* @x.63
  %6070 = load i32, i32* @y.64
  %6071 = sub i32 %6069, 1
  %6072 = mul i32 %6069, %6071
  %6073 = urem i32 %6072, 2
  %6074 = icmp eq i32 %6073, 0
  %6075 = icmp slt i32 %6070, 10
  %6076 = or i1 %6074, %6075
  br i1 %6076, label %originalBB1698, label %originalBB1698alteredBB

originalBB1698:                                   ; preds = %6068, %originalBB1698alteredBB
  %6077 = load i32, i32* @x.63
  %6078 = load i32, i32* @y.64
  %6079 = sub i32 %6077, 1
  %6080 = mul i32 %6077, %6079
  %6081 = urem i32 %6080, 2
  %6082 = icmp eq i32 %6081, 0
  %6083 = icmp slt i32 %6078, 10
  %6084 = or i1 %6082, %6083
  br i1 %6084, label %originalBBpart21700, label %originalBB1698alteredBB

originalBBpart21700:                              ; preds = %originalBB1698
  br label %6085

6085:                                             ; preds = %originalBBpart21700
  %6086 = load i32, i32* @x.63
  %6087 = load i32, i32* @y.64
  %6088 = sub i32 %6086, 1
  %6089 = mul i32 %6086, %6088
  %6090 = urem i32 %6089, 2
  %6091 = icmp eq i32 %6090, 0
  %6092 = icmp slt i32 %6087, 10
  %6093 = or i1 %6091, %6092
  br i1 %6093, label %originalBB1702, label %originalBB1702alteredBB

originalBB1702:                                   ; preds = %6085, %originalBB1702alteredBB
  %6094 = load i32, i32* @x.63
  %6095 = load i32, i32* @y.64
  %6096 = sub i32 %6094, 1
  %6097 = mul i32 %6094, %6096
  %6098 = urem i32 %6097, 2
  %6099 = icmp eq i32 %6098, 0
  %6100 = icmp slt i32 %6095, 10
  %6101 = or i1 %6099, %6100
  br i1 %6101, label %originalBBpart21704, label %originalBB1702alteredBB

originalBBpart21704:                              ; preds = %originalBB1702
  br label %6102, !dbg !5165

6102:                                             ; preds = %originalBBpart21704, %originalBBpart21680, %originalBBpart21676, %originalBBpart21672
  %6103 = load i32, i32* @x.63
  %6104 = load i32, i32* @y.64
  %6105 = sub i32 %6103, 1
  %6106 = mul i32 %6103, %6105
  %6107 = urem i32 %6106, 2
  %6108 = icmp eq i32 %6107, 0
  %6109 = icmp slt i32 %6104, 10
  %6110 = or i1 %6108, %6109
  br i1 %6110, label %originalBB1706, label %originalBB1706alteredBB

originalBB1706:                                   ; preds = %6102, %originalBB1706alteredBB
  %6111 = load i8*, i8** %31, align 8, !dbg !5166
  %6112 = icmp ne i8* %6111, null, !dbg !5166
  %6113 = load i32, i32* @x.63
  %6114 = load i32, i32* @y.64
  %6115 = sub i32 %6113, 1
  %6116 = mul i32 %6113, %6115
  %6117 = urem i32 %6116, 2
  %6118 = icmp eq i32 %6117, 0
  %6119 = icmp slt i32 %6114, 10
  %6120 = or i1 %6118, %6119
  br i1 %6120, label %originalBBpart21708, label %originalBB1706alteredBB

originalBBpart21708:                              ; preds = %originalBB1706
  br i1 %6112, label %6121, label %6308, !dbg !5168

6121:                                             ; preds = %originalBBpart21708
  %6122 = load i32, i32* @x.63
  %6123 = load i32, i32* @y.64
  %6124 = sub i32 %6122, 1
  %6125 = mul i32 %6122, %6124
  %6126 = urem i32 %6125, 2
  %6127 = icmp eq i32 %6126, 0
  %6128 = icmp slt i32 %6123, 10
  %6129 = or i1 %6127, %6128
  br i1 %6129, label %originalBB1710, label %originalBB1710alteredBB

originalBB1710:                                   ; preds = %6121, %originalBB1710alteredBB
  %6130 = load i8, i8* %35, align 1, !dbg !5169
  %6131 = trunc i8 %6130 to i1, !dbg !5169
  %6132 = load i32, i32* @x.63
  %6133 = load i32, i32* @y.64
  %6134 = sub i32 %6132, 1
  %6135 = mul i32 %6132, %6134
  %6136 = urem i32 %6135, 2
  %6137 = icmp eq i32 %6136, 0
  %6138 = icmp slt i32 %6133, 10
  %6139 = or i1 %6137, %6138
  br i1 %6139, label %originalBBpart21712, label %originalBB1710alteredBB

originalBBpart21712:                              ; preds = %originalBB1710
  br i1 %6131, label %6308, label %6140, !dbg !5170

6140:                                             ; preds = %originalBBpart21712
  %6141 = load i32, i32* @x.63
  %6142 = load i32, i32* @y.64
  %6143 = sub i32 %6141, 1
  %6144 = mul i32 %6141, %6143
  %6145 = urem i32 %6144, 2
  %6146 = icmp eq i32 %6145, 0
  %6147 = icmp slt i32 %6142, 10
  %6148 = or i1 %6146, %6147
  br i1 %6148, label %originalBB1714, label %originalBB1714alteredBB

originalBB1714:                                   ; preds = %6140, %originalBB1714alteredBB
  %6149 = load i32, i32* @x.63
  %6150 = load i32, i32* @y.64
  %6151 = sub i32 %6149, 1
  %6152 = mul i32 %6149, %6151
  %6153 = urem i32 %6152, 2
  %6154 = icmp eq i32 %6153, 0
  %6155 = icmp slt i32 %6150, 10
  %6156 = or i1 %6154, %6155
  br i1 %6156, label %originalBBpart21716, label %originalBB1714alteredBB

originalBBpart21716:                              ; preds = %originalBB1714
  br label %6157, !dbg !5171

6157:                                             ; preds = %originalBBpart21754, %originalBBpart21716
  %6158 = load i32, i32* @x.63
  %6159 = load i32, i32* @y.64
  %6160 = sub i32 %6158, 1
  %6161 = mul i32 %6158, %6160
  %6162 = urem i32 %6161, 2
  %6163 = icmp eq i32 %6162, 0
  %6164 = icmp slt i32 %6159, 10
  %6165 = or i1 %6163, %6164
  br i1 %6165, label %originalBB1718, label %originalBB1718alteredBB

originalBB1718:                                   ; preds = %6157, %originalBB1718alteredBB
  %6166 = load i8*, i8** %31, align 8, !dbg !5172
  %6167 = load i8, i8* %6166, align 1, !dbg !5175
  %6168 = icmp ne i8 %6167, 0, !dbg !5176
  %6169 = load i32, i32* @x.63
  %6170 = load i32, i32* @y.64
  %6171 = sub i32 %6169, 1
  %6172 = mul i32 %6169, %6171
  %6173 = urem i32 %6172, 2
  %6174 = icmp eq i32 %6173, 0
  %6175 = icmp slt i32 %6170, 10
  %6176 = or i1 %6174, %6175
  br i1 %6176, label %originalBBpart21720, label %originalBB1718alteredBB

originalBBpart21720:                              ; preds = %originalBB1718
  br i1 %6168, label %6177, label %6291, !dbg !5176

6177:                                             ; preds = %originalBBpart21720
  %6178 = load i32, i32* @x.63
  %6179 = load i32, i32* @y.64
  %6180 = sub i32 %6178, 1
  %6181 = mul i32 %6178, %6180
  %6182 = urem i32 %6181, 2
  %6183 = icmp eq i32 %6182, 0
  %6184 = icmp slt i32 %6179, 10
  %6185 = or i1 %6183, %6184
  br i1 %6185, label %originalBB1722, label %originalBB1722alteredBB

originalBB1722:                                   ; preds = %6177, %originalBB1722alteredBB
  %6186 = load i32, i32* @x.63
  %6187 = load i32, i32* @y.64
  %6188 = sub i32 %6186, 1
  %6189 = mul i32 %6186, %6188
  %6190 = urem i32 %6189, 2
  %6191 = icmp eq i32 %6190, 0
  %6192 = icmp slt i32 %6187, 10
  %6193 = or i1 %6191, %6192
  br i1 %6193, label %originalBBpart21724, label %originalBB1722alteredBB

originalBBpart21724:                              ; preds = %originalBB1722
  br label %6194, !dbg !5177

6194:                                             ; preds = %originalBBpart21724
  %6195 = load i32, i32* @x.63
  %6196 = load i32, i32* @y.64
  %6197 = sub i32 %6195, 1
  %6198 = mul i32 %6195, %6197
  %6199 = urem i32 %6198, 2
  %6200 = icmp eq i32 %6199, 0
  %6201 = icmp slt i32 %6196, 10
  %6202 = or i1 %6200, %6201
  br i1 %6202, label %originalBB1726, label %originalBB1726alteredBB

originalBB1726:                                   ; preds = %6194, %originalBB1726alteredBB
  %6203 = load i64, i64* %29, align 8, !dbg !5178
  %6204 = load i64, i64* %20, align 8, !dbg !5178
  %6205 = icmp ult i64 %6203, %6204, !dbg !5178
  %6206 = load i32, i32* @x.63
  %6207 = load i32, i32* @y.64
  %6208 = sub i32 %6206, 1
  %6209 = mul i32 %6206, %6208
  %6210 = urem i32 %6209, 2
  %6211 = icmp eq i32 %6210, 0
  %6212 = icmp slt i32 %6207, 10
  %6213 = or i1 %6211, %6212
  br i1 %6213, label %originalBBpart21728, label %originalBB1726alteredBB

originalBBpart21728:                              ; preds = %originalBB1726
  br i1 %6205, label %6214, label %6236, !dbg !5181

6214:                                             ; preds = %originalBBpart21728
  %6215 = load i32, i32* @x.63
  %6216 = load i32, i32* @y.64
  %6217 = sub i32 %6215, 1
  %6218 = mul i32 %6215, %6217
  %6219 = urem i32 %6218, 2
  %6220 = icmp eq i32 %6219, 0
  %6221 = icmp slt i32 %6216, 10
  %6222 = or i1 %6220, %6221
  br i1 %6222, label %originalBB1730, label %originalBB1730alteredBB

originalBB1730:                                   ; preds = %6214, %originalBB1730alteredBB
  %6223 = load i8*, i8** %31, align 8, !dbg !5178
  %6224 = load i8, i8* %6223, align 1, !dbg !5178
  %6225 = load i8*, i8** %19, align 8, !dbg !5178
  %6226 = load i64, i64* %29, align 8, !dbg !5178
  %6227 = getelementptr inbounds i8, i8* %6225, i64 %6226, !dbg !5178
  store i8 %6224, i8* %6227, align 1, !dbg !5178
  %6228 = load i32, i32* @x.63
  %6229 = load i32, i32* @y.64
  %6230 = sub i32 %6228, 1
  %6231 = mul i32 %6228, %6230
  %6232 = urem i32 %6231, 2
  %6233 = icmp eq i32 %6232, 0
  %6234 = icmp slt i32 %6229, 10
  %6235 = or i1 %6233, %6234
  br i1 %6235, label %originalBBpart21732, label %originalBB1730alteredBB

originalBBpart21732:                              ; preds = %originalBB1730
  br label %6236, !dbg !5178

6236:                                             ; preds = %originalBBpart21732, %originalBBpart21728
  %6237 = load i32, i32* @x.63
  %6238 = load i32, i32* @y.64
  %6239 = sub i32 %6237, 1
  %6240 = mul i32 %6237, %6239
  %6241 = urem i32 %6240, 2
  %6242 = icmp eq i32 %6241, 0
  %6243 = icmp slt i32 %6238, 10
  %6244 = or i1 %6242, %6243
  br i1 %6244, label %originalBB1734, label %originalBB1734alteredBB

originalBB1734:                                   ; preds = %6236, %originalBB1734alteredBB
  %6245 = load i64, i64* %29, align 8, !dbg !5181
  %6246 = add i64 %6245, 1, !dbg !5181
  store i64 %6246, i64* %29, align 8, !dbg !5181
  %6247 = load i32, i32* @x.63
  %6248 = load i32, i32* @y.64
  %6249 = sub i32 %6247, 1
  %6250 = mul i32 %6247, %6249
  %6251 = urem i32 %6250, 2
  %6252 = icmp eq i32 %6251, 0
  %6253 = icmp slt i32 %6248, 10
  %6254 = or i1 %6252, %6253
  br i1 %6254, label %originalBBpart21746, label %originalBB1734alteredBB

originalBBpart21746:                              ; preds = %originalBB1734
  br label %6255, !dbg !5181

6255:                                             ; preds = %originalBBpart21746
  %6256 = load i32, i32* @x.63
  %6257 = load i32, i32* @y.64
  %6258 = sub i32 %6256, 1
  %6259 = mul i32 %6256, %6258
  %6260 = urem i32 %6259, 2
  %6261 = icmp eq i32 %6260, 0
  %6262 = icmp slt i32 %6257, 10
  %6263 = or i1 %6261, %6262
  br i1 %6263, label %originalBB1748, label %originalBB1748alteredBB

originalBB1748:                                   ; preds = %6255, %originalBB1748alteredBB
  %6264 = load i32, i32* @x.63
  %6265 = load i32, i32* @y.64
  %6266 = sub i32 %6264, 1
  %6267 = mul i32 %6264, %6266
  %6268 = urem i32 %6267, 2
  %6269 = icmp eq i32 %6268, 0
  %6270 = icmp slt i32 %6265, 10
  %6271 = or i1 %6269, %6270
  br i1 %6271, label %originalBBpart21750, label %originalBB1748alteredBB

originalBBpart21750:                              ; preds = %originalBB1748
  br label %6272, !dbg !5181

6272:                                             ; preds = %originalBBpart21750
  %6273 = load i32, i32* @x.63
  %6274 = load i32, i32* @y.64
  %6275 = sub i32 %6273, 1
  %6276 = mul i32 %6273, %6275
  %6277 = urem i32 %6276, 2
  %6278 = icmp eq i32 %6277, 0
  %6279 = icmp slt i32 %6274, 10
  %6280 = or i1 %6278, %6279
  br i1 %6280, label %originalBB1752, label %originalBB1752alteredBB

originalBB1752:                                   ; preds = %6272, %originalBB1752alteredBB
  %6281 = load i8*, i8** %31, align 8, !dbg !5182
  %6282 = getelementptr inbounds i8, i8* %6281, i32 1, !dbg !5182
  store i8* %6282, i8** %31, align 8, !dbg !5182
  %6283 = load i32, i32* @x.63
  %6284 = load i32, i32* @y.64
  %6285 = sub i32 %6283, 1
  %6286 = mul i32 %6283, %6285
  %6287 = urem i32 %6286, 2
  %6288 = icmp eq i32 %6287, 0
  %6289 = icmp slt i32 %6284, 10
  %6290 = or i1 %6288, %6289
  br i1 %6290, label %originalBBpart21754, label %originalBB1752alteredBB

originalBBpart21754:                              ; preds = %originalBB1752
  br label %6157, !dbg !5183, !llvm.loop !5184

6291:                                             ; preds = %originalBBpart21720
  %6292 = load i32, i32* @x.63
  %6293 = load i32, i32* @y.64
  %6294 = sub i32 %6292, 1
  %6295 = mul i32 %6292, %6294
  %6296 = urem i32 %6295, 2
  %6297 = icmp eq i32 %6296, 0
  %6298 = icmp slt i32 %6293, 10
  %6299 = or i1 %6297, %6298
  br i1 %6299, label %originalBB1756, label %originalBB1756alteredBB

originalBB1756:                                   ; preds = %6291, %originalBB1756alteredBB
  %6300 = load i32, i32* @x.63
  %6301 = load i32, i32* @y.64
  %6302 = sub i32 %6300, 1
  %6303 = mul i32 %6300, %6302
  %6304 = urem i32 %6303, 2
  %6305 = icmp eq i32 %6304, 0
  %6306 = icmp slt i32 %6301, 10
  %6307 = or i1 %6305, %6306
  br i1 %6307, label %originalBBpart21758, label %originalBB1756alteredBB

originalBBpart21758:                              ; preds = %originalBB1756
  br label %6308, !dbg !5185

6308:                                             ; preds = %originalBBpart21758, %originalBBpart21712, %originalBBpart21708
  %6309 = load i32, i32* @x.63
  %6310 = load i32, i32* @y.64
  %6311 = sub i32 %6309, 1
  %6312 = mul i32 %6309, %6311
  %6313 = urem i32 %6312, 2
  %6314 = icmp eq i32 %6313, 0
  %6315 = icmp slt i32 %6310, 10
  %6316 = or i1 %6314, %6315
  br i1 %6316, label %originalBB1760, label %originalBB1760alteredBB

originalBB1760:                                   ; preds = %6308, %originalBB1760alteredBB
  %6317 = load i64, i64* %29, align 8, !dbg !5186
  %6318 = load i64, i64* %20, align 8, !dbg !5188
  %6319 = icmp ult i64 %6317, %6318, !dbg !5189
  %6320 = load i32, i32* @x.63
  %6321 = load i32, i32* @y.64
  %6322 = sub i32 %6320, 1
  %6323 = mul i32 %6320, %6322
  %6324 = urem i32 %6323, 2
  %6325 = icmp eq i32 %6324, 0
  %6326 = icmp slt i32 %6321, 10
  %6327 = or i1 %6325, %6326
  br i1 %6327, label %originalBBpart21762, label %originalBB1760alteredBB

originalBBpart21762:                              ; preds = %originalBB1760
  br i1 %6319, label %6328, label %6348, !dbg !5190

6328:                                             ; preds = %originalBBpart21762
  %6329 = load i32, i32* @x.63
  %6330 = load i32, i32* @y.64
  %6331 = sub i32 %6329, 1
  %6332 = mul i32 %6329, %6331
  %6333 = urem i32 %6332, 2
  %6334 = icmp eq i32 %6333, 0
  %6335 = icmp slt i32 %6330, 10
  %6336 = or i1 %6334, %6335
  br i1 %6336, label %originalBB1764, label %originalBB1764alteredBB

originalBB1764:                                   ; preds = %6328, %originalBB1764alteredBB
  %6337 = load i8*, i8** %19, align 8, !dbg !5191
  %6338 = load i64, i64* %29, align 8, !dbg !5192
  %6339 = getelementptr inbounds i8, i8* %6337, i64 %6338, !dbg !5191
  store i8 0, i8* %6339, align 1, !dbg !5193
  %6340 = load i32, i32* @x.63
  %6341 = load i32, i32* @y.64
  %6342 = sub i32 %6340, 1
  %6343 = mul i32 %6340, %6342
  %6344 = urem i32 %6343, 2
  %6345 = icmp eq i32 %6344, 0
  %6346 = icmp slt i32 %6341, 10
  %6347 = or i1 %6345, %6346
  br i1 %6347, label %originalBBpart21766, label %originalBB1764alteredBB

originalBBpart21766:                              ; preds = %originalBB1764
  br label %6348, !dbg !5191

6348:                                             ; preds = %originalBBpart21766, %originalBBpart21762
  %6349 = load i32, i32* @x.63
  %6350 = load i32, i32* @y.64
  %6351 = sub i32 %6349, 1
  %6352 = mul i32 %6349, %6351
  %6353 = urem i32 %6352, 2
  %6354 = icmp eq i32 %6353, 0
  %6355 = icmp slt i32 %6350, 10
  %6356 = or i1 %6354, %6355
  br i1 %6356, label %originalBB1768, label %originalBB1768alteredBB

originalBB1768:                                   ; preds = %6348, %originalBB1768alteredBB
  %6357 = load i64, i64* %29, align 8, !dbg !5194
  store i64 %6357, i64* %18, align 8, !dbg !5195
  %6358 = load i32, i32* @x.63
  %6359 = load i32, i32* @y.64
  %6360 = sub i32 %6358, 1
  %6361 = mul i32 %6358, %6360
  %6362 = urem i32 %6361, 2
  %6363 = icmp eq i32 %6362, 0
  %6364 = icmp slt i32 %6359, 10
  %6365 = or i1 %6363, %6364
  br i1 %6365, label %originalBBpart21770, label %originalBB1768alteredBB

originalBBpart21770:                              ; preds = %originalBB1768
  br label %6448, !dbg !5195

6366:                                             ; preds = %originalBBpart21668, %originalBBpart21470, %3962, %originalBBpart2971, %originalBBpart2727, %originalBBpart2711, %originalBBpart2651, %originalBBpart2615, %originalBBpart2477, %originalBBpart2423, %originalBBpart2246, %originalBBpart2222
  call void @llvm.dbg.label(metadata !5196), !dbg !5197
  %6367 = load i32, i32* @x.63
  %6368 = load i32, i32* @y.64
  %6369 = sub i32 %6367, 1
  %6370 = mul i32 %6367, %6369
  %6371 = urem i32 %6370, 2
  %6372 = icmp eq i32 %6371, 0
  %6373 = icmp slt i32 %6368, 10
  %6374 = or i1 %6372, %6373
  br i1 %6374, label %originalBB1772, label %originalBB1772alteredBB

originalBB1772:                                   ; preds = %6366, %originalBB1772alteredBB
  %6375 = load i32, i32* %23, align 4, !dbg !5198
  %6376 = icmp eq i32 %6375, 2, !dbg !5200
  %6377 = load i32, i32* @x.63
  %6378 = load i32, i32* @y.64
  %6379 = sub i32 %6377, 1
  %6380 = mul i32 %6377, %6379
  %6381 = urem i32 %6380, 2
  %6382 = icmp eq i32 %6381, 0
  %6383 = icmp slt i32 %6378, 10
  %6384 = or i1 %6382, %6383
  br i1 %6384, label %originalBBpart21774, label %originalBB1772alteredBB

originalBBpart21774:                              ; preds = %originalBB1772
  br i1 %6376, label %6385, label %6421, !dbg !5201

6385:                                             ; preds = %originalBBpart21774
  %6386 = load i32, i32* @x.63
  %6387 = load i32, i32* @y.64
  %6388 = sub i32 %6386, 1
  %6389 = mul i32 %6386, %6388
  %6390 = urem i32 %6389, 2
  %6391 = icmp eq i32 %6390, 0
  %6392 = icmp slt i32 %6387, 10
  %6393 = or i1 %6391, %6392
  br i1 %6393, label %originalBB1776, label %originalBB1776alteredBB

originalBB1776:                                   ; preds = %6385, %originalBB1776alteredBB
  %6394 = load i8, i8* %33, align 1, !dbg !5202
  %6395 = trunc i8 %6394 to i1, !dbg !5202
  %6396 = load i32, i32* @x.63
  %6397 = load i32, i32* @y.64
  %6398 = sub i32 %6396, 1
  %6399 = mul i32 %6396, %6398
  %6400 = urem i32 %6399, 2
  %6401 = icmp eq i32 %6400, 0
  %6402 = icmp slt i32 %6397, 10
  %6403 = or i1 %6401, %6402
  br i1 %6403, label %originalBBpart21778, label %originalBB1776alteredBB

originalBBpart21778:                              ; preds = %originalBB1776
  br i1 %6395, label %6404, label %6421, !dbg !5203

6404:                                             ; preds = %originalBBpart21778
  %6405 = load i32, i32* @x.63
  %6406 = load i32, i32* @y.64
  %6407 = sub i32 %6405, 1
  %6408 = mul i32 %6405, %6407
  %6409 = urem i32 %6408, 2
  %6410 = icmp eq i32 %6409, 0
  %6411 = icmp slt i32 %6406, 10
  %6412 = or i1 %6410, %6411
  br i1 %6412, label %originalBB1780, label %originalBB1780alteredBB

originalBB1780:                                   ; preds = %6404, %originalBB1780alteredBB
  store i32 4, i32* %23, align 4, !dbg !5204
  %6413 = load i32, i32* @x.63
  %6414 = load i32, i32* @y.64
  %6415 = sub i32 %6413, 1
  %6416 = mul i32 %6413, %6415
  %6417 = urem i32 %6416, 2
  %6418 = icmp eq i32 %6417, 0
  %6419 = icmp slt i32 %6414, 10
  %6420 = or i1 %6418, %6419
  br i1 %6420, label %originalBBpart21782, label %originalBB1780alteredBB

originalBBpart21782:                              ; preds = %originalBB1780
  br label %6421, !dbg !5205

6421:                                             ; preds = %originalBBpart21782, %originalBBpart21778, %originalBBpart21774
  %6422 = load i32, i32* @x.63
  %6423 = load i32, i32* @y.64
  %6424 = sub i32 %6422, 1
  %6425 = mul i32 %6422, %6424
  %6426 = urem i32 %6425, 2
  %6427 = icmp eq i32 %6426, 0
  %6428 = icmp slt i32 %6423, 10
  %6429 = or i1 %6427, %6428
  br i1 %6429, label %originalBB1784, label %originalBB1784alteredBB

originalBB1784:                                   ; preds = %6421, %originalBB1784alteredBB
  %6430 = load i8*, i8** %19, align 8, !dbg !5206
  %6431 = load i64, i64* %20, align 8, !dbg !5207
  %6432 = load i8*, i8** %21, align 8, !dbg !5208
  %6433 = load i64, i64* %22, align 8, !dbg !5209
  %6434 = load i32, i32* %23, align 4, !dbg !5210
  %6435 = load i32, i32* %24, align 4, !dbg !5211
  %6436 = and i32 %6435, -3, !dbg !5212
  %6437 = load i8*, i8** %26, align 8, !dbg !5213
  %6438 = load i8*, i8** %27, align 8, !dbg !5214
  %6439 = call i64 @quotearg_buffer_restyled(i8* %6430, i64 %6431, i8* %6432, i64 %6433, i32 %6434, i32 %6436, i32* null, i8* %6437, i8* %6438), !dbg !5215
  store i64 %6439, i64* %18, align 8, !dbg !5216
  %6440 = load i32, i32* @x.63
  %6441 = load i32, i32* @y.64
  %6442 = sub i32 %6440, 1
  %6443 = mul i32 %6440, %6442
  %6444 = urem i32 %6443, 2
  %6445 = icmp eq i32 %6444, 0
  %6446 = icmp slt i32 %6441, 10
  %6447 = or i1 %6445, %6446
  br i1 %6447, label %originalBBpart21788, label %originalBB1784alteredBB

originalBBpart21788:                              ; preds = %originalBB1784
  br label %6448, !dbg !5216

6448:                                             ; preds = %originalBBpart21788, %originalBBpart21770, %originalBBpart21688
  %6449 = load i32, i32* @x.63
  %6450 = load i32, i32* @y.64
  %6451 = sub i32 %6449, 1
  %6452 = mul i32 %6449, %6451
  %6453 = urem i32 %6452, 2
  %6454 = icmp eq i32 %6453, 0
  %6455 = icmp slt i32 %6450, 10
  %6456 = or i1 %6454, %6455
  br i1 %6456, label %originalBB1790, label %originalBB1790alteredBB

originalBB1790:                                   ; preds = %6448, %originalBB1790alteredBB
  %6457 = load i64, i64* %18, align 8, !dbg !5217
  %6458 = load i32, i32* @x.63
  %6459 = load i32, i32* @y.64
  %6460 = sub i32 %6458, 1
  %6461 = mul i32 %6458, %6460
  %6462 = urem i32 %6461, 2
  %6463 = icmp eq i32 %6462, 0
  %6464 = icmp slt i32 %6459, 10
  %6465 = or i1 %6463, %6464
  br i1 %6465, label %originalBBpart21792, label %originalBB1790alteredBB

originalBBpart21792:                              ; preds = %originalBB1790
  ret i64 %6457, !dbg !5217

originalBBalteredBB:                              ; preds = %originalBB, %9
  %6466 = alloca i64, align 8
  %6467 = alloca i8*, align 8
  %6468 = alloca i64, align 8
  %6469 = alloca i8*, align 8
  %6470 = alloca i64, align 8
  %6471 = alloca i32, align 4
  %6472 = alloca i32, align 4
  %6473 = alloca i32*, align 8
  %6474 = alloca i8*, align 8
  %6475 = alloca i8*, align 8
  %6476 = alloca i64, align 8
  %6477 = alloca i64, align 8
  %6478 = alloca i64, align 8
  %6479 = alloca i8*, align 8
  %6480 = alloca i64, align 8
  %6481 = alloca i8, align 1
  %6482 = alloca i8, align 1
  %6483 = alloca i8, align 1
  %6484 = alloca i8, align 1
  %6485 = alloca i8, align 1
  %6486 = alloca i8, align 1
  %6487 = alloca i8, align 1
  %6488 = alloca i8, align 1
  %6489 = alloca i8, align 1
  %6490 = alloca i8, align 1
  %6491 = alloca i8, align 1
  %6492 = alloca i64, align 8
  %6493 = alloca i8, align 1
  %6494 = alloca %struct.__mbstate_t, align 4
  %6495 = alloca i32, align 4
  %6496 = alloca i64, align 8
  %6497 = alloca i64, align 8
  %6498 = alloca i64, align 8
  store i8* %0, i8** %6467, align 8
  call void @llvm.dbg.declare(metadata i8** %6467, metadata !5218, metadata !DIExpression()), !dbg !4341
  store i64 %1, i64* %6468, align 8
  call void @llvm.dbg.declare(metadata i64* %6468, metadata !5250, metadata !DIExpression()), !dbg !4343
  store i8* %2, i8** %6469, align 8
  call void @llvm.dbg.declare(metadata i8** %6469, metadata !5251, metadata !DIExpression()), !dbg !4345
  store i64 %3, i64* %6470, align 8
  call void @llvm.dbg.declare(metadata i64* %6470, metadata !5252, metadata !DIExpression()), !dbg !4347
  store i32 %4, i32* %6471, align 4
  call void @llvm.dbg.declare(metadata i32* %6471, metadata !5253, metadata !DIExpression()), !dbg !4349
  store i32 %5, i32* %6472, align 4
  call void @llvm.dbg.declare(metadata i32* %6472, metadata !5254, metadata !DIExpression()), !dbg !4351
  store i32* %6, i32** %6473, align 8
  call void @llvm.dbg.declare(metadata i32** %6473, metadata !5255, metadata !DIExpression()), !dbg !4353
  store i8* %7, i8** %6474, align 8
  call void @llvm.dbg.declare(metadata i8** %6474, metadata !5256, metadata !DIExpression()), !dbg !4355
  store i8* %8, i8** %6475, align 8
  call void @llvm.dbg.declare(metadata i8** %6475, metadata !5257, metadata !DIExpression()), !dbg !4357
  call void @llvm.dbg.declare(metadata i64* %6476, metadata !5258, metadata !DIExpression()), !dbg !4359
  call void @llvm.dbg.declare(metadata i64* %6477, metadata !5259, metadata !DIExpression()), !dbg !4361
  store i64 0, i64* %6477, align 8, !dbg !4361
  call void @llvm.dbg.declare(metadata i64* %6478, metadata !5260, metadata !DIExpression()), !dbg !4363
  store i64 0, i64* %6478, align 8, !dbg !4363
  call void @llvm.dbg.declare(metadata i8** %6479, metadata !5261, metadata !DIExpression()), !dbg !4365
  store i8* null, i8** %6479, align 8, !dbg !4365
  call void @llvm.dbg.declare(metadata i64* %6480, metadata !5262, metadata !DIExpression()), !dbg !4367
  store i64 0, i64* %6480, align 8, !dbg !4367
  call void @llvm.dbg.declare(metadata i8* %6481, metadata !5263, metadata !DIExpression()), !dbg !4369
  store i8 0, i8* %6481, align 1, !dbg !4369
  call void @llvm.dbg.declare(metadata i8* %6482, metadata !5264, metadata !DIExpression()), !dbg !4371
  %6499 = call i64 @__ctype_get_mb_cur_max() #10, !dbg !4372
  %6500 = icmp eq i64 %6499, 1, !dbg !4373
  %6501 = zext i1 %6500 to i8, !dbg !4371
  store i8 %6501, i8* %6482, align 1, !dbg !4371
  call void @llvm.dbg.declare(metadata i8* %6483, metadata !5265, metadata !DIExpression()), !dbg !4375
  %6502 = load i32, i32* %6472, align 4, !dbg !4376
  %_ = sub i32 0, %6502
  %gen = add i32 %_, 2
  %_1 = sub i32 %6502, 2
  %gen2 = mul i32 %_1, 2
  %_3 = sub i32 0, %6502
  %gen4 = add i32 %_3, 2
  %_5 = sub i32 %6502, 2
  %gen6 = mul i32 %_5, 2
  %_7 = sub i32 %6502, 2
  %gen8 = mul i32 %_7, 2
  %6503 = and i32 %6502, 2, !dbg !4377
  %6504 = icmp ne i32 %6503, 0, !dbg !4378
  %6505 = zext i1 %6504 to i8, !dbg !4375
  store i8 %6505, i8* %6483, align 1, !dbg !4375
  call void @llvm.dbg.declare(metadata i8* %6484, metadata !5266, metadata !DIExpression()), !dbg !4380
  store i8 0, i8* %6484, align 1, !dbg !4380
  call void @llvm.dbg.declare(metadata i8* %6485, metadata !5267, metadata !DIExpression()), !dbg !4382
  store i8 0, i8* %6485, align 1, !dbg !4382
  call void @llvm.dbg.declare(metadata i8* %6486, metadata !5268, metadata !DIExpression()), !dbg !4384
  store i8 1, i8* %6486, align 1, !dbg !4384
  br label %originalBB

originalBB9alteredBB:                             ; preds = %originalBB9, %66
  %6506 = load i32, i32* %23, align 4, !dbg !4388
  br label %originalBB9

originalBB13alteredBB:                            ; preds = %originalBB13, %84
  store i32 5, i32* %23, align 4, !dbg !4390
  store i8 1, i8* %35, align 1, !dbg !4392
  br label %originalBB13

originalBB17alteredBB:                            ; preds = %originalBB17, %101
  %6507 = load i8, i8* %35, align 1, !dbg !4394
  %6508 = trunc i8 %6507 to i1, !dbg !4394
  br label %originalBB17

originalBB21alteredBB:                            ; preds = %originalBB21, %120
  br label %originalBB21

originalBB25alteredBB:                            ; preds = %originalBB25, %137
  %6509 = load i64, i64* %29, align 8, !dbg !4398
  %6510 = load i64, i64* %20, align 8, !dbg !4398
  %6511 = icmp ult i64 %6509, %6510, !dbg !4398
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %157
  %6512 = load i8*, i8** %19, align 8, !dbg !4398
  %6513 = load i64, i64* %29, align 8, !dbg !4398
  %6514 = getelementptr inbounds i8, i8* %6512, i64 %6513, !dbg !4398
  store i8 34, i8* %6514, align 1, !dbg !4398
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %177
  %6515 = load i64, i64* %29, align 8, !dbg !4401
  %_34 = sub i64 %6515, 1
  %gen35 = mul i64 %_34, 1
  %_36 = shl i64 %6515, 1
  %_37 = shl i64 %6515, 1
  %6516 = add i64 %6515, 1, !dbg !4401
  store i64 %6516, i64* %29, align 8, !dbg !4401
  br label %originalBB33

originalBB41alteredBB:                            ; preds = %originalBB41, %196
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %213
  store i8 1, i8* %33, align 1, !dbg !4402
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.120, i64 0, i64 0), i8** %31, align 8, !dbg !4403
  store i64 1, i64* %32, align 8, !dbg !4404
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %230
  store i8 1, i8* %33, align 1, !dbg !4406
  store i8 0, i8* %35, align 1, !dbg !4407
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %250
  %6517 = load i32, i32* %23, align 4, !dbg !4414
  %6518 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.121, i64 0, i64 0), i32 %6517), !dbg !4416
  store i8* %6518, i8** %26, align 8, !dbg !4417
  %6519 = load i32, i32* %23, align 4, !dbg !4418
  %6520 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.122, i64 0, i64 0), i32 %6519), !dbg !4419
  store i8* %6520, i8** %27, align 8, !dbg !4420
  br label %originalBB53

originalBB57alteredBB:                            ; preds = %originalBB57, %274
  %6521 = load i8*, i8** %26, align 8, !dbg !4425
  store i8* %6521, i8** %31, align 8, !dbg !4427
  br label %originalBB57

originalBB61alteredBB:                            ; preds = %originalBB61, %296
  br label %originalBB61

originalBB65alteredBB:                            ; preds = %originalBB65, %313
  %6522 = load i64, i64* %29, align 8, !dbg !4434
  %6523 = load i64, i64* %20, align 8, !dbg !4434
  %6524 = icmp ult i64 %6522, %6523, !dbg !4434
  br label %originalBB65

originalBB69alteredBB:                            ; preds = %originalBB69, %333
  %6525 = load i8*, i8** %31, align 8, !dbg !4434
  %6526 = load i8, i8* %6525, align 1, !dbg !4434
  %6527 = load i8*, i8** %19, align 8, !dbg !4434
  %6528 = load i64, i64* %29, align 8, !dbg !4434
  %6529 = getelementptr inbounds i8, i8* %6527, i64 %6528, !dbg !4434
  store i8 %6526, i8* %6529, align 1, !dbg !4434
  br label %originalBB69

originalBB73alteredBB:                            ; preds = %originalBB73, %355
  %6530 = load i64, i64* %29, align 8, !dbg !4437
  %_74 = sub i64 0, %6530
  %gen75 = add i64 %_74, 1
  %_76 = shl i64 %6530, 1
  %_77 = sub i64 0, %6530
  %gen78 = add i64 %_77, 1
  %_79 = sub i64 %6530, 1
  %gen80 = mul i64 %_79, 1
  %_81 = shl i64 %6530, 1
  %_82 = sub i64 %6530, 1
  %gen83 = mul i64 %_82, 1
  %6531 = add i64 %6530, 1, !dbg !4437
  store i64 %6531, i64* %29, align 8, !dbg !4437
  br label %originalBB73

originalBB87alteredBB:                            ; preds = %originalBB87, %375
  %6532 = load i8*, i8** %31, align 8, !dbg !4438
  %6533 = getelementptr inbounds i8, i8* %6532, i32 1, !dbg !4438
  store i8* %6533, i8** %31, align 8, !dbg !4438
  br label %originalBB87

originalBB91alteredBB:                            ; preds = %originalBB91, %394
  br label %originalBB91

originalBB95alteredBB:                            ; preds = %originalBB95, %411
  store i8 1, i8* %33, align 1, !dbg !4442
  %6534 = load i8*, i8** %27, align 8, !dbg !4443
  store i8* %6534, i8** %31, align 8, !dbg !4444
  %6535 = load i8*, i8** %31, align 8, !dbg !4445
  %6536 = call i64 @strlen(i8* %6535) #13, !dbg !4446
  store i64 %6536, i64* %32, align 8, !dbg !4447
  br label %originalBB95

originalBB99alteredBB:                            ; preds = %originalBB99, %431
  store i8 1, i8* %33, align 1, !dbg !4449
  br label %originalBB99

originalBB103alteredBB:                           ; preds = %originalBB103, %448
  store i8 1, i8* %35, align 1, !dbg !4451
  br label %originalBB103

originalBB107alteredBB:                           ; preds = %originalBB107, %465
  %6537 = load i8, i8* %35, align 1, !dbg !4453
  %6538 = trunc i8 %6537 to i1, !dbg !4453
  br label %originalBB107

originalBB111alteredBB:                           ; preds = %originalBB111, %484
  store i8 1, i8* %33, align 1, !dbg !4456
  br label %originalBB111

originalBB115alteredBB:                           ; preds = %originalBB115, %501
  br label %originalBB115

originalBB119alteredBB:                           ; preds = %originalBB119, %518
  store i32 2, i32* %23, align 4, !dbg !4459
  %6539 = load i8, i8* %35, align 1, !dbg !4460
  %6540 = trunc i8 %6539 to i1, !dbg !4460
  br label %originalBB119

originalBB123alteredBB:                           ; preds = %originalBB123, %537
  br label %originalBB123

originalBB127alteredBB:                           ; preds = %originalBB127, %554
  %6541 = load i64, i64* %29, align 8, !dbg !4464
  %6542 = load i64, i64* %20, align 8, !dbg !4464
  %6543 = icmp ult i64 %6541, %6542, !dbg !4464
  br label %originalBB127

originalBB131alteredBB:                           ; preds = %originalBB131, %574
  %6544 = load i8*, i8** %19, align 8, !dbg !4464
  %6545 = load i64, i64* %29, align 8, !dbg !4464
  %6546 = getelementptr inbounds i8, i8* %6544, i64 %6545, !dbg !4464
  store i8 39, i8* %6546, align 1, !dbg !4464
  br label %originalBB131

originalBB135alteredBB:                           ; preds = %originalBB135, %594
  %6547 = load i64, i64* %29, align 8, !dbg !4467
  %_136 = shl i64 %6547, 1
  %_137 = sub i64 %6547, 1
  %gen138 = mul i64 %_137, 1
  %_139 = sub i64 %6547, 1
  %gen140 = mul i64 %_139, 1
  %_141 = shl i64 %6547, 1
  %_142 = sub i64 0, %6547
  %gen143 = add i64 %_142, 1
  %_144 = sub i64 0, %6547
  %gen145 = add i64 %_144, 1
  %_146 = sub i64 %6547, 1
  %gen147 = mul i64 %_146, 1
  %_148 = sub i64 0, %6547
  %gen149 = add i64 %_148, 1
  %6548 = add i64 %6547, 1, !dbg !4467
  store i64 %6548, i64* %29, align 8, !dbg !4467
  br label %originalBB135

originalBB153alteredBB:                           ; preds = %originalBB153, %613
  br label %originalBB153

originalBB157alteredBB:                           ; preds = %originalBB157, %630
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.122, i64 0, i64 0), i8** %31, align 8, !dbg !4468
  store i64 1, i64* %32, align 8, !dbg !4469
  br label %originalBB157

originalBB161alteredBB:                           ; preds = %originalBB161, %647
  store i8 0, i8* %35, align 1, !dbg !4471
  br label %originalBB161

originalBB165alteredBB:                           ; preds = %originalBB165, %666
  %6549 = load i64, i64* %22, align 8, !dbg !4477
  %6550 = icmp eq i64 %6549, -1, !dbg !4479
  br label %originalBB165

originalBB169alteredBB:                           ; preds = %originalBB169, %698
  %6551 = icmp ne i32 %699, 0, !dbg !4486
  %_170 = shl i1 %6551, true
  %6552 = xor i1 %6551, true, !dbg !4486
  br label %originalBB169

originalBB174alteredBB:                           ; preds = %originalBB174, %718
  store i8 0, i8* %41, align 1, !dbg !4494
  call void @llvm.dbg.declare(metadata !4, metadata !5269, metadata !DIExpression()), !dbg !4496
  store i8 0, i8* %42, align 1, !dbg !4496
  call void @llvm.dbg.declare(metadata !4, metadata !5304, metadata !DIExpression()), !dbg !4498
  store i8 0, i8* %43, align 1, !dbg !4498
  %6553 = load i8, i8* %33, align 1, !dbg !4499
  %6554 = trunc i8 %6553 to i1, !dbg !4499
  br label %originalBB174

originalBB178alteredBB:                           ; preds = %originalBB178, %737
  %6555 = load i32, i32* %23, align 4, !dbg !4502
  %6556 = icmp ne i32 %6555, 2, !dbg !4503
  br label %originalBB178

originalBB182alteredBB:                           ; preds = %originalBB182, %756
  %6557 = load i64, i64* %32, align 8, !dbg !4505
  %6558 = icmp ne i64 %6557, 0, !dbg !4505
  br label %originalBB182

originalBB186alteredBB:                           ; preds = %originalBB186, %775
  %6559 = load i64, i64* %28, align 8, !dbg !4507
  %6560 = load i64, i64* %32, align 8, !dbg !4508
  %_187 = sub i64 0, %6559
  %gen188 = add i64 %_187, %6560
  %_189 = sub i64 %6559, %6560
  %gen190 = mul i64 %_189, %6560
  %_191 = sub i64 0, %6559
  %gen192 = add i64 %_191, %6560
  %_193 = shl i64 %6559, %6560
  %_194 = shl i64 %6559, %6560
  %_195 = shl i64 %6559, %6560
  %6561 = add i64 %6559, %6560, !dbg !4509
  %6562 = load i64, i64* %22, align 8, !dbg !4510
  %6563 = icmp eq i64 %6562, -1, !dbg !4511
  br label %originalBB186

originalBB199alteredBB:                           ; preds = %originalBB199, %797
  %6564 = load i64, i64* %32, align 8, !dbg !4513
  %6565 = icmp ult i64 1, %6564, !dbg !4514
  br label %originalBB199

originalBB203alteredBB:                           ; preds = %originalBB203, %816
  %6566 = load i8*, i8** %21, align 8, !dbg !4515
  %6567 = call i64 @strlen(i8* %6566) #13, !dbg !4516
  store i64 %6567, i64* %22, align 8, !dbg !4517
  br label %originalBB203

originalBB207alteredBB:                           ; preds = %originalBB207, %835
  %6568 = load i64, i64* %22, align 8, !dbg !4518
  br label %originalBB207

originalBB211alteredBB:                           ; preds = %originalBB211, %853
  %6569 = icmp ule i64 %786, %854, !dbg !4519
  br label %originalBB211

originalBB216alteredBB:                           ; preds = %originalBB216, %880
  %6570 = load i8, i8* %35, align 1, !dbg !4529
  %6571 = trunc i8 %6570 to i1, !dbg !4529
  br label %originalBB216

originalBB220alteredBB:                           ; preds = %originalBB220, %899
  br label %originalBB220

originalBB224alteredBB:                           ; preds = %originalBB224, %916
  store i8 1, i8* %41, align 1, !dbg !4534
  br label %originalBB224

originalBB228alteredBB:                           ; preds = %originalBB228, %933
  %6572 = load i8*, i8** %21, align 8, !dbg !4536
  %6573 = load i64, i64* %28, align 8, !dbg !4537
  %6574 = getelementptr inbounds i8, i8* %6572, i64 %6573, !dbg !4536
  %6575 = load i8, i8* %6574, align 1, !dbg !4536
  store i8 %6575, i8* %39, align 1, !dbg !4538
  %6576 = load i8, i8* %39, align 1, !dbg !4539
  %6577 = zext i8 %6576 to i32, !dbg !4539
  br label %originalBB228

originalBB232alteredBB:                           ; preds = %originalBB232, %956
  %6578 = load i8, i8* %33, align 1, !dbg !4541
  %6579 = trunc i8 %6578 to i1, !dbg !4541
  br label %originalBB232

originalBB236alteredBB:                           ; preds = %originalBB236, %975
  br label %originalBB236

originalBB240alteredBB:                           ; preds = %originalBB240, %992
  %6580 = load i8, i8* %35, align 1, !dbg !4547
  %6581 = trunc i8 %6580 to i1, !dbg !4547
  br label %originalBB240

originalBB244alteredBB:                           ; preds = %originalBB244, %1011
  br label %originalBB244

originalBB248alteredBB:                           ; preds = %originalBB248, %1028
  store i8 1, i8* %42, align 1, !dbg !4550
  %6582 = load i32, i32* %23, align 4, !dbg !4551
  %6583 = icmp eq i32 %6582, 2, !dbg !4551
  br label %originalBB248

originalBB252alteredBB:                           ; preds = %originalBB252, %1047
  %6584 = load i8, i8* %36, align 1, !dbg !4551
  %6585 = trunc i8 %6584 to i1, !dbg !4551
  br label %originalBB252

originalBB256alteredBB:                           ; preds = %originalBB256, %1066
  br label %originalBB256

originalBB260alteredBB:                           ; preds = %originalBB260, %1083
  %6586 = load i64, i64* %29, align 8, !dbg !4555
  %6587 = load i64, i64* %20, align 8, !dbg !4555
  %6588 = icmp ult i64 %6586, %6587, !dbg !4555
  br label %originalBB260

originalBB264alteredBB:                           ; preds = %originalBB264, %1103
  %6589 = load i8*, i8** %19, align 8, !dbg !4555
  %6590 = load i64, i64* %29, align 8, !dbg !4555
  %6591 = getelementptr inbounds i8, i8* %6589, i64 %6590, !dbg !4555
  store i8 39, i8* %6591, align 1, !dbg !4555
  br label %originalBB264

originalBB268alteredBB:                           ; preds = %originalBB268, %1123
  %6592 = load i64, i64* %29, align 8, !dbg !4558
  %_269 = sub i64 %6592, 1
  %gen270 = mul i64 %_269, 1
  %_271 = shl i64 %6592, 1
  %6593 = add i64 %6592, 1, !dbg !4558
  store i64 %6593, i64* %29, align 8, !dbg !4558
  br label %originalBB268

originalBB276alteredBB:                           ; preds = %originalBB276, %1143
  %6594 = load i64, i64* %29, align 8, !dbg !4559
  %6595 = load i64, i64* %20, align 8, !dbg !4559
  %6596 = icmp ult i64 %6594, %6595, !dbg !4559
  br label %originalBB276

originalBB280alteredBB:                           ; preds = %originalBB280, %1163
  %6597 = load i8*, i8** %19, align 8, !dbg !4559
  %6598 = load i64, i64* %29, align 8, !dbg !4559
  %6599 = getelementptr inbounds i8, i8* %6597, i64 %6598, !dbg !4559
  store i8 36, i8* %6599, align 1, !dbg !4559
  br label %originalBB280

originalBB284alteredBB:                           ; preds = %originalBB284, %1183
  %6600 = load i64, i64* %29, align 8, !dbg !4562
  %_285 = shl i64 %6600, 1
  %_286 = shl i64 %6600, 1
  %_287 = shl i64 %6600, 1
  %_288 = shl i64 %6600, 1
  %_289 = sub i64 0, %6600
  %gen290 = add i64 %_289, 1
  %6601 = add i64 %6600, 1, !dbg !4562
  store i64 %6601, i64* %29, align 8, !dbg !4562
  br label %originalBB284

originalBB294alteredBB:                           ; preds = %originalBB294, %1202
  br label %originalBB294

originalBB298alteredBB:                           ; preds = %originalBB298, %1223
  %6602 = load i8*, i8** %19, align 8, !dbg !4563
  %6603 = load i64, i64* %29, align 8, !dbg !4563
  %6604 = getelementptr inbounds i8, i8* %6602, i64 %6603, !dbg !4563
  store i8 39, i8* %6604, align 1, !dbg !4563
  br label %originalBB298

originalBB302alteredBB:                           ; preds = %originalBB302, %1243
  %6605 = load i64, i64* %29, align 8, !dbg !4566
  %_303 = shl i64 %6605, 1
  %_304 = sub i64 0, %6605
  %gen305 = add i64 %_304, 1
  %6606 = add i64 %6605, 1, !dbg !4566
  store i64 %6606, i64* %29, align 8, !dbg !4566
  br label %originalBB302

originalBB309alteredBB:                           ; preds = %originalBB309, %1262
  store i8 1, i8* %36, align 1, !dbg !4553
  br label %originalBB309

originalBB313alteredBB:                           ; preds = %originalBB313, %1279
  br label %originalBB313

originalBB317alteredBB:                           ; preds = %originalBB317, %1296
  %6607 = load i64, i64* %29, align 8, !dbg !4567
  %6608 = load i64, i64* %20, align 8, !dbg !4567
  %6609 = icmp ult i64 %6607, %6608, !dbg !4567
  br label %originalBB317

originalBB321alteredBB:                           ; preds = %originalBB321, %1316
  %6610 = load i8*, i8** %19, align 8, !dbg !4567
  %6611 = load i64, i64* %29, align 8, !dbg !4567
  %6612 = getelementptr inbounds i8, i8* %6610, i64 %6611, !dbg !4567
  store i8 92, i8* %6612, align 1, !dbg !4567
  br label %originalBB321

originalBB325alteredBB:                           ; preds = %originalBB325, %1336
  %6613 = load i64, i64* %29, align 8, !dbg !4570
  %6614 = add i64 %6613, 1, !dbg !4570
  store i64 %6614, i64* %29, align 8, !dbg !4570
  br label %originalBB325

originalBB329alteredBB:                           ; preds = %originalBB329, %1355
  br label %originalBB329

originalBB333alteredBB:                           ; preds = %originalBB333, %1375
  %6615 = load i64, i64* %28, align 8, !dbg !4575
  %_334 = sub i64 %6615, 1
  %gen335 = mul i64 %_334, 1
  %_336 = sub i64 0, %6615
  %gen337 = add i64 %_336, 1
  %_338 = sub i64 %6615, 1
  %gen339 = mul i64 %_338, 1
  %6616 = add i64 %6615, 1, !dbg !4576
  %6617 = load i64, i64* %22, align 8, !dbg !4577
  %6618 = icmp ult i64 %6616, %6617, !dbg !4578
  br label %originalBB333

originalBB343alteredBB:                           ; preds = %originalBB343, %1396
  %6619 = load i8*, i8** %21, align 8, !dbg !4580
  %6620 = load i64, i64* %28, align 8, !dbg !4581
  %_344 = sub i64 0, %6620
  %gen345 = add i64 %_344, 1
  %_346 = sub i64 %6620, 1
  %gen347 = mul i64 %_346, 1
  %_348 = sub i64 0, %6620
  %gen349 = add i64 %_348, 1
  %_350 = shl i64 %6620, 1
  %_351 = shl i64 %6620, 1
  %_352 = sub i64 %6620, 1
  %gen353 = mul i64 %_352, 1
  %6621 = add i64 %6620, 1, !dbg !4582
  %6622 = getelementptr inbounds i8, i8* %6619, i64 %6621, !dbg !4580
  %6623 = load i8, i8* %6622, align 1, !dbg !4580
  %6624 = sext i8 %6623 to i32, !dbg !4580
  %6625 = icmp sle i32 48, %6624, !dbg !4583
  br label %originalBB343

originalBB357alteredBB:                           ; preds = %originalBB357, %1420
  %6626 = load i8*, i8** %21, align 8, !dbg !4585
  %6627 = load i64, i64* %28, align 8, !dbg !4586
  %_358 = sub i64 %6627, 1
  %gen359 = mul i64 %_358, 1
  %6628 = add i64 %6627, 1, !dbg !4587
  %6629 = getelementptr inbounds i8, i8* %6626, i64 %6628, !dbg !4585
  %6630 = load i8, i8* %6629, align 1, !dbg !4585
  %6631 = sext i8 %6630 to i32, !dbg !4585
  %6632 = icmp sle i32 %6631, 57, !dbg !4588
  br label %originalBB357

originalBB363alteredBB:                           ; preds = %originalBB363, %1444
  br label %originalBB363

originalBB367alteredBB:                           ; preds = %originalBB367, %1461
  %6633 = load i64, i64* %29, align 8, !dbg !4592
  %6634 = load i64, i64* %20, align 8, !dbg !4592
  %6635 = icmp ult i64 %6633, %6634, !dbg !4592
  br label %originalBB367

originalBB371alteredBB:                           ; preds = %originalBB371, %1481
  %6636 = load i8*, i8** %19, align 8, !dbg !4592
  %6637 = load i64, i64* %29, align 8, !dbg !4592
  %6638 = getelementptr inbounds i8, i8* %6636, i64 %6637, !dbg !4592
  store i8 48, i8* %6638, align 1, !dbg !4592
  br label %originalBB371

originalBB375alteredBB:                           ; preds = %originalBB375, %1504
  br label %originalBB375

originalBB379alteredBB:                           ; preds = %originalBB379, %1521
  %6639 = load i64, i64* %29, align 8, !dbg !4597
  %6640 = load i64, i64* %20, align 8, !dbg !4597
  %6641 = icmp ult i64 %6639, %6640, !dbg !4597
  br label %originalBB379

originalBB383alteredBB:                           ; preds = %originalBB383, %1541
  %6642 = load i8*, i8** %19, align 8, !dbg !4597
  %6643 = load i64, i64* %29, align 8, !dbg !4597
  %6644 = getelementptr inbounds i8, i8* %6642, i64 %6643, !dbg !4597
  store i8 48, i8* %6644, align 1, !dbg !4597
  br label %originalBB383

originalBB387alteredBB:                           ; preds = %originalBB387, %1564
  br label %originalBB387

originalBB391alteredBB:                           ; preds = %originalBB391, %1581
  store i8 48, i8* %39, align 1, !dbg !4602
  br label %originalBB391

originalBB395alteredBB:                           ; preds = %originalBB395, %1598
  %6645 = load i32, i32* %24, align 4, !dbg !4604
  %_396 = sub i32 %6645, 1
  %gen397 = mul i32 %_396, 1
  %6646 = and i32 %6645, 1, !dbg !4606
  %6647 = icmp ne i32 %6646, 0, !dbg !4606
  br label %originalBB395

originalBB401alteredBB:                           ; preds = %originalBB401, %1618
  br label %originalBB401

originalBB405alteredBB:                           ; preds = %originalBB405, %1635
  br label %originalBB405

originalBB409alteredBB:                           ; preds = %originalBB409, %1652
  br label %originalBB409

originalBB413alteredBB:                           ; preds = %originalBB413, %1669
  %6648 = load i32, i32* %23, align 4, !dbg !4610
  br label %originalBB413

originalBB417alteredBB:                           ; preds = %originalBB417, %1687
  %6649 = load i8, i8* %35, align 1, !dbg !4612
  %6650 = trunc i8 %6649 to i1, !dbg !4612
  br label %originalBB417

originalBB421alteredBB:                           ; preds = %originalBB421, %1706
  br label %originalBB421

originalBB425alteredBB:                           ; preds = %originalBB425, %1723
  br label %originalBB425

originalBB429alteredBB:                           ; preds = %originalBB429, %1740
  %6651 = load i32, i32* %24, align 4, !dbg !4618
  %_430 = sub i32 %6651, 4
  %gen431 = mul i32 %_430, 4
  %_432 = shl i32 %6651, 4
  %6652 = and i32 %6651, 4, !dbg !4620
  %6653 = icmp ne i32 %6652, 0, !dbg !4620
  br label %originalBB429

originalBB436alteredBB:                           ; preds = %originalBB436, %1760
  %6654 = load i64, i64* %28, align 8, !dbg !4622
  %_437 = shl i64 %6654, 2
  %_438 = shl i64 %6654, 2
  %_439 = sub i64 0, %6654
  %gen440 = add i64 %_439, 2
  %_441 = shl i64 %6654, 2
  %_442 = sub i64 0, %6654
  %gen443 = add i64 %_442, 2
  %_444 = sub i64 0, %6654
  %gen445 = add i64 %_444, 2
  %_446 = shl i64 %6654, 2
  %6655 = add i64 %6654, 2, !dbg !4623
  %6656 = load i64, i64* %22, align 8, !dbg !4624
  %6657 = icmp ult i64 %6655, %6656, !dbg !4625
  br label %originalBB436

originalBB450alteredBB:                           ; preds = %originalBB450, %1781
  %6658 = load i8*, i8** %21, align 8, !dbg !4627
  %6659 = load i64, i64* %28, align 8, !dbg !4628
  %_451 = sub i64 %6659, 1
  %gen452 = mul i64 %_451, 1
  %_453 = sub i64 %6659, 1
  %gen454 = mul i64 %_453, 1
  %6660 = add i64 %6659, 1, !dbg !4629
  %6661 = getelementptr inbounds i8, i8* %6658, i64 %6660, !dbg !4627
  %6662 = load i8, i8* %6661, align 1, !dbg !4627
  %6663 = sext i8 %6662 to i32, !dbg !4627
  %6664 = icmp eq i32 %6663, 63, !dbg !4630
  br label %originalBB450

originalBB458alteredBB:                           ; preds = %originalBB458, %1805
  %6665 = load i8*, i8** %21, align 8, !dbg !4632
  %6666 = load i64, i64* %28, align 8, !dbg !4633
  %_459 = sub i64 %6666, 2
  %gen460 = mul i64 %_459, 2
  %_461 = sub i64 %6666, 2
  %gen462 = mul i64 %_461, 2
  %_463 = shl i64 %6666, 2
  %_464 = sub i64 0, %6666
  %gen465 = add i64 %_464, 2
  %_466 = sub i64 %6666, 2
  %gen467 = mul i64 %_466, 2
  %6667 = add i64 %6666, 2, !dbg !4634
  %6668 = getelementptr inbounds i8, i8* %6665, i64 %6667, !dbg !4632
  %6669 = load i8, i8* %6668, align 1, !dbg !4632
  %6670 = sext i8 %6669 to i32, !dbg !4632
  br label %originalBB458

originalBB471alteredBB:                           ; preds = %originalBB471, %1828
  %6671 = load i8, i8* %35, align 1, !dbg !4636
  %6672 = trunc i8 %6671 to i1, !dbg !4636
  br label %originalBB471

originalBB475alteredBB:                           ; preds = %originalBB475, %1847
  br label %originalBB475

originalBB479alteredBB:                           ; preds = %originalBB479, %1864
  %6673 = load i8*, i8** %21, align 8, !dbg !4641
  %6674 = load i64, i64* %28, align 8, !dbg !4642
  %_480 = sub i64 0, %6674
  %gen481 = add i64 %_480, 2
  %_482 = sub i64 %6674, 2
  %gen483 = mul i64 %_482, 2
  %_484 = sub i64 0, %6674
  %gen485 = add i64 %_484, 2
  %6675 = add i64 %6674, 2, !dbg !4643
  %6676 = getelementptr inbounds i8, i8* %6673, i64 %6675, !dbg !4641
  %6677 = load i8, i8* %6676, align 1, !dbg !4641
  store i8 %6677, i8* %39, align 1, !dbg !4644
  %6678 = load i64, i64* %28, align 8, !dbg !4645
  %_486 = shl i64 %6678, 2
  %_487 = sub i64 %6678, 2
  %gen488 = mul i64 %_487, 2
  %_489 = shl i64 %6678, 2
  %_490 = sub i64 0, %6678
  %gen491 = add i64 %_490, 2
  %6679 = add i64 %6678, 2, !dbg !4645
  store i64 %6679, i64* %28, align 8, !dbg !4645
  br label %originalBB479

originalBB495alteredBB:                           ; preds = %originalBB495, %1888
  %6680 = load i64, i64* %29, align 8, !dbg !4647
  %6681 = load i64, i64* %20, align 8, !dbg !4647
  %6682 = icmp ult i64 %6680, %6681, !dbg !4647
  br label %originalBB495

originalBB499alteredBB:                           ; preds = %originalBB499, %1912
  %6683 = load i64, i64* %29, align 8, !dbg !4650
  %_500 = sub i64 0, %6683
  %gen501 = add i64 %_500, 1
  %_502 = sub i64 %6683, 1
  %gen503 = mul i64 %_502, 1
  %_504 = shl i64 %6683, 1
  %_505 = shl i64 %6683, 1
  %6684 = add i64 %6683, 1, !dbg !4650
  store i64 %6684, i64* %29, align 8, !dbg !4650
  br label %originalBB499

originalBB509alteredBB:                           ; preds = %originalBB509, %1931
  br label %originalBB509

originalBB513alteredBB:                           ; preds = %originalBB513, %1952
  %6685 = load i8*, i8** %19, align 8, !dbg !4652
  %6686 = load i64, i64* %29, align 8, !dbg !4652
  %6687 = getelementptr inbounds i8, i8* %6685, i64 %6686, !dbg !4652
  store i8 34, i8* %6687, align 1, !dbg !4652
  br label %originalBB513

originalBB517alteredBB:                           ; preds = %originalBB517, %1972
  %6688 = load i64, i64* %29, align 8, !dbg !4655
  %_518 = sub i64 %6688, 1
  %gen519 = mul i64 %_518, 1
  %6689 = add i64 %6688, 1, !dbg !4655
  store i64 %6689, i64* %29, align 8, !dbg !4655
  br label %originalBB517

originalBB523alteredBB:                           ; preds = %originalBB523, %1991
  br label %originalBB523

originalBB527alteredBB:                           ; preds = %originalBB527, %2008
  %6690 = load i64, i64* %29, align 8, !dbg !4657
  %6691 = load i64, i64* %20, align 8, !dbg !4657
  %6692 = icmp ult i64 %6690, %6691, !dbg !4657
  br label %originalBB527

originalBB531alteredBB:                           ; preds = %originalBB531, %2028
  %6693 = load i8*, i8** %19, align 8, !dbg !4657
  %6694 = load i64, i64* %29, align 8, !dbg !4657
  %6695 = getelementptr inbounds i8, i8* %6693, i64 %6694, !dbg !4657
  store i8 34, i8* %6695, align 1, !dbg !4657
  br label %originalBB531

originalBB535alteredBB:                           ; preds = %originalBB535, %2048
  %6696 = load i64, i64* %29, align 8, !dbg !4660
  %_536 = shl i64 %6696, 1
  %_537 = shl i64 %6696, 1
  %_538 = sub i64 0, %6696
  %gen539 = add i64 %_538, 1
  %_540 = sub i64 %6696, 1
  %gen541 = mul i64 %_540, 1
  %6697 = add i64 %6696, 1, !dbg !4660
  store i64 %6697, i64* %29, align 8, !dbg !4660
  br label %originalBB535

originalBB545alteredBB:                           ; preds = %originalBB545, %2067
  br label %originalBB545

originalBB549alteredBB:                           ; preds = %originalBB549, %2084
  %6698 = load i64, i64* %29, align 8, !dbg !4662
  %6699 = load i64, i64* %20, align 8, !dbg !4662
  %6700 = icmp ult i64 %6698, %6699, !dbg !4662
  br label %originalBB549

originalBB553alteredBB:                           ; preds = %originalBB553, %2104
  %6701 = load i8*, i8** %19, align 8, !dbg !4662
  %6702 = load i64, i64* %29, align 8, !dbg !4662
  %6703 = getelementptr inbounds i8, i8* %6701, i64 %6702, !dbg !4662
  store i8 63, i8* %6703, align 1, !dbg !4662
  br label %originalBB553

originalBB557alteredBB:                           ; preds = %originalBB557, %2124
  %6704 = load i64, i64* %29, align 8, !dbg !4665
  %_558 = shl i64 %6704, 1
  %_559 = sub i64 0, %6704
  %gen560 = add i64 %_559, 1
  %_561 = sub i64 0, %6704
  %gen562 = add i64 %_561, 1
  %_563 = shl i64 %6704, 1
  %_564 = sub i64 0, %6704
  %gen565 = add i64 %_564, 1
  %6705 = add i64 %6704, 1, !dbg !4665
  store i64 %6705, i64* %29, align 8, !dbg !4665
  br label %originalBB557

originalBB569alteredBB:                           ; preds = %originalBB569, %2143
  br label %originalBB569

originalBB573alteredBB:                           ; preds = %originalBB573, %2160
  br label %originalBB573

originalBB577alteredBB:                           ; preds = %originalBB577, %2177
  br label %originalBB577

originalBB581alteredBB:                           ; preds = %originalBB581, %2194
  br label %originalBB581

originalBB585alteredBB:                           ; preds = %originalBB585, %2213
  store i8 97, i8* %40, align 1, !dbg !4672
  br label %originalBB585

originalBB589alteredBB:                           ; preds = %originalBB589, %2230
  store i8 98, i8* %40, align 1, !dbg !4674
  br label %originalBB589

originalBB593alteredBB:                           ; preds = %originalBB593, %2247
  store i8 102, i8* %40, align 1, !dbg !4676
  br label %originalBB593

originalBB597alteredBB:                           ; preds = %originalBB597, %2264
  store i8 110, i8* %40, align 1, !dbg !4678
  br label %originalBB597

originalBB601alteredBB:                           ; preds = %originalBB601, %2281
  store i8 114, i8* %40, align 1, !dbg !4680
  br label %originalBB601

originalBB605alteredBB:                           ; preds = %originalBB605, %2299
  store i8 118, i8* %40, align 1, !dbg !4684
  br label %originalBB605

originalBB609alteredBB:                           ; preds = %originalBB609, %2320
  %6706 = load i8, i8* %35, align 1, !dbg !4692
  %6707 = trunc i8 %6706 to i1, !dbg !4692
  br label %originalBB609

originalBB613alteredBB:                           ; preds = %originalBB613, %2339
  br label %originalBB613

originalBB617alteredBB:                           ; preds = %originalBB617, %2356
  br label %originalBB617

originalBB621alteredBB:                           ; preds = %originalBB621, %2373
  %6708 = load i8, i8* %33, align 1, !dbg !4698
  %6709 = trunc i8 %6708 to i1, !dbg !4698
  br label %originalBB621

originalBB625alteredBB:                           ; preds = %originalBB625, %2392
  %6710 = load i8, i8* %35, align 1, !dbg !4701
  %6711 = trunc i8 %6710 to i1, !dbg !4701
  br label %originalBB625

originalBB629alteredBB:                           ; preds = %originalBB629, %2411
  %6712 = load i64, i64* %32, align 8, !dbg !4703
  %6713 = icmp ne i64 %6712, 0, !dbg !4703
  br label %originalBB629

originalBB633alteredBB:                           ; preds = %originalBB633, %2430
  br label %originalBB633

originalBB637alteredBB:                           ; preds = %originalBB637, %2447
  br label %originalBB637

originalBB641alteredBB:                           ; preds = %originalBB641, %2464
  %6714 = load i32, i32* %23, align 4, !dbg !4708
  %6715 = icmp eq i32 %6714, 2, !dbg !4710
  br label %originalBB641

originalBB645alteredBB:                           ; preds = %originalBB645, %2483
  %6716 = load i8, i8* %35, align 1, !dbg !4712
  %6717 = trunc i8 %6716 to i1, !dbg !4712
  br label %originalBB645

originalBB649alteredBB:                           ; preds = %originalBB649, %2502
  br label %originalBB649

originalBB653alteredBB:                           ; preds = %originalBB653, %2519
  br label %originalBB653

originalBB657alteredBB:                           ; preds = %originalBB657, %2536
  %6718 = load i8, i8* %33, align 1, !dbg !4717
  %6719 = trunc i8 %6718 to i1, !dbg !4717
  br label %originalBB657

originalBB661alteredBB:                           ; preds = %originalBB661, %2555
  %6720 = load i8, i8* %40, align 1, !dbg !4720
  store i8 %6720, i8* %39, align 1, !dbg !4722
  br label %originalBB661

originalBB665alteredBB:                           ; preds = %originalBB665, %2573
  br label %originalBB665

originalBB669alteredBB:                           ; preds = %originalBB669, %2590
  %6721 = load i64, i64* %22, align 8, !dbg !4725
  %6722 = icmp eq i64 %6721, -1, !dbg !4727
  br label %originalBB669

originalBB673alteredBB:                           ; preds = %originalBB673, %2609
  %6723 = load i8*, i8** %21, align 8, !dbg !4729
  %6724 = getelementptr inbounds i8, i8* %6723, i64 1, !dbg !4729
  %6725 = load i8, i8* %6724, align 1, !dbg !4729
  %6726 = sext i8 %6725 to i32, !dbg !4729
  %6727 = icmp eq i32 %6726, 0, !dbg !4730
  br label %originalBB673

originalBB677alteredBB:                           ; preds = %originalBB677, %2631
  %6728 = load i64, i64* %22, align 8, !dbg !4731
  %6729 = icmp eq i64 %6728, 1, !dbg !4732
  br label %originalBB677

originalBB681alteredBB:                           ; preds = %originalBB681, %2650
  br label %originalBB681

originalBB685alteredBB:                           ; preds = %originalBB685, %2667
  br label %originalBB685

originalBB689alteredBB:                           ; preds = %originalBB689, %2684
  %6730 = load i64, i64* %28, align 8, !dbg !4735
  %6731 = icmp ne i64 %6730, 0, !dbg !4737
  br label %originalBB689

originalBB693alteredBB:                           ; preds = %originalBB693, %2703
  br label %originalBB693

originalBB697alteredBB:                           ; preds = %originalBB697, %2721
  store i8 1, i8* %43, align 1, !dbg !4741
  br label %originalBB697

originalBB701alteredBB:                           ; preds = %originalBB701, %2738
  %6732 = load i32, i32* %23, align 4, !dbg !4743
  %6733 = icmp eq i32 %6732, 2, !dbg !4745
  br label %originalBB701

originalBB705alteredBB:                           ; preds = %originalBB705, %2757
  %6734 = load i8, i8* %35, align 1, !dbg !4747
  %6735 = trunc i8 %6734 to i1, !dbg !4747
  br label %originalBB705

originalBB709alteredBB:                           ; preds = %originalBB709, %2776
  br label %originalBB709

originalBB713alteredBB:                           ; preds = %originalBB713, %2793
  br label %originalBB713

originalBB717alteredBB:                           ; preds = %originalBB717, %2810
  store i8 1, i8* %37, align 1, !dbg !4751
  store i8 1, i8* %43, align 1, !dbg !4752
  %6736 = load i32, i32* %23, align 4, !dbg !4753
  %6737 = icmp eq i32 %6736, 2, !dbg !4755
  br label %originalBB717

originalBB721alteredBB:                           ; preds = %originalBB721, %2829
  %6738 = load i8, i8* %35, align 1, !dbg !4757
  %6739 = trunc i8 %6738 to i1, !dbg !4757
  br label %originalBB721

originalBB725alteredBB:                           ; preds = %originalBB725, %2848
  br label %originalBB725

originalBB729alteredBB:                           ; preds = %originalBB729, %2865
  %6740 = load i64, i64* %20, align 8, !dbg !4762
  %6741 = icmp ne i64 %6740, 0, !dbg !4762
  br label %originalBB729

originalBB733alteredBB:                           ; preds = %originalBB733, %2884
  %6742 = load i64, i64* %30, align 8, !dbg !4765
  %6743 = icmp ne i64 %6742, 0, !dbg !4765
  br label %originalBB733

originalBB737alteredBB:                           ; preds = %originalBB737, %2903
  %6744 = load i64, i64* %20, align 8, !dbg !4767
  store i64 %6744, i64* %30, align 8, !dbg !4769
  store i64 0, i64* %20, align 8, !dbg !4770
  br label %originalBB737

originalBB741alteredBB:                           ; preds = %originalBB741, %2921
  br label %originalBB741

originalBB745alteredBB:                           ; preds = %originalBB745, %2938
  %6745 = load i64, i64* %29, align 8, !dbg !4773
  %6746 = load i64, i64* %20, align 8, !dbg !4773
  %6747 = icmp ult i64 %6745, %6746, !dbg !4773
  br label %originalBB745

originalBB749alteredBB:                           ; preds = %originalBB749, %2958
  %6748 = load i8*, i8** %19, align 8, !dbg !4773
  %6749 = load i64, i64* %29, align 8, !dbg !4773
  %6750 = getelementptr inbounds i8, i8* %6748, i64 %6749, !dbg !4773
  store i8 39, i8* %6750, align 1, !dbg !4773
  br label %originalBB749

originalBB753alteredBB:                           ; preds = %originalBB753, %2978
  %6751 = load i64, i64* %29, align 8, !dbg !4776
  %_754 = sub i64 %6751, 1
  %gen755 = mul i64 %_754, 1
  %_756 = sub i64 %6751, 1
  %gen757 = mul i64 %_756, 1
  %_758 = shl i64 %6751, 1
  %_759 = sub i64 %6751, 1
  %gen760 = mul i64 %_759, 1
  %_761 = sub i64 0, %6751
  %gen762 = add i64 %_761, 1
  %_763 = sub i64 0, %6751
  %gen764 = add i64 %_763, 1
  %6752 = add i64 %6751, 1, !dbg !4776
  store i64 %6752, i64* %29, align 8, !dbg !4776
  br label %originalBB753

originalBB768alteredBB:                           ; preds = %originalBB768, %2997
  br label %originalBB768

originalBB772alteredBB:                           ; preds = %originalBB772, %3014
  %6753 = load i64, i64* %29, align 8, !dbg !4778
  %6754 = load i64, i64* %20, align 8, !dbg !4778
  %6755 = icmp ult i64 %6753, %6754, !dbg !4778
  br label %originalBB772

originalBB776alteredBB:                           ; preds = %originalBB776, %3038
  %6756 = load i64, i64* %29, align 8, !dbg !4781
  %_777 = shl i64 %6756, 1
  %_778 = shl i64 %6756, 1
  %_779 = sub i64 %6756, 1
  %gen780 = mul i64 %_779, 1
  %_781 = shl i64 %6756, 1
  %6757 = add i64 %6756, 1, !dbg !4781
  store i64 %6757, i64* %29, align 8, !dbg !4781
  br label %originalBB776

originalBB785alteredBB:                           ; preds = %originalBB785, %3057
  br label %originalBB785

originalBB789alteredBB:                           ; preds = %originalBB789, %3074
  %6758 = load i64, i64* %29, align 8, !dbg !4783
  %6759 = load i64, i64* %20, align 8, !dbg !4783
  %6760 = icmp ult i64 %6758, %6759, !dbg !4783
  br label %originalBB789

originalBB793alteredBB:                           ; preds = %originalBB793, %3094
  %6761 = load i8*, i8** %19, align 8, !dbg !4783
  %6762 = load i64, i64* %29, align 8, !dbg !4783
  %6763 = getelementptr inbounds i8, i8* %6761, i64 %6762, !dbg !4783
  store i8 39, i8* %6763, align 1, !dbg !4783
  br label %originalBB793

originalBB797alteredBB:                           ; preds = %originalBB797, %3114
  %6764 = load i64, i64* %29, align 8, !dbg !4786
  %_798 = sub i64 0, %6764
  %gen799 = add i64 %_798, 1
  %6765 = add i64 %6764, 1, !dbg !4786
  store i64 %6765, i64* %29, align 8, !dbg !4786
  br label %originalBB797

originalBB803alteredBB:                           ; preds = %originalBB803, %3133
  store i8 0, i8* %36, align 1, !dbg !4787
  br label %originalBB803

originalBB807alteredBB:                           ; preds = %originalBB807, %3150
  br label %originalBB807

originalBB811alteredBB:                           ; preds = %originalBB811, %3167
  store i8 1, i8* %43, align 1, !dbg !4790
  br label %originalBB811

originalBB815alteredBB:                           ; preds = %originalBB815, %3184
  %6766 = load i8, i8* %34, align 1, !dbg !4797
  %6767 = trunc i8 %6766 to i1, !dbg !4797
  br label %originalBB815

originalBB819alteredBB:                           ; preds = %originalBB819, %3203
  store i64 1, i64* %44, align 8, !dbg !4800
  %6768 = call i16** @__ctype_b_loc() #15, !dbg !4802
  %6769 = load i16*, i16** %6768, align 8, !dbg !4802
  %6770 = load i8, i8* %39, align 1, !dbg !4802
  %6771 = zext i8 %6770 to i32, !dbg !4802
  %6772 = sext i32 %6771 to i64, !dbg !4802
  %6773 = getelementptr inbounds i16, i16* %6769, i64 %6772, !dbg !4802
  %6774 = load i16, i16* %6773, align 2, !dbg !4802
  %6775 = zext i16 %6774 to i32, !dbg !4802
  %_820 = sub i32 0, %6775
  %gen821 = add i32 %_820, 16384
  %_822 = sub i32 0, %6775
  %gen823 = add i32 %_822, 16384
  %6776 = and i32 %6775, 16384, !dbg !4802
  %6777 = icmp ne i32 %6776, 0, !dbg !4803
  %6778 = zext i1 %6777 to i8, !dbg !4804
  store i8 %6778, i8* %45, align 1, !dbg !4804
  br label %originalBB819

originalBB827alteredBB:                           ; preds = %originalBB827, %3231
  %6779 = bitcast %struct.__mbstate_t* %46 to i8*, !dbg !4821
  call void @llvm.memset.p0i8.i64(i8* align 4 %6779, i8 0, i64 8, i1 false), !dbg !4821
  store i64 0, i64* %44, align 8, !dbg !4822
  store i8 1, i8* %45, align 1, !dbg !4823
  %6780 = load i64, i64* %22, align 8, !dbg !4824
  %6781 = icmp eq i64 %6780, -1, !dbg !4826
  br label %originalBB827

originalBB831alteredBB:                           ; preds = %originalBB831, %3251
  %6782 = load i8*, i8** %21, align 8, !dbg !4828
  %6783 = call i64 @strlen(i8* %6782) #13, !dbg !4829
  store i64 %6783, i64* %22, align 8, !dbg !4830
  br label %originalBB831

originalBB835alteredBB:                           ; preds = %originalBB835, %3270
  br label %originalBB835

originalBB839alteredBB:                           ; preds = %originalBB839, %3287
  %6784 = load i8*, i8** %21, align 8, !dbg !4839
  %6785 = load i64, i64* %28, align 8, !dbg !4840
  %6786 = load i64, i64* %44, align 8, !dbg !4841
  %_840 = shl i64 %6785, %6786
  %_841 = sub i64 0, %6785
  %gen842 = add i64 %_841, %6786
  %6787 = add i64 %6785, %6786, !dbg !4842
  %6788 = getelementptr inbounds i8, i8* %6784, i64 %6787, !dbg !4839
  %6789 = load i64, i64* %22, align 8, !dbg !4843
  %6790 = load i64, i64* %28, align 8, !dbg !4844
  %6791 = load i64, i64* %44, align 8, !dbg !4845
  %_843 = shl i64 %6790, %6791
  %_844 = sub i64 0, %6790
  %gen845 = add i64 %_844, %6791
  %_846 = shl i64 %6790, %6791
  %6792 = add i64 %6790, %6791, !dbg !4846
  %_847 = sub i64 %6789, %6792
  %gen848 = mul i64 %_847, %6792
  %_849 = sub i64 0, %6789
  %gen850 = add i64 %_849, %6792
  %_851 = shl i64 %6789, %6792
  %6793 = sub i64 %6789, %6792, !dbg !4847
  %6794 = call i64 @rpl_mbrtowc(i32* %47, i8* %6788, i64 %6793, %struct.__mbstate_t* %46), !dbg !4848
  store i64 %6794, i64* %48, align 8, !dbg !4838
  %6795 = load i64, i64* %48, align 8, !dbg !4849
  %6796 = icmp eq i64 %6795, 0, !dbg !4851
  br label %originalBB839

originalBB855alteredBB:                           ; preds = %originalBB855, %3317
  br label %originalBB855

originalBB859alteredBB:                           ; preds = %originalBB859, %3334
  %6797 = load i64, i64* %48, align 8, !dbg !4854
  %6798 = icmp eq i64 %6797, -1, !dbg !4856
  br label %originalBB859

originalBB863alteredBB:                           ; preds = %originalBB863, %3353
  store i8 0, i8* %45, align 1, !dbg !4858
  br label %originalBB863

originalBB867alteredBB:                           ; preds = %originalBB867, %3370
  %6799 = load i64, i64* %48, align 8, !dbg !4861
  %6800 = icmp eq i64 %6799, -2, !dbg !4863
  br label %originalBB867

originalBB871alteredBB:                           ; preds = %originalBB871, %3389
  store i8 0, i8* %45, align 1, !dbg !4865
  br label %originalBB871

originalBB875alteredBB:                           ; preds = %originalBB875, %3406
  %6801 = load i64, i64* %28, align 8, !dbg !4868
  %6802 = load i64, i64* %44, align 8, !dbg !4869
  %_876 = sub i64 %6801, %6802
  %gen877 = mul i64 %_876, %6802
  %_878 = sub i64 0, %6801
  %gen879 = add i64 %_878, %6802
  %_880 = shl i64 %6801, %6802
  %_881 = sub i64 0, %6801
  %gen882 = add i64 %_881, %6802
  %_883 = shl i64 %6801, %6802
  %_884 = sub i64 0, %6801
  %gen885 = add i64 %_884, %6802
  %_886 = sub i64 %6801, %6802
  %gen887 = mul i64 %_886, %6802
  %_888 = sub i64 %6801, %6802
  %gen889 = mul i64 %_888, %6802
  %6803 = add i64 %6801, %6802, !dbg !4870
  %6804 = load i64, i64* %22, align 8, !dbg !4871
  %6805 = icmp ult i64 %6803, %6804, !dbg !4872
  br label %originalBB875

originalBB893alteredBB:                           ; preds = %originalBB893, %3428
  %6806 = load i8*, i8** %21, align 8, !dbg !4874
  %6807 = load i64, i64* %28, align 8, !dbg !4875
  %6808 = load i64, i64* %44, align 8, !dbg !4876
  %_894 = sub i64 0, %6807
  %gen895 = add i64 %_894, %6808
  %_896 = sub i64 %6807, %6808
  %gen897 = mul i64 %_896, %6808
  %_898 = sub i64 0, %6807
  %gen899 = add i64 %_898, %6808
  %_900 = sub i64 0, %6807
  %gen901 = add i64 %_900, %6808
  %_902 = sub i64 %6807, %6808
  %gen903 = mul i64 %_902, %6808
  %_904 = sub i64 0, %6807
  %gen905 = add i64 %_904, %6808
  %_906 = sub i64 %6807, %6808
  %gen907 = mul i64 %_906, %6808
  %_908 = sub i64 %6807, %6808
  %gen909 = mul i64 %_908, %6808
  %6809 = add i64 %6807, %6808, !dbg !4877
  %6810 = getelementptr inbounds i8, i8* %6806, i64 %6809, !dbg !4874
  %6811 = load i8, i8* %6810, align 1, !dbg !4874
  %6812 = sext i8 %6811 to i32, !dbg !4874
  %6813 = icmp ne i32 %6812, 0, !dbg !4873
  br label %originalBB893

originalBB913alteredBB:                           ; preds = %originalBB913, %3453
  br label %originalBB913

originalBB917alteredBB:                           ; preds = %originalBB917, %3471
  %6814 = load i64, i64* %44, align 8, !dbg !4879
  %_918 = sub i64 0, %6814
  %gen919 = add i64 %_918, 1
  %_920 = shl i64 %6814, 1
  %_921 = shl i64 %6814, 1
  %_922 = sub i64 0, %6814
  %gen923 = add i64 %_922, 1
  %6815 = add i64 %6814, 1, !dbg !4879
  store i64 %6815, i64* %44, align 8, !dbg !4879
  br label %originalBB917

originalBB927alteredBB:                           ; preds = %originalBB927, %3491
  %6816 = load i8, i8* %35, align 1, !dbg !4882
  %6817 = trunc i8 %6816 to i1, !dbg !4882
  br label %originalBB927

originalBB931alteredBB:                           ; preds = %originalBB931, %3510
  %6818 = load i32, i32* %23, align 4, !dbg !4886
  %6819 = icmp eq i32 %6818, 2, !dbg !4887
  br label %originalBB931

originalBB935alteredBB:                           ; preds = %originalBB935, %3529
  store i64 1, i64* %49, align 8, !dbg !4892
  br label %originalBB935

originalBB939alteredBB:                           ; preds = %originalBB939, %3546
  %6820 = load i64, i64* %49, align 8, !dbg !4895
  %6821 = load i64, i64* %48, align 8, !dbg !4897
  %6822 = icmp ult i64 %6820, %6821, !dbg !4898
  br label %originalBB939

originalBB943alteredBB:                           ; preds = %originalBB943, %3566
  %6823 = load i8*, i8** %21, align 8, !dbg !4900
  %6824 = load i64, i64* %28, align 8, !dbg !4901
  %6825 = load i64, i64* %44, align 8, !dbg !4902
  %_944 = sub i64 %6824, %6825
  %gen945 = mul i64 %_944, %6825
  %_946 = sub i64 %6824, %6825
  %gen947 = mul i64 %_946, %6825
  %_948 = shl i64 %6824, %6825
  %_949 = shl i64 %6824, %6825
  %_950 = shl i64 %6824, %6825
  %_951 = shl i64 %6824, %6825
  %6826 = add i64 %6824, %6825, !dbg !4903
  %6827 = load i64, i64* %49, align 8, !dbg !4904
  %_952 = sub i64 0, %6826
  %gen953 = add i64 %_952, %6827
  %_954 = sub i64 0, %6826
  %gen955 = add i64 %_954, %6827
  %_956 = sub i64 0, %6826
  %gen957 = add i64 %_956, %6827
  %_958 = sub i64 %6826, %6827
  %gen959 = mul i64 %_958, %6827
  %_960 = sub i64 %6826, %6827
  %gen961 = mul i64 %_960, %6827
  %_962 = sub i64 %6826, %6827
  %gen963 = mul i64 %_962, %6827
  %_964 = sub i64 %6826, %6827
  %gen965 = mul i64 %_964, %6827
  %6828 = add i64 %6826, %6827, !dbg !4905
  %6829 = getelementptr inbounds i8, i8* %6823, i64 %6828, !dbg !4900
  %6830 = load i8, i8* %6829, align 1, !dbg !4900
  %6831 = sext i8 %6830 to i32, !dbg !4900
  br label %originalBB943

originalBB969alteredBB:                           ; preds = %originalBB969, %3592
  br label %originalBB969

originalBB973alteredBB:                           ; preds = %originalBB973, %3609
  br label %originalBB973

originalBB977alteredBB:                           ; preds = %originalBB977, %3626
  br label %originalBB977

originalBB981alteredBB:                           ; preds = %originalBB981, %3643
  %6832 = load i64, i64* %49, align 8, !dbg !4911
  %_982 = shl i64 %6832, 1
  %_983 = sub i64 %6832, 1
  %gen984 = mul i64 %_983, 1
  %_985 = sub i64 0, %6832
  %gen986 = add i64 %_985, 1
  %_987 = shl i64 %6832, 1
  %_988 = sub i64 %6832, 1
  %gen989 = mul i64 %_988, 1
  %_990 = sub i64 0, %6832
  %gen991 = add i64 %_990, 1
  %6833 = add i64 %6832, 1, !dbg !4911
  store i64 %6833, i64* %49, align 8, !dbg !4911
  br label %originalBB981

originalBB995alteredBB:                           ; preds = %originalBB995, %3662
  br label %originalBB995

originalBB999alteredBB:                           ; preds = %originalBB999, %3679
  %6834 = load i32, i32* %47, align 4, !dbg !4916
  %6835 = call i32 @iswprint(i32 %6834) #10, !dbg !4918
  %6836 = icmp ne i32 %6835, 0, !dbg !4918
  br label %originalBB999

originalBB1003alteredBB:                          ; preds = %originalBB1003, %3699
  store i8 0, i8* %45, align 1, !dbg !4920
  br label %originalBB1003

originalBB1007alteredBB:                          ; preds = %originalBB1007, %3716
  %6837 = load i64, i64* %48, align 8, !dbg !4922
  %6838 = load i64, i64* %44, align 8, !dbg !4923
  %_1008 = sub i64 0, %6838
  %gen1009 = add i64 %_1008, %6837
  %6839 = add i64 %6838, %6837, !dbg !4923
  store i64 %6839, i64* %44, align 8, !dbg !4923
  br label %originalBB1007

originalBB1013alteredBB:                          ; preds = %originalBB1013, %3736
  br label %originalBB1013

originalBB1017alteredBB:                          ; preds = %originalBB1017, %3753
  br label %originalBB1017

originalBB1021alteredBB:                          ; preds = %originalBB1021, %3770
  br label %originalBB1021

originalBB1025alteredBB:                          ; preds = %originalBB1025, %3787
  %6840 = call i32 @mbsinit(%struct.__mbstate_t* %46) #13, !dbg !4925
  %6841 = icmp ne i32 %6840, 0, !dbg !4926
  %_1026 = sub i1 false, %6841
  %gen1027 = add i1 %_1026, true
  %_1028 = shl i1 %6841, true
  %_1029 = shl i1 %6841, true
  %_1030 = sub i1 %6841, true
  %gen1031 = mul i1 %_1030, true
  %_1032 = sub i1 %6841, true
  %gen1033 = mul i1 %_1032, true
  %_1034 = shl i1 %6841, true
  %_1035 = shl i1 %6841, true
  %6842 = xor i1 %6841, true, !dbg !4926
  br label %originalBB1025

originalBB1039alteredBB:                          ; preds = %originalBB1039, %3807
  br label %originalBB1039

originalBB1043alteredBB:                          ; preds = %originalBB1043, %3824
  %6843 = load i8, i8* %45, align 1, !dbg !4929
  %6844 = trunc i8 %6843 to i1, !dbg !4929
  %6845 = zext i1 %6844 to i8, !dbg !4930
  store i8 %6845, i8* %43, align 1, !dbg !4930
  %6846 = load i64, i64* %44, align 8, !dbg !4931
  %6847 = icmp ult i64 1, %6846, !dbg !4933
  br label %originalBB1043

originalBB1047alteredBB:                          ; preds = %originalBB1047, %3849
  %6848 = load i8, i8* %45, align 1, !dbg !4937
  %6849 = trunc i8 %6848 to i1, !dbg !4937
  br label %originalBB1047

originalBB1051alteredBB:                          ; preds = %originalBB1051, %3868
  %6850 = load i64, i64* %28, align 8, !dbg !4942
  %6851 = load i64, i64* %44, align 8, !dbg !4943
  %_1052 = sub i64 %6850, %6851
  %gen1053 = mul i64 %_1052, %6851
  %_1054 = shl i64 %6850, %6851
  %_1055 = sub i64 0, %6850
  %gen1056 = add i64 %_1055, %6851
  %_1057 = sub i64 0, %6850
  %gen1058 = add i64 %_1057, %6851
  %_1059 = sub i64 %6850, %6851
  %gen1060 = mul i64 %_1059, %6851
  %_1061 = sub i64 %6850, %6851
  %gen1062 = mul i64 %_1061, %6851
  %_1063 = sub i64 0, %6850
  %gen1064 = add i64 %_1063, %6851
  %_1065 = sub i64 %6850, %6851
  %gen1066 = mul i64 %_1065, %6851
  %6852 = add i64 %6850, %6851, !dbg !4944
  store i64 %6852, i64* %50, align 8, !dbg !4941
  br label %originalBB1051

originalBB1070alteredBB:                          ; preds = %originalBB1070, %3888
  %6853 = load i8, i8* %33, align 1, !dbg !4946
  %6854 = trunc i8 %6853 to i1, !dbg !4946
  br label %originalBB1070

originalBB1074alteredBB:                          ; preds = %originalBB1074, %3907
  %6855 = load i8, i8* %45, align 1, !dbg !4952
  %6856 = trunc i8 %6855 to i1, !dbg !4952
  br label %originalBB1074

originalBB1078alteredBB:                          ; preds = %originalBB1078, %3926
  br label %originalBB1078

originalBB1082alteredBB:                          ; preds = %originalBB1082, %3943
  %6857 = load i8, i8* %35, align 1, !dbg !4956
  %6858 = trunc i8 %6857 to i1, !dbg !4956
  br label %originalBB1082

originalBB1086alteredBB:                          ; preds = %originalBB1086, %3963
  store i8 1, i8* %42, align 1, !dbg !4959
  %6859 = load i32, i32* %23, align 4, !dbg !4960
  %6860 = icmp eq i32 %6859, 2, !dbg !4960
  br label %originalBB1086

originalBB1090alteredBB:                          ; preds = %originalBB1090, %3982
  %6861 = load i8, i8* %36, align 1, !dbg !4960
  %6862 = trunc i8 %6861 to i1, !dbg !4960
  br label %originalBB1090

originalBB1094alteredBB:                          ; preds = %originalBB1094, %4001
  br label %originalBB1094

originalBB1098alteredBB:                          ; preds = %originalBB1098, %4018
  %6863 = load i64, i64* %29, align 8, !dbg !4964
  %6864 = load i64, i64* %20, align 8, !dbg !4964
  %6865 = icmp ult i64 %6863, %6864, !dbg !4964
  br label %originalBB1098

originalBB1102alteredBB:                          ; preds = %originalBB1102, %4038
  %6866 = load i8*, i8** %19, align 8, !dbg !4964
  %6867 = load i64, i64* %29, align 8, !dbg !4964
  %6868 = getelementptr inbounds i8, i8* %6866, i64 %6867, !dbg !4964
  store i8 39, i8* %6868, align 1, !dbg !4964
  br label %originalBB1102

originalBB1106alteredBB:                          ; preds = %originalBB1106, %4058
  %6869 = load i64, i64* %29, align 8, !dbg !4967
  %_1107 = shl i64 %6869, 1
  %_1108 = sub i64 %6869, 1
  %gen1109 = mul i64 %_1108, 1
  %_1110 = sub i64 0, %6869
  %gen1111 = add i64 %_1110, 1
  %_1112 = shl i64 %6869, 1
  %_1113 = sub i64 %6869, 1
  %gen1114 = mul i64 %_1113, 1
  %_1115 = sub i64 0, %6869
  %gen1116 = add i64 %_1115, 1
  %6870 = add i64 %6869, 1, !dbg !4967
  store i64 %6870, i64* %29, align 8, !dbg !4967
  br label %originalBB1106

originalBB1120alteredBB:                          ; preds = %originalBB1120, %4077
  br label %originalBB1120

originalBB1124alteredBB:                          ; preds = %originalBB1124, %4094
  %6871 = load i64, i64* %29, align 8, !dbg !4968
  %6872 = load i64, i64* %20, align 8, !dbg !4968
  %6873 = icmp ult i64 %6871, %6872, !dbg !4968
  br label %originalBB1124

originalBB1128alteredBB:                          ; preds = %originalBB1128, %4114
  %6874 = load i8*, i8** %19, align 8, !dbg !4968
  %6875 = load i64, i64* %29, align 8, !dbg !4968
  %6876 = getelementptr inbounds i8, i8* %6874, i64 %6875, !dbg !4968
  store i8 36, i8* %6876, align 1, !dbg !4968
  br label %originalBB1128

originalBB1132alteredBB:                          ; preds = %originalBB1132, %4134
  %6877 = load i64, i64* %29, align 8, !dbg !4971
  %_1133 = shl i64 %6877, 1
  %_1134 = shl i64 %6877, 1
  %_1135 = sub i64 0, %6877
  %gen1136 = add i64 %_1135, 1
  %6878 = add i64 %6877, 1, !dbg !4971
  store i64 %6878, i64* %29, align 8, !dbg !4971
  br label %originalBB1132

originalBB1140alteredBB:                          ; preds = %originalBB1140, %4153
  br label %originalBB1140

originalBB1144alteredBB:                          ; preds = %originalBB1144, %4170
  %6879 = load i64, i64* %29, align 8, !dbg !4972
  %6880 = load i64, i64* %20, align 8, !dbg !4972
  %6881 = icmp ult i64 %6879, %6880, !dbg !4972
  br label %originalBB1144

originalBB1148alteredBB:                          ; preds = %originalBB1148, %4190
  %6882 = load i8*, i8** %19, align 8, !dbg !4972
  %6883 = load i64, i64* %29, align 8, !dbg !4972
  %6884 = getelementptr inbounds i8, i8* %6882, i64 %6883, !dbg !4972
  store i8 39, i8* %6884, align 1, !dbg !4972
  br label %originalBB1148

originalBB1152alteredBB:                          ; preds = %originalBB1152, %4210
  %6885 = load i64, i64* %29, align 8, !dbg !4975
  %_1153 = sub i64 0, %6885
  %gen1154 = add i64 %_1153, 1
  %_1155 = shl i64 %6885, 1
  %_1156 = shl i64 %6885, 1
  %6886 = add i64 %6885, 1, !dbg !4975
  store i64 %6886, i64* %29, align 8, !dbg !4975
  br label %originalBB1152

originalBB1160alteredBB:                          ; preds = %originalBB1160, %4230
  br label %originalBB1160

originalBB1164alteredBB:                          ; preds = %originalBB1164, %4247
  %6887 = load i64, i64* %29, align 8, !dbg !4976
  %6888 = load i64, i64* %20, align 8, !dbg !4976
  %6889 = icmp ult i64 %6887, %6888, !dbg !4976
  br label %originalBB1164

originalBB1168alteredBB:                          ; preds = %originalBB1168, %4267
  %6890 = load i8*, i8** %19, align 8, !dbg !4976
  %6891 = load i64, i64* %29, align 8, !dbg !4976
  %6892 = getelementptr inbounds i8, i8* %6890, i64 %6891, !dbg !4976
  store i8 92, i8* %6892, align 1, !dbg !4976
  br label %originalBB1168

originalBB1172alteredBB:                          ; preds = %originalBB1172, %4287
  %6893 = load i64, i64* %29, align 8, !dbg !4979
  %_1173 = shl i64 %6893, 1
  %_1174 = sub i64 0, %6893
  %gen1175 = add i64 %_1174, 1
  %_1176 = sub i64 0, %6893
  %gen1177 = add i64 %_1176, 1
  %_1178 = sub i64 %6893, 1
  %gen1179 = mul i64 %_1178, 1
  %_1180 = shl i64 %6893, 1
  %_1181 = sub i64 0, %6893
  %gen1182 = add i64 %_1181, 1
  %6894 = add i64 %6893, 1, !dbg !4979
  store i64 %6894, i64* %29, align 8, !dbg !4979
  br label %originalBB1172

originalBB1186alteredBB:                          ; preds = %originalBB1186, %4306
  br label %originalBB1186

originalBB1190alteredBB:                          ; preds = %originalBB1190, %4323
  br label %originalBB1190

originalBB1194alteredBB:                          ; preds = %originalBB1194, %4340
  %6895 = load i64, i64* %29, align 8, !dbg !4981
  %6896 = load i64, i64* %20, align 8, !dbg !4981
  %6897 = icmp ult i64 %6895, %6896, !dbg !4981
  br label %originalBB1194

originalBB1198alteredBB:                          ; preds = %originalBB1198, %4360
  %6898 = load i8, i8* %39, align 1, !dbg !4981
  %6899 = zext i8 %6898 to i32, !dbg !4981
  %_1199 = sub i32 %6899, 6
  %gen1200 = mul i32 %_1199, 6
  %_1201 = shl i32 %6899, 6
  %_1202 = sub i32 0, %6899
  %gen1203 = add i32 %_1202, 6
  %_1204 = shl i32 %6899, 6
  %6900 = ashr i32 %6899, 6, !dbg !4981
  %_1205 = shl i32 48, %6900
  %_1206 = sub i32 0, 48
  %gen1207 = add i32 %_1206, %6900
  %_1208 = sub i32 48, %6900
  %gen1209 = mul i32 %_1208, %6900
  %6901 = add nsw i32 48, %6900, !dbg !4981
  %6902 = trunc i32 %6901 to i8, !dbg !4981
  %6903 = load i8*, i8** %19, align 8, !dbg !4981
  %6904 = load i64, i64* %29, align 8, !dbg !4981
  %6905 = getelementptr inbounds i8, i8* %6903, i64 %6904, !dbg !4981
  store i8 %6902, i8* %6905, align 1, !dbg !4981
  br label %originalBB1198

originalBB1213alteredBB:                          ; preds = %originalBB1213, %4385
  %6906 = load i64, i64* %29, align 8, !dbg !4984
  %_1214 = sub i64 %6906, 1
  %gen1215 = mul i64 %_1214, 1
  %_1216 = sub i64 %6906, 1
  %gen1217 = mul i64 %_1216, 1
  %6907 = add i64 %6906, 1, !dbg !4984
  store i64 %6907, i64* %29, align 8, !dbg !4984
  br label %originalBB1213

originalBB1221alteredBB:                          ; preds = %originalBB1221, %4404
  br label %originalBB1221

originalBB1225alteredBB:                          ; preds = %originalBB1225, %4421
  %6908 = load i64, i64* %29, align 8, !dbg !4986
  %6909 = load i64, i64* %20, align 8, !dbg !4986
  %6910 = icmp ult i64 %6908, %6909, !dbg !4986
  br label %originalBB1225

originalBB1229alteredBB:                          ; preds = %originalBB1229, %4441
  %6911 = load i8, i8* %39, align 1, !dbg !4986
  %6912 = zext i8 %6911 to i32, !dbg !4986
  %_1230 = sub i32 %6912, 3
  %gen1231 = mul i32 %_1230, 3
  %_1232 = shl i32 %6912, 3
  %_1233 = shl i32 %6912, 3
  %_1234 = sub i32 0, %6912
  %gen1235 = add i32 %_1234, 3
  %_1236 = sub i32 %6912, 3
  %gen1237 = mul i32 %_1236, 3
  %_1238 = sub i32 0, %6912
  %gen1239 = add i32 %_1238, 3
  %_1240 = shl i32 %6912, 3
  %_1241 = shl i32 %6912, 3
  %_1242 = sub i32 %6912, 3
  %gen1243 = mul i32 %_1242, 3
  %6913 = ashr i32 %6912, 3, !dbg !4986
  %_1244 = sub i32 0, %6913
  %gen1245 = add i32 %_1244, 7
  %_1246 = sub i32 %6913, 7
  %gen1247 = mul i32 %_1246, 7
  %_1248 = sub i32 0, %6913
  %gen1249 = add i32 %_1248, 7
  %_1250 = shl i32 %6913, 7
  %_1251 = sub i32 %6913, 7
  %gen1252 = mul i32 %_1251, 7
  %_1253 = sub i32 0, %6913
  %gen1254 = add i32 %_1253, 7
  %6914 = and i32 %6913, 7, !dbg !4986
  %_1255 = shl i32 48, %6914
  %_1256 = shl i32 48, %6914
  %6915 = add nsw i32 48, %6914, !dbg !4986
  %6916 = trunc i32 %6915 to i8, !dbg !4986
  %6917 = load i8*, i8** %19, align 8, !dbg !4986
  %6918 = load i64, i64* %29, align 8, !dbg !4986
  %6919 = getelementptr inbounds i8, i8* %6917, i64 %6918, !dbg !4986
  store i8 %6916, i8* %6919, align 1, !dbg !4986
  br label %originalBB1229

originalBB1260alteredBB:                          ; preds = %originalBB1260, %4467
  %6920 = load i64, i64* %29, align 8, !dbg !4989
  %_1261 = shl i64 %6920, 1
  %_1262 = shl i64 %6920, 1
  %6921 = add i64 %6920, 1, !dbg !4989
  store i64 %6921, i64* %29, align 8, !dbg !4989
  br label %originalBB1260

originalBB1266alteredBB:                          ; preds = %originalBB1266, %4486
  %6922 = load i8, i8* %39, align 1, !dbg !4990
  %6923 = zext i8 %6922 to i32, !dbg !4990
  %_1267 = sub i32 0, %6923
  %gen1268 = add i32 %_1267, 7
  %_1269 = sub i32 0, %6923
  %gen1270 = add i32 %_1269, 7
  %6924 = and i32 %6923, 7, !dbg !4991
  %_1271 = sub i32 48, %6924
  %gen1272 = mul i32 %_1271, %6924
  %_1273 = shl i32 48, %6924
  %_1274 = shl i32 48, %6924
  %_1275 = sub i32 0, 48
  %gen1276 = add i32 %_1275, %6924
  %6925 = add nsw i32 48, %6924, !dbg !4992
  %6926 = trunc i32 %6925 to i8, !dbg !4993
  store i8 %6926, i8* %39, align 1, !dbg !4994
  br label %originalBB1266

originalBB1280alteredBB:                          ; preds = %originalBB1280, %4508
  %6927 = load i8, i8* %41, align 1, !dbg !4996
  %6928 = trunc i8 %6927 to i1, !dbg !4996
  br label %originalBB1280

originalBB1284alteredBB:                          ; preds = %originalBB1284, %4527
  br label %originalBB1284

originalBB1288alteredBB:                          ; preds = %originalBB1288, %4544
  %6929 = load i64, i64* %29, align 8, !dbg !5001
  %6930 = load i64, i64* %20, align 8, !dbg !5001
  %6931 = icmp ult i64 %6929, %6930, !dbg !5001
  br label %originalBB1288

originalBB1292alteredBB:                          ; preds = %originalBB1292, %4564
  %6932 = load i8*, i8** %19, align 8, !dbg !5001
  %6933 = load i64, i64* %29, align 8, !dbg !5001
  %6934 = getelementptr inbounds i8, i8* %6932, i64 %6933, !dbg !5001
  store i8 92, i8* %6934, align 1, !dbg !5001
  br label %originalBB1292

originalBB1296alteredBB:                          ; preds = %originalBB1296, %4587
  store i8 0, i8* %41, align 1, !dbg !5005
  br label %originalBB1296

originalBB1300alteredBB:                          ; preds = %originalBB1300, %4610
  br label %originalBB1300

originalBB1304alteredBB:                          ; preds = %originalBB1304, %4627
  br label %originalBB1304

originalBB1308alteredBB:                          ; preds = %originalBB1308, %4647
  %6935 = load i8, i8* %42, align 1, !dbg !5015
  %6936 = trunc i8 %6935 to i1, !dbg !5015
  br label %originalBB1308

originalBB1312alteredBB:                          ; preds = %originalBB1312, %4666
  br label %originalBB1312

originalBB1316alteredBB:                          ; preds = %originalBB1316, %4683
  %6937 = load i64, i64* %29, align 8, !dbg !5021
  %6938 = load i64, i64* %20, align 8, !dbg !5021
  %6939 = icmp ult i64 %6937, %6938, !dbg !5021
  br label %originalBB1316

originalBB1320alteredBB:                          ; preds = %originalBB1320, %4703
  %6940 = load i8*, i8** %19, align 8, !dbg !5021
  %6941 = load i64, i64* %29, align 8, !dbg !5021
  %6942 = getelementptr inbounds i8, i8* %6940, i64 %6941, !dbg !5021
  store i8 39, i8* %6942, align 1, !dbg !5021
  br label %originalBB1320

originalBB1324alteredBB:                          ; preds = %originalBB1324, %4723
  %6943 = load i64, i64* %29, align 8, !dbg !5024
  %_1325 = shl i64 %6943, 1
  %_1326 = shl i64 %6943, 1
  %6944 = add i64 %6943, 1, !dbg !5024
  store i64 %6944, i64* %29, align 8, !dbg !5024
  br label %originalBB1324

originalBB1330alteredBB:                          ; preds = %originalBB1330, %4742
  br label %originalBB1330

originalBB1334alteredBB:                          ; preds = %originalBB1334, %4759
  %6945 = load i64, i64* %29, align 8, !dbg !5025
  %6946 = load i64, i64* %20, align 8, !dbg !5025
  %6947 = icmp ult i64 %6945, %6946, !dbg !5025
  br label %originalBB1334

originalBB1338alteredBB:                          ; preds = %originalBB1338, %4783
  %6948 = load i64, i64* %29, align 8, !dbg !5028
  %_1339 = sub i64 %6948, 1
  %gen1340 = mul i64 %_1339, 1
  %_1341 = sub i64 %6948, 1
  %gen1342 = mul i64 %_1341, 1
  %6949 = add i64 %6948, 1, !dbg !5028
  store i64 %6949, i64* %29, align 8, !dbg !5028
  br label %originalBB1338

originalBB1346alteredBB:                          ; preds = %originalBB1346, %4802
  store i8 0, i8* %36, align 1, !dbg !5019
  br label %originalBB1346

originalBB1350alteredBB:                          ; preds = %originalBB1350, %4819
  br label %originalBB1350

originalBB1354alteredBB:                          ; preds = %originalBB1354, %4836
  br label %originalBB1354

originalBB1358alteredBB:                          ; preds = %originalBB1358, %4853
  %6950 = load i64, i64* %29, align 8, !dbg !5030
  %6951 = load i64, i64* %20, align 8, !dbg !5030
  %6952 = icmp ult i64 %6950, %6951, !dbg !5030
  br label %originalBB1358

originalBB1362alteredBB:                          ; preds = %originalBB1362, %4873
  %6953 = load i8, i8* %39, align 1, !dbg !5030
  %6954 = load i8*, i8** %19, align 8, !dbg !5030
  %6955 = load i64, i64* %29, align 8, !dbg !5030
  %6956 = getelementptr inbounds i8, i8* %6954, i64 %6955, !dbg !5030
  store i8 %6953, i8* %6956, align 1, !dbg !5030
  br label %originalBB1362

originalBB1366alteredBB:                          ; preds = %originalBB1366, %4894
  %6957 = load i64, i64* %29, align 8, !dbg !5033
  %_1367 = shl i64 %6957, 1
  %_1368 = shl i64 %6957, 1
  %_1369 = shl i64 %6957, 1
  %6958 = add i64 %6957, 1, !dbg !5033
  store i64 %6958, i64* %29, align 8, !dbg !5033
  br label %originalBB1366

originalBB1373alteredBB:                          ; preds = %originalBB1373, %4913
  %6959 = load i8*, i8** %21, align 8, !dbg !5034
  %6960 = load i64, i64* %28, align 8, !dbg !5035
  %_1374 = sub i64 0, %6960
  %gen1375 = add i64 %_1374, 1
  %_1376 = sub i64 0, %6960
  %gen1377 = add i64 %_1376, 1
  %_1378 = shl i64 %6960, 1
  %_1379 = sub i64 0, %6960
  %gen1380 = add i64 %_1379, 1
  %_1381 = sub i64 0, %6960
  %gen1382 = add i64 %_1381, 1
  %6961 = add i64 %6960, 1, !dbg !5035
  store i64 %6961, i64* %28, align 8, !dbg !5035
  %6962 = getelementptr inbounds i8, i8* %6959, i64 %6961, !dbg !5034
  %6963 = load i8, i8* %6962, align 1, !dbg !5034
  store i8 %6963, i8* %39, align 1, !dbg !5036
  br label %originalBB1373

originalBB1386alteredBB:                          ; preds = %originalBB1386, %4935
  br label %originalBB1386

originalBB1390alteredBB:                          ; preds = %originalBB1390, %4952
  br label %originalBB1390

originalBB1394alteredBB:                          ; preds = %originalBB1394, %4969
  %6964 = load i8, i8* %33, align 1, !dbg !5043
  %6965 = trunc i8 %6964 to i1, !dbg !5043
  br label %originalBB1394

originalBB1398alteredBB:                          ; preds = %originalBB1398, %4988
  %6966 = load i32, i32* %23, align 4, !dbg !5046
  %6967 = icmp ne i32 %6966, 2, !dbg !5047
  br label %originalBB1398

originalBB1402alteredBB:                          ; preds = %originalBB1402, %5007
  %6968 = load i8, i8* %35, align 1, !dbg !5049
  %6969 = trunc i8 %6968 to i1, !dbg !5049
  br label %originalBB1402

originalBB1406alteredBB:                          ; preds = %originalBB1406, %5026
  %6970 = load i32*, i32** %25, align 8, !dbg !5051
  %6971 = icmp ne i32* %6970, null, !dbg !5051
  br label %originalBB1406

originalBB1410alteredBB:                          ; preds = %originalBB1410, %5045
  %6972 = load i32*, i32** %25, align 8, !dbg !5053
  %6973 = load i8, i8* %39, align 1, !dbg !5054
  %6974 = zext i8 %6973 to i64, !dbg !5054
  %_1411 = sub i64 %6974, 32
  %gen1412 = mul i64 %_1411, 32
  %_1413 = sub i64 0, %6974
  %gen1414 = add i64 %_1413, 32
  %_1415 = shl i64 %6974, 32
  %_1416 = sub i64 0, %6974
  %gen1417 = add i64 %_1416, 32
  %6975 = udiv i64 %6974, 32, !dbg !5055
  %6976 = getelementptr inbounds i32, i32* %6972, i64 %6975, !dbg !5053
  %6977 = load i32, i32* %6976, align 4, !dbg !5053
  %6978 = load i8, i8* %39, align 1, !dbg !5056
  %6979 = zext i8 %6978 to i64, !dbg !5056
  %_1418 = sub i64 %6979, 32
  %gen1419 = mul i64 %_1418, 32
  %_1420 = shl i64 %6979, 32
  %6980 = urem i64 %6979, 32, !dbg !5057
  %6981 = trunc i64 %6980 to i32, !dbg !5058
  %_1421 = shl i32 %6977, %6981
  %_1422 = shl i32 %6977, %6981
  %_1423 = shl i32 %6977, %6981
  %_1424 = shl i32 %6977, %6981
  %_1425 = shl i32 %6977, %6981
  %_1426 = shl i32 %6977, %6981
  %_1427 = sub i32 0, %6977
  %gen1428 = add i32 %_1427, %6981
  %_1429 = sub i32 0, %6977
  %gen1430 = add i32 %_1429, %6981
  %_1431 = sub i32 0, %6977
  %gen1432 = add i32 %_1431, %6981
  %_1433 = shl i32 %6977, %6981
  %6982 = lshr i32 %6977, %6981, !dbg !5058
  %_1434 = sub i32 %6982, 1
  %gen1435 = mul i32 %_1434, 1
  %_1436 = shl i32 %6982, 1
  %_1437 = shl i32 %6982, 1
  %_1438 = sub i32 0, %6982
  %gen1439 = add i32 %_1438, 1
  %_1440 = shl i32 %6982, 1
  %_1441 = sub i32 0, %6982
  %gen1442 = add i32 %_1441, 1
  %_1443 = sub i32 0, %6982
  %gen1444 = add i32 %_1443, 1
  %6983 = and i32 %6982, 1, !dbg !5059
  %6984 = icmp ne i32 %6983, 0, !dbg !5059
  br label %originalBB1410

originalBB1448alteredBB:                          ; preds = %originalBB1448, %5075
  %6985 = load i8, i8* %41, align 1, !dbg !5061
  %6986 = trunc i8 %6985 to i1, !dbg !5061
  br label %originalBB1448

originalBB1452alteredBB:                          ; preds = %originalBB1452, %5094
  br label %originalBB1452

originalBB1456alteredBB:                          ; preds = %originalBB1456, %5111
  br label %originalBB1456

originalBB1460alteredBB:                          ; preds = %originalBB1460, %5128
  br label %originalBB1460

originalBB1464alteredBB:                          ; preds = %originalBB1464, %5145
  %6987 = load i8, i8* %35, align 1, !dbg !5067
  %6988 = trunc i8 %6987 to i1, !dbg !5067
  br label %originalBB1464

originalBB1468alteredBB:                          ; preds = %originalBB1468, %5164
  br label %originalBB1468

originalBB1472alteredBB:                          ; preds = %originalBB1472, %5181
  store i8 1, i8* %42, align 1, !dbg !5070
  %6989 = load i32, i32* %23, align 4, !dbg !5071
  %6990 = icmp eq i32 %6989, 2, !dbg !5071
  br label %originalBB1472

originalBB1476alteredBB:                          ; preds = %originalBB1476, %5200
  %6991 = load i8, i8* %36, align 1, !dbg !5071
  %6992 = trunc i8 %6991 to i1, !dbg !5071
  br label %originalBB1476

originalBB1480alteredBB:                          ; preds = %originalBB1480, %5219
  br label %originalBB1480

originalBB1484alteredBB:                          ; preds = %originalBB1484, %5236
  %6993 = load i64, i64* %29, align 8, !dbg !5075
  %6994 = load i64, i64* %20, align 8, !dbg !5075
  %6995 = icmp ult i64 %6993, %6994, !dbg !5075
  br label %originalBB1484

originalBB1488alteredBB:                          ; preds = %originalBB1488, %5256
  %6996 = load i8*, i8** %19, align 8, !dbg !5075
  %6997 = load i64, i64* %29, align 8, !dbg !5075
  %6998 = getelementptr inbounds i8, i8* %6996, i64 %6997, !dbg !5075
  store i8 39, i8* %6998, align 1, !dbg !5075
  br label %originalBB1488

originalBB1492alteredBB:                          ; preds = %originalBB1492, %5279
  br label %originalBB1492

originalBB1496alteredBB:                          ; preds = %originalBB1496, %5300
  %6999 = load i8*, i8** %19, align 8, !dbg !5079
  %7000 = load i64, i64* %29, align 8, !dbg !5079
  %7001 = getelementptr inbounds i8, i8* %6999, i64 %7000, !dbg !5079
  store i8 36, i8* %7001, align 1, !dbg !5079
  br label %originalBB1496

originalBB1500alteredBB:                          ; preds = %originalBB1500, %5320
  %7002 = load i64, i64* %29, align 8, !dbg !5082
  %_1501 = sub i64 %7002, 1
  %gen1502 = mul i64 %_1501, 1
  %_1503 = sub i64 0, %7002
  %gen1504 = add i64 %_1503, 1
  %_1505 = sub i64 %7002, 1
  %gen1506 = mul i64 %_1505, 1
  %7003 = add i64 %7002, 1, !dbg !5082
  store i64 %7003, i64* %29, align 8, !dbg !5082
  br label %originalBB1500

originalBB1510alteredBB:                          ; preds = %originalBB1510, %5339
  br label %originalBB1510

originalBB1514alteredBB:                          ; preds = %originalBB1514, %5356
  %7004 = load i64, i64* %29, align 8, !dbg !5083
  %7005 = load i64, i64* %20, align 8, !dbg !5083
  %7006 = icmp ult i64 %7004, %7005, !dbg !5083
  br label %originalBB1514

originalBB1518alteredBB:                          ; preds = %originalBB1518, %5376
  %7007 = load i8*, i8** %19, align 8, !dbg !5083
  %7008 = load i64, i64* %29, align 8, !dbg !5083
  %7009 = getelementptr inbounds i8, i8* %7007, i64 %7008, !dbg !5083
  store i8 39, i8* %7009, align 1, !dbg !5083
  br label %originalBB1518

originalBB1522alteredBB:                          ; preds = %originalBB1522, %5396
  %7010 = load i64, i64* %29, align 8, !dbg !5086
  %_1523 = sub i64 %7010, 1
  %gen1524 = mul i64 %_1523, 1
  %_1525 = sub i64 %7010, 1
  %gen1526 = mul i64 %_1525, 1
  %_1527 = shl i64 %7010, 1
  %_1528 = shl i64 %7010, 1
  %_1529 = shl i64 %7010, 1
  %_1530 = sub i64 0, %7010
  %gen1531 = add i64 %_1530, 1
  %7011 = add i64 %7010, 1, !dbg !5086
  store i64 %7011, i64* %29, align 8, !dbg !5086
  br label %originalBB1522

originalBB1535alteredBB:                          ; preds = %originalBB1535, %5416
  br label %originalBB1535

originalBB1539alteredBB:                          ; preds = %originalBB1539, %5433
  %7012 = load i64, i64* %29, align 8, !dbg !5087
  %7013 = load i64, i64* %20, align 8, !dbg !5087
  %7014 = icmp ult i64 %7012, %7013, !dbg !5087
  br label %originalBB1539

originalBB1543alteredBB:                          ; preds = %originalBB1543, %5453
  %7015 = load i8*, i8** %19, align 8, !dbg !5087
  %7016 = load i64, i64* %29, align 8, !dbg !5087
  %7017 = getelementptr inbounds i8, i8* %7015, i64 %7016, !dbg !5087
  store i8 92, i8* %7017, align 1, !dbg !5087
  br label %originalBB1543

originalBB1547alteredBB:                          ; preds = %originalBB1547, %5473
  %7018 = load i64, i64* %29, align 8, !dbg !5090
  %_1548 = sub i64 0, %7018
  %gen1549 = add i64 %_1548, 1
  %_1550 = sub i64 %7018, 1
  %gen1551 = mul i64 %_1550, 1
  %_1552 = shl i64 %7018, 1
  %_1553 = shl i64 %7018, 1
  %_1554 = sub i64 %7018, 1
  %gen1555 = mul i64 %_1554, 1
  %7019 = add i64 %7018, 1, !dbg !5090
  store i64 %7019, i64* %29, align 8, !dbg !5090
  br label %originalBB1547

originalBB1559alteredBB:                          ; preds = %originalBB1559, %5492
  br label %originalBB1559

originalBB1563alteredBB:                          ; preds = %originalBB1563, %5509
  br label %originalBB1563

originalBB1567alteredBB:                          ; preds = %originalBB1567, %5527
  %7020 = load i8, i8* %36, align 1, !dbg !5094
  %7021 = trunc i8 %7020 to i1, !dbg !5094
  br label %originalBB1567

originalBB1571alteredBB:                          ; preds = %originalBB1571, %5546
  %7022 = load i8, i8* %42, align 1, !dbg !5094
  %7023 = trunc i8 %7022 to i1, !dbg !5094
  br label %originalBB1571

originalBB1575alteredBB:                          ; preds = %originalBB1575, %5565
  br label %originalBB1575

originalBB1579alteredBB:                          ; preds = %originalBB1579, %5582
  %7024 = load i64, i64* %29, align 8, !dbg !5100
  %7025 = load i64, i64* %20, align 8, !dbg !5100
  %7026 = icmp ult i64 %7024, %7025, !dbg !5100
  br label %originalBB1579

originalBB1583alteredBB:                          ; preds = %originalBB1583, %5602
  %7027 = load i8*, i8** %19, align 8, !dbg !5100
  %7028 = load i64, i64* %29, align 8, !dbg !5100
  %7029 = getelementptr inbounds i8, i8* %7027, i64 %7028, !dbg !5100
  store i8 39, i8* %7029, align 1, !dbg !5100
  br label %originalBB1583

originalBB1587alteredBB:                          ; preds = %originalBB1587, %5622
  %7030 = load i64, i64* %29, align 8, !dbg !5103
  %_1588 = sub i64 %7030, 1
  %gen1589 = mul i64 %_1588, 1
  %_1590 = shl i64 %7030, 1
  %_1591 = sub i64 %7030, 1
  %gen1592 = mul i64 %_1591, 1
  %_1593 = shl i64 %7030, 1
  %_1594 = shl i64 %7030, 1
  %_1595 = sub i64 %7030, 1
  %gen1596 = mul i64 %_1595, 1
  %_1597 = shl i64 %7030, 1
  %_1598 = shl i64 %7030, 1
  %_1599 = sub i64 0, %7030
  %gen1600 = add i64 %_1599, 1
  %7031 = add i64 %7030, 1, !dbg !5103
  store i64 %7031, i64* %29, align 8, !dbg !5103
  br label %originalBB1587

originalBB1604alteredBB:                          ; preds = %originalBB1604, %5642
  %7032 = load i64, i64* %29, align 8, !dbg !5104
  %7033 = load i64, i64* %20, align 8, !dbg !5104
  %7034 = icmp ult i64 %7032, %7033, !dbg !5104
  br label %originalBB1604

originalBB1608alteredBB:                          ; preds = %originalBB1608, %5662
  %7035 = load i8*, i8** %19, align 8, !dbg !5104
  %7036 = load i64, i64* %29, align 8, !dbg !5104
  %7037 = getelementptr inbounds i8, i8* %7035, i64 %7036, !dbg !5104
  store i8 39, i8* %7037, align 1, !dbg !5104
  br label %originalBB1608

originalBB1612alteredBB:                          ; preds = %originalBB1612, %5682
  %7038 = load i64, i64* %29, align 8, !dbg !5107
  %_1613 = shl i64 %7038, 1
  %_1614 = shl i64 %7038, 1
  %7039 = add i64 %7038, 1, !dbg !5107
  store i64 %7039, i64* %29, align 8, !dbg !5107
  br label %originalBB1612

originalBB1618alteredBB:                          ; preds = %originalBB1618, %5701
  store i8 0, i8* %36, align 1, !dbg !5098
  br label %originalBB1618

originalBB1622alteredBB:                          ; preds = %originalBB1622, %5718
  br label %originalBB1622

originalBB1626alteredBB:                          ; preds = %originalBB1626, %5735
  br label %originalBB1626

originalBB1630alteredBB:                          ; preds = %originalBB1630, %5752
  %7040 = load i64, i64* %29, align 8, !dbg !5109
  %7041 = load i64, i64* %20, align 8, !dbg !5109
  %7042 = icmp ult i64 %7040, %7041, !dbg !5109
  br label %originalBB1630

originalBB1634alteredBB:                          ; preds = %originalBB1634, %5772
  %7043 = load i8, i8* %39, align 1, !dbg !5109
  %7044 = load i8*, i8** %19, align 8, !dbg !5109
  %7045 = load i64, i64* %29, align 8, !dbg !5109
  %7046 = getelementptr inbounds i8, i8* %7044, i64 %7045, !dbg !5109
  store i8 %7043, i8* %7046, align 1, !dbg !5109
  br label %originalBB1634

originalBB1638alteredBB:                          ; preds = %originalBB1638, %5793
  %7047 = load i64, i64* %29, align 8, !dbg !5112
  %_1639 = shl i64 %7047, 1
  %_1640 = sub i64 %7047, 1
  %gen1641 = mul i64 %_1640, 1
  %7048 = add i64 %7047, 1, !dbg !5112
  store i64 %7048, i64* %29, align 8, !dbg !5112
  br label %originalBB1638

originalBB1645alteredBB:                          ; preds = %originalBB1645, %5812
  %7049 = load i8, i8* %43, align 1, !dbg !5113
  %7050 = trunc i8 %7049 to i1, !dbg !5113
  br label %originalBB1645

originalBB1649alteredBB:                          ; preds = %originalBB1649, %5832
  br label %originalBB1649

originalBB1653alteredBB:                          ; preds = %originalBB1653, %5849
  %7051 = load i64, i64* %28, align 8, !dbg !5119
  %_1654 = shl i64 %7051, 1
  %7052 = add i64 %7051, 1, !dbg !5119
  store i64 %7052, i64* %28, align 8, !dbg !5119
  br label %originalBB1653

originalBB1658alteredBB:                          ; preds = %originalBB1658, %5868
  %7053 = load i64, i64* %29, align 8, !dbg !5123
  %7054 = icmp eq i64 %7053, 0, !dbg !5125
  br label %originalBB1658

originalBB1662alteredBB:                          ; preds = %originalBB1662, %5890
  %7055 = load i8, i8* %35, align 1, !dbg !5130
  %7056 = trunc i8 %7055 to i1, !dbg !5130
  br label %originalBB1662

originalBB1666alteredBB:                          ; preds = %originalBB1666, %5909
  br label %originalBB1666

originalBB1670alteredBB:                          ; preds = %originalBB1670, %5926
  %7057 = load i32, i32* %23, align 4, !dbg !5133
  %7058 = icmp eq i32 %7057, 2, !dbg !5135
  br label %originalBB1670

originalBB1674alteredBB:                          ; preds = %originalBB1674, %5945
  %7059 = load i8, i8* %35, align 1, !dbg !5137
  %7060 = trunc i8 %7059 to i1, !dbg !5137
  br label %originalBB1674

originalBB1678alteredBB:                          ; preds = %originalBB1678, %5964
  %7061 = load i8, i8* %37, align 1, !dbg !5139
  %7062 = trunc i8 %7061 to i1, !dbg !5139
  br label %originalBB1678

originalBB1682alteredBB:                          ; preds = %originalBB1682, %5983
  %7063 = load i8, i8* %38, align 1, !dbg !5141
  %7064 = trunc i8 %7063 to i1, !dbg !5141
  br label %originalBB1682

originalBB1686alteredBB:                          ; preds = %originalBB1686, %6002
  %7065 = load i8*, i8** %19, align 8, !dbg !5145
  %7066 = load i64, i64* %30, align 8, !dbg !5146
  %7067 = load i8*, i8** %21, align 8, !dbg !5147
  %7068 = load i64, i64* %22, align 8, !dbg !5148
  %7069 = load i32, i32* %24, align 4, !dbg !5149
  %7070 = load i32*, i32** %25, align 8, !dbg !5150
  %7071 = load i8*, i8** %26, align 8, !dbg !5151
  %7072 = load i8*, i8** %27, align 8, !dbg !5152
  %7073 = call i64 @quotearg_buffer_restyled(i8* %7065, i64 %7066, i8* %7067, i64 %7068, i32 5, i32 %7069, i32* %7070, i8* %7071, i8* %7072), !dbg !5153
  store i64 %7073, i64* %18, align 8, !dbg !5154
  br label %originalBB1686

originalBB1690alteredBB:                          ; preds = %originalBB1690, %6028
  %7074 = load i64, i64* %20, align 8, !dbg !5155
  %7075 = icmp ne i64 %7074, 0, !dbg !5155
  br label %originalBB1690

originalBB1694alteredBB:                          ; preds = %originalBB1694, %6050
  %7076 = load i64, i64* %30, align 8, !dbg !5160
  store i64 %7076, i64* %20, align 8, !dbg !5162
  store i64 0, i64* %29, align 8, !dbg !5163
  br label %originalBB1694

originalBB1698alteredBB:                          ; preds = %originalBB1698, %6068
  br label %originalBB1698

originalBB1702alteredBB:                          ; preds = %originalBB1702, %6085
  br label %originalBB1702

originalBB1706alteredBB:                          ; preds = %originalBB1706, %6102
  %7077 = load i8*, i8** %31, align 8, !dbg !5166
  %7078 = icmp ne i8* %7077, null, !dbg !5166
  br label %originalBB1706

originalBB1710alteredBB:                          ; preds = %originalBB1710, %6121
  %7079 = load i8, i8* %35, align 1, !dbg !5169
  %7080 = trunc i8 %7079 to i1, !dbg !5169
  br label %originalBB1710

originalBB1714alteredBB:                          ; preds = %originalBB1714, %6140
  br label %originalBB1714

originalBB1718alteredBB:                          ; preds = %originalBB1718, %6157
  %7081 = load i8*, i8** %31, align 8, !dbg !5172
  %7082 = load i8, i8* %7081, align 1, !dbg !5175
  %7083 = icmp ne i8 %7082, 0, !dbg !5176
  br label %originalBB1718

originalBB1722alteredBB:                          ; preds = %originalBB1722, %6177
  br label %originalBB1722

originalBB1726alteredBB:                          ; preds = %originalBB1726, %6194
  %7084 = load i64, i64* %29, align 8, !dbg !5178
  %7085 = load i64, i64* %20, align 8, !dbg !5178
  %7086 = icmp ult i64 %7084, %7085, !dbg !5178
  br label %originalBB1726

originalBB1730alteredBB:                          ; preds = %originalBB1730, %6214
  %7087 = load i8*, i8** %31, align 8, !dbg !5178
  %7088 = load i8, i8* %7087, align 1, !dbg !5178
  %7089 = load i8*, i8** %19, align 8, !dbg !5178
  %7090 = load i64, i64* %29, align 8, !dbg !5178
  %7091 = getelementptr inbounds i8, i8* %7089, i64 %7090, !dbg !5178
  store i8 %7088, i8* %7091, align 1, !dbg !5178
  br label %originalBB1730

originalBB1734alteredBB:                          ; preds = %originalBB1734, %6236
  %7092 = load i64, i64* %29, align 8, !dbg !5181
  %_1735 = sub i64 %7092, 1
  %gen1736 = mul i64 %_1735, 1
  %_1737 = sub i64 0, %7092
  %gen1738 = add i64 %_1737, 1
  %_1739 = shl i64 %7092, 1
  %_1740 = sub i64 %7092, 1
  %gen1741 = mul i64 %_1740, 1
  %_1742 = shl i64 %7092, 1
  %_1743 = sub i64 %7092, 1
  %gen1744 = mul i64 %_1743, 1
  %7093 = add i64 %7092, 1, !dbg !5181
  store i64 %7093, i64* %29, align 8, !dbg !5181
  br label %originalBB1734

originalBB1748alteredBB:                          ; preds = %originalBB1748, %6255
  br label %originalBB1748

originalBB1752alteredBB:                          ; preds = %originalBB1752, %6272
  %7094 = load i8*, i8** %31, align 8, !dbg !5182
  %7095 = getelementptr inbounds i8, i8* %7094, i32 1, !dbg !5182
  store i8* %7095, i8** %31, align 8, !dbg !5182
  br label %originalBB1752

originalBB1756alteredBB:                          ; preds = %originalBB1756, %6291
  br label %originalBB1756

originalBB1760alteredBB:                          ; preds = %originalBB1760, %6308
  %7096 = load i64, i64* %29, align 8, !dbg !5186
  %7097 = load i64, i64* %20, align 8, !dbg !5188
  %7098 = icmp ult i64 %7096, %7097, !dbg !5189
  br label %originalBB1760

originalBB1764alteredBB:                          ; preds = %originalBB1764, %6328
  %7099 = load i8*, i8** %19, align 8, !dbg !5191
  %7100 = load i64, i64* %29, align 8, !dbg !5192
  %7101 = getelementptr inbounds i8, i8* %7099, i64 %7100, !dbg !5191
  store i8 0, i8* %7101, align 1, !dbg !5193
  br label %originalBB1764

originalBB1768alteredBB:                          ; preds = %originalBB1768, %6348
  %7102 = load i64, i64* %29, align 8, !dbg !5194
  store i64 %7102, i64* %18, align 8, !dbg !5195
  br label %originalBB1768

originalBB1772alteredBB:                          ; preds = %originalBB1772, %6366
  %7103 = load i32, i32* %23, align 4, !dbg !5198
  %7104 = icmp eq i32 %7103, 2, !dbg !5200
  br label %originalBB1772

originalBB1776alteredBB:                          ; preds = %originalBB1776, %6385
  %7105 = load i8, i8* %33, align 1, !dbg !5202
  %7106 = trunc i8 %7105 to i1, !dbg !5202
  br label %originalBB1776

originalBB1780alteredBB:                          ; preds = %originalBB1780, %6404
  store i32 4, i32* %23, align 4, !dbg !5204
  br label %originalBB1780

originalBB1784alteredBB:                          ; preds = %originalBB1784, %6421
  %7107 = load i8*, i8** %19, align 8, !dbg !5206
  %7108 = load i64, i64* %20, align 8, !dbg !5207
  %7109 = load i8*, i8** %21, align 8, !dbg !5208
  %7110 = load i64, i64* %22, align 8, !dbg !5209
  %7111 = load i32, i32* %23, align 4, !dbg !5210
  %7112 = load i32, i32* %24, align 4, !dbg !5211
  %_1785 = sub i32 %7112, -3
  %gen1786 = mul i32 %_1785, -3
  %7113 = and i32 %7112, -3, !dbg !5212
  %7114 = load i8*, i8** %26, align 8, !dbg !5213
  %7115 = load i8*, i8** %27, align 8, !dbg !5214
  %7116 = call i64 @quotearg_buffer_restyled(i8* %7107, i64 %7108, i8* %7109, i64 %7110, i32 %7111, i32 %7113, i32* null, i8* %7114, i8* %7115), !dbg !5215
  store i64 %7116, i64* %18, align 8, !dbg !5216
  br label %originalBB1784

originalBB1790alteredBB:                          ; preds = %originalBB1790, %6448
  %7117 = load i64, i64* %18, align 8, !dbg !5217
  br label %originalBB1790
}

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8*, i32) #4 !dbg !5305 {
  %3 = load i32, i32* @x.65
  %4 = load i32, i32* @y.66
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !5308, metadata !DIExpression()), !dbg !5309
  store i32 %1, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5310, metadata !DIExpression()), !dbg !5311
  call void @llvm.dbg.declare(metadata i8** %14, metadata !5312, metadata !DIExpression()), !dbg !5313
  %16 = load i8*, i8** %12, align 8, !dbg !5314
  %17 = call i8* @gettext(i8* %16) #10, !dbg !5314
  store i8* %17, i8** %14, align 8, !dbg !5313
  call void @llvm.dbg.declare(metadata i8** %15, metadata !5315, metadata !DIExpression()), !dbg !5316
  %18 = load i8*, i8** %14, align 8, !dbg !5317
  %19 = load i8*, i8** %12, align 8, !dbg !5319
  %20 = icmp ne i8* %18, %19, !dbg !5320
  %21 = load i32, i32* @x.65
  %22 = load i32, i32* @y.66
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %29, label %47, !dbg !5321

29:                                               ; preds = %originalBBpart2
  %30 = load i32, i32* @x.65
  %31 = load i32, i32* @y.66
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i8*, i8** %14, align 8, !dbg !5322
  store i8* %38, i8** %11, align 8, !dbg !5323
  %39 = load i32, i32* @x.65
  %40 = load i32, i32* @y.66
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %141, !dbg !5323

47:                                               ; preds = %originalBBpart2
  %48 = load i32, i32* @x.65
  %49 = load i32, i32* @y.66
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %47, %originalBB6alteredBB
  %56 = call i8* @locale_charset(), !dbg !5324
  store i8* %56, i8** %15, align 8, !dbg !5325
  %57 = load i8*, i8** %15, align 8, !dbg !5326
  %58 = call i32 @c_strcasecmp(i8* %57, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.123, i64 0, i64 0)) #13, !dbg !5326
  %59 = icmp eq i32 %58, 0, !dbg !5326
  %60 = load i32, i32* @x.65
  %61 = load i32, i32* @y.66
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %59, label %68, label %92, !dbg !5328

68:                                               ; preds = %originalBBpart28
  %69 = load i32, i32* @x.65
  %70 = load i32, i32* @y.66
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %68, %originalBB10alteredBB
  %77 = load i8*, i8** %12, align 8, !dbg !5329
  %78 = getelementptr inbounds i8, i8* %77, i64 0, !dbg !5329
  %79 = load i8, i8* %78, align 1, !dbg !5329
  %80 = sext i8 %79 to i32, !dbg !5329
  %81 = icmp eq i32 %80, 96, !dbg !5330
  %82 = zext i1 %81 to i64, !dbg !5329
  %83 = select i1 %81, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.124, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.125, i64 0, i64 0), !dbg !5329
  store i8* %83, i8** %11, align 8, !dbg !5331
  %84 = load i32, i32* @x.65
  %85 = load i32, i32* @y.66
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %141, !dbg !5331

92:                                               ; preds = %originalBBpart28
  %93 = load i32, i32* @x.65
  %94 = load i32, i32* @y.66
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %92, %originalBB14alteredBB
  %101 = load i8*, i8** %15, align 8, !dbg !5332
  %102 = call i32 @c_strcasecmp(i8* %101, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.126, i64 0, i64 0)) #13, !dbg !5332
  %103 = icmp eq i32 %102, 0, !dbg !5332
  %104 = load i32, i32* @x.65
  %105 = load i32, i32* @y.66
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %103, label %112, label %120, !dbg !5334

112:                                              ; preds = %originalBBpart216
  %113 = load i8*, i8** %12, align 8, !dbg !5335
  %114 = getelementptr inbounds i8, i8* %113, i64 0, !dbg !5335
  %115 = load i8, i8* %114, align 1, !dbg !5335
  %116 = sext i8 %115 to i32, !dbg !5335
  %117 = icmp eq i32 %116, 96, !dbg !5336
  %118 = zext i1 %117 to i64, !dbg !5335
  %119 = select i1 %117, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.127, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.128, i64 0, i64 0), !dbg !5335
  store i8* %119, i8** %11, align 8, !dbg !5337
  br label %141, !dbg !5337

120:                                              ; preds = %originalBBpart216
  %121 = load i32, i32* @x.65
  %122 = load i32, i32* @y.66
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %120, %originalBB18alteredBB
  %129 = load i32, i32* %13, align 4, !dbg !5338
  %130 = icmp eq i32 %129, 9, !dbg !5339
  %131 = zext i1 %130 to i64, !dbg !5338
  %132 = select i1 %130, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.120, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.122, i64 0, i64 0), !dbg !5338
  store i8* %132, i8** %11, align 8, !dbg !5340
  %133 = load i32, i32* @x.65
  %134 = load i32, i32* @y.66
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %141, !dbg !5340

141:                                              ; preds = %originalBBpart220, %112, %originalBBpart212, %originalBBpart24
  %142 = load i32, i32* @x.65
  %143 = load i32, i32* @y.66
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %141, %originalBB22alteredBB
  %150 = load i8*, i8** %11, align 8, !dbg !5341
  %151 = load i32, i32* @x.65
  %152 = load i32, i32* @y.66
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret i8* %150, !dbg !5341

originalBBalteredBB:                              ; preds = %originalBB, %2
  %159 = alloca i8*, align 8
  %160 = alloca i8*, align 8
  %161 = alloca i32, align 4
  %162 = alloca i8*, align 8
  %163 = alloca i8*, align 8
  store i8* %0, i8** %160, align 8
  call void @llvm.dbg.declare(metadata i8** %160, metadata !5342, metadata !DIExpression()), !dbg !5309
  store i32 %1, i32* %161, align 4
  call void @llvm.dbg.declare(metadata i32* %161, metadata !5374, metadata !DIExpression()), !dbg !5311
  call void @llvm.dbg.declare(metadata i8** %162, metadata !5375, metadata !DIExpression()), !dbg !5313
  %164 = load i8*, i8** %160, align 8, !dbg !5314
  %165 = call i8* @gettext(i8* %164) #10, !dbg !5314
  store i8* %165, i8** %162, align 8, !dbg !5313
  call void @llvm.dbg.declare(metadata i8** %163, metadata !5376, metadata !DIExpression()), !dbg !5316
  %166 = load i8*, i8** %162, align 8, !dbg !5317
  %167 = load i8*, i8** %160, align 8, !dbg !5319
  %168 = icmp ne i8* %166, %167, !dbg !5320
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %169 = load i8*, i8** %14, align 8, !dbg !5322
  store i8* %169, i8** %11, align 8, !dbg !5323
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %47
  %170 = call i8* @locale_charset(), !dbg !5324
  store i8* %170, i8** %15, align 8, !dbg !5325
  %171 = load i8*, i8** %15, align 8, !dbg !5326
  %172 = call i32 @c_strcasecmp(i8* %171, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.123, i64 0, i64 0)) #13, !dbg !5326
  %173 = icmp eq i32 %172, 0, !dbg !5326
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %68
  %174 = load i8*, i8** %12, align 8, !dbg !5329
  %175 = getelementptr inbounds i8, i8* %174, i64 0, !dbg !5329
  %176 = load i8, i8* %175, align 1, !dbg !5329
  %177 = sext i8 %176 to i32, !dbg !5329
  %178 = icmp eq i32 %177, 96, !dbg !5330
  %179 = zext i1 %178 to i64, !dbg !5329
  %180 = select i1 %178, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.124, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.125, i64 0, i64 0), !dbg !5329
  store i8* %180, i8** %11, align 8, !dbg !5331
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %92
  %181 = load i8*, i8** %15, align 8, !dbg !5332
  %182 = call i32 @c_strcasecmp(i8* %181, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.126, i64 0, i64 0)) #13, !dbg !5332
  %183 = icmp eq i32 %182, 0, !dbg !5332
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %120
  %184 = load i32, i32* %13, align 4, !dbg !5338
  %185 = icmp eq i32 %184, 9, !dbg !5339
  %186 = zext i1 %185 to i64, !dbg !5338
  %187 = select i1 %185, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.120, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.122, i64 0, i64 0), !dbg !5338
  store i8* %187, i8** %11, align 8, !dbg !5340
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %141
  %188 = load i8*, i8** %11, align 8, !dbg !5341
  br label %originalBB22
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #8

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.__mbstate_t*) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char(i8*, i8 signext) #4 !dbg !5377 {
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !5380, metadata !DIExpression()), !dbg !5381
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !5382, metadata !DIExpression()), !dbg !5383
  %5 = load i8*, i8** %3, align 8, !dbg !5384
  %6 = load i8, i8* %4, align 1, !dbg !5385
  %7 = call i8* @quotearg_char_mem(i8* %5, i64 -1, i8 signext %6), !dbg !5386
  ret i8* %7, !dbg !5387
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_colon(i8*) #4 !dbg !5388 {
  %2 = load i32, i32* @x.69
  %3 = load i32, i32* @y.70
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !5389, metadata !DIExpression()), !dbg !5390
  %11 = load i8*, i8** %10, align 8, !dbg !5391
  %12 = call i8* @quotearg_char(i8* %11, i8 signext 58), !dbg !5392
  %13 = load i32, i32* @x.69
  %14 = load i32, i32* @y.70
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !5393

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i8*, align 8
  store i8* %0, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !5394, metadata !DIExpression()), !dbg !5390
  %22 = load i8*, i8** %21, align 8, !dbg !5391
  %23 = call i8* @quotearg_char(i8* %22, i8 signext 58), !dbg !5392
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_style_colon(i32, i32, i8*) #4 !dbg !5426 {
  %4 = load i32, i32* @x.71
  %5 = load i32, i32* @y.72
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca %struct.quoting_options, align 8
  %16 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5429, metadata !DIExpression()), !dbg !5430
  store i32 %1, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5431, metadata !DIExpression()), !dbg !5432
  store i8* %2, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !5433, metadata !DIExpression()), !dbg !5434
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %15, metadata !5435, metadata !DIExpression()), !dbg !5436
  %17 = load i32, i32* %13, align 4, !dbg !5437
  call void @quoting_options_from_style(%struct.quoting_options* sret %16, i32 %17), !dbg !5438
  %18 = bitcast %struct.quoting_options* %15 to i8*, !dbg !5438
  %19 = bitcast %struct.quoting_options* %16 to i8*, !dbg !5438
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 56, i1 false), !dbg !5438
  %20 = call i32 @set_char_quoting(%struct.quoting_options* %15, i8 signext 58, i32 1), !dbg !5439
  %21 = load i32, i32* %12, align 4, !dbg !5440
  %22 = load i8*, i8** %14, align 8, !dbg !5441
  %23 = call i8* @quotearg_n_options(i32 %21, i8* %22, i64 -1, %struct.quoting_options* %15), !dbg !5442
  %24 = load i32, i32* @x.71
  %25 = load i32, i32* @y.72
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %23, !dbg !5443

originalBBalteredBB:                              ; preds = %originalBB, %3
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i8*, align 8
  %35 = alloca %struct.quoting_options, align 8
  %36 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %32, align 4
  call void @llvm.dbg.declare(metadata i32* %32, metadata !5444, metadata !DIExpression()), !dbg !5430
  store i32 %1, i32* %33, align 4
  call void @llvm.dbg.declare(metadata i32* %33, metadata !5476, metadata !DIExpression()), !dbg !5432
  store i8* %2, i8** %34, align 8
  call void @llvm.dbg.declare(metadata i8** %34, metadata !5477, metadata !DIExpression()), !dbg !5434
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %35, metadata !5478, metadata !DIExpression()), !dbg !5436
  %37 = load i32, i32* %33, align 4, !dbg !5437
  call void @quoting_options_from_style(%struct.quoting_options* sret %36, i32 %37), !dbg !5438
  %38 = bitcast %struct.quoting_options* %35 to i8*, !dbg !5438
  %39 = bitcast %struct.quoting_options* %36 to i8*, !dbg !5438
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 56, i1 false), !dbg !5438
  %40 = call i32 @set_char_quoting(%struct.quoting_options* %35, i8 signext 58, i32 1), !dbg !5439
  %41 = load i32, i32* %32, align 4, !dbg !5440
  %42 = load i8*, i8** %34, align 8, !dbg !5441
  %43 = call i8* @quotearg_n_options(i32 %41, i8* %42, i64 -1, %struct.quoting_options* %35), !dbg !5442
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret, i32) #4 !dbg !5479 {
  %3 = load i32, i32* @x.73
  %4 = load i32, i32* @y.74
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  store i32 %1, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !5482, metadata !DIExpression()), !dbg !5483
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %0, metadata !5484, metadata !DIExpression()), !dbg !5485
  %12 = bitcast %struct.quoting_options* %0 to i8*, !dbg !5485
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 56, i1 false), !dbg !5485
  %13 = load i32, i32* %11, align 4, !dbg !5486
  %14 = icmp eq i32 %13, 10, !dbg !5488
  %15 = load i32, i32* @x.73
  %16 = load i32, i32* @y.74
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %14, label %23, label %40, !dbg !5489

23:                                               ; preds = %originalBBpart2
  %24 = load i32, i32* @x.73
  %25 = load i32, i32* @y.74
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %23, %originalBB1alteredBB
  call void @abort() #12, !dbg !5490
  %32 = load i32, i32* @x.73
  %33 = load i32, i32* @y.74
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable, !dbg !5490

40:                                               ; preds = %originalBBpart2
  %41 = load i32, i32* @x.73
  %42 = load i32, i32* @y.74
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %40, %originalBB6alteredBB
  %49 = load i32, i32* %11, align 4, !dbg !5491
  %50 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %0, i32 0, i32 0, !dbg !5492
  store i32 %49, i32* %50, align 8, !dbg !5493
  %51 = load i32, i32* @x.73
  %52 = load i32, i32* @y.74
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret void, !dbg !5494

originalBBalteredBB:                              ; preds = %originalBB, %2
  %59 = alloca i32, align 4
  store i32 %1, i32* %59, align 4
  call void @llvm.dbg.declare(metadata i32* %59, metadata !5495, metadata !DIExpression()), !dbg !5483
  call void @llvm.dbg.declare(metadata !4, metadata !5529, metadata !DIExpression()), !dbg !5485
  %60 = bitcast %struct.quoting_options* %0 to i8*, !dbg !5485
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 56, i1 false), !dbg !5485
  %61 = load i32, i32* %59, align 4, !dbg !5486
  %62 = icmp eq i32 %61, 10, !dbg !5488
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %23
  call void @abort() #12, !dbg !5490
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %40
  %63 = load i32, i32* %11, align 4, !dbg !5491
  %64 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %0, i32 0, i32 0, !dbg !5492
  store i32 %63, i32* %64, align 8, !dbg !5493
  br label %originalBB6
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n_mem(i32, i8*, i64) #4 !dbg !5530 {
  %4 = load i32, i32* @x.75
  %5 = load i32, i32* @y.76
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5533, metadata !DIExpression()), !dbg !5534
  store i8* %1, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !5535, metadata !DIExpression()), !dbg !5536
  store i64 %2, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !5537, metadata !DIExpression()), !dbg !5538
  %15 = load i32, i32* %12, align 4, !dbg !5539
  %16 = load i8*, i8** %13, align 8, !dbg !5540
  %17 = load i64, i64* %14, align 8, !dbg !5541
  %18 = call i8* @quotearg_n_options(i32 %15, i8* %16, i64 %17, %struct.quoting_options* @quote_quoting_options), !dbg !5542
  %19 = load i32, i32* @x.75
  %20 = load i32, i32* @y.76
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %18, !dbg !5543

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i64, align 8
  store i32 %0, i32* %27, align 4
  call void @llvm.dbg.declare(metadata i32* %27, metadata !5544, metadata !DIExpression()), !dbg !5534
  store i8* %1, i8** %28, align 8
  call void @llvm.dbg.declare(metadata i8** %28, metadata !5576, metadata !DIExpression()), !dbg !5536
  store i64 %2, i64* %29, align 8
  call void @llvm.dbg.declare(metadata i64* %29, metadata !5577, metadata !DIExpression()), !dbg !5538
  %30 = load i32, i32* %27, align 4, !dbg !5539
  %31 = load i8*, i8** %28, align 8, !dbg !5540
  %32 = load i64, i64* %29, align 8, !dbg !5541
  %33 = call i8* @quotearg_n_options(i32 %30, i8* %31, i64 %32, %struct.quoting_options* @quote_quoting_options), !dbg !5542
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n(i32, i8*) #4 !dbg !5578 {
  %3 = load i32, i32* @x.77
  %4 = load i32, i32* @y.78
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !5581, metadata !DIExpression()), !dbg !5582
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !5583, metadata !DIExpression()), !dbg !5584
  %13 = load i32, i32* %11, align 4, !dbg !5585
  %14 = load i8*, i8** %12, align 8, !dbg !5586
  %15 = call i8* @quote_n_mem(i32 %13, i8* %14, i64 -1), !dbg !5587
  %16 = load i32, i32* @x.77
  %17 = load i32, i32* @y.78
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %15, !dbg !5588

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  store i32 %0, i32* %24, align 4
  call void @llvm.dbg.declare(metadata i32* %24, metadata !5589, metadata !DIExpression()), !dbg !5582
  store i8* %1, i8** %25, align 8
  call void @llvm.dbg.declare(metadata i8** %25, metadata !5621, metadata !DIExpression()), !dbg !5584
  %26 = load i32, i32* %24, align 4, !dbg !5585
  %27 = load i8*, i8** %25, align 8, !dbg !5586
  %28 = call i8* @quote_n_mem(i32 %26, i8* %27, i64 -1), !dbg !5587
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote(i8*) #4 !dbg !5622 {
  %2 = load i32, i32* @x.79
  %3 = load i32, i32* @y.80
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !5625, metadata !DIExpression()), !dbg !5626
  %11 = load i8*, i8** %10, align 8, !dbg !5627
  %12 = call i8* @quote_n(i32 0, i8* %11), !dbg !5628
  %13 = load i32, i32* @x.79
  %14 = load i32, i32* @y.80
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !5629

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i8*, align 8
  store i8* %0, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !5630, metadata !DIExpression()), !dbg !5626
  %22 = load i8*, i8** %21, align 8, !dbg !5627
  %23 = call i8* @quote_n(i32 0, i8* %22), !dbg !5628
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setlocale_null_r(i32, i8* nonnull, i64) #4 !dbg !5662 {
  %4 = load i32, i32* @x.81
  %5 = load i32, i32* @y.82
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5666, metadata !DIExpression()), !dbg !5667
  store i8* %1, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !5668, metadata !DIExpression()), !dbg !5669
  store i64 %2, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !5670, metadata !DIExpression()), !dbg !5671
  %15 = load i32, i32* %12, align 4, !dbg !5672
  %16 = load i8*, i8** %13, align 8, !dbg !5673
  %17 = load i64, i64* %14, align 8, !dbg !5674
  %18 = call i32 @setlocale_null_unlocked(i32 %15, i8* %16, i64 %17), !dbg !5675
  %19 = load i32, i32* @x.81
  %20 = load i32, i32* @y.82
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %18, !dbg !5676

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i64, align 8
  store i32 %0, i32* %27, align 4
  call void @llvm.dbg.declare(metadata i32* %27, metadata !5677, metadata !DIExpression()), !dbg !5667
  store i8* %1, i8** %28, align 8
  call void @llvm.dbg.declare(metadata i8** %28, metadata !5680, metadata !DIExpression()), !dbg !5669
  store i64 %2, i64* %29, align 8
  call void @llvm.dbg.declare(metadata i64* %29, metadata !5681, metadata !DIExpression()), !dbg !5671
  %30 = load i32, i32* %27, align 4, !dbg !5672
  %31 = load i8*, i8** %28, align 8, !dbg !5673
  %32 = load i64, i64* %29, align 8, !dbg !5674
  %33 = call i32 @setlocale_null_unlocked(i32 %30, i8* %31, i64 %32), !dbg !5675
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setlocale_null_unlocked(i32, i8*, i64) #4 !dbg !5682 {
  %4 = load i32, i32* @x.83
  %5 = load i32, i32* @y.84
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i64, align 8
  store i32 %0, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5683, metadata !DIExpression()), !dbg !5684
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !5685, metadata !DIExpression()), !dbg !5686
  store i64 %2, i64* %15, align 8
  call void @llvm.dbg.declare(metadata i64* %15, metadata !5687, metadata !DIExpression()), !dbg !5688
  call void @llvm.dbg.declare(metadata i8** %16, metadata !5689, metadata !DIExpression()), !dbg !5690
  %18 = load i32, i32* %13, align 4, !dbg !5691
  %19 = call i8* @setlocale_null_androidfix(i32 %18), !dbg !5692
  store i8* %19, i8** %16, align 8, !dbg !5690
  %20 = load i8*, i8** %16, align 8, !dbg !5693
  %21 = icmp eq i8* %20, null, !dbg !5695
  %22 = load i32, i32* @x.83
  %23 = load i32, i32* @y.84
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %85, !dbg !5696

30:                                               ; preds = %originalBBpart2
  %31 = load i32, i32* @x.83
  %32 = load i32, i32* @y.84
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load i64, i64* %15, align 8, !dbg !5697
  %40 = icmp ugt i64 %39, 0, !dbg !5700
  %41 = load i32, i32* @x.83
  %42 = load i32, i32* @y.84
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %40, label %49, label %68, !dbg !5701

49:                                               ; preds = %originalBBpart24
  %50 = load i32, i32* @x.83
  %51 = load i32, i32* @y.84
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %49, %originalBB6alteredBB
  %58 = load i8*, i8** %14, align 8, !dbg !5702
  %59 = getelementptr inbounds i8, i8* %58, i64 0, !dbg !5702
  store i8 0, i8* %59, align 1, !dbg !5703
  %60 = load i32, i32* @x.83
  %61 = load i32, i32* @y.84
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %68, !dbg !5702

68:                                               ; preds = %originalBBpart28, %originalBBpart24
  %69 = load i32, i32* @x.83
  %70 = load i32, i32* @y.84
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %68, %originalBB10alteredBB
  store i32 22, i32* %12, align 4, !dbg !5704
  %77 = load i32, i32* @x.83
  %78 = load i32, i32* @y.84
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %189, !dbg !5704

85:                                               ; preds = %originalBBpart2
  call void @llvm.dbg.declare(metadata i64* %17, metadata !5705, metadata !DIExpression()), !dbg !5707
  %86 = load i32, i32* @x.83
  %87 = load i32, i32* @y.84
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %85, %originalBB14alteredBB
  %94 = load i8*, i8** %16, align 8, !dbg !5708
  %95 = call i64 @strlen(i8* %94) #13, !dbg !5709
  store i64 %95, i64* %17, align 8, !dbg !5707
  %96 = load i64, i64* %17, align 8, !dbg !5710
  %97 = load i64, i64* %15, align 8, !dbg !5712
  %98 = icmp ult i64 %96, %97, !dbg !5713
  %99 = load i32, i32* @x.83
  %100 = load i32, i32* @y.84
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %98, label %107, label %128, !dbg !5714

107:                                              ; preds = %originalBBpart216
  %108 = load i32, i32* @x.83
  %109 = load i32, i32* @y.84
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %107, %originalBB18alteredBB
  %116 = load i8*, i8** %14, align 8, !dbg !5715
  %117 = load i8*, i8** %16, align 8, !dbg !5717
  %118 = load i64, i64* %17, align 8, !dbg !5718
  %119 = add i64 %118, 1, !dbg !5719
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %116, i8* align 1 %117, i64 %119, i1 false), !dbg !5720
  store i32 0, i32* %12, align 4, !dbg !5721
  %120 = load i32, i32* @x.83
  %121 = load i32, i32* @y.84
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %189, !dbg !5721

128:                                              ; preds = %originalBBpart216
  %129 = load i32, i32* @x.83
  %130 = load i32, i32* @y.84
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %128, %originalBB22alteredBB
  %137 = load i64, i64* %15, align 8, !dbg !5722
  %138 = icmp ugt i64 %137, 0, !dbg !5725
  %139 = load i32, i32* @x.83
  %140 = load i32, i32* @y.84
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %138, label %147, label %172, !dbg !5726

147:                                              ; preds = %originalBBpart224
  %148 = load i32, i32* @x.83
  %149 = load i32, i32* @y.84
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %147, %originalBB26alteredBB
  %156 = load i8*, i8** %14, align 8, !dbg !5727
  %157 = load i8*, i8** %16, align 8, !dbg !5729
  %158 = load i64, i64* %15, align 8, !dbg !5730
  %159 = sub i64 %158, 1, !dbg !5731
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %156, i8* align 1 %157, i64 %159, i1 false), !dbg !5732
  %160 = load i8*, i8** %14, align 8, !dbg !5733
  %161 = load i64, i64* %15, align 8, !dbg !5734
  %162 = sub i64 %161, 1, !dbg !5735
  %163 = getelementptr inbounds i8, i8* %160, i64 %162, !dbg !5733
  store i8 0, i8* %163, align 1, !dbg !5736
  %164 = load i32, i32* @x.83
  %165 = load i32, i32* @y.84
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBBpart243, label %originalBB26alteredBB

originalBBpart243:                                ; preds = %originalBB26
  br label %172, !dbg !5737

172:                                              ; preds = %originalBBpart243, %originalBBpart224
  %173 = load i32, i32* @x.83
  %174 = load i32, i32* @y.84
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %172, %originalBB45alteredBB
  store i32 34, i32* %12, align 4, !dbg !5738
  %181 = load i32, i32* @x.83
  %182 = load i32, i32* @y.84
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  br label %189, !dbg !5738

189:                                              ; preds = %originalBBpart247, %originalBBpart220, %originalBBpart212
  %190 = load i32, i32* @x.83
  %191 = load i32, i32* @y.84
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %189, %originalBB49alteredBB
  %198 = load i32, i32* %12, align 4, !dbg !5739
  %199 = load i32, i32* @x.83
  %200 = load i32, i32* @y.84
  %201 = sub i32 %199, 1
  %202 = mul i32 %199, %201
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %204, %205
  br i1 %206, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  ret i32 %198, !dbg !5739

originalBBalteredBB:                              ; preds = %originalBB, %3
  %207 = alloca i32, align 4
  %208 = alloca i32, align 4
  %209 = alloca i8*, align 8
  %210 = alloca i64, align 8
  %211 = alloca i8*, align 8
  %212 = alloca i64, align 8
  store i32 %0, i32* %208, align 4
  call void @llvm.dbg.declare(metadata i32* %208, metadata !5740, metadata !DIExpression()), !dbg !5684
  store i8* %1, i8** %209, align 8
  call void @llvm.dbg.declare(metadata i8** %209, metadata !5743, metadata !DIExpression()), !dbg !5686
  store i64 %2, i64* %210, align 8
  call void @llvm.dbg.declare(metadata i64* %210, metadata !5744, metadata !DIExpression()), !dbg !5688
  call void @llvm.dbg.declare(metadata i8** %211, metadata !5745, metadata !DIExpression()), !dbg !5690
  %213 = load i32, i32* %208, align 4, !dbg !5691
  %214 = call i8* @setlocale_null_androidfix(i32 %213), !dbg !5692
  store i8* %214, i8** %211, align 8, !dbg !5690
  %215 = load i8*, i8** %211, align 8, !dbg !5693
  %216 = icmp eq i8* %215, null, !dbg !5695
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %217 = load i64, i64* %15, align 8, !dbg !5697
  %218 = icmp ugt i64 %217, 0, !dbg !5700
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  %219 = load i8*, i8** %14, align 8, !dbg !5702
  %220 = getelementptr inbounds i8, i8* %219, i64 0, !dbg !5702
  store i8 0, i8* %220, align 1, !dbg !5703
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %68
  store i32 22, i32* %12, align 4, !dbg !5704
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %85
  %221 = load i8*, i8** %16, align 8, !dbg !5708
  %222 = call i64 @strlen(i8* %221) #13, !dbg !5709
  store i64 %222, i64* %17, align 8, !dbg !5707
  %223 = load i64, i64* %17, align 8, !dbg !5710
  %224 = load i64, i64* %15, align 8, !dbg !5712
  %225 = icmp ult i64 %223, %224, !dbg !5713
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %107
  %226 = load i8*, i8** %14, align 8, !dbg !5715
  %227 = load i8*, i8** %16, align 8, !dbg !5717
  %228 = load i64, i64* %17, align 8, !dbg !5718
  %_ = shl i64 %228, 1
  %229 = add i64 %228, 1, !dbg !5719
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %226, i8* align 1 %227, i64 %229, i1 false), !dbg !5720
  store i32 0, i32* %12, align 4, !dbg !5721
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %128
  %230 = load i64, i64* %15, align 8, !dbg !5722
  %231 = icmp ugt i64 %230, 0, !dbg !5725
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %147
  %232 = load i8*, i8** %14, align 8, !dbg !5727
  %233 = load i8*, i8** %16, align 8, !dbg !5729
  %234 = load i64, i64* %15, align 8, !dbg !5730
  %_27 = sub i64 0, %234
  %gen = add i64 %_27, 1
  %_28 = shl i64 %234, 1
  %_29 = sub i64 0, %234
  %gen30 = add i64 %_29, 1
  %_31 = sub i64 %234, 1
  %gen32 = mul i64 %_31, 1
  %_33 = shl i64 %234, 1
  %_34 = sub i64 %234, 1
  %gen35 = mul i64 %_34, 1
  %_36 = shl i64 %234, 1
  %_37 = sub i64 0, %234
  %gen38 = add i64 %_37, 1
  %235 = sub i64 %234, 1, !dbg !5731
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %232, i8* align 1 %233, i64 %235, i1 false), !dbg !5732
  %236 = load i8*, i8** %14, align 8, !dbg !5733
  %237 = load i64, i64* %15, align 8, !dbg !5734
  %_39 = shl i64 %237, 1
  %_40 = shl i64 %237, 1
  %_41 = shl i64 %237, 1
  %238 = sub i64 %237, 1, !dbg !5735
  %239 = getelementptr inbounds i8, i8* %236, i64 %238, !dbg !5733
  store i8 0, i8* %239, align 1, !dbg !5736
  br label %originalBB26

originalBB45alteredBB:                            ; preds = %originalBB45, %172
  store i32 34, i32* %12, align 4, !dbg !5738
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %189
  %240 = load i32, i32* %12, align 4, !dbg !5739
  br label %originalBB49
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @setlocale_null_androidfix(i32) #4 !dbg !5746 {
  %2 = load i32, i32* @x.85
  %3 = load i32, i32* @y.86
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  store i32 %0, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !5749, metadata !DIExpression()), !dbg !5750
  call void @llvm.dbg.declare(metadata i8** %11, metadata !5751, metadata !DIExpression()), !dbg !5752
  %12 = load i32, i32* %10, align 4, !dbg !5753
  %13 = call i8* @setlocale(i32 %12, i8* null) #10, !dbg !5754
  store i8* %13, i8** %11, align 8, !dbg !5752
  %14 = load i8*, i8** %11, align 8, !dbg !5755
  %15 = load i32, i32* @x.85
  %16 = load i32, i32* @y.86
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %14, !dbg !5756

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca i32, align 4
  %24 = alloca i8*, align 8
  store i32 %0, i32* %23, align 4
  call void @llvm.dbg.declare(metadata i32* %23, metadata !5757, metadata !DIExpression()), !dbg !5750
  call void @llvm.dbg.declare(metadata i8** %24, metadata !5760, metadata !DIExpression()), !dbg !5752
  %25 = load i32, i32* %23, align 4, !dbg !5753
  %26 = call i8* @setlocale(i32 %25, i8* null) #10, !dbg !5754
  store i8* %26, i8** %24, align 8, !dbg !5752
  %27 = load i8*, i8** %24, align 8, !dbg !5755
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_arn(%struct._IO_FILE*, i8*, i8*, i8*, i8**, i64) #4 !dbg !5761 {
  %7 = load i32, i32* @x.87
  %8 = load i32, i32* @y.88
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = alloca %struct._IO_FILE*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8**, align 8
  %20 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %15, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %15, metadata !5815, metadata !DIExpression()), !dbg !5816
  store i8* %1, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !5817, metadata !DIExpression()), !dbg !5818
  store i8* %2, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !5819, metadata !DIExpression()), !dbg !5820
  store i8* %3, i8** %18, align 8
  call void @llvm.dbg.declare(metadata i8** %18, metadata !5821, metadata !DIExpression()), !dbg !5822
  store i8** %4, i8*** %19, align 8
  call void @llvm.dbg.declare(metadata i8*** %19, metadata !5823, metadata !DIExpression()), !dbg !5824
  store i64 %5, i64* %20, align 8
  call void @llvm.dbg.declare(metadata i64* %20, metadata !5825, metadata !DIExpression()), !dbg !5826
  %21 = load i8*, i8** %16, align 8, !dbg !5827
  %22 = icmp ne i8* %21, null, !dbg !5827
  %23 = load i32, i32* @x.87
  %24 = load i32, i32* @y.88
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %53, !dbg !5829

31:                                               ; preds = %originalBBpart2
  %32 = load i32, i32* @x.87
  %33 = load i32, i32* @y.88
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5830
  %41 = load i8*, i8** %16, align 8, !dbg !5831
  %42 = load i8*, i8** %17, align 8, !dbg !5832
  %43 = load i8*, i8** %18, align 8, !dbg !5833
  %44 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.137, i64 0, i64 0), i8* %41, i8* %42, i8* %43), !dbg !5834
  %45 = load i32, i32* @x.87
  %46 = load i32, i32* @y.88
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %74, !dbg !5834

53:                                               ; preds = %originalBBpart2
  %54 = load i32, i32* @x.87
  %55 = load i32, i32* @y.88
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %53, %originalBB6alteredBB
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5835
  %63 = load i8*, i8** %17, align 8, !dbg !5836
  %64 = load i8*, i8** %18, align 8, !dbg !5837
  %65 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %62, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.138, i64 0, i64 0), i8* %63, i8* %64), !dbg !5838
  %66 = load i32, i32* @x.87
  %67 = load i32, i32* @y.88
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %74

74:                                               ; preds = %originalBBpart28, %originalBBpart24
  %75 = load i32, i32* @x.87
  %76 = load i32, i32* @y.88
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %74, %originalBB10alteredBB
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5839
  %84 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.139, i64 0, i64 0)) #10, !dbg !5840
  %85 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %83, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %84, i32 2020), !dbg !5841
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5842
  %87 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.140, i64 0, i64 0), %struct._IO_FILE* %86), !dbg !5842
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5843
  %89 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.141, i64 0, i64 0)) #10, !dbg !5844
  %90 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %88, i8* %89, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.142, i64 0, i64 0)), !dbg !5845
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5846
  %92 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.140, i64 0, i64 0), %struct._IO_FILE* %91), !dbg !5846
  %93 = load i64, i64* %20, align 8, !dbg !5847
  %94 = load i32, i32* @x.87
  %95 = load i32, i32* @y.88
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  switch i64 %93, label %418 [
    i64 0, label %102
    i64 1, label %119
    i64 2, label %142
    i64 3, label %168
    i64 4, label %197
    i64 5, label %229
    i64 6, label %248
    i64 7, label %286
    i64 8, label %327
    i64 9, label %371
  ], !dbg !5848

102:                                              ; preds = %originalBBpart212
  %103 = load i32, i32* @x.87
  %104 = load i32, i32* @y.88
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %102, %originalBB14alteredBB
  %111 = load i32, i32* @x.87
  %112 = load i32, i32* @y.88
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %465, !dbg !5849

119:                                              ; preds = %originalBBpart212
  %120 = load i32, i32* @x.87
  %121 = load i32, i32* @y.88
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %119, %originalBB18alteredBB
  %128 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5851
  %129 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.143, i64 0, i64 0)) #10, !dbg !5852
  %130 = load i8**, i8*** %19, align 8, !dbg !5853
  %131 = getelementptr inbounds i8*, i8** %130, i64 0, !dbg !5853
  %132 = load i8*, i8** %131, align 8, !dbg !5853
  %133 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %128, i8* %129, i8* %132), !dbg !5854
  %134 = load i32, i32* @x.87
  %135 = load i32, i32* @y.88
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %465, !dbg !5855

142:                                              ; preds = %originalBBpart212
  %143 = load i32, i32* @x.87
  %144 = load i32, i32* @y.88
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %142, %originalBB22alteredBB
  %151 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5856
  %152 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.144, i64 0, i64 0)) #10, !dbg !5857
  %153 = load i8**, i8*** %19, align 8, !dbg !5858
  %154 = getelementptr inbounds i8*, i8** %153, i64 0, !dbg !5858
  %155 = load i8*, i8** %154, align 8, !dbg !5858
  %156 = load i8**, i8*** %19, align 8, !dbg !5859
  %157 = getelementptr inbounds i8*, i8** %156, i64 1, !dbg !5859
  %158 = load i8*, i8** %157, align 8, !dbg !5859
  %159 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %151, i8* %152, i8* %155, i8* %158), !dbg !5860
  %160 = load i32, i32* @x.87
  %161 = load i32, i32* @y.88
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %465, !dbg !5861

168:                                              ; preds = %originalBBpart212
  %169 = load i32, i32* @x.87
  %170 = load i32, i32* @y.88
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %168, %originalBB26alteredBB
  %177 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5862
  %178 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.145, i64 0, i64 0)) #10, !dbg !5863
  %179 = load i8**, i8*** %19, align 8, !dbg !5864
  %180 = getelementptr inbounds i8*, i8** %179, i64 0, !dbg !5864
  %181 = load i8*, i8** %180, align 8, !dbg !5864
  %182 = load i8**, i8*** %19, align 8, !dbg !5865
  %183 = getelementptr inbounds i8*, i8** %182, i64 1, !dbg !5865
  %184 = load i8*, i8** %183, align 8, !dbg !5865
  %185 = load i8**, i8*** %19, align 8, !dbg !5866
  %186 = getelementptr inbounds i8*, i8** %185, i64 2, !dbg !5866
  %187 = load i8*, i8** %186, align 8, !dbg !5866
  %188 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %177, i8* %178, i8* %181, i8* %184, i8* %187), !dbg !5867
  %189 = load i32, i32* @x.87
  %190 = load i32, i32* @y.88
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %465, !dbg !5868

197:                                              ; preds = %originalBBpart212
  %198 = load i32, i32* @x.87
  %199 = load i32, i32* @y.88
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %197, %originalBB30alteredBB
  %206 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5869
  %207 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.146, i64 0, i64 0)) #10, !dbg !5870
  %208 = load i8**, i8*** %19, align 8, !dbg !5871
  %209 = getelementptr inbounds i8*, i8** %208, i64 0, !dbg !5871
  %210 = load i8*, i8** %209, align 8, !dbg !5871
  %211 = load i8**, i8*** %19, align 8, !dbg !5872
  %212 = getelementptr inbounds i8*, i8** %211, i64 1, !dbg !5872
  %213 = load i8*, i8** %212, align 8, !dbg !5872
  %214 = load i8**, i8*** %19, align 8, !dbg !5873
  %215 = getelementptr inbounds i8*, i8** %214, i64 2, !dbg !5873
  %216 = load i8*, i8** %215, align 8, !dbg !5873
  %217 = load i8**, i8*** %19, align 8, !dbg !5874
  %218 = getelementptr inbounds i8*, i8** %217, i64 3, !dbg !5874
  %219 = load i8*, i8** %218, align 8, !dbg !5874
  %220 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %206, i8* %207, i8* %210, i8* %213, i8* %216, i8* %219), !dbg !5875
  %221 = load i32, i32* @x.87
  %222 = load i32, i32* @y.88
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %465, !dbg !5876

229:                                              ; preds = %originalBBpart212
  %230 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5877
  %231 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.147, i64 0, i64 0)) #10, !dbg !5878
  %232 = load i8**, i8*** %19, align 8, !dbg !5879
  %233 = getelementptr inbounds i8*, i8** %232, i64 0, !dbg !5879
  %234 = load i8*, i8** %233, align 8, !dbg !5879
  %235 = load i8**, i8*** %19, align 8, !dbg !5880
  %236 = getelementptr inbounds i8*, i8** %235, i64 1, !dbg !5880
  %237 = load i8*, i8** %236, align 8, !dbg !5880
  %238 = load i8**, i8*** %19, align 8, !dbg !5881
  %239 = getelementptr inbounds i8*, i8** %238, i64 2, !dbg !5881
  %240 = load i8*, i8** %239, align 8, !dbg !5881
  %241 = load i8**, i8*** %19, align 8, !dbg !5882
  %242 = getelementptr inbounds i8*, i8** %241, i64 3, !dbg !5882
  %243 = load i8*, i8** %242, align 8, !dbg !5882
  %244 = load i8**, i8*** %19, align 8, !dbg !5883
  %245 = getelementptr inbounds i8*, i8** %244, i64 4, !dbg !5883
  %246 = load i8*, i8** %245, align 8, !dbg !5883
  %247 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %230, i8* %231, i8* %234, i8* %237, i8* %240, i8* %243, i8* %246), !dbg !5884
  br label %465, !dbg !5885

248:                                              ; preds = %originalBBpart212
  %249 = load i32, i32* @x.87
  %250 = load i32, i32* @y.88
  %251 = sub i32 %249, 1
  %252 = mul i32 %249, %251
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %254, %255
  br i1 %256, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %248, %originalBB34alteredBB
  %257 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5886
  %258 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.148, i64 0, i64 0)) #10, !dbg !5887
  %259 = load i8**, i8*** %19, align 8, !dbg !5888
  %260 = getelementptr inbounds i8*, i8** %259, i64 0, !dbg !5888
  %261 = load i8*, i8** %260, align 8, !dbg !5888
  %262 = load i8**, i8*** %19, align 8, !dbg !5889
  %263 = getelementptr inbounds i8*, i8** %262, i64 1, !dbg !5889
  %264 = load i8*, i8** %263, align 8, !dbg !5889
  %265 = load i8**, i8*** %19, align 8, !dbg !5890
  %266 = getelementptr inbounds i8*, i8** %265, i64 2, !dbg !5890
  %267 = load i8*, i8** %266, align 8, !dbg !5890
  %268 = load i8**, i8*** %19, align 8, !dbg !5891
  %269 = getelementptr inbounds i8*, i8** %268, i64 3, !dbg !5891
  %270 = load i8*, i8** %269, align 8, !dbg !5891
  %271 = load i8**, i8*** %19, align 8, !dbg !5892
  %272 = getelementptr inbounds i8*, i8** %271, i64 4, !dbg !5892
  %273 = load i8*, i8** %272, align 8, !dbg !5892
  %274 = load i8**, i8*** %19, align 8, !dbg !5893
  %275 = getelementptr inbounds i8*, i8** %274, i64 5, !dbg !5893
  %276 = load i8*, i8** %275, align 8, !dbg !5893
  %277 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %257, i8* %258, i8* %261, i8* %264, i8* %267, i8* %270, i8* %273, i8* %276), !dbg !5894
  %278 = load i32, i32* @x.87
  %279 = load i32, i32* @y.88
  %280 = sub i32 %278, 1
  %281 = mul i32 %278, %280
  %282 = urem i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %279, 10
  %285 = or i1 %283, %284
  br i1 %285, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %465, !dbg !5895

286:                                              ; preds = %originalBBpart212
  %287 = load i32, i32* @x.87
  %288 = load i32, i32* @y.88
  %289 = sub i32 %287, 1
  %290 = mul i32 %287, %289
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %288, 10
  %294 = or i1 %292, %293
  br i1 %294, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %286, %originalBB38alteredBB
  %295 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5896
  %296 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.149, i64 0, i64 0)) #10, !dbg !5897
  %297 = load i8**, i8*** %19, align 8, !dbg !5898
  %298 = getelementptr inbounds i8*, i8** %297, i64 0, !dbg !5898
  %299 = load i8*, i8** %298, align 8, !dbg !5898
  %300 = load i8**, i8*** %19, align 8, !dbg !5899
  %301 = getelementptr inbounds i8*, i8** %300, i64 1, !dbg !5899
  %302 = load i8*, i8** %301, align 8, !dbg !5899
  %303 = load i8**, i8*** %19, align 8, !dbg !5900
  %304 = getelementptr inbounds i8*, i8** %303, i64 2, !dbg !5900
  %305 = load i8*, i8** %304, align 8, !dbg !5900
  %306 = load i8**, i8*** %19, align 8, !dbg !5901
  %307 = getelementptr inbounds i8*, i8** %306, i64 3, !dbg !5901
  %308 = load i8*, i8** %307, align 8, !dbg !5901
  %309 = load i8**, i8*** %19, align 8, !dbg !5902
  %310 = getelementptr inbounds i8*, i8** %309, i64 4, !dbg !5902
  %311 = load i8*, i8** %310, align 8, !dbg !5902
  %312 = load i8**, i8*** %19, align 8, !dbg !5903
  %313 = getelementptr inbounds i8*, i8** %312, i64 5, !dbg !5903
  %314 = load i8*, i8** %313, align 8, !dbg !5903
  %315 = load i8**, i8*** %19, align 8, !dbg !5904
  %316 = getelementptr inbounds i8*, i8** %315, i64 6, !dbg !5904
  %317 = load i8*, i8** %316, align 8, !dbg !5904
  %318 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %295, i8* %296, i8* %299, i8* %302, i8* %305, i8* %308, i8* %311, i8* %314, i8* %317), !dbg !5905
  %319 = load i32, i32* @x.87
  %320 = load i32, i32* @y.88
  %321 = sub i32 %319, 1
  %322 = mul i32 %319, %321
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %324, %325
  br i1 %326, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %465, !dbg !5906

327:                                              ; preds = %originalBBpart212
  %328 = load i32, i32* @x.87
  %329 = load i32, i32* @y.88
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %327, %originalBB42alteredBB
  %336 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5907
  %337 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.150, i64 0, i64 0)) #10, !dbg !5908
  %338 = load i8**, i8*** %19, align 8, !dbg !5909
  %339 = getelementptr inbounds i8*, i8** %338, i64 0, !dbg !5909
  %340 = load i8*, i8** %339, align 8, !dbg !5909
  %341 = load i8**, i8*** %19, align 8, !dbg !5910
  %342 = getelementptr inbounds i8*, i8** %341, i64 1, !dbg !5910
  %343 = load i8*, i8** %342, align 8, !dbg !5910
  %344 = load i8**, i8*** %19, align 8, !dbg !5911
  %345 = getelementptr inbounds i8*, i8** %344, i64 2, !dbg !5911
  %346 = load i8*, i8** %345, align 8, !dbg !5911
  %347 = load i8**, i8*** %19, align 8, !dbg !5912
  %348 = getelementptr inbounds i8*, i8** %347, i64 3, !dbg !5912
  %349 = load i8*, i8** %348, align 8, !dbg !5912
  %350 = load i8**, i8*** %19, align 8, !dbg !5913
  %351 = getelementptr inbounds i8*, i8** %350, i64 4, !dbg !5913
  %352 = load i8*, i8** %351, align 8, !dbg !5913
  %353 = load i8**, i8*** %19, align 8, !dbg !5914
  %354 = getelementptr inbounds i8*, i8** %353, i64 5, !dbg !5914
  %355 = load i8*, i8** %354, align 8, !dbg !5914
  %356 = load i8**, i8*** %19, align 8, !dbg !5915
  %357 = getelementptr inbounds i8*, i8** %356, i64 6, !dbg !5915
  %358 = load i8*, i8** %357, align 8, !dbg !5915
  %359 = load i8**, i8*** %19, align 8, !dbg !5916
  %360 = getelementptr inbounds i8*, i8** %359, i64 7, !dbg !5916
  %361 = load i8*, i8** %360, align 8, !dbg !5916
  %362 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %336, i8* %337, i8* %340, i8* %343, i8* %346, i8* %349, i8* %352, i8* %355, i8* %358, i8* %361), !dbg !5917
  %363 = load i32, i32* @x.87
  %364 = load i32, i32* @y.88
  %365 = sub i32 %363, 1
  %366 = mul i32 %363, %365
  %367 = urem i32 %366, 2
  %368 = icmp eq i32 %367, 0
  %369 = icmp slt i32 %364, 10
  %370 = or i1 %368, %369
  br i1 %370, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %465, !dbg !5918

371:                                              ; preds = %originalBBpart212
  %372 = load i32, i32* @x.87
  %373 = load i32, i32* @y.88
  %374 = sub i32 %372, 1
  %375 = mul i32 %372, %374
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %377, %378
  br i1 %379, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %371, %originalBB46alteredBB
  %380 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5919
  %381 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.151, i64 0, i64 0)) #10, !dbg !5920
  %382 = load i8**, i8*** %19, align 8, !dbg !5921
  %383 = getelementptr inbounds i8*, i8** %382, i64 0, !dbg !5921
  %384 = load i8*, i8** %383, align 8, !dbg !5921
  %385 = load i8**, i8*** %19, align 8, !dbg !5922
  %386 = getelementptr inbounds i8*, i8** %385, i64 1, !dbg !5922
  %387 = load i8*, i8** %386, align 8, !dbg !5922
  %388 = load i8**, i8*** %19, align 8, !dbg !5923
  %389 = getelementptr inbounds i8*, i8** %388, i64 2, !dbg !5923
  %390 = load i8*, i8** %389, align 8, !dbg !5923
  %391 = load i8**, i8*** %19, align 8, !dbg !5924
  %392 = getelementptr inbounds i8*, i8** %391, i64 3, !dbg !5924
  %393 = load i8*, i8** %392, align 8, !dbg !5924
  %394 = load i8**, i8*** %19, align 8, !dbg !5925
  %395 = getelementptr inbounds i8*, i8** %394, i64 4, !dbg !5925
  %396 = load i8*, i8** %395, align 8, !dbg !5925
  %397 = load i8**, i8*** %19, align 8, !dbg !5926
  %398 = getelementptr inbounds i8*, i8** %397, i64 5, !dbg !5926
  %399 = load i8*, i8** %398, align 8, !dbg !5926
  %400 = load i8**, i8*** %19, align 8, !dbg !5927
  %401 = getelementptr inbounds i8*, i8** %400, i64 6, !dbg !5927
  %402 = load i8*, i8** %401, align 8, !dbg !5927
  %403 = load i8**, i8*** %19, align 8, !dbg !5928
  %404 = getelementptr inbounds i8*, i8** %403, i64 7, !dbg !5928
  %405 = load i8*, i8** %404, align 8, !dbg !5928
  %406 = load i8**, i8*** %19, align 8, !dbg !5929
  %407 = getelementptr inbounds i8*, i8** %406, i64 8, !dbg !5929
  %408 = load i8*, i8** %407, align 8, !dbg !5929
  %409 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %380, i8* %381, i8* %384, i8* %387, i8* %390, i8* %393, i8* %396, i8* %399, i8* %402, i8* %405, i8* %408), !dbg !5930
  %410 = load i32, i32* @x.87
  %411 = load i32, i32* @y.88
  %412 = sub i32 %410, 1
  %413 = mul i32 %410, %412
  %414 = urem i32 %413, 2
  %415 = icmp eq i32 %414, 0
  %416 = icmp slt i32 %411, 10
  %417 = or i1 %415, %416
  br i1 %417, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %465, !dbg !5931

418:                                              ; preds = %originalBBpart212
  %419 = load i32, i32* @x.87
  %420 = load i32, i32* @y.88
  %421 = sub i32 %419, 1
  %422 = mul i32 %419, %421
  %423 = urem i32 %422, 2
  %424 = icmp eq i32 %423, 0
  %425 = icmp slt i32 %420, 10
  %426 = or i1 %424, %425
  br i1 %426, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %418, %originalBB50alteredBB
  %427 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5932
  %428 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.152, i64 0, i64 0)) #10, !dbg !5933
  %429 = load i8**, i8*** %19, align 8, !dbg !5934
  %430 = getelementptr inbounds i8*, i8** %429, i64 0, !dbg !5934
  %431 = load i8*, i8** %430, align 8, !dbg !5934
  %432 = load i8**, i8*** %19, align 8, !dbg !5935
  %433 = getelementptr inbounds i8*, i8** %432, i64 1, !dbg !5935
  %434 = load i8*, i8** %433, align 8, !dbg !5935
  %435 = load i8**, i8*** %19, align 8, !dbg !5936
  %436 = getelementptr inbounds i8*, i8** %435, i64 2, !dbg !5936
  %437 = load i8*, i8** %436, align 8, !dbg !5936
  %438 = load i8**, i8*** %19, align 8, !dbg !5937
  %439 = getelementptr inbounds i8*, i8** %438, i64 3, !dbg !5937
  %440 = load i8*, i8** %439, align 8, !dbg !5937
  %441 = load i8**, i8*** %19, align 8, !dbg !5938
  %442 = getelementptr inbounds i8*, i8** %441, i64 4, !dbg !5938
  %443 = load i8*, i8** %442, align 8, !dbg !5938
  %444 = load i8**, i8*** %19, align 8, !dbg !5939
  %445 = getelementptr inbounds i8*, i8** %444, i64 5, !dbg !5939
  %446 = load i8*, i8** %445, align 8, !dbg !5939
  %447 = load i8**, i8*** %19, align 8, !dbg !5940
  %448 = getelementptr inbounds i8*, i8** %447, i64 6, !dbg !5940
  %449 = load i8*, i8** %448, align 8, !dbg !5940
  %450 = load i8**, i8*** %19, align 8, !dbg !5941
  %451 = getelementptr inbounds i8*, i8** %450, i64 7, !dbg !5941
  %452 = load i8*, i8** %451, align 8, !dbg !5941
  %453 = load i8**, i8*** %19, align 8, !dbg !5942
  %454 = getelementptr inbounds i8*, i8** %453, i64 8, !dbg !5942
  %455 = load i8*, i8** %454, align 8, !dbg !5942
  %456 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %427, i8* %428, i8* %431, i8* %434, i8* %437, i8* %440, i8* %443, i8* %446, i8* %449, i8* %452, i8* %455), !dbg !5943
  %457 = load i32, i32* @x.87
  %458 = load i32, i32* @y.88
  %459 = sub i32 %457, 1
  %460 = mul i32 %457, %459
  %461 = urem i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = icmp slt i32 %458, 10
  %464 = or i1 %462, %463
  br i1 %464, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %465, !dbg !5944

465:                                              ; preds = %originalBBpart252, %originalBBpart248, %originalBBpart244, %originalBBpart240, %originalBBpart236, %229, %originalBBpart232, %originalBBpart228, %originalBBpart224, %originalBBpart220, %originalBBpart216
  ret void, !dbg !5945

originalBBalteredBB:                              ; preds = %originalBB, %6
  %466 = alloca %struct._IO_FILE*, align 8
  %467 = alloca i8*, align 8
  %468 = alloca i8*, align 8
  %469 = alloca i8*, align 8
  %470 = alloca i8**, align 8
  %471 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %466, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %466, metadata !5946, metadata !DIExpression()), !dbg !5816
  store i8* %1, i8** %467, align 8
  call void @llvm.dbg.declare(metadata i8** %467, metadata !5985, metadata !DIExpression()), !dbg !5818
  store i8* %2, i8** %468, align 8
  call void @llvm.dbg.declare(metadata i8** %468, metadata !5986, metadata !DIExpression()), !dbg !5820
  store i8* %3, i8** %469, align 8
  call void @llvm.dbg.declare(metadata i8** %469, metadata !5987, metadata !DIExpression()), !dbg !5822
  store i8** %4, i8*** %470, align 8
  call void @llvm.dbg.declare(metadata i8*** %470, metadata !5988, metadata !DIExpression()), !dbg !5824
  store i64 %5, i64* %471, align 8
  call void @llvm.dbg.declare(metadata i64* %471, metadata !5989, metadata !DIExpression()), !dbg !5826
  %472 = load i8*, i8** %467, align 8, !dbg !5827
  %473 = icmp ne i8* %472, null, !dbg !5827
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %474 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5830
  %475 = load i8*, i8** %16, align 8, !dbg !5831
  %476 = load i8*, i8** %17, align 8, !dbg !5832
  %477 = load i8*, i8** %18, align 8, !dbg !5833
  %478 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %474, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.137, i64 0, i64 0), i8* %475, i8* %476, i8* %477), !dbg !5834
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %53
  %479 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5835
  %480 = load i8*, i8** %17, align 8, !dbg !5836
  %481 = load i8*, i8** %18, align 8, !dbg !5837
  %482 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %479, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.138, i64 0, i64 0), i8* %480, i8* %481), !dbg !5838
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %74
  %483 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5839
  %484 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.139, i64 0, i64 0)) #10, !dbg !5840
  %485 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %483, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %484, i32 2020), !dbg !5841
  %486 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5842
  %487 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.140, i64 0, i64 0), %struct._IO_FILE* %486), !dbg !5842
  %488 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5843
  %489 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.141, i64 0, i64 0)) #10, !dbg !5844
  %490 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %488, i8* %489, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.142, i64 0, i64 0)), !dbg !5845
  %491 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5846
  %492 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.140, i64 0, i64 0), %struct._IO_FILE* %491), !dbg !5846
  %493 = load i64, i64* %20, align 8, !dbg !5847
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %102
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %119
  %494 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5851
  %495 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.143, i64 0, i64 0)) #10, !dbg !5852
  %496 = load i8**, i8*** %19, align 8, !dbg !5853
  %497 = getelementptr inbounds i8*, i8** %496, i64 0, !dbg !5853
  %498 = load i8*, i8** %497, align 8, !dbg !5853
  %499 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %494, i8* %495, i8* %498), !dbg !5854
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %142
  %500 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5856
  %501 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.144, i64 0, i64 0)) #10, !dbg !5857
  %502 = load i8**, i8*** %19, align 8, !dbg !5858
  %503 = getelementptr inbounds i8*, i8** %502, i64 0, !dbg !5858
  %504 = load i8*, i8** %503, align 8, !dbg !5858
  %505 = load i8**, i8*** %19, align 8, !dbg !5859
  %506 = getelementptr inbounds i8*, i8** %505, i64 1, !dbg !5859
  %507 = load i8*, i8** %506, align 8, !dbg !5859
  %508 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %500, i8* %501, i8* %504, i8* %507), !dbg !5860
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %168
  %509 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5862
  %510 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.145, i64 0, i64 0)) #10, !dbg !5863
  %511 = load i8**, i8*** %19, align 8, !dbg !5864
  %512 = getelementptr inbounds i8*, i8** %511, i64 0, !dbg !5864
  %513 = load i8*, i8** %512, align 8, !dbg !5864
  %514 = load i8**, i8*** %19, align 8, !dbg !5865
  %515 = getelementptr inbounds i8*, i8** %514, i64 1, !dbg !5865
  %516 = load i8*, i8** %515, align 8, !dbg !5865
  %517 = load i8**, i8*** %19, align 8, !dbg !5866
  %518 = getelementptr inbounds i8*, i8** %517, i64 2, !dbg !5866
  %519 = load i8*, i8** %518, align 8, !dbg !5866
  %520 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %509, i8* %510, i8* %513, i8* %516, i8* %519), !dbg !5867
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %197
  %521 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5869
  %522 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.146, i64 0, i64 0)) #10, !dbg !5870
  %523 = load i8**, i8*** %19, align 8, !dbg !5871
  %524 = getelementptr inbounds i8*, i8** %523, i64 0, !dbg !5871
  %525 = load i8*, i8** %524, align 8, !dbg !5871
  %526 = load i8**, i8*** %19, align 8, !dbg !5872
  %527 = getelementptr inbounds i8*, i8** %526, i64 1, !dbg !5872
  %528 = load i8*, i8** %527, align 8, !dbg !5872
  %529 = load i8**, i8*** %19, align 8, !dbg !5873
  %530 = getelementptr inbounds i8*, i8** %529, i64 2, !dbg !5873
  %531 = load i8*, i8** %530, align 8, !dbg !5873
  %532 = load i8**, i8*** %19, align 8, !dbg !5874
  %533 = getelementptr inbounds i8*, i8** %532, i64 3, !dbg !5874
  %534 = load i8*, i8** %533, align 8, !dbg !5874
  %535 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %521, i8* %522, i8* %525, i8* %528, i8* %531, i8* %534), !dbg !5875
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %248
  %536 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5886
  %537 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.148, i64 0, i64 0)) #10, !dbg !5887
  %538 = load i8**, i8*** %19, align 8, !dbg !5888
  %539 = getelementptr inbounds i8*, i8** %538, i64 0, !dbg !5888
  %540 = load i8*, i8** %539, align 8, !dbg !5888
  %541 = load i8**, i8*** %19, align 8, !dbg !5889
  %542 = getelementptr inbounds i8*, i8** %541, i64 1, !dbg !5889
  %543 = load i8*, i8** %542, align 8, !dbg !5889
  %544 = load i8**, i8*** %19, align 8, !dbg !5890
  %545 = getelementptr inbounds i8*, i8** %544, i64 2, !dbg !5890
  %546 = load i8*, i8** %545, align 8, !dbg !5890
  %547 = load i8**, i8*** %19, align 8, !dbg !5891
  %548 = getelementptr inbounds i8*, i8** %547, i64 3, !dbg !5891
  %549 = load i8*, i8** %548, align 8, !dbg !5891
  %550 = load i8**, i8*** %19, align 8, !dbg !5892
  %551 = getelementptr inbounds i8*, i8** %550, i64 4, !dbg !5892
  %552 = load i8*, i8** %551, align 8, !dbg !5892
  %553 = load i8**, i8*** %19, align 8, !dbg !5893
  %554 = getelementptr inbounds i8*, i8** %553, i64 5, !dbg !5893
  %555 = load i8*, i8** %554, align 8, !dbg !5893
  %556 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %536, i8* %537, i8* %540, i8* %543, i8* %546, i8* %549, i8* %552, i8* %555), !dbg !5894
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %286
  %557 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5896
  %558 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.149, i64 0, i64 0)) #10, !dbg !5897
  %559 = load i8**, i8*** %19, align 8, !dbg !5898
  %560 = getelementptr inbounds i8*, i8** %559, i64 0, !dbg !5898
  %561 = load i8*, i8** %560, align 8, !dbg !5898
  %562 = load i8**, i8*** %19, align 8, !dbg !5899
  %563 = getelementptr inbounds i8*, i8** %562, i64 1, !dbg !5899
  %564 = load i8*, i8** %563, align 8, !dbg !5899
  %565 = load i8**, i8*** %19, align 8, !dbg !5900
  %566 = getelementptr inbounds i8*, i8** %565, i64 2, !dbg !5900
  %567 = load i8*, i8** %566, align 8, !dbg !5900
  %568 = load i8**, i8*** %19, align 8, !dbg !5901
  %569 = getelementptr inbounds i8*, i8** %568, i64 3, !dbg !5901
  %570 = load i8*, i8** %569, align 8, !dbg !5901
  %571 = load i8**, i8*** %19, align 8, !dbg !5902
  %572 = getelementptr inbounds i8*, i8** %571, i64 4, !dbg !5902
  %573 = load i8*, i8** %572, align 8, !dbg !5902
  %574 = load i8**, i8*** %19, align 8, !dbg !5903
  %575 = getelementptr inbounds i8*, i8** %574, i64 5, !dbg !5903
  %576 = load i8*, i8** %575, align 8, !dbg !5903
  %577 = load i8**, i8*** %19, align 8, !dbg !5904
  %578 = getelementptr inbounds i8*, i8** %577, i64 6, !dbg !5904
  %579 = load i8*, i8** %578, align 8, !dbg !5904
  %580 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %557, i8* %558, i8* %561, i8* %564, i8* %567, i8* %570, i8* %573, i8* %576, i8* %579), !dbg !5905
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %327
  %581 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5907
  %582 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.150, i64 0, i64 0)) #10, !dbg !5908
  %583 = load i8**, i8*** %19, align 8, !dbg !5909
  %584 = getelementptr inbounds i8*, i8** %583, i64 0, !dbg !5909
  %585 = load i8*, i8** %584, align 8, !dbg !5909
  %586 = load i8**, i8*** %19, align 8, !dbg !5910
  %587 = getelementptr inbounds i8*, i8** %586, i64 1, !dbg !5910
  %588 = load i8*, i8** %587, align 8, !dbg !5910
  %589 = load i8**, i8*** %19, align 8, !dbg !5911
  %590 = getelementptr inbounds i8*, i8** %589, i64 2, !dbg !5911
  %591 = load i8*, i8** %590, align 8, !dbg !5911
  %592 = load i8**, i8*** %19, align 8, !dbg !5912
  %593 = getelementptr inbounds i8*, i8** %592, i64 3, !dbg !5912
  %594 = load i8*, i8** %593, align 8, !dbg !5912
  %595 = load i8**, i8*** %19, align 8, !dbg !5913
  %596 = getelementptr inbounds i8*, i8** %595, i64 4, !dbg !5913
  %597 = load i8*, i8** %596, align 8, !dbg !5913
  %598 = load i8**, i8*** %19, align 8, !dbg !5914
  %599 = getelementptr inbounds i8*, i8** %598, i64 5, !dbg !5914
  %600 = load i8*, i8** %599, align 8, !dbg !5914
  %601 = load i8**, i8*** %19, align 8, !dbg !5915
  %602 = getelementptr inbounds i8*, i8** %601, i64 6, !dbg !5915
  %603 = load i8*, i8** %602, align 8, !dbg !5915
  %604 = load i8**, i8*** %19, align 8, !dbg !5916
  %605 = getelementptr inbounds i8*, i8** %604, i64 7, !dbg !5916
  %606 = load i8*, i8** %605, align 8, !dbg !5916
  %607 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %581, i8* %582, i8* %585, i8* %588, i8* %591, i8* %594, i8* %597, i8* %600, i8* %603, i8* %606), !dbg !5917
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %371
  %608 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5919
  %609 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.151, i64 0, i64 0)) #10, !dbg !5920
  %610 = load i8**, i8*** %19, align 8, !dbg !5921
  %611 = getelementptr inbounds i8*, i8** %610, i64 0, !dbg !5921
  %612 = load i8*, i8** %611, align 8, !dbg !5921
  %613 = load i8**, i8*** %19, align 8, !dbg !5922
  %614 = getelementptr inbounds i8*, i8** %613, i64 1, !dbg !5922
  %615 = load i8*, i8** %614, align 8, !dbg !5922
  %616 = load i8**, i8*** %19, align 8, !dbg !5923
  %617 = getelementptr inbounds i8*, i8** %616, i64 2, !dbg !5923
  %618 = load i8*, i8** %617, align 8, !dbg !5923
  %619 = load i8**, i8*** %19, align 8, !dbg !5924
  %620 = getelementptr inbounds i8*, i8** %619, i64 3, !dbg !5924
  %621 = load i8*, i8** %620, align 8, !dbg !5924
  %622 = load i8**, i8*** %19, align 8, !dbg !5925
  %623 = getelementptr inbounds i8*, i8** %622, i64 4, !dbg !5925
  %624 = load i8*, i8** %623, align 8, !dbg !5925
  %625 = load i8**, i8*** %19, align 8, !dbg !5926
  %626 = getelementptr inbounds i8*, i8** %625, i64 5, !dbg !5926
  %627 = load i8*, i8** %626, align 8, !dbg !5926
  %628 = load i8**, i8*** %19, align 8, !dbg !5927
  %629 = getelementptr inbounds i8*, i8** %628, i64 6, !dbg !5927
  %630 = load i8*, i8** %629, align 8, !dbg !5927
  %631 = load i8**, i8*** %19, align 8, !dbg !5928
  %632 = getelementptr inbounds i8*, i8** %631, i64 7, !dbg !5928
  %633 = load i8*, i8** %632, align 8, !dbg !5928
  %634 = load i8**, i8*** %19, align 8, !dbg !5929
  %635 = getelementptr inbounds i8*, i8** %634, i64 8, !dbg !5929
  %636 = load i8*, i8** %635, align 8, !dbg !5929
  %637 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %608, i8* %609, i8* %612, i8* %615, i8* %618, i8* %621, i8* %624, i8* %627, i8* %630, i8* %633, i8* %636), !dbg !5930
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %418
  %638 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !5932
  %639 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.152, i64 0, i64 0)) #10, !dbg !5933
  %640 = load i8**, i8*** %19, align 8, !dbg !5934
  %641 = getelementptr inbounds i8*, i8** %640, i64 0, !dbg !5934
  %642 = load i8*, i8** %641, align 8, !dbg !5934
  %643 = load i8**, i8*** %19, align 8, !dbg !5935
  %644 = getelementptr inbounds i8*, i8** %643, i64 1, !dbg !5935
  %645 = load i8*, i8** %644, align 8, !dbg !5935
  %646 = load i8**, i8*** %19, align 8, !dbg !5936
  %647 = getelementptr inbounds i8*, i8** %646, i64 2, !dbg !5936
  %648 = load i8*, i8** %647, align 8, !dbg !5936
  %649 = load i8**, i8*** %19, align 8, !dbg !5937
  %650 = getelementptr inbounds i8*, i8** %649, i64 3, !dbg !5937
  %651 = load i8*, i8** %650, align 8, !dbg !5937
  %652 = load i8**, i8*** %19, align 8, !dbg !5938
  %653 = getelementptr inbounds i8*, i8** %652, i64 4, !dbg !5938
  %654 = load i8*, i8** %653, align 8, !dbg !5938
  %655 = load i8**, i8*** %19, align 8, !dbg !5939
  %656 = getelementptr inbounds i8*, i8** %655, i64 5, !dbg !5939
  %657 = load i8*, i8** %656, align 8, !dbg !5939
  %658 = load i8**, i8*** %19, align 8, !dbg !5940
  %659 = getelementptr inbounds i8*, i8** %658, i64 6, !dbg !5940
  %660 = load i8*, i8** %659, align 8, !dbg !5940
  %661 = load i8**, i8*** %19, align 8, !dbg !5941
  %662 = getelementptr inbounds i8*, i8** %661, i64 7, !dbg !5941
  %663 = load i8*, i8** %662, align 8, !dbg !5941
  %664 = load i8**, i8*** %19, align 8, !dbg !5942
  %665 = getelementptr inbounds i8*, i8** %664, i64 8, !dbg !5942
  %666 = load i8*, i8** %665, align 8, !dbg !5942
  %667 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %638, i8* %639, i8* %642, i8* %645, i8* %648, i8* %651, i8* %654, i8* %657, i8* %660, i8* %663, i8* %666), !dbg !5943
  br label %originalBB50
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_va(%struct._IO_FILE*, i8*, i8*, i8*, %struct.__va_list_tag*) #4 !dbg !5990 {
  %6 = load i32, i32* @x.89
  %7 = load i32, i32* @y.90
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = alloca %struct._IO_FILE*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca %struct.__va_list_tag*, align 8
  %19 = alloca i64, align 8
  %20 = alloca [10 x i8*], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %14, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %14, metadata !6000, metadata !DIExpression()), !dbg !6001
  store i8* %1, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !6002, metadata !DIExpression()), !dbg !6003
  store i8* %2, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !6004, metadata !DIExpression()), !dbg !6005
  store i8* %3, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !6006, metadata !DIExpression()), !dbg !6007
  store %struct.__va_list_tag* %4, %struct.__va_list_tag** %18, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %18, metadata !6008, metadata !DIExpression()), !dbg !6009
  call void @llvm.dbg.declare(metadata i64* %19, metadata !6010, metadata !DIExpression()), !dbg !6011
  call void @llvm.dbg.declare(metadata [10 x i8*]* %20, metadata !6012, metadata !DIExpression()), !dbg !6014
  store i64 0, i64* %19, align 8, !dbg !6015
  %21 = load i32, i32* @x.89
  %22 = load i32, i32* @y.90
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %29, !dbg !6017

29:                                               ; preds = %originalBBpart220, %originalBBpart2
  %30 = load i64, i64* %19, align 8, !dbg !6018
  %31 = icmp ult i64 %30, 10, !dbg !6020
  br i1 %31, label %32, label %102, !dbg !6021

32:                                               ; preds = %29
  %33 = load i32, i32* @x.89
  %34 = load i32, i32* @y.90
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load %struct.__va_list_tag*, %struct.__va_list_tag** %18, align 8, !dbg !6022
  %42 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %41, i32 0, i32 0, !dbg !6022
  %43 = load i32, i32* %42, align 8, !dbg !6022
  %44 = icmp ule i32 %43, 40, !dbg !6022
  %45 = load i32, i32* @x.89
  %46 = load i32, i32* @y.90
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %44, label %53, label %59, !dbg !6022

53:                                               ; preds = %originalBBpart24
  %54 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %41, i32 0, i32 3, !dbg !6022
  %55 = load i8*, i8** %54, align 8, !dbg !6022
  %56 = getelementptr i8, i8* %55, i32 %43, !dbg !6022
  %57 = bitcast i8* %56 to i8**, !dbg !6022
  %58 = add i32 %43, 8, !dbg !6022
  store i32 %58, i32* %42, align 8, !dbg !6022
  br label %80, !dbg !6022

59:                                               ; preds = %originalBBpart24
  %60 = load i32, i32* @x.89
  %61 = load i32, i32* @y.90
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %59, %originalBB6alteredBB
  %68 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %41, i32 0, i32 2, !dbg !6022
  %69 = load i8*, i8** %68, align 8, !dbg !6022
  %70 = bitcast i8* %69 to i8**, !dbg !6022
  %71 = getelementptr i8, i8* %69, i32 8, !dbg !6022
  store i8* %71, i8** %68, align 8, !dbg !6022
  %72 = load i32, i32* @x.89
  %73 = load i32, i32* @y.90
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %80, !dbg !6022

80:                                               ; preds = %originalBBpart28, %53
  %81 = phi i8** [ %57, %53 ], [ %70, %originalBBpart28 ], !dbg !6022
  %82 = load i32, i32* @x.89
  %83 = load i32, i32* @y.90
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %80, %originalBB10alteredBB
  %90 = load i8*, i8** %81, align 8, !dbg !6022
  %91 = load i64, i64* %19, align 8, !dbg !6023
  %92 = getelementptr inbounds [10 x i8*], [10 x i8*]* %20, i64 0, i64 %91, !dbg !6024
  store i8* %90, i8** %92, align 8, !dbg !6025
  %93 = icmp ne i8* %90, null, !dbg !6026
  %94 = load i32, i32* @x.89
  %95 = load i32, i32* @y.90
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %102

102:                                              ; preds = %originalBBpart212, %29
  %103 = phi i1 [ false, %29 ], [ %93, %originalBBpart212 ], !dbg !6027
  %104 = load i32, i32* @x.89
  %105 = load i32, i32* @y.90
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %102, %originalBB14alteredBB
  %112 = load i32, i32* @x.89
  %113 = load i32, i32* @y.90
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %103, label %120, label %140, !dbg !6028

120:                                              ; preds = %originalBBpart216
  br label %121, !dbg !6028

121:                                              ; preds = %120
  %122 = load i32, i32* @x.89
  %123 = load i32, i32* @y.90
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %121, %originalBB18alteredBB
  %130 = load i64, i64* %19, align 8, !dbg !6029
  %131 = add i64 %130, 1, !dbg !6029
  store i64 %131, i64* %19, align 8, !dbg !6029
  %132 = load i32, i32* @x.89
  %133 = load i32, i32* @y.90
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %29, !dbg !6030, !llvm.loop !6031

140:                                              ; preds = %originalBBpart216
  %141 = load i32, i32* @x.89
  %142 = load i32, i32* @y.90
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %140, %originalBB22alteredBB
  %149 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8, !dbg !6033
  %150 = load i8*, i8** %15, align 8, !dbg !6034
  %151 = load i8*, i8** %16, align 8, !dbg !6035
  %152 = load i8*, i8** %17, align 8, !dbg !6036
  %153 = getelementptr inbounds [10 x i8*], [10 x i8*]* %20, i64 0, i64 0, !dbg !6037
  %154 = load i64, i64* %19, align 8, !dbg !6038
  call void @version_etc_arn(%struct._IO_FILE* %149, i8* %150, i8* %151, i8* %152, i8** %153, i64 %154), !dbg !6039
  %155 = load i32, i32* @x.89
  %156 = load i32, i32* @y.90
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret void, !dbg !6040

originalBBalteredBB:                              ; preds = %originalBB, %5
  %163 = alloca %struct._IO_FILE*, align 8
  %164 = alloca i8*, align 8
  %165 = alloca i8*, align 8
  %166 = alloca i8*, align 8
  %167 = alloca %struct.__va_list_tag*, align 8
  %168 = alloca i64, align 8
  %169 = alloca [10 x i8*], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %163, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %163, metadata !6041, metadata !DIExpression()), !dbg !6001
  store i8* %1, i8** %164, align 8
  call void @llvm.dbg.declare(metadata i8** %164, metadata !6087, metadata !DIExpression()), !dbg !6003
  store i8* %2, i8** %165, align 8
  call void @llvm.dbg.declare(metadata i8** %165, metadata !6088, metadata !DIExpression()), !dbg !6005
  store i8* %3, i8** %166, align 8
  call void @llvm.dbg.declare(metadata i8** %166, metadata !6089, metadata !DIExpression()), !dbg !6007
  store %struct.__va_list_tag* %4, %struct.__va_list_tag** %167, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %167, metadata !6090, metadata !DIExpression()), !dbg !6009
  call void @llvm.dbg.declare(metadata i64* %168, metadata !6091, metadata !DIExpression()), !dbg !6011
  call void @llvm.dbg.declare(metadata [10 x i8*]* %169, metadata !6092, metadata !DIExpression()), !dbg !6014
  store i64 0, i64* %168, align 8, !dbg !6015
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %170 = load %struct.__va_list_tag*, %struct.__va_list_tag** %18, align 8, !dbg !6022
  %171 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %170, i32 0, i32 0, !dbg !6022
  %172 = load i32, i32* %171, align 8, !dbg !6022
  %173 = icmp ule i32 %172, 40, !dbg !6022
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %59
  %174 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %41, i32 0, i32 2, !dbg !6022
  %175 = load i8*, i8** %174, align 8, !dbg !6022
  %176 = bitcast i8* %175 to i8**, !dbg !6022
  %177 = getelementptr i8, i8* %175, i32 8, !dbg !6022
  store i8* %177, i8** %174, align 8, !dbg !6022
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %80
  %178 = load i8*, i8** %81, align 8, !dbg !6022
  %179 = load i64, i64* %19, align 8, !dbg !6023
  %180 = getelementptr inbounds [10 x i8*], [10 x i8*]* %20, i64 0, i64 %179, !dbg !6024
  store i8* %178, i8** %180, align 8, !dbg !6025
  %181 = icmp ne i8* %178, null, !dbg !6026
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %102
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %121
  %182 = load i64, i64* %19, align 8, !dbg !6029
  %_ = sub i64 %182, 1
  %gen = mul i64 %_, 1
  %183 = add i64 %182, 1, !dbg !6029
  store i64 %183, i64* %19, align 8, !dbg !6029
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %140
  %184 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8, !dbg !6033
  %185 = load i8*, i8** %15, align 8, !dbg !6034
  %186 = load i8*, i8** %16, align 8, !dbg !6035
  %187 = load i8*, i8** %17, align 8, !dbg !6036
  %188 = getelementptr inbounds [10 x i8*], [10 x i8*]* %20, i64 0, i64 0, !dbg !6037
  %189 = load i64, i64* %19, align 8, !dbg !6038
  call void @version_etc_arn(%struct._IO_FILE* %184, i8* %185, i8* %186, i8* %187, i8** %188, i64 %189), !dbg !6039
  br label %originalBB22
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc(%struct._IO_FILE*, i8*, i8*, i8*, ...) #4 !dbg !6093 {
  %5 = load i32, i32* @x.91
  %6 = load i32, i32* @y.92
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %struct._IO_FILE*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %13, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %13, metadata !6096, metadata !DIExpression()), !dbg !6097
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !6098, metadata !DIExpression()), !dbg !6099
  store i8* %2, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !6100, metadata !DIExpression()), !dbg !6101
  store i8* %3, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !6102, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %17, metadata !6104, metadata !DIExpression()), !dbg !6111
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %17, i64 0, i64 0, !dbg !6112
  %19 = bitcast %struct.__va_list_tag* %18 to i8*, !dbg !6112
  call void @llvm.va_start(i8* %19), !dbg !6112
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !6113
  %21 = load i8*, i8** %14, align 8, !dbg !6114
  %22 = load i8*, i8** %15, align 8, !dbg !6115
  %23 = load i8*, i8** %16, align 8, !dbg !6116
  %24 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %17, i64 0, i64 0, !dbg !6117
  call void @version_etc_va(%struct._IO_FILE* %20, i8* %21, i8* %22, i8* %23, %struct.__va_list_tag* %24), !dbg !6118
  %25 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %17, i64 0, i64 0, !dbg !6119
  %26 = bitcast %struct.__va_list_tag* %25 to i8*, !dbg !6119
  call void @llvm.va_end(i8* %26), !dbg !6119
  %27 = load i32, i32* @x.91
  %28 = load i32, i32* @y.92
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !6120

originalBBalteredBB:                              ; preds = %originalBB, %4
  %35 = alloca %struct._IO_FILE*, align 8
  %36 = alloca i8*, align 8
  %37 = alloca i8*, align 8
  %38 = alloca i8*, align 8
  %39 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %35, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %35, metadata !6121, metadata !DIExpression()), !dbg !6097
  store i8* %1, i8** %36, align 8
  call void @llvm.dbg.declare(metadata i8** %36, metadata !6160, metadata !DIExpression()), !dbg !6099
  store i8* %2, i8** %37, align 8
  call void @llvm.dbg.declare(metadata i8** %37, metadata !6161, metadata !DIExpression()), !dbg !6101
  store i8* %3, i8** %38, align 8
  call void @llvm.dbg.declare(metadata i8** %38, metadata !6162, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %39, metadata !6163, metadata !DIExpression()), !dbg !6111
  %40 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %39, i64 0, i64 0, !dbg !6112
  %41 = bitcast %struct.__va_list_tag* %40 to i8*, !dbg !6112
  call void @llvm.va_start(i8* %41), !dbg !6112
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** %35, align 8, !dbg !6113
  %43 = load i8*, i8** %36, align 8, !dbg !6114
  %44 = load i8*, i8** %37, align 8, !dbg !6115
  %45 = load i8*, i8** %38, align 8, !dbg !6116
  %46 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %39, i64 0, i64 0, !dbg !6117
  call void @version_etc_va(%struct._IO_FILE* %42, i8* %43, i8* %44, i8* %45, %struct.__va_list_tag* %46), !dbg !6118
  %47 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %39, i64 0, i64 0, !dbg !6119
  %48 = bitcast %struct.__va_list_tag* %47 to i8*, !dbg !6119
  call void @llvm.va_end(i8* %48), !dbg !6119
  br label %originalBB
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #10

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #10

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xmalloc(i64) #4 !dbg !6174 {
  %2 = load i32, i32* @x.93
  %3 = load i32, i32* @y.94
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  store i64 %0, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !6178, metadata !DIExpression()), !dbg !6179
  call void @llvm.dbg.declare(metadata i8** %11, metadata !6180, metadata !DIExpression()), !dbg !6181
  %12 = load i64, i64* %10, align 8, !dbg !6182
  %13 = call noalias i8* @malloc(i64 %12) #10, !dbg !6183
  store i8* %13, i8** %11, align 8, !dbg !6181
  %14 = load i8*, i8** %11, align 8, !dbg !6184
  %15 = icmp ne i8* %14, null, !dbg !6184
  %16 = load i32, i32* @x.93
  %17 = load i32, i32* @y.94
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %60, label %24, !dbg !6186

24:                                               ; preds = %originalBBpart2
  %25 = load i32, i32* @x.93
  %26 = load i32, i32* @y.94
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = load i64, i64* %10, align 8, !dbg !6187
  %34 = icmp ne i64 %33, 0, !dbg !6188
  %35 = load i32, i32* @x.93
  %36 = load i32, i32* @y.94
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %34, label %43, label %60, !dbg !6189

43:                                               ; preds = %originalBBpart24
  %44 = load i32, i32* @x.93
  %45 = load i32, i32* @y.94
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %43, %originalBB6alteredBB
  call void @xalloc_die() #14, !dbg !6190
  %52 = load i32, i32* @x.93
  %53 = load i32, i32* @y.94
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable, !dbg !6190

60:                                               ; preds = %originalBBpart24, %originalBBpart2
  %61 = load i32, i32* @x.93
  %62 = load i32, i32* @y.94
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %60, %originalBB10alteredBB
  %69 = load i8*, i8** %11, align 8, !dbg !6191
  %70 = load i32, i32* @x.93
  %71 = load i32, i32* @y.94
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret i8* %69, !dbg !6192

originalBBalteredBB:                              ; preds = %originalBB, %1
  %78 = alloca i64, align 8
  %79 = alloca i8*, align 8
  store i64 %0, i64* %78, align 8
  call void @llvm.dbg.declare(metadata i64* %78, metadata !6193, metadata !DIExpression()), !dbg !6179
  call void @llvm.dbg.declare(metadata i8** %79, metadata !6196, metadata !DIExpression()), !dbg !6181
  %80 = load i64, i64* %78, align 8, !dbg !6182
  %81 = call noalias i8* @malloc(i64 %80) #10, !dbg !6183
  store i8* %81, i8** %79, align 8, !dbg !6181
  %82 = load i8*, i8** %79, align 8, !dbg !6184
  %83 = icmp ne i8* %82, null, !dbg !6184
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %84 = load i64, i64* %10, align 8, !dbg !6187
  %85 = icmp ne i64 %84, 0, !dbg !6188
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %43
  call void @xalloc_die() #14, !dbg !6190
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %60
  %86 = load i8*, i8** %11, align 8, !dbg !6191
  br label %originalBB10
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xrealloc(i8*, i64) #4 !dbg !6197 {
  %3 = load i32, i32* @x.95
  %4 = load i32, i32* @y.96
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !6200, metadata !DIExpression()), !dbg !6201
  store i64 %1, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !6202, metadata !DIExpression()), !dbg !6203
  %14 = load i64, i64* %13, align 8, !dbg !6204
  %15 = icmp ne i64 %14, 0, !dbg !6204
  %16 = load i32, i32* @x.95
  %17 = load i32, i32* @y.96
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %45, label %24, !dbg !6206

24:                                               ; preds = %originalBBpart2
  %25 = load i32, i32* @x.95
  %26 = load i32, i32* @y.96
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = load i8*, i8** %12, align 8, !dbg !6207
  %34 = icmp ne i8* %33, null, !dbg !6207
  %35 = load i32, i32* @x.95
  %36 = load i32, i32* @y.96
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %34, label %43, label %45, !dbg !6208

43:                                               ; preds = %originalBBpart24
  %44 = load i8*, i8** %12, align 8, !dbg !6209
  call void @free(i8* %44) #10, !dbg !6211
  store i8* null, i8** %11, align 8, !dbg !6212
  br label %121, !dbg !6212

45:                                               ; preds = %originalBBpart24, %originalBBpart2
  %46 = load i32, i32* @x.95
  %47 = load i32, i32* @y.96
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %45, %originalBB6alteredBB
  %54 = load i8*, i8** %12, align 8, !dbg !6213
  %55 = load i64, i64* %13, align 8, !dbg !6214
  %56 = call i8* @realloc(i8* %54, i64 %55) #10, !dbg !6215
  store i8* %56, i8** %12, align 8, !dbg !6216
  %57 = load i8*, i8** %12, align 8, !dbg !6217
  %58 = icmp ne i8* %57, null, !dbg !6217
  %59 = load i32, i32* @x.95
  %60 = load i32, i32* @y.96
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %58, label %103, label %67, !dbg !6219

67:                                               ; preds = %originalBBpart28
  %68 = load i32, i32* @x.95
  %69 = load i32, i32* @y.96
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %67, %originalBB10alteredBB
  %76 = load i64, i64* %13, align 8, !dbg !6220
  %77 = icmp ne i64 %76, 0, !dbg !6220
  %78 = load i32, i32* @x.95
  %79 = load i32, i32* @y.96
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %77, label %86, label %103, !dbg !6221

86:                                               ; preds = %originalBBpart212
  %87 = load i32, i32* @x.95
  %88 = load i32, i32* @y.96
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %86, %originalBB14alteredBB
  call void @xalloc_die() #14, !dbg !6222
  %95 = load i32, i32* @x.95
  %96 = load i32, i32* @y.96
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  unreachable, !dbg !6222

103:                                              ; preds = %originalBBpart212, %originalBBpart28
  %104 = load i32, i32* @x.95
  %105 = load i32, i32* @y.96
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %103, %originalBB18alteredBB
  %112 = load i8*, i8** %12, align 8, !dbg !6223
  store i8* %112, i8** %11, align 8, !dbg !6224
  %113 = load i32, i32* @x.95
  %114 = load i32, i32* @y.96
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %121, !dbg !6224

121:                                              ; preds = %originalBBpart220, %43
  %122 = load i32, i32* @x.95
  %123 = load i32, i32* @y.96
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %121, %originalBB22alteredBB
  %130 = load i8*, i8** %11, align 8, !dbg !6225
  %131 = load i32, i32* @x.95
  %132 = load i32, i32* @y.96
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret i8* %130, !dbg !6225

originalBBalteredBB:                              ; preds = %originalBB, %2
  %139 = alloca i8*, align 8
  %140 = alloca i8*, align 8
  %141 = alloca i64, align 8
  store i8* %0, i8** %140, align 8
  call void @llvm.dbg.declare(metadata i8** %140, metadata !6226, metadata !DIExpression()), !dbg !6201
  store i64 %1, i64* %141, align 8
  call void @llvm.dbg.declare(metadata i64* %141, metadata !6229, metadata !DIExpression()), !dbg !6203
  %142 = load i64, i64* %141, align 8, !dbg !6204
  %143 = icmp ne i64 %142, 0, !dbg !6204
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %144 = load i8*, i8** %12, align 8, !dbg !6207
  %145 = icmp ne i8* %144, null, !dbg !6207
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %45
  %146 = load i8*, i8** %12, align 8, !dbg !6213
  %147 = load i64, i64* %13, align 8, !dbg !6214
  %148 = call i8* @realloc(i8* %146, i64 %147) #10, !dbg !6215
  store i8* %148, i8** %12, align 8, !dbg !6216
  %149 = load i8*, i8** %12, align 8, !dbg !6217
  %150 = icmp ne i8* %149, null, !dbg !6217
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %67
  %151 = load i64, i64* %13, align 8, !dbg !6220
  %152 = icmp ne i64 %151, 0, !dbg !6220
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %86
  call void @xalloc_die() #14, !dbg !6222
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %103
  %153 = load i8*, i8** %12, align 8, !dbg !6223
  store i8* %153, i8** %11, align 8, !dbg !6224
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %121
  %154 = load i8*, i8** %11, align 8, !dbg !6225
  br label %originalBB22
}

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @x2nrealloc(i8*, i64*, i64) #4 !dbg !6230 {
  %4 = load i32, i32* @x.97
  %5 = load i32, i32* @y.98
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i8*, align 8
  %13 = alloca i64*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !6235, metadata !DIExpression()), !dbg !6236
  store i64* %1, i64** %13, align 8
  call void @llvm.dbg.declare(metadata i64** %13, metadata !6237, metadata !DIExpression()), !dbg !6238
  store i64 %2, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !6239, metadata !DIExpression()), !dbg !6240
  call void @llvm.dbg.declare(metadata i64* %15, metadata !6241, metadata !DIExpression()), !dbg !6242
  %16 = load i64*, i64** %13, align 8, !dbg !6243
  %17 = load i64, i64* %16, align 8, !dbg !6244
  store i64 %17, i64* %15, align 8, !dbg !6242
  %18 = load i8*, i8** %12, align 8, !dbg !6245
  %19 = icmp ne i8* %18, null, !dbg !6245
  %20 = load i32, i32* @x.97
  %21 = load i32, i32* @y.98
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %128, label %28, !dbg !6247

28:                                               ; preds = %originalBBpart2
  %29 = load i32, i32* @x.97
  %30 = load i32, i32* @y.98
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = load i64, i64* %15, align 8, !dbg !6248
  %38 = icmp ne i64 %37, 0, !dbg !6248
  %39 = load i32, i32* @x.97
  %40 = load i32, i32* @y.98
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %38, label %73, label %47, !dbg !6251

47:                                               ; preds = %originalBBpart24
  %48 = load i32, i32* @x.97
  %49 = load i32, i32* @y.98
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %47, %originalBB6alteredBB
  %56 = load i64, i64* %14, align 8, !dbg !6252
  %57 = udiv i64 128, %56, !dbg !6254
  store i64 %57, i64* %15, align 8, !dbg !6255
  %58 = load i64, i64* %15, align 8, !dbg !6256
  %59 = icmp ne i64 %58, 0, !dbg !6257
  %60 = xor i1 %59, true, !dbg !6257
  %61 = zext i1 %60 to i32, !dbg !6257
  %62 = sext i32 %61 to i64, !dbg !6257
  %63 = load i64, i64* %15, align 8, !dbg !6258
  %64 = add i64 %63, %62, !dbg !6258
  store i64 %64, i64* %15, align 8, !dbg !6258
  %65 = load i32, i32* @x.97
  %66 = load i32, i32* @y.98
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart227, label %originalBB6alteredBB

originalBBpart227:                                ; preds = %originalBB6
  br label %73, !dbg !6259

73:                                               ; preds = %originalBBpart227, %originalBBpart24
  %74 = load i32, i32* @x.97
  %75 = load i32, i32* @y.98
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %73, %originalBB29alteredBB
  %82 = load i64, i64* %14, align 8, !dbg !6260
  %83 = udiv i64 9223372036854775807, %82, !dbg !6260
  %84 = load i64, i64* %15, align 8, !dbg !6260
  %85 = icmp ult i64 %83, %84, !dbg !6260
  %86 = load i32, i32* @x.97
  %87 = load i32, i32* @y.98
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart239, label %originalBB29alteredBB

originalBBpart239:                                ; preds = %originalBB29
  br i1 %85, label %94, label %111, !dbg !6262

94:                                               ; preds = %originalBBpart239
  %95 = load i32, i32* @x.97
  %96 = load i32, i32* @y.98
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %94, %originalBB41alteredBB
  call void @xalloc_die() #14, !dbg !6263
  %103 = load i32, i32* @x.97
  %104 = load i32, i32* @y.98
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  unreachable, !dbg !6263

111:                                              ; preds = %originalBBpart239
  %112 = load i32, i32* @x.97
  %113 = load i32, i32* @y.98
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %111, %originalBB45alteredBB
  %120 = load i32, i32* @x.97
  %121 = load i32, i32* @y.98
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  br label %188, !dbg !6264

128:                                              ; preds = %originalBBpart2
  %129 = load i32, i32* @x.97
  %130 = load i32, i32* @y.98
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %128, %originalBB49alteredBB
  %137 = load i64, i64* %14, align 8, !dbg !6265
  %138 = udiv i64 6148914691236517204, %137, !dbg !6268
  %139 = load i64, i64* %15, align 8, !dbg !6269
  %140 = icmp ule i64 %138, %139, !dbg !6270
  %141 = load i32, i32* @x.97
  %142 = load i32, i32* @y.98
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart264, label %originalBB49alteredBB

originalBBpart264:                                ; preds = %originalBB49
  br i1 %140, label %149, label %166, !dbg !6271

149:                                              ; preds = %originalBBpart264
  %150 = load i32, i32* @x.97
  %151 = load i32, i32* @y.98
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %149, %originalBB66alteredBB
  call void @xalloc_die() #14, !dbg !6272
  %158 = load i32, i32* @x.97
  %159 = load i32, i32* @y.98
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  unreachable, !dbg !6272

166:                                              ; preds = %originalBBpart264
  %167 = load i32, i32* @x.97
  %168 = load i32, i32* @y.98
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %166, %originalBB70alteredBB
  %175 = load i64, i64* %15, align 8, !dbg !6273
  %176 = udiv i64 %175, 2, !dbg !6274
  %177 = add i64 %176, 1, !dbg !6275
  %178 = load i64, i64* %15, align 8, !dbg !6276
  %179 = add i64 %178, %177, !dbg !6276
  store i64 %179, i64* %15, align 8, !dbg !6276
  %180 = load i32, i32* @x.97
  %181 = load i32, i32* @y.98
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBBpart288, label %originalBB70alteredBB

originalBBpart288:                                ; preds = %originalBB70
  br label %188

188:                                              ; preds = %originalBBpart288, %originalBBpart247
  %189 = load i32, i32* @x.97
  %190 = load i32, i32* @y.98
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %188, %originalBB90alteredBB
  %197 = load i64, i64* %15, align 8, !dbg !6277
  %198 = load i64*, i64** %13, align 8, !dbg !6278
  store i64 %197, i64* %198, align 8, !dbg !6279
  %199 = load i8*, i8** %12, align 8, !dbg !6280
  %200 = load i64, i64* %15, align 8, !dbg !6281
  %201 = load i64, i64* %14, align 8, !dbg !6282
  %202 = mul i64 %200, %201, !dbg !6283
  %203 = call i8* @xrealloc(i8* %199, i64 %202), !dbg !6284
  %204 = load i32, i32* @x.97
  %205 = load i32, i32* @y.98
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBBpart298, label %originalBB90alteredBB

originalBBpart298:                                ; preds = %originalBB90
  ret i8* %203, !dbg !6285

originalBBalteredBB:                              ; preds = %originalBB, %3
  %212 = alloca i8*, align 8
  %213 = alloca i64*, align 8
  %214 = alloca i64, align 8
  %215 = alloca i64, align 8
  store i8* %0, i8** %212, align 8
  call void @llvm.dbg.declare(metadata i8** %212, metadata !6286, metadata !DIExpression()), !dbg !6236
  store i64* %1, i64** %213, align 8
  call void @llvm.dbg.declare(metadata i64** %213, metadata !6289, metadata !DIExpression()), !dbg !6238
  store i64 %2, i64* %214, align 8
  call void @llvm.dbg.declare(metadata i64* %214, metadata !6290, metadata !DIExpression()), !dbg !6240
  call void @llvm.dbg.declare(metadata i64* %215, metadata !6291, metadata !DIExpression()), !dbg !6242
  %216 = load i64*, i64** %213, align 8, !dbg !6243
  %217 = load i64, i64* %216, align 8, !dbg !6244
  store i64 %217, i64* %215, align 8, !dbg !6242
  %218 = load i8*, i8** %212, align 8, !dbg !6245
  %219 = icmp ne i8* %218, null, !dbg !6245
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %220 = load i64, i64* %15, align 8, !dbg !6248
  %221 = icmp ne i64 %220, 0, !dbg !6248
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %47
  %222 = load i64, i64* %14, align 8, !dbg !6252
  %_ = sub i64 128, %222
  %gen = mul i64 %_, %222
  %_7 = sub i64 0, 128
  %gen8 = add i64 %_7, %222
  %_9 = sub i64 128, %222
  %gen10 = mul i64 %_9, %222
  %_11 = sub i64 0, 128
  %gen12 = add i64 %_11, %222
  %_13 = sub i64 128, %222
  %gen14 = mul i64 %_13, %222
  %_15 = sub i64 0, 128
  %gen16 = add i64 %_15, %222
  %_17 = shl i64 128, %222
  %223 = udiv i64 128, %222, !dbg !6254
  store i64 %223, i64* %15, align 8, !dbg !6255
  %224 = load i64, i64* %15, align 8, !dbg !6256
  %225 = icmp ne i64 %224, 0, !dbg !6257
  %_18 = shl i1 %225, true
  %_19 = sub i1 %225, true
  %gen20 = mul i1 %_19, true
  %_21 = sub i1 %225, true
  %gen22 = mul i1 %_21, true
  %226 = xor i1 %225, true, !dbg !6257
  %227 = zext i1 %226 to i32, !dbg !6257
  %228 = sext i32 %227 to i64, !dbg !6257
  %229 = load i64, i64* %15, align 8, !dbg !6258
  %_23 = sub i64 0, %229
  %gen24 = add i64 %_23, %228
  %_25 = shl i64 %229, %228
  %230 = add i64 %229, %228, !dbg !6258
  store i64 %230, i64* %15, align 8, !dbg !6258
  br label %originalBB6

originalBB29alteredBB:                            ; preds = %originalBB29, %73
  %231 = load i64, i64* %14, align 8, !dbg !6260
  %_30 = shl i64 9223372036854775807, %231
  %_31 = sub i64 9223372036854775807, %231
  %gen32 = mul i64 %_31, %231
  %_33 = sub i64 0, 9223372036854775807
  %gen34 = add i64 %_33, %231
  %_35 = shl i64 9223372036854775807, %231
  %_36 = sub i64 9223372036854775807, %231
  %gen37 = mul i64 %_36, %231
  %232 = udiv i64 9223372036854775807, %231, !dbg !6260
  %233 = load i64, i64* %15, align 8, !dbg !6260
  %234 = icmp ult i64 %232, %233, !dbg !6260
  br label %originalBB29

originalBB41alteredBB:                            ; preds = %originalBB41, %94
  call void @xalloc_die() #14, !dbg !6263
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %111
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %128
  %235 = load i64, i64* %14, align 8, !dbg !6265
  %_50 = shl i64 6148914691236517204, %235
  %_51 = sub i64 6148914691236517204, %235
  %gen52 = mul i64 %_51, %235
  %_53 = sub i64 6148914691236517204, %235
  %gen54 = mul i64 %_53, %235
  %_55 = sub i64 0, 6148914691236517204
  %gen56 = add i64 %_55, %235
  %_57 = shl i64 6148914691236517204, %235
  %_58 = sub i64 0, 6148914691236517204
  %gen59 = add i64 %_58, %235
  %_60 = shl i64 6148914691236517204, %235
  %_61 = sub i64 0, 6148914691236517204
  %gen62 = add i64 %_61, %235
  %236 = udiv i64 6148914691236517204, %235, !dbg !6268
  %237 = load i64, i64* %15, align 8, !dbg !6269
  %238 = icmp ule i64 %236, %237, !dbg !6270
  br label %originalBB49

originalBB66alteredBB:                            ; preds = %originalBB66, %149
  call void @xalloc_die() #14, !dbg !6272
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %166
  %239 = load i64, i64* %15, align 8, !dbg !6273
  %_71 = shl i64 %239, 2
  %_72 = sub i64 %239, 2
  %gen73 = mul i64 %_72, 2
  %_74 = shl i64 %239, 2
  %240 = udiv i64 %239, 2, !dbg !6274
  %_75 = sub i64 0, %240
  %gen76 = add i64 %_75, 1
  %241 = add i64 %240, 1, !dbg !6275
  %242 = load i64, i64* %15, align 8, !dbg !6276
  %_77 = sub i64 0, %242
  %gen78 = add i64 %_77, %241
  %_79 = sub i64 0, %242
  %gen80 = add i64 %_79, %241
  %_81 = sub i64 %242, %241
  %gen82 = mul i64 %_81, %241
  %_83 = sub i64 0, %242
  %gen84 = add i64 %_83, %241
  %_85 = sub i64 %242, %241
  %gen86 = mul i64 %_85, %241
  %243 = add i64 %242, %241, !dbg !6276
  store i64 %243, i64* %15, align 8, !dbg !6276
  br label %originalBB70

originalBB90alteredBB:                            ; preds = %originalBB90, %188
  %244 = load i64, i64* %15, align 8, !dbg !6277
  %245 = load i64*, i64** %13, align 8, !dbg !6278
  store i64 %244, i64* %245, align 8, !dbg !6279
  %246 = load i8*, i8** %12, align 8, !dbg !6280
  %247 = load i64, i64* %15, align 8, !dbg !6281
  %248 = load i64, i64* %14, align 8, !dbg !6282
  %_91 = sub i64 0, %247
  %gen92 = add i64 %_91, %248
  %_93 = sub i64 %247, %248
  %gen94 = mul i64 %_93, %248
  %_95 = shl i64 %247, %248
  %_96 = shl i64 %247, %248
  %249 = mul i64 %247, %248, !dbg !6283
  %250 = call i8* @xrealloc(i8* %246, i64 %249), !dbg !6284
  br label %originalBB90
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xcharalloc(i64) #4 !dbg !6292 {
  %2 = load i32, i32* @x.99
  %3 = load i32, i32* @y.100
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i64, align 8
  store i64 %0, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !6295, metadata !DIExpression()), !dbg !6296
  %11 = load i64, i64* %10, align 8, !dbg !6297
  %12 = call noalias i8* @xmalloc(i64 %11), !dbg !6297
  %13 = load i32, i32* @x.99
  %14 = load i32, i32* @y.100
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !6298

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i64, align 8
  store i64 %0, i64* %21, align 8
  call void @llvm.dbg.declare(metadata i64* %21, metadata !6299, metadata !DIExpression()), !dbg !6296
  %22 = load i64, i64* %21, align 8, !dbg !6297
  %23 = call noalias i8* @xmalloc(i64 %22), !dbg !6297
  br label %originalBB
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @xalloc_die() #0 !dbg !6302 {
  %1 = load i32, i32* @x.101
  %2 = load i32, i32* @y.102
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = load volatile i32, i32* @exit_failure, align 4, !dbg !6304
  %10 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.165, i64 0, i64 0)) #10, !dbg !6305
  call void (i32, i32, i8*, ...) @error(i32 %9, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.166, i64 0, i64 0), i8* %10), !dbg !6306
  call void @abort() #12, !dbg !6307
  %11 = load i32, i32* @x.101
  %12 = load i32, i32* @y.102
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable, !dbg !6307

originalBBalteredBB:                              ; preds = %originalBB, %0
  %19 = load volatile i32, i32* @exit_failure, align 4, !dbg !6304
  %20 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.165, i64 0, i64 0)) #10, !dbg !6305
  call void (i32, i32, i8*, ...) @error(i32 %19, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.166, i64 0, i64 0), i8* %20), !dbg !6306
  call void @abort() #12, !dbg !6307
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @rpl_mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #4 !dbg !6308 {
  %5 = load i32, i32* @x.103
  %6 = load i32, i32* @y.104
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca i64, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i64, align 8
  %17 = alloca %struct.__mbstate_t*, align 8
  %18 = alloca i64, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  store i32* %0, i32** %14, align 8
  call void @llvm.dbg.declare(metadata i32** %14, metadata !6324, metadata !DIExpression()), !dbg !6325
  store i8* %1, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !6326, metadata !DIExpression()), !dbg !6327
  store i64 %2, i64* %16, align 8
  call void @llvm.dbg.declare(metadata i64* %16, metadata !6328, metadata !DIExpression()), !dbg !6329
  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %17, align 8
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %17, metadata !6330, metadata !DIExpression()), !dbg !6331
  call void @llvm.dbg.declare(metadata i64* %18, metadata !6332, metadata !DIExpression()), !dbg !6333
  call void @llvm.dbg.declare(metadata i32* %19, metadata !6334, metadata !DIExpression()), !dbg !6335
  %21 = load i32*, i32** %14, align 8, !dbg !6336
  %22 = icmp ne i32* %21, null, !dbg !6336
  %23 = load i32, i32* @x.103
  %24 = load i32, i32* @y.104
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %48, label %31, !dbg !6338

31:                                               ; preds = %originalBBpart2
  %32 = load i32, i32* @x.103
  %33 = load i32, i32* @y.104
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  store i32* %19, i32** %14, align 8, !dbg !6339
  %40 = load i32, i32* @x.103
  %41 = load i32, i32* @y.104
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %48, !dbg !6340

48:                                               ; preds = %originalBBpart24, %originalBBpart2
  %49 = load i32, i32* @x.103
  %50 = load i32, i32* @y.104
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %48, %originalBB6alteredBB
  %57 = load i32*, i32** %14, align 8, !dbg !6341
  %58 = load i8*, i8** %15, align 8, !dbg !6342
  %59 = load i64, i64* %16, align 8, !dbg !6343
  %60 = load %struct.__mbstate_t*, %struct.__mbstate_t** %17, align 8, !dbg !6344
  %61 = call i64 @mbrtowc(i32* %57, i8* %58, i64 %59, %struct.__mbstate_t* %60) #10, !dbg !6345
  store i64 %61, i64* %18, align 8, !dbg !6346
  %62 = load i64, i64* %18, align 8, !dbg !6347
  %63 = icmp ule i64 -2, %62, !dbg !6349
  %64 = load i32, i32* @x.103
  %65 = load i32, i32* @y.104
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %63, label %72, label %131, !dbg !6350

72:                                               ; preds = %originalBBpart28
  %73 = load i32, i32* @x.103
  %74 = load i32, i32* @y.104
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %72, %originalBB10alteredBB
  %81 = load i64, i64* %16, align 8, !dbg !6351
  %82 = icmp ne i64 %81, 0, !dbg !6352
  %83 = load i32, i32* @x.103
  %84 = load i32, i32* @y.104
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %82, label %91, label %131, !dbg !6353

91:                                               ; preds = %originalBBpart212
  %92 = load i32, i32* @x.103
  %93 = load i32, i32* @y.104
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %91, %originalBB14alteredBB
  %100 = call zeroext i1 @hard_locale(i32 0), !dbg !6354
  %101 = load i32, i32* @x.103
  %102 = load i32, i32* @y.104
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %100, label %131, label %109, !dbg !6355

109:                                              ; preds = %originalBBpart216
  call void @llvm.dbg.declare(metadata i8* %20, metadata !6356, metadata !DIExpression()), !dbg !6358
  %110 = load i32, i32* @x.103
  %111 = load i32, i32* @y.104
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %109, %originalBB18alteredBB
  %118 = load i8*, i8** %15, align 8, !dbg !6359
  %119 = load i8, i8* %118, align 1, !dbg !6360
  store i8 %119, i8* %20, align 1, !dbg !6358
  %120 = load i8, i8* %20, align 1, !dbg !6361
  %121 = zext i8 %120 to i32, !dbg !6361
  %122 = load i32*, i32** %14, align 8, !dbg !6362
  store i32 %121, i32* %122, align 4, !dbg !6363
  store i64 1, i64* %13, align 8, !dbg !6364
  %123 = load i32, i32* @x.103
  %124 = load i32, i32* @y.104
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %149, !dbg !6364

131:                                              ; preds = %originalBBpart216, %originalBBpart212, %originalBBpart28
  %132 = load i32, i32* @x.103
  %133 = load i32, i32* @y.104
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %131, %originalBB22alteredBB
  %140 = load i64, i64* %18, align 8, !dbg !6365
  store i64 %140, i64* %13, align 8, !dbg !6366
  %141 = load i32, i32* @x.103
  %142 = load i32, i32* @y.104
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %149, !dbg !6366

149:                                              ; preds = %originalBBpart224, %originalBBpart220
  %150 = load i32, i32* @x.103
  %151 = load i32, i32* @y.104
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %149, %originalBB26alteredBB
  %158 = load i64, i64* %13, align 8, !dbg !6367
  %159 = load i32, i32* @x.103
  %160 = load i32, i32* @y.104
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  ret i64 %158, !dbg !6367

originalBBalteredBB:                              ; preds = %originalBB, %4
  %167 = alloca i64, align 8
  %168 = alloca i32*, align 8
  %169 = alloca i8*, align 8
  %170 = alloca i64, align 8
  %171 = alloca %struct.__mbstate_t*, align 8
  %172 = alloca i64, align 8
  %173 = alloca i32, align 4
  %174 = alloca i8, align 1
  store i32* %0, i32** %168, align 8
  call void @llvm.dbg.declare(metadata i32** %168, metadata !6368, metadata !DIExpression()), !dbg !6325
  store i8* %1, i8** %169, align 8
  call void @llvm.dbg.declare(metadata i8** %169, metadata !6384, metadata !DIExpression()), !dbg !6327
  store i64 %2, i64* %170, align 8
  call void @llvm.dbg.declare(metadata i64* %170, metadata !6385, metadata !DIExpression()), !dbg !6329
  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %171, align 8
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %171, metadata !6386, metadata !DIExpression()), !dbg !6331
  call void @llvm.dbg.declare(metadata i64* %172, metadata !6387, metadata !DIExpression()), !dbg !6333
  call void @llvm.dbg.declare(metadata i32* %173, metadata !6388, metadata !DIExpression()), !dbg !6335
  %175 = load i32*, i32** %168, align 8, !dbg !6336
  %176 = icmp ne i32* %175, null, !dbg !6336
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  store i32* %19, i32** %14, align 8, !dbg !6339
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  %177 = load i32*, i32** %14, align 8, !dbg !6341
  %178 = load i8*, i8** %15, align 8, !dbg !6342
  %179 = load i64, i64* %16, align 8, !dbg !6343
  %180 = load %struct.__mbstate_t*, %struct.__mbstate_t** %17, align 8, !dbg !6344
  %181 = call i64 @mbrtowc(i32* %177, i8* %178, i64 %179, %struct.__mbstate_t* %180) #10, !dbg !6345
  store i64 %181, i64* %18, align 8, !dbg !6346
  %182 = load i64, i64* %18, align 8, !dbg !6347
  %183 = icmp ule i64 -2, %182, !dbg !6349
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %72
  %184 = load i64, i64* %16, align 8, !dbg !6351
  %185 = icmp ne i64 %184, 0, !dbg !6352
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %91
  %186 = call zeroext i1 @hard_locale(i32 0), !dbg !6354
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %109
  %187 = load i8*, i8** %15, align 8, !dbg !6359
  %188 = load i8, i8* %187, align 1, !dbg !6360
  store i8 %188, i8* %20, align 1, !dbg !6358
  %189 = load i8, i8* %20, align 1, !dbg !6361
  %190 = zext i8 %189 to i32, !dbg !6361
  %191 = load i32*, i32** %14, align 8, !dbg !6362
  store i32 %190, i32* %191, align 4, !dbg !6363
  store i64 1, i64* %13, align 8, !dbg !6364
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %131
  %192 = load i64, i64* %18, align 8, !dbg !6365
  store i64 %192, i64* %13, align 8, !dbg !6366
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %149
  %193 = load i64, i64* %13, align 8, !dbg !6367
  br label %originalBB26
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @extract_trimmed_name(%struct.utmpx*) #4 !dbg !6389 {
  %2 = load i32, i32* @x.105
  %3 = load i32, i32* @y.106
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !6417, metadata !DIExpression()), !dbg !6418
  call void @llvm.dbg.declare(metadata i8** %11, metadata !6419, metadata !DIExpression()), !dbg !6420
  call void @llvm.dbg.declare(metadata i8** %12, metadata !6421, metadata !DIExpression()), !dbg !6422
  %13 = call noalias i8* @xmalloc(i64 33), !dbg !6423
  store i8* %13, i8** %12, align 8, !dbg !6424
  %14 = load i8*, i8** %12, align 8, !dbg !6425
  %15 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !6426
  %16 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %15, i32 0, i32 4, !dbg !6426
  %17 = getelementptr inbounds [32 x i8], [32 x i8]* %16, i64 0, i64 0, !dbg !6426
  %18 = call i8* @strncpy(i8* %14, i8* %17, i64 32) #10, !dbg !6427
  %19 = load i8*, i8** %12, align 8, !dbg !6428
  %20 = getelementptr inbounds i8, i8* %19, i64 32, !dbg !6428
  store i8 0, i8* %20, align 1, !dbg !6429
  %21 = load i8*, i8** %12, align 8, !dbg !6430
  %22 = load i8*, i8** %12, align 8, !dbg !6432
  %23 = call i64 @strlen(i8* %22) #13, !dbg !6433
  %24 = getelementptr inbounds i8, i8* %21, i64 %23, !dbg !6434
  store i8* %24, i8** %11, align 8, !dbg !6435
  %25 = load i32, i32* @x.105
  %26 = load i32, i32* @y.106
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %33, !dbg !6436

33:                                               ; preds = %originalBBpart220, %originalBBpart2
  %34 = load i32, i32* @x.105
  %35 = load i32, i32* @y.106
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %33, %originalBB1alteredBB
  %42 = load i8*, i8** %12, align 8, !dbg !6437
  %43 = load i8*, i8** %11, align 8, !dbg !6439
  %44 = icmp ult i8* %42, %43, !dbg !6440
  %45 = load i32, i32* @x.105
  %46 = load i32, i32* @y.106
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %44, label %53, label %75, !dbg !6441

53:                                               ; preds = %originalBBpart24
  %54 = load i32, i32* @x.105
  %55 = load i32, i32* @y.106
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %53, %originalBB6alteredBB
  %62 = load i8*, i8** %11, align 8, !dbg !6442
  %63 = getelementptr inbounds i8, i8* %62, i64 -1, !dbg !6442
  %64 = load i8, i8* %63, align 1, !dbg !6442
  %65 = sext i8 %64 to i32, !dbg !6442
  %66 = icmp eq i32 %65, 32, !dbg !6443
  %67 = load i32, i32* @x.105
  %68 = load i32, i32* @y.106
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %75

75:                                               ; preds = %originalBBpart28, %originalBBpart24
  %76 = phi i1 [ false, %originalBBpart24 ], [ %66, %originalBBpart28 ], !dbg !6444
  %77 = load i32, i32* @x.105
  %78 = load i32, i32* @y.106
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %75, %originalBB10alteredBB
  %85 = load i32, i32* @x.105
  %86 = load i32, i32* @y.106
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %76, label %93, label %129, !dbg !6445

93:                                               ; preds = %originalBBpart212
  %94 = load i32, i32* @x.105
  %95 = load i32, i32* @y.106
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %93, %originalBB14alteredBB
  %102 = load i32, i32* @x.105
  %103 = load i32, i32* @y.106
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %110, !dbg !6446

110:                                              ; preds = %originalBBpart216
  %111 = load i32, i32* @x.105
  %112 = load i32, i32* @y.106
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %110, %originalBB18alteredBB
  %119 = load i8*, i8** %11, align 8, !dbg !6447
  %120 = getelementptr inbounds i8, i8* %119, i32 -1, !dbg !6447
  store i8* %120, i8** %11, align 8, !dbg !6447
  store i8 0, i8* %120, align 1, !dbg !6448
  %121 = load i32, i32* @x.105
  %122 = load i32, i32* @y.106
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %33, !dbg !6449, !llvm.loop !6450

129:                                              ; preds = %originalBBpart212
  %130 = load i32, i32* @x.105
  %131 = load i32, i32* @y.106
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %129, %originalBB22alteredBB
  %138 = load i8*, i8** %12, align 8, !dbg !6452
  %139 = load i32, i32* @x.105
  %140 = load i32, i32* @y.106
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret i8* %138, !dbg !6453

originalBBalteredBB:                              ; preds = %originalBB, %1
  %147 = alloca %struct.utmpx*, align 8
  %148 = alloca i8*, align 8
  %149 = alloca i8*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %147, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %147, metadata !6454, metadata !DIExpression()), !dbg !6418
  call void @llvm.dbg.declare(metadata i8** %148, metadata !6483, metadata !DIExpression()), !dbg !6420
  call void @llvm.dbg.declare(metadata i8** %149, metadata !6484, metadata !DIExpression()), !dbg !6422
  %150 = call noalias i8* @xmalloc(i64 33), !dbg !6423
  store i8* %150, i8** %149, align 8, !dbg !6424
  %151 = load i8*, i8** %149, align 8, !dbg !6425
  %152 = load %struct.utmpx*, %struct.utmpx** %147, align 8, !dbg !6426
  %153 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %152, i32 0, i32 4, !dbg !6426
  %154 = getelementptr inbounds [32 x i8], [32 x i8]* %153, i64 0, i64 0, !dbg !6426
  %155 = call i8* @strncpy(i8* %151, i8* %154, i64 32) #10, !dbg !6427
  %156 = load i8*, i8** %149, align 8, !dbg !6428
  %157 = getelementptr inbounds i8, i8* %156, i64 32, !dbg !6428
  store i8 0, i8* %157, align 1, !dbg !6429
  %158 = load i8*, i8** %149, align 8, !dbg !6430
  %159 = load i8*, i8** %149, align 8, !dbg !6432
  %160 = call i64 @strlen(i8* %159) #13, !dbg !6433
  %161 = getelementptr inbounds i8, i8* %158, i64 %160, !dbg !6434
  store i8* %161, i8** %148, align 8, !dbg !6435
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %33
  %162 = load i8*, i8** %12, align 8, !dbg !6437
  %163 = load i8*, i8** %11, align 8, !dbg !6439
  %164 = icmp ult i8* %162, %163, !dbg !6440
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %53
  %165 = load i8*, i8** %11, align 8, !dbg !6442
  %166 = getelementptr inbounds i8, i8* %165, i64 -1, !dbg !6442
  %167 = load i8, i8* %166, align 1, !dbg !6442
  %168 = sext i8 %167 to i32, !dbg !6442
  %169 = icmp eq i32 %168, 32, !dbg !6443
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %75
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %93
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %110
  %170 = load i8*, i8** %11, align 8, !dbg !6447
  %171 = getelementptr inbounds i8, i8* %170, i32 -1, !dbg !6447
  store i8* %171, i8** %11, align 8, !dbg !6447
  store i8 0, i8* %171, align 1, !dbg !6448
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %129
  %172 = load i8*, i8** %12, align 8, !dbg !6452
  br label %originalBB22
}

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @read_utmp(i8*, i64*, %struct.utmpx**, i32) #4 !dbg !6485 {
  %5 = load i32, i32* @x.107
  %6 = load i32, i32* @y.108
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca i8*, align 8
  %14 = alloca i64*, align 8
  %15 = alloca %struct.utmpx**, align 8
  %16 = alloca i32, align 4
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca %struct.utmpx*, align 8
  %20 = alloca %struct.utmpx*, align 8
  store i8* %0, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !6490, metadata !DIExpression()), !dbg !6491
  store i64* %1, i64** %14, align 8
  call void @llvm.dbg.declare(metadata i64** %14, metadata !6492, metadata !DIExpression()), !dbg !6493
  store %struct.utmpx** %2, %struct.utmpx*** %15, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx*** %15, metadata !6494, metadata !DIExpression()), !dbg !6495
  store i32 %3, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !6496, metadata !DIExpression()), !dbg !6497
  call void @llvm.dbg.declare(metadata i64* %17, metadata !6498, metadata !DIExpression()), !dbg !6499
  store i64 0, i64* %17, align 8, !dbg !6499
  call void @llvm.dbg.declare(metadata i64* %18, metadata !6500, metadata !DIExpression()), !dbg !6501
  store i64 0, i64* %18, align 8, !dbg !6501
  call void @llvm.dbg.declare(metadata %struct.utmpx** %19, metadata !6502, metadata !DIExpression()), !dbg !6503
  store %struct.utmpx* null, %struct.utmpx** %19, align 8, !dbg !6503
  call void @llvm.dbg.declare(metadata %struct.utmpx** %20, metadata !6504, metadata !DIExpression()), !dbg !6505
  %21 = load i8*, i8** %13, align 8, !dbg !6506
  %22 = call i32 @utmpxname(i8* %21), !dbg !6507
  call void @setutxent(), !dbg !6508
  %23 = load i32, i32* @x.107
  %24 = load i32, i32* @y.108
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31, !dbg !6509

31:                                               ; preds = %originalBBpart220, %originalBBpart2
  %32 = load i32, i32* @x.107
  %33 = load i32, i32* @y.108
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = call %struct.utmpx* @getutxent(), !dbg !6510
  store %struct.utmpx* %40, %struct.utmpx** %20, align 8, !dbg !6511
  %41 = icmp ne %struct.utmpx* %40, null, !dbg !6512
  %42 = load i32, i32* @x.107
  %43 = load i32, i32* @y.108
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %41, label %50, label %136, !dbg !6509

50:                                               ; preds = %originalBBpart24
  %51 = load i32, i32* @x.107
  %52 = load i32, i32* @y.108
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %50, %originalBB6alteredBB
  %59 = load %struct.utmpx*, %struct.utmpx** %20, align 8, !dbg !6513
  %60 = load i32, i32* %16, align 4, !dbg !6515
  %61 = call zeroext i1 @desirable_utmp_entry(%struct.utmpx* %59, i32 %60), !dbg !6516
  %62 = load i32, i32* @x.107
  %63 = load i32, i32* @y.108
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %61, label %70, label %119, !dbg !6517

70:                                               ; preds = %originalBBpart28
  %71 = load i32, i32* @x.107
  %72 = load i32, i32* @y.108
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %70, %originalBB10alteredBB
  %79 = load i64, i64* %17, align 8, !dbg !6518
  %80 = load i64, i64* %18, align 8, !dbg !6521
  %81 = icmp eq i64 %79, %80, !dbg !6522
  %82 = load i32, i32* @x.107
  %83 = load i32, i32* @y.108
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %81, label %90, label %111, !dbg !6523

90:                                               ; preds = %originalBBpart212
  %91 = load i32, i32* @x.107
  %92 = load i32, i32* @y.108
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %90, %originalBB14alteredBB
  %99 = load %struct.utmpx*, %struct.utmpx** %19, align 8, !dbg !6524
  %100 = bitcast %struct.utmpx* %99 to i8*, !dbg !6524
  %101 = call i8* @x2nrealloc(i8* %100, i64* %18, i64 384), !dbg !6525
  %102 = bitcast i8* %101 to %struct.utmpx*, !dbg !6525
  store %struct.utmpx* %102, %struct.utmpx** %19, align 8, !dbg !6526
  %103 = load i32, i32* @x.107
  %104 = load i32, i32* @y.108
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %111, !dbg !6527

111:                                              ; preds = %originalBBpart216, %originalBBpart212
  %112 = load %struct.utmpx*, %struct.utmpx** %19, align 8, !dbg !6528
  %113 = load i64, i64* %17, align 8, !dbg !6529
  %114 = add i64 %113, 1, !dbg !6529
  store i64 %114, i64* %17, align 8, !dbg !6529
  %115 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %112, i64 %113, !dbg !6528
  %116 = load %struct.utmpx*, %struct.utmpx** %20, align 8, !dbg !6530
  %117 = bitcast %struct.utmpx* %115 to i8*, !dbg !6531
  %118 = bitcast %struct.utmpx* %116 to i8*, !dbg !6531
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %117, i8* align 4 %118, i64 384, i1 false), !dbg !6531
  br label %119, !dbg !6532

119:                                              ; preds = %111, %originalBBpart28
  %120 = load i32, i32* @x.107
  %121 = load i32, i32* @y.108
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %119, %originalBB18alteredBB
  %128 = load i32, i32* @x.107
  %129 = load i32, i32* @y.108
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %31, !dbg !6509, !llvm.loop !6533

136:                                              ; preds = %originalBBpart24
  %137 = load i32, i32* @x.107
  %138 = load i32, i32* @y.108
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %136, %originalBB22alteredBB
  call void @endutxent(), !dbg !6535
  %145 = load i64, i64* %17, align 8, !dbg !6536
  %146 = load i64*, i64** %14, align 8, !dbg !6537
  store i64 %145, i64* %146, align 8, !dbg !6538
  %147 = load %struct.utmpx*, %struct.utmpx** %19, align 8, !dbg !6539
  %148 = load %struct.utmpx**, %struct.utmpx*** %15, align 8, !dbg !6540
  store %struct.utmpx* %147, %struct.utmpx** %148, align 8, !dbg !6541
  %149 = load i32, i32* @x.107
  %150 = load i32, i32* @y.108
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret i32 0, !dbg !6542

originalBBalteredBB:                              ; preds = %originalBB, %4
  %157 = alloca i8*, align 8
  %158 = alloca i64*, align 8
  %159 = alloca %struct.utmpx**, align 8
  %160 = alloca i32, align 4
  %161 = alloca i64, align 8
  %162 = alloca i64, align 8
  %163 = alloca %struct.utmpx*, align 8
  %164 = alloca %struct.utmpx*, align 8
  store i8* %0, i8** %157, align 8
  call void @llvm.dbg.declare(metadata i8** %157, metadata !6543, metadata !DIExpression()), !dbg !6491
  store i64* %1, i64** %158, align 8
  call void @llvm.dbg.declare(metadata i64** %158, metadata !6572, metadata !DIExpression()), !dbg !6493
  store %struct.utmpx** %2, %struct.utmpx*** %159, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx*** %159, metadata !6573, metadata !DIExpression()), !dbg !6495
  store i32 %3, i32* %160, align 4
  call void @llvm.dbg.declare(metadata i32* %160, metadata !6574, metadata !DIExpression()), !dbg !6497
  call void @llvm.dbg.declare(metadata i64* %161, metadata !6575, metadata !DIExpression()), !dbg !6499
  store i64 0, i64* %161, align 8, !dbg !6499
  call void @llvm.dbg.declare(metadata i64* %162, metadata !6576, metadata !DIExpression()), !dbg !6501
  store i64 0, i64* %162, align 8, !dbg !6501
  call void @llvm.dbg.declare(metadata %struct.utmpx** %163, metadata !6577, metadata !DIExpression()), !dbg !6503
  store %struct.utmpx* null, %struct.utmpx** %163, align 8, !dbg !6503
  call void @llvm.dbg.declare(metadata %struct.utmpx** %164, metadata !6578, metadata !DIExpression()), !dbg !6505
  %165 = load i8*, i8** %157, align 8, !dbg !6506
  %166 = call i32 @utmpxname(i8* %165), !dbg !6507
  call void @setutxent(), !dbg !6508
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %167 = call %struct.utmpx* @getutxent(), !dbg !6510
  store %struct.utmpx* %167, %struct.utmpx** %20, align 8, !dbg !6511
  %168 = icmp ne %struct.utmpx* %167, null, !dbg !6512
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %50
  %169 = load %struct.utmpx*, %struct.utmpx** %20, align 8, !dbg !6513
  %170 = load i32, i32* %16, align 4, !dbg !6515
  %171 = call zeroext i1 @desirable_utmp_entry(%struct.utmpx* %169, i32 %170), !dbg !6516
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %70
  %172 = load i64, i64* %17, align 8, !dbg !6518
  %173 = load i64, i64* %18, align 8, !dbg !6521
  %174 = icmp eq i64 %172, %173, !dbg !6522
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %90
  %175 = load %struct.utmpx*, %struct.utmpx** %19, align 8, !dbg !6524
  %176 = bitcast %struct.utmpx* %175 to i8*, !dbg !6524
  %177 = call i8* @x2nrealloc(i8* %176, i64* %18, i64 384), !dbg !6525
  %178 = bitcast i8* %177 to %struct.utmpx*, !dbg !6525
  store %struct.utmpx* %178, %struct.utmpx** %19, align 8, !dbg !6526
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %119
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %136
  call void @endutxent(), !dbg !6535
  %179 = load i64, i64* %17, align 8, !dbg !6536
  %180 = load i64*, i64** %14, align 8, !dbg !6537
  store i64 %179, i64* %180, align 8, !dbg !6538
  %181 = load %struct.utmpx*, %struct.utmpx** %19, align 8, !dbg !6539
  %182 = load %struct.utmpx**, %struct.utmpx*** %15, align 8, !dbg !6540
  store %struct.utmpx* %181, %struct.utmpx** %182, align 8, !dbg !6541
  br label %originalBB22
}

declare dso_local i32 @utmpxname(i8*) #3

declare dso_local void @setutxent() #3

declare dso_local %struct.utmpx* @getutxent() #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @desirable_utmp_entry(%struct.utmpx*, i32) #4 !dbg !6579 {
  %3 = load i32, i32* @x.109
  %4 = load i32, i32* @y.110
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i1, align 1
  %12 = alloca %struct.utmpx*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  store %struct.utmpx* %0, %struct.utmpx** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %12, metadata !6582, metadata !DIExpression()), !dbg !6583
  store i32 %1, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !6584, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.declare(metadata i8* %14, metadata !6586, metadata !DIExpression()), !dbg !6587
  %15 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !6588
  %16 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %15, i32 0, i32 4, !dbg !6588
  %17 = getelementptr inbounds [32 x i8], [32 x i8]* %16, i64 0, i64 0, !dbg !6588
  %18 = load i8, i8* %17, align 4, !dbg !6588
  %19 = sext i8 %18 to i32, !dbg !6588
  %20 = icmp ne i32 %19, 0, !dbg !6588
  %21 = load i32, i32* @x.109
  %22 = load i32, i32* @y.110
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %29, label %260, !dbg !6588

29:                                               ; preds = %originalBBpart2
  %30 = load i32, i32* @x.109
  %31 = load i32, i32* @y.110
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !6588
  %39 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %38, i32 0, i32 0, !dbg !6588
  %40 = load i16, i16* %39, align 4, !dbg !6588
  %41 = sext i16 %40 to i32, !dbg !6588
  %42 = load i32, i32* @x.109
  %43 = load i32, i32* @y.110
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %50, !dbg !6588

50:                                               ; preds = %originalBBpart24
  %51 = load i32, i32* @x.109
  %52 = load i32, i32* @y.110
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %50, %originalBB6alteredBB
  %collatzVar = alloca i32
  %59 = load i32, i32* @x.109
  %60 = load i32, i32* @y.110
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %67

67:                                               ; preds = %originalBBpart28
  %68 = load i32, i32* @inVal0
  %69 = icmp sgt i32 %68, 1
  br i1 %69, label %87, label %70

70:                                               ; preds = %67
  %71 = load i32, i32* @x.109
  %72 = load i32, i32* @y.110
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %70, %originalBB10alteredBB
  store i32 52, i32* %collatzVar
  %79 = load i32, i32* @x.109
  %80 = load i32, i32* @y.110
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %87

87:                                               ; preds = %originalBBpart212, %67
  %88 = load i32, i32* @x.109
  %89 = load i32, i32* @y.110
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %87, %originalBB14alteredBB
  %96 = load i8**, i8*** @inVal1
  %97 = getelementptr inbounds i8*, i8** %96, i64 1
  %98 = load i8*, i8** %97
  %controle = call i32 @controle(i8* %98, i32 7)
  store i32 %controle, i32* %collatzVar
  %99 = load i32, i32* @x.109
  %100 = load i32, i32* @y.110
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %107

107:                                              ; preds = %originalBBpart276, %originalBBpart266, %originalBBpart216
  %108 = load i32, i32* @x.109
  %109 = load i32, i32* @y.110
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %107, %originalBB18alteredBB
  %116 = load i32, i32* %collatzVar
  %117 = icmp sgt i32 %116, 1
  %118 = load i32, i32* @x.109
  %119 = load i32, i32* @y.110
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %117, label %126, label %225

126:                                              ; preds = %originalBBpart220
  %127 = load i32, i32* @x.109
  %128 = load i32, i32* @y.110
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %126, %originalBB22alteredBB
  %135 = load i32, i32* %collatzVar
  %136 = srem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = load i32, i32* @x.109
  %139 = load i32, i32* @y.110
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart227, label %originalBB22alteredBB

originalBBpart227:                                ; preds = %originalBB22
  br i1 %137, label %146, label %165

146:                                              ; preds = %originalBBpart227
  %147 = load i32, i32* @x.109
  %148 = load i32, i32* @y.110
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %146, %originalBB29alteredBB
  %155 = load i32, i32* %collatzVar
  %156 = sdiv i32 %155, 2
  store i32 %156, i32* %collatzVar
  %157 = load i32, i32* @x.109
  %158 = load i32, i32* @y.110
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBBpart233, label %originalBB29alteredBB

originalBBpart233:                                ; preds = %originalBB29
  br label %185

165:                                              ; preds = %originalBBpart227
  %166 = load i32, i32* @x.109
  %167 = load i32, i32* @y.110
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %165, %originalBB35alteredBB
  %174 = load i32, i32* %collatzVar
  %175 = mul i32 %174, 3
  %176 = add i32 %175, 1
  store i32 %176, i32* %collatzVar
  %177 = load i32, i32* @x.109
  %178 = load i32, i32* @y.110
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBBpart251, label %originalBB35alteredBB

originalBBpart251:                                ; preds = %originalBB35
  br label %185

185:                                              ; preds = %originalBBpart251, %originalBBpart233
  %186 = load i32, i32* @x.109
  %187 = load i32, i32* @y.110
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %185, %originalBB53alteredBB
  %194 = load i32, i32* %collatzVar
  %195 = sub i32 %41, %194
  %196 = icmp sgt i32 %195, 5
  %197 = load i32, i32* @x.109
  %198 = load i32, i32* @y.110
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBBpart266, label %originalBB53alteredBB

originalBBpart266:                                ; preds = %originalBB53
  br i1 %196, label %205, label %107

205:                                              ; preds = %originalBBpart266
  %206 = load i32, i32* @x.109
  %207 = load i32, i32* @y.110
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %205, %originalBB68alteredBB
  %214 = load i32, i32* %collatzVar
  %215 = add i32 %41, %214
  %216 = icmp slt i32 %215, 9
  %217 = load i32, i32* @x.109
  %218 = load i32, i32* @y.110
  %219 = sub i32 %217, 1
  %220 = mul i32 %217, %219
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %222, %223
  br i1 %224, label %originalBBpart276, label %originalBB68alteredBB

originalBBpart276:                                ; preds = %originalBB68
  br i1 %216, label %242, label %107

225:                                              ; preds = %originalBBpart220
  %226 = load i32, i32* @x.109
  %227 = load i32, i32* @y.110
  %228 = sub i32 %226, 1
  %229 = mul i32 %226, %228
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %227, 10
  %233 = or i1 %231, %232
  br i1 %233, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %225, %originalBB78alteredBB
  %234 = load i32, i32* @x.109
  %235 = load i32, i32* @y.110
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br label %242, !dbg !6588

242:                                              ; preds = %originalBBpart280, %originalBBpart276
  %243 = phi i1 [ true, %originalBBpart276 ], [ false, %originalBBpart280 ]
  %244 = load i32, i32* @x.109
  %245 = load i32, i32* @y.110
  %246 = sub i32 %244, 1
  %247 = mul i32 %244, %246
  %248 = urem i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %245, 10
  %251 = or i1 %249, %250
  br i1 %251, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %242, %originalBB82alteredBB
  %252 = load i32, i32* @x.109
  %253 = load i32, i32* @y.110
  %254 = sub i32 %252, 1
  %255 = mul i32 %252, %254
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %257, %258
  br i1 %259, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br label %260

260:                                              ; preds = %originalBBpart284, %originalBBpart2
  %261 = phi i1 [ false, %originalBBpart2 ], [ %243, %originalBBpart284 ], !dbg !6589
  %262 = load i32, i32* @x.109
  %263 = load i32, i32* @y.110
  %264 = sub i32 %262, 1
  %265 = mul i32 %262, %264
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %267, %268
  br i1 %269, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %260, %originalBB86alteredBB
  %270 = zext i1 %261 to i8, !dbg !6587
  store i8 %270, i8* %14, align 1, !dbg !6587
  %271 = load i32, i32* %13, align 4, !dbg !6590
  %272 = and i32 %271, 2, !dbg !6592
  %273 = icmp ne i32 %272, 0, !dbg !6592
  %274 = load i32, i32* @x.109
  %275 = load i32, i32* @y.110
  %276 = sub i32 %274, 1
  %277 = mul i32 %274, %276
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %279, %280
  br i1 %281, label %originalBBpart297, label %originalBB86alteredBB

originalBBpart297:                                ; preds = %originalBB86
  br i1 %273, label %282, label %318, !dbg !6593

282:                                              ; preds = %originalBBpart297
  %283 = load i32, i32* @x.109
  %284 = load i32, i32* @y.110
  %285 = sub i32 %283, 1
  %286 = mul i32 %283, %285
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %288, %289
  br i1 %290, label %originalBB99, label %originalBB99alteredBB

originalBB99:                                     ; preds = %282, %originalBB99alteredBB
  %291 = load i8, i8* %14, align 1, !dbg !6594
  %292 = trunc i8 %291 to i1, !dbg !6594
  %293 = load i32, i32* @x.109
  %294 = load i32, i32* @y.110
  %295 = sub i32 %293, 1
  %296 = mul i32 %293, %295
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %298, %299
  br i1 %300, label %originalBBpart2101, label %originalBB99alteredBB

originalBBpart2101:                               ; preds = %originalBB99
  br i1 %292, label %318, label %301, !dbg !6595

301:                                              ; preds = %originalBBpart2101
  %302 = load i32, i32* @x.109
  %303 = load i32, i32* @y.110
  %304 = sub i32 %302, 1
  %305 = mul i32 %302, %304
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %303, 10
  %309 = or i1 %307, %308
  br i1 %309, label %originalBB103, label %originalBB103alteredBB

originalBB103:                                    ; preds = %301, %originalBB103alteredBB
  store i1 false, i1* %11, align 1, !dbg !6596
  %310 = load i32, i32* @x.109
  %311 = load i32, i32* @y.110
  %312 = sub i32 %310, 1
  %313 = mul i32 %310, %312
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %315, %316
  br i1 %317, label %originalBBpart2105, label %originalBB103alteredBB

originalBBpart2105:                               ; preds = %originalBB103
  br label %438, !dbg !6596

318:                                              ; preds = %originalBBpart2101, %originalBBpart297
  %319 = load i32, i32* @x.109
  %320 = load i32, i32* @y.110
  %321 = sub i32 %319, 1
  %322 = mul i32 %319, %321
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %324, %325
  br i1 %326, label %originalBB107, label %originalBB107alteredBB

originalBB107:                                    ; preds = %318, %originalBB107alteredBB
  %327 = load i32, i32* %13, align 4, !dbg !6597
  %328 = and i32 %327, 1, !dbg !6599
  %329 = icmp ne i32 %328, 0, !dbg !6599
  %330 = load i32, i32* @x.109
  %331 = load i32, i32* @y.110
  %332 = sub i32 %330, 1
  %333 = mul i32 %330, %332
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %335, %336
  br i1 %337, label %originalBBpart2114, label %originalBB107alteredBB

originalBBpart2114:                               ; preds = %originalBB107
  br i1 %329, label %338, label %421, !dbg !6600

338:                                              ; preds = %originalBBpart2114
  %339 = load i32, i32* @x.109
  %340 = load i32, i32* @y.110
  %341 = sub i32 %339, 1
  %342 = mul i32 %339, %341
  %343 = urem i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %344, %345
  br i1 %346, label %originalBB116, label %originalBB116alteredBB

originalBB116:                                    ; preds = %338, %originalBB116alteredBB
  %347 = load i8, i8* %14, align 1, !dbg !6601
  %348 = trunc i8 %347 to i1, !dbg !6601
  %349 = load i32, i32* @x.109
  %350 = load i32, i32* @y.110
  %351 = sub i32 %349, 1
  %352 = mul i32 %349, %351
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %350, 10
  %356 = or i1 %354, %355
  br i1 %356, label %originalBBpart2118, label %originalBB116alteredBB

originalBBpart2118:                               ; preds = %originalBB116
  br i1 %348, label %357, label %421, !dbg !6602

357:                                              ; preds = %originalBBpart2118
  %358 = load i32, i32* @x.109
  %359 = load i32, i32* @y.110
  %360 = sub i32 %358, 1
  %361 = mul i32 %358, %360
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %363, %364
  br i1 %365, label %originalBB120, label %originalBB120alteredBB

originalBB120:                                    ; preds = %357, %originalBB120alteredBB
  %366 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !6603
  %367 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %366, i32 0, i32 1, !dbg !6603
  %368 = load i32, i32* %367, align 4, !dbg !6603
  %369 = icmp slt i32 0, %368, !dbg !6604
  %370 = load i32, i32* @x.109
  %371 = load i32, i32* @y.110
  %372 = sub i32 %370, 1
  %373 = mul i32 %370, %372
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %371, 10
  %377 = or i1 %375, %376
  br i1 %377, label %originalBBpart2122, label %originalBB120alteredBB

originalBBpart2122:                               ; preds = %originalBB120
  br i1 %369, label %378, label %421, !dbg !6605

378:                                              ; preds = %originalBBpart2122
  %379 = load i32, i32* @x.109
  %380 = load i32, i32* @y.110
  %381 = sub i32 %379, 1
  %382 = mul i32 %379, %381
  %383 = urem i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %380, 10
  %386 = or i1 %384, %385
  br i1 %386, label %originalBB124, label %originalBB124alteredBB

originalBB124:                                    ; preds = %378, %originalBB124alteredBB
  %387 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !6606
  %388 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %387, i32 0, i32 1, !dbg !6606
  %389 = load i32, i32* %388, align 4, !dbg !6606
  %390 = call i32 @kill(i32 %389, i32 0) #10, !dbg !6607
  %391 = icmp slt i32 %390, 0, !dbg !6608
  %392 = load i32, i32* @x.109
  %393 = load i32, i32* @y.110
  %394 = sub i32 %392, 1
  %395 = mul i32 %392, %394
  %396 = urem i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %397, %398
  br i1 %399, label %originalBBpart2126, label %originalBB124alteredBB

originalBBpart2126:                               ; preds = %originalBB124
  br i1 %391, label %400, label %421, !dbg !6609

400:                                              ; preds = %originalBBpart2126
  %401 = call i32* @__errno_location() #15, !dbg !6610
  %402 = load i32, i32* %401, align 4, !dbg !6610
  %403 = icmp eq i32 %402, 3, !dbg !6611
  br i1 %403, label %404, label %421, !dbg !6612

404:                                              ; preds = %400
  %405 = load i32, i32* @x.109
  %406 = load i32, i32* @y.110
  %407 = sub i32 %405, 1
  %408 = mul i32 %405, %407
  %409 = urem i32 %408, 2
  %410 = icmp eq i32 %409, 0
  %411 = icmp slt i32 %406, 10
  %412 = or i1 %410, %411
  br i1 %412, label %originalBB128, label %originalBB128alteredBB

originalBB128:                                    ; preds = %404, %originalBB128alteredBB
  store i1 false, i1* %11, align 1, !dbg !6613
  %413 = load i32, i32* @x.109
  %414 = load i32, i32* @y.110
  %415 = sub i32 %413, 1
  %416 = mul i32 %413, %415
  %417 = urem i32 %416, 2
  %418 = icmp eq i32 %417, 0
  %419 = icmp slt i32 %414, 10
  %420 = or i1 %418, %419
  br i1 %420, label %originalBBpart2130, label %originalBB128alteredBB

originalBBpart2130:                               ; preds = %originalBB128
  br label %438, !dbg !6613

421:                                              ; preds = %400, %originalBBpart2126, %originalBBpart2122, %originalBBpart2118, %originalBBpart2114
  %422 = load i32, i32* @x.109
  %423 = load i32, i32* @y.110
  %424 = sub i32 %422, 1
  %425 = mul i32 %422, %424
  %426 = urem i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %423, 10
  %429 = or i1 %427, %428
  br i1 %429, label %originalBB132, label %originalBB132alteredBB

originalBB132:                                    ; preds = %421, %originalBB132alteredBB
  store i1 true, i1* %11, align 1, !dbg !6614
  %430 = load i32, i32* @x.109
  %431 = load i32, i32* @y.110
  %432 = sub i32 %430, 1
  %433 = mul i32 %430, %432
  %434 = urem i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = icmp slt i32 %431, 10
  %437 = or i1 %435, %436
  br i1 %437, label %originalBBpart2134, label %originalBB132alteredBB

originalBBpart2134:                               ; preds = %originalBB132
  br label %438, !dbg !6614

438:                                              ; preds = %originalBBpart2134, %originalBBpart2130, %originalBBpart2105
  %439 = load i1, i1* %11, align 1, !dbg !6615
  ret i1 %439, !dbg !6615

originalBBalteredBB:                              ; preds = %originalBB, %2
  %440 = alloca i1, align 1
  %441 = alloca %struct.utmpx*, align 8
  %442 = alloca i32, align 4
  %443 = alloca i8, align 1
  store %struct.utmpx* %0, %struct.utmpx** %441, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %441, metadata !6616, metadata !DIExpression()), !dbg !6583
  store i32 %1, i32* %442, align 4
  call void @llvm.dbg.declare(metadata i32* %442, metadata !6645, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.declare(metadata i8* %443, metadata !6646, metadata !DIExpression()), !dbg !6587
  %444 = load %struct.utmpx*, %struct.utmpx** %441, align 8, !dbg !6588
  %445 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %444, i32 0, i32 4, !dbg !6588
  %446 = getelementptr inbounds [32 x i8], [32 x i8]* %445, i64 0, i64 0, !dbg !6588
  %447 = load i8, i8* %446, align 4, !dbg !6588
  %448 = sext i8 %447 to i32, !dbg !6588
  %449 = icmp ne i32 %448, 0, !dbg !6588
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %450 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !6588
  %451 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %450, i32 0, i32 0, !dbg !6588
  %452 = load i16, i16* %451, align 4, !dbg !6588
  %453 = sext i16 %452 to i32, !dbg !6588
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %50
  %collatzVaralteredBB = alloca i32
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %70
  store i32 52, i32* %collatzVar
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %87
  %454 = load i8**, i8*** @inVal1
  %455 = getelementptr inbounds i8*, i8** %454, i64 1
  %456 = load i8*, i8** %455
  %controlealteredBB = call i32 @controle(i8* %456, i32 7)
  store i32 %controlealteredBB, i32* %collatzVar
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %107
  %457 = load i32, i32* %collatzVar
  %458 = icmp sgt i32 %457, 1
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %126
  %459 = load i32, i32* %collatzVar
  %_ = sub i32 %459, 2
  %gen = mul i32 %_, 2
  %_23 = sub i32 %459, 2
  %gen24 = mul i32 %_23, 2
  %460 = srem i32 %459, 2
  %461 = icmp eq i32 %460, 0
  br label %originalBB22

originalBB29alteredBB:                            ; preds = %originalBB29, %146
  %462 = load i32, i32* %collatzVar
  %_30 = sub i32 %462, 2
  %gen31 = mul i32 %_30, 2
  %463 = sdiv i32 %462, 2
  store i32 %463, i32* %collatzVar
  br label %originalBB29

originalBB35alteredBB:                            ; preds = %originalBB35, %165
  %464 = load i32, i32* %collatzVar
  %_36 = shl i32 %464, 3
  %_37 = shl i32 %464, 3
  %_38 = shl i32 %464, 3
  %_39 = sub i32 0, %464
  %gen40 = add i32 %_39, 3
  %_41 = sub i32 0, %464
  %gen42 = add i32 %_41, 3
  %_43 = sub i32 %464, 3
  %gen44 = mul i32 %_43, 3
  %_45 = sub i32 %464, 3
  %gen46 = mul i32 %_45, 3
  %_47 = shl i32 %464, 3
  %_48 = sub i32 %464, 3
  %gen49 = mul i32 %_48, 3
  %465 = mul i32 %464, 3
  %466 = add i32 %465, 1
  store i32 %466, i32* %collatzVar
  br label %originalBB35

originalBB53alteredBB:                            ; preds = %originalBB53, %185
  %467 = load i32, i32* %collatzVar
  %_54 = sub i32 %41, %467
  %gen55 = mul i32 %_54, %467
  %_56 = sub i32 0, %41
  %gen57 = add i32 %_56, %467
  %_58 = sub i32 0, %41
  %gen59 = add i32 %_58, %467
  %_60 = sub i32 %41, %467
  %gen61 = mul i32 %_60, %467
  %_62 = shl i32 %41, %467
  %_63 = sub i32 0, %41
  %gen64 = add i32 %_63, %467
  %468 = sub i32 %41, %467
  %469 = icmp sgt i32 %468, 5
  br label %originalBB53

originalBB68alteredBB:                            ; preds = %originalBB68, %205
  %470 = load i32, i32* %collatzVar
  %_69 = shl i32 %41, %470
  %_70 = sub i32 %41, %470
  %gen71 = mul i32 %_70, %470
  %_72 = sub i32 0, %41
  %gen73 = add i32 %_72, %470
  %_74 = shl i32 %41, %470
  %471 = add i32 %41, %470
  %472 = icmp slt i32 %471, 9
  br label %originalBB68

originalBB78alteredBB:                            ; preds = %originalBB78, %225
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %242
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %260
  %473 = zext i1 %261 to i8, !dbg !6587
  store i8 %473, i8* %14, align 1, !dbg !6587
  %474 = load i32, i32* %13, align 4, !dbg !6590
  %_87 = shl i32 %474, 2
  %_88 = sub i32 %474, 2
  %gen89 = mul i32 %_88, 2
  %_90 = sub i32 %474, 2
  %gen91 = mul i32 %_90, 2
  %_92 = sub i32 0, %474
  %gen93 = add i32 %_92, 2
  %_94 = sub i32 %474, 2
  %gen95 = mul i32 %_94, 2
  %475 = and i32 %474, 2, !dbg !6592
  %476 = icmp ne i32 %475, 0, !dbg !6592
  br label %originalBB86

originalBB99alteredBB:                            ; preds = %originalBB99, %282
  %477 = load i8, i8* %14, align 1, !dbg !6594
  %478 = trunc i8 %477 to i1, !dbg !6594
  br label %originalBB99

originalBB103alteredBB:                           ; preds = %originalBB103, %301
  store i1 false, i1* %11, align 1, !dbg !6596
  br label %originalBB103

originalBB107alteredBB:                           ; preds = %originalBB107, %318
  %479 = load i32, i32* %13, align 4, !dbg !6597
  %_108 = sub i32 0, %479
  %gen109 = add i32 %_108, 1
  %_110 = sub i32 0, %479
  %gen111 = add i32 %_110, 1
  %_112 = shl i32 %479, 1
  %480 = and i32 %479, 1, !dbg !6599
  %481 = icmp ne i32 %480, 0, !dbg !6599
  br label %originalBB107

originalBB116alteredBB:                           ; preds = %originalBB116, %338
  %482 = load i8, i8* %14, align 1, !dbg !6601
  %483 = trunc i8 %482 to i1, !dbg !6601
  br label %originalBB116

originalBB120alteredBB:                           ; preds = %originalBB120, %357
  %484 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !6603
  %485 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %484, i32 0, i32 1, !dbg !6603
  %486 = load i32, i32* %485, align 4, !dbg !6603
  %487 = icmp slt i32 0, %486, !dbg !6604
  br label %originalBB120

originalBB124alteredBB:                           ; preds = %originalBB124, %378
  %488 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !6606
  %489 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %488, i32 0, i32 1, !dbg !6606
  %490 = load i32, i32* %489, align 4, !dbg !6606
  %491 = call i32 @kill(i32 %490, i32 0) #10, !dbg !6607
  %492 = icmp slt i32 %491, 0, !dbg !6608
  br label %originalBB124

originalBB128alteredBB:                           ; preds = %originalBB128, %404
  store i1 false, i1* %11, align 1, !dbg !6613
  br label %originalBB128

originalBB132alteredBB:                           ; preds = %originalBB132, %421
  store i1 true, i1* %11, align 1, !dbg !6614
  br label %originalBB132
}

declare dso_local void @endutxent() #3

; Function Attrs: nounwind
declare dso_local i32 @kill(i32, i32) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @c_strcasecmp(i8*, i8*) #11 !dbg !6647 {
  %3 = load i32, i32* @x.111
  %4 = load i32, i32* @y.112
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !6651, metadata !DIExpression()), !dbg !6652
  store i8* %1, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !6653, metadata !DIExpression()), !dbg !6654
  call void @llvm.dbg.declare(metadata i8** %14, metadata !6655, metadata !DIExpression()), !dbg !6656
  %18 = load i8*, i8** %12, align 8, !dbg !6657
  store i8* %18, i8** %14, align 8, !dbg !6656
  call void @llvm.dbg.declare(metadata i8** %15, metadata !6658, metadata !DIExpression()), !dbg !6659
  %19 = load i8*, i8** %13, align 8, !dbg !6660
  store i8* %19, i8** %15, align 8, !dbg !6659
  call void @llvm.dbg.declare(metadata i8* %16, metadata !6661, metadata !DIExpression()), !dbg !6662
  call void @llvm.dbg.declare(metadata i8* %17, metadata !6663, metadata !DIExpression()), !dbg !6664
  %20 = load i8*, i8** %14, align 8, !dbg !6665
  %21 = load i8*, i8** %15, align 8, !dbg !6667
  %22 = icmp eq i8* %20, %21, !dbg !6668
  %23 = load i32, i32* @x.111
  %24 = load i32, i32* @y.112
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %48, !dbg !6669

31:                                               ; preds = %originalBBpart2
  %32 = load i32, i32* @x.111
  %33 = load i32, i32* @y.112
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  store i32 0, i32* %11, align 4, !dbg !6670
  %40 = load i32, i32* @x.111
  %41 = load i32, i32* @y.112
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %177, !dbg !6670

48:                                               ; preds = %originalBBpart2
  %49 = load i32, i32* @x.111
  %50 = load i32, i32* @y.112
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %48, %originalBB6alteredBB
  %57 = load i32, i32* @x.111
  %58 = load i32, i32* @y.112
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %65, !dbg !6671

65:                                               ; preds = %originalBBpart224, %originalBBpart28
  %66 = load i32, i32* @x.111
  %67 = load i32, i32* @y.112
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %65, %originalBB10alteredBB
  %74 = load i8*, i8** %14, align 8, !dbg !6672
  %75 = load i8, i8* %74, align 1, !dbg !6674
  %76 = zext i8 %75 to i32, !dbg !6674
  %77 = call i32 @c_tolower(i32 %76), !dbg !6675
  %78 = trunc i32 %77 to i8, !dbg !6675
  store i8 %78, i8* %16, align 1, !dbg !6676
  %79 = load i8*, i8** %15, align 8, !dbg !6677
  %80 = load i8, i8* %79, align 1, !dbg !6678
  %81 = zext i8 %80 to i32, !dbg !6678
  %82 = call i32 @c_tolower(i32 %81), !dbg !6679
  %83 = trunc i32 %82 to i8, !dbg !6679
  store i8 %83, i8* %17, align 1, !dbg !6680
  %84 = load i8, i8* %16, align 1, !dbg !6681
  %85 = zext i8 %84 to i32, !dbg !6681
  %86 = icmp eq i32 %85, 0, !dbg !6683
  %87 = load i32, i32* @x.111
  %88 = load i32, i32* @y.112
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %86, label %95, label %112, !dbg !6684

95:                                               ; preds = %originalBBpart212
  %96 = load i32, i32* @x.111
  %97 = load i32, i32* @y.112
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %95, %originalBB14alteredBB
  %104 = load i32, i32* @x.111
  %105 = load i32, i32* @y.112
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %155, !dbg !6685

112:                                              ; preds = %originalBBpart212
  %113 = load i32, i32* @x.111
  %114 = load i32, i32* @y.112
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %112, %originalBB18alteredBB
  %121 = load i8*, i8** %14, align 8, !dbg !6686
  %122 = getelementptr inbounds i8, i8* %121, i32 1, !dbg !6686
  store i8* %122, i8** %14, align 8, !dbg !6686
  %123 = load i8*, i8** %15, align 8, !dbg !6687
  %124 = getelementptr inbounds i8, i8* %123, i32 1, !dbg !6687
  store i8* %124, i8** %15, align 8, !dbg !6687
  %125 = load i32, i32* @x.111
  %126 = load i32, i32* @y.112
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %133, !dbg !6688

133:                                              ; preds = %originalBBpart220
  %134 = load i32, i32* @x.111
  %135 = load i32, i32* @y.112
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %133, %originalBB22alteredBB
  %142 = load i8, i8* %16, align 1, !dbg !6689
  %143 = zext i8 %142 to i32, !dbg !6689
  %144 = load i8, i8* %17, align 1, !dbg !6690
  %145 = zext i8 %144 to i32, !dbg !6690
  %146 = icmp eq i32 %143, %145, !dbg !6691
  %147 = load i32, i32* @x.111
  %148 = load i32, i32* @y.112
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %146, label %65, label %155, !dbg !6688, !llvm.loop !6692

155:                                              ; preds = %originalBBpart224, %originalBBpart216
  %156 = load i32, i32* @x.111
  %157 = load i32, i32* @y.112
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %155, %originalBB26alteredBB
  %164 = load i8, i8* %16, align 1, !dbg !6694
  %165 = zext i8 %164 to i32, !dbg !6694
  %166 = load i8, i8* %17, align 1, !dbg !6696
  %167 = zext i8 %166 to i32, !dbg !6696
  %168 = sub nsw i32 %165, %167, !dbg !6697
  store i32 %168, i32* %11, align 4, !dbg !6698
  %169 = load i32, i32* @x.111
  %170 = load i32, i32* @y.112
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBBpart232, label %originalBB26alteredBB

originalBBpart232:                                ; preds = %originalBB26
  br label %177, !dbg !6698

177:                                              ; preds = %originalBBpart232, %originalBBpart24
  %178 = load i32, i32* @x.111
  %179 = load i32, i32* @y.112
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %177, %originalBB34alteredBB
  %186 = load i32, i32* %11, align 4, !dbg !6699
  %187 = load i32, i32* @x.111
  %188 = load i32, i32* @y.112
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  ret i32 %186, !dbg !6699

originalBBalteredBB:                              ; preds = %originalBB, %2
  %195 = alloca i32, align 4
  %196 = alloca i8*, align 8
  %197 = alloca i8*, align 8
  %198 = alloca i8*, align 8
  %199 = alloca i8*, align 8
  %200 = alloca i8, align 1
  %201 = alloca i8, align 1
  store i8* %0, i8** %196, align 8
  call void @llvm.dbg.declare(metadata i8** %196, metadata !6700, metadata !DIExpression()), !dbg !6652
  store i8* %1, i8** %197, align 8
  call void @llvm.dbg.declare(metadata i8** %197, metadata !6703, metadata !DIExpression()), !dbg !6654
  call void @llvm.dbg.declare(metadata i8** %198, metadata !6704, metadata !DIExpression()), !dbg !6656
  %202 = load i8*, i8** %196, align 8, !dbg !6657
  store i8* %202, i8** %198, align 8, !dbg !6656
  call void @llvm.dbg.declare(metadata i8** %199, metadata !6705, metadata !DIExpression()), !dbg !6659
  %203 = load i8*, i8** %197, align 8, !dbg !6660
  store i8* %203, i8** %199, align 8, !dbg !6659
  call void @llvm.dbg.declare(metadata i8* %200, metadata !6706, metadata !DIExpression()), !dbg !6662
  call void @llvm.dbg.declare(metadata i8* %201, metadata !6707, metadata !DIExpression()), !dbg !6664
  %204 = load i8*, i8** %198, align 8, !dbg !6665
  %205 = load i8*, i8** %199, align 8, !dbg !6667
  %206 = icmp eq i8* %204, %205, !dbg !6668
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  store i32 0, i32* %11, align 4, !dbg !6670
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %65
  %207 = load i8*, i8** %14, align 8, !dbg !6672
  %208 = load i8, i8* %207, align 1, !dbg !6674
  %209 = zext i8 %208 to i32, !dbg !6674
  %210 = call i32 @c_tolower(i32 %209), !dbg !6675
  %211 = trunc i32 %210 to i8, !dbg !6675
  store i8 %211, i8* %16, align 1, !dbg !6676
  %212 = load i8*, i8** %15, align 8, !dbg !6677
  %213 = load i8, i8* %212, align 1, !dbg !6678
  %214 = zext i8 %213 to i32, !dbg !6678
  %215 = call i32 @c_tolower(i32 %214), !dbg !6679
  %216 = trunc i32 %215 to i8, !dbg !6679
  store i8 %216, i8* %17, align 1, !dbg !6680
  %217 = load i8, i8* %16, align 1, !dbg !6681
  %218 = zext i8 %217 to i32, !dbg !6681
  %219 = icmp eq i32 %218, 0, !dbg !6683
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %95
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %112
  %220 = load i8*, i8** %14, align 8, !dbg !6686
  %221 = getelementptr inbounds i8, i8* %220, i32 1, !dbg !6686
  store i8* %221, i8** %14, align 8, !dbg !6686
  %222 = load i8*, i8** %15, align 8, !dbg !6687
  %223 = getelementptr inbounds i8, i8* %222, i32 1, !dbg !6687
  store i8* %223, i8** %15, align 8, !dbg !6687
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %133
  %224 = load i8, i8* %16, align 1, !dbg !6689
  %225 = zext i8 %224 to i32, !dbg !6689
  %226 = load i8, i8* %17, align 1, !dbg !6690
  %227 = zext i8 %226 to i32, !dbg !6690
  %228 = icmp eq i32 %225, %227, !dbg !6691
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %155
  %229 = load i8, i8* %16, align 1, !dbg !6694
  %230 = zext i8 %229 to i32, !dbg !6694
  %231 = load i8, i8* %17, align 1, !dbg !6696
  %232 = zext i8 %231 to i32, !dbg !6696
  %_ = sub i32 0, %230
  %gen = add i32 %_, %232
  %_27 = sub i32 %230, %232
  %gen28 = mul i32 %_27, %232
  %_29 = sub i32 %230, %232
  %gen30 = mul i32 %_29, %232
  %233 = sub nsw i32 %230, %232, !dbg !6697
  store i32 %233, i32* %11, align 4, !dbg !6698
  br label %originalBB26

originalBB34alteredBB:                            ; preds = %originalBB34, %177
  %234 = load i32, i32* %11, align 4, !dbg !6699
  br label %originalBB34
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @close_stream(%struct._IO_FILE*) #4 !dbg !6708 {
  %2 = load i32, i32* @x.113
  %3 = load i32, i32* @y.114
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %11, metadata !6746, metadata !DIExpression()), !dbg !6747
  call void @llvm.dbg.declare(metadata i8* %12, metadata !6748, metadata !DIExpression()), !dbg !6750
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6751
  %16 = call i64 @__fpending(%struct._IO_FILE* %15) #10, !dbg !6752
  %17 = icmp ne i64 %16, 0, !dbg !6753
  %18 = zext i1 %17 to i8, !dbg !6750
  store i8 %18, i8* %12, align 1, !dbg !6750
  call void @llvm.dbg.declare(metadata i8* %13, metadata !6754, metadata !DIExpression()), !dbg !6755
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6756
  %20 = call i32 @ferror_unlocked(%struct._IO_FILE* %19) #10, !dbg !6756
  %21 = icmp ne i32 %20, 0, !dbg !6757
  %22 = zext i1 %21 to i8, !dbg !6755
  store i8 %22, i8* %13, align 1, !dbg !6755
  call void @llvm.dbg.declare(metadata i8* %14, metadata !6758, metadata !DIExpression()), !dbg !6759
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6760
  %24 = call i32 @rpl_fclose(%struct._IO_FILE* %23), !dbg !6761
  %25 = icmp ne i32 %24, 0, !dbg !6762
  %26 = zext i1 %25 to i8, !dbg !6759
  store i8 %26, i8* %14, align 1, !dbg !6759
  %27 = load i8, i8* %13, align 1, !dbg !6763
  %28 = trunc i8 %27 to i1, !dbg !6763
  %29 = load i32, i32* @x.113
  %30 = load i32, i32* @y.114
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %28, label %95, label %37, !dbg !6765

37:                                               ; preds = %originalBBpart2
  %38 = load i32, i32* @x.113
  %39 = load i32, i32* @y.114
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = load i8, i8* %14, align 1, !dbg !6766
  %47 = trunc i8 %46 to i1, !dbg !6766
  %48 = load i32, i32* @x.113
  %49 = load i32, i32* @y.114
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %47, label %56, label %149, !dbg !6767

56:                                               ; preds = %originalBBpart24
  %57 = load i32, i32* @x.113
  %58 = load i32, i32* @y.114
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %56, %originalBB6alteredBB
  %65 = load i8, i8* %12, align 1, !dbg !6768
  %66 = trunc i8 %65 to i1, !dbg !6768
  %67 = load i32, i32* @x.113
  %68 = load i32, i32* @y.114
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %66, label %95, label %75, !dbg !6769

75:                                               ; preds = %originalBBpart28
  %76 = load i32, i32* @x.113
  %77 = load i32, i32* @y.114
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %75, %originalBB10alteredBB
  %84 = call i32* @__errno_location() #15, !dbg !6770
  %85 = load i32, i32* %84, align 4, !dbg !6770
  %86 = icmp ne i32 %85, 9, !dbg !6771
  %87 = load i32, i32* @x.113
  %88 = load i32, i32* @y.114
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %86, label %95, label %149, !dbg !6772

95:                                               ; preds = %originalBBpart212, %originalBBpart28, %originalBBpart2
  %96 = load i32, i32* @x.113
  %97 = load i32, i32* @y.114
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %95, %originalBB14alteredBB
  %104 = load i8, i8* %14, align 1, !dbg !6773
  %105 = trunc i8 %104 to i1, !dbg !6773
  %106 = load i32, i32* @x.113
  %107 = load i32, i32* @y.114
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %105, label %132, label %114, !dbg !6776

114:                                              ; preds = %originalBBpart216
  %115 = load i32, i32* @x.113
  %116 = load i32, i32* @y.114
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %114, %originalBB18alteredBB
  %123 = call i32* @__errno_location() #15, !dbg !6777
  store i32 0, i32* %123, align 4, !dbg !6778
  %124 = load i32, i32* @x.113
  %125 = load i32, i32* @y.114
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %132, !dbg !6777

132:                                              ; preds = %originalBBpart220, %originalBBpart216
  %133 = load i32, i32* @x.113
  %134 = load i32, i32* @y.114
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %132, %originalBB22alteredBB
  store i32 -1, i32* %10, align 4, !dbg !6779
  %141 = load i32, i32* @x.113
  %142 = load i32, i32* @y.114
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %166, !dbg !6779

149:                                              ; preds = %originalBBpart212, %originalBBpart24
  %150 = load i32, i32* @x.113
  %151 = load i32, i32* @y.114
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %149, %originalBB26alteredBB
  store i32 0, i32* %10, align 4, !dbg !6780
  %158 = load i32, i32* @x.113
  %159 = load i32, i32* @y.114
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %166, !dbg !6780

166:                                              ; preds = %originalBBpart228, %originalBBpart224
  %167 = load i32, i32* @x.113
  %168 = load i32, i32* @y.114
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %166, %originalBB30alteredBB
  %175 = load i32, i32* %10, align 4, !dbg !6781
  %176 = load i32, i32* @x.113
  %177 = load i32, i32* @y.114
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  ret i32 %175, !dbg !6781

originalBBalteredBB:                              ; preds = %originalBB, %1
  %184 = alloca i32, align 4
  %185 = alloca %struct._IO_FILE*, align 8
  %186 = alloca i8, align 1
  %187 = alloca i8, align 1
  %188 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %185, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %185, metadata !6782, metadata !DIExpression()), !dbg !6747
  call void @llvm.dbg.declare(metadata i8* %186, metadata !6821, metadata !DIExpression()), !dbg !6750
  %189 = load %struct._IO_FILE*, %struct._IO_FILE** %185, align 8, !dbg !6751
  %190 = call i64 @__fpending(%struct._IO_FILE* %189) #10, !dbg !6752
  %191 = icmp ne i64 %190, 0, !dbg !6753
  %192 = zext i1 %191 to i8, !dbg !6750
  store i8 %192, i8* %186, align 1, !dbg !6750
  call void @llvm.dbg.declare(metadata i8* %187, metadata !6822, metadata !DIExpression()), !dbg !6755
  %193 = load %struct._IO_FILE*, %struct._IO_FILE** %185, align 8, !dbg !6756
  %194 = call i32 @ferror_unlocked(%struct._IO_FILE* %193) #10, !dbg !6756
  %195 = icmp ne i32 %194, 0, !dbg !6757
  %196 = zext i1 %195 to i8, !dbg !6755
  store i8 %196, i8* %187, align 1, !dbg !6755
  call void @llvm.dbg.declare(metadata i8* %188, metadata !6823, metadata !DIExpression()), !dbg !6759
  %197 = load %struct._IO_FILE*, %struct._IO_FILE** %185, align 8, !dbg !6760
  %198 = call i32 @rpl_fclose(%struct._IO_FILE* %197), !dbg !6761
  %199 = icmp ne i32 %198, 0, !dbg !6762
  %200 = zext i1 %199 to i8, !dbg !6759
  store i8 %200, i8* %188, align 1, !dbg !6759
  %201 = load i8, i8* %187, align 1, !dbg !6763
  %202 = trunc i8 %201 to i1, !dbg !6763
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %203 = load i8, i8* %14, align 1, !dbg !6766
  %204 = trunc i8 %203 to i1, !dbg !6766
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %56
  %205 = load i8, i8* %12, align 1, !dbg !6768
  %206 = trunc i8 %205 to i1, !dbg !6768
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %75
  %207 = call i32* @__errno_location() #15, !dbg !6770
  %208 = load i32, i32* %207, align 4, !dbg !6770
  %209 = icmp ne i32 %208, 9, !dbg !6771
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %95
  %210 = load i8, i8* %14, align 1, !dbg !6773
  %211 = trunc i8 %210 to i1, !dbg !6773
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %114
  %212 = call i32* @__errno_location() #15, !dbg !6777
  store i32 0, i32* %212, align 4, !dbg !6778
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %132
  store i32 -1, i32* %10, align 4, !dbg !6779
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %149
  store i32 0, i32* %10, align 4, !dbg !6780
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %166
  %213 = load i32, i32* %10, align 4, !dbg !6781
  br label %originalBB30
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @locale_charset() #4 !dbg !6824 {
  %1 = load i32, i32* @x.115
  %2 = load i32, i32* @y.116
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !6828, metadata !DIExpression()), !dbg !6829
  %10 = call i8* @nl_langinfo(i32 14) #10, !dbg !6830
  store i8* %10, i8** %9, align 8, !dbg !6831
  %11 = load i8*, i8** %9, align 8, !dbg !6832
  %12 = icmp eq i8* %11, null, !dbg !6834
  %13 = load i32, i32* @x.115
  %14 = load i32, i32* @y.116
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %38, !dbg !6835

21:                                               ; preds = %originalBBpart2
  %22 = load i32, i32* @x.115
  %23 = load i32, i32* @y.116
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.179, i64 0, i64 0), i8** %9, align 8, !dbg !6836
  %30 = load i32, i32* @x.115
  %31 = load i32, i32* @y.116
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %38, !dbg !6837

38:                                               ; preds = %originalBBpart24, %originalBBpart2
  %39 = load i8*, i8** %9, align 8, !dbg !6838
  %40 = getelementptr inbounds i8, i8* %39, i64 0, !dbg !6838
  %41 = load i8, i8* %40, align 1, !dbg !6838
  %42 = sext i8 %41 to i32, !dbg !6838
  %43 = icmp eq i32 %42, 0, !dbg !6842
  br i1 %43, label %44, label %61, !dbg !6843

44:                                               ; preds = %38
  %45 = load i32, i32* @x.115
  %46 = load i32, i32* @y.116
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %44, %originalBB6alteredBB
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.180, i64 0, i64 0), i8** %9, align 8, !dbg !6844
  %53 = load i32, i32* @x.115
  %54 = load i32, i32* @y.116
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %61, !dbg !6845

61:                                               ; preds = %originalBBpart28, %38
  %62 = load i32, i32* @x.115
  %63 = load i32, i32* @y.116
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %61, %originalBB10alteredBB
  %70 = load i8*, i8** %9, align 8, !dbg !6846
  %71 = load i32, i32* @x.115
  %72 = load i32, i32* @y.116
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret i8* %70, !dbg !6847

originalBBalteredBB:                              ; preds = %originalBB, %0
  %79 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %79, metadata !6848, metadata !DIExpression()), !dbg !6829
  %80 = call i8* @nl_langinfo(i32 14) #10, !dbg !6830
  store i8* %80, i8** %79, align 8, !dbg !6831
  %81 = load i8*, i8** %79, align 8, !dbg !6832
  %82 = icmp eq i8* %81, null, !dbg !6834
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.179, i64 0, i64 0), i8** %9, align 8, !dbg !6836
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %44
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.180, i64 0, i64 0), i8** %9, align 8, !dbg !6844
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %61
  %83 = load i8*, i8** %9, align 8, !dbg !6846
  br label %originalBB10
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fclose(%struct._IO_FILE* nonnull) #4 !dbg !6851 {
  %2 = load i32, i32* @x.117
  %3 = load i32, i32* @y.118
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %11, metadata !6889, metadata !DIExpression()), !dbg !6890
  call void @llvm.dbg.declare(metadata i32* %12, metadata !6891, metadata !DIExpression()), !dbg !6892
  store i32 0, i32* %12, align 4, !dbg !6892
  call void @llvm.dbg.declare(metadata i32* %13, metadata !6893, metadata !DIExpression()), !dbg !6894
  call void @llvm.dbg.declare(metadata i32* %14, metadata !6895, metadata !DIExpression()), !dbg !6896
  store i32 0, i32* %14, align 4, !dbg !6896
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6897
  %16 = call i32 @fileno(%struct._IO_FILE* %15) #10, !dbg !6898
  store i32 %16, i32* %13, align 4, !dbg !6899
  %17 = load i32, i32* %13, align 4, !dbg !6900
  %18 = icmp slt i32 %17, 0, !dbg !6902
  %19 = load i32, i32* @x.117
  %20 = load i32, i32* @y.118
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %46, !dbg !6903

27:                                               ; preds = %originalBBpart2
  %28 = load i32, i32* @x.117
  %29 = load i32, i32* @y.118
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6904
  %37 = call i32 @fclose(%struct._IO_FILE* %36), !dbg !6905
  store i32 %37, i32* %10, align 4, !dbg !6906
  %38 = load i32, i32* @x.117
  %39 = load i32, i32* @y.118
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %168, !dbg !6906

46:                                               ; preds = %originalBBpart2
  %47 = load i32, i32* @x.117
  %48 = load i32, i32* @y.118
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %46, %originalBB6alteredBB
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6907
  %56 = call i32 @__freading(%struct._IO_FILE* %55) #10, !dbg !6907
  %57 = icmp ne i32 %56, 0, !dbg !6907
  %58 = load i32, i32* @x.117
  %59 = load i32, i32* @y.118
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %57, label %66, label %87, !dbg !6909

66:                                               ; preds = %originalBBpart28
  %67 = load i32, i32* @x.117
  %68 = load i32, i32* @y.118
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %66, %originalBB10alteredBB
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6910
  %76 = call i32 @fileno(%struct._IO_FILE* %75) #10, !dbg !6911
  %77 = call i64 @lseek(i32 %76, i64 0, i32 1) #10, !dbg !6912
  %78 = icmp ne i64 %77, -1, !dbg !6913
  %79 = load i32, i32* @x.117
  %80 = load i32, i32* @y.118
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %78, label %87, label %126, !dbg !6914

87:                                               ; preds = %originalBBpart212, %originalBBpart28
  %88 = load i32, i32* @x.117
  %89 = load i32, i32* @y.118
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %87, %originalBB14alteredBB
  %96 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6915
  %97 = call i32 @rpl_fflush(%struct._IO_FILE* %96), !dbg !6916
  %98 = icmp ne i32 %97, 0, !dbg !6916
  %99 = load i32, i32* @x.117
  %100 = load i32, i32* @y.118
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %98, label %107, label %126, !dbg !6917

107:                                              ; preds = %originalBBpart216
  %108 = load i32, i32* @x.117
  %109 = load i32, i32* @y.118
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %107, %originalBB18alteredBB
  %116 = call i32* @__errno_location() #15, !dbg !6918
  %117 = load i32, i32* %116, align 4, !dbg !6918
  store i32 %117, i32* %12, align 4, !dbg !6919
  %118 = load i32, i32* @x.117
  %119 = load i32, i32* @y.118
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %126, !dbg !6920

126:                                              ; preds = %originalBBpart220, %originalBBpart216, %originalBBpart212
  %127 = load i32, i32* @x.117
  %128 = load i32, i32* @y.118
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %126, %originalBB22alteredBB
  %135 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6921
  %136 = call i32 @fclose(%struct._IO_FILE* %135), !dbg !6922
  store i32 %136, i32* %14, align 4, !dbg !6923
  %137 = load i32, i32* %12, align 4, !dbg !6924
  %138 = icmp ne i32 %137, 0, !dbg !6926
  %139 = load i32, i32* @x.117
  %140 = load i32, i32* @y.118
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %138, label %147, label %150, !dbg !6927

147:                                              ; preds = %originalBBpart224
  %148 = load i32, i32* %12, align 4, !dbg !6928
  %149 = call i32* @__errno_location() #15, !dbg !6930
  store i32 %148, i32* %149, align 4, !dbg !6931
  store i32 -1, i32* %14, align 4, !dbg !6932
  br label %150, !dbg !6933

150:                                              ; preds = %147, %originalBBpart224
  %151 = load i32, i32* @x.117
  %152 = load i32, i32* @y.118
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %150, %originalBB26alteredBB
  %159 = load i32, i32* %14, align 4, !dbg !6934
  store i32 %159, i32* %10, align 4, !dbg !6935
  %160 = load i32, i32* @x.117
  %161 = load i32, i32* @y.118
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %168, !dbg !6935

168:                                              ; preds = %originalBBpart228, %originalBBpart24
  %169 = load i32, i32* @x.117
  %170 = load i32, i32* @y.118
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %168, %originalBB30alteredBB
  %177 = load i32, i32* %10, align 4, !dbg !6936
  %178 = load i32, i32* @x.117
  %179 = load i32, i32* @y.118
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  ret i32 %177, !dbg !6936

originalBBalteredBB:                              ; preds = %originalBB, %1
  %186 = alloca i32, align 4
  %187 = alloca %struct._IO_FILE*, align 8
  %188 = alloca i32, align 4
  %189 = alloca i32, align 4
  %190 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %187, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %187, metadata !6937, metadata !DIExpression()), !dbg !6890
  call void @llvm.dbg.declare(metadata i32* %188, metadata !6976, metadata !DIExpression()), !dbg !6892
  store i32 0, i32* %188, align 4, !dbg !6892
  call void @llvm.dbg.declare(metadata i32* %189, metadata !6977, metadata !DIExpression()), !dbg !6894
  call void @llvm.dbg.declare(metadata i32* %190, metadata !6978, metadata !DIExpression()), !dbg !6896
  store i32 0, i32* %190, align 4, !dbg !6896
  %191 = load %struct._IO_FILE*, %struct._IO_FILE** %187, align 8, !dbg !6897
  %192 = call i32 @fileno(%struct._IO_FILE* %191) #10, !dbg !6898
  store i32 %192, i32* %189, align 4, !dbg !6899
  %193 = load i32, i32* %189, align 4, !dbg !6900
  %194 = icmp slt i32 %193, 0, !dbg !6902
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %195 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6904
  %196 = call i32 @fclose(%struct._IO_FILE* %195), !dbg !6905
  store i32 %196, i32* %10, align 4, !dbg !6906
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %46
  %197 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6907
  %198 = call i32 @__freading(%struct._IO_FILE* %197) #10, !dbg !6907
  %199 = icmp ne i32 %198, 0, !dbg !6907
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %66
  %200 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6910
  %201 = call i32 @fileno(%struct._IO_FILE* %200) #10, !dbg !6911
  %202 = call i64 @lseek(i32 %201, i64 0, i32 1) #10, !dbg !6912
  %203 = icmp ne i64 %202, -1, !dbg !6913
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %87
  %204 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6915
  %205 = call i32 @rpl_fflush(%struct._IO_FILE* %204), !dbg !6916
  %206 = icmp ne i32 %205, 0, !dbg !6916
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %107
  %207 = call i32* @__errno_location() #15, !dbg !6918
  %208 = load i32, i32* %207, align 4, !dbg !6918
  store i32 %208, i32* %12, align 4, !dbg !6919
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %126
  %209 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !6921
  %210 = call i32 @fclose(%struct._IO_FILE* %209), !dbg !6922
  store i32 %210, i32* %14, align 4, !dbg !6923
  %211 = load i32, i32* %12, align 4, !dbg !6924
  %212 = icmp ne i32 %211, 0, !dbg !6926
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %150
  %213 = load i32, i32* %14, align 4, !dbg !6934
  store i32 %213, i32* %10, align 4, !dbg !6935
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %168
  %214 = load i32, i32* %10, align 4, !dbg !6936
  br label %originalBB30
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fflush(%struct._IO_FILE*) #4 !dbg !6979 {
  %2 = load i32, i32* @x.119
  %3 = load i32, i32* @y.120
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %11, metadata !7017, metadata !DIExpression()), !dbg !7018
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !7019
  %13 = icmp eq %struct._IO_FILE* %12, null, !dbg !7021
  %14 = load i32, i32* @x.119
  %15 = load i32, i32* @y.120
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %13, label %42, label %22, !dbg !7022

22:                                               ; preds = %originalBBpart2
  %23 = load i32, i32* @x.119
  %24 = load i32, i32* @y.120
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %22, %originalBB1alteredBB
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !7023
  %32 = call i32 @__freading(%struct._IO_FILE* %31) #10, !dbg !7023
  %33 = icmp ne i32 %32, 0, !dbg !7023
  %34 = load i32, i32* @x.119
  %35 = load i32, i32* @y.120
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %33, label %61, label %42, !dbg !7024

42:                                               ; preds = %originalBBpart24, %originalBBpart2
  %43 = load i32, i32* @x.119
  %44 = load i32, i32* @y.120
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %42, %originalBB6alteredBB
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !7025
  %52 = call i32 @fflush(%struct._IO_FILE* %51), !dbg !7026
  store i32 %52, i32* %10, align 4, !dbg !7027
  %53 = load i32, i32* @x.119
  %54 = load i32, i32* @y.120
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %81, !dbg !7027

61:                                               ; preds = %originalBBpart24
  %62 = load i32, i32* @x.119
  %63 = load i32, i32* @y.120
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %61, %originalBB10alteredBB
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !7028
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %70), !dbg !7029
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !7030
  %72 = call i32 @fflush(%struct._IO_FILE* %71), !dbg !7031
  store i32 %72, i32* %10, align 4, !dbg !7032
  %73 = load i32, i32* @x.119
  %74 = load i32, i32* @y.120
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %81, !dbg !7032

81:                                               ; preds = %originalBBpart212, %originalBBpart28
  %82 = load i32, i32* @x.119
  %83 = load i32, i32* @y.120
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %81, %originalBB14alteredBB
  %90 = load i32, i32* %10, align 4, !dbg !7033
  %91 = load i32, i32* @x.119
  %92 = load i32, i32* @y.120
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret i32 %90, !dbg !7033

originalBBalteredBB:                              ; preds = %originalBB, %1
  %99 = alloca i32, align 4
  %100 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %100, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %100, metadata !7034, metadata !DIExpression()), !dbg !7018
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** %100, align 8, !dbg !7019
  %102 = icmp eq %struct._IO_FILE* %101, null, !dbg !7021
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %22
  %103 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !7023
  %104 = call i32 @__freading(%struct._IO_FILE* %103) #10, !dbg !7023
  %105 = icmp ne i32 %104, 0, !dbg !7023
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %42
  %106 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !7025
  %107 = call i32 @fflush(%struct._IO_FILE* %106), !dbg !7026
  store i32 %107, i32* %10, align 4, !dbg !7027
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %61
  %108 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !7028
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %108), !dbg !7029
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !7030
  %110 = call i32 @fflush(%struct._IO_FILE* %109), !dbg !7031
  store i32 %110, i32* %10, align 4, !dbg !7032
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %81
  %111 = load i32, i32* %10, align 4, !dbg !7033
  br label %originalBB14
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE*) #4 !dbg !7073 {
  %2 = load i32, i32* @x.121
  %3 = load i32, i32* @y.122
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %10, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %10, metadata !7076, metadata !DIExpression()), !dbg !7077
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8, !dbg !7078
  %12 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %11, i32 0, i32 0, !dbg !7080
  %13 = load i32, i32* %12, align 8, !dbg !7080
  %14 = and i32 %13, 256, !dbg !7081
  %15 = icmp ne i32 %14, 0, !dbg !7081
  %16 = load i32, i32* @x.121
  %17 = load i32, i32* @y.122
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %27, !dbg !7082

24:                                               ; preds = %originalBBpart2
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8, !dbg !7083
  %26 = call i32 @rpl_fseeko(%struct._IO_FILE* %25, i64 0, i32 1), !dbg !7084
  br label %27, !dbg !7084

27:                                               ; preds = %24, %originalBBpart2
  %28 = load i32, i32* @x.121
  %29 = load i32, i32* @y.122
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %27, %originalBB10alteredBB
  %36 = load i32, i32* @x.121
  %37 = load i32, i32* @y.122
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret void, !dbg !7085

originalBBalteredBB:                              ; preds = %originalBB, %1
  %44 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %44, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %44, metadata !7086, metadata !DIExpression()), !dbg !7077
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** %44, align 8, !dbg !7078
  %46 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %45, i32 0, i32 0, !dbg !7080
  %47 = load i32, i32* %46, align 8, !dbg !7080
  %_ = sub i32 0, %47
  %gen = add i32 %_, 256
  %_1 = shl i32 %47, 256
  %_2 = sub i32 %47, 256
  %gen3 = mul i32 %_2, 256
  %_4 = sub i32 %47, 256
  %gen5 = mul i32 %_4, 256
  %_6 = sub i32 %47, 256
  %gen7 = mul i32 %_6, 256
  %_8 = sub i32 %47, 256
  %gen9 = mul i32 %_8, 256
  %48 = and i32 %47, 256, !dbg !7081
  %49 = icmp ne i32 %48, 0, !dbg !7081
  br label %originalBB

originalBB10alteredBB:                            ; preds = %originalBB10, %27
  br label %originalBB10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fseeko(%struct._IO_FILE* nonnull, i64, i32) #4 !dbg !7125 {
  %4 = load i32, i32* @x.123
  %5 = load i32, i32* @y.124
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca %struct._IO_FILE*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %13, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %13, metadata !7164, metadata !DIExpression()), !dbg !7165
  store i64 %1, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !7166, metadata !DIExpression()), !dbg !7167
  store i32 %2, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !7168, metadata !DIExpression()), !dbg !7169
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !7170
  %18 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 2, !dbg !7172
  %19 = load i8*, i8** %18, align 8, !dbg !7172
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !7173
  %21 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %20, i32 0, i32 1, !dbg !7174
  %22 = load i8*, i8** %21, align 8, !dbg !7174
  %23 = icmp eq i8* %19, %22, !dbg !7175
  %24 = load i32, i32* @x.123
  %25 = load i32, i32* @y.124
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %126, !dbg !7176

32:                                               ; preds = %originalBBpart2
  %33 = load i32, i32* @x.123
  %34 = load i32, i32* @y.124
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !7177
  %42 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %41, i32 0, i32 5, !dbg !7178
  %43 = load i8*, i8** %42, align 8, !dbg !7178
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !7179
  %45 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %44, i32 0, i32 4, !dbg !7180
  %46 = load i8*, i8** %45, align 8, !dbg !7180
  %47 = icmp eq i8* %43, %46, !dbg !7181
  %48 = load i32, i32* @x.123
  %49 = load i32, i32* @y.124
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %47, label %56, label %126, !dbg !7182

56:                                               ; preds = %originalBBpart24
  %57 = load i32, i32* @x.123
  %58 = load i32, i32* @y.124
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %56, %originalBB6alteredBB
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !7183
  %66 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %65, i32 0, i32 9, !dbg !7184
  %67 = load i8*, i8** %66, align 8, !dbg !7184
  %68 = icmp eq i8* %67, null, !dbg !7185
  %69 = load i32, i32* @x.123
  %70 = load i32, i32* @y.124
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %68, label %77, label %126, !dbg !7186

77:                                               ; preds = %originalBBpart28
  call void @llvm.dbg.declare(metadata i64* %16, metadata !7187, metadata !DIExpression()), !dbg !7189
  %78 = load i32, i32* @x.123
  %79 = load i32, i32* @y.124
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %77, %originalBB10alteredBB
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !7190
  %87 = call i32 @fileno(%struct._IO_FILE* %86) #10, !dbg !7191
  %88 = load i64, i64* %14, align 8, !dbg !7192
  %89 = load i32, i32* %15, align 4, !dbg !7193
  %90 = call i64 @lseek(i32 %87, i64 %88, i32 %89) #10, !dbg !7194
  store i64 %90, i64* %16, align 8, !dbg !7189
  %91 = load i64, i64* %16, align 8, !dbg !7195
  %92 = icmp eq i64 %91, -1, !dbg !7197
  %93 = load i32, i32* @x.123
  %94 = load i32, i32* @y.124
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %92, label %101, label %102, !dbg !7198

101:                                              ; preds = %originalBBpart212
  store i32 -1, i32* %12, align 4, !dbg !7199
  br label %147, !dbg !7199

102:                                              ; preds = %originalBBpart212
  %103 = load i32, i32* @x.123
  %104 = load i32, i32* @y.124
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %102, %originalBB14alteredBB
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !7201
  %112 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %111, i32 0, i32 0, !dbg !7202
  %113 = load i32, i32* %112, align 8, !dbg !7203
  %114 = and i32 %113, -17, !dbg !7203
  store i32 %114, i32* %112, align 8, !dbg !7203
  %115 = load i64, i64* %16, align 8, !dbg !7204
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !7205
  %117 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %116, i32 0, i32 21, !dbg !7206
  store i64 %115, i64* %117, align 8, !dbg !7207
  store i32 0, i32* %12, align 4, !dbg !7208
  %118 = load i32, i32* @x.123
  %119 = load i32, i32* @y.124
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart227, label %originalBB14alteredBB

originalBBpart227:                                ; preds = %originalBB14
  br label %147, !dbg !7208

126:                                              ; preds = %originalBBpart28, %originalBBpart24, %originalBBpart2
  %127 = load i32, i32* @x.123
  %128 = load i32, i32* @y.124
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %126, %originalBB29alteredBB
  %135 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !7209
  %136 = load i64, i64* %14, align 8, !dbg !7210
  %137 = load i32, i32* %15, align 4, !dbg !7211
  %138 = call i32 @fseeko(%struct._IO_FILE* %135, i64 %136, i32 %137), !dbg !7212
  store i32 %138, i32* %12, align 4, !dbg !7213
  %139 = load i32, i32* @x.123
  %140 = load i32, i32* @y.124
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br label %147, !dbg !7213

147:                                              ; preds = %originalBBpart231, %originalBBpart227, %101
  %148 = load i32, i32* @x.123
  %149 = load i32, i32* @y.124
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %147, %originalBB33alteredBB
  %156 = load i32, i32* %12, align 4, !dbg !7214
  %157 = load i32, i32* @x.123
  %158 = load i32, i32* @y.124
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  ret i32 %156, !dbg !7214

originalBBalteredBB:                              ; preds = %originalBB, %3
  %165 = alloca i32, align 4
  %166 = alloca %struct._IO_FILE*, align 8
  %167 = alloca i64, align 8
  %168 = alloca i32, align 4
  %169 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %166, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %166, metadata !7215, metadata !DIExpression()), !dbg !7165
  store i64 %1, i64* %167, align 8
  call void @llvm.dbg.declare(metadata i64* %167, metadata !7254, metadata !DIExpression()), !dbg !7167
  store i32 %2, i32* %168, align 4
  call void @llvm.dbg.declare(metadata i32* %168, metadata !7255, metadata !DIExpression()), !dbg !7169
  %170 = load %struct._IO_FILE*, %struct._IO_FILE** %166, align 8, !dbg !7170
  %171 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %170, i32 0, i32 2, !dbg !7172
  %172 = load i8*, i8** %171, align 8, !dbg !7172
  %173 = load %struct._IO_FILE*, %struct._IO_FILE** %166, align 8, !dbg !7173
  %174 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %173, i32 0, i32 1, !dbg !7174
  %175 = load i8*, i8** %174, align 8, !dbg !7174
  %176 = icmp eq i8* %172, %175, !dbg !7175
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %177 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !7177
  %178 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %177, i32 0, i32 5, !dbg !7178
  %179 = load i8*, i8** %178, align 8, !dbg !7178
  %180 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !7179
  %181 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %180, i32 0, i32 4, !dbg !7180
  %182 = load i8*, i8** %181, align 8, !dbg !7180
  %183 = icmp eq i8* %179, %182, !dbg !7181
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %56
  %184 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !7183
  %185 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %184, i32 0, i32 9, !dbg !7184
  %186 = load i8*, i8** %185, align 8, !dbg !7184
  %187 = icmp eq i8* %186, null, !dbg !7185
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %77
  %188 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !7190
  %189 = call i32 @fileno(%struct._IO_FILE* %188) #10, !dbg !7191
  %190 = load i64, i64* %14, align 8, !dbg !7192
  %191 = load i32, i32* %15, align 4, !dbg !7193
  %192 = call i64 @lseek(i32 %189, i64 %190, i32 %191) #10, !dbg !7194
  store i64 %192, i64* %16, align 8, !dbg !7189
  %193 = load i64, i64* %16, align 8, !dbg !7195
  %194 = icmp eq i64 %193, -1, !dbg !7197
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %102
  %195 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !7201
  %196 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %195, i32 0, i32 0, !dbg !7202
  %197 = load i32, i32* %196, align 8, !dbg !7203
  %_ = shl i32 %197, -17
  %_15 = sub i32 %197, -17
  %gen = mul i32 %_15, -17
  %_16 = sub i32 %197, -17
  %gen17 = mul i32 %_16, -17
  %_18 = shl i32 %197, -17
  %_19 = shl i32 %197, -17
  %_20 = shl i32 %197, -17
  %_21 = sub i32 %197, -17
  %gen22 = mul i32 %_21, -17
  %_23 = sub i32 %197, -17
  %gen24 = mul i32 %_23, -17
  %198 = and i32 %197, -17, !dbg !7203
  store i32 %198, i32* %196, align 8, !dbg !7203
  %199 = load i64, i64* %16, align 8, !dbg !7204
  %200 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !7205
  %201 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %200, i32 0, i32 21, !dbg !7206
  store i64 %199, i64* %201, align 8, !dbg !7207
  store i32 0, i32* %12, align 4, !dbg !7208
  br label %originalBB14

originalBB29alteredBB:                            ; preds = %originalBB29, %126
  %202 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !7209
  %203 = load i64, i64* %14, align 8, !dbg !7210
  %204 = load i32, i32* %15, align 4, !dbg !7211
  %205 = call i32 @fseeko(%struct._IO_FILE* %202, i64 %203, i32 %204), !dbg !7212
  store i32 %205, i32* %12, align 4, !dbg !7213
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %147
  %206 = load i32, i32* %12, align 4, !dbg !7214
  br label %originalBB33
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

define private i32 @controle(i8*, i32) {
  %3 = load i32, i32* @x.125
  %4 = load i32, i32* @y.126
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = load i32, i32* @inVal0
  %12 = icmp sgt i32 %11, 0
  %13 = load i32, i32* @x.125
  %14 = load i32, i32* @y.126
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %41, label %21

21:                                               ; preds = %originalBBpart2
  %22 = load i32, i32* @x.125
  %23 = load i32, i32* @y.126
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  call void @srand(i32 %1)
  %30 = call i32 @rand()
  %31 = srem i32 %30, 50000
  %32 = add i32 %31, 2
  %33 = load i32, i32* @x.125
  %34 = load i32, i32* @y.126
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart223, label %originalBB1alteredBB

originalBBpart223:                                ; preds = %originalBB1
  ret i32 %32

41:                                               ; preds = %originalBBpart2
  %42 = load i32, i32* @x.125
  %43 = load i32, i32* @y.126
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %41, %originalBB25alteredBB
  %50 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal2, i32 0, i32 0
  %51 = call i32 @strcmp(i8* %50, i8* %0)
  %52 = icmp eq i32 %51, 0
  %53 = load i32, i32* @x.125
  %54 = load i32, i32* @y.126
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  br i1 %52, label %61, label %96

61:                                               ; preds = %originalBBpart227
  %62 = load i32, i32* @x.125
  %63 = load i32, i32* @y.126
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %61, %originalBB29alteredBB
  %70 = icmp eq i32 %1, -1
  %71 = load i32, i32* @x.125
  %72 = load i32, i32* @y.126
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br i1 %70, label %79, label %96

79:                                               ; preds = %originalBBpart231
  %80 = load i32, i32* @x.125
  %81 = load i32, i32* @y.126
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %79, %originalBB33alteredBB
  %88 = load i32, i32* @x.125
  %89 = load i32, i32* @y.126
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  ret i32 5

96:                                               ; preds = %originalBBpart231, %originalBBpart227
  %97 = load i32, i32* @x.125
  %98 = load i32, i32* @y.126
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %96, %originalBB37alteredBB
  %105 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal1, i32 0, i32 0
  %106 = call i32 @strcmp(i8* %105, i8* %0)
  %107 = icmp eq i32 %106, 0
  %108 = load i32, i32* @x.125
  %109 = load i32, i32* @y.126
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br i1 %107, label %116, label %151

116:                                              ; preds = %originalBBpart239
  %117 = load i32, i32* @x.125
  %118 = load i32, i32* @y.126
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %116, %originalBB41alteredBB
  %125 = icmp eq i32 %1, 7
  %126 = load i32, i32* @x.125
  %127 = load i32, i32* @y.126
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  br i1 %125, label %134, label %151

134:                                              ; preds = %originalBBpart243
  %135 = load i32, i32* @x.125
  %136 = load i32, i32* @y.126
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %134, %originalBB45alteredBB
  %143 = load i32, i32* @x.125
  %144 = load i32, i32* @y.126
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  ret i32 3

151:                                              ; preds = %originalBBpart243, %originalBBpart239
  %152 = load i32, i32* @x.125
  %153 = load i32, i32* @y.126
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %151, %originalBB49alteredBB
  %160 = getelementptr inbounds [3 x i8], [3 x i8]* @.compVal0, i32 0, i32 0
  %161 = call i32 @strcmp(i8* %160, i8* %0)
  %162 = icmp eq i32 %161, 0
  %163 = load i32, i32* @x.125
  %164 = load i32, i32* @y.126
  %165 = sub i32 %163, 1
  %166 = mul i32 %163, %165
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %168, %169
  br i1 %170, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  br i1 %162, label %171, label %206

171:                                              ; preds = %originalBBpart251
  %172 = load i32, i32* @x.125
  %173 = load i32, i32* @y.126
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %171, %originalBB53alteredBB
  %180 = icmp eq i32 %1, -3
  %181 = load i32, i32* @x.125
  %182 = load i32, i32* @y.126
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBBpart255, label %originalBB53alteredBB

originalBBpart255:                                ; preds = %originalBB53
  br i1 %180, label %189, label %206

189:                                              ; preds = %originalBBpart255
  %190 = load i32, i32* @x.125
  %191 = load i32, i32* @y.126
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %189, %originalBB57alteredBB
  %198 = load i32, i32* @x.125
  %199 = load i32, i32* @y.126
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBBpart259, label %originalBB57alteredBB

originalBBpart259:                                ; preds = %originalBB57
  ret i32 3

206:                                              ; preds = %originalBBpart255, %originalBBpart251
  %207 = load i32, i32* @x.125
  %208 = load i32, i32* @y.126
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %206, %originalBB61alteredBB
  %215 = getelementptr inbounds [3 x i8], [3 x i8]* @.compVal0, i32 0, i32 0
  %216 = call i32 @strcmp(i8* %215, i8* %0)
  %217 = icmp eq i32 %216, 0
  %218 = load i32, i32* @x.125
  %219 = load i32, i32* @y.126
  %220 = sub i32 %218, 1
  %221 = mul i32 %218, %220
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %223, %224
  br i1 %225, label %originalBBpart263, label %originalBB61alteredBB

originalBBpart263:                                ; preds = %originalBB61
  br i1 %217, label %226, label %245

226:                                              ; preds = %originalBBpart263
  %227 = icmp eq i32 %1, 0
  br i1 %227, label %228, label %245

228:                                              ; preds = %226
  %229 = load i32, i32* @x.125
  %230 = load i32, i32* @y.126
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %228, %originalBB65alteredBB
  %237 = load i32, i32* @x.125
  %238 = load i32, i32* @y.126
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBBpart267, label %originalBB65alteredBB

originalBBpart267:                                ; preds = %originalBB65
  ret i32 5

245:                                              ; preds = %226, %originalBBpart263
  %246 = load i32, i32* @x.125
  %247 = load i32, i32* @y.126
  %248 = sub i32 %246, 1
  %249 = mul i32 %246, %248
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %251, %252
  br i1 %253, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %245, %originalBB69alteredBB
  call void @srand(i32 %1)
  %254 = call i32 @rand()
  %255 = srem i32 %254, 50000
  %256 = add i32 %255, 2
  %257 = load i32, i32* @x.125
  %258 = load i32, i32* @y.126
  %259 = sub i32 %257, 1
  %260 = mul i32 %257, %259
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %258, 10
  %264 = or i1 %262, %263
  br i1 %264, label %originalBBpart292, label %originalBB69alteredBB

originalBBpart292:                                ; preds = %originalBB69
  ret i32 %256

originalBBalteredBB:                              ; preds = %originalBB, %2
  %265 = load i32, i32* @inVal0
  %266 = icmp sgt i32 %265, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  call void @srand(i32 %1)
  %267 = call i32 @rand()
  %_ = sub i32 %267, 50000
  %gen = mul i32 %_, 50000
  %_2 = sub i32 0, %267
  %gen3 = add i32 %_2, 50000
  %_4 = sub i32 0, %267
  %gen5 = add i32 %_4, 50000
  %_6 = shl i32 %267, 50000
  %_7 = sub i32 %267, 50000
  %gen8 = mul i32 %_7, 50000
  %_9 = sub i32 %267, 50000
  %gen10 = mul i32 %_9, 50000
  %268 = srem i32 %267, 50000
  %_11 = sub i32 %268, 2
  %gen12 = mul i32 %_11, 2
  %_13 = sub i32 %268, 2
  %gen14 = mul i32 %_13, 2
  %_15 = sub i32 %268, 2
  %gen16 = mul i32 %_15, 2
  %_17 = sub i32 0, %268
  %gen18 = add i32 %_17, 2
  %_19 = shl i32 %268, 2
  %_20 = sub i32 %268, 2
  %gen21 = mul i32 %_20, 2
  %269 = add i32 %268, 2
  br label %originalBB1

originalBB25alteredBB:                            ; preds = %originalBB25, %41
  %270 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal2, i32 0, i32 0
  %271 = call i32 @strcmp(i8* %270, i8* %0)
  %272 = icmp eq i32 %271, 0
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %61
  %273 = icmp eq i32 %1, -1
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %79
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %96
  %274 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal1, i32 0, i32 0
  %275 = call i32 @strcmp(i8* %274, i8* %0)
  %276 = icmp eq i32 %275, 0
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %116
  %277 = icmp eq i32 %1, 7
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %134
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %151
  %278 = getelementptr inbounds [3 x i8], [3 x i8]* @.compVal0, i32 0, i32 0
  %279 = call i32 @strcmp(i8* %278, i8* %0)
  %280 = icmp eq i32 %279, 0
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %171
  %281 = icmp eq i32 %1, -3
  br label %originalBB53

originalBB57alteredBB:                            ; preds = %originalBB57, %189
  br label %originalBB57

originalBB61alteredBB:                            ; preds = %originalBB61, %206
  %282 = getelementptr inbounds [3 x i8], [3 x i8]* @.compVal0, i32 0, i32 0
  %283 = call i32 @strcmp(i8* %282, i8* %0)
  %284 = icmp eq i32 %283, 0
  br label %originalBB61

originalBB65alteredBB:                            ; preds = %originalBB65, %228
  br label %originalBB65

originalBB69alteredBB:                            ; preds = %originalBB69, %245
  call void @srand(i32 %1)
  %285 = call i32 @rand()
  %_70 = shl i32 %285, 50000
  %_71 = sub i32 %285, 50000
  %gen72 = mul i32 %_71, 50000
  %_73 = shl i32 %285, 50000
  %_74 = sub i32 0, %285
  %gen75 = add i32 %_74, 50000
  %_76 = sub i32 0, %285
  %gen77 = add i32 %_76, 50000
  %_78 = sub i32 %285, 50000
  %gen79 = mul i32 %_78, 50000
  %286 = srem i32 %285, 50000
  %_80 = sub i32 %286, 2
  %gen81 = mul i32 %_80, 2
  %_82 = shl i32 %286, 2
  %_83 = shl i32 %286, 2
  %_84 = sub i32 0, %286
  %gen85 = add i32 %_84, 2
  %_86 = shl i32 %286, 2
  %_87 = sub i32 %286, 2
  %gen88 = mul i32 %_87, 2
  %_89 = sub i32 0, %286
  %gen90 = add i32 %_89, 2
  %287 = add i32 %286, 2
  br label %originalBB69
}

declare void @srand(i32)

declare i32 @rand()

attributes #0 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { noreturn }
attributes #15 = { nounwind readnone }

!llvm.dbg.cu = !{!2, !155, !286, !160, !198, !206, !288, !290, !213, !220, !296, !299, !279, !301, !304, !306, !309, !312, !318, !320, !322, !324, !326}
!llvm.ident = !{!328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328}
!llvm.module.flags = !{!329, !330, !331, !332, !333}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "longopts", scope: !2, file: !3, line: 162, type: !141, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !15, nameTableKind: None)
!3 = !DIFile(filename: "src/who.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4 = !{}
!5 = !{!6, !8, !9, !13, !14}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!9 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !10, line: 7, baseType: !11)
!10 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!11 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !12, line: 160, baseType: !13)
!12 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!13 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!14 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!15 = !{!16, !19, !21, !23, !25, !27, !29, !31, !33, !35, !37, !39, !41, !43, !45, !47, !51, !0, !54, !62, !108, !113, !118, !123, !131, !136, !138}
!16 = !DIGlobalVariableExpression(var: !17, expr: !DIExpression())
!17 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!18 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!19 = !DIGlobalVariableExpression(var: !20, expr: !DIExpression())
!20 = distinct !DIGlobalVariable(name: "short_list", scope: !2, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!21 = !DIGlobalVariableExpression(var: !22, expr: !DIExpression())
!22 = distinct !DIGlobalVariable(name: "short_output", scope: !2, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!23 = !DIGlobalVariableExpression(var: !24, expr: !DIExpression())
!24 = distinct !DIGlobalVariable(name: "include_idle", scope: !2, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "include_heading", scope: !2, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!27 = !DIGlobalVariableExpression(var: !28, expr: !DIExpression())
!28 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!29 = !DIGlobalVariableExpression(var: !30, expr: !DIExpression())
!30 = distinct !DIGlobalVariable(name: "include_exit", scope: !2, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!31 = !DIGlobalVariableExpression(var: !32, expr: !DIExpression())
!32 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!33 = !DIGlobalVariableExpression(var: !34, expr: !DIExpression())
!34 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!35 = !DIGlobalVariableExpression(var: !36, expr: !DIExpression())
!36 = distinct !DIGlobalVariable(name: "need_login", scope: !2, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!37 = !DIGlobalVariableExpression(var: !38, expr: !DIExpression())
!38 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!39 = !DIGlobalVariableExpression(var: !40, expr: !DIExpression())
!40 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!41 = !DIGlobalVariableExpression(var: !42, expr: !DIExpression())
!42 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!43 = !DIGlobalVariableExpression(var: !44, expr: !DIExpression())
!44 = distinct !DIGlobalVariable(name: "need_users", scope: !2, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!45 = !DIGlobalVariableExpression(var: !46, expr: !DIExpression())
!46 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!47 = !DIGlobalVariableExpression(var: !48, expr: !DIExpression())
!48 = distinct !DIGlobalVariable(name: "time_format", scope: !2, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64)
!50 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!51 = !DIGlobalVariableExpression(var: !52, expr: !DIExpression())
!52 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!53 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!54 = !DIGlobalVariableExpression(var: !55, expr: !DIExpression())
!55 = distinct !DIGlobalVariable(name: "mesg", scope: !56, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!56 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!57 = !DISubroutineType(types: !58)
!58 = !{null, !53, !49, !50, !53, !49, !49, !49, !49, !49, !49}
!59 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 24, elements: !60)
!60 = !{!61}
!61 = !DISubrange(count: 3)
!62 = !DIGlobalVariableExpression(var: !63, expr: !DIExpression())
!63 = distinct !DIGlobalVariable(name: "hoststr", scope: !64, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!64 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !65, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!65 = !DISubroutineType(types: !66)
!66 = !{null, !67, !9}
!67 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !68, size: 64)
!68 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !69)
!69 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !71)
!70 = !DIFile(filename: "./lib/readutmp.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!71 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !73)
!72 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/utmpx.h", directory: "")
!73 = !{!74, !75, !77, !81, !85, !86, !90, !95, !97, !102, !104}
!74 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !71, file: !72, line: 57, baseType: !14, size: 16)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !71, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!76 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !12, line: 154, baseType: !53)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !71, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!78 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 256, elements: !79)
!79 = !{!80}
!80 = !DISubrange(count: 32)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !71, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!82 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 32, elements: !83)
!83 = !{!84}
!84 = !DISubrange(count: 4)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !71, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !71, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!87 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2048, elements: !88)
!88 = !{!89}
!89 = !DISubrange(count: 256)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !71, file: !72, line: 67, baseType: !91, size: 32, offset: 2656)
!91 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !92)
!92 = !{!93, !94}
!93 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !91, file: !72, line: 45, baseType: !14, size: 16)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !91, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !71, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!96 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !12, line: 41, baseType: !53)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !71, file: !72, line: 79, baseType: !98, size: 64, offset: 2720)
!98 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !71, file: !72, line: 75, size: 64, elements: !99)
!99 = !{!100, !101}
!100 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !98, file: !72, line: 77, baseType: !96, size: 32)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !98, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !71, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 128, elements: !83)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !71, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 160, elements: !106)
!106 = !{!107}
!107 = !DISubrange(count: 20)
!108 = !DIGlobalVariableExpression(var: !109, expr: !DIExpression())
!109 = distinct !DIGlobalVariable(name: "hostlen", scope: !64, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !111, line: 46, baseType: !112)
!111 = !DIFile(filename: "/usr/lib/llvm-9/lib/clang/9.0.1/include/stddef.h", directory: "")
!112 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!113 = !DIGlobalVariableExpression(var: !114, expr: !DIExpression())
!114 = distinct !DIGlobalVariable(name: "now", scope: !115, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!115 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!116 = !DISubroutineType(types: !117)
!117 = !{!49, !9, !9}
!118 = !DIGlobalVariableExpression(var: !119, expr: !DIExpression())
!119 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !115, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 48, elements: !121)
!121 = !{!122}
!122 = !DISubrange(count: 6)
!123 = !DIGlobalVariableExpression(var: !124, expr: !DIExpression())
!124 = distinct !DIGlobalVariable(name: "buf", scope: !125, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!125 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !126, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!126 = !DISubroutineType(types: !127)
!127 = !{!49, !67}
!128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 264, elements: !129)
!129 = !{!130}
!130 = !DISubrange(count: 33)
!131 = !DIGlobalVariableExpression(var: !132, expr: !DIExpression())
!132 = distinct !DIGlobalVariable(name: "runlevline", scope: !133, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!133 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !134, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!134 = !DISubroutineType(types: !135)
!135 = !{null, !67}
!136 = !DIGlobalVariableExpression(var: !137, expr: !DIExpression())
!137 = distinct !DIGlobalVariable(name: "comment", scope: !133, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!138 = !DIGlobalVariableExpression(var: !139, expr: !DIExpression())
!139 = distinct !DIGlobalVariable(name: "exitstr", scope: !140, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!140 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !134, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 4608, elements: !151)
!142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !143)
!143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !145)
!144 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/getopt_ext.h", directory: "")
!145 = !{!146, !147, !148, !150}
!146 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !143, file: !144, line: 52, baseType: !49, size: 64)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !143, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !143, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !143, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!151 = !{!152}
!152 = !DISubrange(count: 18)
!153 = !DIGlobalVariableExpression(var: !154, expr: !DIExpression())
!154 = distinct !DIGlobalVariable(name: "Version", scope: !155, file: !156, line: 2, type: !49, isLocal: false, isDefinition: true)
!155 = distinct !DICompileUnit(language: DW_LANG_C99, file: !156, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !157, nameTableKind: None)
!156 = !DIFile(filename: "src/version.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!157 = !{!153}
!158 = !DIGlobalVariableExpression(var: !159, expr: !DIExpression())
!159 = distinct !DIGlobalVariable(name: "last_cherror", scope: !160, file: !166, line: 28, type: !53, isLocal: true, isDefinition: true)
!160 = distinct !DICompileUnit(language: DW_LANG_C99, file: !161, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !162, nameTableKind: None)
!161 = !DIFile(filename: "./lib/canon-host.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!162 = !{!163, !158}
!163 = !DIGlobalVariableExpression(var: !164, expr: !DIExpression())
!164 = distinct !DIGlobalVariable(name: "hints", scope: !165, file: !166, line: 64, type: !169, isLocal: true, isDefinition: true)
!165 = distinct !DISubprogram(name: "canon_host_r", scope: !166, file: !166, line: 61, type: !167, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !160, retainedNodes: !4)
!166 = !DIFile(filename: "lib/canon-host.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!167 = !DISubroutineType(types: !168)
!168 = !{!6, !49, !149}
!169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "addrinfo", file: !170, line: 565, size: 384, elements: !171)
!170 = !DIFile(filename: "/usr/include/netdb.h", directory: "")
!171 = !{!172, !173, !174, !175, !176, !181, !193, !194}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "ai_flags", scope: !169, file: !170, line: 567, baseType: !53, size: 32)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "ai_family", scope: !169, file: !170, line: 568, baseType: !53, size: 32, offset: 32)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "ai_socktype", scope: !169, file: !170, line: 569, baseType: !53, size: 32, offset: 64)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "ai_protocol", scope: !169, file: !170, line: 570, baseType: !53, size: 32, offset: 96)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addrlen", scope: !169, file: !170, line: 571, baseType: !177, size: 32, offset: 128)
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !178, line: 33, baseType: !179)
!178 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket.h", directory: "")
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "__socklen_t", file: !12, line: 209, baseType: !180)
!180 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addr", scope: !169, file: !170, line: 572, baseType: !182, size: 64, offset: 192)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !178, line: 178, size: 128, elements: !184)
!184 = !{!185, !189}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !183, file: !178, line: 180, baseType: !186, size: 16)
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !187, line: 28, baseType: !188)
!187 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sockaddr.h", directory: "")
!188 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !183, file: !178, line: 181, baseType: !190, size: 112, offset: 16)
!190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 112, elements: !191)
!191 = !{!192}
!192 = !DISubrange(count: 14)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "ai_canonname", scope: !169, file: !170, line: 573, baseType: !6, size: 64, offset: 256)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "ai_next", scope: !169, file: !170, line: 574, baseType: !195, size: 64, offset: 320)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 64)
!196 = !DIGlobalVariableExpression(var: !197, expr: !DIExpression())
!197 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !198, file: !203, line: 56, type: !18, isLocal: true, isDefinition: true)
!198 = distinct !DICompileUnit(language: DW_LANG_C99, file: !199, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !200, nameTableKind: None)
!199 = !DIFile(filename: "./lib/closeout.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!200 = !{!201, !196}
!201 = !DIGlobalVariableExpression(var: !202, expr: !DIExpression())
!202 = distinct !DIGlobalVariable(name: "file_name", scope: !198, file: !203, line: 46, type: !49, isLocal: true, isDefinition: true)
!203 = !DIFile(filename: "lib/closeout.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!204 = !DIGlobalVariableExpression(var: !205, expr: !DIExpression())
!205 = distinct !DIGlobalVariable(name: "exit_failure", scope: !206, file: !209, line: 24, type: !210, isLocal: false, isDefinition: true)
!206 = distinct !DICompileUnit(language: DW_LANG_C99, file: !207, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !208, nameTableKind: None)
!207 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!208 = !{!204}
!209 = !DIFile(filename: "lib/exitfail.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!210 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !53)
!211 = !DIGlobalVariableExpression(var: !212, expr: !DIExpression())
!212 = distinct !DIGlobalVariable(name: "program_name", scope: !213, file: !217, line: 33, type: !49, isLocal: false, isDefinition: true)
!213 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, globals: !216, nameTableKind: None)
!214 = !DIFile(filename: "./lib/progname.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!215 = !{!8, !6}
!216 = !{!211}
!217 = !DIFile(filename: "lib/progname.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!218 = !DIGlobalVariableExpression(var: !219, expr: !DIExpression())
!219 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !220, file: !241, line: 116, type: !254, isLocal: true, isDefinition: true)
!220 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !238, nameTableKind: None)
!221 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!222 = !{!223}
!223 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !224, line: 32, baseType: !180, size: 32, elements: !225)
!224 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!225 = !{!226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236}
!226 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!227 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!228 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!229 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!230 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!231 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!232 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!233 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!234 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!235 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!236 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!237 = !{!53, !188, !110}
!238 = !{!239, !246, !252, !218, !264, !266, !273, !275}
!239 = !DIGlobalVariableExpression(var: !240, expr: !DIExpression())
!240 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !220, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!241 = !DIFile(filename: "lib/quotearg.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !243, size: 704, elements: !244)
!243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !49)
!244 = !{!245}
!245 = !DISubrange(count: 11)
!246 = !DIGlobalVariableExpression(var: !247, expr: !DIExpression())
!247 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !220, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !249, size: 320, elements: !250)
!249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !223)
!250 = !{!251}
!251 = !DISubrange(count: 10)
!252 = !DIGlobalVariableExpression(var: !253, expr: !DIExpression())
!253 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !220, file: !241, line: 1052, type: !254, isLocal: false, isDefinition: true)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !255)
!255 = !{!256, !257, !258, !262, !263}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !254, file: !241, line: 68, baseType: !223, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !254, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !254, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !180, size: 256, elements: !260)
!260 = !{!261}
!261 = !DISubrange(count: 8)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !254, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !254, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!264 = !DIGlobalVariableExpression(var: !265, expr: !DIExpression())
!265 = distinct !DIGlobalVariable(name: "slot0", scope: !220, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "slotvec", scope: !220, file: !241, line: 845, type: !268, isLocal: true, isDefinition: true)
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !270)
!270 = !{!271, !272}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !269, file: !241, line: 836, baseType: !110, size: 64)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !269, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!273 = !DIGlobalVariableExpression(var: !274, expr: !DIExpression())
!274 = distinct !DIGlobalVariable(name: "nslots", scope: !220, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!275 = !DIGlobalVariableExpression(var: !276, expr: !DIExpression())
!276 = distinct !DIGlobalVariable(name: "slotvec0", scope: !220, file: !241, line: 844, type: !269, isLocal: true, isDefinition: true)
!277 = !DIGlobalVariableExpression(var: !278, expr: !DIExpression())
!278 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !279, file: !282, line: 26, type: !283, isLocal: false, isDefinition: true)
!279 = distinct !DICompileUnit(language: DW_LANG_C99, file: !280, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !281, nameTableKind: None)
!280 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!281 = !{!277}
!282 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !50, size: 376, elements: !284)
!284 = !{!285}
!285 = !DISubrange(count: 47)
!286 = distinct !DICompileUnit(language: DW_LANG_C99, file: !287, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!287 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!288 = distinct !DICompileUnit(language: DW_LANG_C99, file: !289, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!289 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!290 = distinct !DICompileUnit(language: DW_LANG_C99, file: !291, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !292, nameTableKind: None)
!291 = !DIFile(filename: "./lib/imaxtostr.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!292 = !{!293}
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !294, line: 101, baseType: !295)
!294 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!295 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !12, line: 72, baseType: !13)
!296 = distinct !DICompileUnit(language: DW_LANG_C99, file: !297, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!297 = !DIFile(filename: "./lib/setlocale_null.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!298 = !{!8}
!299 = distinct !DICompileUnit(language: DW_LANG_C99, file: !300, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!300 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!301 = distinct !DICompileUnit(language: DW_LANG_C99, file: !302, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !303, nameTableKind: None)
!302 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!303 = !{!110, !6, !8}
!304 = distinct !DICompileUnit(language: DW_LANG_C99, file: !305, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!305 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!306 = distinct !DICompileUnit(language: DW_LANG_C99, file: !307, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !308, nameTableKind: None)
!307 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!308 = !{!110}
!309 = distinct !DICompileUnit(language: DW_LANG_C99, file: !310, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !311, nameTableKind: None)
!310 = !DIFile(filename: "./lib/readutmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!311 = !{!6, !8}
!312 = distinct !DICompileUnit(language: DW_LANG_C99, file: !313, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !314, nameTableKind: None)
!313 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!314 = !{!315}
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !317)
!317 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!318 = distinct !DICompileUnit(language: DW_LANG_C99, file: !319, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!319 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!320 = distinct !DICompileUnit(language: DW_LANG_C99, file: !321, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!321 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!322 = distinct !DICompileUnit(language: DW_LANG_C99, file: !323, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!323 = !DIFile(filename: "./lib/fclose.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!324 = distinct !DICompileUnit(language: DW_LANG_C99, file: !325, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!325 = !DIFile(filename: "./lib/fflush.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!326 = distinct !DICompileUnit(language: DW_LANG_C99, file: !327, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!327 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!328 = !{!"clang version 9.0.1-12 "}
!329 = !{i32 2, !"Dwarf Version", i32 4}
!330 = !{i32 2, !"Debug Info Version", i32 3}
!331 = !{i32 1, !"wchar_size", i32 4}
!332 = !{i32 1, !"ThinLTO", i32 0}
!333 = !{i32 1, !"EnableSplitLTOUnit", i32 0}
!334 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 638, type: !335, scopeLine: 639, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!335 = !DISubroutineType(types: !336)
!336 = !{null, !53}
!337 = !DILocalVariable(name: "status", arg: 1, scope: !334, file: !3, line: 638, type: !53)
!338 = !DILocation(line: 638, column: 12, scope: !334)
!339 = !DILocation(line: 640, column: 7, scope: !340)
!340 = distinct !DILexicalBlock(scope: !334, file: !3, line: 640, column: 7)
!341 = !DILocation(line: 640, column: 14, scope: !340)
!342 = !DILocation(line: 640, column: 7, scope: !334)
!343 = !DILocation(line: 641, column: 5, scope: !340)
!344 = !DILocation(line: 641, column: 5, scope: !345)
!345 = distinct !DILexicalBlock(scope: !340, file: !3, line: 641, column: 5)
!346 = !DILocation(line: 644, column: 15, scope: !347)
!347 = distinct !DILexicalBlock(scope: !340, file: !3, line: 643, column: 5)
!348 = !DILocation(line: 644, column: 66, scope: !347)
!349 = !DILocation(line: 644, column: 7, scope: !347)
!350 = !DILocation(line: 645, column: 7, scope: !347)
!351 = !DILocation(line: 648, column: 7, scope: !347)
!352 = !DILocation(line: 655, column: 7, scope: !347)
!353 = !DILocation(line: 658, column: 7, scope: !347)
!354 = !DILocation(line: 663, column: 7, scope: !347)
!355 = !DILocation(line: 669, column: 7, scope: !347)
!356 = !DILocation(line: 675, column: 7, scope: !347)
!357 = !DILocation(line: 676, column: 7, scope: !347)
!358 = !DILocation(line: 677, column: 15, scope: !347)
!359 = !DILocation(line: 677, column: 7, scope: !347)
!360 = !DILocation(line: 682, column: 7, scope: !347)
!361 = !DILocation(line: 684, column: 9, scope: !334)
!362 = !DILocation(line: 684, column: 3, scope: !334)
!363 = !DILocalVariable(name: "status", arg: 1, scope: !364, file: !3, line: 638, type: !53)
!364 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 638, type: !335, scopeLine: 639, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !365, retainedNodes: !4)
!365 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !366, nameTableKind: None)
!366 = !{!367, !369, !371, !373, !375, !377, !379, !381, !383, !385, !387, !389, !391, !393, !395, !397, !399, !401, !411, !414, !443, !445, !448, !450, !455, !460, !462}
!367 = !DIGlobalVariableExpression(var: !368, expr: !DIExpression())
!368 = distinct !DIGlobalVariable(name: "do_lookup", scope: !365, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!369 = !DIGlobalVariableExpression(var: !370, expr: !DIExpression())
!370 = distinct !DIGlobalVariable(name: "short_list", scope: !365, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!371 = !DIGlobalVariableExpression(var: !372, expr: !DIExpression())
!372 = distinct !DIGlobalVariable(name: "short_output", scope: !365, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!373 = !DIGlobalVariableExpression(var: !374, expr: !DIExpression())
!374 = distinct !DIGlobalVariable(name: "include_idle", scope: !365, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!375 = !DIGlobalVariableExpression(var: !376, expr: !DIExpression())
!376 = distinct !DIGlobalVariable(name: "include_heading", scope: !365, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!377 = !DIGlobalVariableExpression(var: !378, expr: !DIExpression())
!378 = distinct !DIGlobalVariable(name: "include_mesg", scope: !365, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!379 = !DIGlobalVariableExpression(var: !380, expr: !DIExpression())
!380 = distinct !DIGlobalVariable(name: "include_exit", scope: !365, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!381 = !DIGlobalVariableExpression(var: !382, expr: !DIExpression())
!382 = distinct !DIGlobalVariable(name: "need_boottime", scope: !365, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!383 = !DIGlobalVariableExpression(var: !384, expr: !DIExpression())
!384 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !365, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "need_login", scope: !365, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!387 = !DIGlobalVariableExpression(var: !388, expr: !DIExpression())
!388 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !365, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !365, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!391 = !DIGlobalVariableExpression(var: !392, expr: !DIExpression())
!392 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !365, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!393 = !DIGlobalVariableExpression(var: !394, expr: !DIExpression())
!394 = distinct !DIGlobalVariable(name: "need_users", scope: !365, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "my_line_only", scope: !365, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!397 = !DIGlobalVariableExpression(var: !398, expr: !DIExpression())
!398 = distinct !DIGlobalVariable(name: "time_format", scope: !365, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!399 = !DIGlobalVariableExpression(var: !400, expr: !DIExpression())
!400 = distinct !DIGlobalVariable(name: "time_format_width", scope: !365, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!401 = !DIGlobalVariableExpression(var: !402, expr: !DIExpression())
!402 = distinct !DIGlobalVariable(name: "longopts", scope: !365, file: !3, line: 162, type: !403, isLocal: true, isDefinition: true)
!403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !404, size: 4608, elements: !151)
!404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !405)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !406)
!406 = !{!407, !408, !409, !410}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !405, file: !144, line: 52, baseType: !49, size: 64)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !405, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !405, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !405, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!411 = !DIGlobalVariableExpression(var: !412, expr: !DIExpression())
!412 = distinct !DIGlobalVariable(name: "mesg", scope: !413, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!413 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !365, retainedNodes: !4)
!414 = !DIGlobalVariableExpression(var: !415, expr: !DIExpression())
!415 = distinct !DIGlobalVariable(name: "hoststr", scope: !416, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!416 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !417, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !365, retainedNodes: !4)
!417 = !DISubroutineType(types: !418)
!418 = !{null, !419, !9}
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64)
!420 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !421)
!421 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !422)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !423)
!423 = !{!424, !425, !426, !427, !428, !429, !430, !435, !436, !441, !442}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !422, file: !72, line: 57, baseType: !14, size: 16)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !422, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !422, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !422, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !422, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !422, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !422, file: !72, line: 67, baseType: !431, size: 32, offset: 2656)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !432)
!432 = !{!433, !434}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !431, file: !72, line: 45, baseType: !14, size: 16)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !431, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !422, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !422, file: !72, line: 79, baseType: !437, size: 64, offset: 2720)
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !422, file: !72, line: 75, size: 64, elements: !438)
!438 = !{!439, !440}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !437, file: !72, line: 77, baseType: !96, size: 32)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !437, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !422, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !422, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!443 = !DIGlobalVariableExpression(var: !444, expr: !DIExpression())
!444 = distinct !DIGlobalVariable(name: "hostlen", scope: !416, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!445 = !DIGlobalVariableExpression(var: !446, expr: !DIExpression())
!446 = distinct !DIGlobalVariable(name: "now", scope: !447, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!447 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !365, retainedNodes: !4)
!448 = !DIGlobalVariableExpression(var: !449, expr: !DIExpression())
!449 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !447, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!450 = !DIGlobalVariableExpression(var: !451, expr: !DIExpression())
!451 = distinct !DIGlobalVariable(name: "buf", scope: !452, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!452 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !453, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !365, retainedNodes: !4)
!453 = !DISubroutineType(types: !454)
!454 = !{!49, !419}
!455 = !DIGlobalVariableExpression(var: !456, expr: !DIExpression())
!456 = distinct !DIGlobalVariable(name: "runlevline", scope: !457, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!457 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !458, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !365, retainedNodes: !4)
!458 = !DISubroutineType(types: !459)
!459 = !{null, !419}
!460 = !DIGlobalVariableExpression(var: !461, expr: !DIExpression())
!461 = distinct !DIGlobalVariable(name: "comment", scope: !457, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!462 = !DIGlobalVariableExpression(var: !463, expr: !DIExpression())
!463 = distinct !DIGlobalVariable(name: "exitstr", scope: !464, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!464 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !458, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !365, retainedNodes: !4)
!465 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !466, file: !466, line: 634, type: !467, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!466 = !DIFile(filename: "src/system.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!467 = !DISubroutineType(types: !468)
!468 = !{null, !49}
!469 = !DILocalVariable(name: "program", arg: 1, scope: !465, file: !466, line: 634, type: !49)
!470 = !DILocation(line: 634, column: 34, scope: !465)
!471 = !DILocalVariable(name: "infomap", scope: !465, file: !466, line: 636, type: !472)
!472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 896, elements: !478)
!473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !474)
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !465, file: !466, line: 636, size: 128, elements: !475)
!475 = !{!476, !477}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !474, file: !466, line: 636, baseType: !49, size: 64)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !474, file: !466, line: 636, baseType: !49, size: 64, offset: 64)
!478 = !{!479}
!479 = !DISubrange(count: 7)
!480 = !DILocation(line: 636, column: 67, scope: !465)
!481 = !DILocalVariable(name: "node", scope: !465, file: !466, line: 646, type: !49)
!482 = !DILocation(line: 646, column: 15, scope: !465)
!483 = !DILocation(line: 646, column: 22, scope: !465)
!484 = !DILocalVariable(name: "map_prog", scope: !465, file: !466, line: 647, type: !485)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!486 = !DILocation(line: 647, column: 25, scope: !465)
!487 = !DILocation(line: 647, column: 36, scope: !465)
!488 = !DILocation(line: 649, column: 3, scope: !465)
!489 = !DILocation(line: 649, column: 10, scope: !465)
!490 = !DILocation(line: 649, column: 20, scope: !465)
!491 = !DILocation(line: 649, column: 28, scope: !465)
!492 = !DILocation(line: 649, column: 33, scope: !465)
!493 = !DILocation(line: 649, column: 31, scope: !465)
!494 = !DILocation(line: 0, scope: !465)
!495 = !DILocation(line: 650, column: 13, scope: !465)
!496 = distinct !{!496, !488, !495}
!497 = !DILocation(line: 652, column: 7, scope: !498)
!498 = distinct !DILexicalBlock(scope: !465, file: !466, line: 652, column: 7)
!499 = !DILocation(line: 652, column: 17, scope: !498)
!500 = !DILocation(line: 652, column: 7, scope: !465)
!501 = !DILocation(line: 653, column: 12, scope: !498)
!502 = !DILocation(line: 653, column: 22, scope: !498)
!503 = !DILocation(line: 653, column: 10, scope: !498)
!504 = !DILocation(line: 653, column: 5, scope: !498)
!505 = !DILocation(line: 655, column: 11, scope: !465)
!506 = !DILocation(line: 655, column: 3, scope: !465)
!507 = !DILocalVariable(name: "lc_messages", scope: !465, file: !466, line: 659, type: !49)
!508 = !DILocation(line: 659, column: 15, scope: !465)
!509 = !DILocation(line: 659, column: 29, scope: !465)
!510 = !DILocation(line: 660, column: 7, scope: !511)
!511 = distinct !DILexicalBlock(scope: !465, file: !466, line: 660, column: 7)
!512 = !DILocation(line: 660, column: 19, scope: !511)
!513 = !DILocation(line: 660, column: 22, scope: !511)
!514 = !DILocation(line: 660, column: 7, scope: !465)
!515 = !DILocation(line: 666, column: 7, scope: !516)
!516 = distinct !DILexicalBlock(scope: !511, file: !466, line: 661, column: 5)
!517 = !DILocation(line: 668, column: 5, scope: !516)
!518 = !DILocation(line: 669, column: 11, scope: !465)
!519 = !DILocation(line: 670, column: 24, scope: !465)
!520 = !DILocation(line: 669, column: 3, scope: !465)
!521 = !DILocation(line: 671, column: 11, scope: !465)
!522 = !DILocation(line: 672, column: 11, scope: !465)
!523 = !DILocation(line: 672, column: 17, scope: !465)
!524 = !DILocation(line: 672, column: 25, scope: !465)
!525 = !DILocation(line: 672, column: 22, scope: !465)
!526 = !DILocation(line: 671, column: 3, scope: !465)
!527 = !DILocation(line: 673, column: 1, scope: !465)
!528 = !DILocalVariable(name: "program", arg: 1, scope: !529, file: !466, line: 634, type: !49)
!529 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !466, file: !466, line: 634, type: !467, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !530, retainedNodes: !4)
!530 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !531, nameTableKind: None)
!531 = !{!532, !534, !536, !538, !540, !542, !544, !546, !548, !550, !552, !554, !556, !558, !560, !562, !564, !566, !576, !579, !608, !610, !613, !615, !620, !625, !627}
!532 = !DIGlobalVariableExpression(var: !533, expr: !DIExpression())
!533 = distinct !DIGlobalVariable(name: "do_lookup", scope: !530, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!534 = !DIGlobalVariableExpression(var: !535, expr: !DIExpression())
!535 = distinct !DIGlobalVariable(name: "short_list", scope: !530, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!536 = !DIGlobalVariableExpression(var: !537, expr: !DIExpression())
!537 = distinct !DIGlobalVariable(name: "short_output", scope: !530, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!538 = !DIGlobalVariableExpression(var: !539, expr: !DIExpression())
!539 = distinct !DIGlobalVariable(name: "include_idle", scope: !530, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!540 = !DIGlobalVariableExpression(var: !541, expr: !DIExpression())
!541 = distinct !DIGlobalVariable(name: "include_heading", scope: !530, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!542 = !DIGlobalVariableExpression(var: !543, expr: !DIExpression())
!543 = distinct !DIGlobalVariable(name: "include_mesg", scope: !530, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!544 = !DIGlobalVariableExpression(var: !545, expr: !DIExpression())
!545 = distinct !DIGlobalVariable(name: "include_exit", scope: !530, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!546 = !DIGlobalVariableExpression(var: !547, expr: !DIExpression())
!547 = distinct !DIGlobalVariable(name: "need_boottime", scope: !530, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!548 = !DIGlobalVariableExpression(var: !549, expr: !DIExpression())
!549 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !530, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!550 = !DIGlobalVariableExpression(var: !551, expr: !DIExpression())
!551 = distinct !DIGlobalVariable(name: "need_login", scope: !530, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!552 = !DIGlobalVariableExpression(var: !553, expr: !DIExpression())
!553 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !530, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!554 = !DIGlobalVariableExpression(var: !555, expr: !DIExpression())
!555 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !530, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!556 = !DIGlobalVariableExpression(var: !557, expr: !DIExpression())
!557 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !530, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!558 = !DIGlobalVariableExpression(var: !559, expr: !DIExpression())
!559 = distinct !DIGlobalVariable(name: "need_users", scope: !530, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!560 = !DIGlobalVariableExpression(var: !561, expr: !DIExpression())
!561 = distinct !DIGlobalVariable(name: "my_line_only", scope: !530, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!562 = !DIGlobalVariableExpression(var: !563, expr: !DIExpression())
!563 = distinct !DIGlobalVariable(name: "time_format", scope: !530, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!564 = !DIGlobalVariableExpression(var: !565, expr: !DIExpression())
!565 = distinct !DIGlobalVariable(name: "time_format_width", scope: !530, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!566 = !DIGlobalVariableExpression(var: !567, expr: !DIExpression())
!567 = distinct !DIGlobalVariable(name: "longopts", scope: !530, file: !3, line: 162, type: !568, isLocal: true, isDefinition: true)
!568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 4608, elements: !151)
!569 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !570)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !571)
!571 = !{!572, !573, !574, !575}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !570, file: !144, line: 52, baseType: !49, size: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !570, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !570, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !570, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!576 = !DIGlobalVariableExpression(var: !577, expr: !DIExpression())
!577 = distinct !DIGlobalVariable(name: "mesg", scope: !578, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!578 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !530, retainedNodes: !4)
!579 = !DIGlobalVariableExpression(var: !580, expr: !DIExpression())
!580 = distinct !DIGlobalVariable(name: "hoststr", scope: !581, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!581 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !582, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !530, retainedNodes: !4)
!582 = !DISubroutineType(types: !583)
!583 = !{null, !584, !9}
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 64)
!585 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !586)
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !587)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !588)
!588 = !{!589, !590, !591, !592, !593, !594, !595, !600, !601, !606, !607}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !587, file: !72, line: 57, baseType: !14, size: 16)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !587, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !587, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !587, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !587, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !587, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !587, file: !72, line: 67, baseType: !596, size: 32, offset: 2656)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !597)
!597 = !{!598, !599}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !596, file: !72, line: 45, baseType: !14, size: 16)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !596, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !587, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !587, file: !72, line: 79, baseType: !602, size: 64, offset: 2720)
!602 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !587, file: !72, line: 75, size: 64, elements: !603)
!603 = !{!604, !605}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !602, file: !72, line: 77, baseType: !96, size: 32)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !602, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !587, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !587, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!608 = !DIGlobalVariableExpression(var: !609, expr: !DIExpression())
!609 = distinct !DIGlobalVariable(name: "hostlen", scope: !581, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!610 = !DIGlobalVariableExpression(var: !611, expr: !DIExpression())
!611 = distinct !DIGlobalVariable(name: "now", scope: !612, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!612 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !530, retainedNodes: !4)
!613 = !DIGlobalVariableExpression(var: !614, expr: !DIExpression())
!614 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !612, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!615 = !DIGlobalVariableExpression(var: !616, expr: !DIExpression())
!616 = distinct !DIGlobalVariable(name: "buf", scope: !617, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!617 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !618, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !530, retainedNodes: !4)
!618 = !DISubroutineType(types: !619)
!619 = !{!49, !584}
!620 = !DIGlobalVariableExpression(var: !621, expr: !DIExpression())
!621 = distinct !DIGlobalVariable(name: "runlevline", scope: !622, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!622 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !623, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !530, retainedNodes: !4)
!623 = !DISubroutineType(types: !624)
!624 = !{null, !584}
!625 = !DIGlobalVariableExpression(var: !626, expr: !DIExpression())
!626 = distinct !DIGlobalVariable(name: "comment", scope: !622, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!627 = !DIGlobalVariableExpression(var: !628, expr: !DIExpression())
!628 = distinct !DIGlobalVariable(name: "exitstr", scope: !629, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!629 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !623, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !530, retainedNodes: !4)
!630 = !DILocalVariable(name: "infomap", scope: !529, file: !466, line: 636, type: !631)
!631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !632, size: 896, elements: !478)
!632 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !633)
!633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !529, file: !466, line: 636, size: 128, elements: !634)
!634 = !{!635, !636}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !633, file: !466, line: 636, baseType: !49, size: 64)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !633, file: !466, line: 636, baseType: !49, size: 64, offset: 64)
!637 = !DILocalVariable(name: "node", scope: !529, file: !466, line: 646, type: !49)
!638 = !DILocalVariable(name: "map_prog", scope: !529, file: !466, line: 647, type: !639)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!640 = !DILocalVariable(name: "lc_messages", scope: !641, file: !466, line: 659, type: !49)
!641 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !466, file: !466, line: 634, type: !467, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !642, retainedNodes: !4)
!642 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !643, nameTableKind: None)
!643 = !{!644, !646, !648, !650, !652, !654, !656, !658, !660, !662, !664, !666, !668, !670, !672, !674, !676, !678, !688, !691, !720, !722, !725, !727, !732, !737, !739}
!644 = !DIGlobalVariableExpression(var: !645, expr: !DIExpression())
!645 = distinct !DIGlobalVariable(name: "do_lookup", scope: !642, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!646 = !DIGlobalVariableExpression(var: !647, expr: !DIExpression())
!647 = distinct !DIGlobalVariable(name: "short_list", scope: !642, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!648 = !DIGlobalVariableExpression(var: !649, expr: !DIExpression())
!649 = distinct !DIGlobalVariable(name: "short_output", scope: !642, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!650 = !DIGlobalVariableExpression(var: !651, expr: !DIExpression())
!651 = distinct !DIGlobalVariable(name: "include_idle", scope: !642, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!652 = !DIGlobalVariableExpression(var: !653, expr: !DIExpression())
!653 = distinct !DIGlobalVariable(name: "include_heading", scope: !642, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!654 = !DIGlobalVariableExpression(var: !655, expr: !DIExpression())
!655 = distinct !DIGlobalVariable(name: "include_mesg", scope: !642, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!656 = !DIGlobalVariableExpression(var: !657, expr: !DIExpression())
!657 = distinct !DIGlobalVariable(name: "include_exit", scope: !642, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!658 = !DIGlobalVariableExpression(var: !659, expr: !DIExpression())
!659 = distinct !DIGlobalVariable(name: "need_boottime", scope: !642, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!660 = !DIGlobalVariableExpression(var: !661, expr: !DIExpression())
!661 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !642, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!662 = !DIGlobalVariableExpression(var: !663, expr: !DIExpression())
!663 = distinct !DIGlobalVariable(name: "need_login", scope: !642, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!664 = !DIGlobalVariableExpression(var: !665, expr: !DIExpression())
!665 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !642, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!666 = !DIGlobalVariableExpression(var: !667, expr: !DIExpression())
!667 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !642, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!668 = !DIGlobalVariableExpression(var: !669, expr: !DIExpression())
!669 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !642, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!670 = !DIGlobalVariableExpression(var: !671, expr: !DIExpression())
!671 = distinct !DIGlobalVariable(name: "need_users", scope: !642, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!672 = !DIGlobalVariableExpression(var: !673, expr: !DIExpression())
!673 = distinct !DIGlobalVariable(name: "my_line_only", scope: !642, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!674 = !DIGlobalVariableExpression(var: !675, expr: !DIExpression())
!675 = distinct !DIGlobalVariable(name: "time_format", scope: !642, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!676 = !DIGlobalVariableExpression(var: !677, expr: !DIExpression())
!677 = distinct !DIGlobalVariable(name: "time_format_width", scope: !642, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!678 = !DIGlobalVariableExpression(var: !679, expr: !DIExpression())
!679 = distinct !DIGlobalVariable(name: "longopts", scope: !642, file: !3, line: 162, type: !680, isLocal: true, isDefinition: true)
!680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !681, size: 4608, elements: !151)
!681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !682)
!682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !683)
!683 = !{!684, !685, !686, !687}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !682, file: !144, line: 52, baseType: !49, size: 64)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !682, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !682, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !682, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!688 = !DIGlobalVariableExpression(var: !689, expr: !DIExpression())
!689 = distinct !DIGlobalVariable(name: "mesg", scope: !690, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!690 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !642, retainedNodes: !4)
!691 = !DIGlobalVariableExpression(var: !692, expr: !DIExpression())
!692 = distinct !DIGlobalVariable(name: "hoststr", scope: !693, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!693 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !694, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !642, retainedNodes: !4)
!694 = !DISubroutineType(types: !695)
!695 = !{null, !696, !9}
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !698)
!698 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !699)
!699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !700)
!700 = !{!701, !702, !703, !704, !705, !706, !707, !712, !713, !718, !719}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !699, file: !72, line: 57, baseType: !14, size: 16)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !699, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !699, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !699, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !699, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !699, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !699, file: !72, line: 67, baseType: !708, size: 32, offset: 2656)
!708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !709)
!709 = !{!710, !711}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !708, file: !72, line: 45, baseType: !14, size: 16)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !708, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !699, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !699, file: !72, line: 79, baseType: !714, size: 64, offset: 2720)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !699, file: !72, line: 75, size: 64, elements: !715)
!715 = !{!716, !717}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !714, file: !72, line: 77, baseType: !96, size: 32)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !714, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !699, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !699, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!720 = !DIGlobalVariableExpression(var: !721, expr: !DIExpression())
!721 = distinct !DIGlobalVariable(name: "hostlen", scope: !693, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!722 = !DIGlobalVariableExpression(var: !723, expr: !DIExpression())
!723 = distinct !DIGlobalVariable(name: "now", scope: !724, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!724 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !642, retainedNodes: !4)
!725 = !DIGlobalVariableExpression(var: !726, expr: !DIExpression())
!726 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !724, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!727 = !DIGlobalVariableExpression(var: !728, expr: !DIExpression())
!728 = distinct !DIGlobalVariable(name: "buf", scope: !729, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!729 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !730, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !642, retainedNodes: !4)
!730 = !DISubroutineType(types: !731)
!731 = !{!49, !696}
!732 = !DIGlobalVariableExpression(var: !733, expr: !DIExpression())
!733 = distinct !DIGlobalVariable(name: "runlevline", scope: !734, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!734 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !735, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !642, retainedNodes: !4)
!735 = !DISubroutineType(types: !736)
!736 = !{null, !696}
!737 = !DIGlobalVariableExpression(var: !738, expr: !DIExpression())
!738 = distinct !DIGlobalVariable(name: "comment", scope: !734, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!739 = !DIGlobalVariableExpression(var: !740, expr: !DIExpression())
!740 = distinct !DIGlobalVariable(name: "exitstr", scope: !741, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!741 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !735, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !642, retainedNodes: !4)
!742 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 688, type: !743, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!743 = !DISubroutineType(types: !744)
!744 = !{!53, !53, !745}
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!746 = !DILocalVariable(name: "argc", arg: 1, scope: !742, file: !3, line: 688, type: !53)
!747 = !DILocation(line: 688, column: 11, scope: !742)
!748 = !DILocalVariable(name: "argv", arg: 2, scope: !742, file: !3, line: 688, type: !745)
!749 = !DILocation(line: 688, column: 24, scope: !742)
!750 = !DILocalVariable(name: "optc", scope: !742, file: !3, line: 690, type: !53)
!751 = !DILocation(line: 690, column: 7, scope: !742)
!752 = !DILocalVariable(name: "assumptions", scope: !742, file: !3, line: 691, type: !18)
!753 = !DILocation(line: 691, column: 8, scope: !742)
!754 = !DILocation(line: 694, column: 21, scope: !742)
!755 = !DILocation(line: 694, column: 3, scope: !742)
!756 = !DILocation(line: 695, column: 3, scope: !742)
!757 = !DILocation(line: 696, column: 3, scope: !742)
!758 = !DILocation(line: 697, column: 3, scope: !742)
!759 = !DILocation(line: 699, column: 3, scope: !742)
!760 = !DILocation(line: 701, column: 3, scope: !742)
!761 = !DILocation(line: 701, column: 31, scope: !742)
!762 = !DILocation(line: 701, column: 37, scope: !742)
!763 = !DILocation(line: 701, column: 18, scope: !742)
!764 = !DILocation(line: 701, column: 16, scope: !742)
!765 = !DILocation(line: 702, column: 10, scope: !742)
!766 = !DILocation(line: 704, column: 15, scope: !767)
!767 = distinct !DILexicalBlock(scope: !742, file: !3, line: 703, column: 5)
!768 = !DILocation(line: 704, column: 7, scope: !767)
!769 = !DILocation(line: 707, column: 25, scope: !770)
!770 = distinct !DILexicalBlock(scope: !767, file: !3, line: 705, column: 9)
!771 = !DILocation(line: 708, column: 26, scope: !770)
!772 = !DILocation(line: 709, column: 22, scope: !770)
!773 = !DILocation(line: 710, column: 26, scope: !770)
!774 = !DILocation(line: 711, column: 25, scope: !770)
!775 = !DILocation(line: 712, column: 28, scope: !770)
!776 = !DILocation(line: 713, column: 22, scope: !770)
!777 = !DILocation(line: 714, column: 24, scope: !770)
!778 = !DILocation(line: 715, column: 24, scope: !770)
!779 = !DILocation(line: 716, column: 24, scope: !770)
!780 = !DILocation(line: 717, column: 23, scope: !770)
!781 = !DILocation(line: 718, column: 11, scope: !770)
!782 = !DILocation(line: 721, column: 25, scope: !770)
!783 = !DILocation(line: 722, column: 23, scope: !770)
!784 = !DILocation(line: 723, column: 11, scope: !770)
!785 = !DILocation(line: 726, column: 26, scope: !770)
!786 = !DILocation(line: 727, column: 24, scope: !770)
!787 = !DILocation(line: 728, column: 24, scope: !770)
!788 = !DILocation(line: 729, column: 23, scope: !770)
!789 = !DILocation(line: 730, column: 11, scope: !770)
!790 = !DILocation(line: 733, column: 27, scope: !770)
!791 = !DILocation(line: 734, column: 11, scope: !770)
!792 = !DILocation(line: 737, column: 22, scope: !770)
!793 = !DILocation(line: 738, column: 24, scope: !770)
!794 = !DILocation(line: 739, column: 23, scope: !770)
!795 = !DILocation(line: 740, column: 11, scope: !770)
!796 = !DILocation(line: 743, column: 24, scope: !770)
!797 = !DILocation(line: 744, column: 11, scope: !770)
!798 = !DILocation(line: 747, column: 26, scope: !770)
!799 = !DILocation(line: 748, column: 23, scope: !770)
!800 = !DILocation(line: 749, column: 11, scope: !770)
!801 = !DILocation(line: 752, column: 22, scope: !770)
!802 = !DILocation(line: 753, column: 11, scope: !770)
!803 = !DILocation(line: 756, column: 25, scope: !770)
!804 = !DILocation(line: 757, column: 24, scope: !770)
!805 = !DILocation(line: 758, column: 23, scope: !770)
!806 = !DILocation(line: 759, column: 11, scope: !770)
!807 = !DILocation(line: 762, column: 24, scope: !770)
!808 = !DILocation(line: 763, column: 11, scope: !770)
!809 = !DILocation(line: 766, column: 28, scope: !770)
!810 = !DILocation(line: 767, column: 23, scope: !770)
!811 = !DILocation(line: 768, column: 11, scope: !770)
!812 = !DILocation(line: 772, column: 24, scope: !770)
!813 = !DILocation(line: 773, column: 11, scope: !770)
!814 = !DILocation(line: 776, column: 22, scope: !770)
!815 = !DILocation(line: 777, column: 24, scope: !770)
!816 = !DILocation(line: 778, column: 23, scope: !770)
!817 = !DILocation(line: 779, column: 11, scope: !770)
!818 = !DILocation(line: 782, column: 21, scope: !770)
!819 = !DILocation(line: 783, column: 11, scope: !770)
!820 = !DILocation(line: 785, column: 9, scope: !770)
!821 = !DILocation(line: 787, column: 9, scope: !770)
!822 = !DILocation(line: 790, column: 11, scope: !770)
!823 = distinct !{!823, !760, !824}
!824 = !DILocation(line: 792, column: 5, scope: !742)
!825 = !DILocation(line: 794, column: 7, scope: !826)
!826 = distinct !DILexicalBlock(scope: !742, file: !3, line: 794, column: 7)
!827 = !DILocation(line: 794, column: 7, scope: !742)
!828 = !DILocation(line: 796, column: 18, scope: !829)
!829 = distinct !DILexicalBlock(scope: !826, file: !3, line: 795, column: 5)
!830 = !DILocation(line: 797, column: 20, scope: !829)
!831 = !DILocation(line: 798, column: 5, scope: !829)
!832 = !DILocation(line: 800, column: 7, scope: !833)
!833 = distinct !DILexicalBlock(scope: !742, file: !3, line: 800, column: 7)
!834 = !DILocation(line: 800, column: 7, scope: !742)
!835 = !DILocation(line: 802, column: 20, scope: !836)
!836 = distinct !DILexicalBlock(scope: !833, file: !3, line: 801, column: 5)
!837 = !DILocation(line: 803, column: 5, scope: !836)
!838 = !DILocation(line: 805, column: 7, scope: !839)
!839 = distinct !DILexicalBlock(scope: !742, file: !3, line: 805, column: 7)
!840 = !DILocation(line: 805, column: 7, scope: !742)
!841 = !DILocation(line: 807, column: 19, scope: !842)
!842 = distinct !DILexicalBlock(scope: !839, file: !3, line: 806, column: 5)
!843 = !DILocation(line: 808, column: 25, scope: !842)
!844 = !DILocation(line: 809, column: 5, scope: !842)
!845 = !DILocation(line: 812, column: 19, scope: !846)
!846 = distinct !DILexicalBlock(scope: !839, file: !3, line: 811, column: 5)
!847 = !DILocation(line: 813, column: 25, scope: !846)
!848 = !DILocation(line: 816, column: 11, scope: !742)
!849 = !DILocation(line: 816, column: 18, scope: !742)
!850 = !DILocation(line: 816, column: 16, scope: !742)
!851 = !DILocation(line: 816, column: 3, scope: !742)
!852 = !DILocation(line: 819, column: 20, scope: !853)
!853 = distinct !DILexicalBlock(scope: !742, file: !3, line: 817, column: 5)
!854 = !DILocation(line: 820, column: 7, scope: !853)
!855 = !DILocation(line: 823, column: 7, scope: !853)
!856 = !DILocation(line: 824, column: 7, scope: !853)
!857 = !DILocation(line: 827, column: 12, scope: !853)
!858 = !DILocation(line: 827, column: 17, scope: !853)
!859 = !DILocation(line: 827, column: 7, scope: !853)
!860 = !DILocation(line: 828, column: 7, scope: !853)
!861 = !DILocation(line: 831, column: 20, scope: !853)
!862 = !DILocation(line: 831, column: 50, scope: !853)
!863 = !DILocation(line: 831, column: 55, scope: !853)
!864 = !DILocation(line: 831, column: 62, scope: !853)
!865 = !DILocation(line: 831, column: 43, scope: !853)
!866 = !DILocation(line: 831, column: 7, scope: !853)
!867 = !DILocation(line: 832, column: 7, scope: !853)
!868 = !DILocation(line: 835, column: 3, scope: !742)
!869 = !DILocalVariable(name: "argc", arg: 1, scope: !870, file: !3, line: 688, type: !53)
!870 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 688, type: !743, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !871, retainedNodes: !4)
!871 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !872, nameTableKind: None)
!872 = !{!873, !875, !877, !879, !881, !883, !885, !887, !889, !891, !893, !895, !897, !899, !901, !903, !905, !907, !917, !920, !949, !951, !954, !956, !961, !966, !968}
!873 = !DIGlobalVariableExpression(var: !874, expr: !DIExpression())
!874 = distinct !DIGlobalVariable(name: "do_lookup", scope: !871, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!875 = !DIGlobalVariableExpression(var: !876, expr: !DIExpression())
!876 = distinct !DIGlobalVariable(name: "short_list", scope: !871, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!877 = !DIGlobalVariableExpression(var: !878, expr: !DIExpression())
!878 = distinct !DIGlobalVariable(name: "short_output", scope: !871, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!879 = !DIGlobalVariableExpression(var: !880, expr: !DIExpression())
!880 = distinct !DIGlobalVariable(name: "include_idle", scope: !871, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!881 = !DIGlobalVariableExpression(var: !882, expr: !DIExpression())
!882 = distinct !DIGlobalVariable(name: "include_heading", scope: !871, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "include_mesg", scope: !871, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!885 = !DIGlobalVariableExpression(var: !886, expr: !DIExpression())
!886 = distinct !DIGlobalVariable(name: "include_exit", scope: !871, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!887 = !DIGlobalVariableExpression(var: !888, expr: !DIExpression())
!888 = distinct !DIGlobalVariable(name: "need_boottime", scope: !871, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!889 = !DIGlobalVariableExpression(var: !890, expr: !DIExpression())
!890 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !871, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!891 = !DIGlobalVariableExpression(var: !892, expr: !DIExpression())
!892 = distinct !DIGlobalVariable(name: "need_login", scope: !871, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!893 = !DIGlobalVariableExpression(var: !894, expr: !DIExpression())
!894 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !871, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!895 = !DIGlobalVariableExpression(var: !896, expr: !DIExpression())
!896 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !871, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!897 = !DIGlobalVariableExpression(var: !898, expr: !DIExpression())
!898 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !871, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!899 = !DIGlobalVariableExpression(var: !900, expr: !DIExpression())
!900 = distinct !DIGlobalVariable(name: "need_users", scope: !871, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "my_line_only", scope: !871, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!903 = !DIGlobalVariableExpression(var: !904, expr: !DIExpression())
!904 = distinct !DIGlobalVariable(name: "time_format", scope: !871, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!905 = !DIGlobalVariableExpression(var: !906, expr: !DIExpression())
!906 = distinct !DIGlobalVariable(name: "time_format_width", scope: !871, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "longopts", scope: !871, file: !3, line: 162, type: !909, isLocal: true, isDefinition: true)
!909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !910, size: 4608, elements: !151)
!910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !911)
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !912)
!912 = !{!913, !914, !915, !916}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !911, file: !144, line: 52, baseType: !49, size: 64)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !911, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !911, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !911, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!917 = !DIGlobalVariableExpression(var: !918, expr: !DIExpression())
!918 = distinct !DIGlobalVariable(name: "mesg", scope: !919, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!919 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !871, retainedNodes: !4)
!920 = !DIGlobalVariableExpression(var: !921, expr: !DIExpression())
!921 = distinct !DIGlobalVariable(name: "hoststr", scope: !922, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!922 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !923, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !871, retainedNodes: !4)
!923 = !DISubroutineType(types: !924)
!924 = !{null, !925, !9}
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !927)
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !928)
!928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !929)
!929 = !{!930, !931, !932, !933, !934, !935, !936, !941, !942, !947, !948}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !928, file: !72, line: 57, baseType: !14, size: 16)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !928, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !928, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !928, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !928, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !928, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !928, file: !72, line: 67, baseType: !937, size: 32, offset: 2656)
!937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !938)
!938 = !{!939, !940}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !937, file: !72, line: 45, baseType: !14, size: 16)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !937, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !928, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !928, file: !72, line: 79, baseType: !943, size: 64, offset: 2720)
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !928, file: !72, line: 75, size: 64, elements: !944)
!944 = !{!945, !946}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !943, file: !72, line: 77, baseType: !96, size: 32)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !943, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !928, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !928, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!949 = !DIGlobalVariableExpression(var: !950, expr: !DIExpression())
!950 = distinct !DIGlobalVariable(name: "hostlen", scope: !922, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!951 = !DIGlobalVariableExpression(var: !952, expr: !DIExpression())
!952 = distinct !DIGlobalVariable(name: "now", scope: !953, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!953 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !871, retainedNodes: !4)
!954 = !DIGlobalVariableExpression(var: !955, expr: !DIExpression())
!955 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !953, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!956 = !DIGlobalVariableExpression(var: !957, expr: !DIExpression())
!957 = distinct !DIGlobalVariable(name: "buf", scope: !958, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!958 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !959, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !871, retainedNodes: !4)
!959 = !DISubroutineType(types: !960)
!960 = !{!49, !925}
!961 = !DIGlobalVariableExpression(var: !962, expr: !DIExpression())
!962 = distinct !DIGlobalVariable(name: "runlevline", scope: !963, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!963 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !964, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !871, retainedNodes: !4)
!964 = !DISubroutineType(types: !965)
!965 = !{null, !925}
!966 = !DIGlobalVariableExpression(var: !967, expr: !DIExpression())
!967 = distinct !DIGlobalVariable(name: "comment", scope: !963, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!968 = !DIGlobalVariableExpression(var: !969, expr: !DIExpression())
!969 = distinct !DIGlobalVariable(name: "exitstr", scope: !970, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!970 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !964, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !871, retainedNodes: !4)
!971 = !DILocalVariable(name: "argv", arg: 2, scope: !870, file: !3, line: 688, type: !745)
!972 = !DILocalVariable(name: "optc", scope: !870, file: !3, line: 690, type: !53)
!973 = !DILocalVariable(name: "assumptions", scope: !870, file: !3, line: 691, type: !18)
!974 = distinct !DISubprogram(name: "who", scope: !3, file: !3, line: 621, type: !975, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!975 = !DISubroutineType(types: !976)
!976 = !{null, !49, !53}
!977 = !DILocalVariable(name: "filename", arg: 1, scope: !974, file: !3, line: 621, type: !49)
!978 = !DILocation(line: 621, column: 18, scope: !974)
!979 = !DILocalVariable(name: "options", arg: 2, scope: !974, file: !3, line: 621, type: !53)
!980 = !DILocation(line: 621, column: 32, scope: !974)
!981 = !DILocalVariable(name: "n_users", scope: !974, file: !3, line: 623, type: !110)
!982 = !DILocation(line: 623, column: 10, scope: !974)
!983 = !DILocalVariable(name: "utmp_buf", scope: !974, file: !3, line: 624, type: !984)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 64)
!985 = !DILocation(line: 624, column: 16, scope: !974)
!986 = !DILocation(line: 626, column: 18, scope: !987)
!987 = distinct !DILexicalBlock(scope: !974, file: !3, line: 626, column: 7)
!988 = !DILocation(line: 626, column: 49, scope: !987)
!989 = !DILocation(line: 626, column: 7, scope: !987)
!990 = !DILocation(line: 626, column: 58, scope: !987)
!991 = !DILocation(line: 626, column: 7, scope: !974)
!992 = !DILocation(line: 627, column: 5, scope: !987)
!993 = !DILocation(line: 629, column: 7, scope: !994)
!994 = distinct !DILexicalBlock(scope: !974, file: !3, line: 629, column: 7)
!995 = !DILocation(line: 629, column: 7, scope: !974)
!996 = !DILocation(line: 630, column: 23, scope: !994)
!997 = !DILocation(line: 630, column: 32, scope: !994)
!998 = !DILocation(line: 630, column: 5, scope: !994)
!999 = !DILocation(line: 632, column: 19, scope: !994)
!1000 = !DILocation(line: 632, column: 28, scope: !994)
!1001 = !DILocation(line: 632, column: 5, scope: !994)
!1002 = !DILocation(line: 634, column: 9, scope: !974)
!1003 = !DILocation(line: 634, column: 3, scope: !974)
!1004 = !DILocation(line: 635, column: 1, scope: !974)
!1005 = distinct !DISubprogram(name: "list_entries_who", scope: !3, file: !3, line: 537, type: !1006, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{null, !110, !67}
!1008 = !DILocalVariable(name: "n", arg: 1, scope: !1005, file: !3, line: 537, type: !110)
!1009 = !DILocation(line: 537, column: 26, scope: !1005)
!1010 = !DILocalVariable(name: "utmp_buf", arg: 2, scope: !1005, file: !3, line: 537, type: !67)
!1011 = !DILocation(line: 537, column: 48, scope: !1005)
!1012 = !DILocalVariable(name: "entries", scope: !1005, file: !3, line: 539, type: !112)
!1013 = !DILocation(line: 539, column: 21, scope: !1005)
!1014 = !DILocalVariable(name: "separator", scope: !1005, file: !3, line: 540, type: !49)
!1015 = !DILocation(line: 540, column: 15, scope: !1005)
!1016 = !DILocation(line: 542, column: 3, scope: !1005)
!1017 = !DILocation(line: 542, column: 11, scope: !1005)
!1018 = !DILocation(line: 544, column: 11, scope: !1019)
!1019 = distinct !DILexicalBlock(scope: !1020, file: !3, line: 544, column: 11)
!1020 = distinct !DILexicalBlock(scope: !1005, file: !3, line: 543, column: 5)
!1021 = !DILocation(line: 544, column: 11, scope: !1020)
!1022 = !DILocalVariable(name: "trimmed_name", scope: !1023, file: !3, line: 546, type: !6)
!1023 = distinct !DILexicalBlock(scope: !1019, file: !3, line: 545, column: 9)
!1024 = !DILocation(line: 546, column: 17, scope: !1023)
!1025 = !DILocation(line: 548, column: 48, scope: !1023)
!1026 = !DILocation(line: 548, column: 26, scope: !1023)
!1027 = !DILocation(line: 548, column: 24, scope: !1023)
!1028 = !DILocation(line: 550, column: 27, scope: !1023)
!1029 = !DILocation(line: 550, column: 38, scope: !1023)
!1030 = !DILocation(line: 550, column: 11, scope: !1023)
!1031 = !DILocation(line: 551, column: 17, scope: !1023)
!1032 = !DILocation(line: 551, column: 11, scope: !1023)
!1033 = !DILocation(line: 552, column: 21, scope: !1023)
!1034 = !DILocation(line: 553, column: 18, scope: !1023)
!1035 = !DILocation(line: 554, column: 9, scope: !1023)
!1036 = !DILocation(line: 555, column: 15, scope: !1020)
!1037 = distinct !{!1037, !1016, !1038}
!1038 = !DILocation(line: 556, column: 5, scope: !1005)
!1039 = !DILocation(line: 557, column: 11, scope: !1005)
!1040 = !DILocation(line: 557, column: 33, scope: !1005)
!1041 = !DILocation(line: 557, column: 3, scope: !1005)
!1042 = !DILocation(line: 558, column: 1, scope: !1005)
!1043 = !DILocalVariable(name: "n", arg: 1, scope: !1044, file: !3, line: 537, type: !110)
!1044 = distinct !DISubprogram(name: "list_entries_who", scope: !3, file: !3, line: 537, type: !1045, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1071, retainedNodes: !4)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{null, !110, !1047}
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1049)
!1049 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1050)
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1051)
!1051 = !{!1052, !1053, !1054, !1055, !1056, !1057, !1058, !1063, !1064, !1069, !1070}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1050, file: !72, line: 57, baseType: !14, size: 16)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1050, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1050, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1050, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1050, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1050, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1050, file: !72, line: 67, baseType: !1059, size: 32, offset: 2656)
!1059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !1060)
!1060 = !{!1061, !1062}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !1059, file: !72, line: 45, baseType: !14, size: 16)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !1059, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1050, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1050, file: !72, line: 79, baseType: !1065, size: 64, offset: 2720)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1050, file: !72, line: 75, size: 64, elements: !1066)
!1066 = !{!1067, !1068}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1065, file: !72, line: 77, baseType: !96, size: 32)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1065, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1050, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1050, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!1071 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1072, nameTableKind: None)
!1072 = !{!1073, !1075, !1077, !1079, !1081, !1083, !1085, !1087, !1089, !1091, !1093, !1095, !1097, !1099, !1101, !1103, !1105, !1107, !1117, !1120, !1125, !1127, !1130, !1132, !1137, !1142, !1144}
!1073 = !DIGlobalVariableExpression(var: !1074, expr: !DIExpression())
!1074 = distinct !DIGlobalVariable(name: "do_lookup", scope: !1071, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!1075 = !DIGlobalVariableExpression(var: !1076, expr: !DIExpression())
!1076 = distinct !DIGlobalVariable(name: "short_list", scope: !1071, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!1077 = !DIGlobalVariableExpression(var: !1078, expr: !DIExpression())
!1078 = distinct !DIGlobalVariable(name: "short_output", scope: !1071, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!1079 = !DIGlobalVariableExpression(var: !1080, expr: !DIExpression())
!1080 = distinct !DIGlobalVariable(name: "include_idle", scope: !1071, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!1081 = !DIGlobalVariableExpression(var: !1082, expr: !DIExpression())
!1082 = distinct !DIGlobalVariable(name: "include_heading", scope: !1071, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!1083 = !DIGlobalVariableExpression(var: !1084, expr: !DIExpression())
!1084 = distinct !DIGlobalVariable(name: "include_mesg", scope: !1071, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!1085 = !DIGlobalVariableExpression(var: !1086, expr: !DIExpression())
!1086 = distinct !DIGlobalVariable(name: "include_exit", scope: !1071, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!1087 = !DIGlobalVariableExpression(var: !1088, expr: !DIExpression())
!1088 = distinct !DIGlobalVariable(name: "need_boottime", scope: !1071, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!1089 = !DIGlobalVariableExpression(var: !1090, expr: !DIExpression())
!1090 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !1071, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!1091 = !DIGlobalVariableExpression(var: !1092, expr: !DIExpression())
!1092 = distinct !DIGlobalVariable(name: "need_login", scope: !1071, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!1093 = !DIGlobalVariableExpression(var: !1094, expr: !DIExpression())
!1094 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !1071, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!1095 = !DIGlobalVariableExpression(var: !1096, expr: !DIExpression())
!1096 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !1071, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!1097 = !DIGlobalVariableExpression(var: !1098, expr: !DIExpression())
!1098 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !1071, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!1099 = !DIGlobalVariableExpression(var: !1100, expr: !DIExpression())
!1100 = distinct !DIGlobalVariable(name: "need_users", scope: !1071, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!1101 = !DIGlobalVariableExpression(var: !1102, expr: !DIExpression())
!1102 = distinct !DIGlobalVariable(name: "my_line_only", scope: !1071, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!1103 = !DIGlobalVariableExpression(var: !1104, expr: !DIExpression())
!1104 = distinct !DIGlobalVariable(name: "time_format", scope: !1071, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!1105 = !DIGlobalVariableExpression(var: !1106, expr: !DIExpression())
!1106 = distinct !DIGlobalVariable(name: "time_format_width", scope: !1071, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!1107 = !DIGlobalVariableExpression(var: !1108, expr: !DIExpression())
!1108 = distinct !DIGlobalVariable(name: "longopts", scope: !1071, file: !3, line: 162, type: !1109, isLocal: true, isDefinition: true)
!1109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1110, size: 4608, elements: !151)
!1110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1111)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !1112)
!1112 = !{!1113, !1114, !1115, !1116}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1111, file: !144, line: 52, baseType: !49, size: 64)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1111, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1111, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1111, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!1117 = !DIGlobalVariableExpression(var: !1118, expr: !DIExpression())
!1118 = distinct !DIGlobalVariable(name: "mesg", scope: !1119, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!1119 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1071, retainedNodes: !4)
!1120 = !DIGlobalVariableExpression(var: !1121, expr: !DIExpression())
!1121 = distinct !DIGlobalVariable(name: "hoststr", scope: !1122, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!1122 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !1123, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1071, retainedNodes: !4)
!1123 = !DISubroutineType(types: !1124)
!1124 = !{null, !1047, !9}
!1125 = !DIGlobalVariableExpression(var: !1126, expr: !DIExpression())
!1126 = distinct !DIGlobalVariable(name: "hostlen", scope: !1122, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!1127 = !DIGlobalVariableExpression(var: !1128, expr: !DIExpression())
!1128 = distinct !DIGlobalVariable(name: "now", scope: !1129, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!1129 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1071, retainedNodes: !4)
!1130 = !DIGlobalVariableExpression(var: !1131, expr: !DIExpression())
!1131 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !1129, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!1132 = !DIGlobalVariableExpression(var: !1133, expr: !DIExpression())
!1133 = distinct !DIGlobalVariable(name: "buf", scope: !1134, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!1134 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !1135, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1071, retainedNodes: !4)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{!49, !1047}
!1137 = !DIGlobalVariableExpression(var: !1138, expr: !DIExpression())
!1138 = distinct !DIGlobalVariable(name: "runlevline", scope: !1139, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1139 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !1140, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1071, retainedNodes: !4)
!1140 = !DISubroutineType(types: !1141)
!1141 = !{null, !1047}
!1142 = !DIGlobalVariableExpression(var: !1143, expr: !DIExpression())
!1143 = distinct !DIGlobalVariable(name: "comment", scope: !1139, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1144 = !DIGlobalVariableExpression(var: !1145, expr: !DIExpression())
!1145 = distinct !DIGlobalVariable(name: "exitstr", scope: !1146, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!1146 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !1140, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1071, retainedNodes: !4)
!1147 = !DILocalVariable(name: "utmp_buf", arg: 2, scope: !1044, file: !3, line: 537, type: !1047)
!1148 = !DILocalVariable(name: "entries", scope: !1044, file: !3, line: 539, type: !112)
!1149 = !DILocalVariable(name: "separator", scope: !1044, file: !3, line: 540, type: !49)
!1150 = distinct !DISubprogram(name: "scan_entries", scope: !3, file: !3, line: 569, type: !1006, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1151 = !DILocalVariable(name: "n", arg: 1, scope: !1150, file: !3, line: 569, type: !110)
!1152 = !DILocation(line: 569, column: 22, scope: !1150)
!1153 = !DILocalVariable(name: "utmp_buf", arg: 2, scope: !1150, file: !3, line: 569, type: !67)
!1154 = !DILocation(line: 569, column: 44, scope: !1150)
!1155 = !DILocalVariable(name: "ttyname_b", scope: !1150, file: !3, line: 571, type: !6)
!1156 = !DILocation(line: 571, column: 9, scope: !1150)
!1157 = !DILocalVariable(name: "boottime", scope: !1150, file: !3, line: 572, type: !9)
!1158 = !DILocation(line: 572, column: 10, scope: !1150)
!1159 = !DILocation(line: 574, column: 7, scope: !1160)
!1160 = distinct !DILexicalBlock(scope: !1150, file: !3, line: 574, column: 7)
!1161 = !DILocation(line: 574, column: 7, scope: !1150)
!1162 = !DILocation(line: 575, column: 5, scope: !1160)
!1163 = !DILocation(line: 577, column: 7, scope: !1164)
!1164 = distinct !DILexicalBlock(scope: !1150, file: !3, line: 577, column: 7)
!1165 = !DILocation(line: 577, column: 7, scope: !1150)
!1166 = !DILocation(line: 579, column: 19, scope: !1167)
!1167 = distinct !DILexicalBlock(scope: !1164, file: !3, line: 578, column: 5)
!1168 = !DILocation(line: 579, column: 17, scope: !1167)
!1169 = !DILocation(line: 580, column: 12, scope: !1170)
!1170 = distinct !DILexicalBlock(scope: !1167, file: !3, line: 580, column: 11)
!1171 = !DILocation(line: 580, column: 11, scope: !1167)
!1172 = !DILocation(line: 581, column: 9, scope: !1170)
!1173 = !DILocation(line: 582, column: 11, scope: !1174)
!1174 = distinct !DILexicalBlock(scope: !1167, file: !3, line: 582, column: 11)
!1175 = !DILocation(line: 582, column: 64, scope: !1174)
!1176 = !DILocation(line: 583, column: 19, scope: !1174)
!1177 = !DILocation(line: 583, column: 9, scope: !1174)
!1178 = !DILocation(line: 584, column: 5, scope: !1167)
!1179 = !DILocation(line: 586, column: 3, scope: !1150)
!1180 = !DILocation(line: 586, column: 11, scope: !1150)
!1181 = !DILocation(line: 588, column: 12, scope: !1182)
!1182 = distinct !DILexicalBlock(scope: !1183, file: !3, line: 588, column: 11)
!1183 = distinct !DILexicalBlock(scope: !1150, file: !3, line: 587, column: 5)
!1184 = !DILocation(line: 589, column: 11, scope: !1182)
!1185 = !DILocation(line: 589, column: 14, scope: !1182)
!1186 = !DILocation(line: 588, column: 11, scope: !1183)
!1187 = !DILocation(line: 592, column: 15, scope: !1188)
!1188 = distinct !DILexicalBlock(scope: !1189, file: !3, line: 592, column: 15)
!1189 = distinct !DILexicalBlock(scope: !1182, file: !3, line: 591, column: 9)
!1190 = !DILocation(line: 592, column: 26, scope: !1188)
!1191 = !DILocation(line: 592, column: 29, scope: !1188)
!1192 = !DILocation(line: 592, column: 15, scope: !1189)
!1193 = !DILocation(line: 593, column: 25, scope: !1188)
!1194 = !DILocation(line: 593, column: 35, scope: !1188)
!1195 = !DILocation(line: 593, column: 13, scope: !1188)
!1196 = !DILocation(line: 594, column: 20, scope: !1197)
!1197 = distinct !DILexicalBlock(scope: !1188, file: !3, line: 594, column: 20)
!1198 = !DILocation(line: 594, column: 34, scope: !1197)
!1199 = !DILocation(line: 594, column: 37, scope: !1197)
!1200 = !DILocation(line: 594, column: 20, scope: !1188)
!1201 = !DILocation(line: 595, column: 29, scope: !1197)
!1202 = !DILocation(line: 595, column: 13, scope: !1197)
!1203 = !DILocation(line: 596, column: 20, scope: !1204)
!1204 = distinct !DILexicalBlock(scope: !1197, file: !3, line: 596, column: 20)
!1205 = !DILocation(line: 596, column: 34, scope: !1204)
!1206 = !DILocation(line: 596, column: 37, scope: !1204)
!1207 = !DILocation(line: 596, column: 20, scope: !1197)
!1208 = !DILocation(line: 597, column: 29, scope: !1204)
!1209 = !DILocation(line: 597, column: 13, scope: !1204)
!1210 = !DILocation(line: 601, column: 20, scope: !1211)
!1211 = distinct !DILexicalBlock(scope: !1204, file: !3, line: 601, column: 20)
!1212 = !DILocation(line: 601, column: 37, scope: !1211)
!1213 = !DILocation(line: 601, column: 40, scope: !1211)
!1214 = !DILocation(line: 601, column: 20, scope: !1204)
!1215 = !DILocation(line: 602, column: 32, scope: !1211)
!1216 = !DILocation(line: 602, column: 13, scope: !1211)
!1217 = !DILocation(line: 603, column: 20, scope: !1218)
!1218 = distinct !DILexicalBlock(scope: !1211, file: !3, line: 603, column: 20)
!1219 = !DILocation(line: 603, column: 35, scope: !1218)
!1220 = !DILocation(line: 603, column: 38, scope: !1218)
!1221 = !DILocation(line: 603, column: 20, scope: !1211)
!1222 = !DILocation(line: 604, column: 30, scope: !1218)
!1223 = !DILocation(line: 604, column: 13, scope: !1218)
!1224 = !DILocation(line: 605, column: 20, scope: !1225)
!1225 = distinct !DILexicalBlock(scope: !1218, file: !3, line: 605, column: 20)
!1226 = !DILocation(line: 605, column: 31, scope: !1225)
!1227 = !DILocation(line: 605, column: 34, scope: !1225)
!1228 = !DILocation(line: 605, column: 20, scope: !1218)
!1229 = !DILocation(line: 606, column: 26, scope: !1225)
!1230 = !DILocation(line: 606, column: 13, scope: !1225)
!1231 = !DILocation(line: 607, column: 20, scope: !1232)
!1232 = distinct !DILexicalBlock(scope: !1225, file: !3, line: 607, column: 20)
!1233 = !DILocation(line: 607, column: 35, scope: !1232)
!1234 = !DILocation(line: 607, column: 38, scope: !1232)
!1235 = !DILocation(line: 607, column: 20, scope: !1225)
!1236 = !DILocation(line: 608, column: 30, scope: !1232)
!1237 = !DILocation(line: 608, column: 13, scope: !1232)
!1238 = !DILocation(line: 609, column: 9, scope: !1189)
!1239 = !DILocation(line: 611, column: 11, scope: !1240)
!1240 = distinct !DILexicalBlock(scope: !1183, file: !3, line: 611, column: 11)
!1241 = !DILocation(line: 611, column: 11, scope: !1183)
!1242 = !DILocation(line: 612, column: 20, scope: !1240)
!1243 = !DILocation(line: 612, column: 18, scope: !1240)
!1244 = !DILocation(line: 612, column: 9, scope: !1240)
!1245 = !DILocation(line: 614, column: 15, scope: !1183)
!1246 = distinct !{!1246, !1179, !1247}
!1247 = !DILocation(line: 615, column: 5, scope: !1150)
!1248 = !DILocation(line: 616, column: 1, scope: !1150)
!1249 = !DILocalVariable(name: "n", arg: 1, scope: !1250, file: !3, line: 569, type: !110)
!1250 = distinct !DISubprogram(name: "scan_entries", scope: !3, file: !3, line: 569, type: !1251, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1277, retainedNodes: !4)
!1251 = !DISubroutineType(types: !1252)
!1252 = !{null, !110, !1253}
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!1254 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1255)
!1255 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1256)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1257)
!1257 = !{!1258, !1259, !1260, !1261, !1262, !1263, !1264, !1269, !1270, !1275, !1276}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1256, file: !72, line: 57, baseType: !14, size: 16)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1256, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1256, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1256, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1256, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1256, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1256, file: !72, line: 67, baseType: !1265, size: 32, offset: 2656)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !1266)
!1266 = !{!1267, !1268}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !1265, file: !72, line: 45, baseType: !14, size: 16)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !1265, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1256, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1256, file: !72, line: 79, baseType: !1271, size: 64, offset: 2720)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1256, file: !72, line: 75, size: 64, elements: !1272)
!1272 = !{!1273, !1274}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1271, file: !72, line: 77, baseType: !96, size: 32)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1271, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1256, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1256, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!1277 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1278, nameTableKind: None)
!1278 = !{!1279, !1281, !1283, !1285, !1287, !1289, !1291, !1293, !1295, !1297, !1299, !1301, !1303, !1305, !1307, !1309, !1311, !1313, !1323, !1326, !1331, !1333, !1336, !1338, !1343, !1348, !1350}
!1279 = !DIGlobalVariableExpression(var: !1280, expr: !DIExpression())
!1280 = distinct !DIGlobalVariable(name: "do_lookup", scope: !1277, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!1281 = !DIGlobalVariableExpression(var: !1282, expr: !DIExpression())
!1282 = distinct !DIGlobalVariable(name: "short_list", scope: !1277, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!1283 = !DIGlobalVariableExpression(var: !1284, expr: !DIExpression())
!1284 = distinct !DIGlobalVariable(name: "short_output", scope: !1277, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!1285 = !DIGlobalVariableExpression(var: !1286, expr: !DIExpression())
!1286 = distinct !DIGlobalVariable(name: "include_idle", scope: !1277, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!1287 = !DIGlobalVariableExpression(var: !1288, expr: !DIExpression())
!1288 = distinct !DIGlobalVariable(name: "include_heading", scope: !1277, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!1289 = !DIGlobalVariableExpression(var: !1290, expr: !DIExpression())
!1290 = distinct !DIGlobalVariable(name: "include_mesg", scope: !1277, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!1291 = !DIGlobalVariableExpression(var: !1292, expr: !DIExpression())
!1292 = distinct !DIGlobalVariable(name: "include_exit", scope: !1277, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!1293 = !DIGlobalVariableExpression(var: !1294, expr: !DIExpression())
!1294 = distinct !DIGlobalVariable(name: "need_boottime", scope: !1277, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!1295 = !DIGlobalVariableExpression(var: !1296, expr: !DIExpression())
!1296 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !1277, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!1297 = !DIGlobalVariableExpression(var: !1298, expr: !DIExpression())
!1298 = distinct !DIGlobalVariable(name: "need_login", scope: !1277, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !1277, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!1301 = !DIGlobalVariableExpression(var: !1302, expr: !DIExpression())
!1302 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !1277, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!1303 = !DIGlobalVariableExpression(var: !1304, expr: !DIExpression())
!1304 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !1277, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!1305 = !DIGlobalVariableExpression(var: !1306, expr: !DIExpression())
!1306 = distinct !DIGlobalVariable(name: "need_users", scope: !1277, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(name: "my_line_only", scope: !1277, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!1309 = !DIGlobalVariableExpression(var: !1310, expr: !DIExpression())
!1310 = distinct !DIGlobalVariable(name: "time_format", scope: !1277, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!1311 = !DIGlobalVariableExpression(var: !1312, expr: !DIExpression())
!1312 = distinct !DIGlobalVariable(name: "time_format_width", scope: !1277, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!1313 = !DIGlobalVariableExpression(var: !1314, expr: !DIExpression())
!1314 = distinct !DIGlobalVariable(name: "longopts", scope: !1277, file: !3, line: 162, type: !1315, isLocal: true, isDefinition: true)
!1315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1316, size: 4608, elements: !151)
!1316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1317)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !1318)
!1318 = !{!1319, !1320, !1321, !1322}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1317, file: !144, line: 52, baseType: !49, size: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1317, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1317, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1317, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!1323 = !DIGlobalVariableExpression(var: !1324, expr: !DIExpression())
!1324 = distinct !DIGlobalVariable(name: "mesg", scope: !1325, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!1325 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1277, retainedNodes: !4)
!1326 = !DIGlobalVariableExpression(var: !1327, expr: !DIExpression())
!1327 = distinct !DIGlobalVariable(name: "hoststr", scope: !1328, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!1328 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !1329, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1277, retainedNodes: !4)
!1329 = !DISubroutineType(types: !1330)
!1330 = !{null, !1253, !9}
!1331 = !DIGlobalVariableExpression(var: !1332, expr: !DIExpression())
!1332 = distinct !DIGlobalVariable(name: "hostlen", scope: !1328, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "now", scope: !1335, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!1335 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1277, retainedNodes: !4)
!1336 = !DIGlobalVariableExpression(var: !1337, expr: !DIExpression())
!1337 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !1335, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!1338 = !DIGlobalVariableExpression(var: !1339, expr: !DIExpression())
!1339 = distinct !DIGlobalVariable(name: "buf", scope: !1340, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!1340 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !1341, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1277, retainedNodes: !4)
!1341 = !DISubroutineType(types: !1342)
!1342 = !{!49, !1253}
!1343 = !DIGlobalVariableExpression(var: !1344, expr: !DIExpression())
!1344 = distinct !DIGlobalVariable(name: "runlevline", scope: !1345, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1345 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !1346, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1277, retainedNodes: !4)
!1346 = !DISubroutineType(types: !1347)
!1347 = !{null, !1253}
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "comment", scope: !1345, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "exitstr", scope: !1352, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!1352 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !1346, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1277, retainedNodes: !4)
!1353 = !DILocalVariable(name: "utmp_buf", arg: 2, scope: !1250, file: !3, line: 569, type: !1253)
!1354 = !DILocalVariable(name: "ttyname_b", scope: !1250, file: !3, line: 571, type: !6)
!1355 = !DILocalVariable(name: "boottime", scope: !1250, file: !3, line: 572, type: !9)
!1356 = distinct !DISubprogram(name: "print_heading", scope: !3, file: !3, line: 561, type: !1357, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1357 = !DISubroutineType(types: !1358)
!1358 = !{null}
!1359 = !DILocation(line: 563, column: 19, scope: !1356)
!1360 = !DILocation(line: 563, column: 39, scope: !1356)
!1361 = !DILocation(line: 563, column: 50, scope: !1356)
!1362 = !DILocation(line: 563, column: 61, scope: !1356)
!1363 = !DILocation(line: 564, column: 15, scope: !1356)
!1364 = !DILocation(line: 564, column: 25, scope: !1356)
!1365 = !DILocation(line: 564, column: 39, scope: !1356)
!1366 = !DILocation(line: 563, column: 3, scope: !1356)
!1367 = !DILocation(line: 565, column: 1, scope: !1356)
!1368 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !64, file: !3, line: 333, type: !67)
!1369 = !DILocation(line: 333, column: 32, scope: !64)
!1370 = !DILocalVariable(name: "boottime", arg: 2, scope: !64, file: !3, line: 333, type: !9)
!1371 = !DILocation(line: 333, column: 49, scope: !64)
!1372 = !DILocalVariable(name: "stats", scope: !64, file: !3, line: 335, type: !1373)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !1374, line: 46, size: 1152, elements: !1375)
!1374 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!1375 = !{!1376, !1378, !1380, !1382, !1384, !1386, !1388, !1389, !1390, !1392, !1394, !1396, !1403, !1404, !1405}
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1373, file: !1374, line: 48, baseType: !1377, size: 64)
!1377 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !12, line: 145, baseType: !112)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1373, file: !1374, line: 53, baseType: !1379, size: 64, offset: 64)
!1379 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !12, line: 148, baseType: !112)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1373, file: !1374, line: 61, baseType: !1381, size: 64, offset: 128)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !12, line: 151, baseType: !112)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1373, file: !1374, line: 62, baseType: !1383, size: 32, offset: 192)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !12, line: 150, baseType: !180)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1373, file: !1374, line: 64, baseType: !1385, size: 32, offset: 224)
!1385 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !12, line: 146, baseType: !180)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1373, file: !1374, line: 65, baseType: !1387, size: 32, offset: 256)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !12, line: 147, baseType: !180)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1373, file: !1374, line: 67, baseType: !53, size: 32, offset: 288)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1373, file: !1374, line: 69, baseType: !1377, size: 64, offset: 320)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1373, file: !1374, line: 74, baseType: !1391, size: 64, offset: 384)
!1391 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !12, line: 152, baseType: !13)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1373, file: !1374, line: 78, baseType: !1393, size: 64, offset: 448)
!1393 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !12, line: 174, baseType: !13)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1373, file: !1374, line: 80, baseType: !1395, size: 64, offset: 512)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !12, line: 179, baseType: !13)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1373, file: !1374, line: 91, baseType: !1397, size: 128, offset: 576)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !1398, line: 10, size: 128, elements: !1399)
!1398 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!1399 = !{!1400, !1401}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1397, file: !1398, line: 12, baseType: !11, size: 64)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1397, file: !1398, line: 16, baseType: !1402, size: 64, offset: 64)
!1402 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !12, line: 196, baseType: !13)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1373, file: !1374, line: 92, baseType: !1397, size: 128, offset: 704)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1373, file: !1374, line: 93, baseType: !1397, size: 128, offset: 832)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1373, file: !1374, line: 106, baseType: !1406, size: 192, offset: 960)
!1406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1402, size: 192, elements: !60)
!1407 = !DILocation(line: 335, column: 15, scope: !64)
!1408 = !DILocalVariable(name: "last_change", scope: !64, file: !3, line: 336, type: !9)
!1409 = !DILocation(line: 336, column: 10, scope: !64)
!1410 = !DILocalVariable(name: "mesg", scope: !64, file: !3, line: 337, type: !7)
!1411 = !DILocation(line: 337, column: 8, scope: !64)
!1412 = !DILocalVariable(name: "idlestr", scope: !64, file: !3, line: 338, type: !1413)
!1413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 56, elements: !478)
!1414 = !DILocation(line: 338, column: 8, scope: !64)
!1415 = !DILocalVariable(name: "line", scope: !64, file: !3, line: 347, type: !1416)
!1416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 304, elements: !1417)
!1417 = !{!1418}
!1418 = !DISubrange(count: 38)
!1419 = !DILocation(line: 347, column: 8, scope: !64)
!1420 = !DILocalVariable(name: "p", scope: !64, file: !3, line: 348, type: !6)
!1421 = !DILocation(line: 348, column: 9, scope: !64)
!1422 = !DILocation(line: 348, column: 13, scope: !64)
!1423 = !DILocalVariable(name: "pidstr", scope: !64, file: !3, line: 349, type: !1424)
!1424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 96, elements: !1425)
!1425 = !{!1426}
!1426 = !DISubrange(count: 12)
!1427 = !DILocation(line: 349, column: 3, scope: !64)
!1428 = !DILocation(line: 354, column: 10, scope: !1429)
!1429 = distinct !DILexicalBlock(scope: !64, file: !3, line: 354, column: 8)
!1430 = !DILocation(line: 354, column: 8, scope: !64)
!1431 = !DILocation(line: 355, column: 17, scope: !1429)
!1432 = !DILocation(line: 355, column: 9, scope: !1429)
!1433 = !DILocation(line: 355, column: 7, scope: !1429)
!1434 = !DILocation(line: 355, column: 5, scope: !1429)
!1435 = !DILocation(line: 356, column: 12, scope: !64)
!1436 = !DILocation(line: 356, column: 15, scope: !64)
!1437 = !DILocation(line: 356, column: 25, scope: !64)
!1438 = !DILocation(line: 356, column: 3, scope: !64)
!1439 = !DILocation(line: 358, column: 13, scope: !1440)
!1440 = distinct !DILexicalBlock(scope: !64, file: !3, line: 358, column: 7)
!1441 = !DILocation(line: 358, column: 7, scope: !1440)
!1442 = !DILocation(line: 358, column: 27, scope: !1440)
!1443 = !DILocation(line: 358, column: 7, scope: !64)
!1444 = !DILocation(line: 360, column: 14, scope: !1445)
!1445 = distinct !DILexicalBlock(scope: !1440, file: !3, line: 359, column: 5)
!1446 = !DILocation(line: 360, column: 12, scope: !1445)
!1447 = !DILocation(line: 361, column: 27, scope: !1445)
!1448 = !DILocation(line: 361, column: 19, scope: !1445)
!1449 = !DILocation(line: 362, column: 5, scope: !1445)
!1450 = !DILocation(line: 365, column: 12, scope: !1451)
!1451 = distinct !DILexicalBlock(scope: !1440, file: !3, line: 364, column: 5)
!1452 = !DILocation(line: 366, column: 19, scope: !1451)
!1453 = !DILocation(line: 369, column: 7, scope: !1454)
!1454 = distinct !DILexicalBlock(scope: !64, file: !3, line: 369, column: 7)
!1455 = !DILocation(line: 369, column: 7, scope: !64)
!1456 = !DILocation(line: 370, column: 14, scope: !1454)
!1457 = !DILocation(line: 370, column: 57, scope: !1454)
!1458 = !DILocation(line: 370, column: 70, scope: !1454)
!1459 = !DILocation(line: 370, column: 44, scope: !1454)
!1460 = !DILocation(line: 370, column: 5, scope: !1454)
!1461 = !DILocation(line: 372, column: 14, scope: !1454)
!1462 = !DILocation(line: 372, column: 5, scope: !1454)
!1463 = !DILocation(line: 375, column: 7, scope: !1464)
!1464 = distinct !DILexicalBlock(scope: !64, file: !3, line: 375, column: 7)
!1465 = !DILocation(line: 375, column: 17, scope: !1464)
!1466 = !DILocation(line: 375, column: 7, scope: !64)
!1467 = !DILocalVariable(name: "ut_host", scope: !1468, file: !3, line: 377, type: !1469)
!1468 = distinct !DILexicalBlock(scope: !1464, file: !3, line: 376, column: 5)
!1469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2056, elements: !1470)
!1470 = !{!1471}
!1471 = !DISubrange(count: 257)
!1472 = !DILocation(line: 377, column: 12, scope: !1468)
!1473 = !DILocalVariable(name: "host", scope: !1468, file: !3, line: 378, type: !6)
!1474 = !DILocation(line: 378, column: 13, scope: !1468)
!1475 = !DILocalVariable(name: "display", scope: !1468, file: !3, line: 379, type: !6)
!1476 = !DILocation(line: 379, column: 13, scope: !1468)
!1477 = !DILocation(line: 382, column: 16, scope: !1468)
!1478 = !DILocation(line: 382, column: 25, scope: !1468)
!1479 = !DILocation(line: 382, column: 35, scope: !1468)
!1480 = !DILocation(line: 382, column: 7, scope: !1468)
!1481 = !DILocation(line: 385, column: 25, scope: !1468)
!1482 = !DILocation(line: 385, column: 17, scope: !1468)
!1483 = !DILocation(line: 385, column: 15, scope: !1468)
!1484 = !DILocation(line: 386, column: 11, scope: !1485)
!1485 = distinct !DILexicalBlock(scope: !1468, file: !3, line: 386, column: 11)
!1486 = !DILocation(line: 386, column: 11, scope: !1468)
!1487 = !DILocation(line: 387, column: 17, scope: !1485)
!1488 = !DILocation(line: 387, column: 20, scope: !1485)
!1489 = !DILocation(line: 387, column: 9, scope: !1485)
!1490 = !DILocation(line: 389, column: 11, scope: !1491)
!1491 = distinct !DILexicalBlock(scope: !1468, file: !3, line: 389, column: 11)
!1492 = !DILocation(line: 389, column: 20, scope: !1491)
!1493 = !DILocation(line: 389, column: 23, scope: !1491)
!1494 = !DILocation(line: 389, column: 11, scope: !1468)
!1495 = !DILocation(line: 392, column: 30, scope: !1496)
!1496 = distinct !DILexicalBlock(scope: !1491, file: !3, line: 390, column: 9)
!1497 = !DILocation(line: 392, column: 18, scope: !1496)
!1498 = !DILocation(line: 392, column: 16, scope: !1496)
!1499 = !DILocation(line: 393, column: 9, scope: !1496)
!1500 = !DILocation(line: 395, column: 13, scope: !1501)
!1501 = distinct !DILexicalBlock(scope: !1468, file: !3, line: 395, column: 11)
!1502 = !DILocation(line: 395, column: 11, scope: !1468)
!1503 = !DILocation(line: 396, column: 16, scope: !1501)
!1504 = !DILocation(line: 396, column: 14, scope: !1501)
!1505 = !DILocation(line: 396, column: 9, scope: !1501)
!1506 = !DILocation(line: 398, column: 11, scope: !1507)
!1507 = distinct !DILexicalBlock(scope: !1468, file: !3, line: 398, column: 11)
!1508 = !DILocation(line: 398, column: 11, scope: !1468)
!1509 = !DILocation(line: 400, column: 15, scope: !1510)
!1510 = distinct !DILexicalBlock(scope: !1511, file: !3, line: 400, column: 15)
!1511 = distinct !DILexicalBlock(scope: !1507, file: !3, line: 399, column: 9)
!1512 = !DILocation(line: 400, column: 33, scope: !1510)
!1513 = !DILocation(line: 400, column: 25, scope: !1510)
!1514 = !DILocation(line: 400, column: 49, scope: !1510)
!1515 = !DILocation(line: 400, column: 41, scope: !1510)
!1516 = !DILocation(line: 400, column: 39, scope: !1510)
!1517 = !DILocation(line: 400, column: 58, scope: !1510)
!1518 = !DILocation(line: 400, column: 23, scope: !1510)
!1519 = !DILocation(line: 400, column: 15, scope: !1511)
!1520 = !DILocation(line: 402, column: 33, scope: !1521)
!1521 = distinct !DILexicalBlock(scope: !1510, file: !3, line: 401, column: 13)
!1522 = !DILocation(line: 402, column: 25, scope: !1521)
!1523 = !DILocation(line: 402, column: 49, scope: !1521)
!1524 = !DILocation(line: 402, column: 41, scope: !1521)
!1525 = !DILocation(line: 402, column: 39, scope: !1521)
!1526 = !DILocation(line: 402, column: 58, scope: !1521)
!1527 = !DILocation(line: 402, column: 23, scope: !1521)
!1528 = !DILocation(line: 403, column: 21, scope: !1521)
!1529 = !DILocation(line: 403, column: 15, scope: !1521)
!1530 = !DILocation(line: 404, column: 34, scope: !1521)
!1531 = !DILocation(line: 404, column: 25, scope: !1521)
!1532 = !DILocation(line: 404, column: 23, scope: !1521)
!1533 = !DILocation(line: 405, column: 13, scope: !1521)
!1534 = !DILocation(line: 406, column: 20, scope: !1511)
!1535 = !DILocation(line: 406, column: 40, scope: !1511)
!1536 = !DILocation(line: 406, column: 46, scope: !1511)
!1537 = !DILocation(line: 406, column: 11, scope: !1511)
!1538 = !DILocation(line: 407, column: 9, scope: !1511)
!1539 = !DILocation(line: 410, column: 15, scope: !1540)
!1540 = distinct !DILexicalBlock(scope: !1541, file: !3, line: 410, column: 15)
!1541 = distinct !DILexicalBlock(scope: !1507, file: !3, line: 409, column: 9)
!1542 = !DILocation(line: 410, column: 33, scope: !1540)
!1543 = !DILocation(line: 410, column: 25, scope: !1540)
!1544 = !DILocation(line: 410, column: 39, scope: !1540)
!1545 = !DILocation(line: 410, column: 23, scope: !1540)
!1546 = !DILocation(line: 410, column: 15, scope: !1541)
!1547 = !DILocation(line: 412, column: 33, scope: !1548)
!1548 = distinct !DILexicalBlock(scope: !1540, file: !3, line: 411, column: 13)
!1549 = !DILocation(line: 412, column: 25, scope: !1548)
!1550 = !DILocation(line: 412, column: 39, scope: !1548)
!1551 = !DILocation(line: 412, column: 23, scope: !1548)
!1552 = !DILocation(line: 413, column: 21, scope: !1548)
!1553 = !DILocation(line: 413, column: 15, scope: !1548)
!1554 = !DILocation(line: 414, column: 34, scope: !1548)
!1555 = !DILocation(line: 414, column: 25, scope: !1548)
!1556 = !DILocation(line: 414, column: 23, scope: !1548)
!1557 = !DILocation(line: 415, column: 13, scope: !1548)
!1558 = !DILocation(line: 416, column: 20, scope: !1541)
!1559 = !DILocation(line: 416, column: 37, scope: !1541)
!1560 = !DILocation(line: 416, column: 11, scope: !1541)
!1561 = !DILocation(line: 419, column: 11, scope: !1562)
!1562 = distinct !DILexicalBlock(scope: !1468, file: !3, line: 419, column: 11)
!1563 = !DILocation(line: 419, column: 19, scope: !1562)
!1564 = !DILocation(line: 419, column: 16, scope: !1562)
!1565 = !DILocation(line: 419, column: 11, scope: !1468)
!1566 = !DILocation(line: 420, column: 15, scope: !1562)
!1567 = !DILocation(line: 420, column: 9, scope: !1562)
!1568 = !DILocation(line: 421, column: 5, scope: !1468)
!1569 = !DILocation(line: 424, column: 11, scope: !1570)
!1570 = distinct !DILexicalBlock(scope: !1571, file: !3, line: 424, column: 11)
!1571 = distinct !DILexicalBlock(scope: !1464, file: !3, line: 423, column: 5)
!1572 = !DILocation(line: 424, column: 19, scope: !1570)
!1573 = !DILocation(line: 424, column: 11, scope: !1571)
!1574 = !DILocation(line: 426, column: 19, scope: !1575)
!1575 = distinct !DILexicalBlock(scope: !1570, file: !3, line: 425, column: 9)
!1576 = !DILocation(line: 427, column: 17, scope: !1575)
!1577 = !DILocation(line: 427, column: 11, scope: !1575)
!1578 = !DILocation(line: 428, column: 30, scope: !1575)
!1579 = !DILocation(line: 428, column: 21, scope: !1575)
!1580 = !DILocation(line: 428, column: 19, scope: !1575)
!1581 = !DILocation(line: 429, column: 9, scope: !1575)
!1582 = !DILocation(line: 430, column: 8, scope: !1571)
!1583 = !DILocation(line: 430, column: 16, scope: !1571)
!1584 = !DILocation(line: 434, column: 42, scope: !64)
!1585 = !DILocation(line: 434, column: 62, scope: !64)
!1586 = !DILocation(line: 435, column: 41, scope: !64)
!1587 = !DILocation(line: 435, column: 51, scope: !64)
!1588 = !DILocation(line: 436, column: 28, scope: !64)
!1589 = !DILocation(line: 436, column: 15, scope: !64)
!1590 = !DILocation(line: 436, column: 39, scope: !64)
!1591 = !DILocation(line: 436, column: 48, scope: !64)
!1592 = !DILocation(line: 437, column: 15, scope: !64)
!1593 = !DILocation(line: 437, column: 25, scope: !64)
!1594 = !DILocation(line: 434, column: 3, scope: !64)
!1595 = !DILocation(line: 438, column: 1, scope: !64)
!1596 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1597, file: !3, line: 333, type: !1600)
!1597 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !1598, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1624, retainedNodes: !4)
!1598 = !DISubroutineType(types: !1599)
!1599 = !{null, !1600, !9}
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64)
!1601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1602)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1603)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1604)
!1604 = !{!1605, !1606, !1607, !1608, !1609, !1610, !1611, !1616, !1617, !1622, !1623}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1603, file: !72, line: 57, baseType: !14, size: 16)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1603, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1603, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1603, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1603, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1603, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1603, file: !72, line: 67, baseType: !1612, size: 32, offset: 2656)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !1613)
!1613 = !{!1614, !1615}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !1612, file: !72, line: 45, baseType: !14, size: 16)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !1612, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1603, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1603, file: !72, line: 79, baseType: !1618, size: 64, offset: 2720)
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1603, file: !72, line: 75, size: 64, elements: !1619)
!1619 = !{!1620, !1621}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1618, file: !72, line: 77, baseType: !96, size: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1618, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1603, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1603, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!1624 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1625, nameTableKind: None)
!1625 = !{!1626, !1628, !1630, !1632, !1634, !1636, !1638, !1640, !1642, !1644, !1646, !1648, !1650, !1652, !1654, !1656, !1658, !1660, !1670, !1673, !1675, !1677, !1680, !1682, !1687, !1692, !1694}
!1626 = !DIGlobalVariableExpression(var: !1627, expr: !DIExpression())
!1627 = distinct !DIGlobalVariable(name: "do_lookup", scope: !1624, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!1628 = !DIGlobalVariableExpression(var: !1629, expr: !DIExpression())
!1629 = distinct !DIGlobalVariable(name: "short_list", scope: !1624, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!1630 = !DIGlobalVariableExpression(var: !1631, expr: !DIExpression())
!1631 = distinct !DIGlobalVariable(name: "short_output", scope: !1624, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!1632 = !DIGlobalVariableExpression(var: !1633, expr: !DIExpression())
!1633 = distinct !DIGlobalVariable(name: "include_idle", scope: !1624, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!1634 = !DIGlobalVariableExpression(var: !1635, expr: !DIExpression())
!1635 = distinct !DIGlobalVariable(name: "include_heading", scope: !1624, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!1636 = !DIGlobalVariableExpression(var: !1637, expr: !DIExpression())
!1637 = distinct !DIGlobalVariable(name: "include_mesg", scope: !1624, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!1638 = !DIGlobalVariableExpression(var: !1639, expr: !DIExpression())
!1639 = distinct !DIGlobalVariable(name: "include_exit", scope: !1624, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!1640 = !DIGlobalVariableExpression(var: !1641, expr: !DIExpression())
!1641 = distinct !DIGlobalVariable(name: "need_boottime", scope: !1624, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!1642 = !DIGlobalVariableExpression(var: !1643, expr: !DIExpression())
!1643 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !1624, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!1644 = !DIGlobalVariableExpression(var: !1645, expr: !DIExpression())
!1645 = distinct !DIGlobalVariable(name: "need_login", scope: !1624, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!1646 = !DIGlobalVariableExpression(var: !1647, expr: !DIExpression())
!1647 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !1624, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!1648 = !DIGlobalVariableExpression(var: !1649, expr: !DIExpression())
!1649 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !1624, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!1650 = !DIGlobalVariableExpression(var: !1651, expr: !DIExpression())
!1651 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !1624, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!1652 = !DIGlobalVariableExpression(var: !1653, expr: !DIExpression())
!1653 = distinct !DIGlobalVariable(name: "need_users", scope: !1624, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!1654 = !DIGlobalVariableExpression(var: !1655, expr: !DIExpression())
!1655 = distinct !DIGlobalVariable(name: "my_line_only", scope: !1624, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!1656 = !DIGlobalVariableExpression(var: !1657, expr: !DIExpression())
!1657 = distinct !DIGlobalVariable(name: "time_format", scope: !1624, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!1658 = !DIGlobalVariableExpression(var: !1659, expr: !DIExpression())
!1659 = distinct !DIGlobalVariable(name: "time_format_width", scope: !1624, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!1660 = !DIGlobalVariableExpression(var: !1661, expr: !DIExpression())
!1661 = distinct !DIGlobalVariable(name: "longopts", scope: !1624, file: !3, line: 162, type: !1662, isLocal: true, isDefinition: true)
!1662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1663, size: 4608, elements: !151)
!1663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1664)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !1665)
!1665 = !{!1666, !1667, !1668, !1669}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1664, file: !144, line: 52, baseType: !49, size: 64)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1664, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1664, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1664, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!1670 = !DIGlobalVariableExpression(var: !1671, expr: !DIExpression())
!1671 = distinct !DIGlobalVariable(name: "mesg", scope: !1672, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!1672 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1624, retainedNodes: !4)
!1673 = !DIGlobalVariableExpression(var: !1674, expr: !DIExpression())
!1674 = distinct !DIGlobalVariable(name: "hoststr", scope: !1597, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!1675 = !DIGlobalVariableExpression(var: !1676, expr: !DIExpression())
!1676 = distinct !DIGlobalVariable(name: "hostlen", scope: !1597, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!1677 = !DIGlobalVariableExpression(var: !1678, expr: !DIExpression())
!1678 = distinct !DIGlobalVariable(name: "now", scope: !1679, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!1679 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1624, retainedNodes: !4)
!1680 = !DIGlobalVariableExpression(var: !1681, expr: !DIExpression())
!1681 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !1679, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!1682 = !DIGlobalVariableExpression(var: !1683, expr: !DIExpression())
!1683 = distinct !DIGlobalVariable(name: "buf", scope: !1684, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!1684 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !1685, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1624, retainedNodes: !4)
!1685 = !DISubroutineType(types: !1686)
!1686 = !{!49, !1600}
!1687 = !DIGlobalVariableExpression(var: !1688, expr: !DIExpression())
!1688 = distinct !DIGlobalVariable(name: "runlevline", scope: !1689, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1689 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !1690, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1624, retainedNodes: !4)
!1690 = !DISubroutineType(types: !1691)
!1691 = !{null, !1600}
!1692 = !DIGlobalVariableExpression(var: !1693, expr: !DIExpression())
!1693 = distinct !DIGlobalVariable(name: "comment", scope: !1689, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1694 = !DIGlobalVariableExpression(var: !1695, expr: !DIExpression())
!1695 = distinct !DIGlobalVariable(name: "exitstr", scope: !1696, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!1696 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !1690, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1624, retainedNodes: !4)
!1697 = !DILocalVariable(name: "boottime", arg: 2, scope: !1597, file: !3, line: 333, type: !9)
!1698 = !DILocalVariable(name: "stats", scope: !1597, file: !3, line: 335, type: !1699)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !1374, line: 46, size: 1152, elements: !1700)
!1700 = !{!1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1717, !1718, !1719}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1699, file: !1374, line: 48, baseType: !1377, size: 64)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1699, file: !1374, line: 53, baseType: !1379, size: 64, offset: 64)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1699, file: !1374, line: 61, baseType: !1381, size: 64, offset: 128)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1699, file: !1374, line: 62, baseType: !1383, size: 32, offset: 192)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1699, file: !1374, line: 64, baseType: !1385, size: 32, offset: 224)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1699, file: !1374, line: 65, baseType: !1387, size: 32, offset: 256)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1699, file: !1374, line: 67, baseType: !53, size: 32, offset: 288)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1699, file: !1374, line: 69, baseType: !1377, size: 64, offset: 320)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1699, file: !1374, line: 74, baseType: !1391, size: 64, offset: 384)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1699, file: !1374, line: 78, baseType: !1393, size: 64, offset: 448)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1699, file: !1374, line: 80, baseType: !1395, size: 64, offset: 512)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1699, file: !1374, line: 91, baseType: !1713, size: 128, offset: 576)
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !1398, line: 10, size: 128, elements: !1714)
!1714 = !{!1715, !1716}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1713, file: !1398, line: 12, baseType: !11, size: 64)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1713, file: !1398, line: 16, baseType: !1402, size: 64, offset: 64)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1699, file: !1374, line: 92, baseType: !1713, size: 128, offset: 704)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1699, file: !1374, line: 93, baseType: !1713, size: 128, offset: 832)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1699, file: !1374, line: 106, baseType: !1406, size: 192, offset: 960)
!1720 = !DILocalVariable(name: "last_change", scope: !1597, file: !3, line: 336, type: !9)
!1721 = !DILocalVariable(name: "mesg", scope: !1597, file: !3, line: 337, type: !7)
!1722 = !DILocalVariable(name: "idlestr", scope: !1597, file: !3, line: 338, type: !1413)
!1723 = !DILocalVariable(name: "line", scope: !1597, file: !3, line: 347, type: !1416)
!1724 = !DILocalVariable(name: "p", scope: !1597, file: !3, line: 348, type: !6)
!1725 = !DILocalVariable(name: "pidstr", scope: !1597, file: !3, line: 349, type: !1424)
!1726 = !DILocalVariable(name: "display", scope: !1727, file: !3, line: 379, type: !6)
!1727 = distinct !DILexicalBlock(scope: !1728, file: !3, line: 376, column: 5)
!1728 = distinct !DILexicalBlock(scope: !1729, file: !3, line: 375, column: 7)
!1729 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !1730, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1756, retainedNodes: !4)
!1730 = !DISubroutineType(types: !1731)
!1731 = !{null, !1732, !9}
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64)
!1733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1734)
!1734 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1735)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1736)
!1736 = !{!1737, !1738, !1739, !1740, !1741, !1742, !1743, !1748, !1749, !1754, !1755}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1735, file: !72, line: 57, baseType: !14, size: 16)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1735, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1735, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1735, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1735, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1735, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1735, file: !72, line: 67, baseType: !1744, size: 32, offset: 2656)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !1745)
!1745 = !{!1746, !1747}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !1744, file: !72, line: 45, baseType: !14, size: 16)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !1744, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1735, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1735, file: !72, line: 79, baseType: !1750, size: 64, offset: 2720)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1735, file: !72, line: 75, size: 64, elements: !1751)
!1751 = !{!1752, !1753}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1750, file: !72, line: 77, baseType: !96, size: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1750, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1735, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1735, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!1756 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1757, nameTableKind: None)
!1757 = !{!1758, !1760, !1762, !1764, !1766, !1768, !1770, !1772, !1774, !1776, !1778, !1780, !1782, !1784, !1786, !1788, !1790, !1792, !1802, !1805, !1807, !1809, !1812, !1814, !1819, !1824, !1826}
!1758 = !DIGlobalVariableExpression(var: !1759, expr: !DIExpression())
!1759 = distinct !DIGlobalVariable(name: "do_lookup", scope: !1756, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!1760 = !DIGlobalVariableExpression(var: !1761, expr: !DIExpression())
!1761 = distinct !DIGlobalVariable(name: "short_list", scope: !1756, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!1762 = !DIGlobalVariableExpression(var: !1763, expr: !DIExpression())
!1763 = distinct !DIGlobalVariable(name: "short_output", scope: !1756, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!1764 = !DIGlobalVariableExpression(var: !1765, expr: !DIExpression())
!1765 = distinct !DIGlobalVariable(name: "include_idle", scope: !1756, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!1766 = !DIGlobalVariableExpression(var: !1767, expr: !DIExpression())
!1767 = distinct !DIGlobalVariable(name: "include_heading", scope: !1756, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!1768 = !DIGlobalVariableExpression(var: !1769, expr: !DIExpression())
!1769 = distinct !DIGlobalVariable(name: "include_mesg", scope: !1756, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!1770 = !DIGlobalVariableExpression(var: !1771, expr: !DIExpression())
!1771 = distinct !DIGlobalVariable(name: "include_exit", scope: !1756, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!1772 = !DIGlobalVariableExpression(var: !1773, expr: !DIExpression())
!1773 = distinct !DIGlobalVariable(name: "need_boottime", scope: !1756, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!1774 = !DIGlobalVariableExpression(var: !1775, expr: !DIExpression())
!1775 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !1756, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!1776 = !DIGlobalVariableExpression(var: !1777, expr: !DIExpression())
!1777 = distinct !DIGlobalVariable(name: "need_login", scope: !1756, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!1778 = !DIGlobalVariableExpression(var: !1779, expr: !DIExpression())
!1779 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !1756, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!1780 = !DIGlobalVariableExpression(var: !1781, expr: !DIExpression())
!1781 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !1756, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!1782 = !DIGlobalVariableExpression(var: !1783, expr: !DIExpression())
!1783 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !1756, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!1784 = !DIGlobalVariableExpression(var: !1785, expr: !DIExpression())
!1785 = distinct !DIGlobalVariable(name: "need_users", scope: !1756, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!1786 = !DIGlobalVariableExpression(var: !1787, expr: !DIExpression())
!1787 = distinct !DIGlobalVariable(name: "my_line_only", scope: !1756, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!1788 = !DIGlobalVariableExpression(var: !1789, expr: !DIExpression())
!1789 = distinct !DIGlobalVariable(name: "time_format", scope: !1756, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!1790 = !DIGlobalVariableExpression(var: !1791, expr: !DIExpression())
!1791 = distinct !DIGlobalVariable(name: "time_format_width", scope: !1756, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!1792 = !DIGlobalVariableExpression(var: !1793, expr: !DIExpression())
!1793 = distinct !DIGlobalVariable(name: "longopts", scope: !1756, file: !3, line: 162, type: !1794, isLocal: true, isDefinition: true)
!1794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1795, size: 4608, elements: !151)
!1795 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1796)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !1797)
!1797 = !{!1798, !1799, !1800, !1801}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1796, file: !144, line: 52, baseType: !49, size: 64)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1796, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1796, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1796, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!1802 = !DIGlobalVariableExpression(var: !1803, expr: !DIExpression())
!1803 = distinct !DIGlobalVariable(name: "mesg", scope: !1804, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!1804 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1756, retainedNodes: !4)
!1805 = !DIGlobalVariableExpression(var: !1806, expr: !DIExpression())
!1806 = distinct !DIGlobalVariable(name: "hoststr", scope: !1729, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!1807 = !DIGlobalVariableExpression(var: !1808, expr: !DIExpression())
!1808 = distinct !DIGlobalVariable(name: "hostlen", scope: !1729, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!1809 = !DIGlobalVariableExpression(var: !1810, expr: !DIExpression())
!1810 = distinct !DIGlobalVariable(name: "now", scope: !1811, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!1811 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1756, retainedNodes: !4)
!1812 = !DIGlobalVariableExpression(var: !1813, expr: !DIExpression())
!1813 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !1811, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!1814 = !DIGlobalVariableExpression(var: !1815, expr: !DIExpression())
!1815 = distinct !DIGlobalVariable(name: "buf", scope: !1816, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!1816 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !1817, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1756, retainedNodes: !4)
!1817 = !DISubroutineType(types: !1818)
!1818 = !{!49, !1732}
!1819 = !DIGlobalVariableExpression(var: !1820, expr: !DIExpression())
!1820 = distinct !DIGlobalVariable(name: "runlevline", scope: !1821, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1821 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !1822, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1756, retainedNodes: !4)
!1822 = !DISubroutineType(types: !1823)
!1823 = !{null, !1732}
!1824 = !DIGlobalVariableExpression(var: !1825, expr: !DIExpression())
!1825 = distinct !DIGlobalVariable(name: "comment", scope: !1821, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1826 = !DIGlobalVariableExpression(var: !1827, expr: !DIExpression())
!1827 = distinct !DIGlobalVariable(name: "exitstr", scope: !1828, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!1828 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !1822, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1756, retainedNodes: !4)
!1829 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !133, file: !3, line: 514, type: !67)
!1830 = !DILocation(line: 514, column: 36, scope: !133)
!1831 = !DILocalVariable(name: "last", scope: !133, file: !3, line: 517, type: !317)
!1832 = !DILocation(line: 517, column: 17, scope: !133)
!1833 = !DILocation(line: 517, column: 24, scope: !133)
!1834 = !DILocation(line: 517, column: 42, scope: !133)
!1835 = !DILocalVariable(name: "curr", scope: !133, file: !3, line: 518, type: !317)
!1836 = !DILocation(line: 518, column: 17, scope: !133)
!1837 = !DILocation(line: 518, column: 24, scope: !133)
!1838 = !DILocation(line: 518, column: 42, scope: !133)
!1839 = !DILocation(line: 520, column: 8, scope: !1840)
!1840 = distinct !DILexicalBlock(scope: !133, file: !3, line: 520, column: 7)
!1841 = !DILocation(line: 520, column: 7, scope: !133)
!1842 = !DILocation(line: 521, column: 35, scope: !1840)
!1843 = !DILocation(line: 521, column: 27, scope: !1840)
!1844 = !DILocation(line: 521, column: 51, scope: !1840)
!1845 = !DILocation(line: 521, column: 18, scope: !1840)
!1846 = !DILocation(line: 521, column: 16, scope: !1840)
!1847 = !DILocation(line: 521, column: 5, scope: !1840)
!1848 = !DILocation(line: 522, column: 12, scope: !133)
!1849 = !DILocation(line: 522, column: 33, scope: !133)
!1850 = !DILocation(line: 522, column: 49, scope: !133)
!1851 = !DILocation(line: 522, column: 3, scope: !133)
!1852 = !DILocation(line: 524, column: 8, scope: !1853)
!1853 = distinct !DILexicalBlock(scope: !133, file: !3, line: 524, column: 7)
!1854 = !DILocation(line: 524, column: 7, scope: !133)
!1855 = !DILocation(line: 525, column: 32, scope: !1853)
!1856 = !DILocation(line: 525, column: 24, scope: !1853)
!1857 = !DILocation(line: 525, column: 44, scope: !1853)
!1858 = !DILocation(line: 525, column: 15, scope: !1853)
!1859 = !DILocation(line: 525, column: 13, scope: !1853)
!1860 = !DILocation(line: 525, column: 5, scope: !1853)
!1861 = !DILocation(line: 526, column: 12, scope: !133)
!1862 = !DILocation(line: 526, column: 29, scope: !133)
!1863 = !DILocation(line: 526, column: 42, scope: !133)
!1864 = !DILocation(line: 526, column: 47, scope: !133)
!1865 = !DILocation(line: 526, column: 41, scope: !133)
!1866 = !DILocation(line: 526, column: 63, scope: !133)
!1867 = !DILocation(line: 526, column: 3, scope: !133)
!1868 = !DILocation(line: 528, column: 32, scope: !133)
!1869 = !DILocation(line: 528, column: 57, scope: !133)
!1870 = !DILocation(line: 528, column: 44, scope: !133)
!1871 = !DILocation(line: 529, column: 34, scope: !133)
!1872 = !DILocation(line: 529, column: 23, scope: !133)
!1873 = !DILocation(line: 529, column: 42, scope: !133)
!1874 = !DILocation(line: 528, column: 3, scope: !133)
!1875 = !DILocation(line: 531, column: 3, scope: !133)
!1876 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1877, file: !3, line: 514, type: !1880)
!1877 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !1878, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1904, retainedNodes: !4)
!1878 = !DISubroutineType(types: !1879)
!1879 = !{null, !1880}
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 64)
!1881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1882)
!1882 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1883)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1884)
!1884 = !{!1885, !1886, !1887, !1888, !1889, !1890, !1891, !1896, !1897, !1902, !1903}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1883, file: !72, line: 57, baseType: !14, size: 16)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1883, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1883, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1883, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1883, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1883, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1883, file: !72, line: 67, baseType: !1892, size: 32, offset: 2656)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !1893)
!1893 = !{!1894, !1895}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !1892, file: !72, line: 45, baseType: !14, size: 16)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !1892, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1883, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1883, file: !72, line: 79, baseType: !1898, size: 64, offset: 2720)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1883, file: !72, line: 75, size: 64, elements: !1899)
!1899 = !{!1900, !1901}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1898, file: !72, line: 77, baseType: !96, size: 32)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1898, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1883, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1883, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!1904 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1905, nameTableKind: None)
!1905 = !{!1906, !1908, !1910, !1912, !1914, !1916, !1918, !1920, !1922, !1924, !1926, !1928, !1930, !1932, !1934, !1936, !1938, !1940, !1950, !1953, !1958, !1960, !1963, !1965, !1970, !1972, !1974}
!1906 = !DIGlobalVariableExpression(var: !1907, expr: !DIExpression())
!1907 = distinct !DIGlobalVariable(name: "do_lookup", scope: !1904, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!1908 = !DIGlobalVariableExpression(var: !1909, expr: !DIExpression())
!1909 = distinct !DIGlobalVariable(name: "short_list", scope: !1904, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!1910 = !DIGlobalVariableExpression(var: !1911, expr: !DIExpression())
!1911 = distinct !DIGlobalVariable(name: "short_output", scope: !1904, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!1912 = !DIGlobalVariableExpression(var: !1913, expr: !DIExpression())
!1913 = distinct !DIGlobalVariable(name: "include_idle", scope: !1904, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!1914 = !DIGlobalVariableExpression(var: !1915, expr: !DIExpression())
!1915 = distinct !DIGlobalVariable(name: "include_heading", scope: !1904, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!1916 = !DIGlobalVariableExpression(var: !1917, expr: !DIExpression())
!1917 = distinct !DIGlobalVariable(name: "include_mesg", scope: !1904, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!1918 = !DIGlobalVariableExpression(var: !1919, expr: !DIExpression())
!1919 = distinct !DIGlobalVariable(name: "include_exit", scope: !1904, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!1920 = !DIGlobalVariableExpression(var: !1921, expr: !DIExpression())
!1921 = distinct !DIGlobalVariable(name: "need_boottime", scope: !1904, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!1922 = !DIGlobalVariableExpression(var: !1923, expr: !DIExpression())
!1923 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !1904, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!1924 = !DIGlobalVariableExpression(var: !1925, expr: !DIExpression())
!1925 = distinct !DIGlobalVariable(name: "need_login", scope: !1904, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!1926 = !DIGlobalVariableExpression(var: !1927, expr: !DIExpression())
!1927 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !1904, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!1928 = !DIGlobalVariableExpression(var: !1929, expr: !DIExpression())
!1929 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !1904, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!1930 = !DIGlobalVariableExpression(var: !1931, expr: !DIExpression())
!1931 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !1904, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!1932 = !DIGlobalVariableExpression(var: !1933, expr: !DIExpression())
!1933 = distinct !DIGlobalVariable(name: "need_users", scope: !1904, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!1934 = !DIGlobalVariableExpression(var: !1935, expr: !DIExpression())
!1935 = distinct !DIGlobalVariable(name: "my_line_only", scope: !1904, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!1936 = !DIGlobalVariableExpression(var: !1937, expr: !DIExpression())
!1937 = distinct !DIGlobalVariable(name: "time_format", scope: !1904, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!1938 = !DIGlobalVariableExpression(var: !1939, expr: !DIExpression())
!1939 = distinct !DIGlobalVariable(name: "time_format_width", scope: !1904, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!1940 = !DIGlobalVariableExpression(var: !1941, expr: !DIExpression())
!1941 = distinct !DIGlobalVariable(name: "longopts", scope: !1904, file: !3, line: 162, type: !1942, isLocal: true, isDefinition: true)
!1942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1943, size: 4608, elements: !151)
!1943 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1944)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !1945)
!1945 = !{!1946, !1947, !1948, !1949}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1944, file: !144, line: 52, baseType: !49, size: 64)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1944, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1944, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1944, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!1950 = !DIGlobalVariableExpression(var: !1951, expr: !DIExpression())
!1951 = distinct !DIGlobalVariable(name: "mesg", scope: !1952, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!1952 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1904, retainedNodes: !4)
!1953 = !DIGlobalVariableExpression(var: !1954, expr: !DIExpression())
!1954 = distinct !DIGlobalVariable(name: "hoststr", scope: !1955, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!1955 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !1956, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1904, retainedNodes: !4)
!1956 = !DISubroutineType(types: !1957)
!1957 = !{null, !1880, !9}
!1958 = !DIGlobalVariableExpression(var: !1959, expr: !DIExpression())
!1959 = distinct !DIGlobalVariable(name: "hostlen", scope: !1955, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!1960 = !DIGlobalVariableExpression(var: !1961, expr: !DIExpression())
!1961 = distinct !DIGlobalVariable(name: "now", scope: !1962, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!1962 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1904, retainedNodes: !4)
!1963 = !DIGlobalVariableExpression(var: !1964, expr: !DIExpression())
!1964 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !1962, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!1965 = !DIGlobalVariableExpression(var: !1966, expr: !DIExpression())
!1966 = distinct !DIGlobalVariable(name: "buf", scope: !1967, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!1967 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !1968, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1904, retainedNodes: !4)
!1968 = !DISubroutineType(types: !1969)
!1969 = !{!49, !1880}
!1970 = !DIGlobalVariableExpression(var: !1971, expr: !DIExpression())
!1971 = distinct !DIGlobalVariable(name: "runlevline", scope: !1877, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1972 = !DIGlobalVariableExpression(var: !1973, expr: !DIExpression())
!1973 = distinct !DIGlobalVariable(name: "comment", scope: !1877, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1974 = !DIGlobalVariableExpression(var: !1975, expr: !DIExpression())
!1975 = distinct !DIGlobalVariable(name: "exitstr", scope: !1976, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!1976 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !1878, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1904, retainedNodes: !4)
!1977 = !DILocalVariable(name: "last", scope: !1877, file: !3, line: 517, type: !317)
!1978 = !DILocalVariable(name: "curr", scope: !1877, file: !3, line: 518, type: !317)
!1979 = distinct !DISubprogram(name: "print_boottime", scope: !3, file: !3, line: 441, type: !134, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1980 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1979, file: !3, line: 441, type: !67)
!1981 = !DILocation(line: 441, column: 36, scope: !1979)
!1982 = !DILocation(line: 443, column: 32, scope: !1979)
!1983 = !DILocation(line: 444, column: 28, scope: !1979)
!1984 = !DILocation(line: 444, column: 15, scope: !1979)
!1985 = !DILocation(line: 443, column: 3, scope: !1979)
!1986 = !DILocation(line: 445, column: 1, scope: !1979)
!1987 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1988, file: !3, line: 441, type: !1991)
!1988 = distinct !DISubprogram(name: "print_boottime", scope: !3, file: !3, line: 441, type: !1989, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2015, retainedNodes: !4)
!1989 = !DISubroutineType(types: !1990)
!1990 = !{null, !1991}
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 64)
!1992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1993)
!1993 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1994)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1995)
!1995 = !{!1996, !1997, !1998, !1999, !2000, !2001, !2002, !2007, !2008, !2013, !2014}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1994, file: !72, line: 57, baseType: !14, size: 16)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1994, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1994, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1994, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1994, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1994, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1994, file: !72, line: 67, baseType: !2003, size: 32, offset: 2656)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !2004)
!2004 = !{!2005, !2006}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !2003, file: !72, line: 45, baseType: !14, size: 16)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !2003, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1994, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1994, file: !72, line: 79, baseType: !2009, size: 64, offset: 2720)
!2009 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1994, file: !72, line: 75, size: 64, elements: !2010)
!2010 = !{!2011, !2012}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2009, file: !72, line: 77, baseType: !96, size: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2009, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1994, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1994, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!2015 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2016, nameTableKind: None)
!2016 = !{!2017, !2019, !2021, !2023, !2025, !2027, !2029, !2031, !2033, !2035, !2037, !2039, !2041, !2043, !2045, !2047, !2049, !2051, !2061, !2064, !2069, !2071, !2074, !2076, !2081, !2084, !2086}
!2017 = !DIGlobalVariableExpression(var: !2018, expr: !DIExpression())
!2018 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2015, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!2019 = !DIGlobalVariableExpression(var: !2020, expr: !DIExpression())
!2020 = distinct !DIGlobalVariable(name: "short_list", scope: !2015, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!2021 = !DIGlobalVariableExpression(var: !2022, expr: !DIExpression())
!2022 = distinct !DIGlobalVariable(name: "short_output", scope: !2015, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!2023 = !DIGlobalVariableExpression(var: !2024, expr: !DIExpression())
!2024 = distinct !DIGlobalVariable(name: "include_idle", scope: !2015, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!2025 = !DIGlobalVariableExpression(var: !2026, expr: !DIExpression())
!2026 = distinct !DIGlobalVariable(name: "include_heading", scope: !2015, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!2027 = !DIGlobalVariableExpression(var: !2028, expr: !DIExpression())
!2028 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2015, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!2029 = !DIGlobalVariableExpression(var: !2030, expr: !DIExpression())
!2030 = distinct !DIGlobalVariable(name: "include_exit", scope: !2015, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!2031 = !DIGlobalVariableExpression(var: !2032, expr: !DIExpression())
!2032 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2015, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!2033 = !DIGlobalVariableExpression(var: !2034, expr: !DIExpression())
!2034 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2015, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!2035 = !DIGlobalVariableExpression(var: !2036, expr: !DIExpression())
!2036 = distinct !DIGlobalVariable(name: "need_login", scope: !2015, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!2037 = !DIGlobalVariableExpression(var: !2038, expr: !DIExpression())
!2038 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2015, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!2039 = !DIGlobalVariableExpression(var: !2040, expr: !DIExpression())
!2040 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2015, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!2041 = !DIGlobalVariableExpression(var: !2042, expr: !DIExpression())
!2042 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2015, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!2043 = !DIGlobalVariableExpression(var: !2044, expr: !DIExpression())
!2044 = distinct !DIGlobalVariable(name: "need_users", scope: !2015, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!2045 = !DIGlobalVariableExpression(var: !2046, expr: !DIExpression())
!2046 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2015, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!2047 = !DIGlobalVariableExpression(var: !2048, expr: !DIExpression())
!2048 = distinct !DIGlobalVariable(name: "time_format", scope: !2015, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!2049 = !DIGlobalVariableExpression(var: !2050, expr: !DIExpression())
!2050 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2015, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!2051 = !DIGlobalVariableExpression(var: !2052, expr: !DIExpression())
!2052 = distinct !DIGlobalVariable(name: "longopts", scope: !2015, file: !3, line: 162, type: !2053, isLocal: true, isDefinition: true)
!2053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2054, size: 4608, elements: !151)
!2054 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2055)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !2056)
!2056 = !{!2057, !2058, !2059, !2060}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2055, file: !144, line: 52, baseType: !49, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2055, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2055, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2055, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!2061 = !DIGlobalVariableExpression(var: !2062, expr: !DIExpression())
!2062 = distinct !DIGlobalVariable(name: "mesg", scope: !2063, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!2063 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2015, retainedNodes: !4)
!2064 = !DIGlobalVariableExpression(var: !2065, expr: !DIExpression())
!2065 = distinct !DIGlobalVariable(name: "hoststr", scope: !2066, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!2066 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !2067, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2015, retainedNodes: !4)
!2067 = !DISubroutineType(types: !2068)
!2068 = !{null, !1991, !9}
!2069 = !DIGlobalVariableExpression(var: !2070, expr: !DIExpression())
!2070 = distinct !DIGlobalVariable(name: "hostlen", scope: !2066, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!2071 = !DIGlobalVariableExpression(var: !2072, expr: !DIExpression())
!2072 = distinct !DIGlobalVariable(name: "now", scope: !2073, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!2073 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2015, retainedNodes: !4)
!2074 = !DIGlobalVariableExpression(var: !2075, expr: !DIExpression())
!2075 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !2073, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!2076 = !DIGlobalVariableExpression(var: !2077, expr: !DIExpression())
!2077 = distinct !DIGlobalVariable(name: "buf", scope: !2078, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!2078 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !2079, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2015, retainedNodes: !4)
!2079 = !DISubroutineType(types: !2080)
!2080 = !{!49, !1991}
!2081 = !DIGlobalVariableExpression(var: !2082, expr: !DIExpression())
!2082 = distinct !DIGlobalVariable(name: "runlevline", scope: !2083, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2083 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !1989, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2015, retainedNodes: !4)
!2084 = !DIGlobalVariableExpression(var: !2085, expr: !DIExpression())
!2085 = distinct !DIGlobalVariable(name: "comment", scope: !2083, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2086 = !DIGlobalVariableExpression(var: !2087, expr: !DIExpression())
!2087 = distinct !DIGlobalVariable(name: "exitstr", scope: !2088, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!2088 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !1989, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2015, retainedNodes: !4)
!2089 = distinct !DISubprogram(name: "print_clockchange", scope: !3, file: !3, line: 506, type: !134, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2090 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2089, file: !3, line: 506, type: !67)
!2091 = !DILocation(line: 506, column: 39, scope: !2089)
!2092 = !DILocation(line: 509, column: 32, scope: !2089)
!2093 = !DILocation(line: 510, column: 28, scope: !2089)
!2094 = !DILocation(line: 510, column: 15, scope: !2089)
!2095 = !DILocation(line: 509, column: 3, scope: !2089)
!2096 = !DILocation(line: 511, column: 1, scope: !2089)
!2097 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2098, file: !3, line: 506, type: !2101)
!2098 = distinct !DISubprogram(name: "print_clockchange", scope: !3, file: !3, line: 506, type: !2099, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2125, retainedNodes: !4)
!2099 = !DISubroutineType(types: !2100)
!2100 = !{null, !2101}
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2103)
!2103 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !2104)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !2105)
!2105 = !{!2106, !2107, !2108, !2109, !2110, !2111, !2112, !2117, !2118, !2123, !2124}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !2104, file: !72, line: 57, baseType: !14, size: 16)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !2104, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !2104, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !2104, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !2104, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !2104, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !2104, file: !72, line: 67, baseType: !2113, size: 32, offset: 2656)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !2114)
!2114 = !{!2115, !2116}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !2113, file: !72, line: 45, baseType: !14, size: 16)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !2113, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !2104, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !2104, file: !72, line: 79, baseType: !2119, size: 64, offset: 2720)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2104, file: !72, line: 75, size: 64, elements: !2120)
!2120 = !{!2121, !2122}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2119, file: !72, line: 77, baseType: !96, size: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2119, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !2104, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2104, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!2125 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2126, nameTableKind: None)
!2126 = !{!2127, !2129, !2131, !2133, !2135, !2137, !2139, !2141, !2143, !2145, !2147, !2149, !2151, !2153, !2155, !2157, !2159, !2161, !2171, !2174, !2179, !2181, !2184, !2186, !2191, !2194, !2196}
!2127 = !DIGlobalVariableExpression(var: !2128, expr: !DIExpression())
!2128 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2125, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!2129 = !DIGlobalVariableExpression(var: !2130, expr: !DIExpression())
!2130 = distinct !DIGlobalVariable(name: "short_list", scope: !2125, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!2131 = !DIGlobalVariableExpression(var: !2132, expr: !DIExpression())
!2132 = distinct !DIGlobalVariable(name: "short_output", scope: !2125, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!2133 = !DIGlobalVariableExpression(var: !2134, expr: !DIExpression())
!2134 = distinct !DIGlobalVariable(name: "include_idle", scope: !2125, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!2135 = !DIGlobalVariableExpression(var: !2136, expr: !DIExpression())
!2136 = distinct !DIGlobalVariable(name: "include_heading", scope: !2125, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!2137 = !DIGlobalVariableExpression(var: !2138, expr: !DIExpression())
!2138 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2125, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!2139 = !DIGlobalVariableExpression(var: !2140, expr: !DIExpression())
!2140 = distinct !DIGlobalVariable(name: "include_exit", scope: !2125, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!2141 = !DIGlobalVariableExpression(var: !2142, expr: !DIExpression())
!2142 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2125, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!2143 = !DIGlobalVariableExpression(var: !2144, expr: !DIExpression())
!2144 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2125, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!2145 = !DIGlobalVariableExpression(var: !2146, expr: !DIExpression())
!2146 = distinct !DIGlobalVariable(name: "need_login", scope: !2125, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!2147 = !DIGlobalVariableExpression(var: !2148, expr: !DIExpression())
!2148 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2125, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!2149 = !DIGlobalVariableExpression(var: !2150, expr: !DIExpression())
!2150 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2125, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!2151 = !DIGlobalVariableExpression(var: !2152, expr: !DIExpression())
!2152 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2125, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!2153 = !DIGlobalVariableExpression(var: !2154, expr: !DIExpression())
!2154 = distinct !DIGlobalVariable(name: "need_users", scope: !2125, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!2155 = !DIGlobalVariableExpression(var: !2156, expr: !DIExpression())
!2156 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2125, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!2157 = !DIGlobalVariableExpression(var: !2158, expr: !DIExpression())
!2158 = distinct !DIGlobalVariable(name: "time_format", scope: !2125, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!2159 = !DIGlobalVariableExpression(var: !2160, expr: !DIExpression())
!2160 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2125, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!2161 = !DIGlobalVariableExpression(var: !2162, expr: !DIExpression())
!2162 = distinct !DIGlobalVariable(name: "longopts", scope: !2125, file: !3, line: 162, type: !2163, isLocal: true, isDefinition: true)
!2163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2164, size: 4608, elements: !151)
!2164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2165)
!2165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !2166)
!2166 = !{!2167, !2168, !2169, !2170}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2165, file: !144, line: 52, baseType: !49, size: 64)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2165, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2165, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2165, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!2171 = !DIGlobalVariableExpression(var: !2172, expr: !DIExpression())
!2172 = distinct !DIGlobalVariable(name: "mesg", scope: !2173, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!2173 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2125, retainedNodes: !4)
!2174 = !DIGlobalVariableExpression(var: !2175, expr: !DIExpression())
!2175 = distinct !DIGlobalVariable(name: "hoststr", scope: !2176, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!2176 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !2177, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2125, retainedNodes: !4)
!2177 = !DISubroutineType(types: !2178)
!2178 = !{null, !2101, !9}
!2179 = !DIGlobalVariableExpression(var: !2180, expr: !DIExpression())
!2180 = distinct !DIGlobalVariable(name: "hostlen", scope: !2176, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!2181 = !DIGlobalVariableExpression(var: !2182, expr: !DIExpression())
!2182 = distinct !DIGlobalVariable(name: "now", scope: !2183, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!2183 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2125, retainedNodes: !4)
!2184 = !DIGlobalVariableExpression(var: !2185, expr: !DIExpression())
!2185 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !2183, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!2186 = !DIGlobalVariableExpression(var: !2187, expr: !DIExpression())
!2187 = distinct !DIGlobalVariable(name: "buf", scope: !2188, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!2188 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !2189, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2125, retainedNodes: !4)
!2189 = !DISubroutineType(types: !2190)
!2190 = !{!49, !2101}
!2191 = !DIGlobalVariableExpression(var: !2192, expr: !DIExpression())
!2192 = distinct !DIGlobalVariable(name: "runlevline", scope: !2193, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2193 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !2099, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2125, retainedNodes: !4)
!2194 = !DIGlobalVariableExpression(var: !2195, expr: !DIExpression())
!2195 = distinct !DIGlobalVariable(name: "comment", scope: !2193, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2196 = !DIGlobalVariableExpression(var: !2197, expr: !DIExpression())
!2197 = distinct !DIGlobalVariable(name: "exitstr", scope: !2198, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!2198 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !2099, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2125, retainedNodes: !4)
!2199 = distinct !DISubprogram(name: "print_initspawn", scope: !3, file: !3, line: 495, type: !134, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2200 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2199, file: !3, line: 495, type: !67)
!2201 = !DILocation(line: 495, column: 37, scope: !2199)
!2202 = !DILocalVariable(name: "comment", scope: !2199, file: !3, line: 497, type: !6)
!2203 = !DILocation(line: 497, column: 9, scope: !2199)
!2204 = !DILocation(line: 497, column: 43, scope: !2199)
!2205 = !DILocation(line: 497, column: 19, scope: !2199)
!2206 = !DILocalVariable(name: "pidstr", scope: !2199, file: !3, line: 498, type: !1424)
!2207 = !DILocation(line: 498, column: 3, scope: !2199)
!2208 = !DILocation(line: 500, column: 54, scope: !2199)
!2209 = !DILocation(line: 500, column: 64, scope: !2199)
!2210 = !DILocation(line: 501, column: 28, scope: !2199)
!2211 = !DILocation(line: 501, column: 15, scope: !2199)
!2212 = !DILocation(line: 501, column: 43, scope: !2199)
!2213 = !DILocation(line: 501, column: 51, scope: !2199)
!2214 = !DILocation(line: 500, column: 3, scope: !2199)
!2215 = !DILocation(line: 502, column: 9, scope: !2199)
!2216 = !DILocation(line: 502, column: 3, scope: !2199)
!2217 = !DILocation(line: 503, column: 1, scope: !2199)
!2218 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2219, file: !3, line: 495, type: !2222)
!2219 = distinct !DISubprogram(name: "print_initspawn", scope: !3, file: !3, line: 495, type: !2220, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2246, retainedNodes: !4)
!2220 = !DISubroutineType(types: !2221)
!2221 = !{null, !2222}
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 64)
!2223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2224)
!2224 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !2225)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !2226)
!2226 = !{!2227, !2228, !2229, !2230, !2231, !2232, !2233, !2238, !2239, !2244, !2245}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !2225, file: !72, line: 57, baseType: !14, size: 16)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !2225, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !2225, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !2225, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !2225, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !2225, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !2225, file: !72, line: 67, baseType: !2234, size: 32, offset: 2656)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !2235)
!2235 = !{!2236, !2237}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !2234, file: !72, line: 45, baseType: !14, size: 16)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !2234, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !2225, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !2225, file: !72, line: 79, baseType: !2240, size: 64, offset: 2720)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2225, file: !72, line: 75, size: 64, elements: !2241)
!2241 = !{!2242, !2243}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2240, file: !72, line: 77, baseType: !96, size: 32)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2240, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !2225, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2225, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!2246 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2247, nameTableKind: None)
!2247 = !{!2248, !2250, !2252, !2254, !2256, !2258, !2260, !2262, !2264, !2266, !2268, !2270, !2272, !2274, !2276, !2278, !2280, !2282, !2292, !2295, !2300, !2302, !2305, !2307, !2312, !2315, !2317}
!2248 = !DIGlobalVariableExpression(var: !2249, expr: !DIExpression())
!2249 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2246, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!2250 = !DIGlobalVariableExpression(var: !2251, expr: !DIExpression())
!2251 = distinct !DIGlobalVariable(name: "short_list", scope: !2246, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!2252 = !DIGlobalVariableExpression(var: !2253, expr: !DIExpression())
!2253 = distinct !DIGlobalVariable(name: "short_output", scope: !2246, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!2254 = !DIGlobalVariableExpression(var: !2255, expr: !DIExpression())
!2255 = distinct !DIGlobalVariable(name: "include_idle", scope: !2246, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!2256 = !DIGlobalVariableExpression(var: !2257, expr: !DIExpression())
!2257 = distinct !DIGlobalVariable(name: "include_heading", scope: !2246, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!2258 = !DIGlobalVariableExpression(var: !2259, expr: !DIExpression())
!2259 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2246, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!2260 = !DIGlobalVariableExpression(var: !2261, expr: !DIExpression())
!2261 = distinct !DIGlobalVariable(name: "include_exit", scope: !2246, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!2262 = !DIGlobalVariableExpression(var: !2263, expr: !DIExpression())
!2263 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2246, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!2264 = !DIGlobalVariableExpression(var: !2265, expr: !DIExpression())
!2265 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2246, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!2266 = !DIGlobalVariableExpression(var: !2267, expr: !DIExpression())
!2267 = distinct !DIGlobalVariable(name: "need_login", scope: !2246, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!2268 = !DIGlobalVariableExpression(var: !2269, expr: !DIExpression())
!2269 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2246, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!2270 = !DIGlobalVariableExpression(var: !2271, expr: !DIExpression())
!2271 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2246, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!2272 = !DIGlobalVariableExpression(var: !2273, expr: !DIExpression())
!2273 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2246, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!2274 = !DIGlobalVariableExpression(var: !2275, expr: !DIExpression())
!2275 = distinct !DIGlobalVariable(name: "need_users", scope: !2246, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!2276 = !DIGlobalVariableExpression(var: !2277, expr: !DIExpression())
!2277 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2246, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!2278 = !DIGlobalVariableExpression(var: !2279, expr: !DIExpression())
!2279 = distinct !DIGlobalVariable(name: "time_format", scope: !2246, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!2280 = !DIGlobalVariableExpression(var: !2281, expr: !DIExpression())
!2281 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2246, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!2282 = !DIGlobalVariableExpression(var: !2283, expr: !DIExpression())
!2283 = distinct !DIGlobalVariable(name: "longopts", scope: !2246, file: !3, line: 162, type: !2284, isLocal: true, isDefinition: true)
!2284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2285, size: 4608, elements: !151)
!2285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2286)
!2286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !2287)
!2287 = !{!2288, !2289, !2290, !2291}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2286, file: !144, line: 52, baseType: !49, size: 64)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2286, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2286, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2286, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!2292 = !DIGlobalVariableExpression(var: !2293, expr: !DIExpression())
!2293 = distinct !DIGlobalVariable(name: "mesg", scope: !2294, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!2294 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2246, retainedNodes: !4)
!2295 = !DIGlobalVariableExpression(var: !2296, expr: !DIExpression())
!2296 = distinct !DIGlobalVariable(name: "hoststr", scope: !2297, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!2297 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !2298, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2246, retainedNodes: !4)
!2298 = !DISubroutineType(types: !2299)
!2299 = !{null, !2222, !9}
!2300 = !DIGlobalVariableExpression(var: !2301, expr: !DIExpression())
!2301 = distinct !DIGlobalVariable(name: "hostlen", scope: !2297, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!2302 = !DIGlobalVariableExpression(var: !2303, expr: !DIExpression())
!2303 = distinct !DIGlobalVariable(name: "now", scope: !2304, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!2304 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2246, retainedNodes: !4)
!2305 = !DIGlobalVariableExpression(var: !2306, expr: !DIExpression())
!2306 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !2304, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!2307 = !DIGlobalVariableExpression(var: !2308, expr: !DIExpression())
!2308 = distinct !DIGlobalVariable(name: "buf", scope: !2309, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!2309 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !2310, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2246, retainedNodes: !4)
!2310 = !DISubroutineType(types: !2311)
!2311 = !{!49, !2222}
!2312 = !DIGlobalVariableExpression(var: !2313, expr: !DIExpression())
!2313 = distinct !DIGlobalVariable(name: "runlevline", scope: !2314, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2314 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !2220, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2246, retainedNodes: !4)
!2315 = !DIGlobalVariableExpression(var: !2316, expr: !DIExpression())
!2316 = distinct !DIGlobalVariable(name: "comment", scope: !2314, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2317 = !DIGlobalVariableExpression(var: !2318, expr: !DIExpression())
!2318 = distinct !DIGlobalVariable(name: "exitstr", scope: !2319, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!2319 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !2220, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2246, retainedNodes: !4)
!2320 = !DILocalVariable(name: "comment", scope: !2219, file: !3, line: 497, type: !6)
!2321 = !DILocalVariable(name: "pidstr", scope: !2219, file: !3, line: 498, type: !1424)
!2322 = distinct !DISubprogram(name: "print_login", scope: !3, file: !3, line: 482, type: !134, scopeLine: 483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2323 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2322, file: !3, line: 482, type: !67)
!2324 = !DILocation(line: 482, column: 33, scope: !2322)
!2325 = !DILocalVariable(name: "comment", scope: !2322, file: !3, line: 484, type: !6)
!2326 = !DILocation(line: 484, column: 9, scope: !2322)
!2327 = !DILocation(line: 484, column: 43, scope: !2322)
!2328 = !DILocation(line: 484, column: 19, scope: !2322)
!2329 = !DILocalVariable(name: "pidstr", scope: !2322, file: !3, line: 485, type: !1424)
!2330 = !DILocation(line: 485, column: 3, scope: !2322)
!2331 = !DILocation(line: 489, column: 19, scope: !2322)
!2332 = !DILocation(line: 489, column: 62, scope: !2322)
!2333 = !DILocation(line: 489, column: 72, scope: !2322)
!2334 = !DILocation(line: 490, column: 28, scope: !2322)
!2335 = !DILocation(line: 490, column: 15, scope: !2322)
!2336 = !DILocation(line: 490, column: 43, scope: !2322)
!2337 = !DILocation(line: 490, column: 51, scope: !2322)
!2338 = !DILocation(line: 489, column: 3, scope: !2322)
!2339 = !DILocation(line: 491, column: 9, scope: !2322)
!2340 = !DILocation(line: 491, column: 3, scope: !2322)
!2341 = !DILocation(line: 492, column: 1, scope: !2322)
!2342 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2343, file: !3, line: 482, type: !2346)
!2343 = distinct !DISubprogram(name: "print_login", scope: !3, file: !3, line: 482, type: !2344, scopeLine: 483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2370, retainedNodes: !4)
!2344 = !DISubroutineType(types: !2345)
!2345 = !{null, !2346}
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 64)
!2347 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2348)
!2348 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !2349)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !2350)
!2350 = !{!2351, !2352, !2353, !2354, !2355, !2356, !2357, !2362, !2363, !2368, !2369}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !2349, file: !72, line: 57, baseType: !14, size: 16)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !2349, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !2349, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !2349, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !2349, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !2349, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !2349, file: !72, line: 67, baseType: !2358, size: 32, offset: 2656)
!2358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !2359)
!2359 = !{!2360, !2361}
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !2358, file: !72, line: 45, baseType: !14, size: 16)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !2358, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !2349, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !2349, file: !72, line: 79, baseType: !2364, size: 64, offset: 2720)
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2349, file: !72, line: 75, size: 64, elements: !2365)
!2365 = !{!2366, !2367}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2364, file: !72, line: 77, baseType: !96, size: 32)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2364, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !2349, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2349, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!2370 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2371, nameTableKind: None)
!2371 = !{!2372, !2374, !2376, !2378, !2380, !2382, !2384, !2386, !2388, !2390, !2392, !2394, !2396, !2398, !2400, !2402, !2404, !2406, !2416, !2419, !2424, !2426, !2429, !2431, !2436, !2439, !2441}
!2372 = !DIGlobalVariableExpression(var: !2373, expr: !DIExpression())
!2373 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2370, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!2374 = !DIGlobalVariableExpression(var: !2375, expr: !DIExpression())
!2375 = distinct !DIGlobalVariable(name: "short_list", scope: !2370, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!2376 = !DIGlobalVariableExpression(var: !2377, expr: !DIExpression())
!2377 = distinct !DIGlobalVariable(name: "short_output", scope: !2370, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!2378 = !DIGlobalVariableExpression(var: !2379, expr: !DIExpression())
!2379 = distinct !DIGlobalVariable(name: "include_idle", scope: !2370, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!2380 = !DIGlobalVariableExpression(var: !2381, expr: !DIExpression())
!2381 = distinct !DIGlobalVariable(name: "include_heading", scope: !2370, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!2382 = !DIGlobalVariableExpression(var: !2383, expr: !DIExpression())
!2383 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2370, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!2384 = !DIGlobalVariableExpression(var: !2385, expr: !DIExpression())
!2385 = distinct !DIGlobalVariable(name: "include_exit", scope: !2370, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!2386 = !DIGlobalVariableExpression(var: !2387, expr: !DIExpression())
!2387 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2370, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!2388 = !DIGlobalVariableExpression(var: !2389, expr: !DIExpression())
!2389 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2370, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!2390 = !DIGlobalVariableExpression(var: !2391, expr: !DIExpression())
!2391 = distinct !DIGlobalVariable(name: "need_login", scope: !2370, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!2392 = !DIGlobalVariableExpression(var: !2393, expr: !DIExpression())
!2393 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2370, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!2394 = !DIGlobalVariableExpression(var: !2395, expr: !DIExpression())
!2395 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2370, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!2396 = !DIGlobalVariableExpression(var: !2397, expr: !DIExpression())
!2397 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2370, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!2398 = !DIGlobalVariableExpression(var: !2399, expr: !DIExpression())
!2399 = distinct !DIGlobalVariable(name: "need_users", scope: !2370, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!2400 = !DIGlobalVariableExpression(var: !2401, expr: !DIExpression())
!2401 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2370, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!2402 = !DIGlobalVariableExpression(var: !2403, expr: !DIExpression())
!2403 = distinct !DIGlobalVariable(name: "time_format", scope: !2370, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!2404 = !DIGlobalVariableExpression(var: !2405, expr: !DIExpression())
!2405 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2370, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!2406 = !DIGlobalVariableExpression(var: !2407, expr: !DIExpression())
!2407 = distinct !DIGlobalVariable(name: "longopts", scope: !2370, file: !3, line: 162, type: !2408, isLocal: true, isDefinition: true)
!2408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2409, size: 4608, elements: !151)
!2409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2410)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !2411)
!2411 = !{!2412, !2413, !2414, !2415}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2410, file: !144, line: 52, baseType: !49, size: 64)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2410, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2410, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2410, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!2416 = !DIGlobalVariableExpression(var: !2417, expr: !DIExpression())
!2417 = distinct !DIGlobalVariable(name: "mesg", scope: !2418, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!2418 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2370, retainedNodes: !4)
!2419 = !DIGlobalVariableExpression(var: !2420, expr: !DIExpression())
!2420 = distinct !DIGlobalVariable(name: "hoststr", scope: !2421, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!2421 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !2422, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2370, retainedNodes: !4)
!2422 = !DISubroutineType(types: !2423)
!2423 = !{null, !2346, !9}
!2424 = !DIGlobalVariableExpression(var: !2425, expr: !DIExpression())
!2425 = distinct !DIGlobalVariable(name: "hostlen", scope: !2421, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!2426 = !DIGlobalVariableExpression(var: !2427, expr: !DIExpression())
!2427 = distinct !DIGlobalVariable(name: "now", scope: !2428, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!2428 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2370, retainedNodes: !4)
!2429 = !DIGlobalVariableExpression(var: !2430, expr: !DIExpression())
!2430 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !2428, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!2431 = !DIGlobalVariableExpression(var: !2432, expr: !DIExpression())
!2432 = distinct !DIGlobalVariable(name: "buf", scope: !2433, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!2433 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !2434, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2370, retainedNodes: !4)
!2434 = !DISubroutineType(types: !2435)
!2435 = !{!49, !2346}
!2436 = !DIGlobalVariableExpression(var: !2437, expr: !DIExpression())
!2437 = distinct !DIGlobalVariable(name: "runlevline", scope: !2438, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2438 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !2344, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2370, retainedNodes: !4)
!2439 = !DIGlobalVariableExpression(var: !2440, expr: !DIExpression())
!2440 = distinct !DIGlobalVariable(name: "comment", scope: !2438, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2441 = !DIGlobalVariableExpression(var: !2442, expr: !DIExpression())
!2442 = distinct !DIGlobalVariable(name: "exitstr", scope: !2443, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!2443 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !2344, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2370, retainedNodes: !4)
!2444 = !DILocalVariable(name: "comment", scope: !2343, file: !3, line: 484, type: !6)
!2445 = !DILocalVariable(name: "pidstr", scope: !2343, file: !3, line: 485, type: !1424)
!2446 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !140, file: !3, line: 459, type: !67)
!2447 = !DILocation(line: 459, column: 37, scope: !140)
!2448 = !DILocalVariable(name: "comment", scope: !140, file: !3, line: 462, type: !6)
!2449 = !DILocation(line: 462, column: 9, scope: !140)
!2450 = !DILocation(line: 462, column: 43, scope: !140)
!2451 = !DILocation(line: 462, column: 19, scope: !140)
!2452 = !DILocalVariable(name: "pidstr", scope: !140, file: !3, line: 463, type: !1424)
!2453 = !DILocation(line: 463, column: 3, scope: !140)
!2454 = !DILocation(line: 465, column: 8, scope: !2455)
!2455 = distinct !DILexicalBlock(scope: !140, file: !3, line: 465, column: 7)
!2456 = !DILocation(line: 465, column: 7, scope: !140)
!2457 = !DILocation(line: 466, column: 32, scope: !2455)
!2458 = !DILocation(line: 466, column: 24, scope: !2455)
!2459 = !DILocation(line: 467, column: 24, scope: !2455)
!2460 = !DILocation(line: 467, column: 78, scope: !2455)
!2461 = !DILocation(line: 468, column: 34, scope: !2455)
!2462 = !DILocation(line: 468, column: 26, scope: !2455)
!2463 = !DILocation(line: 468, column: 24, scope: !2455)
!2464 = !DILocation(line: 469, column: 24, scope: !2455)
!2465 = !DILocation(line: 470, column: 24, scope: !2455)
!2466 = !DILocation(line: 466, column: 15, scope: !2455)
!2467 = !DILocation(line: 466, column: 13, scope: !2455)
!2468 = !DILocation(line: 466, column: 5, scope: !2455)
!2469 = !DILocation(line: 471, column: 12, scope: !140)
!2470 = !DILocation(line: 471, column: 34, scope: !140)
!2471 = !DILocation(line: 471, column: 46, scope: !140)
!2472 = !DILocation(line: 472, column: 12, scope: !140)
!2473 = !DILocation(line: 472, column: 24, scope: !140)
!2474 = !DILocation(line: 471, column: 3, scope: !140)
!2475 = !DILocation(line: 476, column: 54, scope: !140)
!2476 = !DILocation(line: 476, column: 64, scope: !140)
!2477 = !DILocation(line: 477, column: 28, scope: !140)
!2478 = !DILocation(line: 477, column: 15, scope: !140)
!2479 = !DILocation(line: 477, column: 43, scope: !140)
!2480 = !DILocation(line: 477, column: 51, scope: !140)
!2481 = !DILocation(line: 477, column: 60, scope: !140)
!2482 = !DILocation(line: 476, column: 3, scope: !140)
!2483 = !DILocation(line: 478, column: 9, scope: !140)
!2484 = !DILocation(line: 478, column: 3, scope: !140)
!2485 = !DILocation(line: 479, column: 1, scope: !140)
!2486 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2487, file: !3, line: 459, type: !2490)
!2487 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !2488, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2514, retainedNodes: !4)
!2488 = !DISubroutineType(types: !2489)
!2489 = !{null, !2490}
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 64)
!2491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2492)
!2492 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !2493)
!2493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !2494)
!2494 = !{!2495, !2496, !2497, !2498, !2499, !2500, !2501, !2506, !2507, !2512, !2513}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !2493, file: !72, line: 57, baseType: !14, size: 16)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !2493, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !2493, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !2493, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !2493, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !2493, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !2493, file: !72, line: 67, baseType: !2502, size: 32, offset: 2656)
!2502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !2503)
!2503 = !{!2504, !2505}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !2502, file: !72, line: 45, baseType: !14, size: 16)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !2502, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !2493, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !2493, file: !72, line: 79, baseType: !2508, size: 64, offset: 2720)
!2508 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2493, file: !72, line: 75, size: 64, elements: !2509)
!2509 = !{!2510, !2511}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2508, file: !72, line: 77, baseType: !96, size: 32)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2508, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !2493, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2493, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!2514 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2515, nameTableKind: None)
!2515 = !{!2516, !2518, !2520, !2522, !2524, !2526, !2528, !2530, !2532, !2534, !2536, !2538, !2540, !2542, !2544, !2546, !2548, !2550, !2560, !2563, !2568, !2570, !2573, !2575, !2580, !2583, !2585}
!2516 = !DIGlobalVariableExpression(var: !2517, expr: !DIExpression())
!2517 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2514, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!2518 = !DIGlobalVariableExpression(var: !2519, expr: !DIExpression())
!2519 = distinct !DIGlobalVariable(name: "short_list", scope: !2514, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!2520 = !DIGlobalVariableExpression(var: !2521, expr: !DIExpression())
!2521 = distinct !DIGlobalVariable(name: "short_output", scope: !2514, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!2522 = !DIGlobalVariableExpression(var: !2523, expr: !DIExpression())
!2523 = distinct !DIGlobalVariable(name: "include_idle", scope: !2514, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!2524 = !DIGlobalVariableExpression(var: !2525, expr: !DIExpression())
!2525 = distinct !DIGlobalVariable(name: "include_heading", scope: !2514, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!2526 = !DIGlobalVariableExpression(var: !2527, expr: !DIExpression())
!2527 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2514, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!2528 = !DIGlobalVariableExpression(var: !2529, expr: !DIExpression())
!2529 = distinct !DIGlobalVariable(name: "include_exit", scope: !2514, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!2530 = !DIGlobalVariableExpression(var: !2531, expr: !DIExpression())
!2531 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2514, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!2532 = !DIGlobalVariableExpression(var: !2533, expr: !DIExpression())
!2533 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2514, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!2534 = !DIGlobalVariableExpression(var: !2535, expr: !DIExpression())
!2535 = distinct !DIGlobalVariable(name: "need_login", scope: !2514, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!2536 = !DIGlobalVariableExpression(var: !2537, expr: !DIExpression())
!2537 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2514, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!2538 = !DIGlobalVariableExpression(var: !2539, expr: !DIExpression())
!2539 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2514, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!2540 = !DIGlobalVariableExpression(var: !2541, expr: !DIExpression())
!2541 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2514, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!2542 = !DIGlobalVariableExpression(var: !2543, expr: !DIExpression())
!2543 = distinct !DIGlobalVariable(name: "need_users", scope: !2514, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!2544 = !DIGlobalVariableExpression(var: !2545, expr: !DIExpression())
!2545 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2514, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!2546 = !DIGlobalVariableExpression(var: !2547, expr: !DIExpression())
!2547 = distinct !DIGlobalVariable(name: "time_format", scope: !2514, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!2548 = !DIGlobalVariableExpression(var: !2549, expr: !DIExpression())
!2549 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2514, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!2550 = !DIGlobalVariableExpression(var: !2551, expr: !DIExpression())
!2551 = distinct !DIGlobalVariable(name: "longopts", scope: !2514, file: !3, line: 162, type: !2552, isLocal: true, isDefinition: true)
!2552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2553, size: 4608, elements: !151)
!2553 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2554)
!2554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !2555)
!2555 = !{!2556, !2557, !2558, !2559}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2554, file: !144, line: 52, baseType: !49, size: 64)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2554, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2554, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2554, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!2560 = !DIGlobalVariableExpression(var: !2561, expr: !DIExpression())
!2561 = distinct !DIGlobalVariable(name: "mesg", scope: !2562, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!2562 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2514, retainedNodes: !4)
!2563 = !DIGlobalVariableExpression(var: !2564, expr: !DIExpression())
!2564 = distinct !DIGlobalVariable(name: "hoststr", scope: !2565, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!2565 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !2566, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2514, retainedNodes: !4)
!2566 = !DISubroutineType(types: !2567)
!2567 = !{null, !2490, !9}
!2568 = !DIGlobalVariableExpression(var: !2569, expr: !DIExpression())
!2569 = distinct !DIGlobalVariable(name: "hostlen", scope: !2565, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!2570 = !DIGlobalVariableExpression(var: !2571, expr: !DIExpression())
!2571 = distinct !DIGlobalVariable(name: "now", scope: !2572, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!2572 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2514, retainedNodes: !4)
!2573 = !DIGlobalVariableExpression(var: !2574, expr: !DIExpression())
!2574 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !2572, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!2575 = !DIGlobalVariableExpression(var: !2576, expr: !DIExpression())
!2576 = distinct !DIGlobalVariable(name: "buf", scope: !2577, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!2577 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !2578, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2514, retainedNodes: !4)
!2578 = !DISubroutineType(types: !2579)
!2579 = !{!49, !2490}
!2580 = !DIGlobalVariableExpression(var: !2581, expr: !DIExpression())
!2581 = distinct !DIGlobalVariable(name: "runlevline", scope: !2582, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2582 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !2488, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2514, retainedNodes: !4)
!2583 = !DIGlobalVariableExpression(var: !2584, expr: !DIExpression())
!2584 = distinct !DIGlobalVariable(name: "comment", scope: !2582, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2585 = !DIGlobalVariableExpression(var: !2586, expr: !DIExpression())
!2586 = distinct !DIGlobalVariable(name: "exitstr", scope: !2487, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!2587 = !DILocalVariable(name: "comment", scope: !2487, file: !3, line: 462, type: !6)
!2588 = !DILocalVariable(name: "pidstr", scope: !2487, file: !3, line: 463, type: !1424)
!2589 = distinct !DISubprogram(name: "make_id_equals_comment", scope: !3, file: !3, line: 448, type: !2590, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2590 = !DISubroutineType(types: !2591)
!2591 = !{!6, !67}
!2592 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2589, file: !3, line: 448, type: !67)
!2593 = !DILocation(line: 448, column: 44, scope: !2589)
!2594 = !DILocalVariable(name: "utmpsize", scope: !2589, file: !3, line: 450, type: !110)
!2595 = !DILocation(line: 450, column: 10, scope: !2589)
!2596 = !DILocalVariable(name: "comment", scope: !2589, file: !3, line: 451, type: !6)
!2597 = !DILocation(line: 451, column: 9, scope: !2589)
!2598 = !DILocation(line: 451, column: 36, scope: !2589)
!2599 = !DILocation(line: 451, column: 28, scope: !2589)
!2600 = !DILocation(line: 451, column: 48, scope: !2589)
!2601 = !DILocation(line: 451, column: 46, scope: !2589)
!2602 = !DILocation(line: 451, column: 57, scope: !2589)
!2603 = !DILocation(line: 451, column: 19, scope: !2589)
!2604 = !DILocation(line: 453, column: 11, scope: !2589)
!2605 = !DILocation(line: 453, column: 20, scope: !2589)
!2606 = !DILocation(line: 453, column: 3, scope: !2589)
!2607 = !DILocation(line: 454, column: 12, scope: !2589)
!2608 = !DILocation(line: 454, column: 21, scope: !2589)
!2609 = !DILocation(line: 454, column: 39, scope: !2589)
!2610 = !DILocation(line: 454, column: 3, scope: !2589)
!2611 = !DILocation(line: 455, column: 10, scope: !2589)
!2612 = !DILocation(line: 455, column: 3, scope: !2589)
!2613 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2614, file: !3, line: 448, type: !2617)
!2614 = distinct !DISubprogram(name: "make_id_equals_comment", scope: !3, file: !3, line: 448, type: !2615, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2641, retainedNodes: !4)
!2615 = !DISubroutineType(types: !2616)
!2616 = !{!6, !2617}
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2618, size: 64)
!2618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2619)
!2619 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !2620)
!2620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !2621)
!2621 = !{!2622, !2623, !2624, !2625, !2626, !2627, !2628, !2633, !2634, !2639, !2640}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !2620, file: !72, line: 57, baseType: !14, size: 16)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !2620, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !2620, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !2620, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !2620, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !2620, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !2620, file: !72, line: 67, baseType: !2629, size: 32, offset: 2656)
!2629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !2630)
!2630 = !{!2631, !2632}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !2629, file: !72, line: 45, baseType: !14, size: 16)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !2629, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !2620, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !2620, file: !72, line: 79, baseType: !2635, size: 64, offset: 2720)
!2635 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2620, file: !72, line: 75, size: 64, elements: !2636)
!2636 = !{!2637, !2638}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2635, file: !72, line: 77, baseType: !96, size: 32)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2635, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !2620, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2620, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!2641 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2642, nameTableKind: None)
!2642 = !{!2643, !2645, !2647, !2649, !2651, !2653, !2655, !2657, !2659, !2661, !2663, !2665, !2667, !2669, !2671, !2673, !2675, !2677, !2687, !2690, !2695, !2697, !2700, !2702, !2707, !2712, !2714}
!2643 = !DIGlobalVariableExpression(var: !2644, expr: !DIExpression())
!2644 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2641, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!2645 = !DIGlobalVariableExpression(var: !2646, expr: !DIExpression())
!2646 = distinct !DIGlobalVariable(name: "short_list", scope: !2641, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!2647 = !DIGlobalVariableExpression(var: !2648, expr: !DIExpression())
!2648 = distinct !DIGlobalVariable(name: "short_output", scope: !2641, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!2649 = !DIGlobalVariableExpression(var: !2650, expr: !DIExpression())
!2650 = distinct !DIGlobalVariable(name: "include_idle", scope: !2641, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!2651 = !DIGlobalVariableExpression(var: !2652, expr: !DIExpression())
!2652 = distinct !DIGlobalVariable(name: "include_heading", scope: !2641, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!2653 = !DIGlobalVariableExpression(var: !2654, expr: !DIExpression())
!2654 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2641, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!2655 = !DIGlobalVariableExpression(var: !2656, expr: !DIExpression())
!2656 = distinct !DIGlobalVariable(name: "include_exit", scope: !2641, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!2657 = !DIGlobalVariableExpression(var: !2658, expr: !DIExpression())
!2658 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2641, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!2659 = !DIGlobalVariableExpression(var: !2660, expr: !DIExpression())
!2660 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2641, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!2661 = !DIGlobalVariableExpression(var: !2662, expr: !DIExpression())
!2662 = distinct !DIGlobalVariable(name: "need_login", scope: !2641, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!2663 = !DIGlobalVariableExpression(var: !2664, expr: !DIExpression())
!2664 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2641, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!2665 = !DIGlobalVariableExpression(var: !2666, expr: !DIExpression())
!2666 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2641, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!2667 = !DIGlobalVariableExpression(var: !2668, expr: !DIExpression())
!2668 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2641, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!2669 = !DIGlobalVariableExpression(var: !2670, expr: !DIExpression())
!2670 = distinct !DIGlobalVariable(name: "need_users", scope: !2641, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!2671 = !DIGlobalVariableExpression(var: !2672, expr: !DIExpression())
!2672 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2641, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!2673 = !DIGlobalVariableExpression(var: !2674, expr: !DIExpression())
!2674 = distinct !DIGlobalVariable(name: "time_format", scope: !2641, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!2675 = !DIGlobalVariableExpression(var: !2676, expr: !DIExpression())
!2676 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2641, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!2677 = !DIGlobalVariableExpression(var: !2678, expr: !DIExpression())
!2678 = distinct !DIGlobalVariable(name: "longopts", scope: !2641, file: !3, line: 162, type: !2679, isLocal: true, isDefinition: true)
!2679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2680, size: 4608, elements: !151)
!2680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2681)
!2681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !2682)
!2682 = !{!2683, !2684, !2685, !2686}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2681, file: !144, line: 52, baseType: !49, size: 64)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2681, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2681, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2681, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!2687 = !DIGlobalVariableExpression(var: !2688, expr: !DIExpression())
!2688 = distinct !DIGlobalVariable(name: "mesg", scope: !2689, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!2689 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2641, retainedNodes: !4)
!2690 = !DIGlobalVariableExpression(var: !2691, expr: !DIExpression())
!2691 = distinct !DIGlobalVariable(name: "hoststr", scope: !2692, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!2692 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !2693, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2641, retainedNodes: !4)
!2693 = !DISubroutineType(types: !2694)
!2694 = !{null, !2617, !9}
!2695 = !DIGlobalVariableExpression(var: !2696, expr: !DIExpression())
!2696 = distinct !DIGlobalVariable(name: "hostlen", scope: !2692, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!2697 = !DIGlobalVariableExpression(var: !2698, expr: !DIExpression())
!2698 = distinct !DIGlobalVariable(name: "now", scope: !2699, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!2699 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2641, retainedNodes: !4)
!2700 = !DIGlobalVariableExpression(var: !2701, expr: !DIExpression())
!2701 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !2699, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!2702 = !DIGlobalVariableExpression(var: !2703, expr: !DIExpression())
!2703 = distinct !DIGlobalVariable(name: "buf", scope: !2704, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!2704 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !2705, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2641, retainedNodes: !4)
!2705 = !DISubroutineType(types: !2706)
!2706 = !{!49, !2617}
!2707 = !DIGlobalVariableExpression(var: !2708, expr: !DIExpression())
!2708 = distinct !DIGlobalVariable(name: "runlevline", scope: !2709, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2709 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !2710, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2641, retainedNodes: !4)
!2710 = !DISubroutineType(types: !2711)
!2711 = !{null, !2617}
!2712 = !DIGlobalVariableExpression(var: !2713, expr: !DIExpression())
!2713 = distinct !DIGlobalVariable(name: "comment", scope: !2709, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2714 = !DIGlobalVariableExpression(var: !2715, expr: !DIExpression())
!2715 = distinct !DIGlobalVariable(name: "exitstr", scope: !2716, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!2716 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !2710, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2641, retainedNodes: !4)
!2717 = !DILocalVariable(name: "utmpsize", scope: !2614, file: !3, line: 450, type: !110)
!2718 = !DILocalVariable(name: "comment", scope: !2614, file: !3, line: 451, type: !6)
!2719 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !125, file: !3, line: 218, type: !67)
!2720 = !DILocation(line: 218, column: 33, scope: !125)
!2721 = !DILocalVariable(name: "t", scope: !125, file: !3, line: 228, type: !9)
!2722 = !DILocation(line: 228, column: 10, scope: !125)
!2723 = !DILocation(line: 228, column: 14, scope: !125)
!2724 = !DILocalVariable(name: "tmp", scope: !125, file: !3, line: 229, type: !2725)
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 64)
!2726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !2727, line: 7, size: 448, elements: !2728)
!2727 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h", directory: "")
!2728 = !{!2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !2726, file: !2727, line: 9, baseType: !53, size: 32)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !2726, file: !2727, line: 10, baseType: !53, size: 32, offset: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !2726, file: !2727, line: 11, baseType: !53, size: 32, offset: 64)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !2726, file: !2727, line: 12, baseType: !53, size: 32, offset: 96)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !2726, file: !2727, line: 13, baseType: !53, size: 32, offset: 128)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !2726, file: !2727, line: 14, baseType: !53, size: 32, offset: 160)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !2726, file: !2727, line: 15, baseType: !53, size: 32, offset: 192)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !2726, file: !2727, line: 16, baseType: !53, size: 32, offset: 224)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !2726, file: !2727, line: 17, baseType: !53, size: 32, offset: 256)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !2726, file: !2727, line: 20, baseType: !13, size: 64, offset: 320)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !2726, file: !2727, line: 21, baseType: !49, size: 64, offset: 384)
!2740 = !DILocation(line: 229, column: 14, scope: !125)
!2741 = !DILocation(line: 229, column: 20, scope: !125)
!2742 = !DILocation(line: 231, column: 7, scope: !2743)
!2743 = distinct !DILexicalBlock(scope: !125, file: !3, line: 231, column: 7)
!2744 = !DILocation(line: 231, column: 7, scope: !125)
!2745 = !DILocation(line: 233, column: 34, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2743, file: !3, line: 232, column: 5)
!2747 = !DILocation(line: 233, column: 47, scope: !2746)
!2748 = !DILocation(line: 233, column: 7, scope: !2746)
!2749 = !DILocation(line: 234, column: 7, scope: !2746)
!2750 = !DILocation(line: 237, column: 23, scope: !2743)
!2751 = !DILocation(line: 237, column: 12, scope: !2743)
!2752 = !DILocation(line: 237, column: 5, scope: !2743)
!2753 = !DILocation(line: 238, column: 1, scope: !125)
!2754 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !2755, file: !3, line: 218, type: !2758)
!2755 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !2756, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2782, retainedNodes: !4)
!2756 = !DISubroutineType(types: !2757)
!2757 = !{!49, !2758}
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2760)
!2760 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !2761)
!2761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !2762)
!2762 = !{!2763, !2764, !2765, !2766, !2767, !2768, !2769, !2774, !2775, !2780, !2781}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !2761, file: !72, line: 57, baseType: !14, size: 16)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !2761, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !2761, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !2761, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !2761, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !2761, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !2761, file: !72, line: 67, baseType: !2770, size: 32, offset: 2656)
!2770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !2771)
!2771 = !{!2772, !2773}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !2770, file: !72, line: 45, baseType: !14, size: 16)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !2770, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !2761, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !2761, file: !72, line: 79, baseType: !2776, size: 64, offset: 2720)
!2776 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2761, file: !72, line: 75, size: 64, elements: !2777)
!2777 = !{!2778, !2779}
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2776, file: !72, line: 77, baseType: !96, size: 32)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2776, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !2761, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2761, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!2782 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2783, nameTableKind: None)
!2783 = !{!2784, !2786, !2788, !2790, !2792, !2794, !2796, !2798, !2800, !2802, !2804, !2806, !2808, !2810, !2812, !2814, !2816, !2818, !2828, !2831, !2836, !2838, !2841, !2843, !2845, !2850, !2852}
!2784 = !DIGlobalVariableExpression(var: !2785, expr: !DIExpression())
!2785 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2782, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!2786 = !DIGlobalVariableExpression(var: !2787, expr: !DIExpression())
!2787 = distinct !DIGlobalVariable(name: "short_list", scope: !2782, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!2788 = !DIGlobalVariableExpression(var: !2789, expr: !DIExpression())
!2789 = distinct !DIGlobalVariable(name: "short_output", scope: !2782, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!2790 = !DIGlobalVariableExpression(var: !2791, expr: !DIExpression())
!2791 = distinct !DIGlobalVariable(name: "include_idle", scope: !2782, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!2792 = !DIGlobalVariableExpression(var: !2793, expr: !DIExpression())
!2793 = distinct !DIGlobalVariable(name: "include_heading", scope: !2782, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!2794 = !DIGlobalVariableExpression(var: !2795, expr: !DIExpression())
!2795 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2782, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!2796 = !DIGlobalVariableExpression(var: !2797, expr: !DIExpression())
!2797 = distinct !DIGlobalVariable(name: "include_exit", scope: !2782, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!2798 = !DIGlobalVariableExpression(var: !2799, expr: !DIExpression())
!2799 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2782, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!2800 = !DIGlobalVariableExpression(var: !2801, expr: !DIExpression())
!2801 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2782, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!2802 = !DIGlobalVariableExpression(var: !2803, expr: !DIExpression())
!2803 = distinct !DIGlobalVariable(name: "need_login", scope: !2782, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!2804 = !DIGlobalVariableExpression(var: !2805, expr: !DIExpression())
!2805 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2782, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!2806 = !DIGlobalVariableExpression(var: !2807, expr: !DIExpression())
!2807 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2782, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!2808 = !DIGlobalVariableExpression(var: !2809, expr: !DIExpression())
!2809 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2782, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!2810 = !DIGlobalVariableExpression(var: !2811, expr: !DIExpression())
!2811 = distinct !DIGlobalVariable(name: "need_users", scope: !2782, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!2812 = !DIGlobalVariableExpression(var: !2813, expr: !DIExpression())
!2813 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2782, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!2814 = !DIGlobalVariableExpression(var: !2815, expr: !DIExpression())
!2815 = distinct !DIGlobalVariable(name: "time_format", scope: !2782, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!2816 = !DIGlobalVariableExpression(var: !2817, expr: !DIExpression())
!2817 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2782, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!2818 = !DIGlobalVariableExpression(var: !2819, expr: !DIExpression())
!2819 = distinct !DIGlobalVariable(name: "longopts", scope: !2782, file: !3, line: 162, type: !2820, isLocal: true, isDefinition: true)
!2820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2821, size: 4608, elements: !151)
!2821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2822)
!2822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !2823)
!2823 = !{!2824, !2825, !2826, !2827}
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2822, file: !144, line: 52, baseType: !49, size: 64)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2822, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2822, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2822, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!2828 = !DIGlobalVariableExpression(var: !2829, expr: !DIExpression())
!2829 = distinct !DIGlobalVariable(name: "mesg", scope: !2830, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!2830 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2782, retainedNodes: !4)
!2831 = !DIGlobalVariableExpression(var: !2832, expr: !DIExpression())
!2832 = distinct !DIGlobalVariable(name: "hoststr", scope: !2833, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!2833 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !2834, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2782, retainedNodes: !4)
!2834 = !DISubroutineType(types: !2835)
!2835 = !{null, !2758, !9}
!2836 = !DIGlobalVariableExpression(var: !2837, expr: !DIExpression())
!2837 = distinct !DIGlobalVariable(name: "hostlen", scope: !2833, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!2838 = !DIGlobalVariableExpression(var: !2839, expr: !DIExpression())
!2839 = distinct !DIGlobalVariable(name: "now", scope: !2840, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!2840 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2782, retainedNodes: !4)
!2841 = !DIGlobalVariableExpression(var: !2842, expr: !DIExpression())
!2842 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !2840, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!2843 = !DIGlobalVariableExpression(var: !2844, expr: !DIExpression())
!2844 = distinct !DIGlobalVariable(name: "buf", scope: !2755, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!2845 = !DIGlobalVariableExpression(var: !2846, expr: !DIExpression())
!2846 = distinct !DIGlobalVariable(name: "runlevline", scope: !2847, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2847 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !2848, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2782, retainedNodes: !4)
!2848 = !DISubroutineType(types: !2849)
!2849 = !{null, !2758}
!2850 = !DIGlobalVariableExpression(var: !2851, expr: !DIExpression())
!2851 = distinct !DIGlobalVariable(name: "comment", scope: !2847, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2852 = !DIGlobalVariableExpression(var: !2853, expr: !DIExpression())
!2853 = distinct !DIGlobalVariable(name: "exitstr", scope: !2854, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!2854 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !2848, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2782, retainedNodes: !4)
!2855 = !DILocalVariable(name: "t", scope: !2755, file: !3, line: 228, type: !9)
!2856 = !DILocalVariable(name: "tmp", scope: !2755, file: !3, line: 229, type: !2857)
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2858, size: 64)
!2858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !2727, line: 7, size: 448, elements: !2859)
!2859 = !{!2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !2858, file: !2727, line: 9, baseType: !53, size: 32)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !2858, file: !2727, line: 10, baseType: !53, size: 32, offset: 32)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !2858, file: !2727, line: 11, baseType: !53, size: 32, offset: 64)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !2858, file: !2727, line: 12, baseType: !53, size: 32, offset: 96)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !2858, file: !2727, line: 13, baseType: !53, size: 32, offset: 128)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !2858, file: !2727, line: 14, baseType: !53, size: 32, offset: 160)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !2858, file: !2727, line: 15, baseType: !53, size: 32, offset: 192)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !2858, file: !2727, line: 16, baseType: !53, size: 32, offset: 224)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !2858, file: !2727, line: 17, baseType: !53, size: 32, offset: 256)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !2858, file: !2727, line: 20, baseType: !13, size: 64, offset: 320)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !2858, file: !2727, line: 21, baseType: !49, size: 64, offset: 384)
!2871 = !DILocalVariable(name: "userlen", arg: 1, scope: !56, file: !3, line: 244, type: !53)
!2872 = !DILocation(line: 244, column: 17, scope: !56)
!2873 = !DILocalVariable(name: "user", arg: 2, scope: !56, file: !3, line: 244, type: !49)
!2874 = !DILocation(line: 244, column: 38, scope: !56)
!2875 = !DILocalVariable(name: "state", arg: 3, scope: !56, file: !3, line: 244, type: !50)
!2876 = !DILocation(line: 244, column: 55, scope: !56)
!2877 = !DILocalVariable(name: "linelen", arg: 4, scope: !56, file: !3, line: 245, type: !53)
!2878 = !DILocation(line: 245, column: 17, scope: !56)
!2879 = !DILocalVariable(name: "line", arg: 5, scope: !56, file: !3, line: 245, type: !49)
!2880 = !DILocation(line: 245, column: 38, scope: !56)
!2881 = !DILocalVariable(name: "time_str", arg: 6, scope: !56, file: !3, line: 246, type: !49)
!2882 = !DILocation(line: 246, column: 25, scope: !56)
!2883 = !DILocalVariable(name: "idle", arg: 7, scope: !56, file: !3, line: 246, type: !49)
!2884 = !DILocation(line: 246, column: 47, scope: !56)
!2885 = !DILocalVariable(name: "pid", arg: 8, scope: !56, file: !3, line: 246, type: !49)
!2886 = !DILocation(line: 246, column: 65, scope: !56)
!2887 = !DILocalVariable(name: "comment", arg: 9, scope: !56, file: !3, line: 247, type: !49)
!2888 = !DILocation(line: 247, column: 25, scope: !56)
!2889 = !DILocalVariable(name: "exitstr", arg: 10, scope: !56, file: !3, line: 247, type: !49)
!2890 = !DILocation(line: 247, column: 46, scope: !56)
!2891 = !DILocalVariable(name: "buf", scope: !56, file: !3, line: 250, type: !6)
!2892 = !DILocation(line: 250, column: 9, scope: !56)
!2893 = !DILocalVariable(name: "x_idle", scope: !56, file: !3, line: 251, type: !2894)
!2894 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !260)
!2895 = !DILocation(line: 251, column: 8, scope: !56)
!2896 = !DILocalVariable(name: "x_pid", scope: !56, file: !3, line: 252, type: !2897)
!2897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 104, elements: !2898)
!2898 = !{!2899}
!2899 = !DISubrange(count: 13)
!2900 = !DILocation(line: 252, column: 8, scope: !56)
!2901 = !DILocalVariable(name: "x_exitstr", scope: !56, file: !3, line: 253, type: !6)
!2902 = !DILocation(line: 253, column: 9, scope: !56)
!2903 = !DILocalVariable(name: "err", scope: !56, file: !3, line: 254, type: !53)
!2904 = !DILocation(line: 254, column: 7, scope: !56)
!2905 = !DILocation(line: 256, column: 13, scope: !56)
!2906 = !DILocation(line: 256, column: 11, scope: !56)
!2907 = !DILocation(line: 258, column: 7, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !56, file: !3, line: 258, column: 7)
!2909 = !DILocation(line: 258, column: 20, scope: !2908)
!2910 = !DILocation(line: 258, column: 24, scope: !2908)
!2911 = !DILocation(line: 258, column: 37, scope: !2908)
!2912 = !DILocation(line: 258, column: 48, scope: !2908)
!2913 = !DILocation(line: 258, column: 40, scope: !2908)
!2914 = !DILocation(line: 258, column: 54, scope: !2908)
!2915 = !DILocation(line: 258, column: 7, scope: !56)
!2916 = !DILocation(line: 259, column: 14, scope: !2908)
!2917 = !DILocation(line: 259, column: 31, scope: !2908)
!2918 = !DILocation(line: 259, column: 5, scope: !2908)
!2919 = !DILocation(line: 261, column: 5, scope: !2908)
!2920 = !DILocation(line: 261, column: 13, scope: !2908)
!2921 = !DILocation(line: 263, column: 8, scope: !2922)
!2922 = distinct !DILexicalBlock(scope: !56, file: !3, line: 263, column: 7)
!2923 = !DILocation(line: 263, column: 21, scope: !2922)
!2924 = !DILocation(line: 263, column: 32, scope: !2922)
!2925 = !DILocation(line: 263, column: 24, scope: !2922)
!2926 = !DILocation(line: 263, column: 37, scope: !2922)
!2927 = !DILocation(line: 263, column: 7, scope: !56)
!2928 = !DILocation(line: 264, column: 14, scope: !2922)
!2929 = !DILocation(line: 264, column: 30, scope: !2922)
!2930 = !DILocation(line: 264, column: 5, scope: !2922)
!2931 = !DILocation(line: 266, column: 5, scope: !2922)
!2932 = !DILocation(line: 266, column: 12, scope: !2922)
!2933 = !DILocation(line: 268, column: 24, scope: !56)
!2934 = !DILocation(line: 268, column: 43, scope: !56)
!2935 = !DILocation(line: 268, column: 41, scope: !56)
!2936 = !DILocation(line: 268, column: 70, scope: !56)
!2937 = !DILocation(line: 268, column: 15, scope: !56)
!2938 = !DILocation(line: 268, column: 13, scope: !56)
!2939 = !DILocation(line: 269, column: 7, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !56, file: !3, line: 269, column: 7)
!2941 = !DILocation(line: 269, column: 7, scope: !56)
!2942 = !DILocation(line: 270, column: 14, scope: !2940)
!2943 = !DILocation(line: 270, column: 35, scope: !2940)
!2944 = !DILocation(line: 270, column: 5, scope: !2940)
!2945 = !DILocation(line: 272, column: 6, scope: !2940)
!2946 = !DILocation(line: 272, column: 16, scope: !2940)
!2947 = !DILocation(line: 284, column: 19, scope: !56)
!2948 = !DILocation(line: 284, column: 28, scope: !56)
!2949 = !DILocation(line: 284, column: 35, scope: !56)
!2950 = !DILocation(line: 285, column: 19, scope: !56)
!2951 = !DILocation(line: 286, column: 19, scope: !56)
!2952 = !DILocation(line: 286, column: 28, scope: !56)
!2953 = !DILocation(line: 287, column: 19, scope: !56)
!2954 = !DILocation(line: 288, column: 19, scope: !56)
!2955 = !DILocation(line: 289, column: 19, scope: !56)
!2956 = !DILocation(line: 290, column: 19, scope: !56)
!2957 = !DILocation(line: 295, column: 19, scope: !56)
!2958 = !DILocation(line: 296, column: 19, scope: !56)
!2959 = !DILocation(line: 274, column: 9, scope: !56)
!2960 = !DILocation(line: 274, column: 7, scope: !56)
!2961 = !DILocation(line: 298, column: 7, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !56, file: !3, line: 298, column: 7)
!2963 = !DILocation(line: 298, column: 11, scope: !2962)
!2964 = !DILocation(line: 299, column: 5, scope: !2962)
!2965 = !DILocalVariable(name: "p", scope: !2966, file: !3, line: 303, type: !6)
!2966 = distinct !DILexicalBlock(scope: !56, file: !3, line: 301, column: 3)
!2967 = !DILocation(line: 303, column: 11, scope: !2966)
!2968 = !DILocation(line: 303, column: 15, scope: !2966)
!2969 = !DILocation(line: 303, column: 29, scope: !2966)
!2970 = !DILocation(line: 303, column: 21, scope: !2966)
!2971 = !DILocation(line: 303, column: 19, scope: !2966)
!2972 = !DILocation(line: 304, column: 5, scope: !2966)
!2973 = !DILocation(line: 304, column: 13, scope: !2966)
!2974 = !DILocation(line: 304, column: 12, scope: !2966)
!2975 = !DILocation(line: 304, column: 17, scope: !2966)
!2976 = distinct !{!2976, !2972, !2977}
!2977 = !DILocation(line: 305, column: 18, scope: !2966)
!2978 = !DILocation(line: 306, column: 7, scope: !2966)
!2979 = !DILocation(line: 306, column: 9, scope: !2966)
!2980 = !DILocation(line: 306, column: 14, scope: !2966)
!2981 = !DILocation(line: 309, column: 9, scope: !56)
!2982 = !DILocation(line: 309, column: 3, scope: !56)
!2983 = !DILocation(line: 310, column: 9, scope: !56)
!2984 = !DILocation(line: 310, column: 3, scope: !56)
!2985 = !DILocation(line: 311, column: 9, scope: !56)
!2986 = !DILocation(line: 311, column: 3, scope: !56)
!2987 = !DILocation(line: 312, column: 1, scope: !56)
!2988 = !DILocalVariable(name: "userlen", arg: 1, scope: !2989, file: !3, line: 244, type: !53)
!2989 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2990, retainedNodes: !4)
!2990 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2991, nameTableKind: None)
!2991 = !{!2992, !2994, !2996, !2998, !3000, !3002, !3004, !3006, !3008, !3010, !3012, !3014, !3016, !3018, !3020, !3022, !3024, !3026, !3036, !3038, !3067, !3069, !3072, !3074, !3079, !3084, !3086}
!2992 = !DIGlobalVariableExpression(var: !2993, expr: !DIExpression())
!2993 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2990, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!2994 = !DIGlobalVariableExpression(var: !2995, expr: !DIExpression())
!2995 = distinct !DIGlobalVariable(name: "short_list", scope: !2990, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!2996 = !DIGlobalVariableExpression(var: !2997, expr: !DIExpression())
!2997 = distinct !DIGlobalVariable(name: "short_output", scope: !2990, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!2998 = !DIGlobalVariableExpression(var: !2999, expr: !DIExpression())
!2999 = distinct !DIGlobalVariable(name: "include_idle", scope: !2990, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!3000 = !DIGlobalVariableExpression(var: !3001, expr: !DIExpression())
!3001 = distinct !DIGlobalVariable(name: "include_heading", scope: !2990, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!3002 = !DIGlobalVariableExpression(var: !3003, expr: !DIExpression())
!3003 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2990, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!3004 = !DIGlobalVariableExpression(var: !3005, expr: !DIExpression())
!3005 = distinct !DIGlobalVariable(name: "include_exit", scope: !2990, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!3006 = !DIGlobalVariableExpression(var: !3007, expr: !DIExpression())
!3007 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2990, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!3008 = !DIGlobalVariableExpression(var: !3009, expr: !DIExpression())
!3009 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2990, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!3010 = !DIGlobalVariableExpression(var: !3011, expr: !DIExpression())
!3011 = distinct !DIGlobalVariable(name: "need_login", scope: !2990, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!3012 = !DIGlobalVariableExpression(var: !3013, expr: !DIExpression())
!3013 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2990, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!3014 = !DIGlobalVariableExpression(var: !3015, expr: !DIExpression())
!3015 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2990, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!3016 = !DIGlobalVariableExpression(var: !3017, expr: !DIExpression())
!3017 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2990, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!3018 = !DIGlobalVariableExpression(var: !3019, expr: !DIExpression())
!3019 = distinct !DIGlobalVariable(name: "need_users", scope: !2990, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!3020 = !DIGlobalVariableExpression(var: !3021, expr: !DIExpression())
!3021 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2990, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!3022 = !DIGlobalVariableExpression(var: !3023, expr: !DIExpression())
!3023 = distinct !DIGlobalVariable(name: "time_format", scope: !2990, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!3024 = !DIGlobalVariableExpression(var: !3025, expr: !DIExpression())
!3025 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2990, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!3026 = !DIGlobalVariableExpression(var: !3027, expr: !DIExpression())
!3027 = distinct !DIGlobalVariable(name: "longopts", scope: !2990, file: !3, line: 162, type: !3028, isLocal: true, isDefinition: true)
!3028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3029, size: 4608, elements: !151)
!3029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3030)
!3030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !3031)
!3031 = !{!3032, !3033, !3034, !3035}
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3030, file: !144, line: 52, baseType: !49, size: 64)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !3030, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3030, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3030, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!3036 = !DIGlobalVariableExpression(var: !3037, expr: !DIExpression())
!3037 = distinct !DIGlobalVariable(name: "mesg", scope: !2989, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!3038 = !DIGlobalVariableExpression(var: !3039, expr: !DIExpression())
!3039 = distinct !DIGlobalVariable(name: "hoststr", scope: !3040, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!3040 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !3041, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2990, retainedNodes: !4)
!3041 = !DISubroutineType(types: !3042)
!3042 = !{null, !3043, !9}
!3043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3044, size: 64)
!3044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3045)
!3045 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !3046)
!3046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !3047)
!3047 = !{!3048, !3049, !3050, !3051, !3052, !3053, !3054, !3059, !3060, !3065, !3066}
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !3046, file: !72, line: 57, baseType: !14, size: 16)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !3046, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !3046, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !3046, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !3046, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !3046, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !3046, file: !72, line: 67, baseType: !3055, size: 32, offset: 2656)
!3055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !3056)
!3056 = !{!3057, !3058}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !3055, file: !72, line: 45, baseType: !14, size: 16)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !3055, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !3046, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !3046, file: !72, line: 79, baseType: !3061, size: 64, offset: 2720)
!3061 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !72, line: 75, size: 64, elements: !3062)
!3062 = !{!3063, !3064}
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3061, file: !72, line: 77, baseType: !96, size: 32)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !3061, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !3046, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3046, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!3067 = !DIGlobalVariableExpression(var: !3068, expr: !DIExpression())
!3068 = distinct !DIGlobalVariable(name: "hostlen", scope: !3040, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!3069 = !DIGlobalVariableExpression(var: !3070, expr: !DIExpression())
!3070 = distinct !DIGlobalVariable(name: "now", scope: !3071, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!3071 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2990, retainedNodes: !4)
!3072 = !DIGlobalVariableExpression(var: !3073, expr: !DIExpression())
!3073 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !3071, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!3074 = !DIGlobalVariableExpression(var: !3075, expr: !DIExpression())
!3075 = distinct !DIGlobalVariable(name: "buf", scope: !3076, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!3076 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !3077, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2990, retainedNodes: !4)
!3077 = !DISubroutineType(types: !3078)
!3078 = !{!49, !3043}
!3079 = !DIGlobalVariableExpression(var: !3080, expr: !DIExpression())
!3080 = distinct !DIGlobalVariable(name: "runlevline", scope: !3081, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!3081 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !3082, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2990, retainedNodes: !4)
!3082 = !DISubroutineType(types: !3083)
!3083 = !{null, !3043}
!3084 = !DIGlobalVariableExpression(var: !3085, expr: !DIExpression())
!3085 = distinct !DIGlobalVariable(name: "comment", scope: !3081, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!3086 = !DIGlobalVariableExpression(var: !3087, expr: !DIExpression())
!3087 = distinct !DIGlobalVariable(name: "exitstr", scope: !3088, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!3088 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !3082, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2990, retainedNodes: !4)
!3089 = !DILocalVariable(name: "user", arg: 2, scope: !2989, file: !3, line: 244, type: !49)
!3090 = !DILocalVariable(name: "state", arg: 3, scope: !2989, file: !3, line: 244, type: !50)
!3091 = !DILocalVariable(name: "linelen", arg: 4, scope: !2989, file: !3, line: 245, type: !53)
!3092 = !DILocalVariable(name: "line", arg: 5, scope: !2989, file: !3, line: 245, type: !49)
!3093 = !DILocalVariable(name: "time_str", arg: 6, scope: !2989, file: !3, line: 246, type: !49)
!3094 = !DILocalVariable(name: "idle", arg: 7, scope: !2989, file: !3, line: 246, type: !49)
!3095 = !DILocalVariable(name: "pid", arg: 8, scope: !2989, file: !3, line: 246, type: !49)
!3096 = !DILocalVariable(name: "comment", arg: 9, scope: !2989, file: !3, line: 247, type: !49)
!3097 = !DILocalVariable(name: "exitstr", arg: 10, scope: !2989, file: !3, line: 247, type: !49)
!3098 = !DILocalVariable(name: "buf", scope: !2989, file: !3, line: 250, type: !6)
!3099 = !DILocalVariable(name: "x_idle", scope: !2989, file: !3, line: 251, type: !2894)
!3100 = !DILocalVariable(name: "x_pid", scope: !2989, file: !3, line: 252, type: !2897)
!3101 = !DILocalVariable(name: "x_exitstr", scope: !2989, file: !3, line: 253, type: !6)
!3102 = !DILocalVariable(name: "err", scope: !2989, file: !3, line: 254, type: !53)
!3103 = distinct !DISubprogram(name: "timetostr", scope: !466, file: !466, line: 690, type: !3104, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!3104 = !DISubroutineType(types: !3105)
!3105 = !{!6, !9, !6}
!3106 = !DILocalVariable(name: "t", arg: 1, scope: !3103, file: !466, line: 690, type: !9)
!3107 = !DILocation(line: 690, column: 19, scope: !3103)
!3108 = !DILocalVariable(name: "buf", arg: 2, scope: !3103, file: !466, line: 690, type: !6)
!3109 = !DILocation(line: 690, column: 28, scope: !3103)
!3110 = !DILocation(line: 693, column: 24, scope: !3103)
!3111 = !DILocation(line: 693, column: 27, scope: !3103)
!3112 = !DILocation(line: 693, column: 13, scope: !3103)
!3113 = !DILocation(line: 692, column: 3, scope: !3103)
!3114 = !DILocalVariable(name: "t", arg: 1, scope: !3115, file: !466, line: 690, type: !9)
!3115 = distinct !DISubprogram(name: "timetostr", scope: !466, file: !466, line: 690, type: !3104, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3116, retainedNodes: !4)
!3116 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !3117, nameTableKind: None)
!3117 = !{!3118, !3120, !3122, !3124, !3126, !3128, !3130, !3132, !3134, !3136, !3138, !3140, !3142, !3144, !3146, !3148, !3150, !3152, !3162, !3165, !3194, !3196, !3199, !3201, !3206, !3211, !3213}
!3118 = !DIGlobalVariableExpression(var: !3119, expr: !DIExpression())
!3119 = distinct !DIGlobalVariable(name: "do_lookup", scope: !3116, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!3120 = !DIGlobalVariableExpression(var: !3121, expr: !DIExpression())
!3121 = distinct !DIGlobalVariable(name: "short_list", scope: !3116, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!3122 = !DIGlobalVariableExpression(var: !3123, expr: !DIExpression())
!3123 = distinct !DIGlobalVariable(name: "short_output", scope: !3116, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!3124 = !DIGlobalVariableExpression(var: !3125, expr: !DIExpression())
!3125 = distinct !DIGlobalVariable(name: "include_idle", scope: !3116, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!3126 = !DIGlobalVariableExpression(var: !3127, expr: !DIExpression())
!3127 = distinct !DIGlobalVariable(name: "include_heading", scope: !3116, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!3128 = !DIGlobalVariableExpression(var: !3129, expr: !DIExpression())
!3129 = distinct !DIGlobalVariable(name: "include_mesg", scope: !3116, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!3130 = !DIGlobalVariableExpression(var: !3131, expr: !DIExpression())
!3131 = distinct !DIGlobalVariable(name: "include_exit", scope: !3116, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!3132 = !DIGlobalVariableExpression(var: !3133, expr: !DIExpression())
!3133 = distinct !DIGlobalVariable(name: "need_boottime", scope: !3116, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!3134 = !DIGlobalVariableExpression(var: !3135, expr: !DIExpression())
!3135 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !3116, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!3136 = !DIGlobalVariableExpression(var: !3137, expr: !DIExpression())
!3137 = distinct !DIGlobalVariable(name: "need_login", scope: !3116, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!3138 = !DIGlobalVariableExpression(var: !3139, expr: !DIExpression())
!3139 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !3116, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!3140 = !DIGlobalVariableExpression(var: !3141, expr: !DIExpression())
!3141 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !3116, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!3142 = !DIGlobalVariableExpression(var: !3143, expr: !DIExpression())
!3143 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !3116, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!3144 = !DIGlobalVariableExpression(var: !3145, expr: !DIExpression())
!3145 = distinct !DIGlobalVariable(name: "need_users", scope: !3116, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!3146 = !DIGlobalVariableExpression(var: !3147, expr: !DIExpression())
!3147 = distinct !DIGlobalVariable(name: "my_line_only", scope: !3116, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!3148 = !DIGlobalVariableExpression(var: !3149, expr: !DIExpression())
!3149 = distinct !DIGlobalVariable(name: "time_format", scope: !3116, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!3150 = !DIGlobalVariableExpression(var: !3151, expr: !DIExpression())
!3151 = distinct !DIGlobalVariable(name: "time_format_width", scope: !3116, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!3152 = !DIGlobalVariableExpression(var: !3153, expr: !DIExpression())
!3153 = distinct !DIGlobalVariable(name: "longopts", scope: !3116, file: !3, line: 162, type: !3154, isLocal: true, isDefinition: true)
!3154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3155, size: 4608, elements: !151)
!3155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3156)
!3156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !3157)
!3157 = !{!3158, !3159, !3160, !3161}
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3156, file: !144, line: 52, baseType: !49, size: 64)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !3156, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3156, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3156, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!3162 = !DIGlobalVariableExpression(var: !3163, expr: !DIExpression())
!3163 = distinct !DIGlobalVariable(name: "mesg", scope: !3164, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!3164 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3116, retainedNodes: !4)
!3165 = !DIGlobalVariableExpression(var: !3166, expr: !DIExpression())
!3166 = distinct !DIGlobalVariable(name: "hoststr", scope: !3167, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!3167 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !3168, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3116, retainedNodes: !4)
!3168 = !DISubroutineType(types: !3169)
!3169 = !{null, !3170, !9}
!3170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3171, size: 64)
!3171 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3172)
!3172 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !3173)
!3173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !3174)
!3174 = !{!3175, !3176, !3177, !3178, !3179, !3180, !3181, !3186, !3187, !3192, !3193}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !3173, file: !72, line: 57, baseType: !14, size: 16)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !3173, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !3173, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !3173, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !3173, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !3173, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !3173, file: !72, line: 67, baseType: !3182, size: 32, offset: 2656)
!3182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !3183)
!3183 = !{!3184, !3185}
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !3182, file: !72, line: 45, baseType: !14, size: 16)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !3182, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !3173, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !3173, file: !72, line: 79, baseType: !3188, size: 64, offset: 2720)
!3188 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3173, file: !72, line: 75, size: 64, elements: !3189)
!3189 = !{!3190, !3191}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3188, file: !72, line: 77, baseType: !96, size: 32)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !3188, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !3173, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3173, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!3194 = !DIGlobalVariableExpression(var: !3195, expr: !DIExpression())
!3195 = distinct !DIGlobalVariable(name: "hostlen", scope: !3167, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!3196 = !DIGlobalVariableExpression(var: !3197, expr: !DIExpression())
!3197 = distinct !DIGlobalVariable(name: "now", scope: !3198, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!3198 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3116, retainedNodes: !4)
!3199 = !DIGlobalVariableExpression(var: !3200, expr: !DIExpression())
!3200 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !3198, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!3201 = !DIGlobalVariableExpression(var: !3202, expr: !DIExpression())
!3202 = distinct !DIGlobalVariable(name: "buf", scope: !3203, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!3203 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !3204, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3116, retainedNodes: !4)
!3204 = !DISubroutineType(types: !3205)
!3205 = !{!49, !3170}
!3206 = !DIGlobalVariableExpression(var: !3207, expr: !DIExpression())
!3207 = distinct !DIGlobalVariable(name: "runlevline", scope: !3208, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!3208 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !3209, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3116, retainedNodes: !4)
!3209 = !DISubroutineType(types: !3210)
!3210 = !{null, !3170}
!3211 = !DIGlobalVariableExpression(var: !3212, expr: !DIExpression())
!3212 = distinct !DIGlobalVariable(name: "comment", scope: !3208, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!3213 = !DIGlobalVariableExpression(var: !3214, expr: !DIExpression())
!3214 = distinct !DIGlobalVariable(name: "exitstr", scope: !3215, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!3215 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !3209, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3116, retainedNodes: !4)
!3216 = !DILocalVariable(name: "buf", arg: 2, scope: !3115, file: !466, line: 690, type: !6)
!3217 = distinct !DISubprogram(name: "stzncpy", scope: !466, file: !466, line: 741, type: !3218, scopeLine: 742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!3218 = !DISubroutineType(types: !3219)
!3219 = !{!6, !3220, !3221, !110}
!3220 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !6)
!3221 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !49)
!3222 = !DILocalVariable(name: "dest", arg: 1, scope: !3217, file: !466, line: 741, type: !3220)
!3223 = !DILocation(line: 741, column: 25, scope: !3217)
!3224 = !DILocalVariable(name: "src", arg: 2, scope: !3217, file: !466, line: 741, type: !3221)
!3225 = !DILocation(line: 741, column: 52, scope: !3217)
!3226 = !DILocalVariable(name: "len", arg: 3, scope: !3217, file: !466, line: 741, type: !110)
!3227 = !DILocation(line: 741, column: 64, scope: !3217)
!3228 = !DILocalVariable(name: "src_end", scope: !3217, file: !466, line: 743, type: !49)
!3229 = !DILocation(line: 743, column: 15, scope: !3217)
!3230 = !DILocation(line: 743, column: 25, scope: !3217)
!3231 = !DILocation(line: 743, column: 31, scope: !3217)
!3232 = !DILocation(line: 743, column: 29, scope: !3217)
!3233 = !DILocation(line: 744, column: 3, scope: !3217)
!3234 = !DILocation(line: 744, column: 10, scope: !3217)
!3235 = !DILocation(line: 744, column: 16, scope: !3217)
!3236 = !DILocation(line: 744, column: 14, scope: !3217)
!3237 = !DILocation(line: 744, column: 24, scope: !3217)
!3238 = !DILocation(line: 744, column: 28, scope: !3217)
!3239 = !DILocation(line: 744, column: 27, scope: !3217)
!3240 = !DILocation(line: 0, scope: !3217)
!3241 = !DILocation(line: 745, column: 19, scope: !3217)
!3242 = !DILocation(line: 745, column: 15, scope: !3217)
!3243 = !DILocation(line: 745, column: 10, scope: !3217)
!3244 = !DILocation(line: 745, column: 13, scope: !3217)
!3245 = distinct !{!3245, !3233, !3241}
!3246 = !DILocation(line: 746, column: 4, scope: !3217)
!3247 = !DILocation(line: 746, column: 9, scope: !3217)
!3248 = !DILocation(line: 747, column: 10, scope: !3217)
!3249 = !DILocation(line: 747, column: 3, scope: !3217)
!3250 = !DILocalVariable(name: "dest", arg: 1, scope: !3251, file: !466, line: 741, type: !3220)
!3251 = distinct !DISubprogram(name: "stzncpy", scope: !466, file: !466, line: 741, type: !3218, scopeLine: 742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3252, retainedNodes: !4)
!3252 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !3253, nameTableKind: None)
!3253 = !{!3254, !3256, !3258, !3260, !3262, !3264, !3266, !3268, !3270, !3272, !3274, !3276, !3278, !3280, !3282, !3284, !3286, !3288, !3298, !3301, !3330, !3332, !3335, !3337, !3342, !3347, !3349}
!3254 = !DIGlobalVariableExpression(var: !3255, expr: !DIExpression())
!3255 = distinct !DIGlobalVariable(name: "do_lookup", scope: !3252, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!3256 = !DIGlobalVariableExpression(var: !3257, expr: !DIExpression())
!3257 = distinct !DIGlobalVariable(name: "short_list", scope: !3252, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!3258 = !DIGlobalVariableExpression(var: !3259, expr: !DIExpression())
!3259 = distinct !DIGlobalVariable(name: "short_output", scope: !3252, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!3260 = !DIGlobalVariableExpression(var: !3261, expr: !DIExpression())
!3261 = distinct !DIGlobalVariable(name: "include_idle", scope: !3252, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!3262 = !DIGlobalVariableExpression(var: !3263, expr: !DIExpression())
!3263 = distinct !DIGlobalVariable(name: "include_heading", scope: !3252, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!3264 = !DIGlobalVariableExpression(var: !3265, expr: !DIExpression())
!3265 = distinct !DIGlobalVariable(name: "include_mesg", scope: !3252, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!3266 = !DIGlobalVariableExpression(var: !3267, expr: !DIExpression())
!3267 = distinct !DIGlobalVariable(name: "include_exit", scope: !3252, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!3268 = !DIGlobalVariableExpression(var: !3269, expr: !DIExpression())
!3269 = distinct !DIGlobalVariable(name: "need_boottime", scope: !3252, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!3270 = !DIGlobalVariableExpression(var: !3271, expr: !DIExpression())
!3271 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !3252, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!3272 = !DIGlobalVariableExpression(var: !3273, expr: !DIExpression())
!3273 = distinct !DIGlobalVariable(name: "need_login", scope: !3252, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!3274 = !DIGlobalVariableExpression(var: !3275, expr: !DIExpression())
!3275 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !3252, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!3276 = !DIGlobalVariableExpression(var: !3277, expr: !DIExpression())
!3277 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !3252, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!3278 = !DIGlobalVariableExpression(var: !3279, expr: !DIExpression())
!3279 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !3252, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!3280 = !DIGlobalVariableExpression(var: !3281, expr: !DIExpression())
!3281 = distinct !DIGlobalVariable(name: "need_users", scope: !3252, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!3282 = !DIGlobalVariableExpression(var: !3283, expr: !DIExpression())
!3283 = distinct !DIGlobalVariable(name: "my_line_only", scope: !3252, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!3284 = !DIGlobalVariableExpression(var: !3285, expr: !DIExpression())
!3285 = distinct !DIGlobalVariable(name: "time_format", scope: !3252, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!3286 = !DIGlobalVariableExpression(var: !3287, expr: !DIExpression())
!3287 = distinct !DIGlobalVariable(name: "time_format_width", scope: !3252, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!3288 = !DIGlobalVariableExpression(var: !3289, expr: !DIExpression())
!3289 = distinct !DIGlobalVariable(name: "longopts", scope: !3252, file: !3, line: 162, type: !3290, isLocal: true, isDefinition: true)
!3290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3291, size: 4608, elements: !151)
!3291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3292)
!3292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !3293)
!3293 = !{!3294, !3295, !3296, !3297}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3292, file: !144, line: 52, baseType: !49, size: 64)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !3292, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3292, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3292, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!3298 = !DIGlobalVariableExpression(var: !3299, expr: !DIExpression())
!3299 = distinct !DIGlobalVariable(name: "mesg", scope: !3300, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!3300 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3252, retainedNodes: !4)
!3301 = !DIGlobalVariableExpression(var: !3302, expr: !DIExpression())
!3302 = distinct !DIGlobalVariable(name: "hoststr", scope: !3303, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!3303 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !3304, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3252, retainedNodes: !4)
!3304 = !DISubroutineType(types: !3305)
!3305 = !{null, !3306, !9}
!3306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3307, size: 64)
!3307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3308)
!3308 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !3309)
!3309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !3310)
!3310 = !{!3311, !3312, !3313, !3314, !3315, !3316, !3317, !3322, !3323, !3328, !3329}
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !3309, file: !72, line: 57, baseType: !14, size: 16)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !3309, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !3309, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !3309, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !3309, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !3309, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !3309, file: !72, line: 67, baseType: !3318, size: 32, offset: 2656)
!3318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !3319)
!3319 = !{!3320, !3321}
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !3318, file: !72, line: 45, baseType: !14, size: 16)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !3318, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !3309, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !3309, file: !72, line: 79, baseType: !3324, size: 64, offset: 2720)
!3324 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3309, file: !72, line: 75, size: 64, elements: !3325)
!3325 = !{!3326, !3327}
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3324, file: !72, line: 77, baseType: !96, size: 32)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !3324, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !3309, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3309, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!3330 = !DIGlobalVariableExpression(var: !3331, expr: !DIExpression())
!3331 = distinct !DIGlobalVariable(name: "hostlen", scope: !3303, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!3332 = !DIGlobalVariableExpression(var: !3333, expr: !DIExpression())
!3333 = distinct !DIGlobalVariable(name: "now", scope: !3334, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!3334 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3252, retainedNodes: !4)
!3335 = !DIGlobalVariableExpression(var: !3336, expr: !DIExpression())
!3336 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !3334, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!3337 = !DIGlobalVariableExpression(var: !3338, expr: !DIExpression())
!3338 = distinct !DIGlobalVariable(name: "buf", scope: !3339, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!3339 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !3340, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3252, retainedNodes: !4)
!3340 = !DISubroutineType(types: !3341)
!3341 = !{!49, !3306}
!3342 = !DIGlobalVariableExpression(var: !3343, expr: !DIExpression())
!3343 = distinct !DIGlobalVariable(name: "runlevline", scope: !3344, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!3344 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !3345, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3252, retainedNodes: !4)
!3345 = !DISubroutineType(types: !3346)
!3346 = !{null, !3306}
!3347 = !DIGlobalVariableExpression(var: !3348, expr: !DIExpression())
!3348 = distinct !DIGlobalVariable(name: "comment", scope: !3344, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!3349 = !DIGlobalVariableExpression(var: !3350, expr: !DIExpression())
!3350 = distinct !DIGlobalVariable(name: "exitstr", scope: !3351, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!3351 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !3345, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3252, retainedNodes: !4)
!3352 = !DILocalVariable(name: "src", arg: 2, scope: !3251, file: !466, line: 741, type: !3221)
!3353 = !DILocalVariable(name: "len", arg: 3, scope: !3251, file: !466, line: 741, type: !110)
!3354 = !DILocalVariable(name: "src_end", scope: !3251, file: !466, line: 743, type: !49)
!3355 = distinct !DISubprogram(name: "is_tty_writable", scope: !3, file: !3, line: 317, type: !3356, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!3356 = !DISubroutineType(types: !3357)
!3357 = !{!18, !3358}
!3358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3359, size: 64)
!3359 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1373)
!3360 = !DILocalVariable(name: "pstat", arg: 1, scope: !3355, file: !3, line: 317, type: !3358)
!3361 = !DILocation(line: 317, column: 37, scope: !3355)
!3362 = !DILocation(line: 327, column: 10, scope: !3355)
!3363 = !DILocation(line: 327, column: 17, scope: !3355)
!3364 = !DILocation(line: 327, column: 25, scope: !3355)
!3365 = !DILocation(line: 327, column: 3, scope: !3355)
!3366 = !DILocalVariable(name: "pstat", arg: 1, scope: !3367, file: !3, line: 317, type: !3370)
!3367 = distinct !DISubprogram(name: "is_tty_writable", scope: !3, file: !3, line: 317, type: !3368, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3393, retainedNodes: !4)
!3368 = !DISubroutineType(types: !3369)
!3369 = !{!18, !3370}
!3370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3371, size: 64)
!3371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3372)
!3372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !1374, line: 46, size: 1152, elements: !3373)
!3373 = !{!3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3390, !3391, !3392}
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !3372, file: !1374, line: 48, baseType: !1377, size: 64)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !3372, file: !1374, line: 53, baseType: !1379, size: 64, offset: 64)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !3372, file: !1374, line: 61, baseType: !1381, size: 64, offset: 128)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !3372, file: !1374, line: 62, baseType: !1383, size: 32, offset: 192)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !3372, file: !1374, line: 64, baseType: !1385, size: 32, offset: 224)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !3372, file: !1374, line: 65, baseType: !1387, size: 32, offset: 256)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !3372, file: !1374, line: 67, baseType: !53, size: 32, offset: 288)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !3372, file: !1374, line: 69, baseType: !1377, size: 64, offset: 320)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !3372, file: !1374, line: 74, baseType: !1391, size: 64, offset: 384)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !3372, file: !1374, line: 78, baseType: !1393, size: 64, offset: 448)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !3372, file: !1374, line: 80, baseType: !1395, size: 64, offset: 512)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !3372, file: !1374, line: 91, baseType: !3386, size: 128, offset: 576)
!3386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !1398, line: 10, size: 128, elements: !3387)
!3387 = !{!3388, !3389}
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3386, file: !1398, line: 12, baseType: !11, size: 64)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !3386, file: !1398, line: 16, baseType: !1402, size: 64, offset: 64)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !3372, file: !1374, line: 92, baseType: !3386, size: 128, offset: 704)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !3372, file: !1374, line: 93, baseType: !3386, size: 128, offset: 832)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3372, file: !1374, line: 106, baseType: !1406, size: 192, offset: 960)
!3393 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !3394, nameTableKind: None)
!3394 = !{!3395, !3397, !3399, !3401, !3403, !3405, !3407, !3409, !3411, !3413, !3415, !3417, !3419, !3421, !3423, !3425, !3427, !3429, !3439, !3442, !3471, !3473, !3476, !3478, !3483, !3488, !3490}
!3395 = !DIGlobalVariableExpression(var: !3396, expr: !DIExpression())
!3396 = distinct !DIGlobalVariable(name: "do_lookup", scope: !3393, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!3397 = !DIGlobalVariableExpression(var: !3398, expr: !DIExpression())
!3398 = distinct !DIGlobalVariable(name: "short_list", scope: !3393, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!3399 = !DIGlobalVariableExpression(var: !3400, expr: !DIExpression())
!3400 = distinct !DIGlobalVariable(name: "short_output", scope: !3393, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!3401 = !DIGlobalVariableExpression(var: !3402, expr: !DIExpression())
!3402 = distinct !DIGlobalVariable(name: "include_idle", scope: !3393, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!3403 = !DIGlobalVariableExpression(var: !3404, expr: !DIExpression())
!3404 = distinct !DIGlobalVariable(name: "include_heading", scope: !3393, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!3405 = !DIGlobalVariableExpression(var: !3406, expr: !DIExpression())
!3406 = distinct !DIGlobalVariable(name: "include_mesg", scope: !3393, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!3407 = !DIGlobalVariableExpression(var: !3408, expr: !DIExpression())
!3408 = distinct !DIGlobalVariable(name: "include_exit", scope: !3393, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!3409 = !DIGlobalVariableExpression(var: !3410, expr: !DIExpression())
!3410 = distinct !DIGlobalVariable(name: "need_boottime", scope: !3393, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!3411 = !DIGlobalVariableExpression(var: !3412, expr: !DIExpression())
!3412 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !3393, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!3413 = !DIGlobalVariableExpression(var: !3414, expr: !DIExpression())
!3414 = distinct !DIGlobalVariable(name: "need_login", scope: !3393, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!3415 = !DIGlobalVariableExpression(var: !3416, expr: !DIExpression())
!3416 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !3393, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!3417 = !DIGlobalVariableExpression(var: !3418, expr: !DIExpression())
!3418 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !3393, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!3419 = !DIGlobalVariableExpression(var: !3420, expr: !DIExpression())
!3420 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !3393, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!3421 = !DIGlobalVariableExpression(var: !3422, expr: !DIExpression())
!3422 = distinct !DIGlobalVariable(name: "need_users", scope: !3393, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!3423 = !DIGlobalVariableExpression(var: !3424, expr: !DIExpression())
!3424 = distinct !DIGlobalVariable(name: "my_line_only", scope: !3393, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!3425 = !DIGlobalVariableExpression(var: !3426, expr: !DIExpression())
!3426 = distinct !DIGlobalVariable(name: "time_format", scope: !3393, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!3427 = !DIGlobalVariableExpression(var: !3428, expr: !DIExpression())
!3428 = distinct !DIGlobalVariable(name: "time_format_width", scope: !3393, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!3429 = !DIGlobalVariableExpression(var: !3430, expr: !DIExpression())
!3430 = distinct !DIGlobalVariable(name: "longopts", scope: !3393, file: !3, line: 162, type: !3431, isLocal: true, isDefinition: true)
!3431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3432, size: 4608, elements: !151)
!3432 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3433)
!3433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !3434)
!3434 = !{!3435, !3436, !3437, !3438}
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3433, file: !144, line: 52, baseType: !49, size: 64)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !3433, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3433, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3433, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!3439 = !DIGlobalVariableExpression(var: !3440, expr: !DIExpression())
!3440 = distinct !DIGlobalVariable(name: "mesg", scope: !3441, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!3441 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3393, retainedNodes: !4)
!3442 = !DIGlobalVariableExpression(var: !3443, expr: !DIExpression())
!3443 = distinct !DIGlobalVariable(name: "hoststr", scope: !3444, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!3444 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !3445, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3393, retainedNodes: !4)
!3445 = !DISubroutineType(types: !3446)
!3446 = !{null, !3447, !9}
!3447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3448, size: 64)
!3448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3449)
!3449 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !3450)
!3450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !3451)
!3451 = !{!3452, !3453, !3454, !3455, !3456, !3457, !3458, !3463, !3464, !3469, !3470}
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !3450, file: !72, line: 57, baseType: !14, size: 16)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !3450, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !3450, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !3450, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !3450, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !3450, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !3450, file: !72, line: 67, baseType: !3459, size: 32, offset: 2656)
!3459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !3460)
!3460 = !{!3461, !3462}
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !3459, file: !72, line: 45, baseType: !14, size: 16)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !3459, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !3450, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !3450, file: !72, line: 79, baseType: !3465, size: 64, offset: 2720)
!3465 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3450, file: !72, line: 75, size: 64, elements: !3466)
!3466 = !{!3467, !3468}
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3465, file: !72, line: 77, baseType: !96, size: 32)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !3465, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !3450, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3450, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!3471 = !DIGlobalVariableExpression(var: !3472, expr: !DIExpression())
!3472 = distinct !DIGlobalVariable(name: "hostlen", scope: !3444, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!3473 = !DIGlobalVariableExpression(var: !3474, expr: !DIExpression())
!3474 = distinct !DIGlobalVariable(name: "now", scope: !3475, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!3475 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3393, retainedNodes: !4)
!3476 = !DIGlobalVariableExpression(var: !3477, expr: !DIExpression())
!3477 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !3475, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!3478 = !DIGlobalVariableExpression(var: !3479, expr: !DIExpression())
!3479 = distinct !DIGlobalVariable(name: "buf", scope: !3480, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!3480 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !3481, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3393, retainedNodes: !4)
!3481 = !DISubroutineType(types: !3482)
!3482 = !{!49, !3447}
!3483 = !DIGlobalVariableExpression(var: !3484, expr: !DIExpression())
!3484 = distinct !DIGlobalVariable(name: "runlevline", scope: !3485, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!3485 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !3486, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3393, retainedNodes: !4)
!3486 = !DISubroutineType(types: !3487)
!3487 = !{null, !3447}
!3488 = !DIGlobalVariableExpression(var: !3489, expr: !DIExpression())
!3489 = distinct !DIGlobalVariable(name: "comment", scope: !3485, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!3490 = !DIGlobalVariableExpression(var: !3491, expr: !DIExpression())
!3491 = distinct !DIGlobalVariable(name: "exitstr", scope: !3492, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!3492 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !3486, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3393, retainedNodes: !4)
!3493 = !DILocalVariable(name: "when", arg: 1, scope: !115, file: !3, line: 188, type: !9)
!3494 = !DILocation(line: 188, column: 21, scope: !115)
!3495 = !DILocalVariable(name: "boottime", arg: 2, scope: !115, file: !3, line: 188, type: !9)
!3496 = !DILocation(line: 188, column: 34, scope: !115)
!3497 = !DILocation(line: 192, column: 7, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !115, file: !3, line: 192, column: 7)
!3499 = !DILocation(line: 192, column: 11, scope: !3498)
!3500 = !DILocation(line: 192, column: 7, scope: !115)
!3501 = !DILocation(line: 193, column: 5, scope: !3498)
!3502 = !DILocation(line: 195, column: 7, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !115, file: !3, line: 195, column: 7)
!3504 = !DILocation(line: 195, column: 18, scope: !3503)
!3505 = !DILocation(line: 195, column: 16, scope: !3503)
!3506 = !DILocation(line: 195, column: 23, scope: !3503)
!3507 = !DILocation(line: 195, column: 26, scope: !3503)
!3508 = !DILocation(line: 195, column: 30, scope: !3503)
!3509 = !DILocation(line: 195, column: 47, scope: !3503)
!3510 = !DILocation(line: 195, column: 45, scope: !3503)
!3511 = !DILocation(line: 195, column: 52, scope: !3503)
!3512 = !DILocation(line: 195, column: 55, scope: !3503)
!3513 = !DILocation(line: 195, column: 63, scope: !3503)
!3514 = !DILocation(line: 195, column: 60, scope: !3503)
!3515 = !DILocation(line: 195, column: 7, scope: !115)
!3516 = !DILocalVariable(name: "seconds_idle", scope: !3517, file: !3, line: 197, type: !53)
!3517 = distinct !DILexicalBlock(scope: !3503, file: !3, line: 196, column: 5)
!3518 = !DILocation(line: 197, column: 11, scope: !3517)
!3519 = !DILocation(line: 197, column: 26, scope: !3517)
!3520 = !DILocation(line: 197, column: 32, scope: !3517)
!3521 = !DILocation(line: 197, column: 30, scope: !3517)
!3522 = !DILocation(line: 198, column: 11, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 198, column: 11)
!3524 = !DILocation(line: 198, column: 24, scope: !3523)
!3525 = !DILocation(line: 198, column: 11, scope: !3517)
!3526 = !DILocation(line: 199, column: 9, scope: !3523)
!3527 = !DILocation(line: 205, column: 11, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3529, file: !3, line: 205, column: 11)
!3529 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 205, column: 11)
!3530 = distinct !DILexicalBlock(scope: !3523, file: !3, line: 201, column: 9)
!3531 = !DILocation(line: 205, column: 11, scope: !3529)
!3532 = !DILocation(line: 207, column: 20, scope: !3530)
!3533 = !DILocation(line: 207, column: 33, scope: !3530)
!3534 = !DILocation(line: 208, column: 21, scope: !3530)
!3535 = !DILocation(line: 208, column: 34, scope: !3530)
!3536 = !DILocation(line: 208, column: 47, scope: !3530)
!3537 = !DILocation(line: 206, column: 11, scope: !3530)
!3538 = !DILocation(line: 209, column: 11, scope: !3530)
!3539 = !DILocation(line: 213, column: 10, scope: !115)
!3540 = !DILocation(line: 213, column: 3, scope: !115)
!3541 = !DILocation(line: 214, column: 1, scope: !115)
!3542 = !DILocalVariable(name: "when", arg: 1, scope: !3543, file: !3, line: 188, type: !9)
!3543 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3544, retainedNodes: !4)
!3544 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !3545, nameTableKind: None)
!3545 = !{!3546, !3548, !3550, !3552, !3554, !3556, !3558, !3560, !3562, !3564, !3566, !3568, !3570, !3572, !3574, !3576, !3578, !3580, !3590, !3593, !3622, !3624, !3626, !3628, !3633, !3638, !3640}
!3546 = !DIGlobalVariableExpression(var: !3547, expr: !DIExpression())
!3547 = distinct !DIGlobalVariable(name: "do_lookup", scope: !3544, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!3548 = !DIGlobalVariableExpression(var: !3549, expr: !DIExpression())
!3549 = distinct !DIGlobalVariable(name: "short_list", scope: !3544, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!3550 = !DIGlobalVariableExpression(var: !3551, expr: !DIExpression())
!3551 = distinct !DIGlobalVariable(name: "short_output", scope: !3544, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!3552 = !DIGlobalVariableExpression(var: !3553, expr: !DIExpression())
!3553 = distinct !DIGlobalVariable(name: "include_idle", scope: !3544, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!3554 = !DIGlobalVariableExpression(var: !3555, expr: !DIExpression())
!3555 = distinct !DIGlobalVariable(name: "include_heading", scope: !3544, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!3556 = !DIGlobalVariableExpression(var: !3557, expr: !DIExpression())
!3557 = distinct !DIGlobalVariable(name: "include_mesg", scope: !3544, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!3558 = !DIGlobalVariableExpression(var: !3559, expr: !DIExpression())
!3559 = distinct !DIGlobalVariable(name: "include_exit", scope: !3544, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!3560 = !DIGlobalVariableExpression(var: !3561, expr: !DIExpression())
!3561 = distinct !DIGlobalVariable(name: "need_boottime", scope: !3544, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!3562 = !DIGlobalVariableExpression(var: !3563, expr: !DIExpression())
!3563 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !3544, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!3564 = !DIGlobalVariableExpression(var: !3565, expr: !DIExpression())
!3565 = distinct !DIGlobalVariable(name: "need_login", scope: !3544, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!3566 = !DIGlobalVariableExpression(var: !3567, expr: !DIExpression())
!3567 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !3544, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!3568 = !DIGlobalVariableExpression(var: !3569, expr: !DIExpression())
!3569 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !3544, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!3570 = !DIGlobalVariableExpression(var: !3571, expr: !DIExpression())
!3571 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !3544, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!3572 = !DIGlobalVariableExpression(var: !3573, expr: !DIExpression())
!3573 = distinct !DIGlobalVariable(name: "need_users", scope: !3544, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!3574 = !DIGlobalVariableExpression(var: !3575, expr: !DIExpression())
!3575 = distinct !DIGlobalVariable(name: "my_line_only", scope: !3544, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!3576 = !DIGlobalVariableExpression(var: !3577, expr: !DIExpression())
!3577 = distinct !DIGlobalVariable(name: "time_format", scope: !3544, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!3578 = !DIGlobalVariableExpression(var: !3579, expr: !DIExpression())
!3579 = distinct !DIGlobalVariable(name: "time_format_width", scope: !3544, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!3580 = !DIGlobalVariableExpression(var: !3581, expr: !DIExpression())
!3581 = distinct !DIGlobalVariable(name: "longopts", scope: !3544, file: !3, line: 162, type: !3582, isLocal: true, isDefinition: true)
!3582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3583, size: 4608, elements: !151)
!3583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3584)
!3584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !3585)
!3585 = !{!3586, !3587, !3588, !3589}
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3584, file: !144, line: 52, baseType: !49, size: 64)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !3584, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3584, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3584, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!3590 = !DIGlobalVariableExpression(var: !3591, expr: !DIExpression())
!3591 = distinct !DIGlobalVariable(name: "mesg", scope: !3592, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!3592 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3544, retainedNodes: !4)
!3593 = !DIGlobalVariableExpression(var: !3594, expr: !DIExpression())
!3594 = distinct !DIGlobalVariable(name: "hoststr", scope: !3595, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!3595 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !3596, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3544, retainedNodes: !4)
!3596 = !DISubroutineType(types: !3597)
!3597 = !{null, !3598, !9}
!3598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3599, size: 64)
!3599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3600)
!3600 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !3601)
!3601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !3602)
!3602 = !{!3603, !3604, !3605, !3606, !3607, !3608, !3609, !3614, !3615, !3620, !3621}
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !3601, file: !72, line: 57, baseType: !14, size: 16)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !3601, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !3601, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !3601, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !3601, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !3601, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !3601, file: !72, line: 67, baseType: !3610, size: 32, offset: 2656)
!3610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !3611)
!3611 = !{!3612, !3613}
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !3610, file: !72, line: 45, baseType: !14, size: 16)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !3610, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !3601, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !3601, file: !72, line: 79, baseType: !3616, size: 64, offset: 2720)
!3616 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3601, file: !72, line: 75, size: 64, elements: !3617)
!3617 = !{!3618, !3619}
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3616, file: !72, line: 77, baseType: !96, size: 32)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !3616, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !3601, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3601, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!3622 = !DIGlobalVariableExpression(var: !3623, expr: !DIExpression())
!3623 = distinct !DIGlobalVariable(name: "hostlen", scope: !3595, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!3624 = !DIGlobalVariableExpression(var: !3625, expr: !DIExpression())
!3625 = distinct !DIGlobalVariable(name: "now", scope: !3543, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!3626 = !DIGlobalVariableExpression(var: !3627, expr: !DIExpression())
!3627 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !3543, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!3628 = !DIGlobalVariableExpression(var: !3629, expr: !DIExpression())
!3629 = distinct !DIGlobalVariable(name: "buf", scope: !3630, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!3630 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !3631, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3544, retainedNodes: !4)
!3631 = !DISubroutineType(types: !3632)
!3632 = !{!49, !3598}
!3633 = !DIGlobalVariableExpression(var: !3634, expr: !DIExpression())
!3634 = distinct !DIGlobalVariable(name: "runlevline", scope: !3635, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!3635 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !3636, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3544, retainedNodes: !4)
!3636 = !DISubroutineType(types: !3637)
!3637 = !{null, !3598}
!3638 = !DIGlobalVariableExpression(var: !3639, expr: !DIExpression())
!3639 = distinct !DIGlobalVariable(name: "comment", scope: !3635, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!3640 = !DIGlobalVariableExpression(var: !3641, expr: !DIExpression())
!3641 = distinct !DIGlobalVariable(name: "exitstr", scope: !3642, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!3642 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !3636, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3544, retainedNodes: !4)
!3643 = !DILocalVariable(name: "boottime", arg: 2, scope: !3543, file: !3, line: 188, type: !9)
!3644 = distinct !DISubprogram(name: "c_isprint", scope: !3645, file: !3645, line: 272, type: !3646, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !286, retainedNodes: !4)
!3645 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3646 = !DISubroutineType(types: !3647)
!3647 = !{!18, !53}
!3648 = !DILocalVariable(name: "c", arg: 1, scope: !3644, file: !3645, line: 272, type: !53)
!3649 = !DILocation(line: 272, column: 16, scope: !3644)
!3650 = !DILocation(line: 274, column: 11, scope: !3644)
!3651 = !DILocation(line: 274, column: 3, scope: !3644)
!3652 = !DILocation(line: 281, column: 7, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3644, file: !3645, line: 275, column: 5)
!3654 = !DILocation(line: 283, column: 7, scope: !3653)
!3655 = !DILocation(line: 285, column: 1, scope: !3644)
!3656 = !DILocalVariable(name: "c", arg: 1, scope: !3657, file: !3645, line: 272, type: !53)
!3657 = distinct !DISubprogram(name: "c_isprint", scope: !3645, file: !3645, line: 272, type: !3646, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3658, retainedNodes: !4)
!3658 = distinct !DICompileUnit(language: DW_LANG_C99, file: !287, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!3659 = distinct !DISubprogram(name: "c_tolower", scope: !3645, file: !3645, line: 337, type: !3660, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !286, retainedNodes: !4)
!3660 = !DISubroutineType(types: !3661)
!3661 = !{!53, !53}
!3662 = !DILocalVariable(name: "c", arg: 1, scope: !3659, file: !3645, line: 337, type: !53)
!3663 = !DILocation(line: 337, column: 16, scope: !3659)
!3664 = !DILocation(line: 339, column: 11, scope: !3659)
!3665 = !DILocation(line: 339, column: 3, scope: !3659)
!3666 = !DILocation(line: 342, column: 14, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3659, file: !3645, line: 340, column: 5)
!3668 = !DILocation(line: 342, column: 16, scope: !3667)
!3669 = !DILocation(line: 342, column: 22, scope: !3667)
!3670 = !DILocation(line: 342, column: 7, scope: !3667)
!3671 = !DILocation(line: 344, column: 14, scope: !3667)
!3672 = !DILocation(line: 344, column: 7, scope: !3667)
!3673 = !DILocation(line: 346, column: 1, scope: !3659)
!3674 = !DILocalVariable(name: "c", arg: 1, scope: !3675, file: !3645, line: 337, type: !53)
!3675 = distinct !DISubprogram(name: "c_tolower", scope: !3645, file: !3645, line: 337, type: !3660, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3676, retainedNodes: !4)
!3676 = distinct !DICompileUnit(language: DW_LANG_C99, file: !287, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!3677 = distinct !DISubprogram(name: "canon_host", scope: !166, file: !166, line: 33, type: !3678, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !160, retainedNodes: !4)
!3678 = !DISubroutineType(types: !3679)
!3679 = !{!6, !49}
!3680 = !DILocalVariable(name: "host", arg: 1, scope: !3677, file: !166, line: 33, type: !49)
!3681 = !DILocation(line: 33, column: 25, scope: !3677)
!3682 = !DILocation(line: 35, column: 24, scope: !3677)
!3683 = !DILocation(line: 35, column: 10, scope: !3677)
!3684 = !DILocation(line: 35, column: 3, scope: !3677)
!3685 = !DILocalVariable(name: "host", arg: 1, scope: !3686, file: !166, line: 33, type: !49)
!3686 = distinct !DISubprogram(name: "canon_host", scope: !166, file: !166, line: 33, type: !3678, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3687, retainedNodes: !4)
!3687 = distinct !DICompileUnit(language: DW_LANG_C99, file: !161, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !3688, nameTableKind: None)
!3688 = !{!3689, !3708}
!3689 = !DIGlobalVariableExpression(var: !3690, expr: !DIExpression())
!3690 = distinct !DIGlobalVariable(name: "hints", scope: !3691, file: !166, line: 64, type: !3692, isLocal: true, isDefinition: true)
!3691 = distinct !DISubprogram(name: "canon_host_r", scope: !166, file: !166, line: 61, type: !167, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3687, retainedNodes: !4)
!3692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "addrinfo", file: !170, line: 565, size: 384, elements: !3693)
!3693 = !{!3694, !3695, !3696, !3697, !3698, !3699, !3705, !3706}
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "ai_flags", scope: !3692, file: !170, line: 567, baseType: !53, size: 32)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "ai_family", scope: !3692, file: !170, line: 568, baseType: !53, size: 32, offset: 32)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "ai_socktype", scope: !3692, file: !170, line: 569, baseType: !53, size: 32, offset: 64)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "ai_protocol", scope: !3692, file: !170, line: 570, baseType: !53, size: 32, offset: 96)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addrlen", scope: !3692, file: !170, line: 571, baseType: !177, size: 32, offset: 128)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addr", scope: !3692, file: !170, line: 572, baseType: !3700, size: 64, offset: 192)
!3700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3701, size: 64)
!3701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !178, line: 178, size: 128, elements: !3702)
!3702 = !{!3703, !3704}
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !3701, file: !178, line: 180, baseType: !186, size: 16)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !3701, file: !178, line: 181, baseType: !190, size: 112, offset: 16)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "ai_canonname", scope: !3692, file: !170, line: 573, baseType: !6, size: 64, offset: 256)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "ai_next", scope: !3692, file: !170, line: 574, baseType: !3707, size: 64, offset: 320)
!3707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3692, size: 64)
!3708 = !DIGlobalVariableExpression(var: !3709, expr: !DIExpression())
!3709 = distinct !DIGlobalVariable(name: "last_cherror", scope: !3687, file: !166, line: 28, type: !53, isLocal: true, isDefinition: true)
!3710 = !DILocalVariable(name: "host", arg: 1, scope: !165, file: !166, line: 61, type: !49)
!3711 = !DILocation(line: 61, column: 27, scope: !165)
!3712 = !DILocalVariable(name: "cherror", arg: 2, scope: !165, file: !166, line: 61, type: !149)
!3713 = !DILocation(line: 61, column: 38, scope: !165)
!3714 = !DILocalVariable(name: "retval", scope: !165, file: !166, line: 63, type: !6)
!3715 = !DILocation(line: 63, column: 9, scope: !165)
!3716 = !DILocalVariable(name: "res", scope: !165, file: !166, line: 65, type: !195)
!3717 = !DILocation(line: 65, column: 20, scope: !165)
!3718 = !DILocalVariable(name: "status", scope: !165, file: !166, line: 66, type: !53)
!3719 = !DILocation(line: 66, column: 7, scope: !165)
!3720 = !DILocation(line: 68, column: 18, scope: !165)
!3721 = !DILocation(line: 69, column: 25, scope: !165)
!3722 = !DILocation(line: 69, column: 12, scope: !165)
!3723 = !DILocation(line: 69, column: 10, scope: !165)
!3724 = !DILocation(line: 70, column: 8, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !165, file: !166, line: 70, column: 7)
!3726 = !DILocation(line: 70, column: 7, scope: !165)
!3727 = !DILocation(line: 75, column: 24, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3725, file: !166, line: 71, column: 5)
!3729 = !DILocation(line: 75, column: 29, scope: !3728)
!3730 = !DILocation(line: 75, column: 44, scope: !3728)
!3731 = !DILocation(line: 75, column: 49, scope: !3728)
!3732 = !DILocation(line: 75, column: 64, scope: !3728)
!3733 = !DILocation(line: 75, column: 16, scope: !3728)
!3734 = !DILocation(line: 75, column: 14, scope: !3728)
!3735 = !DILocation(line: 76, column: 12, scope: !3736)
!3736 = distinct !DILexicalBlock(scope: !3728, file: !166, line: 76, column: 11)
!3737 = !DILocation(line: 76, column: 19, scope: !3736)
!3738 = !DILocation(line: 76, column: 22, scope: !3736)
!3739 = !DILocation(line: 76, column: 11, scope: !3728)
!3740 = !DILocation(line: 77, column: 10, scope: !3736)
!3741 = !DILocation(line: 77, column: 18, scope: !3736)
!3742 = !DILocation(line: 77, column: 9, scope: !3736)
!3743 = !DILocation(line: 78, column: 21, scope: !3728)
!3744 = !DILocation(line: 78, column: 7, scope: !3728)
!3745 = !DILocation(line: 79, column: 5, scope: !3728)
!3746 = !DILocation(line: 80, column: 12, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3725, file: !166, line: 80, column: 12)
!3748 = !DILocation(line: 80, column: 12, scope: !3725)
!3749 = !DILocation(line: 81, column: 16, scope: !3747)
!3750 = !DILocation(line: 81, column: 6, scope: !3747)
!3751 = !DILocation(line: 81, column: 14, scope: !3747)
!3752 = !DILocation(line: 81, column: 5, scope: !3747)
!3753 = !DILocation(line: 83, column: 10, scope: !165)
!3754 = !DILocation(line: 83, column: 3, scope: !165)
!3755 = distinct !DISubprogram(name: "close_stdout", scope: !203, file: !203, line: 117, type: !1357, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !198, retainedNodes: !4)
!3756 = !DILocation(line: 119, column: 21, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3755, file: !203, line: 119, column: 7)
!3758 = !DILocation(line: 119, column: 7, scope: !3757)
!3759 = !DILocation(line: 119, column: 29, scope: !3757)
!3760 = !DILocation(line: 120, column: 7, scope: !3757)
!3761 = !DILocation(line: 120, column: 12, scope: !3757)
!3762 = !DILocation(line: 120, column: 25, scope: !3757)
!3763 = !DILocation(line: 120, column: 28, scope: !3757)
!3764 = !DILocation(line: 120, column: 34, scope: !3757)
!3765 = !DILocation(line: 119, column: 7, scope: !3755)
!3766 = !DILocalVariable(name: "write_error", scope: !3767, file: !203, line: 122, type: !49)
!3767 = distinct !DILexicalBlock(scope: !3757, file: !203, line: 121, column: 5)
!3768 = !DILocation(line: 122, column: 19, scope: !3767)
!3769 = !DILocation(line: 122, column: 33, scope: !3767)
!3770 = !DILocation(line: 123, column: 11, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3767, file: !203, line: 123, column: 11)
!3772 = !DILocation(line: 123, column: 11, scope: !3767)
!3773 = !DILocation(line: 124, column: 19, scope: !3771)
!3774 = !DILocation(line: 124, column: 52, scope: !3771)
!3775 = !DILocation(line: 124, column: 36, scope: !3771)
!3776 = !DILocation(line: 125, column: 16, scope: !3771)
!3777 = !DILocation(line: 124, column: 9, scope: !3771)
!3778 = !DILocation(line: 127, column: 19, scope: !3771)
!3779 = !DILocation(line: 127, column: 32, scope: !3771)
!3780 = !DILocation(line: 127, column: 9, scope: !3771)
!3781 = !DILocation(line: 129, column: 14, scope: !3767)
!3782 = !DILocation(line: 129, column: 7, scope: !3767)
!3783 = !DILocation(line: 134, column: 42, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3755, file: !203, line: 134, column: 7)
!3785 = !DILocation(line: 134, column: 28, scope: !3784)
!3786 = !DILocation(line: 134, column: 50, scope: !3784)
!3787 = !DILocation(line: 134, column: 7, scope: !3755)
!3788 = !DILocation(line: 135, column: 12, scope: !3784)
!3789 = !DILocation(line: 135, column: 5, scope: !3784)
!3790 = !DILocation(line: 136, column: 1, scope: !3755)
!3791 = distinct !DISubprogram(name: "hard_locale", scope: !3792, file: !3792, line: 27, type: !3646, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !288, retainedNodes: !4)
!3792 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3793 = !DILocalVariable(name: "category", arg: 1, scope: !3791, file: !3792, line: 27, type: !53)
!3794 = !DILocation(line: 27, column: 18, scope: !3791)
!3795 = !DILocalVariable(name: "locale", scope: !3791, file: !3792, line: 29, type: !1469)
!3796 = !DILocation(line: 29, column: 8, scope: !3791)
!3797 = !DILocation(line: 31, column: 25, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3791, file: !3792, line: 31, column: 7)
!3799 = !DILocation(line: 31, column: 35, scope: !3798)
!3800 = !DILocation(line: 31, column: 7, scope: !3798)
!3801 = !DILocation(line: 31, column: 7, scope: !3791)
!3802 = !DILocation(line: 32, column: 5, scope: !3798)
!3803 = !DILocation(line: 34, column: 20, scope: !3791)
!3804 = !DILocation(line: 34, column: 12, scope: !3791)
!3805 = !DILocation(line: 34, column: 33, scope: !3791)
!3806 = !DILocation(line: 34, column: 49, scope: !3791)
!3807 = !DILocation(line: 34, column: 41, scope: !3791)
!3808 = !DILocation(line: 34, column: 66, scope: !3791)
!3809 = !DILocation(line: 34, column: 38, scope: !3791)
!3810 = !DILocation(line: 34, column: 10, scope: !3791)
!3811 = !DILocation(line: 34, column: 3, scope: !3791)
!3812 = !DILocation(line: 35, column: 1, scope: !3791)
!3813 = distinct !DISubprogram(name: "imaxtostr", scope: !3814, file: !3814, line: 36, type: !3815, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !290, retainedNodes: !4)
!3814 = !DIFile(filename: "./lib/anytostr.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3815 = !DISubroutineType(types: !3816)
!3816 = !{!6, !293, !6}
!3817 = !DILocalVariable(name: "i", arg: 1, scope: !3813, file: !3814, line: 36, type: !293)
!3818 = !DILocation(line: 36, column: 19, scope: !3813)
!3819 = !DILocalVariable(name: "buf", arg: 2, scope: !3813, file: !3814, line: 36, type: !6)
!3820 = !DILocation(line: 36, column: 28, scope: !3813)
!3821 = !DILocalVariable(name: "p", scope: !3813, file: !3814, line: 38, type: !6)
!3822 = !DILocation(line: 38, column: 9, scope: !3813)
!3823 = !DILocation(line: 38, column: 13, scope: !3813)
!3824 = !DILocation(line: 38, column: 17, scope: !3813)
!3825 = !DILocation(line: 39, column: 4, scope: !3813)
!3826 = !DILocation(line: 39, column: 6, scope: !3813)
!3827 = !DILocation(line: 41, column: 7, scope: !3828)
!3828 = distinct !DILexicalBlock(scope: !3813, file: !3814, line: 41, column: 7)
!3829 = !DILocation(line: 41, column: 9, scope: !3828)
!3830 = !DILocation(line: 41, column: 7, scope: !3813)
!3831 = !DILocation(line: 43, column: 7, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3828, file: !3814, line: 42, column: 5)
!3833 = !DILocation(line: 44, column: 22, scope: !3832)
!3834 = !DILocation(line: 44, column: 24, scope: !3832)
!3835 = !DILocation(line: 44, column: 20, scope: !3832)
!3836 = !DILocation(line: 44, column: 16, scope: !3832)
!3837 = !DILocation(line: 44, column: 10, scope: !3832)
!3838 = !DILocation(line: 44, column: 14, scope: !3832)
!3839 = !DILocation(line: 44, column: 9, scope: !3832)
!3840 = !DILocation(line: 45, column: 17, scope: !3832)
!3841 = !DILocation(line: 45, column: 24, scope: !3832)
!3842 = distinct !{!3842, !3831, !3843}
!3843 = !DILocation(line: 45, column: 28, scope: !3832)
!3844 = !DILocation(line: 47, column: 8, scope: !3832)
!3845 = !DILocation(line: 47, column: 12, scope: !3832)
!3846 = !DILocation(line: 48, column: 5, scope: !3832)
!3847 = !DILocation(line: 51, column: 7, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3828, file: !3814, line: 50, column: 5)
!3849 = !DILocation(line: 52, column: 22, scope: !3848)
!3850 = !DILocation(line: 52, column: 24, scope: !3848)
!3851 = !DILocation(line: 52, column: 20, scope: !3848)
!3852 = !DILocation(line: 52, column: 16, scope: !3848)
!3853 = !DILocation(line: 52, column: 10, scope: !3848)
!3854 = !DILocation(line: 52, column: 14, scope: !3848)
!3855 = !DILocation(line: 52, column: 9, scope: !3848)
!3856 = !DILocation(line: 53, column: 17, scope: !3848)
!3857 = !DILocation(line: 53, column: 24, scope: !3848)
!3858 = distinct !{!3858, !3847, !3859}
!3859 = !DILocation(line: 53, column: 28, scope: !3848)
!3860 = !DILocation(line: 56, column: 10, scope: !3813)
!3861 = !DILocation(line: 56, column: 3, scope: !3813)
!3862 = !DILocalVariable(name: "i", arg: 1, scope: !3863, file: !3814, line: 36, type: !293)
!3863 = distinct !DISubprogram(name: "imaxtostr", scope: !3814, file: !3814, line: 36, type: !3815, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3864, retainedNodes: !4)
!3864 = distinct !DICompileUnit(language: DW_LANG_C99, file: !291, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !292, nameTableKind: None)
!3865 = !DILocalVariable(name: "buf", arg: 2, scope: !3863, file: !3814, line: 36, type: !6)
!3866 = !DILocalVariable(name: "p", scope: !3863, file: !3814, line: 38, type: !6)
!3867 = distinct !DISubprogram(name: "set_program_name", scope: !217, file: !217, line: 39, type: !467, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!3868 = !DILocalVariable(name: "argv0", arg: 1, scope: !3867, file: !217, line: 39, type: !49)
!3869 = !DILocation(line: 39, column: 31, scope: !3867)
!3870 = !DILocalVariable(name: "slash", scope: !3867, file: !217, line: 46, type: !49)
!3871 = !DILocation(line: 46, column: 15, scope: !3867)
!3872 = !DILocalVariable(name: "base", scope: !3867, file: !217, line: 47, type: !49)
!3873 = !DILocation(line: 47, column: 15, scope: !3867)
!3874 = !DILocation(line: 51, column: 7, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3867, file: !217, line: 51, column: 7)
!3876 = !DILocation(line: 51, column: 13, scope: !3875)
!3877 = !DILocation(line: 51, column: 7, scope: !3867)
!3878 = !DILocation(line: 55, column: 14, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3875, file: !217, line: 52, column: 5)
!3880 = !DILocation(line: 54, column: 7, scope: !3879)
!3881 = !DILocation(line: 56, column: 7, scope: !3879)
!3882 = !DILocation(line: 59, column: 20, scope: !3867)
!3883 = !DILocation(line: 59, column: 11, scope: !3867)
!3884 = !DILocation(line: 59, column: 9, scope: !3867)
!3885 = !DILocation(line: 60, column: 11, scope: !3867)
!3886 = !DILocation(line: 60, column: 17, scope: !3867)
!3887 = !DILocation(line: 60, column: 27, scope: !3867)
!3888 = !DILocation(line: 60, column: 33, scope: !3867)
!3889 = !DILocation(line: 60, column: 39, scope: !3867)
!3890 = !DILocation(line: 60, column: 8, scope: !3867)
!3891 = !DILocation(line: 61, column: 7, scope: !3892)
!3892 = distinct !DILexicalBlock(scope: !3867, file: !217, line: 61, column: 7)
!3893 = !DILocation(line: 61, column: 14, scope: !3892)
!3894 = !DILocation(line: 61, column: 12, scope: !3892)
!3895 = !DILocation(line: 61, column: 20, scope: !3892)
!3896 = !DILocation(line: 61, column: 25, scope: !3892)
!3897 = !DILocation(line: 61, column: 37, scope: !3892)
!3898 = !DILocation(line: 61, column: 42, scope: !3892)
!3899 = !DILocation(line: 61, column: 28, scope: !3892)
!3900 = !DILocation(line: 61, column: 61, scope: !3892)
!3901 = !DILocation(line: 61, column: 7, scope: !3867)
!3902 = !DILocation(line: 63, column: 15, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3892, file: !217, line: 62, column: 5)
!3904 = !DILocation(line: 63, column: 13, scope: !3903)
!3905 = !DILocation(line: 64, column: 20, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3903, file: !217, line: 64, column: 11)
!3907 = !DILocation(line: 64, column: 11, scope: !3906)
!3908 = !DILocation(line: 64, column: 36, scope: !3906)
!3909 = !DILocation(line: 64, column: 11, scope: !3903)
!3910 = !DILocation(line: 66, column: 19, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3906, file: !217, line: 65, column: 9)
!3912 = !DILocation(line: 66, column: 24, scope: !3911)
!3913 = !DILocation(line: 66, column: 17, scope: !3911)
!3914 = !DILocation(line: 70, column: 52, scope: !3911)
!3915 = !DILocation(line: 70, column: 41, scope: !3911)
!3916 = !DILocation(line: 72, column: 9, scope: !3911)
!3917 = !DILocation(line: 73, column: 5, scope: !3903)
!3918 = !DILocation(line: 84, column: 18, scope: !3867)
!3919 = !DILocation(line: 84, column: 16, scope: !3867)
!3920 = !DILocation(line: 90, column: 38, scope: !3867)
!3921 = !DILocation(line: 90, column: 27, scope: !3867)
!3922 = !DILocation(line: 92, column: 1, scope: !3867)
!3923 = !DILocalVariable(name: "argv0", arg: 1, scope: !3924, file: !217, line: 39, type: !49)
!3924 = distinct !DISubprogram(name: "set_program_name", scope: !217, file: !217, line: 39, type: !467, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3925, retainedNodes: !4)
!3925 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, globals: !3926, nameTableKind: None)
!3926 = !{!3927}
!3927 = !DIGlobalVariableExpression(var: !3928, expr: !DIExpression())
!3928 = distinct !DIGlobalVariable(name: "program_name", scope: !3925, file: !217, line: 33, type: !49, isLocal: false, isDefinition: true)
!3929 = !DILocalVariable(name: "slash", scope: !3924, file: !217, line: 46, type: !49)
!3930 = !DILocalVariable(name: "base", scope: !3924, file: !217, line: 47, type: !49)
!3931 = distinct !DISubprogram(name: "set_char_quoting", scope: !241, file: !241, line: 152, type: !3932, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!3932 = !DISubroutineType(types: !3933)
!3933 = !{!53, !3934, !7, !53}
!3934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!3935 = !DILocalVariable(name: "o", arg: 1, scope: !3931, file: !241, line: 152, type: !3934)
!3936 = !DILocation(line: 152, column: 43, scope: !3931)
!3937 = !DILocalVariable(name: "c", arg: 2, scope: !3931, file: !241, line: 152, type: !7)
!3938 = !DILocation(line: 152, column: 51, scope: !3931)
!3939 = !DILocalVariable(name: "i", arg: 3, scope: !3931, file: !241, line: 152, type: !53)
!3940 = !DILocation(line: 152, column: 58, scope: !3931)
!3941 = !DILocalVariable(name: "uc", scope: !3931, file: !241, line: 154, type: !317)
!3942 = !DILocation(line: 154, column: 17, scope: !3931)
!3943 = !DILocation(line: 154, column: 22, scope: !3931)
!3944 = !DILocalVariable(name: "p", scope: !3931, file: !241, line: 155, type: !3945)
!3945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 64)
!3946 = !DILocation(line: 155, column: 17, scope: !3931)
!3947 = !DILocation(line: 156, column: 6, scope: !3931)
!3948 = !DILocation(line: 156, column: 10, scope: !3931)
!3949 = !DILocation(line: 156, column: 41, scope: !3931)
!3950 = !DILocation(line: 156, column: 5, scope: !3931)
!3951 = !DILocation(line: 156, column: 59, scope: !3931)
!3952 = !DILocation(line: 156, column: 62, scope: !3931)
!3953 = !DILocation(line: 156, column: 57, scope: !3931)
!3954 = !DILocalVariable(name: "shift", scope: !3931, file: !241, line: 157, type: !53)
!3955 = !DILocation(line: 157, column: 7, scope: !3931)
!3956 = !DILocation(line: 157, column: 15, scope: !3931)
!3957 = !DILocation(line: 157, column: 18, scope: !3931)
!3958 = !DILocalVariable(name: "r", scope: !3931, file: !241, line: 158, type: !53)
!3959 = !DILocation(line: 158, column: 7, scope: !3931)
!3960 = !DILocation(line: 158, column: 13, scope: !3931)
!3961 = !DILocation(line: 158, column: 12, scope: !3931)
!3962 = !DILocation(line: 158, column: 18, scope: !3931)
!3963 = !DILocation(line: 158, column: 15, scope: !3931)
!3964 = !DILocation(line: 158, column: 25, scope: !3931)
!3965 = !DILocation(line: 159, column: 11, scope: !3931)
!3966 = !DILocation(line: 159, column: 13, scope: !3931)
!3967 = !DILocation(line: 159, column: 20, scope: !3931)
!3968 = !DILocation(line: 159, column: 18, scope: !3931)
!3969 = !DILocation(line: 159, column: 26, scope: !3931)
!3970 = !DILocation(line: 159, column: 23, scope: !3931)
!3971 = !DILocation(line: 159, column: 4, scope: !3931)
!3972 = !DILocation(line: 159, column: 6, scope: !3931)
!3973 = !DILocation(line: 160, column: 10, scope: !3931)
!3974 = !DILocation(line: 160, column: 3, scope: !3931)
!3975 = !DILocalVariable(name: "o", arg: 1, scope: !3976, file: !241, line: 152, type: !3979)
!3976 = distinct !DISubprogram(name: "set_char_quoting", scope: !241, file: !241, line: 152, type: !3977, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3987, retainedNodes: !4)
!3977 = !DISubroutineType(types: !3978)
!3978 = !{!53, !3979, !7, !53}
!3979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3980, size: 64)
!3980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !3981)
!3981 = !{!3982, !3983, !3984, !3985, !3986}
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3980, file: !241, line: 68, baseType: !223, size: 32)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3980, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3980, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3980, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3980, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!3987 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !3988, nameTableKind: None)
!3988 = !{!3989, !3991, !3993, !3995, !3997, !3999, !4006, !4008}
!3989 = !DIGlobalVariableExpression(var: !3990, expr: !DIExpression())
!3990 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3987, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!3991 = !DIGlobalVariableExpression(var: !3992, expr: !DIExpression())
!3992 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3987, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!3993 = !DIGlobalVariableExpression(var: !3994, expr: !DIExpression())
!3994 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3987, file: !241, line: 1052, type: !3980, isLocal: false, isDefinition: true)
!3995 = !DIGlobalVariableExpression(var: !3996, expr: !DIExpression())
!3996 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3987, file: !241, line: 116, type: !3980, isLocal: true, isDefinition: true)
!3997 = !DIGlobalVariableExpression(var: !3998, expr: !DIExpression())
!3998 = distinct !DIGlobalVariable(name: "slot0", scope: !3987, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!3999 = !DIGlobalVariableExpression(var: !4000, expr: !DIExpression())
!4000 = distinct !DIGlobalVariable(name: "slotvec", scope: !3987, file: !241, line: 845, type: !4001, isLocal: true, isDefinition: true)
!4001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4002, size: 64)
!4002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !4003)
!4003 = !{!4004, !4005}
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4002, file: !241, line: 836, baseType: !110, size: 64)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4002, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!4006 = !DIGlobalVariableExpression(var: !4007, expr: !DIExpression())
!4007 = distinct !DIGlobalVariable(name: "nslots", scope: !3987, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!4008 = !DIGlobalVariableExpression(var: !4009, expr: !DIExpression())
!4009 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3987, file: !241, line: 844, type: !4002, isLocal: true, isDefinition: true)
!4010 = !DILocalVariable(name: "c", arg: 2, scope: !3976, file: !241, line: 152, type: !7)
!4011 = !DILocalVariable(name: "i", arg: 3, scope: !3976, file: !241, line: 152, type: !53)
!4012 = !DILocalVariable(name: "uc", scope: !3976, file: !241, line: 154, type: !317)
!4013 = !DILocalVariable(name: "p", scope: !3976, file: !241, line: 155, type: !3945)
!4014 = !DILocalVariable(name: "shift", scope: !4015, file: !241, line: 157, type: !53)
!4015 = distinct !DISubprogram(name: "set_char_quoting", scope: !241, file: !241, line: 152, type: !4016, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4026, retainedNodes: !4)
!4016 = !DISubroutineType(types: !4017)
!4017 = !{!53, !4018, !7, !53}
!4018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4019, size: 64)
!4019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !4020)
!4020 = !{!4021, !4022, !4023, !4024, !4025}
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !4019, file: !241, line: 68, baseType: !223, size: 32)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4019, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !4019, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !4019, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !4019, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!4026 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !4027, nameTableKind: None)
!4027 = !{!4028, !4030, !4032, !4034, !4036, !4038, !4045, !4047}
!4028 = !DIGlobalVariableExpression(var: !4029, expr: !DIExpression())
!4029 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !4026, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!4030 = !DIGlobalVariableExpression(var: !4031, expr: !DIExpression())
!4031 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !4026, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!4032 = !DIGlobalVariableExpression(var: !4033, expr: !DIExpression())
!4033 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !4026, file: !241, line: 1052, type: !4019, isLocal: false, isDefinition: true)
!4034 = !DIGlobalVariableExpression(var: !4035, expr: !DIExpression())
!4035 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !4026, file: !241, line: 116, type: !4019, isLocal: true, isDefinition: true)
!4036 = !DIGlobalVariableExpression(var: !4037, expr: !DIExpression())
!4037 = distinct !DIGlobalVariable(name: "slot0", scope: !4026, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!4038 = !DIGlobalVariableExpression(var: !4039, expr: !DIExpression())
!4039 = distinct !DIGlobalVariable(name: "slotvec", scope: !4026, file: !241, line: 845, type: !4040, isLocal: true, isDefinition: true)
!4040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4041, size: 64)
!4041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !4042)
!4042 = !{!4043, !4044}
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4041, file: !241, line: 836, baseType: !110, size: 64)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4041, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!4045 = !DIGlobalVariableExpression(var: !4046, expr: !DIExpression())
!4046 = distinct !DIGlobalVariable(name: "nslots", scope: !4026, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!4047 = !DIGlobalVariableExpression(var: !4048, expr: !DIExpression())
!4048 = distinct !DIGlobalVariable(name: "slotvec0", scope: !4026, file: !241, line: 844, type: !4041, isLocal: true, isDefinition: true)
!4049 = !DILocalVariable(name: "r", scope: !4015, file: !241, line: 158, type: !53)
!4050 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !241, file: !241, line: 982, type: !4051, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4051 = !DISubroutineType(types: !4052)
!4052 = !{!6, !49, !110, !7}
!4053 = !DILocalVariable(name: "arg", arg: 1, scope: !4050, file: !241, line: 982, type: !49)
!4054 = !DILocation(line: 982, column: 32, scope: !4050)
!4055 = !DILocalVariable(name: "argsize", arg: 2, scope: !4050, file: !241, line: 982, type: !110)
!4056 = !DILocation(line: 982, column: 44, scope: !4050)
!4057 = !DILocalVariable(name: "ch", arg: 3, scope: !4050, file: !241, line: 982, type: !7)
!4058 = !DILocation(line: 982, column: 58, scope: !4050)
!4059 = !DILocalVariable(name: "options", scope: !4050, file: !241, line: 984, type: !254)
!4060 = !DILocation(line: 984, column: 26, scope: !4050)
!4061 = !DILocation(line: 985, column: 13, scope: !4050)
!4062 = !DILocation(line: 986, column: 31, scope: !4050)
!4063 = !DILocation(line: 986, column: 3, scope: !4050)
!4064 = !DILocation(line: 987, column: 33, scope: !4050)
!4065 = !DILocation(line: 987, column: 38, scope: !4050)
!4066 = !DILocation(line: 987, column: 10, scope: !4050)
!4067 = !DILocation(line: 987, column: 3, scope: !4050)
!4068 = distinct !DISubprogram(name: "quotearg_n_options", scope: !241, file: !241, line: 877, type: !4069, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4069 = !DISubroutineType(types: !4070)
!4070 = !{!6, !53, !49, !110, !4071}
!4071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4072, size: 64)
!4072 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !254)
!4073 = !DILocalVariable(name: "n", arg: 1, scope: !4068, file: !241, line: 877, type: !53)
!4074 = !DILocation(line: 877, column: 25, scope: !4068)
!4075 = !DILocalVariable(name: "arg", arg: 2, scope: !4068, file: !241, line: 877, type: !49)
!4076 = !DILocation(line: 877, column: 40, scope: !4068)
!4077 = !DILocalVariable(name: "argsize", arg: 3, scope: !4068, file: !241, line: 877, type: !110)
!4078 = !DILocation(line: 877, column: 52, scope: !4068)
!4079 = !DILocalVariable(name: "options", arg: 4, scope: !4068, file: !241, line: 878, type: !4071)
!4080 = !DILocation(line: 878, column: 51, scope: !4068)
!4081 = !DILocalVariable(name: "e", scope: !4068, file: !241, line: 880, type: !53)
!4082 = !DILocation(line: 880, column: 7, scope: !4068)
!4083 = !DILocation(line: 880, column: 11, scope: !4068)
!4084 = !DILocalVariable(name: "sv", scope: !4068, file: !241, line: 882, type: !268)
!4085 = !DILocation(line: 882, column: 19, scope: !4068)
!4086 = !DILocation(line: 882, column: 24, scope: !4068)
!4087 = !DILocation(line: 884, column: 7, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4068, file: !241, line: 884, column: 7)
!4089 = !DILocation(line: 884, column: 9, scope: !4088)
!4090 = !DILocation(line: 884, column: 7, scope: !4068)
!4091 = !DILocation(line: 885, column: 5, scope: !4088)
!4092 = !DILocation(line: 887, column: 7, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4068, file: !241, line: 887, column: 7)
!4094 = !DILocation(line: 887, column: 17, scope: !4093)
!4095 = !DILocation(line: 887, column: 14, scope: !4093)
!4096 = !DILocation(line: 887, column: 7, scope: !4068)
!4097 = !DILocalVariable(name: "preallocated", scope: !4098, file: !241, line: 889, type: !18)
!4098 = distinct !DILexicalBlock(scope: !4093, file: !241, line: 888, column: 5)
!4099 = !DILocation(line: 889, column: 12, scope: !4098)
!4100 = !DILocation(line: 889, column: 28, scope: !4098)
!4101 = !DILocation(line: 889, column: 31, scope: !4098)
!4102 = !DILocalVariable(name: "nmax", scope: !4098, file: !241, line: 890, type: !53)
!4103 = !DILocation(line: 890, column: 11, scope: !4098)
!4104 = !DILocation(line: 892, column: 11, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4098, file: !241, line: 892, column: 11)
!4106 = !DILocation(line: 892, column: 18, scope: !4105)
!4107 = !DILocation(line: 892, column: 16, scope: !4105)
!4108 = !DILocation(line: 892, column: 11, scope: !4098)
!4109 = !DILocation(line: 893, column: 9, scope: !4105)
!4110 = !DILocation(line: 895, column: 32, scope: !4098)
!4111 = !DILocation(line: 895, column: 54, scope: !4098)
!4112 = !DILocation(line: 895, column: 59, scope: !4098)
!4113 = !DILocation(line: 895, column: 61, scope: !4098)
!4114 = !DILocation(line: 895, column: 58, scope: !4098)
!4115 = !DILocation(line: 895, column: 66, scope: !4098)
!4116 = !DILocation(line: 895, column: 22, scope: !4098)
!4117 = !DILocation(line: 895, column: 20, scope: !4098)
!4118 = !DILocation(line: 895, column: 15, scope: !4098)
!4119 = !DILocation(line: 896, column: 11, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4098, file: !241, line: 896, column: 11)
!4121 = !DILocation(line: 896, column: 11, scope: !4098)
!4122 = !DILocation(line: 897, column: 10, scope: !4120)
!4123 = !DILocation(line: 897, column: 15, scope: !4120)
!4124 = !DILocation(line: 897, column: 9, scope: !4120)
!4125 = !DILocation(line: 898, column: 15, scope: !4098)
!4126 = !DILocation(line: 898, column: 20, scope: !4098)
!4127 = !DILocation(line: 898, column: 18, scope: !4098)
!4128 = !DILocation(line: 898, column: 7, scope: !4098)
!4129 = !DILocation(line: 898, column: 32, scope: !4098)
!4130 = !DILocation(line: 898, column: 34, scope: !4098)
!4131 = !DILocation(line: 898, column: 40, scope: !4098)
!4132 = !DILocation(line: 898, column: 38, scope: !4098)
!4133 = !DILocation(line: 898, column: 31, scope: !4098)
!4134 = !DILocation(line: 898, column: 48, scope: !4098)
!4135 = !DILocation(line: 899, column: 16, scope: !4098)
!4136 = !DILocation(line: 899, column: 18, scope: !4098)
!4137 = !DILocation(line: 899, column: 14, scope: !4098)
!4138 = !DILocation(line: 900, column: 5, scope: !4098)
!4139 = !DILocalVariable(name: "size", scope: !4140, file: !241, line: 903, type: !110)
!4140 = distinct !DILexicalBlock(scope: !4068, file: !241, line: 902, column: 3)
!4141 = !DILocation(line: 903, column: 12, scope: !4140)
!4142 = !DILocation(line: 903, column: 19, scope: !4140)
!4143 = !DILocation(line: 903, column: 22, scope: !4140)
!4144 = !DILocation(line: 903, column: 25, scope: !4140)
!4145 = !DILocalVariable(name: "val", scope: !4140, file: !241, line: 904, type: !6)
!4146 = !DILocation(line: 904, column: 11, scope: !4140)
!4147 = !DILocation(line: 904, column: 17, scope: !4140)
!4148 = !DILocation(line: 904, column: 20, scope: !4140)
!4149 = !DILocation(line: 904, column: 23, scope: !4140)
!4150 = !DILocalVariable(name: "flags", scope: !4140, file: !241, line: 906, type: !53)
!4151 = !DILocation(line: 906, column: 9, scope: !4140)
!4152 = !DILocation(line: 906, column: 17, scope: !4140)
!4153 = !DILocation(line: 906, column: 26, scope: !4140)
!4154 = !DILocation(line: 906, column: 32, scope: !4140)
!4155 = !DILocalVariable(name: "qsize", scope: !4140, file: !241, line: 907, type: !110)
!4156 = !DILocation(line: 907, column: 12, scope: !4140)
!4157 = !DILocation(line: 907, column: 46, scope: !4140)
!4158 = !DILocation(line: 907, column: 51, scope: !4140)
!4159 = !DILocation(line: 907, column: 57, scope: !4140)
!4160 = !DILocation(line: 907, column: 62, scope: !4140)
!4161 = !DILocation(line: 908, column: 46, scope: !4140)
!4162 = !DILocation(line: 908, column: 55, scope: !4140)
!4163 = !DILocation(line: 908, column: 62, scope: !4140)
!4164 = !DILocation(line: 909, column: 46, scope: !4140)
!4165 = !DILocation(line: 909, column: 55, scope: !4140)
!4166 = !DILocation(line: 910, column: 46, scope: !4140)
!4167 = !DILocation(line: 910, column: 55, scope: !4140)
!4168 = !DILocation(line: 911, column: 46, scope: !4140)
!4169 = !DILocation(line: 911, column: 55, scope: !4140)
!4170 = !DILocation(line: 907, column: 20, scope: !4140)
!4171 = !DILocation(line: 913, column: 9, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4140, file: !241, line: 913, column: 9)
!4173 = !DILocation(line: 913, column: 17, scope: !4172)
!4174 = !DILocation(line: 913, column: 14, scope: !4172)
!4175 = !DILocation(line: 913, column: 9, scope: !4140)
!4176 = !DILocation(line: 915, column: 29, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4172, file: !241, line: 914, column: 7)
!4178 = !DILocation(line: 915, column: 35, scope: !4177)
!4179 = !DILocation(line: 915, column: 27, scope: !4177)
!4180 = !DILocation(line: 915, column: 9, scope: !4177)
!4181 = !DILocation(line: 915, column: 12, scope: !4177)
!4182 = !DILocation(line: 915, column: 15, scope: !4177)
!4183 = !DILocation(line: 915, column: 20, scope: !4177)
!4184 = !DILocation(line: 916, column: 13, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4177, file: !241, line: 916, column: 13)
!4186 = !DILocation(line: 916, column: 17, scope: !4185)
!4187 = !DILocation(line: 916, column: 13, scope: !4177)
!4188 = !DILocation(line: 917, column: 17, scope: !4185)
!4189 = !DILocation(line: 917, column: 11, scope: !4185)
!4190 = !DILocation(line: 918, column: 39, scope: !4177)
!4191 = !DILocation(line: 918, column: 27, scope: !4177)
!4192 = !DILocation(line: 918, column: 25, scope: !4177)
!4193 = !DILocation(line: 918, column: 9, scope: !4177)
!4194 = !DILocation(line: 918, column: 12, scope: !4177)
!4195 = !DILocation(line: 918, column: 15, scope: !4177)
!4196 = !DILocation(line: 918, column: 19, scope: !4177)
!4197 = !DILocation(line: 919, column: 35, scope: !4177)
!4198 = !DILocation(line: 919, column: 40, scope: !4177)
!4199 = !DILocation(line: 919, column: 46, scope: !4177)
!4200 = !DILocation(line: 919, column: 51, scope: !4177)
!4201 = !DILocation(line: 919, column: 60, scope: !4177)
!4202 = !DILocation(line: 919, column: 69, scope: !4177)
!4203 = !DILocation(line: 920, column: 35, scope: !4177)
!4204 = !DILocation(line: 920, column: 42, scope: !4177)
!4205 = !DILocation(line: 920, column: 51, scope: !4177)
!4206 = !DILocation(line: 921, column: 35, scope: !4177)
!4207 = !DILocation(line: 921, column: 44, scope: !4177)
!4208 = !DILocation(line: 922, column: 35, scope: !4177)
!4209 = !DILocation(line: 922, column: 44, scope: !4177)
!4210 = !DILocation(line: 919, column: 9, scope: !4177)
!4211 = !DILocation(line: 923, column: 7, scope: !4177)
!4212 = !DILocation(line: 925, column: 13, scope: !4140)
!4213 = !DILocation(line: 925, column: 5, scope: !4140)
!4214 = !DILocation(line: 925, column: 11, scope: !4140)
!4215 = !DILocation(line: 926, column: 12, scope: !4140)
!4216 = !DILocation(line: 926, column: 5, scope: !4140)
!4217 = !DILocalVariable(name: "n", arg: 1, scope: !4218, file: !241, line: 877, type: !53)
!4218 = distinct !DISubprogram(name: "quotearg_n_options", scope: !241, file: !241, line: 877, type: !4219, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4230, retainedNodes: !4)
!4219 = !DISubroutineType(types: !4220)
!4220 = !{!6, !53, !49, !110, !4221}
!4221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4222, size: 64)
!4222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4223)
!4223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !4224)
!4224 = !{!4225, !4226, !4227, !4228, !4229}
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !4223, file: !241, line: 68, baseType: !223, size: 32)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4223, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !4223, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !4223, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !4223, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!4230 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !4231, nameTableKind: None)
!4231 = !{!4232, !4234, !4236, !4238, !4240, !4242, !4249, !4251}
!4232 = !DIGlobalVariableExpression(var: !4233, expr: !DIExpression())
!4233 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !4230, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!4234 = !DIGlobalVariableExpression(var: !4235, expr: !DIExpression())
!4235 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !4230, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!4236 = !DIGlobalVariableExpression(var: !4237, expr: !DIExpression())
!4237 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !4230, file: !241, line: 1052, type: !4223, isLocal: false, isDefinition: true)
!4238 = !DIGlobalVariableExpression(var: !4239, expr: !DIExpression())
!4239 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !4230, file: !241, line: 116, type: !4223, isLocal: true, isDefinition: true)
!4240 = !DIGlobalVariableExpression(var: !4241, expr: !DIExpression())
!4241 = distinct !DIGlobalVariable(name: "slot0", scope: !4230, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!4242 = !DIGlobalVariableExpression(var: !4243, expr: !DIExpression())
!4243 = distinct !DIGlobalVariable(name: "slotvec", scope: !4230, file: !241, line: 845, type: !4244, isLocal: true, isDefinition: true)
!4244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4245, size: 64)
!4245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !4246)
!4246 = !{!4247, !4248}
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4245, file: !241, line: 836, baseType: !110, size: 64)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4245, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!4249 = !DIGlobalVariableExpression(var: !4250, expr: !DIExpression())
!4250 = distinct !DIGlobalVariable(name: "nslots", scope: !4230, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!4251 = !DIGlobalVariableExpression(var: !4252, expr: !DIExpression())
!4252 = distinct !DIGlobalVariable(name: "slotvec0", scope: !4230, file: !241, line: 844, type: !4245, isLocal: true, isDefinition: true)
!4253 = !DILocalVariable(name: "arg", arg: 2, scope: !4218, file: !241, line: 877, type: !49)
!4254 = !DILocalVariable(name: "argsize", arg: 3, scope: !4218, file: !241, line: 877, type: !110)
!4255 = !DILocalVariable(name: "options", arg: 4, scope: !4218, file: !241, line: 878, type: !4221)
!4256 = !DILocalVariable(name: "e", scope: !4218, file: !241, line: 880, type: !53)
!4257 = !DILocalVariable(name: "sv", scope: !4218, file: !241, line: 882, type: !4244)
!4258 = !DILocalVariable(name: "nmax", scope: !4259, file: !241, line: 890, type: !53)
!4259 = distinct !DILexicalBlock(scope: !4260, file: !241, line: 888, column: 5)
!4260 = distinct !DILexicalBlock(scope: !4261, file: !241, line: 887, column: 7)
!4261 = distinct !DISubprogram(name: "quotearg_n_options", scope: !241, file: !241, line: 877, type: !4262, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4273, retainedNodes: !4)
!4262 = !DISubroutineType(types: !4263)
!4263 = !{!6, !53, !49, !110, !4264}
!4264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4265, size: 64)
!4265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4266)
!4266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !4267)
!4267 = !{!4268, !4269, !4270, !4271, !4272}
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !4266, file: !241, line: 68, baseType: !223, size: 32)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4266, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !4266, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !4266, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !4266, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!4273 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !4274, nameTableKind: None)
!4274 = !{!4275, !4277, !4279, !4281, !4283, !4285, !4292, !4294}
!4275 = !DIGlobalVariableExpression(var: !4276, expr: !DIExpression())
!4276 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !4273, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!4277 = !DIGlobalVariableExpression(var: !4278, expr: !DIExpression())
!4278 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !4273, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!4279 = !DIGlobalVariableExpression(var: !4280, expr: !DIExpression())
!4280 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !4273, file: !241, line: 1052, type: !4266, isLocal: false, isDefinition: true)
!4281 = !DIGlobalVariableExpression(var: !4282, expr: !DIExpression())
!4282 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !4273, file: !241, line: 116, type: !4266, isLocal: true, isDefinition: true)
!4283 = !DIGlobalVariableExpression(var: !4284, expr: !DIExpression())
!4284 = distinct !DIGlobalVariable(name: "slot0", scope: !4273, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!4285 = !DIGlobalVariableExpression(var: !4286, expr: !DIExpression())
!4286 = distinct !DIGlobalVariable(name: "slotvec", scope: !4273, file: !241, line: 845, type: !4287, isLocal: true, isDefinition: true)
!4287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4288, size: 64)
!4288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !4289)
!4289 = !{!4290, !4291}
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4288, file: !241, line: 836, baseType: !110, size: 64)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4288, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!4292 = !DIGlobalVariableExpression(var: !4293, expr: !DIExpression())
!4293 = distinct !DIGlobalVariable(name: "nslots", scope: !4273, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!4294 = !DIGlobalVariableExpression(var: !4295, expr: !DIExpression())
!4295 = distinct !DIGlobalVariable(name: "slotvec0", scope: !4273, file: !241, line: 844, type: !4288, isLocal: true, isDefinition: true)
!4296 = !DILocalVariable(name: "val", scope: !4297, file: !241, line: 904, type: !6)
!4297 = distinct !DILexicalBlock(scope: !4298, file: !241, line: 902, column: 3)
!4298 = distinct !DISubprogram(name: "quotearg_n_options", scope: !241, file: !241, line: 877, type: !4299, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4310, retainedNodes: !4)
!4299 = !DISubroutineType(types: !4300)
!4300 = !{!6, !53, !49, !110, !4301}
!4301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4302, size: 64)
!4302 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4303)
!4303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !4304)
!4304 = !{!4305, !4306, !4307, !4308, !4309}
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !4303, file: !241, line: 68, baseType: !223, size: 32)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4303, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !4303, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !4303, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !4303, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!4310 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !4311, nameTableKind: None)
!4311 = !{!4312, !4314, !4316, !4318, !4320, !4322, !4329, !4331}
!4312 = !DIGlobalVariableExpression(var: !4313, expr: !DIExpression())
!4313 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !4310, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!4314 = !DIGlobalVariableExpression(var: !4315, expr: !DIExpression())
!4315 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !4310, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!4316 = !DIGlobalVariableExpression(var: !4317, expr: !DIExpression())
!4317 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !4310, file: !241, line: 1052, type: !4303, isLocal: false, isDefinition: true)
!4318 = !DIGlobalVariableExpression(var: !4319, expr: !DIExpression())
!4319 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !4310, file: !241, line: 116, type: !4303, isLocal: true, isDefinition: true)
!4320 = !DIGlobalVariableExpression(var: !4321, expr: !DIExpression())
!4321 = distinct !DIGlobalVariable(name: "slot0", scope: !4310, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!4322 = !DIGlobalVariableExpression(var: !4323, expr: !DIExpression())
!4323 = distinct !DIGlobalVariable(name: "slotvec", scope: !4310, file: !241, line: 845, type: !4324, isLocal: true, isDefinition: true)
!4324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4325, size: 64)
!4325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !4326)
!4326 = !{!4327, !4328}
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4325, file: !241, line: 836, baseType: !110, size: 64)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4325, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!4329 = !DIGlobalVariableExpression(var: !4330, expr: !DIExpression())
!4330 = distinct !DIGlobalVariable(name: "nslots", scope: !4310, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!4331 = !DIGlobalVariableExpression(var: !4332, expr: !DIExpression())
!4332 = distinct !DIGlobalVariable(name: "slotvec0", scope: !4310, file: !241, line: 844, type: !4325, isLocal: true, isDefinition: true)
!4333 = !DILocalVariable(name: "flags", scope: !4297, file: !241, line: 906, type: !53)
!4334 = !DILocalVariable(name: "qsize", scope: !4297, file: !241, line: 907, type: !110)
!4335 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !241, file: !241, line: 256, type: !4336, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4336 = !DISubroutineType(types: !4337)
!4337 = !{!110, !6, !110, !49, !110, !223, !53, !4338, !49, !49}
!4338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4339, size: 64)
!4339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !180)
!4340 = !DILocalVariable(name: "buffer", arg: 1, scope: !4335, file: !241, line: 256, type: !6)
!4341 = !DILocation(line: 256, column: 33, scope: !4335)
!4342 = !DILocalVariable(name: "buffersize", arg: 2, scope: !4335, file: !241, line: 256, type: !110)
!4343 = !DILocation(line: 256, column: 48, scope: !4335)
!4344 = !DILocalVariable(name: "arg", arg: 3, scope: !4335, file: !241, line: 257, type: !49)
!4345 = !DILocation(line: 257, column: 39, scope: !4335)
!4346 = !DILocalVariable(name: "argsize", arg: 4, scope: !4335, file: !241, line: 257, type: !110)
!4347 = !DILocation(line: 257, column: 51, scope: !4335)
!4348 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !4335, file: !241, line: 258, type: !223)
!4349 = !DILocation(line: 258, column: 46, scope: !4335)
!4350 = !DILocalVariable(name: "flags", arg: 6, scope: !4335, file: !241, line: 258, type: !53)
!4351 = !DILocation(line: 258, column: 65, scope: !4335)
!4352 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !4335, file: !241, line: 259, type: !4338)
!4353 = !DILocation(line: 259, column: 47, scope: !4335)
!4354 = !DILocalVariable(name: "left_quote", arg: 8, scope: !4335, file: !241, line: 260, type: !49)
!4355 = !DILocation(line: 260, column: 39, scope: !4335)
!4356 = !DILocalVariable(name: "right_quote", arg: 9, scope: !4335, file: !241, line: 261, type: !49)
!4357 = !DILocation(line: 261, column: 39, scope: !4335)
!4358 = !DILocalVariable(name: "i", scope: !4335, file: !241, line: 263, type: !110)
!4359 = !DILocation(line: 263, column: 10, scope: !4335)
!4360 = !DILocalVariable(name: "len", scope: !4335, file: !241, line: 264, type: !110)
!4361 = !DILocation(line: 264, column: 10, scope: !4335)
!4362 = !DILocalVariable(name: "orig_buffersize", scope: !4335, file: !241, line: 265, type: !110)
!4363 = !DILocation(line: 265, column: 10, scope: !4335)
!4364 = !DILocalVariable(name: "quote_string", scope: !4335, file: !241, line: 266, type: !49)
!4365 = !DILocation(line: 266, column: 15, scope: !4335)
!4366 = !DILocalVariable(name: "quote_string_len", scope: !4335, file: !241, line: 267, type: !110)
!4367 = !DILocation(line: 267, column: 10, scope: !4335)
!4368 = !DILocalVariable(name: "backslash_escapes", scope: !4335, file: !241, line: 268, type: !18)
!4369 = !DILocation(line: 268, column: 8, scope: !4335)
!4370 = !DILocalVariable(name: "unibyte_locale", scope: !4335, file: !241, line: 269, type: !18)
!4371 = !DILocation(line: 269, column: 8, scope: !4335)
!4372 = !DILocation(line: 269, column: 25, scope: !4335)
!4373 = !DILocation(line: 269, column: 36, scope: !4335)
!4374 = !DILocalVariable(name: "elide_outer_quotes", scope: !4335, file: !241, line: 270, type: !18)
!4375 = !DILocation(line: 270, column: 8, scope: !4335)
!4376 = !DILocation(line: 270, column: 30, scope: !4335)
!4377 = !DILocation(line: 270, column: 36, scope: !4335)
!4378 = !DILocation(line: 270, column: 61, scope: !4335)
!4379 = !DILocalVariable(name: "pending_shell_escape_end", scope: !4335, file: !241, line: 271, type: !18)
!4380 = !DILocation(line: 271, column: 8, scope: !4335)
!4381 = !DILocalVariable(name: "encountered_single_quote", scope: !4335, file: !241, line: 272, type: !18)
!4382 = !DILocation(line: 272, column: 8, scope: !4335)
!4383 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !4335, file: !241, line: 273, type: !18)
!4384 = !DILocation(line: 273, column: 8, scope: !4335)
!4385 = !DILocation(line: 273, column: 3, scope: !4335)
!4386 = !DILabel(scope: !4335, name: "process_input", file: !241, line: 314)
!4387 = !DILocation(line: 314, column: 2, scope: !4335)
!4388 = !DILocation(line: 316, column: 11, scope: !4335)
!4389 = !DILocation(line: 316, column: 3, scope: !4335)
!4390 = !DILocation(line: 319, column: 21, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4335, file: !241, line: 317, column: 5)
!4392 = !DILocation(line: 320, column: 26, scope: !4391)
!4393 = !DILocation(line: 321, column: 7, scope: !4391)
!4394 = !DILocation(line: 323, column: 12, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4391, file: !241, line: 323, column: 11)
!4396 = !DILocation(line: 323, column: 11, scope: !4391)
!4397 = !DILocation(line: 324, column: 9, scope: !4395)
!4398 = !DILocation(line: 324, column: 9, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4400, file: !241, line: 324, column: 9)
!4400 = distinct !DILexicalBlock(scope: !4395, file: !241, line: 324, column: 9)
!4401 = !DILocation(line: 324, column: 9, scope: !4400)
!4402 = !DILocation(line: 325, column: 25, scope: !4391)
!4403 = !DILocation(line: 326, column: 20, scope: !4391)
!4404 = !DILocation(line: 327, column: 24, scope: !4391)
!4405 = !DILocation(line: 328, column: 7, scope: !4391)
!4406 = !DILocation(line: 331, column: 25, scope: !4391)
!4407 = !DILocation(line: 332, column: 26, scope: !4391)
!4408 = !DILocation(line: 333, column: 7, scope: !4391)
!4409 = !DILocation(line: 339, column: 13, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4411, file: !241, line: 339, column: 13)
!4411 = distinct !DILexicalBlock(scope: !4391, file: !241, line: 338, column: 7)
!4412 = !DILocation(line: 339, column: 27, scope: !4410)
!4413 = !DILocation(line: 339, column: 13, scope: !4411)
!4414 = !DILocation(line: 362, column: 50, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4410, file: !241, line: 340, column: 11)
!4416 = !DILocation(line: 362, column: 26, scope: !4415)
!4417 = !DILocation(line: 362, column: 24, scope: !4415)
!4418 = !DILocation(line: 363, column: 51, scope: !4415)
!4419 = !DILocation(line: 363, column: 27, scope: !4415)
!4420 = !DILocation(line: 363, column: 25, scope: !4415)
!4421 = !DILocation(line: 364, column: 11, scope: !4415)
!4422 = !DILocation(line: 365, column: 14, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4411, file: !241, line: 365, column: 13)
!4424 = !DILocation(line: 365, column: 13, scope: !4411)
!4425 = !DILocation(line: 366, column: 31, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4423, file: !241, line: 366, column: 11)
!4427 = !DILocation(line: 366, column: 29, scope: !4426)
!4428 = !DILocation(line: 366, column: 16, scope: !4426)
!4429 = !DILocation(line: 366, column: 44, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !4426, file: !241, line: 366, column: 11)
!4431 = !DILocation(line: 366, column: 43, scope: !4430)
!4432 = !DILocation(line: 366, column: 11, scope: !4426)
!4433 = !DILocation(line: 367, column: 13, scope: !4430)
!4434 = !DILocation(line: 367, column: 13, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !4436, file: !241, line: 367, column: 13)
!4436 = distinct !DILexicalBlock(scope: !4430, file: !241, line: 367, column: 13)
!4437 = !DILocation(line: 367, column: 13, scope: !4436)
!4438 = !DILocation(line: 366, column: 70, scope: !4430)
!4439 = !DILocation(line: 366, column: 11, scope: !4430)
!4440 = distinct !{!4440, !4432, !4441}
!4441 = !DILocation(line: 367, column: 13, scope: !4426)
!4442 = !DILocation(line: 368, column: 27, scope: !4411)
!4443 = !DILocation(line: 369, column: 24, scope: !4411)
!4444 = !DILocation(line: 369, column: 22, scope: !4411)
!4445 = !DILocation(line: 370, column: 36, scope: !4411)
!4446 = !DILocation(line: 370, column: 28, scope: !4411)
!4447 = !DILocation(line: 370, column: 26, scope: !4411)
!4448 = !DILocation(line: 372, column: 7, scope: !4391)
!4449 = !DILocation(line: 375, column: 25, scope: !4391)
!4450 = !DILocation(line: 376, column: 7, scope: !4391)
!4451 = !DILocation(line: 378, column: 26, scope: !4391)
!4452 = !DILocation(line: 379, column: 7, scope: !4391)
!4453 = !DILocation(line: 381, column: 12, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4391, file: !241, line: 381, column: 11)
!4455 = !DILocation(line: 381, column: 11, scope: !4391)
!4456 = !DILocation(line: 382, column: 27, scope: !4454)
!4457 = !DILocation(line: 382, column: 9, scope: !4454)
!4458 = !DILocation(line: 383, column: 7, scope: !4391)
!4459 = !DILocation(line: 385, column: 21, scope: !4391)
!4460 = !DILocation(line: 386, column: 12, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4391, file: !241, line: 386, column: 11)
!4462 = !DILocation(line: 386, column: 11, scope: !4391)
!4463 = !DILocation(line: 387, column: 9, scope: !4461)
!4464 = !DILocation(line: 387, column: 9, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4466, file: !241, line: 387, column: 9)
!4466 = distinct !DILexicalBlock(scope: !4461, file: !241, line: 387, column: 9)
!4467 = !DILocation(line: 387, column: 9, scope: !4466)
!4468 = !DILocation(line: 388, column: 20, scope: !4391)
!4469 = !DILocation(line: 389, column: 24, scope: !4391)
!4470 = !DILocation(line: 390, column: 7, scope: !4391)
!4471 = !DILocation(line: 393, column: 26, scope: !4391)
!4472 = !DILocation(line: 394, column: 7, scope: !4391)
!4473 = !DILocation(line: 397, column: 7, scope: !4391)
!4474 = !DILocation(line: 400, column: 10, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4335, file: !241, line: 400, column: 3)
!4476 = !DILocation(line: 400, column: 8, scope: !4475)
!4477 = !DILocation(line: 400, column: 19, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4475, file: !241, line: 400, column: 3)
!4479 = !DILocation(line: 400, column: 27, scope: !4478)
!4480 = !DILocation(line: 400, column: 41, scope: !4478)
!4481 = !DILocation(line: 400, column: 45, scope: !4478)
!4482 = !DILocation(line: 400, column: 48, scope: !4478)
!4483 = !DILocation(line: 400, column: 58, scope: !4478)
!4484 = !DILocation(line: 400, column: 63, scope: !4478)
!4485 = !DILocation(line: 400, column: 60, scope: !4478)
!4486 = !DILocation(line: 400, column: 16, scope: !4478)
!4487 = !DILocation(line: 400, column: 3, scope: !4475)
!4488 = !DILocalVariable(name: "c", scope: !4489, file: !241, line: 402, type: !317)
!4489 = distinct !DILexicalBlock(scope: !4478, file: !241, line: 401, column: 5)
!4490 = !DILocation(line: 402, column: 21, scope: !4489)
!4491 = !DILocalVariable(name: "esc", scope: !4489, file: !241, line: 403, type: !317)
!4492 = !DILocation(line: 403, column: 21, scope: !4489)
!4493 = !DILocalVariable(name: "is_right_quote", scope: !4489, file: !241, line: 404, type: !18)
!4494 = !DILocation(line: 404, column: 12, scope: !4489)
!4495 = !DILocalVariable(name: "escaping", scope: !4489, file: !241, line: 405, type: !18)
!4496 = !DILocation(line: 405, column: 12, scope: !4489)
!4497 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !4489, file: !241, line: 406, type: !18)
!4498 = !DILocation(line: 406, column: 12, scope: !4489)
!4499 = !DILocation(line: 408, column: 11, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4489, file: !241, line: 408, column: 11)
!4501 = !DILocation(line: 409, column: 11, scope: !4500)
!4502 = !DILocation(line: 409, column: 14, scope: !4500)
!4503 = !DILocation(line: 409, column: 28, scope: !4500)
!4504 = !DILocation(line: 410, column: 11, scope: !4500)
!4505 = !DILocation(line: 410, column: 14, scope: !4500)
!4506 = !DILocation(line: 411, column: 11, scope: !4500)
!4507 = !DILocation(line: 411, column: 15, scope: !4500)
!4508 = !DILocation(line: 411, column: 19, scope: !4500)
!4509 = !DILocation(line: 411, column: 17, scope: !4500)
!4510 = !DILocation(line: 412, column: 19, scope: !4500)
!4511 = !DILocation(line: 412, column: 27, scope: !4500)
!4512 = !DILocation(line: 412, column: 39, scope: !4500)
!4513 = !DILocation(line: 412, column: 46, scope: !4500)
!4514 = !DILocation(line: 412, column: 44, scope: !4500)
!4515 = !DILocation(line: 416, column: 40, scope: !4500)
!4516 = !DILocation(line: 416, column: 32, scope: !4500)
!4517 = !DILocation(line: 416, column: 30, scope: !4500)
!4518 = !DILocation(line: 416, column: 48, scope: !4500)
!4519 = !DILocation(line: 412, column: 15, scope: !4500)
!4520 = !DILocation(line: 417, column: 11, scope: !4500)
!4521 = !DILocation(line: 417, column: 22, scope: !4500)
!4522 = !DILocation(line: 417, column: 28, scope: !4500)
!4523 = !DILocation(line: 417, column: 26, scope: !4500)
!4524 = !DILocation(line: 417, column: 31, scope: !4500)
!4525 = !DILocation(line: 417, column: 45, scope: !4500)
!4526 = !DILocation(line: 417, column: 14, scope: !4500)
!4527 = !DILocation(line: 417, column: 63, scope: !4500)
!4528 = !DILocation(line: 408, column: 11, scope: !4489)
!4529 = !DILocation(line: 419, column: 15, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4531, file: !241, line: 419, column: 15)
!4531 = distinct !DILexicalBlock(scope: !4500, file: !241, line: 418, column: 9)
!4532 = !DILocation(line: 419, column: 15, scope: !4531)
!4533 = !DILocation(line: 420, column: 13, scope: !4530)
!4534 = !DILocation(line: 421, column: 26, scope: !4531)
!4535 = !DILocation(line: 422, column: 9, scope: !4531)
!4536 = !DILocation(line: 424, column: 11, scope: !4489)
!4537 = !DILocation(line: 424, column: 15, scope: !4489)
!4538 = !DILocation(line: 424, column: 9, scope: !4489)
!4539 = !DILocation(line: 425, column: 15, scope: !4489)
!4540 = !DILocation(line: 425, column: 7, scope: !4489)
!4541 = !DILocation(line: 428, column: 15, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4543, file: !241, line: 428, column: 15)
!4543 = distinct !DILexicalBlock(scope: !4489, file: !241, line: 426, column: 9)
!4544 = !DILocation(line: 428, column: 15, scope: !4543)
!4545 = !DILocation(line: 430, column: 15, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4542, file: !241, line: 429, column: 13)
!4547 = !DILocation(line: 430, column: 15, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4549, file: !241, line: 430, column: 15)
!4549 = distinct !DILexicalBlock(scope: !4546, file: !241, line: 430, column: 15)
!4550 = !DILocation(line: 430, column: 15, scope: !4549)
!4551 = !DILocation(line: 430, column: 15, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4549, file: !241, line: 430, column: 15)
!4553 = !DILocation(line: 430, column: 15, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4552, file: !241, line: 430, column: 15)
!4555 = !DILocation(line: 430, column: 15, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4557, file: !241, line: 430, column: 15)
!4557 = distinct !DILexicalBlock(scope: !4554, file: !241, line: 430, column: 15)
!4558 = !DILocation(line: 430, column: 15, scope: !4557)
!4559 = !DILocation(line: 430, column: 15, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4561, file: !241, line: 430, column: 15)
!4561 = distinct !DILexicalBlock(scope: !4554, file: !241, line: 430, column: 15)
!4562 = !DILocation(line: 430, column: 15, scope: !4561)
!4563 = !DILocation(line: 430, column: 15, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4565, file: !241, line: 430, column: 15)
!4565 = distinct !DILexicalBlock(scope: !4554, file: !241, line: 430, column: 15)
!4566 = !DILocation(line: 430, column: 15, scope: !4565)
!4567 = !DILocation(line: 430, column: 15, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4569, file: !241, line: 430, column: 15)
!4569 = distinct !DILexicalBlock(scope: !4549, file: !241, line: 430, column: 15)
!4570 = !DILocation(line: 430, column: 15, scope: !4569)
!4571 = !DILocation(line: 437, column: 19, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4546, file: !241, line: 437, column: 19)
!4573 = !DILocation(line: 437, column: 33, scope: !4572)
!4574 = !DILocation(line: 438, column: 19, scope: !4572)
!4575 = !DILocation(line: 438, column: 22, scope: !4572)
!4576 = !DILocation(line: 438, column: 24, scope: !4572)
!4577 = !DILocation(line: 438, column: 30, scope: !4572)
!4578 = !DILocation(line: 438, column: 28, scope: !4572)
!4579 = !DILocation(line: 438, column: 38, scope: !4572)
!4580 = !DILocation(line: 438, column: 48, scope: !4572)
!4581 = !DILocation(line: 438, column: 52, scope: !4572)
!4582 = !DILocation(line: 438, column: 54, scope: !4572)
!4583 = !DILocation(line: 438, column: 45, scope: !4572)
!4584 = !DILocation(line: 438, column: 59, scope: !4572)
!4585 = !DILocation(line: 438, column: 62, scope: !4572)
!4586 = !DILocation(line: 438, column: 66, scope: !4572)
!4587 = !DILocation(line: 438, column: 68, scope: !4572)
!4588 = !DILocation(line: 438, column: 73, scope: !4572)
!4589 = !DILocation(line: 437, column: 19, scope: !4546)
!4590 = !DILocation(line: 440, column: 19, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4572, file: !241, line: 439, column: 17)
!4592 = !DILocation(line: 440, column: 19, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4594, file: !241, line: 440, column: 19)
!4594 = distinct !DILexicalBlock(scope: !4591, file: !241, line: 440, column: 19)
!4595 = !DILocation(line: 440, column: 19, scope: !4594)
!4596 = !DILocation(line: 441, column: 19, scope: !4591)
!4597 = !DILocation(line: 441, column: 19, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4599, file: !241, line: 441, column: 19)
!4599 = distinct !DILexicalBlock(scope: !4591, file: !241, line: 441, column: 19)
!4600 = !DILocation(line: 441, column: 19, scope: !4599)
!4601 = !DILocation(line: 442, column: 17, scope: !4591)
!4602 = !DILocation(line: 443, column: 17, scope: !4546)
!4603 = !DILocation(line: 448, column: 13, scope: !4546)
!4604 = !DILocation(line: 449, column: 20, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4542, file: !241, line: 449, column: 20)
!4606 = !DILocation(line: 449, column: 26, scope: !4605)
!4607 = !DILocation(line: 449, column: 20, scope: !4542)
!4608 = !DILocation(line: 450, column: 13, scope: !4605)
!4609 = !DILocation(line: 451, column: 11, scope: !4543)
!4610 = !DILocation(line: 454, column: 19, scope: !4543)
!4611 = !DILocation(line: 454, column: 11, scope: !4543)
!4612 = !DILocation(line: 457, column: 19, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4614, file: !241, line: 457, column: 19)
!4614 = distinct !DILexicalBlock(scope: !4543, file: !241, line: 455, column: 13)
!4615 = !DILocation(line: 457, column: 19, scope: !4614)
!4616 = !DILocation(line: 458, column: 17, scope: !4613)
!4617 = !DILocation(line: 459, column: 15, scope: !4614)
!4618 = !DILocation(line: 462, column: 20, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4614, file: !241, line: 462, column: 19)
!4620 = !DILocation(line: 462, column: 26, scope: !4619)
!4621 = !DILocation(line: 463, column: 19, scope: !4619)
!4622 = !DILocation(line: 463, column: 22, scope: !4619)
!4623 = !DILocation(line: 463, column: 24, scope: !4619)
!4624 = !DILocation(line: 463, column: 30, scope: !4619)
!4625 = !DILocation(line: 463, column: 28, scope: !4619)
!4626 = !DILocation(line: 463, column: 38, scope: !4619)
!4627 = !DILocation(line: 463, column: 41, scope: !4619)
!4628 = !DILocation(line: 463, column: 45, scope: !4619)
!4629 = !DILocation(line: 463, column: 47, scope: !4619)
!4630 = !DILocation(line: 463, column: 52, scope: !4619)
!4631 = !DILocation(line: 462, column: 19, scope: !4614)
!4632 = !DILocation(line: 464, column: 25, scope: !4619)
!4633 = !DILocation(line: 464, column: 29, scope: !4619)
!4634 = !DILocation(line: 464, column: 31, scope: !4619)
!4635 = !DILocation(line: 464, column: 17, scope: !4619)
!4636 = !DILocation(line: 471, column: 25, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4638, file: !241, line: 471, column: 25)
!4638 = distinct !DILexicalBlock(scope: !4619, file: !241, line: 465, column: 19)
!4639 = !DILocation(line: 471, column: 25, scope: !4638)
!4640 = !DILocation(line: 472, column: 23, scope: !4637)
!4641 = !DILocation(line: 473, column: 25, scope: !4638)
!4642 = !DILocation(line: 473, column: 29, scope: !4638)
!4643 = !DILocation(line: 473, column: 31, scope: !4638)
!4644 = !DILocation(line: 473, column: 23, scope: !4638)
!4645 = !DILocation(line: 474, column: 23, scope: !4638)
!4646 = !DILocation(line: 475, column: 21, scope: !4638)
!4647 = !DILocation(line: 475, column: 21, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4649, file: !241, line: 475, column: 21)
!4649 = distinct !DILexicalBlock(scope: !4638, file: !241, line: 475, column: 21)
!4650 = !DILocation(line: 475, column: 21, scope: !4649)
!4651 = !DILocation(line: 476, column: 21, scope: !4638)
!4652 = !DILocation(line: 476, column: 21, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4654, file: !241, line: 476, column: 21)
!4654 = distinct !DILexicalBlock(scope: !4638, file: !241, line: 476, column: 21)
!4655 = !DILocation(line: 476, column: 21, scope: !4654)
!4656 = !DILocation(line: 477, column: 21, scope: !4638)
!4657 = !DILocation(line: 477, column: 21, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4659, file: !241, line: 477, column: 21)
!4659 = distinct !DILexicalBlock(scope: !4638, file: !241, line: 477, column: 21)
!4660 = !DILocation(line: 477, column: 21, scope: !4659)
!4661 = !DILocation(line: 478, column: 21, scope: !4638)
!4662 = !DILocation(line: 478, column: 21, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4664, file: !241, line: 478, column: 21)
!4664 = distinct !DILexicalBlock(scope: !4638, file: !241, line: 478, column: 21)
!4665 = !DILocation(line: 478, column: 21, scope: !4664)
!4666 = !DILocation(line: 479, column: 21, scope: !4638)
!4667 = !DILocation(line: 482, column: 21, scope: !4638)
!4668 = !DILocation(line: 483, column: 19, scope: !4638)
!4669 = !DILocation(line: 484, column: 15, scope: !4614)
!4670 = !DILocation(line: 487, column: 15, scope: !4614)
!4671 = !DILocation(line: 489, column: 11, scope: !4543)
!4672 = !DILocation(line: 491, column: 24, scope: !4543)
!4673 = !DILocation(line: 491, column: 31, scope: !4543)
!4674 = !DILocation(line: 492, column: 24, scope: !4543)
!4675 = !DILocation(line: 492, column: 31, scope: !4543)
!4676 = !DILocation(line: 493, column: 24, scope: !4543)
!4677 = !DILocation(line: 493, column: 31, scope: !4543)
!4678 = !DILocation(line: 494, column: 24, scope: !4543)
!4679 = !DILocation(line: 494, column: 31, scope: !4543)
!4680 = !DILocation(line: 495, column: 24, scope: !4543)
!4681 = !DILocation(line: 495, column: 31, scope: !4543)
!4682 = !DILocation(line: 496, column: 24, scope: !4543)
!4683 = !DILocation(line: 496, column: 31, scope: !4543)
!4684 = !DILocation(line: 497, column: 24, scope: !4543)
!4685 = !DILocation(line: 497, column: 31, scope: !4543)
!4686 = !DILocation(line: 498, column: 26, scope: !4543)
!4687 = !DILocation(line: 498, column: 24, scope: !4543)
!4688 = !DILocation(line: 500, column: 15, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4543, file: !241, line: 500, column: 15)
!4690 = !DILocation(line: 500, column: 29, scope: !4689)
!4691 = !DILocation(line: 500, column: 15, scope: !4543)
!4692 = !DILocation(line: 502, column: 19, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4694, file: !241, line: 502, column: 19)
!4694 = distinct !DILexicalBlock(scope: !4689, file: !241, line: 501, column: 13)
!4695 = !DILocation(line: 502, column: 19, scope: !4694)
!4696 = !DILocation(line: 503, column: 17, scope: !4693)
!4697 = !DILocation(line: 504, column: 15, scope: !4694)
!4698 = !DILocation(line: 509, column: 15, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4543, file: !241, line: 509, column: 15)
!4700 = !DILocation(line: 509, column: 33, scope: !4699)
!4701 = !DILocation(line: 509, column: 36, scope: !4699)
!4702 = !DILocation(line: 509, column: 55, scope: !4699)
!4703 = !DILocation(line: 509, column: 58, scope: !4699)
!4704 = !DILocation(line: 509, column: 15, scope: !4543)
!4705 = !DILocation(line: 510, column: 13, scope: !4699)
!4706 = !DILabel(scope: !4543, name: "c_and_shell_escape", file: !241, line: 512)
!4707 = !DILocation(line: 512, column: 9, scope: !4543)
!4708 = !DILocation(line: 513, column: 15, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4543, file: !241, line: 513, column: 15)
!4710 = !DILocation(line: 513, column: 29, scope: !4709)
!4711 = !DILocation(line: 514, column: 15, scope: !4709)
!4712 = !DILocation(line: 514, column: 18, scope: !4709)
!4713 = !DILocation(line: 513, column: 15, scope: !4543)
!4714 = !DILocation(line: 515, column: 13, scope: !4709)
!4715 = !DILabel(scope: !4543, name: "c_escape", file: !241, line: 517)
!4716 = !DILocation(line: 517, column: 9, scope: !4543)
!4717 = !DILocation(line: 518, column: 15, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4543, file: !241, line: 518, column: 15)
!4719 = !DILocation(line: 518, column: 15, scope: !4543)
!4720 = !DILocation(line: 520, column: 19, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4718, file: !241, line: 519, column: 13)
!4722 = !DILocation(line: 520, column: 17, scope: !4721)
!4723 = !DILocation(line: 521, column: 15, scope: !4721)
!4724 = !DILocation(line: 523, column: 11, scope: !4543)
!4725 = !DILocation(line: 526, column: 18, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4543, file: !241, line: 526, column: 15)
!4727 = !DILocation(line: 526, column: 26, scope: !4726)
!4728 = !DILocation(line: 526, column: 15, scope: !4543)
!4729 = !DILocation(line: 526, column: 40, scope: !4726)
!4730 = !DILocation(line: 526, column: 47, scope: !4726)
!4731 = !DILocation(line: 526, column: 57, scope: !4726)
!4732 = !DILocation(line: 526, column: 65, scope: !4726)
!4733 = !DILocation(line: 527, column: 13, scope: !4726)
!4734 = !DILocation(line: 528, column: 11, scope: !4543)
!4735 = !DILocation(line: 530, column: 15, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4543, file: !241, line: 530, column: 15)
!4737 = !DILocation(line: 530, column: 17, scope: !4736)
!4738 = !DILocation(line: 530, column: 15, scope: !4543)
!4739 = !DILocation(line: 531, column: 13, scope: !4736)
!4740 = !DILocation(line: 532, column: 11, scope: !4543)
!4741 = !DILocation(line: 534, column: 36, scope: !4543)
!4742 = !DILocation(line: 535, column: 11, scope: !4543)
!4743 = !DILocation(line: 548, column: 15, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4543, file: !241, line: 548, column: 15)
!4745 = !DILocation(line: 548, column: 29, scope: !4744)
!4746 = !DILocation(line: 549, column: 15, scope: !4744)
!4747 = !DILocation(line: 549, column: 18, scope: !4744)
!4748 = !DILocation(line: 548, column: 15, scope: !4543)
!4749 = !DILocation(line: 550, column: 13, scope: !4744)
!4750 = !DILocation(line: 551, column: 11, scope: !4543)
!4751 = !DILocation(line: 554, column: 36, scope: !4543)
!4752 = !DILocation(line: 555, column: 36, scope: !4543)
!4753 = !DILocation(line: 556, column: 15, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4543, file: !241, line: 556, column: 15)
!4755 = !DILocation(line: 556, column: 29, scope: !4754)
!4756 = !DILocation(line: 556, column: 15, scope: !4543)
!4757 = !DILocation(line: 558, column: 19, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4759, file: !241, line: 558, column: 19)
!4759 = distinct !DILexicalBlock(scope: !4754, file: !241, line: 557, column: 13)
!4760 = !DILocation(line: 558, column: 19, scope: !4759)
!4761 = !DILocation(line: 559, column: 17, scope: !4758)
!4762 = !DILocation(line: 561, column: 19, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4759, file: !241, line: 561, column: 19)
!4764 = !DILocation(line: 561, column: 30, scope: !4763)
!4765 = !DILocation(line: 561, column: 35, scope: !4763)
!4766 = !DILocation(line: 561, column: 19, scope: !4759)
!4767 = !DILocation(line: 566, column: 37, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4763, file: !241, line: 562, column: 17)
!4769 = !DILocation(line: 566, column: 35, scope: !4768)
!4770 = !DILocation(line: 567, column: 30, scope: !4768)
!4771 = !DILocation(line: 568, column: 17, scope: !4768)
!4772 = !DILocation(line: 570, column: 15, scope: !4759)
!4773 = !DILocation(line: 570, column: 15, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4775, file: !241, line: 570, column: 15)
!4775 = distinct !DILexicalBlock(scope: !4759, file: !241, line: 570, column: 15)
!4776 = !DILocation(line: 570, column: 15, scope: !4775)
!4777 = !DILocation(line: 571, column: 15, scope: !4759)
!4778 = !DILocation(line: 571, column: 15, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4780, file: !241, line: 571, column: 15)
!4780 = distinct !DILexicalBlock(scope: !4759, file: !241, line: 571, column: 15)
!4781 = !DILocation(line: 571, column: 15, scope: !4780)
!4782 = !DILocation(line: 572, column: 15, scope: !4759)
!4783 = !DILocation(line: 572, column: 15, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4785, file: !241, line: 572, column: 15)
!4785 = distinct !DILexicalBlock(scope: !4759, file: !241, line: 572, column: 15)
!4786 = !DILocation(line: 572, column: 15, scope: !4785)
!4787 = !DILocation(line: 573, column: 40, scope: !4759)
!4788 = !DILocation(line: 574, column: 13, scope: !4759)
!4789 = !DILocation(line: 575, column: 11, scope: !4543)
!4790 = !DILocation(line: 599, column: 36, scope: !4543)
!4791 = !DILocation(line: 600, column: 11, scope: !4543)
!4792 = !DILocalVariable(name: "m", scope: !4793, file: !241, line: 610, type: !110)
!4793 = distinct !DILexicalBlock(scope: !4543, file: !241, line: 608, column: 11)
!4794 = !DILocation(line: 610, column: 20, scope: !4793)
!4795 = !DILocalVariable(name: "printable", scope: !4793, file: !241, line: 612, type: !18)
!4796 = !DILocation(line: 612, column: 18, scope: !4793)
!4797 = !DILocation(line: 614, column: 17, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4793, file: !241, line: 614, column: 17)
!4799 = !DILocation(line: 614, column: 17, scope: !4793)
!4800 = !DILocation(line: 616, column: 19, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4798, file: !241, line: 615, column: 15)
!4802 = !DILocation(line: 617, column: 29, scope: !4801)
!4803 = !DILocation(line: 617, column: 41, scope: !4801)
!4804 = !DILocation(line: 617, column: 27, scope: !4801)
!4805 = !DILocation(line: 618, column: 15, scope: !4801)
!4806 = !DILocalVariable(name: "mbstate", scope: !4807, file: !241, line: 621, type: !4808)
!4807 = distinct !DILexicalBlock(scope: !4798, file: !241, line: 620, column: 15)
!4808 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !4809, line: 6, baseType: !4810)
!4809 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h", directory: "")
!4810 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !4811, line: 21, baseType: !4812)
!4811 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", directory: "")
!4812 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4811, line: 13, size: 64, elements: !4813)
!4813 = !{!4814, !4815}
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !4812, file: !4811, line: 15, baseType: !53, size: 32)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !4812, file: !4811, line: 20, baseType: !4816, size: 32, offset: 32)
!4816 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4812, file: !4811, line: 16, size: 32, elements: !4817)
!4817 = !{!4818, !4819}
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !4816, file: !4811, line: 18, baseType: !180, size: 32)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !4816, file: !4811, line: 19, baseType: !82, size: 32)
!4820 = !DILocation(line: 621, column: 27, scope: !4807)
!4821 = !DILocation(line: 622, column: 17, scope: !4807)
!4822 = !DILocation(line: 624, column: 19, scope: !4807)
!4823 = !DILocation(line: 625, column: 27, scope: !4807)
!4824 = !DILocation(line: 626, column: 21, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4807, file: !241, line: 626, column: 21)
!4826 = !DILocation(line: 626, column: 29, scope: !4825)
!4827 = !DILocation(line: 626, column: 21, scope: !4807)
!4828 = !DILocation(line: 627, column: 37, scope: !4825)
!4829 = !DILocation(line: 627, column: 29, scope: !4825)
!4830 = !DILocation(line: 627, column: 27, scope: !4825)
!4831 = !DILocation(line: 627, column: 19, scope: !4825)
!4832 = !DILocation(line: 629, column: 17, scope: !4807)
!4833 = !DILocalVariable(name: "w", scope: !4834, file: !241, line: 631, type: !4835)
!4834 = distinct !DILexicalBlock(scope: !4807, file: !241, line: 630, column: 19)
!4835 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !111, line: 74, baseType: !53)
!4836 = !DILocation(line: 631, column: 29, scope: !4834)
!4837 = !DILocalVariable(name: "bytes", scope: !4834, file: !241, line: 632, type: !110)
!4838 = !DILocation(line: 632, column: 28, scope: !4834)
!4839 = !DILocation(line: 632, column: 50, scope: !4834)
!4840 = !DILocation(line: 632, column: 54, scope: !4834)
!4841 = !DILocation(line: 632, column: 58, scope: !4834)
!4842 = !DILocation(line: 632, column: 56, scope: !4834)
!4843 = !DILocation(line: 633, column: 45, scope: !4834)
!4844 = !DILocation(line: 633, column: 56, scope: !4834)
!4845 = !DILocation(line: 633, column: 60, scope: !4834)
!4846 = !DILocation(line: 633, column: 58, scope: !4834)
!4847 = !DILocation(line: 633, column: 53, scope: !4834)
!4848 = !DILocation(line: 632, column: 36, scope: !4834)
!4849 = !DILocation(line: 634, column: 25, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4834, file: !241, line: 634, column: 25)
!4851 = !DILocation(line: 634, column: 31, scope: !4850)
!4852 = !DILocation(line: 634, column: 25, scope: !4834)
!4853 = !DILocation(line: 635, column: 23, scope: !4850)
!4854 = !DILocation(line: 636, column: 30, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4850, file: !241, line: 636, column: 30)
!4856 = !DILocation(line: 636, column: 36, scope: !4855)
!4857 = !DILocation(line: 636, column: 30, scope: !4850)
!4858 = !DILocation(line: 638, column: 35, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4855, file: !241, line: 637, column: 23)
!4860 = !DILocation(line: 639, column: 25, scope: !4859)
!4861 = !DILocation(line: 641, column: 30, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4855, file: !241, line: 641, column: 30)
!4863 = !DILocation(line: 641, column: 36, scope: !4862)
!4864 = !DILocation(line: 641, column: 30, scope: !4855)
!4865 = !DILocation(line: 643, column: 35, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4862, file: !241, line: 642, column: 23)
!4867 = !DILocation(line: 644, column: 25, scope: !4866)
!4868 = !DILocation(line: 644, column: 32, scope: !4866)
!4869 = !DILocation(line: 644, column: 36, scope: !4866)
!4870 = !DILocation(line: 644, column: 34, scope: !4866)
!4871 = !DILocation(line: 644, column: 40, scope: !4866)
!4872 = !DILocation(line: 644, column: 38, scope: !4866)
!4873 = !DILocation(line: 644, column: 48, scope: !4866)
!4874 = !DILocation(line: 644, column: 51, scope: !4866)
!4875 = !DILocation(line: 644, column: 55, scope: !4866)
!4876 = !DILocation(line: 644, column: 59, scope: !4866)
!4877 = !DILocation(line: 644, column: 57, scope: !4866)
!4878 = !DILocation(line: 0, scope: !4866)
!4879 = !DILocation(line: 645, column: 28, scope: !4866)
!4880 = distinct !{!4880, !4867, !4879}
!4881 = !DILocation(line: 646, column: 25, scope: !4866)
!4882 = !DILocation(line: 654, column: 44, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4884, file: !241, line: 654, column: 29)
!4884 = distinct !DILexicalBlock(scope: !4862, file: !241, line: 649, column: 23)
!4885 = !DILocation(line: 655, column: 29, scope: !4883)
!4886 = !DILocation(line: 655, column: 32, scope: !4883)
!4887 = !DILocation(line: 655, column: 46, scope: !4883)
!4888 = !DILocation(line: 654, column: 29, scope: !4884)
!4889 = !DILocalVariable(name: "j", scope: !4890, file: !241, line: 657, type: !110)
!4890 = distinct !DILexicalBlock(scope: !4883, file: !241, line: 656, column: 27)
!4891 = !DILocation(line: 657, column: 36, scope: !4890)
!4892 = !DILocation(line: 658, column: 36, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4890, file: !241, line: 658, column: 29)
!4894 = !DILocation(line: 658, column: 34, scope: !4893)
!4895 = !DILocation(line: 658, column: 41, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4893, file: !241, line: 658, column: 29)
!4897 = !DILocation(line: 658, column: 45, scope: !4896)
!4898 = !DILocation(line: 658, column: 43, scope: !4896)
!4899 = !DILocation(line: 658, column: 29, scope: !4893)
!4900 = !DILocation(line: 659, column: 39, scope: !4896)
!4901 = !DILocation(line: 659, column: 43, scope: !4896)
!4902 = !DILocation(line: 659, column: 47, scope: !4896)
!4903 = !DILocation(line: 659, column: 45, scope: !4896)
!4904 = !DILocation(line: 659, column: 51, scope: !4896)
!4905 = !DILocation(line: 659, column: 49, scope: !4896)
!4906 = !DILocation(line: 659, column: 31, scope: !4896)
!4907 = !DILocation(line: 663, column: 35, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4896, file: !241, line: 660, column: 33)
!4909 = !DILocation(line: 666, column: 35, scope: !4908)
!4910 = !DILocation(line: 667, column: 33, scope: !4908)
!4911 = !DILocation(line: 658, column: 53, scope: !4896)
!4912 = !DILocation(line: 658, column: 29, scope: !4896)
!4913 = distinct !{!4913, !4899, !4914}
!4914 = !DILocation(line: 667, column: 33, scope: !4893)
!4915 = !DILocation(line: 668, column: 27, scope: !4890)
!4916 = !DILocation(line: 670, column: 41, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4884, file: !241, line: 670, column: 29)
!4918 = !DILocation(line: 670, column: 31, scope: !4917)
!4919 = !DILocation(line: 670, column: 29, scope: !4884)
!4920 = !DILocation(line: 671, column: 37, scope: !4917)
!4921 = !DILocation(line: 671, column: 27, scope: !4917)
!4922 = !DILocation(line: 672, column: 30, scope: !4884)
!4923 = !DILocation(line: 672, column: 27, scope: !4884)
!4924 = !DILocation(line: 674, column: 19, scope: !4834)
!4925 = !DILocation(line: 675, column: 26, scope: !4807)
!4926 = !DILocation(line: 675, column: 24, scope: !4807)
!4927 = distinct !{!4927, !4832, !4928}
!4928 = !DILocation(line: 675, column: 44, scope: !4807)
!4929 = !DILocation(line: 678, column: 40, scope: !4793)
!4930 = !DILocation(line: 678, column: 38, scope: !4793)
!4931 = !DILocation(line: 680, column: 21, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4793, file: !241, line: 680, column: 17)
!4933 = !DILocation(line: 680, column: 19, scope: !4932)
!4934 = !DILocation(line: 680, column: 23, scope: !4932)
!4935 = !DILocation(line: 680, column: 27, scope: !4932)
!4936 = !DILocation(line: 680, column: 45, scope: !4932)
!4937 = !DILocation(line: 680, column: 50, scope: !4932)
!4938 = !DILocation(line: 680, column: 17, scope: !4793)
!4939 = !DILocalVariable(name: "ilim", scope: !4940, file: !241, line: 684, type: !110)
!4940 = distinct !DILexicalBlock(scope: !4932, file: !241, line: 681, column: 15)
!4941 = !DILocation(line: 684, column: 24, scope: !4940)
!4942 = !DILocation(line: 684, column: 31, scope: !4940)
!4943 = !DILocation(line: 684, column: 35, scope: !4940)
!4944 = !DILocation(line: 684, column: 33, scope: !4940)
!4945 = !DILocation(line: 686, column: 17, scope: !4940)
!4946 = !DILocation(line: 688, column: 25, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4948, file: !241, line: 688, column: 25)
!4948 = distinct !DILexicalBlock(scope: !4949, file: !241, line: 687, column: 19)
!4949 = distinct !DILexicalBlock(scope: !4950, file: !241, line: 686, column: 17)
!4950 = distinct !DILexicalBlock(scope: !4940, file: !241, line: 686, column: 17)
!4951 = !DILocation(line: 688, column: 43, scope: !4947)
!4952 = !DILocation(line: 688, column: 48, scope: !4947)
!4953 = !DILocation(line: 688, column: 25, scope: !4948)
!4954 = !DILocation(line: 690, column: 25, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4947, file: !241, line: 689, column: 23)
!4956 = !DILocation(line: 690, column: 25, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4958, file: !241, line: 690, column: 25)
!4958 = distinct !DILexicalBlock(scope: !4955, file: !241, line: 690, column: 25)
!4959 = !DILocation(line: 690, column: 25, scope: !4958)
!4960 = !DILocation(line: 690, column: 25, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4958, file: !241, line: 690, column: 25)
!4962 = !DILocation(line: 690, column: 25, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4961, file: !241, line: 690, column: 25)
!4964 = !DILocation(line: 690, column: 25, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4966, file: !241, line: 690, column: 25)
!4966 = distinct !DILexicalBlock(scope: !4963, file: !241, line: 690, column: 25)
!4967 = !DILocation(line: 690, column: 25, scope: !4966)
!4968 = !DILocation(line: 690, column: 25, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4970, file: !241, line: 690, column: 25)
!4970 = distinct !DILexicalBlock(scope: !4963, file: !241, line: 690, column: 25)
!4971 = !DILocation(line: 690, column: 25, scope: !4970)
!4972 = !DILocation(line: 690, column: 25, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4974, file: !241, line: 690, column: 25)
!4974 = distinct !DILexicalBlock(scope: !4963, file: !241, line: 690, column: 25)
!4975 = !DILocation(line: 690, column: 25, scope: !4974)
!4976 = !DILocation(line: 690, column: 25, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4978, file: !241, line: 690, column: 25)
!4978 = distinct !DILexicalBlock(scope: !4958, file: !241, line: 690, column: 25)
!4979 = !DILocation(line: 690, column: 25, scope: !4978)
!4980 = !DILocation(line: 691, column: 25, scope: !4955)
!4981 = !DILocation(line: 691, column: 25, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4983, file: !241, line: 691, column: 25)
!4983 = distinct !DILexicalBlock(scope: !4955, file: !241, line: 691, column: 25)
!4984 = !DILocation(line: 691, column: 25, scope: !4983)
!4985 = !DILocation(line: 692, column: 25, scope: !4955)
!4986 = !DILocation(line: 692, column: 25, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4988, file: !241, line: 692, column: 25)
!4988 = distinct !DILexicalBlock(scope: !4955, file: !241, line: 692, column: 25)
!4989 = !DILocation(line: 692, column: 25, scope: !4988)
!4990 = !DILocation(line: 693, column: 36, scope: !4955)
!4991 = !DILocation(line: 693, column: 38, scope: !4955)
!4992 = !DILocation(line: 693, column: 33, scope: !4955)
!4993 = !DILocation(line: 693, column: 29, scope: !4955)
!4994 = !DILocation(line: 693, column: 27, scope: !4955)
!4995 = !DILocation(line: 694, column: 23, scope: !4955)
!4996 = !DILocation(line: 695, column: 30, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4947, file: !241, line: 695, column: 30)
!4998 = !DILocation(line: 695, column: 30, scope: !4947)
!4999 = !DILocation(line: 697, column: 25, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4997, file: !241, line: 696, column: 23)
!5001 = !DILocation(line: 697, column: 25, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !5003, file: !241, line: 697, column: 25)
!5003 = distinct !DILexicalBlock(scope: !5000, file: !241, line: 697, column: 25)
!5004 = !DILocation(line: 697, column: 25, scope: !5003)
!5005 = !DILocation(line: 698, column: 40, scope: !5000)
!5006 = !DILocation(line: 699, column: 23, scope: !5000)
!5007 = !DILocation(line: 700, column: 25, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !4948, file: !241, line: 700, column: 25)
!5009 = !DILocation(line: 700, column: 33, scope: !5008)
!5010 = !DILocation(line: 700, column: 35, scope: !5008)
!5011 = !DILocation(line: 700, column: 30, scope: !5008)
!5012 = !DILocation(line: 700, column: 25, scope: !4948)
!5013 = !DILocation(line: 701, column: 23, scope: !5008)
!5014 = !DILocation(line: 702, column: 21, scope: !4948)
!5015 = !DILocation(line: 702, column: 21, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5017, file: !241, line: 702, column: 21)
!5017 = distinct !DILexicalBlock(scope: !4948, file: !241, line: 702, column: 21)
!5018 = !DILocation(line: 702, column: 21, scope: !5017)
!5019 = !DILocation(line: 702, column: 21, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5016, file: !241, line: 702, column: 21)
!5021 = !DILocation(line: 702, column: 21, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5023, file: !241, line: 702, column: 21)
!5023 = distinct !DILexicalBlock(scope: !5020, file: !241, line: 702, column: 21)
!5024 = !DILocation(line: 702, column: 21, scope: !5023)
!5025 = !DILocation(line: 702, column: 21, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5027, file: !241, line: 702, column: 21)
!5027 = distinct !DILexicalBlock(scope: !5020, file: !241, line: 702, column: 21)
!5028 = !DILocation(line: 702, column: 21, scope: !5027)
!5029 = !DILocation(line: 703, column: 21, scope: !4948)
!5030 = !DILocation(line: 703, column: 21, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5032, file: !241, line: 703, column: 21)
!5032 = distinct !DILexicalBlock(scope: !4948, file: !241, line: 703, column: 21)
!5033 = !DILocation(line: 703, column: 21, scope: !5032)
!5034 = !DILocation(line: 704, column: 25, scope: !4948)
!5035 = !DILocation(line: 704, column: 29, scope: !4948)
!5036 = !DILocation(line: 704, column: 23, scope: !4948)
!5037 = !DILocation(line: 686, column: 17, scope: !4949)
!5038 = distinct !{!5038, !5039, !5040}
!5039 = !DILocation(line: 686, column: 17, scope: !4950)
!5040 = !DILocation(line: 705, column: 19, scope: !4950)
!5041 = !DILocation(line: 707, column: 17, scope: !4940)
!5042 = !DILocation(line: 710, column: 9, scope: !4543)
!5043 = !DILocation(line: 712, column: 16, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !4489, file: !241, line: 712, column: 11)
!5045 = !DILocation(line: 712, column: 34, scope: !5044)
!5046 = !DILocation(line: 712, column: 37, scope: !5044)
!5047 = !DILocation(line: 712, column: 51, scope: !5044)
!5048 = !DILocation(line: 713, column: 15, scope: !5044)
!5049 = !DILocation(line: 713, column: 18, scope: !5044)
!5050 = !DILocation(line: 714, column: 14, scope: !5044)
!5051 = !DILocation(line: 714, column: 17, scope: !5044)
!5052 = !DILocation(line: 715, column: 14, scope: !5044)
!5053 = !DILocation(line: 715, column: 17, scope: !5044)
!5054 = !DILocation(line: 715, column: 33, scope: !5044)
!5055 = !DILocation(line: 715, column: 35, scope: !5044)
!5056 = !DILocation(line: 715, column: 51, scope: !5044)
!5057 = !DILocation(line: 715, column: 53, scope: !5044)
!5058 = !DILocation(line: 715, column: 47, scope: !5044)
!5059 = !DILocation(line: 715, column: 65, scope: !5044)
!5060 = !DILocation(line: 716, column: 11, scope: !5044)
!5061 = !DILocation(line: 716, column: 15, scope: !5044)
!5062 = !DILocation(line: 712, column: 11, scope: !4489)
!5063 = !DILocation(line: 717, column: 9, scope: !5044)
!5064 = !DILabel(scope: !4489, name: "store_escape", file: !241, line: 719)
!5065 = !DILocation(line: 719, column: 5, scope: !4489)
!5066 = !DILocation(line: 720, column: 7, scope: !4489)
!5067 = !DILocation(line: 720, column: 7, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5069, file: !241, line: 720, column: 7)
!5069 = distinct !DILexicalBlock(scope: !4489, file: !241, line: 720, column: 7)
!5070 = !DILocation(line: 720, column: 7, scope: !5069)
!5071 = !DILocation(line: 720, column: 7, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5069, file: !241, line: 720, column: 7)
!5073 = !DILocation(line: 720, column: 7, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5072, file: !241, line: 720, column: 7)
!5075 = !DILocation(line: 720, column: 7, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5077, file: !241, line: 720, column: 7)
!5077 = distinct !DILexicalBlock(scope: !5074, file: !241, line: 720, column: 7)
!5078 = !DILocation(line: 720, column: 7, scope: !5077)
!5079 = !DILocation(line: 720, column: 7, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5081, file: !241, line: 720, column: 7)
!5081 = distinct !DILexicalBlock(scope: !5074, file: !241, line: 720, column: 7)
!5082 = !DILocation(line: 720, column: 7, scope: !5081)
!5083 = !DILocation(line: 720, column: 7, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5085, file: !241, line: 720, column: 7)
!5085 = distinct !DILexicalBlock(scope: !5074, file: !241, line: 720, column: 7)
!5086 = !DILocation(line: 720, column: 7, scope: !5085)
!5087 = !DILocation(line: 720, column: 7, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5089, file: !241, line: 720, column: 7)
!5089 = distinct !DILexicalBlock(scope: !5069, file: !241, line: 720, column: 7)
!5090 = !DILocation(line: 720, column: 7, scope: !5089)
!5091 = !DILabel(scope: !4489, name: "store_c", file: !241, line: 722)
!5092 = !DILocation(line: 722, column: 5, scope: !4489)
!5093 = !DILocation(line: 723, column: 7, scope: !4489)
!5094 = !DILocation(line: 723, column: 7, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5096, file: !241, line: 723, column: 7)
!5096 = distinct !DILexicalBlock(scope: !4489, file: !241, line: 723, column: 7)
!5097 = !DILocation(line: 723, column: 7, scope: !5096)
!5098 = !DILocation(line: 723, column: 7, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !5095, file: !241, line: 723, column: 7)
!5100 = !DILocation(line: 723, column: 7, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5102, file: !241, line: 723, column: 7)
!5102 = distinct !DILexicalBlock(scope: !5099, file: !241, line: 723, column: 7)
!5103 = !DILocation(line: 723, column: 7, scope: !5102)
!5104 = !DILocation(line: 723, column: 7, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5106, file: !241, line: 723, column: 7)
!5106 = distinct !DILexicalBlock(scope: !5099, file: !241, line: 723, column: 7)
!5107 = !DILocation(line: 723, column: 7, scope: !5106)
!5108 = !DILocation(line: 724, column: 7, scope: !4489)
!5109 = !DILocation(line: 724, column: 7, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5111, file: !241, line: 724, column: 7)
!5111 = distinct !DILexicalBlock(scope: !4489, file: !241, line: 724, column: 7)
!5112 = !DILocation(line: 724, column: 7, scope: !5111)
!5113 = !DILocation(line: 726, column: 13, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !4489, file: !241, line: 726, column: 11)
!5115 = !DILocation(line: 726, column: 11, scope: !4489)
!5116 = !DILocation(line: 727, column: 38, scope: !5114)
!5117 = !DILocation(line: 727, column: 9, scope: !5114)
!5118 = !DILocation(line: 728, column: 5, scope: !4489)
!5119 = !DILocation(line: 400, column: 75, scope: !4478)
!5120 = !DILocation(line: 400, column: 3, scope: !4478)
!5121 = distinct !{!5121, !4487, !5122}
!5122 = !DILocation(line: 728, column: 5, scope: !4475)
!5123 = !DILocation(line: 730, column: 7, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !4335, file: !241, line: 730, column: 7)
!5125 = !DILocation(line: 730, column: 11, scope: !5124)
!5126 = !DILocation(line: 730, column: 16, scope: !5124)
!5127 = !DILocation(line: 730, column: 19, scope: !5124)
!5128 = !DILocation(line: 730, column: 33, scope: !5124)
!5129 = !DILocation(line: 731, column: 7, scope: !5124)
!5130 = !DILocation(line: 731, column: 10, scope: !5124)
!5131 = !DILocation(line: 730, column: 7, scope: !4335)
!5132 = !DILocation(line: 732, column: 5, scope: !5124)
!5133 = !DILocation(line: 738, column: 7, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !4335, file: !241, line: 738, column: 7)
!5135 = !DILocation(line: 738, column: 21, scope: !5134)
!5136 = !DILocation(line: 738, column: 51, scope: !5134)
!5137 = !DILocation(line: 738, column: 56, scope: !5134)
!5138 = !DILocation(line: 739, column: 7, scope: !5134)
!5139 = !DILocation(line: 739, column: 10, scope: !5134)
!5140 = !DILocation(line: 738, column: 7, scope: !4335)
!5141 = !DILocation(line: 741, column: 11, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5143, file: !241, line: 741, column: 11)
!5143 = distinct !DILexicalBlock(scope: !5134, file: !241, line: 740, column: 5)
!5144 = !DILocation(line: 741, column: 11, scope: !5143)
!5145 = !DILocation(line: 742, column: 42, scope: !5142)
!5146 = !DILocation(line: 742, column: 50, scope: !5142)
!5147 = !DILocation(line: 742, column: 67, scope: !5142)
!5148 = !DILocation(line: 742, column: 72, scope: !5142)
!5149 = !DILocation(line: 744, column: 42, scope: !5142)
!5150 = !DILocation(line: 744, column: 49, scope: !5142)
!5151 = !DILocation(line: 745, column: 42, scope: !5142)
!5152 = !DILocation(line: 745, column: 54, scope: !5142)
!5153 = !DILocation(line: 742, column: 16, scope: !5142)
!5154 = !DILocation(line: 742, column: 9, scope: !5142)
!5155 = !DILocation(line: 746, column: 18, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5142, file: !241, line: 746, column: 16)
!5157 = !DILocation(line: 746, column: 29, scope: !5156)
!5158 = !DILocation(line: 746, column: 32, scope: !5156)
!5159 = !DILocation(line: 746, column: 16, scope: !5142)
!5160 = !DILocation(line: 749, column: 24, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5156, file: !241, line: 747, column: 9)
!5162 = !DILocation(line: 749, column: 22, scope: !5161)
!5163 = !DILocation(line: 750, column: 15, scope: !5161)
!5164 = !DILocation(line: 751, column: 11, scope: !5161)
!5165 = !DILocation(line: 753, column: 5, scope: !5143)
!5166 = !DILocation(line: 755, column: 7, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !4335, file: !241, line: 755, column: 7)
!5168 = !DILocation(line: 755, column: 20, scope: !5167)
!5169 = !DILocation(line: 755, column: 24, scope: !5167)
!5170 = !DILocation(line: 755, column: 7, scope: !4335)
!5171 = !DILocation(line: 756, column: 5, scope: !5167)
!5172 = !DILocation(line: 756, column: 13, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5174, file: !241, line: 756, column: 5)
!5174 = distinct !DILexicalBlock(scope: !5167, file: !241, line: 756, column: 5)
!5175 = !DILocation(line: 756, column: 12, scope: !5173)
!5176 = !DILocation(line: 756, column: 5, scope: !5174)
!5177 = !DILocation(line: 757, column: 7, scope: !5173)
!5178 = !DILocation(line: 757, column: 7, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5180, file: !241, line: 757, column: 7)
!5180 = distinct !DILexicalBlock(scope: !5173, file: !241, line: 757, column: 7)
!5181 = !DILocation(line: 757, column: 7, scope: !5180)
!5182 = !DILocation(line: 756, column: 39, scope: !5173)
!5183 = !DILocation(line: 756, column: 5, scope: !5173)
!5184 = distinct !{!5184, !5176, !5185}
!5185 = !DILocation(line: 757, column: 7, scope: !5174)
!5186 = !DILocation(line: 759, column: 7, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !4335, file: !241, line: 759, column: 7)
!5188 = !DILocation(line: 759, column: 13, scope: !5187)
!5189 = !DILocation(line: 759, column: 11, scope: !5187)
!5190 = !DILocation(line: 759, column: 7, scope: !4335)
!5191 = !DILocation(line: 760, column: 5, scope: !5187)
!5192 = !DILocation(line: 760, column: 12, scope: !5187)
!5193 = !DILocation(line: 760, column: 17, scope: !5187)
!5194 = !DILocation(line: 761, column: 10, scope: !4335)
!5195 = !DILocation(line: 761, column: 3, scope: !4335)
!5196 = !DILabel(scope: !4335, name: "force_outer_quoting_style", file: !241, line: 763)
!5197 = !DILocation(line: 763, column: 2, scope: !4335)
!5198 = !DILocation(line: 766, column: 7, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !4335, file: !241, line: 766, column: 7)
!5200 = !DILocation(line: 766, column: 21, scope: !5199)
!5201 = !DILocation(line: 766, column: 51, scope: !5199)
!5202 = !DILocation(line: 766, column: 54, scope: !5199)
!5203 = !DILocation(line: 766, column: 7, scope: !4335)
!5204 = !DILocation(line: 767, column: 19, scope: !5199)
!5205 = !DILocation(line: 767, column: 5, scope: !5199)
!5206 = !DILocation(line: 768, column: 36, scope: !4335)
!5207 = !DILocation(line: 768, column: 44, scope: !4335)
!5208 = !DILocation(line: 768, column: 56, scope: !4335)
!5209 = !DILocation(line: 768, column: 61, scope: !4335)
!5210 = !DILocation(line: 769, column: 36, scope: !4335)
!5211 = !DILocation(line: 770, column: 36, scope: !4335)
!5212 = !DILocation(line: 770, column: 42, scope: !4335)
!5213 = !DILocation(line: 771, column: 36, scope: !4335)
!5214 = !DILocation(line: 771, column: 48, scope: !4335)
!5215 = !DILocation(line: 768, column: 10, scope: !4335)
!5216 = !DILocation(line: 768, column: 3, scope: !4335)
!5217 = !DILocation(line: 772, column: 1, scope: !4335)
!5218 = !DILocalVariable(name: "buffer", arg: 1, scope: !5219, file: !241, line: 256, type: !6)
!5219 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !241, file: !241, line: 256, type: !4336, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5220, retainedNodes: !4)
!5220 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !5221, nameTableKind: None)
!5221 = !{!5222, !5224, !5226, !5235, !5237, !5239, !5246, !5248}
!5222 = !DIGlobalVariableExpression(var: !5223, expr: !DIExpression())
!5223 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !5220, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!5224 = !DIGlobalVariableExpression(var: !5225, expr: !DIExpression())
!5225 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !5220, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!5226 = !DIGlobalVariableExpression(var: !5227, expr: !DIExpression())
!5227 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !5220, file: !241, line: 1052, type: !5228, isLocal: false, isDefinition: true)
!5228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !5229)
!5229 = !{!5230, !5231, !5232, !5233, !5234}
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !5228, file: !241, line: 68, baseType: !223, size: 32)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5228, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !5228, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !5228, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !5228, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!5235 = !DIGlobalVariableExpression(var: !5236, expr: !DIExpression())
!5236 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !5220, file: !241, line: 116, type: !5228, isLocal: true, isDefinition: true)
!5237 = !DIGlobalVariableExpression(var: !5238, expr: !DIExpression())
!5238 = distinct !DIGlobalVariable(name: "slot0", scope: !5220, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!5239 = !DIGlobalVariableExpression(var: !5240, expr: !DIExpression())
!5240 = distinct !DIGlobalVariable(name: "slotvec", scope: !5220, file: !241, line: 845, type: !5241, isLocal: true, isDefinition: true)
!5241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5242, size: 64)
!5242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !5243)
!5243 = !{!5244, !5245}
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5242, file: !241, line: 836, baseType: !110, size: 64)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5242, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!5246 = !DIGlobalVariableExpression(var: !5247, expr: !DIExpression())
!5247 = distinct !DIGlobalVariable(name: "nslots", scope: !5220, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!5248 = !DIGlobalVariableExpression(var: !5249, expr: !DIExpression())
!5249 = distinct !DIGlobalVariable(name: "slotvec0", scope: !5220, file: !241, line: 844, type: !5242, isLocal: true, isDefinition: true)
!5250 = !DILocalVariable(name: "buffersize", arg: 2, scope: !5219, file: !241, line: 256, type: !110)
!5251 = !DILocalVariable(name: "arg", arg: 3, scope: !5219, file: !241, line: 257, type: !49)
!5252 = !DILocalVariable(name: "argsize", arg: 4, scope: !5219, file: !241, line: 257, type: !110)
!5253 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !5219, file: !241, line: 258, type: !223)
!5254 = !DILocalVariable(name: "flags", arg: 6, scope: !5219, file: !241, line: 258, type: !53)
!5255 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !5219, file: !241, line: 259, type: !4338)
!5256 = !DILocalVariable(name: "left_quote", arg: 8, scope: !5219, file: !241, line: 260, type: !49)
!5257 = !DILocalVariable(name: "right_quote", arg: 9, scope: !5219, file: !241, line: 261, type: !49)
!5258 = !DILocalVariable(name: "i", scope: !5219, file: !241, line: 263, type: !110)
!5259 = !DILocalVariable(name: "len", scope: !5219, file: !241, line: 264, type: !110)
!5260 = !DILocalVariable(name: "orig_buffersize", scope: !5219, file: !241, line: 265, type: !110)
!5261 = !DILocalVariable(name: "quote_string", scope: !5219, file: !241, line: 266, type: !49)
!5262 = !DILocalVariable(name: "quote_string_len", scope: !5219, file: !241, line: 267, type: !110)
!5263 = !DILocalVariable(name: "backslash_escapes", scope: !5219, file: !241, line: 268, type: !18)
!5264 = !DILocalVariable(name: "unibyte_locale", scope: !5219, file: !241, line: 269, type: !18)
!5265 = !DILocalVariable(name: "elide_outer_quotes", scope: !5219, file: !241, line: 270, type: !18)
!5266 = !DILocalVariable(name: "pending_shell_escape_end", scope: !5219, file: !241, line: 271, type: !18)
!5267 = !DILocalVariable(name: "encountered_single_quote", scope: !5219, file: !241, line: 272, type: !18)
!5268 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !5219, file: !241, line: 273, type: !18)
!5269 = !DILocalVariable(name: "escaping", scope: !5270, file: !241, line: 405, type: !18)
!5270 = distinct !DILexicalBlock(scope: !5271, file: !241, line: 401, column: 5)
!5271 = distinct !DILexicalBlock(scope: !5272, file: !241, line: 400, column: 3)
!5272 = distinct !DILexicalBlock(scope: !5273, file: !241, line: 400, column: 3)
!5273 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !241, file: !241, line: 256, type: !4336, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5274, retainedNodes: !4)
!5274 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !5275, nameTableKind: None)
!5275 = !{!5276, !5278, !5280, !5289, !5291, !5293, !5300, !5302}
!5276 = !DIGlobalVariableExpression(var: !5277, expr: !DIExpression())
!5277 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !5274, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!5278 = !DIGlobalVariableExpression(var: !5279, expr: !DIExpression())
!5279 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !5274, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!5280 = !DIGlobalVariableExpression(var: !5281, expr: !DIExpression())
!5281 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !5274, file: !241, line: 1052, type: !5282, isLocal: false, isDefinition: true)
!5282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !5283)
!5283 = !{!5284, !5285, !5286, !5287, !5288}
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !5282, file: !241, line: 68, baseType: !223, size: 32)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5282, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !5282, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !5282, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !5282, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!5289 = !DIGlobalVariableExpression(var: !5290, expr: !DIExpression())
!5290 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !5274, file: !241, line: 116, type: !5282, isLocal: true, isDefinition: true)
!5291 = !DIGlobalVariableExpression(var: !5292, expr: !DIExpression())
!5292 = distinct !DIGlobalVariable(name: "slot0", scope: !5274, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!5293 = !DIGlobalVariableExpression(var: !5294, expr: !DIExpression())
!5294 = distinct !DIGlobalVariable(name: "slotvec", scope: !5274, file: !241, line: 845, type: !5295, isLocal: true, isDefinition: true)
!5295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5296, size: 64)
!5296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !5297)
!5297 = !{!5298, !5299}
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5296, file: !241, line: 836, baseType: !110, size: 64)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5296, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!5300 = !DIGlobalVariableExpression(var: !5301, expr: !DIExpression())
!5301 = distinct !DIGlobalVariable(name: "nslots", scope: !5274, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!5302 = !DIGlobalVariableExpression(var: !5303, expr: !DIExpression())
!5303 = distinct !DIGlobalVariable(name: "slotvec0", scope: !5274, file: !241, line: 844, type: !5296, isLocal: true, isDefinition: true)
!5304 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !5270, file: !241, line: 406, type: !18)
!5305 = distinct !DISubprogram(name: "gettext_quote", scope: !241, file: !241, line: 207, type: !5306, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!5306 = !DISubroutineType(types: !5307)
!5307 = !{!49, !49, !223}
!5308 = !DILocalVariable(name: "msgid", arg: 1, scope: !5305, file: !241, line: 207, type: !49)
!5309 = !DILocation(line: 207, column: 28, scope: !5305)
!5310 = !DILocalVariable(name: "s", arg: 2, scope: !5305, file: !241, line: 207, type: !223)
!5311 = !DILocation(line: 207, column: 54, scope: !5305)
!5312 = !DILocalVariable(name: "translation", scope: !5305, file: !241, line: 209, type: !49)
!5313 = !DILocation(line: 209, column: 15, scope: !5305)
!5314 = !DILocation(line: 209, column: 29, scope: !5305)
!5315 = !DILocalVariable(name: "locale_code", scope: !5305, file: !241, line: 210, type: !49)
!5316 = !DILocation(line: 210, column: 15, scope: !5305)
!5317 = !DILocation(line: 212, column: 7, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5305, file: !241, line: 212, column: 7)
!5319 = !DILocation(line: 212, column: 22, scope: !5318)
!5320 = !DILocation(line: 212, column: 19, scope: !5318)
!5321 = !DILocation(line: 212, column: 7, scope: !5305)
!5322 = !DILocation(line: 213, column: 12, scope: !5318)
!5323 = !DILocation(line: 213, column: 5, scope: !5318)
!5324 = !DILocation(line: 233, column: 17, scope: !5305)
!5325 = !DILocation(line: 233, column: 15, scope: !5305)
!5326 = !DILocation(line: 234, column: 7, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5305, file: !241, line: 234, column: 7)
!5328 = !DILocation(line: 234, column: 7, scope: !5305)
!5329 = !DILocation(line: 235, column: 12, scope: !5327)
!5330 = !DILocation(line: 235, column: 21, scope: !5327)
!5331 = !DILocation(line: 235, column: 5, scope: !5327)
!5332 = !DILocation(line: 236, column: 7, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5305, file: !241, line: 236, column: 7)
!5334 = !DILocation(line: 236, column: 7, scope: !5305)
!5335 = !DILocation(line: 237, column: 12, scope: !5333)
!5336 = !DILocation(line: 237, column: 21, scope: !5333)
!5337 = !DILocation(line: 237, column: 5, scope: !5333)
!5338 = !DILocation(line: 239, column: 11, scope: !5305)
!5339 = !DILocation(line: 239, column: 13, scope: !5305)
!5340 = !DILocation(line: 239, column: 3, scope: !5305)
!5341 = !DILocation(line: 240, column: 1, scope: !5305)
!5342 = !DILocalVariable(name: "msgid", arg: 1, scope: !5343, file: !241, line: 207, type: !49)
!5343 = distinct !DISubprogram(name: "gettext_quote", scope: !241, file: !241, line: 207, type: !5306, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5344, retainedNodes: !4)
!5344 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !5345, nameTableKind: None)
!5345 = !{!5346, !5348, !5350, !5359, !5361, !5363, !5370, !5372}
!5346 = !DIGlobalVariableExpression(var: !5347, expr: !DIExpression())
!5347 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !5344, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!5348 = !DIGlobalVariableExpression(var: !5349, expr: !DIExpression())
!5349 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !5344, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!5350 = !DIGlobalVariableExpression(var: !5351, expr: !DIExpression())
!5351 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !5344, file: !241, line: 1052, type: !5352, isLocal: false, isDefinition: true)
!5352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !5353)
!5353 = !{!5354, !5355, !5356, !5357, !5358}
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !5352, file: !241, line: 68, baseType: !223, size: 32)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5352, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !5352, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !5352, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !5352, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!5359 = !DIGlobalVariableExpression(var: !5360, expr: !DIExpression())
!5360 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !5344, file: !241, line: 116, type: !5352, isLocal: true, isDefinition: true)
!5361 = !DIGlobalVariableExpression(var: !5362, expr: !DIExpression())
!5362 = distinct !DIGlobalVariable(name: "slot0", scope: !5344, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!5363 = !DIGlobalVariableExpression(var: !5364, expr: !DIExpression())
!5364 = distinct !DIGlobalVariable(name: "slotvec", scope: !5344, file: !241, line: 845, type: !5365, isLocal: true, isDefinition: true)
!5365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5366, size: 64)
!5366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !5367)
!5367 = !{!5368, !5369}
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5366, file: !241, line: 836, baseType: !110, size: 64)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5366, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!5370 = !DIGlobalVariableExpression(var: !5371, expr: !DIExpression())
!5371 = distinct !DIGlobalVariable(name: "nslots", scope: !5344, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!5372 = !DIGlobalVariableExpression(var: !5373, expr: !DIExpression())
!5373 = distinct !DIGlobalVariable(name: "slotvec0", scope: !5344, file: !241, line: 844, type: !5366, isLocal: true, isDefinition: true)
!5374 = !DILocalVariable(name: "s", arg: 2, scope: !5343, file: !241, line: 207, type: !223)
!5375 = !DILocalVariable(name: "translation", scope: !5343, file: !241, line: 209, type: !49)
!5376 = !DILocalVariable(name: "locale_code", scope: !5343, file: !241, line: 210, type: !49)
!5377 = distinct !DISubprogram(name: "quotearg_char", scope: !241, file: !241, line: 991, type: !5378, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!5378 = !DISubroutineType(types: !5379)
!5379 = !{!6, !49, !7}
!5380 = !DILocalVariable(name: "arg", arg: 1, scope: !5377, file: !241, line: 991, type: !49)
!5381 = !DILocation(line: 991, column: 28, scope: !5377)
!5382 = !DILocalVariable(name: "ch", arg: 2, scope: !5377, file: !241, line: 991, type: !7)
!5383 = !DILocation(line: 991, column: 38, scope: !5377)
!5384 = !DILocation(line: 993, column: 29, scope: !5377)
!5385 = !DILocation(line: 993, column: 44, scope: !5377)
!5386 = !DILocation(line: 993, column: 10, scope: !5377)
!5387 = !DILocation(line: 993, column: 3, scope: !5377)
!5388 = distinct !DISubprogram(name: "quotearg_colon", scope: !241, file: !241, line: 997, type: !3678, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!5389 = !DILocalVariable(name: "arg", arg: 1, scope: !5388, file: !241, line: 997, type: !49)
!5390 = !DILocation(line: 997, column: 29, scope: !5388)
!5391 = !DILocation(line: 999, column: 25, scope: !5388)
!5392 = !DILocation(line: 999, column: 10, scope: !5388)
!5393 = !DILocation(line: 999, column: 3, scope: !5388)
!5394 = !DILocalVariable(name: "arg", arg: 1, scope: !5395, file: !241, line: 997, type: !49)
!5395 = distinct !DISubprogram(name: "quotearg_colon", scope: !241, file: !241, line: 997, type: !3678, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5396, retainedNodes: !4)
!5396 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !5397, nameTableKind: None)
!5397 = !{!5398, !5400, !5402, !5411, !5413, !5415, !5422, !5424}
!5398 = !DIGlobalVariableExpression(var: !5399, expr: !DIExpression())
!5399 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !5396, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!5400 = !DIGlobalVariableExpression(var: !5401, expr: !DIExpression())
!5401 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !5396, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!5402 = !DIGlobalVariableExpression(var: !5403, expr: !DIExpression())
!5403 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !5396, file: !241, line: 1052, type: !5404, isLocal: false, isDefinition: true)
!5404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !5405)
!5405 = !{!5406, !5407, !5408, !5409, !5410}
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !5404, file: !241, line: 68, baseType: !223, size: 32)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5404, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !5404, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !5404, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !5404, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!5411 = !DIGlobalVariableExpression(var: !5412, expr: !DIExpression())
!5412 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !5396, file: !241, line: 116, type: !5404, isLocal: true, isDefinition: true)
!5413 = !DIGlobalVariableExpression(var: !5414, expr: !DIExpression())
!5414 = distinct !DIGlobalVariable(name: "slot0", scope: !5396, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!5415 = !DIGlobalVariableExpression(var: !5416, expr: !DIExpression())
!5416 = distinct !DIGlobalVariable(name: "slotvec", scope: !5396, file: !241, line: 845, type: !5417, isLocal: true, isDefinition: true)
!5417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5418, size: 64)
!5418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !5419)
!5419 = !{!5420, !5421}
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5418, file: !241, line: 836, baseType: !110, size: 64)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5418, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!5422 = !DIGlobalVariableExpression(var: !5423, expr: !DIExpression())
!5423 = distinct !DIGlobalVariable(name: "nslots", scope: !5396, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!5424 = !DIGlobalVariableExpression(var: !5425, expr: !DIExpression())
!5425 = distinct !DIGlobalVariable(name: "slotvec0", scope: !5396, file: !241, line: 844, type: !5418, isLocal: true, isDefinition: true)
!5426 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !241, file: !241, line: 1009, type: !5427, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!5427 = !DISubroutineType(types: !5428)
!5428 = !{!6, !53, !223, !49}
!5429 = !DILocalVariable(name: "n", arg: 1, scope: !5426, file: !241, line: 1009, type: !53)
!5430 = !DILocation(line: 1009, column: 29, scope: !5426)
!5431 = !DILocalVariable(name: "s", arg: 2, scope: !5426, file: !241, line: 1009, type: !223)
!5432 = !DILocation(line: 1009, column: 51, scope: !5426)
!5433 = !DILocalVariable(name: "arg", arg: 3, scope: !5426, file: !241, line: 1009, type: !49)
!5434 = !DILocation(line: 1009, column: 66, scope: !5426)
!5435 = !DILocalVariable(name: "options", scope: !5426, file: !241, line: 1011, type: !254)
!5436 = !DILocation(line: 1011, column: 26, scope: !5426)
!5437 = !DILocation(line: 1012, column: 41, scope: !5426)
!5438 = !DILocation(line: 1012, column: 13, scope: !5426)
!5439 = !DILocation(line: 1013, column: 3, scope: !5426)
!5440 = !DILocation(line: 1014, column: 30, scope: !5426)
!5441 = !DILocation(line: 1014, column: 33, scope: !5426)
!5442 = !DILocation(line: 1014, column: 10, scope: !5426)
!5443 = !DILocation(line: 1014, column: 3, scope: !5426)
!5444 = !DILocalVariable(name: "n", arg: 1, scope: !5445, file: !241, line: 1009, type: !53)
!5445 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !241, file: !241, line: 1009, type: !5427, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5446, retainedNodes: !4)
!5446 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !5447, nameTableKind: None)
!5447 = !{!5448, !5450, !5452, !5461, !5463, !5465, !5472, !5474}
!5448 = !DIGlobalVariableExpression(var: !5449, expr: !DIExpression())
!5449 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !5446, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!5450 = !DIGlobalVariableExpression(var: !5451, expr: !DIExpression())
!5451 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !5446, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!5452 = !DIGlobalVariableExpression(var: !5453, expr: !DIExpression())
!5453 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !5446, file: !241, line: 1052, type: !5454, isLocal: false, isDefinition: true)
!5454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !5455)
!5455 = !{!5456, !5457, !5458, !5459, !5460}
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !5454, file: !241, line: 68, baseType: !223, size: 32)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5454, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !5454, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !5454, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !5454, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!5461 = !DIGlobalVariableExpression(var: !5462, expr: !DIExpression())
!5462 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !5446, file: !241, line: 116, type: !5454, isLocal: true, isDefinition: true)
!5463 = !DIGlobalVariableExpression(var: !5464, expr: !DIExpression())
!5464 = distinct !DIGlobalVariable(name: "slot0", scope: !5446, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!5465 = !DIGlobalVariableExpression(var: !5466, expr: !DIExpression())
!5466 = distinct !DIGlobalVariable(name: "slotvec", scope: !5446, file: !241, line: 845, type: !5467, isLocal: true, isDefinition: true)
!5467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5468, size: 64)
!5468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !5469)
!5469 = !{!5470, !5471}
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5468, file: !241, line: 836, baseType: !110, size: 64)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5468, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!5472 = !DIGlobalVariableExpression(var: !5473, expr: !DIExpression())
!5473 = distinct !DIGlobalVariable(name: "nslots", scope: !5446, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!5474 = !DIGlobalVariableExpression(var: !5475, expr: !DIExpression())
!5475 = distinct !DIGlobalVariable(name: "slotvec0", scope: !5446, file: !241, line: 844, type: !5468, isLocal: true, isDefinition: true)
!5476 = !DILocalVariable(name: "s", arg: 2, scope: !5445, file: !241, line: 1009, type: !223)
!5477 = !DILocalVariable(name: "arg", arg: 3, scope: !5445, file: !241, line: 1009, type: !49)
!5478 = !DILocalVariable(name: "options", scope: !5445, file: !241, line: 1011, type: !5454)
!5479 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !241, file: !241, line: 193, type: !5480, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!5480 = !DISubroutineType(types: !5481)
!5481 = !{!254, !223}
!5482 = !DILocalVariable(name: "style", arg: 1, scope: !5479, file: !241, line: 193, type: !223)
!5483 = !DILocation(line: 193, column: 48, scope: !5479)
!5484 = !DILocalVariable(name: "o", scope: !5479, file: !241, line: 195, type: !254)
!5485 = !DILocation(line: 195, column: 26, scope: !5479)
!5486 = !DILocation(line: 196, column: 7, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5479, file: !241, line: 196, column: 7)
!5488 = !DILocation(line: 196, column: 13, scope: !5487)
!5489 = !DILocation(line: 196, column: 7, scope: !5479)
!5490 = !DILocation(line: 197, column: 5, scope: !5487)
!5491 = !DILocation(line: 198, column: 13, scope: !5479)
!5492 = !DILocation(line: 198, column: 5, scope: !5479)
!5493 = !DILocation(line: 198, column: 11, scope: !5479)
!5494 = !DILocation(line: 199, column: 3, scope: !5479)
!5495 = !DILocalVariable(name: "style", arg: 1, scope: !5496, file: !241, line: 193, type: !223)
!5496 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !241, file: !241, line: 193, type: !5497, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5506, retainedNodes: !4)
!5497 = !DISubroutineType(types: !5498)
!5498 = !{!5499, !223}
!5499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !5500)
!5500 = !{!5501, !5502, !5503, !5504, !5505}
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !5499, file: !241, line: 68, baseType: !223, size: 32)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5499, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !5499, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !5499, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !5499, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!5506 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !5507, nameTableKind: None)
!5507 = !{!5508, !5510, !5512, !5514, !5516, !5518, !5525, !5527}
!5508 = !DIGlobalVariableExpression(var: !5509, expr: !DIExpression())
!5509 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !5506, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!5510 = !DIGlobalVariableExpression(var: !5511, expr: !DIExpression())
!5511 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !5506, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!5512 = !DIGlobalVariableExpression(var: !5513, expr: !DIExpression())
!5513 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !5506, file: !241, line: 1052, type: !5499, isLocal: false, isDefinition: true)
!5514 = !DIGlobalVariableExpression(var: !5515, expr: !DIExpression())
!5515 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !5506, file: !241, line: 116, type: !5499, isLocal: true, isDefinition: true)
!5516 = !DIGlobalVariableExpression(var: !5517, expr: !DIExpression())
!5517 = distinct !DIGlobalVariable(name: "slot0", scope: !5506, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!5518 = !DIGlobalVariableExpression(var: !5519, expr: !DIExpression())
!5519 = distinct !DIGlobalVariable(name: "slotvec", scope: !5506, file: !241, line: 845, type: !5520, isLocal: true, isDefinition: true)
!5520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5521, size: 64)
!5521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !5522)
!5522 = !{!5523, !5524}
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5521, file: !241, line: 836, baseType: !110, size: 64)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5521, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!5525 = !DIGlobalVariableExpression(var: !5526, expr: !DIExpression())
!5526 = distinct !DIGlobalVariable(name: "nslots", scope: !5506, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!5527 = !DIGlobalVariableExpression(var: !5528, expr: !DIExpression())
!5528 = distinct !DIGlobalVariable(name: "slotvec0", scope: !5506, file: !241, line: 844, type: !5521, isLocal: true, isDefinition: true)
!5529 = !DILocalVariable(name: "o", scope: !5496, file: !241, line: 195, type: !5499)
!5530 = distinct !DISubprogram(name: "quote_n_mem", scope: !241, file: !241, line: 1061, type: !5531, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!5531 = !DISubroutineType(types: !5532)
!5532 = !{!49, !53, !49, !110}
!5533 = !DILocalVariable(name: "n", arg: 1, scope: !5530, file: !241, line: 1061, type: !53)
!5534 = !DILocation(line: 1061, column: 18, scope: !5530)
!5535 = !DILocalVariable(name: "arg", arg: 2, scope: !5530, file: !241, line: 1061, type: !49)
!5536 = !DILocation(line: 1061, column: 33, scope: !5530)
!5537 = !DILocalVariable(name: "argsize", arg: 3, scope: !5530, file: !241, line: 1061, type: !110)
!5538 = !DILocation(line: 1061, column: 45, scope: !5530)
!5539 = !DILocation(line: 1063, column: 30, scope: !5530)
!5540 = !DILocation(line: 1063, column: 33, scope: !5530)
!5541 = !DILocation(line: 1063, column: 38, scope: !5530)
!5542 = !DILocation(line: 1063, column: 10, scope: !5530)
!5543 = !DILocation(line: 1063, column: 3, scope: !5530)
!5544 = !DILocalVariable(name: "n", arg: 1, scope: !5545, file: !241, line: 1061, type: !53)
!5545 = distinct !DISubprogram(name: "quote_n_mem", scope: !241, file: !241, line: 1061, type: !5531, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5546, retainedNodes: !4)
!5546 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !5547, nameTableKind: None)
!5547 = !{!5548, !5550, !5552, !5561, !5563, !5565, !5572, !5574}
!5548 = !DIGlobalVariableExpression(var: !5549, expr: !DIExpression())
!5549 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !5546, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!5550 = !DIGlobalVariableExpression(var: !5551, expr: !DIExpression())
!5551 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !5546, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!5552 = !DIGlobalVariableExpression(var: !5553, expr: !DIExpression())
!5553 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !5546, file: !241, line: 1052, type: !5554, isLocal: false, isDefinition: true)
!5554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !5555)
!5555 = !{!5556, !5557, !5558, !5559, !5560}
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !5554, file: !241, line: 68, baseType: !223, size: 32)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5554, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !5554, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !5554, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !5554, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!5561 = !DIGlobalVariableExpression(var: !5562, expr: !DIExpression())
!5562 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !5546, file: !241, line: 116, type: !5554, isLocal: true, isDefinition: true)
!5563 = !DIGlobalVariableExpression(var: !5564, expr: !DIExpression())
!5564 = distinct !DIGlobalVariable(name: "slot0", scope: !5546, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!5565 = !DIGlobalVariableExpression(var: !5566, expr: !DIExpression())
!5566 = distinct !DIGlobalVariable(name: "slotvec", scope: !5546, file: !241, line: 845, type: !5567, isLocal: true, isDefinition: true)
!5567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5568, size: 64)
!5568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !5569)
!5569 = !{!5570, !5571}
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5568, file: !241, line: 836, baseType: !110, size: 64)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5568, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!5572 = !DIGlobalVariableExpression(var: !5573, expr: !DIExpression())
!5573 = distinct !DIGlobalVariable(name: "nslots", scope: !5546, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!5574 = !DIGlobalVariableExpression(var: !5575, expr: !DIExpression())
!5575 = distinct !DIGlobalVariable(name: "slotvec0", scope: !5546, file: !241, line: 844, type: !5568, isLocal: true, isDefinition: true)
!5576 = !DILocalVariable(name: "arg", arg: 2, scope: !5545, file: !241, line: 1061, type: !49)
!5577 = !DILocalVariable(name: "argsize", arg: 3, scope: !5545, file: !241, line: 1061, type: !110)
!5578 = distinct !DISubprogram(name: "quote_n", scope: !241, file: !241, line: 1073, type: !5579, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!5579 = !DISubroutineType(types: !5580)
!5580 = !{!49, !53, !49}
!5581 = !DILocalVariable(name: "n", arg: 1, scope: !5578, file: !241, line: 1073, type: !53)
!5582 = !DILocation(line: 1073, column: 14, scope: !5578)
!5583 = !DILocalVariable(name: "arg", arg: 2, scope: !5578, file: !241, line: 1073, type: !49)
!5584 = !DILocation(line: 1073, column: 29, scope: !5578)
!5585 = !DILocation(line: 1075, column: 23, scope: !5578)
!5586 = !DILocation(line: 1075, column: 26, scope: !5578)
!5587 = !DILocation(line: 1075, column: 10, scope: !5578)
!5588 = !DILocation(line: 1075, column: 3, scope: !5578)
!5589 = !DILocalVariable(name: "n", arg: 1, scope: !5590, file: !241, line: 1073, type: !53)
!5590 = distinct !DISubprogram(name: "quote_n", scope: !241, file: !241, line: 1073, type: !5579, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5591, retainedNodes: !4)
!5591 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !5592, nameTableKind: None)
!5592 = !{!5593, !5595, !5597, !5606, !5608, !5610, !5617, !5619}
!5593 = !DIGlobalVariableExpression(var: !5594, expr: !DIExpression())
!5594 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !5591, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!5595 = !DIGlobalVariableExpression(var: !5596, expr: !DIExpression())
!5596 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !5591, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!5597 = !DIGlobalVariableExpression(var: !5598, expr: !DIExpression())
!5598 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !5591, file: !241, line: 1052, type: !5599, isLocal: false, isDefinition: true)
!5599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !5600)
!5600 = !{!5601, !5602, !5603, !5604, !5605}
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !5599, file: !241, line: 68, baseType: !223, size: 32)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5599, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !5599, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !5599, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !5599, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!5606 = !DIGlobalVariableExpression(var: !5607, expr: !DIExpression())
!5607 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !5591, file: !241, line: 116, type: !5599, isLocal: true, isDefinition: true)
!5608 = !DIGlobalVariableExpression(var: !5609, expr: !DIExpression())
!5609 = distinct !DIGlobalVariable(name: "slot0", scope: !5591, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!5610 = !DIGlobalVariableExpression(var: !5611, expr: !DIExpression())
!5611 = distinct !DIGlobalVariable(name: "slotvec", scope: !5591, file: !241, line: 845, type: !5612, isLocal: true, isDefinition: true)
!5612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5613, size: 64)
!5613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !5614)
!5614 = !{!5615, !5616}
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5613, file: !241, line: 836, baseType: !110, size: 64)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5613, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!5617 = !DIGlobalVariableExpression(var: !5618, expr: !DIExpression())
!5618 = distinct !DIGlobalVariable(name: "nslots", scope: !5591, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!5619 = !DIGlobalVariableExpression(var: !5620, expr: !DIExpression())
!5620 = distinct !DIGlobalVariable(name: "slotvec0", scope: !5591, file: !241, line: 844, type: !5613, isLocal: true, isDefinition: true)
!5621 = !DILocalVariable(name: "arg", arg: 2, scope: !5590, file: !241, line: 1073, type: !49)
!5622 = distinct !DISubprogram(name: "quote", scope: !241, file: !241, line: 1079, type: !5623, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!5623 = !DISubroutineType(types: !5624)
!5624 = !{!49, !49}
!5625 = !DILocalVariable(name: "arg", arg: 1, scope: !5622, file: !241, line: 1079, type: !49)
!5626 = !DILocation(line: 1079, column: 20, scope: !5622)
!5627 = !DILocation(line: 1081, column: 22, scope: !5622)
!5628 = !DILocation(line: 1081, column: 10, scope: !5622)
!5629 = !DILocation(line: 1081, column: 3, scope: !5622)
!5630 = !DILocalVariable(name: "arg", arg: 1, scope: !5631, file: !241, line: 1079, type: !49)
!5631 = distinct !DISubprogram(name: "quote", scope: !241, file: !241, line: 1079, type: !5623, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5632, retainedNodes: !4)
!5632 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !5633, nameTableKind: None)
!5633 = !{!5634, !5636, !5638, !5647, !5649, !5651, !5658, !5660}
!5634 = !DIGlobalVariableExpression(var: !5635, expr: !DIExpression())
!5635 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !5632, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!5636 = !DIGlobalVariableExpression(var: !5637, expr: !DIExpression())
!5637 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !5632, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!5638 = !DIGlobalVariableExpression(var: !5639, expr: !DIExpression())
!5639 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !5632, file: !241, line: 1052, type: !5640, isLocal: false, isDefinition: true)
!5640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !5641)
!5641 = !{!5642, !5643, !5644, !5645, !5646}
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !5640, file: !241, line: 68, baseType: !223, size: 32)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5640, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !5640, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !5640, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !5640, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!5647 = !DIGlobalVariableExpression(var: !5648, expr: !DIExpression())
!5648 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !5632, file: !241, line: 116, type: !5640, isLocal: true, isDefinition: true)
!5649 = !DIGlobalVariableExpression(var: !5650, expr: !DIExpression())
!5650 = distinct !DIGlobalVariable(name: "slot0", scope: !5632, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!5651 = !DIGlobalVariableExpression(var: !5652, expr: !DIExpression())
!5652 = distinct !DIGlobalVariable(name: "slotvec", scope: !5632, file: !241, line: 845, type: !5653, isLocal: true, isDefinition: true)
!5653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5654, size: 64)
!5654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !5655)
!5655 = !{!5656, !5657}
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5654, file: !241, line: 836, baseType: !110, size: 64)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5654, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!5658 = !DIGlobalVariableExpression(var: !5659, expr: !DIExpression())
!5659 = distinct !DIGlobalVariable(name: "nslots", scope: !5632, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!5660 = !DIGlobalVariableExpression(var: !5661, expr: !DIExpression())
!5661 = distinct !DIGlobalVariable(name: "slotvec0", scope: !5632, file: !241, line: 844, type: !5654, isLocal: true, isDefinition: true)
!5662 = distinct !DISubprogram(name: "setlocale_null_r", scope: !5663, file: !5663, line: 269, type: !5664, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !296, retainedNodes: !4)
!5663 = !DIFile(filename: "lib/setlocale_null.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5664 = !DISubroutineType(types: !5665)
!5665 = !{!53, !53, !6, !110}
!5666 = !DILocalVariable(name: "category", arg: 1, scope: !5662, file: !5663, line: 269, type: !53)
!5667 = !DILocation(line: 269, column: 23, scope: !5662)
!5668 = !DILocalVariable(name: "buf", arg: 2, scope: !5662, file: !5663, line: 269, type: !6)
!5669 = !DILocation(line: 269, column: 39, scope: !5662)
!5670 = !DILocalVariable(name: "bufsize", arg: 3, scope: !5662, file: !5663, line: 269, type: !110)
!5671 = !DILocation(line: 269, column: 51, scope: !5662)
!5672 = !DILocation(line: 274, column: 35, scope: !5662)
!5673 = !DILocation(line: 274, column: 45, scope: !5662)
!5674 = !DILocation(line: 274, column: 50, scope: !5662)
!5675 = !DILocation(line: 274, column: 10, scope: !5662)
!5676 = !DILocation(line: 274, column: 3, scope: !5662)
!5677 = !DILocalVariable(name: "category", arg: 1, scope: !5678, file: !5663, line: 269, type: !53)
!5678 = distinct !DISubprogram(name: "setlocale_null_r", scope: !5663, file: !5663, line: 269, type: !5664, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5679, retainedNodes: !4)
!5679 = distinct !DICompileUnit(language: DW_LANG_C99, file: !297, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!5680 = !DILocalVariable(name: "buf", arg: 2, scope: !5678, file: !5663, line: 269, type: !6)
!5681 = !DILocalVariable(name: "bufsize", arg: 3, scope: !5678, file: !5663, line: 269, type: !110)
!5682 = distinct !DISubprogram(name: "setlocale_null_unlocked", scope: !5663, file: !5663, line: 91, type: !5664, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !296, retainedNodes: !4)
!5683 = !DILocalVariable(name: "category", arg: 1, scope: !5682, file: !5663, line: 91, type: !53)
!5684 = !DILocation(line: 91, column: 30, scope: !5682)
!5685 = !DILocalVariable(name: "buf", arg: 2, scope: !5682, file: !5663, line: 91, type: !6)
!5686 = !DILocation(line: 91, column: 46, scope: !5682)
!5687 = !DILocalVariable(name: "bufsize", arg: 3, scope: !5682, file: !5663, line: 91, type: !110)
!5688 = !DILocation(line: 91, column: 58, scope: !5682)
!5689 = !DILocalVariable(name: "result", scope: !5682, file: !5663, line: 140, type: !49)
!5690 = !DILocation(line: 140, column: 15, scope: !5682)
!5691 = !DILocation(line: 140, column: 51, scope: !5682)
!5692 = !DILocation(line: 140, column: 24, scope: !5682)
!5693 = !DILocation(line: 142, column: 7, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5682, file: !5663, line: 142, column: 7)
!5695 = !DILocation(line: 142, column: 14, scope: !5694)
!5696 = !DILocation(line: 142, column: 7, scope: !5682)
!5697 = !DILocation(line: 145, column: 11, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5699, file: !5663, line: 145, column: 11)
!5699 = distinct !DILexicalBlock(scope: !5694, file: !5663, line: 143, column: 5)
!5700 = !DILocation(line: 145, column: 19, scope: !5698)
!5701 = !DILocation(line: 145, column: 11, scope: !5699)
!5702 = !DILocation(line: 149, column: 9, scope: !5698)
!5703 = !DILocation(line: 149, column: 16, scope: !5698)
!5704 = !DILocation(line: 150, column: 7, scope: !5699)
!5705 = !DILocalVariable(name: "length", scope: !5706, file: !5663, line: 154, type: !110)
!5706 = distinct !DILexicalBlock(scope: !5694, file: !5663, line: 153, column: 5)
!5707 = !DILocation(line: 154, column: 14, scope: !5706)
!5708 = !DILocation(line: 154, column: 31, scope: !5706)
!5709 = !DILocation(line: 154, column: 23, scope: !5706)
!5710 = !DILocation(line: 155, column: 11, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5706, file: !5663, line: 155, column: 11)
!5712 = !DILocation(line: 155, column: 20, scope: !5711)
!5713 = !DILocation(line: 155, column: 18, scope: !5711)
!5714 = !DILocation(line: 155, column: 11, scope: !5706)
!5715 = !DILocation(line: 157, column: 19, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5711, file: !5663, line: 156, column: 9)
!5717 = !DILocation(line: 157, column: 24, scope: !5716)
!5718 = !DILocation(line: 157, column: 32, scope: !5716)
!5719 = !DILocation(line: 157, column: 39, scope: !5716)
!5720 = !DILocation(line: 157, column: 11, scope: !5716)
!5721 = !DILocation(line: 158, column: 11, scope: !5716)
!5722 = !DILocation(line: 162, column: 15, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5724, file: !5663, line: 162, column: 15)
!5724 = distinct !DILexicalBlock(scope: !5711, file: !5663, line: 161, column: 9)
!5725 = !DILocation(line: 162, column: 23, scope: !5723)
!5726 = !DILocation(line: 162, column: 15, scope: !5724)
!5727 = !DILocation(line: 167, column: 23, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5723, file: !5663, line: 163, column: 13)
!5729 = !DILocation(line: 167, column: 28, scope: !5728)
!5730 = !DILocation(line: 167, column: 36, scope: !5728)
!5731 = !DILocation(line: 167, column: 44, scope: !5728)
!5732 = !DILocation(line: 167, column: 15, scope: !5728)
!5733 = !DILocation(line: 168, column: 15, scope: !5728)
!5734 = !DILocation(line: 168, column: 19, scope: !5728)
!5735 = !DILocation(line: 168, column: 27, scope: !5728)
!5736 = !DILocation(line: 168, column: 32, scope: !5728)
!5737 = !DILocation(line: 169, column: 13, scope: !5728)
!5738 = !DILocation(line: 170, column: 11, scope: !5724)
!5739 = !DILocation(line: 174, column: 1, scope: !5682)
!5740 = !DILocalVariable(name: "category", arg: 1, scope: !5741, file: !5663, line: 91, type: !53)
!5741 = distinct !DISubprogram(name: "setlocale_null_unlocked", scope: !5663, file: !5663, line: 91, type: !5664, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5742, retainedNodes: !4)
!5742 = distinct !DICompileUnit(language: DW_LANG_C99, file: !297, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!5743 = !DILocalVariable(name: "buf", arg: 2, scope: !5741, file: !5663, line: 91, type: !6)
!5744 = !DILocalVariable(name: "bufsize", arg: 3, scope: !5741, file: !5663, line: 91, type: !110)
!5745 = !DILocalVariable(name: "result", scope: !5741, file: !5663, line: 140, type: !49)
!5746 = distinct !DISubprogram(name: "setlocale_null_androidfix", scope: !5663, file: !5663, line: 60, type: !5747, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !296, retainedNodes: !4)
!5747 = !DISubroutineType(types: !5748)
!5748 = !{!49, !53}
!5749 = !DILocalVariable(name: "category", arg: 1, scope: !5746, file: !5663, line: 60, type: !53)
!5750 = !DILocation(line: 60, column: 32, scope: !5746)
!5751 = !DILocalVariable(name: "result", scope: !5746, file: !5663, line: 62, type: !49)
!5752 = !DILocation(line: 62, column: 15, scope: !5746)
!5753 = !DILocation(line: 62, column: 35, scope: !5746)
!5754 = !DILocation(line: 62, column: 24, scope: !5746)
!5755 = !DILocation(line: 87, column: 10, scope: !5746)
!5756 = !DILocation(line: 87, column: 3, scope: !5746)
!5757 = !DILocalVariable(name: "category", arg: 1, scope: !5758, file: !5663, line: 60, type: !53)
!5758 = distinct !DISubprogram(name: "setlocale_null_androidfix", scope: !5663, file: !5663, line: 60, type: !5747, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5759, retainedNodes: !4)
!5759 = distinct !DICompileUnit(language: DW_LANG_C99, file: !297, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!5760 = !DILocalVariable(name: "result", scope: !5758, file: !5663, line: 62, type: !49)
!5761 = distinct !DISubprogram(name: "version_etc_arn", scope: !5762, file: !5762, line: 61, type: !5763, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !299, retainedNodes: !4)
!5762 = !DIFile(filename: "lib/version-etc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5763 = !DISubroutineType(types: !5764)
!5764 = !{null, !5765, !49, !49, !49, !5814, !110}
!5765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5766, size: 64)
!5766 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5767, line: 7, baseType: !5768)
!5767 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!5768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5769, line: 49, size: 1728, elements: !5770)
!5769 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!5770 = !{!5771, !5772, !5773, !5774, !5775, !5776, !5777, !5778, !5779, !5780, !5781, !5782, !5783, !5786, !5788, !5789, !5790, !5791, !5792, !5794, !5798, !5801, !5803, !5806, !5809, !5810, !5811, !5812, !5813}
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5768, file: !5769, line: 51, baseType: !53, size: 32)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5768, file: !5769, line: 54, baseType: !6, size: 64, offset: 64)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5768, file: !5769, line: 55, baseType: !6, size: 64, offset: 128)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5768, file: !5769, line: 56, baseType: !6, size: 64, offset: 192)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5768, file: !5769, line: 57, baseType: !6, size: 64, offset: 256)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5768, file: !5769, line: 58, baseType: !6, size: 64, offset: 320)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5768, file: !5769, line: 59, baseType: !6, size: 64, offset: 384)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5768, file: !5769, line: 60, baseType: !6, size: 64, offset: 448)
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5768, file: !5769, line: 61, baseType: !6, size: 64, offset: 512)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5768, file: !5769, line: 64, baseType: !6, size: 64, offset: 576)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5768, file: !5769, line: 65, baseType: !6, size: 64, offset: 640)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5768, file: !5769, line: 66, baseType: !6, size: 64, offset: 704)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5768, file: !5769, line: 68, baseType: !5784, size: 64, offset: 768)
!5784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5785, size: 64)
!5785 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !5769, line: 36, flags: DIFlagFwdDecl)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5768, file: !5769, line: 70, baseType: !5787, size: 64, offset: 832)
!5787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5768, size: 64)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5768, file: !5769, line: 72, baseType: !53, size: 32, offset: 896)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5768, file: !5769, line: 73, baseType: !53, size: 32, offset: 928)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5768, file: !5769, line: 74, baseType: !1391, size: 64, offset: 960)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5768, file: !5769, line: 77, baseType: !188, size: 16, offset: 1024)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5768, file: !5769, line: 78, baseType: !5793, size: 8, offset: 1040)
!5793 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5768, file: !5769, line: 79, baseType: !5795, size: 8, offset: 1048)
!5795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 8, elements: !5796)
!5796 = !{!5797}
!5797 = !DISubrange(count: 1)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5768, file: !5769, line: 81, baseType: !5799, size: 64, offset: 1088)
!5799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5800, size: 64)
!5800 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !5769, line: 43, baseType: null)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5768, file: !5769, line: 89, baseType: !5802, size: 64, offset: 1152)
!5802 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !12, line: 153, baseType: !13)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5768, file: !5769, line: 91, baseType: !5804, size: 64, offset: 1216)
!5804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5805, size: 64)
!5805 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !5769, line: 37, flags: DIFlagFwdDecl)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5768, file: !5769, line: 92, baseType: !5807, size: 64, offset: 1280)
!5807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5808, size: 64)
!5808 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !5769, line: 38, flags: DIFlagFwdDecl)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5768, file: !5769, line: 93, baseType: !5787, size: 64, offset: 1344)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5768, file: !5769, line: 94, baseType: !8, size: 64, offset: 1408)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5768, file: !5769, line: 95, baseType: !110, size: 64, offset: 1472)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5768, file: !5769, line: 96, baseType: !53, size: 32, offset: 1536)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5768, file: !5769, line: 98, baseType: !105, size: 160, offset: 1568)
!5814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!5815 = !DILocalVariable(name: "stream", arg: 1, scope: !5761, file: !5762, line: 61, type: !5765)
!5816 = !DILocation(line: 61, column: 24, scope: !5761)
!5817 = !DILocalVariable(name: "command_name", arg: 2, scope: !5761, file: !5762, line: 62, type: !49)
!5818 = !DILocation(line: 62, column: 30, scope: !5761)
!5819 = !DILocalVariable(name: "package", arg: 3, scope: !5761, file: !5762, line: 62, type: !49)
!5820 = !DILocation(line: 62, column: 56, scope: !5761)
!5821 = !DILocalVariable(name: "version", arg: 4, scope: !5761, file: !5762, line: 63, type: !49)
!5822 = !DILocation(line: 63, column: 30, scope: !5761)
!5823 = !DILocalVariable(name: "authors", arg: 5, scope: !5761, file: !5762, line: 64, type: !5814)
!5824 = !DILocation(line: 64, column: 39, scope: !5761)
!5825 = !DILocalVariable(name: "n_authors", arg: 6, scope: !5761, file: !5762, line: 64, type: !110)
!5826 = !DILocation(line: 64, column: 55, scope: !5761)
!5827 = !DILocation(line: 66, column: 7, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5761, file: !5762, line: 66, column: 7)
!5829 = !DILocation(line: 66, column: 7, scope: !5761)
!5830 = !DILocation(line: 67, column: 14, scope: !5828)
!5831 = !DILocation(line: 67, column: 38, scope: !5828)
!5832 = !DILocation(line: 67, column: 52, scope: !5828)
!5833 = !DILocation(line: 67, column: 61, scope: !5828)
!5834 = !DILocation(line: 67, column: 5, scope: !5828)
!5835 = !DILocation(line: 69, column: 14, scope: !5828)
!5836 = !DILocation(line: 69, column: 33, scope: !5828)
!5837 = !DILocation(line: 69, column: 42, scope: !5828)
!5838 = !DILocation(line: 69, column: 5, scope: !5828)
!5839 = !DILocation(line: 83, column: 12, scope: !5761)
!5840 = !DILocation(line: 83, column: 43, scope: !5761)
!5841 = !DILocation(line: 83, column: 3, scope: !5761)
!5842 = !DILocation(line: 85, column: 3, scope: !5761)
!5843 = !DILocation(line: 88, column: 12, scope: !5761)
!5844 = !DILocation(line: 88, column: 20, scope: !5761)
!5845 = !DILocation(line: 88, column: 3, scope: !5761)
!5846 = !DILocation(line: 95, column: 3, scope: !5761)
!5847 = !DILocation(line: 97, column: 11, scope: !5761)
!5848 = !DILocation(line: 97, column: 3, scope: !5761)
!5849 = !DILocation(line: 102, column: 7, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5761, file: !5762, line: 98, column: 5)
!5851 = !DILocation(line: 105, column: 16, scope: !5850)
!5852 = !DILocation(line: 105, column: 24, scope: !5850)
!5853 = !DILocation(line: 105, column: 47, scope: !5850)
!5854 = !DILocation(line: 105, column: 7, scope: !5850)
!5855 = !DILocation(line: 106, column: 7, scope: !5850)
!5856 = !DILocation(line: 109, column: 16, scope: !5850)
!5857 = !DILocation(line: 109, column: 24, scope: !5850)
!5858 = !DILocation(line: 109, column: 54, scope: !5850)
!5859 = !DILocation(line: 109, column: 66, scope: !5850)
!5860 = !DILocation(line: 109, column: 7, scope: !5850)
!5861 = !DILocation(line: 110, column: 7, scope: !5850)
!5862 = !DILocation(line: 113, column: 16, scope: !5850)
!5863 = !DILocation(line: 113, column: 24, scope: !5850)
!5864 = !DILocation(line: 114, column: 16, scope: !5850)
!5865 = !DILocation(line: 114, column: 28, scope: !5850)
!5866 = !DILocation(line: 114, column: 40, scope: !5850)
!5867 = !DILocation(line: 113, column: 7, scope: !5850)
!5868 = !DILocation(line: 115, column: 7, scope: !5850)
!5869 = !DILocation(line: 120, column: 16, scope: !5850)
!5870 = !DILocation(line: 120, column: 24, scope: !5850)
!5871 = !DILocation(line: 121, column: 16, scope: !5850)
!5872 = !DILocation(line: 121, column: 28, scope: !5850)
!5873 = !DILocation(line: 121, column: 40, scope: !5850)
!5874 = !DILocation(line: 121, column: 52, scope: !5850)
!5875 = !DILocation(line: 120, column: 7, scope: !5850)
!5876 = !DILocation(line: 122, column: 7, scope: !5850)
!5877 = !DILocation(line: 127, column: 16, scope: !5850)
!5878 = !DILocation(line: 127, column: 24, scope: !5850)
!5879 = !DILocation(line: 128, column: 16, scope: !5850)
!5880 = !DILocation(line: 128, column: 28, scope: !5850)
!5881 = !DILocation(line: 128, column: 40, scope: !5850)
!5882 = !DILocation(line: 128, column: 52, scope: !5850)
!5883 = !DILocation(line: 128, column: 64, scope: !5850)
!5884 = !DILocation(line: 127, column: 7, scope: !5850)
!5885 = !DILocation(line: 129, column: 7, scope: !5850)
!5886 = !DILocation(line: 134, column: 16, scope: !5850)
!5887 = !DILocation(line: 134, column: 24, scope: !5850)
!5888 = !DILocation(line: 135, column: 16, scope: !5850)
!5889 = !DILocation(line: 135, column: 28, scope: !5850)
!5890 = !DILocation(line: 135, column: 40, scope: !5850)
!5891 = !DILocation(line: 135, column: 52, scope: !5850)
!5892 = !DILocation(line: 135, column: 64, scope: !5850)
!5893 = !DILocation(line: 136, column: 16, scope: !5850)
!5894 = !DILocation(line: 134, column: 7, scope: !5850)
!5895 = !DILocation(line: 137, column: 7, scope: !5850)
!5896 = !DILocation(line: 142, column: 16, scope: !5850)
!5897 = !DILocation(line: 142, column: 24, scope: !5850)
!5898 = !DILocation(line: 143, column: 16, scope: !5850)
!5899 = !DILocation(line: 143, column: 28, scope: !5850)
!5900 = !DILocation(line: 143, column: 40, scope: !5850)
!5901 = !DILocation(line: 143, column: 52, scope: !5850)
!5902 = !DILocation(line: 143, column: 64, scope: !5850)
!5903 = !DILocation(line: 144, column: 16, scope: !5850)
!5904 = !DILocation(line: 144, column: 28, scope: !5850)
!5905 = !DILocation(line: 142, column: 7, scope: !5850)
!5906 = !DILocation(line: 145, column: 7, scope: !5850)
!5907 = !DILocation(line: 150, column: 16, scope: !5850)
!5908 = !DILocation(line: 150, column: 24, scope: !5850)
!5909 = !DILocation(line: 152, column: 17, scope: !5850)
!5910 = !DILocation(line: 152, column: 29, scope: !5850)
!5911 = !DILocation(line: 152, column: 41, scope: !5850)
!5912 = !DILocation(line: 152, column: 53, scope: !5850)
!5913 = !DILocation(line: 152, column: 65, scope: !5850)
!5914 = !DILocation(line: 153, column: 17, scope: !5850)
!5915 = !DILocation(line: 153, column: 29, scope: !5850)
!5916 = !DILocation(line: 153, column: 41, scope: !5850)
!5917 = !DILocation(line: 150, column: 7, scope: !5850)
!5918 = !DILocation(line: 154, column: 7, scope: !5850)
!5919 = !DILocation(line: 159, column: 16, scope: !5850)
!5920 = !DILocation(line: 159, column: 24, scope: !5850)
!5921 = !DILocation(line: 161, column: 16, scope: !5850)
!5922 = !DILocation(line: 161, column: 28, scope: !5850)
!5923 = !DILocation(line: 161, column: 40, scope: !5850)
!5924 = !DILocation(line: 161, column: 52, scope: !5850)
!5925 = !DILocation(line: 161, column: 64, scope: !5850)
!5926 = !DILocation(line: 162, column: 16, scope: !5850)
!5927 = !DILocation(line: 162, column: 28, scope: !5850)
!5928 = !DILocation(line: 162, column: 40, scope: !5850)
!5929 = !DILocation(line: 162, column: 52, scope: !5850)
!5930 = !DILocation(line: 159, column: 7, scope: !5850)
!5931 = !DILocation(line: 163, column: 7, scope: !5850)
!5932 = !DILocation(line: 170, column: 16, scope: !5850)
!5933 = !DILocation(line: 170, column: 24, scope: !5850)
!5934 = !DILocation(line: 172, column: 17, scope: !5850)
!5935 = !DILocation(line: 172, column: 29, scope: !5850)
!5936 = !DILocation(line: 172, column: 41, scope: !5850)
!5937 = !DILocation(line: 172, column: 53, scope: !5850)
!5938 = !DILocation(line: 172, column: 65, scope: !5850)
!5939 = !DILocation(line: 173, column: 17, scope: !5850)
!5940 = !DILocation(line: 173, column: 29, scope: !5850)
!5941 = !DILocation(line: 173, column: 41, scope: !5850)
!5942 = !DILocation(line: 173, column: 53, scope: !5850)
!5943 = !DILocation(line: 170, column: 7, scope: !5850)
!5944 = !DILocation(line: 174, column: 7, scope: !5850)
!5945 = !DILocation(line: 176, column: 1, scope: !5761)
!5946 = !DILocalVariable(name: "stream", arg: 1, scope: !5947, file: !5762, line: 61, type: !5950)
!5947 = distinct !DISubprogram(name: "version_etc_arn", scope: !5762, file: !5762, line: 61, type: !5948, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5984, retainedNodes: !4)
!5948 = !DISubroutineType(types: !5949)
!5949 = !{null, !5950, !49, !49, !49, !5814, !110}
!5950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5951, size: 64)
!5951 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5767, line: 7, baseType: !5952)
!5952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5769, line: 49, size: 1728, elements: !5953)
!5953 = !{!5954, !5955, !5956, !5957, !5958, !5959, !5960, !5961, !5962, !5963, !5964, !5965, !5966, !5967, !5969, !5970, !5971, !5972, !5973, !5974, !5975, !5976, !5977, !5978, !5979, !5980, !5981, !5982, !5983}
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5952, file: !5769, line: 51, baseType: !53, size: 32)
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5952, file: !5769, line: 54, baseType: !6, size: 64, offset: 64)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5952, file: !5769, line: 55, baseType: !6, size: 64, offset: 128)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5952, file: !5769, line: 56, baseType: !6, size: 64, offset: 192)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5952, file: !5769, line: 57, baseType: !6, size: 64, offset: 256)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5952, file: !5769, line: 58, baseType: !6, size: 64, offset: 320)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5952, file: !5769, line: 59, baseType: !6, size: 64, offset: 384)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5952, file: !5769, line: 60, baseType: !6, size: 64, offset: 448)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5952, file: !5769, line: 61, baseType: !6, size: 64, offset: 512)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5952, file: !5769, line: 64, baseType: !6, size: 64, offset: 576)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5952, file: !5769, line: 65, baseType: !6, size: 64, offset: 640)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5952, file: !5769, line: 66, baseType: !6, size: 64, offset: 704)
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5952, file: !5769, line: 68, baseType: !5784, size: 64, offset: 768)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5952, file: !5769, line: 70, baseType: !5968, size: 64, offset: 832)
!5968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5952, size: 64)
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5952, file: !5769, line: 72, baseType: !53, size: 32, offset: 896)
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5952, file: !5769, line: 73, baseType: !53, size: 32, offset: 928)
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5952, file: !5769, line: 74, baseType: !1391, size: 64, offset: 960)
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5952, file: !5769, line: 77, baseType: !188, size: 16, offset: 1024)
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5952, file: !5769, line: 78, baseType: !5793, size: 8, offset: 1040)
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5952, file: !5769, line: 79, baseType: !5795, size: 8, offset: 1048)
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5952, file: !5769, line: 81, baseType: !5799, size: 64, offset: 1088)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5952, file: !5769, line: 89, baseType: !5802, size: 64, offset: 1152)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5952, file: !5769, line: 91, baseType: !5804, size: 64, offset: 1216)
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5952, file: !5769, line: 92, baseType: !5807, size: 64, offset: 1280)
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5952, file: !5769, line: 93, baseType: !5968, size: 64, offset: 1344)
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5952, file: !5769, line: 94, baseType: !8, size: 64, offset: 1408)
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5952, file: !5769, line: 95, baseType: !110, size: 64, offset: 1472)
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5952, file: !5769, line: 96, baseType: !53, size: 32, offset: 1536)
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5952, file: !5769, line: 98, baseType: !105, size: 160, offset: 1568)
!5984 = distinct !DICompileUnit(language: DW_LANG_C99, file: !300, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!5985 = !DILocalVariable(name: "command_name", arg: 2, scope: !5947, file: !5762, line: 62, type: !49)
!5986 = !DILocalVariable(name: "package", arg: 3, scope: !5947, file: !5762, line: 62, type: !49)
!5987 = !DILocalVariable(name: "version", arg: 4, scope: !5947, file: !5762, line: 63, type: !49)
!5988 = !DILocalVariable(name: "authors", arg: 5, scope: !5947, file: !5762, line: 64, type: !5814)
!5989 = !DILocalVariable(name: "n_authors", arg: 6, scope: !5947, file: !5762, line: 64, type: !110)
!5990 = distinct !DISubprogram(name: "version_etc_va", scope: !5762, file: !5762, line: 199, type: !5991, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !299, retainedNodes: !4)
!5991 = !DISubroutineType(types: !5992)
!5992 = !{null, !5765, !49, !49, !49, !5993}
!5993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5994, size: 64)
!5994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !300, line: 192, size: 192, elements: !5995)
!5995 = !{!5996, !5997, !5998, !5999}
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !5994, file: !300, line: 192, baseType: !180, size: 32)
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !5994, file: !300, line: 192, baseType: !180, size: 32, offset: 32)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !5994, file: !300, line: 192, baseType: !8, size: 64, offset: 64)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !5994, file: !300, line: 192, baseType: !8, size: 64, offset: 128)
!6000 = !DILocalVariable(name: "stream", arg: 1, scope: !5990, file: !5762, line: 199, type: !5765)
!6001 = !DILocation(line: 199, column: 23, scope: !5990)
!6002 = !DILocalVariable(name: "command_name", arg: 2, scope: !5990, file: !5762, line: 200, type: !49)
!6003 = !DILocation(line: 200, column: 29, scope: !5990)
!6004 = !DILocalVariable(name: "package", arg: 3, scope: !5990, file: !5762, line: 200, type: !49)
!6005 = !DILocation(line: 200, column: 55, scope: !5990)
!6006 = !DILocalVariable(name: "version", arg: 4, scope: !5990, file: !5762, line: 201, type: !49)
!6007 = !DILocation(line: 201, column: 29, scope: !5990)
!6008 = !DILocalVariable(name: "authors", arg: 5, scope: !5990, file: !5762, line: 201, type: !5993)
!6009 = !DILocation(line: 201, column: 46, scope: !5990)
!6010 = !DILocalVariable(name: "n_authors", scope: !5990, file: !5762, line: 203, type: !110)
!6011 = !DILocation(line: 203, column: 10, scope: !5990)
!6012 = !DILocalVariable(name: "authtab", scope: !5990, file: !5762, line: 204, type: !6013)
!6013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !49, size: 640, elements: !250)
!6014 = !DILocation(line: 204, column: 15, scope: !5990)
!6015 = !DILocation(line: 206, column: 18, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !5990, file: !5762, line: 206, column: 3)
!6017 = !DILocation(line: 206, column: 8, scope: !6016)
!6018 = !DILocation(line: 207, column: 8, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !6016, file: !5762, line: 206, column: 3)
!6020 = !DILocation(line: 207, column: 18, scope: !6019)
!6021 = !DILocation(line: 208, column: 10, scope: !6019)
!6022 = !DILocation(line: 208, column: 35, scope: !6019)
!6023 = !DILocation(line: 208, column: 22, scope: !6019)
!6024 = !DILocation(line: 208, column: 14, scope: !6019)
!6025 = !DILocation(line: 208, column: 33, scope: !6019)
!6026 = !DILocation(line: 208, column: 67, scope: !6019)
!6027 = !DILocation(line: 0, scope: !6019)
!6028 = !DILocation(line: 206, column: 3, scope: !6016)
!6029 = !DILocation(line: 209, column: 17, scope: !6019)
!6030 = !DILocation(line: 206, column: 3, scope: !6019)
!6031 = distinct !{!6031, !6028, !6032}
!6032 = !DILocation(line: 210, column: 5, scope: !6016)
!6033 = !DILocation(line: 211, column: 20, scope: !5990)
!6034 = !DILocation(line: 211, column: 28, scope: !5990)
!6035 = !DILocation(line: 211, column: 42, scope: !5990)
!6036 = !DILocation(line: 211, column: 51, scope: !5990)
!6037 = !DILocation(line: 212, column: 20, scope: !5990)
!6038 = !DILocation(line: 212, column: 29, scope: !5990)
!6039 = !DILocation(line: 211, column: 3, scope: !5990)
!6040 = !DILocation(line: 213, column: 1, scope: !5990)
!6041 = !DILocalVariable(name: "stream", arg: 1, scope: !6042, file: !5762, line: 199, type: !6045)
!6042 = distinct !DISubprogram(name: "version_etc_va", scope: !5762, file: !5762, line: 199, type: !6043, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6086, retainedNodes: !4)
!6043 = !DISubroutineType(types: !6044)
!6044 = !{null, !6045, !49, !49, !49, !6079}
!6045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6046, size: 64)
!6046 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5767, line: 7, baseType: !6047)
!6047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5769, line: 49, size: 1728, elements: !6048)
!6048 = !{!6049, !6050, !6051, !6052, !6053, !6054, !6055, !6056, !6057, !6058, !6059, !6060, !6061, !6062, !6064, !6065, !6066, !6067, !6068, !6069, !6070, !6071, !6072, !6073, !6074, !6075, !6076, !6077, !6078}
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6047, file: !5769, line: 51, baseType: !53, size: 32)
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6047, file: !5769, line: 54, baseType: !6, size: 64, offset: 64)
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6047, file: !5769, line: 55, baseType: !6, size: 64, offset: 128)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6047, file: !5769, line: 56, baseType: !6, size: 64, offset: 192)
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6047, file: !5769, line: 57, baseType: !6, size: 64, offset: 256)
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6047, file: !5769, line: 58, baseType: !6, size: 64, offset: 320)
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6047, file: !5769, line: 59, baseType: !6, size: 64, offset: 384)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6047, file: !5769, line: 60, baseType: !6, size: 64, offset: 448)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6047, file: !5769, line: 61, baseType: !6, size: 64, offset: 512)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6047, file: !5769, line: 64, baseType: !6, size: 64, offset: 576)
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6047, file: !5769, line: 65, baseType: !6, size: 64, offset: 640)
!6060 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6047, file: !5769, line: 66, baseType: !6, size: 64, offset: 704)
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6047, file: !5769, line: 68, baseType: !5784, size: 64, offset: 768)
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6047, file: !5769, line: 70, baseType: !6063, size: 64, offset: 832)
!6063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6047, size: 64)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6047, file: !5769, line: 72, baseType: !53, size: 32, offset: 896)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6047, file: !5769, line: 73, baseType: !53, size: 32, offset: 928)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6047, file: !5769, line: 74, baseType: !1391, size: 64, offset: 960)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6047, file: !5769, line: 77, baseType: !188, size: 16, offset: 1024)
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6047, file: !5769, line: 78, baseType: !5793, size: 8, offset: 1040)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6047, file: !5769, line: 79, baseType: !5795, size: 8, offset: 1048)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6047, file: !5769, line: 81, baseType: !5799, size: 64, offset: 1088)
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6047, file: !5769, line: 89, baseType: !5802, size: 64, offset: 1152)
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !6047, file: !5769, line: 91, baseType: !5804, size: 64, offset: 1216)
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !6047, file: !5769, line: 92, baseType: !5807, size: 64, offset: 1280)
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !6047, file: !5769, line: 93, baseType: !6063, size: 64, offset: 1344)
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !6047, file: !5769, line: 94, baseType: !8, size: 64, offset: 1408)
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6047, file: !5769, line: 95, baseType: !110, size: 64, offset: 1472)
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6047, file: !5769, line: 96, baseType: !53, size: 32, offset: 1536)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6047, file: !5769, line: 98, baseType: !105, size: 160, offset: 1568)
!6079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6080, size: 64)
!6080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !300, line: 192, size: 192, elements: !6081)
!6081 = !{!6082, !6083, !6084, !6085}
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !6080, file: !300, line: 192, baseType: !180, size: 32)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !6080, file: !300, line: 192, baseType: !180, size: 32, offset: 32)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !6080, file: !300, line: 192, baseType: !8, size: 64, offset: 64)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !6080, file: !300, line: 192, baseType: !8, size: 64, offset: 128)
!6086 = distinct !DICompileUnit(language: DW_LANG_C99, file: !300, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!6087 = !DILocalVariable(name: "command_name", arg: 2, scope: !6042, file: !5762, line: 200, type: !49)
!6088 = !DILocalVariable(name: "package", arg: 3, scope: !6042, file: !5762, line: 200, type: !49)
!6089 = !DILocalVariable(name: "version", arg: 4, scope: !6042, file: !5762, line: 201, type: !49)
!6090 = !DILocalVariable(name: "authors", arg: 5, scope: !6042, file: !5762, line: 201, type: !6079)
!6091 = !DILocalVariable(name: "n_authors", scope: !6042, file: !5762, line: 203, type: !110)
!6092 = !DILocalVariable(name: "authtab", scope: !6042, file: !5762, line: 204, type: !6013)
!6093 = distinct !DISubprogram(name: "version_etc", scope: !5762, file: !5762, line: 230, type: !6094, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !299, retainedNodes: !4)
!6094 = !DISubroutineType(types: !6095)
!6095 = !{null, !5765, !49, !49, !49, null}
!6096 = !DILocalVariable(name: "stream", arg: 1, scope: !6093, file: !5762, line: 230, type: !5765)
!6097 = !DILocation(line: 230, column: 20, scope: !6093)
!6098 = !DILocalVariable(name: "command_name", arg: 2, scope: !6093, file: !5762, line: 231, type: !49)
!6099 = !DILocation(line: 231, column: 26, scope: !6093)
!6100 = !DILocalVariable(name: "package", arg: 3, scope: !6093, file: !5762, line: 231, type: !49)
!6101 = !DILocation(line: 231, column: 52, scope: !6093)
!6102 = !DILocalVariable(name: "version", arg: 4, scope: !6093, file: !5762, line: 232, type: !49)
!6103 = !DILocation(line: 232, column: 26, scope: !6093)
!6104 = !DILocalVariable(name: "authors", scope: !6093, file: !5762, line: 234, type: !6105)
!6105 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !6106, line: 52, baseType: !6107)
!6106 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!6107 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !6108, line: 32, baseType: !6109)
!6108 = !DIFile(filename: "/usr/lib/llvm-9/lib/clang/9.0.1/include/stdarg.h", directory: "")
!6109 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !300, line: 234, baseType: !6110)
!6110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5994, size: 192, elements: !5796)
!6111 = !DILocation(line: 234, column: 11, scope: !6093)
!6112 = !DILocation(line: 236, column: 3, scope: !6093)
!6113 = !DILocation(line: 237, column: 19, scope: !6093)
!6114 = !DILocation(line: 237, column: 27, scope: !6093)
!6115 = !DILocation(line: 237, column: 41, scope: !6093)
!6116 = !DILocation(line: 237, column: 50, scope: !6093)
!6117 = !DILocation(line: 237, column: 59, scope: !6093)
!6118 = !DILocation(line: 237, column: 3, scope: !6093)
!6119 = !DILocation(line: 238, column: 3, scope: !6093)
!6120 = !DILocation(line: 239, column: 1, scope: !6093)
!6121 = !DILocalVariable(name: "stream", arg: 1, scope: !6122, file: !5762, line: 230, type: !6125)
!6122 = distinct !DISubprogram(name: "version_etc", scope: !5762, file: !5762, line: 230, type: !6123, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6159, retainedNodes: !4)
!6123 = !DISubroutineType(types: !6124)
!6124 = !{null, !6125, !49, !49, !49, null}
!6125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6126, size: 64)
!6126 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5767, line: 7, baseType: !6127)
!6127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5769, line: 49, size: 1728, elements: !6128)
!6128 = !{!6129, !6130, !6131, !6132, !6133, !6134, !6135, !6136, !6137, !6138, !6139, !6140, !6141, !6142, !6144, !6145, !6146, !6147, !6148, !6149, !6150, !6151, !6152, !6153, !6154, !6155, !6156, !6157, !6158}
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6127, file: !5769, line: 51, baseType: !53, size: 32)
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6127, file: !5769, line: 54, baseType: !6, size: 64, offset: 64)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6127, file: !5769, line: 55, baseType: !6, size: 64, offset: 128)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6127, file: !5769, line: 56, baseType: !6, size: 64, offset: 192)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6127, file: !5769, line: 57, baseType: !6, size: 64, offset: 256)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6127, file: !5769, line: 58, baseType: !6, size: 64, offset: 320)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6127, file: !5769, line: 59, baseType: !6, size: 64, offset: 384)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6127, file: !5769, line: 60, baseType: !6, size: 64, offset: 448)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6127, file: !5769, line: 61, baseType: !6, size: 64, offset: 512)
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6127, file: !5769, line: 64, baseType: !6, size: 64, offset: 576)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6127, file: !5769, line: 65, baseType: !6, size: 64, offset: 640)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6127, file: !5769, line: 66, baseType: !6, size: 64, offset: 704)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6127, file: !5769, line: 68, baseType: !5784, size: 64, offset: 768)
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6127, file: !5769, line: 70, baseType: !6143, size: 64, offset: 832)
!6143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6127, size: 64)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6127, file: !5769, line: 72, baseType: !53, size: 32, offset: 896)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6127, file: !5769, line: 73, baseType: !53, size: 32, offset: 928)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6127, file: !5769, line: 74, baseType: !1391, size: 64, offset: 960)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6127, file: !5769, line: 77, baseType: !188, size: 16, offset: 1024)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6127, file: !5769, line: 78, baseType: !5793, size: 8, offset: 1040)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6127, file: !5769, line: 79, baseType: !5795, size: 8, offset: 1048)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6127, file: !5769, line: 81, baseType: !5799, size: 64, offset: 1088)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6127, file: !5769, line: 89, baseType: !5802, size: 64, offset: 1152)
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !6127, file: !5769, line: 91, baseType: !5804, size: 64, offset: 1216)
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !6127, file: !5769, line: 92, baseType: !5807, size: 64, offset: 1280)
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !6127, file: !5769, line: 93, baseType: !6143, size: 64, offset: 1344)
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !6127, file: !5769, line: 94, baseType: !8, size: 64, offset: 1408)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6127, file: !5769, line: 95, baseType: !110, size: 64, offset: 1472)
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6127, file: !5769, line: 96, baseType: !53, size: 32, offset: 1536)
!6158 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6127, file: !5769, line: 98, baseType: !105, size: 160, offset: 1568)
!6159 = distinct !DICompileUnit(language: DW_LANG_C99, file: !300, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!6160 = !DILocalVariable(name: "command_name", arg: 2, scope: !6122, file: !5762, line: 231, type: !49)
!6161 = !DILocalVariable(name: "package", arg: 3, scope: !6122, file: !5762, line: 231, type: !49)
!6162 = !DILocalVariable(name: "version", arg: 4, scope: !6122, file: !5762, line: 232, type: !49)
!6163 = !DILocalVariable(name: "authors", scope: !6122, file: !5762, line: 234, type: !6164)
!6164 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !6106, line: 52, baseType: !6165)
!6165 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !6108, line: 32, baseType: !6166)
!6166 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !300, line: 234, baseType: !6167)
!6167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6168, size: 192, elements: !5796)
!6168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !300, line: 192, size: 192, elements: !6169)
!6169 = !{!6170, !6171, !6172, !6173}
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !6168, file: !300, line: 192, baseType: !180, size: 32)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !6168, file: !300, line: 192, baseType: !180, size: 32, offset: 32)
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !6168, file: !300, line: 192, baseType: !8, size: 64, offset: 64)
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !6168, file: !300, line: 192, baseType: !8, size: 64, offset: 128)
!6174 = distinct !DISubprogram(name: "xmalloc", scope: !6175, file: !6175, line: 39, type: !6176, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !301, retainedNodes: !4)
!6175 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!6176 = !DISubroutineType(types: !6177)
!6177 = !{!8, !110}
!6178 = !DILocalVariable(name: "n", arg: 1, scope: !6174, file: !6175, line: 39, type: !110)
!6179 = !DILocation(line: 39, column: 17, scope: !6174)
!6180 = !DILocalVariable(name: "p", scope: !6174, file: !6175, line: 41, type: !8)
!6181 = !DILocation(line: 41, column: 9, scope: !6174)
!6182 = !DILocation(line: 41, column: 21, scope: !6174)
!6183 = !DILocation(line: 41, column: 13, scope: !6174)
!6184 = !DILocation(line: 42, column: 8, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6174, file: !6175, line: 42, column: 7)
!6186 = !DILocation(line: 42, column: 10, scope: !6185)
!6187 = !DILocation(line: 42, column: 13, scope: !6185)
!6188 = !DILocation(line: 42, column: 15, scope: !6185)
!6189 = !DILocation(line: 42, column: 7, scope: !6174)
!6190 = !DILocation(line: 43, column: 5, scope: !6185)
!6191 = !DILocation(line: 44, column: 10, scope: !6174)
!6192 = !DILocation(line: 44, column: 3, scope: !6174)
!6193 = !DILocalVariable(name: "n", arg: 1, scope: !6194, file: !6175, line: 39, type: !110)
!6194 = distinct !DISubprogram(name: "xmalloc", scope: !6175, file: !6175, line: 39, type: !6176, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6195, retainedNodes: !4)
!6195 = distinct !DICompileUnit(language: DW_LANG_C99, file: !302, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !303, nameTableKind: None)
!6196 = !DILocalVariable(name: "p", scope: !6194, file: !6175, line: 41, type: !8)
!6197 = distinct !DISubprogram(name: "xrealloc", scope: !6175, file: !6175, line: 51, type: !6198, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !301, retainedNodes: !4)
!6198 = !DISubroutineType(types: !6199)
!6199 = !{!8, !8, !110}
!6200 = !DILocalVariable(name: "p", arg: 1, scope: !6197, file: !6175, line: 51, type: !8)
!6201 = !DILocation(line: 51, column: 17, scope: !6197)
!6202 = !DILocalVariable(name: "n", arg: 2, scope: !6197, file: !6175, line: 51, type: !110)
!6203 = !DILocation(line: 51, column: 27, scope: !6197)
!6204 = !DILocation(line: 53, column: 8, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6197, file: !6175, line: 53, column: 7)
!6206 = !DILocation(line: 53, column: 10, scope: !6205)
!6207 = !DILocation(line: 53, column: 13, scope: !6205)
!6208 = !DILocation(line: 53, column: 7, scope: !6197)
!6209 = !DILocation(line: 57, column: 13, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6205, file: !6175, line: 54, column: 5)
!6211 = !DILocation(line: 57, column: 7, scope: !6210)
!6212 = !DILocation(line: 58, column: 7, scope: !6210)
!6213 = !DILocation(line: 61, column: 16, scope: !6197)
!6214 = !DILocation(line: 61, column: 19, scope: !6197)
!6215 = !DILocation(line: 61, column: 7, scope: !6197)
!6216 = !DILocation(line: 61, column: 5, scope: !6197)
!6217 = !DILocation(line: 62, column: 8, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6197, file: !6175, line: 62, column: 7)
!6219 = !DILocation(line: 62, column: 10, scope: !6218)
!6220 = !DILocation(line: 62, column: 13, scope: !6218)
!6221 = !DILocation(line: 62, column: 7, scope: !6197)
!6222 = !DILocation(line: 63, column: 5, scope: !6218)
!6223 = !DILocation(line: 64, column: 10, scope: !6197)
!6224 = !DILocation(line: 64, column: 3, scope: !6197)
!6225 = !DILocation(line: 65, column: 1, scope: !6197)
!6226 = !DILocalVariable(name: "p", arg: 1, scope: !6227, file: !6175, line: 51, type: !8)
!6227 = distinct !DISubprogram(name: "xrealloc", scope: !6175, file: !6175, line: 51, type: !6198, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6228, retainedNodes: !4)
!6228 = distinct !DICompileUnit(language: DW_LANG_C99, file: !302, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !303, nameTableKind: None)
!6229 = !DILocalVariable(name: "n", arg: 2, scope: !6227, file: !6175, line: 51, type: !110)
!6230 = distinct !DISubprogram(name: "x2nrealloc", scope: !6231, file: !6231, line: 174, type: !6232, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !301, retainedNodes: !4)
!6231 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!6232 = !DISubroutineType(types: !6233)
!6233 = !{!8, !8, !6234, !110}
!6234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64)
!6235 = !DILocalVariable(name: "p", arg: 1, scope: !6230, file: !6231, line: 174, type: !8)
!6236 = !DILocation(line: 174, column: 19, scope: !6230)
!6237 = !DILocalVariable(name: "pn", arg: 2, scope: !6230, file: !6231, line: 174, type: !6234)
!6238 = !DILocation(line: 174, column: 30, scope: !6230)
!6239 = !DILocalVariable(name: "s", arg: 3, scope: !6230, file: !6231, line: 174, type: !110)
!6240 = !DILocation(line: 174, column: 41, scope: !6230)
!6241 = !DILocalVariable(name: "n", scope: !6230, file: !6231, line: 176, type: !110)
!6242 = !DILocation(line: 176, column: 10, scope: !6230)
!6243 = !DILocation(line: 176, column: 15, scope: !6230)
!6244 = !DILocation(line: 176, column: 14, scope: !6230)
!6245 = !DILocation(line: 178, column: 9, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6230, file: !6231, line: 178, column: 7)
!6247 = !DILocation(line: 178, column: 7, scope: !6230)
!6248 = !DILocation(line: 180, column: 13, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6250, file: !6231, line: 180, column: 11)
!6250 = distinct !DILexicalBlock(scope: !6246, file: !6231, line: 179, column: 5)
!6251 = !DILocation(line: 180, column: 11, scope: !6250)
!6252 = !DILocation(line: 188, column: 32, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6249, file: !6231, line: 181, column: 9)
!6254 = !DILocation(line: 188, column: 30, scope: !6253)
!6255 = !DILocation(line: 188, column: 13, scope: !6253)
!6256 = !DILocation(line: 189, column: 17, scope: !6253)
!6257 = !DILocation(line: 189, column: 16, scope: !6253)
!6258 = !DILocation(line: 189, column: 13, scope: !6253)
!6259 = !DILocation(line: 190, column: 9, scope: !6253)
!6260 = !DILocation(line: 191, column: 11, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6250, file: !6231, line: 191, column: 11)
!6262 = !DILocation(line: 191, column: 11, scope: !6250)
!6263 = !DILocation(line: 192, column: 9, scope: !6261)
!6264 = !DILocation(line: 193, column: 5, scope: !6250)
!6265 = !DILocation(line: 200, column: 71, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6267, file: !6231, line: 200, column: 11)
!6267 = distinct !DILexicalBlock(scope: !6246, file: !6231, line: 195, column: 5)
!6268 = !DILocation(line: 200, column: 69, scope: !6266)
!6269 = !DILocation(line: 201, column: 14, scope: !6266)
!6270 = !DILocation(line: 201, column: 11, scope: !6266)
!6271 = !DILocation(line: 200, column: 11, scope: !6267)
!6272 = !DILocation(line: 202, column: 9, scope: !6266)
!6273 = !DILocation(line: 203, column: 12, scope: !6267)
!6274 = !DILocation(line: 203, column: 14, scope: !6267)
!6275 = !DILocation(line: 203, column: 18, scope: !6267)
!6276 = !DILocation(line: 203, column: 9, scope: !6267)
!6277 = !DILocation(line: 206, column: 9, scope: !6230)
!6278 = !DILocation(line: 206, column: 4, scope: !6230)
!6279 = !DILocation(line: 206, column: 7, scope: !6230)
!6280 = !DILocation(line: 207, column: 20, scope: !6230)
!6281 = !DILocation(line: 207, column: 23, scope: !6230)
!6282 = !DILocation(line: 207, column: 27, scope: !6230)
!6283 = !DILocation(line: 207, column: 25, scope: !6230)
!6284 = !DILocation(line: 207, column: 10, scope: !6230)
!6285 = !DILocation(line: 207, column: 3, scope: !6230)
!6286 = !DILocalVariable(name: "p", arg: 1, scope: !6287, file: !6231, line: 174, type: !8)
!6287 = distinct !DISubprogram(name: "x2nrealloc", scope: !6231, file: !6231, line: 174, type: !6232, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6288, retainedNodes: !4)
!6288 = distinct !DICompileUnit(language: DW_LANG_C99, file: !302, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !303, nameTableKind: None)
!6289 = !DILocalVariable(name: "pn", arg: 2, scope: !6287, file: !6231, line: 174, type: !6234)
!6290 = !DILocalVariable(name: "s", arg: 3, scope: !6287, file: !6231, line: 174, type: !110)
!6291 = !DILocalVariable(name: "n", scope: !6287, file: !6231, line: 176, type: !110)
!6292 = distinct !DISubprogram(name: "xcharalloc", scope: !6231, file: !6231, line: 216, type: !6293, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !301, retainedNodes: !4)
!6293 = !DISubroutineType(types: !6294)
!6294 = !{!6, !110}
!6295 = !DILocalVariable(name: "n", arg: 1, scope: !6292, file: !6231, line: 216, type: !110)
!6296 = !DILocation(line: 216, column: 20, scope: !6292)
!6297 = !DILocation(line: 218, column: 10, scope: !6292)
!6298 = !DILocation(line: 218, column: 3, scope: !6292)
!6299 = !DILocalVariable(name: "n", arg: 1, scope: !6300, file: !6231, line: 216, type: !110)
!6300 = distinct !DISubprogram(name: "xcharalloc", scope: !6231, file: !6231, line: 216, type: !6293, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6301, retainedNodes: !4)
!6301 = distinct !DICompileUnit(language: DW_LANG_C99, file: !302, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !303, nameTableKind: None)
!6302 = distinct !DISubprogram(name: "xalloc_die", scope: !6303, file: !6303, line: 32, type: !1357, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !304, retainedNodes: !4)
!6303 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!6304 = !DILocation(line: 34, column: 10, scope: !6302)
!6305 = !DILocation(line: 34, column: 33, scope: !6302)
!6306 = !DILocation(line: 34, column: 3, scope: !6302)
!6307 = !DILocation(line: 40, column: 3, scope: !6302)
!6308 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !6309, file: !6309, line: 86, type: !6310, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !306, retainedNodes: !4)
!6309 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!6310 = !DISubroutineType(types: !6311)
!6311 = !{!110, !6312, !49, !110, !6313}
!6312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4835, size: 64)
!6313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6314, size: 64)
!6314 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !4809, line: 6, baseType: !6315)
!6315 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !4811, line: 21, baseType: !6316)
!6316 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4811, line: 13, size: 64, elements: !6317)
!6317 = !{!6318, !6319}
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !6316, file: !4811, line: 15, baseType: !53, size: 32)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !6316, file: !4811, line: 20, baseType: !6320, size: 32, offset: 32)
!6320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6316, file: !4811, line: 16, size: 32, elements: !6321)
!6321 = !{!6322, !6323}
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !6320, file: !4811, line: 18, baseType: !180, size: 32)
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !6320, file: !4811, line: 19, baseType: !82, size: 32)
!6324 = !DILocalVariable(name: "pwc", arg: 1, scope: !6308, file: !6309, line: 86, type: !6312)
!6325 = !DILocation(line: 86, column: 23, scope: !6308)
!6326 = !DILocalVariable(name: "s", arg: 2, scope: !6308, file: !6309, line: 86, type: !49)
!6327 = !DILocation(line: 86, column: 40, scope: !6308)
!6328 = !DILocalVariable(name: "n", arg: 3, scope: !6308, file: !6309, line: 86, type: !110)
!6329 = !DILocation(line: 86, column: 50, scope: !6308)
!6330 = !DILocalVariable(name: "ps", arg: 4, scope: !6308, file: !6309, line: 86, type: !6313)
!6331 = !DILocation(line: 86, column: 64, scope: !6308)
!6332 = !DILocalVariable(name: "ret", scope: !6308, file: !6309, line: 88, type: !110)
!6333 = !DILocation(line: 88, column: 10, scope: !6308)
!6334 = !DILocalVariable(name: "wc", scope: !6308, file: !6309, line: 89, type: !4835)
!6335 = !DILocation(line: 89, column: 11, scope: !6308)
!6336 = !DILocation(line: 105, column: 9, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6308, file: !6309, line: 105, column: 7)
!6338 = !DILocation(line: 105, column: 7, scope: !6308)
!6339 = !DILocation(line: 106, column: 9, scope: !6337)
!6340 = !DILocation(line: 106, column: 5, scope: !6337)
!6341 = !DILocation(line: 145, column: 18, scope: !6308)
!6342 = !DILocation(line: 145, column: 23, scope: !6308)
!6343 = !DILocation(line: 145, column: 26, scope: !6308)
!6344 = !DILocation(line: 145, column: 29, scope: !6308)
!6345 = !DILocation(line: 145, column: 9, scope: !6308)
!6346 = !DILocation(line: 145, column: 7, scope: !6308)
!6347 = !DILocation(line: 154, column: 22, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6308, file: !6309, line: 154, column: 7)
!6349 = !DILocation(line: 154, column: 19, scope: !6348)
!6350 = !DILocation(line: 154, column: 26, scope: !6348)
!6351 = !DILocation(line: 154, column: 29, scope: !6348)
!6352 = !DILocation(line: 154, column: 31, scope: !6348)
!6353 = !DILocation(line: 154, column: 36, scope: !6348)
!6354 = !DILocation(line: 154, column: 41, scope: !6348)
!6355 = !DILocation(line: 154, column: 7, scope: !6308)
!6356 = !DILocalVariable(name: "uc", scope: !6357, file: !6309, line: 156, type: !317)
!6357 = distinct !DILexicalBlock(scope: !6348, file: !6309, line: 155, column: 5)
!6358 = !DILocation(line: 156, column: 21, scope: !6357)
!6359 = !DILocation(line: 156, column: 27, scope: !6357)
!6360 = !DILocation(line: 156, column: 26, scope: !6357)
!6361 = !DILocation(line: 157, column: 14, scope: !6357)
!6362 = !DILocation(line: 157, column: 8, scope: !6357)
!6363 = !DILocation(line: 157, column: 12, scope: !6357)
!6364 = !DILocation(line: 158, column: 7, scope: !6357)
!6365 = !DILocation(line: 162, column: 10, scope: !6308)
!6366 = !DILocation(line: 162, column: 3, scope: !6308)
!6367 = !DILocation(line: 163, column: 1, scope: !6308)
!6368 = !DILocalVariable(name: "pwc", arg: 1, scope: !6369, file: !6309, line: 86, type: !6312)
!6369 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !6309, file: !6309, line: 86, type: !6370, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6383, retainedNodes: !4)
!6370 = !DISubroutineType(types: !6371)
!6371 = !{!110, !6312, !49, !110, !6372}
!6372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6373, size: 64)
!6373 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !4809, line: 6, baseType: !6374)
!6374 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !4811, line: 21, baseType: !6375)
!6375 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4811, line: 13, size: 64, elements: !6376)
!6376 = !{!6377, !6378}
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !6375, file: !4811, line: 15, baseType: !53, size: 32)
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !6375, file: !4811, line: 20, baseType: !6379, size: 32, offset: 32)
!6379 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6375, file: !4811, line: 16, size: 32, elements: !6380)
!6380 = !{!6381, !6382}
!6381 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !6379, file: !4811, line: 18, baseType: !180, size: 32)
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !6379, file: !4811, line: 19, baseType: !82, size: 32)
!6383 = distinct !DICompileUnit(language: DW_LANG_C99, file: !307, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !308, nameTableKind: None)
!6384 = !DILocalVariable(name: "s", arg: 2, scope: !6369, file: !6309, line: 86, type: !49)
!6385 = !DILocalVariable(name: "n", arg: 3, scope: !6369, file: !6309, line: 86, type: !110)
!6386 = !DILocalVariable(name: "ps", arg: 4, scope: !6369, file: !6309, line: 86, type: !6372)
!6387 = !DILocalVariable(name: "ret", scope: !6369, file: !6309, line: 88, type: !110)
!6388 = !DILocalVariable(name: "wc", scope: !6369, file: !6309, line: 89, type: !4835)
!6389 = distinct !DISubprogram(name: "extract_trimmed_name", scope: !6390, file: !6390, line: 49, type: !6391, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !309, retainedNodes: !4)
!6390 = !DIFile(filename: "lib/readutmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!6391 = !DISubroutineType(types: !6392)
!6392 = !{!6, !6393}
!6393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6394, size: 64)
!6394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6395)
!6395 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !6396)
!6396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !6397)
!6397 = !{!6398, !6399, !6400, !6401, !6402, !6403, !6404, !6409, !6410, !6415, !6416}
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !6396, file: !72, line: 57, baseType: !14, size: 16)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !6396, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !6396, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !6396, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !6396, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !6396, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !6396, file: !72, line: 67, baseType: !6405, size: 32, offset: 2656)
!6405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !6406)
!6406 = !{!6407, !6408}
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !6405, file: !72, line: 45, baseType: !14, size: 16)
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !6405, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !6396, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !6396, file: !72, line: 79, baseType: !6411, size: 64, offset: 2720)
!6411 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6396, file: !72, line: 75, size: 64, elements: !6412)
!6412 = !{!6413, !6414}
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !6411, file: !72, line: 77, baseType: !96, size: 32)
!6414 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !6411, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !6396, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !6396, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!6417 = !DILocalVariable(name: "ut", arg: 1, scope: !6389, file: !6390, line: 49, type: !6393)
!6418 = !DILocation(line: 49, column: 42, scope: !6389)
!6419 = !DILocalVariable(name: "p", scope: !6389, file: !6390, line: 51, type: !6)
!6420 = !DILocation(line: 51, column: 9, scope: !6389)
!6421 = !DILocalVariable(name: "trimmed_name", scope: !6389, file: !6390, line: 51, type: !6)
!6422 = !DILocation(line: 51, column: 13, scope: !6389)
!6423 = !DILocation(line: 53, column: 18, scope: !6389)
!6424 = !DILocation(line: 53, column: 16, scope: !6389)
!6425 = !DILocation(line: 54, column: 12, scope: !6389)
!6426 = !DILocation(line: 54, column: 26, scope: !6389)
!6427 = !DILocation(line: 54, column: 3, scope: !6389)
!6428 = !DILocation(line: 58, column: 3, scope: !6389)
!6429 = !DILocation(line: 58, column: 39, scope: !6389)
!6430 = !DILocation(line: 59, column: 12, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6389, file: !6390, line: 59, column: 3)
!6432 = !DILocation(line: 59, column: 35, scope: !6431)
!6433 = !DILocation(line: 59, column: 27, scope: !6431)
!6434 = !DILocation(line: 59, column: 25, scope: !6431)
!6435 = !DILocation(line: 59, column: 10, scope: !6431)
!6436 = !DILocation(line: 59, column: 8, scope: !6431)
!6437 = !DILocation(line: 60, column: 8, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6431, file: !6390, line: 59, column: 3)
!6439 = !DILocation(line: 60, column: 23, scope: !6438)
!6440 = !DILocation(line: 60, column: 21, scope: !6438)
!6441 = !DILocation(line: 60, column: 25, scope: !6438)
!6442 = !DILocation(line: 60, column: 28, scope: !6438)
!6443 = !DILocation(line: 60, column: 34, scope: !6438)
!6444 = !DILocation(line: 0, scope: !6438)
!6445 = !DILocation(line: 59, column: 3, scope: !6431)
!6446 = !DILocation(line: 62, column: 5, scope: !6438)
!6447 = !DILocation(line: 61, column: 9, scope: !6438)
!6448 = !DILocation(line: 61, column: 13, scope: !6438)
!6449 = !DILocation(line: 59, column: 3, scope: !6438)
!6450 = distinct !{!6450, !6445, !6451}
!6451 = !DILocation(line: 62, column: 5, scope: !6431)
!6452 = !DILocation(line: 63, column: 10, scope: !6389)
!6453 = !DILocation(line: 63, column: 3, scope: !6389)
!6454 = !DILocalVariable(name: "ut", arg: 1, scope: !6455, file: !6390, line: 49, type: !6458)
!6455 = distinct !DISubprogram(name: "extract_trimmed_name", scope: !6390, file: !6390, line: 49, type: !6456, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6482, retainedNodes: !4)
!6456 = !DISubroutineType(types: !6457)
!6457 = !{!6, !6458}
!6458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6459, size: 64)
!6459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6460)
!6460 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !6461)
!6461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !6462)
!6462 = !{!6463, !6464, !6465, !6466, !6467, !6468, !6469, !6474, !6475, !6480, !6481}
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !6461, file: !72, line: 57, baseType: !14, size: 16)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !6461, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !6461, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !6461, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !6461, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !6461, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !6461, file: !72, line: 67, baseType: !6470, size: 32, offset: 2656)
!6470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !6471)
!6471 = !{!6472, !6473}
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !6470, file: !72, line: 45, baseType: !14, size: 16)
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !6470, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !6461, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !6461, file: !72, line: 79, baseType: !6476, size: 64, offset: 2720)
!6476 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6461, file: !72, line: 75, size: 64, elements: !6477)
!6477 = !{!6478, !6479}
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !6476, file: !72, line: 77, baseType: !96, size: 32)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !6476, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !6461, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !6461, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!6482 = distinct !DICompileUnit(language: DW_LANG_C99, file: !310, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !311, nameTableKind: None)
!6483 = !DILocalVariable(name: "p", scope: !6455, file: !6390, line: 51, type: !6)
!6484 = !DILocalVariable(name: "trimmed_name", scope: !6455, file: !6390, line: 51, type: !6)
!6485 = distinct !DISubprogram(name: "read_utmp", scope: !6390, file: !6390, line: 92, type: !6486, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !309, retainedNodes: !4)
!6486 = !DISubroutineType(types: !6487)
!6487 = !{!53, !49, !6234, !6488, !53}
!6488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6489, size: 64)
!6489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6395, size: 64)
!6490 = !DILocalVariable(name: "file", arg: 1, scope: !6485, file: !6390, line: 92, type: !49)
!6491 = !DILocation(line: 92, column: 24, scope: !6485)
!6492 = !DILocalVariable(name: "n_entries", arg: 2, scope: !6485, file: !6390, line: 92, type: !6234)
!6493 = !DILocation(line: 92, column: 38, scope: !6485)
!6494 = !DILocalVariable(name: "utmp_buf", arg: 3, scope: !6485, file: !6390, line: 92, type: !6488)
!6495 = !DILocation(line: 92, column: 63, scope: !6485)
!6496 = !DILocalVariable(name: "options", arg: 4, scope: !6485, file: !6390, line: 93, type: !53)
!6497 = !DILocation(line: 93, column: 16, scope: !6485)
!6498 = !DILocalVariable(name: "n_read", scope: !6485, file: !6390, line: 95, type: !110)
!6499 = !DILocation(line: 95, column: 10, scope: !6485)
!6500 = !DILocalVariable(name: "n_alloc", scope: !6485, file: !6390, line: 96, type: !110)
!6501 = !DILocation(line: 96, column: 10, scope: !6485)
!6502 = !DILocalVariable(name: "utmp", scope: !6485, file: !6390, line: 97, type: !6489)
!6503 = !DILocation(line: 97, column: 16, scope: !6485)
!6504 = !DILocalVariable(name: "u", scope: !6485, file: !6390, line: 98, type: !6489)
!6505 = !DILocation(line: 98, column: 16, scope: !6485)
!6506 = !DILocation(line: 104, column: 32, scope: !6485)
!6507 = !DILocation(line: 104, column: 3, scope: !6485)
!6508 = !DILocation(line: 106, column: 3, scope: !6485)
!6509 = !DILocation(line: 108, column: 3, scope: !6485)
!6510 = !DILocation(line: 108, column: 15, scope: !6485)
!6511 = !DILocation(line: 108, column: 13, scope: !6485)
!6512 = !DILocation(line: 108, column: 32, scope: !6485)
!6513 = !DILocation(line: 109, column: 31, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6485, file: !6390, line: 109, column: 9)
!6515 = !DILocation(line: 109, column: 34, scope: !6514)
!6516 = !DILocation(line: 109, column: 9, scope: !6514)
!6517 = !DILocation(line: 109, column: 9, scope: !6485)
!6518 = !DILocation(line: 111, column: 13, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6520, file: !6390, line: 111, column: 13)
!6520 = distinct !DILexicalBlock(scope: !6514, file: !6390, line: 110, column: 7)
!6521 = !DILocation(line: 111, column: 23, scope: !6519)
!6522 = !DILocation(line: 111, column: 20, scope: !6519)
!6523 = !DILocation(line: 111, column: 13, scope: !6520)
!6524 = !DILocation(line: 112, column: 30, scope: !6519)
!6525 = !DILocation(line: 112, column: 18, scope: !6519)
!6526 = !DILocation(line: 112, column: 16, scope: !6519)
!6527 = !DILocation(line: 112, column: 11, scope: !6519)
!6528 = !DILocation(line: 114, column: 9, scope: !6520)
!6529 = !DILocation(line: 114, column: 20, scope: !6520)
!6530 = !DILocation(line: 114, column: 27, scope: !6520)
!6531 = !DILocation(line: 114, column: 26, scope: !6520)
!6532 = !DILocation(line: 115, column: 7, scope: !6520)
!6533 = distinct !{!6533, !6509, !6534}
!6534 = !DILocation(line: 115, column: 7, scope: !6485)
!6535 = !DILocation(line: 117, column: 3, scope: !6485)
!6536 = !DILocation(line: 119, column: 16, scope: !6485)
!6537 = !DILocation(line: 119, column: 4, scope: !6485)
!6538 = !DILocation(line: 119, column: 14, scope: !6485)
!6539 = !DILocation(line: 120, column: 15, scope: !6485)
!6540 = !DILocation(line: 120, column: 4, scope: !6485)
!6541 = !DILocation(line: 120, column: 13, scope: !6485)
!6542 = !DILocation(line: 122, column: 3, scope: !6485)
!6543 = !DILocalVariable(name: "file", arg: 1, scope: !6544, file: !6390, line: 92, type: !49)
!6544 = distinct !DISubprogram(name: "read_utmp", scope: !6390, file: !6390, line: 92, type: !6545, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6571, retainedNodes: !4)
!6545 = !DISubroutineType(types: !6546)
!6546 = !{!53, !49, !6234, !6547, !53}
!6547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6548, size: 64)
!6548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6549, size: 64)
!6549 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !6550)
!6550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !6551)
!6551 = !{!6552, !6553, !6554, !6555, !6556, !6557, !6558, !6563, !6564, !6569, !6570}
!6552 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !6550, file: !72, line: 57, baseType: !14, size: 16)
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !6550, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!6554 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !6550, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !6550, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !6550, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !6550, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !6550, file: !72, line: 67, baseType: !6559, size: 32, offset: 2656)
!6559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !6560)
!6560 = !{!6561, !6562}
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !6559, file: !72, line: 45, baseType: !14, size: 16)
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !6559, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !6550, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !6550, file: !72, line: 79, baseType: !6565, size: 64, offset: 2720)
!6565 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6550, file: !72, line: 75, size: 64, elements: !6566)
!6566 = !{!6567, !6568}
!6567 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !6565, file: !72, line: 77, baseType: !96, size: 32)
!6568 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !6565, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !6550, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !6550, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!6571 = distinct !DICompileUnit(language: DW_LANG_C99, file: !310, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !311, nameTableKind: None)
!6572 = !DILocalVariable(name: "n_entries", arg: 2, scope: !6544, file: !6390, line: 92, type: !6234)
!6573 = !DILocalVariable(name: "utmp_buf", arg: 3, scope: !6544, file: !6390, line: 92, type: !6547)
!6574 = !DILocalVariable(name: "options", arg: 4, scope: !6544, file: !6390, line: 93, type: !53)
!6575 = !DILocalVariable(name: "n_read", scope: !6544, file: !6390, line: 95, type: !110)
!6576 = !DILocalVariable(name: "n_alloc", scope: !6544, file: !6390, line: 96, type: !110)
!6577 = !DILocalVariable(name: "utmp", scope: !6544, file: !6390, line: 97, type: !6548)
!6578 = !DILocalVariable(name: "u", scope: !6544, file: !6390, line: 98, type: !6548)
!6579 = distinct !DISubprogram(name: "desirable_utmp_entry", scope: !6390, file: !6390, line: 69, type: !6580, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !309, retainedNodes: !4)
!6580 = !DISubroutineType(types: !6581)
!6581 = !{!18, !6393, !53}
!6582 = !DILocalVariable(name: "u", arg: 1, scope: !6579, file: !6390, line: 69, type: !6393)
!6583 = !DILocation(line: 69, column: 42, scope: !6579)
!6584 = !DILocalVariable(name: "options", arg: 2, scope: !6579, file: !6390, line: 69, type: !53)
!6585 = !DILocation(line: 69, column: 49, scope: !6579)
!6586 = !DILocalVariable(name: "user_proc", scope: !6579, file: !6390, line: 71, type: !18)
!6587 = !DILocation(line: 71, column: 8, scope: !6579)
!6588 = !DILocation(line: 71, column: 20, scope: !6579)
!6589 = !DILocation(line: 0, scope: !6579)
!6590 = !DILocation(line: 72, column: 8, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6579, file: !6390, line: 72, column: 7)
!6592 = !DILocation(line: 72, column: 16, scope: !6591)
!6593 = !DILocation(line: 72, column: 42, scope: !6591)
!6594 = !DILocation(line: 72, column: 46, scope: !6591)
!6595 = !DILocation(line: 72, column: 7, scope: !6579)
!6596 = !DILocation(line: 73, column: 5, scope: !6591)
!6597 = !DILocation(line: 74, column: 8, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6579, file: !6390, line: 74, column: 7)
!6599 = !DILocation(line: 74, column: 16, scope: !6598)
!6600 = !DILocation(line: 75, column: 7, scope: !6598)
!6601 = !DILocation(line: 75, column: 10, scope: !6598)
!6602 = !DILocation(line: 76, column: 7, scope: !6598)
!6603 = !DILocation(line: 76, column: 14, scope: !6598)
!6604 = !DILocation(line: 76, column: 12, scope: !6598)
!6605 = !DILocation(line: 77, column: 7, scope: !6598)
!6606 = !DILocation(line: 77, column: 17, scope: !6598)
!6607 = !DILocation(line: 77, column: 11, scope: !6598)
!6608 = !DILocation(line: 77, column: 32, scope: !6598)
!6609 = !DILocation(line: 77, column: 36, scope: !6598)
!6610 = !DILocation(line: 77, column: 39, scope: !6598)
!6611 = !DILocation(line: 77, column: 45, scope: !6598)
!6612 = !DILocation(line: 74, column: 7, scope: !6579)
!6613 = !DILocation(line: 78, column: 5, scope: !6598)
!6614 = !DILocation(line: 79, column: 3, scope: !6579)
!6615 = !DILocation(line: 80, column: 1, scope: !6579)
!6616 = !DILocalVariable(name: "u", arg: 1, scope: !6617, file: !6390, line: 69, type: !6620)
!6617 = distinct !DISubprogram(name: "desirable_utmp_entry", scope: !6390, file: !6390, line: 69, type: !6618, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !6644, retainedNodes: !4)
!6618 = !DISubroutineType(types: !6619)
!6619 = !{!18, !6620, !53}
!6620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6621, size: 64)
!6621 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6622)
!6622 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !6623)
!6623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !6624)
!6624 = !{!6625, !6626, !6627, !6628, !6629, !6630, !6631, !6636, !6637, !6642, !6643}
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !6623, file: !72, line: 57, baseType: !14, size: 16)
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !6623, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!6627 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !6623, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !6623, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !6623, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !6623, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !6623, file: !72, line: 67, baseType: !6632, size: 32, offset: 2656)
!6632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !6633)
!6633 = !{!6634, !6635}
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !6632, file: !72, line: 45, baseType: !14, size: 16)
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !6632, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !6623, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !6623, file: !72, line: 79, baseType: !6638, size: 64, offset: 2720)
!6638 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6623, file: !72, line: 75, size: 64, elements: !6639)
!6639 = !{!6640, !6641}
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !6638, file: !72, line: 77, baseType: !96, size: 32)
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !6638, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !6623, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !6623, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!6644 = distinct !DICompileUnit(language: DW_LANG_C99, file: !310, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !311, nameTableKind: None)
!6645 = !DILocalVariable(name: "options", arg: 2, scope: !6617, file: !6390, line: 69, type: !53)
!6646 = !DILocalVariable(name: "user_proc", scope: !6617, file: !6390, line: 71, type: !18)
!6647 = distinct !DISubprogram(name: "c_strcasecmp", scope: !6648, file: !6648, line: 27, type: !6649, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !312, retainedNodes: !4)
!6648 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!6649 = !DISubroutineType(types: !6650)
!6650 = !{!53, !49, !49}
!6651 = !DILocalVariable(name: "s1", arg: 1, scope: !6647, file: !6648, line: 27, type: !49)
!6652 = !DILocation(line: 27, column: 27, scope: !6647)
!6653 = !DILocalVariable(name: "s2", arg: 2, scope: !6647, file: !6648, line: 27, type: !49)
!6654 = !DILocation(line: 27, column: 43, scope: !6647)
!6655 = !DILocalVariable(name: "p1", scope: !6647, file: !6648, line: 29, type: !315)
!6656 = !DILocation(line: 29, column: 33, scope: !6647)
!6657 = !DILocation(line: 29, column: 62, scope: !6647)
!6658 = !DILocalVariable(name: "p2", scope: !6647, file: !6648, line: 30, type: !315)
!6659 = !DILocation(line: 30, column: 33, scope: !6647)
!6660 = !DILocation(line: 30, column: 62, scope: !6647)
!6661 = !DILocalVariable(name: "c1", scope: !6647, file: !6648, line: 31, type: !317)
!6662 = !DILocation(line: 31, column: 17, scope: !6647)
!6663 = !DILocalVariable(name: "c2", scope: !6647, file: !6648, line: 31, type: !317)
!6664 = !DILocation(line: 31, column: 21, scope: !6647)
!6665 = !DILocation(line: 33, column: 7, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6647, file: !6648, line: 33, column: 7)
!6667 = !DILocation(line: 33, column: 13, scope: !6666)
!6668 = !DILocation(line: 33, column: 10, scope: !6666)
!6669 = !DILocation(line: 33, column: 7, scope: !6647)
!6670 = !DILocation(line: 34, column: 5, scope: !6666)
!6671 = !DILocation(line: 36, column: 3, scope: !6647)
!6672 = !DILocation(line: 38, column: 24, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6647, file: !6648, line: 37, column: 5)
!6674 = !DILocation(line: 38, column: 23, scope: !6673)
!6675 = !DILocation(line: 38, column: 12, scope: !6673)
!6676 = !DILocation(line: 38, column: 10, scope: !6673)
!6677 = !DILocation(line: 39, column: 24, scope: !6673)
!6678 = !DILocation(line: 39, column: 23, scope: !6673)
!6679 = !DILocation(line: 39, column: 12, scope: !6673)
!6680 = !DILocation(line: 39, column: 10, scope: !6673)
!6681 = !DILocation(line: 41, column: 11, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6673, file: !6648, line: 41, column: 11)
!6683 = !DILocation(line: 41, column: 14, scope: !6682)
!6684 = !DILocation(line: 41, column: 11, scope: !6673)
!6685 = !DILocation(line: 42, column: 9, scope: !6682)
!6686 = !DILocation(line: 44, column: 7, scope: !6673)
!6687 = !DILocation(line: 45, column: 7, scope: !6673)
!6688 = !DILocation(line: 46, column: 5, scope: !6673)
!6689 = !DILocation(line: 47, column: 10, scope: !6647)
!6690 = !DILocation(line: 47, column: 16, scope: !6647)
!6691 = !DILocation(line: 47, column: 13, scope: !6647)
!6692 = distinct !{!6692, !6671, !6693}
!6693 = !DILocation(line: 47, column: 18, scope: !6647)
!6694 = !DILocation(line: 50, column: 12, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6647, file: !6648, line: 49, column: 7)
!6696 = !DILocation(line: 50, column: 17, scope: !6695)
!6697 = !DILocation(line: 50, column: 15, scope: !6695)
!6698 = !DILocation(line: 50, column: 5, scope: !6695)
!6699 = !DILocation(line: 56, column: 1, scope: !6647)
!6700 = !DILocalVariable(name: "s1", arg: 1, scope: !6701, file: !6648, line: 27, type: !49)
!6701 = distinct !DISubprogram(name: "c_strcasecmp", scope: !6648, file: !6648, line: 27, type: !6649, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6702, retainedNodes: !4)
!6702 = distinct !DICompileUnit(language: DW_LANG_C99, file: !313, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !314, nameTableKind: None)
!6703 = !DILocalVariable(name: "s2", arg: 2, scope: !6701, file: !6648, line: 27, type: !49)
!6704 = !DILocalVariable(name: "p1", scope: !6701, file: !6648, line: 29, type: !315)
!6705 = !DILocalVariable(name: "p2", scope: !6701, file: !6648, line: 30, type: !315)
!6706 = !DILocalVariable(name: "c1", scope: !6701, file: !6648, line: 31, type: !317)
!6707 = !DILocalVariable(name: "c2", scope: !6701, file: !6648, line: 31, type: !317)
!6708 = distinct !DISubprogram(name: "close_stream", scope: !6709, file: !6709, line: 56, type: !6710, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !318, retainedNodes: !4)
!6709 = !DIFile(filename: "lib/close-stream.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!6710 = !DISubroutineType(types: !6711)
!6711 = !{!53, !6712}
!6712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6713, size: 64)
!6713 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5767, line: 7, baseType: !6714)
!6714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5769, line: 49, size: 1728, elements: !6715)
!6715 = !{!6716, !6717, !6718, !6719, !6720, !6721, !6722, !6723, !6724, !6725, !6726, !6727, !6728, !6729, !6731, !6732, !6733, !6734, !6735, !6736, !6737, !6738, !6739, !6740, !6741, !6742, !6743, !6744, !6745}
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6714, file: !5769, line: 51, baseType: !53, size: 32)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6714, file: !5769, line: 54, baseType: !6, size: 64, offset: 64)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6714, file: !5769, line: 55, baseType: !6, size: 64, offset: 128)
!6719 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6714, file: !5769, line: 56, baseType: !6, size: 64, offset: 192)
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6714, file: !5769, line: 57, baseType: !6, size: 64, offset: 256)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6714, file: !5769, line: 58, baseType: !6, size: 64, offset: 320)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6714, file: !5769, line: 59, baseType: !6, size: 64, offset: 384)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6714, file: !5769, line: 60, baseType: !6, size: 64, offset: 448)
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6714, file: !5769, line: 61, baseType: !6, size: 64, offset: 512)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6714, file: !5769, line: 64, baseType: !6, size: 64, offset: 576)
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6714, file: !5769, line: 65, baseType: !6, size: 64, offset: 640)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6714, file: !5769, line: 66, baseType: !6, size: 64, offset: 704)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6714, file: !5769, line: 68, baseType: !5784, size: 64, offset: 768)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6714, file: !5769, line: 70, baseType: !6730, size: 64, offset: 832)
!6730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6714, size: 64)
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6714, file: !5769, line: 72, baseType: !53, size: 32, offset: 896)
!6732 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6714, file: !5769, line: 73, baseType: !53, size: 32, offset: 928)
!6733 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6714, file: !5769, line: 74, baseType: !1391, size: 64, offset: 960)
!6734 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6714, file: !5769, line: 77, baseType: !188, size: 16, offset: 1024)
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6714, file: !5769, line: 78, baseType: !5793, size: 8, offset: 1040)
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6714, file: !5769, line: 79, baseType: !5795, size: 8, offset: 1048)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6714, file: !5769, line: 81, baseType: !5799, size: 64, offset: 1088)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6714, file: !5769, line: 89, baseType: !5802, size: 64, offset: 1152)
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !6714, file: !5769, line: 91, baseType: !5804, size: 64, offset: 1216)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !6714, file: !5769, line: 92, baseType: !5807, size: 64, offset: 1280)
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !6714, file: !5769, line: 93, baseType: !6730, size: 64, offset: 1344)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !6714, file: !5769, line: 94, baseType: !8, size: 64, offset: 1408)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6714, file: !5769, line: 95, baseType: !110, size: 64, offset: 1472)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6714, file: !5769, line: 96, baseType: !53, size: 32, offset: 1536)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6714, file: !5769, line: 98, baseType: !105, size: 160, offset: 1568)
!6746 = !DILocalVariable(name: "stream", arg: 1, scope: !6708, file: !6709, line: 56, type: !6712)
!6747 = !DILocation(line: 56, column: 21, scope: !6708)
!6748 = !DILocalVariable(name: "some_pending", scope: !6708, file: !6709, line: 58, type: !6749)
!6749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18)
!6750 = !DILocation(line: 58, column: 14, scope: !6708)
!6751 = !DILocation(line: 58, column: 42, scope: !6708)
!6752 = !DILocation(line: 58, column: 30, scope: !6708)
!6753 = !DILocation(line: 58, column: 50, scope: !6708)
!6754 = !DILocalVariable(name: "prev_fail", scope: !6708, file: !6709, line: 59, type: !6749)
!6755 = !DILocation(line: 59, column: 14, scope: !6708)
!6756 = !DILocation(line: 59, column: 27, scope: !6708)
!6757 = !DILocation(line: 59, column: 43, scope: !6708)
!6758 = !DILocalVariable(name: "fclose_fail", scope: !6708, file: !6709, line: 60, type: !6749)
!6759 = !DILocation(line: 60, column: 14, scope: !6708)
!6760 = !DILocation(line: 60, column: 37, scope: !6708)
!6761 = !DILocation(line: 60, column: 29, scope: !6708)
!6762 = !DILocation(line: 60, column: 45, scope: !6708)
!6763 = !DILocation(line: 70, column: 7, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6708, file: !6709, line: 70, column: 7)
!6765 = !DILocation(line: 70, column: 17, scope: !6764)
!6766 = !DILocation(line: 70, column: 21, scope: !6764)
!6767 = !DILocation(line: 70, column: 33, scope: !6764)
!6768 = !DILocation(line: 70, column: 37, scope: !6764)
!6769 = !DILocation(line: 70, column: 50, scope: !6764)
!6770 = !DILocation(line: 70, column: 53, scope: !6764)
!6771 = !DILocation(line: 70, column: 59, scope: !6764)
!6772 = !DILocation(line: 70, column: 7, scope: !6708)
!6773 = !DILocation(line: 72, column: 13, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6775, file: !6709, line: 72, column: 11)
!6775 = distinct !DILexicalBlock(scope: !6764, file: !6709, line: 71, column: 5)
!6776 = !DILocation(line: 72, column: 11, scope: !6775)
!6777 = !DILocation(line: 73, column: 9, scope: !6774)
!6778 = !DILocation(line: 73, column: 15, scope: !6774)
!6779 = !DILocation(line: 74, column: 7, scope: !6775)
!6780 = !DILocation(line: 77, column: 3, scope: !6708)
!6781 = !DILocation(line: 78, column: 1, scope: !6708)
!6782 = !DILocalVariable(name: "stream", arg: 1, scope: !6783, file: !6709, line: 56, type: !6786)
!6783 = distinct !DISubprogram(name: "close_stream", scope: !6709, file: !6709, line: 56, type: !6784, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6820, retainedNodes: !4)
!6784 = !DISubroutineType(types: !6785)
!6785 = !{!53, !6786}
!6786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6787, size: 64)
!6787 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5767, line: 7, baseType: !6788)
!6788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5769, line: 49, size: 1728, elements: !6789)
!6789 = !{!6790, !6791, !6792, !6793, !6794, !6795, !6796, !6797, !6798, !6799, !6800, !6801, !6802, !6803, !6805, !6806, !6807, !6808, !6809, !6810, !6811, !6812, !6813, !6814, !6815, !6816, !6817, !6818, !6819}
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6788, file: !5769, line: 51, baseType: !53, size: 32)
!6791 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6788, file: !5769, line: 54, baseType: !6, size: 64, offset: 64)
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6788, file: !5769, line: 55, baseType: !6, size: 64, offset: 128)
!6793 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6788, file: !5769, line: 56, baseType: !6, size: 64, offset: 192)
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6788, file: !5769, line: 57, baseType: !6, size: 64, offset: 256)
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6788, file: !5769, line: 58, baseType: !6, size: 64, offset: 320)
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6788, file: !5769, line: 59, baseType: !6, size: 64, offset: 384)
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6788, file: !5769, line: 60, baseType: !6, size: 64, offset: 448)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6788, file: !5769, line: 61, baseType: !6, size: 64, offset: 512)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6788, file: !5769, line: 64, baseType: !6, size: 64, offset: 576)
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6788, file: !5769, line: 65, baseType: !6, size: 64, offset: 640)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6788, file: !5769, line: 66, baseType: !6, size: 64, offset: 704)
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6788, file: !5769, line: 68, baseType: !5784, size: 64, offset: 768)
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6788, file: !5769, line: 70, baseType: !6804, size: 64, offset: 832)
!6804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6788, size: 64)
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6788, file: !5769, line: 72, baseType: !53, size: 32, offset: 896)
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6788, file: !5769, line: 73, baseType: !53, size: 32, offset: 928)
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6788, file: !5769, line: 74, baseType: !1391, size: 64, offset: 960)
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6788, file: !5769, line: 77, baseType: !188, size: 16, offset: 1024)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6788, file: !5769, line: 78, baseType: !5793, size: 8, offset: 1040)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6788, file: !5769, line: 79, baseType: !5795, size: 8, offset: 1048)
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6788, file: !5769, line: 81, baseType: !5799, size: 64, offset: 1088)
!6812 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6788, file: !5769, line: 89, baseType: !5802, size: 64, offset: 1152)
!6813 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !6788, file: !5769, line: 91, baseType: !5804, size: 64, offset: 1216)
!6814 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !6788, file: !5769, line: 92, baseType: !5807, size: 64, offset: 1280)
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !6788, file: !5769, line: 93, baseType: !6804, size: 64, offset: 1344)
!6816 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !6788, file: !5769, line: 94, baseType: !8, size: 64, offset: 1408)
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6788, file: !5769, line: 95, baseType: !110, size: 64, offset: 1472)
!6818 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6788, file: !5769, line: 96, baseType: !53, size: 32, offset: 1536)
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6788, file: !5769, line: 98, baseType: !105, size: 160, offset: 1568)
!6820 = distinct !DICompileUnit(language: DW_LANG_C99, file: !319, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!6821 = !DILocalVariable(name: "some_pending", scope: !6783, file: !6709, line: 58, type: !6749)
!6822 = !DILocalVariable(name: "prev_fail", scope: !6783, file: !6709, line: 59, type: !6749)
!6823 = !DILocalVariable(name: "fclose_fail", scope: !6783, file: !6709, line: 60, type: !6749)
!6824 = distinct !DISubprogram(name: "locale_charset", scope: !6825, file: !6825, line: 831, type: !6826, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !320, retainedNodes: !4)
!6825 = !DIFile(filename: "lib/localcharset.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!6826 = !DISubroutineType(types: !6827)
!6827 = !{!49}
!6828 = !DILocalVariable(name: "codeset", scope: !6824, file: !6825, line: 833, type: !49)
!6829 = !DILocation(line: 833, column: 15, scope: !6824)
!6830 = !DILocation(line: 847, column: 13, scope: !6824)
!6831 = !DILocation(line: 847, column: 11, scope: !6824)
!6832 = !DILocation(line: 911, column: 7, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6824, file: !6825, line: 911, column: 7)
!6834 = !DILocation(line: 911, column: 15, scope: !6833)
!6835 = !DILocation(line: 911, column: 7, scope: !6824)
!6836 = !DILocation(line: 913, column: 13, scope: !6833)
!6837 = !DILocation(line: 913, column: 5, scope: !6833)
!6838 = !DILocation(line: 1070, column: 13, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6840, file: !6825, line: 1070, column: 13)
!6840 = distinct !DILexicalBlock(scope: !6841, file: !6825, line: 1060, column: 7)
!6841 = distinct !DILexicalBlock(scope: !6824, file: !6825, line: 1019, column: 3)
!6842 = !DILocation(line: 1070, column: 24, scope: !6839)
!6843 = !DILocation(line: 1070, column: 13, scope: !6840)
!6844 = !DILocation(line: 1071, column: 19, scope: !6839)
!6845 = !DILocation(line: 1071, column: 11, scope: !6839)
!6846 = !DILocation(line: 1158, column: 10, scope: !6824)
!6847 = !DILocation(line: 1158, column: 3, scope: !6824)
!6848 = !DILocalVariable(name: "codeset", scope: !6849, file: !6825, line: 833, type: !49)
!6849 = distinct !DISubprogram(name: "locale_charset", scope: !6825, file: !6825, line: 831, type: !6826, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6850, retainedNodes: !4)
!6850 = distinct !DICompileUnit(language: DW_LANG_C99, file: !321, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!6851 = distinct !DISubprogram(name: "rpl_fclose", scope: !6852, file: !6852, line: 58, type: !6853, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !322, retainedNodes: !4)
!6852 = !DIFile(filename: "lib/fclose.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!6853 = !DISubroutineType(types: !6854)
!6854 = !{!53, !6855}
!6855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6856, size: 64)
!6856 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5767, line: 7, baseType: !6857)
!6857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5769, line: 49, size: 1728, elements: !6858)
!6858 = !{!6859, !6860, !6861, !6862, !6863, !6864, !6865, !6866, !6867, !6868, !6869, !6870, !6871, !6872, !6874, !6875, !6876, !6877, !6878, !6879, !6880, !6881, !6882, !6883, !6884, !6885, !6886, !6887, !6888}
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6857, file: !5769, line: 51, baseType: !53, size: 32)
!6860 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6857, file: !5769, line: 54, baseType: !6, size: 64, offset: 64)
!6861 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6857, file: !5769, line: 55, baseType: !6, size: 64, offset: 128)
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6857, file: !5769, line: 56, baseType: !6, size: 64, offset: 192)
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6857, file: !5769, line: 57, baseType: !6, size: 64, offset: 256)
!6864 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6857, file: !5769, line: 58, baseType: !6, size: 64, offset: 320)
!6865 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6857, file: !5769, line: 59, baseType: !6, size: 64, offset: 384)
!6866 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6857, file: !5769, line: 60, baseType: !6, size: 64, offset: 448)
!6867 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6857, file: !5769, line: 61, baseType: !6, size: 64, offset: 512)
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6857, file: !5769, line: 64, baseType: !6, size: 64, offset: 576)
!6869 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6857, file: !5769, line: 65, baseType: !6, size: 64, offset: 640)
!6870 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6857, file: !5769, line: 66, baseType: !6, size: 64, offset: 704)
!6871 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6857, file: !5769, line: 68, baseType: !5784, size: 64, offset: 768)
!6872 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6857, file: !5769, line: 70, baseType: !6873, size: 64, offset: 832)
!6873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6857, size: 64)
!6874 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6857, file: !5769, line: 72, baseType: !53, size: 32, offset: 896)
!6875 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6857, file: !5769, line: 73, baseType: !53, size: 32, offset: 928)
!6876 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6857, file: !5769, line: 74, baseType: !1391, size: 64, offset: 960)
!6877 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6857, file: !5769, line: 77, baseType: !188, size: 16, offset: 1024)
!6878 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6857, file: !5769, line: 78, baseType: !5793, size: 8, offset: 1040)
!6879 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6857, file: !5769, line: 79, baseType: !5795, size: 8, offset: 1048)
!6880 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6857, file: !5769, line: 81, baseType: !5799, size: 64, offset: 1088)
!6881 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6857, file: !5769, line: 89, baseType: !5802, size: 64, offset: 1152)
!6882 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !6857, file: !5769, line: 91, baseType: !5804, size: 64, offset: 1216)
!6883 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !6857, file: !5769, line: 92, baseType: !5807, size: 64, offset: 1280)
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !6857, file: !5769, line: 93, baseType: !6873, size: 64, offset: 1344)
!6885 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !6857, file: !5769, line: 94, baseType: !8, size: 64, offset: 1408)
!6886 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6857, file: !5769, line: 95, baseType: !110, size: 64, offset: 1472)
!6887 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6857, file: !5769, line: 96, baseType: !53, size: 32, offset: 1536)
!6888 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6857, file: !5769, line: 98, baseType: !105, size: 160, offset: 1568)
!6889 = !DILocalVariable(name: "fp", arg: 1, scope: !6851, file: !6852, line: 58, type: !6855)
!6890 = !DILocation(line: 58, column: 19, scope: !6851)
!6891 = !DILocalVariable(name: "saved_errno", scope: !6851, file: !6852, line: 60, type: !53)
!6892 = !DILocation(line: 60, column: 7, scope: !6851)
!6893 = !DILocalVariable(name: "fd", scope: !6851, file: !6852, line: 61, type: !53)
!6894 = !DILocation(line: 61, column: 7, scope: !6851)
!6895 = !DILocalVariable(name: "result", scope: !6851, file: !6852, line: 62, type: !53)
!6896 = !DILocation(line: 62, column: 7, scope: !6851)
!6897 = !DILocation(line: 65, column: 16, scope: !6851)
!6898 = !DILocation(line: 65, column: 8, scope: !6851)
!6899 = !DILocation(line: 65, column: 6, scope: !6851)
!6900 = !DILocation(line: 66, column: 7, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6851, file: !6852, line: 66, column: 7)
!6902 = !DILocation(line: 66, column: 10, scope: !6901)
!6903 = !DILocation(line: 66, column: 7, scope: !6851)
!6904 = !DILocation(line: 67, column: 28, scope: !6901)
!6905 = !DILocation(line: 67, column: 12, scope: !6901)
!6906 = !DILocation(line: 67, column: 5, scope: !6901)
!6907 = !DILocation(line: 72, column: 9, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6851, file: !6852, line: 72, column: 7)
!6909 = !DILocation(line: 72, column: 23, scope: !6908)
!6910 = !DILocation(line: 72, column: 41, scope: !6908)
!6911 = !DILocation(line: 72, column: 33, scope: !6908)
!6912 = !DILocation(line: 72, column: 26, scope: !6908)
!6913 = !DILocation(line: 72, column: 59, scope: !6908)
!6914 = !DILocation(line: 73, column: 7, scope: !6908)
!6915 = !DILocation(line: 73, column: 18, scope: !6908)
!6916 = !DILocation(line: 73, column: 10, scope: !6908)
!6917 = !DILocation(line: 72, column: 7, scope: !6851)
!6918 = !DILocation(line: 74, column: 19, scope: !6908)
!6919 = !DILocation(line: 74, column: 17, scope: !6908)
!6920 = !DILocation(line: 74, column: 5, scope: !6908)
!6921 = !DILocation(line: 100, column: 28, scope: !6851)
!6922 = !DILocation(line: 100, column: 12, scope: !6851)
!6923 = !DILocation(line: 100, column: 10, scope: !6851)
!6924 = !DILocation(line: 105, column: 7, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6851, file: !6852, line: 105, column: 7)
!6926 = !DILocation(line: 105, column: 19, scope: !6925)
!6927 = !DILocation(line: 105, column: 7, scope: !6851)
!6928 = !DILocation(line: 107, column: 15, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6925, file: !6852, line: 106, column: 5)
!6930 = !DILocation(line: 107, column: 7, scope: !6929)
!6931 = !DILocation(line: 107, column: 13, scope: !6929)
!6932 = !DILocation(line: 108, column: 14, scope: !6929)
!6933 = !DILocation(line: 109, column: 5, scope: !6929)
!6934 = !DILocation(line: 111, column: 10, scope: !6851)
!6935 = !DILocation(line: 111, column: 3, scope: !6851)
!6936 = !DILocation(line: 112, column: 1, scope: !6851)
!6937 = !DILocalVariable(name: "fp", arg: 1, scope: !6938, file: !6852, line: 58, type: !6941)
!6938 = distinct !DISubprogram(name: "rpl_fclose", scope: !6852, file: !6852, line: 58, type: !6939, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6975, retainedNodes: !4)
!6939 = !DISubroutineType(types: !6940)
!6940 = !{!53, !6941}
!6941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6942, size: 64)
!6942 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5767, line: 7, baseType: !6943)
!6943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5769, line: 49, size: 1728, elements: !6944)
!6944 = !{!6945, !6946, !6947, !6948, !6949, !6950, !6951, !6952, !6953, !6954, !6955, !6956, !6957, !6958, !6960, !6961, !6962, !6963, !6964, !6965, !6966, !6967, !6968, !6969, !6970, !6971, !6972, !6973, !6974}
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6943, file: !5769, line: 51, baseType: !53, size: 32)
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6943, file: !5769, line: 54, baseType: !6, size: 64, offset: 64)
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6943, file: !5769, line: 55, baseType: !6, size: 64, offset: 128)
!6948 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6943, file: !5769, line: 56, baseType: !6, size: 64, offset: 192)
!6949 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6943, file: !5769, line: 57, baseType: !6, size: 64, offset: 256)
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6943, file: !5769, line: 58, baseType: !6, size: 64, offset: 320)
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6943, file: !5769, line: 59, baseType: !6, size: 64, offset: 384)
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6943, file: !5769, line: 60, baseType: !6, size: 64, offset: 448)
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6943, file: !5769, line: 61, baseType: !6, size: 64, offset: 512)
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6943, file: !5769, line: 64, baseType: !6, size: 64, offset: 576)
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6943, file: !5769, line: 65, baseType: !6, size: 64, offset: 640)
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6943, file: !5769, line: 66, baseType: !6, size: 64, offset: 704)
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6943, file: !5769, line: 68, baseType: !5784, size: 64, offset: 768)
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6943, file: !5769, line: 70, baseType: !6959, size: 64, offset: 832)
!6959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6943, size: 64)
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6943, file: !5769, line: 72, baseType: !53, size: 32, offset: 896)
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6943, file: !5769, line: 73, baseType: !53, size: 32, offset: 928)
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6943, file: !5769, line: 74, baseType: !1391, size: 64, offset: 960)
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6943, file: !5769, line: 77, baseType: !188, size: 16, offset: 1024)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6943, file: !5769, line: 78, baseType: !5793, size: 8, offset: 1040)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6943, file: !5769, line: 79, baseType: !5795, size: 8, offset: 1048)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6943, file: !5769, line: 81, baseType: !5799, size: 64, offset: 1088)
!6967 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6943, file: !5769, line: 89, baseType: !5802, size: 64, offset: 1152)
!6968 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !6943, file: !5769, line: 91, baseType: !5804, size: 64, offset: 1216)
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !6943, file: !5769, line: 92, baseType: !5807, size: 64, offset: 1280)
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !6943, file: !5769, line: 93, baseType: !6959, size: 64, offset: 1344)
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !6943, file: !5769, line: 94, baseType: !8, size: 64, offset: 1408)
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6943, file: !5769, line: 95, baseType: !110, size: 64, offset: 1472)
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6943, file: !5769, line: 96, baseType: !53, size: 32, offset: 1536)
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6943, file: !5769, line: 98, baseType: !105, size: 160, offset: 1568)
!6975 = distinct !DICompileUnit(language: DW_LANG_C99, file: !323, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!6976 = !DILocalVariable(name: "saved_errno", scope: !6938, file: !6852, line: 60, type: !53)
!6977 = !DILocalVariable(name: "fd", scope: !6938, file: !6852, line: 61, type: !53)
!6978 = !DILocalVariable(name: "result", scope: !6938, file: !6852, line: 62, type: !53)
!6979 = distinct !DISubprogram(name: "rpl_fflush", scope: !6980, file: !6980, line: 129, type: !6981, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !324, retainedNodes: !4)
!6980 = !DIFile(filename: "lib/fflush.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!6981 = !DISubroutineType(types: !6982)
!6982 = !{!53, !6983}
!6983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6984, size: 64)
!6984 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5767, line: 7, baseType: !6985)
!6985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5769, line: 49, size: 1728, elements: !6986)
!6986 = !{!6987, !6988, !6989, !6990, !6991, !6992, !6993, !6994, !6995, !6996, !6997, !6998, !6999, !7000, !7002, !7003, !7004, !7005, !7006, !7007, !7008, !7009, !7010, !7011, !7012, !7013, !7014, !7015, !7016}
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6985, file: !5769, line: 51, baseType: !53, size: 32)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6985, file: !5769, line: 54, baseType: !6, size: 64, offset: 64)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6985, file: !5769, line: 55, baseType: !6, size: 64, offset: 128)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6985, file: !5769, line: 56, baseType: !6, size: 64, offset: 192)
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6985, file: !5769, line: 57, baseType: !6, size: 64, offset: 256)
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6985, file: !5769, line: 58, baseType: !6, size: 64, offset: 320)
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6985, file: !5769, line: 59, baseType: !6, size: 64, offset: 384)
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6985, file: !5769, line: 60, baseType: !6, size: 64, offset: 448)
!6995 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6985, file: !5769, line: 61, baseType: !6, size: 64, offset: 512)
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6985, file: !5769, line: 64, baseType: !6, size: 64, offset: 576)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6985, file: !5769, line: 65, baseType: !6, size: 64, offset: 640)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6985, file: !5769, line: 66, baseType: !6, size: 64, offset: 704)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6985, file: !5769, line: 68, baseType: !5784, size: 64, offset: 768)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6985, file: !5769, line: 70, baseType: !7001, size: 64, offset: 832)
!7001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6985, size: 64)
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6985, file: !5769, line: 72, baseType: !53, size: 32, offset: 896)
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6985, file: !5769, line: 73, baseType: !53, size: 32, offset: 928)
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6985, file: !5769, line: 74, baseType: !1391, size: 64, offset: 960)
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6985, file: !5769, line: 77, baseType: !188, size: 16, offset: 1024)
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6985, file: !5769, line: 78, baseType: !5793, size: 8, offset: 1040)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6985, file: !5769, line: 79, baseType: !5795, size: 8, offset: 1048)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6985, file: !5769, line: 81, baseType: !5799, size: 64, offset: 1088)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6985, file: !5769, line: 89, baseType: !5802, size: 64, offset: 1152)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !6985, file: !5769, line: 91, baseType: !5804, size: 64, offset: 1216)
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !6985, file: !5769, line: 92, baseType: !5807, size: 64, offset: 1280)
!7012 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !6985, file: !5769, line: 93, baseType: !7001, size: 64, offset: 1344)
!7013 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !6985, file: !5769, line: 94, baseType: !8, size: 64, offset: 1408)
!7014 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6985, file: !5769, line: 95, baseType: !110, size: 64, offset: 1472)
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6985, file: !5769, line: 96, baseType: !53, size: 32, offset: 1536)
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6985, file: !5769, line: 98, baseType: !105, size: 160, offset: 1568)
!7017 = !DILocalVariable(name: "stream", arg: 1, scope: !6979, file: !6980, line: 129, type: !6983)
!7018 = !DILocation(line: 129, column: 19, scope: !6979)
!7019 = !DILocation(line: 150, column: 7, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !6979, file: !6980, line: 150, column: 7)
!7021 = !DILocation(line: 150, column: 14, scope: !7020)
!7022 = !DILocation(line: 150, column: 22, scope: !7020)
!7023 = !DILocation(line: 150, column: 27, scope: !7020)
!7024 = !DILocation(line: 150, column: 7, scope: !6979)
!7025 = !DILocation(line: 151, column: 20, scope: !7020)
!7026 = !DILocation(line: 151, column: 12, scope: !7020)
!7027 = !DILocation(line: 151, column: 5, scope: !7020)
!7028 = !DILocation(line: 156, column: 44, scope: !6979)
!7029 = !DILocation(line: 156, column: 3, scope: !6979)
!7030 = !DILocation(line: 158, column: 18, scope: !6979)
!7031 = !DILocation(line: 158, column: 10, scope: !6979)
!7032 = !DILocation(line: 158, column: 3, scope: !6979)
!7033 = !DILocation(line: 235, column: 1, scope: !6979)
!7034 = !DILocalVariable(name: "stream", arg: 1, scope: !7035, file: !6980, line: 129, type: !7038)
!7035 = distinct !DISubprogram(name: "rpl_fflush", scope: !6980, file: !6980, line: 129, type: !7036, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !7072, retainedNodes: !4)
!7036 = !DISubroutineType(types: !7037)
!7037 = !{!53, !7038}
!7038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7039, size: 64)
!7039 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5767, line: 7, baseType: !7040)
!7040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5769, line: 49, size: 1728, elements: !7041)
!7041 = !{!7042, !7043, !7044, !7045, !7046, !7047, !7048, !7049, !7050, !7051, !7052, !7053, !7054, !7055, !7057, !7058, !7059, !7060, !7061, !7062, !7063, !7064, !7065, !7066, !7067, !7068, !7069, !7070, !7071}
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !7040, file: !5769, line: 51, baseType: !53, size: 32)
!7043 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !7040, file: !5769, line: 54, baseType: !6, size: 64, offset: 64)
!7044 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !7040, file: !5769, line: 55, baseType: !6, size: 64, offset: 128)
!7045 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !7040, file: !5769, line: 56, baseType: !6, size: 64, offset: 192)
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !7040, file: !5769, line: 57, baseType: !6, size: 64, offset: 256)
!7047 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !7040, file: !5769, line: 58, baseType: !6, size: 64, offset: 320)
!7048 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !7040, file: !5769, line: 59, baseType: !6, size: 64, offset: 384)
!7049 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !7040, file: !5769, line: 60, baseType: !6, size: 64, offset: 448)
!7050 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !7040, file: !5769, line: 61, baseType: !6, size: 64, offset: 512)
!7051 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !7040, file: !5769, line: 64, baseType: !6, size: 64, offset: 576)
!7052 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !7040, file: !5769, line: 65, baseType: !6, size: 64, offset: 640)
!7053 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !7040, file: !5769, line: 66, baseType: !6, size: 64, offset: 704)
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !7040, file: !5769, line: 68, baseType: !5784, size: 64, offset: 768)
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !7040, file: !5769, line: 70, baseType: !7056, size: 64, offset: 832)
!7056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7040, size: 64)
!7057 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !7040, file: !5769, line: 72, baseType: !53, size: 32, offset: 896)
!7058 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !7040, file: !5769, line: 73, baseType: !53, size: 32, offset: 928)
!7059 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !7040, file: !5769, line: 74, baseType: !1391, size: 64, offset: 960)
!7060 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !7040, file: !5769, line: 77, baseType: !188, size: 16, offset: 1024)
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !7040, file: !5769, line: 78, baseType: !5793, size: 8, offset: 1040)
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !7040, file: !5769, line: 79, baseType: !5795, size: 8, offset: 1048)
!7063 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !7040, file: !5769, line: 81, baseType: !5799, size: 64, offset: 1088)
!7064 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !7040, file: !5769, line: 89, baseType: !5802, size: 64, offset: 1152)
!7065 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !7040, file: !5769, line: 91, baseType: !5804, size: 64, offset: 1216)
!7066 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !7040, file: !5769, line: 92, baseType: !5807, size: 64, offset: 1280)
!7067 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !7040, file: !5769, line: 93, baseType: !7056, size: 64, offset: 1344)
!7068 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !7040, file: !5769, line: 94, baseType: !8, size: 64, offset: 1408)
!7069 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !7040, file: !5769, line: 95, baseType: !110, size: 64, offset: 1472)
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !7040, file: !5769, line: 96, baseType: !53, size: 32, offset: 1536)
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !7040, file: !5769, line: 98, baseType: !105, size: 160, offset: 1568)
!7072 = distinct !DICompileUnit(language: DW_LANG_C99, file: !325, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!7073 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !6980, file: !6980, line: 41, type: !7074, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !324, retainedNodes: !4)
!7074 = !DISubroutineType(types: !7075)
!7075 = !{null, !6983}
!7076 = !DILocalVariable(name: "fp", arg: 1, scope: !7073, file: !6980, line: 41, type: !6983)
!7077 = !DILocation(line: 41, column: 48, scope: !7073)
!7078 = !DILocation(line: 43, column: 7, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7073, file: !6980, line: 43, column: 7)
!7080 = !DILocation(line: 43, column: 11, scope: !7079)
!7081 = !DILocation(line: 43, column: 18, scope: !7079)
!7082 = !DILocation(line: 43, column: 7, scope: !7073)
!7083 = !DILocation(line: 45, column: 13, scope: !7079)
!7084 = !DILocation(line: 45, column: 5, scope: !7079)
!7085 = !DILocation(line: 46, column: 1, scope: !7073)
!7086 = !DILocalVariable(name: "fp", arg: 1, scope: !7087, file: !6980, line: 41, type: !7090)
!7087 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !6980, file: !6980, line: 41, type: !7088, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !7124, retainedNodes: !4)
!7088 = !DISubroutineType(types: !7089)
!7089 = !{null, !7090}
!7090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7091, size: 64)
!7091 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5767, line: 7, baseType: !7092)
!7092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5769, line: 49, size: 1728, elements: !7093)
!7093 = !{!7094, !7095, !7096, !7097, !7098, !7099, !7100, !7101, !7102, !7103, !7104, !7105, !7106, !7107, !7109, !7110, !7111, !7112, !7113, !7114, !7115, !7116, !7117, !7118, !7119, !7120, !7121, !7122, !7123}
!7094 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !7092, file: !5769, line: 51, baseType: !53, size: 32)
!7095 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !7092, file: !5769, line: 54, baseType: !6, size: 64, offset: 64)
!7096 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !7092, file: !5769, line: 55, baseType: !6, size: 64, offset: 128)
!7097 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !7092, file: !5769, line: 56, baseType: !6, size: 64, offset: 192)
!7098 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !7092, file: !5769, line: 57, baseType: !6, size: 64, offset: 256)
!7099 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !7092, file: !5769, line: 58, baseType: !6, size: 64, offset: 320)
!7100 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !7092, file: !5769, line: 59, baseType: !6, size: 64, offset: 384)
!7101 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !7092, file: !5769, line: 60, baseType: !6, size: 64, offset: 448)
!7102 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !7092, file: !5769, line: 61, baseType: !6, size: 64, offset: 512)
!7103 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !7092, file: !5769, line: 64, baseType: !6, size: 64, offset: 576)
!7104 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !7092, file: !5769, line: 65, baseType: !6, size: 64, offset: 640)
!7105 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !7092, file: !5769, line: 66, baseType: !6, size: 64, offset: 704)
!7106 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !7092, file: !5769, line: 68, baseType: !5784, size: 64, offset: 768)
!7107 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !7092, file: !5769, line: 70, baseType: !7108, size: 64, offset: 832)
!7108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7092, size: 64)
!7109 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !7092, file: !5769, line: 72, baseType: !53, size: 32, offset: 896)
!7110 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !7092, file: !5769, line: 73, baseType: !53, size: 32, offset: 928)
!7111 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !7092, file: !5769, line: 74, baseType: !1391, size: 64, offset: 960)
!7112 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !7092, file: !5769, line: 77, baseType: !188, size: 16, offset: 1024)
!7113 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !7092, file: !5769, line: 78, baseType: !5793, size: 8, offset: 1040)
!7114 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !7092, file: !5769, line: 79, baseType: !5795, size: 8, offset: 1048)
!7115 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !7092, file: !5769, line: 81, baseType: !5799, size: 64, offset: 1088)
!7116 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !7092, file: !5769, line: 89, baseType: !5802, size: 64, offset: 1152)
!7117 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !7092, file: !5769, line: 91, baseType: !5804, size: 64, offset: 1216)
!7118 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !7092, file: !5769, line: 92, baseType: !5807, size: 64, offset: 1280)
!7119 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !7092, file: !5769, line: 93, baseType: !7108, size: 64, offset: 1344)
!7120 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !7092, file: !5769, line: 94, baseType: !8, size: 64, offset: 1408)
!7121 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !7092, file: !5769, line: 95, baseType: !110, size: 64, offset: 1472)
!7122 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !7092, file: !5769, line: 96, baseType: !53, size: 32, offset: 1536)
!7123 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !7092, file: !5769, line: 98, baseType: !105, size: 160, offset: 1568)
!7124 = distinct !DICompileUnit(language: DW_LANG_C99, file: !325, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!7125 = distinct !DISubprogram(name: "rpl_fseeko", scope: !7126, file: !7126, line: 28, type: !7127, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !326, retainedNodes: !4)
!7126 = !DIFile(filename: "lib/fseeko.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!7127 = !DISubroutineType(types: !7128)
!7128 = !{!53, !7129, !7163, !53}
!7129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7130, size: 64)
!7130 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5767, line: 7, baseType: !7131)
!7131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5769, line: 49, size: 1728, elements: !7132)
!7132 = !{!7133, !7134, !7135, !7136, !7137, !7138, !7139, !7140, !7141, !7142, !7143, !7144, !7145, !7146, !7148, !7149, !7150, !7151, !7152, !7153, !7154, !7155, !7156, !7157, !7158, !7159, !7160, !7161, !7162}
!7133 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !7131, file: !5769, line: 51, baseType: !53, size: 32)
!7134 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !7131, file: !5769, line: 54, baseType: !6, size: 64, offset: 64)
!7135 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !7131, file: !5769, line: 55, baseType: !6, size: 64, offset: 128)
!7136 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !7131, file: !5769, line: 56, baseType: !6, size: 64, offset: 192)
!7137 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !7131, file: !5769, line: 57, baseType: !6, size: 64, offset: 256)
!7138 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !7131, file: !5769, line: 58, baseType: !6, size: 64, offset: 320)
!7139 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !7131, file: !5769, line: 59, baseType: !6, size: 64, offset: 384)
!7140 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !7131, file: !5769, line: 60, baseType: !6, size: 64, offset: 448)
!7141 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !7131, file: !5769, line: 61, baseType: !6, size: 64, offset: 512)
!7142 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !7131, file: !5769, line: 64, baseType: !6, size: 64, offset: 576)
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !7131, file: !5769, line: 65, baseType: !6, size: 64, offset: 640)
!7144 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !7131, file: !5769, line: 66, baseType: !6, size: 64, offset: 704)
!7145 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !7131, file: !5769, line: 68, baseType: !5784, size: 64, offset: 768)
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !7131, file: !5769, line: 70, baseType: !7147, size: 64, offset: 832)
!7147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7131, size: 64)
!7148 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !7131, file: !5769, line: 72, baseType: !53, size: 32, offset: 896)
!7149 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !7131, file: !5769, line: 73, baseType: !53, size: 32, offset: 928)
!7150 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !7131, file: !5769, line: 74, baseType: !1391, size: 64, offset: 960)
!7151 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !7131, file: !5769, line: 77, baseType: !188, size: 16, offset: 1024)
!7152 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !7131, file: !5769, line: 78, baseType: !5793, size: 8, offset: 1040)
!7153 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !7131, file: !5769, line: 79, baseType: !5795, size: 8, offset: 1048)
!7154 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !7131, file: !5769, line: 81, baseType: !5799, size: 64, offset: 1088)
!7155 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !7131, file: !5769, line: 89, baseType: !5802, size: 64, offset: 1152)
!7156 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !7131, file: !5769, line: 91, baseType: !5804, size: 64, offset: 1216)
!7157 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !7131, file: !5769, line: 92, baseType: !5807, size: 64, offset: 1280)
!7158 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !7131, file: !5769, line: 93, baseType: !7147, size: 64, offset: 1344)
!7159 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !7131, file: !5769, line: 94, baseType: !8, size: 64, offset: 1408)
!7160 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !7131, file: !5769, line: 95, baseType: !110, size: 64, offset: 1472)
!7161 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !7131, file: !5769, line: 96, baseType: !53, size: 32, offset: 1536)
!7162 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !7131, file: !5769, line: 98, baseType: !105, size: 160, offset: 1568)
!7163 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !6106, line: 63, baseType: !1391)
!7164 = !DILocalVariable(name: "fp", arg: 1, scope: !7125, file: !7126, line: 28, type: !7129)
!7165 = !DILocation(line: 28, column: 15, scope: !7125)
!7166 = !DILocalVariable(name: "offset", arg: 2, scope: !7125, file: !7126, line: 28, type: !7163)
!7167 = !DILocation(line: 28, column: 25, scope: !7125)
!7168 = !DILocalVariable(name: "whence", arg: 3, scope: !7125, file: !7126, line: 28, type: !53)
!7169 = !DILocation(line: 28, column: 37, scope: !7125)
!7170 = !DILocation(line: 52, column: 7, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7125, file: !7126, line: 52, column: 7)
!7172 = !DILocation(line: 52, column: 11, scope: !7171)
!7173 = !DILocation(line: 52, column: 27, scope: !7171)
!7174 = !DILocation(line: 52, column: 31, scope: !7171)
!7175 = !DILocation(line: 52, column: 24, scope: !7171)
!7176 = !DILocation(line: 53, column: 7, scope: !7171)
!7177 = !DILocation(line: 53, column: 10, scope: !7171)
!7178 = !DILocation(line: 53, column: 14, scope: !7171)
!7179 = !DILocation(line: 53, column: 31, scope: !7171)
!7180 = !DILocation(line: 53, column: 35, scope: !7171)
!7181 = !DILocation(line: 53, column: 28, scope: !7171)
!7182 = !DILocation(line: 54, column: 7, scope: !7171)
!7183 = !DILocation(line: 54, column: 10, scope: !7171)
!7184 = !DILocation(line: 54, column: 14, scope: !7171)
!7185 = !DILocation(line: 54, column: 28, scope: !7171)
!7186 = !DILocation(line: 52, column: 7, scope: !7125)
!7187 = !DILocalVariable(name: "pos", scope: !7188, file: !7126, line: 117, type: !7163)
!7188 = distinct !DILexicalBlock(scope: !7171, file: !7126, line: 113, column: 5)
!7189 = !DILocation(line: 117, column: 13, scope: !7188)
!7190 = !DILocation(line: 117, column: 34, scope: !7188)
!7191 = !DILocation(line: 117, column: 26, scope: !7188)
!7192 = !DILocation(line: 117, column: 39, scope: !7188)
!7193 = !DILocation(line: 117, column: 47, scope: !7188)
!7194 = !DILocation(line: 117, column: 19, scope: !7188)
!7195 = !DILocation(line: 118, column: 11, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7188, file: !7126, line: 118, column: 11)
!7197 = !DILocation(line: 118, column: 15, scope: !7196)
!7198 = !DILocation(line: 118, column: 11, scope: !7188)
!7199 = !DILocation(line: 124, column: 11, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7196, file: !7126, line: 119, column: 9)
!7201 = !DILocation(line: 129, column: 7, scope: !7188)
!7202 = !DILocation(line: 129, column: 11, scope: !7188)
!7203 = !DILocation(line: 129, column: 18, scope: !7188)
!7204 = !DILocation(line: 130, column: 21, scope: !7188)
!7205 = !DILocation(line: 130, column: 7, scope: !7188)
!7206 = !DILocation(line: 130, column: 11, scope: !7188)
!7207 = !DILocation(line: 130, column: 19, scope: !7188)
!7208 = !DILocation(line: 161, column: 7, scope: !7188)
!7209 = !DILocation(line: 163, column: 18, scope: !7125)
!7210 = !DILocation(line: 163, column: 22, scope: !7125)
!7211 = !DILocation(line: 163, column: 30, scope: !7125)
!7212 = !DILocation(line: 163, column: 10, scope: !7125)
!7213 = !DILocation(line: 163, column: 3, scope: !7125)
!7214 = !DILocation(line: 164, column: 1, scope: !7125)
!7215 = !DILocalVariable(name: "fp", arg: 1, scope: !7216, file: !7126, line: 28, type: !7219)
!7216 = distinct !DISubprogram(name: "rpl_fseeko", scope: !7126, file: !7126, line: 28, type: !7217, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !7253, retainedNodes: !4)
!7217 = !DISubroutineType(types: !7218)
!7218 = !{!53, !7219, !7163, !53}
!7219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7220, size: 64)
!7220 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5767, line: 7, baseType: !7221)
!7221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5769, line: 49, size: 1728, elements: !7222)
!7222 = !{!7223, !7224, !7225, !7226, !7227, !7228, !7229, !7230, !7231, !7232, !7233, !7234, !7235, !7236, !7238, !7239, !7240, !7241, !7242, !7243, !7244, !7245, !7246, !7247, !7248, !7249, !7250, !7251, !7252}
!7223 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !7221, file: !5769, line: 51, baseType: !53, size: 32)
!7224 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !7221, file: !5769, line: 54, baseType: !6, size: 64, offset: 64)
!7225 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !7221, file: !5769, line: 55, baseType: !6, size: 64, offset: 128)
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !7221, file: !5769, line: 56, baseType: !6, size: 64, offset: 192)
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !7221, file: !5769, line: 57, baseType: !6, size: 64, offset: 256)
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !7221, file: !5769, line: 58, baseType: !6, size: 64, offset: 320)
!7229 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !7221, file: !5769, line: 59, baseType: !6, size: 64, offset: 384)
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !7221, file: !5769, line: 60, baseType: !6, size: 64, offset: 448)
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !7221, file: !5769, line: 61, baseType: !6, size: 64, offset: 512)
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !7221, file: !5769, line: 64, baseType: !6, size: 64, offset: 576)
!7233 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !7221, file: !5769, line: 65, baseType: !6, size: 64, offset: 640)
!7234 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !7221, file: !5769, line: 66, baseType: !6, size: 64, offset: 704)
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !7221, file: !5769, line: 68, baseType: !5784, size: 64, offset: 768)
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !7221, file: !5769, line: 70, baseType: !7237, size: 64, offset: 832)
!7237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7221, size: 64)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !7221, file: !5769, line: 72, baseType: !53, size: 32, offset: 896)
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !7221, file: !5769, line: 73, baseType: !53, size: 32, offset: 928)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !7221, file: !5769, line: 74, baseType: !1391, size: 64, offset: 960)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !7221, file: !5769, line: 77, baseType: !188, size: 16, offset: 1024)
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !7221, file: !5769, line: 78, baseType: !5793, size: 8, offset: 1040)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !7221, file: !5769, line: 79, baseType: !5795, size: 8, offset: 1048)
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !7221, file: !5769, line: 81, baseType: !5799, size: 64, offset: 1088)
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !7221, file: !5769, line: 89, baseType: !5802, size: 64, offset: 1152)
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !7221, file: !5769, line: 91, baseType: !5804, size: 64, offset: 1216)
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !7221, file: !5769, line: 92, baseType: !5807, size: 64, offset: 1280)
!7248 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !7221, file: !5769, line: 93, baseType: !7237, size: 64, offset: 1344)
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !7221, file: !5769, line: 94, baseType: !8, size: 64, offset: 1408)
!7250 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !7221, file: !5769, line: 95, baseType: !110, size: 64, offset: 1472)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !7221, file: !5769, line: 96, baseType: !53, size: 32, offset: 1536)
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !7221, file: !5769, line: 98, baseType: !105, size: 160, offset: 1568)
!7253 = distinct !DICompileUnit(language: DW_LANG_C99, file: !327, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!7254 = !DILocalVariable(name: "offset", arg: 2, scope: !7216, file: !7126, line: 28, type: !7163)
!7255 = !DILocalVariable(name: "whence", arg: 3, scope: !7216, file: !7126, line: 28, type: !53)
