; ModuleID = '<stdin>'
source_filename = "ld-temp.o"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.infomap = type { i8*, i8* }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.addrinfo = type { i32, i32, i32, i32, i32, %struct.sockaddr*, i8*, %struct.addrinfo* }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.utmpx = type { i16, i32, [32 x i8], [4 x i8], [32 x i8], [256 x i8], %struct.__exit_status, i32, %struct.anon, [4 x i32], [20 x i8] }
%struct.__exit_status = type { i16, i16 }
%struct.anon = type { i32, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.__mbstate_t = type { i32, %union.anon }
%union.anon = type { i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [44 x i8] c"Usage: %s [OPTION]... [ FILE | ARG1 ARG2 ]\0A\00", align 1
@.str.2 = private unnamed_addr constant [60 x i8] c"Print information about users who are currently logged in.\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [195 x i8] c"\0A  -a, --all         same as -b -d --login -p -r -t -T -u\0A  -b, --boot        time of last system boot\0A  -d, --dead        print dead processes\0A  -H, --heading     print line of column headings\0A\00", align 1
@.str.4 = private unnamed_addr constant [50 x i8] c"  -l, --login       print system login processes\0A\00", align 1
@.str.5 = private unnamed_addr constant [187 x i8] c"      --lookup      attempt to canonicalize hostnames via DNS\0A  -m                only hostname and user associated with stdin\0A  -p, --process     print active processes spawned by init\0A\00", align 1
@.str.6 = private unnamed_addr constant [223 x i8] c"  -q, --count       all login names and number of users logged on\0A  -r, --runlevel    print current runlevel\0A  -s, --short       print only name, line, and time (default)\0A  -t, --time        print last system clock change\0A\00", align 1
@.str.7 = private unnamed_addr constant [163 x i8] c"  -T, -w, --mesg    add user's message status as +, - or ?\0A  -u, --users       list users logged in\0A      --message     same as -T\0A      --writable    same as -T\0A\00", align 1
@.str.8 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.9 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.10 = private unnamed_addr constant [125 x i8] c"\0AIf FILE is not specified, use %s.  %s as FILE is common.\0AIf ARG1 ARG2 given, -m presumed: 'am i' or 'mom likes' are usual.\0A\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"/var/run/utmp\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"/var/log/wtmp\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"who\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.27, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.33 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.18 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.34 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.36 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.37 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.38 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.39 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.14 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.25 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.26 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.27 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.16 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"abdlmpqrstuwHT\00", align 1
@longopts = internal constant [18 x %struct.option] [%struct.option { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0), i32 0, i32* null, i32 97 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0), i32 0, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i32 0, i32 0), i32 0, i32* null, i32 113 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i32 0, i32 0), i32 0, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i32 0, i32 0), i32 0, i32* null, i32 72 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i32 0, i32 0), i32 0, i32* null, i32 108 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i32 0, i32 0), i32 0, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0), i32 0, i32* null, i32 112 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i32 0, i32 0), i32 0, i32* null, i32 114 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i32 0, i32 0), i32 0, i32* null, i32 115 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i32 0, i32 0), i32 0, i32* null, i32 116 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i32 0, i32 0), i32 0, i32* null, i32 117 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.56, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !0
@need_boottime = internal global i8 0, align 1, !dbg !31
@need_deadprocs = internal global i8 0, align 1, !dbg !33
@need_login = internal global i8 0, align 1, !dbg !35
@need_initspawn = internal global i8 0, align 1, !dbg !37
@need_runlevel = internal global i8 0, align 1, !dbg !41
@need_clockchange = internal global i8 0, align 1, !dbg !39
@need_users = internal global i8 0, align 1, !dbg !43
@include_mesg = internal global i8 0, align 1, !dbg !27
@include_idle = internal global i8 0, align 1, !dbg !23
@include_exit = internal global i8 0, align 1, !dbg !29
@include_heading = internal global i8 0, align 1, !dbg !25
@my_line_only = internal global i8 0, align 1, !dbg !45
@short_list = internal global i8 0, align 1, !dbg !19
@short_output = internal global i8 0, align 1, !dbg !21
@do_lookup = internal global i8 0, align 1, !dbg !16
@.str.19 = private unnamed_addr constant [17 x i8] c"Joseph Arceneaux\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str.21 = private unnamed_addr constant [14 x i8] c"Michael Stone\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"%Y-%m-%d %H:%M\00", align 1
@time_format = internal global i8* null, align 8, !dbg !47
@time_format_width = internal global i32 0, align 4, !dbg !51
@.str.23 = private unnamed_addr constant [12 x i8] c"%b %e %H:%M\00", align 1
@optind = external dso_local global i32, align 4
@.str.24 = private unnamed_addr constant [17 x i8] c"extra operand %s\00", align 1
@.str.57 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"/dev/\00", align 1
@.str.74 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@print_deadprocs.exitstr = internal global i8* null, align 8, !dbg !138
@.str.92 = private unnamed_addr constant [6 x i8] c"term=\00", align 1
@.str.93 = private unnamed_addr constant [6 x i8] c"exit=\00", align 1
@.str.94 = private unnamed_addr constant [10 x i8] c"%s%d %s%d\00", align 1
@print_line.mesg = internal global [3 x i8] c" x\00", align 1, !dbg !54
@.str.69 = private unnamed_addr constant [6 x i8] c" %-6s\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c" %10s\00", align 1
@.str.71 = private unnamed_addr constant [7 x i8] c" %-12s\00", align 1
@.str.73 = private unnamed_addr constant [5 x i8] c"   .\00", align 1
@.str.72 = private unnamed_addr constant [33 x i8] c"%-8.*s%s %-12.*s %-*s%s%s %-8s%s\00", align 1
@time_string.buf = internal global [33 x i8] zeroinitializer, align 16, !dbg !123
@.str.90 = private unnamed_addr constant [4 x i8] c"id=\00", align 1
@.str.91 = private unnamed_addr constant [6 x i8] c"LOGIN\00", align 1
@.str.89 = private unnamed_addr constant [13 x i8] c"clock change\00", align 1
@.str.88 = private unnamed_addr constant [12 x i8] c"system boot\00", align 1
@print_runlevel.runlevline = internal global i8* null, align 8, !dbg !131
@.str.84 = private unnamed_addr constant [10 x i8] c"run-level\00", align 1
@.str.85 = private unnamed_addr constant [6 x i8] c"%s %c\00", align 1
@print_runlevel.comment = internal global i8* null, align 8, !dbg !136
@.str.86 = private unnamed_addr constant [6 x i8] c"last=\00", align 1
@.str.87 = private unnamed_addr constant [5 x i8] c"%s%c\00", align 1
@.str.75 = private unnamed_addr constant [5 x i8] c"%.*s\00", align 1
@.str.76 = private unnamed_addr constant [4 x i8] c"  ?\00", align 1
@print_user.hostlen = internal global i64 0, align 8, !dbg !108
@print_user.hoststr = internal global i8* null, align 8, !dbg !62
@.str.77 = private unnamed_addr constant [8 x i8] c"(%s:%s)\00", align 1
@.str.78 = private unnamed_addr constant [5 x i8] c"(%s)\00", align 1
@idle_string.now = internal global i64 -9223372036854775808, align 8, !dbg !113
@.str.79 = private unnamed_addr constant [6 x i8] c"  .  \00", align 1
@.str.80 = private unnamed_addr constant [30 x i8] c"seconds_idle / (60 * 60) < 24\00", align 1
@.str.81 = private unnamed_addr constant [10 x i8] c"src/who.c\00", align 1
@__PRETTY_FUNCTION__.idle_string = private unnamed_addr constant [40 x i8] c"const char *idle_string(time_t, time_t)\00", align 1
@idle_string.idle_hhmm = internal global [6 x i8] zeroinitializer, align 1, !dbg !118
@.str.82 = private unnamed_addr constant [10 x i8] c"%02d:%02d\00", align 1
@.str.83 = private unnamed_addr constant [6 x i8] c" old \00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c"NAME\00", align 1
@.str.63 = private unnamed_addr constant [5 x i8] c"LINE\00", align 1
@.str.64 = private unnamed_addr constant [5 x i8] c"TIME\00", align 1
@.str.65 = private unnamed_addr constant [5 x i8] c"IDLE\00", align 1
@.str.66 = private unnamed_addr constant [4 x i8] c"PID\00", align 1
@.str.67 = private unnamed_addr constant [8 x i8] c"COMMENT\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"EXIT\00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.59 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.60 = private unnamed_addr constant [14 x i8] c"\0A# users=%lu\0A\00", align 1
@.str.40 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c"boot\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.44 = private unnamed_addr constant [8 x i8] c"heading\00", align 1
@.str.45 = private unnamed_addr constant [6 x i8] c"login\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"lookup\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"message\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"mesg\00", align 1
@.str.49 = private unnamed_addr constant [8 x i8] c"process\00", align 1
@.str.50 = private unnamed_addr constant [9 x i8] c"runlevel\00", align 1
@.str.51 = private unnamed_addr constant [6 x i8] c"short\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"users\00", align 1
@.str.54 = private unnamed_addr constant [9 x i8] c"writable\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@Version = internal global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.95, i32 0, i32 0), align 8, !dbg !153
@.str.95 = private unnamed_addr constant [5 x i8] c"8.32\00", align 1
@last_cherror = internal global i32 0, align 4, !dbg !158
@canon_host_r.hints = internal global %struct.addrinfo zeroinitializer, align 8, !dbg !163
@ignore_EPIPE = internal global i8 0, align 1, !dbg !196
@.str.102 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@file_name = internal global i8* null, align 8, !dbg !201
@.str.1.103 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.104 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = internal global i32 1, align 4, !dbg !204
@.str.109 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.110 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.115 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.116 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.117 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8
@program_name = internal global i8* null, align 8, !dbg !211
@program_invocation_name = external dso_local global i8*, align 8
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !218
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !266
@nslots = internal global i32 1, align 4, !dbg !273
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !275
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !264
@.str.10.120 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.121 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.122 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.123 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.124 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.125 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.126 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.127 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.128 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@quote_quoting_options = internal global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !252
@.str.137 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.138 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.139 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.140 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4.141 = private unnamed_addr constant [171 x i8] c"License GPLv3+: GNU GPL version 3 or later <%s>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\00", align 1
@.str.5.142 = private unnamed_addr constant [34 x i8] c"https://gnu.org/licenses/gpl.html\00", align 1
@.str.6.143 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.7.144 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.8.145 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.9.146 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.10.147 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.11.148 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.12.149 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.13.150 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.14.151 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.15.152 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@version_etc_copyright = internal constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !277
@.str.1.165 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.166 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.179 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.180 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@inVal0 = global i32 0
@inVal1 = global i8** null
@.compVal0 = private global [3 x i8] c"-m\00"
@.compVal1 = private global [4 x i8] c"-ma\00"
@.compVal2 = private global [4 x i8] c"-Hm\00"
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @usage(i32) #0 !dbg !334 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !337, metadata !DIExpression()), !dbg !338
  %3 = load i32, i32* %2, align 4, !dbg !339
  %4 = icmp ne i32 %3, 0, !dbg !341
  br i1 %4, label %5, label %28, !dbg !342

5:                                                ; preds = %1
  br label %6, !dbg !343

6:                                                ; preds = %5
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !344
  %8 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #10, !dbg !344
  %9 = load i8*, i8** @program_name, align 8, !dbg !344
  %10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* %8, i8* %9), !dbg !344
  br label %11, !dbg !344

11:                                               ; preds = %6
  %12 = load i32, i32* @x
  %13 = load i32, i32* @y
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i32, i32* @x
  %21 = load i32, i32* @y
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %74, !dbg !344

28:                                               ; preds = %1
  %29 = load i32, i32* @x
  %30 = load i32, i32* @y
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0)) #10, !dbg !346
  %38 = load i8*, i8** @program_name, align 8, !dbg !348
  %39 = call i32 (i8*, ...) @printf(i8* %37, i8* %38), !dbg !349
  %40 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !350
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !350
  %42 = call i32 @fputs_unlocked(i8* %40, %struct._IO_FILE* %41), !dbg !350
  %43 = call i8* @gettext(i8* getelementptr inbounds ([195 x i8], [195 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !351
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !351
  %45 = call i32 @fputs_unlocked(i8* %43, %struct._IO_FILE* %44), !dbg !351
  %46 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i64 0, i64 0)) #10, !dbg !352
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !352
  %48 = call i32 @fputs_unlocked(i8* %46, %struct._IO_FILE* %47), !dbg !352
  %49 = call i8* @gettext(i8* getelementptr inbounds ([187 x i8], [187 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !353
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !353
  %51 = call i32 @fputs_unlocked(i8* %49, %struct._IO_FILE* %50), !dbg !353
  %52 = call i8* @gettext(i8* getelementptr inbounds ([223 x i8], [223 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !354
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !354
  %54 = call i32 @fputs_unlocked(i8* %52, %struct._IO_FILE* %53), !dbg !354
  %55 = call i8* @gettext(i8* getelementptr inbounds ([163 x i8], [163 x i8]* @.str.7, i64 0, i64 0)) #10, !dbg !355
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !355
  %57 = call i32 @fputs_unlocked(i8* %55, %struct._IO_FILE* %56), !dbg !355
  %58 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8, i64 0, i64 0)) #10, !dbg !356
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !356
  %60 = call i32 @fputs_unlocked(i8* %58, %struct._IO_FILE* %59), !dbg !356
  %61 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !357
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !357
  %63 = call i32 @fputs_unlocked(i8* %61, %struct._IO_FILE* %62), !dbg !357
  %64 = call i8* @gettext(i8* getelementptr inbounds ([125 x i8], [125 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !358
  %65 = call i32 (i8*, ...) @printf(i8* %64, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0)), !dbg !359
  call void @emit_ancillary_info(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)), !dbg !360
  %66 = load i32, i32* @x
  %67 = load i32, i32* @y
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %74

74:                                               ; preds = %originalBBpart24, %originalBBpart2
  %75 = load i32, i32* @x
  %76 = load i32, i32* @y
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %74, %originalBB6alteredBB
  %83 = load i32, i32* %2, align 4, !dbg !361
  call void @exit(i32 %83) #12, !dbg !362
  %84 = load i32, i32* @x
  %85 = load i32, i32* @y
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable, !dbg !362

originalBBalteredBB:                              ; preds = %originalBB, %11
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %92 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0)) #10, !dbg !346
  %93 = load i8*, i8** @program_name, align 8, !dbg !348
  %94 = call i32 (i8*, ...) @printf(i8* %92, i8* %93), !dbg !349
  %95 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !350
  %96 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !350
  %97 = call i32 @fputs_unlocked(i8* %95, %struct._IO_FILE* %96), !dbg !350
  %98 = call i8* @gettext(i8* getelementptr inbounds ([195 x i8], [195 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !351
  %99 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !351
  %100 = call i32 @fputs_unlocked(i8* %98, %struct._IO_FILE* %99), !dbg !351
  %101 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i64 0, i64 0)) #10, !dbg !352
  %102 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !352
  %103 = call i32 @fputs_unlocked(i8* %101, %struct._IO_FILE* %102), !dbg !352
  %104 = call i8* @gettext(i8* getelementptr inbounds ([187 x i8], [187 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !353
  %105 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !353
  %106 = call i32 @fputs_unlocked(i8* %104, %struct._IO_FILE* %105), !dbg !353
  %107 = call i8* @gettext(i8* getelementptr inbounds ([223 x i8], [223 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !354
  %108 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !354
  %109 = call i32 @fputs_unlocked(i8* %107, %struct._IO_FILE* %108), !dbg !354
  %110 = call i8* @gettext(i8* getelementptr inbounds ([163 x i8], [163 x i8]* @.str.7, i64 0, i64 0)) #10, !dbg !355
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !355
  %112 = call i32 @fputs_unlocked(i8* %110, %struct._IO_FILE* %111), !dbg !355
  %113 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8, i64 0, i64 0)) #10, !dbg !356
  %114 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !356
  %115 = call i32 @fputs_unlocked(i8* %113, %struct._IO_FILE* %114), !dbg !356
  %116 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !357
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !357
  %118 = call i32 @fputs_unlocked(i8* %116, %struct._IO_FILE* %117), !dbg !357
  %119 = call i8* @gettext(i8* getelementptr inbounds ([125 x i8], [125 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !358
  %120 = call i32 (i8*, ...) @printf(i8* %119, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0)), !dbg !359
  call void @emit_ancillary_info(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)), !dbg !360
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %74
  %121 = load i32, i32* %2, align 4, !dbg !361
  call void @exit(i32 %121) #12, !dbg !362
  br label %originalBB6
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8*) #4 !dbg !363 {
  %2 = alloca i8*, align 8
  %3 = alloca [7 x %struct.infomap], align 16
  %4 = alloca i8*, align 8
  %5 = alloca %struct.infomap*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !367, metadata !DIExpression()), !dbg !368
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %3, metadata !369, metadata !DIExpression()), !dbg !378
  %7 = bitcast [7 x %struct.infomap]* %3 to i8*, !dbg !378
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %7, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !378
  call void @llvm.dbg.declare(metadata i8** %4, metadata !379, metadata !DIExpression()), !dbg !380
  %8 = load i8*, i8** %2, align 8, !dbg !381
  store i8* %8, i8** %4, align 8, !dbg !380
  call void @llvm.dbg.declare(metadata %struct.infomap** %5, metadata !382, metadata !DIExpression()), !dbg !384
  %9 = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %3, i64 0, i64 0, !dbg !385
  store %struct.infomap* %9, %struct.infomap** %5, align 8, !dbg !384
  br label %10, !dbg !386

10:                                               ; preds = %originalBBpart28, %1
  %11 = load i32, i32* @x.1
  %12 = load i32, i32* @y.2
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !387
  %20 = getelementptr inbounds %struct.infomap, %struct.infomap* %19, i32 0, i32 0, !dbg !388
  %21 = load i8*, i8** %20, align 8, !dbg !388
  %22 = icmp ne i8* %21, null, !dbg !387
  %23 = load i32, i32* @x.1
  %24 = load i32, i32* @y.2
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %55, !dbg !389

31:                                               ; preds = %originalBBpart2
  %32 = load i32, i32* @x.1
  %33 = load i32, i32* @y.2
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load i8*, i8** %2, align 8, !dbg !390
  %41 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !390
  %42 = getelementptr inbounds %struct.infomap, %struct.infomap* %41, i32 0, i32 0, !dbg !390
  %43 = load i8*, i8** %42, align 8, !dbg !390
  %44 = call i32 @strcmp(i8* %40, i8* %43) #13, !dbg !390
  %45 = icmp eq i32 %44, 0, !dbg !390
  %46 = xor i1 %45, true, !dbg !391
  %47 = load i32, i32* @x.1
  %48 = load i32, i32* @y.2
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %55

55:                                               ; preds = %originalBBpart24, %originalBBpart2
  %56 = phi i1 [ false, %originalBBpart2 ], [ %46, %originalBBpart24 ], !dbg !392
  br i1 %56, label %57, label %76, !dbg !386

57:                                               ; preds = %55
  %58 = load i32, i32* @x.1
  %59 = load i32, i32* @y.2
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %57, %originalBB6alteredBB
  %66 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !393
  %67 = getelementptr inbounds %struct.infomap, %struct.infomap* %66, i32 1, !dbg !393
  store %struct.infomap* %67, %struct.infomap** %5, align 8, !dbg !393
  %68 = load i32, i32* @x.1
  %69 = load i32, i32* @y.2
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %10, !dbg !386, !llvm.loop !394

76:                                               ; preds = %55
  %77 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !395
  %78 = getelementptr inbounds %struct.infomap, %struct.infomap* %77, i32 0, i32 1, !dbg !397
  %79 = load i8*, i8** %78, align 8, !dbg !397
  %80 = icmp ne i8* %79, null, !dbg !395
  br i1 %80, label %81, label %85, !dbg !398

81:                                               ; preds = %76
  %82 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !399
  %83 = getelementptr inbounds %struct.infomap, %struct.infomap* %82, i32 0, i32 1, !dbg !400
  %84 = load i8*, i8** %83, align 8, !dbg !400
  store i8* %84, i8** %4, align 8, !dbg !401
  br label %85, !dbg !402

85:                                               ; preds = %81, %76
  %86 = load i32, i32* @x.1
  %87 = load i32, i32* @y.2
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %85, %originalBB10alteredBB
  %94 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0)) #10, !dbg !403
  %95 = call i32 (i8*, ...) @printf(i8* %94, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34, i64 0, i64 0)), !dbg !404
  call void @llvm.dbg.declare(metadata i8** %6, metadata !405, metadata !DIExpression()), !dbg !406
  %96 = call i8* @setlocale(i32 5, i8* null) #10, !dbg !407
  store i8* %96, i8** %6, align 8, !dbg !406
  %97 = load i8*, i8** %6, align 8, !dbg !408
  %98 = icmp ne i8* %97, null, !dbg !408
  %99 = load i32, i32* @x.1
  %100 = load i32, i32* @y.2
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %98, label %107, label %147, !dbg !410

107:                                              ; preds = %originalBBpart212
  %108 = load i32, i32* @x.1
  %109 = load i32, i32* @y.2
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %107, %originalBB14alteredBB
  %116 = load i8*, i8** %6, align 8, !dbg !411
  %117 = call i32 @strncmp(i8* %116, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), i64 3) #13, !dbg !411
  %118 = icmp ne i32 %117, 0, !dbg !411
  %119 = load i32, i32* @x.1
  %120 = load i32, i32* @y.2
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %118, label %127, label %147, !dbg !412

127:                                              ; preds = %originalBBpart216
  %128 = load i32, i32* @x.1
  %129 = load i32, i32* @y.2
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %127, %originalBB18alteredBB
  %136 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.36, i64 0, i64 0)) #10, !dbg !413
  %137 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !413
  %138 = call i32 @fputs_unlocked(i8* %136, %struct._IO_FILE* %137), !dbg !413
  %139 = load i32, i32* @x.1
  %140 = load i32, i32* @y.2
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %147, !dbg !415

147:                                              ; preds = %originalBBpart220, %originalBBpart216, %originalBBpart212
  %148 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37, i64 0, i64 0)) #10, !dbg !416
  %149 = load i8*, i8** %2, align 8, !dbg !417
  %150 = call i32 (i8*, ...) @printf(i8* %148, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34, i64 0, i64 0), i8* %149), !dbg !418
  %151 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.38, i64 0, i64 0)) #10, !dbg !419
  %152 = load i8*, i8** %4, align 8, !dbg !420
  %153 = load i8*, i8** %4, align 8, !dbg !421
  %154 = load i8*, i8** %2, align 8, !dbg !422
  %155 = icmp eq i8* %153, %154, !dbg !423
  %156 = zext i1 %155 to i64, !dbg !421
  %157 = select i1 %155, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !421
  %158 = call i32 (i8*, ...) @printf(i8* %151, i8* %152, i8* %157), !dbg !424
  ret void, !dbg !425

originalBBalteredBB:                              ; preds = %originalBB, %10
  %159 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !387
  %160 = getelementptr inbounds %struct.infomap, %struct.infomap* %159, i32 0, i32 0, !dbg !388
  %161 = load i8*, i8** %160, align 8, !dbg !388
  %162 = icmp ne i8* %161, null, !dbg !387
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %163 = load i8*, i8** %2, align 8, !dbg !390
  %164 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !390
  %165 = getelementptr inbounds %struct.infomap, %struct.infomap* %164, i32 0, i32 0, !dbg !390
  %166 = load i8*, i8** %165, align 8, !dbg !390
  %167 = call i32 @strcmp(i8* %163, i8* %166) #13, !dbg !390
  %168 = icmp eq i32 %167, 0, !dbg !390
  %169 = xor i1 %168, true, !dbg !391
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %57
  %170 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !393
  %171 = getelementptr inbounds %struct.infomap, %struct.infomap* %170, i32 1, !dbg !393
  store %struct.infomap* %171, %struct.infomap** %5, align 8, !dbg !393
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %85
  %172 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0)) #10, !dbg !403
  %173 = call i32 (i8*, ...) @printf(i8* %172, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34, i64 0, i64 0)), !dbg !404
  call void @llvm.dbg.declare(metadata !4, metadata !426, metadata !DIExpression()), !dbg !406
  %174 = call i8* @setlocale(i32 5, i8* null) #10, !dbg !407
  store i8* %174, i8** %6, align 8, !dbg !406
  %175 = load i8*, i8** %6, align 8, !dbg !408
  %176 = icmp ne i8* %175, null, !dbg !408
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %107
  %177 = load i8*, i8** %6, align 8, !dbg !411
  %178 = call i32 @strncmp(i8* %177, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), i64 3) #13, !dbg !411
  %179 = icmp ne i32 %178, 0, !dbg !411
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %127
  %180 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.36, i64 0, i64 0)) #10, !dbg !413
  %181 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !413
  %182 = call i32 @fputs_unlocked(i8* %180, %struct._IO_FILE* %181), !dbg !413
  br label %originalBB18
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32, i8**) #4 !dbg !528 {
  store i8** %1, i8*** @inVal1
  store i32 %0, i32* @inVal0
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !532, metadata !DIExpression()), !dbg !533
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !534, metadata !DIExpression()), !dbg !535
  call void @llvm.dbg.declare(metadata i32* %6, metadata !536, metadata !DIExpression()), !dbg !537
  call void @llvm.dbg.declare(metadata i8* %7, metadata !538, metadata !DIExpression()), !dbg !539
  store i8 1, i8* %7, align 1, !dbg !539
  %8 = load i8**, i8*** %5, align 8, !dbg !540
  %9 = getelementptr inbounds i8*, i8** %8, i64 0, !dbg !540
  %10 = load i8*, i8** %9, align 8, !dbg !540
  call void @set_program_name(i8* %10), !dbg !541
  %11 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)) #10, !dbg !542
  %12 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0)) #10, !dbg !543
  %13 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0)) #10, !dbg !544
  %14 = call i32 @atexit(void ()* @close_stdout) #10, !dbg !545
  br label %15, !dbg !546

15:                                               ; preds = %201, %2
  %16 = load i32, i32* %4, align 4, !dbg !547
  %17 = load i8**, i8*** %5, align 8, !dbg !548
  %18 = call i32 @getopt_long(i32 %16, i8** %17, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0), %struct.option* getelementptr inbounds ([18 x %struct.option], [18 x %struct.option]* @longopts, i64 0, i64 0), i32* null) #10, !dbg !549
  store i32 %18, i32* %6, align 4, !dbg !550
  %19 = icmp ne i32 %18, -1, !dbg !551
  br i1 %19, label %20, label %202, !dbg !546

20:                                               ; preds = %15
  %21 = load i32, i32* %6, align 4, !dbg !552
  switch i32 %21, label %184 [
    i32 97, label %22
    i32 98, label %23
    i32 100, label %40
    i32 72, label %41
    i32 108, label %58
    i32 109, label %59
    i32 112, label %60
    i32 113, label %77
    i32 114, label %78
    i32 115, label %79
    i32 116, label %96
    i32 84, label %97
    i32 119, label %97
    i32 117, label %114
    i32 128, label %131
    i32 -130, label %148
    i32 -131, label %165
  ], !dbg !554

22:                                               ; preds = %20
  store i8 1, i8* @need_boottime, align 1, !dbg !555
  store i8 1, i8* @need_deadprocs, align 1, !dbg !557
  store i8 1, i8* @need_login, align 1, !dbg !558
  store i8 1, i8* @need_initspawn, align 1, !dbg !559
  store i8 1, i8* @need_runlevel, align 1, !dbg !560
  store i8 1, i8* @need_clockchange, align 1, !dbg !561
  store i8 1, i8* @need_users, align 1, !dbg !562
  store i8 1, i8* @include_mesg, align 1, !dbg !563
  store i8 1, i8* @include_idle, align 1, !dbg !564
  store i8 1, i8* @include_exit, align 1, !dbg !565
  store i8 0, i8* %7, align 1, !dbg !566
  br label %201, !dbg !567

23:                                               ; preds = %20
  %24 = load i32, i32* @x.3
  %25 = load i32, i32* @y.4
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %23, %originalBBalteredBB
  store i8 1, i8* @need_boottime, align 1, !dbg !568
  store i8 0, i8* %7, align 1, !dbg !569
  %32 = load i32, i32* @x.3
  %33 = load i32, i32* @y.4
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %201, !dbg !570

40:                                               ; preds = %20
  store i8 1, i8* @need_deadprocs, align 1, !dbg !571
  store i8 1, i8* @include_idle, align 1, !dbg !572
  store i8 1, i8* @include_exit, align 1, !dbg !573
  store i8 0, i8* %7, align 1, !dbg !574
  br label %201, !dbg !575

41:                                               ; preds = %20
  %42 = load i32, i32* @x.3
  %43 = load i32, i32* @y.4
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %41, %originalBB1alteredBB
  store i8 1, i8* @include_heading, align 1, !dbg !576
  %50 = load i32, i32* @x.3
  %51 = load i32, i32* @y.4
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %201, !dbg !577

58:                                               ; preds = %20
  store i8 1, i8* @need_login, align 1, !dbg !578
  store i8 1, i8* @include_idle, align 1, !dbg !579
  store i8 0, i8* %7, align 1, !dbg !580
  br label %201, !dbg !581

59:                                               ; preds = %20
  store i8 1, i8* @my_line_only, align 1, !dbg !582
  br label %201, !dbg !583

60:                                               ; preds = %20
  %61 = load i32, i32* @x.3
  %62 = load i32, i32* @y.4
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %60, %originalBB6alteredBB
  store i8 1, i8* @need_initspawn, align 1, !dbg !584
  store i8 0, i8* %7, align 1, !dbg !585
  %69 = load i32, i32* @x.3
  %70 = load i32, i32* @y.4
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %201, !dbg !586

77:                                               ; preds = %20
  store i8 1, i8* @short_list, align 1, !dbg !587
  br label %201, !dbg !588

78:                                               ; preds = %20
  store i8 1, i8* @need_runlevel, align 1, !dbg !589
  store i8 1, i8* @include_idle, align 1, !dbg !590
  store i8 0, i8* %7, align 1, !dbg !591
  br label %201, !dbg !592

79:                                               ; preds = %20
  %80 = load i32, i32* @x.3
  %81 = load i32, i32* @y.4
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %79, %originalBB10alteredBB
  store i8 1, i8* @short_output, align 1, !dbg !593
  %88 = load i32, i32* @x.3
  %89 = load i32, i32* @y.4
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %201, !dbg !594

96:                                               ; preds = %20
  store i8 1, i8* @need_clockchange, align 1, !dbg !595
  store i8 0, i8* %7, align 1, !dbg !596
  br label %201, !dbg !597

97:                                               ; preds = %20, %20
  %98 = load i32, i32* @x.3
  %99 = load i32, i32* @y.4
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %97, %originalBB14alteredBB
  store i8 1, i8* @include_mesg, align 1, !dbg !598
  %106 = load i32, i32* @x.3
  %107 = load i32, i32* @y.4
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %201, !dbg !599

114:                                              ; preds = %20
  %115 = load i32, i32* @x.3
  %116 = load i32, i32* @y.4
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %114, %originalBB18alteredBB
  store i8 1, i8* @need_users, align 1, !dbg !600
  store i8 1, i8* @include_idle, align 1, !dbg !601
  store i8 0, i8* %7, align 1, !dbg !602
  %123 = load i32, i32* @x.3
  %124 = load i32, i32* @y.4
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %201, !dbg !603

131:                                              ; preds = %20
  %132 = load i32, i32* @x.3
  %133 = load i32, i32* @y.4
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %131, %originalBB22alteredBB
  store i8 1, i8* @do_lookup, align 1, !dbg !604
  %140 = load i32, i32* @x.3
  %141 = load i32, i32* @y.4
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %201, !dbg !605

148:                                              ; preds = %20
  %149 = load i32, i32* @x.3
  %150 = load i32, i32* @y.4
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %148, %originalBB26alteredBB
  call void @usage(i32 0) #14, !dbg !606
  %157 = load i32, i32* @x.3
  %158 = load i32, i32* @y.4
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  unreachable, !dbg !606

165:                                              ; preds = %20
  %166 = load i32, i32* @x.3
  %167 = load i32, i32* @y.4
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %165, %originalBB30alteredBB
  %174 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !607
  %175 = load i8*, i8** @Version, align 8, !dbg !607
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %174, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i8* %175, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i64 0, i64 0), i8* null), !dbg !607
  call void @exit(i32 0) #12, !dbg !607
  %176 = load i32, i32* @x.3
  %177 = load i32, i32* @y.4
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  unreachable, !dbg !607

184:                                              ; preds = %20
  %185 = load i32, i32* @x.3
  %186 = load i32, i32* @y.4
  %187 = sub i32 %185, 1
  %188 = mul i32 %185, %187
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %190, %191
  br i1 %192, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %184, %originalBB34alteredBB
  call void @usage(i32 1) #14, !dbg !608
  %193 = load i32, i32* @x.3
  %194 = load i32, i32* @y.4
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  unreachable, !dbg !608

201:                                              ; preds = %originalBBpart224, %originalBBpart220, %originalBBpart216, %96, %originalBBpart212, %78, %77, %originalBBpart28, %59, %58, %originalBBpart24, %40, %originalBBpart2, %22
  br label %15, !dbg !546, !llvm.loop !609

202:                                              ; preds = %15
  %203 = load i32, i32* @x.3
  %204 = load i32, i32* @y.4
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %202, %originalBB38alteredBB
  %211 = load i8, i8* %7, align 1, !dbg !611
  %212 = trunc i8 %211 to i1, !dbg !611
  %213 = load i32, i32* @x.3
  %214 = load i32, i32* @y.4
  %215 = sub i32 %213, 1
  %216 = mul i32 %213, %215
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %218, %219
  br i1 %220, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %212, label %221, label %238, !dbg !613

221:                                              ; preds = %originalBBpart240
  %222 = load i32, i32* @x.3
  %223 = load i32, i32* @y.4
  %224 = sub i32 %222, 1
  %225 = mul i32 %222, %224
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %227, %228
  br i1 %229, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %221, %originalBB42alteredBB
  store i8 1, i8* @need_users, align 1, !dbg !614
  store i8 1, i8* @short_output, align 1, !dbg !616
  %230 = load i32, i32* @x.3
  %231 = load i32, i32* @y.4
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %238, !dbg !617

238:                                              ; preds = %originalBBpart244, %originalBBpart240
  %239 = load i32, i32* @x.3
  %240 = load i32, i32* @y.4
  %241 = sub i32 %239, 1
  %242 = mul i32 %239, %241
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %244, %245
  br i1 %246, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %238, %originalBB46alteredBB
  %247 = load i8, i8* @include_exit, align 1, !dbg !618
  %248 = trunc i8 %247 to i1, !dbg !618
  %249 = load i32, i32* @x.3
  %250 = load i32, i32* @y.4
  %251 = sub i32 %249, 1
  %252 = mul i32 %249, %251
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %254, %255
  br i1 %256, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br i1 %248, label %257, label %258, !dbg !620

257:                                              ; preds = %originalBBpart248
  store i8 0, i8* @short_output, align 1, !dbg !621
  br label %258, !dbg !623

258:                                              ; preds = %257, %originalBBpart248
  %259 = call zeroext i1 @hard_locale(i32 2), !dbg !624
  br i1 %259, label %260, label %277, !dbg !626

260:                                              ; preds = %258
  %261 = load i32, i32* @x.3
  %262 = load i32, i32* @y.4
  %263 = sub i32 %261, 1
  %264 = mul i32 %261, %263
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %262, 10
  %268 = or i1 %266, %267
  br i1 %268, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %260, %originalBB50alteredBB
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0), i8** @time_format, align 8, !dbg !627
  store i32 16, i32* @time_format_width, align 4, !dbg !629
  %269 = load i32, i32* @x.3
  %270 = load i32, i32* @y.4
  %271 = sub i32 %269, 1
  %272 = mul i32 %269, %271
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %274, %275
  br i1 %276, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %278, !dbg !630

277:                                              ; preds = %258
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0), i8** @time_format, align 8, !dbg !631
  store i32 12, i32* @time_format_width, align 4, !dbg !633
  br label %278

278:                                              ; preds = %277, %originalBBpart252
  %279 = load i32, i32* %4, align 4, !dbg !634
  %280 = load i32, i32* @optind, align 4, !dbg !635
  %281 = sub nsw i32 %279, %280, !dbg !636
  switch i32 %281, label %322 [
    i32 2, label %282
    i32 -1, label %299
    i32 0, label %299
    i32 1, label %300
  ], !dbg !637

282:                                              ; preds = %278
  %283 = load i32, i32* @x.3
  %284 = load i32, i32* @y.4
  %285 = sub i32 %283, 1
  %286 = mul i32 %283, %285
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %288, %289
  br i1 %290, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %282, %originalBB54alteredBB
  store i8 1, i8* @my_line_only, align 1, !dbg !638
  %291 = load i32, i32* @x.3
  %292 = load i32, i32* @y.4
  %293 = sub i32 %291, 1
  %294 = mul i32 %291, %293
  %295 = urem i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %296, %297
  br i1 %298, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %299, !dbg !640

299:                                              ; preds = %originalBBpart256, %278, %278
  call void @who(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i32 1), !dbg !641
  br label %347, !dbg !642

300:                                              ; preds = %278
  %301 = load i32, i32* @x.3
  %302 = load i32, i32* @y.4
  %303 = sub i32 %301, 1
  %304 = mul i32 %301, %303
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %302, 10
  %308 = or i1 %306, %307
  br i1 %308, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %300, %originalBB58alteredBB
  %309 = load i8**, i8*** %5, align 8, !dbg !643
  %310 = load i32, i32* @optind, align 4, !dbg !644
  %311 = sext i32 %310 to i64, !dbg !643
  %312 = getelementptr inbounds i8*, i8** %309, i64 %311, !dbg !643
  %313 = load i8*, i8** %312, align 8, !dbg !643
  call void @who(i8* %313, i32 0), !dbg !645
  %314 = load i32, i32* @x.3
  %315 = load i32, i32* @y.4
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %347, !dbg !646

322:                                              ; preds = %278
  %323 = load i32, i32* @x.3
  %324 = load i32, i32* @y.4
  %325 = sub i32 %323, 1
  %326 = mul i32 %323, %325
  %327 = urem i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %328, %329
  br i1 %330, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %322, %originalBB62alteredBB
  %331 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i64 0, i64 0)) #10, !dbg !647
  %332 = load i8**, i8*** %5, align 8, !dbg !648
  %333 = load i32, i32* @optind, align 4, !dbg !649
  %334 = add nsw i32 %333, 2, !dbg !650
  %335 = sext i32 %334 to i64, !dbg !648
  %336 = getelementptr inbounds i8*, i8** %332, i64 %335, !dbg !648
  %337 = load i8*, i8** %336, align 8, !dbg !648
  %338 = call i8* @quote(i8* %337), !dbg !651
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %331, i8* %338), !dbg !652
  call void @usage(i32 1) #14, !dbg !653
  %339 = load i32, i32* @x.3
  %340 = load i32, i32* @y.4
  %341 = sub i32 %339, 1
  %342 = mul i32 %339, %341
  %343 = urem i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %344, %345
  br i1 %346, label %originalBBpart268, label %originalBB62alteredBB

originalBBpart268:                                ; preds = %originalBB62
  unreachable, !dbg !653

347:                                              ; preds = %originalBBpart260, %299
  ret i32 0, !dbg !654

originalBBalteredBB:                              ; preds = %originalBB, %23
  store i8 1, i8* @need_boottime, align 1, !dbg !568
  store i8 0, i8* %7, align 1, !dbg !569
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %41
  store i8 1, i8* @include_heading, align 1, !dbg !576
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %60
  store i8 1, i8* @need_initspawn, align 1, !dbg !584
  store i8 0, i8* %7, align 1, !dbg !585
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %79
  store i8 1, i8* @short_output, align 1, !dbg !593
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %97
  store i8 1, i8* @include_mesg, align 1, !dbg !598
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %114
  store i8 1, i8* @need_users, align 1, !dbg !600
  store i8 1, i8* @include_idle, align 1, !dbg !601
  store i8 0, i8* %7, align 1, !dbg !602
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %131
  store i8 1, i8* @do_lookup, align 1, !dbg !604
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %148
  call void @usage(i32 0) #14, !dbg !606
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %165
  %348 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !607
  %349 = load i8*, i8** @Version, align 8, !dbg !607
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %348, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i8* %349, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i64 0, i64 0), i8* null), !dbg !607
  call void @exit(i32 0) #12, !dbg !607
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %184
  call void @usage(i32 1) #14, !dbg !608
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %202
  %350 = load i8, i8* %7, align 1, !dbg !611
  %351 = trunc i8 %350 to i1, !dbg !611
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %221
  store i8 1, i8* @need_users, align 1, !dbg !614
  store i8 1, i8* @short_output, align 1, !dbg !616
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %238
  %352 = load i8, i8* @include_exit, align 1, !dbg !618
  %353 = trunc i8 %352 to i1, !dbg !618
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %260
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0), i8** @time_format, align 8, !dbg !627
  store i32 16, i32* @time_format_width, align 4, !dbg !629
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %282
  store i8 1, i8* @my_line_only, align 1, !dbg !638
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %300
  %354 = load i8**, i8*** %5, align 8, !dbg !643
  %355 = load i32, i32* @optind, align 4, !dbg !644
  %356 = sext i32 %355 to i64, !dbg !643
  %357 = getelementptr inbounds i8*, i8** %354, i64 %356, !dbg !643
  %358 = load i8*, i8** %357, align 8, !dbg !643
  call void @who(i8* %358, i32 0), !dbg !645
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %322
  %359 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i64 0, i64 0)) #10, !dbg !647
  %360 = load i8**, i8*** %5, align 8, !dbg !648
  %361 = load i32, i32* @optind, align 4, !dbg !649
  %_ = sub i32 0, %361
  %gen = add i32 %_, 2
  %_63 = shl i32 %361, 2
  %_64 = shl i32 %361, 2
  %_65 = sub i32 0, %361
  %gen66 = add i32 %_65, 2
  %362 = add nsw i32 %361, 2, !dbg !650
  %363 = sext i32 %362 to i64, !dbg !648
  %364 = getelementptr inbounds i8*, i8** %360, i64 %363, !dbg !648
  %365 = load i8*, i8** %364, align 8, !dbg !648
  %366 = call i8* @quote(i8* %365), !dbg !651
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %359, i8* %366), !dbg !652
  call void @usage(i32 1) #14, !dbg !653
  br label %originalBB62
}

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @who(i8*, i32) #4 !dbg !655 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca %struct.utmpx*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !658, metadata !DIExpression()), !dbg !659
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !660, metadata !DIExpression()), !dbg !661
  call void @llvm.dbg.declare(metadata i64* %5, metadata !662, metadata !DIExpression()), !dbg !663
  call void @llvm.dbg.declare(metadata %struct.utmpx** %6, metadata !664, metadata !DIExpression()), !dbg !666
  %7 = load i8*, i8** %3, align 8, !dbg !667
  %8 = load i32, i32* %4, align 4, !dbg !669
  %9 = call i32 @read_utmp(i8* %7, i64* %5, %struct.utmpx** %6, i32 %8), !dbg !670
  %10 = icmp ne i32 %9, 0, !dbg !671
  br i1 %10, label %11, label %16, !dbg !672

11:                                               ; preds = %2
  %12 = call i32* @__errno_location() #15, !dbg !673
  %13 = load i32, i32* %12, align 4, !dbg !673
  %14 = load i8*, i8** %3, align 8, !dbg !673
  %15 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %14), !dbg !673
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %13, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i64 0, i64 0), i8* %15), !dbg !673
  unreachable, !dbg !673

16:                                               ; preds = %2
  %17 = load i8, i8* @short_list, align 1, !dbg !674
  %18 = trunc i8 %17 to i1, !dbg !674
  br i1 %18, label %19, label %38, !dbg !676

19:                                               ; preds = %16
  %20 = load i32, i32* @x.5
  %21 = load i32, i32* @y.6
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = load i64, i64* %5, align 8, !dbg !677
  %29 = load %struct.utmpx*, %struct.utmpx** %6, align 8, !dbg !678
  call void @list_entries_who(i64 %28, %struct.utmpx* %29), !dbg !679
  %30 = load i32, i32* @x.5
  %31 = load i32, i32* @y.6
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %41, !dbg !679

38:                                               ; preds = %16
  %39 = load i64, i64* %5, align 8, !dbg !680
  %40 = load %struct.utmpx*, %struct.utmpx** %6, align 8, !dbg !681
  call void @scan_entries(i64 %39, %struct.utmpx* %40), !dbg !682
  br label %41

41:                                               ; preds = %38, %originalBBpart2
  %42 = load i32, i32* @x.5
  %43 = load i32, i32* @y.6
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %41, %originalBB1alteredBB
  %50 = load %struct.utmpx*, %struct.utmpx** %6, align 8, !dbg !683
  %51 = bitcast %struct.utmpx* %50 to i8*, !dbg !683
  call void @free(i8* %51) #10, !dbg !684
  %52 = load i32, i32* @x.5
  %53 = load i32, i32* @y.6
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void, !dbg !685

originalBBalteredBB:                              ; preds = %originalBB, %19
  %60 = load i64, i64* %5, align 8, !dbg !677
  %61 = load %struct.utmpx*, %struct.utmpx** %6, align 8, !dbg !678
  call void @list_entries_who(i64 %60, %struct.utmpx* %61), !dbg !679
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %41
  %62 = load %struct.utmpx*, %struct.utmpx** %6, align 8, !dbg !683
  %63 = bitcast %struct.utmpx* %62 to i8*, !dbg !683
  call void @free(i8* %63) #10, !dbg !684
  br label %originalBB1
}

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_entries_who(i64, %struct.utmpx*) #4 !dbg !686 {
  %3 = load i32, i32* @x.7
  %4 = load i32, i32* @y.8
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i64, align 8
  %12 = alloca %struct.utmpx*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  store i64 %0, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !689, metadata !DIExpression()), !dbg !690
  store %struct.utmpx* %1, %struct.utmpx** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %12, metadata !691, metadata !DIExpression()), !dbg !692
  call void @llvm.dbg.declare(metadata i64* %13, metadata !693, metadata !DIExpression()), !dbg !694
  store i64 0, i64* %13, align 8, !dbg !694
  call void @llvm.dbg.declare(metadata i8** %14, metadata !695, metadata !DIExpression()), !dbg !696
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8** %14, align 8, !dbg !696
  %16 = load i32, i32* @x.7
  %17 = load i32, i32* @y.8
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %24, !dbg !697

24:                                               ; preds = %66, %originalBBpart2
  %25 = load i64, i64* %11, align 8, !dbg !698
  %26 = add i64 %25, -1, !dbg !698
  store i64 %26, i64* %11, align 8, !dbg !698
  %27 = icmp ne i64 %25, 0, !dbg !697
  br i1 %27, label %28, label %69, !dbg !697

28:                                               ; preds = %24
  %29 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !699
  %30 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %29, i32 0, i32 4, !dbg !699
  %31 = getelementptr inbounds [32 x i8], [32 x i8]* %30, i64 0, i64 0, !dbg !699
  %32 = load i8, i8* %31, align 4, !dbg !699
  %33 = sext i8 %32 to i32, !dbg !699
  %34 = icmp ne i32 %33, 0, !dbg !699
  br i1 %34, label %35, label %66, !dbg !699

35:                                               ; preds = %28
  %36 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !699
  %37 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %36, i32 0, i32 0, !dbg !699
  %38 = load i16, i16* %37, align 4, !dbg !699
  %39 = sext i16 %38 to i32, !dbg !699
  %40 = icmp eq i32 %39, 7, !dbg !699
  br i1 %40, label %41, label %66, !dbg !702

41:                                               ; preds = %35
  call void @llvm.dbg.declare(metadata i8** %15, metadata !703, metadata !DIExpression()), !dbg !705
  %42 = load i32, i32* @x.7
  %43 = load i32, i32* @y.8
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %41, %originalBB1alteredBB
  %50 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !706
  %51 = call i8* @extract_trimmed_name(%struct.utmpx* %50), !dbg !707
  store i8* %51, i8** %15, align 8, !dbg !708
  %52 = load i8*, i8** %14, align 8, !dbg !709
  %53 = load i8*, i8** %15, align 8, !dbg !710
  %54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0), i8* %52, i8* %53), !dbg !711
  %55 = load i8*, i8** %15, align 8, !dbg !712
  call void @free(i8* %55) #10, !dbg !713
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.59, i64 0, i64 0), i8** %14, align 8, !dbg !714
  %56 = load i64, i64* %13, align 8, !dbg !715
  %57 = add i64 %56, 1, !dbg !715
  store i64 %57, i64* %13, align 8, !dbg !715
  %58 = load i32, i32* @x.7
  %59 = load i32, i32* @y.8
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart27, label %originalBB1alteredBB

originalBBpart27:                                 ; preds = %originalBB1
  br label %66, !dbg !716

66:                                               ; preds = %originalBBpart27, %35, %28
  %67 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !717
  %68 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %67, i32 1, !dbg !717
  store %struct.utmpx* %68, %struct.utmpx** %12, align 8, !dbg !717
  br label %24, !dbg !697, !llvm.loop !718

69:                                               ; preds = %24
  %70 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.60, i64 0, i64 0)) #10, !dbg !720
  %71 = load i64, i64* %13, align 8, !dbg !721
  %72 = call i32 (i8*, ...) @printf(i8* %70, i64 %71), !dbg !722
  ret void, !dbg !723

originalBBalteredBB:                              ; preds = %originalBB, %2
  %73 = alloca i64, align 8
  %74 = alloca %struct.utmpx*, align 8
  %75 = alloca i64, align 8
  %76 = alloca i8*, align 8
  %77 = alloca i8*, align 8
  store i64 %0, i64* %73, align 8
  call void @llvm.dbg.declare(metadata i64* %73, metadata !724, metadata !DIExpression()), !dbg !690
  store %struct.utmpx* %1, %struct.utmpx** %74, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %74, metadata !828, metadata !DIExpression()), !dbg !692
  call void @llvm.dbg.declare(metadata i64* %75, metadata !829, metadata !DIExpression()), !dbg !694
  store i64 0, i64* %75, align 8, !dbg !694
  call void @llvm.dbg.declare(metadata i8** %76, metadata !830, metadata !DIExpression()), !dbg !696
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8** %76, align 8, !dbg !696
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %41
  %78 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !706
  %79 = call i8* @extract_trimmed_name(%struct.utmpx* %78), !dbg !707
  store i8* %79, i8** %15, align 8, !dbg !708
  %80 = load i8*, i8** %14, align 8, !dbg !709
  %81 = load i8*, i8** %15, align 8, !dbg !710
  %82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0), i8* %80, i8* %81), !dbg !711
  %83 = load i8*, i8** %15, align 8, !dbg !712
  call void @free(i8* %83) #10, !dbg !713
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.59, i64 0, i64 0), i8** %14, align 8, !dbg !714
  %84 = load i64, i64* %13, align 8, !dbg !715
  %_ = sub i64 %84, 1
  %gen = mul i64 %_, 1
  %_2 = sub i64 %84, 1
  %gen3 = mul i64 %_2, 1
  %_4 = sub i64 0, %84
  %gen5 = add i64 %_4, 1
  %85 = add i64 %84, 1, !dbg !715
  store i64 %85, i64* %13, align 8, !dbg !715
  br label %originalBB1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @scan_entries(i64, %struct.utmpx*) #4 !dbg !831 {
  %3 = alloca i64, align 8
  %4 = alloca %struct.utmpx*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !832, metadata !DIExpression()), !dbg !833
  store %struct.utmpx* %1, %struct.utmpx** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %4, metadata !834, metadata !DIExpression()), !dbg !835
  call void @llvm.dbg.declare(metadata i8** %5, metadata !836, metadata !DIExpression()), !dbg !837
  call void @llvm.dbg.declare(metadata i64* %6, metadata !838, metadata !DIExpression()), !dbg !839
  store i64 -9223372036854775808, i64* %6, align 8, !dbg !839
  %7 = load i8, i8* @include_heading, align 1, !dbg !840
  %8 = trunc i8 %7 to i1, !dbg !840
  br i1 %8, label %9, label %26, !dbg !842

9:                                                ; preds = %2
  %10 = load i32, i32* @x.9
  %11 = load i32, i32* @y.10
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  call void @print_heading(), !dbg !843
  %18 = load i32, i32* @x.9
  %19 = load i32, i32* @y.10
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %26, !dbg !843

26:                                               ; preds = %originalBBpart2, %2
  %27 = load i8, i8* @my_line_only, align 1, !dbg !844
  %28 = trunc i8 %27 to i1, !dbg !844
  br i1 %28, label %29, label %216, !dbg !846

29:                                               ; preds = %26
  %30 = load i32, i32* @x.9
  %31 = load i32, i32* @y.10
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = call i8* @ttyname(i32 0) #10, !dbg !847
  store i8* %38, i8** %5, align 8, !dbg !849
  %39 = load i8*, i8** %5, align 8, !dbg !850
  %40 = icmp ne i8* %39, null, !dbg !850
  %41 = load i32, i32* @x.9
  %42 = load i32, i32* @y.10
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %40, label %66, label %49, !dbg !852

49:                                               ; preds = %originalBBpart24
  %50 = load i32, i32* @x.9
  %51 = load i32, i32* @y.10
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %49, %originalBB6alteredBB
  %58 = load i32, i32* @x.9
  %59 = load i32, i32* @y.10
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %690, !dbg !853

66:                                               ; preds = %originalBBpart24
  %67 = load i32, i32* @x.9
  %68 = load i32, i32* @y.10
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %66, %originalBB10alteredBB
  %75 = load i8*, i8** %5, align 8, !dbg !854
  %76 = call i32 @strncmp(i8* %75, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0), i64 5) #13, !dbg !854
  %77 = load i32, i32* @x.9
  %78 = load i32, i32* @y.10
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %85, !dbg !856

85:                                               ; preds = %originalBBpart212
  %86 = load i32, i32* @x.9
  %87 = load i32, i32* @y.10
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %85, %originalBB14alteredBB
  %collatzVar = alloca i32
  %94 = load i32, i32* @x.9
  %95 = load i32, i32* @y.10
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %102

102:                                              ; preds = %originalBBpart216
  %103 = load i32, i32* @inVal0
  %104 = icmp sgt i32 %103, 1
  br i1 %104, label %106, label %105

105:                                              ; preds = %102
  store i32 45, i32* %collatzVar
  br label %106

106:                                              ; preds = %105, %102
  %107 = load i8**, i8*** @inVal1
  %108 = getelementptr inbounds i8*, i8** %107, i64 1
  %109 = load i8*, i8** %108
  %controle = call i32 @controle(i8* %109, i32 0)
  store i32 %controle, i32* %collatzVar
  br label %110

110:                                              ; preds = %192, %originalBBpart260, %106
  %111 = load i32, i32* @x.9
  %112 = load i32, i32* @y.10
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %110, %originalBB18alteredBB
  %119 = load i32, i32* %collatzVar
  %120 = icmp sgt i32 %119, 1
  %121 = load i32, i32* @x.9
  %122 = load i32, i32* @y.10
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %120, label %129, label %215

129:                                              ; preds = %originalBBpart220
  %130 = load i32, i32* @x.9
  %131 = load i32, i32* @y.10
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %129, %originalBB22alteredBB
  %138 = load i32, i32* %collatzVar
  %139 = srem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = load i32, i32* @x.9
  %142 = load i32, i32* @y.10
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart232, label %originalBB22alteredBB

originalBBpart232:                                ; preds = %originalBB22
  br i1 %140, label %149, label %152

149:                                              ; preds = %originalBBpart232
  %150 = load i32, i32* %collatzVar
  %151 = sdiv i32 %150, 2
  store i32 %151, i32* %collatzVar
  br label %172

152:                                              ; preds = %originalBBpart232
  %153 = load i32, i32* @x.9
  %154 = load i32, i32* @y.10
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %152, %originalBB34alteredBB
  %161 = load i32, i32* %collatzVar
  %162 = mul i32 %161, 3
  %163 = add i32 %162, 1
  store i32 %163, i32* %collatzVar
  %164 = load i32, i32* @x.9
  %165 = load i32, i32* @y.10
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBBpart248, label %originalBB34alteredBB

originalBBpart248:                                ; preds = %originalBB34
  br label %172

172:                                              ; preds = %originalBBpart248, %149
  %173 = load i32, i32* @x.9
  %174 = load i32, i32* @y.10
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %172, %originalBB50alteredBB
  %181 = load i32, i32* %collatzVar
  %182 = sub i32 %76, %181
  %183 = icmp sgt i32 %182, -2
  %184 = load i32, i32* @x.9
  %185 = load i32, i32* @y.10
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBBpart260, label %originalBB50alteredBB

originalBBpart260:                                ; preds = %originalBB50
  br i1 %183, label %192, label %110

192:                                              ; preds = %originalBBpart260
  %193 = load i32, i32* %collatzVar
  %194 = add i32 %76, %193
  %195 = icmp slt i32 %194, 2
  br i1 %195, label %196, label %110

196:                                              ; preds = %192
  %197 = load i32, i32* @x.9
  %198 = load i32, i32* @y.10
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %196, %originalBB62alteredBB
  %205 = load i8*, i8** %5, align 8, !dbg !857
  %206 = getelementptr inbounds i8, i8* %205, i64 5, !dbg !857
  store i8* %206, i8** %5, align 8, !dbg !857
  %207 = load i32, i32* @x.9
  %208 = load i32, i32* @y.10
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %215, !dbg !858

215:                                              ; preds = %originalBBpart264, %originalBBpart220
  br label %216, !dbg !859

216:                                              ; preds = %215, %26
  %217 = load i32, i32* @x.9
  %218 = load i32, i32* @y.10
  %219 = sub i32 %217, 1
  %220 = mul i32 %217, %219
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %222, %223
  br i1 %224, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %216, %originalBB66alteredBB
  %225 = load i32, i32* @x.9
  %226 = load i32, i32* @y.10
  %227 = sub i32 %225, 1
  %228 = mul i32 %225, %227
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %226, 10
  %232 = or i1 %230, %231
  br i1 %232, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %233, !dbg !860

233:                                              ; preds = %687, %originalBBpart268
  %234 = load i32, i32* @x.9
  %235 = load i32, i32* @y.10
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %233, %originalBB70alteredBB
  %242 = load i64, i64* %3, align 8, !dbg !861
  %243 = add i64 %242, -1, !dbg !861
  store i64 %243, i64* %3, align 8, !dbg !861
  %244 = icmp ne i64 %242, 0, !dbg !860
  %245 = load i32, i32* @x.9
  %246 = load i32, i32* @y.10
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBBpart280, label %originalBB70alteredBB

originalBBpart280:                                ; preds = %originalBB70
  br i1 %244, label %253, label %690, !dbg !860

253:                                              ; preds = %originalBBpart280
  %254 = load i32, i32* @x.9
  %255 = load i32, i32* @y.10
  %256 = sub i32 %254, 1
  %257 = mul i32 %254, %256
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %259, %260
  br i1 %261, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %253, %originalBB82alteredBB
  %262 = load i8, i8* @my_line_only, align 1, !dbg !862
  %263 = trunc i8 %262 to i1, !dbg !862
  %264 = load i32, i32* @x.9
  %265 = load i32, i32* @y.10
  %266 = sub i32 %264, 1
  %267 = mul i32 %264, %266
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %269, %270
  br i1 %271, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br i1 %263, label %272, label %279, !dbg !865

272:                                              ; preds = %originalBBpart284
  %273 = load i8*, i8** %5, align 8, !dbg !866
  %274 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !866
  %275 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %274, i32 0, i32 2, !dbg !866
  %276 = getelementptr inbounds [32 x i8], [32 x i8]* %275, i64 0, i64 0, !dbg !866
  %277 = call i32 @strncmp(i8* %273, i8* %276, i64 32) #13, !dbg !866
  %278 = icmp eq i32 %277, 0, !dbg !866
  br i1 %278, label %279, label %643, !dbg !867

279:                                              ; preds = %272, %originalBBpart284
  %280 = load i8, i8* @need_users, align 1, !dbg !868
  %281 = trunc i8 %280 to i1, !dbg !868
  br i1 %281, label %282, label %314, !dbg !871

282:                                              ; preds = %279
  %283 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !872
  %284 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %283, i32 0, i32 4, !dbg !872
  %285 = getelementptr inbounds [32 x i8], [32 x i8]* %284, i64 0, i64 0, !dbg !872
  %286 = load i8, i8* %285, align 4, !dbg !872
  %287 = sext i8 %286 to i32, !dbg !872
  %288 = icmp ne i32 %287, 0, !dbg !872
  br i1 %288, label %289, label %314, !dbg !872

289:                                              ; preds = %282
  %290 = load i32, i32* @x.9
  %291 = load i32, i32* @y.10
  %292 = sub i32 %290, 1
  %293 = mul i32 %290, %292
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %295, %296
  br i1 %297, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %289, %originalBB86alteredBB
  %298 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !872
  %299 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %298, i32 0, i32 0, !dbg !872
  %300 = load i16, i16* %299, align 4, !dbg !872
  %301 = sext i16 %300 to i32, !dbg !872
  %302 = icmp eq i32 %301, 7, !dbg !872
  %303 = load i32, i32* @x.9
  %304 = load i32, i32* @y.10
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br i1 %302, label %311, label %314, !dbg !873

311:                                              ; preds = %originalBBpart288
  %312 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !874
  %313 = load i64, i64* %6, align 8, !dbg !875
  call void @print_user(%struct.utmpx* %312, i64 %313), !dbg !876
  br label %626, !dbg !876

314:                                              ; preds = %originalBBpart288, %282, %279
  %315 = load i32, i32* @x.9
  %316 = load i32, i32* @y.10
  %317 = sub i32 %315, 1
  %318 = mul i32 %315, %317
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %320, %321
  br i1 %322, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %314, %originalBB90alteredBB
  %323 = load i8, i8* @need_runlevel, align 1, !dbg !877
  %324 = trunc i8 %323 to i1, !dbg !877
  %325 = load i32, i32* @x.9
  %326 = load i32, i32* @y.10
  %327 = sub i32 %325, 1
  %328 = mul i32 %325, %327
  %329 = urem i32 %328, 2
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %330, %331
  br i1 %332, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br i1 %324, label %333, label %341, !dbg !879

333:                                              ; preds = %originalBBpart292
  %334 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !880
  %335 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %334, i32 0, i32 0, !dbg !880
  %336 = load i16, i16* %335, align 4, !dbg !880
  %337 = sext i16 %336 to i32, !dbg !880
  %338 = icmp eq i32 %337, 1, !dbg !880
  br i1 %338, label %339, label %341, !dbg !881

339:                                              ; preds = %333
  %340 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !882
  call void @print_runlevel(%struct.utmpx* %340), !dbg !883
  br label %609, !dbg !883

341:                                              ; preds = %333, %originalBBpart292
  %342 = load i32, i32* @x.9
  %343 = load i32, i32* @y.10
  %344 = sub i32 %342, 1
  %345 = mul i32 %342, %344
  %346 = urem i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %347, %348
  br i1 %349, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %341, %originalBB94alteredBB
  %350 = load i8, i8* @need_boottime, align 1, !dbg !884
  %351 = trunc i8 %350 to i1, !dbg !884
  %352 = load i32, i32* @x.9
  %353 = load i32, i32* @y.10
  %354 = sub i32 %352, 1
  %355 = mul i32 %352, %354
  %356 = urem i32 %355, 2
  %357 = icmp eq i32 %356, 0
  %358 = icmp slt i32 %353, 10
  %359 = or i1 %357, %358
  br i1 %359, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br i1 %351, label %360, label %400, !dbg !886

360:                                              ; preds = %originalBBpart296
  %361 = load i32, i32* @x.9
  %362 = load i32, i32* @y.10
  %363 = sub i32 %361, 1
  %364 = mul i32 %361, %363
  %365 = urem i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = icmp slt i32 %362, 10
  %368 = or i1 %366, %367
  br i1 %368, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %360, %originalBB98alteredBB
  %369 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !887
  %370 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %369, i32 0, i32 0, !dbg !887
  %371 = load i16, i16* %370, align 4, !dbg !887
  %372 = sext i16 %371 to i32, !dbg !887
  %373 = icmp eq i32 %372, 2, !dbg !887
  %374 = load i32, i32* @x.9
  %375 = load i32, i32* @y.10
  %376 = sub i32 %374, 1
  %377 = mul i32 %374, %376
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %375, 10
  %381 = or i1 %379, %380
  br i1 %381, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br i1 %373, label %382, label %400, !dbg !888

382:                                              ; preds = %originalBBpart2100
  %383 = load i32, i32* @x.9
  %384 = load i32, i32* @y.10
  %385 = sub i32 %383, 1
  %386 = mul i32 %383, %385
  %387 = urem i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %388, %389
  br i1 %390, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %382, %originalBB102alteredBB
  %391 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !889
  call void @print_boottime(%struct.utmpx* %391), !dbg !890
  %392 = load i32, i32* @x.9
  %393 = load i32, i32* @y.10
  %394 = sub i32 %392, 1
  %395 = mul i32 %392, %394
  %396 = urem i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %397, %398
  br i1 %399, label %originalBBpart2104, label %originalBB102alteredBB

originalBBpart2104:                               ; preds = %originalBB102
  br label %592, !dbg !890

400:                                              ; preds = %originalBBpart2100, %originalBBpart296
  %401 = load i8, i8* @need_clockchange, align 1, !dbg !891
  %402 = trunc i8 %401 to i1, !dbg !891
  br i1 %402, label %403, label %427, !dbg !893

403:                                              ; preds = %400
  %404 = load i32, i32* @x.9
  %405 = load i32, i32* @y.10
  %406 = sub i32 %404, 1
  %407 = mul i32 %404, %406
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %405, 10
  %411 = or i1 %409, %410
  br i1 %411, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %403, %originalBB106alteredBB
  %412 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !894
  %413 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %412, i32 0, i32 0, !dbg !894
  %414 = load i16, i16* %413, align 4, !dbg !894
  %415 = sext i16 %414 to i32, !dbg !894
  %416 = icmp eq i32 %415, 3, !dbg !894
  %417 = load i32, i32* @x.9
  %418 = load i32, i32* @y.10
  %419 = sub i32 %417, 1
  %420 = mul i32 %417, %419
  %421 = urem i32 %420, 2
  %422 = icmp eq i32 %421, 0
  %423 = icmp slt i32 %418, 10
  %424 = or i1 %422, %423
  br i1 %424, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  br i1 %416, label %425, label %427, !dbg !895

425:                                              ; preds = %originalBBpart2108
  %426 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !896
  call void @print_clockchange(%struct.utmpx* %426), !dbg !897
  br label %575, !dbg !897

427:                                              ; preds = %originalBBpart2108, %400
  %428 = load i32, i32* @x.9
  %429 = load i32, i32* @y.10
  %430 = sub i32 %428, 1
  %431 = mul i32 %428, %430
  %432 = urem i32 %431, 2
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %429, 10
  %435 = or i1 %433, %434
  br i1 %435, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %427, %originalBB110alteredBB
  %436 = load i8, i8* @need_initspawn, align 1, !dbg !898
  %437 = trunc i8 %436 to i1, !dbg !898
  %438 = load i32, i32* @x.9
  %439 = load i32, i32* @y.10
  %440 = sub i32 %438, 1
  %441 = mul i32 %438, %440
  %442 = urem i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %443, %444
  br i1 %445, label %originalBBpart2112, label %originalBB110alteredBB

originalBBpart2112:                               ; preds = %originalBB110
  br i1 %437, label %446, label %470, !dbg !900

446:                                              ; preds = %originalBBpart2112
  %447 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !901
  %448 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %447, i32 0, i32 0, !dbg !901
  %449 = load i16, i16* %448, align 4, !dbg !901
  %450 = sext i16 %449 to i32, !dbg !901
  %451 = icmp eq i32 %450, 5, !dbg !901
  br i1 %451, label %452, label %470, !dbg !902

452:                                              ; preds = %446
  %453 = load i32, i32* @x.9
  %454 = load i32, i32* @y.10
  %455 = sub i32 %453, 1
  %456 = mul i32 %453, %455
  %457 = urem i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = icmp slt i32 %454, 10
  %460 = or i1 %458, %459
  br i1 %460, label %originalBB114, label %originalBB114alteredBB

originalBB114:                                    ; preds = %452, %originalBB114alteredBB
  %461 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !903
  call void @print_initspawn(%struct.utmpx* %461), !dbg !904
  %462 = load i32, i32* @x.9
  %463 = load i32, i32* @y.10
  %464 = sub i32 %462, 1
  %465 = mul i32 %462, %464
  %466 = urem i32 %465, 2
  %467 = icmp eq i32 %466, 0
  %468 = icmp slt i32 %463, 10
  %469 = or i1 %467, %468
  br i1 %469, label %originalBBpart2116, label %originalBB114alteredBB

originalBBpart2116:                               ; preds = %originalBB114
  br label %574, !dbg !904

470:                                              ; preds = %446, %originalBBpart2112
  %471 = load i32, i32* @x.9
  %472 = load i32, i32* @y.10
  %473 = sub i32 %471, 1
  %474 = mul i32 %471, %473
  %475 = urem i32 %474, 2
  %476 = icmp eq i32 %475, 0
  %477 = icmp slt i32 %472, 10
  %478 = or i1 %476, %477
  br i1 %478, label %originalBB118, label %originalBB118alteredBB

originalBB118:                                    ; preds = %470, %originalBB118alteredBB
  %479 = load i8, i8* @need_login, align 1, !dbg !905
  %480 = trunc i8 %479 to i1, !dbg !905
  %481 = load i32, i32* @x.9
  %482 = load i32, i32* @y.10
  %483 = sub i32 %481, 1
  %484 = mul i32 %481, %483
  %485 = urem i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = icmp slt i32 %482, 10
  %488 = or i1 %486, %487
  br i1 %488, label %originalBBpart2120, label %originalBB118alteredBB

originalBBpart2120:                               ; preds = %originalBB118
  br i1 %480, label %489, label %529, !dbg !907

489:                                              ; preds = %originalBBpart2120
  %490 = load i32, i32* @x.9
  %491 = load i32, i32* @y.10
  %492 = sub i32 %490, 1
  %493 = mul i32 %490, %492
  %494 = urem i32 %493, 2
  %495 = icmp eq i32 %494, 0
  %496 = icmp slt i32 %491, 10
  %497 = or i1 %495, %496
  br i1 %497, label %originalBB122, label %originalBB122alteredBB

originalBB122:                                    ; preds = %489, %originalBB122alteredBB
  %498 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !908
  %499 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %498, i32 0, i32 0, !dbg !908
  %500 = load i16, i16* %499, align 4, !dbg !908
  %501 = sext i16 %500 to i32, !dbg !908
  %502 = icmp eq i32 %501, 6, !dbg !908
  %503 = load i32, i32* @x.9
  %504 = load i32, i32* @y.10
  %505 = sub i32 %503, 1
  %506 = mul i32 %503, %505
  %507 = urem i32 %506, 2
  %508 = icmp eq i32 %507, 0
  %509 = icmp slt i32 %504, 10
  %510 = or i1 %508, %509
  br i1 %510, label %originalBBpart2124, label %originalBB122alteredBB

originalBBpart2124:                               ; preds = %originalBB122
  br i1 %502, label %511, label %529, !dbg !909

511:                                              ; preds = %originalBBpart2124
  %512 = load i32, i32* @x.9
  %513 = load i32, i32* @y.10
  %514 = sub i32 %512, 1
  %515 = mul i32 %512, %514
  %516 = urem i32 %515, 2
  %517 = icmp eq i32 %516, 0
  %518 = icmp slt i32 %513, 10
  %519 = or i1 %517, %518
  br i1 %519, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %511, %originalBB126alteredBB
  %520 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !910
  call void @print_login(%struct.utmpx* %520), !dbg !911
  %521 = load i32, i32* @x.9
  %522 = load i32, i32* @y.10
  %523 = sub i32 %521, 1
  %524 = mul i32 %521, %523
  %525 = urem i32 %524, 2
  %526 = icmp eq i32 %525, 0
  %527 = icmp slt i32 %522, 10
  %528 = or i1 %526, %527
  br i1 %528, label %originalBBpart2128, label %originalBB126alteredBB

originalBBpart2128:                               ; preds = %originalBB126
  br label %557, !dbg !911

529:                                              ; preds = %originalBBpart2124, %originalBBpart2120
  %530 = load i8, i8* @need_deadprocs, align 1, !dbg !912
  %531 = trunc i8 %530 to i1, !dbg !912
  br i1 %531, label %532, label %540, !dbg !914

532:                                              ; preds = %529
  %533 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !915
  %534 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %533, i32 0, i32 0, !dbg !915
  %535 = load i16, i16* %534, align 4, !dbg !915
  %536 = sext i16 %535 to i32, !dbg !915
  %537 = icmp eq i32 %536, 8, !dbg !915
  br i1 %537, label %538, label %540, !dbg !916

538:                                              ; preds = %532
  %539 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !917
  call void @print_deadprocs(%struct.utmpx* %539), !dbg !918
  br label %540, !dbg !918

540:                                              ; preds = %538, %532, %529
  %541 = load i32, i32* @x.9
  %542 = load i32, i32* @y.10
  %543 = sub i32 %541, 1
  %544 = mul i32 %541, %543
  %545 = urem i32 %544, 2
  %546 = icmp eq i32 %545, 0
  %547 = icmp slt i32 %542, 10
  %548 = or i1 %546, %547
  br i1 %548, label %originalBB130, label %originalBB130alteredBB

originalBB130:                                    ; preds = %540, %originalBB130alteredBB
  %549 = load i32, i32* @x.9
  %550 = load i32, i32* @y.10
  %551 = sub i32 %549, 1
  %552 = mul i32 %549, %551
  %553 = urem i32 %552, 2
  %554 = icmp eq i32 %553, 0
  %555 = icmp slt i32 %550, 10
  %556 = or i1 %554, %555
  br i1 %556, label %originalBBpart2132, label %originalBB130alteredBB

originalBBpart2132:                               ; preds = %originalBB130
  br label %557

557:                                              ; preds = %originalBBpart2132, %originalBBpart2128
  %558 = load i32, i32* @x.9
  %559 = load i32, i32* @y.10
  %560 = sub i32 %558, 1
  %561 = mul i32 %558, %560
  %562 = urem i32 %561, 2
  %563 = icmp eq i32 %562, 0
  %564 = icmp slt i32 %559, 10
  %565 = or i1 %563, %564
  br i1 %565, label %originalBB134, label %originalBB134alteredBB

originalBB134:                                    ; preds = %557, %originalBB134alteredBB
  %566 = load i32, i32* @x.9
  %567 = load i32, i32* @y.10
  %568 = sub i32 %566, 1
  %569 = mul i32 %566, %568
  %570 = urem i32 %569, 2
  %571 = icmp eq i32 %570, 0
  %572 = icmp slt i32 %567, 10
  %573 = or i1 %571, %572
  br i1 %573, label %originalBBpart2136, label %originalBB134alteredBB

originalBBpart2136:                               ; preds = %originalBB134
  br label %574

574:                                              ; preds = %originalBBpart2136, %originalBBpart2116
  br label %575

575:                                              ; preds = %574, %425
  %576 = load i32, i32* @x.9
  %577 = load i32, i32* @y.10
  %578 = sub i32 %576, 1
  %579 = mul i32 %576, %578
  %580 = urem i32 %579, 2
  %581 = icmp eq i32 %580, 0
  %582 = icmp slt i32 %577, 10
  %583 = or i1 %581, %582
  br i1 %583, label %originalBB138, label %originalBB138alteredBB

originalBB138:                                    ; preds = %575, %originalBB138alteredBB
  %584 = load i32, i32* @x.9
  %585 = load i32, i32* @y.10
  %586 = sub i32 %584, 1
  %587 = mul i32 %584, %586
  %588 = urem i32 %587, 2
  %589 = icmp eq i32 %588, 0
  %590 = icmp slt i32 %585, 10
  %591 = or i1 %589, %590
  br i1 %591, label %originalBBpart2140, label %originalBB138alteredBB

originalBBpart2140:                               ; preds = %originalBB138
  br label %592

592:                                              ; preds = %originalBBpart2140, %originalBBpart2104
  %593 = load i32, i32* @x.9
  %594 = load i32, i32* @y.10
  %595 = sub i32 %593, 1
  %596 = mul i32 %593, %595
  %597 = urem i32 %596, 2
  %598 = icmp eq i32 %597, 0
  %599 = icmp slt i32 %594, 10
  %600 = or i1 %598, %599
  br i1 %600, label %originalBB142, label %originalBB142alteredBB

originalBB142:                                    ; preds = %592, %originalBB142alteredBB
  %601 = load i32, i32* @x.9
  %602 = load i32, i32* @y.10
  %603 = sub i32 %601, 1
  %604 = mul i32 %601, %603
  %605 = urem i32 %604, 2
  %606 = icmp eq i32 %605, 0
  %607 = icmp slt i32 %602, 10
  %608 = or i1 %606, %607
  br i1 %608, label %originalBBpart2144, label %originalBB142alteredBB

originalBBpart2144:                               ; preds = %originalBB142
  br label %609

609:                                              ; preds = %originalBBpart2144, %339
  %610 = load i32, i32* @x.9
  %611 = load i32, i32* @y.10
  %612 = sub i32 %610, 1
  %613 = mul i32 %610, %612
  %614 = urem i32 %613, 2
  %615 = icmp eq i32 %614, 0
  %616 = icmp slt i32 %611, 10
  %617 = or i1 %615, %616
  br i1 %617, label %originalBB146, label %originalBB146alteredBB

originalBB146:                                    ; preds = %609, %originalBB146alteredBB
  %618 = load i32, i32* @x.9
  %619 = load i32, i32* @y.10
  %620 = sub i32 %618, 1
  %621 = mul i32 %618, %620
  %622 = urem i32 %621, 2
  %623 = icmp eq i32 %622, 0
  %624 = icmp slt i32 %619, 10
  %625 = or i1 %623, %624
  br i1 %625, label %originalBBpart2148, label %originalBB146alteredBB

originalBBpart2148:                               ; preds = %originalBB146
  br label %626

626:                                              ; preds = %originalBBpart2148, %311
  %627 = load i32, i32* @x.9
  %628 = load i32, i32* @y.10
  %629 = sub i32 %627, 1
  %630 = mul i32 %627, %629
  %631 = urem i32 %630, 2
  %632 = icmp eq i32 %631, 0
  %633 = icmp slt i32 %628, 10
  %634 = or i1 %632, %633
  br i1 %634, label %originalBB150, label %originalBB150alteredBB

originalBB150:                                    ; preds = %626, %originalBB150alteredBB
  %635 = load i32, i32* @x.9
  %636 = load i32, i32* @y.10
  %637 = sub i32 %635, 1
  %638 = mul i32 %635, %637
  %639 = urem i32 %638, 2
  %640 = icmp eq i32 %639, 0
  %641 = icmp slt i32 %636, 10
  %642 = or i1 %640, %641
  br i1 %642, label %originalBBpart2152, label %originalBB150alteredBB

originalBBpart2152:                               ; preds = %originalBB150
  br label %643, !dbg !919

643:                                              ; preds = %originalBBpart2152, %272
  %644 = load i32, i32* @x.9
  %645 = load i32, i32* @y.10
  %646 = sub i32 %644, 1
  %647 = mul i32 %644, %646
  %648 = urem i32 %647, 2
  %649 = icmp eq i32 %648, 0
  %650 = icmp slt i32 %645, 10
  %651 = or i1 %649, %650
  br i1 %651, label %originalBB154, label %originalBB154alteredBB

originalBB154:                                    ; preds = %643, %originalBB154alteredBB
  %652 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !920
  %653 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %652, i32 0, i32 0, !dbg !920
  %654 = load i16, i16* %653, align 4, !dbg !920
  %655 = sext i16 %654 to i32, !dbg !920
  %656 = icmp eq i32 %655, 2, !dbg !920
  %657 = load i32, i32* @x.9
  %658 = load i32, i32* @y.10
  %659 = sub i32 %657, 1
  %660 = mul i32 %657, %659
  %661 = urem i32 %660, 2
  %662 = icmp eq i32 %661, 0
  %663 = icmp slt i32 %658, 10
  %664 = or i1 %662, %663
  br i1 %664, label %originalBBpart2156, label %originalBB154alteredBB

originalBBpart2156:                               ; preds = %originalBB154
  br i1 %656, label %665, label %687, !dbg !922

665:                                              ; preds = %originalBBpart2156
  %666 = load i32, i32* @x.9
  %667 = load i32, i32* @y.10
  %668 = sub i32 %666, 1
  %669 = mul i32 %666, %668
  %670 = urem i32 %669, 2
  %671 = icmp eq i32 %670, 0
  %672 = icmp slt i32 %667, 10
  %673 = or i1 %671, %672
  br i1 %673, label %originalBB158, label %originalBB158alteredBB

originalBB158:                                    ; preds = %665, %originalBB158alteredBB
  %674 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !923
  %675 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %674, i32 0, i32 8, !dbg !923
  %676 = getelementptr inbounds %struct.anon, %struct.anon* %675, i32 0, i32 0, !dbg !923
  %677 = load i32, i32* %676, align 4, !dbg !923
  %678 = sext i32 %677 to i64, !dbg !923
  store i64 %678, i64* %6, align 8, !dbg !924
  %679 = load i32, i32* @x.9
  %680 = load i32, i32* @y.10
  %681 = sub i32 %679, 1
  %682 = mul i32 %679, %681
  %683 = urem i32 %682, 2
  %684 = icmp eq i32 %683, 0
  %685 = icmp slt i32 %680, 10
  %686 = or i1 %684, %685
  br i1 %686, label %originalBBpart2160, label %originalBB158alteredBB

originalBBpart2160:                               ; preds = %originalBB158
  br label %687, !dbg !925

687:                                              ; preds = %originalBBpart2160, %originalBBpart2156
  %688 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !926
  %689 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %688, i32 1, !dbg !926
  store %struct.utmpx* %689, %struct.utmpx** %4, align 8, !dbg !926
  br label %233, !dbg !860, !llvm.loop !927

690:                                              ; preds = %originalBBpart280, %originalBBpart28
  ret void, !dbg !929

originalBBalteredBB:                              ; preds = %originalBB, %9
  call void @print_heading(), !dbg !843
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %691 = call i8* @ttyname(i32 0) #10, !dbg !847
  store i8* %691, i8** %5, align 8, !dbg !849
  %692 = load i8*, i8** %5, align 8, !dbg !850
  %693 = icmp ne i8* %692, null, !dbg !850
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %66
  %694 = load i8*, i8** %5, align 8, !dbg !854
  %695 = call i32 @strncmp(i8* %694, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0), i64 5) #13, !dbg !854
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %85
  %collatzVaralteredBB = alloca i32
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %110
  %696 = load i32, i32* %collatzVar
  %697 = icmp sgt i32 %696, 1
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %129
  %698 = load i32, i32* %collatzVar
  %_ = sub i32 %698, 2
  %gen = mul i32 %_, 2
  %_23 = sub i32 %698, 2
  %gen24 = mul i32 %_23, 2
  %_25 = sub i32 %698, 2
  %gen26 = mul i32 %_25, 2
  %_27 = sub i32 %698, 2
  %gen28 = mul i32 %_27, 2
  %_29 = sub i32 %698, 2
  %gen30 = mul i32 %_29, 2
  %699 = srem i32 %698, 2
  %700 = icmp eq i32 %699, 0
  br label %originalBB22

originalBB34alteredBB:                            ; preds = %originalBB34, %152
  %701 = load i32, i32* %collatzVar
  %_35 = shl i32 %701, 3
  %_36 = shl i32 %701, 3
  %_37 = shl i32 %701, 3
  %702 = mul i32 %701, 3
  %_38 = sub i32 %702, 1
  %gen39 = mul i32 %_38, 1
  %_40 = shl i32 %702, 1
  %_41 = sub i32 0, %702
  %gen42 = add i32 %_41, 1
  %_43 = sub i32 %702, 1
  %gen44 = mul i32 %_43, 1
  %_45 = sub i32 0, %702
  %gen46 = add i32 %_45, 1
  %703 = add i32 %702, 1
  store i32 %703, i32* %collatzVar
  br label %originalBB34

originalBB50alteredBB:                            ; preds = %originalBB50, %172
  %704 = load i32, i32* %collatzVar
  %_51 = sub i32 %76, %704
  %gen52 = mul i32 %_51, %704
  %_53 = shl i32 %76, %704
  %_54 = shl i32 %76, %704
  %_55 = sub i32 %76, %704
  %gen56 = mul i32 %_55, %704
  %_57 = sub i32 0, %76
  %gen58 = add i32 %_57, %704
  %705 = sub i32 %76, %704
  %706 = icmp sgt i32 %705, -2
  br label %originalBB50

originalBB62alteredBB:                            ; preds = %originalBB62, %196
  %707 = load i8*, i8** %5, align 8, !dbg !857
  %708 = getelementptr inbounds i8, i8* %707, i64 5, !dbg !857
  store i8* %708, i8** %5, align 8, !dbg !857
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %216
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %233
  %709 = load i64, i64* %3, align 8, !dbg !861
  %_71 = sub i64 %709, -1
  %gen72 = mul i64 %_71, -1
  %_73 = sub i64 0, %709
  %gen74 = add i64 %_73, -1
  %_75 = sub i64 0, %709
  %gen76 = add i64 %_75, -1
  %_77 = sub i64 %709, -1
  %gen78 = mul i64 %_77, -1
  %710 = add i64 %709, -1, !dbg !861
  store i64 %710, i64* %3, align 8, !dbg !861
  %711 = icmp ne i64 %709, 0, !dbg !860
  br label %originalBB70

originalBB82alteredBB:                            ; preds = %originalBB82, %253
  %712 = load i8, i8* @my_line_only, align 1, !dbg !862
  %713 = trunc i8 %712 to i1, !dbg !862
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %289
  %714 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !872
  %715 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %714, i32 0, i32 0, !dbg !872
  %716 = load i16, i16* %715, align 4, !dbg !872
  %717 = sext i16 %716 to i32, !dbg !872
  %718 = icmp eq i32 %717, 7, !dbg !872
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %314
  %719 = load i8, i8* @need_runlevel, align 1, !dbg !877
  %720 = trunc i8 %719 to i1, !dbg !877
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %341
  %721 = load i8, i8* @need_boottime, align 1, !dbg !884
  %722 = trunc i8 %721 to i1, !dbg !884
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %360
  %723 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !887
  %724 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %723, i32 0, i32 0, !dbg !887
  %725 = load i16, i16* %724, align 4, !dbg !887
  %726 = sext i16 %725 to i32, !dbg !887
  %727 = icmp eq i32 %726, 2, !dbg !887
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %382
  %728 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !889
  call void @print_boottime(%struct.utmpx* %728), !dbg !890
  br label %originalBB102

originalBB106alteredBB:                           ; preds = %originalBB106, %403
  %729 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !894
  %730 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %729, i32 0, i32 0, !dbg !894
  %731 = load i16, i16* %730, align 4, !dbg !894
  %732 = sext i16 %731 to i32, !dbg !894
  %733 = icmp eq i32 %732, 3, !dbg !894
  br label %originalBB106

originalBB110alteredBB:                           ; preds = %originalBB110, %427
  %734 = load i8, i8* @need_initspawn, align 1, !dbg !898
  %735 = trunc i8 %734 to i1, !dbg !898
  br label %originalBB110

originalBB114alteredBB:                           ; preds = %originalBB114, %452
  %736 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !903
  call void @print_initspawn(%struct.utmpx* %736), !dbg !904
  br label %originalBB114

originalBB118alteredBB:                           ; preds = %originalBB118, %470
  %737 = load i8, i8* @need_login, align 1, !dbg !905
  %738 = trunc i8 %737 to i1, !dbg !905
  br label %originalBB118

originalBB122alteredBB:                           ; preds = %originalBB122, %489
  %739 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !908
  %740 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %739, i32 0, i32 0, !dbg !908
  %741 = load i16, i16* %740, align 4, !dbg !908
  %742 = sext i16 %741 to i32, !dbg !908
  %743 = icmp eq i32 %742, 6, !dbg !908
  br label %originalBB122

originalBB126alteredBB:                           ; preds = %originalBB126, %511
  %744 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !910
  call void @print_login(%struct.utmpx* %744), !dbg !911
  br label %originalBB126

originalBB130alteredBB:                           ; preds = %originalBB130, %540
  br label %originalBB130

originalBB134alteredBB:                           ; preds = %originalBB134, %557
  br label %originalBB134

originalBB138alteredBB:                           ; preds = %originalBB138, %575
  br label %originalBB138

originalBB142alteredBB:                           ; preds = %originalBB142, %592
  br label %originalBB142

originalBB146alteredBB:                           ; preds = %originalBB146, %609
  br label %originalBB146

originalBB150alteredBB:                           ; preds = %originalBB150, %626
  br label %originalBB150

originalBB154alteredBB:                           ; preds = %originalBB154, %643
  %745 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !920
  %746 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %745, i32 0, i32 0, !dbg !920
  %747 = load i16, i16* %746, align 4, !dbg !920
  %748 = sext i16 %747 to i32, !dbg !920
  %749 = icmp eq i32 %748, 2, !dbg !920
  br label %originalBB154

originalBB158alteredBB:                           ; preds = %originalBB158, %665
  %750 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !923
  %751 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %750, i32 0, i32 8, !dbg !923
  %752 = getelementptr inbounds %struct.anon, %struct.anon* %751, i32 0, i32 0, !dbg !923
  %753 = load i32, i32* %752, align 4, !dbg !923
  %754 = sext i32 %753 to i64, !dbg !923
  store i64 %754, i64* %6, align 8, !dbg !924
  br label %originalBB158
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_heading() #4 !dbg !930 {
  %1 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0)) #10, !dbg !933
  %2 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i64 0, i64 0)) #10, !dbg !934
  %3 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i64 0, i64 0)) #10, !dbg !935
  %4 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i64 0, i64 0)) #10, !dbg !936
  %5 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i64 0, i64 0)) #10, !dbg !937
  %6 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i64 0, i64 0)) #10, !dbg !938
  %7 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0)) #10, !dbg !939
  call void @print_line(i32 -1, i8* %1, i8 signext 32, i32 -1, i8* %2, i8* %3, i8* %4, i8* %5, i8* %6, i8* %7), !dbg !940
  ret void, !dbg !941
}

; Function Attrs: nounwind
declare dso_local i8* @ttyname(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_user(%struct.utmpx*, i64) #4 !dbg !64 {
  %3 = alloca %struct.utmpx*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.stat, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8, align 1
  %8 = alloca [7 x i8], align 1
  %9 = alloca [38 x i8], align 16
  %10 = alloca i8*, align 8
  %11 = alloca [12 x i8], align 1
  %12 = alloca [257 x i8], align 16
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %3, metadata !942, metadata !DIExpression()), !dbg !943
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !944, metadata !DIExpression()), !dbg !945
  call void @llvm.dbg.declare(metadata %struct.stat* %5, metadata !946, metadata !DIExpression()), !dbg !981
  call void @llvm.dbg.declare(metadata i64* %6, metadata !982, metadata !DIExpression()), !dbg !983
  call void @llvm.dbg.declare(metadata i8* %7, metadata !984, metadata !DIExpression()), !dbg !985
  call void @llvm.dbg.declare(metadata [7 x i8]* %8, metadata !986, metadata !DIExpression()), !dbg !988
  call void @llvm.dbg.declare(metadata [38 x i8]* %9, metadata !989, metadata !DIExpression()), !dbg !993
  call void @llvm.dbg.declare(metadata i8** %10, metadata !994, metadata !DIExpression()), !dbg !995
  %15 = getelementptr inbounds [38 x i8], [38 x i8]* %9, i64 0, i64 0, !dbg !996
  store i8* %15, i8** %10, align 8, !dbg !995
  call void @llvm.dbg.declare(metadata [12 x i8]* %11, metadata !997, metadata !DIExpression()), !dbg !1001
  %16 = getelementptr inbounds [12 x i8], [12 x i8]* %11, i64 0, i64 0, !dbg !1001
  %17 = load %struct.utmpx*, %struct.utmpx** %3, align 8, !dbg !1001
  %18 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %17, i32 0, i32 1, !dbg !1001
  %19 = load i32, i32* %18, align 4, !dbg !1001
  %20 = sext i32 %19 to i64, !dbg !1001
  %21 = call i32 (i8*, i8*, ...) @sprintf(i8* %16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %20) #10, !dbg !1001
  %22 = load %struct.utmpx*, %struct.utmpx** %3, align 8, !dbg !1002
  %23 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %22, i32 0, i32 2, !dbg !1002
  %24 = getelementptr inbounds [32 x i8], [32 x i8]* %23, i64 0, i64 0, !dbg !1002
  %25 = load i8, i8* %24, align 4, !dbg !1002
  %26 = sext i8 %25 to i32, !dbg !1002
  %27 = icmp eq i32 %26, 47, !dbg !1002
  br i1 %27, label %47, label %28, !dbg !1004

28:                                               ; preds = %2
  %29 = load i32, i32* @x.13
  %30 = load i32, i32* @y.14
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %28, %originalBBalteredBB
  %37 = load i8*, i8** %10, align 8, !dbg !1005
  %38 = call i8* @stpcpy(i8* %37, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0)) #10, !dbg !1006
  store i8* %38, i8** %10, align 8, !dbg !1007
  %39 = load i32, i32* @x.13
  %40 = load i32, i32* @y.14
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %47, !dbg !1008

47:                                               ; preds = %originalBBpart2, %2
  %48 = load i32, i32* @x.13
  %49 = load i32, i32* @y.14
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %47, %originalBB1alteredBB
  %56 = load i8*, i8** %10, align 8, !dbg !1009
  %57 = load %struct.utmpx*, %struct.utmpx** %3, align 8, !dbg !1010
  %58 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %57, i32 0, i32 2, !dbg !1011
  %59 = getelementptr inbounds [32 x i8], [32 x i8]* %58, i64 0, i64 0, !dbg !1010
  %60 = call i8* @stzncpy(i8* %56, i8* %59, i64 32), !dbg !1012
  %61 = getelementptr inbounds [38 x i8], [38 x i8]* %9, i64 0, i64 0, !dbg !1013
  %62 = call i32 @stat(i8* %61, %struct.stat* %5) #10, !dbg !1015
  %63 = icmp eq i32 %62, 0, !dbg !1016
  %64 = load i32, i32* @x.13
  %65 = load i32, i32* @y.14
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %63, label %72, label %96, !dbg !1017

72:                                               ; preds = %originalBBpart24
  %73 = load i32, i32* @x.13
  %74 = load i32, i32* @y.14
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %72, %originalBB6alteredBB
  %81 = call zeroext i1 @is_tty_writable(%struct.stat* %5), !dbg !1018
  %82 = zext i1 %81 to i64, !dbg !1018
  %83 = select i1 %81, i32 43, i32 45, !dbg !1018
  %84 = trunc i32 %83 to i8, !dbg !1018
  store i8 %84, i8* %7, align 1, !dbg !1020
  %85 = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 11, !dbg !1021
  %86 = getelementptr inbounds %struct.timespec, %struct.timespec* %85, i32 0, i32 0, !dbg !1021
  %87 = load i64, i64* %86, align 8, !dbg !1021
  store i64 %87, i64* %6, align 8, !dbg !1022
  %88 = load i32, i32* @x.13
  %89 = load i32, i32* @y.14
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %97, !dbg !1023

96:                                               ; preds = %originalBBpart24
  store i8 63, i8* %7, align 1, !dbg !1024
  store i64 0, i64* %6, align 8, !dbg !1026
  br label %97

97:                                               ; preds = %96, %originalBBpart28
  %98 = load i64, i64* %6, align 8, !dbg !1027
  %99 = icmp ne i64 %98, 0, !dbg !1027
  br i1 %99, label %100, label %106, !dbg !1029

100:                                              ; preds = %97
  %101 = getelementptr inbounds [7 x i8], [7 x i8]* %8, i64 0, i64 0, !dbg !1030
  %102 = load i64, i64* %6, align 8, !dbg !1031
  %103 = load i64, i64* %4, align 8, !dbg !1032
  %104 = call i8* @idle_string(i64 %102, i64 %103), !dbg !1033
  %105 = call i32 (i8*, i8*, ...) @sprintf(i8* %101, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i64 0, i64 0), i32 6, i8* %104) #10, !dbg !1034
  br label %125, !dbg !1034

106:                                              ; preds = %97
  %107 = load i32, i32* @x.13
  %108 = load i32, i32* @y.14
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %106, %originalBB10alteredBB
  %115 = getelementptr inbounds [7 x i8], [7 x i8]* %8, i64 0, i64 0, !dbg !1035
  %116 = call i32 (i8*, i8*, ...) @sprintf(i8* %115, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i64 0, i64 0)) #10, !dbg !1036
  %117 = load i32, i32* @x.13
  %118 = load i32, i32* @y.14
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %125

125:                                              ; preds = %originalBBpart212, %100
  %126 = load i32, i32* @x.13
  %127 = load i32, i32* @y.14
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %125, %originalBB14alteredBB
  %134 = load %struct.utmpx*, %struct.utmpx** %3, align 8, !dbg !1037
  %135 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %134, i32 0, i32 5, !dbg !1039
  %136 = getelementptr inbounds [256 x i8], [256 x i8]* %135, i64 0, i64 0, !dbg !1037
  %137 = load i8, i8* %136, align 4, !dbg !1037
  %138 = icmp ne i8 %137, 0, !dbg !1037
  %139 = load i32, i32* @x.13
  %140 = load i32, i32* @y.14
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %138, label %147, label %371, !dbg !1040

147:                                              ; preds = %originalBBpart216
  call void @llvm.dbg.declare(metadata [257 x i8]* %12, metadata !1041, metadata !DIExpression()), !dbg !1046
  call void @llvm.dbg.declare(metadata i8** %13, metadata !1047, metadata !DIExpression()), !dbg !1048
  %148 = load i32, i32* @x.13
  %149 = load i32, i32* @y.14
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %147, %originalBB18alteredBB
  store i8* null, i8** %13, align 8, !dbg !1048
  call void @llvm.dbg.declare(metadata i8** %14, metadata !1049, metadata !DIExpression()), !dbg !1050
  store i8* null, i8** %14, align 8, !dbg !1050
  %156 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !1051
  %157 = load %struct.utmpx*, %struct.utmpx** %3, align 8, !dbg !1052
  %158 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %157, i32 0, i32 5, !dbg !1053
  %159 = getelementptr inbounds [256 x i8], [256 x i8]* %158, i64 0, i64 0, !dbg !1052
  %160 = call i8* @stzncpy(i8* %156, i8* %159, i64 256), !dbg !1054
  %161 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !1055
  %162 = call i8* @strchr(i8* %161, i32 58) #13, !dbg !1056
  store i8* %162, i8** %14, align 8, !dbg !1057
  %163 = load i8*, i8** %14, align 8, !dbg !1058
  %164 = icmp ne i8* %163, null, !dbg !1058
  %165 = load i32, i32* @x.13
  %166 = load i32, i32* @y.14
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %164, label %173, label %192, !dbg !1060

173:                                              ; preds = %originalBBpart220
  %174 = load i32, i32* @x.13
  %175 = load i32, i32* @y.14
  %176 = sub i32 %174, 1
  %177 = mul i32 %174, %176
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %179, %180
  br i1 %181, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %173, %originalBB22alteredBB
  %182 = load i8*, i8** %14, align 8, !dbg !1061
  %183 = getelementptr inbounds i8, i8* %182, i32 1, !dbg !1061
  store i8* %183, i8** %14, align 8, !dbg !1061
  store i8 0, i8* %182, align 1, !dbg !1062
  %184 = load i32, i32* @x.13
  %185 = load i32, i32* @y.14
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %192, !dbg !1063

192:                                              ; preds = %originalBBpart224, %originalBBpart220
  %193 = load i32, i32* @x.13
  %194 = load i32, i32* @y.14
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %192, %originalBB26alteredBB
  %201 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !1064
  %202 = load i8, i8* %201, align 16, !dbg !1064
  %203 = sext i8 %202 to i32, !dbg !1064
  %204 = icmp ne i32 %203, 0, !dbg !1064
  %205 = load i32, i32* @x.13
  %206 = load i32, i32* @y.14
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %204, label %213, label %219, !dbg !1066

213:                                              ; preds = %originalBBpart228
  %214 = load i8, i8* @do_lookup, align 1, !dbg !1067
  %215 = trunc i8 %214 to i1, !dbg !1067
  br i1 %215, label %216, label %219, !dbg !1068

216:                                              ; preds = %213
  %217 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !1069
  %218 = call noalias i8* @canon_host(i8* %217), !dbg !1071
  store i8* %218, i8** %13, align 8, !dbg !1072
  br label %219, !dbg !1073

219:                                              ; preds = %216, %213, %originalBBpart228
  %220 = load i8*, i8** %13, align 8, !dbg !1074
  %221 = icmp ne i8* %220, null, !dbg !1074
  br i1 %221, label %240, label %222, !dbg !1076

222:                                              ; preds = %219
  %223 = load i32, i32* @x.13
  %224 = load i32, i32* @y.14
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %222, %originalBB30alteredBB
  %231 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !1077
  store i8* %231, i8** %13, align 8, !dbg !1078
  %232 = load i32, i32* @x.13
  %233 = load i32, i32* @y.14
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %240, !dbg !1079

240:                                              ; preds = %originalBBpart232, %219
  %241 = load i8*, i8** %14, align 8, !dbg !1080
  %242 = icmp ne i8* %241, null, !dbg !1080
  br i1 %242, label %243, label %315, !dbg !1082

243:                                              ; preds = %240
  %244 = load i32, i32* @x.13
  %245 = load i32, i32* @y.14
  %246 = sub i32 %244, 1
  %247 = mul i32 %244, %246
  %248 = urem i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %245, 10
  %251 = or i1 %249, %250
  br i1 %251, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %243, %originalBB34alteredBB
  %252 = load i64, i64* @print_user.hostlen, align 8, !dbg !1083
  %253 = load i8*, i8** %13, align 8, !dbg !1086
  %254 = call i64 @strlen(i8* %253) #13, !dbg !1087
  %255 = load i8*, i8** %14, align 8, !dbg !1088
  %256 = call i64 @strlen(i8* %255) #13, !dbg !1089
  %257 = add i64 %254, %256, !dbg !1090
  %258 = add i64 %257, 4, !dbg !1091
  %259 = icmp ult i64 %252, %258, !dbg !1092
  %260 = load i32, i32* @x.13
  %261 = load i32, i32* @y.14
  %262 = sub i32 %260, 1
  %263 = mul i32 %260, %262
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %265, %266
  br i1 %267, label %originalBBpart257, label %originalBB34alteredBB

originalBBpart257:                                ; preds = %originalBB34
  br i1 %259, label %268, label %294, !dbg !1093

268:                                              ; preds = %originalBBpart257
  %269 = load i32, i32* @x.13
  %270 = load i32, i32* @y.14
  %271 = sub i32 %269, 1
  %272 = mul i32 %269, %271
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %274, %275
  br i1 %276, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %268, %originalBB59alteredBB
  %277 = load i8*, i8** %13, align 8, !dbg !1094
  %278 = call i64 @strlen(i8* %277) #13, !dbg !1096
  %279 = load i8*, i8** %14, align 8, !dbg !1097
  %280 = call i64 @strlen(i8* %279) #13, !dbg !1098
  %281 = add i64 %278, %280, !dbg !1099
  %282 = add i64 %281, 4, !dbg !1100
  store i64 %282, i64* @print_user.hostlen, align 8, !dbg !1101
  %283 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1102
  call void @free(i8* %283) #10, !dbg !1103
  %284 = load i64, i64* @print_user.hostlen, align 8, !dbg !1104
  %285 = call noalias i8* @xmalloc(i64 %284), !dbg !1105
  store i8* %285, i8** @print_user.hoststr, align 8, !dbg !1106
  %286 = load i32, i32* @x.13
  %287 = load i32, i32* @y.14
  %288 = sub i32 %286, 1
  %289 = mul i32 %286, %288
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %291, %292
  br i1 %293, label %originalBBpart275, label %originalBB59alteredBB

originalBBpart275:                                ; preds = %originalBB59
  br label %294, !dbg !1107

294:                                              ; preds = %originalBBpart275, %originalBBpart257
  %295 = load i32, i32* @x.13
  %296 = load i32, i32* @y.14
  %297 = sub i32 %295, 1
  %298 = mul i32 %295, %297
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %300, %301
  br i1 %302, label %originalBB77, label %originalBB77alteredBB

originalBB77:                                     ; preds = %294, %originalBB77alteredBB
  %303 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1108
  %304 = load i8*, i8** %13, align 8, !dbg !1109
  %305 = load i8*, i8** %14, align 8, !dbg !1110
  %306 = call i32 (i8*, i8*, ...) @sprintf(i8* %303, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i64 0, i64 0), i8* %304, i8* %305) #10, !dbg !1111
  %307 = load i32, i32* @x.13
  %308 = load i32, i32* @y.14
  %309 = sub i32 %307, 1
  %310 = mul i32 %307, %309
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %312, %313
  br i1 %314, label %originalBBpart279, label %originalBB77alteredBB

originalBBpart279:                                ; preds = %originalBB77
  br label %348, !dbg !1112

315:                                              ; preds = %240
  %316 = load i64, i64* @print_user.hostlen, align 8, !dbg !1113
  %317 = load i8*, i8** %13, align 8, !dbg !1116
  %318 = call i64 @strlen(i8* %317) #13, !dbg !1117
  %319 = add i64 %318, 3, !dbg !1118
  %320 = icmp ult i64 %316, %319, !dbg !1119
  br i1 %320, label %321, label %328, !dbg !1120

321:                                              ; preds = %315
  %322 = load i8*, i8** %13, align 8, !dbg !1121
  %323 = call i64 @strlen(i8* %322) #13, !dbg !1123
  %324 = add i64 %323, 3, !dbg !1124
  store i64 %324, i64* @print_user.hostlen, align 8, !dbg !1125
  %325 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1126
  call void @free(i8* %325) #10, !dbg !1127
  %326 = load i64, i64* @print_user.hostlen, align 8, !dbg !1128
  %327 = call noalias i8* @xmalloc(i64 %326), !dbg !1129
  store i8* %327, i8** @print_user.hoststr, align 8, !dbg !1130
  br label %328, !dbg !1131

328:                                              ; preds = %321, %315
  %329 = load i32, i32* @x.13
  %330 = load i32, i32* @y.14
  %331 = sub i32 %329, 1
  %332 = mul i32 %329, %331
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %334, %335
  br i1 %336, label %originalBB81, label %originalBB81alteredBB

originalBB81:                                     ; preds = %328, %originalBB81alteredBB
  %337 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1132
  %338 = load i8*, i8** %13, align 8, !dbg !1133
  %339 = call i32 (i8*, i8*, ...) @sprintf(i8* %337, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i64 0, i64 0), i8* %338) #10, !dbg !1134
  %340 = load i32, i32* @x.13
  %341 = load i32, i32* @y.14
  %342 = sub i32 %340, 1
  %343 = mul i32 %340, %342
  %344 = urem i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %345, %346
  br i1 %347, label %originalBBpart283, label %originalBB81alteredBB

originalBBpart283:                                ; preds = %originalBB81
  br label %348

348:                                              ; preds = %originalBBpart283, %originalBBpart279
  %349 = load i32, i32* @x.13
  %350 = load i32, i32* @y.14
  %351 = sub i32 %349, 1
  %352 = mul i32 %349, %351
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %350, 10
  %356 = or i1 %354, %355
  br i1 %356, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %348, %originalBB85alteredBB
  %357 = load i8*, i8** %13, align 8, !dbg !1135
  %358 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !1137
  %359 = icmp ne i8* %357, %358, !dbg !1138
  %360 = load i32, i32* @x.13
  %361 = load i32, i32* @y.14
  %362 = sub i32 %360, 1
  %363 = mul i32 %360, %362
  %364 = urem i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %361, 10
  %367 = or i1 %365, %366
  br i1 %367, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  br i1 %359, label %368, label %370, !dbg !1139

368:                                              ; preds = %originalBBpart287
  %369 = load i8*, i8** %13, align 8, !dbg !1140
  call void @free(i8* %369) #10, !dbg !1141
  br label %370, !dbg !1141

370:                                              ; preds = %368, %originalBBpart287
  br label %412, !dbg !1142

371:                                              ; preds = %originalBBpart216
  %372 = load i32, i32* @x.13
  %373 = load i32, i32* @y.14
  %374 = sub i32 %372, 1
  %375 = mul i32 %372, %374
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %377, %378
  br i1 %379, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %371, %originalBB89alteredBB
  %380 = load i64, i64* @print_user.hostlen, align 8, !dbg !1143
  %381 = icmp ult i64 %380, 1, !dbg !1146
  %382 = load i32, i32* @x.13
  %383 = load i32, i32* @y.14
  %384 = sub i32 %382, 1
  %385 = mul i32 %382, %384
  %386 = urem i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %383, 10
  %389 = or i1 %387, %388
  br i1 %389, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  br i1 %381, label %390, label %394, !dbg !1147

390:                                              ; preds = %originalBBpart291
  store i64 1, i64* @print_user.hostlen, align 8, !dbg !1148
  %391 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1150
  call void @free(i8* %391) #10, !dbg !1151
  %392 = load i64, i64* @print_user.hostlen, align 8, !dbg !1152
  %393 = call noalias i8* @xmalloc(i64 %392), !dbg !1153
  store i8* %393, i8** @print_user.hoststr, align 8, !dbg !1154
  br label %394, !dbg !1155

394:                                              ; preds = %390, %originalBBpart291
  %395 = load i32, i32* @x.13
  %396 = load i32, i32* @y.14
  %397 = sub i32 %395, 1
  %398 = mul i32 %395, %397
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %400, %401
  br i1 %402, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %394, %originalBB93alteredBB
  %403 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1156
  store i8 0, i8* %403, align 1, !dbg !1157
  %404 = load i32, i32* @x.13
  %405 = load i32, i32* @y.14
  %406 = sub i32 %404, 1
  %407 = mul i32 %404, %406
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %405, 10
  %411 = or i1 %409, %410
  br i1 %411, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  br label %412

412:                                              ; preds = %originalBBpart295, %370
  %413 = load i32, i32* @x.13
  %414 = load i32, i32* @y.14
  %415 = sub i32 %413, 1
  %416 = mul i32 %413, %415
  %417 = urem i32 %416, 2
  %418 = icmp eq i32 %417, 0
  %419 = icmp slt i32 %414, 10
  %420 = or i1 %418, %419
  br i1 %420, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %412, %originalBB97alteredBB
  %421 = load %struct.utmpx*, %struct.utmpx** %3, align 8, !dbg !1158
  %422 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %421, i32 0, i32 4, !dbg !1158
  %423 = getelementptr inbounds [32 x i8], [32 x i8]* %422, i64 0, i64 0, !dbg !1158
  %424 = load i8, i8* %7, align 1, !dbg !1159
  %425 = load %struct.utmpx*, %struct.utmpx** %3, align 8, !dbg !1160
  %426 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %425, i32 0, i32 2, !dbg !1161
  %427 = getelementptr inbounds [32 x i8], [32 x i8]* %426, i64 0, i64 0, !dbg !1160
  %428 = load %struct.utmpx*, %struct.utmpx** %3, align 8, !dbg !1162
  %429 = call i8* @time_string(%struct.utmpx* %428), !dbg !1163
  %430 = getelementptr inbounds [7 x i8], [7 x i8]* %8, i64 0, i64 0, !dbg !1164
  %431 = getelementptr inbounds [12 x i8], [12 x i8]* %11, i64 0, i64 0, !dbg !1165
  %432 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1166
  %433 = icmp ne i8* %432, null, !dbg !1166
  %434 = load i32, i32* @x.13
  %435 = load i32, i32* @y.14
  %436 = sub i32 %434, 1
  %437 = mul i32 %434, %436
  %438 = urem i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = icmp slt i32 %435, 10
  %441 = or i1 %439, %440
  br i1 %441, label %originalBBpart299, label %originalBB97alteredBB

originalBBpart299:                                ; preds = %originalBB97
  br i1 %433, label %442, label %460, !dbg !1166

442:                                              ; preds = %originalBBpart299
  %443 = load i32, i32* @x.13
  %444 = load i32, i32* @y.14
  %445 = sub i32 %443, 1
  %446 = mul i32 %443, %445
  %447 = urem i32 %446, 2
  %448 = icmp eq i32 %447, 0
  %449 = icmp slt i32 %444, 10
  %450 = or i1 %448, %449
  br i1 %450, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %442, %originalBB101alteredBB
  %451 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1167
  %452 = load i32, i32* @x.13
  %453 = load i32, i32* @y.14
  %454 = sub i32 %452, 1
  %455 = mul i32 %452, %454
  %456 = urem i32 %455, 2
  %457 = icmp eq i32 %456, 0
  %458 = icmp slt i32 %453, 10
  %459 = or i1 %457, %458
  br i1 %459, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  br label %461, !dbg !1166

460:                                              ; preds = %originalBBpart299
  br label %461, !dbg !1166

461:                                              ; preds = %460, %originalBBpart2103
  %462 = phi i8* [ %451, %originalBBpart2103 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), %460 ], !dbg !1166
  call void @print_line(i32 32, i8* %423, i8 signext %424, i32 32, i8* %427, i8* %429, i8* %430, i8* %431, i8* %462, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1168
  ret void, !dbg !1169

originalBBalteredBB:                              ; preds = %originalBB, %28
  %463 = load i8*, i8** %10, align 8, !dbg !1005
  %464 = call i8* @stpcpy(i8* %463, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0)) #10, !dbg !1006
  store i8* %464, i8** %10, align 8, !dbg !1007
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %47
  %465 = load i8*, i8** %10, align 8, !dbg !1009
  %466 = load %struct.utmpx*, %struct.utmpx** %3, align 8, !dbg !1010
  %467 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %466, i32 0, i32 2, !dbg !1011
  %468 = getelementptr inbounds [32 x i8], [32 x i8]* %467, i64 0, i64 0, !dbg !1010
  %469 = call i8* @stzncpy(i8* %465, i8* %468, i64 32), !dbg !1012
  %470 = getelementptr inbounds [38 x i8], [38 x i8]* %9, i64 0, i64 0, !dbg !1013
  %471 = call i32 @stat(i8* %470, %struct.stat* %5) #10, !dbg !1015
  %472 = icmp eq i32 %471, 0, !dbg !1016
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %72
  %473 = call zeroext i1 @is_tty_writable(%struct.stat* %5), !dbg !1018
  %474 = zext i1 %473 to i64, !dbg !1018
  %475 = select i1 %473, i32 43, i32 45, !dbg !1018
  %476 = trunc i32 %475 to i8, !dbg !1018
  store i8 %476, i8* %7, align 1, !dbg !1020
  %477 = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 11, !dbg !1021
  %478 = getelementptr inbounds %struct.timespec, %struct.timespec* %477, i32 0, i32 0, !dbg !1021
  %479 = load i64, i64* %478, align 8, !dbg !1021
  store i64 %479, i64* %6, align 8, !dbg !1022
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %106
  %480 = getelementptr inbounds [7 x i8], [7 x i8]* %8, i64 0, i64 0, !dbg !1035
  %481 = call i32 (i8*, i8*, ...) @sprintf(i8* %480, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i64 0, i64 0)) #10, !dbg !1036
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %125
  %482 = load %struct.utmpx*, %struct.utmpx** %3, align 8, !dbg !1037
  %483 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %482, i32 0, i32 5, !dbg !1039
  %484 = getelementptr inbounds [256 x i8], [256 x i8]* %483, i64 0, i64 0, !dbg !1037
  %485 = load i8, i8* %484, align 4, !dbg !1037
  %486 = icmp ne i8 %485, 0, !dbg !1037
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %147
  store i8* null, i8** %13, align 8, !dbg !1048
  call void @llvm.dbg.declare(metadata !4, metadata !1170, metadata !DIExpression()), !dbg !1050
  store i8* null, i8** %14, align 8, !dbg !1050
  %487 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !1051
  %488 = load %struct.utmpx*, %struct.utmpx** %3, align 8, !dbg !1052
  %489 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %488, i32 0, i32 5, !dbg !1053
  %490 = getelementptr inbounds [256 x i8], [256 x i8]* %489, i64 0, i64 0, !dbg !1052
  %491 = call i8* @stzncpy(i8* %487, i8* %490, i64 256), !dbg !1054
  %492 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !1055
  %493 = call i8* @strchr(i8* %492, i32 58) #13, !dbg !1056
  store i8* %493, i8** %14, align 8, !dbg !1057
  %494 = load i8*, i8** %14, align 8, !dbg !1058
  %495 = icmp ne i8* %494, null, !dbg !1058
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %173
  %496 = load i8*, i8** %14, align 8, !dbg !1061
  %497 = getelementptr inbounds i8, i8* %496, i32 1, !dbg !1061
  store i8* %497, i8** %14, align 8, !dbg !1061
  store i8 0, i8* %496, align 1, !dbg !1062
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %192
  %498 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !1064
  %499 = load i8, i8* %498, align 16, !dbg !1064
  %500 = sext i8 %499 to i32, !dbg !1064
  %501 = icmp ne i32 %500, 0, !dbg !1064
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %222
  %502 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !1077
  store i8* %502, i8** %13, align 8, !dbg !1078
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %243
  %503 = load i64, i64* @print_user.hostlen, align 8, !dbg !1083
  %504 = load i8*, i8** %13, align 8, !dbg !1086
  %505 = call i64 @strlen(i8* %504) #13, !dbg !1087
  %506 = load i8*, i8** %14, align 8, !dbg !1088
  %507 = call i64 @strlen(i8* %506) #13, !dbg !1089
  %_ = sub i64 0, %505
  %gen = add i64 %_, %507
  %_35 = sub i64 %505, %507
  %gen36 = mul i64 %_35, %507
  %_37 = shl i64 %505, %507
  %_38 = sub i64 %505, %507
  %gen39 = mul i64 %_38, %507
  %_40 = sub i64 0, %505
  %gen41 = add i64 %_40, %507
  %_42 = sub i64 %505, %507
  %gen43 = mul i64 %_42, %507
  %508 = add i64 %505, %507, !dbg !1090
  %_44 = sub i64 0, %508
  %gen45 = add i64 %_44, 4
  %_46 = sub i64 0, %508
  %gen47 = add i64 %_46, 4
  %_48 = sub i64 %508, 4
  %gen49 = mul i64 %_48, 4
  %_50 = sub i64 0, %508
  %gen51 = add i64 %_50, 4
  %_52 = sub i64 %508, 4
  %gen53 = mul i64 %_52, 4
  %_54 = sub i64 0, %508
  %gen55 = add i64 %_54, 4
  %509 = add i64 %508, 4, !dbg !1091
  %510 = icmp ult i64 %503, %509, !dbg !1092
  br label %originalBB34

originalBB59alteredBB:                            ; preds = %originalBB59, %268
  %511 = load i8*, i8** %13, align 8, !dbg !1094
  %512 = call i64 @strlen(i8* %511) #13, !dbg !1096
  %513 = load i8*, i8** %14, align 8, !dbg !1097
  %514 = call i64 @strlen(i8* %513) #13, !dbg !1098
  %_60 = shl i64 %512, %514
  %_61 = sub i64 0, %512
  %gen62 = add i64 %_61, %514
  %515 = add i64 %512, %514, !dbg !1099
  %_63 = sub i64 0, %515
  %gen64 = add i64 %_63, 4
  %_65 = sub i64 0, %515
  %gen66 = add i64 %_65, 4
  %_67 = shl i64 %515, 4
  %_68 = sub i64 %515, 4
  %gen69 = mul i64 %_68, 4
  %_70 = sub i64 %515, 4
  %gen71 = mul i64 %_70, 4
  %_72 = sub i64 %515, 4
  %gen73 = mul i64 %_72, 4
  %516 = add i64 %515, 4, !dbg !1100
  store i64 %516, i64* @print_user.hostlen, align 8, !dbg !1101
  %517 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1102
  call void @free(i8* %517) #10, !dbg !1103
  %518 = load i64, i64* @print_user.hostlen, align 8, !dbg !1104
  %519 = call noalias i8* @xmalloc(i64 %518), !dbg !1105
  store i8* %519, i8** @print_user.hoststr, align 8, !dbg !1106
  br label %originalBB59

originalBB77alteredBB:                            ; preds = %originalBB77, %294
  %520 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1108
  %521 = load i8*, i8** %13, align 8, !dbg !1109
  %522 = load i8*, i8** %14, align 8, !dbg !1110
  %523 = call i32 (i8*, i8*, ...) @sprintf(i8* %520, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i64 0, i64 0), i8* %521, i8* %522) #10, !dbg !1111
  br label %originalBB77

originalBB81alteredBB:                            ; preds = %originalBB81, %328
  %524 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1132
  %525 = load i8*, i8** %13, align 8, !dbg !1133
  %526 = call i32 (i8*, i8*, ...) @sprintf(i8* %524, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i64 0, i64 0), i8* %525) #10, !dbg !1134
  br label %originalBB81

originalBB85alteredBB:                            ; preds = %originalBB85, %348
  %527 = load i8*, i8** %13, align 8, !dbg !1135
  %528 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !1137
  %529 = icmp ne i8* %527, %528, !dbg !1138
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %371
  %530 = load i64, i64* @print_user.hostlen, align 8, !dbg !1143
  %531 = icmp ult i64 %530, 1, !dbg !1146
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %394
  %532 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1156
  store i8 0, i8* %532, align 1, !dbg !1157
  br label %originalBB93

originalBB97alteredBB:                            ; preds = %originalBB97, %412
  %533 = load %struct.utmpx*, %struct.utmpx** %3, align 8, !dbg !1158
  %534 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %533, i32 0, i32 4, !dbg !1158
  %535 = getelementptr inbounds [32 x i8], [32 x i8]* %534, i64 0, i64 0, !dbg !1158
  %536 = load i8, i8* %7, align 1, !dbg !1159
  %537 = load %struct.utmpx*, %struct.utmpx** %3, align 8, !dbg !1160
  %538 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %537, i32 0, i32 2, !dbg !1161
  %539 = getelementptr inbounds [32 x i8], [32 x i8]* %538, i64 0, i64 0, !dbg !1160
  %540 = load %struct.utmpx*, %struct.utmpx** %3, align 8, !dbg !1162
  %541 = call i8* @time_string(%struct.utmpx* %540), !dbg !1163
  %542 = getelementptr inbounds [7 x i8], [7 x i8]* %8, i64 0, i64 0, !dbg !1164
  %543 = getelementptr inbounds [12 x i8], [12 x i8]* %11, i64 0, i64 0, !dbg !1165
  %544 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1166
  %545 = icmp ne i8* %544, null, !dbg !1166
  br label %originalBB97

originalBB101alteredBB:                           ; preds = %originalBB101, %442
  %546 = load i8*, i8** @print_user.hoststr, align 8, !dbg !1167
  br label %originalBB101
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_runlevel(%struct.utmpx*) #4 !dbg !133 {
  %2 = load i32, i32* @x.15
  %3 = load i32, i32* @y.16
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !1273, metadata !DIExpression()), !dbg !1274
  call void @llvm.dbg.declare(metadata i8* %11, metadata !1275, metadata !DIExpression()), !dbg !1276
  %13 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1277
  %14 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %13, i32 0, i32 1, !dbg !1277
  %15 = load i32, i32* %14, align 4, !dbg !1277
  %16 = sdiv i32 %15, 256, !dbg !1278
  %17 = trunc i32 %16 to i8, !dbg !1277
  store i8 %17, i8* %11, align 1, !dbg !1276
  call void @llvm.dbg.declare(metadata i8* %12, metadata !1279, metadata !DIExpression()), !dbg !1280
  %18 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1281
  %19 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %18, i32 0, i32 1, !dbg !1281
  %20 = load i32, i32* %19, align 4, !dbg !1281
  %21 = srem i32 %20, 256, !dbg !1282
  %22 = trunc i32 %21 to i8, !dbg !1281
  store i8 %22, i8* %12, align 1, !dbg !1280
  %23 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1283
  %24 = icmp ne i8* %23, null, !dbg !1283
  %25 = load i32, i32* @x.15
  %26 = load i32, i32* @y.16
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %24, label %38, label %33, !dbg !1285

33:                                               ; preds = %originalBBpart2
  %34 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i64 0, i64 0)) #10, !dbg !1286
  %35 = call i64 @strlen(i8* %34) #13, !dbg !1287
  %36 = add i64 %35, 3, !dbg !1288
  %37 = call noalias i8* @xmalloc(i64 %36), !dbg !1289
  store i8* %37, i8** @print_runlevel.runlevline, align 8, !dbg !1290
  br label %38, !dbg !1291

38:                                               ; preds = %33, %originalBBpart2
  %39 = load i32, i32* @x.15
  %40 = load i32, i32* @y.16
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %38, %originalBB6alteredBB
  %47 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1292
  %48 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i64 0, i64 0)) #10, !dbg !1293
  %49 = load i8, i8* %12, align 1, !dbg !1294
  %50 = zext i8 %49 to i32, !dbg !1294
  %51 = call i32 (i8*, i8*, ...) @sprintf(i8* %47, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i64 0, i64 0), i8* %48, i32 %50) #10, !dbg !1295
  %52 = load i8*, i8** @print_runlevel.comment, align 8, !dbg !1296
  %53 = icmp ne i8* %52, null, !dbg !1296
  %54 = load i32, i32* @x.15
  %55 = load i32, i32* @y.16
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %53, label %67, label %62, !dbg !1298

62:                                               ; preds = %originalBBpart28
  %63 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i64 0, i64 0)) #10, !dbg !1299
  %64 = call i64 @strlen(i8* %63) #13, !dbg !1300
  %65 = add i64 %64, 2, !dbg !1301
  %66 = call noalias i8* @xmalloc(i64 %65), !dbg !1302
  store i8* %66, i8** @print_runlevel.comment, align 8, !dbg !1303
  br label %67, !dbg !1304

67:                                               ; preds = %62, %originalBBpart28
  %68 = load i8*, i8** @print_runlevel.comment, align 8, !dbg !1305
  %69 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i64 0, i64 0)) #10, !dbg !1306
  %70 = load i8, i8* %11, align 1, !dbg !1307
  %71 = zext i8 %70 to i32, !dbg !1307
  %72 = icmp eq i32 %71, 78, !dbg !1308
  br i1 %72, label %73, label %90, !dbg !1309

73:                                               ; preds = %67
  %74 = load i32, i32* @x.15
  %75 = load i32, i32* @y.16
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %73, %originalBB10alteredBB
  %82 = load i32, i32* @x.15
  %83 = load i32, i32* @y.16
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %109, !dbg !1309

90:                                               ; preds = %67
  %91 = load i32, i32* @x.15
  %92 = load i32, i32* @y.16
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %90, %originalBB14alteredBB
  %99 = load i8, i8* %11, align 1, !dbg !1310
  %100 = zext i8 %99 to i32, !dbg !1310
  %101 = load i32, i32* @x.15
  %102 = load i32, i32* @y.16
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %109, !dbg !1309

109:                                              ; preds = %originalBBpart216, %originalBBpart212
  %110 = phi i32 [ 83, %originalBBpart212 ], [ %100, %originalBBpart216 ], !dbg !1309
  %111 = load i32, i32* @x.15
  %112 = load i32, i32* @y.16
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %109, %originalBB18alteredBB
  %119 = call i32 (i8*, i8*, ...) @sprintf(i8* %68, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i64 0, i64 0), i8* %69, i32 %110) #10, !dbg !1311
  %120 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1312
  %121 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1313
  %122 = call i8* @time_string(%struct.utmpx* %121), !dbg !1314
  %123 = load i8, i8* %11, align 1, !dbg !1315
  %124 = zext i8 %123 to i32, !dbg !1315
  %125 = call zeroext i1 @c_isprint(i32 %124), !dbg !1316
  %126 = load i32, i32* @x.15
  %127 = load i32, i32* @y.16
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %125, label %134, label %136, !dbg !1316

134:                                              ; preds = %originalBBpart220
  %135 = load i8*, i8** @print_runlevel.comment, align 8, !dbg !1317
  br label %137, !dbg !1316

136:                                              ; preds = %originalBBpart220
  br label %137, !dbg !1316

137:                                              ; preds = %136, %134
  %138 = phi i8* [ %135, %134 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), %136 ], !dbg !1316
  %139 = load i32, i32* @x.15
  %140 = load i32, i32* @y.16
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %137, %originalBB22alteredBB
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %120, i8* %122, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %138, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1318
  %147 = load i32, i32* @x.15
  %148 = load i32, i32* @y.16
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret void, !dbg !1319

originalBBalteredBB:                              ; preds = %originalBB, %1
  %155 = alloca %struct.utmpx*, align 8
  %156 = alloca i8, align 1
  %157 = alloca i8, align 1
  store %struct.utmpx* %0, %struct.utmpx** %155, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %155, metadata !1320, metadata !DIExpression()), !dbg !1274
  call void @llvm.dbg.declare(metadata i8* %156, metadata !1421, metadata !DIExpression()), !dbg !1276
  %158 = load %struct.utmpx*, %struct.utmpx** %155, align 8, !dbg !1277
  %159 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %158, i32 0, i32 1, !dbg !1277
  %160 = load i32, i32* %159, align 4, !dbg !1277
  %_ = sub i32 0, %160
  %gen = add i32 %_, 256
  %_1 = shl i32 %160, 256
  %161 = sdiv i32 %160, 256, !dbg !1278
  %162 = trunc i32 %161 to i8, !dbg !1277
  store i8 %162, i8* %156, align 1, !dbg !1276
  call void @llvm.dbg.declare(metadata i8* %157, metadata !1422, metadata !DIExpression()), !dbg !1280
  %163 = load %struct.utmpx*, %struct.utmpx** %155, align 8, !dbg !1281
  %164 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %163, i32 0, i32 1, !dbg !1281
  %165 = load i32, i32* %164, align 4, !dbg !1281
  %_2 = sub i32 %165, 256
  %gen3 = mul i32 %_2, 256
  %_4 = sub i32 0, %165
  %gen5 = add i32 %_4, 256
  %166 = srem i32 %165, 256, !dbg !1282
  %167 = trunc i32 %166 to i8, !dbg !1281
  store i8 %167, i8* %157, align 1, !dbg !1280
  %168 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1283
  %169 = icmp ne i8* %168, null, !dbg !1283
  br label %originalBB

originalBB6alteredBB:                             ; preds = %originalBB6, %38
  %170 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1292
  %171 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i64 0, i64 0)) #10, !dbg !1293
  %172 = load i8, i8* %12, align 1, !dbg !1294
  %173 = zext i8 %172 to i32, !dbg !1294
  %174 = call i32 (i8*, i8*, ...) @sprintf(i8* %170, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i64 0, i64 0), i8* %171, i32 %173) #10, !dbg !1295
  %175 = load i8*, i8** @print_runlevel.comment, align 8, !dbg !1296
  %176 = icmp ne i8* %175, null, !dbg !1296
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %73
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %90
  %177 = load i8, i8* %11, align 1, !dbg !1310
  %178 = zext i8 %177 to i32, !dbg !1310
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %109
  %179 = call i32 (i8*, i8*, ...) @sprintf(i8* %68, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i64 0, i64 0), i8* %69, i32 %110) #10, !dbg !1311
  %180 = load i8*, i8** @print_runlevel.runlevline, align 8, !dbg !1312
  %181 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1313
  %182 = call i8* @time_string(%struct.utmpx* %181), !dbg !1314
  %183 = load i8, i8* %11, align 1, !dbg !1315
  %184 = zext i8 %183 to i32, !dbg !1315
  %185 = call zeroext i1 @c_isprint(i32 %184), !dbg !1316
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %137
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %120, i8* %122, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %138, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1318
  br label %originalBB22
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_boottime(%struct.utmpx*) #4 !dbg !1423 {
  %2 = load i32, i32* @x.17
  %3 = load i32, i32* @y.18
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !1424, metadata !DIExpression()), !dbg !1425
  %11 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.88, i64 0, i64 0)) #10, !dbg !1426
  %12 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1427
  %13 = call i8* @time_string(%struct.utmpx* %12), !dbg !1428
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %11, i8* %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1429
  %14 = load i32, i32* @x.17
  %15 = load i32, i32* @y.18
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !1430

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %struct.utmpx*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %22, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %22, metadata !1431, metadata !DIExpression()), !dbg !1425
  %23 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.88, i64 0, i64 0)) #10, !dbg !1426
  %24 = load %struct.utmpx*, %struct.utmpx** %22, align 8, !dbg !1427
  %25 = call i8* @time_string(%struct.utmpx* %24), !dbg !1428
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %23, i8* %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1429
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_clockchange(%struct.utmpx*) #4 !dbg !1533 {
  %2 = load i32, i32* @x.19
  %3 = load i32, i32* @y.20
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !1534, metadata !DIExpression()), !dbg !1535
  %11 = call i8* @gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.89, i64 0, i64 0)) #10, !dbg !1536
  %12 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1537
  %13 = call i8* @time_string(%struct.utmpx* %12), !dbg !1538
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %11, i8* %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1539
  %14 = load i32, i32* @x.19
  %15 = load i32, i32* @y.20
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !1540

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %struct.utmpx*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %22, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %22, metadata !1541, metadata !DIExpression()), !dbg !1535
  %23 = call i8* @gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.89, i64 0, i64 0)) #10, !dbg !1536
  %24 = load %struct.utmpx*, %struct.utmpx** %22, align 8, !dbg !1537
  %25 = call i8* @time_string(%struct.utmpx* %24), !dbg !1538
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 -1, i8* %23, i8* %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1539
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_initspawn(%struct.utmpx*) #4 !dbg !1643 {
  %2 = alloca %struct.utmpx*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca [12 x i8], align 1
  store %struct.utmpx* %0, %struct.utmpx** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %2, metadata !1644, metadata !DIExpression()), !dbg !1645
  call void @llvm.dbg.declare(metadata i8** %3, metadata !1646, metadata !DIExpression()), !dbg !1647
  %5 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !1648
  %6 = call i8* @make_id_equals_comment(%struct.utmpx* %5), !dbg !1649
  store i8* %6, i8** %3, align 8, !dbg !1647
  call void @llvm.dbg.declare(metadata [12 x i8]* %4, metadata !1650, metadata !DIExpression()), !dbg !1651
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* %4, i64 0, i64 0, !dbg !1651
  %8 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !1651
  %9 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %8, i32 0, i32 1, !dbg !1651
  %10 = load i32, i32* %9, align 4, !dbg !1651
  %11 = sext i32 %10 to i64, !dbg !1651
  %12 = call i32 (i8*, i8*, ...) @sprintf(i8* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %11) #10, !dbg !1651
  %13 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !1652
  %14 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %13, i32 0, i32 2, !dbg !1653
  %15 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i64 0, i64 0, !dbg !1652
  %16 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !1654
  %17 = call i8* @time_string(%struct.utmpx* %16), !dbg !1655
  %18 = getelementptr inbounds [12 x i8], [12 x i8]* %4, i64 0, i64 0, !dbg !1656
  %19 = load i8*, i8** %3, align 8, !dbg !1657
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 32, i8* %15, i8* %17, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %18, i8* %19, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1658
  %20 = load i8*, i8** %3, align 8, !dbg !1659
  call void @free(i8* %20) #10, !dbg !1660
  ret void, !dbg !1661
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_login(%struct.utmpx*) #4 !dbg !1662 {
  %2 = load i32, i32* @x.23
  %3 = load i32, i32* @y.24
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca [12 x i8], align 1
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !1663, metadata !DIExpression()), !dbg !1664
  call void @llvm.dbg.declare(metadata i8** %11, metadata !1665, metadata !DIExpression()), !dbg !1666
  %13 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1667
  %14 = call i8* @make_id_equals_comment(%struct.utmpx* %13), !dbg !1668
  store i8* %14, i8** %11, align 8, !dbg !1666
  call void @llvm.dbg.declare(metadata [12 x i8]* %12, metadata !1669, metadata !DIExpression()), !dbg !1670
  %15 = getelementptr inbounds [12 x i8], [12 x i8]* %12, i64 0, i64 0, !dbg !1670
  %16 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1670
  %17 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %16, i32 0, i32 1, !dbg !1670
  %18 = load i32, i32* %17, align 4, !dbg !1670
  %19 = sext i32 %18 to i64, !dbg !1670
  %20 = call i32 (i8*, i8*, ...) @sprintf(i8* %15, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %19) #10, !dbg !1670
  %21 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i64 0, i64 0)) #10, !dbg !1671
  %22 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1672
  %23 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %22, i32 0, i32 2, !dbg !1673
  %24 = getelementptr inbounds [32 x i8], [32 x i8]* %23, i64 0, i64 0, !dbg !1672
  %25 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1674
  %26 = call i8* @time_string(%struct.utmpx* %25), !dbg !1675
  %27 = getelementptr inbounds [12 x i8], [12 x i8]* %12, i64 0, i64 0, !dbg !1676
  %28 = load i8*, i8** %11, align 8, !dbg !1677
  call void @print_line(i32 -1, i8* %21, i8 signext 32, i32 32, i8* %24, i8* %26, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %27, i8* %28, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1678
  %29 = load i8*, i8** %11, align 8, !dbg !1679
  call void @free(i8* %29) #10, !dbg !1680
  %30 = load i32, i32* @x.23
  %31 = load i32, i32* @y.24
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !1681

originalBBalteredBB:                              ; preds = %originalBB, %1
  %38 = alloca %struct.utmpx*, align 8
  %39 = alloca i8*, align 8
  %40 = alloca [12 x i8], align 1
  store %struct.utmpx* %0, %struct.utmpx** %38, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %38, metadata !1682, metadata !DIExpression()), !dbg !1664
  call void @llvm.dbg.declare(metadata i8** %39, metadata !1784, metadata !DIExpression()), !dbg !1666
  %41 = load %struct.utmpx*, %struct.utmpx** %38, align 8, !dbg !1667
  %42 = call i8* @make_id_equals_comment(%struct.utmpx* %41), !dbg !1668
  store i8* %42, i8** %39, align 8, !dbg !1666
  call void @llvm.dbg.declare(metadata [12 x i8]* %40, metadata !1785, metadata !DIExpression()), !dbg !1670
  %43 = getelementptr inbounds [12 x i8], [12 x i8]* %40, i64 0, i64 0, !dbg !1670
  %44 = load %struct.utmpx*, %struct.utmpx** %38, align 8, !dbg !1670
  %45 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %44, i32 0, i32 1, !dbg !1670
  %46 = load i32, i32* %45, align 4, !dbg !1670
  %47 = sext i32 %46 to i64, !dbg !1670
  %48 = call i32 (i8*, i8*, ...) @sprintf(i8* %43, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %47) #10, !dbg !1670
  %49 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i64 0, i64 0)) #10, !dbg !1671
  %50 = load %struct.utmpx*, %struct.utmpx** %38, align 8, !dbg !1672
  %51 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %50, i32 0, i32 2, !dbg !1673
  %52 = getelementptr inbounds [32 x i8], [32 x i8]* %51, i64 0, i64 0, !dbg !1672
  %53 = load %struct.utmpx*, %struct.utmpx** %38, align 8, !dbg !1674
  %54 = call i8* @time_string(%struct.utmpx* %53), !dbg !1675
  %55 = getelementptr inbounds [12 x i8], [12 x i8]* %40, i64 0, i64 0, !dbg !1676
  %56 = load i8*, i8** %39, align 8, !dbg !1677
  call void @print_line(i32 -1, i8* %49, i8 signext 32, i32 32, i8* %52, i8* %54, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %55, i8* %56, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)), !dbg !1678
  %57 = load i8*, i8** %39, align 8, !dbg !1679
  call void @free(i8* %57) #10, !dbg !1680
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_deadprocs(%struct.utmpx*) #4 !dbg !140 {
  %2 = alloca %struct.utmpx*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca [12 x i8], align 1
  store %struct.utmpx* %0, %struct.utmpx** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %2, metadata !1786, metadata !DIExpression()), !dbg !1787
  call void @llvm.dbg.declare(metadata i8** %3, metadata !1788, metadata !DIExpression()), !dbg !1789
  %5 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !1790
  %6 = call i8* @make_id_equals_comment(%struct.utmpx* %5), !dbg !1791
  store i8* %6, i8** %3, align 8, !dbg !1789
  call void @llvm.dbg.declare(metadata [12 x i8]* %4, metadata !1792, metadata !DIExpression()), !dbg !1793
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* %4, i64 0, i64 0, !dbg !1793
  %8 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !1793
  %9 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %8, i32 0, i32 1, !dbg !1793
  %10 = load i32, i32* %9, align 4, !dbg !1793
  %11 = sext i32 %10 to i64, !dbg !1793
  %12 = call i32 (i8*, i8*, ...) @sprintf(i8* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 %11) #10, !dbg !1793
  %13 = load i8*, i8** @print_deadprocs.exitstr, align 8, !dbg !1794
  %14 = icmp ne i8* %13, null, !dbg !1794
  br i1 %14, label %42, label %15, !dbg !1796

15:                                               ; preds = %1
  %16 = load i32, i32* @x.25
  %17 = load i32, i32* @y.26
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0)) #10, !dbg !1797
  %25 = call i64 @strlen(i8* %24) #13, !dbg !1798
  %26 = add i64 %25, 6, !dbg !1799
  %27 = add i64 %26, 1, !dbg !1800
  %28 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0)) #10, !dbg !1801
  %29 = call i64 @strlen(i8* %28) #13, !dbg !1802
  %30 = add i64 %27, %29, !dbg !1803
  %31 = add i64 %30, 6, !dbg !1804
  %32 = add i64 %31, 1, !dbg !1805
  %33 = call noalias i8* @xmalloc(i64 %32), !dbg !1806
  store i8* %33, i8** @print_deadprocs.exitstr, align 8, !dbg !1807
  %34 = load i32, i32* @x.25
  %35 = load i32, i32* @y.26
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %42, !dbg !1808

42:                                               ; preds = %originalBBpart2, %1
  %43 = load i8*, i8** @print_deadprocs.exitstr, align 8, !dbg !1809
  %44 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0)) #10, !dbg !1810
  %45 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !1811
  %46 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %45, i32 0, i32 6, !dbg !1811
  %47 = getelementptr inbounds %struct.__exit_status, %struct.__exit_status* %46, i32 0, i32 0, !dbg !1811
  %48 = load i16, i16* %47, align 4, !dbg !1811
  %49 = sext i16 %48 to i32, !dbg !1811
  %50 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0)) #10, !dbg !1812
  %51 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !1813
  %52 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %51, i32 0, i32 6, !dbg !1813
  %53 = getelementptr inbounds %struct.__exit_status, %struct.__exit_status* %52, i32 0, i32 1, !dbg !1813
  %54 = load i16, i16* %53, align 2, !dbg !1813
  %55 = sext i16 %54 to i32, !dbg !1813
  %56 = call i32 (i8*, i8*, ...) @sprintf(i8* %43, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.94, i64 0, i64 0), i8* %44, i32 %49, i8* %50, i32 %55) #10, !dbg !1814
  %57 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !1815
  %58 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %57, i32 0, i32 2, !dbg !1816
  %59 = getelementptr inbounds [32 x i8], [32 x i8]* %58, i64 0, i64 0, !dbg !1815
  %60 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !1817
  %61 = call i8* @time_string(%struct.utmpx* %60), !dbg !1818
  %62 = getelementptr inbounds [12 x i8], [12 x i8]* %4, i64 0, i64 0, !dbg !1819
  %63 = load i8*, i8** %3, align 8, !dbg !1820
  %64 = load i8*, i8** @print_deadprocs.exitstr, align 8, !dbg !1821
  call void @print_line(i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8 signext 32, i32 32, i8* %59, i8* %61, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i8* %62, i8* %63, i8* %64), !dbg !1822
  %65 = load i8*, i8** %3, align 8, !dbg !1823
  call void @free(i8* %65) #10, !dbg !1824
  ret void, !dbg !1825

originalBBalteredBB:                              ; preds = %originalBB, %15
  %66 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0)) #10, !dbg !1797
  %67 = call i64 @strlen(i8* %66) #13, !dbg !1798
  %_ = sub i64 %67, 6
  %gen = mul i64 %_, 6
  %_1 = sub i64 0, %67
  %gen2 = add i64 %_1, 6
  %_3 = sub i64 0, %67
  %gen4 = add i64 %_3, 6
  %68 = add i64 %67, 6, !dbg !1799
  %_5 = sub i64 0, %68
  %gen6 = add i64 %_5, 1
  %_7 = shl i64 %68, 1
  %_8 = shl i64 %68, 1
  %_9 = shl i64 %68, 1
  %_10 = shl i64 %68, 1
  %_11 = sub i64 0, %68
  %gen12 = add i64 %_11, 1
  %69 = add i64 %68, 1, !dbg !1800
  %70 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0)) #10, !dbg !1801
  %71 = call i64 @strlen(i8* %70) #13, !dbg !1802
  %_13 = shl i64 %69, %71
  %_14 = sub i64 0, %69
  %gen15 = add i64 %_14, %71
  %_16 = sub i64 %69, %71
  %gen17 = mul i64 %_16, %71
  %_18 = shl i64 %69, %71
  %_19 = shl i64 %69, %71
  %_20 = sub i64 %69, %71
  %gen21 = mul i64 %_20, %71
  %_22 = sub i64 0, %69
  %gen23 = add i64 %_22, %71
  %_24 = sub i64 %69, %71
  %gen25 = mul i64 %_24, %71
  %72 = add i64 %69, %71, !dbg !1803
  %_26 = shl i64 %72, 6
  %_27 = shl i64 %72, 6
  %73 = add i64 %72, 6, !dbg !1804
  %_28 = shl i64 %73, 1
  %_29 = shl i64 %73, 1
  %_30 = sub i64 %73, 1
  %gen31 = mul i64 %_30, 1
  %_32 = sub i64 0, %73
  %gen33 = add i64 %_32, 1
  %74 = add i64 %73, 1, !dbg !1805
  %75 = call noalias i8* @xmalloc(i64 %74), !dbg !1806
  store i8* %75, i8** @print_deadprocs.exitstr, align 8, !dbg !1807
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @make_id_equals_comment(%struct.utmpx*) #4 !dbg !1826 {
  %2 = load i32, i32* @x.27
  %3 = load i32, i32* @y.28
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct.utmpx*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !1829, metadata !DIExpression()), !dbg !1830
  call void @llvm.dbg.declare(metadata i64* %11, metadata !1831, metadata !DIExpression()), !dbg !1832
  store i64 4, i64* %11, align 8, !dbg !1832
  call void @llvm.dbg.declare(metadata i8** %12, metadata !1833, metadata !DIExpression()), !dbg !1834
  %13 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i64 0, i64 0)) #10, !dbg !1835
  %14 = call i64 @strlen(i8* %13) #13, !dbg !1836
  %15 = load i64, i64* %11, align 8, !dbg !1837
  %16 = add i64 %14, %15, !dbg !1838
  %17 = add i64 %16, 1, !dbg !1839
  %18 = call noalias i8* @xmalloc(i64 %17), !dbg !1840
  store i8* %18, i8** %12, align 8, !dbg !1834
  %19 = load i8*, i8** %12, align 8, !dbg !1841
  %20 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i64 0, i64 0)) #10, !dbg !1842
  %21 = call i8* @strcpy(i8* %19, i8* %20) #10, !dbg !1843
  %22 = load i8*, i8** %12, align 8, !dbg !1844
  %23 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !1845
  %24 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %23, i32 0, i32 3, !dbg !1845
  %25 = getelementptr inbounds [4 x i8], [4 x i8]* %24, i64 0, i64 0, !dbg !1845
  %26 = load i64, i64* %11, align 8, !dbg !1846
  %27 = call i8* @strncat(i8* %22, i8* %25, i64 %26) #10, !dbg !1847
  %28 = load i8*, i8** %12, align 8, !dbg !1848
  %29 = load i32, i32* @x.27
  %30 = load i32, i32* @y.28
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %28, !dbg !1849

originalBBalteredBB:                              ; preds = %originalBB, %1
  %37 = alloca %struct.utmpx*, align 8
  %38 = alloca i64, align 8
  %39 = alloca i8*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %37, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %37, metadata !1850, metadata !DIExpression()), !dbg !1830
  call void @llvm.dbg.declare(metadata i64* %38, metadata !1954, metadata !DIExpression()), !dbg !1832
  store i64 4, i64* %38, align 8, !dbg !1832
  call void @llvm.dbg.declare(metadata i8** %39, metadata !1955, metadata !DIExpression()), !dbg !1834
  %40 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i64 0, i64 0)) #10, !dbg !1835
  %41 = call i64 @strlen(i8* %40) #13, !dbg !1836
  %42 = load i64, i64* %38, align 8, !dbg !1837
  %_ = shl i64 %41, %42
  %_1 = shl i64 %41, %42
  %_2 = sub i64 0, %41
  %gen = add i64 %_2, %42
  %_3 = shl i64 %41, %42
  %43 = add i64 %41, %42, !dbg !1838
  %_4 = sub i64 0, %43
  %gen5 = add i64 %_4, 1
  %_6 = shl i64 %43, 1
  %_7 = shl i64 %43, 1
  %_8 = sub i64 0, %43
  %gen9 = add i64 %_8, 1
  %_10 = sub i64 0, %43
  %gen11 = add i64 %_10, 1
  %44 = add i64 %43, 1, !dbg !1839
  %45 = call noalias i8* @xmalloc(i64 %44), !dbg !1840
  store i8* %45, i8** %39, align 8, !dbg !1834
  %46 = load i8*, i8** %39, align 8, !dbg !1841
  %47 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i64 0, i64 0)) #10, !dbg !1842
  %48 = call i8* @strcpy(i8* %46, i8* %47) #10, !dbg !1843
  %49 = load i8*, i8** %39, align 8, !dbg !1844
  %50 = load %struct.utmpx*, %struct.utmpx** %37, align 8, !dbg !1845
  %51 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %50, i32 0, i32 3, !dbg !1845
  %52 = getelementptr inbounds [4 x i8], [4 x i8]* %51, i64 0, i64 0, !dbg !1845
  %53 = load i64, i64* %38, align 8, !dbg !1846
  %54 = call i8* @strncat(i8* %49, i8* %52, i64 %53) #10, !dbg !1847
  %55 = load i8*, i8** %39, align 8, !dbg !1848
  br label %originalBB
}

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @time_string(%struct.utmpx*) #4 !dbg !125 {
  %2 = load i32, i32* @x.29
  %3 = load i32, i32* @y.30
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  %11 = alloca %struct.utmpx*, align 8
  %12 = alloca i64, align 8
  %13 = alloca %struct.tm*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %11, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %11, metadata !1956, metadata !DIExpression()), !dbg !1957
  call void @llvm.dbg.declare(metadata i64* %12, metadata !1958, metadata !DIExpression()), !dbg !1959
  %14 = load %struct.utmpx*, %struct.utmpx** %11, align 8, !dbg !1960
  %15 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %14, i32 0, i32 8, !dbg !1960
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %15, i32 0, i32 0, !dbg !1960
  %17 = load i32, i32* %16, align 4, !dbg !1960
  %18 = sext i32 %17 to i64, !dbg !1960
  store i64 %18, i64* %12, align 8, !dbg !1959
  call void @llvm.dbg.declare(metadata %struct.tm** %13, metadata !1961, metadata !DIExpression()), !dbg !1977
  %19 = call %struct.tm* @localtime(i64* %12) #10, !dbg !1978
  store %struct.tm* %19, %struct.tm** %13, align 8, !dbg !1977
  %20 = load %struct.tm*, %struct.tm** %13, align 8, !dbg !1979
  %21 = icmp ne %struct.tm* %20, null, !dbg !1979
  %22 = load i32, i32* @x.29
  %23 = load i32, i32* @y.30
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %50, !dbg !1981

30:                                               ; preds = %originalBBpart2
  %31 = load i32, i32* @x.29
  %32 = load i32, i32* @y.30
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load i8*, i8** @time_format, align 8, !dbg !1982
  %40 = load %struct.tm*, %struct.tm** %13, align 8, !dbg !1984
  %41 = call i64 @strftime(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @time_string.buf, i64 0, i64 0), i64 33, i8* %39, %struct.tm* %40) #10, !dbg !1985
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @time_string.buf, i64 0, i64 0), i8** %10, align 8, !dbg !1986
  %42 = load i32, i32* @x.29
  %43 = load i32, i32* @y.30
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %69, !dbg !1986

50:                                               ; preds = %originalBBpart2
  %51 = load i32, i32* @x.29
  %52 = load i32, i32* @y.30
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %50, %originalBB6alteredBB
  %59 = load i64, i64* %12, align 8, !dbg !1987
  %60 = call i8* @timetostr(i64 %59, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @time_string.buf, i64 0, i64 0)), !dbg !1988
  store i8* %60, i8** %10, align 8, !dbg !1989
  %61 = load i32, i32* @x.29
  %62 = load i32, i32* @y.30
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %69, !dbg !1989

69:                                               ; preds = %originalBBpart28, %originalBBpart24
  %70 = load i8*, i8** %10, align 8, !dbg !1990
  ret i8* %70, !dbg !1990

originalBBalteredBB:                              ; preds = %originalBB, %1
  %71 = alloca i8*, align 8
  %72 = alloca %struct.utmpx*, align 8
  %73 = alloca i64, align 8
  %74 = alloca %struct.tm*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %72, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %72, metadata !1991, metadata !DIExpression()), !dbg !1957
  call void @llvm.dbg.declare(metadata i64* %73, metadata !2092, metadata !DIExpression()), !dbg !1959
  %75 = load %struct.utmpx*, %struct.utmpx** %72, align 8, !dbg !1960
  %76 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %75, i32 0, i32 8, !dbg !1960
  %77 = getelementptr inbounds %struct.anon, %struct.anon* %76, i32 0, i32 0, !dbg !1960
  %78 = load i32, i32* %77, align 4, !dbg !1960
  %79 = sext i32 %78 to i64, !dbg !1960
  store i64 %79, i64* %73, align 8, !dbg !1959
  call void @llvm.dbg.declare(metadata %struct.tm** %74, metadata !2093, metadata !DIExpression()), !dbg !1977
  %80 = call %struct.tm* @localtime(i64* %73) #10, !dbg !1978
  store %struct.tm* %80, %struct.tm** %74, align 8, !dbg !1977
  %81 = load %struct.tm*, %struct.tm** %74, align 8, !dbg !1979
  %82 = icmp ne %struct.tm* %81, null, !dbg !1979
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %83 = load i8*, i8** @time_format, align 8, !dbg !1982
  %84 = load %struct.tm*, %struct.tm** %13, align 8, !dbg !1984
  %85 = call i64 @strftime(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @time_string.buf, i64 0, i64 0), i64 33, i8* %83, %struct.tm* %84) #10, !dbg !1985
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @time_string.buf, i64 0, i64 0), i8** %10, align 8, !dbg !1986
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %50
  %86 = load i64, i64* %12, align 8, !dbg !1987
  %87 = call i8* @timetostr(i64 %86, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @time_string.buf, i64 0, i64 0)), !dbg !1988
  store i8* %87, i8** %10, align 8, !dbg !1989
  br label %originalBB6
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_line(i32, i8*, i8 signext, i32, i8*, i8*, i8*, i8*, i8*, i8*) #4 !dbg !56 {
  %11 = load i32, i32* @x.31
  %12 = load i32, i32* @y.32
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i8, align 1
  %22 = alloca i32, align 4
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i8*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i8*, align 8
  %29 = alloca i8*, align 8
  %30 = alloca [8 x i8], align 1
  %31 = alloca [13 x i8], align 1
  %32 = alloca i8*, align 8
  %33 = alloca i32, align 4
  %34 = alloca i8*, align 8
  store i32 %0, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !2108, metadata !DIExpression()), !dbg !2109
  store i8* %1, i8** %20, align 8
  call void @llvm.dbg.declare(metadata i8** %20, metadata !2110, metadata !DIExpression()), !dbg !2111
  store i8 %2, i8* %21, align 1
  call void @llvm.dbg.declare(metadata i8* %21, metadata !2112, metadata !DIExpression()), !dbg !2113
  store i32 %3, i32* %22, align 4
  call void @llvm.dbg.declare(metadata i32* %22, metadata !2114, metadata !DIExpression()), !dbg !2115
  store i8* %4, i8** %23, align 8
  call void @llvm.dbg.declare(metadata i8** %23, metadata !2116, metadata !DIExpression()), !dbg !2117
  store i8* %5, i8** %24, align 8
  call void @llvm.dbg.declare(metadata i8** %24, metadata !2118, metadata !DIExpression()), !dbg !2119
  store i8* %6, i8** %25, align 8
  call void @llvm.dbg.declare(metadata i8** %25, metadata !2120, metadata !DIExpression()), !dbg !2121
  store i8* %7, i8** %26, align 8
  call void @llvm.dbg.declare(metadata i8** %26, metadata !2122, metadata !DIExpression()), !dbg !2123
  store i8* %8, i8** %27, align 8
  call void @llvm.dbg.declare(metadata i8** %27, metadata !2124, metadata !DIExpression()), !dbg !2125
  store i8* %9, i8** %28, align 8
  call void @llvm.dbg.declare(metadata i8** %28, metadata !2126, metadata !DIExpression()), !dbg !2127
  call void @llvm.dbg.declare(metadata i8** %29, metadata !2128, metadata !DIExpression()), !dbg !2129
  call void @llvm.dbg.declare(metadata [8 x i8]* %30, metadata !2130, metadata !DIExpression()), !dbg !2132
  call void @llvm.dbg.declare(metadata [13 x i8]* %31, metadata !2133, metadata !DIExpression()), !dbg !2137
  call void @llvm.dbg.declare(metadata i8** %32, metadata !2138, metadata !DIExpression()), !dbg !2139
  call void @llvm.dbg.declare(metadata i32* %33, metadata !2140, metadata !DIExpression()), !dbg !2141
  %35 = load i8, i8* %21, align 1, !dbg !2142
  store i8 %35, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @print_line.mesg, i64 0, i64 1), align 1, !dbg !2143
  %36 = load i8, i8* @include_idle, align 1, !dbg !2144
  %37 = trunc i8 %36 to i1, !dbg !2144
  %38 = load i32, i32* @x.31
  %39 = load i32, i32* @y.32
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %37, label %46, label %73, !dbg !2146

46:                                               ; preds = %originalBBpart2
  %47 = load i32, i32* @x.31
  %48 = load i32, i32* @y.32
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %46, %originalBB1alteredBB
  %55 = load i8, i8* @short_output, align 1, !dbg !2147
  %56 = trunc i8 %55 to i1, !dbg !2147
  %57 = load i32, i32* @x.31
  %58 = load i32, i32* @y.32
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %56, label %73, label %65, !dbg !2148

65:                                               ; preds = %originalBBpart24
  %66 = load i8*, i8** %25, align 8, !dbg !2149
  %67 = call i64 @strlen(i8* %66) #13, !dbg !2150
  %68 = icmp ult i64 %67, 7, !dbg !2151
  br i1 %68, label %69, label %73, !dbg !2152

69:                                               ; preds = %65
  %70 = getelementptr inbounds [8 x i8], [8 x i8]* %30, i64 0, i64 0, !dbg !2153
  %71 = load i8*, i8** %25, align 8, !dbg !2154
  %72 = call i32 (i8*, i8*, ...) @sprintf(i8* %70, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0), i8* %71) #10, !dbg !2155
  br label %91, !dbg !2155

73:                                               ; preds = %65, %originalBBpart24, %originalBBpart2
  %74 = load i32, i32* @x.31
  %75 = load i32, i32* @y.32
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %73, %originalBB6alteredBB
  %82 = getelementptr inbounds [8 x i8], [8 x i8]* %30, i64 0, i64 0, !dbg !2156
  store i8 0, i8* %82, align 1, !dbg !2157
  %83 = load i32, i32* @x.31
  %84 = load i32, i32* @y.32
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %91

91:                                               ; preds = %originalBBpart28, %69
  %92 = load i32, i32* @x.31
  %93 = load i32, i32* @y.32
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %91, %originalBB10alteredBB
  %100 = load i8, i8* @short_output, align 1, !dbg !2158
  %101 = trunc i8 %100 to i1, !dbg !2158
  %102 = load i32, i32* @x.31
  %103 = load i32, i32* @y.32
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %101, label %150, label %110, !dbg !2160

110:                                              ; preds = %originalBBpart212
  %111 = load i32, i32* @x.31
  %112 = load i32, i32* @y.32
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %110, %originalBB14alteredBB
  %119 = load i8*, i8** %26, align 8, !dbg !2161
  %120 = call i64 @strlen(i8* %119) #13, !dbg !2162
  %121 = icmp ult i64 %120, 12, !dbg !2163
  %122 = load i32, i32* @x.31
  %123 = load i32, i32* @y.32
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %121, label %130, label %150, !dbg !2164

130:                                              ; preds = %originalBBpart216
  %131 = load i32, i32* @x.31
  %132 = load i32, i32* @y.32
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %130, %originalBB18alteredBB
  %139 = getelementptr inbounds [13 x i8], [13 x i8]* %31, i64 0, i64 0, !dbg !2165
  %140 = load i8*, i8** %26, align 8, !dbg !2166
  %141 = call i32 (i8*, i8*, ...) @sprintf(i8* %139, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), i8* %140) #10, !dbg !2167
  %142 = load i32, i32* @x.31
  %143 = load i32, i32* @y.32
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %168, !dbg !2167

150:                                              ; preds = %originalBBpart216, %originalBBpart212
  %151 = load i32, i32* @x.31
  %152 = load i32, i32* @y.32
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %150, %originalBB22alteredBB
  %159 = getelementptr inbounds [13 x i8], [13 x i8]* %31, i64 0, i64 0, !dbg !2168
  store i8 0, i8* %159, align 1, !dbg !2169
  %160 = load i32, i32* @x.31
  %161 = load i32, i32* @y.32
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %168

168:                                              ; preds = %originalBBpart224, %originalBBpart220
  %169 = load i32, i32* @x.31
  %170 = load i32, i32* @y.32
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %168, %originalBB26alteredBB
  %177 = load i8, i8* @include_exit, align 1, !dbg !2170
  %178 = trunc i8 %177 to i1, !dbg !2170
  %179 = load i32, i32* @x.31
  %180 = load i32, i32* @y.32
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %178, label %187, label %215, !dbg !2170

187:                                              ; preds = %originalBBpart228
  %188 = load i8*, i8** %28, align 8, !dbg !2171
  %189 = call i64 @strlen(i8* %188) #13, !dbg !2171
  %190 = icmp ugt i64 12, %189, !dbg !2171
  br i1 %190, label %191, label %192, !dbg !2171

191:                                              ; preds = %187
  br label %211, !dbg !2171

192:                                              ; preds = %187
  %193 = load i32, i32* @x.31
  %194 = load i32, i32* @y.32
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %192, %originalBB30alteredBB
  %201 = load i8*, i8** %28, align 8, !dbg !2171
  %202 = call i64 @strlen(i8* %201) #13, !dbg !2171
  %203 = load i32, i32* @x.31
  %204 = load i32, i32* @y.32
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %211, !dbg !2171

211:                                              ; preds = %originalBBpart232, %191
  %212 = phi i64 [ 12, %191 ], [ %202, %originalBBpart232 ], !dbg !2171
  %213 = add i64 1, %212, !dbg !2172
  %214 = add i64 %213, 1, !dbg !2173
  br label %232, !dbg !2170

215:                                              ; preds = %originalBBpart228
  %216 = load i32, i32* @x.31
  %217 = load i32, i32* @y.32
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %215, %originalBB34alteredBB
  %224 = load i32, i32* @x.31
  %225 = load i32, i32* @y.32
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %232, !dbg !2170

232:                                              ; preds = %originalBBpart236, %211
  %233 = phi i64 [ %214, %211 ], [ 1, %originalBBpart236 ], !dbg !2170
  %234 = call noalias i8* @xmalloc(i64 %233), !dbg !2174
  store i8* %234, i8** %32, align 8, !dbg !2175
  %235 = load i8, i8* @include_exit, align 1, !dbg !2176
  %236 = trunc i8 %235 to i1, !dbg !2176
  br i1 %236, label %237, label %257, !dbg !2178

237:                                              ; preds = %232
  %238 = load i32, i32* @x.31
  %239 = load i32, i32* @y.32
  %240 = sub i32 %238, 1
  %241 = mul i32 %238, %240
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %243, %244
  br i1 %245, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %237, %originalBB38alteredBB
  %246 = load i8*, i8** %32, align 8, !dbg !2179
  %247 = load i8*, i8** %28, align 8, !dbg !2180
  %248 = call i32 (i8*, i8*, ...) @sprintf(i8* %246, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.71, i64 0, i64 0), i8* %247) #10, !dbg !2181
  %249 = load i32, i32* @x.31
  %250 = load i32, i32* @y.32
  %251 = sub i32 %249, 1
  %252 = mul i32 %249, %251
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %254, %255
  br i1 %256, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %259, !dbg !2181

257:                                              ; preds = %232
  %258 = load i8*, i8** %32, align 8, !dbg !2182
  store i8 0, i8* %258, align 1, !dbg !2183
  br label %259

259:                                              ; preds = %257, %originalBBpart240
  %260 = load i32, i32* @x.31
  %261 = load i32, i32* @y.32
  %262 = sub i32 %260, 1
  %263 = mul i32 %260, %262
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %265, %266
  br i1 %267, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %259, %originalBB42alteredBB
  %268 = load i32, i32* %19, align 4, !dbg !2184
  %269 = load i8*, i8** %20, align 8, !dbg !2185
  %270 = icmp ne i8* %269, null, !dbg !2185
  %271 = load i32, i32* @x.31
  %272 = load i32, i32* @y.32
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br i1 %270, label %279, label %297, !dbg !2185

279:                                              ; preds = %originalBBpart244
  %280 = load i32, i32* @x.31
  %281 = load i32, i32* @y.32
  %282 = sub i32 %280, 1
  %283 = mul i32 %280, %282
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %285, %286
  br i1 %287, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %279, %originalBB46alteredBB
  %288 = load i8*, i8** %20, align 8, !dbg !2186
  %289 = load i32, i32* @x.31
  %290 = load i32, i32* @y.32
  %291 = sub i32 %289, 1
  %292 = mul i32 %289, %291
  %293 = urem i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %290, 10
  %296 = or i1 %294, %295
  br i1 %296, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %298, !dbg !2185

297:                                              ; preds = %originalBBpart244
  br label %298, !dbg !2185

298:                                              ; preds = %297, %originalBBpart248
  %299 = phi i8* [ %288, %originalBBpart248 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73, i64 0, i64 0), %297 ], !dbg !2185
  %300 = load i32, i32* @x.31
  %301 = load i32, i32* @y.32
  %302 = sub i32 %300, 1
  %303 = mul i32 %300, %302
  %304 = urem i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %305, %306
  br i1 %307, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %298, %originalBB50alteredBB
  %308 = load i8, i8* @include_mesg, align 1, !dbg !2187
  %309 = trunc i8 %308 to i1, !dbg !2187
  %310 = zext i1 %309 to i64, !dbg !2187
  %311 = select i1 %309, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @print_line.mesg, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !2187
  %312 = load i32, i32* %22, align 4, !dbg !2188
  %313 = load i8*, i8** %23, align 8, !dbg !2189
  %314 = load i32, i32* @time_format_width, align 4, !dbg !2190
  %315 = load i8*, i8** %24, align 8, !dbg !2191
  %316 = getelementptr inbounds [8 x i8], [8 x i8]* %30, i64 0, i64 0, !dbg !2192
  %317 = getelementptr inbounds [13 x i8], [13 x i8]* %31, i64 0, i64 0, !dbg !2193
  %318 = load i8*, i8** %27, align 8, !dbg !2194
  %319 = load i8*, i8** %32, align 8, !dbg !2195
  %320 = call i32 (i8**, i8*, ...) @asprintf(i8** %29, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.72, i64 0, i64 0), i32 %268, i8* %299, i8* %311, i32 %312, i8* %313, i32 %314, i8* %315, i8* %316, i8* %317, i8* %318, i8* %319) #10, !dbg !2196
  store i32 %320, i32* %33, align 4, !dbg !2197
  %321 = load i32, i32* %33, align 4, !dbg !2198
  %322 = load i32, i32* @x.31
  %323 = load i32, i32* @y.32
  %324 = sub i32 %322, 1
  %325 = mul i32 %322, %324
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %327, %328
  br i1 %329, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %330, !dbg !2200

330:                                              ; preds = %originalBBpart252
  %331 = load i32, i32* @x.31
  %332 = load i32, i32* @y.32
  %333 = sub i32 %331, 1
  %334 = mul i32 %331, %333
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %336, %337
  br i1 %338, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %330, %originalBB54alteredBB
  %collatzVar = alloca i32
  %339 = load i32, i32* @x.31
  %340 = load i32, i32* @y.32
  %341 = sub i32 %339, 1
  %342 = mul i32 %339, %341
  %343 = urem i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %344, %345
  br i1 %346, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %347

347:                                              ; preds = %originalBBpart256
  %348 = load i32, i32* @x.31
  %349 = load i32, i32* @y.32
  %350 = sub i32 %348, 1
  %351 = mul i32 %348, %350
  %352 = urem i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %349, 10
  %355 = or i1 %353, %354
  br i1 %355, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %347, %originalBB58alteredBB
  %356 = load i32, i32* @inVal0
  %357 = icmp sgt i32 %356, 1
  %358 = load i32, i32* @x.31
  %359 = load i32, i32* @y.32
  %360 = sub i32 %358, 1
  %361 = mul i32 %358, %360
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %363, %364
  br i1 %365, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br i1 %357, label %367, label %366

366:                                              ; preds = %originalBBpart260
  store i32 21, i32* %collatzVar
  br label %367

367:                                              ; preds = %366, %originalBBpart260
  %368 = load i8**, i8*** @inVal1
  %369 = getelementptr inbounds i8*, i8** %368, i64 1
  %370 = load i8*, i8** %369
  %controle = call i32 @controle(i8* %370, i32 -1)
  store i32 %controle, i32* %collatzVar
  br label %371

371:                                              ; preds = %originalBBpart288, %417, %367
  %372 = load i32, i32* @x.31
  %373 = load i32, i32* @y.32
  %374 = sub i32 %372, 1
  %375 = mul i32 %372, %374
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %377, %378
  br i1 %379, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %371, %originalBB62alteredBB
  %380 = load i32, i32* %collatzVar
  %381 = icmp sgt i32 %380, 1
  %382 = load i32, i32* @x.31
  %383 = load i32, i32* @y.32
  %384 = sub i32 %382, 1
  %385 = mul i32 %382, %384
  %386 = urem i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %383, 10
  %389 = or i1 %387, %388
  br i1 %389, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br i1 %381, label %390, label %442

390:                                              ; preds = %originalBBpart264
  %391 = load i32, i32* @x.31
  %392 = load i32, i32* @y.32
  %393 = sub i32 %391, 1
  %394 = mul i32 %391, %393
  %395 = urem i32 %394, 2
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %392, 10
  %398 = or i1 %396, %397
  br i1 %398, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %390, %originalBB66alteredBB
  %399 = load i32, i32* %collatzVar
  %400 = srem i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = load i32, i32* @x.31
  %403 = load i32, i32* @y.32
  %404 = sub i32 %402, 1
  %405 = mul i32 %402, %404
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %407, %408
  br i1 %409, label %originalBBpart278, label %originalBB66alteredBB

originalBBpart278:                                ; preds = %originalBB66
  br i1 %401, label %410, label %413

410:                                              ; preds = %originalBBpart278
  %411 = load i32, i32* %collatzVar
  %412 = sdiv i32 %411, 2
  store i32 %412, i32* %collatzVar
  br label %417

413:                                              ; preds = %originalBBpart278
  %414 = load i32, i32* %collatzVar
  %415 = mul i32 %414, 3
  %416 = add i32 %415, 1
  store i32 %416, i32* %collatzVar
  br label %417

417:                                              ; preds = %413, %410
  %418 = load i32, i32* %collatzVar
  %419 = sub i32 %321, %418
  %420 = icmp sgt i32 %419, -3
  br i1 %420, label %421, label %371

421:                                              ; preds = %417
  %422 = load i32, i32* @x.31
  %423 = load i32, i32* @y.32
  %424 = sub i32 %422, 1
  %425 = mul i32 %422, %424
  %426 = urem i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %423, 10
  %429 = or i1 %427, %428
  br i1 %429, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %421, %originalBB80alteredBB
  %430 = load i32, i32* %collatzVar
  %431 = add i32 %321, %430
  %432 = icmp slt i32 %431, 1
  %433 = load i32, i32* @x.31
  %434 = load i32, i32* @y.32
  %435 = sub i32 %433, 1
  %436 = mul i32 %433, %435
  %437 = urem i32 %436, 2
  %438 = icmp eq i32 %437, 0
  %439 = icmp slt i32 %434, 10
  %440 = or i1 %438, %439
  br i1 %440, label %originalBBpart288, label %originalBB80alteredBB

originalBBpart288:                                ; preds = %originalBB80
  br i1 %432, label %441, label %371

441:                                              ; preds = %originalBBpart288
  call void @xalloc_die() #14, !dbg !2201
  unreachable, !dbg !2201

442:                                              ; preds = %originalBBpart264
  call void @llvm.dbg.declare(metadata i8** %34, metadata !2202, metadata !DIExpression()), !dbg !2204
  %443 = load i32, i32* @x.31
  %444 = load i32, i32* @y.32
  %445 = sub i32 %443, 1
  %446 = mul i32 %443, %445
  %447 = urem i32 %446, 2
  %448 = icmp eq i32 %447, 0
  %449 = icmp slt i32 %444, 10
  %450 = or i1 %448, %449
  br i1 %450, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %442, %originalBB90alteredBB
  %451 = load i8*, i8** %29, align 8, !dbg !2205
  %452 = load i8*, i8** %29, align 8, !dbg !2206
  %453 = call i64 @strlen(i8* %452) #13, !dbg !2207
  %454 = getelementptr inbounds i8, i8* %451, i64 %453, !dbg !2208
  store i8* %454, i8** %34, align 8, !dbg !2204
  %455 = load i32, i32* @x.31
  %456 = load i32, i32* @y.32
  %457 = sub i32 %455, 1
  %458 = mul i32 %455, %457
  %459 = urem i32 %458, 2
  %460 = icmp eq i32 %459, 0
  %461 = icmp slt i32 %456, 10
  %462 = or i1 %460, %461
  br i1 %462, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br label %463, !dbg !2209

463:                                              ; preds = %485, %originalBBpart292
  %464 = load i32, i32* @x.31
  %465 = load i32, i32* @y.32
  %466 = sub i32 %464, 1
  %467 = mul i32 %464, %466
  %468 = urem i32 %467, 2
  %469 = icmp eq i32 %468, 0
  %470 = icmp slt i32 %465, 10
  %471 = or i1 %469, %470
  br i1 %471, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %463, %originalBB94alteredBB
  %472 = load i8*, i8** %34, align 8, !dbg !2210
  %473 = getelementptr inbounds i8, i8* %472, i32 -1, !dbg !2210
  store i8* %473, i8** %34, align 8, !dbg !2210
  %474 = load i8, i8* %473, align 1, !dbg !2211
  %475 = sext i8 %474 to i32, !dbg !2211
  %476 = icmp eq i32 %475, 32, !dbg !2212
  %477 = load i32, i32* @x.31
  %478 = load i32, i32* @y.32
  %479 = sub i32 %477, 1
  %480 = mul i32 %477, %479
  %481 = urem i32 %480, 2
  %482 = icmp eq i32 %481, 0
  %483 = icmp slt i32 %478, 10
  %484 = or i1 %482, %483
  br i1 %484, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br i1 %476, label %485, label %486, !dbg !2209

485:                                              ; preds = %originalBBpart296
  br label %463, !dbg !2209, !llvm.loop !2213

486:                                              ; preds = %originalBBpart296
  %487 = load i8*, i8** %34, align 8, !dbg !2215
  %488 = getelementptr inbounds i8, i8* %487, i64 1, !dbg !2216
  store i8 0, i8* %488, align 1, !dbg !2217
  %489 = load i8*, i8** %29, align 8, !dbg !2218
  %490 = call i32 @puts(i8* %489), !dbg !2219
  %491 = load i8*, i8** %29, align 8, !dbg !2220
  call void @free(i8* %491) #10, !dbg !2221
  %492 = load i8*, i8** %32, align 8, !dbg !2222
  call void @free(i8* %492) #10, !dbg !2223
  ret void, !dbg !2224

originalBBalteredBB:                              ; preds = %originalBB, %10
  %493 = alloca i32, align 4
  %494 = alloca i8*, align 8
  %495 = alloca i8, align 1
  %496 = alloca i32, align 4
  %497 = alloca i8*, align 8
  %498 = alloca i8*, align 8
  %499 = alloca i8*, align 8
  %500 = alloca i8*, align 8
  %501 = alloca i8*, align 8
  %502 = alloca i8*, align 8
  %503 = alloca i8*, align 8
  %504 = alloca [8 x i8], align 1
  %505 = alloca [13 x i8], align 1
  %506 = alloca i8*, align 8
  %507 = alloca i32, align 4
  %508 = alloca i8*, align 8
  store i32 %0, i32* %493, align 4
  call void @llvm.dbg.declare(metadata i32* %493, metadata !2225, metadata !DIExpression()), !dbg !2109
  store i8* %1, i8** %494, align 8
  call void @llvm.dbg.declare(metadata i8** %494, metadata !2326, metadata !DIExpression()), !dbg !2111
  store i8 %2, i8* %495, align 1
  call void @llvm.dbg.declare(metadata i8* %495, metadata !2327, metadata !DIExpression()), !dbg !2113
  store i32 %3, i32* %496, align 4
  call void @llvm.dbg.declare(metadata i32* %496, metadata !2328, metadata !DIExpression()), !dbg !2115
  store i8* %4, i8** %497, align 8
  call void @llvm.dbg.declare(metadata i8** %497, metadata !2329, metadata !DIExpression()), !dbg !2117
  store i8* %5, i8** %498, align 8
  call void @llvm.dbg.declare(metadata i8** %498, metadata !2330, metadata !DIExpression()), !dbg !2119
  store i8* %6, i8** %499, align 8
  call void @llvm.dbg.declare(metadata i8** %499, metadata !2331, metadata !DIExpression()), !dbg !2121
  store i8* %7, i8** %500, align 8
  call void @llvm.dbg.declare(metadata i8** %500, metadata !2332, metadata !DIExpression()), !dbg !2123
  store i8* %8, i8** %501, align 8
  call void @llvm.dbg.declare(metadata i8** %501, metadata !2333, metadata !DIExpression()), !dbg !2125
  store i8* %9, i8** %502, align 8
  call void @llvm.dbg.declare(metadata i8** %502, metadata !2334, metadata !DIExpression()), !dbg !2127
  call void @llvm.dbg.declare(metadata i8** %503, metadata !2335, metadata !DIExpression()), !dbg !2129
  call void @llvm.dbg.declare(metadata [8 x i8]* %504, metadata !2336, metadata !DIExpression()), !dbg !2132
  call void @llvm.dbg.declare(metadata [13 x i8]* %505, metadata !2337, metadata !DIExpression()), !dbg !2137
  call void @llvm.dbg.declare(metadata i8** %506, metadata !2338, metadata !DIExpression()), !dbg !2139
  call void @llvm.dbg.declare(metadata i32* %507, metadata !2339, metadata !DIExpression()), !dbg !2141
  %509 = load i8, i8* %495, align 1, !dbg !2142
  store i8 %509, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @print_line.mesg, i64 0, i64 1), align 1, !dbg !2143
  %510 = load i8, i8* @include_idle, align 1, !dbg !2144
  %511 = trunc i8 %510 to i1, !dbg !2144
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %46
  %512 = load i8, i8* @short_output, align 1, !dbg !2147
  %513 = trunc i8 %512 to i1, !dbg !2147
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %73
  %514 = getelementptr inbounds [8 x i8], [8 x i8]* %30, i64 0, i64 0, !dbg !2156
  store i8 0, i8* %514, align 1, !dbg !2157
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %91
  %515 = load i8, i8* @short_output, align 1, !dbg !2158
  %516 = trunc i8 %515 to i1, !dbg !2158
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %110
  %517 = load i8*, i8** %26, align 8, !dbg !2161
  %518 = call i64 @strlen(i8* %517) #13, !dbg !2162
  %519 = icmp ult i64 %518, 12, !dbg !2163
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %130
  %520 = getelementptr inbounds [13 x i8], [13 x i8]* %31, i64 0, i64 0, !dbg !2165
  %521 = load i8*, i8** %26, align 8, !dbg !2166
  %522 = call i32 (i8*, i8*, ...) @sprintf(i8* %520, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), i8* %521) #10, !dbg !2167
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %150
  %523 = getelementptr inbounds [13 x i8], [13 x i8]* %31, i64 0, i64 0, !dbg !2168
  store i8 0, i8* %523, align 1, !dbg !2169
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %168
  %524 = load i8, i8* @include_exit, align 1, !dbg !2170
  %525 = trunc i8 %524 to i1, !dbg !2170
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %192
  %526 = load i8*, i8** %28, align 8, !dbg !2171
  %527 = call i64 @strlen(i8* %526) #13, !dbg !2171
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %215
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %237
  %528 = load i8*, i8** %32, align 8, !dbg !2179
  %529 = load i8*, i8** %28, align 8, !dbg !2180
  %530 = call i32 (i8*, i8*, ...) @sprintf(i8* %528, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.71, i64 0, i64 0), i8* %529) #10, !dbg !2181
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %259
  %531 = load i32, i32* %19, align 4, !dbg !2184
  %532 = load i8*, i8** %20, align 8, !dbg !2185
  %533 = icmp ne i8* %532, null, !dbg !2185
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %279
  %534 = load i8*, i8** %20, align 8, !dbg !2186
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %298
  %535 = load i8, i8* @include_mesg, align 1, !dbg !2187
  %536 = trunc i8 %535 to i1, !dbg !2187
  %537 = zext i1 %536 to i64, !dbg !2187
  %538 = select i1 %536, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @print_line.mesg, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !2187
  %539 = load i32, i32* %22, align 4, !dbg !2188
  %540 = load i8*, i8** %23, align 8, !dbg !2189
  %541 = load i32, i32* @time_format_width, align 4, !dbg !2190
  %542 = load i8*, i8** %24, align 8, !dbg !2191
  %543 = getelementptr inbounds [8 x i8], [8 x i8]* %30, i64 0, i64 0, !dbg !2192
  %544 = getelementptr inbounds [13 x i8], [13 x i8]* %31, i64 0, i64 0, !dbg !2193
  %545 = load i8*, i8** %27, align 8, !dbg !2194
  %546 = load i8*, i8** %32, align 8, !dbg !2195
  %547 = call i32 (i8**, i8*, ...) @asprintf(i8** %29, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.72, i64 0, i64 0), i32 %268, i8* %299, i8* %538, i32 %539, i8* %540, i32 %541, i8* %542, i8* %543, i8* %544, i8* %545, i8* %546) #10, !dbg !2196
  store i32 %547, i32* %33, align 4, !dbg !2197
  %548 = load i32, i32* %33, align 4, !dbg !2198
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %330
  %collatzVaralteredBB = alloca i32
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %347
  %549 = load i32, i32* @inVal0
  %550 = icmp sgt i32 %549, 1
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %371
  %551 = load i32, i32* %collatzVar
  %552 = icmp sgt i32 %551, 1
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %390
  %553 = load i32, i32* %collatzVar
  %_ = sub i32 %553, 2
  %gen = mul i32 %_, 2
  %_67 = sub i32 0, %553
  %gen68 = add i32 %_67, 2
  %_69 = sub i32 %553, 2
  %gen70 = mul i32 %_69, 2
  %_71 = sub i32 %553, 2
  %gen72 = mul i32 %_71, 2
  %_73 = shl i32 %553, 2
  %_74 = sub i32 0, %553
  %gen75 = add i32 %_74, 2
  %_76 = shl i32 %553, 2
  %554 = srem i32 %553, 2
  %555 = icmp eq i32 %554, 0
  br label %originalBB66

originalBB80alteredBB:                            ; preds = %originalBB80, %421
  %556 = load i32, i32* %collatzVar
  %_81 = shl i32 %321, %556
  %_82 = sub i32 0, %321
  %gen83 = add i32 %_82, %556
  %_84 = sub i32 %321, %556
  %gen85 = mul i32 %_84, %556
  %_86 = shl i32 %321, %556
  %557 = add i32 %321, %556
  %558 = icmp slt i32 %557, 1
  br label %originalBB80

originalBB90alteredBB:                            ; preds = %originalBB90, %442
  %559 = load i8*, i8** %29, align 8, !dbg !2205
  %560 = load i8*, i8** %29, align 8, !dbg !2206
  %561 = call i64 @strlen(i8* %560) #13, !dbg !2207
  %562 = getelementptr inbounds i8, i8* %559, i64 %561, !dbg !2208
  store i8* %562, i8** %34, align 8, !dbg !2204
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %463
  %563 = load i8*, i8** %34, align 8, !dbg !2210
  %564 = getelementptr inbounds i8, i8* %563, i32 -1, !dbg !2210
  store i8* %564, i8** %34, align 8, !dbg !2210
  %565 = load i8, i8* %564, align 1, !dbg !2211
  %566 = sext i8 %565 to i32, !dbg !2211
  %567 = icmp eq i32 %566, 32, !dbg !2212
  br label %originalBB94
}

; Function Attrs: nounwind
declare dso_local i32 @asprintf(i8**, i8*, ...) #2

declare dso_local i32 @puts(i8*) #3

; Function Attrs: nounwind
declare dso_local %struct.tm* @localtime(i64*) #2

; Function Attrs: nounwind
declare dso_local i64 @strftime(i8*, i64, i8*, %struct.tm*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @timetostr(i64, i8*) #4 !dbg !2340 {
  %3 = load i32, i32* @x.33
  %4 = load i32, i32* @y.34
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  store i64 %0, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !2343, metadata !DIExpression()), !dbg !2344
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !2345, metadata !DIExpression()), !dbg !2346
  %13 = load i64, i64* %11, align 8, !dbg !2347
  %14 = load i8*, i8** %12, align 8, !dbg !2348
  %15 = call i8* @imaxtostr(i64 %13, i8* %14), !dbg !2349
  %16 = load i32, i32* @x.33
  %17 = load i32, i32* @y.34
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %15, !dbg !2350

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca i64, align 8
  %25 = alloca i8*, align 8
  store i64 %0, i64* %24, align 8
  call void @llvm.dbg.declare(metadata i64* %24, metadata !2351, metadata !DIExpression()), !dbg !2344
  store i8* %1, i8** %25, align 8
  call void @llvm.dbg.declare(metadata i8** %25, metadata !2453, metadata !DIExpression()), !dbg !2346
  %26 = load i64, i64* %24, align 8, !dbg !2347
  %27 = load i8*, i8** %25, align 8, !dbg !2348
  %28 = call i8* @imaxtostr(i64 %26, i8* %27), !dbg !2349
  br label %originalBB
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @strncat(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @stpcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @stzncpy(i8* noalias, i8* noalias, i64) #4 !dbg !2454 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2459, metadata !DIExpression()), !dbg !2460
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !2461, metadata !DIExpression()), !dbg !2462
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !2463, metadata !DIExpression()), !dbg !2464
  call void @llvm.dbg.declare(metadata i8** %7, metadata !2465, metadata !DIExpression()), !dbg !2466
  %8 = load i8*, i8** %5, align 8, !dbg !2467
  %9 = load i64, i64* %6, align 8, !dbg !2468
  %10 = getelementptr inbounds i8, i8* %8, i64 %9, !dbg !2469
  store i8* %10, i8** %7, align 8, !dbg !2466
  br label %11, !dbg !2470

11:                                               ; preds = %originalBBpart28, %3
  %12 = load i8*, i8** %5, align 8, !dbg !2471
  %13 = load i8*, i8** %7, align 8, !dbg !2472
  %14 = icmp ult i8* %12, %13, !dbg !2473
  br i1 %14, label %15, label %36, !dbg !2474

15:                                               ; preds = %11
  %16 = load i32, i32* @x.35
  %17 = load i32, i32* @y.36
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = load i8*, i8** %5, align 8, !dbg !2475
  %25 = load i8, i8* %24, align 1, !dbg !2476
  %26 = sext i8 %25 to i32, !dbg !2476
  %27 = icmp ne i32 %26, 0, !dbg !2474
  %28 = load i32, i32* @x.35
  %29 = load i32, i32* @y.36
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %36

36:                                               ; preds = %originalBBpart2, %11
  %37 = phi i1 [ false, %11 ], [ %27, %originalBBpart2 ], !dbg !2477
  %38 = load i32, i32* @x.35
  %39 = load i32, i32* @y.36
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %36, %originalBB1alteredBB
  %46 = load i32, i32* @x.35
  %47 = load i32, i32* @y.36
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %37, label %54, label %76, !dbg !2470

54:                                               ; preds = %originalBBpart24
  %55 = load i32, i32* @x.35
  %56 = load i32, i32* @y.36
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %54, %originalBB6alteredBB
  %63 = load i8*, i8** %5, align 8, !dbg !2478
  %64 = getelementptr inbounds i8, i8* %63, i32 1, !dbg !2478
  store i8* %64, i8** %5, align 8, !dbg !2478
  %65 = load i8, i8* %63, align 1, !dbg !2479
  %66 = load i8*, i8** %4, align 8, !dbg !2480
  %67 = getelementptr inbounds i8, i8* %66, i32 1, !dbg !2480
  store i8* %67, i8** %4, align 8, !dbg !2480
  store i8 %65, i8* %66, align 1, !dbg !2481
  %68 = load i32, i32* @x.35
  %69 = load i32, i32* @y.36
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %11, !dbg !2470, !llvm.loop !2482

76:                                               ; preds = %originalBBpart24
  %77 = load i32, i32* @x.35
  %78 = load i32, i32* @y.36
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %76, %originalBB10alteredBB
  %85 = load i8*, i8** %4, align 8, !dbg !2483
  store i8 0, i8* %85, align 1, !dbg !2484
  %86 = load i8*, i8** %4, align 8, !dbg !2485
  %87 = load i32, i32* @x.35
  %88 = load i32, i32* @y.36
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret i8* %86, !dbg !2486

originalBBalteredBB:                              ; preds = %originalBB, %15
  %95 = load i8*, i8** %5, align 8, !dbg !2475
  %96 = load i8, i8* %95, align 1, !dbg !2476
  %97 = sext i8 %96 to i32, !dbg !2476
  %98 = icmp ne i32 %97, 0, !dbg !2474
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %36
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %54
  %99 = load i8*, i8** %5, align 8, !dbg !2478
  %100 = getelementptr inbounds i8, i8* %99, i32 1, !dbg !2478
  store i8* %100, i8** %5, align 8, !dbg !2478
  %101 = load i8, i8* %99, align 1, !dbg !2479
  %102 = load i8*, i8** %4, align 8, !dbg !2480
  %103 = getelementptr inbounds i8, i8* %102, i32 1, !dbg !2480
  store i8* %103, i8** %4, align 8, !dbg !2480
  store i8 %101, i8* %102, align 1, !dbg !2481
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %76
  %104 = load i8*, i8** %4, align 8, !dbg !2483
  store i8 0, i8* %104, align 1, !dbg !2484
  %105 = load i8*, i8** %4, align 8, !dbg !2485
  br label %originalBB10
}

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_tty_writable(%struct.stat*) #4 !dbg !2487 {
  %2 = alloca %struct.stat*, align 8
  store %struct.stat* %0, %struct.stat** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %2, metadata !2492, metadata !DIExpression()), !dbg !2493
  %3 = load %struct.stat*, %struct.stat** %2, align 8, !dbg !2494
  %4 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !2495
  %5 = load i32, i32* %4, align 8, !dbg !2495
  %6 = and i32 %5, 16, !dbg !2496
  %7 = icmp ne i32 %6, 0, !dbg !2494
  ret i1 %7, !dbg !2497
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @idle_string(i64, i64) #4 !dbg !115 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  store i64 %0, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !2498, metadata !DIExpression()), !dbg !2499
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !2500, metadata !DIExpression()), !dbg !2501
  %7 = load i64, i64* @idle_string.now, align 8, !dbg !2502
  %8 = icmp eq i64 %7, -9223372036854775808, !dbg !2504
  br i1 %8, label %9, label %11, !dbg !2505

9:                                                ; preds = %2
  %10 = call i64 @time(i64* @idle_string.now) #10, !dbg !2506
  br label %11, !dbg !2506

11:                                               ; preds = %9, %2
  %12 = load i64, i64* %5, align 8, !dbg !2507
  %13 = load i64, i64* %4, align 8, !dbg !2509
  %14 = icmp slt i64 %12, %13, !dbg !2510
  br i1 %14, label %15, label %109, !dbg !2511

15:                                               ; preds = %11
  %16 = load i64, i64* @idle_string.now, align 8, !dbg !2512
  %17 = sub nsw i64 %16, 86400, !dbg !2513
  %18 = load i64, i64* %4, align 8, !dbg !2514
  %19 = icmp slt i64 %17, %18, !dbg !2515
  br i1 %19, label %20, label %109, !dbg !2516

20:                                               ; preds = %15
  %21 = load i32, i32* @x.39
  %22 = load i32, i32* @y.40
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %20, %originalBBalteredBB
  %29 = load i64, i64* %4, align 8, !dbg !2517
  %30 = load i64, i64* @idle_string.now, align 8, !dbg !2518
  %31 = icmp sle i64 %29, %30, !dbg !2519
  %32 = load i32, i32* @x.39
  %33 = load i32, i32* @y.40
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %31, label %40, label %109, !dbg !2520

40:                                               ; preds = %originalBBpart2
  call void @llvm.dbg.declare(metadata i32* %6, metadata !2521, metadata !DIExpression()), !dbg !2523
  %41 = load i64, i64* @idle_string.now, align 8, !dbg !2524
  %42 = load i64, i64* %4, align 8, !dbg !2525
  %43 = sub nsw i64 %41, %42, !dbg !2526
  %44 = trunc i64 %43 to i32, !dbg !2524
  store i32 %44, i32* %6, align 4, !dbg !2523
  %45 = load i32, i32* %6, align 4, !dbg !2527
  %46 = icmp slt i32 %45, 60, !dbg !2529
  br i1 %46, label %47, label %48, !dbg !2530

47:                                               ; preds = %40
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i64 0, i64 0), i8** %3, align 8, !dbg !2531
  br label %111, !dbg !2531

48:                                               ; preds = %40
  %49 = load i32, i32* @x.39
  %50 = load i32, i32* @y.40
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %48, %originalBB1alteredBB
  %57 = load i32, i32* %6, align 4, !dbg !2532
  %58 = sdiv i32 %57, 3600, !dbg !2532
  %59 = icmp slt i32 %58, 24, !dbg !2532
  %60 = load i32, i32* @x.39
  %61 = load i32, i32* @y.40
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart210, label %originalBB1alteredBB

originalBBpart210:                                ; preds = %originalBB1
  br i1 %59, label %68, label %85, !dbg !2536

68:                                               ; preds = %originalBBpart210
  %69 = load i32, i32* @x.39
  %70 = load i32, i32* @y.40
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB12, label %originalBB12alteredBB

originalBB12:                                     ; preds = %68, %originalBB12alteredBB
  %77 = load i32, i32* @x.39
  %78 = load i32, i32* @y.40
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart214, label %originalBB12alteredBB

originalBBpart214:                                ; preds = %originalBB12
  br label %102, !dbg !2536

85:                                               ; preds = %originalBBpart210
  %86 = load i32, i32* @x.39
  %87 = load i32, i32* @y.40
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %85, %originalBB16alteredBB
  call void @__assert_fail(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.81, i64 0, i64 0), i32 205, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__PRETTY_FUNCTION__.idle_string, i64 0, i64 0)) #12, !dbg !2532
  %94 = load i32, i32* @x.39
  %95 = load i32, i32* @y.40
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  unreachable, !dbg !2532

102:                                              ; preds = %originalBBpart214
  %103 = load i32, i32* %6, align 4, !dbg !2537
  %104 = sdiv i32 %103, 3600, !dbg !2538
  %105 = load i32, i32* %6, align 4, !dbg !2539
  %106 = srem i32 %105, 3600, !dbg !2540
  %107 = sdiv i32 %106, 60, !dbg !2541
  %108 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @idle_string.idle_hhmm, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.82, i64 0, i64 0), i32 %104, i32 %107) #10, !dbg !2542
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @idle_string.idle_hhmm, i64 0, i64 0), i8** %3, align 8, !dbg !2543
  br label %111, !dbg !2543

109:                                              ; preds = %originalBBpart2, %15, %11
  %110 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i64 0, i64 0)) #10, !dbg !2544
  store i8* %110, i8** %3, align 8, !dbg !2545
  br label %111, !dbg !2545

111:                                              ; preds = %109, %102, %47
  %112 = load i8*, i8** %3, align 8, !dbg !2546
  ret i8* %112, !dbg !2546

originalBBalteredBB:                              ; preds = %originalBB, %20
  %113 = load i64, i64* %4, align 8, !dbg !2517
  %114 = load i64, i64* @idle_string.now, align 8, !dbg !2518
  %115 = icmp sle i64 %113, %114, !dbg !2519
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %48
  %116 = load i32, i32* %6, align 4, !dbg !2532
  %_ = shl i32 %116, 3600
  %_2 = sub i32 %116, 3600
  %gen = mul i32 %_2, 3600
  %_3 = sub i32 0, %116
  %gen4 = add i32 %_3, 3600
  %_5 = sub i32 0, %116
  %gen6 = add i32 %_5, 3600
  %_7 = sub i32 0, %116
  %gen8 = add i32 %_7, 3600
  %117 = sdiv i32 %116, 3600, !dbg !2532
  %118 = icmp slt i32 %117, 24, !dbg !2532
  br label %originalBB1

originalBB12alteredBB:                            ; preds = %originalBB12, %68
  br label %originalBB12

originalBB16alteredBB:                            ; preds = %originalBB16, %85
  call void @__assert_fail(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.81, i64 0, i64 0), i32 205, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__PRETTY_FUNCTION__.idle_string, i64 0, i64 0)) #12, !dbg !2532
  br label %originalBB16
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #7

; Function Attrs: nounwind
declare dso_local i64 @time(i64*) #2

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @c_isprint(i32) #4 !dbg !2547 {
  %2 = load i32, i32* @x.41
  %3 = load i32, i32* @y.42
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i1, align 1
  %11 = alloca i32, align 4
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !2551, metadata !DIExpression()), !dbg !2552
  %12 = load i32, i32* %11, align 4, !dbg !2553
  %13 = load i32, i32* @x.41
  %14 = load i32, i32* @y.42
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  switch i32 %12, label %22 [
    i32 32, label %21
    i32 48, label %21
    i32 49, label %21
    i32 50, label %21
    i32 51, label %21
    i32 52, label %21
    i32 53, label %21
    i32 54, label %21
    i32 55, label %21
    i32 56, label %21
    i32 57, label %21
    i32 97, label %21
    i32 98, label %21
    i32 99, label %21
    i32 100, label %21
    i32 101, label %21
    i32 102, label %21
    i32 103, label %21
    i32 104, label %21
    i32 105, label %21
    i32 106, label %21
    i32 107, label %21
    i32 108, label %21
    i32 109, label %21
    i32 110, label %21
    i32 111, label %21
    i32 112, label %21
    i32 113, label %21
    i32 114, label %21
    i32 115, label %21
    i32 116, label %21
    i32 117, label %21
    i32 118, label %21
    i32 119, label %21
    i32 120, label %21
    i32 121, label %21
    i32 122, label %21
    i32 33, label %21
    i32 34, label %21
    i32 35, label %21
    i32 36, label %21
    i32 37, label %21
    i32 38, label %21
    i32 39, label %21
    i32 40, label %21
    i32 41, label %21
    i32 42, label %21
    i32 43, label %21
    i32 44, label %21
    i32 45, label %21
    i32 46, label %21
    i32 47, label %21
    i32 58, label %21
    i32 59, label %21
    i32 60, label %21
    i32 61, label %21
    i32 62, label %21
    i32 63, label %21
    i32 64, label %21
    i32 91, label %21
    i32 92, label %21
    i32 93, label %21
    i32 94, label %21
    i32 95, label %21
    i32 96, label %21
    i32 123, label %21
    i32 124, label %21
    i32 125, label %21
    i32 126, label %21
    i32 65, label %21
    i32 66, label %21
    i32 67, label %21
    i32 68, label %21
    i32 69, label %21
    i32 70, label %21
    i32 71, label %21
    i32 72, label %21
    i32 73, label %21
    i32 74, label %21
    i32 75, label %21
    i32 76, label %21
    i32 77, label %21
    i32 78, label %21
    i32 79, label %21
    i32 80, label %21
    i32 81, label %21
    i32 82, label %21
    i32 83, label %21
    i32 84, label %21
    i32 85, label %21
    i32 86, label %21
    i32 87, label %21
    i32 88, label %21
    i32 89, label %21
    i32 90, label %21
  ], !dbg !2554

21:                                               ; preds = %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2
  store i1 true, i1* %10, align 1, !dbg !2555
  br label %39, !dbg !2555

22:                                               ; preds = %originalBBpart2
  %23 = load i32, i32* @x.41
  %24 = load i32, i32* @y.42
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %22, %originalBB1alteredBB
  store i1 false, i1* %10, align 1, !dbg !2557
  %31 = load i32, i32* @x.41
  %32 = load i32, i32* @y.42
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %39, !dbg !2557

39:                                               ; preds = %originalBBpart24, %21
  %40 = load i1, i1* %10, align 1, !dbg !2558
  ret i1 %40, !dbg !2558

originalBBalteredBB:                              ; preds = %originalBB, %1
  %41 = alloca i1, align 1
  %42 = alloca i32, align 4
  store i32 %0, i32* %42, align 4
  call void @llvm.dbg.declare(metadata i32* %42, metadata !2559, metadata !DIExpression()), !dbg !2552
  %43 = load i32, i32* %42, align 4, !dbg !2553
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %22
  store i1 false, i1* %10, align 1, !dbg !2557
  br label %originalBB1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @c_tolower(i32) #4 !dbg !2562 {
  %2 = load i32, i32* @x.43
  %3 = load i32, i32* @y.44
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !2565, metadata !DIExpression()), !dbg !2566
  %12 = load i32, i32* %11, align 4, !dbg !2567
  %13 = load i32, i32* @x.43
  %14 = load i32, i32* @y.44
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  switch i32 %12, label %41 [
    i32 65, label %21
    i32 66, label %21
    i32 67, label %21
    i32 68, label %21
    i32 69, label %21
    i32 70, label %21
    i32 71, label %21
    i32 72, label %21
    i32 73, label %21
    i32 74, label %21
    i32 75, label %21
    i32 76, label %21
    i32 77, label %21
    i32 78, label %21
    i32 79, label %21
    i32 80, label %21
    i32 81, label %21
    i32 82, label %21
    i32 83, label %21
    i32 84, label %21
    i32 85, label %21
    i32 86, label %21
    i32 87, label %21
    i32 88, label %21
    i32 89, label %21
    i32 90, label %21
  ], !dbg !2568

21:                                               ; preds = %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2
  %22 = load i32, i32* @x.43
  %23 = load i32, i32* @y.44
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  %30 = load i32, i32* %11, align 4, !dbg !2569
  %31 = sub nsw i32 %30, 65, !dbg !2571
  %32 = add nsw i32 %31, 97, !dbg !2572
  store i32 %32, i32* %10, align 4, !dbg !2573
  %33 = load i32, i32* @x.43
  %34 = load i32, i32* @y.44
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart224, label %originalBB1alteredBB

originalBBpart224:                                ; preds = %originalBB1
  br label %59, !dbg !2573

41:                                               ; preds = %originalBBpart2
  %42 = load i32, i32* @x.43
  %43 = load i32, i32* @y.44
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %41, %originalBB26alteredBB
  %50 = load i32, i32* %11, align 4, !dbg !2574
  store i32 %50, i32* %10, align 4, !dbg !2575
  %51 = load i32, i32* @x.43
  %52 = load i32, i32* @y.44
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %59, !dbg !2575

59:                                               ; preds = %originalBBpart228, %originalBBpart224
  %60 = load i32, i32* @x.43
  %61 = load i32, i32* @y.44
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %59, %originalBB30alteredBB
  %68 = load i32, i32* %10, align 4, !dbg !2576
  %69 = load i32, i32* @x.43
  %70 = load i32, i32* @y.44
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  ret i32 %68, !dbg !2576

originalBBalteredBB:                              ; preds = %originalBB, %1
  %77 = alloca i32, align 4
  %78 = alloca i32, align 4
  store i32 %0, i32* %78, align 4
  call void @llvm.dbg.declare(metadata i32* %78, metadata !2577, metadata !DIExpression()), !dbg !2566
  %79 = load i32, i32* %78, align 4, !dbg !2567
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  %80 = load i32, i32* %11, align 4, !dbg !2569
  %_ = sub i32 %80, 65
  %gen = mul i32 %_, 65
  %_2 = shl i32 %80, 65
  %_3 = sub i32 0, %80
  %gen4 = add i32 %_3, 65
  %_5 = sub i32 %80, 65
  %gen6 = mul i32 %_5, 65
  %_7 = shl i32 %80, 65
  %_8 = sub i32 0, %80
  %gen9 = add i32 %_8, 65
  %_10 = sub i32 %80, 65
  %gen11 = mul i32 %_10, 65
  %_12 = sub i32 %80, 65
  %gen13 = mul i32 %_12, 65
  %81 = sub nsw i32 %80, 65, !dbg !2571
  %_14 = sub i32 0, %81
  %gen15 = add i32 %_14, 97
  %_16 = sub i32 %81, 97
  %gen17 = mul i32 %_16, 97
  %_18 = shl i32 %81, 97
  %_19 = sub i32 %81, 97
  %gen20 = mul i32 %_19, 97
  %_21 = sub i32 0, %81
  %gen22 = add i32 %_21, 97
  %82 = add nsw i32 %81, 97, !dbg !2572
  store i32 %82, i32* %10, align 4, !dbg !2573
  br label %originalBB1

originalBB26alteredBB:                            ; preds = %originalBB26, %41
  %83 = load i32, i32* %11, align 4, !dbg !2574
  store i32 %83, i32* %10, align 4, !dbg !2575
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %59
  %84 = load i32, i32* %10, align 4, !dbg !2576
  br label %originalBB30
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @canon_host(i8*) #4 !dbg !2580 {
  %2 = load i32, i32* @x.45
  %3 = load i32, i32* @y.46
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !2583, metadata !DIExpression()), !dbg !2584
  %11 = load i8*, i8** %10, align 8, !dbg !2585
  %12 = call noalias i8* @canon_host_r(i8* %11, i32* @last_cherror), !dbg !2586
  %13 = load i32, i32* @x.45
  %14 = load i32, i32* @y.46
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !2587

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i8*, align 8
  store i8* %0, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !2588, metadata !DIExpression()), !dbg !2584
  %22 = load i8*, i8** %21, align 8, !dbg !2585
  %23 = call noalias i8* @canon_host_r(i8* %22, i32* @last_cherror), !dbg !2586
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @canon_host_r(i8*, i32*) #4 !dbg !165 {
  %3 = alloca i8*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.addrinfo*, align 8
  %7 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2613, metadata !DIExpression()), !dbg !2614
  store i32* %1, i32** %4, align 8
  call void @llvm.dbg.declare(metadata i32** %4, metadata !2615, metadata !DIExpression()), !dbg !2616
  call void @llvm.dbg.declare(metadata i8** %5, metadata !2617, metadata !DIExpression()), !dbg !2618
  store i8* null, i8** %5, align 8, !dbg !2618
  call void @llvm.dbg.declare(metadata %struct.addrinfo** %6, metadata !2619, metadata !DIExpression()), !dbg !2620
  store %struct.addrinfo* null, %struct.addrinfo** %6, align 8, !dbg !2620
  call void @llvm.dbg.declare(metadata i32* %7, metadata !2621, metadata !DIExpression()), !dbg !2622
  store i32 2, i32* getelementptr inbounds (%struct.addrinfo, %struct.addrinfo* @canon_host_r.hints, i32 0, i32 0), align 8, !dbg !2623
  %8 = load i8*, i8** %3, align 8, !dbg !2624
  %9 = call i32 @getaddrinfo(i8* %8, i8* null, %struct.addrinfo* @canon_host_r.hints, %struct.addrinfo** %6), !dbg !2625
  store i32 %9, i32* %7, align 4, !dbg !2626
  %10 = load i32, i32* %7, align 4, !dbg !2627
  %11 = icmp ne i32 %10, 0, !dbg !2627
  br i1 %11, label %83, label %12, !dbg !2629

12:                                               ; preds = %2
  %13 = load %struct.addrinfo*, %struct.addrinfo** %6, align 8, !dbg !2630
  %14 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %13, i32 0, i32 6, !dbg !2632
  %15 = load i8*, i8** %14, align 8, !dbg !2632
  %16 = icmp ne i8* %15, null, !dbg !2630
  br i1 %16, label %17, label %37, !dbg !2630

17:                                               ; preds = %12
  %18 = load i32, i32* @x.47
  %19 = load i32, i32* @y.48
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %17, %originalBBalteredBB
  %26 = load %struct.addrinfo*, %struct.addrinfo** %6, align 8, !dbg !2633
  %27 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %26, i32 0, i32 6, !dbg !2634
  %28 = load i8*, i8** %27, align 8, !dbg !2634
  %29 = load i32, i32* @x.47
  %30 = load i32, i32* @y.48
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %55, !dbg !2630

37:                                               ; preds = %12
  %38 = load i32, i32* @x.47
  %39 = load i32, i32* @y.48
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = load i8*, i8** %3, align 8, !dbg !2635
  %47 = load i32, i32* @x.47
  %48 = load i32, i32* @y.48
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %55, !dbg !2630

55:                                               ; preds = %originalBBpart24, %originalBBpart2
  %56 = phi i8* [ %28, %originalBBpart2 ], [ %46, %originalBBpart24 ], !dbg !2630
  %57 = call noalias i8* @strdup(i8* %56) #10, !dbg !2636
  store i8* %57, i8** %5, align 8, !dbg !2637
  %58 = load i8*, i8** %5, align 8, !dbg !2638
  %59 = icmp ne i8* %58, null, !dbg !2638
  br i1 %59, label %81, label %60, !dbg !2640

60:                                               ; preds = %55
  %61 = load i32*, i32** %4, align 8, !dbg !2641
  %62 = icmp ne i32* %61, null, !dbg !2641
  br i1 %62, label %63, label %81, !dbg !2642

63:                                               ; preds = %60
  %64 = load i32, i32* @x.47
  %65 = load i32, i32* @y.48
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %63, %originalBB6alteredBB
  %72 = load i32*, i32** %4, align 8, !dbg !2643
  store i32 -10, i32* %72, align 4, !dbg !2644
  %73 = load i32, i32* @x.47
  %74 = load i32, i32* @y.48
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %81, !dbg !2645

81:                                               ; preds = %originalBBpart28, %60, %55
  %82 = load %struct.addrinfo*, %struct.addrinfo** %6, align 8, !dbg !2646
  call void @freeaddrinfo(%struct.addrinfo* %82) #10, !dbg !2647
  br label %122, !dbg !2648

83:                                               ; preds = %2
  %84 = load i32, i32* @x.47
  %85 = load i32, i32* @y.48
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %83, %originalBB10alteredBB
  %92 = load i32*, i32** %4, align 8, !dbg !2649
  %93 = icmp ne i32* %92, null, !dbg !2649
  %94 = load i32, i32* @x.47
  %95 = load i32, i32* @y.48
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %93, label %102, label %121, !dbg !2651

102:                                              ; preds = %originalBBpart212
  %103 = load i32, i32* @x.47
  %104 = load i32, i32* @y.48
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %102, %originalBB14alteredBB
  %111 = load i32, i32* %7, align 4, !dbg !2652
  %112 = load i32*, i32** %4, align 8, !dbg !2653
  store i32 %111, i32* %112, align 4, !dbg !2654
  %113 = load i32, i32* @x.47
  %114 = load i32, i32* @y.48
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %121, !dbg !2655

121:                                              ; preds = %originalBBpart216, %originalBBpart212
  br label %122

122:                                              ; preds = %121, %81
  %123 = load i8*, i8** %5, align 8, !dbg !2656
  ret i8* %123, !dbg !2657

originalBBalteredBB:                              ; preds = %originalBB, %17
  %124 = load %struct.addrinfo*, %struct.addrinfo** %6, align 8, !dbg !2633
  %125 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %124, i32 0, i32 6, !dbg !2634
  %126 = load i8*, i8** %125, align 8, !dbg !2634
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %127 = load i8*, i8** %3, align 8, !dbg !2635
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %63
  %128 = load i32*, i32** %4, align 8, !dbg !2643
  store i32 -10, i32* %128, align 4, !dbg !2644
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %83
  %129 = load i32*, i32** %4, align 8, !dbg !2649
  %130 = icmp ne i32* %129, null, !dbg !2649
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %102
  %131 = load i32, i32* %7, align 4, !dbg !2652
  %132 = load i32*, i32** %4, align 8, !dbg !2653
  store i32 %131, i32* %132, align 4, !dbg !2654
  br label %originalBB14
}

declare dso_local i32 @getaddrinfo(i8*, i8*, %struct.addrinfo*, %struct.addrinfo**) #3

; Function Attrs: nounwind
declare dso_local noalias i8* @strdup(i8*) #2

; Function Attrs: nounwind
declare dso_local void @freeaddrinfo(%struct.addrinfo*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @close_stdout() #4 !dbg !2658 {
  %1 = load i32, i32* @x.49
  %2 = load i32, i32* @y.50
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = alloca i8*, align 8
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2659
  %11 = call i32 @close_stream(%struct._IO_FILE* %10), !dbg !2661
  %12 = icmp ne i32 %11, 0, !dbg !2662
  %13 = load i32, i32* @x.49
  %14 = load i32, i32* @y.50
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %76, !dbg !2663

21:                                               ; preds = %originalBBpart2
  %22 = load i8, i8* @ignore_EPIPE, align 1, !dbg !2664
  %23 = trunc i8 %22 to i1, !dbg !2664
  br i1 %23, label %24, label %28, !dbg !2665

24:                                               ; preds = %21
  %25 = call i32* @__errno_location() #15, !dbg !2666
  %26 = load i32, i32* %25, align 4, !dbg !2666
  %27 = icmp eq i32 %26, 32, !dbg !2667
  br i1 %27, label %76, label %28, !dbg !2668

28:                                               ; preds = %24, %21
  call void @llvm.dbg.declare(metadata i8** %9, metadata !2669, metadata !DIExpression()), !dbg !2671
  %29 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.102, i64 0, i64 0)) #10, !dbg !2672
  store i8* %29, i8** %9, align 8, !dbg !2671
  %30 = load i8*, i8** @file_name, align 8, !dbg !2673
  %31 = icmp ne i8* %30, null, !dbg !2673
  br i1 %31, label %32, label %54, !dbg !2675

32:                                               ; preds = %28
  %33 = load i32, i32* @x.49
  %34 = load i32, i32* @y.50
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = call i32* @__errno_location() #15, !dbg !2676
  %42 = load i32, i32* %41, align 4, !dbg !2676
  %43 = load i8*, i8** @file_name, align 8, !dbg !2677
  %44 = call i8* @quotearg_colon(i8* %43), !dbg !2678
  %45 = load i8*, i8** %9, align 8, !dbg !2679
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %42, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.103, i64 0, i64 0), i8* %44, i8* %45), !dbg !2680
  %46 = load i32, i32* @x.49
  %47 = load i32, i32* @y.50
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %58, !dbg !2680

54:                                               ; preds = %28
  %55 = call i32* @__errno_location() #15, !dbg !2681
  %56 = load i32, i32* %55, align 4, !dbg !2681
  %57 = load i8*, i8** %9, align 8, !dbg !2682
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %56, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.104, i64 0, i64 0), i8* %57), !dbg !2683
  br label %58

58:                                               ; preds = %54, %originalBBpart24
  %59 = load i32, i32* @x.49
  %60 = load i32, i32* @y.50
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %58, %originalBB6alteredBB
  %67 = load volatile i32, i32* @exit_failure, align 4, !dbg !2684
  call void @_exit(i32 %67) #14, !dbg !2685
  %68 = load i32, i32* @x.49
  %69 = load i32, i32* @y.50
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable, !dbg !2685

76:                                               ; preds = %24, %originalBBpart2
  %77 = load i32, i32* @x.49
  %78 = load i32, i32* @y.50
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %76, %originalBB10alteredBB
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2686
  %86 = call i32 @close_stream(%struct._IO_FILE* %85), !dbg !2688
  %87 = icmp ne i32 %86, 0, !dbg !2689
  %88 = load i32, i32* @x.49
  %89 = load i32, i32* @y.50
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %87, label %96, label %98, !dbg !2690

96:                                               ; preds = %originalBBpart212
  %97 = load volatile i32, i32* @exit_failure, align 4, !dbg !2691
  call void @_exit(i32 %97) #14, !dbg !2692
  unreachable, !dbg !2692

98:                                               ; preds = %originalBBpart212
  ret void, !dbg !2693

originalBBalteredBB:                              ; preds = %originalBB, %0
  %99 = alloca i8*, align 8
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2659
  %101 = call i32 @close_stream(%struct._IO_FILE* %100), !dbg !2661
  %102 = icmp ne i32 %101, 0, !dbg !2662
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %103 = call i32* @__errno_location() #15, !dbg !2676
  %104 = load i32, i32* %103, align 4, !dbg !2676
  %105 = load i8*, i8** @file_name, align 8, !dbg !2677
  %106 = call i8* @quotearg_colon(i8* %105), !dbg !2678
  %107 = load i8*, i8** %9, align 8, !dbg !2679
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %104, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.103, i64 0, i64 0), i8* %106, i8* %107), !dbg !2680
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %58
  %108 = load volatile i32, i32* @exit_failure, align 4, !dbg !2684
  call void @_exit(i32 %108) #14, !dbg !2685
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %76
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2686
  %110 = call i32 @close_stream(%struct._IO_FILE* %109), !dbg !2688
  %111 = icmp ne i32 %110, 0, !dbg !2689
  br label %originalBB10
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #9

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @hard_locale(i32) #4 !dbg !2694 {
  %2 = load i32, i32* @x.51
  %3 = load i32, i32* @y.52
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i1, align 1
  %11 = alloca i32, align 4
  %12 = alloca [257 x i8], align 16
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !2696, metadata !DIExpression()), !dbg !2697
  call void @llvm.dbg.declare(metadata [257 x i8]* %12, metadata !2698, metadata !DIExpression()), !dbg !2699
  %13 = load i32, i32* %11, align 4, !dbg !2700
  %14 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !2702
  %15 = call i32 @setlocale_null_r(i32 %13, i8* %14, i64 257), !dbg !2703
  %16 = icmp ne i32 %15, 0, !dbg !2703
  %17 = load i32, i32* @x.51
  %18 = load i32, i32* @y.52
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %42, !dbg !2704

25:                                               ; preds = %originalBBpart2
  %26 = load i32, i32* @x.51
  %27 = load i32, i32* @y.52
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %25, %originalBB1alteredBB
  store i1 false, i1* %10, align 1, !dbg !2705
  %34 = load i32, i32* @x.51
  %35 = load i32, i32* @y.52
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %228, !dbg !2705

42:                                               ; preds = %originalBBpart2
  %43 = load i32, i32* @x.51
  %44 = load i32, i32* @y.52
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %42, %originalBB6alteredBB
  %51 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !2706
  %52 = call i32 @strcmp(i8* %51, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i64 0, i64 0)) #13, !dbg !2707
  %53 = load i32, i32* @x.51
  %54 = load i32, i32* @y.52
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %61, !dbg !2708

61:                                               ; preds = %originalBBpart28
  %62 = load i32, i32* @x.51
  %63 = load i32, i32* @y.52
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %61, %originalBB10alteredBB
  %collatzVar = alloca i32
  %70 = load i32, i32* @x.51
  %71 = load i32, i32* @y.52
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %78

78:                                               ; preds = %originalBBpart212
  %79 = load i32, i32* @x.51
  %80 = load i32, i32* @y.52
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %78, %originalBB14alteredBB
  %87 = load i32, i32* @inVal0
  %88 = icmp sgt i32 %87, 1
  %89 = load i32, i32* @x.51
  %90 = load i32, i32* @y.52
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %88, label %114, label %97

97:                                               ; preds = %originalBBpart216
  %98 = load i32, i32* @x.51
  %99 = load i32, i32* @y.52
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %97, %originalBB18alteredBB
  store i32 3, i32* %collatzVar
  %106 = load i32, i32* @x.51
  %107 = load i32, i32* @y.52
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %114

114:                                              ; preds = %originalBBpart220, %originalBBpart216
  %115 = load i32, i32* @x.51
  %116 = load i32, i32* @y.52
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %114, %originalBB22alteredBB
  %123 = load i8**, i8*** @inVal1
  %124 = getelementptr inbounds i8*, i8** %123, i64 1
  %125 = load i8*, i8** %124
  %126 = add i32 0, -3
  %controle = call i32 @controle(i8* %125, i32 %126)
  store i32 %controle, i32* %collatzVar
  %127 = load i32, i32* @x.51
  %128 = load i32, i32* @y.52
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBBpart231, label %originalBB22alteredBB

originalBBpart231:                                ; preds = %originalBB22
  br label %135

135:                                              ; preds = %185, %181, %originalBBpart231
  %136 = load i32, i32* @x.51
  %137 = load i32, i32* @y.52
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %135, %originalBB33alteredBB
  %144 = load i32, i32* %collatzVar
  %145 = icmp sgt i32 %144, 1
  %146 = load i32, i32* @x.51
  %147 = load i32, i32* @y.52
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br i1 %145, label %154, label %189

154:                                              ; preds = %originalBBpart235
  %155 = load i32, i32* %collatzVar
  %156 = srem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %177

158:                                              ; preds = %154
  %159 = load i32, i32* @x.51
  %160 = load i32, i32* @y.52
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %158, %originalBB37alteredBB
  %167 = load i32, i32* %collatzVar
  %168 = sdiv i32 %167, 2
  store i32 %168, i32* %collatzVar
  %169 = load i32, i32* @x.51
  %170 = load i32, i32* @y.52
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBBpart244, label %originalBB37alteredBB

originalBBpart244:                                ; preds = %originalBB37
  br label %181

177:                                              ; preds = %154
  %178 = load i32, i32* %collatzVar
  %179 = mul i32 %178, 3
  %180 = add i32 %179, 1
  store i32 %180, i32* %collatzVar
  br label %181

181:                                              ; preds = %177, %originalBBpart244
  %182 = load i32, i32* %collatzVar
  %183 = sub i32 %52, %182
  %184 = icmp sgt i32 %183, -2
  br i1 %184, label %185, label %135

185:                                              ; preds = %181
  %186 = load i32, i32* %collatzVar
  %187 = add i32 %52, %186
  %188 = icmp slt i32 %187, 2
  br i1 %188, label %209, label %135

189:                                              ; preds = %originalBBpart235
  %190 = load i32, i32* @x.51
  %191 = load i32, i32* @y.52
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %189, %originalBB46alteredBB
  %198 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !2709
  %199 = call i32 @strcmp(i8* %198, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.110, i64 0, i64 0)) #13, !dbg !2710
  %200 = icmp eq i32 %199, 0, !dbg !2711
  %201 = load i32, i32* @x.51
  %202 = load i32, i32* @y.52
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %209, !dbg !2712

209:                                              ; preds = %originalBBpart248, %185
  %210 = phi i1 [ true, %185 ], [ %200, %originalBBpart248 ]
  %211 = load i32, i32* @x.51
  %212 = load i32, i32* @y.52
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %209, %originalBB50alteredBB
  %219 = xor i1 %210, true, !dbg !2713
  store i1 %219, i1* %10, align 1, !dbg !2714
  %220 = load i32, i32* @x.51
  %221 = load i32, i32* @y.52
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBBpart255, label %originalBB50alteredBB

originalBBpart255:                                ; preds = %originalBB50
  br label %228, !dbg !2714

228:                                              ; preds = %originalBBpart255, %originalBBpart24
  %229 = load i32, i32* @x.51
  %230 = load i32, i32* @y.52
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %228, %originalBB57alteredBB
  %237 = load i1, i1* %10, align 1, !dbg !2715
  %238 = load i32, i32* @x.51
  %239 = load i32, i32* @y.52
  %240 = sub i32 %238, 1
  %241 = mul i32 %238, %240
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %243, %244
  br i1 %245, label %originalBBpart259, label %originalBB57alteredBB

originalBBpart259:                                ; preds = %originalBB57
  ret i1 %237, !dbg !2715

originalBBalteredBB:                              ; preds = %originalBB, %1
  %246 = alloca i1, align 1
  %247 = alloca i32, align 4
  %248 = alloca [257 x i8], align 16
  store i32 %0, i32* %247, align 4
  call void @llvm.dbg.declare(metadata i32* %247, metadata !2716, metadata !DIExpression()), !dbg !2697
  call void @llvm.dbg.declare(metadata [257 x i8]* %248, metadata !2719, metadata !DIExpression()), !dbg !2699
  %249 = load i32, i32* %247, align 4, !dbg !2700
  %250 = getelementptr inbounds [257 x i8], [257 x i8]* %248, i64 0, i64 0, !dbg !2702
  %251 = call i32 @setlocale_null_r(i32 %249, i8* %250, i64 257), !dbg !2703
  %252 = icmp ne i32 %251, 0, !dbg !2703
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  store i1 false, i1* %10, align 1, !dbg !2705
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %42
  %253 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !2706
  %254 = call i32 @strcmp(i8* %253, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i64 0, i64 0)) #13, !dbg !2707
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %61
  %collatzVaralteredBB = alloca i32
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %78
  %255 = load i32, i32* @inVal0
  %256 = icmp sgt i32 %255, 1
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %97
  store i32 3, i32* %collatzVar
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %114
  %257 = load i8**, i8*** @inVal1
  %258 = getelementptr inbounds i8*, i8** %257, i64 1
  %259 = load i8*, i8** %258
  %_ = shl i32 0, -3
  %_23 = shl i32 0, -3
  %_24 = sub i32 0, 0
  %gen = add i32 %_24, -3
  %_25 = sub i32 0, 0
  %gen26 = add i32 %_25, -3
  %_27 = sub i32 0, 0
  %gen28 = add i32 %_27, -3
  %_29 = shl i32 0, -3
  %260 = add i32 0, -3
  %controlealteredBB = call i32 @controle(i8* %259, i32 %260)
  store i32 %controlealteredBB, i32* %collatzVar
  br label %originalBB22

originalBB33alteredBB:                            ; preds = %originalBB33, %135
  %261 = load i32, i32* %collatzVar
  %262 = icmp sgt i32 %261, 1
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %158
  %263 = load i32, i32* %collatzVar
  %_38 = shl i32 %263, 2
  %_39 = sub i32 %263, 2
  %gen40 = mul i32 %_39, 2
  %_41 = sub i32 0, %263
  %gen42 = add i32 %_41, 2
  %264 = sdiv i32 %263, 2
  store i32 %264, i32* %collatzVar
  br label %originalBB37

originalBB46alteredBB:                            ; preds = %originalBB46, %189
  %265 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !2709
  %266 = call i32 @strcmp(i8* %265, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.110, i64 0, i64 0)) #13, !dbg !2710
  %267 = icmp eq i32 %266, 0, !dbg !2711
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %209
  %_51 = sub i1 %210, true
  %gen52 = mul i1 %_51, true
  %_53 = shl i1 %210, true
  %268 = xor i1 %210, true, !dbg !2713
  store i1 %268, i1* %10, align 1, !dbg !2714
  br label %originalBB50

originalBB57alteredBB:                            ; preds = %originalBB57, %228
  %269 = load i1, i1* %10, align 1, !dbg !2715
  br label %originalBB57
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @imaxtostr(i64, i8*) #4 !dbg !2720 {
  %3 = load i32, i32* @x.53
  %4 = load i32, i32* @y.54
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  store i64 %0, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !2724, metadata !DIExpression()), !dbg !2725
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !2726, metadata !DIExpression()), !dbg !2727
  call void @llvm.dbg.declare(metadata i8** %13, metadata !2728, metadata !DIExpression()), !dbg !2729
  %14 = load i8*, i8** %12, align 8, !dbg !2730
  %15 = getelementptr inbounds i8, i8* %14, i64 20, !dbg !2731
  store i8* %15, i8** %13, align 8, !dbg !2729
  %16 = load i8*, i8** %13, align 8, !dbg !2732
  store i8 0, i8* %16, align 1, !dbg !2733
  %17 = load i64, i64* %11, align 8, !dbg !2734
  %18 = icmp slt i64 %17, 0, !dbg !2736
  %19 = load i32, i32* @x.53
  %20 = load i32, i32* @y.54
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %74, !dbg !2737

27:                                               ; preds = %originalBBpart2
  br label %28, !dbg !2738

28:                                               ; preds = %51, %27
  %29 = load i32, i32* @x.53
  %30 = load i32, i32* @y.54
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = load i64, i64* %11, align 8, !dbg !2740
  %38 = srem i64 %37, 10, !dbg !2741
  %39 = sub nsw i64 48, %38, !dbg !2742
  %40 = trunc i64 %39 to i8, !dbg !2743
  %41 = load i8*, i8** %13, align 8, !dbg !2744
  %42 = getelementptr inbounds i8, i8* %41, i32 -1, !dbg !2744
  store i8* %42, i8** %13, align 8, !dbg !2744
  store i8 %40, i8* %42, align 1, !dbg !2745
  %43 = load i32, i32* @x.53
  %44 = load i32, i32* @y.54
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart216, label %originalBB1alteredBB

originalBBpart216:                                ; preds = %originalBB1
  br label %51, !dbg !2746

51:                                               ; preds = %originalBBpart216
  %52 = load i64, i64* %11, align 8, !dbg !2747
  %53 = sdiv i64 %52, 10, !dbg !2747
  store i64 %53, i64* %11, align 8, !dbg !2747
  %54 = icmp ne i64 %53, 0, !dbg !2748
  br i1 %54, label %28, label %55, !dbg !2746, !llvm.loop !2749

55:                                               ; preds = %51
  %56 = load i32, i32* @x.53
  %57 = load i32, i32* @y.54
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %55, %originalBB18alteredBB
  %64 = load i8*, i8** %13, align 8, !dbg !2751
  %65 = getelementptr inbounds i8, i8* %64, i32 -1, !dbg !2751
  store i8* %65, i8** %13, align 8, !dbg !2751
  store i8 45, i8* %65, align 1, !dbg !2752
  %66 = load i32, i32* @x.53
  %67 = load i32, i32* @y.54
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %103, !dbg !2753

74:                                               ; preds = %originalBBpart2
  br label %75, !dbg !2754

75:                                               ; preds = %98, %74
  %76 = load i32, i32* @x.53
  %77 = load i32, i32* @y.54
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %75, %originalBB22alteredBB
  %84 = load i64, i64* %11, align 8, !dbg !2756
  %85 = srem i64 %84, 10, !dbg !2757
  %86 = add nsw i64 48, %85, !dbg !2758
  %87 = trunc i64 %86 to i8, !dbg !2759
  %88 = load i8*, i8** %13, align 8, !dbg !2760
  %89 = getelementptr inbounds i8, i8* %88, i32 -1, !dbg !2760
  store i8* %89, i8** %13, align 8, !dbg !2760
  store i8 %87, i8* %89, align 1, !dbg !2761
  %90 = load i32, i32* @x.53
  %91 = load i32, i32* @y.54
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart242, label %originalBB22alteredBB

originalBBpart242:                                ; preds = %originalBB22
  br label %98, !dbg !2762

98:                                               ; preds = %originalBBpart242
  %99 = load i64, i64* %11, align 8, !dbg !2763
  %100 = sdiv i64 %99, 10, !dbg !2763
  store i64 %100, i64* %11, align 8, !dbg !2763
  %101 = icmp ne i64 %100, 0, !dbg !2764
  br i1 %101, label %75, label %102, !dbg !2762, !llvm.loop !2765

102:                                              ; preds = %98
  br label %103

103:                                              ; preds = %102, %originalBBpart220
  %104 = load i8*, i8** %13, align 8, !dbg !2767
  ret i8* %104, !dbg !2768

originalBBalteredBB:                              ; preds = %originalBB, %2
  %105 = alloca i64, align 8
  %106 = alloca i8*, align 8
  %107 = alloca i8*, align 8
  store i64 %0, i64* %105, align 8
  call void @llvm.dbg.declare(metadata i64* %105, metadata !2769, metadata !DIExpression()), !dbg !2725
  store i8* %1, i8** %106, align 8
  call void @llvm.dbg.declare(metadata i8** %106, metadata !2772, metadata !DIExpression()), !dbg !2727
  call void @llvm.dbg.declare(metadata i8** %107, metadata !2773, metadata !DIExpression()), !dbg !2729
  %108 = load i8*, i8** %106, align 8, !dbg !2730
  %109 = getelementptr inbounds i8, i8* %108, i64 20, !dbg !2731
  store i8* %109, i8** %107, align 8, !dbg !2729
  %110 = load i8*, i8** %107, align 8, !dbg !2732
  store i8 0, i8* %110, align 1, !dbg !2733
  %111 = load i64, i64* %105, align 8, !dbg !2734
  %112 = icmp slt i64 %111, 0, !dbg !2736
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %113 = load i64, i64* %11, align 8, !dbg !2740
  %_ = shl i64 %113, 10
  %_2 = sub i64 0, %113
  %gen = add i64 %_2, 10
  %_3 = sub i64 %113, 10
  %gen4 = mul i64 %_3, 10
  %_5 = shl i64 %113, 10
  %_6 = sub i64 0, %113
  %gen7 = add i64 %_6, 10
  %114 = srem i64 %113, 10, !dbg !2741
  %_8 = shl i64 48, %114
  %_9 = sub i64 0, 48
  %gen10 = add i64 %_9, %114
  %_11 = shl i64 48, %114
  %_12 = shl i64 48, %114
  %_13 = sub i64 48, %114
  %gen14 = mul i64 %_13, %114
  %115 = sub nsw i64 48, %114, !dbg !2742
  %116 = trunc i64 %115 to i8, !dbg !2743
  %117 = load i8*, i8** %13, align 8, !dbg !2744
  %118 = getelementptr inbounds i8, i8* %117, i32 -1, !dbg !2744
  store i8* %118, i8** %13, align 8, !dbg !2744
  store i8 %116, i8* %118, align 1, !dbg !2745
  br label %originalBB1

originalBB18alteredBB:                            ; preds = %originalBB18, %55
  %119 = load i8*, i8** %13, align 8, !dbg !2751
  %120 = getelementptr inbounds i8, i8* %119, i32 -1, !dbg !2751
  store i8* %120, i8** %13, align 8, !dbg !2751
  store i8 45, i8* %120, align 1, !dbg !2752
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %75
  %121 = load i64, i64* %11, align 8, !dbg !2756
  %_23 = shl i64 %121, 10
  %_24 = shl i64 %121, 10
  %_25 = sub i64 %121, 10
  %gen26 = mul i64 %_25, 10
  %_27 = shl i64 %121, 10
  %_28 = sub i64 %121, 10
  %gen29 = mul i64 %_28, 10
  %122 = srem i64 %121, 10, !dbg !2757
  %_30 = sub i64 0, 48
  %gen31 = add i64 %_30, %122
  %_32 = shl i64 48, %122
  %_33 = shl i64 48, %122
  %_34 = shl i64 48, %122
  %_35 = sub i64 48, %122
  %gen36 = mul i64 %_35, %122
  %_37 = sub i64 48, %122
  %gen38 = mul i64 %_37, %122
  %_39 = sub i64 0, 48
  %gen40 = add i64 %_39, %122
  %123 = add nsw i64 48, %122, !dbg !2758
  %124 = trunc i64 %123 to i8, !dbg !2759
  %125 = load i8*, i8** %13, align 8, !dbg !2760
  %126 = getelementptr inbounds i8, i8* %125, i32 -1, !dbg !2760
  store i8* %126, i8** %13, align 8, !dbg !2760
  store i8 %124, i8* %126, align 1, !dbg !2761
  br label %originalBB22
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_program_name(i8*) #4 !dbg !2774 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !2775, metadata !DIExpression()), !dbg !2776
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2777, metadata !DIExpression()), !dbg !2778
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2779, metadata !DIExpression()), !dbg !2780
  %5 = load i8*, i8** %2, align 8, !dbg !2781
  %6 = icmp eq i8* %5, null, !dbg !2783
  br i1 %6, label %7, label %26, !dbg !2784

7:                                                ; preds = %1
  %8 = load i32, i32* @x.55
  %9 = load i32, i32* @y.56
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %7, %originalBBalteredBB
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2785
  %17 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.115, i64 0, i64 0), %struct._IO_FILE* %16), !dbg !2787
  call void @abort() #12, !dbg !2788
  %18 = load i32, i32* @x.55
  %19 = load i32, i32* @y.56
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable, !dbg !2788

26:                                               ; preds = %1
  %27 = load i32, i32* @x.55
  %28 = load i32, i32* @y.56
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = load i8*, i8** %2, align 8, !dbg !2789
  %36 = call i8* @strrchr(i8* %35, i32 47) #13, !dbg !2790
  store i8* %36, i8** %3, align 8, !dbg !2791
  %37 = load i8*, i8** %3, align 8, !dbg !2792
  %38 = icmp ne i8* %37, null, !dbg !2793
  %39 = load i32, i32* @x.55
  %40 = load i32, i32* @y.56
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %38, label %47, label %50, !dbg !2792

47:                                               ; preds = %originalBBpart24
  %48 = load i8*, i8** %3, align 8, !dbg !2794
  %49 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !2795
  br label %52, !dbg !2792

50:                                               ; preds = %originalBBpart24
  %51 = load i8*, i8** %2, align 8, !dbg !2796
  br label %52, !dbg !2792

52:                                               ; preds = %50, %47
  %53 = phi i8* [ %49, %47 ], [ %51, %50 ], !dbg !2792
  store i8* %53, i8** %4, align 8, !dbg !2797
  %54 = load i8*, i8** %4, align 8, !dbg !2798
  %55 = load i8*, i8** %2, align 8, !dbg !2800
  %56 = ptrtoint i8* %54 to i64, !dbg !2801
  %57 = ptrtoint i8* %55 to i64, !dbg !2801
  %58 = sub i64 %56, %57, !dbg !2801
  %59 = icmp sge i64 %58, 7, !dbg !2802
  br i1 %59, label %60, label %75, !dbg !2803

60:                                               ; preds = %52
  %61 = load i8*, i8** %4, align 8, !dbg !2804
  %62 = getelementptr inbounds i8, i8* %61, i64 -7, !dbg !2805
  %63 = call i32 @strncmp(i8* %62, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.116, i64 0, i64 0), i64 7) #13, !dbg !2806
  %64 = icmp eq i32 %63, 0, !dbg !2807
  br i1 %64, label %65, label %75, !dbg !2808

65:                                               ; preds = %60
  %66 = load i8*, i8** %4, align 8, !dbg !2809
  store i8* %66, i8** %2, align 8, !dbg !2811
  %67 = load i8*, i8** %4, align 8, !dbg !2812
  %68 = call i32 @strncmp(i8* %67, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.117, i64 0, i64 0), i64 3) #13, !dbg !2814
  %69 = icmp eq i32 %68, 0, !dbg !2815
  br i1 %69, label %70, label %74, !dbg !2816

70:                                               ; preds = %65
  %71 = load i8*, i8** %4, align 8, !dbg !2817
  %72 = getelementptr inbounds i8, i8* %71, i64 3, !dbg !2819
  store i8* %72, i8** %2, align 8, !dbg !2820
  %73 = load i8*, i8** %2, align 8, !dbg !2821
  store i8* %73, i8** @program_invocation_short_name, align 8, !dbg !2822
  br label %74, !dbg !2823

74:                                               ; preds = %70, %65
  br label %75, !dbg !2824

75:                                               ; preds = %74, %60, %52
  %76 = load i32, i32* @x.55
  %77 = load i32, i32* @y.56
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %75, %originalBB6alteredBB
  %84 = load i8*, i8** %2, align 8, !dbg !2825
  store i8* %84, i8** @program_name, align 8, !dbg !2826
  %85 = load i8*, i8** %2, align 8, !dbg !2827
  store i8* %85, i8** @program_invocation_name, align 8, !dbg !2828
  %86 = load i32, i32* @x.55
  %87 = load i32, i32* @y.56
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret void, !dbg !2829

originalBBalteredBB:                              ; preds = %originalBB, %7
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2785
  %95 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.115, i64 0, i64 0), %struct._IO_FILE* %94), !dbg !2787
  call void @abort() #12, !dbg !2788
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %96 = load i8*, i8** %2, align 8, !dbg !2789
  %97 = call i8* @strrchr(i8* %96, i32 47) #13, !dbg !2790
  store i8* %97, i8** %3, align 8, !dbg !2791
  %98 = load i8*, i8** %3, align 8, !dbg !2792
  %99 = icmp ne i8* %98, null, !dbg !2793
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %75
  %100 = load i8*, i8** %2, align 8, !dbg !2825
  store i8* %100, i8** @program_name, align 8, !dbg !2826
  %101 = load i8*, i8** %2, align 8, !dbg !2827
  store i8* %101, i8** @program_invocation_name, align 8, !dbg !2828
  br label %originalBB6
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #5

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_char_quoting(%struct.quoting_options*, i8 signext, i32) #4 !dbg !2830 {
  %4 = alloca %struct.quoting_options*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %4, metadata !2834, metadata !DIExpression()), !dbg !2835
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !2836, metadata !DIExpression()), !dbg !2837
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !2838, metadata !DIExpression()), !dbg !2839
  call void @llvm.dbg.declare(metadata i8* %7, metadata !2840, metadata !DIExpression()), !dbg !2841
  %11 = load i8, i8* %5, align 1, !dbg !2842
  store i8 %11, i8* %7, align 1, !dbg !2841
  call void @llvm.dbg.declare(metadata i32** %8, metadata !2843, metadata !DIExpression()), !dbg !2845
  %12 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !2846
  %13 = icmp ne %struct.quoting_options* %12, null, !dbg !2846
  br i1 %13, label %14, label %32, !dbg !2846

14:                                               ; preds = %3
  %15 = load i32, i32* @x.57
  %16 = load i32, i32* @y.58
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !2847
  %24 = load i32, i32* @x.57
  %25 = load i32, i32* @y.58
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %49, !dbg !2846

32:                                               ; preds = %3
  %33 = load i32, i32* @x.57
  %34 = load i32, i32* @y.58
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load i32, i32* @x.57
  %42 = load i32, i32* @y.58
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %49, !dbg !2846

49:                                               ; preds = %originalBBpart24, %originalBBpart2
  %50 = phi %struct.quoting_options* [ %23, %originalBBpart2 ], [ @default_quoting_options, %originalBBpart24 ], !dbg !2846
  %51 = load i32, i32* @x.57
  %52 = load i32, i32* @y.58
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %49, %originalBB6alteredBB
  %59 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %50, i32 0, i32 2, !dbg !2848
  %60 = getelementptr inbounds [8 x i32], [8 x i32]* %59, i64 0, i64 0, !dbg !2849
  %61 = load i8, i8* %7, align 1, !dbg !2850
  %62 = zext i8 %61 to i64, !dbg !2850
  %63 = udiv i64 %62, 32, !dbg !2851
  %64 = getelementptr inbounds i32, i32* %60, i64 %63, !dbg !2852
  store i32* %64, i32** %8, align 8, !dbg !2845
  call void @llvm.dbg.declare(metadata i32* %9, metadata !2853, metadata !DIExpression()), !dbg !2854
  %65 = load i8, i8* %7, align 1, !dbg !2855
  %66 = zext i8 %65 to i64, !dbg !2855
  %67 = urem i64 %66, 32, !dbg !2856
  %68 = trunc i64 %67 to i32, !dbg !2855
  store i32 %68, i32* %9, align 4, !dbg !2854
  call void @llvm.dbg.declare(metadata i32* %10, metadata !2857, metadata !DIExpression()), !dbg !2858
  %69 = load i32*, i32** %8, align 8, !dbg !2859
  %70 = load i32, i32* %69, align 4, !dbg !2860
  %71 = load i32, i32* %9, align 4, !dbg !2861
  %72 = lshr i32 %70, %71, !dbg !2862
  %73 = and i32 %72, 1, !dbg !2863
  store i32 %73, i32* %10, align 4, !dbg !2858
  %74 = load i32, i32* %6, align 4, !dbg !2864
  %75 = and i32 %74, 1, !dbg !2865
  %76 = load i32, i32* %10, align 4, !dbg !2866
  %77 = xor i32 %75, %76, !dbg !2867
  %78 = load i32, i32* %9, align 4, !dbg !2868
  %79 = shl i32 %77, %78, !dbg !2869
  %80 = load i32*, i32** %8, align 8, !dbg !2870
  %81 = load i32, i32* %80, align 4, !dbg !2871
  %82 = xor i32 %81, %79, !dbg !2871
  store i32 %82, i32* %80, align 4, !dbg !2871
  %83 = load i32, i32* %10, align 4, !dbg !2872
  %84 = load i32, i32* @x.57
  %85 = load i32, i32* @y.58
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart274, label %originalBB6alteredBB

originalBBpart274:                                ; preds = %originalBB6
  ret i32 %83, !dbg !2873

originalBBalteredBB:                              ; preds = %originalBB, %14
  %92 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !2847
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  %93 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %50, i32 0, i32 2, !dbg !2848
  %94 = getelementptr inbounds [8 x i32], [8 x i32]* %93, i64 0, i64 0, !dbg !2849
  %95 = load i8, i8* %7, align 1, !dbg !2850
  %96 = zext i8 %95 to i64, !dbg !2850
  %_ = sub i64 %96, 32
  %gen = mul i64 %_, 32
  %_7 = sub i64 0, %96
  %gen8 = add i64 %_7, 32
  %_9 = sub i64 %96, 32
  %gen10 = mul i64 %_9, 32
  %_11 = sub i64 0, %96
  %gen12 = add i64 %_11, 32
  %97 = udiv i64 %96, 32, !dbg !2851
  %98 = getelementptr inbounds i32, i32* %94, i64 %97, !dbg !2852
  store i32* %98, i32** %8, align 8, !dbg !2845
  call void @llvm.dbg.declare(metadata !4, metadata !2874, metadata !DIExpression()), !dbg !2854
  %99 = load i8, i8* %7, align 1, !dbg !2855
  %100 = zext i8 %99 to i64, !dbg !2855
  %_13 = shl i64 %100, 32
  %_14 = sub i64 %100, 32
  %gen15 = mul i64 %_14, 32
  %_16 = sub i64 0, %100
  %gen17 = add i64 %_16, 32
  %_18 = sub i64 0, %100
  %gen19 = add i64 %_18, 32
  %_20 = shl i64 %100, 32
  %101 = urem i64 %100, 32, !dbg !2856
  %102 = trunc i64 %101 to i32, !dbg !2855
  store i32 %102, i32* %9, align 4, !dbg !2854
  call void @llvm.dbg.declare(metadata !4, metadata !2909, metadata !DIExpression()), !dbg !2858
  %103 = load i32*, i32** %8, align 8, !dbg !2859
  %104 = load i32, i32* %103, align 4, !dbg !2860
  %105 = load i32, i32* %9, align 4, !dbg !2861
  %_21 = sub i32 %104, %105
  %gen22 = mul i32 %_21, %105
  %_23 = shl i32 %104, %105
  %_24 = sub i32 %104, %105
  %gen25 = mul i32 %_24, %105
  %_26 = sub i32 0, %104
  %gen27 = add i32 %_26, %105
  %_28 = shl i32 %104, %105
  %_29 = shl i32 %104, %105
  %_30 = shl i32 %104, %105
  %_31 = shl i32 %104, %105
  %106 = lshr i32 %104, %105, !dbg !2862
  %_32 = shl i32 %106, 1
  %_33 = sub i32 0, %106
  %gen34 = add i32 %_33, 1
  %_35 = shl i32 %106, 1
  %_36 = sub i32 %106, 1
  %gen37 = mul i32 %_36, 1
  %_38 = shl i32 %106, 1
  %107 = and i32 %106, 1, !dbg !2863
  store i32 %107, i32* %10, align 4, !dbg !2858
  %108 = load i32, i32* %6, align 4, !dbg !2864
  %_39 = sub i32 %108, 1
  %gen40 = mul i32 %_39, 1
  %_41 = sub i32 %108, 1
  %gen42 = mul i32 %_41, 1
  %_43 = shl i32 %108, 1
  %_44 = shl i32 %108, 1
  %_45 = sub i32 %108, 1
  %gen46 = mul i32 %_45, 1
  %_47 = sub i32 %108, 1
  %gen48 = mul i32 %_47, 1
  %109 = and i32 %108, 1, !dbg !2865
  %110 = load i32, i32* %10, align 4, !dbg !2866
  %_49 = sub i32 0, %109
  %gen50 = add i32 %_49, %110
  %_51 = sub i32 0, %109
  %gen52 = add i32 %_51, %110
  %_53 = sub i32 %109, %110
  %gen54 = mul i32 %_53, %110
  %_55 = sub i32 %109, %110
  %gen56 = mul i32 %_55, %110
  %_57 = sub i32 %109, %110
  %gen58 = mul i32 %_57, %110
  %_59 = sub i32 0, %109
  %gen60 = add i32 %_59, %110
  %_61 = sub i32 0, %109
  %gen62 = add i32 %_61, %110
  %111 = xor i32 %109, %110, !dbg !2867
  %112 = load i32, i32* %9, align 4, !dbg !2868
  %_63 = sub i32 0, %111
  %gen64 = add i32 %_63, %112
  %_65 = shl i32 %111, %112
  %_66 = sub i32 0, %111
  %gen67 = add i32 %_66, %112
  %113 = shl i32 %111, %112, !dbg !2869
  %114 = load i32*, i32** %8, align 8, !dbg !2870
  %115 = load i32, i32* %114, align 4, !dbg !2871
  %_68 = shl i32 %115, %113
  %_69 = sub i32 %115, %113
  %gen70 = mul i32 %_69, %113
  %_71 = sub i32 0, %115
  %gen72 = add i32 %_71, %113
  %116 = xor i32 %115, %113, !dbg !2871
  store i32 %116, i32* %114, align 4, !dbg !2871
  %117 = load i32, i32* %10, align 4, !dbg !2872
  br label %originalBB6
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char_mem(i8*, i64, i8 signext) #4 !dbg !2910 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  %7 = alloca %struct.quoting_options, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2913, metadata !DIExpression()), !dbg !2914
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !2915, metadata !DIExpression()), !dbg !2916
  store i8 %2, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !2917, metadata !DIExpression()), !dbg !2918
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %7, metadata !2919, metadata !DIExpression()), !dbg !2920
  %8 = bitcast %struct.quoting_options* %7 to i8*, !dbg !2921
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !2921
  %9 = load i8, i8* %6, align 1, !dbg !2922
  %10 = call i32 @set_char_quoting(%struct.quoting_options* %7, i8 signext %9, i32 1), !dbg !2923
  %11 = load i8*, i8** %4, align 8, !dbg !2924
  %12 = load i64, i64* %5, align 8, !dbg !2925
  %13 = call i8* @quotearg_n_options(i32 0, i8* %11, i64 %12, %struct.quoting_options* %7), !dbg !2926
  ret i8* %13, !dbg !2927
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32, i8*, i64, %struct.quoting_options*) #4 !dbg !2928 {
  %5 = load i32, i32* @x.61
  %6 = load i32, i32* @y.62
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca %struct.quoting_options*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct.slotvec*, align 8
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i64, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i32, align 4
  %24 = alloca i64, align 8
  store i32 %0, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !2933, metadata !DIExpression()), !dbg !2934
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !2935, metadata !DIExpression()), !dbg !2936
  store i64 %2, i64* %15, align 8
  call void @llvm.dbg.declare(metadata i64* %15, metadata !2937, metadata !DIExpression()), !dbg !2938
  store %struct.quoting_options* %3, %struct.quoting_options** %16, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %16, metadata !2939, metadata !DIExpression()), !dbg !2940
  call void @llvm.dbg.declare(metadata i32* %17, metadata !2941, metadata !DIExpression()), !dbg !2942
  %25 = call i32* @__errno_location() #15, !dbg !2943
  %26 = load i32, i32* %25, align 4, !dbg !2943
  store i32 %26, i32* %17, align 4, !dbg !2942
  call void @llvm.dbg.declare(metadata %struct.slotvec** %18, metadata !2944, metadata !DIExpression()), !dbg !2945
  %27 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !2946
  store %struct.slotvec* %27, %struct.slotvec** %18, align 8, !dbg !2945
  %28 = load i32, i32* %13, align 4, !dbg !2947
  %29 = icmp slt i32 %28, 0, !dbg !2949
  %30 = load i32, i32* @x.61
  %31 = load i32, i32* @y.62
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %29, label %38, label %55, !dbg !2950

38:                                               ; preds = %originalBBpart2
  %39 = load i32, i32* @x.61
  %40 = load i32, i32* @y.62
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %38, %originalBB1alteredBB
  call void @abort() #12, !dbg !2951
  %47 = load i32, i32* @x.61
  %48 = load i32, i32* @y.62
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable, !dbg !2951

55:                                               ; preds = %originalBBpart2
  %56 = load i32, i32* @nslots, align 4, !dbg !2952
  %57 = load i32, i32* %13, align 4, !dbg !2954
  %58 = icmp sle i32 %56, %57, !dbg !2955
  br i1 %58, label %59, label %181, !dbg !2956

59:                                               ; preds = %55
  call void @llvm.dbg.declare(metadata i8* %19, metadata !2957, metadata !DIExpression()), !dbg !2959
  %60 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2960
  %61 = icmp eq %struct.slotvec* %60, @slotvec0, !dbg !2961
  %62 = zext i1 %61 to i8, !dbg !2959
  store i8 %62, i8* %19, align 1, !dbg !2959
  call void @llvm.dbg.declare(metadata i32* %20, metadata !2962, metadata !DIExpression()), !dbg !2963
  store i32 2147483646, i32* %20, align 4, !dbg !2963
  %63 = load i32, i32* %20, align 4, !dbg !2964
  %64 = load i32, i32* %13, align 4, !dbg !2966
  %65 = icmp slt i32 %63, %64, !dbg !2967
  br i1 %65, label %66, label %83, !dbg !2968

66:                                               ; preds = %59
  %67 = load i32, i32* @x.61
  %68 = load i32, i32* @y.62
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %66, %originalBB6alteredBB
  call void @xalloc_die() #14, !dbg !2969
  %75 = load i32, i32* @x.61
  %76 = load i32, i32* @y.62
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable, !dbg !2969

83:                                               ; preds = %59
  %84 = load i32, i32* @x.61
  %85 = load i32, i32* @y.62
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %83, %originalBB10alteredBB
  %92 = load i8, i8* %19, align 1, !dbg !2970
  %93 = trunc i8 %92 to i1, !dbg !2970
  %94 = load i32, i32* @x.61
  %95 = load i32, i32* @y.62
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %93, label %102, label %119, !dbg !2970

102:                                              ; preds = %originalBBpart212
  %103 = load i32, i32* @x.61
  %104 = load i32, i32* @y.62
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %102, %originalBB14alteredBB
  %111 = load i32, i32* @x.61
  %112 = load i32, i32* @y.62
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %121, !dbg !2970

119:                                              ; preds = %originalBBpart212
  %120 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2971
  br label %121, !dbg !2970

121:                                              ; preds = %119, %originalBBpart216
  %122 = phi %struct.slotvec* [ null, %originalBBpart216 ], [ %120, %119 ], !dbg !2970
  %123 = load i32, i32* @x.61
  %124 = load i32, i32* @y.62
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %121, %originalBB18alteredBB
  %131 = bitcast %struct.slotvec* %122 to i8*, !dbg !2970
  %132 = load i32, i32* %13, align 4, !dbg !2972
  %133 = add nsw i32 %132, 1, !dbg !2973
  %134 = sext i32 %133 to i64, !dbg !2974
  %135 = mul i64 %134, 16, !dbg !2975
  %136 = call i8* @xrealloc(i8* %131, i64 %135), !dbg !2976
  %137 = bitcast i8* %136 to %struct.slotvec*, !dbg !2976
  store %struct.slotvec* %137, %struct.slotvec** %18, align 8, !dbg !2977
  store %struct.slotvec* %137, %struct.slotvec** @slotvec, align 8, !dbg !2978
  %138 = load i8, i8* %19, align 1, !dbg !2979
  %139 = trunc i8 %138 to i1, !dbg !2979
  %140 = load i32, i32* @x.61
  %141 = load i32, i32* @y.62
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBBpart241, label %originalBB18alteredBB

originalBBpart241:                                ; preds = %originalBB18
  br i1 %139, label %148, label %151, !dbg !2981

148:                                              ; preds = %originalBBpart241
  %149 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2982
  %150 = bitcast %struct.slotvec* %149 to i8*, !dbg !2983
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !2983
  br label %151, !dbg !2984

151:                                              ; preds = %148, %originalBBpart241
  %152 = load i32, i32* @x.61
  %153 = load i32, i32* @y.62
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %151, %originalBB43alteredBB
  %160 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2985
  %161 = load i32, i32* @nslots, align 4, !dbg !2986
  %162 = sext i32 %161 to i64, !dbg !2987
  %163 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %160, i64 %162, !dbg !2987
  %164 = bitcast %struct.slotvec* %163 to i8*, !dbg !2988
  %165 = load i32, i32* %13, align 4, !dbg !2989
  %166 = add nsw i32 %165, 1, !dbg !2990
  %167 = load i32, i32* @nslots, align 4, !dbg !2991
  %168 = sub nsw i32 %166, %167, !dbg !2992
  %169 = sext i32 %168 to i64, !dbg !2993
  %170 = mul i64 %169, 16, !dbg !2994
  call void @llvm.memset.p0i8.i64(i8* align 8 %164, i8 0, i64 %170, i1 false), !dbg !2988
  %171 = load i32, i32* %13, align 4, !dbg !2995
  %172 = add nsw i32 %171, 1, !dbg !2996
  store i32 %172, i32* @nslots, align 4, !dbg !2997
  %173 = load i32, i32* @x.61
  %174 = load i32, i32* @y.62
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBBpart280, label %originalBB43alteredBB

originalBBpart280:                                ; preds = %originalBB43
  br label %181, !dbg !2998

181:                                              ; preds = %originalBBpart280, %55
  call void @llvm.dbg.declare(metadata i64* %21, metadata !2999, metadata !DIExpression()), !dbg !3001
  %182 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3002
  %183 = load i32, i32* %13, align 4, !dbg !3003
  %184 = sext i32 %183 to i64, !dbg !3002
  %185 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %182, i64 %184, !dbg !3002
  %186 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %185, i32 0, i32 0, !dbg !3004
  %187 = load i64, i64* %186, align 8, !dbg !3004
  store i64 %187, i64* %21, align 8, !dbg !3001
  call void @llvm.dbg.declare(metadata i8** %22, metadata !3005, metadata !DIExpression()), !dbg !3006
  %188 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3007
  %189 = load i32, i32* %13, align 4, !dbg !3008
  %190 = sext i32 %189 to i64, !dbg !3007
  %191 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %188, i64 %190, !dbg !3007
  %192 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %191, i32 0, i32 1, !dbg !3009
  %193 = load i8*, i8** %192, align 8, !dbg !3009
  store i8* %193, i8** %22, align 8, !dbg !3006
  call void @llvm.dbg.declare(metadata i32* %23, metadata !3010, metadata !DIExpression()), !dbg !3011
  %194 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3012
  %195 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %194, i32 0, i32 1, !dbg !3013
  %196 = load i32, i32* %195, align 4, !dbg !3013
  %197 = or i32 %196, 1, !dbg !3014
  store i32 %197, i32* %23, align 4, !dbg !3011
  call void @llvm.dbg.declare(metadata i64* %24, metadata !3015, metadata !DIExpression()), !dbg !3016
  %198 = load i8*, i8** %22, align 8, !dbg !3017
  %199 = load i64, i64* %21, align 8, !dbg !3018
  %200 = load i8*, i8** %14, align 8, !dbg !3019
  %201 = load i64, i64* %15, align 8, !dbg !3020
  %202 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3021
  %203 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %202, i32 0, i32 0, !dbg !3022
  %204 = load i32, i32* %203, align 8, !dbg !3022
  %205 = load i32, i32* %23, align 4, !dbg !3023
  %206 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3024
  %207 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %206, i32 0, i32 2, !dbg !3025
  %208 = getelementptr inbounds [8 x i32], [8 x i32]* %207, i64 0, i64 0, !dbg !3024
  %209 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3026
  %210 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %209, i32 0, i32 3, !dbg !3027
  %211 = load i8*, i8** %210, align 8, !dbg !3027
  %212 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3028
  %213 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %212, i32 0, i32 4, !dbg !3029
  %214 = load i8*, i8** %213, align 8, !dbg !3029
  %215 = call i64 @quotearg_buffer_restyled(i8* %198, i64 %199, i8* %200, i64 %201, i32 %204, i32 %205, i32* %208, i8* %211, i8* %214), !dbg !3030
  store i64 %215, i64* %24, align 8, !dbg !3016
  %216 = load i64, i64* %21, align 8, !dbg !3031
  %217 = load i64, i64* %24, align 8, !dbg !3033
  %218 = icmp ule i64 %216, %217, !dbg !3034
  br i1 %218, label %219, label %273, !dbg !3035

219:                                              ; preds = %181
  %220 = load i64, i64* %24, align 8, !dbg !3036
  %221 = add i64 %220, 1, !dbg !3038
  store i64 %221, i64* %21, align 8, !dbg !3039
  %222 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3040
  %223 = load i32, i32* %13, align 4, !dbg !3041
  %224 = sext i32 %223 to i64, !dbg !3040
  %225 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %222, i64 %224, !dbg !3040
  %226 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %225, i32 0, i32 0, !dbg !3042
  store i64 %221, i64* %226, align 8, !dbg !3043
  %227 = load i8*, i8** %22, align 8, !dbg !3044
  %228 = icmp ne i8* %227, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !3046
  br i1 %228, label %229, label %231, !dbg !3047

229:                                              ; preds = %219
  %230 = load i8*, i8** %22, align 8, !dbg !3048
  call void @free(i8* %230) #10, !dbg !3049
  br label %231, !dbg !3049

231:                                              ; preds = %229, %219
  %232 = load i32, i32* @x.61
  %233 = load i32, i32* @y.62
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %231, %originalBB82alteredBB
  %240 = load i64, i64* %21, align 8, !dbg !3050
  %241 = call noalias i8* @xcharalloc(i64 %240), !dbg !3051
  store i8* %241, i8** %22, align 8, !dbg !3052
  %242 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3053
  %243 = load i32, i32* %13, align 4, !dbg !3054
  %244 = sext i32 %243 to i64, !dbg !3053
  %245 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %242, i64 %244, !dbg !3053
  %246 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %245, i32 0, i32 1, !dbg !3055
  store i8* %241, i8** %246, align 8, !dbg !3056
  %247 = load i8*, i8** %22, align 8, !dbg !3057
  %248 = load i64, i64* %21, align 8, !dbg !3058
  %249 = load i8*, i8** %14, align 8, !dbg !3059
  %250 = load i64, i64* %15, align 8, !dbg !3060
  %251 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3061
  %252 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %251, i32 0, i32 0, !dbg !3062
  %253 = load i32, i32* %252, align 8, !dbg !3062
  %254 = load i32, i32* %23, align 4, !dbg !3063
  %255 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3064
  %256 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %255, i32 0, i32 2, !dbg !3065
  %257 = getelementptr inbounds [8 x i32], [8 x i32]* %256, i64 0, i64 0, !dbg !3064
  %258 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3066
  %259 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %258, i32 0, i32 3, !dbg !3067
  %260 = load i8*, i8** %259, align 8, !dbg !3067
  %261 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3068
  %262 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %261, i32 0, i32 4, !dbg !3069
  %263 = load i8*, i8** %262, align 8, !dbg !3069
  %264 = call i64 @quotearg_buffer_restyled(i8* %247, i64 %248, i8* %249, i64 %250, i32 %253, i32 %254, i32* %257, i8* %260, i8* %263), !dbg !3070
  %265 = load i32, i32* @x.61
  %266 = load i32, i32* @y.62
  %267 = sub i32 %265, 1
  %268 = mul i32 %265, %267
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %270, %271
  br i1 %272, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br label %273, !dbg !3071

273:                                              ; preds = %originalBBpart284, %181
  %274 = load i32, i32* %17, align 4, !dbg !3072
  %275 = call i32* @__errno_location() #15, !dbg !3073
  store i32 %274, i32* %275, align 4, !dbg !3074
  %276 = load i8*, i8** %22, align 8, !dbg !3075
  ret i8* %276, !dbg !3076

originalBBalteredBB:                              ; preds = %originalBB, %4
  %277 = alloca i32, align 4
  %278 = alloca i8*, align 8
  %279 = alloca i64, align 8
  %280 = alloca %struct.quoting_options*, align 8
  %281 = alloca i32, align 4
  %282 = alloca %struct.slotvec*, align 8
  %283 = alloca i8, align 1
  %284 = alloca i32, align 4
  %285 = alloca i64, align 8
  %286 = alloca i8*, align 8
  %287 = alloca i32, align 4
  %288 = alloca i64, align 8
  store i32 %0, i32* %277, align 4
  call void @llvm.dbg.declare(metadata i32* %277, metadata !3077, metadata !DIExpression()), !dbg !2934
  store i8* %1, i8** %278, align 8
  call void @llvm.dbg.declare(metadata i8** %278, metadata !3113, metadata !DIExpression()), !dbg !2936
  store i64 %2, i64* %279, align 8
  call void @llvm.dbg.declare(metadata i64* %279, metadata !3114, metadata !DIExpression()), !dbg !2938
  store %struct.quoting_options* %3, %struct.quoting_options** %280, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %280, metadata !3115, metadata !DIExpression()), !dbg !2940
  call void @llvm.dbg.declare(metadata i32* %281, metadata !3116, metadata !DIExpression()), !dbg !2942
  %289 = call i32* @__errno_location() #15, !dbg !2943
  %290 = load i32, i32* %289, align 4, !dbg !2943
  store i32 %290, i32* %281, align 4, !dbg !2942
  call void @llvm.dbg.declare(metadata %struct.slotvec** %282, metadata !3117, metadata !DIExpression()), !dbg !2945
  %291 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !2946
  store %struct.slotvec* %291, %struct.slotvec** %282, align 8, !dbg !2945
  %292 = load i32, i32* %277, align 4, !dbg !2947
  %293 = icmp slt i32 %292, 0, !dbg !2949
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %38
  call void @abort() #12, !dbg !2951
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %66
  call void @xalloc_die() #14, !dbg !2969
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %83
  %294 = load i8, i8* %19, align 1, !dbg !2970
  %295 = trunc i8 %294 to i1, !dbg !2970
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %102
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %121
  %296 = bitcast %struct.slotvec* %122 to i8*, !dbg !2970
  %297 = load i32, i32* %13, align 4, !dbg !2972
  %_ = sub i32 %297, 1
  %gen = mul i32 %_, 1
  %_19 = shl i32 %297, 1
  %_20 = sub i32 0, %297
  %gen21 = add i32 %_20, 1
  %_22 = shl i32 %297, 1
  %_23 = sub i32 %297, 1
  %gen24 = mul i32 %_23, 1
  %_25 = shl i32 %297, 1
  %_26 = sub i32 0, %297
  %gen27 = add i32 %_26, 1
  %298 = add nsw i32 %297, 1, !dbg !2973
  %299 = sext i32 %298 to i64, !dbg !2974
  %_28 = sub i64 0, %299
  %gen29 = add i64 %_28, 16
  %_30 = sub i64 %299, 16
  %gen31 = mul i64 %_30, 16
  %_32 = shl i64 %299, 16
  %_33 = shl i64 %299, 16
  %_34 = sub i64 %299, 16
  %gen35 = mul i64 %_34, 16
  %_36 = sub i64 0, %299
  %gen37 = add i64 %_36, 16
  %_38 = sub i64 %299, 16
  %gen39 = mul i64 %_38, 16
  %300 = mul i64 %299, 16, !dbg !2975
  %301 = call i8* @xrealloc(i8* %296, i64 %300), !dbg !2976
  %302 = bitcast i8* %301 to %struct.slotvec*, !dbg !2976
  store %struct.slotvec* %302, %struct.slotvec** %18, align 8, !dbg !2977
  store %struct.slotvec* %302, %struct.slotvec** @slotvec, align 8, !dbg !2978
  %303 = load i8, i8* %19, align 1, !dbg !2979
  %304 = trunc i8 %303 to i1, !dbg !2979
  br label %originalBB18

originalBB43alteredBB:                            ; preds = %originalBB43, %151
  %305 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2985
  %306 = load i32, i32* @nslots, align 4, !dbg !2986
  %307 = sext i32 %306 to i64, !dbg !2987
  %308 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %305, i64 %307, !dbg !2987
  %309 = bitcast %struct.slotvec* %308 to i8*, !dbg !2988
  %310 = load i32, i32* %13, align 4, !dbg !2989
  %_44 = shl i32 %310, 1
  %_45 = sub i32 0, %310
  %gen46 = add i32 %_45, 1
  %_47 = shl i32 %310, 1
  %311 = add nsw i32 %310, 1, !dbg !2990
  %312 = load i32, i32* @nslots, align 4, !dbg !2991
  %_48 = sub i32 %311, %312
  %gen49 = mul i32 %_48, %312
  %_50 = sub i32 %311, %312
  %gen51 = mul i32 %_50, %312
  %_52 = sub i32 %311, %312
  %gen53 = mul i32 %_52, %312
  %_54 = sub i32 0, %311
  %gen55 = add i32 %_54, %312
  %313 = sub nsw i32 %311, %312, !dbg !2992
  %314 = sext i32 %313 to i64, !dbg !2993
  %_56 = sub i64 0, %314
  %gen57 = add i64 %_56, 16
  %_58 = shl i64 %314, 16
  %_59 = sub i64 0, %314
  %gen60 = add i64 %_59, 16
  %_61 = sub i64 %314, 16
  %gen62 = mul i64 %_61, 16
  %_63 = sub i64 0, %314
  %gen64 = add i64 %_63, 16
  %_65 = sub i64 %314, 16
  %gen66 = mul i64 %_65, 16
  %_67 = sub i64 0, %314
  %gen68 = add i64 %_67, 16
  %_69 = shl i64 %314, 16
  %315 = mul i64 %314, 16, !dbg !2994
  call void @llvm.memset.p0i8.i64(i8* align 8 %309, i8 0, i64 %315, i1 false), !dbg !2988
  %316 = load i32, i32* %13, align 4, !dbg !2995
  %_70 = sub i32 0, %316
  %gen71 = add i32 %_70, 1
  %_72 = shl i32 %316, 1
  %_73 = shl i32 %316, 1
  %_74 = sub i32 %316, 1
  %gen75 = mul i32 %_74, 1
  %_76 = shl i32 %316, 1
  %_77 = sub i32 %316, 1
  %gen78 = mul i32 %_77, 1
  %317 = add nsw i32 %316, 1, !dbg !2996
  store i32 %317, i32* @nslots, align 4, !dbg !2997
  br label %originalBB43

originalBB82alteredBB:                            ; preds = %originalBB82, %231
  %318 = load i64, i64* %21, align 8, !dbg !3050
  %319 = call noalias i8* @xcharalloc(i64 %318), !dbg !3051
  store i8* %319, i8** %22, align 8, !dbg !3052
  %320 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !3053
  %321 = load i32, i32* %13, align 4, !dbg !3054
  %322 = sext i32 %321 to i64, !dbg !3053
  %323 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %320, i64 %322, !dbg !3053
  %324 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %323, i32 0, i32 1, !dbg !3055
  store i8* %319, i8** %324, align 8, !dbg !3056
  %325 = load i8*, i8** %22, align 8, !dbg !3057
  %326 = load i64, i64* %21, align 8, !dbg !3058
  %327 = load i8*, i8** %14, align 8, !dbg !3059
  %328 = load i64, i64* %15, align 8, !dbg !3060
  %329 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3061
  %330 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %329, i32 0, i32 0, !dbg !3062
  %331 = load i32, i32* %330, align 8, !dbg !3062
  %332 = load i32, i32* %23, align 4, !dbg !3063
  %333 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3064
  %334 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %333, i32 0, i32 2, !dbg !3065
  %335 = getelementptr inbounds [8 x i32], [8 x i32]* %334, i64 0, i64 0, !dbg !3064
  %336 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3066
  %337 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %336, i32 0, i32 3, !dbg !3067
  %338 = load i8*, i8** %337, align 8, !dbg !3067
  %339 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !3068
  %340 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %339, i32 0, i32 4, !dbg !3069
  %341 = load i8*, i8** %340, align 8, !dbg !3069
  %342 = call i64 @quotearg_buffer_restyled(i8* %325, i64 %326, i8* %327, i64 %328, i32 %331, i32 %332, i32* %335, i8* %338, i8* %341), !dbg !3070
  br label %originalBB82
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8*, i64, i8*, i64, i32, i32, i32*, i8*, i8*) #4 !dbg !3118 {
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i64, align 8
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %28 = alloca i8, align 1
  %29 = alloca i8, align 1
  %30 = alloca i8, align 1
  %31 = alloca i8, align 1
  %32 = alloca i8, align 1
  %33 = alloca i8, align 1
  %34 = alloca i8, align 1
  %35 = alloca i8, align 1
  %36 = alloca i64, align 8
  %37 = alloca i8, align 1
  %38 = alloca %struct.__mbstate_t, align 4
  %39 = alloca i32, align 4
  %40 = alloca i64, align 8
  %41 = alloca i64, align 8
  %42 = alloca i64, align 8
  store i8* %0, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !3123, metadata !DIExpression()), !dbg !3124
  store i64 %1, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !3125, metadata !DIExpression()), !dbg !3126
  store i8* %2, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !3127, metadata !DIExpression()), !dbg !3128
  store i64 %3, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !3129, metadata !DIExpression()), !dbg !3130
  store i32 %4, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !3131, metadata !DIExpression()), !dbg !3132
  store i32 %5, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !3133, metadata !DIExpression()), !dbg !3134
  store i32* %6, i32** %17, align 8
  call void @llvm.dbg.declare(metadata i32** %17, metadata !3135, metadata !DIExpression()), !dbg !3136
  store i8* %7, i8** %18, align 8
  call void @llvm.dbg.declare(metadata i8** %18, metadata !3137, metadata !DIExpression()), !dbg !3138
  store i8* %8, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !3139, metadata !DIExpression()), !dbg !3140
  call void @llvm.dbg.declare(metadata i64* %20, metadata !3141, metadata !DIExpression()), !dbg !3142
  call void @llvm.dbg.declare(metadata i64* %21, metadata !3143, metadata !DIExpression()), !dbg !3144
  store i64 0, i64* %21, align 8, !dbg !3144
  call void @llvm.dbg.declare(metadata i64* %22, metadata !3145, metadata !DIExpression()), !dbg !3146
  store i64 0, i64* %22, align 8, !dbg !3146
  call void @llvm.dbg.declare(metadata i8** %23, metadata !3147, metadata !DIExpression()), !dbg !3148
  store i8* null, i8** %23, align 8, !dbg !3148
  call void @llvm.dbg.declare(metadata i64* %24, metadata !3149, metadata !DIExpression()), !dbg !3150
  store i64 0, i64* %24, align 8, !dbg !3150
  call void @llvm.dbg.declare(metadata i8* %25, metadata !3151, metadata !DIExpression()), !dbg !3152
  store i8 0, i8* %25, align 1, !dbg !3152
  call void @llvm.dbg.declare(metadata i8* %26, metadata !3153, metadata !DIExpression()), !dbg !3154
  %43 = call i64 @__ctype_get_mb_cur_max() #10, !dbg !3155
  %44 = icmp eq i64 %43, 1, !dbg !3156
  %45 = zext i1 %44 to i8, !dbg !3154
  store i8 %45, i8* %26, align 1, !dbg !3154
  call void @llvm.dbg.declare(metadata i8* %27, metadata !3157, metadata !DIExpression()), !dbg !3158
  %46 = load i32, i32* %16, align 4, !dbg !3159
  %47 = and i32 %46, 2, !dbg !3160
  %48 = icmp ne i32 %47, 0, !dbg !3161
  %49 = zext i1 %48 to i8, !dbg !3158
  store i8 %49, i8* %27, align 1, !dbg !3158
  call void @llvm.dbg.declare(metadata i8* %28, metadata !3162, metadata !DIExpression()), !dbg !3163
  store i8 0, i8* %28, align 1, !dbg !3163
  call void @llvm.dbg.declare(metadata i8* %29, metadata !3164, metadata !DIExpression()), !dbg !3165
  store i8 0, i8* %29, align 1, !dbg !3165
  call void @llvm.dbg.declare(metadata i8* %30, metadata !3166, metadata !DIExpression()), !dbg !3167
  store i8 1, i8* %30, align 1, !dbg !3167
  br label %50, !dbg !3168

50:                                               ; preds = %originalBBpart2955, %9
  call void @llvm.dbg.label(metadata !3169), !dbg !3170
  %51 = load i32, i32* @x.63
  %52 = load i32, i32* @y.64
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %50, %originalBBalteredBB
  %59 = load i32, i32* %15, align 4, !dbg !3171
  %60 = load i32, i32* @x.63
  %61 = load i32, i32* @y.64
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  switch i32 %59, label %456 [
    i32 6, label %68
    i32 5, label %85
    i32 7, label %182
    i32 8, label %199
    i32 9, label %199
    i32 10, label %199
    i32 3, label %319
    i32 1, label %336
    i32 4, label %337
    i32 2, label %342
    i32 0, label %455
  ], !dbg !3172

68:                                               ; preds = %originalBBpart2
  %69 = load i32, i32* @x.63
  %70 = load i32, i32* @y.64
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %68, %originalBB1alteredBB
  store i32 5, i32* %15, align 4, !dbg !3173
  store i8 1, i8* %27, align 1, !dbg !3175
  %77 = load i32, i32* @x.63
  %78 = load i32, i32* @y.64
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %85, !dbg !3176

85:                                               ; preds = %originalBBpart24, %originalBBpart2
  %86 = load i8, i8* %27, align 1, !dbg !3177
  %87 = trunc i8 %86 to i1, !dbg !3177
  br i1 %87, label %181, label %88, !dbg !3179

88:                                               ; preds = %85
  %89 = load i32, i32* @x.63
  %90 = load i32, i32* @y.64
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %88, %originalBB6alteredBB
  %97 = load i32, i32* @x.63
  %98 = load i32, i32* @y.64
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %105, !dbg !3180

105:                                              ; preds = %originalBBpart28
  %106 = load i32, i32* @x.63
  %107 = load i32, i32* @y.64
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %105, %originalBB10alteredBB
  %114 = load i64, i64* %21, align 8, !dbg !3181
  %115 = load i64, i64* %12, align 8, !dbg !3181
  %116 = icmp ult i64 %114, %115, !dbg !3181
  %117 = load i32, i32* @x.63
  %118 = load i32, i32* @y.64
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %116, label %125, label %145, !dbg !3184

125:                                              ; preds = %originalBBpart212
  %126 = load i32, i32* @x.63
  %127 = load i32, i32* @y.64
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %125, %originalBB14alteredBB
  %134 = load i8*, i8** %11, align 8, !dbg !3181
  %135 = load i64, i64* %21, align 8, !dbg !3181
  %136 = getelementptr inbounds i8, i8* %134, i64 %135, !dbg !3181
  store i8 34, i8* %136, align 1, !dbg !3181
  %137 = load i32, i32* @x.63
  %138 = load i32, i32* @y.64
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %145, !dbg !3181

145:                                              ; preds = %originalBBpart216, %originalBBpart212
  %146 = load i32, i32* @x.63
  %147 = load i32, i32* @y.64
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %145, %originalBB18alteredBB
  %154 = load i64, i64* %21, align 8, !dbg !3184
  %155 = add i64 %154, 1, !dbg !3184
  store i64 %155, i64* %21, align 8, !dbg !3184
  %156 = load i32, i32* @x.63
  %157 = load i32, i32* @y.64
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBBpart227, label %originalBB18alteredBB

originalBBpart227:                                ; preds = %originalBB18
  br label %164, !dbg !3184

164:                                              ; preds = %originalBBpart227
  %165 = load i32, i32* @x.63
  %166 = load i32, i32* @y.64
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %164, %originalBB29alteredBB
  %173 = load i32, i32* @x.63
  %174 = load i32, i32* @y.64
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br label %181, !dbg !3184

181:                                              ; preds = %originalBBpart231, %85
  store i8 1, i8* %25, align 1, !dbg !3185
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.120, i64 0, i64 0), i8** %23, align 8, !dbg !3186
  store i64 1, i64* %24, align 8, !dbg !3187
  br label %473, !dbg !3188

182:                                              ; preds = %originalBBpart2
  %183 = load i32, i32* @x.63
  %184 = load i32, i32* @y.64
  %185 = sub i32 %183, 1
  %186 = mul i32 %183, %185
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %188, %189
  br i1 %190, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %182, %originalBB33alteredBB
  store i8 1, i8* %25, align 1, !dbg !3189
  store i8 0, i8* %27, align 1, !dbg !3190
  %191 = load i32, i32* @x.63
  %192 = load i32, i32* @y.64
  %193 = sub i32 %191, 1
  %194 = mul i32 %191, %193
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %196, %197
  br i1 %198, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br label %473, !dbg !3191

199:                                              ; preds = %originalBBpart2, %originalBBpart2, %originalBBpart2
  %200 = load i32, i32* @x.63
  %201 = load i32, i32* @y.64
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %199, %originalBB37alteredBB
  %208 = load i32, i32* %15, align 4, !dbg !3192
  %209 = icmp ne i32 %208, 10, !dbg !3195
  %210 = load i32, i32* @x.63
  %211 = load i32, i32* @y.64
  %212 = sub i32 %210, 1
  %213 = mul i32 %210, %212
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %215, %216
  br i1 %217, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br i1 %209, label %218, label %223, !dbg !3196

218:                                              ; preds = %originalBBpart239
  %219 = load i32, i32* %15, align 4, !dbg !3197
  %220 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.121, i64 0, i64 0), i32 %219), !dbg !3199
  store i8* %220, i8** %18, align 8, !dbg !3200
  %221 = load i32, i32* %15, align 4, !dbg !3201
  %222 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.122, i64 0, i64 0), i32 %221), !dbg !3202
  store i8* %222, i8** %19, align 8, !dbg !3203
  br label %223, !dbg !3204

223:                                              ; preds = %218, %originalBBpart239
  %224 = load i32, i32* @x.63
  %225 = load i32, i32* @y.64
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %223, %originalBB41alteredBB
  %232 = load i8, i8* %27, align 1, !dbg !3205
  %233 = trunc i8 %232 to i1, !dbg !3205
  %234 = load i32, i32* @x.63
  %235 = load i32, i32* @y.64
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  br i1 %233, label %315, label %242, !dbg !3207

242:                                              ; preds = %originalBBpart243
  %243 = load i32, i32* @x.63
  %244 = load i32, i32* @y.64
  %245 = sub i32 %243, 1
  %246 = mul i32 %243, %245
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %248, %249
  br i1 %250, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %242, %originalBB45alteredBB
  %251 = load i8*, i8** %18, align 8, !dbg !3208
  store i8* %251, i8** %23, align 8, !dbg !3210
  %252 = load i32, i32* @x.63
  %253 = load i32, i32* @y.64
  %254 = sub i32 %252, 1
  %255 = mul i32 %252, %254
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %257, %258
  br i1 %259, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  br label %260, !dbg !3211

260:                                              ; preds = %311, %originalBBpart247
  %261 = load i8*, i8** %23, align 8, !dbg !3212
  %262 = load i8, i8* %261, align 1, !dbg !3214
  %263 = icmp ne i8 %262, 0, !dbg !3215
  br i1 %263, label %264, label %314, !dbg !3215

264:                                              ; preds = %260
  %265 = load i32, i32* @x.63
  %266 = load i32, i32* @y.64
  %267 = sub i32 %265, 1
  %268 = mul i32 %265, %267
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %270, %271
  br i1 %272, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %264, %originalBB49alteredBB
  %273 = load i32, i32* @x.63
  %274 = load i32, i32* @y.64
  %275 = sub i32 %273, 1
  %276 = mul i32 %273, %275
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %278, %279
  br i1 %280, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  br label %281, !dbg !3216

281:                                              ; preds = %originalBBpart251
  %282 = load i64, i64* %21, align 8, !dbg !3217
  %283 = load i64, i64* %12, align 8, !dbg !3217
  %284 = icmp ult i64 %282, %283, !dbg !3217
  br i1 %284, label %285, label %291, !dbg !3220

285:                                              ; preds = %281
  %286 = load i8*, i8** %23, align 8, !dbg !3217
  %287 = load i8, i8* %286, align 1, !dbg !3217
  %288 = load i8*, i8** %11, align 8, !dbg !3217
  %289 = load i64, i64* %21, align 8, !dbg !3217
  %290 = getelementptr inbounds i8, i8* %288, i64 %289, !dbg !3217
  store i8 %287, i8* %290, align 1, !dbg !3217
  br label %291, !dbg !3217

291:                                              ; preds = %285, %281
  %292 = load i64, i64* %21, align 8, !dbg !3220
  %293 = add i64 %292, 1, !dbg !3220
  store i64 %293, i64* %21, align 8, !dbg !3220
  br label %294, !dbg !3220

294:                                              ; preds = %291
  %295 = load i32, i32* @x.63
  %296 = load i32, i32* @y.64
  %297 = sub i32 %295, 1
  %298 = mul i32 %295, %297
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %300, %301
  br i1 %302, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %294, %originalBB53alteredBB
  %303 = load i32, i32* @x.63
  %304 = load i32, i32* @y.64
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBBpart255, label %originalBB53alteredBB

originalBBpart255:                                ; preds = %originalBB53
  br label %311, !dbg !3220

311:                                              ; preds = %originalBBpart255
  %312 = load i8*, i8** %23, align 8, !dbg !3221
  %313 = getelementptr inbounds i8, i8* %312, i32 1, !dbg !3221
  store i8* %313, i8** %23, align 8, !dbg !3221
  br label %260, !dbg !3222, !llvm.loop !3223

314:                                              ; preds = %260
  br label %315, !dbg !3224

315:                                              ; preds = %314, %originalBBpart243
  store i8 1, i8* %25, align 1, !dbg !3225
  %316 = load i8*, i8** %19, align 8, !dbg !3226
  store i8* %316, i8** %23, align 8, !dbg !3227
  %317 = load i8*, i8** %23, align 8, !dbg !3228
  %318 = call i64 @strlen(i8* %317) #13, !dbg !3229
  store i64 %318, i64* %24, align 8, !dbg !3230
  br label %473, !dbg !3231

319:                                              ; preds = %originalBBpart2
  %320 = load i32, i32* @x.63
  %321 = load i32, i32* @y.64
  %322 = sub i32 %320, 1
  %323 = mul i32 %320, %322
  %324 = urem i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %325, %326
  br i1 %327, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %319, %originalBB57alteredBB
  store i8 1, i8* %25, align 1, !dbg !3232
  %328 = load i32, i32* @x.63
  %329 = load i32, i32* @y.64
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBBpart259, label %originalBB57alteredBB

originalBBpart259:                                ; preds = %originalBB57
  br label %336, !dbg !3233

336:                                              ; preds = %originalBBpart259, %originalBBpart2
  store i8 1, i8* %27, align 1, !dbg !3234
  br label %337, !dbg !3235

337:                                              ; preds = %336, %originalBBpart2
  %338 = load i8, i8* %27, align 1, !dbg !3236
  %339 = trunc i8 %338 to i1, !dbg !3236
  br i1 %339, label %341, label %340, !dbg !3238

340:                                              ; preds = %337
  store i8 1, i8* %25, align 1, !dbg !3239
  br label %341, !dbg !3240

341:                                              ; preds = %340, %337
  br label %342, !dbg !3241

342:                                              ; preds = %341, %originalBBpart2
  %343 = load i32, i32* @x.63
  %344 = load i32, i32* @y.64
  %345 = sub i32 %343, 1
  %346 = mul i32 %343, %345
  %347 = urem i32 %346, 2
  %348 = icmp eq i32 %347, 0
  %349 = icmp slt i32 %344, 10
  %350 = or i1 %348, %349
  br i1 %350, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %342, %originalBB61alteredBB
  store i32 2, i32* %15, align 4, !dbg !3242
  %351 = load i8, i8* %27, align 1, !dbg !3243
  %352 = trunc i8 %351 to i1, !dbg !3243
  %353 = load i32, i32* @x.63
  %354 = load i32, i32* @y.64
  %355 = sub i32 %353, 1
  %356 = mul i32 %353, %355
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %358, %359
  br i1 %360, label %originalBBpart263, label %originalBB61alteredBB

originalBBpart263:                                ; preds = %originalBB61
  br i1 %352, label %438, label %361, !dbg !3245

361:                                              ; preds = %originalBBpart263
  %362 = load i32, i32* @x.63
  %363 = load i32, i32* @y.64
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %361, %originalBB65alteredBB
  %370 = load i32, i32* @x.63
  %371 = load i32, i32* @y.64
  %372 = sub i32 %370, 1
  %373 = mul i32 %370, %372
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %371, 10
  %377 = or i1 %375, %376
  br i1 %377, label %originalBBpart267, label %originalBB65alteredBB

originalBBpart267:                                ; preds = %originalBB65
  br label %378, !dbg !3246

378:                                              ; preds = %originalBBpart267
  %379 = load i32, i32* @x.63
  %380 = load i32, i32* @y.64
  %381 = sub i32 %379, 1
  %382 = mul i32 %379, %381
  %383 = urem i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %380, 10
  %386 = or i1 %384, %385
  br i1 %386, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %378, %originalBB69alteredBB
  %387 = load i64, i64* %21, align 8, !dbg !3247
  %388 = load i64, i64* %12, align 8, !dbg !3247
  %389 = icmp ult i64 %387, %388, !dbg !3247
  %390 = load i32, i32* @x.63
  %391 = load i32, i32* @y.64
  %392 = sub i32 %390, 1
  %393 = mul i32 %390, %392
  %394 = urem i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %391, 10
  %397 = or i1 %395, %396
  br i1 %397, label %originalBBpart271, label %originalBB69alteredBB

originalBBpart271:                                ; preds = %originalBB69
  br i1 %389, label %398, label %418, !dbg !3250

398:                                              ; preds = %originalBBpart271
  %399 = load i32, i32* @x.63
  %400 = load i32, i32* @y.64
  %401 = sub i32 %399, 1
  %402 = mul i32 %399, %401
  %403 = urem i32 %402, 2
  %404 = icmp eq i32 %403, 0
  %405 = icmp slt i32 %400, 10
  %406 = or i1 %404, %405
  br i1 %406, label %originalBB73, label %originalBB73alteredBB

originalBB73:                                     ; preds = %398, %originalBB73alteredBB
  %407 = load i8*, i8** %11, align 8, !dbg !3247
  %408 = load i64, i64* %21, align 8, !dbg !3247
  %409 = getelementptr inbounds i8, i8* %407, i64 %408, !dbg !3247
  store i8 39, i8* %409, align 1, !dbg !3247
  %410 = load i32, i32* @x.63
  %411 = load i32, i32* @y.64
  %412 = sub i32 %410, 1
  %413 = mul i32 %410, %412
  %414 = urem i32 %413, 2
  %415 = icmp eq i32 %414, 0
  %416 = icmp slt i32 %411, 10
  %417 = or i1 %415, %416
  br i1 %417, label %originalBBpart275, label %originalBB73alteredBB

originalBBpart275:                                ; preds = %originalBB73
  br label %418, !dbg !3247

418:                                              ; preds = %originalBBpart275, %originalBBpart271
  %419 = load i64, i64* %21, align 8, !dbg !3250
  %420 = add i64 %419, 1, !dbg !3250
  store i64 %420, i64* %21, align 8, !dbg !3250
  br label %421, !dbg !3250

421:                                              ; preds = %418
  %422 = load i32, i32* @x.63
  %423 = load i32, i32* @y.64
  %424 = sub i32 %422, 1
  %425 = mul i32 %422, %424
  %426 = urem i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %423, 10
  %429 = or i1 %427, %428
  br i1 %429, label %originalBB77, label %originalBB77alteredBB

originalBB77:                                     ; preds = %421, %originalBB77alteredBB
  %430 = load i32, i32* @x.63
  %431 = load i32, i32* @y.64
  %432 = sub i32 %430, 1
  %433 = mul i32 %430, %432
  %434 = urem i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = icmp slt i32 %431, 10
  %437 = or i1 %435, %436
  br i1 %437, label %originalBBpart279, label %originalBB77alteredBB

originalBBpart279:                                ; preds = %originalBB77
  br label %438, !dbg !3250

438:                                              ; preds = %originalBBpart279, %originalBBpart263
  %439 = load i32, i32* @x.63
  %440 = load i32, i32* @y.64
  %441 = sub i32 %439, 1
  %442 = mul i32 %439, %441
  %443 = urem i32 %442, 2
  %444 = icmp eq i32 %443, 0
  %445 = icmp slt i32 %440, 10
  %446 = or i1 %444, %445
  br i1 %446, label %originalBB81, label %originalBB81alteredBB

originalBB81:                                     ; preds = %438, %originalBB81alteredBB
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.122, i64 0, i64 0), i8** %23, align 8, !dbg !3251
  store i64 1, i64* %24, align 8, !dbg !3252
  %447 = load i32, i32* @x.63
  %448 = load i32, i32* @y.64
  %449 = sub i32 %447, 1
  %450 = mul i32 %447, %449
  %451 = urem i32 %450, 2
  %452 = icmp eq i32 %451, 0
  %453 = icmp slt i32 %448, 10
  %454 = or i1 %452, %453
  br i1 %454, label %originalBBpart283, label %originalBB81alteredBB

originalBBpart283:                                ; preds = %originalBB81
  br label %473, !dbg !3253

455:                                              ; preds = %originalBBpart2
  store i8 0, i8* %27, align 1, !dbg !3254
  br label %473, !dbg !3255

456:                                              ; preds = %originalBBpart2
  %457 = load i32, i32* @x.63
  %458 = load i32, i32* @y.64
  %459 = sub i32 %457, 1
  %460 = mul i32 %457, %459
  %461 = urem i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = icmp slt i32 %458, 10
  %464 = or i1 %462, %463
  br i1 %464, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %456, %originalBB85alteredBB
  call void @abort() #12, !dbg !3256
  %465 = load i32, i32* @x.63
  %466 = load i32, i32* @y.64
  %467 = sub i32 %465, 1
  %468 = mul i32 %465, %467
  %469 = urem i32 %468, 2
  %470 = icmp eq i32 %469, 0
  %471 = icmp slt i32 %466, 10
  %472 = or i1 %470, %471
  br i1 %472, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  unreachable, !dbg !3256

473:                                              ; preds = %455, %originalBBpart283, %315, %originalBBpart235, %181
  store i64 0, i64* %20, align 8, !dbg !3257
  br label %474, !dbg !3259

474:                                              ; preds = %originalBBpart2931, %473
  %475 = load i32, i32* @x.63
  %476 = load i32, i32* @y.64
  %477 = sub i32 %475, 1
  %478 = mul i32 %475, %477
  %479 = urem i32 %478, 2
  %480 = icmp eq i32 %479, 0
  %481 = icmp slt i32 %476, 10
  %482 = or i1 %480, %481
  br i1 %482, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %474, %originalBB89alteredBB
  %483 = load i64, i64* %14, align 8, !dbg !3260
  %484 = icmp eq i64 %483, -1, !dbg !3262
  %485 = load i32, i32* @x.63
  %486 = load i32, i32* @y.64
  %487 = sub i32 %485, 1
  %488 = mul i32 %485, %487
  %489 = urem i32 %488, 2
  %490 = icmp eq i32 %489, 0
  %491 = icmp slt i32 %486, 10
  %492 = or i1 %490, %491
  br i1 %492, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  br i1 %484, label %493, label %501, !dbg !3260

493:                                              ; preds = %originalBBpart291
  %494 = load i8*, i8** %13, align 8, !dbg !3263
  %495 = load i64, i64* %20, align 8, !dbg !3264
  %496 = getelementptr inbounds i8, i8* %494, i64 %495, !dbg !3263
  %497 = load i8, i8* %496, align 1, !dbg !3263
  %498 = sext i8 %497 to i32, !dbg !3263
  %499 = icmp eq i32 %498, 0, !dbg !3265
  %500 = zext i1 %499 to i32, !dbg !3265
  br label %506, !dbg !3260

501:                                              ; preds = %originalBBpart291
  %502 = load i64, i64* %20, align 8, !dbg !3266
  %503 = load i64, i64* %14, align 8, !dbg !3267
  %504 = icmp eq i64 %502, %503, !dbg !3268
  %505 = zext i1 %504 to i32, !dbg !3268
  br label %506, !dbg !3260

506:                                              ; preds = %501, %493
  %507 = phi i32 [ %500, %493 ], [ %505, %501 ], !dbg !3260
  %508 = load i32, i32* @x.63
  %509 = load i32, i32* @y.64
  %510 = sub i32 %508, 1
  %511 = mul i32 %508, %510
  %512 = urem i32 %511, 2
  %513 = icmp eq i32 %512, 0
  %514 = icmp slt i32 %509, 10
  %515 = or i1 %513, %514
  br i1 %515, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %506, %originalBB93alteredBB
  %516 = icmp ne i32 %507, 0, !dbg !3269
  %517 = xor i1 %516, true, !dbg !3269
  %518 = load i32, i32* @x.63
  %519 = load i32, i32* @y.64
  %520 = sub i32 %518, 1
  %521 = mul i32 %518, %520
  %522 = urem i32 %521, 2
  %523 = icmp eq i32 %522, 0
  %524 = icmp slt i32 %519, 10
  %525 = or i1 %523, %524
  br i1 %525, label %originalBBpart296, label %originalBB93alteredBB

originalBBpart296:                                ; preds = %originalBB93
  br i1 %517, label %526, label %3724, !dbg !3270

526:                                              ; preds = %originalBBpart296
  call void @llvm.dbg.declare(metadata i8* %31, metadata !3271, metadata !DIExpression()), !dbg !3273
  call void @llvm.dbg.declare(metadata i8* %32, metadata !3274, metadata !DIExpression()), !dbg !3275
  call void @llvm.dbg.declare(metadata i8* %33, metadata !3276, metadata !DIExpression()), !dbg !3277
  %527 = load i32, i32* @x.63
  %528 = load i32, i32* @y.64
  %529 = sub i32 %527, 1
  %530 = mul i32 %527, %529
  %531 = urem i32 %530, 2
  %532 = icmp eq i32 %531, 0
  %533 = icmp slt i32 %528, 10
  %534 = or i1 %532, %533
  br i1 %534, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %526, %originalBB98alteredBB
  store i8 0, i8* %33, align 1, !dbg !3277
  call void @llvm.dbg.declare(metadata i8* %34, metadata !3278, metadata !DIExpression()), !dbg !3279
  store i8 0, i8* %34, align 1, !dbg !3279
  call void @llvm.dbg.declare(metadata i8* %35, metadata !3280, metadata !DIExpression()), !dbg !3281
  store i8 0, i8* %35, align 1, !dbg !3281
  %535 = load i8, i8* %25, align 1, !dbg !3282
  %536 = trunc i8 %535 to i1, !dbg !3282
  %537 = load i32, i32* @x.63
  %538 = load i32, i32* @y.64
  %539 = sub i32 %537, 1
  %540 = mul i32 %537, %539
  %541 = urem i32 %540, 2
  %542 = icmp eq i32 %541, 0
  %543 = icmp slt i32 %538, 10
  %544 = or i1 %542, %543
  br i1 %544, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br i1 %536, label %545, label %677, !dbg !3284

545:                                              ; preds = %originalBBpart2100
  %546 = load i32, i32* @x.63
  %547 = load i32, i32* @y.64
  %548 = sub i32 %546, 1
  %549 = mul i32 %546, %548
  %550 = urem i32 %549, 2
  %551 = icmp eq i32 %550, 0
  %552 = icmp slt i32 %547, 10
  %553 = or i1 %551, %552
  br i1 %553, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %545, %originalBB102alteredBB
  %554 = load i32, i32* %15, align 4, !dbg !3285
  %555 = icmp ne i32 %554, 2, !dbg !3286
  %556 = load i32, i32* @x.63
  %557 = load i32, i32* @y.64
  %558 = sub i32 %556, 1
  %559 = mul i32 %556, %558
  %560 = urem i32 %559, 2
  %561 = icmp eq i32 %560, 0
  %562 = icmp slt i32 %557, 10
  %563 = or i1 %561, %562
  br i1 %563, label %originalBBpart2104, label %originalBB102alteredBB

originalBBpart2104:                               ; preds = %originalBB102
  br i1 %555, label %564, label %677, !dbg !3287

564:                                              ; preds = %originalBBpart2104
  %565 = load i32, i32* @x.63
  %566 = load i32, i32* @y.64
  %567 = sub i32 %565, 1
  %568 = mul i32 %565, %567
  %569 = urem i32 %568, 2
  %570 = icmp eq i32 %569, 0
  %571 = icmp slt i32 %566, 10
  %572 = or i1 %570, %571
  br i1 %572, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %564, %originalBB106alteredBB
  %573 = load i64, i64* %24, align 8, !dbg !3288
  %574 = icmp ne i64 %573, 0, !dbg !3288
  %575 = load i32, i32* @x.63
  %576 = load i32, i32* @y.64
  %577 = sub i32 %575, 1
  %578 = mul i32 %575, %577
  %579 = urem i32 %578, 2
  %580 = icmp eq i32 %579, 0
  %581 = icmp slt i32 %576, 10
  %582 = or i1 %580, %581
  br i1 %582, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  br i1 %574, label %583, label %677, !dbg !3289

583:                                              ; preds = %originalBBpart2108
  %584 = load i32, i32* @x.63
  %585 = load i32, i32* @y.64
  %586 = sub i32 %584, 1
  %587 = mul i32 %584, %586
  %588 = urem i32 %587, 2
  %589 = icmp eq i32 %588, 0
  %590 = icmp slt i32 %585, 10
  %591 = or i1 %589, %590
  br i1 %591, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %583, %originalBB110alteredBB
  %592 = load i64, i64* %20, align 8, !dbg !3290
  %593 = load i64, i64* %24, align 8, !dbg !3291
  %594 = add i64 %592, %593, !dbg !3292
  %595 = load i64, i64* %14, align 8, !dbg !3293
  %596 = icmp eq i64 %595, -1, !dbg !3294
  %597 = load i32, i32* @x.63
  %598 = load i32, i32* @y.64
  %599 = sub i32 %597, 1
  %600 = mul i32 %597, %599
  %601 = urem i32 %600, 2
  %602 = icmp eq i32 %601, 0
  %603 = icmp slt i32 %598, 10
  %604 = or i1 %602, %603
  br i1 %604, label %originalBBpart2124, label %originalBB110alteredBB

originalBBpart2124:                               ; preds = %originalBB110
  br i1 %596, label %605, label %627, !dbg !3295

605:                                              ; preds = %originalBBpart2124
  %606 = load i64, i64* %24, align 8, !dbg !3296
  %607 = icmp ult i64 1, %606, !dbg !3297
  br i1 %607, label %608, label %627, !dbg !3293

608:                                              ; preds = %605
  %609 = load i32, i32* @x.63
  %610 = load i32, i32* @y.64
  %611 = sub i32 %609, 1
  %612 = mul i32 %609, %611
  %613 = urem i32 %612, 2
  %614 = icmp eq i32 %613, 0
  %615 = icmp slt i32 %610, 10
  %616 = or i1 %614, %615
  br i1 %616, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %608, %originalBB126alteredBB
  %617 = load i8*, i8** %13, align 8, !dbg !3298
  %618 = call i64 @strlen(i8* %617) #13, !dbg !3299
  store i64 %618, i64* %14, align 8, !dbg !3300
  %619 = load i32, i32* @x.63
  %620 = load i32, i32* @y.64
  %621 = sub i32 %619, 1
  %622 = mul i32 %619, %621
  %623 = urem i32 %622, 2
  %624 = icmp eq i32 %623, 0
  %625 = icmp slt i32 %620, 10
  %626 = or i1 %624, %625
  br i1 %626, label %originalBBpart2128, label %originalBB126alteredBB

originalBBpart2128:                               ; preds = %originalBB126
  br label %645, !dbg !3293

627:                                              ; preds = %605, %originalBBpart2124
  %628 = load i32, i32* @x.63
  %629 = load i32, i32* @y.64
  %630 = sub i32 %628, 1
  %631 = mul i32 %628, %630
  %632 = urem i32 %631, 2
  %633 = icmp eq i32 %632, 0
  %634 = icmp slt i32 %629, 10
  %635 = or i1 %633, %634
  br i1 %635, label %originalBB130, label %originalBB130alteredBB

originalBB130:                                    ; preds = %627, %originalBB130alteredBB
  %636 = load i64, i64* %14, align 8, !dbg !3301
  %637 = load i32, i32* @x.63
  %638 = load i32, i32* @y.64
  %639 = sub i32 %637, 1
  %640 = mul i32 %637, %639
  %641 = urem i32 %640, 2
  %642 = icmp eq i32 %641, 0
  %643 = icmp slt i32 %638, 10
  %644 = or i1 %642, %643
  br i1 %644, label %originalBBpart2132, label %originalBB130alteredBB

originalBBpart2132:                               ; preds = %originalBB130
  br label %645, !dbg !3293

645:                                              ; preds = %originalBBpart2132, %originalBBpart2128
  %646 = phi i64 [ %618, %originalBBpart2128 ], [ %636, %originalBBpart2132 ], !dbg !3293
  %647 = icmp ule i64 %594, %646, !dbg !3302
  br i1 %647, label %648, label %677, !dbg !3303

648:                                              ; preds = %645
  %649 = load i32, i32* @x.63
  %650 = load i32, i32* @y.64
  %651 = sub i32 %649, 1
  %652 = mul i32 %649, %651
  %653 = urem i32 %652, 2
  %654 = icmp eq i32 %653, 0
  %655 = icmp slt i32 %650, 10
  %656 = or i1 %654, %655
  br i1 %656, label %originalBB134, label %originalBB134alteredBB

originalBB134:                                    ; preds = %648, %originalBB134alteredBB
  %657 = load i8*, i8** %13, align 8, !dbg !3304
  %658 = load i64, i64* %20, align 8, !dbg !3305
  %659 = getelementptr inbounds i8, i8* %657, i64 %658, !dbg !3306
  %660 = load i8*, i8** %23, align 8, !dbg !3307
  %661 = load i64, i64* %24, align 8, !dbg !3308
  %662 = call i32 @memcmp(i8* %659, i8* %660, i64 %661) #13, !dbg !3309
  %663 = icmp eq i32 %662, 0, !dbg !3310
  %664 = load i32, i32* @x.63
  %665 = load i32, i32* @y.64
  %666 = sub i32 %664, 1
  %667 = mul i32 %664, %666
  %668 = urem i32 %667, 2
  %669 = icmp eq i32 %668, 0
  %670 = icmp slt i32 %665, 10
  %671 = or i1 %669, %670
  br i1 %671, label %originalBBpart2136, label %originalBB134alteredBB

originalBBpart2136:                               ; preds = %originalBB134
  br i1 %663, label %672, label %677, !dbg !3311

672:                                              ; preds = %originalBBpart2136
  %673 = load i8, i8* %27, align 1, !dbg !3312
  %674 = trunc i8 %673 to i1, !dbg !3312
  br i1 %674, label %675, label %676, !dbg !3315

675:                                              ; preds = %672
  br label %3998, !dbg !3316

676:                                              ; preds = %672
  store i8 1, i8* %33, align 1, !dbg !3317
  br label %677, !dbg !3318

677:                                              ; preds = %676, %originalBBpart2136, %645, %originalBBpart2108, %originalBBpart2104, %originalBBpart2100
  %678 = load i8*, i8** %13, align 8, !dbg !3319
  %679 = load i64, i64* %20, align 8, !dbg !3320
  %680 = getelementptr inbounds i8, i8* %678, i64 %679, !dbg !3319
  %681 = load i8, i8* %680, align 1, !dbg !3319
  store i8 %681, i8* %31, align 1, !dbg !3321
  %682 = load i8, i8* %31, align 1, !dbg !3322
  %683 = zext i8 %682 to i32, !dbg !3322
  switch i32 %683, label %2144 [
    i32 0, label %684
    i32 63, label %1205
    i32 7, label %1525
    i32 8, label %1526
    i32 12, label %1527
    i32 10, label %1528
    i32 13, label %1529
    i32 9, label %1546
    i32 11, label %1547
    i32 92, label %1548
    i32 123, label %1742
    i32 125, label %1742
    i32 35, label %1820
    i32 126, label %1820
    i32 32, label %1825
    i32 33, label %1842
    i32 34, label %1842
    i32 36, label %1842
    i32 38, label %1842
    i32 40, label %1842
    i32 41, label %1842
    i32 42, label %1842
    i32 59, label %1842
    i32 60, label %1842
    i32 61, label %1842
    i32 62, label %1842
    i32 91, label %1842
    i32 94, label %1842
    i32 96, label %1842
    i32 124, label %1842
    i32 39, label %1882
    i32 37, label %2143
    i32 43, label %2143
    i32 44, label %2143
    i32 45, label %2143
    i32 46, label %2143
    i32 47, label %2143
    i32 48, label %2143
    i32 49, label %2143
    i32 50, label %2143
    i32 51, label %2143
    i32 52, label %2143
    i32 53, label %2143
    i32 54, label %2143
    i32 55, label %2143
    i32 56, label %2143
    i32 57, label %2143
    i32 58, label %2143
    i32 65, label %2143
    i32 66, label %2143
    i32 67, label %2143
    i32 68, label %2143
    i32 69, label %2143
    i32 70, label %2143
    i32 71, label %2143
    i32 72, label %2143
    i32 73, label %2143
    i32 74, label %2143
    i32 75, label %2143
    i32 76, label %2143
    i32 77, label %2143
    i32 78, label %2143
    i32 79, label %2143
    i32 80, label %2143
    i32 81, label %2143
    i32 82, label %2143
    i32 83, label %2143
    i32 84, label %2143
    i32 85, label %2143
    i32 86, label %2143
    i32 87, label %2143
    i32 88, label %2143
    i32 89, label %2143
    i32 90, label %2143
    i32 93, label %2143
    i32 95, label %2143
    i32 97, label %2143
    i32 98, label %2143
    i32 99, label %2143
    i32 100, label %2143
    i32 101, label %2143
    i32 102, label %2143
    i32 103, label %2143
    i32 104, label %2143
    i32 105, label %2143
    i32 106, label %2143
    i32 107, label %2143
    i32 108, label %2143
    i32 109, label %2143
    i32 110, label %2143
    i32 111, label %2143
    i32 112, label %2143
    i32 113, label %2143
    i32 114, label %2143
    i32 115, label %2143
    i32 116, label %2143
    i32 117, label %2143
    i32 118, label %2143
    i32 119, label %2143
    i32 120, label %2143
    i32 121, label %2143
    i32 122, label %2143
  ], !dbg !3323

684:                                              ; preds = %677
  %685 = load i32, i32* @x.63
  %686 = load i32, i32* @y.64
  %687 = sub i32 %685, 1
  %688 = mul i32 %685, %687
  %689 = urem i32 %688, 2
  %690 = icmp eq i32 %689, 0
  %691 = icmp slt i32 %686, 10
  %692 = or i1 %690, %691
  br i1 %692, label %originalBB138, label %originalBB138alteredBB

originalBB138:                                    ; preds = %684, %originalBB138alteredBB
  %693 = load i8, i8* %25, align 1, !dbg !3324
  %694 = trunc i8 %693 to i1, !dbg !3324
  %695 = load i32, i32* @x.63
  %696 = load i32, i32* @y.64
  %697 = sub i32 %695, 1
  %698 = mul i32 %695, %697
  %699 = urem i32 %698, 2
  %700 = icmp eq i32 %699, 0
  %701 = icmp slt i32 %696, 10
  %702 = or i1 %700, %701
  br i1 %702, label %originalBBpart2140, label %originalBB138alteredBB

originalBBpart2140:                               ; preds = %originalBB138
  br i1 %694, label %703, label %1134, !dbg !3327

703:                                              ; preds = %originalBBpart2140
  %704 = load i32, i32* @x.63
  %705 = load i32, i32* @y.64
  %706 = sub i32 %704, 1
  %707 = mul i32 %704, %706
  %708 = urem i32 %707, 2
  %709 = icmp eq i32 %708, 0
  %710 = icmp slt i32 %705, 10
  %711 = or i1 %709, %710
  br i1 %711, label %originalBB142, label %originalBB142alteredBB

originalBB142:                                    ; preds = %703, %originalBB142alteredBB
  %712 = load i32, i32* @x.63
  %713 = load i32, i32* @y.64
  %714 = sub i32 %712, 1
  %715 = mul i32 %712, %714
  %716 = urem i32 %715, 2
  %717 = icmp eq i32 %716, 0
  %718 = icmp slt i32 %713, 10
  %719 = or i1 %717, %718
  br i1 %719, label %originalBBpart2144, label %originalBB142alteredBB

originalBBpart2144:                               ; preds = %originalBB142
  br label %720, !dbg !3328

720:                                              ; preds = %originalBBpart2144
  %721 = load i8, i8* %27, align 1, !dbg !3330
  %722 = trunc i8 %721 to i1, !dbg !3330
  br i1 %722, label %723, label %740, !dbg !3333

723:                                              ; preds = %720
  %724 = load i32, i32* @x.63
  %725 = load i32, i32* @y.64
  %726 = sub i32 %724, 1
  %727 = mul i32 %724, %726
  %728 = urem i32 %727, 2
  %729 = icmp eq i32 %728, 0
  %730 = icmp slt i32 %725, 10
  %731 = or i1 %729, %730
  br i1 %731, label %originalBB146, label %originalBB146alteredBB

originalBB146:                                    ; preds = %723, %originalBB146alteredBB
  %732 = load i32, i32* @x.63
  %733 = load i32, i32* @y.64
  %734 = sub i32 %732, 1
  %735 = mul i32 %732, %734
  %736 = urem i32 %735, 2
  %737 = icmp eq i32 %736, 0
  %738 = icmp slt i32 %733, 10
  %739 = or i1 %737, %738
  br i1 %739, label %originalBBpart2148, label %originalBB146alteredBB

originalBBpart2148:                               ; preds = %originalBB146
  br label %3998, !dbg !3330

740:                                              ; preds = %720
  store i8 1, i8* %34, align 1, !dbg !3333
  %741 = load i32, i32* %15, align 4, !dbg !3334
  %742 = icmp eq i32 %741, 2, !dbg !3334
  br i1 %742, label %743, label %895, !dbg !3334

743:                                              ; preds = %740
  %744 = load i8, i8* %28, align 1, !dbg !3334
  %745 = trunc i8 %744 to i1, !dbg !3334
  br i1 %745, label %895, label %746, !dbg !3333

746:                                              ; preds = %743
  %747 = load i32, i32* @x.63
  %748 = load i32, i32* @y.64
  %749 = sub i32 %747, 1
  %750 = mul i32 %747, %749
  %751 = urem i32 %750, 2
  %752 = icmp eq i32 %751, 0
  %753 = icmp slt i32 %748, 10
  %754 = or i1 %752, %753
  br i1 %754, label %originalBB150, label %originalBB150alteredBB

originalBB150:                                    ; preds = %746, %originalBB150alteredBB
  %755 = load i32, i32* @x.63
  %756 = load i32, i32* @y.64
  %757 = sub i32 %755, 1
  %758 = mul i32 %755, %757
  %759 = urem i32 %758, 2
  %760 = icmp eq i32 %759, 0
  %761 = icmp slt i32 %756, 10
  %762 = or i1 %760, %761
  br i1 %762, label %originalBBpart2152, label %originalBB150alteredBB

originalBBpart2152:                               ; preds = %originalBB150
  br label %763, !dbg !3336

763:                                              ; preds = %originalBBpart2152
  %764 = load i64, i64* %21, align 8, !dbg !3338
  %765 = load i64, i64* %12, align 8, !dbg !3338
  %766 = icmp ult i64 %764, %765, !dbg !3338
  br i1 %766, label %767, label %771, !dbg !3341

767:                                              ; preds = %763
  %768 = load i8*, i8** %11, align 8, !dbg !3338
  %769 = load i64, i64* %21, align 8, !dbg !3338
  %770 = getelementptr inbounds i8, i8* %768, i64 %769, !dbg !3338
  store i8 39, i8* %770, align 1, !dbg !3338
  br label %771, !dbg !3338

771:                                              ; preds = %767, %763
  %772 = load i32, i32* @x.63
  %773 = load i32, i32* @y.64
  %774 = sub i32 %772, 1
  %775 = mul i32 %772, %774
  %776 = urem i32 %775, 2
  %777 = icmp eq i32 %776, 0
  %778 = icmp slt i32 %773, 10
  %779 = or i1 %777, %778
  br i1 %779, label %originalBB154, label %originalBB154alteredBB

originalBB154:                                    ; preds = %771, %originalBB154alteredBB
  %780 = load i64, i64* %21, align 8, !dbg !3341
  %781 = add i64 %780, 1, !dbg !3341
  store i64 %781, i64* %21, align 8, !dbg !3341
  %782 = load i32, i32* @x.63
  %783 = load i32, i32* @y.64
  %784 = sub i32 %782, 1
  %785 = mul i32 %782, %784
  %786 = urem i32 %785, 2
  %787 = icmp eq i32 %786, 0
  %788 = icmp slt i32 %783, 10
  %789 = or i1 %787, %788
  br i1 %789, label %originalBBpart2164, label %originalBB154alteredBB

originalBBpart2164:                               ; preds = %originalBB154
  br label %790, !dbg !3341

790:                                              ; preds = %originalBBpart2164
  %791 = load i32, i32* @x.63
  %792 = load i32, i32* @y.64
  %793 = sub i32 %791, 1
  %794 = mul i32 %791, %793
  %795 = urem i32 %794, 2
  %796 = icmp eq i32 %795, 0
  %797 = icmp slt i32 %792, 10
  %798 = or i1 %796, %797
  br i1 %798, label %originalBB166, label %originalBB166alteredBB

originalBB166:                                    ; preds = %790, %originalBB166alteredBB
  %799 = load i32, i32* @x.63
  %800 = load i32, i32* @y.64
  %801 = sub i32 %799, 1
  %802 = mul i32 %799, %801
  %803 = urem i32 %802, 2
  %804 = icmp eq i32 %803, 0
  %805 = icmp slt i32 %800, 10
  %806 = or i1 %804, %805
  br i1 %806, label %originalBBpart2168, label %originalBB166alteredBB

originalBBpart2168:                               ; preds = %originalBB166
  br label %807, !dbg !3336

807:                                              ; preds = %originalBBpart2168
  %808 = load i64, i64* %21, align 8, !dbg !3342
  %809 = load i64, i64* %12, align 8, !dbg !3342
  %810 = icmp ult i64 %808, %809, !dbg !3342
  br i1 %810, label %811, label %831, !dbg !3345

811:                                              ; preds = %807
  %812 = load i32, i32* @x.63
  %813 = load i32, i32* @y.64
  %814 = sub i32 %812, 1
  %815 = mul i32 %812, %814
  %816 = urem i32 %815, 2
  %817 = icmp eq i32 %816, 0
  %818 = icmp slt i32 %813, 10
  %819 = or i1 %817, %818
  br i1 %819, label %originalBB170, label %originalBB170alteredBB

originalBB170:                                    ; preds = %811, %originalBB170alteredBB
  %820 = load i8*, i8** %11, align 8, !dbg !3342
  %821 = load i64, i64* %21, align 8, !dbg !3342
  %822 = getelementptr inbounds i8, i8* %820, i64 %821, !dbg !3342
  store i8 36, i8* %822, align 1, !dbg !3342
  %823 = load i32, i32* @x.63
  %824 = load i32, i32* @y.64
  %825 = sub i32 %823, 1
  %826 = mul i32 %823, %825
  %827 = urem i32 %826, 2
  %828 = icmp eq i32 %827, 0
  %829 = icmp slt i32 %824, 10
  %830 = or i1 %828, %829
  br i1 %830, label %originalBBpart2172, label %originalBB170alteredBB

originalBBpart2172:                               ; preds = %originalBB170
  br label %831, !dbg !3342

831:                                              ; preds = %originalBBpart2172, %807
  %832 = load i32, i32* @x.63
  %833 = load i32, i32* @y.64
  %834 = sub i32 %832, 1
  %835 = mul i32 %832, %834
  %836 = urem i32 %835, 2
  %837 = icmp eq i32 %836, 0
  %838 = icmp slt i32 %833, 10
  %839 = or i1 %837, %838
  br i1 %839, label %originalBB174, label %originalBB174alteredBB

originalBB174:                                    ; preds = %831, %originalBB174alteredBB
  %840 = load i64, i64* %21, align 8, !dbg !3345
  %841 = add i64 %840, 1, !dbg !3345
  store i64 %841, i64* %21, align 8, !dbg !3345
  %842 = load i32, i32* @x.63
  %843 = load i32, i32* @y.64
  %844 = sub i32 %842, 1
  %845 = mul i32 %842, %844
  %846 = urem i32 %845, 2
  %847 = icmp eq i32 %846, 0
  %848 = icmp slt i32 %843, 10
  %849 = or i1 %847, %848
  br i1 %849, label %originalBBpart2179, label %originalBB174alteredBB

originalBBpart2179:                               ; preds = %originalBB174
  br label %850, !dbg !3345

850:                                              ; preds = %originalBBpart2179
  br label %851, !dbg !3336

851:                                              ; preds = %850
  %852 = load i64, i64* %21, align 8, !dbg !3346
  %853 = load i64, i64* %12, align 8, !dbg !3346
  %854 = icmp ult i64 %852, %853, !dbg !3346
  br i1 %854, label %855, label %875, !dbg !3349

855:                                              ; preds = %851
  %856 = load i32, i32* @x.63
  %857 = load i32, i32* @y.64
  %858 = sub i32 %856, 1
  %859 = mul i32 %856, %858
  %860 = urem i32 %859, 2
  %861 = icmp eq i32 %860, 0
  %862 = icmp slt i32 %857, 10
  %863 = or i1 %861, %862
  br i1 %863, label %originalBB181, label %originalBB181alteredBB

originalBB181:                                    ; preds = %855, %originalBB181alteredBB
  %864 = load i8*, i8** %11, align 8, !dbg !3346
  %865 = load i64, i64* %21, align 8, !dbg !3346
  %866 = getelementptr inbounds i8, i8* %864, i64 %865, !dbg !3346
  store i8 39, i8* %866, align 1, !dbg !3346
  %867 = load i32, i32* @x.63
  %868 = load i32, i32* @y.64
  %869 = sub i32 %867, 1
  %870 = mul i32 %867, %869
  %871 = urem i32 %870, 2
  %872 = icmp eq i32 %871, 0
  %873 = icmp slt i32 %868, 10
  %874 = or i1 %872, %873
  br i1 %874, label %originalBBpart2183, label %originalBB181alteredBB

originalBBpart2183:                               ; preds = %originalBB181
  br label %875, !dbg !3346

875:                                              ; preds = %originalBBpart2183, %851
  %876 = load i64, i64* %21, align 8, !dbg !3349
  %877 = add i64 %876, 1, !dbg !3349
  store i64 %877, i64* %21, align 8, !dbg !3349
  br label %878, !dbg !3349

878:                                              ; preds = %875
  %879 = load i32, i32* @x.63
  %880 = load i32, i32* @y.64
  %881 = sub i32 %879, 1
  %882 = mul i32 %879, %881
  %883 = urem i32 %882, 2
  %884 = icmp eq i32 %883, 0
  %885 = icmp slt i32 %880, 10
  %886 = or i1 %884, %885
  br i1 %886, label %originalBB185, label %originalBB185alteredBB

originalBB185:                                    ; preds = %878, %originalBB185alteredBB
  store i8 1, i8* %28, align 1, !dbg !3336
  %887 = load i32, i32* @x.63
  %888 = load i32, i32* @y.64
  %889 = sub i32 %887, 1
  %890 = mul i32 %887, %889
  %891 = urem i32 %890, 2
  %892 = icmp eq i32 %891, 0
  %893 = icmp slt i32 %888, 10
  %894 = or i1 %892, %893
  br i1 %894, label %originalBBpart2187, label %originalBB185alteredBB

originalBBpart2187:                               ; preds = %originalBB185
  br label %895, !dbg !3336

895:                                              ; preds = %originalBBpart2187, %743, %740
  %896 = load i32, i32* @x.63
  %897 = load i32, i32* @y.64
  %898 = sub i32 %896, 1
  %899 = mul i32 %896, %898
  %900 = urem i32 %899, 2
  %901 = icmp eq i32 %900, 0
  %902 = icmp slt i32 %897, 10
  %903 = or i1 %901, %902
  br i1 %903, label %originalBB189, label %originalBB189alteredBB

originalBB189:                                    ; preds = %895, %originalBB189alteredBB
  %904 = load i32, i32* @x.63
  %905 = load i32, i32* @y.64
  %906 = sub i32 %904, 1
  %907 = mul i32 %904, %906
  %908 = urem i32 %907, 2
  %909 = icmp eq i32 %908, 0
  %910 = icmp slt i32 %905, 10
  %911 = or i1 %909, %910
  br i1 %911, label %originalBBpart2191, label %originalBB189alteredBB

originalBBpart2191:                               ; preds = %originalBB189
  br label %912, !dbg !3333

912:                                              ; preds = %originalBBpart2191
  %913 = load i64, i64* %21, align 8, !dbg !3350
  %914 = load i64, i64* %12, align 8, !dbg !3350
  %915 = icmp ult i64 %913, %914, !dbg !3350
  br i1 %915, label %916, label %920, !dbg !3353

916:                                              ; preds = %912
  %917 = load i8*, i8** %11, align 8, !dbg !3350
  %918 = load i64, i64* %21, align 8, !dbg !3350
  %919 = getelementptr inbounds i8, i8* %917, i64 %918, !dbg !3350
  store i8 92, i8* %919, align 1, !dbg !3350
  br label %920, !dbg !3350

920:                                              ; preds = %916, %912
  %921 = load i64, i64* %21, align 8, !dbg !3353
  %922 = add i64 %921, 1, !dbg !3353
  store i64 %922, i64* %21, align 8, !dbg !3353
  br label %923, !dbg !3353

923:                                              ; preds = %920
  %924 = load i32, i32* @x.63
  %925 = load i32, i32* @y.64
  %926 = sub i32 %924, 1
  %927 = mul i32 %924, %926
  %928 = urem i32 %927, 2
  %929 = icmp eq i32 %928, 0
  %930 = icmp slt i32 %925, 10
  %931 = or i1 %929, %930
  br i1 %931, label %originalBB193, label %originalBB193alteredBB

originalBB193:                                    ; preds = %923, %originalBB193alteredBB
  %932 = load i32, i32* @x.63
  %933 = load i32, i32* @y.64
  %934 = sub i32 %932, 1
  %935 = mul i32 %932, %934
  %936 = urem i32 %935, 2
  %937 = icmp eq i32 %936, 0
  %938 = icmp slt i32 %933, 10
  %939 = or i1 %937, %938
  br i1 %939, label %originalBBpart2195, label %originalBB193alteredBB

originalBBpart2195:                               ; preds = %originalBB193
  br label %940, !dbg !3333

940:                                              ; preds = %originalBBpart2195
  %941 = load i32, i32* @x.63
  %942 = load i32, i32* @y.64
  %943 = sub i32 %941, 1
  %944 = mul i32 %941, %943
  %945 = urem i32 %944, 2
  %946 = icmp eq i32 %945, 0
  %947 = icmp slt i32 %942, 10
  %948 = or i1 %946, %947
  br i1 %948, label %originalBB197, label %originalBB197alteredBB

originalBB197:                                    ; preds = %940, %originalBB197alteredBB
  %949 = load i32, i32* %15, align 4, !dbg !3354
  %950 = icmp ne i32 %949, 2, !dbg !3356
  %951 = load i32, i32* @x.63
  %952 = load i32, i32* @y.64
  %953 = sub i32 %951, 1
  %954 = mul i32 %951, %953
  %955 = urem i32 %954, 2
  %956 = icmp eq i32 %955, 0
  %957 = icmp slt i32 %952, 10
  %958 = or i1 %956, %957
  br i1 %958, label %originalBBpart2199, label %originalBB197alteredBB

originalBBpart2199:                               ; preds = %originalBB197
  br i1 %950, label %959, label %1117, !dbg !3357

959:                                              ; preds = %originalBBpart2199
  %960 = load i32, i32* @x.63
  %961 = load i32, i32* @y.64
  %962 = sub i32 %960, 1
  %963 = mul i32 %960, %962
  %964 = urem i32 %963, 2
  %965 = icmp eq i32 %964, 0
  %966 = icmp slt i32 %961, 10
  %967 = or i1 %965, %966
  br i1 %967, label %originalBB201, label %originalBB201alteredBB

originalBB201:                                    ; preds = %959, %originalBB201alteredBB
  %968 = load i64, i64* %20, align 8, !dbg !3358
  %969 = add i64 %968, 1, !dbg !3359
  %970 = load i64, i64* %14, align 8, !dbg !3360
  %971 = icmp ult i64 %969, %970, !dbg !3361
  %972 = load i32, i32* @x.63
  %973 = load i32, i32* @y.64
  %974 = sub i32 %972, 1
  %975 = mul i32 %972, %974
  %976 = urem i32 %975, 2
  %977 = icmp eq i32 %976, 0
  %978 = icmp slt i32 %973, 10
  %979 = or i1 %977, %978
  br i1 %979, label %originalBBpart2211, label %originalBB201alteredBB

originalBBpart2211:                               ; preds = %originalBB201
  br i1 %971, label %980, label %1117, !dbg !3362

980:                                              ; preds = %originalBBpart2211
  %981 = load i32, i32* @x.63
  %982 = load i32, i32* @y.64
  %983 = sub i32 %981, 1
  %984 = mul i32 %981, %983
  %985 = urem i32 %984, 2
  %986 = icmp eq i32 %985, 0
  %987 = icmp slt i32 %982, 10
  %988 = or i1 %986, %987
  br i1 %988, label %originalBB213, label %originalBB213alteredBB

originalBB213:                                    ; preds = %980, %originalBB213alteredBB
  %989 = load i8*, i8** %13, align 8, !dbg !3363
  %990 = load i64, i64* %20, align 8, !dbg !3364
  %991 = add i64 %990, 1, !dbg !3365
  %992 = getelementptr inbounds i8, i8* %989, i64 %991, !dbg !3363
  %993 = load i8, i8* %992, align 1, !dbg !3363
  %994 = sext i8 %993 to i32, !dbg !3363
  %995 = icmp sle i32 48, %994, !dbg !3366
  %996 = load i32, i32* @x.63
  %997 = load i32, i32* @y.64
  %998 = sub i32 %996, 1
  %999 = mul i32 %996, %998
  %1000 = urem i32 %999, 2
  %1001 = icmp eq i32 %1000, 0
  %1002 = icmp slt i32 %997, 10
  %1003 = or i1 %1001, %1002
  br i1 %1003, label %originalBBpart2225, label %originalBB213alteredBB

originalBBpart2225:                               ; preds = %originalBB213
  br i1 %995, label %1004, label %1117, !dbg !3367

1004:                                             ; preds = %originalBBpart2225
  %1005 = load i32, i32* @x.63
  %1006 = load i32, i32* @y.64
  %1007 = sub i32 %1005, 1
  %1008 = mul i32 %1005, %1007
  %1009 = urem i32 %1008, 2
  %1010 = icmp eq i32 %1009, 0
  %1011 = icmp slt i32 %1006, 10
  %1012 = or i1 %1010, %1011
  br i1 %1012, label %originalBB227, label %originalBB227alteredBB

originalBB227:                                    ; preds = %1004, %originalBB227alteredBB
  %1013 = load i8*, i8** %13, align 8, !dbg !3368
  %1014 = load i64, i64* %20, align 8, !dbg !3369
  %1015 = add i64 %1014, 1, !dbg !3370
  %1016 = getelementptr inbounds i8, i8* %1013, i64 %1015, !dbg !3368
  %1017 = load i8, i8* %1016, align 1, !dbg !3368
  %1018 = sext i8 %1017 to i32, !dbg !3368
  %1019 = icmp sle i32 %1018, 57, !dbg !3371
  %1020 = load i32, i32* @x.63
  %1021 = load i32, i32* @y.64
  %1022 = sub i32 %1020, 1
  %1023 = mul i32 %1020, %1022
  %1024 = urem i32 %1023, 2
  %1025 = icmp eq i32 %1024, 0
  %1026 = icmp slt i32 %1021, 10
  %1027 = or i1 %1025, %1026
  br i1 %1027, label %originalBBpart2234, label %originalBB227alteredBB

originalBBpart2234:                               ; preds = %originalBB227
  br i1 %1019, label %1028, label %1117, !dbg !3372

1028:                                             ; preds = %originalBBpart2234
  %1029 = load i32, i32* @x.63
  %1030 = load i32, i32* @y.64
  %1031 = sub i32 %1029, 1
  %1032 = mul i32 %1029, %1031
  %1033 = urem i32 %1032, 2
  %1034 = icmp eq i32 %1033, 0
  %1035 = icmp slt i32 %1030, 10
  %1036 = or i1 %1034, %1035
  br i1 %1036, label %originalBB236, label %originalBB236alteredBB

originalBB236:                                    ; preds = %1028, %originalBB236alteredBB
  %1037 = load i32, i32* @x.63
  %1038 = load i32, i32* @y.64
  %1039 = sub i32 %1037, 1
  %1040 = mul i32 %1037, %1039
  %1041 = urem i32 %1040, 2
  %1042 = icmp eq i32 %1041, 0
  %1043 = icmp slt i32 %1038, 10
  %1044 = or i1 %1042, %1043
  br i1 %1044, label %originalBBpart2238, label %originalBB236alteredBB

originalBBpart2238:                               ; preds = %originalBB236
  br label %1045, !dbg !3373

1045:                                             ; preds = %originalBBpart2238
  %1046 = load i32, i32* @x.63
  %1047 = load i32, i32* @y.64
  %1048 = sub i32 %1046, 1
  %1049 = mul i32 %1046, %1048
  %1050 = urem i32 %1049, 2
  %1051 = icmp eq i32 %1050, 0
  %1052 = icmp slt i32 %1047, 10
  %1053 = or i1 %1051, %1052
  br i1 %1053, label %originalBB240, label %originalBB240alteredBB

originalBB240:                                    ; preds = %1045, %originalBB240alteredBB
  %1054 = load i64, i64* %21, align 8, !dbg !3375
  %1055 = load i64, i64* %12, align 8, !dbg !3375
  %1056 = icmp ult i64 %1054, %1055, !dbg !3375
  %1057 = load i32, i32* @x.63
  %1058 = load i32, i32* @y.64
  %1059 = sub i32 %1057, 1
  %1060 = mul i32 %1057, %1059
  %1061 = urem i32 %1060, 2
  %1062 = icmp eq i32 %1061, 0
  %1063 = icmp slt i32 %1058, 10
  %1064 = or i1 %1062, %1063
  br i1 %1064, label %originalBBpart2242, label %originalBB240alteredBB

originalBBpart2242:                               ; preds = %originalBB240
  br i1 %1056, label %1065, label %1069, !dbg !3378

1065:                                             ; preds = %originalBBpart2242
  %1066 = load i8*, i8** %11, align 8, !dbg !3375
  %1067 = load i64, i64* %21, align 8, !dbg !3375
  %1068 = getelementptr inbounds i8, i8* %1066, i64 %1067, !dbg !3375
  store i8 48, i8* %1068, align 1, !dbg !3375
  br label %1069, !dbg !3375

1069:                                             ; preds = %1065, %originalBBpart2242
  %1070 = load i64, i64* %21, align 8, !dbg !3378
  %1071 = add i64 %1070, 1, !dbg !3378
  store i64 %1071, i64* %21, align 8, !dbg !3378
  br label %1072, !dbg !3378

1072:                                             ; preds = %1069
  %1073 = load i32, i32* @x.63
  %1074 = load i32, i32* @y.64
  %1075 = sub i32 %1073, 1
  %1076 = mul i32 %1073, %1075
  %1077 = urem i32 %1076, 2
  %1078 = icmp eq i32 %1077, 0
  %1079 = icmp slt i32 %1074, 10
  %1080 = or i1 %1078, %1079
  br i1 %1080, label %originalBB244, label %originalBB244alteredBB

originalBB244:                                    ; preds = %1072, %originalBB244alteredBB
  %1081 = load i32, i32* @x.63
  %1082 = load i32, i32* @y.64
  %1083 = sub i32 %1081, 1
  %1084 = mul i32 %1081, %1083
  %1085 = urem i32 %1084, 2
  %1086 = icmp eq i32 %1085, 0
  %1087 = icmp slt i32 %1082, 10
  %1088 = or i1 %1086, %1087
  br i1 %1088, label %originalBBpart2246, label %originalBB244alteredBB

originalBBpart2246:                               ; preds = %originalBB244
  br label %1089, !dbg !3379

1089:                                             ; preds = %originalBBpart2246
  %1090 = load i64, i64* %21, align 8, !dbg !3380
  %1091 = load i64, i64* %12, align 8, !dbg !3380
  %1092 = icmp ult i64 %1090, %1091, !dbg !3380
  br i1 %1092, label %1093, label %1097, !dbg !3383

1093:                                             ; preds = %1089
  %1094 = load i8*, i8** %11, align 8, !dbg !3380
  %1095 = load i64, i64* %21, align 8, !dbg !3380
  %1096 = getelementptr inbounds i8, i8* %1094, i64 %1095, !dbg !3380
  store i8 48, i8* %1096, align 1, !dbg !3380
  br label %1097, !dbg !3380

1097:                                             ; preds = %1093, %1089
  %1098 = load i64, i64* %21, align 8, !dbg !3383
  %1099 = add i64 %1098, 1, !dbg !3383
  store i64 %1099, i64* %21, align 8, !dbg !3383
  br label %1100, !dbg !3383

1100:                                             ; preds = %1097
  %1101 = load i32, i32* @x.63
  %1102 = load i32, i32* @y.64
  %1103 = sub i32 %1101, 1
  %1104 = mul i32 %1101, %1103
  %1105 = urem i32 %1104, 2
  %1106 = icmp eq i32 %1105, 0
  %1107 = icmp slt i32 %1102, 10
  %1108 = or i1 %1106, %1107
  br i1 %1108, label %originalBB248, label %originalBB248alteredBB

originalBB248:                                    ; preds = %1100, %originalBB248alteredBB
  %1109 = load i32, i32* @x.63
  %1110 = load i32, i32* @y.64
  %1111 = sub i32 %1109, 1
  %1112 = mul i32 %1109, %1111
  %1113 = urem i32 %1112, 2
  %1114 = icmp eq i32 %1113, 0
  %1115 = icmp slt i32 %1110, 10
  %1116 = or i1 %1114, %1115
  br i1 %1116, label %originalBBpart2250, label %originalBB248alteredBB

originalBBpart2250:                               ; preds = %originalBB248
  br label %1117, !dbg !3384

1117:                                             ; preds = %originalBBpart2250, %originalBBpart2234, %originalBBpart2225, %originalBBpart2211, %originalBBpart2199
  %1118 = load i32, i32* @x.63
  %1119 = load i32, i32* @y.64
  %1120 = sub i32 %1118, 1
  %1121 = mul i32 %1118, %1120
  %1122 = urem i32 %1121, 2
  %1123 = icmp eq i32 %1122, 0
  %1124 = icmp slt i32 %1119, 10
  %1125 = or i1 %1123, %1124
  br i1 %1125, label %originalBB252, label %originalBB252alteredBB

originalBB252:                                    ; preds = %1117, %originalBB252alteredBB
  store i8 48, i8* %31, align 1, !dbg !3385
  %1126 = load i32, i32* @x.63
  %1127 = load i32, i32* @y.64
  %1128 = sub i32 %1126, 1
  %1129 = mul i32 %1126, %1128
  %1130 = urem i32 %1129, 2
  %1131 = icmp eq i32 %1130, 0
  %1132 = icmp slt i32 %1127, 10
  %1133 = or i1 %1131, %1132
  br i1 %1133, label %originalBBpart2254, label %originalBB252alteredBB

originalBBpart2254:                               ; preds = %originalBB252
  br label %1188, !dbg !3386

1134:                                             ; preds = %originalBBpart2140
  %1135 = load i32, i32* @x.63
  %1136 = load i32, i32* @y.64
  %1137 = sub i32 %1135, 1
  %1138 = mul i32 %1135, %1137
  %1139 = urem i32 %1138, 2
  %1140 = icmp eq i32 %1139, 0
  %1141 = icmp slt i32 %1136, 10
  %1142 = or i1 %1140, %1141
  br i1 %1142, label %originalBB256, label %originalBB256alteredBB

originalBB256:                                    ; preds = %1134, %originalBB256alteredBB
  %1143 = load i32, i32* %16, align 4, !dbg !3387
  %1144 = and i32 %1143, 1, !dbg !3389
  %1145 = icmp ne i32 %1144, 0, !dbg !3389
  %1146 = load i32, i32* @x.63
  %1147 = load i32, i32* @y.64
  %1148 = sub i32 %1146, 1
  %1149 = mul i32 %1146, %1148
  %1150 = urem i32 %1149, 2
  %1151 = icmp eq i32 %1150, 0
  %1152 = icmp slt i32 %1147, 10
  %1153 = or i1 %1151, %1152
  br i1 %1153, label %originalBBpart2266, label %originalBB256alteredBB

originalBBpart2266:                               ; preds = %originalBB256
  br i1 %1145, label %1154, label %1171, !dbg !3390

1154:                                             ; preds = %originalBBpart2266
  %1155 = load i32, i32* @x.63
  %1156 = load i32, i32* @y.64
  %1157 = sub i32 %1155, 1
  %1158 = mul i32 %1155, %1157
  %1159 = urem i32 %1158, 2
  %1160 = icmp eq i32 %1159, 0
  %1161 = icmp slt i32 %1156, 10
  %1162 = or i1 %1160, %1161
  br i1 %1162, label %originalBB268, label %originalBB268alteredBB

originalBB268:                                    ; preds = %1154, %originalBB268alteredBB
  %1163 = load i32, i32* @x.63
  %1164 = load i32, i32* @y.64
  %1165 = sub i32 %1163, 1
  %1166 = mul i32 %1163, %1165
  %1167 = urem i32 %1166, 2
  %1168 = icmp eq i32 %1167, 0
  %1169 = icmp slt i32 %1164, 10
  %1170 = or i1 %1168, %1169
  br i1 %1170, label %originalBBpart2270, label %originalBB268alteredBB

originalBBpart2270:                               ; preds = %originalBB268
  br label %3705, !dbg !3391

1171:                                             ; preds = %originalBBpart2266
  %1172 = load i32, i32* @x.63
  %1173 = load i32, i32* @y.64
  %1174 = sub i32 %1172, 1
  %1175 = mul i32 %1172, %1174
  %1176 = urem i32 %1175, 2
  %1177 = icmp eq i32 %1176, 0
  %1178 = icmp slt i32 %1173, 10
  %1179 = or i1 %1177, %1178
  br i1 %1179, label %originalBB272, label %originalBB272alteredBB

originalBB272:                                    ; preds = %1171, %originalBB272alteredBB
  %1180 = load i32, i32* @x.63
  %1181 = load i32, i32* @y.64
  %1182 = sub i32 %1180, 1
  %1183 = mul i32 %1180, %1182
  %1184 = urem i32 %1183, 2
  %1185 = icmp eq i32 %1184, 0
  %1186 = icmp slt i32 %1181, 10
  %1187 = or i1 %1185, %1186
  br i1 %1187, label %originalBBpart2274, label %originalBB272alteredBB

originalBBpart2274:                               ; preds = %originalBB272
  br label %1188

1188:                                             ; preds = %originalBBpart2274, %originalBBpart2254
  %1189 = load i32, i32* @x.63
  %1190 = load i32, i32* @y.64
  %1191 = sub i32 %1189, 1
  %1192 = mul i32 %1189, %1191
  %1193 = urem i32 %1192, 2
  %1194 = icmp eq i32 %1193, 0
  %1195 = icmp slt i32 %1190, 10
  %1196 = or i1 %1194, %1195
  br i1 %1196, label %originalBB276, label %originalBB276alteredBB

originalBB276:                                    ; preds = %1188, %originalBB276alteredBB
  %1197 = load i32, i32* @x.63
  %1198 = load i32, i32* @y.64
  %1199 = sub i32 %1197, 1
  %1200 = mul i32 %1197, %1199
  %1201 = urem i32 %1200, 2
  %1202 = icmp eq i32 %1201, 0
  %1203 = icmp slt i32 %1198, 10
  %1204 = or i1 %1202, %1203
  br i1 %1204, label %originalBBpart2278, label %originalBB276alteredBB

originalBBpart2278:                               ; preds = %originalBB276
  br label %3241, !dbg !3392

1205:                                             ; preds = %677
  %1206 = load i32, i32* @x.63
  %1207 = load i32, i32* @y.64
  %1208 = sub i32 %1206, 1
  %1209 = mul i32 %1206, %1208
  %1210 = urem i32 %1209, 2
  %1211 = icmp eq i32 %1210, 0
  %1212 = icmp slt i32 %1207, 10
  %1213 = or i1 %1211, %1212
  br i1 %1213, label %originalBB280, label %originalBB280alteredBB

originalBB280:                                    ; preds = %1205, %originalBB280alteredBB
  %1214 = load i32, i32* %15, align 4, !dbg !3393
  %1215 = load i32, i32* @x.63
  %1216 = load i32, i32* @y.64
  %1217 = sub i32 %1215, 1
  %1218 = mul i32 %1215, %1217
  %1219 = urem i32 %1218, 2
  %1220 = icmp eq i32 %1219, 0
  %1221 = icmp slt i32 %1216, 10
  %1222 = or i1 %1220, %1221
  br i1 %1222, label %originalBBpart2282, label %originalBB280alteredBB

originalBBpart2282:                               ; preds = %originalBB280
  switch i32 %1214, label %1507 [
    i32 2, label %1223
    i32 5, label %1244
  ], !dbg !3394

1223:                                             ; preds = %originalBBpart2282
  %1224 = load i8, i8* %27, align 1, !dbg !3395
  %1225 = trunc i8 %1224 to i1, !dbg !3395
  br i1 %1225, label %1226, label %1243, !dbg !3398

1226:                                             ; preds = %1223
  %1227 = load i32, i32* @x.63
  %1228 = load i32, i32* @y.64
  %1229 = sub i32 %1227, 1
  %1230 = mul i32 %1227, %1229
  %1231 = urem i32 %1230, 2
  %1232 = icmp eq i32 %1231, 0
  %1233 = icmp slt i32 %1228, 10
  %1234 = or i1 %1232, %1233
  br i1 %1234, label %originalBB284, label %originalBB284alteredBB

originalBB284:                                    ; preds = %1226, %originalBB284alteredBB
  %1235 = load i32, i32* @x.63
  %1236 = load i32, i32* @y.64
  %1237 = sub i32 %1235, 1
  %1238 = mul i32 %1235, %1237
  %1239 = urem i32 %1238, 2
  %1240 = icmp eq i32 %1239, 0
  %1241 = icmp slt i32 %1236, 10
  %1242 = or i1 %1240, %1241
  br i1 %1242, label %originalBBpart2286, label %originalBB284alteredBB

originalBBpart2286:                               ; preds = %originalBB284
  br label %3998, !dbg !3399

1243:                                             ; preds = %1223
  br label %1508, !dbg !3400

1244:                                             ; preds = %originalBBpart2282
  %1245 = load i32, i32* %16, align 4, !dbg !3401
  %1246 = and i32 %1245, 4, !dbg !3403
  %1247 = icmp ne i32 %1246, 0, !dbg !3403
  br i1 %1247, label %1248, label %1506, !dbg !3404

1248:                                             ; preds = %1244
  %1249 = load i32, i32* @x.63
  %1250 = load i32, i32* @y.64
  %1251 = sub i32 %1249, 1
  %1252 = mul i32 %1249, %1251
  %1253 = urem i32 %1252, 2
  %1254 = icmp eq i32 %1253, 0
  %1255 = icmp slt i32 %1250, 10
  %1256 = or i1 %1254, %1255
  br i1 %1256, label %originalBB288, label %originalBB288alteredBB

originalBB288:                                    ; preds = %1248, %originalBB288alteredBB
  %1257 = load i64, i64* %20, align 8, !dbg !3405
  %1258 = add i64 %1257, 2, !dbg !3406
  %1259 = load i64, i64* %14, align 8, !dbg !3407
  %1260 = icmp ult i64 %1258, %1259, !dbg !3408
  %1261 = load i32, i32* @x.63
  %1262 = load i32, i32* @y.64
  %1263 = sub i32 %1261, 1
  %1264 = mul i32 %1261, %1263
  %1265 = urem i32 %1264, 2
  %1266 = icmp eq i32 %1265, 0
  %1267 = icmp slt i32 %1262, 10
  %1268 = or i1 %1266, %1267
  br i1 %1268, label %originalBBpart2294, label %originalBB288alteredBB

originalBBpart2294:                               ; preds = %originalBB288
  br i1 %1260, label %1269, label %1506, !dbg !3409

1269:                                             ; preds = %originalBBpart2294
  %1270 = load i32, i32* @x.63
  %1271 = load i32, i32* @y.64
  %1272 = sub i32 %1270, 1
  %1273 = mul i32 %1270, %1272
  %1274 = urem i32 %1273, 2
  %1275 = icmp eq i32 %1274, 0
  %1276 = icmp slt i32 %1271, 10
  %1277 = or i1 %1275, %1276
  br i1 %1277, label %originalBB296, label %originalBB296alteredBB

originalBB296:                                    ; preds = %1269, %originalBB296alteredBB
  %1278 = load i8*, i8** %13, align 8, !dbg !3410
  %1279 = load i64, i64* %20, align 8, !dbg !3411
  %1280 = add i64 %1279, 1, !dbg !3412
  %1281 = getelementptr inbounds i8, i8* %1278, i64 %1280, !dbg !3410
  %1282 = load i8, i8* %1281, align 1, !dbg !3410
  %1283 = sext i8 %1282 to i32, !dbg !3410
  %1284 = icmp eq i32 %1283, 63, !dbg !3413
  %1285 = load i32, i32* @x.63
  %1286 = load i32, i32* @y.64
  %1287 = sub i32 %1285, 1
  %1288 = mul i32 %1285, %1287
  %1289 = urem i32 %1288, 2
  %1290 = icmp eq i32 %1289, 0
  %1291 = icmp slt i32 %1286, 10
  %1292 = or i1 %1290, %1291
  br i1 %1292, label %originalBBpart2302, label %originalBB296alteredBB

originalBBpart2302:                               ; preds = %originalBB296
  br i1 %1284, label %1293, label %1506, !dbg !3414

1293:                                             ; preds = %originalBBpart2302
  %1294 = load i8*, i8** %13, align 8, !dbg !3415
  %1295 = load i64, i64* %20, align 8, !dbg !3416
  %1296 = add i64 %1295, 2, !dbg !3417
  %1297 = getelementptr inbounds i8, i8* %1294, i64 %1296, !dbg !3415
  %1298 = load i8, i8* %1297, align 1, !dbg !3415
  %1299 = sext i8 %1298 to i32, !dbg !3415
  switch i32 %1299, label %1488 [
    i32 33, label %1300
    i32 39, label %1300
    i32 40, label %1300
    i32 41, label %1300
    i32 45, label %1300
    i32 47, label %1300
    i32 60, label %1300
    i32 61, label %1300
    i32 62, label %1300
  ], !dbg !3418

1300:                                             ; preds = %1293, %1293, %1293, %1293, %1293, %1293, %1293, %1293, %1293
  %1301 = load i32, i32* @x.63
  %1302 = load i32, i32* @y.64
  %1303 = sub i32 %1301, 1
  %1304 = mul i32 %1301, %1303
  %1305 = urem i32 %1304, 2
  %1306 = icmp eq i32 %1305, 0
  %1307 = icmp slt i32 %1302, 10
  %1308 = or i1 %1306, %1307
  br i1 %1308, label %originalBB304, label %originalBB304alteredBB

originalBB304:                                    ; preds = %1300, %originalBB304alteredBB
  %1309 = load i8, i8* %27, align 1, !dbg !3419
  %1310 = trunc i8 %1309 to i1, !dbg !3419
  %1311 = load i32, i32* @x.63
  %1312 = load i32, i32* @y.64
  %1313 = sub i32 %1311, 1
  %1314 = mul i32 %1311, %1313
  %1315 = urem i32 %1314, 2
  %1316 = icmp eq i32 %1315, 0
  %1317 = icmp slt i32 %1312, 10
  %1318 = or i1 %1316, %1317
  br i1 %1318, label %originalBBpart2306, label %originalBB304alteredBB

originalBBpart2306:                               ; preds = %originalBB304
  br i1 %1310, label %1319, label %1336, !dbg !3422

1319:                                             ; preds = %originalBBpart2306
  %1320 = load i32, i32* @x.63
  %1321 = load i32, i32* @y.64
  %1322 = sub i32 %1320, 1
  %1323 = mul i32 %1320, %1322
  %1324 = urem i32 %1323, 2
  %1325 = icmp eq i32 %1324, 0
  %1326 = icmp slt i32 %1321, 10
  %1327 = or i1 %1325, %1326
  br i1 %1327, label %originalBB308, label %originalBB308alteredBB

originalBB308:                                    ; preds = %1319, %originalBB308alteredBB
  %1328 = load i32, i32* @x.63
  %1329 = load i32, i32* @y.64
  %1330 = sub i32 %1328, 1
  %1331 = mul i32 %1328, %1330
  %1332 = urem i32 %1331, 2
  %1333 = icmp eq i32 %1332, 0
  %1334 = icmp slt i32 %1329, 10
  %1335 = or i1 %1333, %1334
  br i1 %1335, label %originalBBpart2310, label %originalBB308alteredBB

originalBBpart2310:                               ; preds = %originalBB308
  br label %3998, !dbg !3423

1336:                                             ; preds = %originalBBpart2306
  %1337 = load i8*, i8** %13, align 8, !dbg !3424
  %1338 = load i64, i64* %20, align 8, !dbg !3425
  %1339 = add i64 %1338, 2, !dbg !3426
  %1340 = getelementptr inbounds i8, i8* %1337, i64 %1339, !dbg !3424
  %1341 = load i8, i8* %1340, align 1, !dbg !3424
  store i8 %1341, i8* %31, align 1, !dbg !3427
  %1342 = load i64, i64* %20, align 8, !dbg !3428
  %1343 = add i64 %1342, 2, !dbg !3428
  store i64 %1343, i64* %20, align 8, !dbg !3428
  br label %1344, !dbg !3429

1344:                                             ; preds = %1336
  %1345 = load i64, i64* %21, align 8, !dbg !3430
  %1346 = load i64, i64* %12, align 8, !dbg !3430
  %1347 = icmp ult i64 %1345, %1346, !dbg !3430
  br i1 %1347, label %1348, label %1352, !dbg !3433

1348:                                             ; preds = %1344
  %1349 = load i8*, i8** %11, align 8, !dbg !3430
  %1350 = load i64, i64* %21, align 8, !dbg !3430
  %1351 = getelementptr inbounds i8, i8* %1349, i64 %1350, !dbg !3430
  store i8 63, i8* %1351, align 1, !dbg !3430
  br label %1352, !dbg !3430

1352:                                             ; preds = %1348, %1344
  %1353 = load i32, i32* @x.63
  %1354 = load i32, i32* @y.64
  %1355 = sub i32 %1353, 1
  %1356 = mul i32 %1353, %1355
  %1357 = urem i32 %1356, 2
  %1358 = icmp eq i32 %1357, 0
  %1359 = icmp slt i32 %1354, 10
  %1360 = or i1 %1358, %1359
  br i1 %1360, label %originalBB312, label %originalBB312alteredBB

originalBB312:                                    ; preds = %1352, %originalBB312alteredBB
  %1361 = load i64, i64* %21, align 8, !dbg !3433
  %1362 = add i64 %1361, 1, !dbg !3433
  store i64 %1362, i64* %21, align 8, !dbg !3433
  %1363 = load i32, i32* @x.63
  %1364 = load i32, i32* @y.64
  %1365 = sub i32 %1363, 1
  %1366 = mul i32 %1363, %1365
  %1367 = urem i32 %1366, 2
  %1368 = icmp eq i32 %1367, 0
  %1369 = icmp slt i32 %1364, 10
  %1370 = or i1 %1368, %1369
  br i1 %1370, label %originalBBpart2315, label %originalBB312alteredBB

originalBBpart2315:                               ; preds = %originalBB312
  br label %1371, !dbg !3433

1371:                                             ; preds = %originalBBpart2315
  %1372 = load i32, i32* @x.63
  %1373 = load i32, i32* @y.64
  %1374 = sub i32 %1372, 1
  %1375 = mul i32 %1372, %1374
  %1376 = urem i32 %1375, 2
  %1377 = icmp eq i32 %1376, 0
  %1378 = icmp slt i32 %1373, 10
  %1379 = or i1 %1377, %1378
  br i1 %1379, label %originalBB317, label %originalBB317alteredBB

originalBB317:                                    ; preds = %1371, %originalBB317alteredBB
  %1380 = load i32, i32* @x.63
  %1381 = load i32, i32* @y.64
  %1382 = sub i32 %1380, 1
  %1383 = mul i32 %1380, %1382
  %1384 = urem i32 %1383, 2
  %1385 = icmp eq i32 %1384, 0
  %1386 = icmp slt i32 %1381, 10
  %1387 = or i1 %1385, %1386
  br i1 %1387, label %originalBBpart2319, label %originalBB317alteredBB

originalBBpart2319:                               ; preds = %originalBB317
  br label %1388, !dbg !3434

1388:                                             ; preds = %originalBBpart2319
  %1389 = load i64, i64* %21, align 8, !dbg !3435
  %1390 = load i64, i64* %12, align 8, !dbg !3435
  %1391 = icmp ult i64 %1389, %1390, !dbg !3435
  br i1 %1391, label %1392, label %1412, !dbg !3438

1392:                                             ; preds = %1388
  %1393 = load i32, i32* @x.63
  %1394 = load i32, i32* @y.64
  %1395 = sub i32 %1393, 1
  %1396 = mul i32 %1393, %1395
  %1397 = urem i32 %1396, 2
  %1398 = icmp eq i32 %1397, 0
  %1399 = icmp slt i32 %1394, 10
  %1400 = or i1 %1398, %1399
  br i1 %1400, label %originalBB321, label %originalBB321alteredBB

originalBB321:                                    ; preds = %1392, %originalBB321alteredBB
  %1401 = load i8*, i8** %11, align 8, !dbg !3435
  %1402 = load i64, i64* %21, align 8, !dbg !3435
  %1403 = getelementptr inbounds i8, i8* %1401, i64 %1402, !dbg !3435
  store i8 34, i8* %1403, align 1, !dbg !3435
  %1404 = load i32, i32* @x.63
  %1405 = load i32, i32* @y.64
  %1406 = sub i32 %1404, 1
  %1407 = mul i32 %1404, %1406
  %1408 = urem i32 %1407, 2
  %1409 = icmp eq i32 %1408, 0
  %1410 = icmp slt i32 %1405, 10
  %1411 = or i1 %1409, %1410
  br i1 %1411, label %originalBBpart2323, label %originalBB321alteredBB

originalBBpart2323:                               ; preds = %originalBB321
  br label %1412, !dbg !3435

1412:                                             ; preds = %originalBBpart2323, %1388
  %1413 = load i64, i64* %21, align 8, !dbg !3438
  %1414 = add i64 %1413, 1, !dbg !3438
  store i64 %1414, i64* %21, align 8, !dbg !3438
  br label %1415, !dbg !3438

1415:                                             ; preds = %1412
  br label %1416, !dbg !3439

1416:                                             ; preds = %1415
  %1417 = load i32, i32* @x.63
  %1418 = load i32, i32* @y.64
  %1419 = sub i32 %1417, 1
  %1420 = mul i32 %1417, %1419
  %1421 = urem i32 %1420, 2
  %1422 = icmp eq i32 %1421, 0
  %1423 = icmp slt i32 %1418, 10
  %1424 = or i1 %1422, %1423
  br i1 %1424, label %originalBB325, label %originalBB325alteredBB

originalBB325:                                    ; preds = %1416, %originalBB325alteredBB
  %1425 = load i64, i64* %21, align 8, !dbg !3440
  %1426 = load i64, i64* %12, align 8, !dbg !3440
  %1427 = icmp ult i64 %1425, %1426, !dbg !3440
  %1428 = load i32, i32* @x.63
  %1429 = load i32, i32* @y.64
  %1430 = sub i32 %1428, 1
  %1431 = mul i32 %1428, %1430
  %1432 = urem i32 %1431, 2
  %1433 = icmp eq i32 %1432, 0
  %1434 = icmp slt i32 %1429, 10
  %1435 = or i1 %1433, %1434
  br i1 %1435, label %originalBBpart2327, label %originalBB325alteredBB

originalBBpart2327:                               ; preds = %originalBB325
  br i1 %1427, label %1436, label %1440, !dbg !3443

1436:                                             ; preds = %originalBBpart2327
  %1437 = load i8*, i8** %11, align 8, !dbg !3440
  %1438 = load i64, i64* %21, align 8, !dbg !3440
  %1439 = getelementptr inbounds i8, i8* %1437, i64 %1438, !dbg !3440
  store i8 34, i8* %1439, align 1, !dbg !3440
  br label %1440, !dbg !3440

1440:                                             ; preds = %1436, %originalBBpart2327
  %1441 = load i64, i64* %21, align 8, !dbg !3443
  %1442 = add i64 %1441, 1, !dbg !3443
  store i64 %1442, i64* %21, align 8, !dbg !3443
  br label %1443, !dbg !3443

1443:                                             ; preds = %1440
  %1444 = load i32, i32* @x.63
  %1445 = load i32, i32* @y.64
  %1446 = sub i32 %1444, 1
  %1447 = mul i32 %1444, %1446
  %1448 = urem i32 %1447, 2
  %1449 = icmp eq i32 %1448, 0
  %1450 = icmp slt i32 %1445, 10
  %1451 = or i1 %1449, %1450
  br i1 %1451, label %originalBB329, label %originalBB329alteredBB

originalBB329:                                    ; preds = %1443, %originalBB329alteredBB
  %1452 = load i32, i32* @x.63
  %1453 = load i32, i32* @y.64
  %1454 = sub i32 %1452, 1
  %1455 = mul i32 %1452, %1454
  %1456 = urem i32 %1455, 2
  %1457 = icmp eq i32 %1456, 0
  %1458 = icmp slt i32 %1453, 10
  %1459 = or i1 %1457, %1458
  br i1 %1459, label %originalBBpart2331, label %originalBB329alteredBB

originalBBpart2331:                               ; preds = %originalBB329
  br label %1460, !dbg !3444

1460:                                             ; preds = %originalBBpart2331
  %1461 = load i32, i32* @x.63
  %1462 = load i32, i32* @y.64
  %1463 = sub i32 %1461, 1
  %1464 = mul i32 %1461, %1463
  %1465 = urem i32 %1464, 2
  %1466 = icmp eq i32 %1465, 0
  %1467 = icmp slt i32 %1462, 10
  %1468 = or i1 %1466, %1467
  br i1 %1468, label %originalBB333, label %originalBB333alteredBB

originalBB333:                                    ; preds = %1460, %originalBB333alteredBB
  %1469 = load i64, i64* %21, align 8, !dbg !3445
  %1470 = load i64, i64* %12, align 8, !dbg !3445
  %1471 = icmp ult i64 %1469, %1470, !dbg !3445
  %1472 = load i32, i32* @x.63
  %1473 = load i32, i32* @y.64
  %1474 = sub i32 %1472, 1
  %1475 = mul i32 %1472, %1474
  %1476 = urem i32 %1475, 2
  %1477 = icmp eq i32 %1476, 0
  %1478 = icmp slt i32 %1473, 10
  %1479 = or i1 %1477, %1478
  br i1 %1479, label %originalBBpart2335, label %originalBB333alteredBB

originalBBpart2335:                               ; preds = %originalBB333
  br i1 %1471, label %1480, label %1484, !dbg !3448

1480:                                             ; preds = %originalBBpart2335
  %1481 = load i8*, i8** %11, align 8, !dbg !3445
  %1482 = load i64, i64* %21, align 8, !dbg !3445
  %1483 = getelementptr inbounds i8, i8* %1481, i64 %1482, !dbg !3445
  store i8 63, i8* %1483, align 1, !dbg !3445
  br label %1484, !dbg !3445

1484:                                             ; preds = %1480, %originalBBpart2335
  %1485 = load i64, i64* %21, align 8, !dbg !3448
  %1486 = add i64 %1485, 1, !dbg !3448
  store i64 %1486, i64* %21, align 8, !dbg !3448
  br label %1487, !dbg !3448

1487:                                             ; preds = %1484
  br label %1489, !dbg !3449

1488:                                             ; preds = %1293
  br label %1489, !dbg !3450

1489:                                             ; preds = %1488, %1487
  %1490 = load i32, i32* @x.63
  %1491 = load i32, i32* @y.64
  %1492 = sub i32 %1490, 1
  %1493 = mul i32 %1490, %1492
  %1494 = urem i32 %1493, 2
  %1495 = icmp eq i32 %1494, 0
  %1496 = icmp slt i32 %1491, 10
  %1497 = or i1 %1495, %1496
  br i1 %1497, label %originalBB337, label %originalBB337alteredBB

originalBB337:                                    ; preds = %1489, %originalBB337alteredBB
  %1498 = load i32, i32* @x.63
  %1499 = load i32, i32* @y.64
  %1500 = sub i32 %1498, 1
  %1501 = mul i32 %1498, %1500
  %1502 = urem i32 %1501, 2
  %1503 = icmp eq i32 %1502, 0
  %1504 = icmp slt i32 %1499, 10
  %1505 = or i1 %1503, %1504
  br i1 %1505, label %originalBBpart2339, label %originalBB337alteredBB

originalBBpart2339:                               ; preds = %originalBB337
  br label %1506, !dbg !3451

1506:                                             ; preds = %originalBBpart2339, %originalBBpart2302, %originalBBpart2294, %1244
  br label %1508, !dbg !3452

1507:                                             ; preds = %originalBBpart2282
  br label %1508, !dbg !3453

1508:                                             ; preds = %1507, %1506, %1243
  %1509 = load i32, i32* @x.63
  %1510 = load i32, i32* @y.64
  %1511 = sub i32 %1509, 1
  %1512 = mul i32 %1509, %1511
  %1513 = urem i32 %1512, 2
  %1514 = icmp eq i32 %1513, 0
  %1515 = icmp slt i32 %1510, 10
  %1516 = or i1 %1514, %1515
  br i1 %1516, label %originalBB341, label %originalBB341alteredBB

originalBB341:                                    ; preds = %1508, %originalBB341alteredBB
  %1517 = load i32, i32* @x.63
  %1518 = load i32, i32* @y.64
  %1519 = sub i32 %1517, 1
  %1520 = mul i32 %1517, %1519
  %1521 = urem i32 %1520, 2
  %1522 = icmp eq i32 %1521, 0
  %1523 = icmp slt i32 %1518, 10
  %1524 = or i1 %1522, %1523
  br i1 %1524, label %originalBBpart2343, label %originalBB341alteredBB

originalBBpart2343:                               ; preds = %originalBB341
  br label %3241, !dbg !3454

1525:                                             ; preds = %677
  store i8 97, i8* %32, align 1, !dbg !3455
  br label %1704, !dbg !3456

1526:                                             ; preds = %677
  store i8 98, i8* %32, align 1, !dbg !3457
  br label %1704, !dbg !3458

1527:                                             ; preds = %677
  store i8 102, i8* %32, align 1, !dbg !3459
  br label %1704, !dbg !3460

1528:                                             ; preds = %677
  store i8 110, i8* %32, align 1, !dbg !3461
  br label %1648, !dbg !3462

1529:                                             ; preds = %677
  %1530 = load i32, i32* @x.63
  %1531 = load i32, i32* @y.64
  %1532 = sub i32 %1530, 1
  %1533 = mul i32 %1530, %1532
  %1534 = urem i32 %1533, 2
  %1535 = icmp eq i32 %1534, 0
  %1536 = icmp slt i32 %1531, 10
  %1537 = or i1 %1535, %1536
  br i1 %1537, label %originalBB345, label %originalBB345alteredBB

originalBB345:                                    ; preds = %1529, %originalBB345alteredBB
  store i8 114, i8* %32, align 1, !dbg !3463
  %1538 = load i32, i32* @x.63
  %1539 = load i32, i32* @y.64
  %1540 = sub i32 %1538, 1
  %1541 = mul i32 %1538, %1540
  %1542 = urem i32 %1541, 2
  %1543 = icmp eq i32 %1542, 0
  %1544 = icmp slt i32 %1539, 10
  %1545 = or i1 %1543, %1544
  br i1 %1545, label %originalBBpart2347, label %originalBB345alteredBB

originalBBpart2347:                               ; preds = %originalBB345
  br label %1648, !dbg !3464

1546:                                             ; preds = %677
  store i8 116, i8* %32, align 1, !dbg !3465
  br label %1648, !dbg !3466

1547:                                             ; preds = %677
  store i8 118, i8* %32, align 1, !dbg !3467
  br label %1704, !dbg !3468

1548:                                             ; preds = %677
  %1549 = load i8, i8* %31, align 1, !dbg !3469
  store i8 %1549, i8* %32, align 1, !dbg !3470
  %1550 = load i32, i32* %15, align 4, !dbg !3471
  %1551 = icmp eq i32 %1550, 2, !dbg !3473
  br i1 %1551, label %1552, label %1589, !dbg !3474

1552:                                             ; preds = %1548
  %1553 = load i32, i32* @x.63
  %1554 = load i32, i32* @y.64
  %1555 = sub i32 %1553, 1
  %1556 = mul i32 %1553, %1555
  %1557 = urem i32 %1556, 2
  %1558 = icmp eq i32 %1557, 0
  %1559 = icmp slt i32 %1554, 10
  %1560 = or i1 %1558, %1559
  br i1 %1560, label %originalBB349, label %originalBB349alteredBB

originalBB349:                                    ; preds = %1552, %originalBB349alteredBB
  %1561 = load i8, i8* %27, align 1, !dbg !3475
  %1562 = trunc i8 %1561 to i1, !dbg !3475
  %1563 = load i32, i32* @x.63
  %1564 = load i32, i32* @y.64
  %1565 = sub i32 %1563, 1
  %1566 = mul i32 %1563, %1565
  %1567 = urem i32 %1566, 2
  %1568 = icmp eq i32 %1567, 0
  %1569 = icmp slt i32 %1564, 10
  %1570 = or i1 %1568, %1569
  br i1 %1570, label %originalBBpart2351, label %originalBB349alteredBB

originalBBpart2351:                               ; preds = %originalBB349
  br i1 %1562, label %1571, label %1588, !dbg !3478

1571:                                             ; preds = %originalBBpart2351
  %1572 = load i32, i32* @x.63
  %1573 = load i32, i32* @y.64
  %1574 = sub i32 %1572, 1
  %1575 = mul i32 %1572, %1574
  %1576 = urem i32 %1575, 2
  %1577 = icmp eq i32 %1576, 0
  %1578 = icmp slt i32 %1573, 10
  %1579 = or i1 %1577, %1578
  br i1 %1579, label %originalBB353, label %originalBB353alteredBB

originalBB353:                                    ; preds = %1571, %originalBB353alteredBB
  %1580 = load i32, i32* @x.63
  %1581 = load i32, i32* @y.64
  %1582 = sub i32 %1580, 1
  %1583 = mul i32 %1580, %1582
  %1584 = urem i32 %1583, 2
  %1585 = icmp eq i32 %1584, 0
  %1586 = icmp slt i32 %1581, 10
  %1587 = or i1 %1585, %1586
  br i1 %1587, label %originalBBpart2355, label %originalBB353alteredBB

originalBBpart2355:                               ; preds = %originalBB353
  br label %3998, !dbg !3479

1588:                                             ; preds = %originalBBpart2351
  br label %3542, !dbg !3480

1589:                                             ; preds = %1548
  %1590 = load i32, i32* @x.63
  %1591 = load i32, i32* @y.64
  %1592 = sub i32 %1590, 1
  %1593 = mul i32 %1590, %1592
  %1594 = urem i32 %1593, 2
  %1595 = icmp eq i32 %1594, 0
  %1596 = icmp slt i32 %1591, 10
  %1597 = or i1 %1595, %1596
  br i1 %1597, label %originalBB357, label %originalBB357alteredBB

originalBB357:                                    ; preds = %1589, %originalBB357alteredBB
  %1598 = load i8, i8* %25, align 1, !dbg !3481
  %1599 = trunc i8 %1598 to i1, !dbg !3481
  %1600 = load i32, i32* @x.63
  %1601 = load i32, i32* @y.64
  %1602 = sub i32 %1600, 1
  %1603 = mul i32 %1600, %1602
  %1604 = urem i32 %1603, 2
  %1605 = icmp eq i32 %1604, 0
  %1606 = icmp slt i32 %1601, 10
  %1607 = or i1 %1605, %1606
  br i1 %1607, label %originalBBpart2359, label %originalBB357alteredBB

originalBBpart2359:                               ; preds = %originalBB357
  br i1 %1599, label %1608, label %1631, !dbg !3483

1608:                                             ; preds = %originalBBpart2359
  %1609 = load i8, i8* %27, align 1, !dbg !3484
  %1610 = trunc i8 %1609 to i1, !dbg !3484
  br i1 %1610, label %1611, label %1631, !dbg !3485

1611:                                             ; preds = %1608
  %1612 = load i32, i32* @x.63
  %1613 = load i32, i32* @y.64
  %1614 = sub i32 %1612, 1
  %1615 = mul i32 %1612, %1614
  %1616 = urem i32 %1615, 2
  %1617 = icmp eq i32 %1616, 0
  %1618 = icmp slt i32 %1613, 10
  %1619 = or i1 %1617, %1618
  br i1 %1619, label %originalBB361, label %originalBB361alteredBB

originalBB361:                                    ; preds = %1611, %originalBB361alteredBB
  %1620 = load i64, i64* %24, align 8, !dbg !3486
  %1621 = icmp ne i64 %1620, 0, !dbg !3486
  %1622 = load i32, i32* @x.63
  %1623 = load i32, i32* @y.64
  %1624 = sub i32 %1622, 1
  %1625 = mul i32 %1622, %1624
  %1626 = urem i32 %1625, 2
  %1627 = icmp eq i32 %1626, 0
  %1628 = icmp slt i32 %1623, 10
  %1629 = or i1 %1627, %1628
  br i1 %1629, label %originalBBpart2363, label %originalBB361alteredBB

originalBBpart2363:                               ; preds = %originalBB361
  br i1 %1621, label %1630, label %1631, !dbg !3487

1630:                                             ; preds = %originalBBpart2363
  br label %3542, !dbg !3488

1631:                                             ; preds = %originalBBpart2363, %1608, %originalBBpart2359
  %1632 = load i32, i32* @x.63
  %1633 = load i32, i32* @y.64
  %1634 = sub i32 %1632, 1
  %1635 = mul i32 %1632, %1634
  %1636 = urem i32 %1635, 2
  %1637 = icmp eq i32 %1636, 0
  %1638 = icmp slt i32 %1633, 10
  %1639 = or i1 %1637, %1638
  br i1 %1639, label %originalBB365, label %originalBB365alteredBB

originalBB365:                                    ; preds = %1631, %originalBB365alteredBB
  %1640 = load i32, i32* @x.63
  %1641 = load i32, i32* @y.64
  %1642 = sub i32 %1640, 1
  %1643 = mul i32 %1640, %1642
  %1644 = urem i32 %1643, 2
  %1645 = icmp eq i32 %1644, 0
  %1646 = icmp slt i32 %1641, 10
  %1647 = or i1 %1645, %1646
  br i1 %1647, label %originalBBpart2367, label %originalBB365alteredBB

originalBBpart2367:                               ; preds = %originalBB365
  br label %1648, !dbg !3486

1648:                                             ; preds = %originalBBpart2367, %1546, %originalBBpart2347, %1528
  call void @llvm.dbg.label(metadata !3489), !dbg !3490
  %1649 = load i32, i32* @x.63
  %1650 = load i32, i32* @y.64
  %1651 = sub i32 %1649, 1
  %1652 = mul i32 %1649, %1651
  %1653 = urem i32 %1652, 2
  %1654 = icmp eq i32 %1653, 0
  %1655 = icmp slt i32 %1650, 10
  %1656 = or i1 %1654, %1655
  br i1 %1656, label %originalBB369, label %originalBB369alteredBB

originalBB369:                                    ; preds = %1648, %originalBB369alteredBB
  %1657 = load i32, i32* %15, align 4, !dbg !3491
  %1658 = icmp eq i32 %1657, 2, !dbg !3493
  %1659 = load i32, i32* @x.63
  %1660 = load i32, i32* @y.64
  %1661 = sub i32 %1659, 1
  %1662 = mul i32 %1659, %1661
  %1663 = urem i32 %1662, 2
  %1664 = icmp eq i32 %1663, 0
  %1665 = icmp slt i32 %1660, 10
  %1666 = or i1 %1664, %1665
  br i1 %1666, label %originalBBpart2371, label %originalBB369alteredBB

originalBBpart2371:                               ; preds = %originalBB369
  br i1 %1658, label %1667, label %1687, !dbg !3494

1667:                                             ; preds = %originalBBpart2371
  %1668 = load i32, i32* @x.63
  %1669 = load i32, i32* @y.64
  %1670 = sub i32 %1668, 1
  %1671 = mul i32 %1668, %1670
  %1672 = urem i32 %1671, 2
  %1673 = icmp eq i32 %1672, 0
  %1674 = icmp slt i32 %1669, 10
  %1675 = or i1 %1673, %1674
  br i1 %1675, label %originalBB373, label %originalBB373alteredBB

originalBB373:                                    ; preds = %1667, %originalBB373alteredBB
  %1676 = load i8, i8* %27, align 1, !dbg !3495
  %1677 = trunc i8 %1676 to i1, !dbg !3495
  %1678 = load i32, i32* @x.63
  %1679 = load i32, i32* @y.64
  %1680 = sub i32 %1678, 1
  %1681 = mul i32 %1678, %1680
  %1682 = urem i32 %1681, 2
  %1683 = icmp eq i32 %1682, 0
  %1684 = icmp slt i32 %1679, 10
  %1685 = or i1 %1683, %1684
  br i1 %1685, label %originalBBpart2375, label %originalBB373alteredBB

originalBBpart2375:                               ; preds = %originalBB373
  br i1 %1677, label %1686, label %1687, !dbg !3496

1686:                                             ; preds = %originalBBpart2375
  br label %3998, !dbg !3497

1687:                                             ; preds = %originalBBpart2375, %originalBBpart2371
  %1688 = load i32, i32* @x.63
  %1689 = load i32, i32* @y.64
  %1690 = sub i32 %1688, 1
  %1691 = mul i32 %1688, %1690
  %1692 = urem i32 %1691, 2
  %1693 = icmp eq i32 %1692, 0
  %1694 = icmp slt i32 %1689, 10
  %1695 = or i1 %1693, %1694
  br i1 %1695, label %originalBB377, label %originalBB377alteredBB

originalBB377:                                    ; preds = %1687, %originalBB377alteredBB
  %1696 = load i32, i32* @x.63
  %1697 = load i32, i32* @y.64
  %1698 = sub i32 %1696, 1
  %1699 = mul i32 %1696, %1698
  %1700 = urem i32 %1699, 2
  %1701 = icmp eq i32 %1700, 0
  %1702 = icmp slt i32 %1697, 10
  %1703 = or i1 %1701, %1702
  br i1 %1703, label %originalBBpart2379, label %originalBB377alteredBB

originalBBpart2379:                               ; preds = %originalBB377
  br label %1704, !dbg !3495

1704:                                             ; preds = %originalBBpart2379, %1547, %1527, %1526, %1525
  call void @llvm.dbg.label(metadata !3498), !dbg !3499
  %1705 = load i32, i32* @x.63
  %1706 = load i32, i32* @y.64
  %1707 = sub i32 %1705, 1
  %1708 = mul i32 %1705, %1707
  %1709 = urem i32 %1708, 2
  %1710 = icmp eq i32 %1709, 0
  %1711 = icmp slt i32 %1706, 10
  %1712 = or i1 %1710, %1711
  br i1 %1712, label %originalBB381, label %originalBB381alteredBB

originalBB381:                                    ; preds = %1704, %originalBB381alteredBB
  %1713 = load i8, i8* %25, align 1, !dbg !3500
  %1714 = trunc i8 %1713 to i1, !dbg !3500
  %1715 = load i32, i32* @x.63
  %1716 = load i32, i32* @y.64
  %1717 = sub i32 %1715, 1
  %1718 = mul i32 %1715, %1717
  %1719 = urem i32 %1718, 2
  %1720 = icmp eq i32 %1719, 0
  %1721 = icmp slt i32 %1716, 10
  %1722 = or i1 %1720, %1721
  br i1 %1722, label %originalBBpart2383, label %originalBB381alteredBB

originalBBpart2383:                               ; preds = %originalBB381
  br i1 %1714, label %1723, label %1725, !dbg !3502

1723:                                             ; preds = %originalBBpart2383
  %1724 = load i8, i8* %32, align 1, !dbg !3503
  store i8 %1724, i8* %31, align 1, !dbg !3505
  br label %3336, !dbg !3506

1725:                                             ; preds = %originalBBpart2383
  %1726 = load i32, i32* @x.63
  %1727 = load i32, i32* @y.64
  %1728 = sub i32 %1726, 1
  %1729 = mul i32 %1726, %1728
  %1730 = urem i32 %1729, 2
  %1731 = icmp eq i32 %1730, 0
  %1732 = icmp slt i32 %1727, 10
  %1733 = or i1 %1731, %1732
  br i1 %1733, label %originalBB385, label %originalBB385alteredBB

originalBB385:                                    ; preds = %1725, %originalBB385alteredBB
  %1734 = load i32, i32* @x.63
  %1735 = load i32, i32* @y.64
  %1736 = sub i32 %1734, 1
  %1737 = mul i32 %1734, %1736
  %1738 = urem i32 %1737, 2
  %1739 = icmp eq i32 %1738, 0
  %1740 = icmp slt i32 %1735, 10
  %1741 = or i1 %1739, %1740
  br i1 %1741, label %originalBBpart2387, label %originalBB385alteredBB

originalBBpart2387:                               ; preds = %originalBB385
  br label %3241, !dbg !3507

1742:                                             ; preds = %677, %677
  %1743 = load i32, i32* @x.63
  %1744 = load i32, i32* @y.64
  %1745 = sub i32 %1743, 1
  %1746 = mul i32 %1743, %1745
  %1747 = urem i32 %1746, 2
  %1748 = icmp eq i32 %1747, 0
  %1749 = icmp slt i32 %1744, 10
  %1750 = or i1 %1748, %1749
  br i1 %1750, label %originalBB389, label %originalBB389alteredBB

originalBB389:                                    ; preds = %1742, %originalBB389alteredBB
  %1751 = load i64, i64* %14, align 8, !dbg !3508
  %1752 = icmp eq i64 %1751, -1, !dbg !3510
  %1753 = load i32, i32* @x.63
  %1754 = load i32, i32* @y.64
  %1755 = sub i32 %1753, 1
  %1756 = mul i32 %1753, %1755
  %1757 = urem i32 %1756, 2
  %1758 = icmp eq i32 %1757, 0
  %1759 = icmp slt i32 %1754, 10
  %1760 = or i1 %1758, %1759
  br i1 %1760, label %originalBBpart2391, label %originalBB389alteredBB

originalBBpart2391:                               ; preds = %originalBB389
  br i1 %1752, label %1761, label %1783, !dbg !3511

1761:                                             ; preds = %originalBBpart2391
  %1762 = load i32, i32* @x.63
  %1763 = load i32, i32* @y.64
  %1764 = sub i32 %1762, 1
  %1765 = mul i32 %1762, %1764
  %1766 = urem i32 %1765, 2
  %1767 = icmp eq i32 %1766, 0
  %1768 = icmp slt i32 %1763, 10
  %1769 = or i1 %1767, %1768
  br i1 %1769, label %originalBB393, label %originalBB393alteredBB

originalBB393:                                    ; preds = %1761, %originalBB393alteredBB
  %1770 = load i8*, i8** %13, align 8, !dbg !3512
  %1771 = getelementptr inbounds i8, i8* %1770, i64 1, !dbg !3512
  %1772 = load i8, i8* %1771, align 1, !dbg !3512
  %1773 = sext i8 %1772 to i32, !dbg !3512
  %1774 = icmp eq i32 %1773, 0, !dbg !3513
  %1775 = load i32, i32* @x.63
  %1776 = load i32, i32* @y.64
  %1777 = sub i32 %1775, 1
  %1778 = mul i32 %1775, %1777
  %1779 = urem i32 %1778, 2
  %1780 = icmp eq i32 %1779, 0
  %1781 = icmp slt i32 %1776, 10
  %1782 = or i1 %1780, %1781
  br i1 %1782, label %originalBBpart2395, label %originalBB393alteredBB

originalBBpart2395:                               ; preds = %originalBB393
  br i1 %1774, label %1803, label %1786, !dbg !3508

1783:                                             ; preds = %originalBBpart2391
  %1784 = load i64, i64* %14, align 8, !dbg !3514
  %1785 = icmp eq i64 %1784, 1, !dbg !3515
  br i1 %1785, label %1803, label %1786, !dbg !3511

1786:                                             ; preds = %1783, %originalBBpart2395
  %1787 = load i32, i32* @x.63
  %1788 = load i32, i32* @y.64
  %1789 = sub i32 %1787, 1
  %1790 = mul i32 %1787, %1789
  %1791 = urem i32 %1790, 2
  %1792 = icmp eq i32 %1791, 0
  %1793 = icmp slt i32 %1788, 10
  %1794 = or i1 %1792, %1793
  br i1 %1794, label %originalBB397, label %originalBB397alteredBB

originalBB397:                                    ; preds = %1786, %originalBB397alteredBB
  %1795 = load i32, i32* @x.63
  %1796 = load i32, i32* @y.64
  %1797 = sub i32 %1795, 1
  %1798 = mul i32 %1795, %1797
  %1799 = urem i32 %1798, 2
  %1800 = icmp eq i32 %1799, 0
  %1801 = icmp slt i32 %1796, 10
  %1802 = or i1 %1800, %1801
  br i1 %1802, label %originalBBpart2399, label %originalBB397alteredBB

originalBBpart2399:                               ; preds = %originalBB397
  br label %3241, !dbg !3516

1803:                                             ; preds = %1783, %originalBBpart2395
  %1804 = load i32, i32* @x.63
  %1805 = load i32, i32* @y.64
  %1806 = sub i32 %1804, 1
  %1807 = mul i32 %1804, %1806
  %1808 = urem i32 %1807, 2
  %1809 = icmp eq i32 %1808, 0
  %1810 = icmp slt i32 %1805, 10
  %1811 = or i1 %1809, %1810
  br i1 %1811, label %originalBB401, label %originalBB401alteredBB

originalBB401:                                    ; preds = %1803, %originalBB401alteredBB
  %1812 = load i32, i32* @x.63
  %1813 = load i32, i32* @y.64
  %1814 = sub i32 %1812, 1
  %1815 = mul i32 %1812, %1814
  %1816 = urem i32 %1815, 2
  %1817 = icmp eq i32 %1816, 0
  %1818 = icmp slt i32 %1813, 10
  %1819 = or i1 %1817, %1818
  br i1 %1819, label %originalBBpart2403, label %originalBB401alteredBB

originalBBpart2403:                               ; preds = %originalBB401
  br label %1820, !dbg !3517

1820:                                             ; preds = %originalBBpart2403, %677, %677
  %1821 = load i64, i64* %20, align 8, !dbg !3518
  %1822 = icmp ne i64 %1821, 0, !dbg !3520
  br i1 %1822, label %1823, label %1824, !dbg !3521

1823:                                             ; preds = %1820
  br label %3241, !dbg !3522

1824:                                             ; preds = %1820
  br label %1825, !dbg !3523

1825:                                             ; preds = %1824, %677
  %1826 = load i32, i32* @x.63
  %1827 = load i32, i32* @y.64
  %1828 = sub i32 %1826, 1
  %1829 = mul i32 %1826, %1828
  %1830 = urem i32 %1829, 2
  %1831 = icmp eq i32 %1830, 0
  %1832 = icmp slt i32 %1827, 10
  %1833 = or i1 %1831, %1832
  br i1 %1833, label %originalBB405, label %originalBB405alteredBB

originalBB405:                                    ; preds = %1825, %originalBB405alteredBB
  store i8 1, i8* %35, align 1, !dbg !3524
  %1834 = load i32, i32* @x.63
  %1835 = load i32, i32* @y.64
  %1836 = sub i32 %1834, 1
  %1837 = mul i32 %1834, %1836
  %1838 = urem i32 %1837, 2
  %1839 = icmp eq i32 %1838, 0
  %1840 = icmp slt i32 %1835, 10
  %1841 = or i1 %1839, %1840
  br i1 %1841, label %originalBBpart2407, label %originalBB405alteredBB

originalBBpart2407:                               ; preds = %originalBB405
  br label %1842, !dbg !3525

1842:                                             ; preds = %originalBBpart2407, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677
  %1843 = load i32, i32* @x.63
  %1844 = load i32, i32* @y.64
  %1845 = sub i32 %1843, 1
  %1846 = mul i32 %1843, %1845
  %1847 = urem i32 %1846, 2
  %1848 = icmp eq i32 %1847, 0
  %1849 = icmp slt i32 %1844, 10
  %1850 = or i1 %1848, %1849
  br i1 %1850, label %originalBB409, label %originalBB409alteredBB

originalBB409:                                    ; preds = %1842, %originalBB409alteredBB
  %1851 = load i32, i32* %15, align 4, !dbg !3526
  %1852 = icmp eq i32 %1851, 2, !dbg !3528
  %1853 = load i32, i32* @x.63
  %1854 = load i32, i32* @y.64
  %1855 = sub i32 %1853, 1
  %1856 = mul i32 %1853, %1855
  %1857 = urem i32 %1856, 2
  %1858 = icmp eq i32 %1857, 0
  %1859 = icmp slt i32 %1854, 10
  %1860 = or i1 %1858, %1859
  br i1 %1860, label %originalBBpart2411, label %originalBB409alteredBB

originalBBpart2411:                               ; preds = %originalBB409
  br i1 %1852, label %1861, label %1881, !dbg !3529

1861:                                             ; preds = %originalBBpart2411
  %1862 = load i32, i32* @x.63
  %1863 = load i32, i32* @y.64
  %1864 = sub i32 %1862, 1
  %1865 = mul i32 %1862, %1864
  %1866 = urem i32 %1865, 2
  %1867 = icmp eq i32 %1866, 0
  %1868 = icmp slt i32 %1863, 10
  %1869 = or i1 %1867, %1868
  br i1 %1869, label %originalBB413, label %originalBB413alteredBB

originalBB413:                                    ; preds = %1861, %originalBB413alteredBB
  %1870 = load i8, i8* %27, align 1, !dbg !3530
  %1871 = trunc i8 %1870 to i1, !dbg !3530
  %1872 = load i32, i32* @x.63
  %1873 = load i32, i32* @y.64
  %1874 = sub i32 %1872, 1
  %1875 = mul i32 %1872, %1874
  %1876 = urem i32 %1875, 2
  %1877 = icmp eq i32 %1876, 0
  %1878 = icmp slt i32 %1873, 10
  %1879 = or i1 %1877, %1878
  br i1 %1879, label %originalBBpart2415, label %originalBB413alteredBB

originalBBpart2415:                               ; preds = %originalBB413
  br i1 %1871, label %1880, label %1881, !dbg !3531

1880:                                             ; preds = %originalBBpart2415
  br label %3998, !dbg !3532

1881:                                             ; preds = %originalBBpart2415, %originalBBpart2411
  br label %3241, !dbg !3533

1882:                                             ; preds = %677
  %1883 = load i32, i32* @x.63
  %1884 = load i32, i32* @y.64
  %1885 = sub i32 %1883, 1
  %1886 = mul i32 %1883, %1885
  %1887 = urem i32 %1886, 2
  %1888 = icmp eq i32 %1887, 0
  %1889 = icmp slt i32 %1884, 10
  %1890 = or i1 %1888, %1889
  br i1 %1890, label %originalBB417, label %originalBB417alteredBB

originalBB417:                                    ; preds = %1882, %originalBB417alteredBB
  store i8 1, i8* %29, align 1, !dbg !3534
  store i8 1, i8* %35, align 1, !dbg !3535
  %1891 = load i32, i32* %15, align 4, !dbg !3536
  %1892 = icmp eq i32 %1891, 2, !dbg !3538
  %1893 = load i32, i32* @x.63
  %1894 = load i32, i32* @y.64
  %1895 = sub i32 %1893, 1
  %1896 = mul i32 %1893, %1895
  %1897 = urem i32 %1896, 2
  %1898 = icmp eq i32 %1897, 0
  %1899 = icmp slt i32 %1894, 10
  %1900 = or i1 %1898, %1899
  br i1 %1900, label %originalBBpart2419, label %originalBB417alteredBB

originalBBpart2419:                               ; preds = %originalBB417
  br i1 %1892, label %1901, label %2126, !dbg !3539

1901:                                             ; preds = %originalBBpart2419
  %1902 = load i32, i32* @x.63
  %1903 = load i32, i32* @y.64
  %1904 = sub i32 %1902, 1
  %1905 = mul i32 %1902, %1904
  %1906 = urem i32 %1905, 2
  %1907 = icmp eq i32 %1906, 0
  %1908 = icmp slt i32 %1903, 10
  %1909 = or i1 %1907, %1908
  br i1 %1909, label %originalBB421, label %originalBB421alteredBB

originalBB421:                                    ; preds = %1901, %originalBB421alteredBB
  %1910 = load i8, i8* %27, align 1, !dbg !3540
  %1911 = trunc i8 %1910 to i1, !dbg !3540
  %1912 = load i32, i32* @x.63
  %1913 = load i32, i32* @y.64
  %1914 = sub i32 %1912, 1
  %1915 = mul i32 %1912, %1914
  %1916 = urem i32 %1915, 2
  %1917 = icmp eq i32 %1916, 0
  %1918 = icmp slt i32 %1913, 10
  %1919 = or i1 %1917, %1918
  br i1 %1919, label %originalBBpart2423, label %originalBB421alteredBB

originalBBpart2423:                               ; preds = %originalBB421
  br i1 %1911, label %1920, label %1921, !dbg !3543

1920:                                             ; preds = %originalBBpart2423
  br label %3998, !dbg !3544

1921:                                             ; preds = %originalBBpart2423
  %1922 = load i32, i32* @x.63
  %1923 = load i32, i32* @y.64
  %1924 = sub i32 %1922, 1
  %1925 = mul i32 %1922, %1924
  %1926 = urem i32 %1925, 2
  %1927 = icmp eq i32 %1926, 0
  %1928 = icmp slt i32 %1923, 10
  %1929 = or i1 %1927, %1928
  br i1 %1929, label %originalBB425, label %originalBB425alteredBB

originalBB425:                                    ; preds = %1921, %originalBB425alteredBB
  %1930 = load i64, i64* %12, align 8, !dbg !3545
  %1931 = icmp ne i64 %1930, 0, !dbg !3545
  %1932 = load i32, i32* @x.63
  %1933 = load i32, i32* @y.64
  %1934 = sub i32 %1932, 1
  %1935 = mul i32 %1932, %1934
  %1936 = urem i32 %1935, 2
  %1937 = icmp eq i32 %1936, 0
  %1938 = icmp slt i32 %1933, 10
  %1939 = or i1 %1937, %1938
  br i1 %1939, label %originalBBpart2427, label %originalBB425alteredBB

originalBBpart2427:                               ; preds = %originalBB425
  br i1 %1931, label %1940, label %1961, !dbg !3547

1940:                                             ; preds = %originalBBpart2427
  %1941 = load i32, i32* @x.63
  %1942 = load i32, i32* @y.64
  %1943 = sub i32 %1941, 1
  %1944 = mul i32 %1941, %1943
  %1945 = urem i32 %1944, 2
  %1946 = icmp eq i32 %1945, 0
  %1947 = icmp slt i32 %1942, 10
  %1948 = or i1 %1946, %1947
  br i1 %1948, label %originalBB429, label %originalBB429alteredBB

originalBB429:                                    ; preds = %1940, %originalBB429alteredBB
  %1949 = load i64, i64* %22, align 8, !dbg !3548
  %1950 = icmp ne i64 %1949, 0, !dbg !3548
  %1951 = load i32, i32* @x.63
  %1952 = load i32, i32* @y.64
  %1953 = sub i32 %1951, 1
  %1954 = mul i32 %1951, %1953
  %1955 = urem i32 %1954, 2
  %1956 = icmp eq i32 %1955, 0
  %1957 = icmp slt i32 %1952, 10
  %1958 = or i1 %1956, %1957
  br i1 %1958, label %originalBBpart2431, label %originalBB429alteredBB

originalBBpart2431:                               ; preds = %originalBB429
  br i1 %1950, label %1961, label %1959, !dbg !3549

1959:                                             ; preds = %originalBBpart2431
  %1960 = load i64, i64* %12, align 8, !dbg !3550
  store i64 %1960, i64* %22, align 8, !dbg !3552
  store i64 0, i64* %12, align 8, !dbg !3553
  br label %1961, !dbg !3554

1961:                                             ; preds = %1959, %originalBBpart2431, %originalBBpart2427
  br label %1962, !dbg !3555

1962:                                             ; preds = %1961
  %1963 = load i32, i32* @x.63
  %1964 = load i32, i32* @y.64
  %1965 = sub i32 %1963, 1
  %1966 = mul i32 %1963, %1965
  %1967 = urem i32 %1966, 2
  %1968 = icmp eq i32 %1967, 0
  %1969 = icmp slt i32 %1964, 10
  %1970 = or i1 %1968, %1969
  br i1 %1970, label %originalBB433, label %originalBB433alteredBB

originalBB433:                                    ; preds = %1962, %originalBB433alteredBB
  %1971 = load i64, i64* %21, align 8, !dbg !3556
  %1972 = load i64, i64* %12, align 8, !dbg !3556
  %1973 = icmp ult i64 %1971, %1972, !dbg !3556
  %1974 = load i32, i32* @x.63
  %1975 = load i32, i32* @y.64
  %1976 = sub i32 %1974, 1
  %1977 = mul i32 %1974, %1976
  %1978 = urem i32 %1977, 2
  %1979 = icmp eq i32 %1978, 0
  %1980 = icmp slt i32 %1975, 10
  %1981 = or i1 %1979, %1980
  br i1 %1981, label %originalBBpart2435, label %originalBB433alteredBB

originalBBpart2435:                               ; preds = %originalBB433
  br i1 %1973, label %1982, label %1986, !dbg !3559

1982:                                             ; preds = %originalBBpart2435
  %1983 = load i8*, i8** %11, align 8, !dbg !3556
  %1984 = load i64, i64* %21, align 8, !dbg !3556
  %1985 = getelementptr inbounds i8, i8* %1983, i64 %1984, !dbg !3556
  store i8 39, i8* %1985, align 1, !dbg !3556
  br label %1986, !dbg !3556

1986:                                             ; preds = %1982, %originalBBpart2435
  %1987 = load i64, i64* %21, align 8, !dbg !3559
  %1988 = add i64 %1987, 1, !dbg !3559
  store i64 %1988, i64* %21, align 8, !dbg !3559
  br label %1989, !dbg !3559

1989:                                             ; preds = %1986
  %1990 = load i32, i32* @x.63
  %1991 = load i32, i32* @y.64
  %1992 = sub i32 %1990, 1
  %1993 = mul i32 %1990, %1992
  %1994 = urem i32 %1993, 2
  %1995 = icmp eq i32 %1994, 0
  %1996 = icmp slt i32 %1991, 10
  %1997 = or i1 %1995, %1996
  br i1 %1997, label %originalBB437, label %originalBB437alteredBB

originalBB437:                                    ; preds = %1989, %originalBB437alteredBB
  %1998 = load i32, i32* @x.63
  %1999 = load i32, i32* @y.64
  %2000 = sub i32 %1998, 1
  %2001 = mul i32 %1998, %2000
  %2002 = urem i32 %2001, 2
  %2003 = icmp eq i32 %2002, 0
  %2004 = icmp slt i32 %1999, 10
  %2005 = or i1 %2003, %2004
  br i1 %2005, label %originalBBpart2439, label %originalBB437alteredBB

originalBBpart2439:                               ; preds = %originalBB437
  br label %2006, !dbg !3560

2006:                                             ; preds = %originalBBpart2439
  %2007 = load i32, i32* @x.63
  %2008 = load i32, i32* @y.64
  %2009 = sub i32 %2007, 1
  %2010 = mul i32 %2007, %2009
  %2011 = urem i32 %2010, 2
  %2012 = icmp eq i32 %2011, 0
  %2013 = icmp slt i32 %2008, 10
  %2014 = or i1 %2012, %2013
  br i1 %2014, label %originalBB441, label %originalBB441alteredBB

originalBB441:                                    ; preds = %2006, %originalBB441alteredBB
  %2015 = load i64, i64* %21, align 8, !dbg !3561
  %2016 = load i64, i64* %12, align 8, !dbg !3561
  %2017 = icmp ult i64 %2015, %2016, !dbg !3561
  %2018 = load i32, i32* @x.63
  %2019 = load i32, i32* @y.64
  %2020 = sub i32 %2018, 1
  %2021 = mul i32 %2018, %2020
  %2022 = urem i32 %2021, 2
  %2023 = icmp eq i32 %2022, 0
  %2024 = icmp slt i32 %2019, 10
  %2025 = or i1 %2023, %2024
  br i1 %2025, label %originalBBpart2443, label %originalBB441alteredBB

originalBBpart2443:                               ; preds = %originalBB441
  br i1 %2017, label %2026, label %2046, !dbg !3564

2026:                                             ; preds = %originalBBpart2443
  %2027 = load i32, i32* @x.63
  %2028 = load i32, i32* @y.64
  %2029 = sub i32 %2027, 1
  %2030 = mul i32 %2027, %2029
  %2031 = urem i32 %2030, 2
  %2032 = icmp eq i32 %2031, 0
  %2033 = icmp slt i32 %2028, 10
  %2034 = or i1 %2032, %2033
  br i1 %2034, label %originalBB445, label %originalBB445alteredBB

originalBB445:                                    ; preds = %2026, %originalBB445alteredBB
  %2035 = load i8*, i8** %11, align 8, !dbg !3561
  %2036 = load i64, i64* %21, align 8, !dbg !3561
  %2037 = getelementptr inbounds i8, i8* %2035, i64 %2036, !dbg !3561
  store i8 92, i8* %2037, align 1, !dbg !3561
  %2038 = load i32, i32* @x.63
  %2039 = load i32, i32* @y.64
  %2040 = sub i32 %2038, 1
  %2041 = mul i32 %2038, %2040
  %2042 = urem i32 %2041, 2
  %2043 = icmp eq i32 %2042, 0
  %2044 = icmp slt i32 %2039, 10
  %2045 = or i1 %2043, %2044
  br i1 %2045, label %originalBBpart2447, label %originalBB445alteredBB

originalBBpart2447:                               ; preds = %originalBB445
  br label %2046, !dbg !3561

2046:                                             ; preds = %originalBBpart2447, %originalBBpart2443
  %2047 = load i32, i32* @x.63
  %2048 = load i32, i32* @y.64
  %2049 = sub i32 %2047, 1
  %2050 = mul i32 %2047, %2049
  %2051 = urem i32 %2050, 2
  %2052 = icmp eq i32 %2051, 0
  %2053 = icmp slt i32 %2048, 10
  %2054 = or i1 %2052, %2053
  br i1 %2054, label %originalBB449, label %originalBB449alteredBB

originalBB449:                                    ; preds = %2046, %originalBB449alteredBB
  %2055 = load i64, i64* %21, align 8, !dbg !3564
  %2056 = add i64 %2055, 1, !dbg !3564
  store i64 %2056, i64* %21, align 8, !dbg !3564
  %2057 = load i32, i32* @x.63
  %2058 = load i32, i32* @y.64
  %2059 = sub i32 %2057, 1
  %2060 = mul i32 %2057, %2059
  %2061 = urem i32 %2060, 2
  %2062 = icmp eq i32 %2061, 0
  %2063 = icmp slt i32 %2058, 10
  %2064 = or i1 %2062, %2063
  br i1 %2064, label %originalBBpart2462, label %originalBB449alteredBB

originalBBpart2462:                               ; preds = %originalBB449
  br label %2065, !dbg !3564

2065:                                             ; preds = %originalBBpart2462
  br label %2066, !dbg !3565

2066:                                             ; preds = %2065
  %2067 = load i32, i32* @x.63
  %2068 = load i32, i32* @y.64
  %2069 = sub i32 %2067, 1
  %2070 = mul i32 %2067, %2069
  %2071 = urem i32 %2070, 2
  %2072 = icmp eq i32 %2071, 0
  %2073 = icmp slt i32 %2068, 10
  %2074 = or i1 %2072, %2073
  br i1 %2074, label %originalBB464, label %originalBB464alteredBB

originalBB464:                                    ; preds = %2066, %originalBB464alteredBB
  %2075 = load i64, i64* %21, align 8, !dbg !3566
  %2076 = load i64, i64* %12, align 8, !dbg !3566
  %2077 = icmp ult i64 %2075, %2076, !dbg !3566
  %2078 = load i32, i32* @x.63
  %2079 = load i32, i32* @y.64
  %2080 = sub i32 %2078, 1
  %2081 = mul i32 %2078, %2080
  %2082 = urem i32 %2081, 2
  %2083 = icmp eq i32 %2082, 0
  %2084 = icmp slt i32 %2079, 10
  %2085 = or i1 %2083, %2084
  br i1 %2085, label %originalBBpart2466, label %originalBB464alteredBB

originalBBpart2466:                               ; preds = %originalBB464
  br i1 %2077, label %2086, label %2090, !dbg !3569

2086:                                             ; preds = %originalBBpart2466
  %2087 = load i8*, i8** %11, align 8, !dbg !3566
  %2088 = load i64, i64* %21, align 8, !dbg !3566
  %2089 = getelementptr inbounds i8, i8* %2087, i64 %2088, !dbg !3566
  store i8 39, i8* %2089, align 1, !dbg !3566
  br label %2090, !dbg !3566

2090:                                             ; preds = %2086, %originalBBpart2466
  %2091 = load i32, i32* @x.63
  %2092 = load i32, i32* @y.64
  %2093 = sub i32 %2091, 1
  %2094 = mul i32 %2091, %2093
  %2095 = urem i32 %2094, 2
  %2096 = icmp eq i32 %2095, 0
  %2097 = icmp slt i32 %2092, 10
  %2098 = or i1 %2096, %2097
  br i1 %2098, label %originalBB468, label %originalBB468alteredBB

originalBB468:                                    ; preds = %2090, %originalBB468alteredBB
  %2099 = load i64, i64* %21, align 8, !dbg !3569
  %2100 = add i64 %2099, 1, !dbg !3569
  store i64 %2100, i64* %21, align 8, !dbg !3569
  %2101 = load i32, i32* @x.63
  %2102 = load i32, i32* @y.64
  %2103 = sub i32 %2101, 1
  %2104 = mul i32 %2101, %2103
  %2105 = urem i32 %2104, 2
  %2106 = icmp eq i32 %2105, 0
  %2107 = icmp slt i32 %2102, 10
  %2108 = or i1 %2106, %2107
  br i1 %2108, label %originalBBpart2473, label %originalBB468alteredBB

originalBBpart2473:                               ; preds = %originalBB468
  br label %2109, !dbg !3569

2109:                                             ; preds = %originalBBpart2473
  %2110 = load i32, i32* @x.63
  %2111 = load i32, i32* @y.64
  %2112 = sub i32 %2110, 1
  %2113 = mul i32 %2110, %2112
  %2114 = urem i32 %2113, 2
  %2115 = icmp eq i32 %2114, 0
  %2116 = icmp slt i32 %2111, 10
  %2117 = or i1 %2115, %2116
  br i1 %2117, label %originalBB475, label %originalBB475alteredBB

originalBB475:                                    ; preds = %2109, %originalBB475alteredBB
  store i8 0, i8* %28, align 1, !dbg !3570
  %2118 = load i32, i32* @x.63
  %2119 = load i32, i32* @y.64
  %2120 = sub i32 %2118, 1
  %2121 = mul i32 %2118, %2120
  %2122 = urem i32 %2121, 2
  %2123 = icmp eq i32 %2122, 0
  %2124 = icmp slt i32 %2119, 10
  %2125 = or i1 %2123, %2124
  br i1 %2125, label %originalBBpart2477, label %originalBB475alteredBB

originalBBpart2477:                               ; preds = %originalBB475
  br label %2126, !dbg !3571

2126:                                             ; preds = %originalBBpart2477, %originalBBpart2419
  %2127 = load i32, i32* @x.63
  %2128 = load i32, i32* @y.64
  %2129 = sub i32 %2127, 1
  %2130 = mul i32 %2127, %2129
  %2131 = urem i32 %2130, 2
  %2132 = icmp eq i32 %2131, 0
  %2133 = icmp slt i32 %2128, 10
  %2134 = or i1 %2132, %2133
  br i1 %2134, label %originalBB479, label %originalBB479alteredBB

originalBB479:                                    ; preds = %2126, %originalBB479alteredBB
  %2135 = load i32, i32* @x.63
  %2136 = load i32, i32* @y.64
  %2137 = sub i32 %2135, 1
  %2138 = mul i32 %2135, %2137
  %2139 = urem i32 %2138, 2
  %2140 = icmp eq i32 %2139, 0
  %2141 = icmp slt i32 %2136, 10
  %2142 = or i1 %2140, %2141
  br i1 %2142, label %originalBBpart2481, label %originalBB479alteredBB

originalBBpart2481:                               ; preds = %originalBB479
  br label %3241, !dbg !3572

2143:                                             ; preds = %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677, %677
  store i8 1, i8* %35, align 1, !dbg !3573
  br label %3241, !dbg !3574

2144:                                             ; preds = %677
  call void @llvm.dbg.declare(metadata i64* %36, metadata !3575, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.declare(metadata i8* %37, metadata !3578, metadata !DIExpression()), !dbg !3579
  %2145 = load i8, i8* %26, align 1, !dbg !3580
  %2146 = trunc i8 %2145 to i1, !dbg !3580
  br i1 %2146, label %2147, label %2159, !dbg !3582

2147:                                             ; preds = %2144
  store i64 1, i64* %36, align 8, !dbg !3583
  %2148 = call i16** @__ctype_b_loc() #15, !dbg !3585
  %2149 = load i16*, i16** %2148, align 8, !dbg !3585
  %2150 = load i8, i8* %31, align 1, !dbg !3585
  %2151 = zext i8 %2150 to i32, !dbg !3585
  %2152 = sext i32 %2151 to i64, !dbg !3585
  %2153 = getelementptr inbounds i16, i16* %2149, i64 %2152, !dbg !3585
  %2154 = load i16, i16* %2153, align 2, !dbg !3585
  %2155 = zext i16 %2154 to i32, !dbg !3585
  %2156 = and i32 %2155, 16384, !dbg !3585
  %2157 = icmp ne i32 %2156, 0, !dbg !3586
  %2158 = zext i1 %2157 to i8, !dbg !3587
  store i8 %2158, i8* %37, align 1, !dbg !3587
  br label %2512, !dbg !3588

2159:                                             ; preds = %2144
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %38, metadata !3589, metadata !DIExpression()), !dbg !3603
  %2160 = bitcast %struct.__mbstate_t* %38 to i8*, !dbg !3604
  call void @llvm.memset.p0i8.i64(i8* align 4 %2160, i8 0, i64 8, i1 false), !dbg !3604
  store i64 0, i64* %36, align 8, !dbg !3605
  store i8 1, i8* %37, align 1, !dbg !3606
  %2161 = load i64, i64* %14, align 8, !dbg !3607
  %2162 = icmp eq i64 %2161, -1, !dbg !3609
  br i1 %2162, label %2163, label %2166, !dbg !3610

2163:                                             ; preds = %2159
  %2164 = load i8*, i8** %13, align 8, !dbg !3611
  %2165 = call i64 @strlen(i8* %2164) #13, !dbg !3612
  store i64 %2165, i64* %14, align 8, !dbg !3613
  br label %2166, !dbg !3614

2166:                                             ; preds = %2163, %2159
  %2167 = load i32, i32* @x.63
  %2168 = load i32, i32* @y.64
  %2169 = sub i32 %2167, 1
  %2170 = mul i32 %2167, %2169
  %2171 = urem i32 %2170, 2
  %2172 = icmp eq i32 %2171, 0
  %2173 = icmp slt i32 %2168, 10
  %2174 = or i1 %2172, %2173
  br i1 %2174, label %originalBB483, label %originalBB483alteredBB

originalBB483:                                    ; preds = %2166, %originalBB483alteredBB
  %2175 = load i32, i32* @x.63
  %2176 = load i32, i32* @y.64
  %2177 = sub i32 %2175, 1
  %2178 = mul i32 %2175, %2177
  %2179 = urem i32 %2178, 2
  %2180 = icmp eq i32 %2179, 0
  %2181 = icmp slt i32 %2176, 10
  %2182 = or i1 %2180, %2181
  br i1 %2182, label %originalBBpart2485, label %originalBB483alteredBB

originalBBpart2485:                               ; preds = %originalBB483
  br label %2183, !dbg !3615

2183:                                             ; preds = %2507, %originalBBpart2485
  call void @llvm.dbg.declare(metadata i32* %39, metadata !3616, metadata !DIExpression()), !dbg !3619
  call void @llvm.dbg.declare(metadata i64* %40, metadata !3620, metadata !DIExpression()), !dbg !3621
  %2184 = load i8*, i8** %13, align 8, !dbg !3622
  %2185 = load i64, i64* %20, align 8, !dbg !3623
  %2186 = load i64, i64* %36, align 8, !dbg !3624
  %2187 = add i64 %2185, %2186, !dbg !3625
  %2188 = getelementptr inbounds i8, i8* %2184, i64 %2187, !dbg !3622
  %2189 = load i64, i64* %14, align 8, !dbg !3626
  %2190 = load i64, i64* %20, align 8, !dbg !3627
  %2191 = load i64, i64* %36, align 8, !dbg !3628
  %2192 = add i64 %2190, %2191, !dbg !3629
  %2193 = sub i64 %2189, %2192, !dbg !3630
  %2194 = call i64 @rpl_mbrtowc(i32* %39, i8* %2188, i64 %2193, %struct.__mbstate_t* %38), !dbg !3631
  store i64 %2194, i64* %40, align 8, !dbg !3621
  %2195 = load i64, i64* %40, align 8, !dbg !3632
  %2196 = icmp eq i64 %2195, 0, !dbg !3634
  br i1 %2196, label %2197, label %2214, !dbg !3635

2197:                                             ; preds = %2183
  %2198 = load i32, i32* @x.63
  %2199 = load i32, i32* @y.64
  %2200 = sub i32 %2198, 1
  %2201 = mul i32 %2198, %2200
  %2202 = urem i32 %2201, 2
  %2203 = icmp eq i32 %2202, 0
  %2204 = icmp slt i32 %2199, 10
  %2205 = or i1 %2203, %2204
  br i1 %2205, label %originalBB487, label %originalBB487alteredBB

originalBB487:                                    ; preds = %2197, %originalBB487alteredBB
  %2206 = load i32, i32* @x.63
  %2207 = load i32, i32* @y.64
  %2208 = sub i32 %2206, 1
  %2209 = mul i32 %2206, %2208
  %2210 = urem i32 %2209, 2
  %2211 = icmp eq i32 %2210, 0
  %2212 = icmp slt i32 %2207, 10
  %2213 = or i1 %2211, %2212
  br i1 %2213, label %originalBBpart2489, label %originalBB487alteredBB

originalBBpart2489:                               ; preds = %originalBB487
  br label %2511, !dbg !3636

2214:                                             ; preds = %2183
  %2215 = load i32, i32* @x.63
  %2216 = load i32, i32* @y.64
  %2217 = sub i32 %2215, 1
  %2218 = mul i32 %2215, %2217
  %2219 = urem i32 %2218, 2
  %2220 = icmp eq i32 %2219, 0
  %2221 = icmp slt i32 %2216, 10
  %2222 = or i1 %2220, %2221
  br i1 %2222, label %originalBB491, label %originalBB491alteredBB

originalBB491:                                    ; preds = %2214, %originalBB491alteredBB
  %2223 = load i64, i64* %40, align 8, !dbg !3637
  %2224 = icmp eq i64 %2223, -1, !dbg !3639
  %2225 = load i32, i32* @x.63
  %2226 = load i32, i32* @y.64
  %2227 = sub i32 %2225, 1
  %2228 = mul i32 %2225, %2227
  %2229 = urem i32 %2228, 2
  %2230 = icmp eq i32 %2229, 0
  %2231 = icmp slt i32 %2226, 10
  %2232 = or i1 %2230, %2231
  br i1 %2232, label %originalBBpart2493, label %originalBB491alteredBB

originalBBpart2493:                               ; preds = %originalBB491
  br i1 %2224, label %2233, label %2250, !dbg !3640

2233:                                             ; preds = %originalBBpart2493
  %2234 = load i32, i32* @x.63
  %2235 = load i32, i32* @y.64
  %2236 = sub i32 %2234, 1
  %2237 = mul i32 %2234, %2236
  %2238 = urem i32 %2237, 2
  %2239 = icmp eq i32 %2238, 0
  %2240 = icmp slt i32 %2235, 10
  %2241 = or i1 %2239, %2240
  br i1 %2241, label %originalBB495, label %originalBB495alteredBB

originalBB495:                                    ; preds = %2233, %originalBB495alteredBB
  store i8 0, i8* %37, align 1, !dbg !3641
  %2242 = load i32, i32* @x.63
  %2243 = load i32, i32* @y.64
  %2244 = sub i32 %2242, 1
  %2245 = mul i32 %2242, %2244
  %2246 = urem i32 %2245, 2
  %2247 = icmp eq i32 %2246, 0
  %2248 = icmp slt i32 %2243, 10
  %2249 = or i1 %2247, %2248
  br i1 %2249, label %originalBBpart2497, label %originalBB495alteredBB

originalBBpart2497:                               ; preds = %originalBB495
  br label %2511, !dbg !3643

2250:                                             ; preds = %originalBBpart2493
  %2251 = load i32, i32* @x.63
  %2252 = load i32, i32* @y.64
  %2253 = sub i32 %2251, 1
  %2254 = mul i32 %2251, %2253
  %2255 = urem i32 %2254, 2
  %2256 = icmp eq i32 %2255, 0
  %2257 = icmp slt i32 %2252, 10
  %2258 = or i1 %2256, %2257
  br i1 %2258, label %originalBB499, label %originalBB499alteredBB

originalBB499:                                    ; preds = %2250, %originalBB499alteredBB
  %2259 = load i64, i64* %40, align 8, !dbg !3644
  %2260 = icmp eq i64 %2259, -2, !dbg !3646
  %2261 = load i32, i32* @x.63
  %2262 = load i32, i32* @y.64
  %2263 = sub i32 %2261, 1
  %2264 = mul i32 %2261, %2263
  %2265 = urem i32 %2264, 2
  %2266 = icmp eq i32 %2265, 0
  %2267 = icmp slt i32 %2262, 10
  %2268 = or i1 %2266, %2267
  br i1 %2268, label %originalBBpart2501, label %originalBB499alteredBB

originalBBpart2501:                               ; preds = %originalBB499
  br i1 %2260, label %2269, label %2371, !dbg !3647

2269:                                             ; preds = %originalBBpart2501
  store i8 0, i8* %37, align 1, !dbg !3648
  br label %2270, !dbg !3650

2270:                                             ; preds = %originalBBpart2545, %2269
  %2271 = load i32, i32* @x.63
  %2272 = load i32, i32* @y.64
  %2273 = sub i32 %2271, 1
  %2274 = mul i32 %2271, %2273
  %2275 = urem i32 %2274, 2
  %2276 = icmp eq i32 %2275, 0
  %2277 = icmp slt i32 %2272, 10
  %2278 = or i1 %2276, %2277
  br i1 %2278, label %originalBB503, label %originalBB503alteredBB

originalBB503:                                    ; preds = %2270, %originalBB503alteredBB
  %2279 = load i64, i64* %20, align 8, !dbg !3651
  %2280 = load i64, i64* %36, align 8, !dbg !3652
  %2281 = add i64 %2279, %2280, !dbg !3653
  %2282 = load i64, i64* %14, align 8, !dbg !3654
  %2283 = icmp ult i64 %2281, %2282, !dbg !3655
  %2284 = load i32, i32* @x.63
  %2285 = load i32, i32* @y.64
  %2286 = sub i32 %2284, 1
  %2287 = mul i32 %2284, %2286
  %2288 = urem i32 %2287, 2
  %2289 = icmp eq i32 %2288, 0
  %2290 = icmp slt i32 %2285, 10
  %2291 = or i1 %2289, %2290
  br i1 %2291, label %originalBBpart2514, label %originalBB503alteredBB

originalBBpart2514:                               ; preds = %originalBB503
  br i1 %2283, label %2292, label %2317, !dbg !3656

2292:                                             ; preds = %originalBBpart2514
  %2293 = load i32, i32* @x.63
  %2294 = load i32, i32* @y.64
  %2295 = sub i32 %2293, 1
  %2296 = mul i32 %2293, %2295
  %2297 = urem i32 %2296, 2
  %2298 = icmp eq i32 %2297, 0
  %2299 = icmp slt i32 %2294, 10
  %2300 = or i1 %2298, %2299
  br i1 %2300, label %originalBB516, label %originalBB516alteredBB

originalBB516:                                    ; preds = %2292, %originalBB516alteredBB
  %2301 = load i8*, i8** %13, align 8, !dbg !3657
  %2302 = load i64, i64* %20, align 8, !dbg !3658
  %2303 = load i64, i64* %36, align 8, !dbg !3659
  %2304 = add i64 %2302, %2303, !dbg !3660
  %2305 = getelementptr inbounds i8, i8* %2301, i64 %2304, !dbg !3657
  %2306 = load i8, i8* %2305, align 1, !dbg !3657
  %2307 = sext i8 %2306 to i32, !dbg !3657
  %2308 = icmp ne i32 %2307, 0, !dbg !3656
  %2309 = load i32, i32* @x.63
  %2310 = load i32, i32* @y.64
  %2311 = sub i32 %2309, 1
  %2312 = mul i32 %2309, %2311
  %2313 = urem i32 %2312, 2
  %2314 = icmp eq i32 %2313, 0
  %2315 = icmp slt i32 %2310, 10
  %2316 = or i1 %2314, %2315
  br i1 %2316, label %originalBBpart2528, label %originalBB516alteredBB

originalBBpart2528:                               ; preds = %originalBB516
  br label %2317

2317:                                             ; preds = %originalBBpart2528, %originalBBpart2514
  %2318 = phi i1 [ false, %originalBBpart2514 ], [ %2308, %originalBBpart2528 ], !dbg !3661
  %2319 = load i32, i32* @x.63
  %2320 = load i32, i32* @y.64
  %2321 = sub i32 %2319, 1
  %2322 = mul i32 %2319, %2321
  %2323 = urem i32 %2322, 2
  %2324 = icmp eq i32 %2323, 0
  %2325 = icmp slt i32 %2320, 10
  %2326 = or i1 %2324, %2325
  br i1 %2326, label %originalBB530, label %originalBB530alteredBB

originalBB530:                                    ; preds = %2317, %originalBB530alteredBB
  %2327 = load i32, i32* @x.63
  %2328 = load i32, i32* @y.64
  %2329 = sub i32 %2327, 1
  %2330 = mul i32 %2327, %2329
  %2331 = urem i32 %2330, 2
  %2332 = icmp eq i32 %2331, 0
  %2333 = icmp slt i32 %2328, 10
  %2334 = or i1 %2332, %2333
  br i1 %2334, label %originalBBpart2532, label %originalBB530alteredBB

originalBBpart2532:                               ; preds = %originalBB530
  br i1 %2318, label %2335, label %2354, !dbg !3650

2335:                                             ; preds = %originalBBpart2532
  %2336 = load i32, i32* @x.63
  %2337 = load i32, i32* @y.64
  %2338 = sub i32 %2336, 1
  %2339 = mul i32 %2336, %2338
  %2340 = urem i32 %2339, 2
  %2341 = icmp eq i32 %2340, 0
  %2342 = icmp slt i32 %2337, 10
  %2343 = or i1 %2341, %2342
  br i1 %2343, label %originalBB534, label %originalBB534alteredBB

originalBB534:                                    ; preds = %2335, %originalBB534alteredBB
  %2344 = load i64, i64* %36, align 8, !dbg !3662
  %2345 = add i64 %2344, 1, !dbg !3662
  store i64 %2345, i64* %36, align 8, !dbg !3662
  %2346 = load i32, i32* @x.63
  %2347 = load i32, i32* @y.64
  %2348 = sub i32 %2346, 1
  %2349 = mul i32 %2346, %2348
  %2350 = urem i32 %2349, 2
  %2351 = icmp eq i32 %2350, 0
  %2352 = icmp slt i32 %2347, 10
  %2353 = or i1 %2351, %2352
  br i1 %2353, label %originalBBpart2545, label %originalBB534alteredBB

originalBBpart2545:                               ; preds = %originalBB534
  br label %2270, !dbg !3650, !llvm.loop !3663

2354:                                             ; preds = %originalBBpart2532
  %2355 = load i32, i32* @x.63
  %2356 = load i32, i32* @y.64
  %2357 = sub i32 %2355, 1
  %2358 = mul i32 %2355, %2357
  %2359 = urem i32 %2358, 2
  %2360 = icmp eq i32 %2359, 0
  %2361 = icmp slt i32 %2356, 10
  %2362 = or i1 %2360, %2361
  br i1 %2362, label %originalBB547, label %originalBB547alteredBB

originalBB547:                                    ; preds = %2354, %originalBB547alteredBB
  %2363 = load i32, i32* @x.63
  %2364 = load i32, i32* @y.64
  %2365 = sub i32 %2363, 1
  %2366 = mul i32 %2363, %2365
  %2367 = urem i32 %2366, 2
  %2368 = icmp eq i32 %2367, 0
  %2369 = icmp slt i32 %2364, 10
  %2370 = or i1 %2368, %2369
  br i1 %2370, label %originalBBpart2549, label %originalBB547alteredBB

originalBBpart2549:                               ; preds = %originalBB547
  br label %2511, !dbg !3664

2371:                                             ; preds = %originalBBpart2501
  %2372 = load i8, i8* %27, align 1, !dbg !3665
  %2373 = trunc i8 %2372 to i1, !dbg !3665
  br i1 %2373, label %2374, label %2463, !dbg !3668

2374:                                             ; preds = %2371
  %2375 = load i32, i32* @x.63
  %2376 = load i32, i32* @y.64
  %2377 = sub i32 %2375, 1
  %2378 = mul i32 %2375, %2377
  %2379 = urem i32 %2378, 2
  %2380 = icmp eq i32 %2379, 0
  %2381 = icmp slt i32 %2376, 10
  %2382 = or i1 %2380, %2381
  br i1 %2382, label %originalBB551, label %originalBB551alteredBB

originalBB551:                                    ; preds = %2374, %originalBB551alteredBB
  %2383 = load i32, i32* %15, align 4, !dbg !3669
  %2384 = icmp eq i32 %2383, 2, !dbg !3670
  %2385 = load i32, i32* @x.63
  %2386 = load i32, i32* @y.64
  %2387 = sub i32 %2385, 1
  %2388 = mul i32 %2385, %2387
  %2389 = urem i32 %2388, 2
  %2390 = icmp eq i32 %2389, 0
  %2391 = icmp slt i32 %2386, 10
  %2392 = or i1 %2390, %2391
  br i1 %2392, label %originalBBpart2553, label %originalBB551alteredBB

originalBBpart2553:                               ; preds = %originalBB551
  br i1 %2384, label %2393, label %2463, !dbg !3671

2393:                                             ; preds = %originalBBpart2553
  call void @llvm.dbg.declare(metadata i64* %41, metadata !3672, metadata !DIExpression()), !dbg !3674
  store i64 1, i64* %41, align 8, !dbg !3675
  br label %2394, !dbg !3677

2394:                                             ; preds = %originalBBpart2569, %2393
  %2395 = load i64, i64* %41, align 8, !dbg !3678
  %2396 = load i64, i64* %40, align 8, !dbg !3680
  %2397 = icmp ult i64 %2395, %2396, !dbg !3681
  br i1 %2397, label %2398, label %2446, !dbg !3682

2398:                                             ; preds = %2394
  %2399 = load i8*, i8** %13, align 8, !dbg !3683
  %2400 = load i64, i64* %20, align 8, !dbg !3684
  %2401 = load i64, i64* %36, align 8, !dbg !3685
  %2402 = add i64 %2400, %2401, !dbg !3686
  %2403 = load i64, i64* %41, align 8, !dbg !3687
  %2404 = add i64 %2402, %2403, !dbg !3688
  %2405 = getelementptr inbounds i8, i8* %2399, i64 %2404, !dbg !3683
  %2406 = load i8, i8* %2405, align 1, !dbg !3683
  %2407 = sext i8 %2406 to i32, !dbg !3683
  switch i32 %2407, label %2425 [
    i32 91, label %2408
    i32 92, label %2408
    i32 94, label %2408
    i32 96, label %2408
    i32 124, label %2408
  ], !dbg !3689

2408:                                             ; preds = %2398, %2398, %2398, %2398, %2398
  %2409 = load i32, i32* @x.63
  %2410 = load i32, i32* @y.64
  %2411 = sub i32 %2409, 1
  %2412 = mul i32 %2409, %2411
  %2413 = urem i32 %2412, 2
  %2414 = icmp eq i32 %2413, 0
  %2415 = icmp slt i32 %2410, 10
  %2416 = or i1 %2414, %2415
  br i1 %2416, label %originalBB555, label %originalBB555alteredBB

originalBB555:                                    ; preds = %2408, %originalBB555alteredBB
  %2417 = load i32, i32* @x.63
  %2418 = load i32, i32* @y.64
  %2419 = sub i32 %2417, 1
  %2420 = mul i32 %2417, %2419
  %2421 = urem i32 %2420, 2
  %2422 = icmp eq i32 %2421, 0
  %2423 = icmp slt i32 %2418, 10
  %2424 = or i1 %2422, %2423
  br i1 %2424, label %originalBBpart2557, label %originalBB555alteredBB

originalBBpart2557:                               ; preds = %originalBB555
  br label %3998, !dbg !3690

2425:                                             ; preds = %2398
  br label %2426, !dbg !3692

2426:                                             ; preds = %2425
  br label %2427, !dbg !3693

2427:                                             ; preds = %2426
  %2428 = load i32, i32* @x.63
  %2429 = load i32, i32* @y.64
  %2430 = sub i32 %2428, 1
  %2431 = mul i32 %2428, %2430
  %2432 = urem i32 %2431, 2
  %2433 = icmp eq i32 %2432, 0
  %2434 = icmp slt i32 %2429, 10
  %2435 = or i1 %2433, %2434
  br i1 %2435, label %originalBB559, label %originalBB559alteredBB

originalBB559:                                    ; preds = %2427, %originalBB559alteredBB
  %2436 = load i64, i64* %41, align 8, !dbg !3694
  %2437 = add i64 %2436, 1, !dbg !3694
  store i64 %2437, i64* %41, align 8, !dbg !3694
  %2438 = load i32, i32* @x.63
  %2439 = load i32, i32* @y.64
  %2440 = sub i32 %2438, 1
  %2441 = mul i32 %2438, %2440
  %2442 = urem i32 %2441, 2
  %2443 = icmp eq i32 %2442, 0
  %2444 = icmp slt i32 %2439, 10
  %2445 = or i1 %2443, %2444
  br i1 %2445, label %originalBBpart2569, label %originalBB559alteredBB

originalBBpart2569:                               ; preds = %originalBB559
  br label %2394, !dbg !3695, !llvm.loop !3696

2446:                                             ; preds = %2394
  %2447 = load i32, i32* @x.63
  %2448 = load i32, i32* @y.64
  %2449 = sub i32 %2447, 1
  %2450 = mul i32 %2447, %2449
  %2451 = urem i32 %2450, 2
  %2452 = icmp eq i32 %2451, 0
  %2453 = icmp slt i32 %2448, 10
  %2454 = or i1 %2452, %2453
  br i1 %2454, label %originalBB571, label %originalBB571alteredBB

originalBB571:                                    ; preds = %2446, %originalBB571alteredBB
  %2455 = load i32, i32* @x.63
  %2456 = load i32, i32* @y.64
  %2457 = sub i32 %2455, 1
  %2458 = mul i32 %2455, %2457
  %2459 = urem i32 %2458, 2
  %2460 = icmp eq i32 %2459, 0
  %2461 = icmp slt i32 %2456, 10
  %2462 = or i1 %2460, %2461
  br i1 %2462, label %originalBBpart2573, label %originalBB571alteredBB

originalBBpart2573:                               ; preds = %originalBB571
  br label %2463, !dbg !3698

2463:                                             ; preds = %originalBBpart2573, %originalBBpart2553, %2371
  %2464 = load i32, i32* %39, align 4, !dbg !3699
  %2465 = call i32 @iswprint(i32 %2464) #10, !dbg !3701
  %2466 = icmp ne i32 %2465, 0, !dbg !3701
  br i1 %2466, label %2484, label %2467, !dbg !3702

2467:                                             ; preds = %2463
  %2468 = load i32, i32* @x.63
  %2469 = load i32, i32* @y.64
  %2470 = sub i32 %2468, 1
  %2471 = mul i32 %2468, %2470
  %2472 = urem i32 %2471, 2
  %2473 = icmp eq i32 %2472, 0
  %2474 = icmp slt i32 %2469, 10
  %2475 = or i1 %2473, %2474
  br i1 %2475, label %originalBB575, label %originalBB575alteredBB

originalBB575:                                    ; preds = %2467, %originalBB575alteredBB
  store i8 0, i8* %37, align 1, !dbg !3703
  %2476 = load i32, i32* @x.63
  %2477 = load i32, i32* @y.64
  %2478 = sub i32 %2476, 1
  %2479 = mul i32 %2476, %2478
  %2480 = urem i32 %2479, 2
  %2481 = icmp eq i32 %2480, 0
  %2482 = icmp slt i32 %2477, 10
  %2483 = or i1 %2481, %2482
  br i1 %2483, label %originalBBpart2577, label %originalBB575alteredBB

originalBBpart2577:                               ; preds = %originalBB575
  br label %2484, !dbg !3704

2484:                                             ; preds = %originalBBpart2577, %2463
  %2485 = load i64, i64* %40, align 8, !dbg !3705
  %2486 = load i64, i64* %36, align 8, !dbg !3706
  %2487 = add i64 %2486, %2485, !dbg !3706
  store i64 %2487, i64* %36, align 8, !dbg !3706
  br label %2488

2488:                                             ; preds = %2484
  br label %2489

2489:                                             ; preds = %2488
  %2490 = load i32, i32* @x.63
  %2491 = load i32, i32* @y.64
  %2492 = sub i32 %2490, 1
  %2493 = mul i32 %2490, %2492
  %2494 = urem i32 %2493, 2
  %2495 = icmp eq i32 %2494, 0
  %2496 = icmp slt i32 %2491, 10
  %2497 = or i1 %2495, %2496
  br i1 %2497, label %originalBB579, label %originalBB579alteredBB

originalBB579:                                    ; preds = %2489, %originalBB579alteredBB
  %2498 = load i32, i32* @x.63
  %2499 = load i32, i32* @y.64
  %2500 = sub i32 %2498, 1
  %2501 = mul i32 %2498, %2500
  %2502 = urem i32 %2501, 2
  %2503 = icmp eq i32 %2502, 0
  %2504 = icmp slt i32 %2499, 10
  %2505 = or i1 %2503, %2504
  br i1 %2505, label %originalBBpart2581, label %originalBB579alteredBB

originalBBpart2581:                               ; preds = %originalBB579
  br label %2506

2506:                                             ; preds = %originalBBpart2581
  br label %2507, !dbg !3707

2507:                                             ; preds = %2506
  %2508 = call i32 @mbsinit(%struct.__mbstate_t* %38) #13, !dbg !3708
  %2509 = icmp ne i32 %2508, 0, !dbg !3709
  %2510 = xor i1 %2509, true, !dbg !3709
  br i1 %2510, label %2183, label %2511, !dbg !3707, !llvm.loop !3710

2511:                                             ; preds = %2507, %originalBBpart2549, %originalBBpart2497, %originalBBpart2489
  br label %2512

2512:                                             ; preds = %2511, %2147
  %2513 = load i8, i8* %37, align 1, !dbg !3712
  %2514 = trunc i8 %2513 to i1, !dbg !3712
  %2515 = zext i1 %2514 to i8, !dbg !3713
  store i8 %2515, i8* %35, align 1, !dbg !3713
  %2516 = load i64, i64* %36, align 8, !dbg !3714
  %2517 = icmp ult i64 1, %2516, !dbg !3716
  br i1 %2517, label %2524, label %2518, !dbg !3717

2518:                                             ; preds = %2512
  %2519 = load i8, i8* %25, align 1, !dbg !3718
  %2520 = trunc i8 %2519 to i1, !dbg !3718
  br i1 %2520, label %2521, label %3224, !dbg !3719

2521:                                             ; preds = %2518
  %2522 = load i8, i8* %37, align 1, !dbg !3720
  %2523 = trunc i8 %2522 to i1, !dbg !3720
  br i1 %2523, label %3224, label %2524, !dbg !3721

2524:                                             ; preds = %2521, %2512
  call void @llvm.dbg.declare(metadata i64* %42, metadata !3722, metadata !DIExpression()), !dbg !3724
  %2525 = load i64, i64* %20, align 8, !dbg !3725
  %2526 = load i64, i64* %36, align 8, !dbg !3726
  %2527 = add i64 %2525, %2526, !dbg !3727
  store i64 %2527, i64* %42, align 8, !dbg !3724
  br label %2528, !dbg !3728

2528:                                             ; preds = %3201, %2524
  %2529 = load i8, i8* %25, align 1, !dbg !3729
  %2530 = trunc i8 %2529 to i1, !dbg !3729
  br i1 %2530, label %2531, label %2876, !dbg !3734

2531:                                             ; preds = %2528
  %2532 = load i8, i8* %37, align 1, !dbg !3735
  %2533 = trunc i8 %2532 to i1, !dbg !3735
  br i1 %2533, label %2876, label %2534, !dbg !3736

2534:                                             ; preds = %2531
  %2535 = load i32, i32* @x.63
  %2536 = load i32, i32* @y.64
  %2537 = sub i32 %2535, 1
  %2538 = mul i32 %2535, %2537
  %2539 = urem i32 %2538, 2
  %2540 = icmp eq i32 %2539, 0
  %2541 = icmp slt i32 %2536, 10
  %2542 = or i1 %2540, %2541
  br i1 %2542, label %originalBB583, label %originalBB583alteredBB

originalBB583:                                    ; preds = %2534, %originalBB583alteredBB
  %2543 = load i32, i32* @x.63
  %2544 = load i32, i32* @y.64
  %2545 = sub i32 %2543, 1
  %2546 = mul i32 %2543, %2545
  %2547 = urem i32 %2546, 2
  %2548 = icmp eq i32 %2547, 0
  %2549 = icmp slt i32 %2544, 10
  %2550 = or i1 %2548, %2549
  br i1 %2550, label %originalBBpart2585, label %originalBB583alteredBB

originalBBpart2585:                               ; preds = %originalBB583
  br label %2551, !dbg !3737

2551:                                             ; preds = %originalBBpart2585
  %2552 = load i8, i8* %27, align 1, !dbg !3739
  %2553 = trunc i8 %2552 to i1, !dbg !3739
  br i1 %2553, label %2554, label %2571, !dbg !3742

2554:                                             ; preds = %2551
  %2555 = load i32, i32* @x.63
  %2556 = load i32, i32* @y.64
  %2557 = sub i32 %2555, 1
  %2558 = mul i32 %2555, %2557
  %2559 = urem i32 %2558, 2
  %2560 = icmp eq i32 %2559, 0
  %2561 = icmp slt i32 %2556, 10
  %2562 = or i1 %2560, %2561
  br i1 %2562, label %originalBB587, label %originalBB587alteredBB

originalBB587:                                    ; preds = %2554, %originalBB587alteredBB
  %2563 = load i32, i32* @x.63
  %2564 = load i32, i32* @y.64
  %2565 = sub i32 %2563, 1
  %2566 = mul i32 %2563, %2565
  %2567 = urem i32 %2566, 2
  %2568 = icmp eq i32 %2567, 0
  %2569 = icmp slt i32 %2564, 10
  %2570 = or i1 %2568, %2569
  br i1 %2570, label %originalBBpart2589, label %originalBB587alteredBB

originalBBpart2589:                               ; preds = %originalBB587
  br label %3998, !dbg !3739

2571:                                             ; preds = %2551
  store i8 1, i8* %34, align 1, !dbg !3742
  %2572 = load i32, i32* %15, align 4, !dbg !3743
  %2573 = icmp eq i32 %2572, 2, !dbg !3743
  br i1 %2573, label %2574, label %2726, !dbg !3743

2574:                                             ; preds = %2571
  %2575 = load i8, i8* %28, align 1, !dbg !3743
  %2576 = trunc i8 %2575 to i1, !dbg !3743
  br i1 %2576, label %2726, label %2577, !dbg !3742

2577:                                             ; preds = %2574
  %2578 = load i32, i32* @x.63
  %2579 = load i32, i32* @y.64
  %2580 = sub i32 %2578, 1
  %2581 = mul i32 %2578, %2580
  %2582 = urem i32 %2581, 2
  %2583 = icmp eq i32 %2582, 0
  %2584 = icmp slt i32 %2579, 10
  %2585 = or i1 %2583, %2584
  br i1 %2585, label %originalBB591, label %originalBB591alteredBB

originalBB591:                                    ; preds = %2577, %originalBB591alteredBB
  %2586 = load i32, i32* @x.63
  %2587 = load i32, i32* @y.64
  %2588 = sub i32 %2586, 1
  %2589 = mul i32 %2586, %2588
  %2590 = urem i32 %2589, 2
  %2591 = icmp eq i32 %2590, 0
  %2592 = icmp slt i32 %2587, 10
  %2593 = or i1 %2591, %2592
  br i1 %2593, label %originalBBpart2593, label %originalBB591alteredBB

originalBBpart2593:                               ; preds = %originalBB591
  br label %2594, !dbg !3745

2594:                                             ; preds = %originalBBpart2593
  %2595 = load i64, i64* %21, align 8, !dbg !3747
  %2596 = load i64, i64* %12, align 8, !dbg !3747
  %2597 = icmp ult i64 %2595, %2596, !dbg !3747
  br i1 %2597, label %2598, label %2618, !dbg !3750

2598:                                             ; preds = %2594
  %2599 = load i32, i32* @x.63
  %2600 = load i32, i32* @y.64
  %2601 = sub i32 %2599, 1
  %2602 = mul i32 %2599, %2601
  %2603 = urem i32 %2602, 2
  %2604 = icmp eq i32 %2603, 0
  %2605 = icmp slt i32 %2600, 10
  %2606 = or i1 %2604, %2605
  br i1 %2606, label %originalBB595, label %originalBB595alteredBB

originalBB595:                                    ; preds = %2598, %originalBB595alteredBB
  %2607 = load i8*, i8** %11, align 8, !dbg !3747
  %2608 = load i64, i64* %21, align 8, !dbg !3747
  %2609 = getelementptr inbounds i8, i8* %2607, i64 %2608, !dbg !3747
  store i8 39, i8* %2609, align 1, !dbg !3747
  %2610 = load i32, i32* @x.63
  %2611 = load i32, i32* @y.64
  %2612 = sub i32 %2610, 1
  %2613 = mul i32 %2610, %2612
  %2614 = urem i32 %2613, 2
  %2615 = icmp eq i32 %2614, 0
  %2616 = icmp slt i32 %2611, 10
  %2617 = or i1 %2615, %2616
  br i1 %2617, label %originalBBpart2597, label %originalBB595alteredBB

originalBBpart2597:                               ; preds = %originalBB595
  br label %2618, !dbg !3747

2618:                                             ; preds = %originalBBpart2597, %2594
  %2619 = load i32, i32* @x.63
  %2620 = load i32, i32* @y.64
  %2621 = sub i32 %2619, 1
  %2622 = mul i32 %2619, %2621
  %2623 = urem i32 %2622, 2
  %2624 = icmp eq i32 %2623, 0
  %2625 = icmp slt i32 %2620, 10
  %2626 = or i1 %2624, %2625
  br i1 %2626, label %originalBB599, label %originalBB599alteredBB

originalBB599:                                    ; preds = %2618, %originalBB599alteredBB
  %2627 = load i64, i64* %21, align 8, !dbg !3750
  %2628 = add i64 %2627, 1, !dbg !3750
  store i64 %2628, i64* %21, align 8, !dbg !3750
  %2629 = load i32, i32* @x.63
  %2630 = load i32, i32* @y.64
  %2631 = sub i32 %2629, 1
  %2632 = mul i32 %2629, %2631
  %2633 = urem i32 %2632, 2
  %2634 = icmp eq i32 %2633, 0
  %2635 = icmp slt i32 %2630, 10
  %2636 = or i1 %2634, %2635
  br i1 %2636, label %originalBBpart2609, label %originalBB599alteredBB

originalBBpart2609:                               ; preds = %originalBB599
  br label %2637, !dbg !3750

2637:                                             ; preds = %originalBBpart2609
  br label %2638, !dbg !3745

2638:                                             ; preds = %2637
  %2639 = load i32, i32* @x.63
  %2640 = load i32, i32* @y.64
  %2641 = sub i32 %2639, 1
  %2642 = mul i32 %2639, %2641
  %2643 = urem i32 %2642, 2
  %2644 = icmp eq i32 %2643, 0
  %2645 = icmp slt i32 %2640, 10
  %2646 = or i1 %2644, %2645
  br i1 %2646, label %originalBB611, label %originalBB611alteredBB

originalBB611:                                    ; preds = %2638, %originalBB611alteredBB
  %2647 = load i64, i64* %21, align 8, !dbg !3751
  %2648 = load i64, i64* %12, align 8, !dbg !3751
  %2649 = icmp ult i64 %2647, %2648, !dbg !3751
  %2650 = load i32, i32* @x.63
  %2651 = load i32, i32* @y.64
  %2652 = sub i32 %2650, 1
  %2653 = mul i32 %2650, %2652
  %2654 = urem i32 %2653, 2
  %2655 = icmp eq i32 %2654, 0
  %2656 = icmp slt i32 %2651, 10
  %2657 = or i1 %2655, %2656
  br i1 %2657, label %originalBBpart2613, label %originalBB611alteredBB

originalBBpart2613:                               ; preds = %originalBB611
  br i1 %2649, label %2658, label %2662, !dbg !3754

2658:                                             ; preds = %originalBBpart2613
  %2659 = load i8*, i8** %11, align 8, !dbg !3751
  %2660 = load i64, i64* %21, align 8, !dbg !3751
  %2661 = getelementptr inbounds i8, i8* %2659, i64 %2660, !dbg !3751
  store i8 36, i8* %2661, align 1, !dbg !3751
  br label %2662, !dbg !3751

2662:                                             ; preds = %2658, %originalBBpart2613
  %2663 = load i32, i32* @x.63
  %2664 = load i32, i32* @y.64
  %2665 = sub i32 %2663, 1
  %2666 = mul i32 %2663, %2665
  %2667 = urem i32 %2666, 2
  %2668 = icmp eq i32 %2667, 0
  %2669 = icmp slt i32 %2664, 10
  %2670 = or i1 %2668, %2669
  br i1 %2670, label %originalBB615, label %originalBB615alteredBB

originalBB615:                                    ; preds = %2662, %originalBB615alteredBB
  %2671 = load i64, i64* %21, align 8, !dbg !3754
  %2672 = add i64 %2671, 1, !dbg !3754
  store i64 %2672, i64* %21, align 8, !dbg !3754
  %2673 = load i32, i32* @x.63
  %2674 = load i32, i32* @y.64
  %2675 = sub i32 %2673, 1
  %2676 = mul i32 %2673, %2675
  %2677 = urem i32 %2676, 2
  %2678 = icmp eq i32 %2677, 0
  %2679 = icmp slt i32 %2674, 10
  %2680 = or i1 %2678, %2679
  br i1 %2680, label %originalBBpart2632, label %originalBB615alteredBB

originalBBpart2632:                               ; preds = %originalBB615
  br label %2681, !dbg !3754

2681:                                             ; preds = %originalBBpart2632
  %2682 = load i32, i32* @x.63
  %2683 = load i32, i32* @y.64
  %2684 = sub i32 %2682, 1
  %2685 = mul i32 %2682, %2684
  %2686 = urem i32 %2685, 2
  %2687 = icmp eq i32 %2686, 0
  %2688 = icmp slt i32 %2683, 10
  %2689 = or i1 %2687, %2688
  br i1 %2689, label %originalBB634, label %originalBB634alteredBB

originalBB634:                                    ; preds = %2681, %originalBB634alteredBB
  %2690 = load i32, i32* @x.63
  %2691 = load i32, i32* @y.64
  %2692 = sub i32 %2690, 1
  %2693 = mul i32 %2690, %2692
  %2694 = urem i32 %2693, 2
  %2695 = icmp eq i32 %2694, 0
  %2696 = icmp slt i32 %2691, 10
  %2697 = or i1 %2695, %2696
  br i1 %2697, label %originalBBpart2636, label %originalBB634alteredBB

originalBBpart2636:                               ; preds = %originalBB634
  br label %2698, !dbg !3745

2698:                                             ; preds = %originalBBpart2636
  %2699 = load i32, i32* @x.63
  %2700 = load i32, i32* @y.64
  %2701 = sub i32 %2699, 1
  %2702 = mul i32 %2699, %2701
  %2703 = urem i32 %2702, 2
  %2704 = icmp eq i32 %2703, 0
  %2705 = icmp slt i32 %2700, 10
  %2706 = or i1 %2704, %2705
  br i1 %2706, label %originalBB638, label %originalBB638alteredBB

originalBB638:                                    ; preds = %2698, %originalBB638alteredBB
  %2707 = load i64, i64* %21, align 8, !dbg !3755
  %2708 = load i64, i64* %12, align 8, !dbg !3755
  %2709 = icmp ult i64 %2707, %2708, !dbg !3755
  %2710 = load i32, i32* @x.63
  %2711 = load i32, i32* @y.64
  %2712 = sub i32 %2710, 1
  %2713 = mul i32 %2710, %2712
  %2714 = urem i32 %2713, 2
  %2715 = icmp eq i32 %2714, 0
  %2716 = icmp slt i32 %2711, 10
  %2717 = or i1 %2715, %2716
  br i1 %2717, label %originalBBpart2640, label %originalBB638alteredBB

originalBBpart2640:                               ; preds = %originalBB638
  br i1 %2709, label %2718, label %2722, !dbg !3758

2718:                                             ; preds = %originalBBpart2640
  %2719 = load i8*, i8** %11, align 8, !dbg !3755
  %2720 = load i64, i64* %21, align 8, !dbg !3755
  %2721 = getelementptr inbounds i8, i8* %2719, i64 %2720, !dbg !3755
  store i8 39, i8* %2721, align 1, !dbg !3755
  br label %2722, !dbg !3755

2722:                                             ; preds = %2718, %originalBBpart2640
  %2723 = load i64, i64* %21, align 8, !dbg !3758
  %2724 = add i64 %2723, 1, !dbg !3758
  store i64 %2724, i64* %21, align 8, !dbg !3758
  br label %2725, !dbg !3758

2725:                                             ; preds = %2722
  store i8 1, i8* %28, align 1, !dbg !3745
  br label %2726, !dbg !3745

2726:                                             ; preds = %2725, %2574, %2571
  br label %2727, !dbg !3742

2727:                                             ; preds = %2726
  %2728 = load i32, i32* @x.63
  %2729 = load i32, i32* @y.64
  %2730 = sub i32 %2728, 1
  %2731 = mul i32 %2728, %2730
  %2732 = urem i32 %2731, 2
  %2733 = icmp eq i32 %2732, 0
  %2734 = icmp slt i32 %2729, 10
  %2735 = or i1 %2733, %2734
  br i1 %2735, label %originalBB642, label %originalBB642alteredBB

originalBB642:                                    ; preds = %2727, %originalBB642alteredBB
  %2736 = load i64, i64* %21, align 8, !dbg !3759
  %2737 = load i64, i64* %12, align 8, !dbg !3759
  %2738 = icmp ult i64 %2736, %2737, !dbg !3759
  %2739 = load i32, i32* @x.63
  %2740 = load i32, i32* @y.64
  %2741 = sub i32 %2739, 1
  %2742 = mul i32 %2739, %2741
  %2743 = urem i32 %2742, 2
  %2744 = icmp eq i32 %2743, 0
  %2745 = icmp slt i32 %2740, 10
  %2746 = or i1 %2744, %2745
  br i1 %2746, label %originalBBpart2644, label %originalBB642alteredBB

originalBBpart2644:                               ; preds = %originalBB642
  br i1 %2738, label %2747, label %2751, !dbg !3762

2747:                                             ; preds = %originalBBpart2644
  %2748 = load i8*, i8** %11, align 8, !dbg !3759
  %2749 = load i64, i64* %21, align 8, !dbg !3759
  %2750 = getelementptr inbounds i8, i8* %2748, i64 %2749, !dbg !3759
  store i8 92, i8* %2750, align 1, !dbg !3759
  br label %2751, !dbg !3759

2751:                                             ; preds = %2747, %originalBBpart2644
  %2752 = load i64, i64* %21, align 8, !dbg !3762
  %2753 = add i64 %2752, 1, !dbg !3762
  store i64 %2753, i64* %21, align 8, !dbg !3762
  br label %2754, !dbg !3762

2754:                                             ; preds = %2751
  br label %2755, !dbg !3742

2755:                                             ; preds = %2754
  %2756 = load i32, i32* @x.63
  %2757 = load i32, i32* @y.64
  %2758 = sub i32 %2756, 1
  %2759 = mul i32 %2756, %2758
  %2760 = urem i32 %2759, 2
  %2761 = icmp eq i32 %2760, 0
  %2762 = icmp slt i32 %2757, 10
  %2763 = or i1 %2761, %2762
  br i1 %2763, label %originalBB646, label %originalBB646alteredBB

originalBB646:                                    ; preds = %2755, %originalBB646alteredBB
  %2764 = load i32, i32* @x.63
  %2765 = load i32, i32* @y.64
  %2766 = sub i32 %2764, 1
  %2767 = mul i32 %2764, %2766
  %2768 = urem i32 %2767, 2
  %2769 = icmp eq i32 %2768, 0
  %2770 = icmp slt i32 %2765, 10
  %2771 = or i1 %2769, %2770
  br i1 %2771, label %originalBBpart2648, label %originalBB646alteredBB

originalBBpart2648:                               ; preds = %originalBB646
  br label %2772, !dbg !3763

2772:                                             ; preds = %originalBBpart2648
  %2773 = load i64, i64* %21, align 8, !dbg !3764
  %2774 = load i64, i64* %12, align 8, !dbg !3764
  %2775 = icmp ult i64 %2773, %2774, !dbg !3764
  br i1 %2775, label %2776, label %2801, !dbg !3767

2776:                                             ; preds = %2772
  %2777 = load i32, i32* @x.63
  %2778 = load i32, i32* @y.64
  %2779 = sub i32 %2777, 1
  %2780 = mul i32 %2777, %2779
  %2781 = urem i32 %2780, 2
  %2782 = icmp eq i32 %2781, 0
  %2783 = icmp slt i32 %2778, 10
  %2784 = or i1 %2782, %2783
  br i1 %2784, label %originalBB650, label %originalBB650alteredBB

originalBB650:                                    ; preds = %2776, %originalBB650alteredBB
  %2785 = load i8, i8* %31, align 1, !dbg !3764
  %2786 = zext i8 %2785 to i32, !dbg !3764
  %2787 = ashr i32 %2786, 6, !dbg !3764
  %2788 = add nsw i32 48, %2787, !dbg !3764
  %2789 = trunc i32 %2788 to i8, !dbg !3764
  %2790 = load i8*, i8** %11, align 8, !dbg !3764
  %2791 = load i64, i64* %21, align 8, !dbg !3764
  %2792 = getelementptr inbounds i8, i8* %2790, i64 %2791, !dbg !3764
  store i8 %2789, i8* %2792, align 1, !dbg !3764
  %2793 = load i32, i32* @x.63
  %2794 = load i32, i32* @y.64
  %2795 = sub i32 %2793, 1
  %2796 = mul i32 %2793, %2795
  %2797 = urem i32 %2796, 2
  %2798 = icmp eq i32 %2797, 0
  %2799 = icmp slt i32 %2794, 10
  %2800 = or i1 %2798, %2799
  br i1 %2800, label %originalBBpart2669, label %originalBB650alteredBB

originalBBpart2669:                               ; preds = %originalBB650
  br label %2801, !dbg !3764

2801:                                             ; preds = %originalBBpart2669, %2772
  %2802 = load i64, i64* %21, align 8, !dbg !3767
  %2803 = add i64 %2802, 1, !dbg !3767
  store i64 %2803, i64* %21, align 8, !dbg !3767
  br label %2804, !dbg !3767

2804:                                             ; preds = %2801
  %2805 = load i32, i32* @x.63
  %2806 = load i32, i32* @y.64
  %2807 = sub i32 %2805, 1
  %2808 = mul i32 %2805, %2807
  %2809 = urem i32 %2808, 2
  %2810 = icmp eq i32 %2809, 0
  %2811 = icmp slt i32 %2806, 10
  %2812 = or i1 %2810, %2811
  br i1 %2812, label %originalBB671, label %originalBB671alteredBB

originalBB671:                                    ; preds = %2804, %originalBB671alteredBB
  %2813 = load i32, i32* @x.63
  %2814 = load i32, i32* @y.64
  %2815 = sub i32 %2813, 1
  %2816 = mul i32 %2813, %2815
  %2817 = urem i32 %2816, 2
  %2818 = icmp eq i32 %2817, 0
  %2819 = icmp slt i32 %2814, 10
  %2820 = or i1 %2818, %2819
  br i1 %2820, label %originalBBpart2673, label %originalBB671alteredBB

originalBBpart2673:                               ; preds = %originalBB671
  br label %2821, !dbg !3768

2821:                                             ; preds = %originalBBpart2673
  %2822 = load i32, i32* @x.63
  %2823 = load i32, i32* @y.64
  %2824 = sub i32 %2822, 1
  %2825 = mul i32 %2822, %2824
  %2826 = urem i32 %2825, 2
  %2827 = icmp eq i32 %2826, 0
  %2828 = icmp slt i32 %2823, 10
  %2829 = or i1 %2827, %2828
  br i1 %2829, label %originalBB675, label %originalBB675alteredBB

originalBB675:                                    ; preds = %2821, %originalBB675alteredBB
  %2830 = load i64, i64* %21, align 8, !dbg !3769
  %2831 = load i64, i64* %12, align 8, !dbg !3769
  %2832 = icmp ult i64 %2830, %2831, !dbg !3769
  %2833 = load i32, i32* @x.63
  %2834 = load i32, i32* @y.64
  %2835 = sub i32 %2833, 1
  %2836 = mul i32 %2833, %2835
  %2837 = urem i32 %2836, 2
  %2838 = icmp eq i32 %2837, 0
  %2839 = icmp slt i32 %2834, 10
  %2840 = or i1 %2838, %2839
  br i1 %2840, label %originalBBpart2677, label %originalBB675alteredBB

originalBBpart2677:                               ; preds = %originalBB675
  br i1 %2832, label %2841, label %2851, !dbg !3772

2841:                                             ; preds = %originalBBpart2677
  %2842 = load i8, i8* %31, align 1, !dbg !3769
  %2843 = zext i8 %2842 to i32, !dbg !3769
  %2844 = ashr i32 %2843, 3, !dbg !3769
  %2845 = and i32 %2844, 7, !dbg !3769
  %2846 = add nsw i32 48, %2845, !dbg !3769
  %2847 = trunc i32 %2846 to i8, !dbg !3769
  %2848 = load i8*, i8** %11, align 8, !dbg !3769
  %2849 = load i64, i64* %21, align 8, !dbg !3769
  %2850 = getelementptr inbounds i8, i8* %2848, i64 %2849, !dbg !3769
  store i8 %2847, i8* %2850, align 1, !dbg !3769
  br label %2851, !dbg !3769

2851:                                             ; preds = %2841, %originalBBpart2677
  %2852 = load i32, i32* @x.63
  %2853 = load i32, i32* @y.64
  %2854 = sub i32 %2852, 1
  %2855 = mul i32 %2852, %2854
  %2856 = urem i32 %2855, 2
  %2857 = icmp eq i32 %2856, 0
  %2858 = icmp slt i32 %2853, 10
  %2859 = or i1 %2857, %2858
  br i1 %2859, label %originalBB679, label %originalBB679alteredBB

originalBB679:                                    ; preds = %2851, %originalBB679alteredBB
  %2860 = load i64, i64* %21, align 8, !dbg !3772
  %2861 = add i64 %2860, 1, !dbg !3772
  store i64 %2861, i64* %21, align 8, !dbg !3772
  %2862 = load i32, i32* @x.63
  %2863 = load i32, i32* @y.64
  %2864 = sub i32 %2862, 1
  %2865 = mul i32 %2862, %2864
  %2866 = urem i32 %2865, 2
  %2867 = icmp eq i32 %2866, 0
  %2868 = icmp slt i32 %2863, 10
  %2869 = or i1 %2867, %2868
  br i1 %2869, label %originalBBpart2693, label %originalBB679alteredBB

originalBBpart2693:                               ; preds = %originalBB679
  br label %2870, !dbg !3772

2870:                                             ; preds = %originalBBpart2693
  %2871 = load i8, i8* %31, align 1, !dbg !3773
  %2872 = zext i8 %2871 to i32, !dbg !3773
  %2873 = and i32 %2872, 7, !dbg !3774
  %2874 = add nsw i32 48, %2873, !dbg !3775
  %2875 = trunc i32 %2874 to i8, !dbg !3776
  store i8 %2875, i8* %31, align 1, !dbg !3777
  br label %2989, !dbg !3778

2876:                                             ; preds = %2531, %2528
  %2877 = load i8, i8* %33, align 1, !dbg !3779
  %2878 = trunc i8 %2877 to i1, !dbg !3779
  br i1 %2878, label %2879, label %2972, !dbg !3781

2879:                                             ; preds = %2876
  %2880 = load i32, i32* @x.63
  %2881 = load i32, i32* @y.64
  %2882 = sub i32 %2880, 1
  %2883 = mul i32 %2880, %2882
  %2884 = urem i32 %2883, 2
  %2885 = icmp eq i32 %2884, 0
  %2886 = icmp slt i32 %2881, 10
  %2887 = or i1 %2885, %2886
  br i1 %2887, label %originalBB695, label %originalBB695alteredBB

originalBB695:                                    ; preds = %2879, %originalBB695alteredBB
  %2888 = load i32, i32* @x.63
  %2889 = load i32, i32* @y.64
  %2890 = sub i32 %2888, 1
  %2891 = mul i32 %2888, %2890
  %2892 = urem i32 %2891, 2
  %2893 = icmp eq i32 %2892, 0
  %2894 = icmp slt i32 %2889, 10
  %2895 = or i1 %2893, %2894
  br i1 %2895, label %originalBBpart2697, label %originalBB695alteredBB

originalBBpart2697:                               ; preds = %originalBB695
  br label %2896, !dbg !3782

2896:                                             ; preds = %originalBBpart2697
  %2897 = load i32, i32* @x.63
  %2898 = load i32, i32* @y.64
  %2899 = sub i32 %2897, 1
  %2900 = mul i32 %2897, %2899
  %2901 = urem i32 %2900, 2
  %2902 = icmp eq i32 %2901, 0
  %2903 = icmp slt i32 %2898, 10
  %2904 = or i1 %2902, %2903
  br i1 %2904, label %originalBB699, label %originalBB699alteredBB

originalBB699:                                    ; preds = %2896, %originalBB699alteredBB
  %2905 = load i64, i64* %21, align 8, !dbg !3784
  %2906 = load i64, i64* %12, align 8, !dbg !3784
  %2907 = icmp ult i64 %2905, %2906, !dbg !3784
  %2908 = load i32, i32* @x.63
  %2909 = load i32, i32* @y.64
  %2910 = sub i32 %2908, 1
  %2911 = mul i32 %2908, %2910
  %2912 = urem i32 %2911, 2
  %2913 = icmp eq i32 %2912, 0
  %2914 = icmp slt i32 %2909, 10
  %2915 = or i1 %2913, %2914
  br i1 %2915, label %originalBBpart2701, label %originalBB699alteredBB

originalBBpart2701:                               ; preds = %originalBB699
  br i1 %2907, label %2916, label %2936, !dbg !3787

2916:                                             ; preds = %originalBBpart2701
  %2917 = load i32, i32* @x.63
  %2918 = load i32, i32* @y.64
  %2919 = sub i32 %2917, 1
  %2920 = mul i32 %2917, %2919
  %2921 = urem i32 %2920, 2
  %2922 = icmp eq i32 %2921, 0
  %2923 = icmp slt i32 %2918, 10
  %2924 = or i1 %2922, %2923
  br i1 %2924, label %originalBB703, label %originalBB703alteredBB

originalBB703:                                    ; preds = %2916, %originalBB703alteredBB
  %2925 = load i8*, i8** %11, align 8, !dbg !3784
  %2926 = load i64, i64* %21, align 8, !dbg !3784
  %2927 = getelementptr inbounds i8, i8* %2925, i64 %2926, !dbg !3784
  store i8 92, i8* %2927, align 1, !dbg !3784
  %2928 = load i32, i32* @x.63
  %2929 = load i32, i32* @y.64
  %2930 = sub i32 %2928, 1
  %2931 = mul i32 %2928, %2930
  %2932 = urem i32 %2931, 2
  %2933 = icmp eq i32 %2932, 0
  %2934 = icmp slt i32 %2929, 10
  %2935 = or i1 %2933, %2934
  br i1 %2935, label %originalBBpart2705, label %originalBB703alteredBB

originalBBpart2705:                               ; preds = %originalBB703
  br label %2936, !dbg !3784

2936:                                             ; preds = %originalBBpart2705, %originalBBpart2701
  %2937 = load i32, i32* @x.63
  %2938 = load i32, i32* @y.64
  %2939 = sub i32 %2937, 1
  %2940 = mul i32 %2937, %2939
  %2941 = urem i32 %2940, 2
  %2942 = icmp eq i32 %2941, 0
  %2943 = icmp slt i32 %2938, 10
  %2944 = or i1 %2942, %2943
  br i1 %2944, label %originalBB707, label %originalBB707alteredBB

originalBB707:                                    ; preds = %2936, %originalBB707alteredBB
  %2945 = load i64, i64* %21, align 8, !dbg !3787
  %2946 = add i64 %2945, 1, !dbg !3787
  store i64 %2946, i64* %21, align 8, !dbg !3787
  %2947 = load i32, i32* @x.63
  %2948 = load i32, i32* @y.64
  %2949 = sub i32 %2947, 1
  %2950 = mul i32 %2947, %2949
  %2951 = urem i32 %2950, 2
  %2952 = icmp eq i32 %2951, 0
  %2953 = icmp slt i32 %2948, 10
  %2954 = or i1 %2952, %2953
  br i1 %2954, label %originalBBpart2711, label %originalBB707alteredBB

originalBBpart2711:                               ; preds = %originalBB707
  br label %2955, !dbg !3787

2955:                                             ; preds = %originalBBpart2711
  %2956 = load i32, i32* @x.63
  %2957 = load i32, i32* @y.64
  %2958 = sub i32 %2956, 1
  %2959 = mul i32 %2956, %2958
  %2960 = urem i32 %2959, 2
  %2961 = icmp eq i32 %2960, 0
  %2962 = icmp slt i32 %2957, 10
  %2963 = or i1 %2961, %2962
  br i1 %2963, label %originalBB713, label %originalBB713alteredBB

originalBB713:                                    ; preds = %2955, %originalBB713alteredBB
  store i8 0, i8* %33, align 1, !dbg !3788
  %2964 = load i32, i32* @x.63
  %2965 = load i32, i32* @y.64
  %2966 = sub i32 %2964, 1
  %2967 = mul i32 %2964, %2966
  %2968 = urem i32 %2967, 2
  %2969 = icmp eq i32 %2968, 0
  %2970 = icmp slt i32 %2965, 10
  %2971 = or i1 %2969, %2970
  br i1 %2971, label %originalBBpart2715, label %originalBB713alteredBB

originalBBpart2715:                               ; preds = %originalBB713
  br label %2972, !dbg !3789

2972:                                             ; preds = %originalBBpart2715, %2876
  %2973 = load i32, i32* @x.63
  %2974 = load i32, i32* @y.64
  %2975 = sub i32 %2973, 1
  %2976 = mul i32 %2973, %2975
  %2977 = urem i32 %2976, 2
  %2978 = icmp eq i32 %2977, 0
  %2979 = icmp slt i32 %2974, 10
  %2980 = or i1 %2978, %2979
  br i1 %2980, label %originalBB717, label %originalBB717alteredBB

originalBB717:                                    ; preds = %2972, %originalBB717alteredBB
  %2981 = load i32, i32* @x.63
  %2982 = load i32, i32* @y.64
  %2983 = sub i32 %2981, 1
  %2984 = mul i32 %2981, %2983
  %2985 = urem i32 %2984, 2
  %2986 = icmp eq i32 %2985, 0
  %2987 = icmp slt i32 %2982, 10
  %2988 = or i1 %2986, %2987
  br i1 %2988, label %originalBBpart2719, label %originalBB717alteredBB

originalBBpart2719:                               ; preds = %originalBB717
  br label %2989

2989:                                             ; preds = %originalBBpart2719, %2870
  %2990 = load i32, i32* @x.63
  %2991 = load i32, i32* @y.64
  %2992 = sub i32 %2990, 1
  %2993 = mul i32 %2990, %2992
  %2994 = urem i32 %2993, 2
  %2995 = icmp eq i32 %2994, 0
  %2996 = icmp slt i32 %2991, 10
  %2997 = or i1 %2995, %2996
  br i1 %2997, label %originalBB721, label %originalBB721alteredBB

originalBB721:                                    ; preds = %2989, %originalBB721alteredBB
  %2998 = load i64, i64* %42, align 8, !dbg !3790
  %2999 = load i64, i64* %20, align 8, !dbg !3792
  %3000 = add i64 %2999, 1, !dbg !3793
  %3001 = icmp ule i64 %2998, %3000, !dbg !3794
  %3002 = load i32, i32* @x.63
  %3003 = load i32, i32* @y.64
  %3004 = sub i32 %3002, 1
  %3005 = mul i32 %3002, %3004
  %3006 = urem i32 %3005, 2
  %3007 = icmp eq i32 %3006, 0
  %3008 = icmp slt i32 %3003, 10
  %3009 = or i1 %3007, %3008
  br i1 %3009, label %originalBBpart2734, label %originalBB721alteredBB

originalBBpart2734:                               ; preds = %originalBB721
  br i1 %3001, label %3010, label %3027, !dbg !3795

3010:                                             ; preds = %originalBBpart2734
  %3011 = load i32, i32* @x.63
  %3012 = load i32, i32* @y.64
  %3013 = sub i32 %3011, 1
  %3014 = mul i32 %3011, %3013
  %3015 = urem i32 %3014, 2
  %3016 = icmp eq i32 %3015, 0
  %3017 = icmp slt i32 %3012, 10
  %3018 = or i1 %3016, %3017
  br i1 %3018, label %originalBB736, label %originalBB736alteredBB

originalBB736:                                    ; preds = %3010, %originalBB736alteredBB
  %3019 = load i32, i32* @x.63
  %3020 = load i32, i32* @y.64
  %3021 = sub i32 %3019, 1
  %3022 = mul i32 %3019, %3021
  %3023 = urem i32 %3022, 2
  %3024 = icmp eq i32 %3023, 0
  %3025 = icmp slt i32 %3020, 10
  %3026 = or i1 %3024, %3025
  br i1 %3026, label %originalBBpart2738, label %originalBB736alteredBB

originalBBpart2738:                               ; preds = %originalBB736
  br label %3207, !dbg !3796

3027:                                             ; preds = %originalBBpart2734
  %3028 = load i32, i32* @x.63
  %3029 = load i32, i32* @y.64
  %3030 = sub i32 %3028, 1
  %3031 = mul i32 %3028, %3030
  %3032 = urem i32 %3031, 2
  %3033 = icmp eq i32 %3032, 0
  %3034 = icmp slt i32 %3029, 10
  %3035 = or i1 %3033, %3034
  br i1 %3035, label %originalBB740, label %originalBB740alteredBB

originalBB740:                                    ; preds = %3027, %originalBB740alteredBB
  %3036 = load i32, i32* @x.63
  %3037 = load i32, i32* @y.64
  %3038 = sub i32 %3036, 1
  %3039 = mul i32 %3036, %3038
  %3040 = urem i32 %3039, 2
  %3041 = icmp eq i32 %3040, 0
  %3042 = icmp slt i32 %3037, 10
  %3043 = or i1 %3041, %3042
  br i1 %3043, label %originalBBpart2742, label %originalBB740alteredBB

originalBBpart2742:                               ; preds = %originalBB740
  br label %3044, !dbg !3797

3044:                                             ; preds = %originalBBpart2742
  %3045 = load i8, i8* %28, align 1, !dbg !3798
  %3046 = trunc i8 %3045 to i1, !dbg !3798
  br i1 %3046, label %3047, label %3155, !dbg !3798

3047:                                             ; preds = %3044
  %3048 = load i8, i8* %34, align 1, !dbg !3798
  %3049 = trunc i8 %3048 to i1, !dbg !3798
  br i1 %3049, label %3155, label %3050, !dbg !3801

3050:                                             ; preds = %3047
  %3051 = load i32, i32* @x.63
  %3052 = load i32, i32* @y.64
  %3053 = sub i32 %3051, 1
  %3054 = mul i32 %3051, %3053
  %3055 = urem i32 %3054, 2
  %3056 = icmp eq i32 %3055, 0
  %3057 = icmp slt i32 %3052, 10
  %3058 = or i1 %3056, %3057
  br i1 %3058, label %originalBB744, label %originalBB744alteredBB

originalBB744:                                    ; preds = %3050, %originalBB744alteredBB
  %3059 = load i32, i32* @x.63
  %3060 = load i32, i32* @y.64
  %3061 = sub i32 %3059, 1
  %3062 = mul i32 %3059, %3061
  %3063 = urem i32 %3062, 2
  %3064 = icmp eq i32 %3063, 0
  %3065 = icmp slt i32 %3060, 10
  %3066 = or i1 %3064, %3065
  br i1 %3066, label %originalBBpart2746, label %originalBB744alteredBB

originalBBpart2746:                               ; preds = %originalBB744
  br label %3067, !dbg !3802

3067:                                             ; preds = %originalBBpart2746
  %3068 = load i32, i32* @x.63
  %3069 = load i32, i32* @y.64
  %3070 = sub i32 %3068, 1
  %3071 = mul i32 %3068, %3070
  %3072 = urem i32 %3071, 2
  %3073 = icmp eq i32 %3072, 0
  %3074 = icmp slt i32 %3069, 10
  %3075 = or i1 %3073, %3074
  br i1 %3075, label %originalBB748, label %originalBB748alteredBB

originalBB748:                                    ; preds = %3067, %originalBB748alteredBB
  %3076 = load i64, i64* %21, align 8, !dbg !3804
  %3077 = load i64, i64* %12, align 8, !dbg !3804
  %3078 = icmp ult i64 %3076, %3077, !dbg !3804
  %3079 = load i32, i32* @x.63
  %3080 = load i32, i32* @y.64
  %3081 = sub i32 %3079, 1
  %3082 = mul i32 %3079, %3081
  %3083 = urem i32 %3082, 2
  %3084 = icmp eq i32 %3083, 0
  %3085 = icmp slt i32 %3080, 10
  %3086 = or i1 %3084, %3085
  br i1 %3086, label %originalBBpart2750, label %originalBB748alteredBB

originalBBpart2750:                               ; preds = %originalBB748
  br i1 %3078, label %3087, label %3107, !dbg !3807

3087:                                             ; preds = %originalBBpart2750
  %3088 = load i32, i32* @x.63
  %3089 = load i32, i32* @y.64
  %3090 = sub i32 %3088, 1
  %3091 = mul i32 %3088, %3090
  %3092 = urem i32 %3091, 2
  %3093 = icmp eq i32 %3092, 0
  %3094 = icmp slt i32 %3089, 10
  %3095 = or i1 %3093, %3094
  br i1 %3095, label %originalBB752, label %originalBB752alteredBB

originalBB752:                                    ; preds = %3087, %originalBB752alteredBB
  %3096 = load i8*, i8** %11, align 8, !dbg !3804
  %3097 = load i64, i64* %21, align 8, !dbg !3804
  %3098 = getelementptr inbounds i8, i8* %3096, i64 %3097, !dbg !3804
  store i8 39, i8* %3098, align 1, !dbg !3804
  %3099 = load i32, i32* @x.63
  %3100 = load i32, i32* @y.64
  %3101 = sub i32 %3099, 1
  %3102 = mul i32 %3099, %3101
  %3103 = urem i32 %3102, 2
  %3104 = icmp eq i32 %3103, 0
  %3105 = icmp slt i32 %3100, 10
  %3106 = or i1 %3104, %3105
  br i1 %3106, label %originalBBpart2754, label %originalBB752alteredBB

originalBBpart2754:                               ; preds = %originalBB752
  br label %3107, !dbg !3804

3107:                                             ; preds = %originalBBpart2754, %originalBBpart2750
  %3108 = load i32, i32* @x.63
  %3109 = load i32, i32* @y.64
  %3110 = sub i32 %3108, 1
  %3111 = mul i32 %3108, %3110
  %3112 = urem i32 %3111, 2
  %3113 = icmp eq i32 %3112, 0
  %3114 = icmp slt i32 %3109, 10
  %3115 = or i1 %3113, %3114
  br i1 %3115, label %originalBB756, label %originalBB756alteredBB

originalBB756:                                    ; preds = %3107, %originalBB756alteredBB
  %3116 = load i64, i64* %21, align 8, !dbg !3807
  %3117 = add i64 %3116, 1, !dbg !3807
  store i64 %3117, i64* %21, align 8, !dbg !3807
  %3118 = load i32, i32* @x.63
  %3119 = load i32, i32* @y.64
  %3120 = sub i32 %3118, 1
  %3121 = mul i32 %3118, %3120
  %3122 = urem i32 %3121, 2
  %3123 = icmp eq i32 %3122, 0
  %3124 = icmp slt i32 %3119, 10
  %3125 = or i1 %3123, %3124
  br i1 %3125, label %originalBBpart2765, label %originalBB756alteredBB

originalBBpart2765:                               ; preds = %originalBB756
  br label %3126, !dbg !3807

3126:                                             ; preds = %originalBBpart2765
  br label %3127, !dbg !3802

3127:                                             ; preds = %3126
  %3128 = load i64, i64* %21, align 8, !dbg !3808
  %3129 = load i64, i64* %12, align 8, !dbg !3808
  %3130 = icmp ult i64 %3128, %3129, !dbg !3808
  br i1 %3130, label %3131, label %3135, !dbg !3811

3131:                                             ; preds = %3127
  %3132 = load i8*, i8** %11, align 8, !dbg !3808
  %3133 = load i64, i64* %21, align 8, !dbg !3808
  %3134 = getelementptr inbounds i8, i8* %3132, i64 %3133, !dbg !3808
  store i8 39, i8* %3134, align 1, !dbg !3808
  br label %3135, !dbg !3808

3135:                                             ; preds = %3131, %3127
  %3136 = load i32, i32* @x.63
  %3137 = load i32, i32* @y.64
  %3138 = sub i32 %3136, 1
  %3139 = mul i32 %3136, %3138
  %3140 = urem i32 %3139, 2
  %3141 = icmp eq i32 %3140, 0
  %3142 = icmp slt i32 %3137, 10
  %3143 = or i1 %3141, %3142
  br i1 %3143, label %originalBB767, label %originalBB767alteredBB

originalBB767:                                    ; preds = %3135, %originalBB767alteredBB
  %3144 = load i64, i64* %21, align 8, !dbg !3811
  %3145 = add i64 %3144, 1, !dbg !3811
  store i64 %3145, i64* %21, align 8, !dbg !3811
  %3146 = load i32, i32* @x.63
  %3147 = load i32, i32* @y.64
  %3148 = sub i32 %3146, 1
  %3149 = mul i32 %3146, %3148
  %3150 = urem i32 %3149, 2
  %3151 = icmp eq i32 %3150, 0
  %3152 = icmp slt i32 %3147, 10
  %3153 = or i1 %3151, %3152
  br i1 %3153, label %originalBBpart2771, label %originalBB767alteredBB

originalBBpart2771:                               ; preds = %originalBB767
  br label %3154, !dbg !3811

3154:                                             ; preds = %originalBBpart2771
  store i8 0, i8* %28, align 1, !dbg !3802
  br label %3155, !dbg !3802

3155:                                             ; preds = %3154, %3047, %3044
  br label %3156, !dbg !3801

3156:                                             ; preds = %3155
  %3157 = load i32, i32* @x.63
  %3158 = load i32, i32* @y.64
  %3159 = sub i32 %3157, 1
  %3160 = mul i32 %3157, %3159
  %3161 = urem i32 %3160, 2
  %3162 = icmp eq i32 %3161, 0
  %3163 = icmp slt i32 %3158, 10
  %3164 = or i1 %3162, %3163
  br i1 %3164, label %originalBB773, label %originalBB773alteredBB

originalBB773:                                    ; preds = %3156, %originalBB773alteredBB
  %3165 = load i32, i32* @x.63
  %3166 = load i32, i32* @y.64
  %3167 = sub i32 %3165, 1
  %3168 = mul i32 %3165, %3167
  %3169 = urem i32 %3168, 2
  %3170 = icmp eq i32 %3169, 0
  %3171 = icmp slt i32 %3166, 10
  %3172 = or i1 %3170, %3171
  br i1 %3172, label %originalBBpart2775, label %originalBB773alteredBB

originalBBpart2775:                               ; preds = %originalBB773
  br label %3173, !dbg !3812

3173:                                             ; preds = %originalBBpart2775
  %3174 = load i32, i32* @x.63
  %3175 = load i32, i32* @y.64
  %3176 = sub i32 %3174, 1
  %3177 = mul i32 %3174, %3176
  %3178 = urem i32 %3177, 2
  %3179 = icmp eq i32 %3178, 0
  %3180 = icmp slt i32 %3175, 10
  %3181 = or i1 %3179, %3180
  br i1 %3181, label %originalBB777, label %originalBB777alteredBB

originalBB777:                                    ; preds = %3173, %originalBB777alteredBB
  %3182 = load i64, i64* %21, align 8, !dbg !3813
  %3183 = load i64, i64* %12, align 8, !dbg !3813
  %3184 = icmp ult i64 %3182, %3183, !dbg !3813
  %3185 = load i32, i32* @x.63
  %3186 = load i32, i32* @y.64
  %3187 = sub i32 %3185, 1
  %3188 = mul i32 %3185, %3187
  %3189 = urem i32 %3188, 2
  %3190 = icmp eq i32 %3189, 0
  %3191 = icmp slt i32 %3186, 10
  %3192 = or i1 %3190, %3191
  br i1 %3192, label %originalBBpart2779, label %originalBB777alteredBB

originalBBpart2779:                               ; preds = %originalBB777
  br i1 %3184, label %3193, label %3198, !dbg !3816

3193:                                             ; preds = %originalBBpart2779
  %3194 = load i8, i8* %31, align 1, !dbg !3813
  %3195 = load i8*, i8** %11, align 8, !dbg !3813
  %3196 = load i64, i64* %21, align 8, !dbg !3813
  %3197 = getelementptr inbounds i8, i8* %3195, i64 %3196, !dbg !3813
  store i8 %3194, i8* %3197, align 1, !dbg !3813
  br label %3198, !dbg !3813

3198:                                             ; preds = %3193, %originalBBpart2779
  %3199 = load i64, i64* %21, align 8, !dbg !3816
  %3200 = add i64 %3199, 1, !dbg !3816
  store i64 %3200, i64* %21, align 8, !dbg !3816
  br label %3201, !dbg !3816

3201:                                             ; preds = %3198
  %3202 = load i8*, i8** %13, align 8, !dbg !3817
  %3203 = load i64, i64* %20, align 8, !dbg !3818
  %3204 = add i64 %3203, 1, !dbg !3818
  store i64 %3204, i64* %20, align 8, !dbg !3818
  %3205 = getelementptr inbounds i8, i8* %3202, i64 %3204, !dbg !3817
  %3206 = load i8, i8* %3205, align 1, !dbg !3817
  store i8 %3206, i8* %31, align 1, !dbg !3819
  br label %2528, !dbg !3820, !llvm.loop !3821

3207:                                             ; preds = %originalBBpart2738
  %3208 = load i32, i32* @x.63
  %3209 = load i32, i32* @y.64
  %3210 = sub i32 %3208, 1
  %3211 = mul i32 %3208, %3210
  %3212 = urem i32 %3211, 2
  %3213 = icmp eq i32 %3212, 0
  %3214 = icmp slt i32 %3209, 10
  %3215 = or i1 %3213, %3214
  br i1 %3215, label %originalBB781, label %originalBB781alteredBB

originalBB781:                                    ; preds = %3207, %originalBB781alteredBB
  %3216 = load i32, i32* @x.63
  %3217 = load i32, i32* @y.64
  %3218 = sub i32 %3216, 1
  %3219 = mul i32 %3216, %3218
  %3220 = urem i32 %3219, 2
  %3221 = icmp eq i32 %3220, 0
  %3222 = icmp slt i32 %3217, 10
  %3223 = or i1 %3221, %3222
  br i1 %3223, label %originalBBpart2783, label %originalBB781alteredBB

originalBBpart2783:                               ; preds = %originalBB781
  br label %3542, !dbg !3824

3224:                                             ; preds = %2521, %2518
  %3225 = load i32, i32* @x.63
  %3226 = load i32, i32* @y.64
  %3227 = sub i32 %3225, 1
  %3228 = mul i32 %3225, %3227
  %3229 = urem i32 %3228, 2
  %3230 = icmp eq i32 %3229, 0
  %3231 = icmp slt i32 %3226, 10
  %3232 = or i1 %3230, %3231
  br i1 %3232, label %originalBB785, label %originalBB785alteredBB

originalBB785:                                    ; preds = %3224, %originalBB785alteredBB
  %3233 = load i32, i32* @x.63
  %3234 = load i32, i32* @y.64
  %3235 = sub i32 %3233, 1
  %3236 = mul i32 %3233, %3235
  %3237 = urem i32 %3236, 2
  %3238 = icmp eq i32 %3237, 0
  %3239 = icmp slt i32 %3234, 10
  %3240 = or i1 %3238, %3239
  br i1 %3240, label %originalBBpart2787, label %originalBB785alteredBB

originalBBpart2787:                               ; preds = %originalBB785
  br label %3241, !dbg !3825

3241:                                             ; preds = %originalBBpart2787, %2143, %originalBBpart2481, %1881, %1823, %originalBBpart2399, %originalBBpart2387, %originalBBpart2343, %originalBBpart2278
  %3242 = load i32, i32* @x.63
  %3243 = load i32, i32* @y.64
  %3244 = sub i32 %3242, 1
  %3245 = mul i32 %3242, %3244
  %3246 = urem i32 %3245, 2
  %3247 = icmp eq i32 %3246, 0
  %3248 = icmp slt i32 %3243, 10
  %3249 = or i1 %3247, %3248
  br i1 %3249, label %originalBB789, label %originalBB789alteredBB

originalBB789:                                    ; preds = %3241, %originalBB789alteredBB
  %3250 = load i8, i8* %25, align 1, !dbg !3826
  %3251 = trunc i8 %3250 to i1, !dbg !3826
  %3252 = load i32, i32* @x.63
  %3253 = load i32, i32* @y.64
  %3254 = sub i32 %3252, 1
  %3255 = mul i32 %3252, %3254
  %3256 = urem i32 %3255, 2
  %3257 = icmp eq i32 %3256, 0
  %3258 = icmp slt i32 %3253, 10
  %3259 = or i1 %3257, %3258
  br i1 %3259, label %originalBBpart2791, label %originalBB789alteredBB

originalBBpart2791:                               ; preds = %originalBB789
  br i1 %3251, label %3260, label %3279, !dbg !3828

3260:                                             ; preds = %originalBBpart2791
  %3261 = load i32, i32* @x.63
  %3262 = load i32, i32* @y.64
  %3263 = sub i32 %3261, 1
  %3264 = mul i32 %3261, %3263
  %3265 = urem i32 %3264, 2
  %3266 = icmp eq i32 %3265, 0
  %3267 = icmp slt i32 %3262, 10
  %3268 = or i1 %3266, %3267
  br i1 %3268, label %originalBB793, label %originalBB793alteredBB

originalBB793:                                    ; preds = %3260, %originalBB793alteredBB
  %3269 = load i32, i32* %15, align 4, !dbg !3829
  %3270 = icmp ne i32 %3269, 2, !dbg !3830
  %3271 = load i32, i32* @x.63
  %3272 = load i32, i32* @y.64
  %3273 = sub i32 %3271, 1
  %3274 = mul i32 %3271, %3273
  %3275 = urem i32 %3274, 2
  %3276 = icmp eq i32 %3275, 0
  %3277 = icmp slt i32 %3272, 10
  %3278 = or i1 %3276, %3277
  br i1 %3278, label %originalBBpart2795, label %originalBB793alteredBB

originalBBpart2795:                               ; preds = %originalBB793
  br i1 %3270, label %3282, label %3279, !dbg !3831

3279:                                             ; preds = %originalBBpart2795, %originalBBpart2791
  %3280 = load i8, i8* %27, align 1, !dbg !3832
  %3281 = trunc i8 %3280 to i1, !dbg !3832
  br i1 %3281, label %3282, label %3315, !dbg !3833

3282:                                             ; preds = %3279, %originalBBpart2795
  %3283 = load i32, i32* @x.63
  %3284 = load i32, i32* @y.64
  %3285 = sub i32 %3283, 1
  %3286 = mul i32 %3283, %3285
  %3287 = urem i32 %3286, 2
  %3288 = icmp eq i32 %3287, 0
  %3289 = icmp slt i32 %3284, 10
  %3290 = or i1 %3288, %3289
  br i1 %3290, label %originalBB797, label %originalBB797alteredBB

originalBB797:                                    ; preds = %3282, %originalBB797alteredBB
  %3291 = load i32*, i32** %17, align 8, !dbg !3834
  %3292 = icmp ne i32* %3291, null, !dbg !3834
  %3293 = load i32, i32* @x.63
  %3294 = load i32, i32* @y.64
  %3295 = sub i32 %3293, 1
  %3296 = mul i32 %3293, %3295
  %3297 = urem i32 %3296, 2
  %3298 = icmp eq i32 %3297, 0
  %3299 = icmp slt i32 %3294, 10
  %3300 = or i1 %3298, %3299
  br i1 %3300, label %originalBBpart2799, label %originalBB797alteredBB

originalBBpart2799:                               ; preds = %originalBB797
  br i1 %3292, label %3301, label %3315, !dbg !3835

3301:                                             ; preds = %originalBBpart2799
  %3302 = load i32*, i32** %17, align 8, !dbg !3836
  %3303 = load i8, i8* %31, align 1, !dbg !3837
  %3304 = zext i8 %3303 to i64, !dbg !3837
  %3305 = udiv i64 %3304, 32, !dbg !3838
  %3306 = getelementptr inbounds i32, i32* %3302, i64 %3305, !dbg !3836
  %3307 = load i32, i32* %3306, align 4, !dbg !3836
  %3308 = load i8, i8* %31, align 1, !dbg !3839
  %3309 = zext i8 %3308 to i64, !dbg !3839
  %3310 = urem i64 %3309, 32, !dbg !3840
  %3311 = trunc i64 %3310 to i32, !dbg !3841
  %3312 = lshr i32 %3307, %3311, !dbg !3841
  %3313 = and i32 %3312, 1, !dbg !3842
  %3314 = icmp ne i32 %3313, 0, !dbg !3842
  br i1 %3314, label %3319, label %3315, !dbg !3843

3315:                                             ; preds = %3301, %originalBBpart2799, %3279
  %3316 = load i8, i8* %33, align 1, !dbg !3844
  %3317 = trunc i8 %3316 to i1, !dbg !3844
  br i1 %3317, label %3319, label %3318, !dbg !3845

3318:                                             ; preds = %3315
  br label %3542, !dbg !3846

3319:                                             ; preds = %3315, %3301
  %3320 = load i32, i32* @x.63
  %3321 = load i32, i32* @y.64
  %3322 = sub i32 %3320, 1
  %3323 = mul i32 %3320, %3322
  %3324 = urem i32 %3323, 2
  %3325 = icmp eq i32 %3324, 0
  %3326 = icmp slt i32 %3321, 10
  %3327 = or i1 %3325, %3326
  br i1 %3327, label %originalBB801, label %originalBB801alteredBB

originalBB801:                                    ; preds = %3319, %originalBB801alteredBB
  %3328 = load i32, i32* @x.63
  %3329 = load i32, i32* @y.64
  %3330 = sub i32 %3328, 1
  %3331 = mul i32 %3328, %3330
  %3332 = urem i32 %3331, 2
  %3333 = icmp eq i32 %3332, 0
  %3334 = icmp slt i32 %3329, 10
  %3335 = or i1 %3333, %3334
  br i1 %3335, label %originalBBpart2803, label %originalBB801alteredBB

originalBBpart2803:                               ; preds = %originalBB801
  br label %3336, !dbg !3844

3336:                                             ; preds = %originalBBpart2803, %1723
  call void @llvm.dbg.label(metadata !3847), !dbg !3848
  br label %3337, !dbg !3849

3337:                                             ; preds = %3336
  %3338 = load i32, i32* @x.63
  %3339 = load i32, i32* @y.64
  %3340 = sub i32 %3338, 1
  %3341 = mul i32 %3338, %3340
  %3342 = urem i32 %3341, 2
  %3343 = icmp eq i32 %3342, 0
  %3344 = icmp slt i32 %3339, 10
  %3345 = or i1 %3343, %3344
  br i1 %3345, label %originalBB805, label %originalBB805alteredBB

originalBB805:                                    ; preds = %3337, %originalBB805alteredBB
  %3346 = load i8, i8* %27, align 1, !dbg !3850
  %3347 = trunc i8 %3346 to i1, !dbg !3850
  %3348 = load i32, i32* @x.63
  %3349 = load i32, i32* @y.64
  %3350 = sub i32 %3348, 1
  %3351 = mul i32 %3348, %3350
  %3352 = urem i32 %3351, 2
  %3353 = icmp eq i32 %3352, 0
  %3354 = icmp slt i32 %3349, 10
  %3355 = or i1 %3353, %3354
  br i1 %3355, label %originalBBpart2807, label %originalBB805alteredBB

originalBBpart2807:                               ; preds = %originalBB805
  br i1 %3347, label %3356, label %3373, !dbg !3853

3356:                                             ; preds = %originalBBpart2807
  %3357 = load i32, i32* @x.63
  %3358 = load i32, i32* @y.64
  %3359 = sub i32 %3357, 1
  %3360 = mul i32 %3357, %3359
  %3361 = urem i32 %3360, 2
  %3362 = icmp eq i32 %3361, 0
  %3363 = icmp slt i32 %3358, 10
  %3364 = or i1 %3362, %3363
  br i1 %3364, label %originalBB809, label %originalBB809alteredBB

originalBB809:                                    ; preds = %3356, %originalBB809alteredBB
  %3365 = load i32, i32* @x.63
  %3366 = load i32, i32* @y.64
  %3367 = sub i32 %3365, 1
  %3368 = mul i32 %3365, %3367
  %3369 = urem i32 %3368, 2
  %3370 = icmp eq i32 %3369, 0
  %3371 = icmp slt i32 %3366, 10
  %3372 = or i1 %3370, %3371
  br i1 %3372, label %originalBBpart2811, label %originalBB809alteredBB

originalBBpart2811:                               ; preds = %originalBB809
  br label %3998, !dbg !3850

3373:                                             ; preds = %originalBBpart2807
  %3374 = load i32, i32* @x.63
  %3375 = load i32, i32* @y.64
  %3376 = sub i32 %3374, 1
  %3377 = mul i32 %3374, %3376
  %3378 = urem i32 %3377, 2
  %3379 = icmp eq i32 %3378, 0
  %3380 = icmp slt i32 %3375, 10
  %3381 = or i1 %3379, %3380
  br i1 %3381, label %originalBB813, label %originalBB813alteredBB

originalBB813:                                    ; preds = %3373, %originalBB813alteredBB
  store i8 1, i8* %34, align 1, !dbg !3853
  %3382 = load i32, i32* %15, align 4, !dbg !3854
  %3383 = icmp eq i32 %3382, 2, !dbg !3854
  %3384 = load i32, i32* @x.63
  %3385 = load i32, i32* @y.64
  %3386 = sub i32 %3384, 1
  %3387 = mul i32 %3384, %3386
  %3388 = urem i32 %3387, 2
  %3389 = icmp eq i32 %3388, 0
  %3390 = icmp slt i32 %3385, 10
  %3391 = or i1 %3389, %3390
  br i1 %3391, label %originalBBpart2815, label %originalBB813alteredBB

originalBBpart2815:                               ; preds = %originalBB813
  br i1 %3383, label %3392, label %3512, !dbg !3854

3392:                                             ; preds = %originalBBpart2815
  %3393 = load i8, i8* %28, align 1, !dbg !3854
  %3394 = trunc i8 %3393 to i1, !dbg !3854
  br i1 %3394, label %3512, label %3395, !dbg !3853

3395:                                             ; preds = %3392
  %3396 = load i32, i32* @x.63
  %3397 = load i32, i32* @y.64
  %3398 = sub i32 %3396, 1
  %3399 = mul i32 %3396, %3398
  %3400 = urem i32 %3399, 2
  %3401 = icmp eq i32 %3400, 0
  %3402 = icmp slt i32 %3397, 10
  %3403 = or i1 %3401, %3402
  br i1 %3403, label %originalBB817, label %originalBB817alteredBB

originalBB817:                                    ; preds = %3395, %originalBB817alteredBB
  %3404 = load i32, i32* @x.63
  %3405 = load i32, i32* @y.64
  %3406 = sub i32 %3404, 1
  %3407 = mul i32 %3404, %3406
  %3408 = urem i32 %3407, 2
  %3409 = icmp eq i32 %3408, 0
  %3410 = icmp slt i32 %3405, 10
  %3411 = or i1 %3409, %3410
  br i1 %3411, label %originalBBpart2819, label %originalBB817alteredBB

originalBBpart2819:                               ; preds = %originalBB817
  br label %3412, !dbg !3856

3412:                                             ; preds = %originalBBpart2819
  %3413 = load i64, i64* %21, align 8, !dbg !3858
  %3414 = load i64, i64* %12, align 8, !dbg !3858
  %3415 = icmp ult i64 %3413, %3414, !dbg !3858
  br i1 %3415, label %3416, label %3436, !dbg !3861

3416:                                             ; preds = %3412
  %3417 = load i32, i32* @x.63
  %3418 = load i32, i32* @y.64
  %3419 = sub i32 %3417, 1
  %3420 = mul i32 %3417, %3419
  %3421 = urem i32 %3420, 2
  %3422 = icmp eq i32 %3421, 0
  %3423 = icmp slt i32 %3418, 10
  %3424 = or i1 %3422, %3423
  br i1 %3424, label %originalBB821, label %originalBB821alteredBB

originalBB821:                                    ; preds = %3416, %originalBB821alteredBB
  %3425 = load i8*, i8** %11, align 8, !dbg !3858
  %3426 = load i64, i64* %21, align 8, !dbg !3858
  %3427 = getelementptr inbounds i8, i8* %3425, i64 %3426, !dbg !3858
  store i8 39, i8* %3427, align 1, !dbg !3858
  %3428 = load i32, i32* @x.63
  %3429 = load i32, i32* @y.64
  %3430 = sub i32 %3428, 1
  %3431 = mul i32 %3428, %3430
  %3432 = urem i32 %3431, 2
  %3433 = icmp eq i32 %3432, 0
  %3434 = icmp slt i32 %3429, 10
  %3435 = or i1 %3433, %3434
  br i1 %3435, label %originalBBpart2823, label %originalBB821alteredBB

originalBBpart2823:                               ; preds = %originalBB821
  br label %3436, !dbg !3858

3436:                                             ; preds = %originalBBpart2823, %3412
  %3437 = load i32, i32* @x.63
  %3438 = load i32, i32* @y.64
  %3439 = sub i32 %3437, 1
  %3440 = mul i32 %3437, %3439
  %3441 = urem i32 %3440, 2
  %3442 = icmp eq i32 %3441, 0
  %3443 = icmp slt i32 %3438, 10
  %3444 = or i1 %3442, %3443
  br i1 %3444, label %originalBB825, label %originalBB825alteredBB

originalBB825:                                    ; preds = %3436, %originalBB825alteredBB
  %3445 = load i64, i64* %21, align 8, !dbg !3861
  %3446 = add i64 %3445, 1, !dbg !3861
  store i64 %3446, i64* %21, align 8, !dbg !3861
  %3447 = load i32, i32* @x.63
  %3448 = load i32, i32* @y.64
  %3449 = sub i32 %3447, 1
  %3450 = mul i32 %3447, %3449
  %3451 = urem i32 %3450, 2
  %3452 = icmp eq i32 %3451, 0
  %3453 = icmp slt i32 %3448, 10
  %3454 = or i1 %3452, %3453
  br i1 %3454, label %originalBBpart2839, label %originalBB825alteredBB

originalBBpart2839:                               ; preds = %originalBB825
  br label %3455, !dbg !3861

3455:                                             ; preds = %originalBBpart2839
  br label %3456, !dbg !3856

3456:                                             ; preds = %3455
  %3457 = load i64, i64* %21, align 8, !dbg !3862
  %3458 = load i64, i64* %12, align 8, !dbg !3862
  %3459 = icmp ult i64 %3457, %3458, !dbg !3862
  br i1 %3459, label %3460, label %3464, !dbg !3865

3460:                                             ; preds = %3456
  %3461 = load i8*, i8** %11, align 8, !dbg !3862
  %3462 = load i64, i64* %21, align 8, !dbg !3862
  %3463 = getelementptr inbounds i8, i8* %3461, i64 %3462, !dbg !3862
  store i8 36, i8* %3463, align 1, !dbg !3862
  br label %3464, !dbg !3862

3464:                                             ; preds = %3460, %3456
  %3465 = load i64, i64* %21, align 8, !dbg !3865
  %3466 = add i64 %3465, 1, !dbg !3865
  store i64 %3466, i64* %21, align 8, !dbg !3865
  br label %3467, !dbg !3865

3467:                                             ; preds = %3464
  br label %3468, !dbg !3856

3468:                                             ; preds = %3467
  %3469 = load i32, i32* @x.63
  %3470 = load i32, i32* @y.64
  %3471 = sub i32 %3469, 1
  %3472 = mul i32 %3469, %3471
  %3473 = urem i32 %3472, 2
  %3474 = icmp eq i32 %3473, 0
  %3475 = icmp slt i32 %3470, 10
  %3476 = or i1 %3474, %3475
  br i1 %3476, label %originalBB841, label %originalBB841alteredBB

originalBB841:                                    ; preds = %3468, %originalBB841alteredBB
  %3477 = load i64, i64* %21, align 8, !dbg !3866
  %3478 = load i64, i64* %12, align 8, !dbg !3866
  %3479 = icmp ult i64 %3477, %3478, !dbg !3866
  %3480 = load i32, i32* @x.63
  %3481 = load i32, i32* @y.64
  %3482 = sub i32 %3480, 1
  %3483 = mul i32 %3480, %3482
  %3484 = urem i32 %3483, 2
  %3485 = icmp eq i32 %3484, 0
  %3486 = icmp slt i32 %3481, 10
  %3487 = or i1 %3485, %3486
  br i1 %3487, label %originalBBpart2843, label %originalBB841alteredBB

originalBBpart2843:                               ; preds = %originalBB841
  br i1 %3479, label %3488, label %3492, !dbg !3869

3488:                                             ; preds = %originalBBpart2843
  %3489 = load i8*, i8** %11, align 8, !dbg !3866
  %3490 = load i64, i64* %21, align 8, !dbg !3866
  %3491 = getelementptr inbounds i8, i8* %3489, i64 %3490, !dbg !3866
  store i8 39, i8* %3491, align 1, !dbg !3866
  br label %3492, !dbg !3866

3492:                                             ; preds = %3488, %originalBBpart2843
  %3493 = load i32, i32* @x.63
  %3494 = load i32, i32* @y.64
  %3495 = sub i32 %3493, 1
  %3496 = mul i32 %3493, %3495
  %3497 = urem i32 %3496, 2
  %3498 = icmp eq i32 %3497, 0
  %3499 = icmp slt i32 %3494, 10
  %3500 = or i1 %3498, %3499
  br i1 %3500, label %originalBB845, label %originalBB845alteredBB

originalBB845:                                    ; preds = %3492, %originalBB845alteredBB
  %3501 = load i64, i64* %21, align 8, !dbg !3869
  %3502 = add i64 %3501, 1, !dbg !3869
  store i64 %3502, i64* %21, align 8, !dbg !3869
  %3503 = load i32, i32* @x.63
  %3504 = load i32, i32* @y.64
  %3505 = sub i32 %3503, 1
  %3506 = mul i32 %3503, %3505
  %3507 = urem i32 %3506, 2
  %3508 = icmp eq i32 %3507, 0
  %3509 = icmp slt i32 %3504, 10
  %3510 = or i1 %3508, %3509
  br i1 %3510, label %originalBBpart2857, label %originalBB845alteredBB

originalBBpart2857:                               ; preds = %originalBB845
  br label %3511, !dbg !3869

3511:                                             ; preds = %originalBBpart2857
  store i8 1, i8* %28, align 1, !dbg !3856
  br label %3512, !dbg !3856

3512:                                             ; preds = %3511, %3392, %originalBBpart2815
  br label %3513, !dbg !3853

3513:                                             ; preds = %3512
  %3514 = load i64, i64* %21, align 8, !dbg !3870
  %3515 = load i64, i64* %12, align 8, !dbg !3870
  %3516 = icmp ult i64 %3514, %3515, !dbg !3870
  br i1 %3516, label %3517, label %3521, !dbg !3873

3517:                                             ; preds = %3513
  %3518 = load i8*, i8** %11, align 8, !dbg !3870
  %3519 = load i64, i64* %21, align 8, !dbg !3870
  %3520 = getelementptr inbounds i8, i8* %3518, i64 %3519, !dbg !3870
  store i8 92, i8* %3520, align 1, !dbg !3870
  br label %3521, !dbg !3870

3521:                                             ; preds = %3517, %3513
  %3522 = load i32, i32* @x.63
  %3523 = load i32, i32* @y.64
  %3524 = sub i32 %3522, 1
  %3525 = mul i32 %3522, %3524
  %3526 = urem i32 %3525, 2
  %3527 = icmp eq i32 %3526, 0
  %3528 = icmp slt i32 %3523, 10
  %3529 = or i1 %3527, %3528
  br i1 %3529, label %originalBB859, label %originalBB859alteredBB

originalBB859:                                    ; preds = %3521, %originalBB859alteredBB
  %3530 = load i64, i64* %21, align 8, !dbg !3873
  %3531 = add i64 %3530, 1, !dbg !3873
  store i64 %3531, i64* %21, align 8, !dbg !3873
  %3532 = load i32, i32* @x.63
  %3533 = load i32, i32* @y.64
  %3534 = sub i32 %3532, 1
  %3535 = mul i32 %3532, %3534
  %3536 = urem i32 %3535, 2
  %3537 = icmp eq i32 %3536, 0
  %3538 = icmp slt i32 %3533, 10
  %3539 = or i1 %3537, %3538
  br i1 %3539, label %originalBBpart2876, label %originalBB859alteredBB

originalBBpart2876:                               ; preds = %originalBB859
  br label %3540, !dbg !3873

3540:                                             ; preds = %originalBBpart2876
  br label %3541, !dbg !3853

3541:                                             ; preds = %3540
  br label %3542, !dbg !3853

3542:                                             ; preds = %3541, %3318, %originalBBpart2783, %1630, %1588
  call void @llvm.dbg.label(metadata !3874), !dbg !3875
  %3543 = load i32, i32* @x.63
  %3544 = load i32, i32* @y.64
  %3545 = sub i32 %3543, 1
  %3546 = mul i32 %3543, %3545
  %3547 = urem i32 %3546, 2
  %3548 = icmp eq i32 %3547, 0
  %3549 = icmp slt i32 %3544, 10
  %3550 = or i1 %3548, %3549
  br i1 %3550, label %originalBB878, label %originalBB878alteredBB

originalBB878:                                    ; preds = %3542, %originalBB878alteredBB
  %3551 = load i32, i32* @x.63
  %3552 = load i32, i32* @y.64
  %3553 = sub i32 %3551, 1
  %3554 = mul i32 %3551, %3553
  %3555 = urem i32 %3554, 2
  %3556 = icmp eq i32 %3555, 0
  %3557 = icmp slt i32 %3552, 10
  %3558 = or i1 %3556, %3557
  br i1 %3558, label %originalBBpart2880, label %originalBB878alteredBB

originalBBpart2880:                               ; preds = %originalBB878
  br label %3559, !dbg !3876

3559:                                             ; preds = %originalBBpart2880
  %3560 = load i8, i8* %28, align 1, !dbg !3877
  %3561 = trunc i8 %3560 to i1, !dbg !3877
  br i1 %3561, label %3562, label %3654, !dbg !3877

3562:                                             ; preds = %3559
  %3563 = load i8, i8* %34, align 1, !dbg !3877
  %3564 = trunc i8 %3563 to i1, !dbg !3877
  br i1 %3564, label %3654, label %3565, !dbg !3880

3565:                                             ; preds = %3562
  %3566 = load i32, i32* @x.63
  %3567 = load i32, i32* @y.64
  %3568 = sub i32 %3566, 1
  %3569 = mul i32 %3566, %3568
  %3570 = urem i32 %3569, 2
  %3571 = icmp eq i32 %3570, 0
  %3572 = icmp slt i32 %3567, 10
  %3573 = or i1 %3571, %3572
  br i1 %3573, label %originalBB882, label %originalBB882alteredBB

originalBB882:                                    ; preds = %3565, %originalBB882alteredBB
  %3574 = load i32, i32* @x.63
  %3575 = load i32, i32* @y.64
  %3576 = sub i32 %3574, 1
  %3577 = mul i32 %3574, %3576
  %3578 = urem i32 %3577, 2
  %3579 = icmp eq i32 %3578, 0
  %3580 = icmp slt i32 %3575, 10
  %3581 = or i1 %3579, %3580
  br i1 %3581, label %originalBBpart2884, label %originalBB882alteredBB

originalBBpart2884:                               ; preds = %originalBB882
  br label %3582, !dbg !3881

3582:                                             ; preds = %originalBBpart2884
  %3583 = load i64, i64* %21, align 8, !dbg !3883
  %3584 = load i64, i64* %12, align 8, !dbg !3883
  %3585 = icmp ult i64 %3583, %3584, !dbg !3883
  br i1 %3585, label %3586, label %3590, !dbg !3886

3586:                                             ; preds = %3582
  %3587 = load i8*, i8** %11, align 8, !dbg !3883
  %3588 = load i64, i64* %21, align 8, !dbg !3883
  %3589 = getelementptr inbounds i8, i8* %3587, i64 %3588, !dbg !3883
  store i8 39, i8* %3589, align 1, !dbg !3883
  br label %3590, !dbg !3883

3590:                                             ; preds = %3586, %3582
  %3591 = load i32, i32* @x.63
  %3592 = load i32, i32* @y.64
  %3593 = sub i32 %3591, 1
  %3594 = mul i32 %3591, %3593
  %3595 = urem i32 %3594, 2
  %3596 = icmp eq i32 %3595, 0
  %3597 = icmp slt i32 %3592, 10
  %3598 = or i1 %3596, %3597
  br i1 %3598, label %originalBB886, label %originalBB886alteredBB

originalBB886:                                    ; preds = %3590, %originalBB886alteredBB
  %3599 = load i64, i64* %21, align 8, !dbg !3886
  %3600 = add i64 %3599, 1, !dbg !3886
  store i64 %3600, i64* %21, align 8, !dbg !3886
  %3601 = load i32, i32* @x.63
  %3602 = load i32, i32* @y.64
  %3603 = sub i32 %3601, 1
  %3604 = mul i32 %3601, %3603
  %3605 = urem i32 %3604, 2
  %3606 = icmp eq i32 %3605, 0
  %3607 = icmp slt i32 %3602, 10
  %3608 = or i1 %3606, %3607
  br i1 %3608, label %originalBBpart2898, label %originalBB886alteredBB

originalBBpart2898:                               ; preds = %originalBB886
  br label %3609, !dbg !3886

3609:                                             ; preds = %originalBBpart2898
  %3610 = load i32, i32* @x.63
  %3611 = load i32, i32* @y.64
  %3612 = sub i32 %3610, 1
  %3613 = mul i32 %3610, %3612
  %3614 = urem i32 %3613, 2
  %3615 = icmp eq i32 %3614, 0
  %3616 = icmp slt i32 %3611, 10
  %3617 = or i1 %3615, %3616
  br i1 %3617, label %originalBB900, label %originalBB900alteredBB

originalBB900:                                    ; preds = %3609, %originalBB900alteredBB
  %3618 = load i32, i32* @x.63
  %3619 = load i32, i32* @y.64
  %3620 = sub i32 %3618, 1
  %3621 = mul i32 %3618, %3620
  %3622 = urem i32 %3621, 2
  %3623 = icmp eq i32 %3622, 0
  %3624 = icmp slt i32 %3619, 10
  %3625 = or i1 %3623, %3624
  br i1 %3625, label %originalBBpart2902, label %originalBB900alteredBB

originalBBpart2902:                               ; preds = %originalBB900
  br label %3626, !dbg !3881

3626:                                             ; preds = %originalBBpart2902
  %3627 = load i64, i64* %21, align 8, !dbg !3887
  %3628 = load i64, i64* %12, align 8, !dbg !3887
  %3629 = icmp ult i64 %3627, %3628, !dbg !3887
  br i1 %3629, label %3630, label %3650, !dbg !3890

3630:                                             ; preds = %3626
  %3631 = load i32, i32* @x.63
  %3632 = load i32, i32* @y.64
  %3633 = sub i32 %3631, 1
  %3634 = mul i32 %3631, %3633
  %3635 = urem i32 %3634, 2
  %3636 = icmp eq i32 %3635, 0
  %3637 = icmp slt i32 %3632, 10
  %3638 = or i1 %3636, %3637
  br i1 %3638, label %originalBB904, label %originalBB904alteredBB

originalBB904:                                    ; preds = %3630, %originalBB904alteredBB
  %3639 = load i8*, i8** %11, align 8, !dbg !3887
  %3640 = load i64, i64* %21, align 8, !dbg !3887
  %3641 = getelementptr inbounds i8, i8* %3639, i64 %3640, !dbg !3887
  store i8 39, i8* %3641, align 1, !dbg !3887
  %3642 = load i32, i32* @x.63
  %3643 = load i32, i32* @y.64
  %3644 = sub i32 %3642, 1
  %3645 = mul i32 %3642, %3644
  %3646 = urem i32 %3645, 2
  %3647 = icmp eq i32 %3646, 0
  %3648 = icmp slt i32 %3643, 10
  %3649 = or i1 %3647, %3648
  br i1 %3649, label %originalBBpart2906, label %originalBB904alteredBB

originalBBpart2906:                               ; preds = %originalBB904
  br label %3650, !dbg !3887

3650:                                             ; preds = %originalBBpart2906, %3626
  %3651 = load i64, i64* %21, align 8, !dbg !3890
  %3652 = add i64 %3651, 1, !dbg !3890
  store i64 %3652, i64* %21, align 8, !dbg !3890
  br label %3653, !dbg !3890

3653:                                             ; preds = %3650
  store i8 0, i8* %28, align 1, !dbg !3881
  br label %3654, !dbg !3881

3654:                                             ; preds = %3653, %3562, %3559
  br label %3655, !dbg !3880

3655:                                             ; preds = %3654
  br label %3656, !dbg !3891

3656:                                             ; preds = %3655
  %3657 = load i32, i32* @x.63
  %3658 = load i32, i32* @y.64
  %3659 = sub i32 %3657, 1
  %3660 = mul i32 %3657, %3659
  %3661 = urem i32 %3660, 2
  %3662 = icmp eq i32 %3661, 0
  %3663 = icmp slt i32 %3658, 10
  %3664 = or i1 %3662, %3663
  br i1 %3664, label %originalBB908, label %originalBB908alteredBB

originalBB908:                                    ; preds = %3656, %originalBB908alteredBB
  %3665 = load i64, i64* %21, align 8, !dbg !3892
  %3666 = load i64, i64* %12, align 8, !dbg !3892
  %3667 = icmp ult i64 %3665, %3666, !dbg !3892
  %3668 = load i32, i32* @x.63
  %3669 = load i32, i32* @y.64
  %3670 = sub i32 %3668, 1
  %3671 = mul i32 %3668, %3670
  %3672 = urem i32 %3671, 2
  %3673 = icmp eq i32 %3672, 0
  %3674 = icmp slt i32 %3669, 10
  %3675 = or i1 %3673, %3674
  br i1 %3675, label %originalBBpart2910, label %originalBB908alteredBB

originalBBpart2910:                               ; preds = %originalBB908
  br i1 %3667, label %3676, label %3681, !dbg !3895

3676:                                             ; preds = %originalBBpart2910
  %3677 = load i8, i8* %31, align 1, !dbg !3892
  %3678 = load i8*, i8** %11, align 8, !dbg !3892
  %3679 = load i64, i64* %21, align 8, !dbg !3892
  %3680 = getelementptr inbounds i8, i8* %3678, i64 %3679, !dbg !3892
  store i8 %3677, i8* %3680, align 1, !dbg !3892
  br label %3681, !dbg !3892

3681:                                             ; preds = %3676, %originalBBpart2910
  %3682 = load i32, i32* @x.63
  %3683 = load i32, i32* @y.64
  %3684 = sub i32 %3682, 1
  %3685 = mul i32 %3682, %3684
  %3686 = urem i32 %3685, 2
  %3687 = icmp eq i32 %3686, 0
  %3688 = icmp slt i32 %3683, 10
  %3689 = or i1 %3687, %3688
  br i1 %3689, label %originalBB912, label %originalBB912alteredBB

originalBB912:                                    ; preds = %3681, %originalBB912alteredBB
  %3690 = load i64, i64* %21, align 8, !dbg !3895
  %3691 = add i64 %3690, 1, !dbg !3895
  store i64 %3691, i64* %21, align 8, !dbg !3895
  %3692 = load i32, i32* @x.63
  %3693 = load i32, i32* @y.64
  %3694 = sub i32 %3692, 1
  %3695 = mul i32 %3692, %3694
  %3696 = urem i32 %3695, 2
  %3697 = icmp eq i32 %3696, 0
  %3698 = icmp slt i32 %3693, 10
  %3699 = or i1 %3697, %3698
  br i1 %3699, label %originalBBpart2918, label %originalBB912alteredBB

originalBBpart2918:                               ; preds = %originalBB912
  br label %3700, !dbg !3895

3700:                                             ; preds = %originalBBpart2918
  %3701 = load i8, i8* %35, align 1, !dbg !3896
  %3702 = trunc i8 %3701 to i1, !dbg !3896
  br i1 %3702, label %3704, label %3703, !dbg !3898

3703:                                             ; preds = %3700
  store i8 0, i8* %30, align 1, !dbg !3899
  br label %3704, !dbg !3900

3704:                                             ; preds = %3703, %3700
  br label %3705, !dbg !3901

3705:                                             ; preds = %3704, %originalBBpart2270
  %3706 = load i32, i32* @x.63
  %3707 = load i32, i32* @y.64
  %3708 = sub i32 %3706, 1
  %3709 = mul i32 %3706, %3708
  %3710 = urem i32 %3709, 2
  %3711 = icmp eq i32 %3710, 0
  %3712 = icmp slt i32 %3707, 10
  %3713 = or i1 %3711, %3712
  br i1 %3713, label %originalBB920, label %originalBB920alteredBB

originalBB920:                                    ; preds = %3705, %originalBB920alteredBB
  %3714 = load i64, i64* %20, align 8, !dbg !3902
  %3715 = add i64 %3714, 1, !dbg !3902
  store i64 %3715, i64* %20, align 8, !dbg !3902
  %3716 = load i32, i32* @x.63
  %3717 = load i32, i32* @y.64
  %3718 = sub i32 %3716, 1
  %3719 = mul i32 %3716, %3718
  %3720 = urem i32 %3719, 2
  %3721 = icmp eq i32 %3720, 0
  %3722 = icmp slt i32 %3717, 10
  %3723 = or i1 %3721, %3722
  br i1 %3723, label %originalBBpart2931, label %originalBB920alteredBB

originalBBpart2931:                               ; preds = %originalBB920
  br label %474, !dbg !3903, !llvm.loop !3904

3724:                                             ; preds = %originalBBpart296
  %3725 = load i64, i64* %21, align 8, !dbg !3906
  %3726 = icmp eq i64 %3725, 0, !dbg !3908
  br i1 %3726, label %3727, label %3750, !dbg !3909

3727:                                             ; preds = %3724
  %3728 = load i32, i32* %15, align 4, !dbg !3910
  %3729 = icmp eq i32 %3728, 2, !dbg !3911
  br i1 %3729, label %3730, label %3750, !dbg !3912

3730:                                             ; preds = %3727
  %3731 = load i8, i8* %27, align 1, !dbg !3913
  %3732 = trunc i8 %3731 to i1, !dbg !3913
  br i1 %3732, label %3733, label %3750, !dbg !3914

3733:                                             ; preds = %3730
  %3734 = load i32, i32* @x.63
  %3735 = load i32, i32* @y.64
  %3736 = sub i32 %3734, 1
  %3737 = mul i32 %3734, %3736
  %3738 = urem i32 %3737, 2
  %3739 = icmp eq i32 %3738, 0
  %3740 = icmp slt i32 %3735, 10
  %3741 = or i1 %3739, %3740
  br i1 %3741, label %originalBB933, label %originalBB933alteredBB

originalBB933:                                    ; preds = %3733, %originalBB933alteredBB
  %3742 = load i32, i32* @x.63
  %3743 = load i32, i32* @y.64
  %3744 = sub i32 %3742, 1
  %3745 = mul i32 %3742, %3744
  %3746 = urem i32 %3745, 2
  %3747 = icmp eq i32 %3746, 0
  %3748 = icmp slt i32 %3743, 10
  %3749 = or i1 %3747, %3748
  br i1 %3749, label %originalBBpart2935, label %originalBB933alteredBB

originalBBpart2935:                               ; preds = %originalBB933
  br label %3998, !dbg !3915

3750:                                             ; preds = %3730, %3727, %3724
  %3751 = load i32, i32* %15, align 4, !dbg !3916
  %3752 = icmp eq i32 %3751, 2, !dbg !3918
  br i1 %3752, label %3753, label %3862, !dbg !3919

3753:                                             ; preds = %3750
  %3754 = load i8, i8* %27, align 1, !dbg !3920
  %3755 = trunc i8 %3754 to i1, !dbg !3920
  br i1 %3755, label %3862, label %3756, !dbg !3921

3756:                                             ; preds = %3753
  %3757 = load i32, i32* @x.63
  %3758 = load i32, i32* @y.64
  %3759 = sub i32 %3757, 1
  %3760 = mul i32 %3757, %3759
  %3761 = urem i32 %3760, 2
  %3762 = icmp eq i32 %3761, 0
  %3763 = icmp slt i32 %3758, 10
  %3764 = or i1 %3762, %3763
  br i1 %3764, label %originalBB937, label %originalBB937alteredBB

originalBB937:                                    ; preds = %3756, %originalBB937alteredBB
  %3765 = load i8, i8* %29, align 1, !dbg !3922
  %3766 = trunc i8 %3765 to i1, !dbg !3922
  %3767 = load i32, i32* @x.63
  %3768 = load i32, i32* @y.64
  %3769 = sub i32 %3767, 1
  %3770 = mul i32 %3767, %3769
  %3771 = urem i32 %3770, 2
  %3772 = icmp eq i32 %3771, 0
  %3773 = icmp slt i32 %3768, 10
  %3774 = or i1 %3772, %3773
  br i1 %3774, label %originalBBpart2939, label %originalBB937alteredBB

originalBBpart2939:                               ; preds = %originalBB937
  br i1 %3766, label %3775, label %3862, !dbg !3923

3775:                                             ; preds = %originalBBpart2939
  %3776 = load i32, i32* @x.63
  %3777 = load i32, i32* @y.64
  %3778 = sub i32 %3776, 1
  %3779 = mul i32 %3776, %3778
  %3780 = urem i32 %3779, 2
  %3781 = icmp eq i32 %3780, 0
  %3782 = icmp slt i32 %3777, 10
  %3783 = or i1 %3781, %3782
  br i1 %3783, label %originalBB941, label %originalBB941alteredBB

originalBB941:                                    ; preds = %3775, %originalBB941alteredBB
  %3784 = load i8, i8* %30, align 1, !dbg !3924
  %3785 = trunc i8 %3784 to i1, !dbg !3924
  %3786 = load i32, i32* @x.63
  %3787 = load i32, i32* @y.64
  %3788 = sub i32 %3786, 1
  %3789 = mul i32 %3786, %3788
  %3790 = urem i32 %3789, 2
  %3791 = icmp eq i32 %3790, 0
  %3792 = icmp slt i32 %3787, 10
  %3793 = or i1 %3791, %3792
  br i1 %3793, label %originalBBpart2943, label %originalBB941alteredBB

originalBBpart2943:                               ; preds = %originalBB941
  br i1 %3785, label %3794, label %3804, !dbg !3927

3794:                                             ; preds = %originalBBpart2943
  %3795 = load i8*, i8** %11, align 8, !dbg !3928
  %3796 = load i64, i64* %22, align 8, !dbg !3929
  %3797 = load i8*, i8** %13, align 8, !dbg !3930
  %3798 = load i64, i64* %14, align 8, !dbg !3931
  %3799 = load i32, i32* %16, align 4, !dbg !3932
  %3800 = load i32*, i32** %17, align 8, !dbg !3933
  %3801 = load i8*, i8** %18, align 8, !dbg !3934
  %3802 = load i8*, i8** %19, align 8, !dbg !3935
  %3803 = call i64 @quotearg_buffer_restyled(i8* %3795, i64 %3796, i8* %3797, i64 %3798, i32 5, i32 %3799, i32* %3800, i8* %3801, i8* %3802), !dbg !3936
  store i64 %3803, i64* %10, align 8, !dbg !3937
  br label %4064, !dbg !3937

3804:                                             ; preds = %originalBBpart2943
  %3805 = load i32, i32* @x.63
  %3806 = load i32, i32* @y.64
  %3807 = sub i32 %3805, 1
  %3808 = mul i32 %3805, %3807
  %3809 = urem i32 %3808, 2
  %3810 = icmp eq i32 %3809, 0
  %3811 = icmp slt i32 %3806, 10
  %3812 = or i1 %3810, %3811
  br i1 %3812, label %originalBB945, label %originalBB945alteredBB

originalBB945:                                    ; preds = %3804, %originalBB945alteredBB
  %3813 = load i64, i64* %12, align 8, !dbg !3938
  %3814 = icmp ne i64 %3813, 0, !dbg !3938
  %3815 = load i32, i32* @x.63
  %3816 = load i32, i32* @y.64
  %3817 = sub i32 %3815, 1
  %3818 = mul i32 %3815, %3817
  %3819 = urem i32 %3818, 2
  %3820 = icmp eq i32 %3819, 0
  %3821 = icmp slt i32 %3816, 10
  %3822 = or i1 %3820, %3821
  br i1 %3822, label %originalBBpart2947, label %originalBB945alteredBB

originalBBpart2947:                               ; preds = %originalBB945
  br i1 %3814, label %3860, label %3823, !dbg !3940

3823:                                             ; preds = %originalBBpart2947
  %3824 = load i32, i32* @x.63
  %3825 = load i32, i32* @y.64
  %3826 = sub i32 %3824, 1
  %3827 = mul i32 %3824, %3826
  %3828 = urem i32 %3827, 2
  %3829 = icmp eq i32 %3828, 0
  %3830 = icmp slt i32 %3825, 10
  %3831 = or i1 %3829, %3830
  br i1 %3831, label %originalBB949, label %originalBB949alteredBB

originalBB949:                                    ; preds = %3823, %originalBB949alteredBB
  %3832 = load i64, i64* %22, align 8, !dbg !3941
  %3833 = icmp ne i64 %3832, 0, !dbg !3941
  %3834 = load i32, i32* @x.63
  %3835 = load i32, i32* @y.64
  %3836 = sub i32 %3834, 1
  %3837 = mul i32 %3834, %3836
  %3838 = urem i32 %3837, 2
  %3839 = icmp eq i32 %3838, 0
  %3840 = icmp slt i32 %3835, 10
  %3841 = or i1 %3839, %3840
  br i1 %3841, label %originalBBpart2951, label %originalBB949alteredBB

originalBBpart2951:                               ; preds = %originalBB949
  br i1 %3833, label %3842, label %3860, !dbg !3942

3842:                                             ; preds = %originalBBpart2951
  %3843 = load i32, i32* @x.63
  %3844 = load i32, i32* @y.64
  %3845 = sub i32 %3843, 1
  %3846 = mul i32 %3843, %3845
  %3847 = urem i32 %3846, 2
  %3848 = icmp eq i32 %3847, 0
  %3849 = icmp slt i32 %3844, 10
  %3850 = or i1 %3848, %3849
  br i1 %3850, label %originalBB953, label %originalBB953alteredBB

originalBB953:                                    ; preds = %3842, %originalBB953alteredBB
  %3851 = load i64, i64* %22, align 8, !dbg !3943
  store i64 %3851, i64* %12, align 8, !dbg !3945
  store i64 0, i64* %21, align 8, !dbg !3946
  %3852 = load i32, i32* @x.63
  %3853 = load i32, i32* @y.64
  %3854 = sub i32 %3852, 1
  %3855 = mul i32 %3852, %3854
  %3856 = urem i32 %3855, 2
  %3857 = icmp eq i32 %3856, 0
  %3858 = icmp slt i32 %3853, 10
  %3859 = or i1 %3857, %3858
  br i1 %3859, label %originalBBpart2955, label %originalBB953alteredBB

originalBBpart2955:                               ; preds = %originalBB953
  br label %50, !dbg !3947

3860:                                             ; preds = %originalBBpart2951, %originalBBpart2947
  br label %3861

3861:                                             ; preds = %3860
  br label %3862, !dbg !3948

3862:                                             ; preds = %3861, %originalBBpart2939, %3753, %3750
  %3863 = load i8*, i8** %23, align 8, !dbg !3949
  %3864 = icmp ne i8* %3863, null, !dbg !3949
  br i1 %3864, label %3865, label %3972, !dbg !3951

3865:                                             ; preds = %3862
  %3866 = load i8, i8* %27, align 1, !dbg !3952
  %3867 = trunc i8 %3866 to i1, !dbg !3952
  br i1 %3867, label %3972, label %3868, !dbg !3953

3868:                                             ; preds = %3865
  br label %3869, !dbg !3954

3869:                                             ; preds = %3968, %3868
  %3870 = load i32, i32* @x.63
  %3871 = load i32, i32* @y.64
  %3872 = sub i32 %3870, 1
  %3873 = mul i32 %3870, %3872
  %3874 = urem i32 %3873, 2
  %3875 = icmp eq i32 %3874, 0
  %3876 = icmp slt i32 %3871, 10
  %3877 = or i1 %3875, %3876
  br i1 %3877, label %originalBB957, label %originalBB957alteredBB

originalBB957:                                    ; preds = %3869, %originalBB957alteredBB
  %3878 = load i8*, i8** %23, align 8, !dbg !3955
  %3879 = load i8, i8* %3878, align 1, !dbg !3958
  %3880 = icmp ne i8 %3879, 0, !dbg !3959
  %3881 = load i32, i32* @x.63
  %3882 = load i32, i32* @y.64
  %3883 = sub i32 %3881, 1
  %3884 = mul i32 %3881, %3883
  %3885 = urem i32 %3884, 2
  %3886 = icmp eq i32 %3885, 0
  %3887 = icmp slt i32 %3882, 10
  %3888 = or i1 %3886, %3887
  br i1 %3888, label %originalBBpart2959, label %originalBB957alteredBB

originalBBpart2959:                               ; preds = %originalBB957
  br i1 %3880, label %3889, label %3971, !dbg !3959

3889:                                             ; preds = %originalBBpart2959
  %3890 = load i32, i32* @x.63
  %3891 = load i32, i32* @y.64
  %3892 = sub i32 %3890, 1
  %3893 = mul i32 %3890, %3892
  %3894 = urem i32 %3893, 2
  %3895 = icmp eq i32 %3894, 0
  %3896 = icmp slt i32 %3891, 10
  %3897 = or i1 %3895, %3896
  br i1 %3897, label %originalBB961, label %originalBB961alteredBB

originalBB961:                                    ; preds = %3889, %originalBB961alteredBB
  %3898 = load i32, i32* @x.63
  %3899 = load i32, i32* @y.64
  %3900 = sub i32 %3898, 1
  %3901 = mul i32 %3898, %3900
  %3902 = urem i32 %3901, 2
  %3903 = icmp eq i32 %3902, 0
  %3904 = icmp slt i32 %3899, 10
  %3905 = or i1 %3903, %3904
  br i1 %3905, label %originalBBpart2963, label %originalBB961alteredBB

originalBBpart2963:                               ; preds = %originalBB961
  br label %3906, !dbg !3960

3906:                                             ; preds = %originalBBpart2963
  %3907 = load i32, i32* @x.63
  %3908 = load i32, i32* @y.64
  %3909 = sub i32 %3907, 1
  %3910 = mul i32 %3907, %3909
  %3911 = urem i32 %3910, 2
  %3912 = icmp eq i32 %3911, 0
  %3913 = icmp slt i32 %3908, 10
  %3914 = or i1 %3912, %3913
  br i1 %3914, label %originalBB965, label %originalBB965alteredBB

originalBB965:                                    ; preds = %3906, %originalBB965alteredBB
  %3915 = load i64, i64* %21, align 8, !dbg !3961
  %3916 = load i64, i64* %12, align 8, !dbg !3961
  %3917 = icmp ult i64 %3915, %3916, !dbg !3961
  %3918 = load i32, i32* @x.63
  %3919 = load i32, i32* @y.64
  %3920 = sub i32 %3918, 1
  %3921 = mul i32 %3918, %3920
  %3922 = urem i32 %3921, 2
  %3923 = icmp eq i32 %3922, 0
  %3924 = icmp slt i32 %3919, 10
  %3925 = or i1 %3923, %3924
  br i1 %3925, label %originalBBpart2967, label %originalBB965alteredBB

originalBBpart2967:                               ; preds = %originalBB965
  br i1 %3917, label %3926, label %3948, !dbg !3964

3926:                                             ; preds = %originalBBpart2967
  %3927 = load i32, i32* @x.63
  %3928 = load i32, i32* @y.64
  %3929 = sub i32 %3927, 1
  %3930 = mul i32 %3927, %3929
  %3931 = urem i32 %3930, 2
  %3932 = icmp eq i32 %3931, 0
  %3933 = icmp slt i32 %3928, 10
  %3934 = or i1 %3932, %3933
  br i1 %3934, label %originalBB969, label %originalBB969alteredBB

originalBB969:                                    ; preds = %3926, %originalBB969alteredBB
  %3935 = load i8*, i8** %23, align 8, !dbg !3961
  %3936 = load i8, i8* %3935, align 1, !dbg !3961
  %3937 = load i8*, i8** %11, align 8, !dbg !3961
  %3938 = load i64, i64* %21, align 8, !dbg !3961
  %3939 = getelementptr inbounds i8, i8* %3937, i64 %3938, !dbg !3961
  store i8 %3936, i8* %3939, align 1, !dbg !3961
  %3940 = load i32, i32* @x.63
  %3941 = load i32, i32* @y.64
  %3942 = sub i32 %3940, 1
  %3943 = mul i32 %3940, %3942
  %3944 = urem i32 %3943, 2
  %3945 = icmp eq i32 %3944, 0
  %3946 = icmp slt i32 %3941, 10
  %3947 = or i1 %3945, %3946
  br i1 %3947, label %originalBBpart2971, label %originalBB969alteredBB

originalBBpart2971:                               ; preds = %originalBB969
  br label %3948, !dbg !3961

3948:                                             ; preds = %originalBBpart2971, %originalBBpart2967
  %3949 = load i32, i32* @x.63
  %3950 = load i32, i32* @y.64
  %3951 = sub i32 %3949, 1
  %3952 = mul i32 %3949, %3951
  %3953 = urem i32 %3952, 2
  %3954 = icmp eq i32 %3953, 0
  %3955 = icmp slt i32 %3950, 10
  %3956 = or i1 %3954, %3955
  br i1 %3956, label %originalBB973, label %originalBB973alteredBB

originalBB973:                                    ; preds = %3948, %originalBB973alteredBB
  %3957 = load i64, i64* %21, align 8, !dbg !3964
  %3958 = add i64 %3957, 1, !dbg !3964
  store i64 %3958, i64* %21, align 8, !dbg !3964
  %3959 = load i32, i32* @x.63
  %3960 = load i32, i32* @y.64
  %3961 = sub i32 %3959, 1
  %3962 = mul i32 %3959, %3961
  %3963 = urem i32 %3962, 2
  %3964 = icmp eq i32 %3963, 0
  %3965 = icmp slt i32 %3960, 10
  %3966 = or i1 %3964, %3965
  br i1 %3966, label %originalBBpart2982, label %originalBB973alteredBB

originalBBpart2982:                               ; preds = %originalBB973
  br label %3967, !dbg !3964

3967:                                             ; preds = %originalBBpart2982
  br label %3968, !dbg !3964

3968:                                             ; preds = %3967
  %3969 = load i8*, i8** %23, align 8, !dbg !3965
  %3970 = getelementptr inbounds i8, i8* %3969, i32 1, !dbg !3965
  store i8* %3970, i8** %23, align 8, !dbg !3965
  br label %3869, !dbg !3966, !llvm.loop !3967

3971:                                             ; preds = %originalBBpart2959
  br label %3972, !dbg !3968

3972:                                             ; preds = %3971, %3865, %3862
  %3973 = load i64, i64* %21, align 8, !dbg !3969
  %3974 = load i64, i64* %12, align 8, !dbg !3971
  %3975 = icmp ult i64 %3973, %3974, !dbg !3972
  br i1 %3975, label %3976, label %3980, !dbg !3973

3976:                                             ; preds = %3972
  %3977 = load i8*, i8** %11, align 8, !dbg !3974
  %3978 = load i64, i64* %21, align 8, !dbg !3975
  %3979 = getelementptr inbounds i8, i8* %3977, i64 %3978, !dbg !3974
  store i8 0, i8* %3979, align 1, !dbg !3976
  br label %3980, !dbg !3974

3980:                                             ; preds = %3976, %3972
  %3981 = load i32, i32* @x.63
  %3982 = load i32, i32* @y.64
  %3983 = sub i32 %3981, 1
  %3984 = mul i32 %3981, %3983
  %3985 = urem i32 %3984, 2
  %3986 = icmp eq i32 %3985, 0
  %3987 = icmp slt i32 %3982, 10
  %3988 = or i1 %3986, %3987
  br i1 %3988, label %originalBB984, label %originalBB984alteredBB

originalBB984:                                    ; preds = %3980, %originalBB984alteredBB
  %3989 = load i64, i64* %21, align 8, !dbg !3977
  store i64 %3989, i64* %10, align 8, !dbg !3978
  %3990 = load i32, i32* @x.63
  %3991 = load i32, i32* @y.64
  %3992 = sub i32 %3990, 1
  %3993 = mul i32 %3990, %3992
  %3994 = urem i32 %3993, 2
  %3995 = icmp eq i32 %3994, 0
  %3996 = icmp slt i32 %3991, 10
  %3997 = or i1 %3995, %3996
  br i1 %3997, label %originalBBpart2986, label %originalBB984alteredBB

originalBBpart2986:                               ; preds = %originalBB984
  br label %4064, !dbg !3978

3998:                                             ; preds = %originalBBpart2935, %originalBBpart2811, %originalBBpart2589, %originalBBpart2557, %1920, %1880, %1686, %originalBBpart2355, %originalBBpart2310, %originalBBpart2286, %originalBBpart2148, %675
  call void @llvm.dbg.label(metadata !3979), !dbg !3980
  %3999 = load i32, i32* @x.63
  %4000 = load i32, i32* @y.64
  %4001 = sub i32 %3999, 1
  %4002 = mul i32 %3999, %4001
  %4003 = urem i32 %4002, 2
  %4004 = icmp eq i32 %4003, 0
  %4005 = icmp slt i32 %4000, 10
  %4006 = or i1 %4004, %4005
  br i1 %4006, label %originalBB988, label %originalBB988alteredBB

originalBB988:                                    ; preds = %3998, %originalBB988alteredBB
  %4007 = load i32, i32* %15, align 4, !dbg !3981
  %4008 = icmp eq i32 %4007, 2, !dbg !3983
  %4009 = load i32, i32* @x.63
  %4010 = load i32, i32* @y.64
  %4011 = sub i32 %4009, 1
  %4012 = mul i32 %4009, %4011
  %4013 = urem i32 %4012, 2
  %4014 = icmp eq i32 %4013, 0
  %4015 = icmp slt i32 %4010, 10
  %4016 = or i1 %4014, %4015
  br i1 %4016, label %originalBBpart2990, label %originalBB988alteredBB

originalBBpart2990:                               ; preds = %originalBB988
  br i1 %4008, label %4017, label %4053, !dbg !3984

4017:                                             ; preds = %originalBBpart2990
  %4018 = load i32, i32* @x.63
  %4019 = load i32, i32* @y.64
  %4020 = sub i32 %4018, 1
  %4021 = mul i32 %4018, %4020
  %4022 = urem i32 %4021, 2
  %4023 = icmp eq i32 %4022, 0
  %4024 = icmp slt i32 %4019, 10
  %4025 = or i1 %4023, %4024
  br i1 %4025, label %originalBB992, label %originalBB992alteredBB

originalBB992:                                    ; preds = %4017, %originalBB992alteredBB
  %4026 = load i8, i8* %25, align 1, !dbg !3985
  %4027 = trunc i8 %4026 to i1, !dbg !3985
  %4028 = load i32, i32* @x.63
  %4029 = load i32, i32* @y.64
  %4030 = sub i32 %4028, 1
  %4031 = mul i32 %4028, %4030
  %4032 = urem i32 %4031, 2
  %4033 = icmp eq i32 %4032, 0
  %4034 = icmp slt i32 %4029, 10
  %4035 = or i1 %4033, %4034
  br i1 %4035, label %originalBBpart2994, label %originalBB992alteredBB

originalBBpart2994:                               ; preds = %originalBB992
  br i1 %4027, label %4036, label %4053, !dbg !3986

4036:                                             ; preds = %originalBBpart2994
  %4037 = load i32, i32* @x.63
  %4038 = load i32, i32* @y.64
  %4039 = sub i32 %4037, 1
  %4040 = mul i32 %4037, %4039
  %4041 = urem i32 %4040, 2
  %4042 = icmp eq i32 %4041, 0
  %4043 = icmp slt i32 %4038, 10
  %4044 = or i1 %4042, %4043
  br i1 %4044, label %originalBB996, label %originalBB996alteredBB

originalBB996:                                    ; preds = %4036, %originalBB996alteredBB
  store i32 4, i32* %15, align 4, !dbg !3987
  %4045 = load i32, i32* @x.63
  %4046 = load i32, i32* @y.64
  %4047 = sub i32 %4045, 1
  %4048 = mul i32 %4045, %4047
  %4049 = urem i32 %4048, 2
  %4050 = icmp eq i32 %4049, 0
  %4051 = icmp slt i32 %4046, 10
  %4052 = or i1 %4050, %4051
  br i1 %4052, label %originalBBpart2998, label %originalBB996alteredBB

originalBBpart2998:                               ; preds = %originalBB996
  br label %4053, !dbg !3988

4053:                                             ; preds = %originalBBpart2998, %originalBBpart2994, %originalBBpart2990
  %4054 = load i8*, i8** %11, align 8, !dbg !3989
  %4055 = load i64, i64* %12, align 8, !dbg !3990
  %4056 = load i8*, i8** %13, align 8, !dbg !3991
  %4057 = load i64, i64* %14, align 8, !dbg !3992
  %4058 = load i32, i32* %15, align 4, !dbg !3993
  %4059 = load i32, i32* %16, align 4, !dbg !3994
  %4060 = and i32 %4059, -3, !dbg !3995
  %4061 = load i8*, i8** %18, align 8, !dbg !3996
  %4062 = load i8*, i8** %19, align 8, !dbg !3997
  %4063 = call i64 @quotearg_buffer_restyled(i8* %4054, i64 %4055, i8* %4056, i64 %4057, i32 %4058, i32 %4060, i32* null, i8* %4061, i8* %4062), !dbg !3998
  store i64 %4063, i64* %10, align 8, !dbg !3999
  br label %4064, !dbg !3999

4064:                                             ; preds = %4053, %originalBBpart2986, %3794
  %4065 = load i64, i64* %10, align 8, !dbg !4000
  ret i64 %4065, !dbg !4000

originalBBalteredBB:                              ; preds = %originalBB, %50
  %4066 = load i32, i32* %15, align 4, !dbg !3171
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %68
  store i32 5, i32* %15, align 4, !dbg !3173
  store i8 1, i8* %27, align 1, !dbg !3175
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %88
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %105
  %4067 = load i64, i64* %21, align 8, !dbg !3181
  %4068 = load i64, i64* %12, align 8, !dbg !3181
  %4069 = icmp ult i64 %4067, %4068, !dbg !3181
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %125
  %4070 = load i8*, i8** %11, align 8, !dbg !3181
  %4071 = load i64, i64* %21, align 8, !dbg !3181
  %4072 = getelementptr inbounds i8, i8* %4070, i64 %4071, !dbg !3181
  store i8 34, i8* %4072, align 1, !dbg !3181
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %145
  %4073 = load i64, i64* %21, align 8, !dbg !3184
  %_ = sub i64 0, %4073
  %gen = add i64 %_, 1
  %_19 = sub i64 %4073, 1
  %gen20 = mul i64 %_19, 1
  %_21 = sub i64 0, %4073
  %gen22 = add i64 %_21, 1
  %_23 = sub i64 %4073, 1
  %gen24 = mul i64 %_23, 1
  %4074 = add i64 %4073, 1, !dbg !3184
  store i64 %4074, i64* %21, align 8, !dbg !3184
  br label %originalBB18

originalBB29alteredBB:                            ; preds = %originalBB29, %164
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %182
  store i8 1, i8* %25, align 1, !dbg !3189
  store i8 0, i8* %27, align 1, !dbg !3190
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %199
  %4075 = load i32, i32* %15, align 4, !dbg !3192
  %4076 = icmp ne i32 %4075, 10, !dbg !3195
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %223
  %4077 = load i8, i8* %27, align 1, !dbg !3205
  %4078 = trunc i8 %4077 to i1, !dbg !3205
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %242
  %4079 = load i8*, i8** %18, align 8, !dbg !3208
  store i8* %4079, i8** %23, align 8, !dbg !3210
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %264
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %294
  br label %originalBB53

originalBB57alteredBB:                            ; preds = %originalBB57, %319
  store i8 1, i8* %25, align 1, !dbg !3232
  br label %originalBB57

originalBB61alteredBB:                            ; preds = %originalBB61, %342
  store i32 2, i32* %15, align 4, !dbg !3242
  %4080 = load i8, i8* %27, align 1, !dbg !3243
  %4081 = trunc i8 %4080 to i1, !dbg !3243
  br label %originalBB61

originalBB65alteredBB:                            ; preds = %originalBB65, %361
  br label %originalBB65

originalBB69alteredBB:                            ; preds = %originalBB69, %378
  %4082 = load i64, i64* %21, align 8, !dbg !3247
  %4083 = load i64, i64* %12, align 8, !dbg !3247
  %4084 = icmp ult i64 %4082, %4083, !dbg !3247
  br label %originalBB69

originalBB73alteredBB:                            ; preds = %originalBB73, %398
  %4085 = load i8*, i8** %11, align 8, !dbg !3247
  %4086 = load i64, i64* %21, align 8, !dbg !3247
  %4087 = getelementptr inbounds i8, i8* %4085, i64 %4086, !dbg !3247
  store i8 39, i8* %4087, align 1, !dbg !3247
  br label %originalBB73

originalBB77alteredBB:                            ; preds = %originalBB77, %421
  br label %originalBB77

originalBB81alteredBB:                            ; preds = %originalBB81, %438
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.122, i64 0, i64 0), i8** %23, align 8, !dbg !3251
  store i64 1, i64* %24, align 8, !dbg !3252
  br label %originalBB81

originalBB85alteredBB:                            ; preds = %originalBB85, %456
  call void @abort() #12, !dbg !3256
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %474
  %4088 = load i64, i64* %14, align 8, !dbg !3260
  %4089 = icmp eq i64 %4088, -1, !dbg !3262
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %506
  %4090 = icmp ne i32 %507, 0, !dbg !3269
  %_94 = shl i1 %4090, true
  %4091 = xor i1 %4090, true, !dbg !3269
  br label %originalBB93

originalBB98alteredBB:                            ; preds = %originalBB98, %526
  store i8 0, i8* %33, align 1, !dbg !3277
  call void @llvm.dbg.declare(metadata !4, metadata !4001, metadata !DIExpression()), !dbg !3279
  store i8 0, i8* %34, align 1, !dbg !3279
  call void @llvm.dbg.declare(metadata !4, metadata !4036, metadata !DIExpression()), !dbg !3281
  store i8 0, i8* %35, align 1, !dbg !3281
  %4092 = load i8, i8* %25, align 1, !dbg !3282
  %4093 = trunc i8 %4092 to i1, !dbg !3282
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %545
  %4094 = load i32, i32* %15, align 4, !dbg !3285
  %4095 = icmp ne i32 %4094, 2, !dbg !3286
  br label %originalBB102

originalBB106alteredBB:                           ; preds = %originalBB106, %564
  %4096 = load i64, i64* %24, align 8, !dbg !3288
  %4097 = icmp ne i64 %4096, 0, !dbg !3288
  br label %originalBB106

originalBB110alteredBB:                           ; preds = %originalBB110, %583
  %4098 = load i64, i64* %20, align 8, !dbg !3290
  %4099 = load i64, i64* %24, align 8, !dbg !3291
  %_111 = sub i64 %4098, %4099
  %gen112 = mul i64 %_111, %4099
  %_113 = sub i64 0, %4098
  %gen114 = add i64 %_113, %4099
  %_115 = sub i64 %4098, %4099
  %gen116 = mul i64 %_115, %4099
  %_117 = shl i64 %4098, %4099
  %_118 = sub i64 0, %4098
  %gen119 = add i64 %_118, %4099
  %_120 = shl i64 %4098, %4099
  %_121 = sub i64 %4098, %4099
  %gen122 = mul i64 %_121, %4099
  %4100 = add i64 %4098, %4099, !dbg !3292
  %4101 = load i64, i64* %14, align 8, !dbg !3293
  %4102 = icmp eq i64 %4101, -1, !dbg !3294
  br label %originalBB110

originalBB126alteredBB:                           ; preds = %originalBB126, %608
  %4103 = load i8*, i8** %13, align 8, !dbg !3298
  %4104 = call i64 @strlen(i8* %4103) #13, !dbg !3299
  store i64 %4104, i64* %14, align 8, !dbg !3300
  br label %originalBB126

originalBB130alteredBB:                           ; preds = %originalBB130, %627
  %4105 = load i64, i64* %14, align 8, !dbg !3301
  br label %originalBB130

originalBB134alteredBB:                           ; preds = %originalBB134, %648
  %4106 = load i8*, i8** %13, align 8, !dbg !3304
  %4107 = load i64, i64* %20, align 8, !dbg !3305
  %4108 = getelementptr inbounds i8, i8* %4106, i64 %4107, !dbg !3306
  %4109 = load i8*, i8** %23, align 8, !dbg !3307
  %4110 = load i64, i64* %24, align 8, !dbg !3308
  %4111 = call i32 @memcmp(i8* %4108, i8* %4109, i64 %4110) #13, !dbg !3309
  %4112 = icmp eq i32 %4111, 0, !dbg !3310
  br label %originalBB134

originalBB138alteredBB:                           ; preds = %originalBB138, %684
  %4113 = load i8, i8* %25, align 1, !dbg !3324
  %4114 = trunc i8 %4113 to i1, !dbg !3324
  br label %originalBB138

originalBB142alteredBB:                           ; preds = %originalBB142, %703
  br label %originalBB142

originalBB146alteredBB:                           ; preds = %originalBB146, %723
  br label %originalBB146

originalBB150alteredBB:                           ; preds = %originalBB150, %746
  br label %originalBB150

originalBB154alteredBB:                           ; preds = %originalBB154, %771
  %4115 = load i64, i64* %21, align 8, !dbg !3341
  %_155 = sub i64 0, %4115
  %gen156 = add i64 %_155, 1
  %_157 = shl i64 %4115, 1
  %_158 = sub i64 0, %4115
  %gen159 = add i64 %_158, 1
  %_160 = sub i64 0, %4115
  %gen161 = add i64 %_160, 1
  %_162 = shl i64 %4115, 1
  %4116 = add i64 %4115, 1, !dbg !3341
  store i64 %4116, i64* %21, align 8, !dbg !3341
  br label %originalBB154

originalBB166alteredBB:                           ; preds = %originalBB166, %790
  br label %originalBB166

originalBB170alteredBB:                           ; preds = %originalBB170, %811
  %4117 = load i8*, i8** %11, align 8, !dbg !3342
  %4118 = load i64, i64* %21, align 8, !dbg !3342
  %4119 = getelementptr inbounds i8, i8* %4117, i64 %4118, !dbg !3342
  store i8 36, i8* %4119, align 1, !dbg !3342
  br label %originalBB170

originalBB174alteredBB:                           ; preds = %originalBB174, %831
  %4120 = load i64, i64* %21, align 8, !dbg !3345
  %_175 = sub i64 %4120, 1
  %gen176 = mul i64 %_175, 1
  %_177 = shl i64 %4120, 1
  %4121 = add i64 %4120, 1, !dbg !3345
  store i64 %4121, i64* %21, align 8, !dbg !3345
  br label %originalBB174

originalBB181alteredBB:                           ; preds = %originalBB181, %855
  %4122 = load i8*, i8** %11, align 8, !dbg !3346
  %4123 = load i64, i64* %21, align 8, !dbg !3346
  %4124 = getelementptr inbounds i8, i8* %4122, i64 %4123, !dbg !3346
  store i8 39, i8* %4124, align 1, !dbg !3346
  br label %originalBB181

originalBB185alteredBB:                           ; preds = %originalBB185, %878
  store i8 1, i8* %28, align 1, !dbg !3336
  br label %originalBB185

originalBB189alteredBB:                           ; preds = %originalBB189, %895
  br label %originalBB189

originalBB193alteredBB:                           ; preds = %originalBB193, %923
  br label %originalBB193

originalBB197alteredBB:                           ; preds = %originalBB197, %940
  %4125 = load i32, i32* %15, align 4, !dbg !3354
  %4126 = icmp ne i32 %4125, 2, !dbg !3356
  br label %originalBB197

originalBB201alteredBB:                           ; preds = %originalBB201, %959
  %4127 = load i64, i64* %20, align 8, !dbg !3358
  %_202 = sub i64 %4127, 1
  %gen203 = mul i64 %_202, 1
  %_204 = shl i64 %4127, 1
  %_205 = sub i64 %4127, 1
  %gen206 = mul i64 %_205, 1
  %_207 = shl i64 %4127, 1
  %_208 = sub i64 %4127, 1
  %gen209 = mul i64 %_208, 1
  %4128 = add i64 %4127, 1, !dbg !3359
  %4129 = load i64, i64* %14, align 8, !dbg !3360
  %4130 = icmp ult i64 %4128, %4129, !dbg !3361
  br label %originalBB201

originalBB213alteredBB:                           ; preds = %originalBB213, %980
  %4131 = load i8*, i8** %13, align 8, !dbg !3363
  %4132 = load i64, i64* %20, align 8, !dbg !3364
  %_214 = sub i64 0, %4132
  %gen215 = add i64 %_214, 1
  %_216 = sub i64 %4132, 1
  %gen217 = mul i64 %_216, 1
  %_218 = sub i64 %4132, 1
  %gen219 = mul i64 %_218, 1
  %_220 = sub i64 0, %4132
  %gen221 = add i64 %_220, 1
  %_222 = sub i64 0, %4132
  %gen223 = add i64 %_222, 1
  %4133 = add i64 %4132, 1, !dbg !3365
  %4134 = getelementptr inbounds i8, i8* %4131, i64 %4133, !dbg !3363
  %4135 = load i8, i8* %4134, align 1, !dbg !3363
  %4136 = sext i8 %4135 to i32, !dbg !3363
  %4137 = icmp sle i32 48, %4136, !dbg !3366
  br label %originalBB213

originalBB227alteredBB:                           ; preds = %originalBB227, %1004
  %4138 = load i8*, i8** %13, align 8, !dbg !3368
  %4139 = load i64, i64* %20, align 8, !dbg !3369
  %_228 = shl i64 %4139, 1
  %_229 = sub i64 %4139, 1
  %gen230 = mul i64 %_229, 1
  %_231 = sub i64 %4139, 1
  %gen232 = mul i64 %_231, 1
  %4140 = add i64 %4139, 1, !dbg !3370
  %4141 = getelementptr inbounds i8, i8* %4138, i64 %4140, !dbg !3368
  %4142 = load i8, i8* %4141, align 1, !dbg !3368
  %4143 = sext i8 %4142 to i32, !dbg !3368
  %4144 = icmp sle i32 %4143, 57, !dbg !3371
  br label %originalBB227

originalBB236alteredBB:                           ; preds = %originalBB236, %1028
  br label %originalBB236

originalBB240alteredBB:                           ; preds = %originalBB240, %1045
  %4145 = load i64, i64* %21, align 8, !dbg !3375
  %4146 = load i64, i64* %12, align 8, !dbg !3375
  %4147 = icmp ult i64 %4145, %4146, !dbg !3375
  br label %originalBB240

originalBB244alteredBB:                           ; preds = %originalBB244, %1072
  br label %originalBB244

originalBB248alteredBB:                           ; preds = %originalBB248, %1100
  br label %originalBB248

originalBB252alteredBB:                           ; preds = %originalBB252, %1117
  store i8 48, i8* %31, align 1, !dbg !3385
  br label %originalBB252

originalBB256alteredBB:                           ; preds = %originalBB256, %1134
  %4148 = load i32, i32* %16, align 4, !dbg !3387
  %_257 = shl i32 %4148, 1
  %_258 = sub i32 %4148, 1
  %gen259 = mul i32 %_258, 1
  %_260 = shl i32 %4148, 1
  %_261 = sub i32 0, %4148
  %gen262 = add i32 %_261, 1
  %_263 = sub i32 0, %4148
  %gen264 = add i32 %_263, 1
  %4149 = and i32 %4148, 1, !dbg !3389
  %4150 = icmp ne i32 %4149, 0, !dbg !3389
  br label %originalBB256

originalBB268alteredBB:                           ; preds = %originalBB268, %1154
  br label %originalBB268

originalBB272alteredBB:                           ; preds = %originalBB272, %1171
  br label %originalBB272

originalBB276alteredBB:                           ; preds = %originalBB276, %1188
  br label %originalBB276

originalBB280alteredBB:                           ; preds = %originalBB280, %1205
  %4151 = load i32, i32* %15, align 4, !dbg !3393
  br label %originalBB280

originalBB284alteredBB:                           ; preds = %originalBB284, %1226
  br label %originalBB284

originalBB288alteredBB:                           ; preds = %originalBB288, %1248
  %4152 = load i64, i64* %20, align 8, !dbg !3405
  %_289 = sub i64 %4152, 2
  %gen290 = mul i64 %_289, 2
  %_291 = shl i64 %4152, 2
  %4153 = add i64 %4152, 2, !dbg !3406
  %4154 = load i64, i64* %14, align 8, !dbg !3407
  %4155 = icmp ult i64 %4153, %4154, !dbg !3408
  br label %originalBB288

originalBB296alteredBB:                           ; preds = %originalBB296, %1269
  %4156 = load i8*, i8** %13, align 8, !dbg !3410
  %4157 = load i64, i64* %20, align 8, !dbg !3411
  %_297 = sub i64 0, %4157
  %gen298 = add i64 %_297, 1
  %_299 = sub i64 0, %4157
  %gen300 = add i64 %_299, 1
  %4158 = add i64 %4157, 1, !dbg !3412
  %4159 = getelementptr inbounds i8, i8* %4156, i64 %4158, !dbg !3410
  %4160 = load i8, i8* %4159, align 1, !dbg !3410
  %4161 = sext i8 %4160 to i32, !dbg !3410
  %4162 = icmp eq i32 %4161, 63, !dbg !3413
  br label %originalBB296

originalBB304alteredBB:                           ; preds = %originalBB304, %1300
  %4163 = load i8, i8* %27, align 1, !dbg !3419
  %4164 = trunc i8 %4163 to i1, !dbg !3419
  br label %originalBB304

originalBB308alteredBB:                           ; preds = %originalBB308, %1319
  br label %originalBB308

originalBB312alteredBB:                           ; preds = %originalBB312, %1352
  %4165 = load i64, i64* %21, align 8, !dbg !3433
  %_313 = shl i64 %4165, 1
  %4166 = add i64 %4165, 1, !dbg !3433
  store i64 %4166, i64* %21, align 8, !dbg !3433
  br label %originalBB312

originalBB317alteredBB:                           ; preds = %originalBB317, %1371
  br label %originalBB317

originalBB321alteredBB:                           ; preds = %originalBB321, %1392
  %4167 = load i8*, i8** %11, align 8, !dbg !3435
  %4168 = load i64, i64* %21, align 8, !dbg !3435
  %4169 = getelementptr inbounds i8, i8* %4167, i64 %4168, !dbg !3435
  store i8 34, i8* %4169, align 1, !dbg !3435
  br label %originalBB321

originalBB325alteredBB:                           ; preds = %originalBB325, %1416
  %4170 = load i64, i64* %21, align 8, !dbg !3440
  %4171 = load i64, i64* %12, align 8, !dbg !3440
  %4172 = icmp ult i64 %4170, %4171, !dbg !3440
  br label %originalBB325

originalBB329alteredBB:                           ; preds = %originalBB329, %1443
  br label %originalBB329

originalBB333alteredBB:                           ; preds = %originalBB333, %1460
  %4173 = load i64, i64* %21, align 8, !dbg !3445
  %4174 = load i64, i64* %12, align 8, !dbg !3445
  %4175 = icmp ult i64 %4173, %4174, !dbg !3445
  br label %originalBB333

originalBB337alteredBB:                           ; preds = %originalBB337, %1489
  br label %originalBB337

originalBB341alteredBB:                           ; preds = %originalBB341, %1508
  br label %originalBB341

originalBB345alteredBB:                           ; preds = %originalBB345, %1529
  store i8 114, i8* %32, align 1, !dbg !3463
  br label %originalBB345

originalBB349alteredBB:                           ; preds = %originalBB349, %1552
  %4176 = load i8, i8* %27, align 1, !dbg !3475
  %4177 = trunc i8 %4176 to i1, !dbg !3475
  br label %originalBB349

originalBB353alteredBB:                           ; preds = %originalBB353, %1571
  br label %originalBB353

originalBB357alteredBB:                           ; preds = %originalBB357, %1589
  %4178 = load i8, i8* %25, align 1, !dbg !3481
  %4179 = trunc i8 %4178 to i1, !dbg !3481
  br label %originalBB357

originalBB361alteredBB:                           ; preds = %originalBB361, %1611
  %4180 = load i64, i64* %24, align 8, !dbg !3486
  %4181 = icmp ne i64 %4180, 0, !dbg !3486
  br label %originalBB361

originalBB365alteredBB:                           ; preds = %originalBB365, %1631
  br label %originalBB365

originalBB369alteredBB:                           ; preds = %originalBB369, %1648
  %4182 = load i32, i32* %15, align 4, !dbg !3491
  %4183 = icmp eq i32 %4182, 2, !dbg !3493
  br label %originalBB369

originalBB373alteredBB:                           ; preds = %originalBB373, %1667
  %4184 = load i8, i8* %27, align 1, !dbg !3495
  %4185 = trunc i8 %4184 to i1, !dbg !3495
  br label %originalBB373

originalBB377alteredBB:                           ; preds = %originalBB377, %1687
  br label %originalBB377

originalBB381alteredBB:                           ; preds = %originalBB381, %1704
  %4186 = load i8, i8* %25, align 1, !dbg !3500
  %4187 = trunc i8 %4186 to i1, !dbg !3500
  br label %originalBB381

originalBB385alteredBB:                           ; preds = %originalBB385, %1725
  br label %originalBB385

originalBB389alteredBB:                           ; preds = %originalBB389, %1742
  %4188 = load i64, i64* %14, align 8, !dbg !3508
  %4189 = icmp eq i64 %4188, -1, !dbg !3510
  br label %originalBB389

originalBB393alteredBB:                           ; preds = %originalBB393, %1761
  %4190 = load i8*, i8** %13, align 8, !dbg !3512
  %4191 = getelementptr inbounds i8, i8* %4190, i64 1, !dbg !3512
  %4192 = load i8, i8* %4191, align 1, !dbg !3512
  %4193 = sext i8 %4192 to i32, !dbg !3512
  %4194 = icmp eq i32 %4193, 0, !dbg !3513
  br label %originalBB393

originalBB397alteredBB:                           ; preds = %originalBB397, %1786
  br label %originalBB397

originalBB401alteredBB:                           ; preds = %originalBB401, %1803
  br label %originalBB401

originalBB405alteredBB:                           ; preds = %originalBB405, %1825
  store i8 1, i8* %35, align 1, !dbg !3524
  br label %originalBB405

originalBB409alteredBB:                           ; preds = %originalBB409, %1842
  %4195 = load i32, i32* %15, align 4, !dbg !3526
  %4196 = icmp eq i32 %4195, 2, !dbg !3528
  br label %originalBB409

originalBB413alteredBB:                           ; preds = %originalBB413, %1861
  %4197 = load i8, i8* %27, align 1, !dbg !3530
  %4198 = trunc i8 %4197 to i1, !dbg !3530
  br label %originalBB413

originalBB417alteredBB:                           ; preds = %originalBB417, %1882
  store i8 1, i8* %29, align 1, !dbg !3534
  store i8 1, i8* %35, align 1, !dbg !3535
  %4199 = load i32, i32* %15, align 4, !dbg !3536
  %4200 = icmp eq i32 %4199, 2, !dbg !3538
  br label %originalBB417

originalBB421alteredBB:                           ; preds = %originalBB421, %1901
  %4201 = load i8, i8* %27, align 1, !dbg !3540
  %4202 = trunc i8 %4201 to i1, !dbg !3540
  br label %originalBB421

originalBB425alteredBB:                           ; preds = %originalBB425, %1921
  %4203 = load i64, i64* %12, align 8, !dbg !3545
  %4204 = icmp ne i64 %4203, 0, !dbg !3545
  br label %originalBB425

originalBB429alteredBB:                           ; preds = %originalBB429, %1940
  %4205 = load i64, i64* %22, align 8, !dbg !3548
  %4206 = icmp ne i64 %4205, 0, !dbg !3548
  br label %originalBB429

originalBB433alteredBB:                           ; preds = %originalBB433, %1962
  %4207 = load i64, i64* %21, align 8, !dbg !3556
  %4208 = load i64, i64* %12, align 8, !dbg !3556
  %4209 = icmp ult i64 %4207, %4208, !dbg !3556
  br label %originalBB433

originalBB437alteredBB:                           ; preds = %originalBB437, %1989
  br label %originalBB437

originalBB441alteredBB:                           ; preds = %originalBB441, %2006
  %4210 = load i64, i64* %21, align 8, !dbg !3561
  %4211 = load i64, i64* %12, align 8, !dbg !3561
  %4212 = icmp ult i64 %4210, %4211, !dbg !3561
  br label %originalBB441

originalBB445alteredBB:                           ; preds = %originalBB445, %2026
  %4213 = load i8*, i8** %11, align 8, !dbg !3561
  %4214 = load i64, i64* %21, align 8, !dbg !3561
  %4215 = getelementptr inbounds i8, i8* %4213, i64 %4214, !dbg !3561
  store i8 92, i8* %4215, align 1, !dbg !3561
  br label %originalBB445

originalBB449alteredBB:                           ; preds = %originalBB449, %2046
  %4216 = load i64, i64* %21, align 8, !dbg !3564
  %_450 = sub i64 %4216, 1
  %gen451 = mul i64 %_450, 1
  %_452 = shl i64 %4216, 1
  %_453 = sub i64 %4216, 1
  %gen454 = mul i64 %_453, 1
  %_455 = sub i64 0, %4216
  %gen456 = add i64 %_455, 1
  %_457 = shl i64 %4216, 1
  %_458 = shl i64 %4216, 1
  %_459 = sub i64 %4216, 1
  %gen460 = mul i64 %_459, 1
  %4217 = add i64 %4216, 1, !dbg !3564
  store i64 %4217, i64* %21, align 8, !dbg !3564
  br label %originalBB449

originalBB464alteredBB:                           ; preds = %originalBB464, %2066
  %4218 = load i64, i64* %21, align 8, !dbg !3566
  %4219 = load i64, i64* %12, align 8, !dbg !3566
  %4220 = icmp ult i64 %4218, %4219, !dbg !3566
  br label %originalBB464

originalBB468alteredBB:                           ; preds = %originalBB468, %2090
  %4221 = load i64, i64* %21, align 8, !dbg !3569
  %_469 = sub i64 %4221, 1
  %gen470 = mul i64 %_469, 1
  %_471 = shl i64 %4221, 1
  %4222 = add i64 %4221, 1, !dbg !3569
  store i64 %4222, i64* %21, align 8, !dbg !3569
  br label %originalBB468

originalBB475alteredBB:                           ; preds = %originalBB475, %2109
  store i8 0, i8* %28, align 1, !dbg !3570
  br label %originalBB475

originalBB479alteredBB:                           ; preds = %originalBB479, %2126
  br label %originalBB479

originalBB483alteredBB:                           ; preds = %originalBB483, %2166
  br label %originalBB483

originalBB487alteredBB:                           ; preds = %originalBB487, %2197
  br label %originalBB487

originalBB491alteredBB:                           ; preds = %originalBB491, %2214
  %4223 = load i64, i64* %40, align 8, !dbg !3637
  %4224 = icmp eq i64 %4223, -1, !dbg !3639
  br label %originalBB491

originalBB495alteredBB:                           ; preds = %originalBB495, %2233
  store i8 0, i8* %37, align 1, !dbg !3641
  br label %originalBB495

originalBB499alteredBB:                           ; preds = %originalBB499, %2250
  %4225 = load i64, i64* %40, align 8, !dbg !3644
  %4226 = icmp eq i64 %4225, -2, !dbg !3646
  br label %originalBB499

originalBB503alteredBB:                           ; preds = %originalBB503, %2270
  %4227 = load i64, i64* %20, align 8, !dbg !3651
  %4228 = load i64, i64* %36, align 8, !dbg !3652
  %_504 = sub i64 0, %4227
  %gen505 = add i64 %_504, %4228
  %_506 = sub i64 %4227, %4228
  %gen507 = mul i64 %_506, %4228
  %_508 = sub i64 0, %4227
  %gen509 = add i64 %_508, %4228
  %_510 = sub i64 %4227, %4228
  %gen511 = mul i64 %_510, %4228
  %_512 = shl i64 %4227, %4228
  %4229 = add i64 %4227, %4228, !dbg !3653
  %4230 = load i64, i64* %14, align 8, !dbg !3654
  %4231 = icmp ult i64 %4229, %4230, !dbg !3655
  br label %originalBB503

originalBB516alteredBB:                           ; preds = %originalBB516, %2292
  %4232 = load i8*, i8** %13, align 8, !dbg !3657
  %4233 = load i64, i64* %20, align 8, !dbg !3658
  %4234 = load i64, i64* %36, align 8, !dbg !3659
  %_517 = sub i64 %4233, %4234
  %gen518 = mul i64 %_517, %4234
  %_519 = sub i64 0, %4233
  %gen520 = add i64 %_519, %4234
  %_521 = sub i64 0, %4233
  %gen522 = add i64 %_521, %4234
  %_523 = shl i64 %4233, %4234
  %_524 = sub i64 %4233, %4234
  %gen525 = mul i64 %_524, %4234
  %_526 = shl i64 %4233, %4234
  %4235 = add i64 %4233, %4234, !dbg !3660
  %4236 = getelementptr inbounds i8, i8* %4232, i64 %4235, !dbg !3657
  %4237 = load i8, i8* %4236, align 1, !dbg !3657
  %4238 = sext i8 %4237 to i32, !dbg !3657
  %4239 = icmp ne i32 %4238, 0, !dbg !3656
  br label %originalBB516

originalBB530alteredBB:                           ; preds = %originalBB530, %2317
  br label %originalBB530

originalBB534alteredBB:                           ; preds = %originalBB534, %2335
  %4240 = load i64, i64* %36, align 8, !dbg !3662
  %_535 = sub i64 %4240, 1
  %gen536 = mul i64 %_535, 1
  %_537 = shl i64 %4240, 1
  %_538 = sub i64 %4240, 1
  %gen539 = mul i64 %_538, 1
  %_540 = sub i64 %4240, 1
  %gen541 = mul i64 %_540, 1
  %_542 = shl i64 %4240, 1
  %_543 = shl i64 %4240, 1
  %4241 = add i64 %4240, 1, !dbg !3662
  store i64 %4241, i64* %36, align 8, !dbg !3662
  br label %originalBB534

originalBB547alteredBB:                           ; preds = %originalBB547, %2354
  br label %originalBB547

originalBB551alteredBB:                           ; preds = %originalBB551, %2374
  %4242 = load i32, i32* %15, align 4, !dbg !3669
  %4243 = icmp eq i32 %4242, 2, !dbg !3670
  br label %originalBB551

originalBB555alteredBB:                           ; preds = %originalBB555, %2408
  br label %originalBB555

originalBB559alteredBB:                           ; preds = %originalBB559, %2427
  %4244 = load i64, i64* %41, align 8, !dbg !3694
  %_560 = sub i64 0, %4244
  %gen561 = add i64 %_560, 1
  %_562 = sub i64 0, %4244
  %gen563 = add i64 %_562, 1
  %_564 = sub i64 %4244, 1
  %gen565 = mul i64 %_564, 1
  %_566 = sub i64 %4244, 1
  %gen567 = mul i64 %_566, 1
  %4245 = add i64 %4244, 1, !dbg !3694
  store i64 %4245, i64* %41, align 8, !dbg !3694
  br label %originalBB559

originalBB571alteredBB:                           ; preds = %originalBB571, %2446
  br label %originalBB571

originalBB575alteredBB:                           ; preds = %originalBB575, %2467
  store i8 0, i8* %37, align 1, !dbg !3703
  br label %originalBB575

originalBB579alteredBB:                           ; preds = %originalBB579, %2489
  br label %originalBB579

originalBB583alteredBB:                           ; preds = %originalBB583, %2534
  br label %originalBB583

originalBB587alteredBB:                           ; preds = %originalBB587, %2554
  br label %originalBB587

originalBB591alteredBB:                           ; preds = %originalBB591, %2577
  br label %originalBB591

originalBB595alteredBB:                           ; preds = %originalBB595, %2598
  %4246 = load i8*, i8** %11, align 8, !dbg !3747
  %4247 = load i64, i64* %21, align 8, !dbg !3747
  %4248 = getelementptr inbounds i8, i8* %4246, i64 %4247, !dbg !3747
  store i8 39, i8* %4248, align 1, !dbg !3747
  br label %originalBB595

originalBB599alteredBB:                           ; preds = %originalBB599, %2618
  %4249 = load i64, i64* %21, align 8, !dbg !3750
  %_600 = sub i64 %4249, 1
  %gen601 = mul i64 %_600, 1
  %_602 = sub i64 0, %4249
  %gen603 = add i64 %_602, 1
  %_604 = sub i64 %4249, 1
  %gen605 = mul i64 %_604, 1
  %_606 = sub i64 %4249, 1
  %gen607 = mul i64 %_606, 1
  %4250 = add i64 %4249, 1, !dbg !3750
  store i64 %4250, i64* %21, align 8, !dbg !3750
  br label %originalBB599

originalBB611alteredBB:                           ; preds = %originalBB611, %2638
  %4251 = load i64, i64* %21, align 8, !dbg !3751
  %4252 = load i64, i64* %12, align 8, !dbg !3751
  %4253 = icmp ult i64 %4251, %4252, !dbg !3751
  br label %originalBB611

originalBB615alteredBB:                           ; preds = %originalBB615, %2662
  %4254 = load i64, i64* %21, align 8, !dbg !3754
  %_616 = sub i64 0, %4254
  %gen617 = add i64 %_616, 1
  %_618 = sub i64 0, %4254
  %gen619 = add i64 %_618, 1
  %_620 = sub i64 0, %4254
  %gen621 = add i64 %_620, 1
  %_622 = sub i64 %4254, 1
  %gen623 = mul i64 %_622, 1
  %_624 = shl i64 %4254, 1
  %_625 = shl i64 %4254, 1
  %_626 = sub i64 0, %4254
  %gen627 = add i64 %_626, 1
  %_628 = shl i64 %4254, 1
  %_629 = sub i64 %4254, 1
  %gen630 = mul i64 %_629, 1
  %4255 = add i64 %4254, 1, !dbg !3754
  store i64 %4255, i64* %21, align 8, !dbg !3754
  br label %originalBB615

originalBB634alteredBB:                           ; preds = %originalBB634, %2681
  br label %originalBB634

originalBB638alteredBB:                           ; preds = %originalBB638, %2698
  %4256 = load i64, i64* %21, align 8, !dbg !3755
  %4257 = load i64, i64* %12, align 8, !dbg !3755
  %4258 = icmp ult i64 %4256, %4257, !dbg !3755
  br label %originalBB638

originalBB642alteredBB:                           ; preds = %originalBB642, %2727
  %4259 = load i64, i64* %21, align 8, !dbg !3759
  %4260 = load i64, i64* %12, align 8, !dbg !3759
  %4261 = icmp ult i64 %4259, %4260, !dbg !3759
  br label %originalBB642

originalBB646alteredBB:                           ; preds = %originalBB646, %2755
  br label %originalBB646

originalBB650alteredBB:                           ; preds = %originalBB650, %2776
  %4262 = load i8, i8* %31, align 1, !dbg !3764
  %4263 = zext i8 %4262 to i32, !dbg !3764
  %_651 = shl i32 %4263, 6
  %_652 = sub i32 0, %4263
  %gen653 = add i32 %_652, 6
  %_654 = sub i32 0, %4263
  %gen655 = add i32 %_654, 6
  %_656 = shl i32 %4263, 6
  %_657 = shl i32 %4263, 6
  %_658 = sub i32 %4263, 6
  %gen659 = mul i32 %_658, 6
  %_660 = sub i32 %4263, 6
  %gen661 = mul i32 %_660, 6
  %4264 = ashr i32 %4263, 6, !dbg !3764
  %_662 = shl i32 48, %4264
  %_663 = shl i32 48, %4264
  %_664 = sub i32 0, 48
  %gen665 = add i32 %_664, %4264
  %_666 = sub i32 48, %4264
  %gen667 = mul i32 %_666, %4264
  %4265 = add nsw i32 48, %4264, !dbg !3764
  %4266 = trunc i32 %4265 to i8, !dbg !3764
  %4267 = load i8*, i8** %11, align 8, !dbg !3764
  %4268 = load i64, i64* %21, align 8, !dbg !3764
  %4269 = getelementptr inbounds i8, i8* %4267, i64 %4268, !dbg !3764
  store i8 %4266, i8* %4269, align 1, !dbg !3764
  br label %originalBB650

originalBB671alteredBB:                           ; preds = %originalBB671, %2804
  br label %originalBB671

originalBB675alteredBB:                           ; preds = %originalBB675, %2821
  %4270 = load i64, i64* %21, align 8, !dbg !3769
  %4271 = load i64, i64* %12, align 8, !dbg !3769
  %4272 = icmp ult i64 %4270, %4271, !dbg !3769
  br label %originalBB675

originalBB679alteredBB:                           ; preds = %originalBB679, %2851
  %4273 = load i64, i64* %21, align 8, !dbg !3772
  %_680 = shl i64 %4273, 1
  %_681 = shl i64 %4273, 1
  %_682 = sub i64 0, %4273
  %gen683 = add i64 %_682, 1
  %_684 = sub i64 %4273, 1
  %gen685 = mul i64 %_684, 1
  %_686 = sub i64 %4273, 1
  %gen687 = mul i64 %_686, 1
  %_688 = shl i64 %4273, 1
  %_689 = sub i64 0, %4273
  %gen690 = add i64 %_689, 1
  %_691 = shl i64 %4273, 1
  %4274 = add i64 %4273, 1, !dbg !3772
  store i64 %4274, i64* %21, align 8, !dbg !3772
  br label %originalBB679

originalBB695alteredBB:                           ; preds = %originalBB695, %2879
  br label %originalBB695

originalBB699alteredBB:                           ; preds = %originalBB699, %2896
  %4275 = load i64, i64* %21, align 8, !dbg !3784
  %4276 = load i64, i64* %12, align 8, !dbg !3784
  %4277 = icmp ult i64 %4275, %4276, !dbg !3784
  br label %originalBB699

originalBB703alteredBB:                           ; preds = %originalBB703, %2916
  %4278 = load i8*, i8** %11, align 8, !dbg !3784
  %4279 = load i64, i64* %21, align 8, !dbg !3784
  %4280 = getelementptr inbounds i8, i8* %4278, i64 %4279, !dbg !3784
  store i8 92, i8* %4280, align 1, !dbg !3784
  br label %originalBB703

originalBB707alteredBB:                           ; preds = %originalBB707, %2936
  %4281 = load i64, i64* %21, align 8, !dbg !3787
  %_708 = sub i64 0, %4281
  %gen709 = add i64 %_708, 1
  %4282 = add i64 %4281, 1, !dbg !3787
  store i64 %4282, i64* %21, align 8, !dbg !3787
  br label %originalBB707

originalBB713alteredBB:                           ; preds = %originalBB713, %2955
  store i8 0, i8* %33, align 1, !dbg !3788
  br label %originalBB713

originalBB717alteredBB:                           ; preds = %originalBB717, %2972
  br label %originalBB717

originalBB721alteredBB:                           ; preds = %originalBB721, %2989
  %4283 = load i64, i64* %42, align 8, !dbg !3790
  %4284 = load i64, i64* %20, align 8, !dbg !3792
  %_722 = sub i64 %4284, 1
  %gen723 = mul i64 %_722, 1
  %_724 = sub i64 %4284, 1
  %gen725 = mul i64 %_724, 1
  %_726 = sub i64 0, %4284
  %gen727 = add i64 %_726, 1
  %_728 = sub i64 0, %4284
  %gen729 = add i64 %_728, 1
  %_730 = shl i64 %4284, 1
  %_731 = sub i64 0, %4284
  %gen732 = add i64 %_731, 1
  %4285 = add i64 %4284, 1, !dbg !3793
  %4286 = icmp ule i64 %4283, %4285, !dbg !3794
  br label %originalBB721

originalBB736alteredBB:                           ; preds = %originalBB736, %3010
  br label %originalBB736

originalBB740alteredBB:                           ; preds = %originalBB740, %3027
  br label %originalBB740

originalBB744alteredBB:                           ; preds = %originalBB744, %3050
  br label %originalBB744

originalBB748alteredBB:                           ; preds = %originalBB748, %3067
  %4287 = load i64, i64* %21, align 8, !dbg !3804
  %4288 = load i64, i64* %12, align 8, !dbg !3804
  %4289 = icmp ult i64 %4287, %4288, !dbg !3804
  br label %originalBB748

originalBB752alteredBB:                           ; preds = %originalBB752, %3087
  %4290 = load i8*, i8** %11, align 8, !dbg !3804
  %4291 = load i64, i64* %21, align 8, !dbg !3804
  %4292 = getelementptr inbounds i8, i8* %4290, i64 %4291, !dbg !3804
  store i8 39, i8* %4292, align 1, !dbg !3804
  br label %originalBB752

originalBB756alteredBB:                           ; preds = %originalBB756, %3107
  %4293 = load i64, i64* %21, align 8, !dbg !3807
  %_757 = sub i64 0, %4293
  %gen758 = add i64 %_757, 1
  %_759 = sub i64 0, %4293
  %gen760 = add i64 %_759, 1
  %_761 = shl i64 %4293, 1
  %_762 = sub i64 %4293, 1
  %gen763 = mul i64 %_762, 1
  %4294 = add i64 %4293, 1, !dbg !3807
  store i64 %4294, i64* %21, align 8, !dbg !3807
  br label %originalBB756

originalBB767alteredBB:                           ; preds = %originalBB767, %3135
  %4295 = load i64, i64* %21, align 8, !dbg !3811
  %_768 = sub i64 0, %4295
  %gen769 = add i64 %_768, 1
  %4296 = add i64 %4295, 1, !dbg !3811
  store i64 %4296, i64* %21, align 8, !dbg !3811
  br label %originalBB767

originalBB773alteredBB:                           ; preds = %originalBB773, %3156
  br label %originalBB773

originalBB777alteredBB:                           ; preds = %originalBB777, %3173
  %4297 = load i64, i64* %21, align 8, !dbg !3813
  %4298 = load i64, i64* %12, align 8, !dbg !3813
  %4299 = icmp ult i64 %4297, %4298, !dbg !3813
  br label %originalBB777

originalBB781alteredBB:                           ; preds = %originalBB781, %3207
  br label %originalBB781

originalBB785alteredBB:                           ; preds = %originalBB785, %3224
  br label %originalBB785

originalBB789alteredBB:                           ; preds = %originalBB789, %3241
  %4300 = load i8, i8* %25, align 1, !dbg !3826
  %4301 = trunc i8 %4300 to i1, !dbg !3826
  br label %originalBB789

originalBB793alteredBB:                           ; preds = %originalBB793, %3260
  %4302 = load i32, i32* %15, align 4, !dbg !3829
  %4303 = icmp ne i32 %4302, 2, !dbg !3830
  br label %originalBB793

originalBB797alteredBB:                           ; preds = %originalBB797, %3282
  %4304 = load i32*, i32** %17, align 8, !dbg !3834
  %4305 = icmp ne i32* %4304, null, !dbg !3834
  br label %originalBB797

originalBB801alteredBB:                           ; preds = %originalBB801, %3319
  br label %originalBB801

originalBB805alteredBB:                           ; preds = %originalBB805, %3337
  %4306 = load i8, i8* %27, align 1, !dbg !3850
  %4307 = trunc i8 %4306 to i1, !dbg !3850
  br label %originalBB805

originalBB809alteredBB:                           ; preds = %originalBB809, %3356
  br label %originalBB809

originalBB813alteredBB:                           ; preds = %originalBB813, %3373
  store i8 1, i8* %34, align 1, !dbg !3853
  %4308 = load i32, i32* %15, align 4, !dbg !3854
  %4309 = icmp eq i32 %4308, 2, !dbg !3854
  br label %originalBB813

originalBB817alteredBB:                           ; preds = %originalBB817, %3395
  br label %originalBB817

originalBB821alteredBB:                           ; preds = %originalBB821, %3416
  %4310 = load i8*, i8** %11, align 8, !dbg !3858
  %4311 = load i64, i64* %21, align 8, !dbg !3858
  %4312 = getelementptr inbounds i8, i8* %4310, i64 %4311, !dbg !3858
  store i8 39, i8* %4312, align 1, !dbg !3858
  br label %originalBB821

originalBB825alteredBB:                           ; preds = %originalBB825, %3436
  %4313 = load i64, i64* %21, align 8, !dbg !3861
  %_826 = shl i64 %4313, 1
  %_827 = shl i64 %4313, 1
  %_828 = sub i64 0, %4313
  %gen829 = add i64 %_828, 1
  %_830 = sub i64 %4313, 1
  %gen831 = mul i64 %_830, 1
  %_832 = sub i64 %4313, 1
  %gen833 = mul i64 %_832, 1
  %_834 = sub i64 0, %4313
  %gen835 = add i64 %_834, 1
  %_836 = sub i64 %4313, 1
  %gen837 = mul i64 %_836, 1
  %4314 = add i64 %4313, 1, !dbg !3861
  store i64 %4314, i64* %21, align 8, !dbg !3861
  br label %originalBB825

originalBB841alteredBB:                           ; preds = %originalBB841, %3468
  %4315 = load i64, i64* %21, align 8, !dbg !3866
  %4316 = load i64, i64* %12, align 8, !dbg !3866
  %4317 = icmp ult i64 %4315, %4316, !dbg !3866
  br label %originalBB841

originalBB845alteredBB:                           ; preds = %originalBB845, %3492
  %4318 = load i64, i64* %21, align 8, !dbg !3869
  %_846 = shl i64 %4318, 1
  %_847 = sub i64 %4318, 1
  %gen848 = mul i64 %_847, 1
  %_849 = sub i64 %4318, 1
  %gen850 = mul i64 %_849, 1
  %_851 = sub i64 %4318, 1
  %gen852 = mul i64 %_851, 1
  %_853 = shl i64 %4318, 1
  %_854 = sub i64 0, %4318
  %gen855 = add i64 %_854, 1
  %4319 = add i64 %4318, 1, !dbg !3869
  store i64 %4319, i64* %21, align 8, !dbg !3869
  br label %originalBB845

originalBB859alteredBB:                           ; preds = %originalBB859, %3521
  %4320 = load i64, i64* %21, align 8, !dbg !3873
  %_860 = sub i64 0, %4320
  %gen861 = add i64 %_860, 1
  %_862 = shl i64 %4320, 1
  %_863 = shl i64 %4320, 1
  %_864 = shl i64 %4320, 1
  %_865 = sub i64 %4320, 1
  %gen866 = mul i64 %_865, 1
  %_867 = sub i64 0, %4320
  %gen868 = add i64 %_867, 1
  %_869 = sub i64 %4320, 1
  %gen870 = mul i64 %_869, 1
  %_871 = sub i64 %4320, 1
  %gen872 = mul i64 %_871, 1
  %_873 = sub i64 0, %4320
  %gen874 = add i64 %_873, 1
  %4321 = add i64 %4320, 1, !dbg !3873
  store i64 %4321, i64* %21, align 8, !dbg !3873
  br label %originalBB859

originalBB878alteredBB:                           ; preds = %originalBB878, %3542
  br label %originalBB878

originalBB882alteredBB:                           ; preds = %originalBB882, %3565
  br label %originalBB882

originalBB886alteredBB:                           ; preds = %originalBB886, %3590
  %4322 = load i64, i64* %21, align 8, !dbg !3886
  %_887 = sub i64 0, %4322
  %gen888 = add i64 %_887, 1
  %_889 = sub i64 0, %4322
  %gen890 = add i64 %_889, 1
  %_891 = sub i64 %4322, 1
  %gen892 = mul i64 %_891, 1
  %_893 = sub i64 %4322, 1
  %gen894 = mul i64 %_893, 1
  %_895 = sub i64 %4322, 1
  %gen896 = mul i64 %_895, 1
  %4323 = add i64 %4322, 1, !dbg !3886
  store i64 %4323, i64* %21, align 8, !dbg !3886
  br label %originalBB886

originalBB900alteredBB:                           ; preds = %originalBB900, %3609
  br label %originalBB900

originalBB904alteredBB:                           ; preds = %originalBB904, %3630
  %4324 = load i8*, i8** %11, align 8, !dbg !3887
  %4325 = load i64, i64* %21, align 8, !dbg !3887
  %4326 = getelementptr inbounds i8, i8* %4324, i64 %4325, !dbg !3887
  store i8 39, i8* %4326, align 1, !dbg !3887
  br label %originalBB904

originalBB908alteredBB:                           ; preds = %originalBB908, %3656
  %4327 = load i64, i64* %21, align 8, !dbg !3892
  %4328 = load i64, i64* %12, align 8, !dbg !3892
  %4329 = icmp ult i64 %4327, %4328, !dbg !3892
  br label %originalBB908

originalBB912alteredBB:                           ; preds = %originalBB912, %3681
  %4330 = load i64, i64* %21, align 8, !dbg !3895
  %_913 = sub i64 0, %4330
  %gen914 = add i64 %_913, 1
  %_915 = sub i64 0, %4330
  %gen916 = add i64 %_915, 1
  %4331 = add i64 %4330, 1, !dbg !3895
  store i64 %4331, i64* %21, align 8, !dbg !3895
  br label %originalBB912

originalBB920alteredBB:                           ; preds = %originalBB920, %3705
  %4332 = load i64, i64* %20, align 8, !dbg !3902
  %_921 = shl i64 %4332, 1
  %_922 = shl i64 %4332, 1
  %_923 = sub i64 0, %4332
  %gen924 = add i64 %_923, 1
  %_925 = sub i64 %4332, 1
  %gen926 = mul i64 %_925, 1
  %_927 = shl i64 %4332, 1
  %_928 = sub i64 0, %4332
  %gen929 = add i64 %_928, 1
  %4333 = add i64 %4332, 1, !dbg !3902
  store i64 %4333, i64* %20, align 8, !dbg !3902
  br label %originalBB920

originalBB933alteredBB:                           ; preds = %originalBB933, %3733
  br label %originalBB933

originalBB937alteredBB:                           ; preds = %originalBB937, %3756
  %4334 = load i8, i8* %29, align 1, !dbg !3922
  %4335 = trunc i8 %4334 to i1, !dbg !3922
  br label %originalBB937

originalBB941alteredBB:                           ; preds = %originalBB941, %3775
  %4336 = load i8, i8* %30, align 1, !dbg !3924
  %4337 = trunc i8 %4336 to i1, !dbg !3924
  br label %originalBB941

originalBB945alteredBB:                           ; preds = %originalBB945, %3804
  %4338 = load i64, i64* %12, align 8, !dbg !3938
  %4339 = icmp ne i64 %4338, 0, !dbg !3938
  br label %originalBB945

originalBB949alteredBB:                           ; preds = %originalBB949, %3823
  %4340 = load i64, i64* %22, align 8, !dbg !3941
  %4341 = icmp ne i64 %4340, 0, !dbg !3941
  br label %originalBB949

originalBB953alteredBB:                           ; preds = %originalBB953, %3842
  %4342 = load i64, i64* %22, align 8, !dbg !3943
  store i64 %4342, i64* %12, align 8, !dbg !3945
  store i64 0, i64* %21, align 8, !dbg !3946
  br label %originalBB953

originalBB957alteredBB:                           ; preds = %originalBB957, %3869
  %4343 = load i8*, i8** %23, align 8, !dbg !3955
  %4344 = load i8, i8* %4343, align 1, !dbg !3958
  %4345 = icmp ne i8 %4344, 0, !dbg !3959
  br label %originalBB957

originalBB961alteredBB:                           ; preds = %originalBB961, %3889
  br label %originalBB961

originalBB965alteredBB:                           ; preds = %originalBB965, %3906
  %4346 = load i64, i64* %21, align 8, !dbg !3961
  %4347 = load i64, i64* %12, align 8, !dbg !3961
  %4348 = icmp ult i64 %4346, %4347, !dbg !3961
  br label %originalBB965

originalBB969alteredBB:                           ; preds = %originalBB969, %3926
  %4349 = load i8*, i8** %23, align 8, !dbg !3961
  %4350 = load i8, i8* %4349, align 1, !dbg !3961
  %4351 = load i8*, i8** %11, align 8, !dbg !3961
  %4352 = load i64, i64* %21, align 8, !dbg !3961
  %4353 = getelementptr inbounds i8, i8* %4351, i64 %4352, !dbg !3961
  store i8 %4350, i8* %4353, align 1, !dbg !3961
  br label %originalBB969

originalBB973alteredBB:                           ; preds = %originalBB973, %3948
  %4354 = load i64, i64* %21, align 8, !dbg !3964
  %_974 = shl i64 %4354, 1
  %_975 = sub i64 0, %4354
  %gen976 = add i64 %_975, 1
  %_977 = sub i64 0, %4354
  %gen978 = add i64 %_977, 1
  %_979 = sub i64 %4354, 1
  %gen980 = mul i64 %_979, 1
  %4355 = add i64 %4354, 1, !dbg !3964
  store i64 %4355, i64* %21, align 8, !dbg !3964
  br label %originalBB973

originalBB984alteredBB:                           ; preds = %originalBB984, %3980
  %4356 = load i64, i64* %21, align 8, !dbg !3977
  store i64 %4356, i64* %10, align 8, !dbg !3978
  br label %originalBB984

originalBB988alteredBB:                           ; preds = %originalBB988, %3998
  %4357 = load i32, i32* %15, align 4, !dbg !3981
  %4358 = icmp eq i32 %4357, 2, !dbg !3983
  br label %originalBB988

originalBB992alteredBB:                           ; preds = %originalBB992, %4017
  %4359 = load i8, i8* %25, align 1, !dbg !3985
  %4360 = trunc i8 %4359 to i1, !dbg !3985
  br label %originalBB992

originalBB996alteredBB:                           ; preds = %originalBB996, %4036
  store i32 4, i32* %15, align 4, !dbg !3987
  br label %originalBB996
}

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8*, i32) #4 !dbg !4037 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4040, metadata !DIExpression()), !dbg !4041
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4042, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4044, metadata !DIExpression()), !dbg !4045
  %8 = load i8*, i8** %4, align 8, !dbg !4046
  %9 = call i8* @gettext(i8* %8) #10, !dbg !4046
  store i8* %9, i8** %6, align 8, !dbg !4045
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4047, metadata !DIExpression()), !dbg !4048
  %10 = load i8*, i8** %6, align 8, !dbg !4049
  %11 = load i8*, i8** %4, align 8, !dbg !4051
  %12 = icmp ne i8* %10, %11, !dbg !4052
  br i1 %12, label %13, label %15, !dbg !4053

13:                                               ; preds = %2
  %14 = load i8*, i8** %6, align 8, !dbg !4054
  store i8* %14, i8** %3, align 8, !dbg !4055
  br label %93, !dbg !4055

15:                                               ; preds = %2
  %16 = call i8* @locale_charset(), !dbg !4056
  store i8* %16, i8** %7, align 8, !dbg !4057
  %17 = load i8*, i8** %7, align 8, !dbg !4058
  %18 = call i32 @c_strcasecmp(i8* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.123, i64 0, i64 0)) #13, !dbg !4058
  %19 = icmp eq i32 %18, 0, !dbg !4058
  br i1 %19, label %20, label %44, !dbg !4060

20:                                               ; preds = %15
  %21 = load i32, i32* @x.65
  %22 = load i32, i32* @y.66
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %20, %originalBBalteredBB
  %29 = load i8*, i8** %4, align 8, !dbg !4061
  %30 = getelementptr inbounds i8, i8* %29, i64 0, !dbg !4061
  %31 = load i8, i8* %30, align 1, !dbg !4061
  %32 = sext i8 %31 to i32, !dbg !4061
  %33 = icmp eq i32 %32, 96, !dbg !4062
  %34 = zext i1 %33 to i64, !dbg !4061
  %35 = select i1 %33, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.124, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.125, i64 0, i64 0), !dbg !4061
  store i8* %35, i8** %3, align 8, !dbg !4063
  %36 = load i32, i32* @x.65
  %37 = load i32, i32* @y.66
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %93, !dbg !4063

44:                                               ; preds = %15
  %45 = load i8*, i8** %7, align 8, !dbg !4064
  %46 = call i32 @c_strcasecmp(i8* %45, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.126, i64 0, i64 0)) #13, !dbg !4064
  %47 = icmp eq i32 %46, 0, !dbg !4064
  br i1 %47, label %48, label %72, !dbg !4066

48:                                               ; preds = %44
  %49 = load i32, i32* @x.65
  %50 = load i32, i32* @y.66
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %48, %originalBB1alteredBB
  %57 = load i8*, i8** %4, align 8, !dbg !4067
  %58 = getelementptr inbounds i8, i8* %57, i64 0, !dbg !4067
  %59 = load i8, i8* %58, align 1, !dbg !4067
  %60 = sext i8 %59 to i32, !dbg !4067
  %61 = icmp eq i32 %60, 96, !dbg !4068
  %62 = zext i1 %61 to i64, !dbg !4067
  %63 = select i1 %61, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.127, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.128, i64 0, i64 0), !dbg !4067
  store i8* %63, i8** %3, align 8, !dbg !4069
  %64 = load i32, i32* @x.65
  %65 = load i32, i32* @y.66
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %93, !dbg !4069

72:                                               ; preds = %44
  %73 = load i32, i32* @x.65
  %74 = load i32, i32* @y.66
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %72, %originalBB6alteredBB
  %81 = load i32, i32* %5, align 4, !dbg !4070
  %82 = icmp eq i32 %81, 9, !dbg !4071
  %83 = zext i1 %82 to i64, !dbg !4070
  %84 = select i1 %82, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.120, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.122, i64 0, i64 0), !dbg !4070
  store i8* %84, i8** %3, align 8, !dbg !4072
  %85 = load i32, i32* @x.65
  %86 = load i32, i32* @y.66
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %93, !dbg !4072

93:                                               ; preds = %originalBBpart28, %originalBBpart24, %originalBBpart2, %13
  %94 = load i32, i32* @x.65
  %95 = load i32, i32* @y.66
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %93, %originalBB10alteredBB
  %102 = load i8*, i8** %3, align 8, !dbg !4073
  %103 = load i32, i32* @x.65
  %104 = load i32, i32* @y.66
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret i8* %102, !dbg !4073

originalBBalteredBB:                              ; preds = %originalBB, %20
  %111 = load i8*, i8** %4, align 8, !dbg !4061
  %112 = getelementptr inbounds i8, i8* %111, i64 0, !dbg !4061
  %113 = load i8, i8* %112, align 1, !dbg !4061
  %114 = sext i8 %113 to i32, !dbg !4061
  %115 = icmp eq i32 %114, 96, !dbg !4062
  %116 = zext i1 %115 to i64, !dbg !4061
  %117 = select i1 %115, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.124, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.125, i64 0, i64 0), !dbg !4061
  store i8* %117, i8** %3, align 8, !dbg !4063
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %48
  %118 = load i8*, i8** %4, align 8, !dbg !4067
  %119 = getelementptr inbounds i8, i8* %118, i64 0, !dbg !4067
  %120 = load i8, i8* %119, align 1, !dbg !4067
  %121 = sext i8 %120 to i32, !dbg !4067
  %122 = icmp eq i32 %121, 96, !dbg !4068
  %123 = zext i1 %122 to i64, !dbg !4067
  %124 = select i1 %122, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.127, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.128, i64 0, i64 0), !dbg !4067
  store i8* %124, i8** %3, align 8, !dbg !4069
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %72
  %125 = load i32, i32* %5, align 4, !dbg !4070
  %126 = icmp eq i32 %125, 9, !dbg !4071
  %127 = zext i1 %126 to i64, !dbg !4070
  %128 = select i1 %126, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.120, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.122, i64 0, i64 0), !dbg !4070
  store i8* %128, i8** %3, align 8, !dbg !4072
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %93
  %129 = load i8*, i8** %3, align 8, !dbg !4073
  br label %originalBB10
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #8

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.__mbstate_t*) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char(i8*, i8 signext) #4 !dbg !4074 {
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4077, metadata !DIExpression()), !dbg !4078
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !4079, metadata !DIExpression()), !dbg !4080
  %5 = load i8*, i8** %3, align 8, !dbg !4081
  %6 = load i8, i8* %4, align 1, !dbg !4082
  %7 = call i8* @quotearg_char_mem(i8* %5, i64 -1, i8 signext %6), !dbg !4083
  ret i8* %7, !dbg !4084
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_colon(i8*) #4 !dbg !4085 {
  %2 = load i32, i32* @x.69
  %3 = load i32, i32* @y.70
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !4086, metadata !DIExpression()), !dbg !4087
  %11 = load i8*, i8** %10, align 8, !dbg !4088
  %12 = call i8* @quotearg_char(i8* %11, i8 signext 58), !dbg !4089
  %13 = load i32, i32* @x.69
  %14 = load i32, i32* @y.70
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !4090

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i8*, align 8
  store i8* %0, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !4091, metadata !DIExpression()), !dbg !4087
  %22 = load i8*, i8** %21, align 8, !dbg !4088
  %23 = call i8* @quotearg_char(i8* %22, i8 signext 58), !dbg !4089
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_style_colon(i32, i32, i8*) #4 !dbg !4123 {
  %4 = load i32, i32* @x.71
  %5 = load i32, i32* @y.72
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca %struct.quoting_options, align 8
  %16 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !4126, metadata !DIExpression()), !dbg !4127
  store i32 %1, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4128, metadata !DIExpression()), !dbg !4129
  store i8* %2, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !4130, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %15, metadata !4132, metadata !DIExpression()), !dbg !4133
  %17 = load i32, i32* %13, align 4, !dbg !4134
  call void @quoting_options_from_style(%struct.quoting_options* sret %16, i32 %17), !dbg !4135
  %18 = bitcast %struct.quoting_options* %15 to i8*, !dbg !4135
  %19 = bitcast %struct.quoting_options* %16 to i8*, !dbg !4135
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 56, i1 false), !dbg !4135
  %20 = call i32 @set_char_quoting(%struct.quoting_options* %15, i8 signext 58, i32 1), !dbg !4136
  %21 = load i32, i32* %12, align 4, !dbg !4137
  %22 = load i8*, i8** %14, align 8, !dbg !4138
  %23 = call i8* @quotearg_n_options(i32 %21, i8* %22, i64 -1, %struct.quoting_options* %15), !dbg !4139
  %24 = load i32, i32* @x.71
  %25 = load i32, i32* @y.72
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %23, !dbg !4140

originalBBalteredBB:                              ; preds = %originalBB, %3
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i8*, align 8
  %35 = alloca %struct.quoting_options, align 8
  %36 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %32, align 4
  call void @llvm.dbg.declare(metadata i32* %32, metadata !4141, metadata !DIExpression()), !dbg !4127
  store i32 %1, i32* %33, align 4
  call void @llvm.dbg.declare(metadata i32* %33, metadata !4173, metadata !DIExpression()), !dbg !4129
  store i8* %2, i8** %34, align 8
  call void @llvm.dbg.declare(metadata i8** %34, metadata !4174, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %35, metadata !4175, metadata !DIExpression()), !dbg !4133
  %37 = load i32, i32* %33, align 4, !dbg !4134
  call void @quoting_options_from_style(%struct.quoting_options* sret %36, i32 %37), !dbg !4135
  %38 = bitcast %struct.quoting_options* %35 to i8*, !dbg !4135
  %39 = bitcast %struct.quoting_options* %36 to i8*, !dbg !4135
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 56, i1 false), !dbg !4135
  %40 = call i32 @set_char_quoting(%struct.quoting_options* %35, i8 signext 58, i32 1), !dbg !4136
  %41 = load i32, i32* %32, align 4, !dbg !4137
  %42 = load i8*, i8** %34, align 8, !dbg !4138
  %43 = call i8* @quotearg_n_options(i32 %41, i8* %42, i64 -1, %struct.quoting_options* %35), !dbg !4139
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret, i32) #4 !dbg !4176 {
  %3 = load i32, i32* @x.73
  %4 = load i32, i32* @y.74
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  store i32 %1, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4179, metadata !DIExpression()), !dbg !4180
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %0, metadata !4181, metadata !DIExpression()), !dbg !4182
  %12 = bitcast %struct.quoting_options* %0 to i8*, !dbg !4182
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 56, i1 false), !dbg !4182
  %13 = load i32, i32* %11, align 4, !dbg !4183
  %14 = icmp eq i32 %13, 10, !dbg !4185
  %15 = load i32, i32* @x.73
  %16 = load i32, i32* @y.74
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %14, label %23, label %24, !dbg !4186

23:                                               ; preds = %originalBBpart2
  call void @abort() #12, !dbg !4187
  unreachable, !dbg !4187

24:                                               ; preds = %originalBBpart2
  %25 = load i32, i32* %11, align 4, !dbg !4188
  %26 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %0, i32 0, i32 0, !dbg !4189
  store i32 %25, i32* %26, align 8, !dbg !4190
  ret void, !dbg !4191

originalBBalteredBB:                              ; preds = %originalBB, %2
  %27 = alloca i32, align 4
  store i32 %1, i32* %27, align 4
  call void @llvm.dbg.declare(metadata i32* %27, metadata !4192, metadata !DIExpression()), !dbg !4180
  call void @llvm.dbg.declare(metadata !4, metadata !4226, metadata !DIExpression()), !dbg !4182
  %28 = bitcast %struct.quoting_options* %0 to i8*, !dbg !4182
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 56, i1 false), !dbg !4182
  %29 = load i32, i32* %27, align 4, !dbg !4183
  %30 = icmp eq i32 %29, 10, !dbg !4185
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n_mem(i32, i8*, i64) #4 !dbg !4227 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4230, metadata !DIExpression()), !dbg !4231
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4232, metadata !DIExpression()), !dbg !4233
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !4234, metadata !DIExpression()), !dbg !4235
  %7 = load i32, i32* %4, align 4, !dbg !4236
  %8 = load i8*, i8** %5, align 8, !dbg !4237
  %9 = load i64, i64* %6, align 8, !dbg !4238
  %10 = call i8* @quotearg_n_options(i32 %7, i8* %8, i64 %9, %struct.quoting_options* @quote_quoting_options), !dbg !4239
  ret i8* %10, !dbg !4240
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n(i32, i8*) #4 !dbg !4241 {
  %3 = load i32, i32* @x.77
  %4 = load i32, i32* @y.78
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4244, metadata !DIExpression()), !dbg !4245
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !4246, metadata !DIExpression()), !dbg !4247
  %13 = load i32, i32* %11, align 4, !dbg !4248
  %14 = load i8*, i8** %12, align 8, !dbg !4249
  %15 = call i8* @quote_n_mem(i32 %13, i8* %14, i64 -1), !dbg !4250
  %16 = load i32, i32* @x.77
  %17 = load i32, i32* @y.78
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %15, !dbg !4251

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  store i32 %0, i32* %24, align 4
  call void @llvm.dbg.declare(metadata i32* %24, metadata !4252, metadata !DIExpression()), !dbg !4245
  store i8* %1, i8** %25, align 8
  call void @llvm.dbg.declare(metadata i8** %25, metadata !4284, metadata !DIExpression()), !dbg !4247
  %26 = load i32, i32* %24, align 4, !dbg !4248
  %27 = load i8*, i8** %25, align 8, !dbg !4249
  %28 = call i8* @quote_n_mem(i32 %26, i8* %27, i64 -1), !dbg !4250
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote(i8*) #4 !dbg !4285 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !4288, metadata !DIExpression()), !dbg !4289
  %3 = load i8*, i8** %2, align 8, !dbg !4290
  %4 = call i8* @quote_n(i32 0, i8* %3), !dbg !4291
  ret i8* %4, !dbg !4292
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setlocale_null_r(i32, i8* nonnull, i64) #4 !dbg !4293 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4297, metadata !DIExpression()), !dbg !4298
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4299, metadata !DIExpression()), !dbg !4300
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !4301, metadata !DIExpression()), !dbg !4302
  %7 = load i32, i32* %4, align 4, !dbg !4303
  %8 = load i8*, i8** %5, align 8, !dbg !4304
  %9 = load i64, i64* %6, align 8, !dbg !4305
  %10 = call i32 @setlocale_null_unlocked(i32 %7, i8* %8, i64 %9), !dbg !4306
  ret i32 %10, !dbg !4307
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setlocale_null_unlocked(i32, i8*, i64) #4 !dbg !4308 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4309, metadata !DIExpression()), !dbg !4310
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4311, metadata !DIExpression()), !dbg !4312
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !4313, metadata !DIExpression()), !dbg !4314
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4315, metadata !DIExpression()), !dbg !4316
  %10 = load i32, i32* %5, align 4, !dbg !4317
  %11 = call i8* @setlocale_null_androidfix(i32 %10), !dbg !4318
  store i8* %11, i8** %8, align 8, !dbg !4316
  %12 = load i8*, i8** %8, align 8, !dbg !4319
  %13 = icmp eq i8* %12, null, !dbg !4321
  br i1 %13, label %14, label %37, !dbg !4322

14:                                               ; preds = %3
  %15 = load i32, i32* @x.83
  %16 = load i32, i32* @y.84
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = load i64, i64* %7, align 8, !dbg !4323
  %24 = icmp ugt i64 %23, 0, !dbg !4326
  %25 = load i32, i32* @x.83
  %26 = load i32, i32* @y.84
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %24, label %33, label %36, !dbg !4327

33:                                               ; preds = %originalBBpart2
  %34 = load i8*, i8** %6, align 8, !dbg !4328
  %35 = getelementptr inbounds i8, i8* %34, i64 0, !dbg !4328
  store i8 0, i8* %35, align 1, !dbg !4329
  br label %36, !dbg !4328

36:                                               ; preds = %33, %originalBBpart2
  store i32 22, i32* %4, align 4, !dbg !4330
  br label %77, !dbg !4330

37:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata i64* %9, metadata !4331, metadata !DIExpression()), !dbg !4333
  %38 = load i8*, i8** %8, align 8, !dbg !4334
  %39 = call i64 @strlen(i8* %38) #13, !dbg !4335
  store i64 %39, i64* %9, align 8, !dbg !4333
  %40 = load i64, i64* %9, align 8, !dbg !4336
  %41 = load i64, i64* %7, align 8, !dbg !4338
  %42 = icmp ult i64 %40, %41, !dbg !4339
  br i1 %42, label %43, label %64, !dbg !4340

43:                                               ; preds = %37
  %44 = load i32, i32* @x.83
  %45 = load i32, i32* @y.84
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %43, %originalBB1alteredBB
  %52 = load i8*, i8** %6, align 8, !dbg !4341
  %53 = load i8*, i8** %8, align 8, !dbg !4343
  %54 = load i64, i64* %9, align 8, !dbg !4344
  %55 = add i64 %54, 1, !dbg !4345
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %53, i64 %55, i1 false), !dbg !4346
  store i32 0, i32* %4, align 4, !dbg !4347
  %56 = load i32, i32* @x.83
  %57 = load i32, i32* @y.84
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %77, !dbg !4347

64:                                               ; preds = %37
  %65 = load i64, i64* %7, align 8, !dbg !4348
  %66 = icmp ugt i64 %65, 0, !dbg !4351
  br i1 %66, label %67, label %76, !dbg !4352

67:                                               ; preds = %64
  %68 = load i8*, i8** %6, align 8, !dbg !4353
  %69 = load i8*, i8** %8, align 8, !dbg !4355
  %70 = load i64, i64* %7, align 8, !dbg !4356
  %71 = sub i64 %70, 1, !dbg !4357
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %68, i8* align 1 %69, i64 %71, i1 false), !dbg !4358
  %72 = load i8*, i8** %6, align 8, !dbg !4359
  %73 = load i64, i64* %7, align 8, !dbg !4360
  %74 = sub i64 %73, 1, !dbg !4361
  %75 = getelementptr inbounds i8, i8* %72, i64 %74, !dbg !4359
  store i8 0, i8* %75, align 1, !dbg !4362
  br label %76, !dbg !4363

76:                                               ; preds = %67, %64
  store i32 34, i32* %4, align 4, !dbg !4364
  br label %77, !dbg !4364

77:                                               ; preds = %76, %originalBBpart24, %36
  %78 = load i32, i32* @x.83
  %79 = load i32, i32* @y.84
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %77, %originalBB6alteredBB
  %86 = load i32, i32* %4, align 4, !dbg !4365
  %87 = load i32, i32* @x.83
  %88 = load i32, i32* @y.84
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i32 %86, !dbg !4365

originalBBalteredBB:                              ; preds = %originalBB, %14
  %95 = load i64, i64* %7, align 8, !dbg !4323
  %96 = icmp ugt i64 %95, 0, !dbg !4326
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %43
  %97 = load i8*, i8** %6, align 8, !dbg !4341
  %98 = load i8*, i8** %8, align 8, !dbg !4343
  %99 = load i64, i64* %9, align 8, !dbg !4344
  %_ = sub i64 %99, 1
  %gen = mul i64 %_, 1
  %100 = add i64 %99, 1, !dbg !4345
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %97, i8* align 1 %98, i64 %100, i1 false), !dbg !4346
  store i32 0, i32* %4, align 4, !dbg !4347
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %77
  %101 = load i32, i32* %4, align 4, !dbg !4365
  br label %originalBB6
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @setlocale_null_androidfix(i32) #4 !dbg !4366 {
  %2 = load i32, i32* @x.85
  %3 = load i32, i32* @y.86
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  store i32 %0, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4369, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.declare(metadata i8** %11, metadata !4371, metadata !DIExpression()), !dbg !4372
  %12 = load i32, i32* %10, align 4, !dbg !4373
  %13 = call i8* @setlocale(i32 %12, i8* null) #10, !dbg !4374
  store i8* %13, i8** %11, align 8, !dbg !4372
  %14 = load i8*, i8** %11, align 8, !dbg !4375
  %15 = load i32, i32* @x.85
  %16 = load i32, i32* @y.86
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %14, !dbg !4376

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca i32, align 4
  %24 = alloca i8*, align 8
  store i32 %0, i32* %23, align 4
  call void @llvm.dbg.declare(metadata i32* %23, metadata !4377, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.declare(metadata i8** %24, metadata !4380, metadata !DIExpression()), !dbg !4372
  %25 = load i32, i32* %23, align 4, !dbg !4373
  %26 = call i8* @setlocale(i32 %25, i8* null) #10, !dbg !4374
  store i8* %26, i8** %24, align 8, !dbg !4372
  %27 = load i8*, i8** %24, align 8, !dbg !4375
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_arn(%struct._IO_FILE*, i8*, i8*, i8*, i8**, i64) #4 !dbg !4381 {
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8**, align 8
  %12 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %7, metadata !4435, metadata !DIExpression()), !dbg !4436
  store i8* %1, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4437, metadata !DIExpression()), !dbg !4438
  store i8* %2, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !4439, metadata !DIExpression()), !dbg !4440
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !4441, metadata !DIExpression()), !dbg !4442
  store i8** %4, i8*** %11, align 8
  call void @llvm.dbg.declare(metadata i8*** %11, metadata !4443, metadata !DIExpression()), !dbg !4444
  store i64 %5, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !4445, metadata !DIExpression()), !dbg !4446
  %13 = load i8*, i8** %8, align 8, !dbg !4447
  %14 = icmp ne i8* %13, null, !dbg !4447
  br i1 %14, label %15, label %21, !dbg !4449

15:                                               ; preds = %6
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !4450
  %17 = load i8*, i8** %8, align 8, !dbg !4451
  %18 = load i8*, i8** %9, align 8, !dbg !4452
  %19 = load i8*, i8** %10, align 8, !dbg !4453
  %20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.137, i64 0, i64 0), i8* %17, i8* %18, i8* %19), !dbg !4454
  br label %42, !dbg !4454

21:                                               ; preds = %6
  %22 = load i32, i32* @x.87
  %23 = load i32, i32* @y.88
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !4455
  %31 = load i8*, i8** %9, align 8, !dbg !4456
  %32 = load i8*, i8** %10, align 8, !dbg !4457
  %33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.138, i64 0, i64 0), i8* %31, i8* %32), !dbg !4458
  %34 = load i32, i32* @x.87
  %35 = load i32, i32* @y.88
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %42

42:                                               ; preds = %originalBBpart2, %15
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !4459
  %44 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.139, i64 0, i64 0)) #10, !dbg !4460
  %45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %44, i32 2020), !dbg !4461
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !4462
  %47 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.140, i64 0, i64 0), %struct._IO_FILE* %46), !dbg !4462
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !4463
  %49 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.141, i64 0, i64 0)) #10, !dbg !4464
  %50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* %49, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.142, i64 0, i64 0)), !dbg !4465
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !4466
  %52 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.140, i64 0, i64 0), %struct._IO_FILE* %51), !dbg !4466
  %53 = load i64, i64* %12, align 8, !dbg !4467
  switch i64 %53, label %290 [
    i64 0, label %54
    i64 1, label %55
    i64 2, label %78
    i64 3, label %88
    i64 4, label %117
    i64 5, label %149
    i64 6, label %168
    i64 7, label %206
    i64 8, label %231
    i64 9, label %259
  ], !dbg !4468

54:                                               ; preds = %42
  br label %337, !dbg !4469

55:                                               ; preds = %42
  %56 = load i32, i32* @x.87
  %57 = load i32, i32* @y.88
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %55, %originalBB1alteredBB
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !4471
  %65 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.143, i64 0, i64 0)) #10, !dbg !4472
  %66 = load i8**, i8*** %11, align 8, !dbg !4473
  %67 = getelementptr inbounds i8*, i8** %66, i64 0, !dbg !4473
  %68 = load i8*, i8** %67, align 8, !dbg !4473
  %69 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %64, i8* %65, i8* %68), !dbg !4474
  %70 = load i32, i32* @x.87
  %71 = load i32, i32* @y.88
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %337, !dbg !4475

78:                                               ; preds = %42
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !4476
  %80 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.144, i64 0, i64 0)) #10, !dbg !4477
  %81 = load i8**, i8*** %11, align 8, !dbg !4478
  %82 = getelementptr inbounds i8*, i8** %81, i64 0, !dbg !4478
  %83 = load i8*, i8** %82, align 8, !dbg !4478
  %84 = load i8**, i8*** %11, align 8, !dbg !4479
  %85 = getelementptr inbounds i8*, i8** %84, i64 1, !dbg !4479
  %86 = load i8*, i8** %85, align 8, !dbg !4479
  %87 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %79, i8* %80, i8* %83, i8* %86), !dbg !4480
  br label %337, !dbg !4481

88:                                               ; preds = %42
  %89 = load i32, i32* @x.87
  %90 = load i32, i32* @y.88
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %88, %originalBB6alteredBB
  %97 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !4482
  %98 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.145, i64 0, i64 0)) #10, !dbg !4483
  %99 = load i8**, i8*** %11, align 8, !dbg !4484
  %100 = getelementptr inbounds i8*, i8** %99, i64 0, !dbg !4484
  %101 = load i8*, i8** %100, align 8, !dbg !4484
  %102 = load i8**, i8*** %11, align 8, !dbg !4485
  %103 = getelementptr inbounds i8*, i8** %102, i64 1, !dbg !4485
  %104 = load i8*, i8** %103, align 8, !dbg !4485
  %105 = load i8**, i8*** %11, align 8, !dbg !4486
  %106 = getelementptr inbounds i8*, i8** %105, i64 2, !dbg !4486
  %107 = load i8*, i8** %106, align 8, !dbg !4486
  %108 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %97, i8* %98, i8* %101, i8* %104, i8* %107), !dbg !4487
  %109 = load i32, i32* @x.87
  %110 = load i32, i32* @y.88
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %337, !dbg !4488

117:                                              ; preds = %42
  %118 = load i32, i32* @x.87
  %119 = load i32, i32* @y.88
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %117, %originalBB10alteredBB
  %126 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !4489
  %127 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.146, i64 0, i64 0)) #10, !dbg !4490
  %128 = load i8**, i8*** %11, align 8, !dbg !4491
  %129 = getelementptr inbounds i8*, i8** %128, i64 0, !dbg !4491
  %130 = load i8*, i8** %129, align 8, !dbg !4491
  %131 = load i8**, i8*** %11, align 8, !dbg !4492
  %132 = getelementptr inbounds i8*, i8** %131, i64 1, !dbg !4492
  %133 = load i8*, i8** %132, align 8, !dbg !4492
  %134 = load i8**, i8*** %11, align 8, !dbg !4493
  %135 = getelementptr inbounds i8*, i8** %134, i64 2, !dbg !4493
  %136 = load i8*, i8** %135, align 8, !dbg !4493
  %137 = load i8**, i8*** %11, align 8, !dbg !4494
  %138 = getelementptr inbounds i8*, i8** %137, i64 3, !dbg !4494
  %139 = load i8*, i8** %138, align 8, !dbg !4494
  %140 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %126, i8* %127, i8* %130, i8* %133, i8* %136, i8* %139), !dbg !4495
  %141 = load i32, i32* @x.87
  %142 = load i32, i32* @y.88
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %337, !dbg !4496

149:                                              ; preds = %42
  %150 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !4497
  %151 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.147, i64 0, i64 0)) #10, !dbg !4498
  %152 = load i8**, i8*** %11, align 8, !dbg !4499
  %153 = getelementptr inbounds i8*, i8** %152, i64 0, !dbg !4499
  %154 = load i8*, i8** %153, align 8, !dbg !4499
  %155 = load i8**, i8*** %11, align 8, !dbg !4500
  %156 = getelementptr inbounds i8*, i8** %155, i64 1, !dbg !4500
  %157 = load i8*, i8** %156, align 8, !dbg !4500
  %158 = load i8**, i8*** %11, align 8, !dbg !4501
  %159 = getelementptr inbounds i8*, i8** %158, i64 2, !dbg !4501
  %160 = load i8*, i8** %159, align 8, !dbg !4501
  %161 = load i8**, i8*** %11, align 8, !dbg !4502
  %162 = getelementptr inbounds i8*, i8** %161, i64 3, !dbg !4502
  %163 = load i8*, i8** %162, align 8, !dbg !4502
  %164 = load i8**, i8*** %11, align 8, !dbg !4503
  %165 = getelementptr inbounds i8*, i8** %164, i64 4, !dbg !4503
  %166 = load i8*, i8** %165, align 8, !dbg !4503
  %167 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %150, i8* %151, i8* %154, i8* %157, i8* %160, i8* %163, i8* %166), !dbg !4504
  br label %337, !dbg !4505

168:                                              ; preds = %42
  %169 = load i32, i32* @x.87
  %170 = load i32, i32* @y.88
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %168, %originalBB14alteredBB
  %177 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !4506
  %178 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.148, i64 0, i64 0)) #10, !dbg !4507
  %179 = load i8**, i8*** %11, align 8, !dbg !4508
  %180 = getelementptr inbounds i8*, i8** %179, i64 0, !dbg !4508
  %181 = load i8*, i8** %180, align 8, !dbg !4508
  %182 = load i8**, i8*** %11, align 8, !dbg !4509
  %183 = getelementptr inbounds i8*, i8** %182, i64 1, !dbg !4509
  %184 = load i8*, i8** %183, align 8, !dbg !4509
  %185 = load i8**, i8*** %11, align 8, !dbg !4510
  %186 = getelementptr inbounds i8*, i8** %185, i64 2, !dbg !4510
  %187 = load i8*, i8** %186, align 8, !dbg !4510
  %188 = load i8**, i8*** %11, align 8, !dbg !4511
  %189 = getelementptr inbounds i8*, i8** %188, i64 3, !dbg !4511
  %190 = load i8*, i8** %189, align 8, !dbg !4511
  %191 = load i8**, i8*** %11, align 8, !dbg !4512
  %192 = getelementptr inbounds i8*, i8** %191, i64 4, !dbg !4512
  %193 = load i8*, i8** %192, align 8, !dbg !4512
  %194 = load i8**, i8*** %11, align 8, !dbg !4513
  %195 = getelementptr inbounds i8*, i8** %194, i64 5, !dbg !4513
  %196 = load i8*, i8** %195, align 8, !dbg !4513
  %197 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %177, i8* %178, i8* %181, i8* %184, i8* %187, i8* %190, i8* %193, i8* %196), !dbg !4514
  %198 = load i32, i32* @x.87
  %199 = load i32, i32* @y.88
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %337, !dbg !4515

206:                                              ; preds = %42
  %207 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !4516
  %208 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.149, i64 0, i64 0)) #10, !dbg !4517
  %209 = load i8**, i8*** %11, align 8, !dbg !4518
  %210 = getelementptr inbounds i8*, i8** %209, i64 0, !dbg !4518
  %211 = load i8*, i8** %210, align 8, !dbg !4518
  %212 = load i8**, i8*** %11, align 8, !dbg !4519
  %213 = getelementptr inbounds i8*, i8** %212, i64 1, !dbg !4519
  %214 = load i8*, i8** %213, align 8, !dbg !4519
  %215 = load i8**, i8*** %11, align 8, !dbg !4520
  %216 = getelementptr inbounds i8*, i8** %215, i64 2, !dbg !4520
  %217 = load i8*, i8** %216, align 8, !dbg !4520
  %218 = load i8**, i8*** %11, align 8, !dbg !4521
  %219 = getelementptr inbounds i8*, i8** %218, i64 3, !dbg !4521
  %220 = load i8*, i8** %219, align 8, !dbg !4521
  %221 = load i8**, i8*** %11, align 8, !dbg !4522
  %222 = getelementptr inbounds i8*, i8** %221, i64 4, !dbg !4522
  %223 = load i8*, i8** %222, align 8, !dbg !4522
  %224 = load i8**, i8*** %11, align 8, !dbg !4523
  %225 = getelementptr inbounds i8*, i8** %224, i64 5, !dbg !4523
  %226 = load i8*, i8** %225, align 8, !dbg !4523
  %227 = load i8**, i8*** %11, align 8, !dbg !4524
  %228 = getelementptr inbounds i8*, i8** %227, i64 6, !dbg !4524
  %229 = load i8*, i8** %228, align 8, !dbg !4524
  %230 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %207, i8* %208, i8* %211, i8* %214, i8* %217, i8* %220, i8* %223, i8* %226, i8* %229), !dbg !4525
  br label %337, !dbg !4526

231:                                              ; preds = %42
  %232 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !4527
  %233 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.150, i64 0, i64 0)) #10, !dbg !4528
  %234 = load i8**, i8*** %11, align 8, !dbg !4529
  %235 = getelementptr inbounds i8*, i8** %234, i64 0, !dbg !4529
  %236 = load i8*, i8** %235, align 8, !dbg !4529
  %237 = load i8**, i8*** %11, align 8, !dbg !4530
  %238 = getelementptr inbounds i8*, i8** %237, i64 1, !dbg !4530
  %239 = load i8*, i8** %238, align 8, !dbg !4530
  %240 = load i8**, i8*** %11, align 8, !dbg !4531
  %241 = getelementptr inbounds i8*, i8** %240, i64 2, !dbg !4531
  %242 = load i8*, i8** %241, align 8, !dbg !4531
  %243 = load i8**, i8*** %11, align 8, !dbg !4532
  %244 = getelementptr inbounds i8*, i8** %243, i64 3, !dbg !4532
  %245 = load i8*, i8** %244, align 8, !dbg !4532
  %246 = load i8**, i8*** %11, align 8, !dbg !4533
  %247 = getelementptr inbounds i8*, i8** %246, i64 4, !dbg !4533
  %248 = load i8*, i8** %247, align 8, !dbg !4533
  %249 = load i8**, i8*** %11, align 8, !dbg !4534
  %250 = getelementptr inbounds i8*, i8** %249, i64 5, !dbg !4534
  %251 = load i8*, i8** %250, align 8, !dbg !4534
  %252 = load i8**, i8*** %11, align 8, !dbg !4535
  %253 = getelementptr inbounds i8*, i8** %252, i64 6, !dbg !4535
  %254 = load i8*, i8** %253, align 8, !dbg !4535
  %255 = load i8**, i8*** %11, align 8, !dbg !4536
  %256 = getelementptr inbounds i8*, i8** %255, i64 7, !dbg !4536
  %257 = load i8*, i8** %256, align 8, !dbg !4536
  %258 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %232, i8* %233, i8* %236, i8* %239, i8* %242, i8* %245, i8* %248, i8* %251, i8* %254, i8* %257), !dbg !4537
  br label %337, !dbg !4538

259:                                              ; preds = %42
  %260 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !4539
  %261 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.151, i64 0, i64 0)) #10, !dbg !4540
  %262 = load i8**, i8*** %11, align 8, !dbg !4541
  %263 = getelementptr inbounds i8*, i8** %262, i64 0, !dbg !4541
  %264 = load i8*, i8** %263, align 8, !dbg !4541
  %265 = load i8**, i8*** %11, align 8, !dbg !4542
  %266 = getelementptr inbounds i8*, i8** %265, i64 1, !dbg !4542
  %267 = load i8*, i8** %266, align 8, !dbg !4542
  %268 = load i8**, i8*** %11, align 8, !dbg !4543
  %269 = getelementptr inbounds i8*, i8** %268, i64 2, !dbg !4543
  %270 = load i8*, i8** %269, align 8, !dbg !4543
  %271 = load i8**, i8*** %11, align 8, !dbg !4544
  %272 = getelementptr inbounds i8*, i8** %271, i64 3, !dbg !4544
  %273 = load i8*, i8** %272, align 8, !dbg !4544
  %274 = load i8**, i8*** %11, align 8, !dbg !4545
  %275 = getelementptr inbounds i8*, i8** %274, i64 4, !dbg !4545
  %276 = load i8*, i8** %275, align 8, !dbg !4545
  %277 = load i8**, i8*** %11, align 8, !dbg !4546
  %278 = getelementptr inbounds i8*, i8** %277, i64 5, !dbg !4546
  %279 = load i8*, i8** %278, align 8, !dbg !4546
  %280 = load i8**, i8*** %11, align 8, !dbg !4547
  %281 = getelementptr inbounds i8*, i8** %280, i64 6, !dbg !4547
  %282 = load i8*, i8** %281, align 8, !dbg !4547
  %283 = load i8**, i8*** %11, align 8, !dbg !4548
  %284 = getelementptr inbounds i8*, i8** %283, i64 7, !dbg !4548
  %285 = load i8*, i8** %284, align 8, !dbg !4548
  %286 = load i8**, i8*** %11, align 8, !dbg !4549
  %287 = getelementptr inbounds i8*, i8** %286, i64 8, !dbg !4549
  %288 = load i8*, i8** %287, align 8, !dbg !4549
  %289 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %260, i8* %261, i8* %264, i8* %267, i8* %270, i8* %273, i8* %276, i8* %279, i8* %282, i8* %285, i8* %288), !dbg !4550
  br label %337, !dbg !4551

290:                                              ; preds = %42
  %291 = load i32, i32* @x.87
  %292 = load i32, i32* @y.88
  %293 = sub i32 %291, 1
  %294 = mul i32 %291, %293
  %295 = urem i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %296, %297
  br i1 %298, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %290, %originalBB18alteredBB
  %299 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !4552
  %300 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.152, i64 0, i64 0)) #10, !dbg !4553
  %301 = load i8**, i8*** %11, align 8, !dbg !4554
  %302 = getelementptr inbounds i8*, i8** %301, i64 0, !dbg !4554
  %303 = load i8*, i8** %302, align 8, !dbg !4554
  %304 = load i8**, i8*** %11, align 8, !dbg !4555
  %305 = getelementptr inbounds i8*, i8** %304, i64 1, !dbg !4555
  %306 = load i8*, i8** %305, align 8, !dbg !4555
  %307 = load i8**, i8*** %11, align 8, !dbg !4556
  %308 = getelementptr inbounds i8*, i8** %307, i64 2, !dbg !4556
  %309 = load i8*, i8** %308, align 8, !dbg !4556
  %310 = load i8**, i8*** %11, align 8, !dbg !4557
  %311 = getelementptr inbounds i8*, i8** %310, i64 3, !dbg !4557
  %312 = load i8*, i8** %311, align 8, !dbg !4557
  %313 = load i8**, i8*** %11, align 8, !dbg !4558
  %314 = getelementptr inbounds i8*, i8** %313, i64 4, !dbg !4558
  %315 = load i8*, i8** %314, align 8, !dbg !4558
  %316 = load i8**, i8*** %11, align 8, !dbg !4559
  %317 = getelementptr inbounds i8*, i8** %316, i64 5, !dbg !4559
  %318 = load i8*, i8** %317, align 8, !dbg !4559
  %319 = load i8**, i8*** %11, align 8, !dbg !4560
  %320 = getelementptr inbounds i8*, i8** %319, i64 6, !dbg !4560
  %321 = load i8*, i8** %320, align 8, !dbg !4560
  %322 = load i8**, i8*** %11, align 8, !dbg !4561
  %323 = getelementptr inbounds i8*, i8** %322, i64 7, !dbg !4561
  %324 = load i8*, i8** %323, align 8, !dbg !4561
  %325 = load i8**, i8*** %11, align 8, !dbg !4562
  %326 = getelementptr inbounds i8*, i8** %325, i64 8, !dbg !4562
  %327 = load i8*, i8** %326, align 8, !dbg !4562
  %328 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %299, i8* %300, i8* %303, i8* %306, i8* %309, i8* %312, i8* %315, i8* %318, i8* %321, i8* %324, i8* %327), !dbg !4563
  %329 = load i32, i32* @x.87
  %330 = load i32, i32* @y.88
  %331 = sub i32 %329, 1
  %332 = mul i32 %329, %331
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %334, %335
  br i1 %336, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %337, !dbg !4564

337:                                              ; preds = %originalBBpart220, %259, %231, %206, %originalBBpart216, %149, %originalBBpart212, %originalBBpart28, %78, %originalBBpart24, %54
  %338 = load i32, i32* @x.87
  %339 = load i32, i32* @y.88
  %340 = sub i32 %338, 1
  %341 = mul i32 %338, %340
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %343, %344
  br i1 %345, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %337, %originalBB22alteredBB
  %346 = load i32, i32* @x.87
  %347 = load i32, i32* @y.88
  %348 = sub i32 %346, 1
  %349 = mul i32 %346, %348
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %351, %352
  br i1 %353, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret void, !dbg !4565

originalBBalteredBB:                              ; preds = %originalBB, %21
  %354 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !4455
  %355 = load i8*, i8** %9, align 8, !dbg !4456
  %356 = load i8*, i8** %10, align 8, !dbg !4457
  %357 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %354, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.138, i64 0, i64 0), i8* %355, i8* %356), !dbg !4458
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %55
  %358 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !4471
  %359 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.143, i64 0, i64 0)) #10, !dbg !4472
  %360 = load i8**, i8*** %11, align 8, !dbg !4473
  %361 = getelementptr inbounds i8*, i8** %360, i64 0, !dbg !4473
  %362 = load i8*, i8** %361, align 8, !dbg !4473
  %363 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %358, i8* %359, i8* %362), !dbg !4474
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %88
  %364 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !4482
  %365 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.145, i64 0, i64 0)) #10, !dbg !4483
  %366 = load i8**, i8*** %11, align 8, !dbg !4484
  %367 = getelementptr inbounds i8*, i8** %366, i64 0, !dbg !4484
  %368 = load i8*, i8** %367, align 8, !dbg !4484
  %369 = load i8**, i8*** %11, align 8, !dbg !4485
  %370 = getelementptr inbounds i8*, i8** %369, i64 1, !dbg !4485
  %371 = load i8*, i8** %370, align 8, !dbg !4485
  %372 = load i8**, i8*** %11, align 8, !dbg !4486
  %373 = getelementptr inbounds i8*, i8** %372, i64 2, !dbg !4486
  %374 = load i8*, i8** %373, align 8, !dbg !4486
  %375 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %364, i8* %365, i8* %368, i8* %371, i8* %374), !dbg !4487
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %117
  %376 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !4489
  %377 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.146, i64 0, i64 0)) #10, !dbg !4490
  %378 = load i8**, i8*** %11, align 8, !dbg !4491
  %379 = getelementptr inbounds i8*, i8** %378, i64 0, !dbg !4491
  %380 = load i8*, i8** %379, align 8, !dbg !4491
  %381 = load i8**, i8*** %11, align 8, !dbg !4492
  %382 = getelementptr inbounds i8*, i8** %381, i64 1, !dbg !4492
  %383 = load i8*, i8** %382, align 8, !dbg !4492
  %384 = load i8**, i8*** %11, align 8, !dbg !4493
  %385 = getelementptr inbounds i8*, i8** %384, i64 2, !dbg !4493
  %386 = load i8*, i8** %385, align 8, !dbg !4493
  %387 = load i8**, i8*** %11, align 8, !dbg !4494
  %388 = getelementptr inbounds i8*, i8** %387, i64 3, !dbg !4494
  %389 = load i8*, i8** %388, align 8, !dbg !4494
  %390 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %376, i8* %377, i8* %380, i8* %383, i8* %386, i8* %389), !dbg !4495
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %168
  %391 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !4506
  %392 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.148, i64 0, i64 0)) #10, !dbg !4507
  %393 = load i8**, i8*** %11, align 8, !dbg !4508
  %394 = getelementptr inbounds i8*, i8** %393, i64 0, !dbg !4508
  %395 = load i8*, i8** %394, align 8, !dbg !4508
  %396 = load i8**, i8*** %11, align 8, !dbg !4509
  %397 = getelementptr inbounds i8*, i8** %396, i64 1, !dbg !4509
  %398 = load i8*, i8** %397, align 8, !dbg !4509
  %399 = load i8**, i8*** %11, align 8, !dbg !4510
  %400 = getelementptr inbounds i8*, i8** %399, i64 2, !dbg !4510
  %401 = load i8*, i8** %400, align 8, !dbg !4510
  %402 = load i8**, i8*** %11, align 8, !dbg !4511
  %403 = getelementptr inbounds i8*, i8** %402, i64 3, !dbg !4511
  %404 = load i8*, i8** %403, align 8, !dbg !4511
  %405 = load i8**, i8*** %11, align 8, !dbg !4512
  %406 = getelementptr inbounds i8*, i8** %405, i64 4, !dbg !4512
  %407 = load i8*, i8** %406, align 8, !dbg !4512
  %408 = load i8**, i8*** %11, align 8, !dbg !4513
  %409 = getelementptr inbounds i8*, i8** %408, i64 5, !dbg !4513
  %410 = load i8*, i8** %409, align 8, !dbg !4513
  %411 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %391, i8* %392, i8* %395, i8* %398, i8* %401, i8* %404, i8* %407, i8* %410), !dbg !4514
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %290
  %412 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !4552
  %413 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.152, i64 0, i64 0)) #10, !dbg !4553
  %414 = load i8**, i8*** %11, align 8, !dbg !4554
  %415 = getelementptr inbounds i8*, i8** %414, i64 0, !dbg !4554
  %416 = load i8*, i8** %415, align 8, !dbg !4554
  %417 = load i8**, i8*** %11, align 8, !dbg !4555
  %418 = getelementptr inbounds i8*, i8** %417, i64 1, !dbg !4555
  %419 = load i8*, i8** %418, align 8, !dbg !4555
  %420 = load i8**, i8*** %11, align 8, !dbg !4556
  %421 = getelementptr inbounds i8*, i8** %420, i64 2, !dbg !4556
  %422 = load i8*, i8** %421, align 8, !dbg !4556
  %423 = load i8**, i8*** %11, align 8, !dbg !4557
  %424 = getelementptr inbounds i8*, i8** %423, i64 3, !dbg !4557
  %425 = load i8*, i8** %424, align 8, !dbg !4557
  %426 = load i8**, i8*** %11, align 8, !dbg !4558
  %427 = getelementptr inbounds i8*, i8** %426, i64 4, !dbg !4558
  %428 = load i8*, i8** %427, align 8, !dbg !4558
  %429 = load i8**, i8*** %11, align 8, !dbg !4559
  %430 = getelementptr inbounds i8*, i8** %429, i64 5, !dbg !4559
  %431 = load i8*, i8** %430, align 8, !dbg !4559
  %432 = load i8**, i8*** %11, align 8, !dbg !4560
  %433 = getelementptr inbounds i8*, i8** %432, i64 6, !dbg !4560
  %434 = load i8*, i8** %433, align 8, !dbg !4560
  %435 = load i8**, i8*** %11, align 8, !dbg !4561
  %436 = getelementptr inbounds i8*, i8** %435, i64 7, !dbg !4561
  %437 = load i8*, i8** %436, align 8, !dbg !4561
  %438 = load i8**, i8*** %11, align 8, !dbg !4562
  %439 = getelementptr inbounds i8*, i8** %438, i64 8, !dbg !4562
  %440 = load i8*, i8** %439, align 8, !dbg !4562
  %441 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %412, i8* %413, i8* %416, i8* %419, i8* %422, i8* %425, i8* %428, i8* %431, i8* %434, i8* %437, i8* %440), !dbg !4563
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %337
  br label %originalBB22
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_va(%struct._IO_FILE*, i8*, i8*, i8*, %struct.__va_list_tag*) #4 !dbg !4566 {
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.__va_list_tag*, align 8
  %11 = alloca i64, align 8
  %12 = alloca [10 x i8*], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !4576, metadata !DIExpression()), !dbg !4577
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4578, metadata !DIExpression()), !dbg !4579
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4580, metadata !DIExpression()), !dbg !4581
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !4582, metadata !DIExpression()), !dbg !4583
  store %struct.__va_list_tag* %4, %struct.__va_list_tag** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %10, metadata !4584, metadata !DIExpression()), !dbg !4585
  call void @llvm.dbg.declare(metadata i64* %11, metadata !4586, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.declare(metadata [10 x i8*]* %12, metadata !4588, metadata !DIExpression()), !dbg !4590
  store i64 0, i64* %11, align 8, !dbg !4591
  br label %13, !dbg !4593

13:                                               ; preds = %89, %5
  %14 = load i64, i64* %11, align 8, !dbg !4594
  %15 = icmp ult i64 %14, 10, !dbg !4596
  br i1 %15, label %16, label %70, !dbg !4597

16:                                               ; preds = %13
  %17 = load %struct.__va_list_tag*, %struct.__va_list_tag** %10, align 8, !dbg !4598
  %18 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %17, i32 0, i32 0, !dbg !4598
  %19 = load i32, i32* %18, align 8, !dbg !4598
  %20 = icmp ule i32 %19, 40, !dbg !4598
  br i1 %20, label %21, label %43, !dbg !4598

21:                                               ; preds = %16
  %22 = load i32, i32* @x.89
  %23 = load i32, i32* @y.90
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %17, i32 0, i32 3, !dbg !4598
  %31 = load i8*, i8** %30, align 8, !dbg !4598
  %32 = getelementptr i8, i8* %31, i32 %19, !dbg !4598
  %33 = bitcast i8* %32 to i8**, !dbg !4598
  %34 = add i32 %19, 8, !dbg !4598
  store i32 %34, i32* %18, align 8, !dbg !4598
  %35 = load i32, i32* @x.89
  %36 = load i32, i32* @y.90
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %48, !dbg !4598

43:                                               ; preds = %16
  %44 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %17, i32 0, i32 2, !dbg !4598
  %45 = load i8*, i8** %44, align 8, !dbg !4598
  %46 = bitcast i8* %45 to i8**, !dbg !4598
  %47 = getelementptr i8, i8* %45, i32 8, !dbg !4598
  store i8* %47, i8** %44, align 8, !dbg !4598
  br label %48, !dbg !4598

48:                                               ; preds = %43, %originalBBpart2
  %49 = phi i8** [ %33, %originalBBpart2 ], [ %46, %43 ], !dbg !4598
  %50 = load i32, i32* @x.89
  %51 = load i32, i32* @y.90
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %48, %originalBB1alteredBB
  %58 = load i8*, i8** %49, align 8, !dbg !4598
  %59 = load i64, i64* %11, align 8, !dbg !4599
  %60 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 %59, !dbg !4600
  store i8* %58, i8** %60, align 8, !dbg !4601
  %61 = icmp ne i8* %58, null, !dbg !4602
  %62 = load i32, i32* @x.89
  %63 = load i32, i32* @y.90
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %70

70:                                               ; preds = %originalBBpart24, %13
  %71 = phi i1 [ false, %13 ], [ %61, %originalBBpart24 ], !dbg !4603
  br i1 %71, label %72, label %92, !dbg !4604

72:                                               ; preds = %70
  %73 = load i32, i32* @x.89
  %74 = load i32, i32* @y.90
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %72, %originalBB6alteredBB
  %81 = load i32, i32* @x.89
  %82 = load i32, i32* @y.90
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %89, !dbg !4604

89:                                               ; preds = %originalBBpart28
  %90 = load i64, i64* %11, align 8, !dbg !4605
  %91 = add i64 %90, 1, !dbg !4605
  store i64 %91, i64* %11, align 8, !dbg !4605
  br label %13, !dbg !4606, !llvm.loop !4607

92:                                               ; preds = %70
  %93 = load i32, i32* @x.89
  %94 = load i32, i32* @y.90
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %92, %originalBB10alteredBB
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !4609
  %102 = load i8*, i8** %7, align 8, !dbg !4610
  %103 = load i8*, i8** %8, align 8, !dbg !4611
  %104 = load i8*, i8** %9, align 8, !dbg !4612
  %105 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 0, !dbg !4613
  %106 = load i64, i64* %11, align 8, !dbg !4614
  call void @version_etc_arn(%struct._IO_FILE* %101, i8* %102, i8* %103, i8* %104, i8** %105, i64 %106), !dbg !4615
  %107 = load i32, i32* @x.89
  %108 = load i32, i32* @y.90
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret void, !dbg !4616

originalBBalteredBB:                              ; preds = %originalBB, %21
  %115 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %17, i32 0, i32 3, !dbg !4598
  %116 = load i8*, i8** %115, align 8, !dbg !4598
  %117 = getelementptr i8, i8* %116, i32 %19, !dbg !4598
  %118 = bitcast i8* %117 to i8**, !dbg !4598
  %_ = sub i32 %19, 8
  %gen = mul i32 %_, 8
  %119 = add i32 %19, 8, !dbg !4598
  store i32 %119, i32* %18, align 8, !dbg !4598
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %48
  %120 = load i8*, i8** %49, align 8, !dbg !4598
  %121 = load i64, i64* %11, align 8, !dbg !4599
  %122 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 %121, !dbg !4600
  store i8* %120, i8** %122, align 8, !dbg !4601
  %123 = icmp ne i8* %120, null, !dbg !4602
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %72
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %92
  %124 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !4609
  %125 = load i8*, i8** %7, align 8, !dbg !4610
  %126 = load i8*, i8** %8, align 8, !dbg !4611
  %127 = load i8*, i8** %9, align 8, !dbg !4612
  %128 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 0, !dbg !4613
  %129 = load i64, i64* %11, align 8, !dbg !4614
  call void @version_etc_arn(%struct._IO_FILE* %124, i8* %125, i8* %126, i8* %127, i8** %128, i64 %129), !dbg !4615
  br label %originalBB10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc(%struct._IO_FILE*, i8*, i8*, i8*, ...) #4 !dbg !4617 {
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %5, metadata !4620, metadata !DIExpression()), !dbg !4621
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4622, metadata !DIExpression()), !dbg !4623
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4624, metadata !DIExpression()), !dbg !4625
  store i8* %3, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4626, metadata !DIExpression()), !dbg !4627
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %9, metadata !4628, metadata !DIExpression()), !dbg !4635
  %10 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i64 0, i64 0, !dbg !4636
  %11 = bitcast %struct.__va_list_tag* %10 to i8*, !dbg !4636
  call void @llvm.va_start(i8* %11), !dbg !4636
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4637
  %13 = load i8*, i8** %6, align 8, !dbg !4638
  %14 = load i8*, i8** %7, align 8, !dbg !4639
  %15 = load i8*, i8** %8, align 8, !dbg !4640
  %16 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i64 0, i64 0, !dbg !4641
  call void @version_etc_va(%struct._IO_FILE* %12, i8* %13, i8* %14, i8* %15, %struct.__va_list_tag* %16), !dbg !4642
  %17 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i64 0, i64 0, !dbg !4643
  %18 = bitcast %struct.__va_list_tag* %17 to i8*, !dbg !4643
  call void @llvm.va_end(i8* %18), !dbg !4643
  ret void, !dbg !4644
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #10

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #10

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xmalloc(i64) #4 !dbg !4645 {
  %2 = alloca i64, align 8
  %3 = alloca i8*, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !4649, metadata !DIExpression()), !dbg !4650
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4651, metadata !DIExpression()), !dbg !4652
  %4 = load i64, i64* %2, align 8, !dbg !4653
  %5 = call noalias i8* @malloc(i64 %4) #10, !dbg !4654
  store i8* %5, i8** %3, align 8, !dbg !4652
  %6 = load i8*, i8** %3, align 8, !dbg !4655
  %7 = icmp ne i8* %6, null, !dbg !4655
  br i1 %7, label %28, label %8, !dbg !4657

8:                                                ; preds = %1
  %9 = load i64, i64* %2, align 8, !dbg !4658
  %10 = icmp ne i64 %9, 0, !dbg !4659
  br i1 %10, label %11, label %28, !dbg !4660

11:                                               ; preds = %8
  %12 = load i32, i32* @x.93
  %13 = load i32, i32* @y.94
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  call void @xalloc_die() #14, !dbg !4661
  %20 = load i32, i32* @x.93
  %21 = load i32, i32* @y.94
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable, !dbg !4661

28:                                               ; preds = %8, %1
  %29 = load i32, i32* @x.93
  %30 = load i32, i32* @y.94
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = load i8*, i8** %3, align 8, !dbg !4662
  %38 = load i32, i32* @x.93
  %39 = load i32, i32* @y.94
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret i8* %37, !dbg !4663

originalBBalteredBB:                              ; preds = %originalBB, %11
  call void @xalloc_die() #14, !dbg !4661
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %46 = load i8*, i8** %3, align 8, !dbg !4662
  br label %originalBB1
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xrealloc(i8*, i64) #4 !dbg !4664 {
  %3 = load i32, i32* @x.95
  %4 = load i32, i32* @y.96
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !4667, metadata !DIExpression()), !dbg !4668
  store i64 %1, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !4669, metadata !DIExpression()), !dbg !4670
  %14 = load i64, i64* %13, align 8, !dbg !4671
  %15 = icmp ne i64 %14, 0, !dbg !4671
  %16 = load i32, i32* @x.95
  %17 = load i32, i32* @y.96
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %45, label %24, !dbg !4673

24:                                               ; preds = %originalBBpart2
  %25 = load i8*, i8** %12, align 8, !dbg !4674
  %26 = icmp ne i8* %25, null, !dbg !4674
  br i1 %26, label %27, label %45, !dbg !4675

27:                                               ; preds = %24
  %28 = load i32, i32* @x.95
  %29 = load i32, i32* @y.96
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load i8*, i8** %12, align 8, !dbg !4676
  call void @free(i8* %36) #10, !dbg !4678
  store i8* null, i8** %11, align 8, !dbg !4679
  %37 = load i32, i32* @x.95
  %38 = load i32, i32* @y.96
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %89, !dbg !4679

45:                                               ; preds = %24, %originalBBpart2
  %46 = load i32, i32* @x.95
  %47 = load i32, i32* @y.96
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %45, %originalBB6alteredBB
  %54 = load i8*, i8** %12, align 8, !dbg !4680
  %55 = load i64, i64* %13, align 8, !dbg !4681
  %56 = call i8* @realloc(i8* %54, i64 %55) #10, !dbg !4682
  store i8* %56, i8** %12, align 8, !dbg !4683
  %57 = load i8*, i8** %12, align 8, !dbg !4684
  %58 = icmp ne i8* %57, null, !dbg !4684
  %59 = load i32, i32* @x.95
  %60 = load i32, i32* @y.96
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %58, label %87, label %67, !dbg !4686

67:                                               ; preds = %originalBBpart28
  %68 = load i64, i64* %13, align 8, !dbg !4687
  %69 = icmp ne i64 %68, 0, !dbg !4687
  br i1 %69, label %70, label %87, !dbg !4688

70:                                               ; preds = %67
  %71 = load i32, i32* @x.95
  %72 = load i32, i32* @y.96
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %70, %originalBB10alteredBB
  call void @xalloc_die() #14, !dbg !4689
  %79 = load i32, i32* @x.95
  %80 = load i32, i32* @y.96
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  unreachable, !dbg !4689

87:                                               ; preds = %67, %originalBBpart28
  %88 = load i8*, i8** %12, align 8, !dbg !4690
  store i8* %88, i8** %11, align 8, !dbg !4691
  br label %89, !dbg !4691

89:                                               ; preds = %87, %originalBBpart24
  %90 = load i32, i32* @x.95
  %91 = load i32, i32* @y.96
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %89, %originalBB14alteredBB
  %98 = load i8*, i8** %11, align 8, !dbg !4692
  %99 = load i32, i32* @x.95
  %100 = load i32, i32* @y.96
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret i8* %98, !dbg !4692

originalBBalteredBB:                              ; preds = %originalBB, %2
  %107 = alloca i8*, align 8
  %108 = alloca i8*, align 8
  %109 = alloca i64, align 8
  store i8* %0, i8** %108, align 8
  call void @llvm.dbg.declare(metadata i8** %108, metadata !4693, metadata !DIExpression()), !dbg !4668
  store i64 %1, i64* %109, align 8
  call void @llvm.dbg.declare(metadata i64* %109, metadata !4696, metadata !DIExpression()), !dbg !4670
  %110 = load i64, i64* %109, align 8, !dbg !4671
  %111 = icmp ne i64 %110, 0, !dbg !4671
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %112 = load i8*, i8** %12, align 8, !dbg !4676
  call void @free(i8* %112) #10, !dbg !4678
  store i8* null, i8** %11, align 8, !dbg !4679
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %45
  %113 = load i8*, i8** %12, align 8, !dbg !4680
  %114 = load i64, i64* %13, align 8, !dbg !4681
  %115 = call i8* @realloc(i8* %113, i64 %114) #10, !dbg !4682
  store i8* %115, i8** %12, align 8, !dbg !4683
  %116 = load i8*, i8** %12, align 8, !dbg !4684
  %117 = icmp ne i8* %116, null, !dbg !4684
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %70
  call void @xalloc_die() #14, !dbg !4689
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %89
  %118 = load i8*, i8** %11, align 8, !dbg !4692
  br label %originalBB14
}

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @x2nrealloc(i8*, i64*, i64) #4 !dbg !4697 {
  %4 = alloca i8*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4702, metadata !DIExpression()), !dbg !4703
  store i64* %1, i64** %5, align 8
  call void @llvm.dbg.declare(metadata i64** %5, metadata !4704, metadata !DIExpression()), !dbg !4705
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !4706, metadata !DIExpression()), !dbg !4707
  call void @llvm.dbg.declare(metadata i64* %7, metadata !4708, metadata !DIExpression()), !dbg !4709
  %8 = load i64*, i64** %5, align 8, !dbg !4710
  %9 = load i64, i64* %8, align 8, !dbg !4711
  store i64 %9, i64* %7, align 8, !dbg !4709
  %10 = load i8*, i8** %4, align 8, !dbg !4712
  %11 = icmp ne i8* %10, null, !dbg !4712
  br i1 %11, label %80, label %12, !dbg !4714

12:                                               ; preds = %3
  %13 = load i64, i64* %7, align 8, !dbg !4715
  %14 = icmp ne i64 %13, 0, !dbg !4715
  br i1 %14, label %25, label %15, !dbg !4718

15:                                               ; preds = %12
  %16 = load i64, i64* %6, align 8, !dbg !4719
  %17 = udiv i64 128, %16, !dbg !4721
  store i64 %17, i64* %7, align 8, !dbg !4722
  %18 = load i64, i64* %7, align 8, !dbg !4723
  %19 = icmp ne i64 %18, 0, !dbg !4724
  %20 = xor i1 %19, true, !dbg !4724
  %21 = zext i1 %20 to i32, !dbg !4724
  %22 = sext i32 %21 to i64, !dbg !4724
  %23 = load i64, i64* %7, align 8, !dbg !4725
  %24 = add i64 %23, %22, !dbg !4725
  store i64 %24, i64* %7, align 8, !dbg !4725
  br label %25, !dbg !4726

25:                                               ; preds = %15, %12
  %26 = load i32, i32* @x.97
  %27 = load i32, i32* @y.98
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %25, %originalBBalteredBB
  %34 = load i64, i64* %6, align 8, !dbg !4727
  %35 = udiv i64 9223372036854775807, %34, !dbg !4727
  %36 = load i64, i64* %7, align 8, !dbg !4727
  %37 = icmp ult i64 %35, %36, !dbg !4727
  %38 = load i32, i32* @x.97
  %39 = load i32, i32* @y.98
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %37, label %46, label %63, !dbg !4729

46:                                               ; preds = %originalBBpart2
  %47 = load i32, i32* @x.97
  %48 = load i32, i32* @y.98
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %46, %originalBB1alteredBB
  call void @xalloc_die() #14, !dbg !4730
  %55 = load i32, i32* @x.97
  %56 = load i32, i32* @y.98
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable, !dbg !4730

63:                                               ; preds = %originalBBpart2
  %64 = load i32, i32* @x.97
  %65 = load i32, i32* @y.98
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %63, %originalBB6alteredBB
  %72 = load i32, i32* @x.97
  %73 = load i32, i32* @y.98
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %108, !dbg !4731

80:                                               ; preds = %3
  %81 = load i32, i32* @x.97
  %82 = load i32, i32* @y.98
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %80, %originalBB10alteredBB
  %89 = load i64, i64* %6, align 8, !dbg !4732
  %90 = udiv i64 6148914691236517204, %89, !dbg !4735
  %91 = load i64, i64* %7, align 8, !dbg !4736
  %92 = icmp ule i64 %90, %91, !dbg !4737
  %93 = load i32, i32* @x.97
  %94 = load i32, i32* @y.98
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart227, label %originalBB10alteredBB

originalBBpart227:                                ; preds = %originalBB10
  br i1 %92, label %101, label %102, !dbg !4738

101:                                              ; preds = %originalBBpart227
  call void @xalloc_die() #14, !dbg !4739
  unreachable, !dbg !4739

102:                                              ; preds = %originalBBpart227
  %103 = load i64, i64* %7, align 8, !dbg !4740
  %104 = udiv i64 %103, 2, !dbg !4741
  %105 = add i64 %104, 1, !dbg !4742
  %106 = load i64, i64* %7, align 8, !dbg !4743
  %107 = add i64 %106, %105, !dbg !4743
  store i64 %107, i64* %7, align 8, !dbg !4743
  br label %108

108:                                              ; preds = %102, %originalBBpart28
  %109 = load i32, i32* @x.97
  %110 = load i32, i32* @y.98
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %108, %originalBB29alteredBB
  %117 = load i64, i64* %7, align 8, !dbg !4744
  %118 = load i64*, i64** %5, align 8, !dbg !4745
  store i64 %117, i64* %118, align 8, !dbg !4746
  %119 = load i8*, i8** %4, align 8, !dbg !4747
  %120 = load i64, i64* %7, align 8, !dbg !4748
  %121 = load i64, i64* %6, align 8, !dbg !4749
  %122 = mul i64 %120, %121, !dbg !4750
  %123 = call i8* @xrealloc(i8* %119, i64 %122), !dbg !4751
  %124 = load i32, i32* @x.97
  %125 = load i32, i32* @y.98
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBBpart236, label %originalBB29alteredBB

originalBBpart236:                                ; preds = %originalBB29
  ret i8* %123, !dbg !4752

originalBBalteredBB:                              ; preds = %originalBB, %25
  %132 = load i64, i64* %6, align 8, !dbg !4727
  %_ = sub i64 0, 9223372036854775807
  %gen = add i64 %_, %132
  %133 = udiv i64 9223372036854775807, %132, !dbg !4727
  %134 = load i64, i64* %7, align 8, !dbg !4727
  %135 = icmp ult i64 %133, %134, !dbg !4727
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %46
  call void @xalloc_die() #14, !dbg !4730
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %63
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %80
  %136 = load i64, i64* %6, align 8, !dbg !4732
  %_11 = sub i64 0, 6148914691236517204
  %gen12 = add i64 %_11, %136
  %_13 = shl i64 6148914691236517204, %136
  %_14 = shl i64 6148914691236517204, %136
  %_15 = sub i64 6148914691236517204, %136
  %gen16 = mul i64 %_15, %136
  %_17 = sub i64 0, 6148914691236517204
  %gen18 = add i64 %_17, %136
  %_19 = sub i64 0, 6148914691236517204
  %gen20 = add i64 %_19, %136
  %_21 = sub i64 6148914691236517204, %136
  %gen22 = mul i64 %_21, %136
  %_23 = shl i64 6148914691236517204, %136
  %_24 = shl i64 6148914691236517204, %136
  %137 = udiv i64 6148914691236517204, %136, !dbg !4735
  %138 = load i64, i64* %7, align 8, !dbg !4736
  %139 = icmp ule i64 %137, %138, !dbg !4737
  br label %originalBB10

originalBB29alteredBB:                            ; preds = %originalBB29, %108
  %140 = load i64, i64* %7, align 8, !dbg !4744
  %141 = load i64*, i64** %5, align 8, !dbg !4745
  store i64 %140, i64* %141, align 8, !dbg !4746
  %142 = load i8*, i8** %4, align 8, !dbg !4747
  %143 = load i64, i64* %7, align 8, !dbg !4748
  %144 = load i64, i64* %6, align 8, !dbg !4749
  %_30 = sub i64 0, %143
  %gen31 = add i64 %_30, %144
  %_32 = shl i64 %143, %144
  %_33 = sub i64 %143, %144
  %gen34 = mul i64 %_33, %144
  %145 = mul i64 %143, %144, !dbg !4750
  %146 = call i8* @xrealloc(i8* %142, i64 %145), !dbg !4751
  br label %originalBB29
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xcharalloc(i64) #4 !dbg !4753 {
  %2 = load i32, i32* @x.99
  %3 = load i32, i32* @y.100
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i64, align 8
  store i64 %0, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !4756, metadata !DIExpression()), !dbg !4757
  %11 = load i64, i64* %10, align 8, !dbg !4758
  %12 = call noalias i8* @xmalloc(i64 %11), !dbg !4758
  %13 = load i32, i32* @x.99
  %14 = load i32, i32* @y.100
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !4759

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i64, align 8
  store i64 %0, i64* %21, align 8
  call void @llvm.dbg.declare(metadata i64* %21, metadata !4760, metadata !DIExpression()), !dbg !4757
  %22 = load i64, i64* %21, align 8, !dbg !4758
  %23 = call noalias i8* @xmalloc(i64 %22), !dbg !4758
  br label %originalBB
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @xalloc_die() #0 !dbg !4763 {
  %1 = load i32, i32* @x.101
  %2 = load i32, i32* @y.102
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = load volatile i32, i32* @exit_failure, align 4, !dbg !4765
  %10 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.165, i64 0, i64 0)) #10, !dbg !4766
  call void (i32, i32, i8*, ...) @error(i32 %9, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.166, i64 0, i64 0), i8* %10), !dbg !4767
  call void @abort() #12, !dbg !4768
  %11 = load i32, i32* @x.101
  %12 = load i32, i32* @y.102
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable, !dbg !4768

originalBBalteredBB:                              ; preds = %originalBB, %0
  %19 = load volatile i32, i32* @exit_failure, align 4, !dbg !4765
  %20 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.165, i64 0, i64 0)) #10, !dbg !4766
  call void (i32, i32, i8*, ...) @error(i32 %19, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.166, i64 0, i64 0), i8* %20), !dbg !4767
  call void @abort() #12, !dbg !4768
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @rpl_mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #4 !dbg !4769 {
  %5 = load i32, i32* @x.103
  %6 = load i32, i32* @y.104
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca i64, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i64, align 8
  %17 = alloca %struct.__mbstate_t*, align 8
  %18 = alloca i64, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  store i32* %0, i32** %14, align 8
  call void @llvm.dbg.declare(metadata i32** %14, metadata !4785, metadata !DIExpression()), !dbg !4786
  store i8* %1, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !4787, metadata !DIExpression()), !dbg !4788
  store i64 %2, i64* %16, align 8
  call void @llvm.dbg.declare(metadata i64* %16, metadata !4789, metadata !DIExpression()), !dbg !4790
  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %17, align 8
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %17, metadata !4791, metadata !DIExpression()), !dbg !4792
  call void @llvm.dbg.declare(metadata i64* %18, metadata !4793, metadata !DIExpression()), !dbg !4794
  call void @llvm.dbg.declare(metadata i32* %19, metadata !4795, metadata !DIExpression()), !dbg !4796
  %21 = load i32*, i32** %14, align 8, !dbg !4797
  %22 = icmp ne i32* %21, null, !dbg !4797
  %23 = load i32, i32* @x.103
  %24 = load i32, i32* @y.104
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %48, label %31, !dbg !4799

31:                                               ; preds = %originalBBpart2
  %32 = load i32, i32* @x.103
  %33 = load i32, i32* @y.104
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  store i32* %19, i32** %14, align 8, !dbg !4800
  %40 = load i32, i32* @x.103
  %41 = load i32, i32* @y.104
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %48, !dbg !4801

48:                                               ; preds = %originalBBpart24, %originalBBpart2
  %49 = load i32, i32* @x.103
  %50 = load i32, i32* @y.104
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %48, %originalBB6alteredBB
  %57 = load i32*, i32** %14, align 8, !dbg !4802
  %58 = load i8*, i8** %15, align 8, !dbg !4803
  %59 = load i64, i64* %16, align 8, !dbg !4804
  %60 = load %struct.__mbstate_t*, %struct.__mbstate_t** %17, align 8, !dbg !4805
  %61 = call i64 @mbrtowc(i32* %57, i8* %58, i64 %59, %struct.__mbstate_t* %60) #10, !dbg !4806
  store i64 %61, i64* %18, align 8, !dbg !4807
  %62 = load i64, i64* %18, align 8, !dbg !4808
  %63 = icmp ule i64 -2, %62, !dbg !4810
  %64 = load i32, i32* @x.103
  %65 = load i32, i32* @y.104
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %63, label %72, label %115, !dbg !4811

72:                                               ; preds = %originalBBpart28
  %73 = load i32, i32* @x.103
  %74 = load i32, i32* @y.104
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %72, %originalBB10alteredBB
  %81 = load i64, i64* %16, align 8, !dbg !4812
  %82 = icmp ne i64 %81, 0, !dbg !4813
  %83 = load i32, i32* @x.103
  %84 = load i32, i32* @y.104
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %82, label %91, label %115, !dbg !4814

91:                                               ; preds = %originalBBpart212
  %92 = load i32, i32* @x.103
  %93 = load i32, i32* @y.104
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %91, %originalBB14alteredBB
  %100 = call zeroext i1 @hard_locale(i32 0), !dbg !4815
  %101 = load i32, i32* @x.103
  %102 = load i32, i32* @y.104
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %100, label %115, label %109, !dbg !4816

109:                                              ; preds = %originalBBpart216
  call void @llvm.dbg.declare(metadata i8* %20, metadata !4817, metadata !DIExpression()), !dbg !4819
  %110 = load i8*, i8** %15, align 8, !dbg !4820
  %111 = load i8, i8* %110, align 1, !dbg !4821
  store i8 %111, i8* %20, align 1, !dbg !4819
  %112 = load i8, i8* %20, align 1, !dbg !4822
  %113 = zext i8 %112 to i32, !dbg !4822
  %114 = load i32*, i32** %14, align 8, !dbg !4823
  store i32 %113, i32* %114, align 4, !dbg !4824
  store i64 1, i64* %13, align 8, !dbg !4825
  br label %133, !dbg !4825

115:                                              ; preds = %originalBBpart216, %originalBBpart212, %originalBBpart28
  %116 = load i32, i32* @x.103
  %117 = load i32, i32* @y.104
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %115, %originalBB18alteredBB
  %124 = load i64, i64* %18, align 8, !dbg !4826
  store i64 %124, i64* %13, align 8, !dbg !4827
  %125 = load i32, i32* @x.103
  %126 = load i32, i32* @y.104
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %133, !dbg !4827

133:                                              ; preds = %originalBBpart220, %109
  %134 = load i32, i32* @x.103
  %135 = load i32, i32* @y.104
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %133, %originalBB22alteredBB
  %142 = load i64, i64* %13, align 8, !dbg !4828
  %143 = load i32, i32* @x.103
  %144 = load i32, i32* @y.104
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret i64 %142, !dbg !4828

originalBBalteredBB:                              ; preds = %originalBB, %4
  %151 = alloca i64, align 8
  %152 = alloca i32*, align 8
  %153 = alloca i8*, align 8
  %154 = alloca i64, align 8
  %155 = alloca %struct.__mbstate_t*, align 8
  %156 = alloca i64, align 8
  %157 = alloca i32, align 4
  %158 = alloca i8, align 1
  store i32* %0, i32** %152, align 8
  call void @llvm.dbg.declare(metadata i32** %152, metadata !4829, metadata !DIExpression()), !dbg !4786
  store i8* %1, i8** %153, align 8
  call void @llvm.dbg.declare(metadata i8** %153, metadata !4845, metadata !DIExpression()), !dbg !4788
  store i64 %2, i64* %154, align 8
  call void @llvm.dbg.declare(metadata i64* %154, metadata !4846, metadata !DIExpression()), !dbg !4790
  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %155, align 8
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %155, metadata !4847, metadata !DIExpression()), !dbg !4792
  call void @llvm.dbg.declare(metadata i64* %156, metadata !4848, metadata !DIExpression()), !dbg !4794
  call void @llvm.dbg.declare(metadata i32* %157, metadata !4849, metadata !DIExpression()), !dbg !4796
  %159 = load i32*, i32** %152, align 8, !dbg !4797
  %160 = icmp ne i32* %159, null, !dbg !4797
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  store i32* %19, i32** %14, align 8, !dbg !4800
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  %161 = load i32*, i32** %14, align 8, !dbg !4802
  %162 = load i8*, i8** %15, align 8, !dbg !4803
  %163 = load i64, i64* %16, align 8, !dbg !4804
  %164 = load %struct.__mbstate_t*, %struct.__mbstate_t** %17, align 8, !dbg !4805
  %165 = call i64 @mbrtowc(i32* %161, i8* %162, i64 %163, %struct.__mbstate_t* %164) #10, !dbg !4806
  store i64 %165, i64* %18, align 8, !dbg !4807
  %166 = load i64, i64* %18, align 8, !dbg !4808
  %167 = icmp ule i64 -2, %166, !dbg !4810
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %72
  %168 = load i64, i64* %16, align 8, !dbg !4812
  %169 = icmp ne i64 %168, 0, !dbg !4813
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %91
  %170 = call zeroext i1 @hard_locale(i32 0), !dbg !4815
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %115
  %171 = load i64, i64* %18, align 8, !dbg !4826
  store i64 %171, i64* %13, align 8, !dbg !4827
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %133
  %172 = load i64, i64* %13, align 8, !dbg !4828
  br label %originalBB22
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @extract_trimmed_name(%struct.utmpx*) #4 !dbg !4850 {
  %2 = alloca %struct.utmpx*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store %struct.utmpx* %0, %struct.utmpx** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %2, metadata !4878, metadata !DIExpression()), !dbg !4879
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4880, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4882, metadata !DIExpression()), !dbg !4883
  %5 = call noalias i8* @xmalloc(i64 33), !dbg !4884
  store i8* %5, i8** %4, align 8, !dbg !4885
  %6 = load i8*, i8** %4, align 8, !dbg !4886
  %7 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !4887
  %8 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %7, i32 0, i32 4, !dbg !4887
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i64 0, i64 0, !dbg !4887
  %10 = call i8* @strncpy(i8* %6, i8* %9, i64 32) #10, !dbg !4888
  %11 = load i8*, i8** %4, align 8, !dbg !4889
  %12 = getelementptr inbounds i8, i8* %11, i64 32, !dbg !4889
  store i8 0, i8* %12, align 1, !dbg !4890
  %13 = load i8*, i8** %4, align 8, !dbg !4891
  %14 = load i8*, i8** %4, align 8, !dbg !4893
  %15 = call i64 @strlen(i8* %14) #13, !dbg !4894
  %16 = getelementptr inbounds i8, i8* %13, i64 %15, !dbg !4895
  store i8* %16, i8** %3, align 8, !dbg !4896
  br label %17, !dbg !4897

17:                                               ; preds = %originalBBpart212, %1
  %18 = load i32, i32* @x.105
  %19 = load i32, i32* @y.106
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %17, %originalBBalteredBB
  %26 = load i8*, i8** %4, align 8, !dbg !4898
  %27 = load i8*, i8** %3, align 8, !dbg !4900
  %28 = icmp ult i8* %26, %27, !dbg !4901
  %29 = load i32, i32* @x.105
  %30 = load i32, i32* @y.106
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %28, label %37, label %43, !dbg !4902

37:                                               ; preds = %originalBBpart2
  %38 = load i8*, i8** %3, align 8, !dbg !4903
  %39 = getelementptr inbounds i8, i8* %38, i64 -1, !dbg !4903
  %40 = load i8, i8* %39, align 1, !dbg !4903
  %41 = sext i8 %40 to i32, !dbg !4903
  %42 = icmp eq i32 %41, 32, !dbg !4904
  br label %43

43:                                               ; preds = %37, %originalBBpart2
  %44 = phi i1 [ false, %originalBBpart2 ], [ %42, %37 ], !dbg !4905
  %45 = load i32, i32* @x.105
  %46 = load i32, i32* @y.106
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %43, %originalBB1alteredBB
  %53 = load i32, i32* @x.105
  %54 = load i32, i32* @y.106
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %44, label %61, label %97, !dbg !4906

61:                                               ; preds = %originalBBpart24
  %62 = load i32, i32* @x.105
  %63 = load i32, i32* @y.106
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %61, %originalBB6alteredBB
  %70 = load i32, i32* @x.105
  %71 = load i32, i32* @y.106
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %78, !dbg !4907

78:                                               ; preds = %originalBBpart28
  %79 = load i32, i32* @x.105
  %80 = load i32, i32* @y.106
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %78, %originalBB10alteredBB
  %87 = load i8*, i8** %3, align 8, !dbg !4908
  %88 = getelementptr inbounds i8, i8* %87, i32 -1, !dbg !4908
  store i8* %88, i8** %3, align 8, !dbg !4908
  store i8 0, i8* %88, align 1, !dbg !4909
  %89 = load i32, i32* @x.105
  %90 = load i32, i32* @y.106
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %17, !dbg !4910, !llvm.loop !4911

97:                                               ; preds = %originalBBpart24
  %98 = load i8*, i8** %4, align 8, !dbg !4913
  ret i8* %98, !dbg !4914

originalBBalteredBB:                              ; preds = %originalBB, %17
  %99 = load i8*, i8** %4, align 8, !dbg !4898
  %100 = load i8*, i8** %3, align 8, !dbg !4900
  %101 = icmp ult i8* %99, %100, !dbg !4901
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %43
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %61
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %78
  %102 = load i8*, i8** %3, align 8, !dbg !4908
  %103 = getelementptr inbounds i8, i8* %102, i32 -1, !dbg !4908
  store i8* %103, i8** %3, align 8, !dbg !4908
  store i8 0, i8* %103, align 1, !dbg !4909
  br label %originalBB10
}

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @read_utmp(i8*, i64*, %struct.utmpx**, i32) #4 !dbg !4915 {
  %5 = load i32, i32* @x.107
  %6 = load i32, i32* @y.108
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca i8*, align 8
  %14 = alloca i64*, align 8
  %15 = alloca %struct.utmpx**, align 8
  %16 = alloca i32, align 4
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca %struct.utmpx*, align 8
  %20 = alloca %struct.utmpx*, align 8
  store i8* %0, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !4920, metadata !DIExpression()), !dbg !4921
  store i64* %1, i64** %14, align 8
  call void @llvm.dbg.declare(metadata i64** %14, metadata !4922, metadata !DIExpression()), !dbg !4923
  store %struct.utmpx** %2, %struct.utmpx*** %15, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx*** %15, metadata !4924, metadata !DIExpression()), !dbg !4925
  store i32 %3, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !4926, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.declare(metadata i64* %17, metadata !4928, metadata !DIExpression()), !dbg !4929
  store i64 0, i64* %17, align 8, !dbg !4929
  call void @llvm.dbg.declare(metadata i64* %18, metadata !4930, metadata !DIExpression()), !dbg !4931
  store i64 0, i64* %18, align 8, !dbg !4931
  call void @llvm.dbg.declare(metadata %struct.utmpx** %19, metadata !4932, metadata !DIExpression()), !dbg !4933
  store %struct.utmpx* null, %struct.utmpx** %19, align 8, !dbg !4933
  call void @llvm.dbg.declare(metadata %struct.utmpx** %20, metadata !4934, metadata !DIExpression()), !dbg !4935
  %21 = load i8*, i8** %13, align 8, !dbg !4936
  %22 = call i32 @utmpxname(i8* %21), !dbg !4937
  call void @setutxent(), !dbg !4938
  %23 = load i32, i32* @x.107
  %24 = load i32, i32* @y.108
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31, !dbg !4939

31:                                               ; preds = %103, %originalBBpart2
  %32 = call %struct.utmpx* @getutxent(), !dbg !4940
  store %struct.utmpx* %32, %struct.utmpx** %20, align 8, !dbg !4941
  %33 = icmp ne %struct.utmpx* %32, null, !dbg !4942
  br i1 %33, label %34, label %104, !dbg !4939

34:                                               ; preds = %31
  %35 = load %struct.utmpx*, %struct.utmpx** %20, align 8, !dbg !4943
  %36 = load i32, i32* %16, align 4, !dbg !4945
  %37 = call zeroext i1 @desirable_utmp_entry(%struct.utmpx* %35, i32 %36), !dbg !4946
  br i1 %37, label %38, label %103, !dbg !4947

38:                                               ; preds = %34
  %39 = load i32, i32* @x.107
  %40 = load i32, i32* @y.108
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %38, %originalBB1alteredBB
  %47 = load i64, i64* %17, align 8, !dbg !4948
  %48 = load i64, i64* %18, align 8, !dbg !4951
  %49 = icmp eq i64 %47, %48, !dbg !4952
  %50 = load i32, i32* @x.107
  %51 = load i32, i32* @y.108
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %49, label %58, label %79, !dbg !4953

58:                                               ; preds = %originalBBpart24
  %59 = load i32, i32* @x.107
  %60 = load i32, i32* @y.108
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %58, %originalBB6alteredBB
  %67 = load %struct.utmpx*, %struct.utmpx** %19, align 8, !dbg !4954
  %68 = bitcast %struct.utmpx* %67 to i8*, !dbg !4954
  %69 = call i8* @x2nrealloc(i8* %68, i64* %18, i64 384), !dbg !4955
  %70 = bitcast i8* %69 to %struct.utmpx*, !dbg !4955
  store %struct.utmpx* %70, %struct.utmpx** %19, align 8, !dbg !4956
  %71 = load i32, i32* @x.107
  %72 = load i32, i32* @y.108
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %79, !dbg !4957

79:                                               ; preds = %originalBBpart28, %originalBBpart24
  %80 = load i32, i32* @x.107
  %81 = load i32, i32* @y.108
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %79, %originalBB10alteredBB
  %88 = load %struct.utmpx*, %struct.utmpx** %19, align 8, !dbg !4958
  %89 = load i64, i64* %17, align 8, !dbg !4959
  %90 = add i64 %89, 1, !dbg !4959
  store i64 %90, i64* %17, align 8, !dbg !4959
  %91 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %88, i64 %89, !dbg !4958
  %92 = load %struct.utmpx*, %struct.utmpx** %20, align 8, !dbg !4960
  %93 = bitcast %struct.utmpx* %91 to i8*, !dbg !4961
  %94 = bitcast %struct.utmpx* %92 to i8*, !dbg !4961
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 4 %94, i64 384, i1 false), !dbg !4961
  %95 = load i32, i32* @x.107
  %96 = load i32, i32* @y.108
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBBpart217, label %originalBB10alteredBB

originalBBpart217:                                ; preds = %originalBB10
  br label %103, !dbg !4962

103:                                              ; preds = %originalBBpart217, %34
  br label %31, !dbg !4939, !llvm.loop !4963

104:                                              ; preds = %31
  %105 = load i32, i32* @x.107
  %106 = load i32, i32* @y.108
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %104, %originalBB19alteredBB
  call void @endutxent(), !dbg !4965
  %113 = load i64, i64* %17, align 8, !dbg !4966
  %114 = load i64*, i64** %14, align 8, !dbg !4967
  store i64 %113, i64* %114, align 8, !dbg !4968
  %115 = load %struct.utmpx*, %struct.utmpx** %19, align 8, !dbg !4969
  %116 = load %struct.utmpx**, %struct.utmpx*** %15, align 8, !dbg !4970
  store %struct.utmpx* %115, %struct.utmpx** %116, align 8, !dbg !4971
  %117 = load i32, i32* @x.107
  %118 = load i32, i32* @y.108
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  ret i32 0, !dbg !4972

originalBBalteredBB:                              ; preds = %originalBB, %4
  %125 = alloca i8*, align 8
  %126 = alloca i64*, align 8
  %127 = alloca %struct.utmpx**, align 8
  %128 = alloca i32, align 4
  %129 = alloca i64, align 8
  %130 = alloca i64, align 8
  %131 = alloca %struct.utmpx*, align 8
  %132 = alloca %struct.utmpx*, align 8
  store i8* %0, i8** %125, align 8
  call void @llvm.dbg.declare(metadata i8** %125, metadata !4973, metadata !DIExpression()), !dbg !4921
  store i64* %1, i64** %126, align 8
  call void @llvm.dbg.declare(metadata i64** %126, metadata !5002, metadata !DIExpression()), !dbg !4923
  store %struct.utmpx** %2, %struct.utmpx*** %127, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx*** %127, metadata !5003, metadata !DIExpression()), !dbg !4925
  store i32 %3, i32* %128, align 4
  call void @llvm.dbg.declare(metadata i32* %128, metadata !5004, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.declare(metadata i64* %129, metadata !5005, metadata !DIExpression()), !dbg !4929
  store i64 0, i64* %129, align 8, !dbg !4929
  call void @llvm.dbg.declare(metadata i64* %130, metadata !5006, metadata !DIExpression()), !dbg !4931
  store i64 0, i64* %130, align 8, !dbg !4931
  call void @llvm.dbg.declare(metadata %struct.utmpx** %131, metadata !5007, metadata !DIExpression()), !dbg !4933
  store %struct.utmpx* null, %struct.utmpx** %131, align 8, !dbg !4933
  call void @llvm.dbg.declare(metadata %struct.utmpx** %132, metadata !5008, metadata !DIExpression()), !dbg !4935
  %133 = load i8*, i8** %125, align 8, !dbg !4936
  %134 = call i32 @utmpxname(i8* %133), !dbg !4937
  call void @setutxent(), !dbg !4938
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %38
  %135 = load i64, i64* %17, align 8, !dbg !4948
  %136 = load i64, i64* %18, align 8, !dbg !4951
  %137 = icmp eq i64 %135, %136, !dbg !4952
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %58
  %138 = load %struct.utmpx*, %struct.utmpx** %19, align 8, !dbg !4954
  %139 = bitcast %struct.utmpx* %138 to i8*, !dbg !4954
  %140 = call i8* @x2nrealloc(i8* %139, i64* %18, i64 384), !dbg !4955
  %141 = bitcast i8* %140 to %struct.utmpx*, !dbg !4955
  store %struct.utmpx* %141, %struct.utmpx** %19, align 8, !dbg !4956
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %79
  %142 = load %struct.utmpx*, %struct.utmpx** %19, align 8, !dbg !4958
  %143 = load i64, i64* %17, align 8, !dbg !4959
  %_ = shl i64 %143, 1
  %_11 = shl i64 %143, 1
  %_12 = sub i64 %143, 1
  %gen = mul i64 %_12, 1
  %_13 = shl i64 %143, 1
  %_14 = sub i64 0, %143
  %gen15 = add i64 %_14, 1
  %144 = add i64 %143, 1, !dbg !4959
  store i64 %144, i64* %17, align 8, !dbg !4959
  %145 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %142, i64 %143, !dbg !4958
  %146 = load %struct.utmpx*, %struct.utmpx** %20, align 8, !dbg !4960
  %147 = bitcast %struct.utmpx* %145 to i8*, !dbg !4961
  %148 = bitcast %struct.utmpx* %146 to i8*, !dbg !4961
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %147, i8* align 4 %148, i64 384, i1 false), !dbg !4961
  br label %originalBB10

originalBB19alteredBB:                            ; preds = %originalBB19, %104
  call void @endutxent(), !dbg !4965
  %149 = load i64, i64* %17, align 8, !dbg !4966
  %150 = load i64*, i64** %14, align 8, !dbg !4967
  store i64 %149, i64* %150, align 8, !dbg !4968
  %151 = load %struct.utmpx*, %struct.utmpx** %19, align 8, !dbg !4969
  %152 = load %struct.utmpx**, %struct.utmpx*** %15, align 8, !dbg !4970
  store %struct.utmpx* %151, %struct.utmpx** %152, align 8, !dbg !4971
  br label %originalBB19
}

declare dso_local i32 @utmpxname(i8*) #3

declare dso_local void @setutxent() #3

declare dso_local %struct.utmpx* @getutxent() #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @desirable_utmp_entry(%struct.utmpx*, i32) #4 !dbg !5009 {
  %3 = load i32, i32* @x.109
  %4 = load i32, i32* @y.110
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i1, align 1
  %12 = alloca %struct.utmpx*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  store %struct.utmpx* %0, %struct.utmpx** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %12, metadata !5012, metadata !DIExpression()), !dbg !5013
  store i32 %1, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5014, metadata !DIExpression()), !dbg !5015
  call void @llvm.dbg.declare(metadata i8* %14, metadata !5016, metadata !DIExpression()), !dbg !5017
  %15 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !5018
  %16 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %15, i32 0, i32 4, !dbg !5018
  %17 = getelementptr inbounds [32 x i8], [32 x i8]* %16, i64 0, i64 0, !dbg !5018
  %18 = load i8, i8* %17, align 4, !dbg !5018
  %19 = sext i8 %18 to i32, !dbg !5018
  %20 = icmp ne i32 %19, 0, !dbg !5018
  %21 = load i32, i32* @x.109
  %22 = load i32, i32* @y.110
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %29, label %148, !dbg !5018

29:                                               ; preds = %originalBBpart2
  %30 = load i32, i32* @x.109
  %31 = load i32, i32* @y.110
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !5018
  %39 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %38, i32 0, i32 0, !dbg !5018
  %40 = load i16, i16* %39, align 4, !dbg !5018
  %41 = sext i16 %40 to i32, !dbg !5018
  %42 = load i32, i32* @x.109
  %43 = load i32, i32* @y.110
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %50, !dbg !5018

50:                                               ; preds = %originalBBpart24
  %collatzVar = alloca i32
  br label %51

51:                                               ; preds = %50
  %52 = load i32, i32* @x.109
  %53 = load i32, i32* @y.110
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %51, %originalBB6alteredBB
  %60 = load i32, i32* @inVal0
  %61 = icmp sgt i32 %60, 1
  %62 = load i32, i32* @x.109
  %63 = load i32, i32* @y.110
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %61, label %87, label %70

70:                                               ; preds = %originalBBpart28
  %71 = load i32, i32* @x.109
  %72 = load i32, i32* @y.110
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %70, %originalBB10alteredBB
  store i32 52, i32* %collatzVar
  %79 = load i32, i32* @x.109
  %80 = load i32, i32* @y.110
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %87

87:                                               ; preds = %originalBBpart212, %originalBBpart28
  %88 = load i8**, i8*** @inVal1
  %89 = getelementptr inbounds i8*, i8** %88, i64 1
  %90 = load i8*, i8** %89
  %controle = call i32 @controle(i8* %90, i32 7)
  store i32 %controle, i32* %collatzVar
  br label %91

91:                                               ; preds = %125, %121, %87
  %92 = load i32, i32* @x.109
  %93 = load i32, i32* @y.110
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %91, %originalBB14alteredBB
  %100 = load i32, i32* %collatzVar
  %101 = icmp sgt i32 %100, 1
  %102 = load i32, i32* @x.109
  %103 = load i32, i32* @y.110
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %101, label %110, label %129

110:                                              ; preds = %originalBBpart216
  %111 = load i32, i32* %collatzVar
  %112 = srem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %110
  %115 = load i32, i32* %collatzVar
  %116 = sdiv i32 %115, 2
  store i32 %116, i32* %collatzVar
  br label %121

117:                                              ; preds = %110
  %118 = load i32, i32* %collatzVar
  %119 = mul i32 %118, 3
  %120 = add i32 %119, 1
  store i32 %120, i32* %collatzVar
  br label %121

121:                                              ; preds = %117, %114
  %122 = load i32, i32* %collatzVar
  %123 = sub i32 %41, %122
  %124 = icmp sgt i32 %123, 5
  br i1 %124, label %125, label %91

125:                                              ; preds = %121
  %126 = load i32, i32* %collatzVar
  %127 = add i32 %41, %126
  %128 = icmp slt i32 %127, 9
  br i1 %128, label %146, label %91

129:                                              ; preds = %originalBBpart216
  %130 = load i32, i32* @x.109
  %131 = load i32, i32* @y.110
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %129, %originalBB18alteredBB
  %138 = load i32, i32* @x.109
  %139 = load i32, i32* @y.110
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %146, !dbg !5018

146:                                              ; preds = %originalBBpart220, %125
  %147 = phi i1 [ true, %125 ], [ false, %originalBBpart220 ]
  br label %148

148:                                              ; preds = %146, %originalBBpart2
  %149 = phi i1 [ false, %originalBBpart2 ], [ %147, %146 ], !dbg !5019
  %150 = zext i1 %149 to i8, !dbg !5017
  store i8 %150, i8* %14, align 1, !dbg !5017
  %151 = load i32, i32* %13, align 4, !dbg !5020
  %152 = and i32 %151, 2, !dbg !5022
  %153 = icmp ne i32 %152, 0, !dbg !5022
  br i1 %153, label %154, label %158, !dbg !5023

154:                                              ; preds = %148
  %155 = load i8, i8* %14, align 1, !dbg !5024
  %156 = trunc i8 %155 to i1, !dbg !5024
  br i1 %156, label %158, label %157, !dbg !5025

157:                                              ; preds = %154
  store i1 false, i1* %11, align 1, !dbg !5026
  br label %246, !dbg !5026

158:                                              ; preds = %154, %148
  %159 = load i32, i32* @x.109
  %160 = load i32, i32* @y.110
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %158, %originalBB22alteredBB
  %167 = load i32, i32* %13, align 4, !dbg !5027
  %168 = and i32 %167, 1, !dbg !5029
  %169 = icmp ne i32 %168, 0, !dbg !5029
  %170 = load i32, i32* @x.109
  %171 = load i32, i32* @y.110
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBBpart236, label %originalBB22alteredBB

originalBBpart236:                                ; preds = %originalBB22
  br i1 %169, label %178, label %245, !dbg !5030

178:                                              ; preds = %originalBBpart236
  %179 = load i8, i8* %14, align 1, !dbg !5031
  %180 = trunc i8 %179 to i1, !dbg !5031
  br i1 %180, label %181, label %245, !dbg !5032

181:                                              ; preds = %178
  %182 = load i32, i32* @x.109
  %183 = load i32, i32* @y.110
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %181, %originalBB38alteredBB
  %190 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !5033
  %191 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %190, i32 0, i32 1, !dbg !5033
  %192 = load i32, i32* %191, align 4, !dbg !5033
  %193 = icmp slt i32 0, %192, !dbg !5034
  %194 = load i32, i32* @x.109
  %195 = load i32, i32* @y.110
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %193, label %202, label %245, !dbg !5035

202:                                              ; preds = %originalBBpart240
  %203 = load i32, i32* @x.109
  %204 = load i32, i32* @y.110
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %202, %originalBB42alteredBB
  %211 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !5036
  %212 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %211, i32 0, i32 1, !dbg !5036
  %213 = load i32, i32* %212, align 4, !dbg !5036
  %214 = call i32 @kill(i32 %213, i32 0) #10, !dbg !5037
  %215 = icmp slt i32 %214, 0, !dbg !5038
  %216 = load i32, i32* @x.109
  %217 = load i32, i32* @y.110
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br i1 %215, label %224, label %245, !dbg !5039

224:                                              ; preds = %originalBBpart244
  %225 = call i32* @__errno_location() #15, !dbg !5040
  %226 = load i32, i32* %225, align 4, !dbg !5040
  %227 = icmp eq i32 %226, 3, !dbg !5041
  br i1 %227, label %228, label %245, !dbg !5042

228:                                              ; preds = %224
  %229 = load i32, i32* @x.109
  %230 = load i32, i32* @y.110
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %228, %originalBB46alteredBB
  store i1 false, i1* %11, align 1, !dbg !5043
  %237 = load i32, i32* @x.109
  %238 = load i32, i32* @y.110
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %246, !dbg !5043

245:                                              ; preds = %224, %originalBBpart244, %originalBBpart240, %178, %originalBBpart236
  store i1 true, i1* %11, align 1, !dbg !5044
  br label %246, !dbg !5044

246:                                              ; preds = %245, %originalBBpart248, %157
  %247 = load i1, i1* %11, align 1, !dbg !5045
  ret i1 %247, !dbg !5045

originalBBalteredBB:                              ; preds = %originalBB, %2
  %248 = alloca i1, align 1
  %249 = alloca %struct.utmpx*, align 8
  %250 = alloca i32, align 4
  %251 = alloca i8, align 1
  store %struct.utmpx* %0, %struct.utmpx** %249, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %249, metadata !5046, metadata !DIExpression()), !dbg !5013
  store i32 %1, i32* %250, align 4
  call void @llvm.dbg.declare(metadata i32* %250, metadata !5075, metadata !DIExpression()), !dbg !5015
  call void @llvm.dbg.declare(metadata i8* %251, metadata !5076, metadata !DIExpression()), !dbg !5017
  %252 = load %struct.utmpx*, %struct.utmpx** %249, align 8, !dbg !5018
  %253 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %252, i32 0, i32 4, !dbg !5018
  %254 = getelementptr inbounds [32 x i8], [32 x i8]* %253, i64 0, i64 0, !dbg !5018
  %255 = load i8, i8* %254, align 4, !dbg !5018
  %256 = sext i8 %255 to i32, !dbg !5018
  %257 = icmp ne i32 %256, 0, !dbg !5018
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %258 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !5018
  %259 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %258, i32 0, i32 0, !dbg !5018
  %260 = load i16, i16* %259, align 4, !dbg !5018
  %261 = sext i16 %260 to i32, !dbg !5018
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %51
  %262 = load i32, i32* @inVal0
  %263 = icmp sgt i32 %262, 1
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %70
  store i32 52, i32* %collatzVar
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %91
  %264 = load i32, i32* %collatzVar
  %265 = icmp sgt i32 %264, 1
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %129
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %158
  %266 = load i32, i32* %13, align 4, !dbg !5027
  %_ = sub i32 %266, 1
  %gen = mul i32 %_, 1
  %_23 = sub i32 %266, 1
  %gen24 = mul i32 %_23, 1
  %_25 = sub i32 %266, 1
  %gen26 = mul i32 %_25, 1
  %_27 = sub i32 %266, 1
  %gen28 = mul i32 %_27, 1
  %_29 = sub i32 %266, 1
  %gen30 = mul i32 %_29, 1
  %_31 = sub i32 %266, 1
  %gen32 = mul i32 %_31, 1
  %_33 = sub i32 %266, 1
  %gen34 = mul i32 %_33, 1
  %267 = and i32 %266, 1, !dbg !5029
  %268 = icmp ne i32 %267, 0, !dbg !5029
  br label %originalBB22

originalBB38alteredBB:                            ; preds = %originalBB38, %181
  %269 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !5033
  %270 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %269, i32 0, i32 1, !dbg !5033
  %271 = load i32, i32* %270, align 4, !dbg !5033
  %272 = icmp slt i32 0, %271, !dbg !5034
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %202
  %273 = load %struct.utmpx*, %struct.utmpx** %12, align 8, !dbg !5036
  %274 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %273, i32 0, i32 1, !dbg !5036
  %275 = load i32, i32* %274, align 4, !dbg !5036
  %276 = call i32 @kill(i32 %275, i32 0) #10, !dbg !5037
  %277 = icmp slt i32 %276, 0, !dbg !5038
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %228
  store i1 false, i1* %11, align 1, !dbg !5043
  br label %originalBB46
}

declare dso_local void @endutxent() #3

; Function Attrs: nounwind
declare dso_local i32 @kill(i32, i32) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @c_strcasecmp(i8*, i8*) #11 !dbg !5077 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5081, metadata !DIExpression()), !dbg !5082
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5083, metadata !DIExpression()), !dbg !5084
  call void @llvm.dbg.declare(metadata i8** %6, metadata !5085, metadata !DIExpression()), !dbg !5086
  %10 = load i8*, i8** %4, align 8, !dbg !5087
  store i8* %10, i8** %6, align 8, !dbg !5086
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5088, metadata !DIExpression()), !dbg !5089
  %11 = load i8*, i8** %5, align 8, !dbg !5090
  store i8* %11, i8** %7, align 8, !dbg !5089
  call void @llvm.dbg.declare(metadata i8* %8, metadata !5091, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.declare(metadata i8* %9, metadata !5093, metadata !DIExpression()), !dbg !5094
  %12 = load i8*, i8** %6, align 8, !dbg !5095
  %13 = load i8*, i8** %7, align 8, !dbg !5097
  %14 = icmp eq i8* %12, %13, !dbg !5098
  br i1 %14, label %15, label %16, !dbg !5099

15:                                               ; preds = %2
  store i32 0, i32* %3, align 4, !dbg !5100
  br label %113, !dbg !5100

16:                                               ; preds = %2
  br label %17, !dbg !5101

17:                                               ; preds = %85, %16
  %18 = load i32, i32* @x.111
  %19 = load i32, i32* @y.112
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %17, %originalBBalteredBB
  %26 = load i8*, i8** %6, align 8, !dbg !5102
  %27 = load i8, i8* %26, align 1, !dbg !5104
  %28 = zext i8 %27 to i32, !dbg !5104
  %29 = call i32 @c_tolower(i32 %28), !dbg !5105
  %30 = trunc i32 %29 to i8, !dbg !5105
  store i8 %30, i8* %8, align 1, !dbg !5106
  %31 = load i8*, i8** %7, align 8, !dbg !5107
  %32 = load i8, i8* %31, align 1, !dbg !5108
  %33 = zext i8 %32 to i32, !dbg !5108
  %34 = call i32 @c_tolower(i32 %33), !dbg !5109
  %35 = trunc i32 %34 to i8, !dbg !5109
  store i8 %35, i8* %9, align 1, !dbg !5110
  %36 = load i8, i8* %8, align 1, !dbg !5111
  %37 = zext i8 %36 to i32, !dbg !5111
  %38 = icmp eq i32 %37, 0, !dbg !5113
  %39 = load i32, i32* @x.111
  %40 = load i32, i32* @y.112
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %38, label %47, label %64, !dbg !5114

47:                                               ; preds = %originalBBpart2
  %48 = load i32, i32* @x.111
  %49 = load i32, i32* @y.112
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %47, %originalBB1alteredBB
  %56 = load i32, i32* @x.111
  %57 = load i32, i32* @y.112
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %91, !dbg !5115

64:                                               ; preds = %originalBBpart2
  %65 = load i32, i32* @x.111
  %66 = load i32, i32* @y.112
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %64, %originalBB6alteredBB
  %73 = load i8*, i8** %6, align 8, !dbg !5116
  %74 = getelementptr inbounds i8, i8* %73, i32 1, !dbg !5116
  store i8* %74, i8** %6, align 8, !dbg !5116
  %75 = load i8*, i8** %7, align 8, !dbg !5117
  %76 = getelementptr inbounds i8, i8* %75, i32 1, !dbg !5117
  store i8* %76, i8** %7, align 8, !dbg !5117
  %77 = load i32, i32* @x.111
  %78 = load i32, i32* @y.112
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %85, !dbg !5118

85:                                               ; preds = %originalBBpart28
  %86 = load i8, i8* %8, align 1, !dbg !5119
  %87 = zext i8 %86 to i32, !dbg !5119
  %88 = load i8, i8* %9, align 1, !dbg !5120
  %89 = zext i8 %88 to i32, !dbg !5120
  %90 = icmp eq i32 %87, %89, !dbg !5121
  br i1 %90, label %17, label %91, !dbg !5118, !llvm.loop !5122

91:                                               ; preds = %85, %originalBBpart24
  %92 = load i32, i32* @x.111
  %93 = load i32, i32* @y.112
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %91, %originalBB10alteredBB
  %100 = load i8, i8* %8, align 1, !dbg !5124
  %101 = zext i8 %100 to i32, !dbg !5124
  %102 = load i8, i8* %9, align 1, !dbg !5126
  %103 = zext i8 %102 to i32, !dbg !5126
  %104 = sub nsw i32 %101, %103, !dbg !5127
  store i32 %104, i32* %3, align 4, !dbg !5128
  %105 = load i32, i32* @x.111
  %106 = load i32, i32* @y.112
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart214, label %originalBB10alteredBB

originalBBpart214:                                ; preds = %originalBB10
  br label %113, !dbg !5128

113:                                              ; preds = %originalBBpart214, %15
  %114 = load i32, i32* %3, align 4, !dbg !5129
  ret i32 %114, !dbg !5129

originalBBalteredBB:                              ; preds = %originalBB, %17
  %115 = load i8*, i8** %6, align 8, !dbg !5102
  %116 = load i8, i8* %115, align 1, !dbg !5104
  %117 = zext i8 %116 to i32, !dbg !5104
  %118 = call i32 @c_tolower(i32 %117), !dbg !5105
  %119 = trunc i32 %118 to i8, !dbg !5105
  store i8 %119, i8* %8, align 1, !dbg !5106
  %120 = load i8*, i8** %7, align 8, !dbg !5107
  %121 = load i8, i8* %120, align 1, !dbg !5108
  %122 = zext i8 %121 to i32, !dbg !5108
  %123 = call i32 @c_tolower(i32 %122), !dbg !5109
  %124 = trunc i32 %123 to i8, !dbg !5109
  store i8 %124, i8* %9, align 1, !dbg !5110
  %125 = load i8, i8* %8, align 1, !dbg !5111
  %126 = zext i8 %125 to i32, !dbg !5111
  %127 = icmp eq i32 %126, 0, !dbg !5113
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %47
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %64
  %128 = load i8*, i8** %6, align 8, !dbg !5116
  %129 = getelementptr inbounds i8, i8* %128, i32 1, !dbg !5116
  store i8* %129, i8** %6, align 8, !dbg !5116
  %130 = load i8*, i8** %7, align 8, !dbg !5117
  %131 = getelementptr inbounds i8, i8* %130, i32 1, !dbg !5117
  store i8* %131, i8** %7, align 8, !dbg !5117
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %91
  %132 = load i8, i8* %8, align 1, !dbg !5124
  %133 = zext i8 %132 to i32, !dbg !5124
  %134 = load i8, i8* %9, align 1, !dbg !5126
  %135 = zext i8 %134 to i32, !dbg !5126
  %_ = sub i32 %133, %135
  %gen = mul i32 %_, %135
  %_11 = sub i32 %133, %135
  %gen12 = mul i32 %_11, %135
  %136 = sub nsw i32 %133, %135, !dbg !5127
  store i32 %136, i32* %3, align 4, !dbg !5128
  br label %originalBB10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @close_stream(%struct._IO_FILE*) #4 !dbg !5130 {
  %2 = alloca i32, align 4
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %3, metadata !5168, metadata !DIExpression()), !dbg !5169
  call void @llvm.dbg.declare(metadata i8* %4, metadata !5170, metadata !DIExpression()), !dbg !5172
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !5173
  %8 = call i64 @__fpending(%struct._IO_FILE* %7) #10, !dbg !5174
  %9 = icmp ne i64 %8, 0, !dbg !5175
  %10 = zext i1 %9 to i8, !dbg !5172
  store i8 %10, i8* %4, align 1, !dbg !5172
  call void @llvm.dbg.declare(metadata i8* %5, metadata !5176, metadata !DIExpression()), !dbg !5177
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !5178
  %12 = call i32 @ferror_unlocked(%struct._IO_FILE* %11) #10, !dbg !5178
  %13 = icmp ne i32 %12, 0, !dbg !5179
  %14 = zext i1 %13 to i8, !dbg !5177
  store i8 %14, i8* %5, align 1, !dbg !5177
  call void @llvm.dbg.declare(metadata i8* %6, metadata !5180, metadata !DIExpression()), !dbg !5181
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !5182
  %16 = call i32 @rpl_fclose(%struct._IO_FILE* %15), !dbg !5183
  %17 = icmp ne i32 %16, 0, !dbg !5184
  %18 = zext i1 %17 to i8, !dbg !5181
  store i8 %18, i8* %6, align 1, !dbg !5181
  %19 = load i8, i8* %5, align 1, !dbg !5185
  %20 = trunc i8 %19 to i1, !dbg !5185
  br i1 %20, label %63, label %21, !dbg !5187

21:                                               ; preds = %1
  %22 = load i32, i32* @x.113
  %23 = load i32, i32* @y.114
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = load i8, i8* %6, align 1, !dbg !5188
  %31 = trunc i8 %30 to i1, !dbg !5188
  %32 = load i32, i32* @x.113
  %33 = load i32, i32* @y.114
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %31, label %40, label %101, !dbg !5189

40:                                               ; preds = %originalBBpart2
  %41 = load i32, i32* @x.113
  %42 = load i32, i32* @y.114
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %40, %originalBB1alteredBB
  %49 = load i8, i8* %4, align 1, !dbg !5190
  %50 = trunc i8 %49 to i1, !dbg !5190
  %51 = load i32, i32* @x.113
  %52 = load i32, i32* @y.114
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %50, label %63, label %59, !dbg !5191

59:                                               ; preds = %originalBBpart24
  %60 = call i32* @__errno_location() #15, !dbg !5192
  %61 = load i32, i32* %60, align 4, !dbg !5192
  %62 = icmp ne i32 %61, 9, !dbg !5193
  br i1 %62, label %63, label %101, !dbg !5194

63:                                               ; preds = %59, %originalBBpart24, %1
  %64 = load i32, i32* @x.113
  %65 = load i32, i32* @y.114
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %63, %originalBB6alteredBB
  %72 = load i8, i8* %6, align 1, !dbg !5195
  %73 = trunc i8 %72 to i1, !dbg !5195
  %74 = load i32, i32* @x.113
  %75 = load i32, i32* @y.114
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %73, label %84, label %82, !dbg !5198

82:                                               ; preds = %originalBBpart28
  %83 = call i32* @__errno_location() #15, !dbg !5199
  store i32 0, i32* %83, align 4, !dbg !5200
  br label %84, !dbg !5199

84:                                               ; preds = %82, %originalBBpart28
  %85 = load i32, i32* @x.113
  %86 = load i32, i32* @y.114
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %84, %originalBB10alteredBB
  store i32 -1, i32* %2, align 4, !dbg !5201
  %93 = load i32, i32* @x.113
  %94 = load i32, i32* @y.114
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %102, !dbg !5201

101:                                              ; preds = %59, %originalBBpart2
  store i32 0, i32* %2, align 4, !dbg !5202
  br label %102, !dbg !5202

102:                                              ; preds = %101, %originalBBpart212
  %103 = load i32, i32* %2, align 4, !dbg !5203
  ret i32 %103, !dbg !5203

originalBBalteredBB:                              ; preds = %originalBB, %21
  %104 = load i8, i8* %6, align 1, !dbg !5188
  %105 = trunc i8 %104 to i1, !dbg !5188
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %40
  %106 = load i8, i8* %4, align 1, !dbg !5190
  %107 = trunc i8 %106 to i1, !dbg !5190
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %63
  %108 = load i8, i8* %6, align 1, !dbg !5195
  %109 = trunc i8 %108 to i1, !dbg !5195
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %84
  store i32 -1, i32* %2, align 4, !dbg !5201
  br label %originalBB10
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @locale_charset() #4 !dbg !5204 {
  %1 = load i32, i32* @x.115
  %2 = load i32, i32* @y.116
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !5208, metadata !DIExpression()), !dbg !5209
  %10 = call i8* @nl_langinfo(i32 14) #10, !dbg !5210
  store i8* %10, i8** %9, align 8, !dbg !5211
  %11 = load i8*, i8** %9, align 8, !dbg !5212
  %12 = icmp eq i8* %11, null, !dbg !5214
  %13 = load i32, i32* @x.115
  %14 = load i32, i32* @y.116
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %38, !dbg !5215

21:                                               ; preds = %originalBBpart2
  %22 = load i32, i32* @x.115
  %23 = load i32, i32* @y.116
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.179, i64 0, i64 0), i8** %9, align 8, !dbg !5216
  %30 = load i32, i32* @x.115
  %31 = load i32, i32* @y.116
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %38, !dbg !5217

38:                                               ; preds = %originalBBpart24, %originalBBpart2
  %39 = load i32, i32* @x.115
  %40 = load i32, i32* @y.116
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %38, %originalBB6alteredBB
  %47 = load i8*, i8** %9, align 8, !dbg !5218
  %48 = getelementptr inbounds i8, i8* %47, i64 0, !dbg !5218
  %49 = load i8, i8* %48, align 1, !dbg !5218
  %50 = sext i8 %49 to i32, !dbg !5218
  %51 = icmp eq i32 %50, 0, !dbg !5222
  %52 = load i32, i32* @x.115
  %53 = load i32, i32* @y.116
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %51, label %60, label %77, !dbg !5223

60:                                               ; preds = %originalBBpart28
  %61 = load i32, i32* @x.115
  %62 = load i32, i32* @y.116
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %60, %originalBB10alteredBB
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.180, i64 0, i64 0), i8** %9, align 8, !dbg !5224
  %69 = load i32, i32* @x.115
  %70 = load i32, i32* @y.116
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %77, !dbg !5225

77:                                               ; preds = %originalBBpart212, %originalBBpart28
  %78 = load i32, i32* @x.115
  %79 = load i32, i32* @y.116
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %77, %originalBB14alteredBB
  %86 = load i8*, i8** %9, align 8, !dbg !5226
  %87 = load i32, i32* @x.115
  %88 = load i32, i32* @y.116
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret i8* %86, !dbg !5227

originalBBalteredBB:                              ; preds = %originalBB, %0
  %95 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %95, metadata !5228, metadata !DIExpression()), !dbg !5209
  %96 = call i8* @nl_langinfo(i32 14) #10, !dbg !5210
  store i8* %96, i8** %95, align 8, !dbg !5211
  %97 = load i8*, i8** %95, align 8, !dbg !5212
  %98 = icmp eq i8* %97, null, !dbg !5214
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.179, i64 0, i64 0), i8** %9, align 8, !dbg !5216
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %38
  %99 = load i8*, i8** %9, align 8, !dbg !5218
  %100 = getelementptr inbounds i8, i8* %99, i64 0, !dbg !5218
  %101 = load i8, i8* %100, align 1, !dbg !5218
  %102 = sext i8 %101 to i32, !dbg !5218
  %103 = icmp eq i32 %102, 0, !dbg !5222
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %60
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.180, i64 0, i64 0), i8** %9, align 8, !dbg !5224
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %77
  %104 = load i8*, i8** %9, align 8, !dbg !5226
  br label %originalBB14
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fclose(%struct._IO_FILE* nonnull) #4 !dbg !5231 {
  %2 = load i32, i32* @x.117
  %3 = load i32, i32* @y.118
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %11, metadata !5269, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5271, metadata !DIExpression()), !dbg !5272
  store i32 0, i32* %12, align 4, !dbg !5272
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5273, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.declare(metadata i32* %14, metadata !5275, metadata !DIExpression()), !dbg !5276
  store i32 0, i32* %14, align 4, !dbg !5276
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5277
  %16 = call i32 @fileno(%struct._IO_FILE* %15) #10, !dbg !5278
  store i32 %16, i32* %13, align 4, !dbg !5279
  %17 = load i32, i32* %13, align 4, !dbg !5280
  %18 = icmp slt i32 %17, 0, !dbg !5282
  %19 = load i32, i32* @x.117
  %20 = load i32, i32* @y.118
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %30, !dbg !5283

27:                                               ; preds = %originalBBpart2
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5284
  %29 = call i32 @fclose(%struct._IO_FILE* %28), !dbg !5285
  store i32 %29, i32* %10, align 4, !dbg !5286
  br label %136, !dbg !5286

30:                                               ; preds = %originalBBpart2
  %31 = load i32, i32* @x.117
  %32 = load i32, i32* @y.118
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5287
  %40 = call i32 @__freading(%struct._IO_FILE* %39) #10, !dbg !5287
  %41 = icmp ne i32 %40, 0, !dbg !5287
  %42 = load i32, i32* @x.117
  %43 = load i32, i32* @y.118
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %41, label %50, label %55, !dbg !5289

50:                                               ; preds = %originalBBpart24
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5290
  %52 = call i32 @fileno(%struct._IO_FILE* %51) #10, !dbg !5291
  %53 = call i64 @lseek(i32 %52, i64 0, i32 1) #10, !dbg !5292
  %54 = icmp ne i64 %53, -1, !dbg !5293
  br i1 %54, label %55, label %78, !dbg !5294

55:                                               ; preds = %50, %originalBBpart24
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5295
  %57 = call i32 @rpl_fflush(%struct._IO_FILE* %56), !dbg !5296
  %58 = icmp ne i32 %57, 0, !dbg !5296
  br i1 %58, label %59, label %78, !dbg !5297

59:                                               ; preds = %55
  %60 = load i32, i32* @x.117
  %61 = load i32, i32* @y.118
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %59, %originalBB6alteredBB
  %68 = call i32* @__errno_location() #15, !dbg !5298
  %69 = load i32, i32* %68, align 4, !dbg !5298
  store i32 %69, i32* %12, align 4, !dbg !5299
  %70 = load i32, i32* @x.117
  %71 = load i32, i32* @y.118
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %78, !dbg !5300

78:                                               ; preds = %originalBBpart28, %55, %50
  %79 = load i32, i32* @x.117
  %80 = load i32, i32* @y.118
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %78, %originalBB10alteredBB
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5301
  %88 = call i32 @fclose(%struct._IO_FILE* %87), !dbg !5302
  store i32 %88, i32* %14, align 4, !dbg !5303
  %89 = load i32, i32* %12, align 4, !dbg !5304
  %90 = icmp ne i32 %89, 0, !dbg !5306
  %91 = load i32, i32* @x.117
  %92 = load i32, i32* @y.118
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %90, label %99, label %118, !dbg !5307

99:                                               ; preds = %originalBBpart212
  %100 = load i32, i32* @x.117
  %101 = load i32, i32* @y.118
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %99, %originalBB14alteredBB
  %108 = load i32, i32* %12, align 4, !dbg !5308
  %109 = call i32* @__errno_location() #15, !dbg !5310
  store i32 %108, i32* %109, align 4, !dbg !5311
  store i32 -1, i32* %14, align 4, !dbg !5312
  %110 = load i32, i32* @x.117
  %111 = load i32, i32* @y.118
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %118, !dbg !5313

118:                                              ; preds = %originalBBpart216, %originalBBpart212
  %119 = load i32, i32* @x.117
  %120 = load i32, i32* @y.118
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %118, %originalBB18alteredBB
  %127 = load i32, i32* %14, align 4, !dbg !5314
  store i32 %127, i32* %10, align 4, !dbg !5315
  %128 = load i32, i32* @x.117
  %129 = load i32, i32* @y.118
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %136, !dbg !5315

136:                                              ; preds = %originalBBpart220, %27
  %137 = load i32, i32* @x.117
  %138 = load i32, i32* @y.118
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %136, %originalBB22alteredBB
  %145 = load i32, i32* %10, align 4, !dbg !5316
  %146 = load i32, i32* @x.117
  %147 = load i32, i32* @y.118
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret i32 %145, !dbg !5316

originalBBalteredBB:                              ; preds = %originalBB, %1
  %154 = alloca i32, align 4
  %155 = alloca %struct._IO_FILE*, align 8
  %156 = alloca i32, align 4
  %157 = alloca i32, align 4
  %158 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %155, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %155, metadata !5317, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.declare(metadata i32* %156, metadata !5356, metadata !DIExpression()), !dbg !5272
  store i32 0, i32* %156, align 4, !dbg !5272
  call void @llvm.dbg.declare(metadata i32* %157, metadata !5357, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.declare(metadata i32* %158, metadata !5358, metadata !DIExpression()), !dbg !5276
  store i32 0, i32* %158, align 4, !dbg !5276
  %159 = load %struct._IO_FILE*, %struct._IO_FILE** %155, align 8, !dbg !5277
  %160 = call i32 @fileno(%struct._IO_FILE* %159) #10, !dbg !5278
  store i32 %160, i32* %157, align 4, !dbg !5279
  %161 = load i32, i32* %157, align 4, !dbg !5280
  %162 = icmp slt i32 %161, 0, !dbg !5282
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %163 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5287
  %164 = call i32 @__freading(%struct._IO_FILE* %163) #10, !dbg !5287
  %165 = icmp ne i32 %164, 0, !dbg !5287
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %59
  %166 = call i32* @__errno_location() #15, !dbg !5298
  %167 = load i32, i32* %166, align 4, !dbg !5298
  store i32 %167, i32* %12, align 4, !dbg !5299
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %78
  %168 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5301
  %169 = call i32 @fclose(%struct._IO_FILE* %168), !dbg !5302
  store i32 %169, i32* %14, align 4, !dbg !5303
  %170 = load i32, i32* %12, align 4, !dbg !5304
  %171 = icmp ne i32 %170, 0, !dbg !5306
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %99
  %172 = load i32, i32* %12, align 4, !dbg !5308
  %173 = call i32* @__errno_location() #15, !dbg !5310
  store i32 %172, i32* %173, align 4, !dbg !5311
  store i32 -1, i32* %14, align 4, !dbg !5312
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %118
  %174 = load i32, i32* %14, align 4, !dbg !5314
  store i32 %174, i32* %10, align 4, !dbg !5315
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %136
  %175 = load i32, i32* %10, align 4, !dbg !5316
  br label %originalBB22
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fflush(%struct._IO_FILE*) #4 !dbg !5359 {
  %2 = alloca i32, align 4
  %3 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %3, metadata !5397, metadata !DIExpression()), !dbg !5398
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !5399
  %5 = icmp eq %struct._IO_FILE* %4, null, !dbg !5401
  br i1 %5, label %26, label %6, !dbg !5402

6:                                                ; preds = %1
  %7 = load i32, i32* @x.119
  %8 = load i32, i32* @y.120
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !5403
  %16 = call i32 @__freading(%struct._IO_FILE* %15) #10, !dbg !5403
  %17 = icmp ne i32 %16, 0, !dbg !5403
  %18 = load i32, i32* @x.119
  %19 = load i32, i32* @y.120
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %45, label %26, !dbg !5404

26:                                               ; preds = %originalBBpart2, %1
  %27 = load i32, i32* @x.119
  %28 = load i32, i32* @y.120
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !5405
  %36 = call i32 @fflush(%struct._IO_FILE* %35), !dbg !5406
  store i32 %36, i32* %2, align 4, !dbg !5407
  %37 = load i32, i32* @x.119
  %38 = load i32, i32* @y.120
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %49, !dbg !5407

45:                                               ; preds = %originalBBpart2
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !5408
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %46), !dbg !5409
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !5410
  %48 = call i32 @fflush(%struct._IO_FILE* %47), !dbg !5411
  store i32 %48, i32* %2, align 4, !dbg !5412
  br label %49, !dbg !5412

49:                                               ; preds = %45, %originalBBpart24
  %50 = load i32, i32* @x.119
  %51 = load i32, i32* @y.120
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %49, %originalBB6alteredBB
  %58 = load i32, i32* %2, align 4, !dbg !5413
  %59 = load i32, i32* @x.119
  %60 = load i32, i32* @y.120
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i32 %58, !dbg !5413

originalBBalteredBB:                              ; preds = %originalBB, %6
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !5403
  %68 = call i32 @__freading(%struct._IO_FILE* %67) #10, !dbg !5403
  %69 = icmp ne i32 %68, 0, !dbg !5403
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !5405
  %71 = call i32 @fflush(%struct._IO_FILE* %70), !dbg !5406
  store i32 %71, i32* %2, align 4, !dbg !5407
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  %72 = load i32, i32* %2, align 4, !dbg !5413
  br label %originalBB6
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE*) #4 !dbg !5414 {
  %2 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %2, metadata !5417, metadata !DIExpression()), !dbg !5418
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !dbg !5419
  %4 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %3, i32 0, i32 0, !dbg !5421
  %5 = load i32, i32* %4, align 8, !dbg !5421
  %6 = and i32 %5, 256, !dbg !5422
  %7 = icmp ne i32 %6, 0, !dbg !5422
  br i1 %7, label %8, label %11, !dbg !5423

8:                                                ; preds = %1
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !dbg !5424
  %10 = call i32 @rpl_fseeko(%struct._IO_FILE* %9, i64 0, i32 1), !dbg !5425
  br label %11, !dbg !5425

11:                                               ; preds = %8, %1
  ret void, !dbg !5426
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fseeko(%struct._IO_FILE* nonnull, i64, i32) #4 !dbg !5427 {
  %4 = load i32, i32* @x.123
  %5 = load i32, i32* @y.124
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca %struct._IO_FILE*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %13, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %13, metadata !5466, metadata !DIExpression()), !dbg !5467
  store i64 %1, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !5468, metadata !DIExpression()), !dbg !5469
  store i32 %2, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !5470, metadata !DIExpression()), !dbg !5471
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5472
  %18 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 2, !dbg !5474
  %19 = load i8*, i8** %18, align 8, !dbg !5474
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5475
  %21 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %20, i32 0, i32 1, !dbg !5476
  %22 = load i8*, i8** %21, align 8, !dbg !5476
  %23 = icmp eq i8* %19, %22, !dbg !5477
  %24 = load i32, i32* @x.123
  %25 = load i32, i32* @y.124
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %126, !dbg !5478

32:                                               ; preds = %originalBBpart2
  %33 = load i32, i32* @x.123
  %34 = load i32, i32* @y.124
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5479
  %42 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %41, i32 0, i32 5, !dbg !5480
  %43 = load i8*, i8** %42, align 8, !dbg !5480
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5481
  %45 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %44, i32 0, i32 4, !dbg !5482
  %46 = load i8*, i8** %45, align 8, !dbg !5482
  %47 = icmp eq i8* %43, %46, !dbg !5483
  %48 = load i32, i32* @x.123
  %49 = load i32, i32* @y.124
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %47, label %56, label %126, !dbg !5484

56:                                               ; preds = %originalBBpart24
  %57 = load i32, i32* @x.123
  %58 = load i32, i32* @y.124
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %56, %originalBB6alteredBB
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5485
  %66 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %65, i32 0, i32 9, !dbg !5486
  %67 = load i8*, i8** %66, align 8, !dbg !5486
  %68 = icmp eq i8* %67, null, !dbg !5487
  %69 = load i32, i32* @x.123
  %70 = load i32, i32* @y.124
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %68, label %77, label %126, !dbg !5488

77:                                               ; preds = %originalBBpart28
  call void @llvm.dbg.declare(metadata i64* %16, metadata !5489, metadata !DIExpression()), !dbg !5491
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5492
  %79 = call i32 @fileno(%struct._IO_FILE* %78) #10, !dbg !5493
  %80 = load i64, i64* %14, align 8, !dbg !5494
  %81 = load i32, i32* %15, align 4, !dbg !5495
  %82 = call i64 @lseek(i32 %79, i64 %80, i32 %81) #10, !dbg !5496
  store i64 %82, i64* %16, align 8, !dbg !5491
  %83 = load i64, i64* %16, align 8, !dbg !5497
  %84 = icmp eq i64 %83, -1, !dbg !5499
  br i1 %84, label %85, label %102, !dbg !5500

85:                                               ; preds = %77
  %86 = load i32, i32* @x.123
  %87 = load i32, i32* @y.124
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %85, %originalBB10alteredBB
  store i32 -1, i32* %12, align 4, !dbg !5501
  %94 = load i32, i32* @x.123
  %95 = load i32, i32* @y.124
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %131, !dbg !5501

102:                                              ; preds = %77
  %103 = load i32, i32* @x.123
  %104 = load i32, i32* @y.124
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %102, %originalBB14alteredBB
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5503
  %112 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %111, i32 0, i32 0, !dbg !5504
  %113 = load i32, i32* %112, align 8, !dbg !5505
  %114 = and i32 %113, -17, !dbg !5505
  store i32 %114, i32* %112, align 8, !dbg !5505
  %115 = load i64, i64* %16, align 8, !dbg !5506
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5507
  %117 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %116, i32 0, i32 21, !dbg !5508
  store i64 %115, i64* %117, align 8, !dbg !5509
  store i32 0, i32* %12, align 4, !dbg !5510
  %118 = load i32, i32* @x.123
  %119 = load i32, i32* @y.124
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart227, label %originalBB14alteredBB

originalBBpart227:                                ; preds = %originalBB14
  br label %131, !dbg !5510

126:                                              ; preds = %originalBBpart28, %originalBBpart24, %originalBBpart2
  %127 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5511
  %128 = load i64, i64* %14, align 8, !dbg !5512
  %129 = load i32, i32* %15, align 4, !dbg !5513
  %130 = call i32 @fseeko(%struct._IO_FILE* %127, i64 %128, i32 %129), !dbg !5514
  store i32 %130, i32* %12, align 4, !dbg !5515
  br label %131, !dbg !5515

131:                                              ; preds = %126, %originalBBpart227, %originalBBpart212
  %132 = load i32, i32* %12, align 4, !dbg !5516
  ret i32 %132, !dbg !5516

originalBBalteredBB:                              ; preds = %originalBB, %3
  %133 = alloca i32, align 4
  %134 = alloca %struct._IO_FILE*, align 8
  %135 = alloca i64, align 8
  %136 = alloca i32, align 4
  %137 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %134, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %134, metadata !5517, metadata !DIExpression()), !dbg !5467
  store i64 %1, i64* %135, align 8
  call void @llvm.dbg.declare(metadata i64* %135, metadata !5556, metadata !DIExpression()), !dbg !5469
  store i32 %2, i32* %136, align 4
  call void @llvm.dbg.declare(metadata i32* %136, metadata !5557, metadata !DIExpression()), !dbg !5471
  %138 = load %struct._IO_FILE*, %struct._IO_FILE** %134, align 8, !dbg !5472
  %139 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %138, i32 0, i32 2, !dbg !5474
  %140 = load i8*, i8** %139, align 8, !dbg !5474
  %141 = load %struct._IO_FILE*, %struct._IO_FILE** %134, align 8, !dbg !5475
  %142 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %141, i32 0, i32 1, !dbg !5476
  %143 = load i8*, i8** %142, align 8, !dbg !5476
  %144 = icmp eq i8* %140, %143, !dbg !5477
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %145 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5479
  %146 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %145, i32 0, i32 5, !dbg !5480
  %147 = load i8*, i8** %146, align 8, !dbg !5480
  %148 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5481
  %149 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %148, i32 0, i32 4, !dbg !5482
  %150 = load i8*, i8** %149, align 8, !dbg !5482
  %151 = icmp eq i8* %147, %150, !dbg !5483
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %56
  %152 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5485
  %153 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %152, i32 0, i32 9, !dbg !5486
  %154 = load i8*, i8** %153, align 8, !dbg !5486
  %155 = icmp eq i8* %154, null, !dbg !5487
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %85
  store i32 -1, i32* %12, align 4, !dbg !5501
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %102
  %156 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5503
  %157 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %156, i32 0, i32 0, !dbg !5504
  %158 = load i32, i32* %157, align 8, !dbg !5505
  %_ = sub i32 0, %158
  %gen = add i32 %_, -17
  %_15 = shl i32 %158, -17
  %_16 = sub i32 %158, -17
  %gen17 = mul i32 %_16, -17
  %_18 = sub i32 0, %158
  %gen19 = add i32 %_18, -17
  %_20 = sub i32 0, %158
  %gen21 = add i32 %_20, -17
  %_22 = shl i32 %158, -17
  %_23 = shl i32 %158, -17
  %_24 = sub i32 %158, -17
  %gen25 = mul i32 %_24, -17
  %159 = and i32 %158, -17, !dbg !5505
  store i32 %159, i32* %157, align 8, !dbg !5505
  %160 = load i64, i64* %16, align 8, !dbg !5506
  %161 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5507
  %162 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %161, i32 0, i32 21, !dbg !5508
  store i64 %160, i64* %162, align 8, !dbg !5509
  store i32 0, i32* %12, align 4, !dbg !5510
  br label %originalBB14
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

define private i32 @controle(i8*, i32) {
  %3 = load i32, i32* @x.125
  %4 = load i32, i32* @y.126
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = load i32, i32* @inVal0
  %12 = icmp sgt i32 %11, 0
  %13 = load i32, i32* @x.125
  %14 = load i32, i32* @y.126
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %25, label %21

21:                                               ; preds = %originalBBpart2
  call void @srand(i32 %1)
  %22 = call i32 @rand()
  %23 = srem i32 %22, 50000
  %24 = add i32 %23, 2
  ret i32 %24

25:                                               ; preds = %originalBBpart2
  %26 = load i32, i32* @x.125
  %27 = load i32, i32* @y.126
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %25, %originalBB1alteredBB
  %34 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal2, i32 0, i32 0
  %35 = call i32 @strcmp(i8* %34, i8* %0)
  %36 = icmp eq i32 %35, 0
  %37 = load i32, i32* @x.125
  %38 = load i32, i32* @y.126
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %36, label %45, label %48

45:                                               ; preds = %originalBBpart24
  %46 = icmp eq i32 %1, -1
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  ret i32 5

48:                                               ; preds = %45, %originalBBpart24
  %49 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal1, i32 0, i32 0
  %50 = call i32 @strcmp(i8* %49, i8* %0)
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %71

52:                                               ; preds = %48
  %53 = load i32, i32* @x.125
  %54 = load i32, i32* @y.126
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %52, %originalBB6alteredBB
  %61 = icmp eq i32 %1, 7
  %62 = load i32, i32* @x.125
  %63 = load i32, i32* @y.126
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %61, label %70, label %71

70:                                               ; preds = %originalBBpart28
  ret i32 3

71:                                               ; preds = %originalBBpart28, %48
  %72 = load i32, i32* @x.125
  %73 = load i32, i32* @y.126
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %71, %originalBB10alteredBB
  %80 = getelementptr inbounds [3 x i8], [3 x i8]* @.compVal0, i32 0, i32 0
  %81 = call i32 @strcmp(i8* %80, i8* %0)
  %82 = icmp eq i32 %81, 0
  %83 = load i32, i32* @x.125
  %84 = load i32, i32* @y.126
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %82, label %91, label %110

91:                                               ; preds = %originalBBpart212
  %92 = icmp eq i32 %1, -3
  br i1 %92, label %93, label %110

93:                                               ; preds = %91
  %94 = load i32, i32* @x.125
  %95 = load i32, i32* @y.126
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %93, %originalBB14alteredBB
  %102 = load i32, i32* @x.125
  %103 = load i32, i32* @y.126
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret i32 3

110:                                              ; preds = %91, %originalBBpart212
  %111 = load i32, i32* @x.125
  %112 = load i32, i32* @y.126
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %110, %originalBB18alteredBB
  %119 = getelementptr inbounds [3 x i8], [3 x i8]* @.compVal0, i32 0, i32 0
  %120 = call i32 @strcmp(i8* %119, i8* %0)
  %121 = icmp eq i32 %120, 0
  %122 = load i32, i32* @x.125
  %123 = load i32, i32* @y.126
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %121, label %130, label %165

130:                                              ; preds = %originalBBpart220
  %131 = load i32, i32* @x.125
  %132 = load i32, i32* @y.126
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %130, %originalBB22alteredBB
  %139 = icmp eq i32 %1, 0
  %140 = load i32, i32* @x.125
  %141 = load i32, i32* @y.126
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %139, label %148, label %165

148:                                              ; preds = %originalBBpart224
  %149 = load i32, i32* @x.125
  %150 = load i32, i32* @y.126
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %148, %originalBB26alteredBB
  %157 = load i32, i32* @x.125
  %158 = load i32, i32* @y.126
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  ret i32 5

165:                                              ; preds = %originalBBpart224, %originalBBpart220
  call void @srand(i32 %1)
  %166 = call i32 @rand()
  %167 = srem i32 %166, 50000
  %168 = add i32 %167, 2
  ret i32 %168

originalBBalteredBB:                              ; preds = %originalBB, %2
  %169 = load i32, i32* @inVal0
  %170 = icmp sgt i32 %169, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  %171 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal2, i32 0, i32 0
  %172 = call i32 @strcmp(i8* %171, i8* %0)
  %173 = icmp eq i32 %172, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %52
  %174 = icmp eq i32 %1, 7
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %71
  %175 = getelementptr inbounds [3 x i8], [3 x i8]* @.compVal0, i32 0, i32 0
  %176 = call i32 @strcmp(i8* %175, i8* %0)
  %177 = icmp eq i32 %176, 0
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %93
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %110
  %178 = getelementptr inbounds [3 x i8], [3 x i8]* @.compVal0, i32 0, i32 0
  %179 = call i32 @strcmp(i8* %178, i8* %0)
  %180 = icmp eq i32 %179, 0
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %130
  %181 = icmp eq i32 %1, 0
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %148
  br label %originalBB26
}

declare void @srand(i32)

declare i32 @rand()

attributes #0 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { noreturn }
attributes #15 = { nounwind readnone }

!llvm.dbg.cu = !{!2, !155, !286, !160, !198, !206, !288, !290, !213, !220, !296, !299, !279, !301, !304, !306, !309, !312, !318, !320, !322, !324, !326}
!llvm.ident = !{!328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328, !328}
!llvm.module.flags = !{!329, !330, !331, !332, !333}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "longopts", scope: !2, file: !3, line: 162, type: !141, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !15, nameTableKind: None)
!3 = !DIFile(filename: "src/who.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4 = !{}
!5 = !{!6, !8, !9, !13, !14}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!9 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !10, line: 7, baseType: !11)
!10 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!11 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !12, line: 160, baseType: !13)
!12 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!13 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!14 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!15 = !{!16, !19, !21, !23, !25, !27, !29, !31, !33, !35, !37, !39, !41, !43, !45, !47, !51, !0, !54, !62, !108, !113, !118, !123, !131, !136, !138}
!16 = !DIGlobalVariableExpression(var: !17, expr: !DIExpression())
!17 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!18 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!19 = !DIGlobalVariableExpression(var: !20, expr: !DIExpression())
!20 = distinct !DIGlobalVariable(name: "short_list", scope: !2, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!21 = !DIGlobalVariableExpression(var: !22, expr: !DIExpression())
!22 = distinct !DIGlobalVariable(name: "short_output", scope: !2, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!23 = !DIGlobalVariableExpression(var: !24, expr: !DIExpression())
!24 = distinct !DIGlobalVariable(name: "include_idle", scope: !2, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "include_heading", scope: !2, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!27 = !DIGlobalVariableExpression(var: !28, expr: !DIExpression())
!28 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!29 = !DIGlobalVariableExpression(var: !30, expr: !DIExpression())
!30 = distinct !DIGlobalVariable(name: "include_exit", scope: !2, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!31 = !DIGlobalVariableExpression(var: !32, expr: !DIExpression())
!32 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!33 = !DIGlobalVariableExpression(var: !34, expr: !DIExpression())
!34 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!35 = !DIGlobalVariableExpression(var: !36, expr: !DIExpression())
!36 = distinct !DIGlobalVariable(name: "need_login", scope: !2, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!37 = !DIGlobalVariableExpression(var: !38, expr: !DIExpression())
!38 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!39 = !DIGlobalVariableExpression(var: !40, expr: !DIExpression())
!40 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!41 = !DIGlobalVariableExpression(var: !42, expr: !DIExpression())
!42 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!43 = !DIGlobalVariableExpression(var: !44, expr: !DIExpression())
!44 = distinct !DIGlobalVariable(name: "need_users", scope: !2, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!45 = !DIGlobalVariableExpression(var: !46, expr: !DIExpression())
!46 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!47 = !DIGlobalVariableExpression(var: !48, expr: !DIExpression())
!48 = distinct !DIGlobalVariable(name: "time_format", scope: !2, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64)
!50 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!51 = !DIGlobalVariableExpression(var: !52, expr: !DIExpression())
!52 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!53 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!54 = !DIGlobalVariableExpression(var: !55, expr: !DIExpression())
!55 = distinct !DIGlobalVariable(name: "mesg", scope: !56, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!56 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!57 = !DISubroutineType(types: !58)
!58 = !{null, !53, !49, !50, !53, !49, !49, !49, !49, !49, !49}
!59 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 24, elements: !60)
!60 = !{!61}
!61 = !DISubrange(count: 3)
!62 = !DIGlobalVariableExpression(var: !63, expr: !DIExpression())
!63 = distinct !DIGlobalVariable(name: "hoststr", scope: !64, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!64 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !65, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!65 = !DISubroutineType(types: !66)
!66 = !{null, !67, !9}
!67 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !68, size: 64)
!68 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !69)
!69 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !71)
!70 = !DIFile(filename: "./lib/readutmp.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!71 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !73)
!72 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/utmpx.h", directory: "")
!73 = !{!74, !75, !77, !81, !85, !86, !90, !95, !97, !102, !104}
!74 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !71, file: !72, line: 57, baseType: !14, size: 16)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !71, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!76 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !12, line: 154, baseType: !53)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !71, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!78 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 256, elements: !79)
!79 = !{!80}
!80 = !DISubrange(count: 32)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !71, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!82 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 32, elements: !83)
!83 = !{!84}
!84 = !DISubrange(count: 4)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !71, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !71, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!87 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2048, elements: !88)
!88 = !{!89}
!89 = !DISubrange(count: 256)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !71, file: !72, line: 67, baseType: !91, size: 32, offset: 2656)
!91 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !92)
!92 = !{!93, !94}
!93 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !91, file: !72, line: 45, baseType: !14, size: 16)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !91, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !71, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!96 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !12, line: 41, baseType: !53)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !71, file: !72, line: 79, baseType: !98, size: 64, offset: 2720)
!98 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !71, file: !72, line: 75, size: 64, elements: !99)
!99 = !{!100, !101}
!100 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !98, file: !72, line: 77, baseType: !96, size: 32)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !98, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !71, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 128, elements: !83)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !71, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 160, elements: !106)
!106 = !{!107}
!107 = !DISubrange(count: 20)
!108 = !DIGlobalVariableExpression(var: !109, expr: !DIExpression())
!109 = distinct !DIGlobalVariable(name: "hostlen", scope: !64, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !111, line: 46, baseType: !112)
!111 = !DIFile(filename: "/usr/lib/llvm-9/lib/clang/9.0.1/include/stddef.h", directory: "")
!112 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!113 = !DIGlobalVariableExpression(var: !114, expr: !DIExpression())
!114 = distinct !DIGlobalVariable(name: "now", scope: !115, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!115 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!116 = !DISubroutineType(types: !117)
!117 = !{!49, !9, !9}
!118 = !DIGlobalVariableExpression(var: !119, expr: !DIExpression())
!119 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !115, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 48, elements: !121)
!121 = !{!122}
!122 = !DISubrange(count: 6)
!123 = !DIGlobalVariableExpression(var: !124, expr: !DIExpression())
!124 = distinct !DIGlobalVariable(name: "buf", scope: !125, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!125 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !126, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!126 = !DISubroutineType(types: !127)
!127 = !{!49, !67}
!128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 264, elements: !129)
!129 = !{!130}
!130 = !DISubrange(count: 33)
!131 = !DIGlobalVariableExpression(var: !132, expr: !DIExpression())
!132 = distinct !DIGlobalVariable(name: "runlevline", scope: !133, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!133 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !134, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!134 = !DISubroutineType(types: !135)
!135 = !{null, !67}
!136 = !DIGlobalVariableExpression(var: !137, expr: !DIExpression())
!137 = distinct !DIGlobalVariable(name: "comment", scope: !133, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!138 = !DIGlobalVariableExpression(var: !139, expr: !DIExpression())
!139 = distinct !DIGlobalVariable(name: "exitstr", scope: !140, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!140 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !134, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 4608, elements: !151)
!142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !143)
!143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !145)
!144 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/getopt_ext.h", directory: "")
!145 = !{!146, !147, !148, !150}
!146 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !143, file: !144, line: 52, baseType: !49, size: 64)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !143, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !143, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !143, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!151 = !{!152}
!152 = !DISubrange(count: 18)
!153 = !DIGlobalVariableExpression(var: !154, expr: !DIExpression())
!154 = distinct !DIGlobalVariable(name: "Version", scope: !155, file: !156, line: 2, type: !49, isLocal: false, isDefinition: true)
!155 = distinct !DICompileUnit(language: DW_LANG_C99, file: !156, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !157, nameTableKind: None)
!156 = !DIFile(filename: "src/version.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!157 = !{!153}
!158 = !DIGlobalVariableExpression(var: !159, expr: !DIExpression())
!159 = distinct !DIGlobalVariable(name: "last_cherror", scope: !160, file: !166, line: 28, type: !53, isLocal: true, isDefinition: true)
!160 = distinct !DICompileUnit(language: DW_LANG_C99, file: !161, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !162, nameTableKind: None)
!161 = !DIFile(filename: "./lib/canon-host.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!162 = !{!163, !158}
!163 = !DIGlobalVariableExpression(var: !164, expr: !DIExpression())
!164 = distinct !DIGlobalVariable(name: "hints", scope: !165, file: !166, line: 64, type: !169, isLocal: true, isDefinition: true)
!165 = distinct !DISubprogram(name: "canon_host_r", scope: !166, file: !166, line: 61, type: !167, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !160, retainedNodes: !4)
!166 = !DIFile(filename: "lib/canon-host.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!167 = !DISubroutineType(types: !168)
!168 = !{!6, !49, !149}
!169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "addrinfo", file: !170, line: 565, size: 384, elements: !171)
!170 = !DIFile(filename: "/usr/include/netdb.h", directory: "")
!171 = !{!172, !173, !174, !175, !176, !181, !193, !194}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "ai_flags", scope: !169, file: !170, line: 567, baseType: !53, size: 32)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "ai_family", scope: !169, file: !170, line: 568, baseType: !53, size: 32, offset: 32)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "ai_socktype", scope: !169, file: !170, line: 569, baseType: !53, size: 32, offset: 64)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "ai_protocol", scope: !169, file: !170, line: 570, baseType: !53, size: 32, offset: 96)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addrlen", scope: !169, file: !170, line: 571, baseType: !177, size: 32, offset: 128)
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !178, line: 33, baseType: !179)
!178 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket.h", directory: "")
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "__socklen_t", file: !12, line: 209, baseType: !180)
!180 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addr", scope: !169, file: !170, line: 572, baseType: !182, size: 64, offset: 192)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !178, line: 178, size: 128, elements: !184)
!184 = !{!185, !189}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !183, file: !178, line: 180, baseType: !186, size: 16)
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !187, line: 28, baseType: !188)
!187 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sockaddr.h", directory: "")
!188 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !183, file: !178, line: 181, baseType: !190, size: 112, offset: 16)
!190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 112, elements: !191)
!191 = !{!192}
!192 = !DISubrange(count: 14)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "ai_canonname", scope: !169, file: !170, line: 573, baseType: !6, size: 64, offset: 256)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "ai_next", scope: !169, file: !170, line: 574, baseType: !195, size: 64, offset: 320)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 64)
!196 = !DIGlobalVariableExpression(var: !197, expr: !DIExpression())
!197 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !198, file: !203, line: 56, type: !18, isLocal: true, isDefinition: true)
!198 = distinct !DICompileUnit(language: DW_LANG_C99, file: !199, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !200, nameTableKind: None)
!199 = !DIFile(filename: "./lib/closeout.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!200 = !{!201, !196}
!201 = !DIGlobalVariableExpression(var: !202, expr: !DIExpression())
!202 = distinct !DIGlobalVariable(name: "file_name", scope: !198, file: !203, line: 46, type: !49, isLocal: true, isDefinition: true)
!203 = !DIFile(filename: "lib/closeout.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!204 = !DIGlobalVariableExpression(var: !205, expr: !DIExpression())
!205 = distinct !DIGlobalVariable(name: "exit_failure", scope: !206, file: !209, line: 24, type: !210, isLocal: false, isDefinition: true)
!206 = distinct !DICompileUnit(language: DW_LANG_C99, file: !207, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !208, nameTableKind: None)
!207 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!208 = !{!204}
!209 = !DIFile(filename: "lib/exitfail.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!210 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !53)
!211 = !DIGlobalVariableExpression(var: !212, expr: !DIExpression())
!212 = distinct !DIGlobalVariable(name: "program_name", scope: !213, file: !217, line: 33, type: !49, isLocal: false, isDefinition: true)
!213 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, globals: !216, nameTableKind: None)
!214 = !DIFile(filename: "./lib/progname.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!215 = !{!8, !6}
!216 = !{!211}
!217 = !DIFile(filename: "lib/progname.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!218 = !DIGlobalVariableExpression(var: !219, expr: !DIExpression())
!219 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !220, file: !241, line: 116, type: !254, isLocal: true, isDefinition: true)
!220 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !238, nameTableKind: None)
!221 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!222 = !{!223}
!223 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !224, line: 32, baseType: !180, size: 32, elements: !225)
!224 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!225 = !{!226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236}
!226 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!227 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!228 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!229 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!230 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!231 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!232 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!233 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!234 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!235 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!236 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!237 = !{!53, !188, !110}
!238 = !{!239, !246, !252, !218, !264, !266, !273, !275}
!239 = !DIGlobalVariableExpression(var: !240, expr: !DIExpression())
!240 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !220, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!241 = !DIFile(filename: "lib/quotearg.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !243, size: 704, elements: !244)
!243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !49)
!244 = !{!245}
!245 = !DISubrange(count: 11)
!246 = !DIGlobalVariableExpression(var: !247, expr: !DIExpression())
!247 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !220, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !249, size: 320, elements: !250)
!249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !223)
!250 = !{!251}
!251 = !DISubrange(count: 10)
!252 = !DIGlobalVariableExpression(var: !253, expr: !DIExpression())
!253 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !220, file: !241, line: 1052, type: !254, isLocal: false, isDefinition: true)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !255)
!255 = !{!256, !257, !258, !262, !263}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !254, file: !241, line: 68, baseType: !223, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !254, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !254, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !180, size: 256, elements: !260)
!260 = !{!261}
!261 = !DISubrange(count: 8)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !254, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !254, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!264 = !DIGlobalVariableExpression(var: !265, expr: !DIExpression())
!265 = distinct !DIGlobalVariable(name: "slot0", scope: !220, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "slotvec", scope: !220, file: !241, line: 845, type: !268, isLocal: true, isDefinition: true)
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !270)
!270 = !{!271, !272}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !269, file: !241, line: 836, baseType: !110, size: 64)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !269, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!273 = !DIGlobalVariableExpression(var: !274, expr: !DIExpression())
!274 = distinct !DIGlobalVariable(name: "nslots", scope: !220, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!275 = !DIGlobalVariableExpression(var: !276, expr: !DIExpression())
!276 = distinct !DIGlobalVariable(name: "slotvec0", scope: !220, file: !241, line: 844, type: !269, isLocal: true, isDefinition: true)
!277 = !DIGlobalVariableExpression(var: !278, expr: !DIExpression())
!278 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !279, file: !282, line: 26, type: !283, isLocal: false, isDefinition: true)
!279 = distinct !DICompileUnit(language: DW_LANG_C99, file: !280, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !281, nameTableKind: None)
!280 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!281 = !{!277}
!282 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !50, size: 376, elements: !284)
!284 = !{!285}
!285 = !DISubrange(count: 47)
!286 = distinct !DICompileUnit(language: DW_LANG_C99, file: !287, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!287 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!288 = distinct !DICompileUnit(language: DW_LANG_C99, file: !289, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!289 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!290 = distinct !DICompileUnit(language: DW_LANG_C99, file: !291, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !292, nameTableKind: None)
!291 = !DIFile(filename: "./lib/imaxtostr.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!292 = !{!293}
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !294, line: 101, baseType: !295)
!294 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!295 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !12, line: 72, baseType: !13)
!296 = distinct !DICompileUnit(language: DW_LANG_C99, file: !297, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!297 = !DIFile(filename: "./lib/setlocale_null.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!298 = !{!8}
!299 = distinct !DICompileUnit(language: DW_LANG_C99, file: !300, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!300 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!301 = distinct !DICompileUnit(language: DW_LANG_C99, file: !302, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !303, nameTableKind: None)
!302 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!303 = !{!110, !6, !8}
!304 = distinct !DICompileUnit(language: DW_LANG_C99, file: !305, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!305 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!306 = distinct !DICompileUnit(language: DW_LANG_C99, file: !307, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !308, nameTableKind: None)
!307 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!308 = !{!110}
!309 = distinct !DICompileUnit(language: DW_LANG_C99, file: !310, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !311, nameTableKind: None)
!310 = !DIFile(filename: "./lib/readutmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!311 = !{!6, !8}
!312 = distinct !DICompileUnit(language: DW_LANG_C99, file: !313, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !314, nameTableKind: None)
!313 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!314 = !{!315}
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !317)
!317 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!318 = distinct !DICompileUnit(language: DW_LANG_C99, file: !319, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!319 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!320 = distinct !DICompileUnit(language: DW_LANG_C99, file: !321, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!321 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!322 = distinct !DICompileUnit(language: DW_LANG_C99, file: !323, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!323 = !DIFile(filename: "./lib/fclose.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!324 = distinct !DICompileUnit(language: DW_LANG_C99, file: !325, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!325 = !DIFile(filename: "./lib/fflush.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!326 = distinct !DICompileUnit(language: DW_LANG_C99, file: !327, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!327 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!328 = !{!"clang version 9.0.1-12 "}
!329 = !{i32 2, !"Dwarf Version", i32 4}
!330 = !{i32 2, !"Debug Info Version", i32 3}
!331 = !{i32 1, !"wchar_size", i32 4}
!332 = !{i32 1, !"ThinLTO", i32 0}
!333 = !{i32 1, !"EnableSplitLTOUnit", i32 0}
!334 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 638, type: !335, scopeLine: 639, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!335 = !DISubroutineType(types: !336)
!336 = !{null, !53}
!337 = !DILocalVariable(name: "status", arg: 1, scope: !334, file: !3, line: 638, type: !53)
!338 = !DILocation(line: 638, column: 12, scope: !334)
!339 = !DILocation(line: 640, column: 7, scope: !340)
!340 = distinct !DILexicalBlock(scope: !334, file: !3, line: 640, column: 7)
!341 = !DILocation(line: 640, column: 14, scope: !340)
!342 = !DILocation(line: 640, column: 7, scope: !334)
!343 = !DILocation(line: 641, column: 5, scope: !340)
!344 = !DILocation(line: 641, column: 5, scope: !345)
!345 = distinct !DILexicalBlock(scope: !340, file: !3, line: 641, column: 5)
!346 = !DILocation(line: 644, column: 15, scope: !347)
!347 = distinct !DILexicalBlock(scope: !340, file: !3, line: 643, column: 5)
!348 = !DILocation(line: 644, column: 66, scope: !347)
!349 = !DILocation(line: 644, column: 7, scope: !347)
!350 = !DILocation(line: 645, column: 7, scope: !347)
!351 = !DILocation(line: 648, column: 7, scope: !347)
!352 = !DILocation(line: 655, column: 7, scope: !347)
!353 = !DILocation(line: 658, column: 7, scope: !347)
!354 = !DILocation(line: 663, column: 7, scope: !347)
!355 = !DILocation(line: 669, column: 7, scope: !347)
!356 = !DILocation(line: 675, column: 7, scope: !347)
!357 = !DILocation(line: 676, column: 7, scope: !347)
!358 = !DILocation(line: 677, column: 15, scope: !347)
!359 = !DILocation(line: 677, column: 7, scope: !347)
!360 = !DILocation(line: 682, column: 7, scope: !347)
!361 = !DILocation(line: 684, column: 9, scope: !334)
!362 = !DILocation(line: 684, column: 3, scope: !334)
!363 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !364, file: !364, line: 634, type: !365, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!364 = !DIFile(filename: "src/system.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!365 = !DISubroutineType(types: !366)
!366 = !{null, !49}
!367 = !DILocalVariable(name: "program", arg: 1, scope: !363, file: !364, line: 634, type: !49)
!368 = !DILocation(line: 634, column: 34, scope: !363)
!369 = !DILocalVariable(name: "infomap", scope: !363, file: !364, line: 636, type: !370)
!370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !371, size: 896, elements: !376)
!371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !372)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !363, file: !364, line: 636, size: 128, elements: !373)
!373 = !{!374, !375}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !372, file: !364, line: 636, baseType: !49, size: 64)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !372, file: !364, line: 636, baseType: !49, size: 64, offset: 64)
!376 = !{!377}
!377 = !DISubrange(count: 7)
!378 = !DILocation(line: 636, column: 67, scope: !363)
!379 = !DILocalVariable(name: "node", scope: !363, file: !364, line: 646, type: !49)
!380 = !DILocation(line: 646, column: 15, scope: !363)
!381 = !DILocation(line: 646, column: 22, scope: !363)
!382 = !DILocalVariable(name: "map_prog", scope: !363, file: !364, line: 647, type: !383)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!384 = !DILocation(line: 647, column: 25, scope: !363)
!385 = !DILocation(line: 647, column: 36, scope: !363)
!386 = !DILocation(line: 649, column: 3, scope: !363)
!387 = !DILocation(line: 649, column: 10, scope: !363)
!388 = !DILocation(line: 649, column: 20, scope: !363)
!389 = !DILocation(line: 649, column: 28, scope: !363)
!390 = !DILocation(line: 649, column: 33, scope: !363)
!391 = !DILocation(line: 649, column: 31, scope: !363)
!392 = !DILocation(line: 0, scope: !363)
!393 = !DILocation(line: 650, column: 13, scope: !363)
!394 = distinct !{!394, !386, !393}
!395 = !DILocation(line: 652, column: 7, scope: !396)
!396 = distinct !DILexicalBlock(scope: !363, file: !364, line: 652, column: 7)
!397 = !DILocation(line: 652, column: 17, scope: !396)
!398 = !DILocation(line: 652, column: 7, scope: !363)
!399 = !DILocation(line: 653, column: 12, scope: !396)
!400 = !DILocation(line: 653, column: 22, scope: !396)
!401 = !DILocation(line: 653, column: 10, scope: !396)
!402 = !DILocation(line: 653, column: 5, scope: !396)
!403 = !DILocation(line: 655, column: 11, scope: !363)
!404 = !DILocation(line: 655, column: 3, scope: !363)
!405 = !DILocalVariable(name: "lc_messages", scope: !363, file: !364, line: 659, type: !49)
!406 = !DILocation(line: 659, column: 15, scope: !363)
!407 = !DILocation(line: 659, column: 29, scope: !363)
!408 = !DILocation(line: 660, column: 7, scope: !409)
!409 = distinct !DILexicalBlock(scope: !363, file: !364, line: 660, column: 7)
!410 = !DILocation(line: 660, column: 19, scope: !409)
!411 = !DILocation(line: 660, column: 22, scope: !409)
!412 = !DILocation(line: 660, column: 7, scope: !363)
!413 = !DILocation(line: 666, column: 7, scope: !414)
!414 = distinct !DILexicalBlock(scope: !409, file: !364, line: 661, column: 5)
!415 = !DILocation(line: 668, column: 5, scope: !414)
!416 = !DILocation(line: 669, column: 11, scope: !363)
!417 = !DILocation(line: 670, column: 24, scope: !363)
!418 = !DILocation(line: 669, column: 3, scope: !363)
!419 = !DILocation(line: 671, column: 11, scope: !363)
!420 = !DILocation(line: 672, column: 11, scope: !363)
!421 = !DILocation(line: 672, column: 17, scope: !363)
!422 = !DILocation(line: 672, column: 25, scope: !363)
!423 = !DILocation(line: 672, column: 22, scope: !363)
!424 = !DILocation(line: 671, column: 3, scope: !363)
!425 = !DILocation(line: 673, column: 1, scope: !363)
!426 = !DILocalVariable(name: "lc_messages", scope: !427, file: !364, line: 659, type: !49)
!427 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !364, file: !364, line: 634, type: !365, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !428, retainedNodes: !4)
!428 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !429, nameTableKind: None)
!429 = !{!430, !432, !434, !436, !438, !440, !442, !444, !446, !448, !450, !452, !454, !456, !458, !460, !462, !464, !474, !477, !506, !508, !511, !513, !518, !523, !525}
!430 = !DIGlobalVariableExpression(var: !431, expr: !DIExpression())
!431 = distinct !DIGlobalVariable(name: "do_lookup", scope: !428, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!432 = !DIGlobalVariableExpression(var: !433, expr: !DIExpression())
!433 = distinct !DIGlobalVariable(name: "short_list", scope: !428, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!434 = !DIGlobalVariableExpression(var: !435, expr: !DIExpression())
!435 = distinct !DIGlobalVariable(name: "short_output", scope: !428, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!436 = !DIGlobalVariableExpression(var: !437, expr: !DIExpression())
!437 = distinct !DIGlobalVariable(name: "include_idle", scope: !428, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!438 = !DIGlobalVariableExpression(var: !439, expr: !DIExpression())
!439 = distinct !DIGlobalVariable(name: "include_heading", scope: !428, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!440 = !DIGlobalVariableExpression(var: !441, expr: !DIExpression())
!441 = distinct !DIGlobalVariable(name: "include_mesg", scope: !428, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!442 = !DIGlobalVariableExpression(var: !443, expr: !DIExpression())
!443 = distinct !DIGlobalVariable(name: "include_exit", scope: !428, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!444 = !DIGlobalVariableExpression(var: !445, expr: !DIExpression())
!445 = distinct !DIGlobalVariable(name: "need_boottime", scope: !428, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!446 = !DIGlobalVariableExpression(var: !447, expr: !DIExpression())
!447 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !428, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!448 = !DIGlobalVariableExpression(var: !449, expr: !DIExpression())
!449 = distinct !DIGlobalVariable(name: "need_login", scope: !428, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!450 = !DIGlobalVariableExpression(var: !451, expr: !DIExpression())
!451 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !428, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!452 = !DIGlobalVariableExpression(var: !453, expr: !DIExpression())
!453 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !428, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!454 = !DIGlobalVariableExpression(var: !455, expr: !DIExpression())
!455 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !428, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!456 = !DIGlobalVariableExpression(var: !457, expr: !DIExpression())
!457 = distinct !DIGlobalVariable(name: "need_users", scope: !428, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!458 = !DIGlobalVariableExpression(var: !459, expr: !DIExpression())
!459 = distinct !DIGlobalVariable(name: "my_line_only", scope: !428, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!460 = !DIGlobalVariableExpression(var: !461, expr: !DIExpression())
!461 = distinct !DIGlobalVariable(name: "time_format", scope: !428, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!462 = !DIGlobalVariableExpression(var: !463, expr: !DIExpression())
!463 = distinct !DIGlobalVariable(name: "time_format_width", scope: !428, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!464 = !DIGlobalVariableExpression(var: !465, expr: !DIExpression())
!465 = distinct !DIGlobalVariable(name: "longopts", scope: !428, file: !3, line: 162, type: !466, isLocal: true, isDefinition: true)
!466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 4608, elements: !151)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !468)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !469)
!469 = !{!470, !471, !472, !473}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !468, file: !144, line: 52, baseType: !49, size: 64)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !468, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !468, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !468, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!474 = !DIGlobalVariableExpression(var: !475, expr: !DIExpression())
!475 = distinct !DIGlobalVariable(name: "mesg", scope: !476, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!476 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !428, retainedNodes: !4)
!477 = !DIGlobalVariableExpression(var: !478, expr: !DIExpression())
!478 = distinct !DIGlobalVariable(name: "hoststr", scope: !479, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!479 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !480, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !428, retainedNodes: !4)
!480 = !DISubroutineType(types: !481)
!481 = !{null, !482, !9}
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !484)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !485)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !486)
!486 = !{!487, !488, !489, !490, !491, !492, !493, !498, !499, !504, !505}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !485, file: !72, line: 57, baseType: !14, size: 16)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !485, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !485, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !485, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !485, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !485, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !485, file: !72, line: 67, baseType: !494, size: 32, offset: 2656)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !495)
!495 = !{!496, !497}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !494, file: !72, line: 45, baseType: !14, size: 16)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !494, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !485, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !485, file: !72, line: 79, baseType: !500, size: 64, offset: 2720)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !485, file: !72, line: 75, size: 64, elements: !501)
!501 = !{!502, !503}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !500, file: !72, line: 77, baseType: !96, size: 32)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !500, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !485, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !485, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!506 = !DIGlobalVariableExpression(var: !507, expr: !DIExpression())
!507 = distinct !DIGlobalVariable(name: "hostlen", scope: !479, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!508 = !DIGlobalVariableExpression(var: !509, expr: !DIExpression())
!509 = distinct !DIGlobalVariable(name: "now", scope: !510, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!510 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !428, retainedNodes: !4)
!511 = !DIGlobalVariableExpression(var: !512, expr: !DIExpression())
!512 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !510, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!513 = !DIGlobalVariableExpression(var: !514, expr: !DIExpression())
!514 = distinct !DIGlobalVariable(name: "buf", scope: !515, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!515 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !516, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !428, retainedNodes: !4)
!516 = !DISubroutineType(types: !517)
!517 = !{!49, !482}
!518 = !DIGlobalVariableExpression(var: !519, expr: !DIExpression())
!519 = distinct !DIGlobalVariable(name: "runlevline", scope: !520, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!520 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !521, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !428, retainedNodes: !4)
!521 = !DISubroutineType(types: !522)
!522 = !{null, !482}
!523 = !DIGlobalVariableExpression(var: !524, expr: !DIExpression())
!524 = distinct !DIGlobalVariable(name: "comment", scope: !520, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!525 = !DIGlobalVariableExpression(var: !526, expr: !DIExpression())
!526 = distinct !DIGlobalVariable(name: "exitstr", scope: !527, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!527 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !521, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !428, retainedNodes: !4)
!528 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 688, type: !529, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!529 = !DISubroutineType(types: !530)
!530 = !{!53, !53, !531}
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!532 = !DILocalVariable(name: "argc", arg: 1, scope: !528, file: !3, line: 688, type: !53)
!533 = !DILocation(line: 688, column: 11, scope: !528)
!534 = !DILocalVariable(name: "argv", arg: 2, scope: !528, file: !3, line: 688, type: !531)
!535 = !DILocation(line: 688, column: 24, scope: !528)
!536 = !DILocalVariable(name: "optc", scope: !528, file: !3, line: 690, type: !53)
!537 = !DILocation(line: 690, column: 7, scope: !528)
!538 = !DILocalVariable(name: "assumptions", scope: !528, file: !3, line: 691, type: !18)
!539 = !DILocation(line: 691, column: 8, scope: !528)
!540 = !DILocation(line: 694, column: 21, scope: !528)
!541 = !DILocation(line: 694, column: 3, scope: !528)
!542 = !DILocation(line: 695, column: 3, scope: !528)
!543 = !DILocation(line: 696, column: 3, scope: !528)
!544 = !DILocation(line: 697, column: 3, scope: !528)
!545 = !DILocation(line: 699, column: 3, scope: !528)
!546 = !DILocation(line: 701, column: 3, scope: !528)
!547 = !DILocation(line: 701, column: 31, scope: !528)
!548 = !DILocation(line: 701, column: 37, scope: !528)
!549 = !DILocation(line: 701, column: 18, scope: !528)
!550 = !DILocation(line: 701, column: 16, scope: !528)
!551 = !DILocation(line: 702, column: 10, scope: !528)
!552 = !DILocation(line: 704, column: 15, scope: !553)
!553 = distinct !DILexicalBlock(scope: !528, file: !3, line: 703, column: 5)
!554 = !DILocation(line: 704, column: 7, scope: !553)
!555 = !DILocation(line: 707, column: 25, scope: !556)
!556 = distinct !DILexicalBlock(scope: !553, file: !3, line: 705, column: 9)
!557 = !DILocation(line: 708, column: 26, scope: !556)
!558 = !DILocation(line: 709, column: 22, scope: !556)
!559 = !DILocation(line: 710, column: 26, scope: !556)
!560 = !DILocation(line: 711, column: 25, scope: !556)
!561 = !DILocation(line: 712, column: 28, scope: !556)
!562 = !DILocation(line: 713, column: 22, scope: !556)
!563 = !DILocation(line: 714, column: 24, scope: !556)
!564 = !DILocation(line: 715, column: 24, scope: !556)
!565 = !DILocation(line: 716, column: 24, scope: !556)
!566 = !DILocation(line: 717, column: 23, scope: !556)
!567 = !DILocation(line: 718, column: 11, scope: !556)
!568 = !DILocation(line: 721, column: 25, scope: !556)
!569 = !DILocation(line: 722, column: 23, scope: !556)
!570 = !DILocation(line: 723, column: 11, scope: !556)
!571 = !DILocation(line: 726, column: 26, scope: !556)
!572 = !DILocation(line: 727, column: 24, scope: !556)
!573 = !DILocation(line: 728, column: 24, scope: !556)
!574 = !DILocation(line: 729, column: 23, scope: !556)
!575 = !DILocation(line: 730, column: 11, scope: !556)
!576 = !DILocation(line: 733, column: 27, scope: !556)
!577 = !DILocation(line: 734, column: 11, scope: !556)
!578 = !DILocation(line: 737, column: 22, scope: !556)
!579 = !DILocation(line: 738, column: 24, scope: !556)
!580 = !DILocation(line: 739, column: 23, scope: !556)
!581 = !DILocation(line: 740, column: 11, scope: !556)
!582 = !DILocation(line: 743, column: 24, scope: !556)
!583 = !DILocation(line: 744, column: 11, scope: !556)
!584 = !DILocation(line: 747, column: 26, scope: !556)
!585 = !DILocation(line: 748, column: 23, scope: !556)
!586 = !DILocation(line: 749, column: 11, scope: !556)
!587 = !DILocation(line: 752, column: 22, scope: !556)
!588 = !DILocation(line: 753, column: 11, scope: !556)
!589 = !DILocation(line: 756, column: 25, scope: !556)
!590 = !DILocation(line: 757, column: 24, scope: !556)
!591 = !DILocation(line: 758, column: 23, scope: !556)
!592 = !DILocation(line: 759, column: 11, scope: !556)
!593 = !DILocation(line: 762, column: 24, scope: !556)
!594 = !DILocation(line: 763, column: 11, scope: !556)
!595 = !DILocation(line: 766, column: 28, scope: !556)
!596 = !DILocation(line: 767, column: 23, scope: !556)
!597 = !DILocation(line: 768, column: 11, scope: !556)
!598 = !DILocation(line: 772, column: 24, scope: !556)
!599 = !DILocation(line: 773, column: 11, scope: !556)
!600 = !DILocation(line: 776, column: 22, scope: !556)
!601 = !DILocation(line: 777, column: 24, scope: !556)
!602 = !DILocation(line: 778, column: 23, scope: !556)
!603 = !DILocation(line: 779, column: 11, scope: !556)
!604 = !DILocation(line: 782, column: 21, scope: !556)
!605 = !DILocation(line: 783, column: 11, scope: !556)
!606 = !DILocation(line: 785, column: 9, scope: !556)
!607 = !DILocation(line: 787, column: 9, scope: !556)
!608 = !DILocation(line: 790, column: 11, scope: !556)
!609 = distinct !{!609, !546, !610}
!610 = !DILocation(line: 792, column: 5, scope: !528)
!611 = !DILocation(line: 794, column: 7, scope: !612)
!612 = distinct !DILexicalBlock(scope: !528, file: !3, line: 794, column: 7)
!613 = !DILocation(line: 794, column: 7, scope: !528)
!614 = !DILocation(line: 796, column: 18, scope: !615)
!615 = distinct !DILexicalBlock(scope: !612, file: !3, line: 795, column: 5)
!616 = !DILocation(line: 797, column: 20, scope: !615)
!617 = !DILocation(line: 798, column: 5, scope: !615)
!618 = !DILocation(line: 800, column: 7, scope: !619)
!619 = distinct !DILexicalBlock(scope: !528, file: !3, line: 800, column: 7)
!620 = !DILocation(line: 800, column: 7, scope: !528)
!621 = !DILocation(line: 802, column: 20, scope: !622)
!622 = distinct !DILexicalBlock(scope: !619, file: !3, line: 801, column: 5)
!623 = !DILocation(line: 803, column: 5, scope: !622)
!624 = !DILocation(line: 805, column: 7, scope: !625)
!625 = distinct !DILexicalBlock(scope: !528, file: !3, line: 805, column: 7)
!626 = !DILocation(line: 805, column: 7, scope: !528)
!627 = !DILocation(line: 807, column: 19, scope: !628)
!628 = distinct !DILexicalBlock(scope: !625, file: !3, line: 806, column: 5)
!629 = !DILocation(line: 808, column: 25, scope: !628)
!630 = !DILocation(line: 809, column: 5, scope: !628)
!631 = !DILocation(line: 812, column: 19, scope: !632)
!632 = distinct !DILexicalBlock(scope: !625, file: !3, line: 811, column: 5)
!633 = !DILocation(line: 813, column: 25, scope: !632)
!634 = !DILocation(line: 816, column: 11, scope: !528)
!635 = !DILocation(line: 816, column: 18, scope: !528)
!636 = !DILocation(line: 816, column: 16, scope: !528)
!637 = !DILocation(line: 816, column: 3, scope: !528)
!638 = !DILocation(line: 819, column: 20, scope: !639)
!639 = distinct !DILexicalBlock(scope: !528, file: !3, line: 817, column: 5)
!640 = !DILocation(line: 820, column: 7, scope: !639)
!641 = !DILocation(line: 823, column: 7, scope: !639)
!642 = !DILocation(line: 824, column: 7, scope: !639)
!643 = !DILocation(line: 827, column: 12, scope: !639)
!644 = !DILocation(line: 827, column: 17, scope: !639)
!645 = !DILocation(line: 827, column: 7, scope: !639)
!646 = !DILocation(line: 828, column: 7, scope: !639)
!647 = !DILocation(line: 831, column: 20, scope: !639)
!648 = !DILocation(line: 831, column: 50, scope: !639)
!649 = !DILocation(line: 831, column: 55, scope: !639)
!650 = !DILocation(line: 831, column: 62, scope: !639)
!651 = !DILocation(line: 831, column: 43, scope: !639)
!652 = !DILocation(line: 831, column: 7, scope: !639)
!653 = !DILocation(line: 832, column: 7, scope: !639)
!654 = !DILocation(line: 835, column: 3, scope: !528)
!655 = distinct !DISubprogram(name: "who", scope: !3, file: !3, line: 621, type: !656, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!656 = !DISubroutineType(types: !657)
!657 = !{null, !49, !53}
!658 = !DILocalVariable(name: "filename", arg: 1, scope: !655, file: !3, line: 621, type: !49)
!659 = !DILocation(line: 621, column: 18, scope: !655)
!660 = !DILocalVariable(name: "options", arg: 2, scope: !655, file: !3, line: 621, type: !53)
!661 = !DILocation(line: 621, column: 32, scope: !655)
!662 = !DILocalVariable(name: "n_users", scope: !655, file: !3, line: 623, type: !110)
!663 = !DILocation(line: 623, column: 10, scope: !655)
!664 = !DILocalVariable(name: "utmp_buf", scope: !655, file: !3, line: 624, type: !665)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 64)
!666 = !DILocation(line: 624, column: 16, scope: !655)
!667 = !DILocation(line: 626, column: 18, scope: !668)
!668 = distinct !DILexicalBlock(scope: !655, file: !3, line: 626, column: 7)
!669 = !DILocation(line: 626, column: 49, scope: !668)
!670 = !DILocation(line: 626, column: 7, scope: !668)
!671 = !DILocation(line: 626, column: 58, scope: !668)
!672 = !DILocation(line: 626, column: 7, scope: !655)
!673 = !DILocation(line: 627, column: 5, scope: !668)
!674 = !DILocation(line: 629, column: 7, scope: !675)
!675 = distinct !DILexicalBlock(scope: !655, file: !3, line: 629, column: 7)
!676 = !DILocation(line: 629, column: 7, scope: !655)
!677 = !DILocation(line: 630, column: 23, scope: !675)
!678 = !DILocation(line: 630, column: 32, scope: !675)
!679 = !DILocation(line: 630, column: 5, scope: !675)
!680 = !DILocation(line: 632, column: 19, scope: !675)
!681 = !DILocation(line: 632, column: 28, scope: !675)
!682 = !DILocation(line: 632, column: 5, scope: !675)
!683 = !DILocation(line: 634, column: 9, scope: !655)
!684 = !DILocation(line: 634, column: 3, scope: !655)
!685 = !DILocation(line: 635, column: 1, scope: !655)
!686 = distinct !DISubprogram(name: "list_entries_who", scope: !3, file: !3, line: 537, type: !687, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!687 = !DISubroutineType(types: !688)
!688 = !{null, !110, !67}
!689 = !DILocalVariable(name: "n", arg: 1, scope: !686, file: !3, line: 537, type: !110)
!690 = !DILocation(line: 537, column: 26, scope: !686)
!691 = !DILocalVariable(name: "utmp_buf", arg: 2, scope: !686, file: !3, line: 537, type: !67)
!692 = !DILocation(line: 537, column: 48, scope: !686)
!693 = !DILocalVariable(name: "entries", scope: !686, file: !3, line: 539, type: !112)
!694 = !DILocation(line: 539, column: 21, scope: !686)
!695 = !DILocalVariable(name: "separator", scope: !686, file: !3, line: 540, type: !49)
!696 = !DILocation(line: 540, column: 15, scope: !686)
!697 = !DILocation(line: 542, column: 3, scope: !686)
!698 = !DILocation(line: 542, column: 11, scope: !686)
!699 = !DILocation(line: 544, column: 11, scope: !700)
!700 = distinct !DILexicalBlock(scope: !701, file: !3, line: 544, column: 11)
!701 = distinct !DILexicalBlock(scope: !686, file: !3, line: 543, column: 5)
!702 = !DILocation(line: 544, column: 11, scope: !701)
!703 = !DILocalVariable(name: "trimmed_name", scope: !704, file: !3, line: 546, type: !6)
!704 = distinct !DILexicalBlock(scope: !700, file: !3, line: 545, column: 9)
!705 = !DILocation(line: 546, column: 17, scope: !704)
!706 = !DILocation(line: 548, column: 48, scope: !704)
!707 = !DILocation(line: 548, column: 26, scope: !704)
!708 = !DILocation(line: 548, column: 24, scope: !704)
!709 = !DILocation(line: 550, column: 27, scope: !704)
!710 = !DILocation(line: 550, column: 38, scope: !704)
!711 = !DILocation(line: 550, column: 11, scope: !704)
!712 = !DILocation(line: 551, column: 17, scope: !704)
!713 = !DILocation(line: 551, column: 11, scope: !704)
!714 = !DILocation(line: 552, column: 21, scope: !704)
!715 = !DILocation(line: 553, column: 18, scope: !704)
!716 = !DILocation(line: 554, column: 9, scope: !704)
!717 = !DILocation(line: 555, column: 15, scope: !701)
!718 = distinct !{!718, !697, !719}
!719 = !DILocation(line: 556, column: 5, scope: !686)
!720 = !DILocation(line: 557, column: 11, scope: !686)
!721 = !DILocation(line: 557, column: 33, scope: !686)
!722 = !DILocation(line: 557, column: 3, scope: !686)
!723 = !DILocation(line: 558, column: 1, scope: !686)
!724 = !DILocalVariable(name: "n", arg: 1, scope: !725, file: !3, line: 537, type: !110)
!725 = distinct !DISubprogram(name: "list_entries_who", scope: !3, file: !3, line: 537, type: !726, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !752, retainedNodes: !4)
!726 = !DISubroutineType(types: !727)
!727 = !{null, !110, !728}
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!729 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !730)
!730 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !731)
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !732)
!732 = !{!733, !734, !735, !736, !737, !738, !739, !744, !745, !750, !751}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !731, file: !72, line: 57, baseType: !14, size: 16)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !731, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !731, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !731, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !731, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !731, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !731, file: !72, line: 67, baseType: !740, size: 32, offset: 2656)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !741)
!741 = !{!742, !743}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !740, file: !72, line: 45, baseType: !14, size: 16)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !740, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !731, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !731, file: !72, line: 79, baseType: !746, size: 64, offset: 2720)
!746 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !731, file: !72, line: 75, size: 64, elements: !747)
!747 = !{!748, !749}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !746, file: !72, line: 77, baseType: !96, size: 32)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !746, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !731, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !731, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!752 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !753, nameTableKind: None)
!753 = !{!754, !756, !758, !760, !762, !764, !766, !768, !770, !772, !774, !776, !778, !780, !782, !784, !786, !788, !798, !801, !806, !808, !811, !813, !818, !823, !825}
!754 = !DIGlobalVariableExpression(var: !755, expr: !DIExpression())
!755 = distinct !DIGlobalVariable(name: "do_lookup", scope: !752, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!756 = !DIGlobalVariableExpression(var: !757, expr: !DIExpression())
!757 = distinct !DIGlobalVariable(name: "short_list", scope: !752, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "short_output", scope: !752, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "include_idle", scope: !752, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!762 = !DIGlobalVariableExpression(var: !763, expr: !DIExpression())
!763 = distinct !DIGlobalVariable(name: "include_heading", scope: !752, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "include_mesg", scope: !752, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!766 = !DIGlobalVariableExpression(var: !767, expr: !DIExpression())
!767 = distinct !DIGlobalVariable(name: "include_exit", scope: !752, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!768 = !DIGlobalVariableExpression(var: !769, expr: !DIExpression())
!769 = distinct !DIGlobalVariable(name: "need_boottime", scope: !752, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!770 = !DIGlobalVariableExpression(var: !771, expr: !DIExpression())
!771 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !752, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "need_login", scope: !752, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !752, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !752, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !752, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!780 = !DIGlobalVariableExpression(var: !781, expr: !DIExpression())
!781 = distinct !DIGlobalVariable(name: "need_users", scope: !752, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!782 = !DIGlobalVariableExpression(var: !783, expr: !DIExpression())
!783 = distinct !DIGlobalVariable(name: "my_line_only", scope: !752, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "time_format", scope: !752, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "time_format_width", scope: !752, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!788 = !DIGlobalVariableExpression(var: !789, expr: !DIExpression())
!789 = distinct !DIGlobalVariable(name: "longopts", scope: !752, file: !3, line: 162, type: !790, isLocal: true, isDefinition: true)
!790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !791, size: 4608, elements: !151)
!791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !792)
!792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !793)
!793 = !{!794, !795, !796, !797}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !792, file: !144, line: 52, baseType: !49, size: 64)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !792, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !792, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !792, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!798 = !DIGlobalVariableExpression(var: !799, expr: !DIExpression())
!799 = distinct !DIGlobalVariable(name: "mesg", scope: !800, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!800 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !752, retainedNodes: !4)
!801 = !DIGlobalVariableExpression(var: !802, expr: !DIExpression())
!802 = distinct !DIGlobalVariable(name: "hoststr", scope: !803, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!803 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !804, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !752, retainedNodes: !4)
!804 = !DISubroutineType(types: !805)
!805 = !{null, !728, !9}
!806 = !DIGlobalVariableExpression(var: !807, expr: !DIExpression())
!807 = distinct !DIGlobalVariable(name: "hostlen", scope: !803, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!808 = !DIGlobalVariableExpression(var: !809, expr: !DIExpression())
!809 = distinct !DIGlobalVariable(name: "now", scope: !810, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!810 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !752, retainedNodes: !4)
!811 = !DIGlobalVariableExpression(var: !812, expr: !DIExpression())
!812 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !810, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!813 = !DIGlobalVariableExpression(var: !814, expr: !DIExpression())
!814 = distinct !DIGlobalVariable(name: "buf", scope: !815, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!815 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !816, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !752, retainedNodes: !4)
!816 = !DISubroutineType(types: !817)
!817 = !{!49, !728}
!818 = !DIGlobalVariableExpression(var: !819, expr: !DIExpression())
!819 = distinct !DIGlobalVariable(name: "runlevline", scope: !820, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!820 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !821, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !752, retainedNodes: !4)
!821 = !DISubroutineType(types: !822)
!822 = !{null, !728}
!823 = !DIGlobalVariableExpression(var: !824, expr: !DIExpression())
!824 = distinct !DIGlobalVariable(name: "comment", scope: !820, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!825 = !DIGlobalVariableExpression(var: !826, expr: !DIExpression())
!826 = distinct !DIGlobalVariable(name: "exitstr", scope: !827, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!827 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !821, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !752, retainedNodes: !4)
!828 = !DILocalVariable(name: "utmp_buf", arg: 2, scope: !725, file: !3, line: 537, type: !728)
!829 = !DILocalVariable(name: "entries", scope: !725, file: !3, line: 539, type: !112)
!830 = !DILocalVariable(name: "separator", scope: !725, file: !3, line: 540, type: !49)
!831 = distinct !DISubprogram(name: "scan_entries", scope: !3, file: !3, line: 569, type: !687, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!832 = !DILocalVariable(name: "n", arg: 1, scope: !831, file: !3, line: 569, type: !110)
!833 = !DILocation(line: 569, column: 22, scope: !831)
!834 = !DILocalVariable(name: "utmp_buf", arg: 2, scope: !831, file: !3, line: 569, type: !67)
!835 = !DILocation(line: 569, column: 44, scope: !831)
!836 = !DILocalVariable(name: "ttyname_b", scope: !831, file: !3, line: 571, type: !6)
!837 = !DILocation(line: 571, column: 9, scope: !831)
!838 = !DILocalVariable(name: "boottime", scope: !831, file: !3, line: 572, type: !9)
!839 = !DILocation(line: 572, column: 10, scope: !831)
!840 = !DILocation(line: 574, column: 7, scope: !841)
!841 = distinct !DILexicalBlock(scope: !831, file: !3, line: 574, column: 7)
!842 = !DILocation(line: 574, column: 7, scope: !831)
!843 = !DILocation(line: 575, column: 5, scope: !841)
!844 = !DILocation(line: 577, column: 7, scope: !845)
!845 = distinct !DILexicalBlock(scope: !831, file: !3, line: 577, column: 7)
!846 = !DILocation(line: 577, column: 7, scope: !831)
!847 = !DILocation(line: 579, column: 19, scope: !848)
!848 = distinct !DILexicalBlock(scope: !845, file: !3, line: 578, column: 5)
!849 = !DILocation(line: 579, column: 17, scope: !848)
!850 = !DILocation(line: 580, column: 12, scope: !851)
!851 = distinct !DILexicalBlock(scope: !848, file: !3, line: 580, column: 11)
!852 = !DILocation(line: 580, column: 11, scope: !848)
!853 = !DILocation(line: 581, column: 9, scope: !851)
!854 = !DILocation(line: 582, column: 11, scope: !855)
!855 = distinct !DILexicalBlock(scope: !848, file: !3, line: 582, column: 11)
!856 = !DILocation(line: 582, column: 64, scope: !855)
!857 = !DILocation(line: 583, column: 19, scope: !855)
!858 = !DILocation(line: 583, column: 9, scope: !855)
!859 = !DILocation(line: 584, column: 5, scope: !848)
!860 = !DILocation(line: 586, column: 3, scope: !831)
!861 = !DILocation(line: 586, column: 11, scope: !831)
!862 = !DILocation(line: 588, column: 12, scope: !863)
!863 = distinct !DILexicalBlock(scope: !864, file: !3, line: 588, column: 11)
!864 = distinct !DILexicalBlock(scope: !831, file: !3, line: 587, column: 5)
!865 = !DILocation(line: 589, column: 11, scope: !863)
!866 = !DILocation(line: 589, column: 14, scope: !863)
!867 = !DILocation(line: 588, column: 11, scope: !864)
!868 = !DILocation(line: 592, column: 15, scope: !869)
!869 = distinct !DILexicalBlock(scope: !870, file: !3, line: 592, column: 15)
!870 = distinct !DILexicalBlock(scope: !863, file: !3, line: 591, column: 9)
!871 = !DILocation(line: 592, column: 26, scope: !869)
!872 = !DILocation(line: 592, column: 29, scope: !869)
!873 = !DILocation(line: 592, column: 15, scope: !870)
!874 = !DILocation(line: 593, column: 25, scope: !869)
!875 = !DILocation(line: 593, column: 35, scope: !869)
!876 = !DILocation(line: 593, column: 13, scope: !869)
!877 = !DILocation(line: 594, column: 20, scope: !878)
!878 = distinct !DILexicalBlock(scope: !869, file: !3, line: 594, column: 20)
!879 = !DILocation(line: 594, column: 34, scope: !878)
!880 = !DILocation(line: 594, column: 37, scope: !878)
!881 = !DILocation(line: 594, column: 20, scope: !869)
!882 = !DILocation(line: 595, column: 29, scope: !878)
!883 = !DILocation(line: 595, column: 13, scope: !878)
!884 = !DILocation(line: 596, column: 20, scope: !885)
!885 = distinct !DILexicalBlock(scope: !878, file: !3, line: 596, column: 20)
!886 = !DILocation(line: 596, column: 34, scope: !885)
!887 = !DILocation(line: 596, column: 37, scope: !885)
!888 = !DILocation(line: 596, column: 20, scope: !878)
!889 = !DILocation(line: 597, column: 29, scope: !885)
!890 = !DILocation(line: 597, column: 13, scope: !885)
!891 = !DILocation(line: 601, column: 20, scope: !892)
!892 = distinct !DILexicalBlock(scope: !885, file: !3, line: 601, column: 20)
!893 = !DILocation(line: 601, column: 37, scope: !892)
!894 = !DILocation(line: 601, column: 40, scope: !892)
!895 = !DILocation(line: 601, column: 20, scope: !885)
!896 = !DILocation(line: 602, column: 32, scope: !892)
!897 = !DILocation(line: 602, column: 13, scope: !892)
!898 = !DILocation(line: 603, column: 20, scope: !899)
!899 = distinct !DILexicalBlock(scope: !892, file: !3, line: 603, column: 20)
!900 = !DILocation(line: 603, column: 35, scope: !899)
!901 = !DILocation(line: 603, column: 38, scope: !899)
!902 = !DILocation(line: 603, column: 20, scope: !892)
!903 = !DILocation(line: 604, column: 30, scope: !899)
!904 = !DILocation(line: 604, column: 13, scope: !899)
!905 = !DILocation(line: 605, column: 20, scope: !906)
!906 = distinct !DILexicalBlock(scope: !899, file: !3, line: 605, column: 20)
!907 = !DILocation(line: 605, column: 31, scope: !906)
!908 = !DILocation(line: 605, column: 34, scope: !906)
!909 = !DILocation(line: 605, column: 20, scope: !899)
!910 = !DILocation(line: 606, column: 26, scope: !906)
!911 = !DILocation(line: 606, column: 13, scope: !906)
!912 = !DILocation(line: 607, column: 20, scope: !913)
!913 = distinct !DILexicalBlock(scope: !906, file: !3, line: 607, column: 20)
!914 = !DILocation(line: 607, column: 35, scope: !913)
!915 = !DILocation(line: 607, column: 38, scope: !913)
!916 = !DILocation(line: 607, column: 20, scope: !906)
!917 = !DILocation(line: 608, column: 30, scope: !913)
!918 = !DILocation(line: 608, column: 13, scope: !913)
!919 = !DILocation(line: 609, column: 9, scope: !870)
!920 = !DILocation(line: 611, column: 11, scope: !921)
!921 = distinct !DILexicalBlock(scope: !864, file: !3, line: 611, column: 11)
!922 = !DILocation(line: 611, column: 11, scope: !864)
!923 = !DILocation(line: 612, column: 20, scope: !921)
!924 = !DILocation(line: 612, column: 18, scope: !921)
!925 = !DILocation(line: 612, column: 9, scope: !921)
!926 = !DILocation(line: 614, column: 15, scope: !864)
!927 = distinct !{!927, !860, !928}
!928 = !DILocation(line: 615, column: 5, scope: !831)
!929 = !DILocation(line: 616, column: 1, scope: !831)
!930 = distinct !DISubprogram(name: "print_heading", scope: !3, file: !3, line: 561, type: !931, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!931 = !DISubroutineType(types: !932)
!932 = !{null}
!933 = !DILocation(line: 563, column: 19, scope: !930)
!934 = !DILocation(line: 563, column: 39, scope: !930)
!935 = !DILocation(line: 563, column: 50, scope: !930)
!936 = !DILocation(line: 563, column: 61, scope: !930)
!937 = !DILocation(line: 564, column: 15, scope: !930)
!938 = !DILocation(line: 564, column: 25, scope: !930)
!939 = !DILocation(line: 564, column: 39, scope: !930)
!940 = !DILocation(line: 563, column: 3, scope: !930)
!941 = !DILocation(line: 565, column: 1, scope: !930)
!942 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !64, file: !3, line: 333, type: !67)
!943 = !DILocation(line: 333, column: 32, scope: !64)
!944 = !DILocalVariable(name: "boottime", arg: 2, scope: !64, file: !3, line: 333, type: !9)
!945 = !DILocation(line: 333, column: 49, scope: !64)
!946 = !DILocalVariable(name: "stats", scope: !64, file: !3, line: 335, type: !947)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !948, line: 46, size: 1152, elements: !949)
!948 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!949 = !{!950, !952, !954, !956, !958, !960, !962, !963, !964, !966, !968, !970, !977, !978, !979}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !947, file: !948, line: 48, baseType: !951, size: 64)
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !12, line: 145, baseType: !112)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !947, file: !948, line: 53, baseType: !953, size: 64, offset: 64)
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !12, line: 148, baseType: !112)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !947, file: !948, line: 61, baseType: !955, size: 64, offset: 128)
!955 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !12, line: 151, baseType: !112)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !947, file: !948, line: 62, baseType: !957, size: 32, offset: 192)
!957 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !12, line: 150, baseType: !180)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !947, file: !948, line: 64, baseType: !959, size: 32, offset: 224)
!959 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !12, line: 146, baseType: !180)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !947, file: !948, line: 65, baseType: !961, size: 32, offset: 256)
!961 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !12, line: 147, baseType: !180)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !947, file: !948, line: 67, baseType: !53, size: 32, offset: 288)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !947, file: !948, line: 69, baseType: !951, size: 64, offset: 320)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !947, file: !948, line: 74, baseType: !965, size: 64, offset: 384)
!965 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !12, line: 152, baseType: !13)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !947, file: !948, line: 78, baseType: !967, size: 64, offset: 448)
!967 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !12, line: 174, baseType: !13)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !947, file: !948, line: 80, baseType: !969, size: 64, offset: 512)
!969 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !12, line: 179, baseType: !13)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !947, file: !948, line: 91, baseType: !971, size: 128, offset: 576)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !972, line: 10, size: 128, elements: !973)
!972 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!973 = !{!974, !975}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !971, file: !972, line: 12, baseType: !11, size: 64)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !971, file: !972, line: 16, baseType: !976, size: 64, offset: 64)
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !12, line: 196, baseType: !13)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !947, file: !948, line: 92, baseType: !971, size: 128, offset: 704)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !947, file: !948, line: 93, baseType: !971, size: 128, offset: 832)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !947, file: !948, line: 106, baseType: !980, size: 192, offset: 960)
!980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !976, size: 192, elements: !60)
!981 = !DILocation(line: 335, column: 15, scope: !64)
!982 = !DILocalVariable(name: "last_change", scope: !64, file: !3, line: 336, type: !9)
!983 = !DILocation(line: 336, column: 10, scope: !64)
!984 = !DILocalVariable(name: "mesg", scope: !64, file: !3, line: 337, type: !7)
!985 = !DILocation(line: 337, column: 8, scope: !64)
!986 = !DILocalVariable(name: "idlestr", scope: !64, file: !3, line: 338, type: !987)
!987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 56, elements: !376)
!988 = !DILocation(line: 338, column: 8, scope: !64)
!989 = !DILocalVariable(name: "line", scope: !64, file: !3, line: 347, type: !990)
!990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 304, elements: !991)
!991 = !{!992}
!992 = !DISubrange(count: 38)
!993 = !DILocation(line: 347, column: 8, scope: !64)
!994 = !DILocalVariable(name: "p", scope: !64, file: !3, line: 348, type: !6)
!995 = !DILocation(line: 348, column: 9, scope: !64)
!996 = !DILocation(line: 348, column: 13, scope: !64)
!997 = !DILocalVariable(name: "pidstr", scope: !64, file: !3, line: 349, type: !998)
!998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 96, elements: !999)
!999 = !{!1000}
!1000 = !DISubrange(count: 12)
!1001 = !DILocation(line: 349, column: 3, scope: !64)
!1002 = !DILocation(line: 354, column: 10, scope: !1003)
!1003 = distinct !DILexicalBlock(scope: !64, file: !3, line: 354, column: 8)
!1004 = !DILocation(line: 354, column: 8, scope: !64)
!1005 = !DILocation(line: 355, column: 17, scope: !1003)
!1006 = !DILocation(line: 355, column: 9, scope: !1003)
!1007 = !DILocation(line: 355, column: 7, scope: !1003)
!1008 = !DILocation(line: 355, column: 5, scope: !1003)
!1009 = !DILocation(line: 356, column: 12, scope: !64)
!1010 = !DILocation(line: 356, column: 15, scope: !64)
!1011 = !DILocation(line: 356, column: 25, scope: !64)
!1012 = !DILocation(line: 356, column: 3, scope: !64)
!1013 = !DILocation(line: 358, column: 13, scope: !1014)
!1014 = distinct !DILexicalBlock(scope: !64, file: !3, line: 358, column: 7)
!1015 = !DILocation(line: 358, column: 7, scope: !1014)
!1016 = !DILocation(line: 358, column: 27, scope: !1014)
!1017 = !DILocation(line: 358, column: 7, scope: !64)
!1018 = !DILocation(line: 360, column: 14, scope: !1019)
!1019 = distinct !DILexicalBlock(scope: !1014, file: !3, line: 359, column: 5)
!1020 = !DILocation(line: 360, column: 12, scope: !1019)
!1021 = !DILocation(line: 361, column: 27, scope: !1019)
!1022 = !DILocation(line: 361, column: 19, scope: !1019)
!1023 = !DILocation(line: 362, column: 5, scope: !1019)
!1024 = !DILocation(line: 365, column: 12, scope: !1025)
!1025 = distinct !DILexicalBlock(scope: !1014, file: !3, line: 364, column: 5)
!1026 = !DILocation(line: 366, column: 19, scope: !1025)
!1027 = !DILocation(line: 369, column: 7, scope: !1028)
!1028 = distinct !DILexicalBlock(scope: !64, file: !3, line: 369, column: 7)
!1029 = !DILocation(line: 369, column: 7, scope: !64)
!1030 = !DILocation(line: 370, column: 14, scope: !1028)
!1031 = !DILocation(line: 370, column: 57, scope: !1028)
!1032 = !DILocation(line: 370, column: 70, scope: !1028)
!1033 = !DILocation(line: 370, column: 44, scope: !1028)
!1034 = !DILocation(line: 370, column: 5, scope: !1028)
!1035 = !DILocation(line: 372, column: 14, scope: !1028)
!1036 = !DILocation(line: 372, column: 5, scope: !1028)
!1037 = !DILocation(line: 375, column: 7, scope: !1038)
!1038 = distinct !DILexicalBlock(scope: !64, file: !3, line: 375, column: 7)
!1039 = !DILocation(line: 375, column: 17, scope: !1038)
!1040 = !DILocation(line: 375, column: 7, scope: !64)
!1041 = !DILocalVariable(name: "ut_host", scope: !1042, file: !3, line: 377, type: !1043)
!1042 = distinct !DILexicalBlock(scope: !1038, file: !3, line: 376, column: 5)
!1043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2056, elements: !1044)
!1044 = !{!1045}
!1045 = !DISubrange(count: 257)
!1046 = !DILocation(line: 377, column: 12, scope: !1042)
!1047 = !DILocalVariable(name: "host", scope: !1042, file: !3, line: 378, type: !6)
!1048 = !DILocation(line: 378, column: 13, scope: !1042)
!1049 = !DILocalVariable(name: "display", scope: !1042, file: !3, line: 379, type: !6)
!1050 = !DILocation(line: 379, column: 13, scope: !1042)
!1051 = !DILocation(line: 382, column: 16, scope: !1042)
!1052 = !DILocation(line: 382, column: 25, scope: !1042)
!1053 = !DILocation(line: 382, column: 35, scope: !1042)
!1054 = !DILocation(line: 382, column: 7, scope: !1042)
!1055 = !DILocation(line: 385, column: 25, scope: !1042)
!1056 = !DILocation(line: 385, column: 17, scope: !1042)
!1057 = !DILocation(line: 385, column: 15, scope: !1042)
!1058 = !DILocation(line: 386, column: 11, scope: !1059)
!1059 = distinct !DILexicalBlock(scope: !1042, file: !3, line: 386, column: 11)
!1060 = !DILocation(line: 386, column: 11, scope: !1042)
!1061 = !DILocation(line: 387, column: 17, scope: !1059)
!1062 = !DILocation(line: 387, column: 20, scope: !1059)
!1063 = !DILocation(line: 387, column: 9, scope: !1059)
!1064 = !DILocation(line: 389, column: 11, scope: !1065)
!1065 = distinct !DILexicalBlock(scope: !1042, file: !3, line: 389, column: 11)
!1066 = !DILocation(line: 389, column: 20, scope: !1065)
!1067 = !DILocation(line: 389, column: 23, scope: !1065)
!1068 = !DILocation(line: 389, column: 11, scope: !1042)
!1069 = !DILocation(line: 392, column: 30, scope: !1070)
!1070 = distinct !DILexicalBlock(scope: !1065, file: !3, line: 390, column: 9)
!1071 = !DILocation(line: 392, column: 18, scope: !1070)
!1072 = !DILocation(line: 392, column: 16, scope: !1070)
!1073 = !DILocation(line: 393, column: 9, scope: !1070)
!1074 = !DILocation(line: 395, column: 13, scope: !1075)
!1075 = distinct !DILexicalBlock(scope: !1042, file: !3, line: 395, column: 11)
!1076 = !DILocation(line: 395, column: 11, scope: !1042)
!1077 = !DILocation(line: 396, column: 16, scope: !1075)
!1078 = !DILocation(line: 396, column: 14, scope: !1075)
!1079 = !DILocation(line: 396, column: 9, scope: !1075)
!1080 = !DILocation(line: 398, column: 11, scope: !1081)
!1081 = distinct !DILexicalBlock(scope: !1042, file: !3, line: 398, column: 11)
!1082 = !DILocation(line: 398, column: 11, scope: !1042)
!1083 = !DILocation(line: 400, column: 15, scope: !1084)
!1084 = distinct !DILexicalBlock(scope: !1085, file: !3, line: 400, column: 15)
!1085 = distinct !DILexicalBlock(scope: !1081, file: !3, line: 399, column: 9)
!1086 = !DILocation(line: 400, column: 33, scope: !1084)
!1087 = !DILocation(line: 400, column: 25, scope: !1084)
!1088 = !DILocation(line: 400, column: 49, scope: !1084)
!1089 = !DILocation(line: 400, column: 41, scope: !1084)
!1090 = !DILocation(line: 400, column: 39, scope: !1084)
!1091 = !DILocation(line: 400, column: 58, scope: !1084)
!1092 = !DILocation(line: 400, column: 23, scope: !1084)
!1093 = !DILocation(line: 400, column: 15, scope: !1085)
!1094 = !DILocation(line: 402, column: 33, scope: !1095)
!1095 = distinct !DILexicalBlock(scope: !1084, file: !3, line: 401, column: 13)
!1096 = !DILocation(line: 402, column: 25, scope: !1095)
!1097 = !DILocation(line: 402, column: 49, scope: !1095)
!1098 = !DILocation(line: 402, column: 41, scope: !1095)
!1099 = !DILocation(line: 402, column: 39, scope: !1095)
!1100 = !DILocation(line: 402, column: 58, scope: !1095)
!1101 = !DILocation(line: 402, column: 23, scope: !1095)
!1102 = !DILocation(line: 403, column: 21, scope: !1095)
!1103 = !DILocation(line: 403, column: 15, scope: !1095)
!1104 = !DILocation(line: 404, column: 34, scope: !1095)
!1105 = !DILocation(line: 404, column: 25, scope: !1095)
!1106 = !DILocation(line: 404, column: 23, scope: !1095)
!1107 = !DILocation(line: 405, column: 13, scope: !1095)
!1108 = !DILocation(line: 406, column: 20, scope: !1085)
!1109 = !DILocation(line: 406, column: 40, scope: !1085)
!1110 = !DILocation(line: 406, column: 46, scope: !1085)
!1111 = !DILocation(line: 406, column: 11, scope: !1085)
!1112 = !DILocation(line: 407, column: 9, scope: !1085)
!1113 = !DILocation(line: 410, column: 15, scope: !1114)
!1114 = distinct !DILexicalBlock(scope: !1115, file: !3, line: 410, column: 15)
!1115 = distinct !DILexicalBlock(scope: !1081, file: !3, line: 409, column: 9)
!1116 = !DILocation(line: 410, column: 33, scope: !1114)
!1117 = !DILocation(line: 410, column: 25, scope: !1114)
!1118 = !DILocation(line: 410, column: 39, scope: !1114)
!1119 = !DILocation(line: 410, column: 23, scope: !1114)
!1120 = !DILocation(line: 410, column: 15, scope: !1115)
!1121 = !DILocation(line: 412, column: 33, scope: !1122)
!1122 = distinct !DILexicalBlock(scope: !1114, file: !3, line: 411, column: 13)
!1123 = !DILocation(line: 412, column: 25, scope: !1122)
!1124 = !DILocation(line: 412, column: 39, scope: !1122)
!1125 = !DILocation(line: 412, column: 23, scope: !1122)
!1126 = !DILocation(line: 413, column: 21, scope: !1122)
!1127 = !DILocation(line: 413, column: 15, scope: !1122)
!1128 = !DILocation(line: 414, column: 34, scope: !1122)
!1129 = !DILocation(line: 414, column: 25, scope: !1122)
!1130 = !DILocation(line: 414, column: 23, scope: !1122)
!1131 = !DILocation(line: 415, column: 13, scope: !1122)
!1132 = !DILocation(line: 416, column: 20, scope: !1115)
!1133 = !DILocation(line: 416, column: 37, scope: !1115)
!1134 = !DILocation(line: 416, column: 11, scope: !1115)
!1135 = !DILocation(line: 419, column: 11, scope: !1136)
!1136 = distinct !DILexicalBlock(scope: !1042, file: !3, line: 419, column: 11)
!1137 = !DILocation(line: 419, column: 19, scope: !1136)
!1138 = !DILocation(line: 419, column: 16, scope: !1136)
!1139 = !DILocation(line: 419, column: 11, scope: !1042)
!1140 = !DILocation(line: 420, column: 15, scope: !1136)
!1141 = !DILocation(line: 420, column: 9, scope: !1136)
!1142 = !DILocation(line: 421, column: 5, scope: !1042)
!1143 = !DILocation(line: 424, column: 11, scope: !1144)
!1144 = distinct !DILexicalBlock(scope: !1145, file: !3, line: 424, column: 11)
!1145 = distinct !DILexicalBlock(scope: !1038, file: !3, line: 423, column: 5)
!1146 = !DILocation(line: 424, column: 19, scope: !1144)
!1147 = !DILocation(line: 424, column: 11, scope: !1145)
!1148 = !DILocation(line: 426, column: 19, scope: !1149)
!1149 = distinct !DILexicalBlock(scope: !1144, file: !3, line: 425, column: 9)
!1150 = !DILocation(line: 427, column: 17, scope: !1149)
!1151 = !DILocation(line: 427, column: 11, scope: !1149)
!1152 = !DILocation(line: 428, column: 30, scope: !1149)
!1153 = !DILocation(line: 428, column: 21, scope: !1149)
!1154 = !DILocation(line: 428, column: 19, scope: !1149)
!1155 = !DILocation(line: 429, column: 9, scope: !1149)
!1156 = !DILocation(line: 430, column: 8, scope: !1145)
!1157 = !DILocation(line: 430, column: 16, scope: !1145)
!1158 = !DILocation(line: 434, column: 42, scope: !64)
!1159 = !DILocation(line: 434, column: 62, scope: !64)
!1160 = !DILocation(line: 435, column: 41, scope: !64)
!1161 = !DILocation(line: 435, column: 51, scope: !64)
!1162 = !DILocation(line: 436, column: 28, scope: !64)
!1163 = !DILocation(line: 436, column: 15, scope: !64)
!1164 = !DILocation(line: 436, column: 39, scope: !64)
!1165 = !DILocation(line: 436, column: 48, scope: !64)
!1166 = !DILocation(line: 437, column: 15, scope: !64)
!1167 = !DILocation(line: 437, column: 25, scope: !64)
!1168 = !DILocation(line: 434, column: 3, scope: !64)
!1169 = !DILocation(line: 438, column: 1, scope: !64)
!1170 = !DILocalVariable(name: "display", scope: !1171, file: !3, line: 379, type: !6)
!1171 = distinct !DILexicalBlock(scope: !1172, file: !3, line: 376, column: 5)
!1172 = distinct !DILexicalBlock(scope: !1173, file: !3, line: 375, column: 7)
!1173 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !1174, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1200, retainedNodes: !4)
!1174 = !DISubroutineType(types: !1175)
!1175 = !{null, !1176, !9}
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64)
!1177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1178)
!1178 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1179)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1180)
!1180 = !{!1181, !1182, !1183, !1184, !1185, !1186, !1187, !1192, !1193, !1198, !1199}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1179, file: !72, line: 57, baseType: !14, size: 16)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1179, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1179, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1179, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1179, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1179, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1179, file: !72, line: 67, baseType: !1188, size: 32, offset: 2656)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !1189)
!1189 = !{!1190, !1191}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !1188, file: !72, line: 45, baseType: !14, size: 16)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !1188, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1179, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1179, file: !72, line: 79, baseType: !1194, size: 64, offset: 2720)
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1179, file: !72, line: 75, size: 64, elements: !1195)
!1195 = !{!1196, !1197}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1194, file: !72, line: 77, baseType: !96, size: 32)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1194, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1179, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1179, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!1200 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1201, nameTableKind: None)
!1201 = !{!1202, !1204, !1206, !1208, !1210, !1212, !1214, !1216, !1218, !1220, !1222, !1224, !1226, !1228, !1230, !1232, !1234, !1236, !1246, !1249, !1251, !1253, !1256, !1258, !1263, !1268, !1270}
!1202 = !DIGlobalVariableExpression(var: !1203, expr: !DIExpression())
!1203 = distinct !DIGlobalVariable(name: "do_lookup", scope: !1200, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!1204 = !DIGlobalVariableExpression(var: !1205, expr: !DIExpression())
!1205 = distinct !DIGlobalVariable(name: "short_list", scope: !1200, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!1206 = !DIGlobalVariableExpression(var: !1207, expr: !DIExpression())
!1207 = distinct !DIGlobalVariable(name: "short_output", scope: !1200, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!1208 = !DIGlobalVariableExpression(var: !1209, expr: !DIExpression())
!1209 = distinct !DIGlobalVariable(name: "include_idle", scope: !1200, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!1210 = !DIGlobalVariableExpression(var: !1211, expr: !DIExpression())
!1211 = distinct !DIGlobalVariable(name: "include_heading", scope: !1200, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!1212 = !DIGlobalVariableExpression(var: !1213, expr: !DIExpression())
!1213 = distinct !DIGlobalVariable(name: "include_mesg", scope: !1200, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!1214 = !DIGlobalVariableExpression(var: !1215, expr: !DIExpression())
!1215 = distinct !DIGlobalVariable(name: "include_exit", scope: !1200, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!1216 = !DIGlobalVariableExpression(var: !1217, expr: !DIExpression())
!1217 = distinct !DIGlobalVariable(name: "need_boottime", scope: !1200, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!1218 = !DIGlobalVariableExpression(var: !1219, expr: !DIExpression())
!1219 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !1200, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!1220 = !DIGlobalVariableExpression(var: !1221, expr: !DIExpression())
!1221 = distinct !DIGlobalVariable(name: "need_login", scope: !1200, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!1222 = !DIGlobalVariableExpression(var: !1223, expr: !DIExpression())
!1223 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !1200, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!1224 = !DIGlobalVariableExpression(var: !1225, expr: !DIExpression())
!1225 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !1200, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !1200, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(name: "need_users", scope: !1200, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "my_line_only", scope: !1200, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!1232 = !DIGlobalVariableExpression(var: !1233, expr: !DIExpression())
!1233 = distinct !DIGlobalVariable(name: "time_format", scope: !1200, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!1234 = !DIGlobalVariableExpression(var: !1235, expr: !DIExpression())
!1235 = distinct !DIGlobalVariable(name: "time_format_width", scope: !1200, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!1236 = !DIGlobalVariableExpression(var: !1237, expr: !DIExpression())
!1237 = distinct !DIGlobalVariable(name: "longopts", scope: !1200, file: !3, line: 162, type: !1238, isLocal: true, isDefinition: true)
!1238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1239, size: 4608, elements: !151)
!1239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1240)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !1241)
!1241 = !{!1242, !1243, !1244, !1245}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1240, file: !144, line: 52, baseType: !49, size: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1240, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1240, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1240, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!1246 = !DIGlobalVariableExpression(var: !1247, expr: !DIExpression())
!1247 = distinct !DIGlobalVariable(name: "mesg", scope: !1248, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!1248 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1200, retainedNodes: !4)
!1249 = !DIGlobalVariableExpression(var: !1250, expr: !DIExpression())
!1250 = distinct !DIGlobalVariable(name: "hoststr", scope: !1173, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!1251 = !DIGlobalVariableExpression(var: !1252, expr: !DIExpression())
!1252 = distinct !DIGlobalVariable(name: "hostlen", scope: !1173, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!1253 = !DIGlobalVariableExpression(var: !1254, expr: !DIExpression())
!1254 = distinct !DIGlobalVariable(name: "now", scope: !1255, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!1255 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1200, retainedNodes: !4)
!1256 = !DIGlobalVariableExpression(var: !1257, expr: !DIExpression())
!1257 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !1255, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "buf", scope: !1260, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!1260 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !1261, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1200, retainedNodes: !4)
!1261 = !DISubroutineType(types: !1262)
!1262 = !{!49, !1176}
!1263 = !DIGlobalVariableExpression(var: !1264, expr: !DIExpression())
!1264 = distinct !DIGlobalVariable(name: "runlevline", scope: !1265, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1265 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !1266, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1200, retainedNodes: !4)
!1266 = !DISubroutineType(types: !1267)
!1267 = !{null, !1176}
!1268 = !DIGlobalVariableExpression(var: !1269, expr: !DIExpression())
!1269 = distinct !DIGlobalVariable(name: "comment", scope: !1265, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1270 = !DIGlobalVariableExpression(var: !1271, expr: !DIExpression())
!1271 = distinct !DIGlobalVariable(name: "exitstr", scope: !1272, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!1272 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !1266, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1200, retainedNodes: !4)
!1273 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !133, file: !3, line: 514, type: !67)
!1274 = !DILocation(line: 514, column: 36, scope: !133)
!1275 = !DILocalVariable(name: "last", scope: !133, file: !3, line: 517, type: !317)
!1276 = !DILocation(line: 517, column: 17, scope: !133)
!1277 = !DILocation(line: 517, column: 24, scope: !133)
!1278 = !DILocation(line: 517, column: 42, scope: !133)
!1279 = !DILocalVariable(name: "curr", scope: !133, file: !3, line: 518, type: !317)
!1280 = !DILocation(line: 518, column: 17, scope: !133)
!1281 = !DILocation(line: 518, column: 24, scope: !133)
!1282 = !DILocation(line: 518, column: 42, scope: !133)
!1283 = !DILocation(line: 520, column: 8, scope: !1284)
!1284 = distinct !DILexicalBlock(scope: !133, file: !3, line: 520, column: 7)
!1285 = !DILocation(line: 520, column: 7, scope: !133)
!1286 = !DILocation(line: 521, column: 35, scope: !1284)
!1287 = !DILocation(line: 521, column: 27, scope: !1284)
!1288 = !DILocation(line: 521, column: 51, scope: !1284)
!1289 = !DILocation(line: 521, column: 18, scope: !1284)
!1290 = !DILocation(line: 521, column: 16, scope: !1284)
!1291 = !DILocation(line: 521, column: 5, scope: !1284)
!1292 = !DILocation(line: 522, column: 12, scope: !133)
!1293 = !DILocation(line: 522, column: 33, scope: !133)
!1294 = !DILocation(line: 522, column: 49, scope: !133)
!1295 = !DILocation(line: 522, column: 3, scope: !133)
!1296 = !DILocation(line: 524, column: 8, scope: !1297)
!1297 = distinct !DILexicalBlock(scope: !133, file: !3, line: 524, column: 7)
!1298 = !DILocation(line: 524, column: 7, scope: !133)
!1299 = !DILocation(line: 525, column: 32, scope: !1297)
!1300 = !DILocation(line: 525, column: 24, scope: !1297)
!1301 = !DILocation(line: 525, column: 44, scope: !1297)
!1302 = !DILocation(line: 525, column: 15, scope: !1297)
!1303 = !DILocation(line: 525, column: 13, scope: !1297)
!1304 = !DILocation(line: 525, column: 5, scope: !1297)
!1305 = !DILocation(line: 526, column: 12, scope: !133)
!1306 = !DILocation(line: 526, column: 29, scope: !133)
!1307 = !DILocation(line: 526, column: 42, scope: !133)
!1308 = !DILocation(line: 526, column: 47, scope: !133)
!1309 = !DILocation(line: 526, column: 41, scope: !133)
!1310 = !DILocation(line: 526, column: 63, scope: !133)
!1311 = !DILocation(line: 526, column: 3, scope: !133)
!1312 = !DILocation(line: 528, column: 32, scope: !133)
!1313 = !DILocation(line: 528, column: 57, scope: !133)
!1314 = !DILocation(line: 528, column: 44, scope: !133)
!1315 = !DILocation(line: 529, column: 34, scope: !133)
!1316 = !DILocation(line: 529, column: 23, scope: !133)
!1317 = !DILocation(line: 529, column: 42, scope: !133)
!1318 = !DILocation(line: 528, column: 3, scope: !133)
!1319 = !DILocation(line: 531, column: 3, scope: !133)
!1320 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1321, file: !3, line: 514, type: !1324)
!1321 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !1322, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1348, retainedNodes: !4)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{null, !1324}
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!1325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1326)
!1326 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1327)
!1327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1328)
!1328 = !{!1329, !1330, !1331, !1332, !1333, !1334, !1335, !1340, !1341, !1346, !1347}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1327, file: !72, line: 57, baseType: !14, size: 16)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1327, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1327, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1327, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1327, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1327, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1327, file: !72, line: 67, baseType: !1336, size: 32, offset: 2656)
!1336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !1337)
!1337 = !{!1338, !1339}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !1336, file: !72, line: 45, baseType: !14, size: 16)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !1336, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1327, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1327, file: !72, line: 79, baseType: !1342, size: 64, offset: 2720)
!1342 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1327, file: !72, line: 75, size: 64, elements: !1343)
!1343 = !{!1344, !1345}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1342, file: !72, line: 77, baseType: !96, size: 32)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1342, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1327, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1327, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!1348 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1349, nameTableKind: None)
!1349 = !{!1350, !1352, !1354, !1356, !1358, !1360, !1362, !1364, !1366, !1368, !1370, !1372, !1374, !1376, !1378, !1380, !1382, !1384, !1394, !1397, !1402, !1404, !1407, !1409, !1414, !1416, !1418}
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "do_lookup", scope: !1348, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "short_list", scope: !1348, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "short_output", scope: !1348, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "include_idle", scope: !1348, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "include_heading", scope: !1348, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "include_mesg", scope: !1348, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "include_exit", scope: !1348, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "need_boottime", scope: !1348, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!1366 = !DIGlobalVariableExpression(var: !1367, expr: !DIExpression())
!1367 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !1348, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "need_login", scope: !1348, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!1370 = !DIGlobalVariableExpression(var: !1371, expr: !DIExpression())
!1371 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !1348, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !1348, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !1348, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "need_users", scope: !1348, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "my_line_only", scope: !1348, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "time_format", scope: !1348, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "time_format_width", scope: !1348, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "longopts", scope: !1348, file: !3, line: 162, type: !1386, isLocal: true, isDefinition: true)
!1386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1387, size: 4608, elements: !151)
!1387 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1388)
!1388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !1389)
!1389 = !{!1390, !1391, !1392, !1393}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1388, file: !144, line: 52, baseType: !49, size: 64)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1388, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1388, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1388, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "mesg", scope: !1396, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!1396 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1348, retainedNodes: !4)
!1397 = !DIGlobalVariableExpression(var: !1398, expr: !DIExpression())
!1398 = distinct !DIGlobalVariable(name: "hoststr", scope: !1399, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!1399 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !1400, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1348, retainedNodes: !4)
!1400 = !DISubroutineType(types: !1401)
!1401 = !{null, !1324, !9}
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "hostlen", scope: !1399, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!1404 = !DIGlobalVariableExpression(var: !1405, expr: !DIExpression())
!1405 = distinct !DIGlobalVariable(name: "now", scope: !1406, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!1406 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1348, retainedNodes: !4)
!1407 = !DIGlobalVariableExpression(var: !1408, expr: !DIExpression())
!1408 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !1406, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!1409 = !DIGlobalVariableExpression(var: !1410, expr: !DIExpression())
!1410 = distinct !DIGlobalVariable(name: "buf", scope: !1411, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!1411 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !1412, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1348, retainedNodes: !4)
!1412 = !DISubroutineType(types: !1413)
!1413 = !{!49, !1324}
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "runlevline", scope: !1321, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "comment", scope: !1321, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "exitstr", scope: !1420, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!1420 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !1322, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1348, retainedNodes: !4)
!1421 = !DILocalVariable(name: "last", scope: !1321, file: !3, line: 517, type: !317)
!1422 = !DILocalVariable(name: "curr", scope: !1321, file: !3, line: 518, type: !317)
!1423 = distinct !DISubprogram(name: "print_boottime", scope: !3, file: !3, line: 441, type: !134, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1424 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1423, file: !3, line: 441, type: !67)
!1425 = !DILocation(line: 441, column: 36, scope: !1423)
!1426 = !DILocation(line: 443, column: 32, scope: !1423)
!1427 = !DILocation(line: 444, column: 28, scope: !1423)
!1428 = !DILocation(line: 444, column: 15, scope: !1423)
!1429 = !DILocation(line: 443, column: 3, scope: !1423)
!1430 = !DILocation(line: 445, column: 1, scope: !1423)
!1431 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1432, file: !3, line: 441, type: !1435)
!1432 = distinct !DISubprogram(name: "print_boottime", scope: !3, file: !3, line: 441, type: !1433, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1459, retainedNodes: !4)
!1433 = !DISubroutineType(types: !1434)
!1434 = !{null, !1435}
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 64)
!1436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1437)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1438)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1439)
!1439 = !{!1440, !1441, !1442, !1443, !1444, !1445, !1446, !1451, !1452, !1457, !1458}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1438, file: !72, line: 57, baseType: !14, size: 16)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1438, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1438, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1438, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1438, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1438, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1438, file: !72, line: 67, baseType: !1447, size: 32, offset: 2656)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !1448)
!1448 = !{!1449, !1450}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !1447, file: !72, line: 45, baseType: !14, size: 16)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !1447, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1438, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1438, file: !72, line: 79, baseType: !1453, size: 64, offset: 2720)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1438, file: !72, line: 75, size: 64, elements: !1454)
!1454 = !{!1455, !1456}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1453, file: !72, line: 77, baseType: !96, size: 32)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1453, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1438, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1438, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!1459 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1460, nameTableKind: None)
!1460 = !{!1461, !1463, !1465, !1467, !1469, !1471, !1473, !1475, !1477, !1479, !1481, !1483, !1485, !1487, !1489, !1491, !1493, !1495, !1505, !1508, !1513, !1515, !1518, !1520, !1525, !1528, !1530}
!1461 = !DIGlobalVariableExpression(var: !1462, expr: !DIExpression())
!1462 = distinct !DIGlobalVariable(name: "do_lookup", scope: !1459, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!1463 = !DIGlobalVariableExpression(var: !1464, expr: !DIExpression())
!1464 = distinct !DIGlobalVariable(name: "short_list", scope: !1459, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!1465 = !DIGlobalVariableExpression(var: !1466, expr: !DIExpression())
!1466 = distinct !DIGlobalVariable(name: "short_output", scope: !1459, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!1467 = !DIGlobalVariableExpression(var: !1468, expr: !DIExpression())
!1468 = distinct !DIGlobalVariable(name: "include_idle", scope: !1459, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!1469 = !DIGlobalVariableExpression(var: !1470, expr: !DIExpression())
!1470 = distinct !DIGlobalVariable(name: "include_heading", scope: !1459, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!1471 = !DIGlobalVariableExpression(var: !1472, expr: !DIExpression())
!1472 = distinct !DIGlobalVariable(name: "include_mesg", scope: !1459, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!1473 = !DIGlobalVariableExpression(var: !1474, expr: !DIExpression())
!1474 = distinct !DIGlobalVariable(name: "include_exit", scope: !1459, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!1475 = !DIGlobalVariableExpression(var: !1476, expr: !DIExpression())
!1476 = distinct !DIGlobalVariable(name: "need_boottime", scope: !1459, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!1477 = !DIGlobalVariableExpression(var: !1478, expr: !DIExpression())
!1478 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !1459, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!1479 = !DIGlobalVariableExpression(var: !1480, expr: !DIExpression())
!1480 = distinct !DIGlobalVariable(name: "need_login", scope: !1459, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!1481 = !DIGlobalVariableExpression(var: !1482, expr: !DIExpression())
!1482 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !1459, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!1483 = !DIGlobalVariableExpression(var: !1484, expr: !DIExpression())
!1484 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !1459, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!1485 = !DIGlobalVariableExpression(var: !1486, expr: !DIExpression())
!1486 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !1459, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!1487 = !DIGlobalVariableExpression(var: !1488, expr: !DIExpression())
!1488 = distinct !DIGlobalVariable(name: "need_users", scope: !1459, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!1489 = !DIGlobalVariableExpression(var: !1490, expr: !DIExpression())
!1490 = distinct !DIGlobalVariable(name: "my_line_only", scope: !1459, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!1491 = !DIGlobalVariableExpression(var: !1492, expr: !DIExpression())
!1492 = distinct !DIGlobalVariable(name: "time_format", scope: !1459, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!1493 = !DIGlobalVariableExpression(var: !1494, expr: !DIExpression())
!1494 = distinct !DIGlobalVariable(name: "time_format_width", scope: !1459, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!1495 = !DIGlobalVariableExpression(var: !1496, expr: !DIExpression())
!1496 = distinct !DIGlobalVariable(name: "longopts", scope: !1459, file: !3, line: 162, type: !1497, isLocal: true, isDefinition: true)
!1497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1498, size: 4608, elements: !151)
!1498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1499)
!1499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !1500)
!1500 = !{!1501, !1502, !1503, !1504}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1499, file: !144, line: 52, baseType: !49, size: 64)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1499, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1499, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1499, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!1505 = !DIGlobalVariableExpression(var: !1506, expr: !DIExpression())
!1506 = distinct !DIGlobalVariable(name: "mesg", scope: !1507, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!1507 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1459, retainedNodes: !4)
!1508 = !DIGlobalVariableExpression(var: !1509, expr: !DIExpression())
!1509 = distinct !DIGlobalVariable(name: "hoststr", scope: !1510, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!1510 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !1511, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1459, retainedNodes: !4)
!1511 = !DISubroutineType(types: !1512)
!1512 = !{null, !1435, !9}
!1513 = !DIGlobalVariableExpression(var: !1514, expr: !DIExpression())
!1514 = distinct !DIGlobalVariable(name: "hostlen", scope: !1510, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!1515 = !DIGlobalVariableExpression(var: !1516, expr: !DIExpression())
!1516 = distinct !DIGlobalVariable(name: "now", scope: !1517, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!1517 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1459, retainedNodes: !4)
!1518 = !DIGlobalVariableExpression(var: !1519, expr: !DIExpression())
!1519 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !1517, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!1520 = !DIGlobalVariableExpression(var: !1521, expr: !DIExpression())
!1521 = distinct !DIGlobalVariable(name: "buf", scope: !1522, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!1522 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !1523, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1459, retainedNodes: !4)
!1523 = !DISubroutineType(types: !1524)
!1524 = !{!49, !1435}
!1525 = !DIGlobalVariableExpression(var: !1526, expr: !DIExpression())
!1526 = distinct !DIGlobalVariable(name: "runlevline", scope: !1527, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1527 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !1433, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1459, retainedNodes: !4)
!1528 = !DIGlobalVariableExpression(var: !1529, expr: !DIExpression())
!1529 = distinct !DIGlobalVariable(name: "comment", scope: !1527, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1530 = !DIGlobalVariableExpression(var: !1531, expr: !DIExpression())
!1531 = distinct !DIGlobalVariable(name: "exitstr", scope: !1532, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!1532 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !1433, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1459, retainedNodes: !4)
!1533 = distinct !DISubprogram(name: "print_clockchange", scope: !3, file: !3, line: 506, type: !134, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1534 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1533, file: !3, line: 506, type: !67)
!1535 = !DILocation(line: 506, column: 39, scope: !1533)
!1536 = !DILocation(line: 509, column: 32, scope: !1533)
!1537 = !DILocation(line: 510, column: 28, scope: !1533)
!1538 = !DILocation(line: 510, column: 15, scope: !1533)
!1539 = !DILocation(line: 509, column: 3, scope: !1533)
!1540 = !DILocation(line: 511, column: 1, scope: !1533)
!1541 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1542, file: !3, line: 506, type: !1545)
!1542 = distinct !DISubprogram(name: "print_clockchange", scope: !3, file: !3, line: 506, type: !1543, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1569, retainedNodes: !4)
!1543 = !DISubroutineType(types: !1544)
!1544 = !{null, !1545}
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1547)
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1548)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1549)
!1549 = !{!1550, !1551, !1552, !1553, !1554, !1555, !1556, !1561, !1562, !1567, !1568}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1548, file: !72, line: 57, baseType: !14, size: 16)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1548, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1548, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1548, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1548, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1548, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1548, file: !72, line: 67, baseType: !1557, size: 32, offset: 2656)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !1558)
!1558 = !{!1559, !1560}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !1557, file: !72, line: 45, baseType: !14, size: 16)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !1557, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1548, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1548, file: !72, line: 79, baseType: !1563, size: 64, offset: 2720)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1548, file: !72, line: 75, size: 64, elements: !1564)
!1564 = !{!1565, !1566}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1563, file: !72, line: 77, baseType: !96, size: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1563, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1548, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1548, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!1569 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1570, nameTableKind: None)
!1570 = !{!1571, !1573, !1575, !1577, !1579, !1581, !1583, !1585, !1587, !1589, !1591, !1593, !1595, !1597, !1599, !1601, !1603, !1605, !1615, !1618, !1623, !1625, !1628, !1630, !1635, !1638, !1640}
!1571 = !DIGlobalVariableExpression(var: !1572, expr: !DIExpression())
!1572 = distinct !DIGlobalVariable(name: "do_lookup", scope: !1569, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!1573 = !DIGlobalVariableExpression(var: !1574, expr: !DIExpression())
!1574 = distinct !DIGlobalVariable(name: "short_list", scope: !1569, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!1575 = !DIGlobalVariableExpression(var: !1576, expr: !DIExpression())
!1576 = distinct !DIGlobalVariable(name: "short_output", scope: !1569, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!1577 = !DIGlobalVariableExpression(var: !1578, expr: !DIExpression())
!1578 = distinct !DIGlobalVariable(name: "include_idle", scope: !1569, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!1579 = !DIGlobalVariableExpression(var: !1580, expr: !DIExpression())
!1580 = distinct !DIGlobalVariable(name: "include_heading", scope: !1569, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!1581 = !DIGlobalVariableExpression(var: !1582, expr: !DIExpression())
!1582 = distinct !DIGlobalVariable(name: "include_mesg", scope: !1569, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!1583 = !DIGlobalVariableExpression(var: !1584, expr: !DIExpression())
!1584 = distinct !DIGlobalVariable(name: "include_exit", scope: !1569, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!1585 = !DIGlobalVariableExpression(var: !1586, expr: !DIExpression())
!1586 = distinct !DIGlobalVariable(name: "need_boottime", scope: !1569, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!1587 = !DIGlobalVariableExpression(var: !1588, expr: !DIExpression())
!1588 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !1569, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!1589 = !DIGlobalVariableExpression(var: !1590, expr: !DIExpression())
!1590 = distinct !DIGlobalVariable(name: "need_login", scope: !1569, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!1591 = !DIGlobalVariableExpression(var: !1592, expr: !DIExpression())
!1592 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !1569, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!1593 = !DIGlobalVariableExpression(var: !1594, expr: !DIExpression())
!1594 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !1569, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!1595 = !DIGlobalVariableExpression(var: !1596, expr: !DIExpression())
!1596 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !1569, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "need_users", scope: !1569, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!1599 = !DIGlobalVariableExpression(var: !1600, expr: !DIExpression())
!1600 = distinct !DIGlobalVariable(name: "my_line_only", scope: !1569, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!1601 = !DIGlobalVariableExpression(var: !1602, expr: !DIExpression())
!1602 = distinct !DIGlobalVariable(name: "time_format", scope: !1569, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!1603 = !DIGlobalVariableExpression(var: !1604, expr: !DIExpression())
!1604 = distinct !DIGlobalVariable(name: "time_format_width", scope: !1569, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!1605 = !DIGlobalVariableExpression(var: !1606, expr: !DIExpression())
!1606 = distinct !DIGlobalVariable(name: "longopts", scope: !1569, file: !3, line: 162, type: !1607, isLocal: true, isDefinition: true)
!1607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1608, size: 4608, elements: !151)
!1608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1609)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !1610)
!1610 = !{!1611, !1612, !1613, !1614}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1609, file: !144, line: 52, baseType: !49, size: 64)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1609, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1609, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1609, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!1615 = !DIGlobalVariableExpression(var: !1616, expr: !DIExpression())
!1616 = distinct !DIGlobalVariable(name: "mesg", scope: !1617, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!1617 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1569, retainedNodes: !4)
!1618 = !DIGlobalVariableExpression(var: !1619, expr: !DIExpression())
!1619 = distinct !DIGlobalVariable(name: "hoststr", scope: !1620, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!1620 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !1621, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1569, retainedNodes: !4)
!1621 = !DISubroutineType(types: !1622)
!1622 = !{null, !1545, !9}
!1623 = !DIGlobalVariableExpression(var: !1624, expr: !DIExpression())
!1624 = distinct !DIGlobalVariable(name: "hostlen", scope: !1620, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!1625 = !DIGlobalVariableExpression(var: !1626, expr: !DIExpression())
!1626 = distinct !DIGlobalVariable(name: "now", scope: !1627, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!1627 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1569, retainedNodes: !4)
!1628 = !DIGlobalVariableExpression(var: !1629, expr: !DIExpression())
!1629 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !1627, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!1630 = !DIGlobalVariableExpression(var: !1631, expr: !DIExpression())
!1631 = distinct !DIGlobalVariable(name: "buf", scope: !1632, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!1632 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !1633, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1569, retainedNodes: !4)
!1633 = !DISubroutineType(types: !1634)
!1634 = !{!49, !1545}
!1635 = !DIGlobalVariableExpression(var: !1636, expr: !DIExpression())
!1636 = distinct !DIGlobalVariable(name: "runlevline", scope: !1637, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1637 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !1543, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1569, retainedNodes: !4)
!1638 = !DIGlobalVariableExpression(var: !1639, expr: !DIExpression())
!1639 = distinct !DIGlobalVariable(name: "comment", scope: !1637, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1640 = !DIGlobalVariableExpression(var: !1641, expr: !DIExpression())
!1641 = distinct !DIGlobalVariable(name: "exitstr", scope: !1642, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!1642 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !1543, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1569, retainedNodes: !4)
!1643 = distinct !DISubprogram(name: "print_initspawn", scope: !3, file: !3, line: 495, type: !134, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1644 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1643, file: !3, line: 495, type: !67)
!1645 = !DILocation(line: 495, column: 37, scope: !1643)
!1646 = !DILocalVariable(name: "comment", scope: !1643, file: !3, line: 497, type: !6)
!1647 = !DILocation(line: 497, column: 9, scope: !1643)
!1648 = !DILocation(line: 497, column: 43, scope: !1643)
!1649 = !DILocation(line: 497, column: 19, scope: !1643)
!1650 = !DILocalVariable(name: "pidstr", scope: !1643, file: !3, line: 498, type: !998)
!1651 = !DILocation(line: 498, column: 3, scope: !1643)
!1652 = !DILocation(line: 500, column: 54, scope: !1643)
!1653 = !DILocation(line: 500, column: 64, scope: !1643)
!1654 = !DILocation(line: 501, column: 28, scope: !1643)
!1655 = !DILocation(line: 501, column: 15, scope: !1643)
!1656 = !DILocation(line: 501, column: 43, scope: !1643)
!1657 = !DILocation(line: 501, column: 51, scope: !1643)
!1658 = !DILocation(line: 500, column: 3, scope: !1643)
!1659 = !DILocation(line: 502, column: 9, scope: !1643)
!1660 = !DILocation(line: 502, column: 3, scope: !1643)
!1661 = !DILocation(line: 503, column: 1, scope: !1643)
!1662 = distinct !DISubprogram(name: "print_login", scope: !3, file: !3, line: 482, type: !134, scopeLine: 483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1663 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1662, file: !3, line: 482, type: !67)
!1664 = !DILocation(line: 482, column: 33, scope: !1662)
!1665 = !DILocalVariable(name: "comment", scope: !1662, file: !3, line: 484, type: !6)
!1666 = !DILocation(line: 484, column: 9, scope: !1662)
!1667 = !DILocation(line: 484, column: 43, scope: !1662)
!1668 = !DILocation(line: 484, column: 19, scope: !1662)
!1669 = !DILocalVariable(name: "pidstr", scope: !1662, file: !3, line: 485, type: !998)
!1670 = !DILocation(line: 485, column: 3, scope: !1662)
!1671 = !DILocation(line: 489, column: 19, scope: !1662)
!1672 = !DILocation(line: 489, column: 62, scope: !1662)
!1673 = !DILocation(line: 489, column: 72, scope: !1662)
!1674 = !DILocation(line: 490, column: 28, scope: !1662)
!1675 = !DILocation(line: 490, column: 15, scope: !1662)
!1676 = !DILocation(line: 490, column: 43, scope: !1662)
!1677 = !DILocation(line: 490, column: 51, scope: !1662)
!1678 = !DILocation(line: 489, column: 3, scope: !1662)
!1679 = !DILocation(line: 491, column: 9, scope: !1662)
!1680 = !DILocation(line: 491, column: 3, scope: !1662)
!1681 = !DILocation(line: 492, column: 1, scope: !1662)
!1682 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1683, file: !3, line: 482, type: !1686)
!1683 = distinct !DISubprogram(name: "print_login", scope: !3, file: !3, line: 482, type: !1684, scopeLine: 483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1710, retainedNodes: !4)
!1684 = !DISubroutineType(types: !1685)
!1685 = !{null, !1686}
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64)
!1687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1688)
!1688 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1689)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1690)
!1690 = !{!1691, !1692, !1693, !1694, !1695, !1696, !1697, !1702, !1703, !1708, !1709}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1689, file: !72, line: 57, baseType: !14, size: 16)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1689, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1689, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1689, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1689, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1689, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1689, file: !72, line: 67, baseType: !1698, size: 32, offset: 2656)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !1699)
!1699 = !{!1700, !1701}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !1698, file: !72, line: 45, baseType: !14, size: 16)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !1698, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1689, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1689, file: !72, line: 79, baseType: !1704, size: 64, offset: 2720)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1689, file: !72, line: 75, size: 64, elements: !1705)
!1705 = !{!1706, !1707}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1704, file: !72, line: 77, baseType: !96, size: 32)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1704, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1689, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1689, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!1710 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1711, nameTableKind: None)
!1711 = !{!1712, !1714, !1716, !1718, !1720, !1722, !1724, !1726, !1728, !1730, !1732, !1734, !1736, !1738, !1740, !1742, !1744, !1746, !1756, !1759, !1764, !1766, !1769, !1771, !1776, !1779, !1781}
!1712 = !DIGlobalVariableExpression(var: !1713, expr: !DIExpression())
!1713 = distinct !DIGlobalVariable(name: "do_lookup", scope: !1710, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!1714 = !DIGlobalVariableExpression(var: !1715, expr: !DIExpression())
!1715 = distinct !DIGlobalVariable(name: "short_list", scope: !1710, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!1716 = !DIGlobalVariableExpression(var: !1717, expr: !DIExpression())
!1717 = distinct !DIGlobalVariable(name: "short_output", scope: !1710, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!1718 = !DIGlobalVariableExpression(var: !1719, expr: !DIExpression())
!1719 = distinct !DIGlobalVariable(name: "include_idle", scope: !1710, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!1720 = !DIGlobalVariableExpression(var: !1721, expr: !DIExpression())
!1721 = distinct !DIGlobalVariable(name: "include_heading", scope: !1710, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!1722 = !DIGlobalVariableExpression(var: !1723, expr: !DIExpression())
!1723 = distinct !DIGlobalVariable(name: "include_mesg", scope: !1710, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!1724 = !DIGlobalVariableExpression(var: !1725, expr: !DIExpression())
!1725 = distinct !DIGlobalVariable(name: "include_exit", scope: !1710, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!1726 = !DIGlobalVariableExpression(var: !1727, expr: !DIExpression())
!1727 = distinct !DIGlobalVariable(name: "need_boottime", scope: !1710, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!1728 = !DIGlobalVariableExpression(var: !1729, expr: !DIExpression())
!1729 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !1710, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!1730 = !DIGlobalVariableExpression(var: !1731, expr: !DIExpression())
!1731 = distinct !DIGlobalVariable(name: "need_login", scope: !1710, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!1732 = !DIGlobalVariableExpression(var: !1733, expr: !DIExpression())
!1733 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !1710, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!1734 = !DIGlobalVariableExpression(var: !1735, expr: !DIExpression())
!1735 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !1710, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!1736 = !DIGlobalVariableExpression(var: !1737, expr: !DIExpression())
!1737 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !1710, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!1738 = !DIGlobalVariableExpression(var: !1739, expr: !DIExpression())
!1739 = distinct !DIGlobalVariable(name: "need_users", scope: !1710, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!1740 = !DIGlobalVariableExpression(var: !1741, expr: !DIExpression())
!1741 = distinct !DIGlobalVariable(name: "my_line_only", scope: !1710, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!1742 = !DIGlobalVariableExpression(var: !1743, expr: !DIExpression())
!1743 = distinct !DIGlobalVariable(name: "time_format", scope: !1710, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!1744 = !DIGlobalVariableExpression(var: !1745, expr: !DIExpression())
!1745 = distinct !DIGlobalVariable(name: "time_format_width", scope: !1710, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!1746 = !DIGlobalVariableExpression(var: !1747, expr: !DIExpression())
!1747 = distinct !DIGlobalVariable(name: "longopts", scope: !1710, file: !3, line: 162, type: !1748, isLocal: true, isDefinition: true)
!1748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1749, size: 4608, elements: !151)
!1749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1750)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !1751)
!1751 = !{!1752, !1753, !1754, !1755}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1750, file: !144, line: 52, baseType: !49, size: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1750, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1750, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1750, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!1756 = !DIGlobalVariableExpression(var: !1757, expr: !DIExpression())
!1757 = distinct !DIGlobalVariable(name: "mesg", scope: !1758, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!1758 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1710, retainedNodes: !4)
!1759 = !DIGlobalVariableExpression(var: !1760, expr: !DIExpression())
!1760 = distinct !DIGlobalVariable(name: "hoststr", scope: !1761, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!1761 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !1762, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1710, retainedNodes: !4)
!1762 = !DISubroutineType(types: !1763)
!1763 = !{null, !1686, !9}
!1764 = !DIGlobalVariableExpression(var: !1765, expr: !DIExpression())
!1765 = distinct !DIGlobalVariable(name: "hostlen", scope: !1761, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!1766 = !DIGlobalVariableExpression(var: !1767, expr: !DIExpression())
!1767 = distinct !DIGlobalVariable(name: "now", scope: !1768, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!1768 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1710, retainedNodes: !4)
!1769 = !DIGlobalVariableExpression(var: !1770, expr: !DIExpression())
!1770 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !1768, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!1771 = !DIGlobalVariableExpression(var: !1772, expr: !DIExpression())
!1772 = distinct !DIGlobalVariable(name: "buf", scope: !1773, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!1773 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !1774, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1710, retainedNodes: !4)
!1774 = !DISubroutineType(types: !1775)
!1775 = !{!49, !1686}
!1776 = !DIGlobalVariableExpression(var: !1777, expr: !DIExpression())
!1777 = distinct !DIGlobalVariable(name: "runlevline", scope: !1778, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1778 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !1684, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1710, retainedNodes: !4)
!1779 = !DIGlobalVariableExpression(var: !1780, expr: !DIExpression())
!1780 = distinct !DIGlobalVariable(name: "comment", scope: !1778, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1781 = !DIGlobalVariableExpression(var: !1782, expr: !DIExpression())
!1782 = distinct !DIGlobalVariable(name: "exitstr", scope: !1783, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!1783 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !1684, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1710, retainedNodes: !4)
!1784 = !DILocalVariable(name: "comment", scope: !1683, file: !3, line: 484, type: !6)
!1785 = !DILocalVariable(name: "pidstr", scope: !1683, file: !3, line: 485, type: !998)
!1786 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !140, file: !3, line: 459, type: !67)
!1787 = !DILocation(line: 459, column: 37, scope: !140)
!1788 = !DILocalVariable(name: "comment", scope: !140, file: !3, line: 462, type: !6)
!1789 = !DILocation(line: 462, column: 9, scope: !140)
!1790 = !DILocation(line: 462, column: 43, scope: !140)
!1791 = !DILocation(line: 462, column: 19, scope: !140)
!1792 = !DILocalVariable(name: "pidstr", scope: !140, file: !3, line: 463, type: !998)
!1793 = !DILocation(line: 463, column: 3, scope: !140)
!1794 = !DILocation(line: 465, column: 8, scope: !1795)
!1795 = distinct !DILexicalBlock(scope: !140, file: !3, line: 465, column: 7)
!1796 = !DILocation(line: 465, column: 7, scope: !140)
!1797 = !DILocation(line: 466, column: 32, scope: !1795)
!1798 = !DILocation(line: 466, column: 24, scope: !1795)
!1799 = !DILocation(line: 467, column: 24, scope: !1795)
!1800 = !DILocation(line: 467, column: 78, scope: !1795)
!1801 = !DILocation(line: 468, column: 34, scope: !1795)
!1802 = !DILocation(line: 468, column: 26, scope: !1795)
!1803 = !DILocation(line: 468, column: 24, scope: !1795)
!1804 = !DILocation(line: 469, column: 24, scope: !1795)
!1805 = !DILocation(line: 470, column: 24, scope: !1795)
!1806 = !DILocation(line: 466, column: 15, scope: !1795)
!1807 = !DILocation(line: 466, column: 13, scope: !1795)
!1808 = !DILocation(line: 466, column: 5, scope: !1795)
!1809 = !DILocation(line: 471, column: 12, scope: !140)
!1810 = !DILocation(line: 471, column: 34, scope: !140)
!1811 = !DILocation(line: 471, column: 46, scope: !140)
!1812 = !DILocation(line: 472, column: 12, scope: !140)
!1813 = !DILocation(line: 472, column: 24, scope: !140)
!1814 = !DILocation(line: 471, column: 3, scope: !140)
!1815 = !DILocation(line: 476, column: 54, scope: !140)
!1816 = !DILocation(line: 476, column: 64, scope: !140)
!1817 = !DILocation(line: 477, column: 28, scope: !140)
!1818 = !DILocation(line: 477, column: 15, scope: !140)
!1819 = !DILocation(line: 477, column: 43, scope: !140)
!1820 = !DILocation(line: 477, column: 51, scope: !140)
!1821 = !DILocation(line: 477, column: 60, scope: !140)
!1822 = !DILocation(line: 476, column: 3, scope: !140)
!1823 = !DILocation(line: 478, column: 9, scope: !140)
!1824 = !DILocation(line: 478, column: 3, scope: !140)
!1825 = !DILocation(line: 479, column: 1, scope: !140)
!1826 = distinct !DISubprogram(name: "make_id_equals_comment", scope: !3, file: !3, line: 448, type: !1827, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1827 = !DISubroutineType(types: !1828)
!1828 = !{!6, !67}
!1829 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1826, file: !3, line: 448, type: !67)
!1830 = !DILocation(line: 448, column: 44, scope: !1826)
!1831 = !DILocalVariable(name: "utmpsize", scope: !1826, file: !3, line: 450, type: !110)
!1832 = !DILocation(line: 450, column: 10, scope: !1826)
!1833 = !DILocalVariable(name: "comment", scope: !1826, file: !3, line: 451, type: !6)
!1834 = !DILocation(line: 451, column: 9, scope: !1826)
!1835 = !DILocation(line: 451, column: 36, scope: !1826)
!1836 = !DILocation(line: 451, column: 28, scope: !1826)
!1837 = !DILocation(line: 451, column: 48, scope: !1826)
!1838 = !DILocation(line: 451, column: 46, scope: !1826)
!1839 = !DILocation(line: 451, column: 57, scope: !1826)
!1840 = !DILocation(line: 451, column: 19, scope: !1826)
!1841 = !DILocation(line: 453, column: 11, scope: !1826)
!1842 = !DILocation(line: 453, column: 20, scope: !1826)
!1843 = !DILocation(line: 453, column: 3, scope: !1826)
!1844 = !DILocation(line: 454, column: 12, scope: !1826)
!1845 = !DILocation(line: 454, column: 21, scope: !1826)
!1846 = !DILocation(line: 454, column: 39, scope: !1826)
!1847 = !DILocation(line: 454, column: 3, scope: !1826)
!1848 = !DILocation(line: 455, column: 10, scope: !1826)
!1849 = !DILocation(line: 455, column: 3, scope: !1826)
!1850 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1851, file: !3, line: 448, type: !1854)
!1851 = distinct !DISubprogram(name: "make_id_equals_comment", scope: !3, file: !3, line: 448, type: !1852, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1878, retainedNodes: !4)
!1852 = !DISubroutineType(types: !1853)
!1853 = !{!6, !1854}
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64)
!1855 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1856)
!1856 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1857)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1858)
!1858 = !{!1859, !1860, !1861, !1862, !1863, !1864, !1865, !1870, !1871, !1876, !1877}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1857, file: !72, line: 57, baseType: !14, size: 16)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1857, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1857, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1857, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1857, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1857, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1857, file: !72, line: 67, baseType: !1866, size: 32, offset: 2656)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !1867)
!1867 = !{!1868, !1869}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !1866, file: !72, line: 45, baseType: !14, size: 16)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !1866, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1857, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1857, file: !72, line: 79, baseType: !1872, size: 64, offset: 2720)
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1857, file: !72, line: 75, size: 64, elements: !1873)
!1873 = !{!1874, !1875}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1872, file: !72, line: 77, baseType: !96, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1872, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1857, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1857, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!1878 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1879, nameTableKind: None)
!1879 = !{!1880, !1882, !1884, !1886, !1888, !1890, !1892, !1894, !1896, !1898, !1900, !1902, !1904, !1906, !1908, !1910, !1912, !1914, !1924, !1927, !1932, !1934, !1937, !1939, !1944, !1949, !1951}
!1880 = !DIGlobalVariableExpression(var: !1881, expr: !DIExpression())
!1881 = distinct !DIGlobalVariable(name: "do_lookup", scope: !1878, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!1882 = !DIGlobalVariableExpression(var: !1883, expr: !DIExpression())
!1883 = distinct !DIGlobalVariable(name: "short_list", scope: !1878, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!1884 = !DIGlobalVariableExpression(var: !1885, expr: !DIExpression())
!1885 = distinct !DIGlobalVariable(name: "short_output", scope: !1878, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!1886 = !DIGlobalVariableExpression(var: !1887, expr: !DIExpression())
!1887 = distinct !DIGlobalVariable(name: "include_idle", scope: !1878, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!1888 = !DIGlobalVariableExpression(var: !1889, expr: !DIExpression())
!1889 = distinct !DIGlobalVariable(name: "include_heading", scope: !1878, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!1890 = !DIGlobalVariableExpression(var: !1891, expr: !DIExpression())
!1891 = distinct !DIGlobalVariable(name: "include_mesg", scope: !1878, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!1892 = !DIGlobalVariableExpression(var: !1893, expr: !DIExpression())
!1893 = distinct !DIGlobalVariable(name: "include_exit", scope: !1878, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!1894 = !DIGlobalVariableExpression(var: !1895, expr: !DIExpression())
!1895 = distinct !DIGlobalVariable(name: "need_boottime", scope: !1878, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!1896 = !DIGlobalVariableExpression(var: !1897, expr: !DIExpression())
!1897 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !1878, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!1898 = !DIGlobalVariableExpression(var: !1899, expr: !DIExpression())
!1899 = distinct !DIGlobalVariable(name: "need_login", scope: !1878, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!1900 = !DIGlobalVariableExpression(var: !1901, expr: !DIExpression())
!1901 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !1878, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!1902 = !DIGlobalVariableExpression(var: !1903, expr: !DIExpression())
!1903 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !1878, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!1904 = !DIGlobalVariableExpression(var: !1905, expr: !DIExpression())
!1905 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !1878, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!1906 = !DIGlobalVariableExpression(var: !1907, expr: !DIExpression())
!1907 = distinct !DIGlobalVariable(name: "need_users", scope: !1878, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!1908 = !DIGlobalVariableExpression(var: !1909, expr: !DIExpression())
!1909 = distinct !DIGlobalVariable(name: "my_line_only", scope: !1878, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!1910 = !DIGlobalVariableExpression(var: !1911, expr: !DIExpression())
!1911 = distinct !DIGlobalVariable(name: "time_format", scope: !1878, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!1912 = !DIGlobalVariableExpression(var: !1913, expr: !DIExpression())
!1913 = distinct !DIGlobalVariable(name: "time_format_width", scope: !1878, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!1914 = !DIGlobalVariableExpression(var: !1915, expr: !DIExpression())
!1915 = distinct !DIGlobalVariable(name: "longopts", scope: !1878, file: !3, line: 162, type: !1916, isLocal: true, isDefinition: true)
!1916 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1917, size: 4608, elements: !151)
!1917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !1919)
!1919 = !{!1920, !1921, !1922, !1923}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1918, file: !144, line: 52, baseType: !49, size: 64)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1918, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1918, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1918, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!1924 = !DIGlobalVariableExpression(var: !1925, expr: !DIExpression())
!1925 = distinct !DIGlobalVariable(name: "mesg", scope: !1926, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!1926 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1878, retainedNodes: !4)
!1927 = !DIGlobalVariableExpression(var: !1928, expr: !DIExpression())
!1928 = distinct !DIGlobalVariable(name: "hoststr", scope: !1929, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!1929 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !1930, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1878, retainedNodes: !4)
!1930 = !DISubroutineType(types: !1931)
!1931 = !{null, !1854, !9}
!1932 = !DIGlobalVariableExpression(var: !1933, expr: !DIExpression())
!1933 = distinct !DIGlobalVariable(name: "hostlen", scope: !1929, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!1934 = !DIGlobalVariableExpression(var: !1935, expr: !DIExpression())
!1935 = distinct !DIGlobalVariable(name: "now", scope: !1936, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!1936 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1878, retainedNodes: !4)
!1937 = !DIGlobalVariableExpression(var: !1938, expr: !DIExpression())
!1938 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !1936, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!1939 = !DIGlobalVariableExpression(var: !1940, expr: !DIExpression())
!1940 = distinct !DIGlobalVariable(name: "buf", scope: !1941, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!1941 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !1942, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1878, retainedNodes: !4)
!1942 = !DISubroutineType(types: !1943)
!1943 = !{!49, !1854}
!1944 = !DIGlobalVariableExpression(var: !1945, expr: !DIExpression())
!1945 = distinct !DIGlobalVariable(name: "runlevline", scope: !1946, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1946 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !1947, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1878, retainedNodes: !4)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{null, !1854}
!1949 = !DIGlobalVariableExpression(var: !1950, expr: !DIExpression())
!1950 = distinct !DIGlobalVariable(name: "comment", scope: !1946, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!1951 = !DIGlobalVariableExpression(var: !1952, expr: !DIExpression())
!1952 = distinct !DIGlobalVariable(name: "exitstr", scope: !1953, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!1953 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !1947, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1878, retainedNodes: !4)
!1954 = !DILocalVariable(name: "utmpsize", scope: !1851, file: !3, line: 450, type: !110)
!1955 = !DILocalVariable(name: "comment", scope: !1851, file: !3, line: 451, type: !6)
!1956 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !125, file: !3, line: 218, type: !67)
!1957 = !DILocation(line: 218, column: 33, scope: !125)
!1958 = !DILocalVariable(name: "t", scope: !125, file: !3, line: 228, type: !9)
!1959 = !DILocation(line: 228, column: 10, scope: !125)
!1960 = !DILocation(line: 228, column: 14, scope: !125)
!1961 = !DILocalVariable(name: "tmp", scope: !125, file: !3, line: 229, type: !1962)
!1962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 64)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !1964, line: 7, size: 448, elements: !1965)
!1964 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h", directory: "")
!1965 = !{!1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !1963, file: !1964, line: 9, baseType: !53, size: 32)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !1963, file: !1964, line: 10, baseType: !53, size: 32, offset: 32)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !1963, file: !1964, line: 11, baseType: !53, size: 32, offset: 64)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !1963, file: !1964, line: 12, baseType: !53, size: 32, offset: 96)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !1963, file: !1964, line: 13, baseType: !53, size: 32, offset: 128)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !1963, file: !1964, line: 14, baseType: !53, size: 32, offset: 160)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !1963, file: !1964, line: 15, baseType: !53, size: 32, offset: 192)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !1963, file: !1964, line: 16, baseType: !53, size: 32, offset: 224)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !1963, file: !1964, line: 17, baseType: !53, size: 32, offset: 256)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !1963, file: !1964, line: 20, baseType: !13, size: 64, offset: 320)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !1963, file: !1964, line: 21, baseType: !49, size: 64, offset: 384)
!1977 = !DILocation(line: 229, column: 14, scope: !125)
!1978 = !DILocation(line: 229, column: 20, scope: !125)
!1979 = !DILocation(line: 231, column: 7, scope: !1980)
!1980 = distinct !DILexicalBlock(scope: !125, file: !3, line: 231, column: 7)
!1981 = !DILocation(line: 231, column: 7, scope: !125)
!1982 = !DILocation(line: 233, column: 34, scope: !1983)
!1983 = distinct !DILexicalBlock(scope: !1980, file: !3, line: 232, column: 5)
!1984 = !DILocation(line: 233, column: 47, scope: !1983)
!1985 = !DILocation(line: 233, column: 7, scope: !1983)
!1986 = !DILocation(line: 234, column: 7, scope: !1983)
!1987 = !DILocation(line: 237, column: 23, scope: !1980)
!1988 = !DILocation(line: 237, column: 12, scope: !1980)
!1989 = !DILocation(line: 237, column: 5, scope: !1980)
!1990 = !DILocation(line: 238, column: 1, scope: !125)
!1991 = !DILocalVariable(name: "utmp_ent", arg: 1, scope: !1992, file: !3, line: 218, type: !1995)
!1992 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !1993, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2019, retainedNodes: !4)
!1993 = !DISubroutineType(types: !1994)
!1994 = !{!49, !1995}
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 64)
!1996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1997)
!1997 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !1998)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !1999)
!1999 = !{!2000, !2001, !2002, !2003, !2004, !2005, !2006, !2011, !2012, !2017, !2018}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1998, file: !72, line: 57, baseType: !14, size: 16)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1998, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1998, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1998, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1998, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1998, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1998, file: !72, line: 67, baseType: !2007, size: 32, offset: 2656)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !2008)
!2008 = !{!2009, !2010}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !2007, file: !72, line: 45, baseType: !14, size: 16)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !2007, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1998, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1998, file: !72, line: 79, baseType: !2013, size: 64, offset: 2720)
!2013 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1998, file: !72, line: 75, size: 64, elements: !2014)
!2014 = !{!2015, !2016}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2013, file: !72, line: 77, baseType: !96, size: 32)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2013, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1998, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1998, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!2019 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2020, nameTableKind: None)
!2020 = !{!2021, !2023, !2025, !2027, !2029, !2031, !2033, !2035, !2037, !2039, !2041, !2043, !2045, !2047, !2049, !2051, !2053, !2055, !2065, !2068, !2073, !2075, !2078, !2080, !2082, !2087, !2089}
!2021 = !DIGlobalVariableExpression(var: !2022, expr: !DIExpression())
!2022 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2019, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!2023 = !DIGlobalVariableExpression(var: !2024, expr: !DIExpression())
!2024 = distinct !DIGlobalVariable(name: "short_list", scope: !2019, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!2025 = !DIGlobalVariableExpression(var: !2026, expr: !DIExpression())
!2026 = distinct !DIGlobalVariable(name: "short_output", scope: !2019, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!2027 = !DIGlobalVariableExpression(var: !2028, expr: !DIExpression())
!2028 = distinct !DIGlobalVariable(name: "include_idle", scope: !2019, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!2029 = !DIGlobalVariableExpression(var: !2030, expr: !DIExpression())
!2030 = distinct !DIGlobalVariable(name: "include_heading", scope: !2019, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!2031 = !DIGlobalVariableExpression(var: !2032, expr: !DIExpression())
!2032 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2019, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!2033 = !DIGlobalVariableExpression(var: !2034, expr: !DIExpression())
!2034 = distinct !DIGlobalVariable(name: "include_exit", scope: !2019, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!2035 = !DIGlobalVariableExpression(var: !2036, expr: !DIExpression())
!2036 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2019, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!2037 = !DIGlobalVariableExpression(var: !2038, expr: !DIExpression())
!2038 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2019, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!2039 = !DIGlobalVariableExpression(var: !2040, expr: !DIExpression())
!2040 = distinct !DIGlobalVariable(name: "need_login", scope: !2019, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!2041 = !DIGlobalVariableExpression(var: !2042, expr: !DIExpression())
!2042 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2019, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!2043 = !DIGlobalVariableExpression(var: !2044, expr: !DIExpression())
!2044 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2019, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!2045 = !DIGlobalVariableExpression(var: !2046, expr: !DIExpression())
!2046 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2019, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!2047 = !DIGlobalVariableExpression(var: !2048, expr: !DIExpression())
!2048 = distinct !DIGlobalVariable(name: "need_users", scope: !2019, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!2049 = !DIGlobalVariableExpression(var: !2050, expr: !DIExpression())
!2050 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2019, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!2051 = !DIGlobalVariableExpression(var: !2052, expr: !DIExpression())
!2052 = distinct !DIGlobalVariable(name: "time_format", scope: !2019, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!2053 = !DIGlobalVariableExpression(var: !2054, expr: !DIExpression())
!2054 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2019, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!2055 = !DIGlobalVariableExpression(var: !2056, expr: !DIExpression())
!2056 = distinct !DIGlobalVariable(name: "longopts", scope: !2019, file: !3, line: 162, type: !2057, isLocal: true, isDefinition: true)
!2057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2058, size: 4608, elements: !151)
!2058 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2059)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !2060)
!2060 = !{!2061, !2062, !2063, !2064}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2059, file: !144, line: 52, baseType: !49, size: 64)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2059, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2059, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2059, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!2065 = !DIGlobalVariableExpression(var: !2066, expr: !DIExpression())
!2066 = distinct !DIGlobalVariable(name: "mesg", scope: !2067, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!2067 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2019, retainedNodes: !4)
!2068 = !DIGlobalVariableExpression(var: !2069, expr: !DIExpression())
!2069 = distinct !DIGlobalVariable(name: "hoststr", scope: !2070, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!2070 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !2071, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2019, retainedNodes: !4)
!2071 = !DISubroutineType(types: !2072)
!2072 = !{null, !1995, !9}
!2073 = !DIGlobalVariableExpression(var: !2074, expr: !DIExpression())
!2074 = distinct !DIGlobalVariable(name: "hostlen", scope: !2070, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!2075 = !DIGlobalVariableExpression(var: !2076, expr: !DIExpression())
!2076 = distinct !DIGlobalVariable(name: "now", scope: !2077, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!2077 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2019, retainedNodes: !4)
!2078 = !DIGlobalVariableExpression(var: !2079, expr: !DIExpression())
!2079 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !2077, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!2080 = !DIGlobalVariableExpression(var: !2081, expr: !DIExpression())
!2081 = distinct !DIGlobalVariable(name: "buf", scope: !1992, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!2082 = !DIGlobalVariableExpression(var: !2083, expr: !DIExpression())
!2083 = distinct !DIGlobalVariable(name: "runlevline", scope: !2084, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2084 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !2085, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2019, retainedNodes: !4)
!2085 = !DISubroutineType(types: !2086)
!2086 = !{null, !1995}
!2087 = !DIGlobalVariableExpression(var: !2088, expr: !DIExpression())
!2088 = distinct !DIGlobalVariable(name: "comment", scope: !2084, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2089 = !DIGlobalVariableExpression(var: !2090, expr: !DIExpression())
!2090 = distinct !DIGlobalVariable(name: "exitstr", scope: !2091, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!2091 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !2085, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2019, retainedNodes: !4)
!2092 = !DILocalVariable(name: "t", scope: !1992, file: !3, line: 228, type: !9)
!2093 = !DILocalVariable(name: "tmp", scope: !1992, file: !3, line: 229, type: !2094)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 64)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !1964, line: 7, size: 448, elements: !2096)
!2096 = !{!2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !2095, file: !1964, line: 9, baseType: !53, size: 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !2095, file: !1964, line: 10, baseType: !53, size: 32, offset: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !2095, file: !1964, line: 11, baseType: !53, size: 32, offset: 64)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !2095, file: !1964, line: 12, baseType: !53, size: 32, offset: 96)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !2095, file: !1964, line: 13, baseType: !53, size: 32, offset: 128)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !2095, file: !1964, line: 14, baseType: !53, size: 32, offset: 160)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !2095, file: !1964, line: 15, baseType: !53, size: 32, offset: 192)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !2095, file: !1964, line: 16, baseType: !53, size: 32, offset: 224)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !2095, file: !1964, line: 17, baseType: !53, size: 32, offset: 256)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !2095, file: !1964, line: 20, baseType: !13, size: 64, offset: 320)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !2095, file: !1964, line: 21, baseType: !49, size: 64, offset: 384)
!2108 = !DILocalVariable(name: "userlen", arg: 1, scope: !56, file: !3, line: 244, type: !53)
!2109 = !DILocation(line: 244, column: 17, scope: !56)
!2110 = !DILocalVariable(name: "user", arg: 2, scope: !56, file: !3, line: 244, type: !49)
!2111 = !DILocation(line: 244, column: 38, scope: !56)
!2112 = !DILocalVariable(name: "state", arg: 3, scope: !56, file: !3, line: 244, type: !50)
!2113 = !DILocation(line: 244, column: 55, scope: !56)
!2114 = !DILocalVariable(name: "linelen", arg: 4, scope: !56, file: !3, line: 245, type: !53)
!2115 = !DILocation(line: 245, column: 17, scope: !56)
!2116 = !DILocalVariable(name: "line", arg: 5, scope: !56, file: !3, line: 245, type: !49)
!2117 = !DILocation(line: 245, column: 38, scope: !56)
!2118 = !DILocalVariable(name: "time_str", arg: 6, scope: !56, file: !3, line: 246, type: !49)
!2119 = !DILocation(line: 246, column: 25, scope: !56)
!2120 = !DILocalVariable(name: "idle", arg: 7, scope: !56, file: !3, line: 246, type: !49)
!2121 = !DILocation(line: 246, column: 47, scope: !56)
!2122 = !DILocalVariable(name: "pid", arg: 8, scope: !56, file: !3, line: 246, type: !49)
!2123 = !DILocation(line: 246, column: 65, scope: !56)
!2124 = !DILocalVariable(name: "comment", arg: 9, scope: !56, file: !3, line: 247, type: !49)
!2125 = !DILocation(line: 247, column: 25, scope: !56)
!2126 = !DILocalVariable(name: "exitstr", arg: 10, scope: !56, file: !3, line: 247, type: !49)
!2127 = !DILocation(line: 247, column: 46, scope: !56)
!2128 = !DILocalVariable(name: "buf", scope: !56, file: !3, line: 250, type: !6)
!2129 = !DILocation(line: 250, column: 9, scope: !56)
!2130 = !DILocalVariable(name: "x_idle", scope: !56, file: !3, line: 251, type: !2131)
!2131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !260)
!2132 = !DILocation(line: 251, column: 8, scope: !56)
!2133 = !DILocalVariable(name: "x_pid", scope: !56, file: !3, line: 252, type: !2134)
!2134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 104, elements: !2135)
!2135 = !{!2136}
!2136 = !DISubrange(count: 13)
!2137 = !DILocation(line: 252, column: 8, scope: !56)
!2138 = !DILocalVariable(name: "x_exitstr", scope: !56, file: !3, line: 253, type: !6)
!2139 = !DILocation(line: 253, column: 9, scope: !56)
!2140 = !DILocalVariable(name: "err", scope: !56, file: !3, line: 254, type: !53)
!2141 = !DILocation(line: 254, column: 7, scope: !56)
!2142 = !DILocation(line: 256, column: 13, scope: !56)
!2143 = !DILocation(line: 256, column: 11, scope: !56)
!2144 = !DILocation(line: 258, column: 7, scope: !2145)
!2145 = distinct !DILexicalBlock(scope: !56, file: !3, line: 258, column: 7)
!2146 = !DILocation(line: 258, column: 20, scope: !2145)
!2147 = !DILocation(line: 258, column: 24, scope: !2145)
!2148 = !DILocation(line: 258, column: 37, scope: !2145)
!2149 = !DILocation(line: 258, column: 48, scope: !2145)
!2150 = !DILocation(line: 258, column: 40, scope: !2145)
!2151 = !DILocation(line: 258, column: 54, scope: !2145)
!2152 = !DILocation(line: 258, column: 7, scope: !56)
!2153 = !DILocation(line: 259, column: 14, scope: !2145)
!2154 = !DILocation(line: 259, column: 31, scope: !2145)
!2155 = !DILocation(line: 259, column: 5, scope: !2145)
!2156 = !DILocation(line: 261, column: 5, scope: !2145)
!2157 = !DILocation(line: 261, column: 13, scope: !2145)
!2158 = !DILocation(line: 263, column: 8, scope: !2159)
!2159 = distinct !DILexicalBlock(scope: !56, file: !3, line: 263, column: 7)
!2160 = !DILocation(line: 263, column: 21, scope: !2159)
!2161 = !DILocation(line: 263, column: 32, scope: !2159)
!2162 = !DILocation(line: 263, column: 24, scope: !2159)
!2163 = !DILocation(line: 263, column: 37, scope: !2159)
!2164 = !DILocation(line: 263, column: 7, scope: !56)
!2165 = !DILocation(line: 264, column: 14, scope: !2159)
!2166 = !DILocation(line: 264, column: 30, scope: !2159)
!2167 = !DILocation(line: 264, column: 5, scope: !2159)
!2168 = !DILocation(line: 266, column: 5, scope: !2159)
!2169 = !DILocation(line: 266, column: 12, scope: !2159)
!2170 = !DILocation(line: 268, column: 24, scope: !56)
!2171 = !DILocation(line: 268, column: 43, scope: !56)
!2172 = !DILocation(line: 268, column: 41, scope: !56)
!2173 = !DILocation(line: 268, column: 70, scope: !56)
!2174 = !DILocation(line: 268, column: 15, scope: !56)
!2175 = !DILocation(line: 268, column: 13, scope: !56)
!2176 = !DILocation(line: 269, column: 7, scope: !2177)
!2177 = distinct !DILexicalBlock(scope: !56, file: !3, line: 269, column: 7)
!2178 = !DILocation(line: 269, column: 7, scope: !56)
!2179 = !DILocation(line: 270, column: 14, scope: !2177)
!2180 = !DILocation(line: 270, column: 35, scope: !2177)
!2181 = !DILocation(line: 270, column: 5, scope: !2177)
!2182 = !DILocation(line: 272, column: 6, scope: !2177)
!2183 = !DILocation(line: 272, column: 16, scope: !2177)
!2184 = !DILocation(line: 284, column: 19, scope: !56)
!2185 = !DILocation(line: 284, column: 28, scope: !56)
!2186 = !DILocation(line: 284, column: 35, scope: !56)
!2187 = !DILocation(line: 285, column: 19, scope: !56)
!2188 = !DILocation(line: 286, column: 19, scope: !56)
!2189 = !DILocation(line: 286, column: 28, scope: !56)
!2190 = !DILocation(line: 287, column: 19, scope: !56)
!2191 = !DILocation(line: 288, column: 19, scope: !56)
!2192 = !DILocation(line: 289, column: 19, scope: !56)
!2193 = !DILocation(line: 290, column: 19, scope: !56)
!2194 = !DILocation(line: 295, column: 19, scope: !56)
!2195 = !DILocation(line: 296, column: 19, scope: !56)
!2196 = !DILocation(line: 274, column: 9, scope: !56)
!2197 = !DILocation(line: 274, column: 7, scope: !56)
!2198 = !DILocation(line: 298, column: 7, scope: !2199)
!2199 = distinct !DILexicalBlock(scope: !56, file: !3, line: 298, column: 7)
!2200 = !DILocation(line: 298, column: 11, scope: !2199)
!2201 = !DILocation(line: 299, column: 5, scope: !2199)
!2202 = !DILocalVariable(name: "p", scope: !2203, file: !3, line: 303, type: !6)
!2203 = distinct !DILexicalBlock(scope: !56, file: !3, line: 301, column: 3)
!2204 = !DILocation(line: 303, column: 11, scope: !2203)
!2205 = !DILocation(line: 303, column: 15, scope: !2203)
!2206 = !DILocation(line: 303, column: 29, scope: !2203)
!2207 = !DILocation(line: 303, column: 21, scope: !2203)
!2208 = !DILocation(line: 303, column: 19, scope: !2203)
!2209 = !DILocation(line: 304, column: 5, scope: !2203)
!2210 = !DILocation(line: 304, column: 13, scope: !2203)
!2211 = !DILocation(line: 304, column: 12, scope: !2203)
!2212 = !DILocation(line: 304, column: 17, scope: !2203)
!2213 = distinct !{!2213, !2209, !2214}
!2214 = !DILocation(line: 305, column: 18, scope: !2203)
!2215 = !DILocation(line: 306, column: 7, scope: !2203)
!2216 = !DILocation(line: 306, column: 9, scope: !2203)
!2217 = !DILocation(line: 306, column: 14, scope: !2203)
!2218 = !DILocation(line: 309, column: 9, scope: !56)
!2219 = !DILocation(line: 309, column: 3, scope: !56)
!2220 = !DILocation(line: 310, column: 9, scope: !56)
!2221 = !DILocation(line: 310, column: 3, scope: !56)
!2222 = !DILocation(line: 311, column: 9, scope: !56)
!2223 = !DILocation(line: 311, column: 3, scope: !56)
!2224 = !DILocation(line: 312, column: 1, scope: !56)
!2225 = !DILocalVariable(name: "userlen", arg: 1, scope: !2226, file: !3, line: 244, type: !53)
!2226 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2227, retainedNodes: !4)
!2227 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2228, nameTableKind: None)
!2228 = !{!2229, !2231, !2233, !2235, !2237, !2239, !2241, !2243, !2245, !2247, !2249, !2251, !2253, !2255, !2257, !2259, !2261, !2263, !2273, !2275, !2304, !2306, !2309, !2311, !2316, !2321, !2323}
!2229 = !DIGlobalVariableExpression(var: !2230, expr: !DIExpression())
!2230 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2227, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!2231 = !DIGlobalVariableExpression(var: !2232, expr: !DIExpression())
!2232 = distinct !DIGlobalVariable(name: "short_list", scope: !2227, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!2233 = !DIGlobalVariableExpression(var: !2234, expr: !DIExpression())
!2234 = distinct !DIGlobalVariable(name: "short_output", scope: !2227, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!2235 = !DIGlobalVariableExpression(var: !2236, expr: !DIExpression())
!2236 = distinct !DIGlobalVariable(name: "include_idle", scope: !2227, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!2237 = !DIGlobalVariableExpression(var: !2238, expr: !DIExpression())
!2238 = distinct !DIGlobalVariable(name: "include_heading", scope: !2227, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!2239 = !DIGlobalVariableExpression(var: !2240, expr: !DIExpression())
!2240 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2227, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!2241 = !DIGlobalVariableExpression(var: !2242, expr: !DIExpression())
!2242 = distinct !DIGlobalVariable(name: "include_exit", scope: !2227, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!2243 = !DIGlobalVariableExpression(var: !2244, expr: !DIExpression())
!2244 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2227, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!2245 = !DIGlobalVariableExpression(var: !2246, expr: !DIExpression())
!2246 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2227, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!2247 = !DIGlobalVariableExpression(var: !2248, expr: !DIExpression())
!2248 = distinct !DIGlobalVariable(name: "need_login", scope: !2227, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!2249 = !DIGlobalVariableExpression(var: !2250, expr: !DIExpression())
!2250 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2227, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!2251 = !DIGlobalVariableExpression(var: !2252, expr: !DIExpression())
!2252 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2227, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!2253 = !DIGlobalVariableExpression(var: !2254, expr: !DIExpression())
!2254 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2227, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!2255 = !DIGlobalVariableExpression(var: !2256, expr: !DIExpression())
!2256 = distinct !DIGlobalVariable(name: "need_users", scope: !2227, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!2257 = !DIGlobalVariableExpression(var: !2258, expr: !DIExpression())
!2258 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2227, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!2259 = !DIGlobalVariableExpression(var: !2260, expr: !DIExpression())
!2260 = distinct !DIGlobalVariable(name: "time_format", scope: !2227, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!2261 = !DIGlobalVariableExpression(var: !2262, expr: !DIExpression())
!2262 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2227, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!2263 = !DIGlobalVariableExpression(var: !2264, expr: !DIExpression())
!2264 = distinct !DIGlobalVariable(name: "longopts", scope: !2227, file: !3, line: 162, type: !2265, isLocal: true, isDefinition: true)
!2265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2266, size: 4608, elements: !151)
!2266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2267)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !2268)
!2268 = !{!2269, !2270, !2271, !2272}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2267, file: !144, line: 52, baseType: !49, size: 64)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2267, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2267, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2267, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!2273 = !DIGlobalVariableExpression(var: !2274, expr: !DIExpression())
!2274 = distinct !DIGlobalVariable(name: "mesg", scope: !2226, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!2275 = !DIGlobalVariableExpression(var: !2276, expr: !DIExpression())
!2276 = distinct !DIGlobalVariable(name: "hoststr", scope: !2277, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!2277 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !2278, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2227, retainedNodes: !4)
!2278 = !DISubroutineType(types: !2279)
!2279 = !{null, !2280, !9}
!2280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2281, size: 64)
!2281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2282)
!2282 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !2283)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !2284)
!2284 = !{!2285, !2286, !2287, !2288, !2289, !2290, !2291, !2296, !2297, !2302, !2303}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !2283, file: !72, line: 57, baseType: !14, size: 16)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !2283, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !2283, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !2283, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !2283, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !2283, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !2283, file: !72, line: 67, baseType: !2292, size: 32, offset: 2656)
!2292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !2293)
!2293 = !{!2294, !2295}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !2292, file: !72, line: 45, baseType: !14, size: 16)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !2292, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !2283, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !2283, file: !72, line: 79, baseType: !2298, size: 64, offset: 2720)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2283, file: !72, line: 75, size: 64, elements: !2299)
!2299 = !{!2300, !2301}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2298, file: !72, line: 77, baseType: !96, size: 32)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2298, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !2283, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2283, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!2304 = !DIGlobalVariableExpression(var: !2305, expr: !DIExpression())
!2305 = distinct !DIGlobalVariable(name: "hostlen", scope: !2277, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!2306 = !DIGlobalVariableExpression(var: !2307, expr: !DIExpression())
!2307 = distinct !DIGlobalVariable(name: "now", scope: !2308, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!2308 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2227, retainedNodes: !4)
!2309 = !DIGlobalVariableExpression(var: !2310, expr: !DIExpression())
!2310 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !2308, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!2311 = !DIGlobalVariableExpression(var: !2312, expr: !DIExpression())
!2312 = distinct !DIGlobalVariable(name: "buf", scope: !2313, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!2313 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !2314, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2227, retainedNodes: !4)
!2314 = !DISubroutineType(types: !2315)
!2315 = !{!49, !2280}
!2316 = !DIGlobalVariableExpression(var: !2317, expr: !DIExpression())
!2317 = distinct !DIGlobalVariable(name: "runlevline", scope: !2318, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2318 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !2319, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2227, retainedNodes: !4)
!2319 = !DISubroutineType(types: !2320)
!2320 = !{null, !2280}
!2321 = !DIGlobalVariableExpression(var: !2322, expr: !DIExpression())
!2322 = distinct !DIGlobalVariable(name: "comment", scope: !2318, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2323 = !DIGlobalVariableExpression(var: !2324, expr: !DIExpression())
!2324 = distinct !DIGlobalVariable(name: "exitstr", scope: !2325, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!2325 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !2319, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2227, retainedNodes: !4)
!2326 = !DILocalVariable(name: "user", arg: 2, scope: !2226, file: !3, line: 244, type: !49)
!2327 = !DILocalVariable(name: "state", arg: 3, scope: !2226, file: !3, line: 244, type: !50)
!2328 = !DILocalVariable(name: "linelen", arg: 4, scope: !2226, file: !3, line: 245, type: !53)
!2329 = !DILocalVariable(name: "line", arg: 5, scope: !2226, file: !3, line: 245, type: !49)
!2330 = !DILocalVariable(name: "time_str", arg: 6, scope: !2226, file: !3, line: 246, type: !49)
!2331 = !DILocalVariable(name: "idle", arg: 7, scope: !2226, file: !3, line: 246, type: !49)
!2332 = !DILocalVariable(name: "pid", arg: 8, scope: !2226, file: !3, line: 246, type: !49)
!2333 = !DILocalVariable(name: "comment", arg: 9, scope: !2226, file: !3, line: 247, type: !49)
!2334 = !DILocalVariable(name: "exitstr", arg: 10, scope: !2226, file: !3, line: 247, type: !49)
!2335 = !DILocalVariable(name: "buf", scope: !2226, file: !3, line: 250, type: !6)
!2336 = !DILocalVariable(name: "x_idle", scope: !2226, file: !3, line: 251, type: !2131)
!2337 = !DILocalVariable(name: "x_pid", scope: !2226, file: !3, line: 252, type: !2134)
!2338 = !DILocalVariable(name: "x_exitstr", scope: !2226, file: !3, line: 253, type: !6)
!2339 = !DILocalVariable(name: "err", scope: !2226, file: !3, line: 254, type: !53)
!2340 = distinct !DISubprogram(name: "timetostr", scope: !364, file: !364, line: 690, type: !2341, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2341 = !DISubroutineType(types: !2342)
!2342 = !{!6, !9, !6}
!2343 = !DILocalVariable(name: "t", arg: 1, scope: !2340, file: !364, line: 690, type: !9)
!2344 = !DILocation(line: 690, column: 19, scope: !2340)
!2345 = !DILocalVariable(name: "buf", arg: 2, scope: !2340, file: !364, line: 690, type: !6)
!2346 = !DILocation(line: 690, column: 28, scope: !2340)
!2347 = !DILocation(line: 693, column: 24, scope: !2340)
!2348 = !DILocation(line: 693, column: 27, scope: !2340)
!2349 = !DILocation(line: 693, column: 13, scope: !2340)
!2350 = !DILocation(line: 692, column: 3, scope: !2340)
!2351 = !DILocalVariable(name: "t", arg: 1, scope: !2352, file: !364, line: 690, type: !9)
!2352 = distinct !DISubprogram(name: "timetostr", scope: !364, file: !364, line: 690, type: !2341, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2353, retainedNodes: !4)
!2353 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2354, nameTableKind: None)
!2354 = !{!2355, !2357, !2359, !2361, !2363, !2365, !2367, !2369, !2371, !2373, !2375, !2377, !2379, !2381, !2383, !2385, !2387, !2389, !2399, !2402, !2431, !2433, !2436, !2438, !2443, !2448, !2450}
!2355 = !DIGlobalVariableExpression(var: !2356, expr: !DIExpression())
!2356 = distinct !DIGlobalVariable(name: "do_lookup", scope: !2353, file: !3, line: 102, type: !18, isLocal: true, isDefinition: true)
!2357 = !DIGlobalVariableExpression(var: !2358, expr: !DIExpression())
!2358 = distinct !DIGlobalVariable(name: "short_list", scope: !2353, file: !3, line: 107, type: !18, isLocal: true, isDefinition: true)
!2359 = !DIGlobalVariableExpression(var: !2360, expr: !DIExpression())
!2360 = distinct !DIGlobalVariable(name: "short_output", scope: !2353, file: !3, line: 110, type: !18, isLocal: true, isDefinition: true)
!2361 = !DIGlobalVariableExpression(var: !2362, expr: !DIExpression())
!2362 = distinct !DIGlobalVariable(name: "include_idle", scope: !2353, file: !3, line: 115, type: !18, isLocal: true, isDefinition: true)
!2363 = !DIGlobalVariableExpression(var: !2364, expr: !DIExpression())
!2364 = distinct !DIGlobalVariable(name: "include_heading", scope: !2353, file: !3, line: 118, type: !18, isLocal: true, isDefinition: true)
!2365 = !DIGlobalVariableExpression(var: !2366, expr: !DIExpression())
!2366 = distinct !DIGlobalVariable(name: "include_mesg", scope: !2353, file: !3, line: 122, type: !18, isLocal: true, isDefinition: true)
!2367 = !DIGlobalVariableExpression(var: !2368, expr: !DIExpression())
!2368 = distinct !DIGlobalVariable(name: "include_exit", scope: !2353, file: !3, line: 125, type: !18, isLocal: true, isDefinition: true)
!2369 = !DIGlobalVariableExpression(var: !2370, expr: !DIExpression())
!2370 = distinct !DIGlobalVariable(name: "need_boottime", scope: !2353, file: !3, line: 128, type: !18, isLocal: true, isDefinition: true)
!2371 = !DIGlobalVariableExpression(var: !2372, expr: !DIExpression())
!2372 = distinct !DIGlobalVariable(name: "need_deadprocs", scope: !2353, file: !3, line: 131, type: !18, isLocal: true, isDefinition: true)
!2373 = !DIGlobalVariableExpression(var: !2374, expr: !DIExpression())
!2374 = distinct !DIGlobalVariable(name: "need_login", scope: !2353, file: !3, line: 134, type: !18, isLocal: true, isDefinition: true)
!2375 = !DIGlobalVariableExpression(var: !2376, expr: !DIExpression())
!2376 = distinct !DIGlobalVariable(name: "need_initspawn", scope: !2353, file: !3, line: 137, type: !18, isLocal: true, isDefinition: true)
!2377 = !DIGlobalVariableExpression(var: !2378, expr: !DIExpression())
!2378 = distinct !DIGlobalVariable(name: "need_clockchange", scope: !2353, file: !3, line: 140, type: !18, isLocal: true, isDefinition: true)
!2379 = !DIGlobalVariableExpression(var: !2380, expr: !DIExpression())
!2380 = distinct !DIGlobalVariable(name: "need_runlevel", scope: !2353, file: !3, line: 143, type: !18, isLocal: true, isDefinition: true)
!2381 = !DIGlobalVariableExpression(var: !2382, expr: !DIExpression())
!2382 = distinct !DIGlobalVariable(name: "need_users", scope: !2353, file: !3, line: 146, type: !18, isLocal: true, isDefinition: true)
!2383 = !DIGlobalVariableExpression(var: !2384, expr: !DIExpression())
!2384 = distinct !DIGlobalVariable(name: "my_line_only", scope: !2353, file: !3, line: 149, type: !18, isLocal: true, isDefinition: true)
!2385 = !DIGlobalVariableExpression(var: !2386, expr: !DIExpression())
!2386 = distinct !DIGlobalVariable(name: "time_format", scope: !2353, file: !3, line: 153, type: !49, isLocal: true, isDefinition: true)
!2387 = !DIGlobalVariableExpression(var: !2388, expr: !DIExpression())
!2388 = distinct !DIGlobalVariable(name: "time_format_width", scope: !2353, file: !3, line: 154, type: !53, isLocal: true, isDefinition: true)
!2389 = !DIGlobalVariableExpression(var: !2390, expr: !DIExpression())
!2390 = distinct !DIGlobalVariable(name: "longopts", scope: !2353, file: !3, line: 162, type: !2391, isLocal: true, isDefinition: true)
!2391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2392, size: 4608, elements: !151)
!2392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2393)
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !144, line: 50, size: 256, elements: !2394)
!2394 = !{!2395, !2396, !2397, !2398}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2393, file: !144, line: 52, baseType: !49, size: 64)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2393, file: !144, line: 55, baseType: !53, size: 32, offset: 64)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2393, file: !144, line: 56, baseType: !149, size: 64, offset: 128)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2393, file: !144, line: 57, baseType: !53, size: 32, offset: 192)
!2399 = !DIGlobalVariableExpression(var: !2400, expr: !DIExpression())
!2400 = distinct !DIGlobalVariable(name: "mesg", scope: !2401, file: !3, line: 249, type: !59, isLocal: true, isDefinition: true)
!2401 = distinct !DISubprogram(name: "print_line", scope: !3, file: !3, line: 244, type: !57, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2353, retainedNodes: !4)
!2402 = !DIGlobalVariableExpression(var: !2403, expr: !DIExpression())
!2403 = distinct !DIGlobalVariable(name: "hoststr", scope: !2404, file: !3, line: 339, type: !6, isLocal: true, isDefinition: true)
!2404 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 333, type: !2405, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2353, retainedNodes: !4)
!2405 = !DISubroutineType(types: !2406)
!2406 = !{null, !2407, !9}
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 64)
!2408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2409)
!2409 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !2410)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !2411)
!2411 = !{!2412, !2413, !2414, !2415, !2416, !2417, !2418, !2423, !2424, !2429, !2430}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !2410, file: !72, line: 57, baseType: !14, size: 16)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !2410, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !2410, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !2410, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !2410, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !2410, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !2410, file: !72, line: 67, baseType: !2419, size: 32, offset: 2656)
!2419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !2420)
!2420 = !{!2421, !2422}
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !2419, file: !72, line: 45, baseType: !14, size: 16)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !2419, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !2410, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !2410, file: !72, line: 79, baseType: !2425, size: 64, offset: 2720)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2410, file: !72, line: 75, size: 64, elements: !2426)
!2426 = !{!2427, !2428}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2425, file: !72, line: 77, baseType: !96, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2425, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !2410, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2410, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!2431 = !DIGlobalVariableExpression(var: !2432, expr: !DIExpression())
!2432 = distinct !DIGlobalVariable(name: "hostlen", scope: !2404, file: !3, line: 341, type: !110, isLocal: true, isDefinition: true)
!2433 = !DIGlobalVariableExpression(var: !2434, expr: !DIExpression())
!2434 = distinct !DIGlobalVariable(name: "now", scope: !2435, file: !3, line: 190, type: !9, isLocal: true, isDefinition: true)
!2435 = distinct !DISubprogram(name: "idle_string", scope: !3, file: !3, line: 188, type: !116, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2353, retainedNodes: !4)
!2436 = !DIGlobalVariableExpression(var: !2437, expr: !DIExpression())
!2437 = distinct !DIGlobalVariable(name: "idle_hhmm", scope: !2435, file: !3, line: 202, type: !120, isLocal: true, isDefinition: true)
!2438 = !DIGlobalVariableExpression(var: !2439, expr: !DIExpression())
!2439 = distinct !DIGlobalVariable(name: "buf", scope: !2440, file: !3, line: 220, type: !128, isLocal: true, isDefinition: true)
!2440 = distinct !DISubprogram(name: "time_string", scope: !3, file: !3, line: 218, type: !2441, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2353, retainedNodes: !4)
!2441 = !DISubroutineType(types: !2442)
!2442 = !{!49, !2407}
!2443 = !DIGlobalVariableExpression(var: !2444, expr: !DIExpression())
!2444 = distinct !DIGlobalVariable(name: "runlevline", scope: !2445, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2445 = distinct !DISubprogram(name: "print_runlevel", scope: !3, file: !3, line: 514, type: !2446, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2353, retainedNodes: !4)
!2446 = !DISubroutineType(types: !2447)
!2447 = !{null, !2407}
!2448 = !DIGlobalVariableExpression(var: !2449, expr: !DIExpression())
!2449 = distinct !DIGlobalVariable(name: "comment", scope: !2445, file: !3, line: 516, type: !6, isLocal: true, isDefinition: true)
!2450 = !DIGlobalVariableExpression(var: !2451, expr: !DIExpression())
!2451 = distinct !DIGlobalVariable(name: "exitstr", scope: !2452, file: !3, line: 461, type: !6, isLocal: true, isDefinition: true)
!2452 = distinct !DISubprogram(name: "print_deadprocs", scope: !3, file: !3, line: 459, type: !2446, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2353, retainedNodes: !4)
!2453 = !DILocalVariable(name: "buf", arg: 2, scope: !2352, file: !364, line: 690, type: !6)
!2454 = distinct !DISubprogram(name: "stzncpy", scope: !364, file: !364, line: 741, type: !2455, scopeLine: 742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2455 = !DISubroutineType(types: !2456)
!2456 = !{!6, !2457, !2458, !110}
!2457 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !6)
!2458 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !49)
!2459 = !DILocalVariable(name: "dest", arg: 1, scope: !2454, file: !364, line: 741, type: !2457)
!2460 = !DILocation(line: 741, column: 25, scope: !2454)
!2461 = !DILocalVariable(name: "src", arg: 2, scope: !2454, file: !364, line: 741, type: !2458)
!2462 = !DILocation(line: 741, column: 52, scope: !2454)
!2463 = !DILocalVariable(name: "len", arg: 3, scope: !2454, file: !364, line: 741, type: !110)
!2464 = !DILocation(line: 741, column: 64, scope: !2454)
!2465 = !DILocalVariable(name: "src_end", scope: !2454, file: !364, line: 743, type: !49)
!2466 = !DILocation(line: 743, column: 15, scope: !2454)
!2467 = !DILocation(line: 743, column: 25, scope: !2454)
!2468 = !DILocation(line: 743, column: 31, scope: !2454)
!2469 = !DILocation(line: 743, column: 29, scope: !2454)
!2470 = !DILocation(line: 744, column: 3, scope: !2454)
!2471 = !DILocation(line: 744, column: 10, scope: !2454)
!2472 = !DILocation(line: 744, column: 16, scope: !2454)
!2473 = !DILocation(line: 744, column: 14, scope: !2454)
!2474 = !DILocation(line: 744, column: 24, scope: !2454)
!2475 = !DILocation(line: 744, column: 28, scope: !2454)
!2476 = !DILocation(line: 744, column: 27, scope: !2454)
!2477 = !DILocation(line: 0, scope: !2454)
!2478 = !DILocation(line: 745, column: 19, scope: !2454)
!2479 = !DILocation(line: 745, column: 15, scope: !2454)
!2480 = !DILocation(line: 745, column: 10, scope: !2454)
!2481 = !DILocation(line: 745, column: 13, scope: !2454)
!2482 = distinct !{!2482, !2470, !2478}
!2483 = !DILocation(line: 746, column: 4, scope: !2454)
!2484 = !DILocation(line: 746, column: 9, scope: !2454)
!2485 = !DILocation(line: 747, column: 10, scope: !2454)
!2486 = !DILocation(line: 747, column: 3, scope: !2454)
!2487 = distinct !DISubprogram(name: "is_tty_writable", scope: !3, file: !3, line: 317, type: !2488, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2488 = !DISubroutineType(types: !2489)
!2489 = !{!18, !2490}
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 64)
!2491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !947)
!2492 = !DILocalVariable(name: "pstat", arg: 1, scope: !2487, file: !3, line: 317, type: !2490)
!2493 = !DILocation(line: 317, column: 37, scope: !2487)
!2494 = !DILocation(line: 327, column: 10, scope: !2487)
!2495 = !DILocation(line: 327, column: 17, scope: !2487)
!2496 = !DILocation(line: 327, column: 25, scope: !2487)
!2497 = !DILocation(line: 327, column: 3, scope: !2487)
!2498 = !DILocalVariable(name: "when", arg: 1, scope: !115, file: !3, line: 188, type: !9)
!2499 = !DILocation(line: 188, column: 21, scope: !115)
!2500 = !DILocalVariable(name: "boottime", arg: 2, scope: !115, file: !3, line: 188, type: !9)
!2501 = !DILocation(line: 188, column: 34, scope: !115)
!2502 = !DILocation(line: 192, column: 7, scope: !2503)
!2503 = distinct !DILexicalBlock(scope: !115, file: !3, line: 192, column: 7)
!2504 = !DILocation(line: 192, column: 11, scope: !2503)
!2505 = !DILocation(line: 192, column: 7, scope: !115)
!2506 = !DILocation(line: 193, column: 5, scope: !2503)
!2507 = !DILocation(line: 195, column: 7, scope: !2508)
!2508 = distinct !DILexicalBlock(scope: !115, file: !3, line: 195, column: 7)
!2509 = !DILocation(line: 195, column: 18, scope: !2508)
!2510 = !DILocation(line: 195, column: 16, scope: !2508)
!2511 = !DILocation(line: 195, column: 23, scope: !2508)
!2512 = !DILocation(line: 195, column: 26, scope: !2508)
!2513 = !DILocation(line: 195, column: 30, scope: !2508)
!2514 = !DILocation(line: 195, column: 47, scope: !2508)
!2515 = !DILocation(line: 195, column: 45, scope: !2508)
!2516 = !DILocation(line: 195, column: 52, scope: !2508)
!2517 = !DILocation(line: 195, column: 55, scope: !2508)
!2518 = !DILocation(line: 195, column: 63, scope: !2508)
!2519 = !DILocation(line: 195, column: 60, scope: !2508)
!2520 = !DILocation(line: 195, column: 7, scope: !115)
!2521 = !DILocalVariable(name: "seconds_idle", scope: !2522, file: !3, line: 197, type: !53)
!2522 = distinct !DILexicalBlock(scope: !2508, file: !3, line: 196, column: 5)
!2523 = !DILocation(line: 197, column: 11, scope: !2522)
!2524 = !DILocation(line: 197, column: 26, scope: !2522)
!2525 = !DILocation(line: 197, column: 32, scope: !2522)
!2526 = !DILocation(line: 197, column: 30, scope: !2522)
!2527 = !DILocation(line: 198, column: 11, scope: !2528)
!2528 = distinct !DILexicalBlock(scope: !2522, file: !3, line: 198, column: 11)
!2529 = !DILocation(line: 198, column: 24, scope: !2528)
!2530 = !DILocation(line: 198, column: 11, scope: !2522)
!2531 = !DILocation(line: 199, column: 9, scope: !2528)
!2532 = !DILocation(line: 205, column: 11, scope: !2533)
!2533 = distinct !DILexicalBlock(scope: !2534, file: !3, line: 205, column: 11)
!2534 = distinct !DILexicalBlock(scope: !2535, file: !3, line: 205, column: 11)
!2535 = distinct !DILexicalBlock(scope: !2528, file: !3, line: 201, column: 9)
!2536 = !DILocation(line: 205, column: 11, scope: !2534)
!2537 = !DILocation(line: 207, column: 20, scope: !2535)
!2538 = !DILocation(line: 207, column: 33, scope: !2535)
!2539 = !DILocation(line: 208, column: 21, scope: !2535)
!2540 = !DILocation(line: 208, column: 34, scope: !2535)
!2541 = !DILocation(line: 208, column: 47, scope: !2535)
!2542 = !DILocation(line: 206, column: 11, scope: !2535)
!2543 = !DILocation(line: 209, column: 11, scope: !2535)
!2544 = !DILocation(line: 213, column: 10, scope: !115)
!2545 = !DILocation(line: 213, column: 3, scope: !115)
!2546 = !DILocation(line: 214, column: 1, scope: !115)
!2547 = distinct !DISubprogram(name: "c_isprint", scope: !2548, file: !2548, line: 272, type: !2549, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !286, retainedNodes: !4)
!2548 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!2549 = !DISubroutineType(types: !2550)
!2550 = !{!18, !53}
!2551 = !DILocalVariable(name: "c", arg: 1, scope: !2547, file: !2548, line: 272, type: !53)
!2552 = !DILocation(line: 272, column: 16, scope: !2547)
!2553 = !DILocation(line: 274, column: 11, scope: !2547)
!2554 = !DILocation(line: 274, column: 3, scope: !2547)
!2555 = !DILocation(line: 281, column: 7, scope: !2556)
!2556 = distinct !DILexicalBlock(scope: !2547, file: !2548, line: 275, column: 5)
!2557 = !DILocation(line: 283, column: 7, scope: !2556)
!2558 = !DILocation(line: 285, column: 1, scope: !2547)
!2559 = !DILocalVariable(name: "c", arg: 1, scope: !2560, file: !2548, line: 272, type: !53)
!2560 = distinct !DISubprogram(name: "c_isprint", scope: !2548, file: !2548, line: 272, type: !2549, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2561, retainedNodes: !4)
!2561 = distinct !DICompileUnit(language: DW_LANG_C99, file: !287, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!2562 = distinct !DISubprogram(name: "c_tolower", scope: !2548, file: !2548, line: 337, type: !2563, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !286, retainedNodes: !4)
!2563 = !DISubroutineType(types: !2564)
!2564 = !{!53, !53}
!2565 = !DILocalVariable(name: "c", arg: 1, scope: !2562, file: !2548, line: 337, type: !53)
!2566 = !DILocation(line: 337, column: 16, scope: !2562)
!2567 = !DILocation(line: 339, column: 11, scope: !2562)
!2568 = !DILocation(line: 339, column: 3, scope: !2562)
!2569 = !DILocation(line: 342, column: 14, scope: !2570)
!2570 = distinct !DILexicalBlock(scope: !2562, file: !2548, line: 340, column: 5)
!2571 = !DILocation(line: 342, column: 16, scope: !2570)
!2572 = !DILocation(line: 342, column: 22, scope: !2570)
!2573 = !DILocation(line: 342, column: 7, scope: !2570)
!2574 = !DILocation(line: 344, column: 14, scope: !2570)
!2575 = !DILocation(line: 344, column: 7, scope: !2570)
!2576 = !DILocation(line: 346, column: 1, scope: !2562)
!2577 = !DILocalVariable(name: "c", arg: 1, scope: !2578, file: !2548, line: 337, type: !53)
!2578 = distinct !DISubprogram(name: "c_tolower", scope: !2548, file: !2548, line: 337, type: !2563, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2579, retainedNodes: !4)
!2579 = distinct !DICompileUnit(language: DW_LANG_C99, file: !287, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!2580 = distinct !DISubprogram(name: "canon_host", scope: !166, file: !166, line: 33, type: !2581, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !160, retainedNodes: !4)
!2581 = !DISubroutineType(types: !2582)
!2582 = !{!6, !49}
!2583 = !DILocalVariable(name: "host", arg: 1, scope: !2580, file: !166, line: 33, type: !49)
!2584 = !DILocation(line: 33, column: 25, scope: !2580)
!2585 = !DILocation(line: 35, column: 24, scope: !2580)
!2586 = !DILocation(line: 35, column: 10, scope: !2580)
!2587 = !DILocation(line: 35, column: 3, scope: !2580)
!2588 = !DILocalVariable(name: "host", arg: 1, scope: !2589, file: !166, line: 33, type: !49)
!2589 = distinct !DISubprogram(name: "canon_host", scope: !166, file: !166, line: 33, type: !2581, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2590, retainedNodes: !4)
!2590 = distinct !DICompileUnit(language: DW_LANG_C99, file: !161, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !2591, nameTableKind: None)
!2591 = !{!2592, !2611}
!2592 = !DIGlobalVariableExpression(var: !2593, expr: !DIExpression())
!2593 = distinct !DIGlobalVariable(name: "hints", scope: !2594, file: !166, line: 64, type: !2595, isLocal: true, isDefinition: true)
!2594 = distinct !DISubprogram(name: "canon_host_r", scope: !166, file: !166, line: 61, type: !167, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2590, retainedNodes: !4)
!2595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "addrinfo", file: !170, line: 565, size: 384, elements: !2596)
!2596 = !{!2597, !2598, !2599, !2600, !2601, !2602, !2608, !2609}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "ai_flags", scope: !2595, file: !170, line: 567, baseType: !53, size: 32)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "ai_family", scope: !2595, file: !170, line: 568, baseType: !53, size: 32, offset: 32)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "ai_socktype", scope: !2595, file: !170, line: 569, baseType: !53, size: 32, offset: 64)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "ai_protocol", scope: !2595, file: !170, line: 570, baseType: !53, size: 32, offset: 96)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addrlen", scope: !2595, file: !170, line: 571, baseType: !177, size: 32, offset: 128)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addr", scope: !2595, file: !170, line: 572, baseType: !2603, size: 64, offset: 192)
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 64)
!2604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !178, line: 178, size: 128, elements: !2605)
!2605 = !{!2606, !2607}
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !2604, file: !178, line: 180, baseType: !186, size: 16)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !2604, file: !178, line: 181, baseType: !190, size: 112, offset: 16)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "ai_canonname", scope: !2595, file: !170, line: 573, baseType: !6, size: 64, offset: 256)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "ai_next", scope: !2595, file: !170, line: 574, baseType: !2610, size: 64, offset: 320)
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 64)
!2611 = !DIGlobalVariableExpression(var: !2612, expr: !DIExpression())
!2612 = distinct !DIGlobalVariable(name: "last_cherror", scope: !2590, file: !166, line: 28, type: !53, isLocal: true, isDefinition: true)
!2613 = !DILocalVariable(name: "host", arg: 1, scope: !165, file: !166, line: 61, type: !49)
!2614 = !DILocation(line: 61, column: 27, scope: !165)
!2615 = !DILocalVariable(name: "cherror", arg: 2, scope: !165, file: !166, line: 61, type: !149)
!2616 = !DILocation(line: 61, column: 38, scope: !165)
!2617 = !DILocalVariable(name: "retval", scope: !165, file: !166, line: 63, type: !6)
!2618 = !DILocation(line: 63, column: 9, scope: !165)
!2619 = !DILocalVariable(name: "res", scope: !165, file: !166, line: 65, type: !195)
!2620 = !DILocation(line: 65, column: 20, scope: !165)
!2621 = !DILocalVariable(name: "status", scope: !165, file: !166, line: 66, type: !53)
!2622 = !DILocation(line: 66, column: 7, scope: !165)
!2623 = !DILocation(line: 68, column: 18, scope: !165)
!2624 = !DILocation(line: 69, column: 25, scope: !165)
!2625 = !DILocation(line: 69, column: 12, scope: !165)
!2626 = !DILocation(line: 69, column: 10, scope: !165)
!2627 = !DILocation(line: 70, column: 8, scope: !2628)
!2628 = distinct !DILexicalBlock(scope: !165, file: !166, line: 70, column: 7)
!2629 = !DILocation(line: 70, column: 7, scope: !165)
!2630 = !DILocation(line: 75, column: 24, scope: !2631)
!2631 = distinct !DILexicalBlock(scope: !2628, file: !166, line: 71, column: 5)
!2632 = !DILocation(line: 75, column: 29, scope: !2631)
!2633 = !DILocation(line: 75, column: 44, scope: !2631)
!2634 = !DILocation(line: 75, column: 49, scope: !2631)
!2635 = !DILocation(line: 75, column: 64, scope: !2631)
!2636 = !DILocation(line: 75, column: 16, scope: !2631)
!2637 = !DILocation(line: 75, column: 14, scope: !2631)
!2638 = !DILocation(line: 76, column: 12, scope: !2639)
!2639 = distinct !DILexicalBlock(scope: !2631, file: !166, line: 76, column: 11)
!2640 = !DILocation(line: 76, column: 19, scope: !2639)
!2641 = !DILocation(line: 76, column: 22, scope: !2639)
!2642 = !DILocation(line: 76, column: 11, scope: !2631)
!2643 = !DILocation(line: 77, column: 10, scope: !2639)
!2644 = !DILocation(line: 77, column: 18, scope: !2639)
!2645 = !DILocation(line: 77, column: 9, scope: !2639)
!2646 = !DILocation(line: 78, column: 21, scope: !2631)
!2647 = !DILocation(line: 78, column: 7, scope: !2631)
!2648 = !DILocation(line: 79, column: 5, scope: !2631)
!2649 = !DILocation(line: 80, column: 12, scope: !2650)
!2650 = distinct !DILexicalBlock(scope: !2628, file: !166, line: 80, column: 12)
!2651 = !DILocation(line: 80, column: 12, scope: !2628)
!2652 = !DILocation(line: 81, column: 16, scope: !2650)
!2653 = !DILocation(line: 81, column: 6, scope: !2650)
!2654 = !DILocation(line: 81, column: 14, scope: !2650)
!2655 = !DILocation(line: 81, column: 5, scope: !2650)
!2656 = !DILocation(line: 83, column: 10, scope: !165)
!2657 = !DILocation(line: 83, column: 3, scope: !165)
!2658 = distinct !DISubprogram(name: "close_stdout", scope: !203, file: !203, line: 117, type: !931, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !198, retainedNodes: !4)
!2659 = !DILocation(line: 119, column: 21, scope: !2660)
!2660 = distinct !DILexicalBlock(scope: !2658, file: !203, line: 119, column: 7)
!2661 = !DILocation(line: 119, column: 7, scope: !2660)
!2662 = !DILocation(line: 119, column: 29, scope: !2660)
!2663 = !DILocation(line: 120, column: 7, scope: !2660)
!2664 = !DILocation(line: 120, column: 12, scope: !2660)
!2665 = !DILocation(line: 120, column: 25, scope: !2660)
!2666 = !DILocation(line: 120, column: 28, scope: !2660)
!2667 = !DILocation(line: 120, column: 34, scope: !2660)
!2668 = !DILocation(line: 119, column: 7, scope: !2658)
!2669 = !DILocalVariable(name: "write_error", scope: !2670, file: !203, line: 122, type: !49)
!2670 = distinct !DILexicalBlock(scope: !2660, file: !203, line: 121, column: 5)
!2671 = !DILocation(line: 122, column: 19, scope: !2670)
!2672 = !DILocation(line: 122, column: 33, scope: !2670)
!2673 = !DILocation(line: 123, column: 11, scope: !2674)
!2674 = distinct !DILexicalBlock(scope: !2670, file: !203, line: 123, column: 11)
!2675 = !DILocation(line: 123, column: 11, scope: !2670)
!2676 = !DILocation(line: 124, column: 19, scope: !2674)
!2677 = !DILocation(line: 124, column: 52, scope: !2674)
!2678 = !DILocation(line: 124, column: 36, scope: !2674)
!2679 = !DILocation(line: 125, column: 16, scope: !2674)
!2680 = !DILocation(line: 124, column: 9, scope: !2674)
!2681 = !DILocation(line: 127, column: 19, scope: !2674)
!2682 = !DILocation(line: 127, column: 32, scope: !2674)
!2683 = !DILocation(line: 127, column: 9, scope: !2674)
!2684 = !DILocation(line: 129, column: 14, scope: !2670)
!2685 = !DILocation(line: 129, column: 7, scope: !2670)
!2686 = !DILocation(line: 134, column: 42, scope: !2687)
!2687 = distinct !DILexicalBlock(scope: !2658, file: !203, line: 134, column: 7)
!2688 = !DILocation(line: 134, column: 28, scope: !2687)
!2689 = !DILocation(line: 134, column: 50, scope: !2687)
!2690 = !DILocation(line: 134, column: 7, scope: !2658)
!2691 = !DILocation(line: 135, column: 12, scope: !2687)
!2692 = !DILocation(line: 135, column: 5, scope: !2687)
!2693 = !DILocation(line: 136, column: 1, scope: !2658)
!2694 = distinct !DISubprogram(name: "hard_locale", scope: !2695, file: !2695, line: 27, type: !2549, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !288, retainedNodes: !4)
!2695 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!2696 = !DILocalVariable(name: "category", arg: 1, scope: !2694, file: !2695, line: 27, type: !53)
!2697 = !DILocation(line: 27, column: 18, scope: !2694)
!2698 = !DILocalVariable(name: "locale", scope: !2694, file: !2695, line: 29, type: !1043)
!2699 = !DILocation(line: 29, column: 8, scope: !2694)
!2700 = !DILocation(line: 31, column: 25, scope: !2701)
!2701 = distinct !DILexicalBlock(scope: !2694, file: !2695, line: 31, column: 7)
!2702 = !DILocation(line: 31, column: 35, scope: !2701)
!2703 = !DILocation(line: 31, column: 7, scope: !2701)
!2704 = !DILocation(line: 31, column: 7, scope: !2694)
!2705 = !DILocation(line: 32, column: 5, scope: !2701)
!2706 = !DILocation(line: 34, column: 20, scope: !2694)
!2707 = !DILocation(line: 34, column: 12, scope: !2694)
!2708 = !DILocation(line: 34, column: 33, scope: !2694)
!2709 = !DILocation(line: 34, column: 49, scope: !2694)
!2710 = !DILocation(line: 34, column: 41, scope: !2694)
!2711 = !DILocation(line: 34, column: 66, scope: !2694)
!2712 = !DILocation(line: 34, column: 38, scope: !2694)
!2713 = !DILocation(line: 34, column: 10, scope: !2694)
!2714 = !DILocation(line: 34, column: 3, scope: !2694)
!2715 = !DILocation(line: 35, column: 1, scope: !2694)
!2716 = !DILocalVariable(name: "category", arg: 1, scope: !2717, file: !2695, line: 27, type: !53)
!2717 = distinct !DISubprogram(name: "hard_locale", scope: !2695, file: !2695, line: 27, type: !2549, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2718, retainedNodes: !4)
!2718 = distinct !DICompileUnit(language: DW_LANG_C99, file: !289, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!2719 = !DILocalVariable(name: "locale", scope: !2717, file: !2695, line: 29, type: !1043)
!2720 = distinct !DISubprogram(name: "imaxtostr", scope: !2721, file: !2721, line: 36, type: !2722, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !290, retainedNodes: !4)
!2721 = !DIFile(filename: "./lib/anytostr.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!2722 = !DISubroutineType(types: !2723)
!2723 = !{!6, !293, !6}
!2724 = !DILocalVariable(name: "i", arg: 1, scope: !2720, file: !2721, line: 36, type: !293)
!2725 = !DILocation(line: 36, column: 19, scope: !2720)
!2726 = !DILocalVariable(name: "buf", arg: 2, scope: !2720, file: !2721, line: 36, type: !6)
!2727 = !DILocation(line: 36, column: 28, scope: !2720)
!2728 = !DILocalVariable(name: "p", scope: !2720, file: !2721, line: 38, type: !6)
!2729 = !DILocation(line: 38, column: 9, scope: !2720)
!2730 = !DILocation(line: 38, column: 13, scope: !2720)
!2731 = !DILocation(line: 38, column: 17, scope: !2720)
!2732 = !DILocation(line: 39, column: 4, scope: !2720)
!2733 = !DILocation(line: 39, column: 6, scope: !2720)
!2734 = !DILocation(line: 41, column: 7, scope: !2735)
!2735 = distinct !DILexicalBlock(scope: !2720, file: !2721, line: 41, column: 7)
!2736 = !DILocation(line: 41, column: 9, scope: !2735)
!2737 = !DILocation(line: 41, column: 7, scope: !2720)
!2738 = !DILocation(line: 43, column: 7, scope: !2739)
!2739 = distinct !DILexicalBlock(scope: !2735, file: !2721, line: 42, column: 5)
!2740 = !DILocation(line: 44, column: 22, scope: !2739)
!2741 = !DILocation(line: 44, column: 24, scope: !2739)
!2742 = !DILocation(line: 44, column: 20, scope: !2739)
!2743 = !DILocation(line: 44, column: 16, scope: !2739)
!2744 = !DILocation(line: 44, column: 10, scope: !2739)
!2745 = !DILocation(line: 44, column: 14, scope: !2739)
!2746 = !DILocation(line: 44, column: 9, scope: !2739)
!2747 = !DILocation(line: 45, column: 17, scope: !2739)
!2748 = !DILocation(line: 45, column: 24, scope: !2739)
!2749 = distinct !{!2749, !2738, !2750}
!2750 = !DILocation(line: 45, column: 28, scope: !2739)
!2751 = !DILocation(line: 47, column: 8, scope: !2739)
!2752 = !DILocation(line: 47, column: 12, scope: !2739)
!2753 = !DILocation(line: 48, column: 5, scope: !2739)
!2754 = !DILocation(line: 51, column: 7, scope: !2755)
!2755 = distinct !DILexicalBlock(scope: !2735, file: !2721, line: 50, column: 5)
!2756 = !DILocation(line: 52, column: 22, scope: !2755)
!2757 = !DILocation(line: 52, column: 24, scope: !2755)
!2758 = !DILocation(line: 52, column: 20, scope: !2755)
!2759 = !DILocation(line: 52, column: 16, scope: !2755)
!2760 = !DILocation(line: 52, column: 10, scope: !2755)
!2761 = !DILocation(line: 52, column: 14, scope: !2755)
!2762 = !DILocation(line: 52, column: 9, scope: !2755)
!2763 = !DILocation(line: 53, column: 17, scope: !2755)
!2764 = !DILocation(line: 53, column: 24, scope: !2755)
!2765 = distinct !{!2765, !2754, !2766}
!2766 = !DILocation(line: 53, column: 28, scope: !2755)
!2767 = !DILocation(line: 56, column: 10, scope: !2720)
!2768 = !DILocation(line: 56, column: 3, scope: !2720)
!2769 = !DILocalVariable(name: "i", arg: 1, scope: !2770, file: !2721, line: 36, type: !293)
!2770 = distinct !DISubprogram(name: "imaxtostr", scope: !2721, file: !2721, line: 36, type: !2722, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2771, retainedNodes: !4)
!2771 = distinct !DICompileUnit(language: DW_LANG_C99, file: !291, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !292, nameTableKind: None)
!2772 = !DILocalVariable(name: "buf", arg: 2, scope: !2770, file: !2721, line: 36, type: !6)
!2773 = !DILocalVariable(name: "p", scope: !2770, file: !2721, line: 38, type: !6)
!2774 = distinct !DISubprogram(name: "set_program_name", scope: !217, file: !217, line: 39, type: !365, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!2775 = !DILocalVariable(name: "argv0", arg: 1, scope: !2774, file: !217, line: 39, type: !49)
!2776 = !DILocation(line: 39, column: 31, scope: !2774)
!2777 = !DILocalVariable(name: "slash", scope: !2774, file: !217, line: 46, type: !49)
!2778 = !DILocation(line: 46, column: 15, scope: !2774)
!2779 = !DILocalVariable(name: "base", scope: !2774, file: !217, line: 47, type: !49)
!2780 = !DILocation(line: 47, column: 15, scope: !2774)
!2781 = !DILocation(line: 51, column: 7, scope: !2782)
!2782 = distinct !DILexicalBlock(scope: !2774, file: !217, line: 51, column: 7)
!2783 = !DILocation(line: 51, column: 13, scope: !2782)
!2784 = !DILocation(line: 51, column: 7, scope: !2774)
!2785 = !DILocation(line: 55, column: 14, scope: !2786)
!2786 = distinct !DILexicalBlock(scope: !2782, file: !217, line: 52, column: 5)
!2787 = !DILocation(line: 54, column: 7, scope: !2786)
!2788 = !DILocation(line: 56, column: 7, scope: !2786)
!2789 = !DILocation(line: 59, column: 20, scope: !2774)
!2790 = !DILocation(line: 59, column: 11, scope: !2774)
!2791 = !DILocation(line: 59, column: 9, scope: !2774)
!2792 = !DILocation(line: 60, column: 11, scope: !2774)
!2793 = !DILocation(line: 60, column: 17, scope: !2774)
!2794 = !DILocation(line: 60, column: 27, scope: !2774)
!2795 = !DILocation(line: 60, column: 33, scope: !2774)
!2796 = !DILocation(line: 60, column: 39, scope: !2774)
!2797 = !DILocation(line: 60, column: 8, scope: !2774)
!2798 = !DILocation(line: 61, column: 7, scope: !2799)
!2799 = distinct !DILexicalBlock(scope: !2774, file: !217, line: 61, column: 7)
!2800 = !DILocation(line: 61, column: 14, scope: !2799)
!2801 = !DILocation(line: 61, column: 12, scope: !2799)
!2802 = !DILocation(line: 61, column: 20, scope: !2799)
!2803 = !DILocation(line: 61, column: 25, scope: !2799)
!2804 = !DILocation(line: 61, column: 37, scope: !2799)
!2805 = !DILocation(line: 61, column: 42, scope: !2799)
!2806 = !DILocation(line: 61, column: 28, scope: !2799)
!2807 = !DILocation(line: 61, column: 61, scope: !2799)
!2808 = !DILocation(line: 61, column: 7, scope: !2774)
!2809 = !DILocation(line: 63, column: 15, scope: !2810)
!2810 = distinct !DILexicalBlock(scope: !2799, file: !217, line: 62, column: 5)
!2811 = !DILocation(line: 63, column: 13, scope: !2810)
!2812 = !DILocation(line: 64, column: 20, scope: !2813)
!2813 = distinct !DILexicalBlock(scope: !2810, file: !217, line: 64, column: 11)
!2814 = !DILocation(line: 64, column: 11, scope: !2813)
!2815 = !DILocation(line: 64, column: 36, scope: !2813)
!2816 = !DILocation(line: 64, column: 11, scope: !2810)
!2817 = !DILocation(line: 66, column: 19, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2813, file: !217, line: 65, column: 9)
!2819 = !DILocation(line: 66, column: 24, scope: !2818)
!2820 = !DILocation(line: 66, column: 17, scope: !2818)
!2821 = !DILocation(line: 70, column: 52, scope: !2818)
!2822 = !DILocation(line: 70, column: 41, scope: !2818)
!2823 = !DILocation(line: 72, column: 9, scope: !2818)
!2824 = !DILocation(line: 73, column: 5, scope: !2810)
!2825 = !DILocation(line: 84, column: 18, scope: !2774)
!2826 = !DILocation(line: 84, column: 16, scope: !2774)
!2827 = !DILocation(line: 90, column: 38, scope: !2774)
!2828 = !DILocation(line: 90, column: 27, scope: !2774)
!2829 = !DILocation(line: 92, column: 1, scope: !2774)
!2830 = distinct !DISubprogram(name: "set_char_quoting", scope: !241, file: !241, line: 152, type: !2831, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!2831 = !DISubroutineType(types: !2832)
!2832 = !{!53, !2833, !7, !53}
!2833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!2834 = !DILocalVariable(name: "o", arg: 1, scope: !2830, file: !241, line: 152, type: !2833)
!2835 = !DILocation(line: 152, column: 43, scope: !2830)
!2836 = !DILocalVariable(name: "c", arg: 2, scope: !2830, file: !241, line: 152, type: !7)
!2837 = !DILocation(line: 152, column: 51, scope: !2830)
!2838 = !DILocalVariable(name: "i", arg: 3, scope: !2830, file: !241, line: 152, type: !53)
!2839 = !DILocation(line: 152, column: 58, scope: !2830)
!2840 = !DILocalVariable(name: "uc", scope: !2830, file: !241, line: 154, type: !317)
!2841 = !DILocation(line: 154, column: 17, scope: !2830)
!2842 = !DILocation(line: 154, column: 22, scope: !2830)
!2843 = !DILocalVariable(name: "p", scope: !2830, file: !241, line: 155, type: !2844)
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 64)
!2845 = !DILocation(line: 155, column: 17, scope: !2830)
!2846 = !DILocation(line: 156, column: 6, scope: !2830)
!2847 = !DILocation(line: 156, column: 10, scope: !2830)
!2848 = !DILocation(line: 156, column: 41, scope: !2830)
!2849 = !DILocation(line: 156, column: 5, scope: !2830)
!2850 = !DILocation(line: 156, column: 59, scope: !2830)
!2851 = !DILocation(line: 156, column: 62, scope: !2830)
!2852 = !DILocation(line: 156, column: 57, scope: !2830)
!2853 = !DILocalVariable(name: "shift", scope: !2830, file: !241, line: 157, type: !53)
!2854 = !DILocation(line: 157, column: 7, scope: !2830)
!2855 = !DILocation(line: 157, column: 15, scope: !2830)
!2856 = !DILocation(line: 157, column: 18, scope: !2830)
!2857 = !DILocalVariable(name: "r", scope: !2830, file: !241, line: 158, type: !53)
!2858 = !DILocation(line: 158, column: 7, scope: !2830)
!2859 = !DILocation(line: 158, column: 13, scope: !2830)
!2860 = !DILocation(line: 158, column: 12, scope: !2830)
!2861 = !DILocation(line: 158, column: 18, scope: !2830)
!2862 = !DILocation(line: 158, column: 15, scope: !2830)
!2863 = !DILocation(line: 158, column: 25, scope: !2830)
!2864 = !DILocation(line: 159, column: 11, scope: !2830)
!2865 = !DILocation(line: 159, column: 13, scope: !2830)
!2866 = !DILocation(line: 159, column: 20, scope: !2830)
!2867 = !DILocation(line: 159, column: 18, scope: !2830)
!2868 = !DILocation(line: 159, column: 26, scope: !2830)
!2869 = !DILocation(line: 159, column: 23, scope: !2830)
!2870 = !DILocation(line: 159, column: 4, scope: !2830)
!2871 = !DILocation(line: 159, column: 6, scope: !2830)
!2872 = !DILocation(line: 160, column: 10, scope: !2830)
!2873 = !DILocation(line: 160, column: 3, scope: !2830)
!2874 = !DILocalVariable(name: "shift", scope: !2875, file: !241, line: 157, type: !53)
!2875 = distinct !DISubprogram(name: "set_char_quoting", scope: !241, file: !241, line: 152, type: !2876, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2886, retainedNodes: !4)
!2876 = !DISubroutineType(types: !2877)
!2877 = !{!53, !2878, !7, !53}
!2878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2879, size: 64)
!2879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !2880)
!2880 = !{!2881, !2882, !2883, !2884, !2885}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2879, file: !241, line: 68, baseType: !223, size: 32)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2879, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2879, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2879, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2879, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!2886 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !2887, nameTableKind: None)
!2887 = !{!2888, !2890, !2892, !2894, !2896, !2898, !2905, !2907}
!2888 = !DIGlobalVariableExpression(var: !2889, expr: !DIExpression())
!2889 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2886, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!2890 = !DIGlobalVariableExpression(var: !2891, expr: !DIExpression())
!2891 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2886, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!2892 = !DIGlobalVariableExpression(var: !2893, expr: !DIExpression())
!2893 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2886, file: !241, line: 1052, type: !2879, isLocal: false, isDefinition: true)
!2894 = !DIGlobalVariableExpression(var: !2895, expr: !DIExpression())
!2895 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2886, file: !241, line: 116, type: !2879, isLocal: true, isDefinition: true)
!2896 = !DIGlobalVariableExpression(var: !2897, expr: !DIExpression())
!2897 = distinct !DIGlobalVariable(name: "slot0", scope: !2886, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!2898 = !DIGlobalVariableExpression(var: !2899, expr: !DIExpression())
!2899 = distinct !DIGlobalVariable(name: "slotvec", scope: !2886, file: !241, line: 845, type: !2900, isLocal: true, isDefinition: true)
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 64)
!2901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !2902)
!2902 = !{!2903, !2904}
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2901, file: !241, line: 836, baseType: !110, size: 64)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2901, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!2905 = !DIGlobalVariableExpression(var: !2906, expr: !DIExpression())
!2906 = distinct !DIGlobalVariable(name: "nslots", scope: !2886, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!2907 = !DIGlobalVariableExpression(var: !2908, expr: !DIExpression())
!2908 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2886, file: !241, line: 844, type: !2901, isLocal: true, isDefinition: true)
!2909 = !DILocalVariable(name: "r", scope: !2875, file: !241, line: 158, type: !53)
!2910 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !241, file: !241, line: 982, type: !2911, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!2911 = !DISubroutineType(types: !2912)
!2912 = !{!6, !49, !110, !7}
!2913 = !DILocalVariable(name: "arg", arg: 1, scope: !2910, file: !241, line: 982, type: !49)
!2914 = !DILocation(line: 982, column: 32, scope: !2910)
!2915 = !DILocalVariable(name: "argsize", arg: 2, scope: !2910, file: !241, line: 982, type: !110)
!2916 = !DILocation(line: 982, column: 44, scope: !2910)
!2917 = !DILocalVariable(name: "ch", arg: 3, scope: !2910, file: !241, line: 982, type: !7)
!2918 = !DILocation(line: 982, column: 58, scope: !2910)
!2919 = !DILocalVariable(name: "options", scope: !2910, file: !241, line: 984, type: !254)
!2920 = !DILocation(line: 984, column: 26, scope: !2910)
!2921 = !DILocation(line: 985, column: 13, scope: !2910)
!2922 = !DILocation(line: 986, column: 31, scope: !2910)
!2923 = !DILocation(line: 986, column: 3, scope: !2910)
!2924 = !DILocation(line: 987, column: 33, scope: !2910)
!2925 = !DILocation(line: 987, column: 38, scope: !2910)
!2926 = !DILocation(line: 987, column: 10, scope: !2910)
!2927 = !DILocation(line: 987, column: 3, scope: !2910)
!2928 = distinct !DISubprogram(name: "quotearg_n_options", scope: !241, file: !241, line: 877, type: !2929, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!2929 = !DISubroutineType(types: !2930)
!2930 = !{!6, !53, !49, !110, !2931}
!2931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2932, size: 64)
!2932 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !254)
!2933 = !DILocalVariable(name: "n", arg: 1, scope: !2928, file: !241, line: 877, type: !53)
!2934 = !DILocation(line: 877, column: 25, scope: !2928)
!2935 = !DILocalVariable(name: "arg", arg: 2, scope: !2928, file: !241, line: 877, type: !49)
!2936 = !DILocation(line: 877, column: 40, scope: !2928)
!2937 = !DILocalVariable(name: "argsize", arg: 3, scope: !2928, file: !241, line: 877, type: !110)
!2938 = !DILocation(line: 877, column: 52, scope: !2928)
!2939 = !DILocalVariable(name: "options", arg: 4, scope: !2928, file: !241, line: 878, type: !2931)
!2940 = !DILocation(line: 878, column: 51, scope: !2928)
!2941 = !DILocalVariable(name: "e", scope: !2928, file: !241, line: 880, type: !53)
!2942 = !DILocation(line: 880, column: 7, scope: !2928)
!2943 = !DILocation(line: 880, column: 11, scope: !2928)
!2944 = !DILocalVariable(name: "sv", scope: !2928, file: !241, line: 882, type: !268)
!2945 = !DILocation(line: 882, column: 19, scope: !2928)
!2946 = !DILocation(line: 882, column: 24, scope: !2928)
!2947 = !DILocation(line: 884, column: 7, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2928, file: !241, line: 884, column: 7)
!2949 = !DILocation(line: 884, column: 9, scope: !2948)
!2950 = !DILocation(line: 884, column: 7, scope: !2928)
!2951 = !DILocation(line: 885, column: 5, scope: !2948)
!2952 = !DILocation(line: 887, column: 7, scope: !2953)
!2953 = distinct !DILexicalBlock(scope: !2928, file: !241, line: 887, column: 7)
!2954 = !DILocation(line: 887, column: 17, scope: !2953)
!2955 = !DILocation(line: 887, column: 14, scope: !2953)
!2956 = !DILocation(line: 887, column: 7, scope: !2928)
!2957 = !DILocalVariable(name: "preallocated", scope: !2958, file: !241, line: 889, type: !18)
!2958 = distinct !DILexicalBlock(scope: !2953, file: !241, line: 888, column: 5)
!2959 = !DILocation(line: 889, column: 12, scope: !2958)
!2960 = !DILocation(line: 889, column: 28, scope: !2958)
!2961 = !DILocation(line: 889, column: 31, scope: !2958)
!2962 = !DILocalVariable(name: "nmax", scope: !2958, file: !241, line: 890, type: !53)
!2963 = !DILocation(line: 890, column: 11, scope: !2958)
!2964 = !DILocation(line: 892, column: 11, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2958, file: !241, line: 892, column: 11)
!2966 = !DILocation(line: 892, column: 18, scope: !2965)
!2967 = !DILocation(line: 892, column: 16, scope: !2965)
!2968 = !DILocation(line: 892, column: 11, scope: !2958)
!2969 = !DILocation(line: 893, column: 9, scope: !2965)
!2970 = !DILocation(line: 895, column: 32, scope: !2958)
!2971 = !DILocation(line: 895, column: 54, scope: !2958)
!2972 = !DILocation(line: 895, column: 59, scope: !2958)
!2973 = !DILocation(line: 895, column: 61, scope: !2958)
!2974 = !DILocation(line: 895, column: 58, scope: !2958)
!2975 = !DILocation(line: 895, column: 66, scope: !2958)
!2976 = !DILocation(line: 895, column: 22, scope: !2958)
!2977 = !DILocation(line: 895, column: 20, scope: !2958)
!2978 = !DILocation(line: 895, column: 15, scope: !2958)
!2979 = !DILocation(line: 896, column: 11, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2958, file: !241, line: 896, column: 11)
!2981 = !DILocation(line: 896, column: 11, scope: !2958)
!2982 = !DILocation(line: 897, column: 10, scope: !2980)
!2983 = !DILocation(line: 897, column: 15, scope: !2980)
!2984 = !DILocation(line: 897, column: 9, scope: !2980)
!2985 = !DILocation(line: 898, column: 15, scope: !2958)
!2986 = !DILocation(line: 898, column: 20, scope: !2958)
!2987 = !DILocation(line: 898, column: 18, scope: !2958)
!2988 = !DILocation(line: 898, column: 7, scope: !2958)
!2989 = !DILocation(line: 898, column: 32, scope: !2958)
!2990 = !DILocation(line: 898, column: 34, scope: !2958)
!2991 = !DILocation(line: 898, column: 40, scope: !2958)
!2992 = !DILocation(line: 898, column: 38, scope: !2958)
!2993 = !DILocation(line: 898, column: 31, scope: !2958)
!2994 = !DILocation(line: 898, column: 48, scope: !2958)
!2995 = !DILocation(line: 899, column: 16, scope: !2958)
!2996 = !DILocation(line: 899, column: 18, scope: !2958)
!2997 = !DILocation(line: 899, column: 14, scope: !2958)
!2998 = !DILocation(line: 900, column: 5, scope: !2958)
!2999 = !DILocalVariable(name: "size", scope: !3000, file: !241, line: 903, type: !110)
!3000 = distinct !DILexicalBlock(scope: !2928, file: !241, line: 902, column: 3)
!3001 = !DILocation(line: 903, column: 12, scope: !3000)
!3002 = !DILocation(line: 903, column: 19, scope: !3000)
!3003 = !DILocation(line: 903, column: 22, scope: !3000)
!3004 = !DILocation(line: 903, column: 25, scope: !3000)
!3005 = !DILocalVariable(name: "val", scope: !3000, file: !241, line: 904, type: !6)
!3006 = !DILocation(line: 904, column: 11, scope: !3000)
!3007 = !DILocation(line: 904, column: 17, scope: !3000)
!3008 = !DILocation(line: 904, column: 20, scope: !3000)
!3009 = !DILocation(line: 904, column: 23, scope: !3000)
!3010 = !DILocalVariable(name: "flags", scope: !3000, file: !241, line: 906, type: !53)
!3011 = !DILocation(line: 906, column: 9, scope: !3000)
!3012 = !DILocation(line: 906, column: 17, scope: !3000)
!3013 = !DILocation(line: 906, column: 26, scope: !3000)
!3014 = !DILocation(line: 906, column: 32, scope: !3000)
!3015 = !DILocalVariable(name: "qsize", scope: !3000, file: !241, line: 907, type: !110)
!3016 = !DILocation(line: 907, column: 12, scope: !3000)
!3017 = !DILocation(line: 907, column: 46, scope: !3000)
!3018 = !DILocation(line: 907, column: 51, scope: !3000)
!3019 = !DILocation(line: 907, column: 57, scope: !3000)
!3020 = !DILocation(line: 907, column: 62, scope: !3000)
!3021 = !DILocation(line: 908, column: 46, scope: !3000)
!3022 = !DILocation(line: 908, column: 55, scope: !3000)
!3023 = !DILocation(line: 908, column: 62, scope: !3000)
!3024 = !DILocation(line: 909, column: 46, scope: !3000)
!3025 = !DILocation(line: 909, column: 55, scope: !3000)
!3026 = !DILocation(line: 910, column: 46, scope: !3000)
!3027 = !DILocation(line: 910, column: 55, scope: !3000)
!3028 = !DILocation(line: 911, column: 46, scope: !3000)
!3029 = !DILocation(line: 911, column: 55, scope: !3000)
!3030 = !DILocation(line: 907, column: 20, scope: !3000)
!3031 = !DILocation(line: 913, column: 9, scope: !3032)
!3032 = distinct !DILexicalBlock(scope: !3000, file: !241, line: 913, column: 9)
!3033 = !DILocation(line: 913, column: 17, scope: !3032)
!3034 = !DILocation(line: 913, column: 14, scope: !3032)
!3035 = !DILocation(line: 913, column: 9, scope: !3000)
!3036 = !DILocation(line: 915, column: 29, scope: !3037)
!3037 = distinct !DILexicalBlock(scope: !3032, file: !241, line: 914, column: 7)
!3038 = !DILocation(line: 915, column: 35, scope: !3037)
!3039 = !DILocation(line: 915, column: 27, scope: !3037)
!3040 = !DILocation(line: 915, column: 9, scope: !3037)
!3041 = !DILocation(line: 915, column: 12, scope: !3037)
!3042 = !DILocation(line: 915, column: 15, scope: !3037)
!3043 = !DILocation(line: 915, column: 20, scope: !3037)
!3044 = !DILocation(line: 916, column: 13, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3037, file: !241, line: 916, column: 13)
!3046 = !DILocation(line: 916, column: 17, scope: !3045)
!3047 = !DILocation(line: 916, column: 13, scope: !3037)
!3048 = !DILocation(line: 917, column: 17, scope: !3045)
!3049 = !DILocation(line: 917, column: 11, scope: !3045)
!3050 = !DILocation(line: 918, column: 39, scope: !3037)
!3051 = !DILocation(line: 918, column: 27, scope: !3037)
!3052 = !DILocation(line: 918, column: 25, scope: !3037)
!3053 = !DILocation(line: 918, column: 9, scope: !3037)
!3054 = !DILocation(line: 918, column: 12, scope: !3037)
!3055 = !DILocation(line: 918, column: 15, scope: !3037)
!3056 = !DILocation(line: 918, column: 19, scope: !3037)
!3057 = !DILocation(line: 919, column: 35, scope: !3037)
!3058 = !DILocation(line: 919, column: 40, scope: !3037)
!3059 = !DILocation(line: 919, column: 46, scope: !3037)
!3060 = !DILocation(line: 919, column: 51, scope: !3037)
!3061 = !DILocation(line: 919, column: 60, scope: !3037)
!3062 = !DILocation(line: 919, column: 69, scope: !3037)
!3063 = !DILocation(line: 920, column: 35, scope: !3037)
!3064 = !DILocation(line: 920, column: 42, scope: !3037)
!3065 = !DILocation(line: 920, column: 51, scope: !3037)
!3066 = !DILocation(line: 921, column: 35, scope: !3037)
!3067 = !DILocation(line: 921, column: 44, scope: !3037)
!3068 = !DILocation(line: 922, column: 35, scope: !3037)
!3069 = !DILocation(line: 922, column: 44, scope: !3037)
!3070 = !DILocation(line: 919, column: 9, scope: !3037)
!3071 = !DILocation(line: 923, column: 7, scope: !3037)
!3072 = !DILocation(line: 925, column: 13, scope: !3000)
!3073 = !DILocation(line: 925, column: 5, scope: !3000)
!3074 = !DILocation(line: 925, column: 11, scope: !3000)
!3075 = !DILocation(line: 926, column: 12, scope: !3000)
!3076 = !DILocation(line: 926, column: 5, scope: !3000)
!3077 = !DILocalVariable(name: "n", arg: 1, scope: !3078, file: !241, line: 877, type: !53)
!3078 = distinct !DISubprogram(name: "quotearg_n_options", scope: !241, file: !241, line: 877, type: !3079, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3090, retainedNodes: !4)
!3079 = !DISubroutineType(types: !3080)
!3080 = !{!6, !53, !49, !110, !3081}
!3081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3082, size: 64)
!3082 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3083)
!3083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !3084)
!3084 = !{!3085, !3086, !3087, !3088, !3089}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3083, file: !241, line: 68, baseType: !223, size: 32)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3083, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3083, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3083, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3083, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!3090 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !3091, nameTableKind: None)
!3091 = !{!3092, !3094, !3096, !3098, !3100, !3102, !3109, !3111}
!3092 = !DIGlobalVariableExpression(var: !3093, expr: !DIExpression())
!3093 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3090, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!3094 = !DIGlobalVariableExpression(var: !3095, expr: !DIExpression())
!3095 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3090, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!3096 = !DIGlobalVariableExpression(var: !3097, expr: !DIExpression())
!3097 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3090, file: !241, line: 1052, type: !3083, isLocal: false, isDefinition: true)
!3098 = !DIGlobalVariableExpression(var: !3099, expr: !DIExpression())
!3099 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3090, file: !241, line: 116, type: !3083, isLocal: true, isDefinition: true)
!3100 = !DIGlobalVariableExpression(var: !3101, expr: !DIExpression())
!3101 = distinct !DIGlobalVariable(name: "slot0", scope: !3090, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!3102 = !DIGlobalVariableExpression(var: !3103, expr: !DIExpression())
!3103 = distinct !DIGlobalVariable(name: "slotvec", scope: !3090, file: !241, line: 845, type: !3104, isLocal: true, isDefinition: true)
!3104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3105, size: 64)
!3105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !3106)
!3106 = !{!3107, !3108}
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3105, file: !241, line: 836, baseType: !110, size: 64)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3105, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!3109 = !DIGlobalVariableExpression(var: !3110, expr: !DIExpression())
!3110 = distinct !DIGlobalVariable(name: "nslots", scope: !3090, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!3111 = !DIGlobalVariableExpression(var: !3112, expr: !DIExpression())
!3112 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3090, file: !241, line: 844, type: !3105, isLocal: true, isDefinition: true)
!3113 = !DILocalVariable(name: "arg", arg: 2, scope: !3078, file: !241, line: 877, type: !49)
!3114 = !DILocalVariable(name: "argsize", arg: 3, scope: !3078, file: !241, line: 877, type: !110)
!3115 = !DILocalVariable(name: "options", arg: 4, scope: !3078, file: !241, line: 878, type: !3081)
!3116 = !DILocalVariable(name: "e", scope: !3078, file: !241, line: 880, type: !53)
!3117 = !DILocalVariable(name: "sv", scope: !3078, file: !241, line: 882, type: !3104)
!3118 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !241, file: !241, line: 256, type: !3119, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!3119 = !DISubroutineType(types: !3120)
!3120 = !{!110, !6, !110, !49, !110, !223, !53, !3121, !49, !49}
!3121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3122, size: 64)
!3122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !180)
!3123 = !DILocalVariable(name: "buffer", arg: 1, scope: !3118, file: !241, line: 256, type: !6)
!3124 = !DILocation(line: 256, column: 33, scope: !3118)
!3125 = !DILocalVariable(name: "buffersize", arg: 2, scope: !3118, file: !241, line: 256, type: !110)
!3126 = !DILocation(line: 256, column: 48, scope: !3118)
!3127 = !DILocalVariable(name: "arg", arg: 3, scope: !3118, file: !241, line: 257, type: !49)
!3128 = !DILocation(line: 257, column: 39, scope: !3118)
!3129 = !DILocalVariable(name: "argsize", arg: 4, scope: !3118, file: !241, line: 257, type: !110)
!3130 = !DILocation(line: 257, column: 51, scope: !3118)
!3131 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !3118, file: !241, line: 258, type: !223)
!3132 = !DILocation(line: 258, column: 46, scope: !3118)
!3133 = !DILocalVariable(name: "flags", arg: 6, scope: !3118, file: !241, line: 258, type: !53)
!3134 = !DILocation(line: 258, column: 65, scope: !3118)
!3135 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !3118, file: !241, line: 259, type: !3121)
!3136 = !DILocation(line: 259, column: 47, scope: !3118)
!3137 = !DILocalVariable(name: "left_quote", arg: 8, scope: !3118, file: !241, line: 260, type: !49)
!3138 = !DILocation(line: 260, column: 39, scope: !3118)
!3139 = !DILocalVariable(name: "right_quote", arg: 9, scope: !3118, file: !241, line: 261, type: !49)
!3140 = !DILocation(line: 261, column: 39, scope: !3118)
!3141 = !DILocalVariable(name: "i", scope: !3118, file: !241, line: 263, type: !110)
!3142 = !DILocation(line: 263, column: 10, scope: !3118)
!3143 = !DILocalVariable(name: "len", scope: !3118, file: !241, line: 264, type: !110)
!3144 = !DILocation(line: 264, column: 10, scope: !3118)
!3145 = !DILocalVariable(name: "orig_buffersize", scope: !3118, file: !241, line: 265, type: !110)
!3146 = !DILocation(line: 265, column: 10, scope: !3118)
!3147 = !DILocalVariable(name: "quote_string", scope: !3118, file: !241, line: 266, type: !49)
!3148 = !DILocation(line: 266, column: 15, scope: !3118)
!3149 = !DILocalVariable(name: "quote_string_len", scope: !3118, file: !241, line: 267, type: !110)
!3150 = !DILocation(line: 267, column: 10, scope: !3118)
!3151 = !DILocalVariable(name: "backslash_escapes", scope: !3118, file: !241, line: 268, type: !18)
!3152 = !DILocation(line: 268, column: 8, scope: !3118)
!3153 = !DILocalVariable(name: "unibyte_locale", scope: !3118, file: !241, line: 269, type: !18)
!3154 = !DILocation(line: 269, column: 8, scope: !3118)
!3155 = !DILocation(line: 269, column: 25, scope: !3118)
!3156 = !DILocation(line: 269, column: 36, scope: !3118)
!3157 = !DILocalVariable(name: "elide_outer_quotes", scope: !3118, file: !241, line: 270, type: !18)
!3158 = !DILocation(line: 270, column: 8, scope: !3118)
!3159 = !DILocation(line: 270, column: 30, scope: !3118)
!3160 = !DILocation(line: 270, column: 36, scope: !3118)
!3161 = !DILocation(line: 270, column: 61, scope: !3118)
!3162 = !DILocalVariable(name: "pending_shell_escape_end", scope: !3118, file: !241, line: 271, type: !18)
!3163 = !DILocation(line: 271, column: 8, scope: !3118)
!3164 = !DILocalVariable(name: "encountered_single_quote", scope: !3118, file: !241, line: 272, type: !18)
!3165 = !DILocation(line: 272, column: 8, scope: !3118)
!3166 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !3118, file: !241, line: 273, type: !18)
!3167 = !DILocation(line: 273, column: 8, scope: !3118)
!3168 = !DILocation(line: 273, column: 3, scope: !3118)
!3169 = !DILabel(scope: !3118, name: "process_input", file: !241, line: 314)
!3170 = !DILocation(line: 314, column: 2, scope: !3118)
!3171 = !DILocation(line: 316, column: 11, scope: !3118)
!3172 = !DILocation(line: 316, column: 3, scope: !3118)
!3173 = !DILocation(line: 319, column: 21, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3118, file: !241, line: 317, column: 5)
!3175 = !DILocation(line: 320, column: 26, scope: !3174)
!3176 = !DILocation(line: 321, column: 7, scope: !3174)
!3177 = !DILocation(line: 323, column: 12, scope: !3178)
!3178 = distinct !DILexicalBlock(scope: !3174, file: !241, line: 323, column: 11)
!3179 = !DILocation(line: 323, column: 11, scope: !3174)
!3180 = !DILocation(line: 324, column: 9, scope: !3178)
!3181 = !DILocation(line: 324, column: 9, scope: !3182)
!3182 = distinct !DILexicalBlock(scope: !3183, file: !241, line: 324, column: 9)
!3183 = distinct !DILexicalBlock(scope: !3178, file: !241, line: 324, column: 9)
!3184 = !DILocation(line: 324, column: 9, scope: !3183)
!3185 = !DILocation(line: 325, column: 25, scope: !3174)
!3186 = !DILocation(line: 326, column: 20, scope: !3174)
!3187 = !DILocation(line: 327, column: 24, scope: !3174)
!3188 = !DILocation(line: 328, column: 7, scope: !3174)
!3189 = !DILocation(line: 331, column: 25, scope: !3174)
!3190 = !DILocation(line: 332, column: 26, scope: !3174)
!3191 = !DILocation(line: 333, column: 7, scope: !3174)
!3192 = !DILocation(line: 339, column: 13, scope: !3193)
!3193 = distinct !DILexicalBlock(scope: !3194, file: !241, line: 339, column: 13)
!3194 = distinct !DILexicalBlock(scope: !3174, file: !241, line: 338, column: 7)
!3195 = !DILocation(line: 339, column: 27, scope: !3193)
!3196 = !DILocation(line: 339, column: 13, scope: !3194)
!3197 = !DILocation(line: 362, column: 50, scope: !3198)
!3198 = distinct !DILexicalBlock(scope: !3193, file: !241, line: 340, column: 11)
!3199 = !DILocation(line: 362, column: 26, scope: !3198)
!3200 = !DILocation(line: 362, column: 24, scope: !3198)
!3201 = !DILocation(line: 363, column: 51, scope: !3198)
!3202 = !DILocation(line: 363, column: 27, scope: !3198)
!3203 = !DILocation(line: 363, column: 25, scope: !3198)
!3204 = !DILocation(line: 364, column: 11, scope: !3198)
!3205 = !DILocation(line: 365, column: 14, scope: !3206)
!3206 = distinct !DILexicalBlock(scope: !3194, file: !241, line: 365, column: 13)
!3207 = !DILocation(line: 365, column: 13, scope: !3194)
!3208 = !DILocation(line: 366, column: 31, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !3206, file: !241, line: 366, column: 11)
!3210 = !DILocation(line: 366, column: 29, scope: !3209)
!3211 = !DILocation(line: 366, column: 16, scope: !3209)
!3212 = !DILocation(line: 366, column: 44, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3209, file: !241, line: 366, column: 11)
!3214 = !DILocation(line: 366, column: 43, scope: !3213)
!3215 = !DILocation(line: 366, column: 11, scope: !3209)
!3216 = !DILocation(line: 367, column: 13, scope: !3213)
!3217 = !DILocation(line: 367, column: 13, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3219, file: !241, line: 367, column: 13)
!3219 = distinct !DILexicalBlock(scope: !3213, file: !241, line: 367, column: 13)
!3220 = !DILocation(line: 367, column: 13, scope: !3219)
!3221 = !DILocation(line: 366, column: 70, scope: !3213)
!3222 = !DILocation(line: 366, column: 11, scope: !3213)
!3223 = distinct !{!3223, !3215, !3224}
!3224 = !DILocation(line: 367, column: 13, scope: !3209)
!3225 = !DILocation(line: 368, column: 27, scope: !3194)
!3226 = !DILocation(line: 369, column: 24, scope: !3194)
!3227 = !DILocation(line: 369, column: 22, scope: !3194)
!3228 = !DILocation(line: 370, column: 36, scope: !3194)
!3229 = !DILocation(line: 370, column: 28, scope: !3194)
!3230 = !DILocation(line: 370, column: 26, scope: !3194)
!3231 = !DILocation(line: 372, column: 7, scope: !3174)
!3232 = !DILocation(line: 375, column: 25, scope: !3174)
!3233 = !DILocation(line: 376, column: 7, scope: !3174)
!3234 = !DILocation(line: 378, column: 26, scope: !3174)
!3235 = !DILocation(line: 379, column: 7, scope: !3174)
!3236 = !DILocation(line: 381, column: 12, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3174, file: !241, line: 381, column: 11)
!3238 = !DILocation(line: 381, column: 11, scope: !3174)
!3239 = !DILocation(line: 382, column: 27, scope: !3237)
!3240 = !DILocation(line: 382, column: 9, scope: !3237)
!3241 = !DILocation(line: 383, column: 7, scope: !3174)
!3242 = !DILocation(line: 385, column: 21, scope: !3174)
!3243 = !DILocation(line: 386, column: 12, scope: !3244)
!3244 = distinct !DILexicalBlock(scope: !3174, file: !241, line: 386, column: 11)
!3245 = !DILocation(line: 386, column: 11, scope: !3174)
!3246 = !DILocation(line: 387, column: 9, scope: !3244)
!3247 = !DILocation(line: 387, column: 9, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3249, file: !241, line: 387, column: 9)
!3249 = distinct !DILexicalBlock(scope: !3244, file: !241, line: 387, column: 9)
!3250 = !DILocation(line: 387, column: 9, scope: !3249)
!3251 = !DILocation(line: 388, column: 20, scope: !3174)
!3252 = !DILocation(line: 389, column: 24, scope: !3174)
!3253 = !DILocation(line: 390, column: 7, scope: !3174)
!3254 = !DILocation(line: 393, column: 26, scope: !3174)
!3255 = !DILocation(line: 394, column: 7, scope: !3174)
!3256 = !DILocation(line: 397, column: 7, scope: !3174)
!3257 = !DILocation(line: 400, column: 10, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !3118, file: !241, line: 400, column: 3)
!3259 = !DILocation(line: 400, column: 8, scope: !3258)
!3260 = !DILocation(line: 400, column: 19, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3258, file: !241, line: 400, column: 3)
!3262 = !DILocation(line: 400, column: 27, scope: !3261)
!3263 = !DILocation(line: 400, column: 41, scope: !3261)
!3264 = !DILocation(line: 400, column: 45, scope: !3261)
!3265 = !DILocation(line: 400, column: 48, scope: !3261)
!3266 = !DILocation(line: 400, column: 58, scope: !3261)
!3267 = !DILocation(line: 400, column: 63, scope: !3261)
!3268 = !DILocation(line: 400, column: 60, scope: !3261)
!3269 = !DILocation(line: 400, column: 16, scope: !3261)
!3270 = !DILocation(line: 400, column: 3, scope: !3258)
!3271 = !DILocalVariable(name: "c", scope: !3272, file: !241, line: 402, type: !317)
!3272 = distinct !DILexicalBlock(scope: !3261, file: !241, line: 401, column: 5)
!3273 = !DILocation(line: 402, column: 21, scope: !3272)
!3274 = !DILocalVariable(name: "esc", scope: !3272, file: !241, line: 403, type: !317)
!3275 = !DILocation(line: 403, column: 21, scope: !3272)
!3276 = !DILocalVariable(name: "is_right_quote", scope: !3272, file: !241, line: 404, type: !18)
!3277 = !DILocation(line: 404, column: 12, scope: !3272)
!3278 = !DILocalVariable(name: "escaping", scope: !3272, file: !241, line: 405, type: !18)
!3279 = !DILocation(line: 405, column: 12, scope: !3272)
!3280 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !3272, file: !241, line: 406, type: !18)
!3281 = !DILocation(line: 406, column: 12, scope: !3272)
!3282 = !DILocation(line: 408, column: 11, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !3272, file: !241, line: 408, column: 11)
!3284 = !DILocation(line: 409, column: 11, scope: !3283)
!3285 = !DILocation(line: 409, column: 14, scope: !3283)
!3286 = !DILocation(line: 409, column: 28, scope: !3283)
!3287 = !DILocation(line: 410, column: 11, scope: !3283)
!3288 = !DILocation(line: 410, column: 14, scope: !3283)
!3289 = !DILocation(line: 411, column: 11, scope: !3283)
!3290 = !DILocation(line: 411, column: 15, scope: !3283)
!3291 = !DILocation(line: 411, column: 19, scope: !3283)
!3292 = !DILocation(line: 411, column: 17, scope: !3283)
!3293 = !DILocation(line: 412, column: 19, scope: !3283)
!3294 = !DILocation(line: 412, column: 27, scope: !3283)
!3295 = !DILocation(line: 412, column: 39, scope: !3283)
!3296 = !DILocation(line: 412, column: 46, scope: !3283)
!3297 = !DILocation(line: 412, column: 44, scope: !3283)
!3298 = !DILocation(line: 416, column: 40, scope: !3283)
!3299 = !DILocation(line: 416, column: 32, scope: !3283)
!3300 = !DILocation(line: 416, column: 30, scope: !3283)
!3301 = !DILocation(line: 416, column: 48, scope: !3283)
!3302 = !DILocation(line: 412, column: 15, scope: !3283)
!3303 = !DILocation(line: 417, column: 11, scope: !3283)
!3304 = !DILocation(line: 417, column: 22, scope: !3283)
!3305 = !DILocation(line: 417, column: 28, scope: !3283)
!3306 = !DILocation(line: 417, column: 26, scope: !3283)
!3307 = !DILocation(line: 417, column: 31, scope: !3283)
!3308 = !DILocation(line: 417, column: 45, scope: !3283)
!3309 = !DILocation(line: 417, column: 14, scope: !3283)
!3310 = !DILocation(line: 417, column: 63, scope: !3283)
!3311 = !DILocation(line: 408, column: 11, scope: !3272)
!3312 = !DILocation(line: 419, column: 15, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3314, file: !241, line: 419, column: 15)
!3314 = distinct !DILexicalBlock(scope: !3283, file: !241, line: 418, column: 9)
!3315 = !DILocation(line: 419, column: 15, scope: !3314)
!3316 = !DILocation(line: 420, column: 13, scope: !3313)
!3317 = !DILocation(line: 421, column: 26, scope: !3314)
!3318 = !DILocation(line: 422, column: 9, scope: !3314)
!3319 = !DILocation(line: 424, column: 11, scope: !3272)
!3320 = !DILocation(line: 424, column: 15, scope: !3272)
!3321 = !DILocation(line: 424, column: 9, scope: !3272)
!3322 = !DILocation(line: 425, column: 15, scope: !3272)
!3323 = !DILocation(line: 425, column: 7, scope: !3272)
!3324 = !DILocation(line: 428, column: 15, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !3326, file: !241, line: 428, column: 15)
!3326 = distinct !DILexicalBlock(scope: !3272, file: !241, line: 426, column: 9)
!3327 = !DILocation(line: 428, column: 15, scope: !3326)
!3328 = !DILocation(line: 430, column: 15, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3325, file: !241, line: 429, column: 13)
!3330 = !DILocation(line: 430, column: 15, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3332, file: !241, line: 430, column: 15)
!3332 = distinct !DILexicalBlock(scope: !3329, file: !241, line: 430, column: 15)
!3333 = !DILocation(line: 430, column: 15, scope: !3332)
!3334 = !DILocation(line: 430, column: 15, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3332, file: !241, line: 430, column: 15)
!3336 = !DILocation(line: 430, column: 15, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3335, file: !241, line: 430, column: 15)
!3338 = !DILocation(line: 430, column: 15, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3340, file: !241, line: 430, column: 15)
!3340 = distinct !DILexicalBlock(scope: !3337, file: !241, line: 430, column: 15)
!3341 = !DILocation(line: 430, column: 15, scope: !3340)
!3342 = !DILocation(line: 430, column: 15, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3344, file: !241, line: 430, column: 15)
!3344 = distinct !DILexicalBlock(scope: !3337, file: !241, line: 430, column: 15)
!3345 = !DILocation(line: 430, column: 15, scope: !3344)
!3346 = !DILocation(line: 430, column: 15, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3348, file: !241, line: 430, column: 15)
!3348 = distinct !DILexicalBlock(scope: !3337, file: !241, line: 430, column: 15)
!3349 = !DILocation(line: 430, column: 15, scope: !3348)
!3350 = !DILocation(line: 430, column: 15, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3352, file: !241, line: 430, column: 15)
!3352 = distinct !DILexicalBlock(scope: !3332, file: !241, line: 430, column: 15)
!3353 = !DILocation(line: 430, column: 15, scope: !3352)
!3354 = !DILocation(line: 437, column: 19, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3329, file: !241, line: 437, column: 19)
!3356 = !DILocation(line: 437, column: 33, scope: !3355)
!3357 = !DILocation(line: 438, column: 19, scope: !3355)
!3358 = !DILocation(line: 438, column: 22, scope: !3355)
!3359 = !DILocation(line: 438, column: 24, scope: !3355)
!3360 = !DILocation(line: 438, column: 30, scope: !3355)
!3361 = !DILocation(line: 438, column: 28, scope: !3355)
!3362 = !DILocation(line: 438, column: 38, scope: !3355)
!3363 = !DILocation(line: 438, column: 48, scope: !3355)
!3364 = !DILocation(line: 438, column: 52, scope: !3355)
!3365 = !DILocation(line: 438, column: 54, scope: !3355)
!3366 = !DILocation(line: 438, column: 45, scope: !3355)
!3367 = !DILocation(line: 438, column: 59, scope: !3355)
!3368 = !DILocation(line: 438, column: 62, scope: !3355)
!3369 = !DILocation(line: 438, column: 66, scope: !3355)
!3370 = !DILocation(line: 438, column: 68, scope: !3355)
!3371 = !DILocation(line: 438, column: 73, scope: !3355)
!3372 = !DILocation(line: 437, column: 19, scope: !3329)
!3373 = !DILocation(line: 440, column: 19, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3355, file: !241, line: 439, column: 17)
!3375 = !DILocation(line: 440, column: 19, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3377, file: !241, line: 440, column: 19)
!3377 = distinct !DILexicalBlock(scope: !3374, file: !241, line: 440, column: 19)
!3378 = !DILocation(line: 440, column: 19, scope: !3377)
!3379 = !DILocation(line: 441, column: 19, scope: !3374)
!3380 = !DILocation(line: 441, column: 19, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3382, file: !241, line: 441, column: 19)
!3382 = distinct !DILexicalBlock(scope: !3374, file: !241, line: 441, column: 19)
!3383 = !DILocation(line: 441, column: 19, scope: !3382)
!3384 = !DILocation(line: 442, column: 17, scope: !3374)
!3385 = !DILocation(line: 443, column: 17, scope: !3329)
!3386 = !DILocation(line: 448, column: 13, scope: !3329)
!3387 = !DILocation(line: 449, column: 20, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3325, file: !241, line: 449, column: 20)
!3389 = !DILocation(line: 449, column: 26, scope: !3388)
!3390 = !DILocation(line: 449, column: 20, scope: !3325)
!3391 = !DILocation(line: 450, column: 13, scope: !3388)
!3392 = !DILocation(line: 451, column: 11, scope: !3326)
!3393 = !DILocation(line: 454, column: 19, scope: !3326)
!3394 = !DILocation(line: 454, column: 11, scope: !3326)
!3395 = !DILocation(line: 457, column: 19, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3397, file: !241, line: 457, column: 19)
!3397 = distinct !DILexicalBlock(scope: !3326, file: !241, line: 455, column: 13)
!3398 = !DILocation(line: 457, column: 19, scope: !3397)
!3399 = !DILocation(line: 458, column: 17, scope: !3396)
!3400 = !DILocation(line: 459, column: 15, scope: !3397)
!3401 = !DILocation(line: 462, column: 20, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3397, file: !241, line: 462, column: 19)
!3403 = !DILocation(line: 462, column: 26, scope: !3402)
!3404 = !DILocation(line: 463, column: 19, scope: !3402)
!3405 = !DILocation(line: 463, column: 22, scope: !3402)
!3406 = !DILocation(line: 463, column: 24, scope: !3402)
!3407 = !DILocation(line: 463, column: 30, scope: !3402)
!3408 = !DILocation(line: 463, column: 28, scope: !3402)
!3409 = !DILocation(line: 463, column: 38, scope: !3402)
!3410 = !DILocation(line: 463, column: 41, scope: !3402)
!3411 = !DILocation(line: 463, column: 45, scope: !3402)
!3412 = !DILocation(line: 463, column: 47, scope: !3402)
!3413 = !DILocation(line: 463, column: 52, scope: !3402)
!3414 = !DILocation(line: 462, column: 19, scope: !3397)
!3415 = !DILocation(line: 464, column: 25, scope: !3402)
!3416 = !DILocation(line: 464, column: 29, scope: !3402)
!3417 = !DILocation(line: 464, column: 31, scope: !3402)
!3418 = !DILocation(line: 464, column: 17, scope: !3402)
!3419 = !DILocation(line: 471, column: 25, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3421, file: !241, line: 471, column: 25)
!3421 = distinct !DILexicalBlock(scope: !3402, file: !241, line: 465, column: 19)
!3422 = !DILocation(line: 471, column: 25, scope: !3421)
!3423 = !DILocation(line: 472, column: 23, scope: !3420)
!3424 = !DILocation(line: 473, column: 25, scope: !3421)
!3425 = !DILocation(line: 473, column: 29, scope: !3421)
!3426 = !DILocation(line: 473, column: 31, scope: !3421)
!3427 = !DILocation(line: 473, column: 23, scope: !3421)
!3428 = !DILocation(line: 474, column: 23, scope: !3421)
!3429 = !DILocation(line: 475, column: 21, scope: !3421)
!3430 = !DILocation(line: 475, column: 21, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3432, file: !241, line: 475, column: 21)
!3432 = distinct !DILexicalBlock(scope: !3421, file: !241, line: 475, column: 21)
!3433 = !DILocation(line: 475, column: 21, scope: !3432)
!3434 = !DILocation(line: 476, column: 21, scope: !3421)
!3435 = !DILocation(line: 476, column: 21, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3437, file: !241, line: 476, column: 21)
!3437 = distinct !DILexicalBlock(scope: !3421, file: !241, line: 476, column: 21)
!3438 = !DILocation(line: 476, column: 21, scope: !3437)
!3439 = !DILocation(line: 477, column: 21, scope: !3421)
!3440 = !DILocation(line: 477, column: 21, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3442, file: !241, line: 477, column: 21)
!3442 = distinct !DILexicalBlock(scope: !3421, file: !241, line: 477, column: 21)
!3443 = !DILocation(line: 477, column: 21, scope: !3442)
!3444 = !DILocation(line: 478, column: 21, scope: !3421)
!3445 = !DILocation(line: 478, column: 21, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3447, file: !241, line: 478, column: 21)
!3447 = distinct !DILexicalBlock(scope: !3421, file: !241, line: 478, column: 21)
!3448 = !DILocation(line: 478, column: 21, scope: !3447)
!3449 = !DILocation(line: 479, column: 21, scope: !3421)
!3450 = !DILocation(line: 482, column: 21, scope: !3421)
!3451 = !DILocation(line: 483, column: 19, scope: !3421)
!3452 = !DILocation(line: 484, column: 15, scope: !3397)
!3453 = !DILocation(line: 487, column: 15, scope: !3397)
!3454 = !DILocation(line: 489, column: 11, scope: !3326)
!3455 = !DILocation(line: 491, column: 24, scope: !3326)
!3456 = !DILocation(line: 491, column: 31, scope: !3326)
!3457 = !DILocation(line: 492, column: 24, scope: !3326)
!3458 = !DILocation(line: 492, column: 31, scope: !3326)
!3459 = !DILocation(line: 493, column: 24, scope: !3326)
!3460 = !DILocation(line: 493, column: 31, scope: !3326)
!3461 = !DILocation(line: 494, column: 24, scope: !3326)
!3462 = !DILocation(line: 494, column: 31, scope: !3326)
!3463 = !DILocation(line: 495, column: 24, scope: !3326)
!3464 = !DILocation(line: 495, column: 31, scope: !3326)
!3465 = !DILocation(line: 496, column: 24, scope: !3326)
!3466 = !DILocation(line: 496, column: 31, scope: !3326)
!3467 = !DILocation(line: 497, column: 24, scope: !3326)
!3468 = !DILocation(line: 497, column: 31, scope: !3326)
!3469 = !DILocation(line: 498, column: 26, scope: !3326)
!3470 = !DILocation(line: 498, column: 24, scope: !3326)
!3471 = !DILocation(line: 500, column: 15, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3326, file: !241, line: 500, column: 15)
!3473 = !DILocation(line: 500, column: 29, scope: !3472)
!3474 = !DILocation(line: 500, column: 15, scope: !3326)
!3475 = !DILocation(line: 502, column: 19, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !3477, file: !241, line: 502, column: 19)
!3477 = distinct !DILexicalBlock(scope: !3472, file: !241, line: 501, column: 13)
!3478 = !DILocation(line: 502, column: 19, scope: !3477)
!3479 = !DILocation(line: 503, column: 17, scope: !3476)
!3480 = !DILocation(line: 504, column: 15, scope: !3477)
!3481 = !DILocation(line: 509, column: 15, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3326, file: !241, line: 509, column: 15)
!3483 = !DILocation(line: 509, column: 33, scope: !3482)
!3484 = !DILocation(line: 509, column: 36, scope: !3482)
!3485 = !DILocation(line: 509, column: 55, scope: !3482)
!3486 = !DILocation(line: 509, column: 58, scope: !3482)
!3487 = !DILocation(line: 509, column: 15, scope: !3326)
!3488 = !DILocation(line: 510, column: 13, scope: !3482)
!3489 = !DILabel(scope: !3326, name: "c_and_shell_escape", file: !241, line: 512)
!3490 = !DILocation(line: 512, column: 9, scope: !3326)
!3491 = !DILocation(line: 513, column: 15, scope: !3492)
!3492 = distinct !DILexicalBlock(scope: !3326, file: !241, line: 513, column: 15)
!3493 = !DILocation(line: 513, column: 29, scope: !3492)
!3494 = !DILocation(line: 514, column: 15, scope: !3492)
!3495 = !DILocation(line: 514, column: 18, scope: !3492)
!3496 = !DILocation(line: 513, column: 15, scope: !3326)
!3497 = !DILocation(line: 515, column: 13, scope: !3492)
!3498 = !DILabel(scope: !3326, name: "c_escape", file: !241, line: 517)
!3499 = !DILocation(line: 517, column: 9, scope: !3326)
!3500 = !DILocation(line: 518, column: 15, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3326, file: !241, line: 518, column: 15)
!3502 = !DILocation(line: 518, column: 15, scope: !3326)
!3503 = !DILocation(line: 520, column: 19, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !3501, file: !241, line: 519, column: 13)
!3505 = !DILocation(line: 520, column: 17, scope: !3504)
!3506 = !DILocation(line: 521, column: 15, scope: !3504)
!3507 = !DILocation(line: 523, column: 11, scope: !3326)
!3508 = !DILocation(line: 526, column: 18, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3326, file: !241, line: 526, column: 15)
!3510 = !DILocation(line: 526, column: 26, scope: !3509)
!3511 = !DILocation(line: 526, column: 15, scope: !3326)
!3512 = !DILocation(line: 526, column: 40, scope: !3509)
!3513 = !DILocation(line: 526, column: 47, scope: !3509)
!3514 = !DILocation(line: 526, column: 57, scope: !3509)
!3515 = !DILocation(line: 526, column: 65, scope: !3509)
!3516 = !DILocation(line: 527, column: 13, scope: !3509)
!3517 = !DILocation(line: 528, column: 11, scope: !3326)
!3518 = !DILocation(line: 530, column: 15, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3326, file: !241, line: 530, column: 15)
!3520 = !DILocation(line: 530, column: 17, scope: !3519)
!3521 = !DILocation(line: 530, column: 15, scope: !3326)
!3522 = !DILocation(line: 531, column: 13, scope: !3519)
!3523 = !DILocation(line: 532, column: 11, scope: !3326)
!3524 = !DILocation(line: 534, column: 36, scope: !3326)
!3525 = !DILocation(line: 535, column: 11, scope: !3326)
!3526 = !DILocation(line: 548, column: 15, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !3326, file: !241, line: 548, column: 15)
!3528 = !DILocation(line: 548, column: 29, scope: !3527)
!3529 = !DILocation(line: 549, column: 15, scope: !3527)
!3530 = !DILocation(line: 549, column: 18, scope: !3527)
!3531 = !DILocation(line: 548, column: 15, scope: !3326)
!3532 = !DILocation(line: 550, column: 13, scope: !3527)
!3533 = !DILocation(line: 551, column: 11, scope: !3326)
!3534 = !DILocation(line: 554, column: 36, scope: !3326)
!3535 = !DILocation(line: 555, column: 36, scope: !3326)
!3536 = !DILocation(line: 556, column: 15, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3326, file: !241, line: 556, column: 15)
!3538 = !DILocation(line: 556, column: 29, scope: !3537)
!3539 = !DILocation(line: 556, column: 15, scope: !3326)
!3540 = !DILocation(line: 558, column: 19, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3542, file: !241, line: 558, column: 19)
!3542 = distinct !DILexicalBlock(scope: !3537, file: !241, line: 557, column: 13)
!3543 = !DILocation(line: 558, column: 19, scope: !3542)
!3544 = !DILocation(line: 559, column: 17, scope: !3541)
!3545 = !DILocation(line: 561, column: 19, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3542, file: !241, line: 561, column: 19)
!3547 = !DILocation(line: 561, column: 30, scope: !3546)
!3548 = !DILocation(line: 561, column: 35, scope: !3546)
!3549 = !DILocation(line: 561, column: 19, scope: !3542)
!3550 = !DILocation(line: 566, column: 37, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3546, file: !241, line: 562, column: 17)
!3552 = !DILocation(line: 566, column: 35, scope: !3551)
!3553 = !DILocation(line: 567, column: 30, scope: !3551)
!3554 = !DILocation(line: 568, column: 17, scope: !3551)
!3555 = !DILocation(line: 570, column: 15, scope: !3542)
!3556 = !DILocation(line: 570, column: 15, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3558, file: !241, line: 570, column: 15)
!3558 = distinct !DILexicalBlock(scope: !3542, file: !241, line: 570, column: 15)
!3559 = !DILocation(line: 570, column: 15, scope: !3558)
!3560 = !DILocation(line: 571, column: 15, scope: !3542)
!3561 = !DILocation(line: 571, column: 15, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3563, file: !241, line: 571, column: 15)
!3563 = distinct !DILexicalBlock(scope: !3542, file: !241, line: 571, column: 15)
!3564 = !DILocation(line: 571, column: 15, scope: !3563)
!3565 = !DILocation(line: 572, column: 15, scope: !3542)
!3566 = !DILocation(line: 572, column: 15, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3568, file: !241, line: 572, column: 15)
!3568 = distinct !DILexicalBlock(scope: !3542, file: !241, line: 572, column: 15)
!3569 = !DILocation(line: 572, column: 15, scope: !3568)
!3570 = !DILocation(line: 573, column: 40, scope: !3542)
!3571 = !DILocation(line: 574, column: 13, scope: !3542)
!3572 = !DILocation(line: 575, column: 11, scope: !3326)
!3573 = !DILocation(line: 599, column: 36, scope: !3326)
!3574 = !DILocation(line: 600, column: 11, scope: !3326)
!3575 = !DILocalVariable(name: "m", scope: !3576, file: !241, line: 610, type: !110)
!3576 = distinct !DILexicalBlock(scope: !3326, file: !241, line: 608, column: 11)
!3577 = !DILocation(line: 610, column: 20, scope: !3576)
!3578 = !DILocalVariable(name: "printable", scope: !3576, file: !241, line: 612, type: !18)
!3579 = !DILocation(line: 612, column: 18, scope: !3576)
!3580 = !DILocation(line: 614, column: 17, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3576, file: !241, line: 614, column: 17)
!3582 = !DILocation(line: 614, column: 17, scope: !3576)
!3583 = !DILocation(line: 616, column: 19, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3581, file: !241, line: 615, column: 15)
!3585 = !DILocation(line: 617, column: 29, scope: !3584)
!3586 = !DILocation(line: 617, column: 41, scope: !3584)
!3587 = !DILocation(line: 617, column: 27, scope: !3584)
!3588 = !DILocation(line: 618, column: 15, scope: !3584)
!3589 = !DILocalVariable(name: "mbstate", scope: !3590, file: !241, line: 621, type: !3591)
!3590 = distinct !DILexicalBlock(scope: !3581, file: !241, line: 620, column: 15)
!3591 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !3592, line: 6, baseType: !3593)
!3592 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h", directory: "")
!3593 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !3594, line: 21, baseType: !3595)
!3594 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", directory: "")
!3595 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3594, line: 13, size: 64, elements: !3596)
!3596 = !{!3597, !3598}
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !3595, file: !3594, line: 15, baseType: !53, size: 32)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !3595, file: !3594, line: 20, baseType: !3599, size: 32, offset: 32)
!3599 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3595, file: !3594, line: 16, size: 32, elements: !3600)
!3600 = !{!3601, !3602}
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !3599, file: !3594, line: 18, baseType: !180, size: 32)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !3599, file: !3594, line: 19, baseType: !82, size: 32)
!3603 = !DILocation(line: 621, column: 27, scope: !3590)
!3604 = !DILocation(line: 622, column: 17, scope: !3590)
!3605 = !DILocation(line: 624, column: 19, scope: !3590)
!3606 = !DILocation(line: 625, column: 27, scope: !3590)
!3607 = !DILocation(line: 626, column: 21, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3590, file: !241, line: 626, column: 21)
!3609 = !DILocation(line: 626, column: 29, scope: !3608)
!3610 = !DILocation(line: 626, column: 21, scope: !3590)
!3611 = !DILocation(line: 627, column: 37, scope: !3608)
!3612 = !DILocation(line: 627, column: 29, scope: !3608)
!3613 = !DILocation(line: 627, column: 27, scope: !3608)
!3614 = !DILocation(line: 627, column: 19, scope: !3608)
!3615 = !DILocation(line: 629, column: 17, scope: !3590)
!3616 = !DILocalVariable(name: "w", scope: !3617, file: !241, line: 631, type: !3618)
!3617 = distinct !DILexicalBlock(scope: !3590, file: !241, line: 630, column: 19)
!3618 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !111, line: 74, baseType: !53)
!3619 = !DILocation(line: 631, column: 29, scope: !3617)
!3620 = !DILocalVariable(name: "bytes", scope: !3617, file: !241, line: 632, type: !110)
!3621 = !DILocation(line: 632, column: 28, scope: !3617)
!3622 = !DILocation(line: 632, column: 50, scope: !3617)
!3623 = !DILocation(line: 632, column: 54, scope: !3617)
!3624 = !DILocation(line: 632, column: 58, scope: !3617)
!3625 = !DILocation(line: 632, column: 56, scope: !3617)
!3626 = !DILocation(line: 633, column: 45, scope: !3617)
!3627 = !DILocation(line: 633, column: 56, scope: !3617)
!3628 = !DILocation(line: 633, column: 60, scope: !3617)
!3629 = !DILocation(line: 633, column: 58, scope: !3617)
!3630 = !DILocation(line: 633, column: 53, scope: !3617)
!3631 = !DILocation(line: 632, column: 36, scope: !3617)
!3632 = !DILocation(line: 634, column: 25, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3617, file: !241, line: 634, column: 25)
!3634 = !DILocation(line: 634, column: 31, scope: !3633)
!3635 = !DILocation(line: 634, column: 25, scope: !3617)
!3636 = !DILocation(line: 635, column: 23, scope: !3633)
!3637 = !DILocation(line: 636, column: 30, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3633, file: !241, line: 636, column: 30)
!3639 = !DILocation(line: 636, column: 36, scope: !3638)
!3640 = !DILocation(line: 636, column: 30, scope: !3633)
!3641 = !DILocation(line: 638, column: 35, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3638, file: !241, line: 637, column: 23)
!3643 = !DILocation(line: 639, column: 25, scope: !3642)
!3644 = !DILocation(line: 641, column: 30, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3638, file: !241, line: 641, column: 30)
!3646 = !DILocation(line: 641, column: 36, scope: !3645)
!3647 = !DILocation(line: 641, column: 30, scope: !3638)
!3648 = !DILocation(line: 643, column: 35, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3645, file: !241, line: 642, column: 23)
!3650 = !DILocation(line: 644, column: 25, scope: !3649)
!3651 = !DILocation(line: 644, column: 32, scope: !3649)
!3652 = !DILocation(line: 644, column: 36, scope: !3649)
!3653 = !DILocation(line: 644, column: 34, scope: !3649)
!3654 = !DILocation(line: 644, column: 40, scope: !3649)
!3655 = !DILocation(line: 644, column: 38, scope: !3649)
!3656 = !DILocation(line: 644, column: 48, scope: !3649)
!3657 = !DILocation(line: 644, column: 51, scope: !3649)
!3658 = !DILocation(line: 644, column: 55, scope: !3649)
!3659 = !DILocation(line: 644, column: 59, scope: !3649)
!3660 = !DILocation(line: 644, column: 57, scope: !3649)
!3661 = !DILocation(line: 0, scope: !3649)
!3662 = !DILocation(line: 645, column: 28, scope: !3649)
!3663 = distinct !{!3663, !3650, !3662}
!3664 = !DILocation(line: 646, column: 25, scope: !3649)
!3665 = !DILocation(line: 654, column: 44, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3667, file: !241, line: 654, column: 29)
!3667 = distinct !DILexicalBlock(scope: !3645, file: !241, line: 649, column: 23)
!3668 = !DILocation(line: 655, column: 29, scope: !3666)
!3669 = !DILocation(line: 655, column: 32, scope: !3666)
!3670 = !DILocation(line: 655, column: 46, scope: !3666)
!3671 = !DILocation(line: 654, column: 29, scope: !3667)
!3672 = !DILocalVariable(name: "j", scope: !3673, file: !241, line: 657, type: !110)
!3673 = distinct !DILexicalBlock(scope: !3666, file: !241, line: 656, column: 27)
!3674 = !DILocation(line: 657, column: 36, scope: !3673)
!3675 = !DILocation(line: 658, column: 36, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3673, file: !241, line: 658, column: 29)
!3677 = !DILocation(line: 658, column: 34, scope: !3676)
!3678 = !DILocation(line: 658, column: 41, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3676, file: !241, line: 658, column: 29)
!3680 = !DILocation(line: 658, column: 45, scope: !3679)
!3681 = !DILocation(line: 658, column: 43, scope: !3679)
!3682 = !DILocation(line: 658, column: 29, scope: !3676)
!3683 = !DILocation(line: 659, column: 39, scope: !3679)
!3684 = !DILocation(line: 659, column: 43, scope: !3679)
!3685 = !DILocation(line: 659, column: 47, scope: !3679)
!3686 = !DILocation(line: 659, column: 45, scope: !3679)
!3687 = !DILocation(line: 659, column: 51, scope: !3679)
!3688 = !DILocation(line: 659, column: 49, scope: !3679)
!3689 = !DILocation(line: 659, column: 31, scope: !3679)
!3690 = !DILocation(line: 663, column: 35, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3679, file: !241, line: 660, column: 33)
!3692 = !DILocation(line: 666, column: 35, scope: !3691)
!3693 = !DILocation(line: 667, column: 33, scope: !3691)
!3694 = !DILocation(line: 658, column: 53, scope: !3679)
!3695 = !DILocation(line: 658, column: 29, scope: !3679)
!3696 = distinct !{!3696, !3682, !3697}
!3697 = !DILocation(line: 667, column: 33, scope: !3676)
!3698 = !DILocation(line: 668, column: 27, scope: !3673)
!3699 = !DILocation(line: 670, column: 41, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3667, file: !241, line: 670, column: 29)
!3701 = !DILocation(line: 670, column: 31, scope: !3700)
!3702 = !DILocation(line: 670, column: 29, scope: !3667)
!3703 = !DILocation(line: 671, column: 37, scope: !3700)
!3704 = !DILocation(line: 671, column: 27, scope: !3700)
!3705 = !DILocation(line: 672, column: 30, scope: !3667)
!3706 = !DILocation(line: 672, column: 27, scope: !3667)
!3707 = !DILocation(line: 674, column: 19, scope: !3617)
!3708 = !DILocation(line: 675, column: 26, scope: !3590)
!3709 = !DILocation(line: 675, column: 24, scope: !3590)
!3710 = distinct !{!3710, !3615, !3711}
!3711 = !DILocation(line: 675, column: 44, scope: !3590)
!3712 = !DILocation(line: 678, column: 40, scope: !3576)
!3713 = !DILocation(line: 678, column: 38, scope: !3576)
!3714 = !DILocation(line: 680, column: 21, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3576, file: !241, line: 680, column: 17)
!3716 = !DILocation(line: 680, column: 19, scope: !3715)
!3717 = !DILocation(line: 680, column: 23, scope: !3715)
!3718 = !DILocation(line: 680, column: 27, scope: !3715)
!3719 = !DILocation(line: 680, column: 45, scope: !3715)
!3720 = !DILocation(line: 680, column: 50, scope: !3715)
!3721 = !DILocation(line: 680, column: 17, scope: !3576)
!3722 = !DILocalVariable(name: "ilim", scope: !3723, file: !241, line: 684, type: !110)
!3723 = distinct !DILexicalBlock(scope: !3715, file: !241, line: 681, column: 15)
!3724 = !DILocation(line: 684, column: 24, scope: !3723)
!3725 = !DILocation(line: 684, column: 31, scope: !3723)
!3726 = !DILocation(line: 684, column: 35, scope: !3723)
!3727 = !DILocation(line: 684, column: 33, scope: !3723)
!3728 = !DILocation(line: 686, column: 17, scope: !3723)
!3729 = !DILocation(line: 688, column: 25, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3731, file: !241, line: 688, column: 25)
!3731 = distinct !DILexicalBlock(scope: !3732, file: !241, line: 687, column: 19)
!3732 = distinct !DILexicalBlock(scope: !3733, file: !241, line: 686, column: 17)
!3733 = distinct !DILexicalBlock(scope: !3723, file: !241, line: 686, column: 17)
!3734 = !DILocation(line: 688, column: 43, scope: !3730)
!3735 = !DILocation(line: 688, column: 48, scope: !3730)
!3736 = !DILocation(line: 688, column: 25, scope: !3731)
!3737 = !DILocation(line: 690, column: 25, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3730, file: !241, line: 689, column: 23)
!3739 = !DILocation(line: 690, column: 25, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3741, file: !241, line: 690, column: 25)
!3741 = distinct !DILexicalBlock(scope: !3738, file: !241, line: 690, column: 25)
!3742 = !DILocation(line: 690, column: 25, scope: !3741)
!3743 = !DILocation(line: 690, column: 25, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3741, file: !241, line: 690, column: 25)
!3745 = !DILocation(line: 690, column: 25, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3744, file: !241, line: 690, column: 25)
!3747 = !DILocation(line: 690, column: 25, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !3749, file: !241, line: 690, column: 25)
!3749 = distinct !DILexicalBlock(scope: !3746, file: !241, line: 690, column: 25)
!3750 = !DILocation(line: 690, column: 25, scope: !3749)
!3751 = !DILocation(line: 690, column: 25, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3753, file: !241, line: 690, column: 25)
!3753 = distinct !DILexicalBlock(scope: !3746, file: !241, line: 690, column: 25)
!3754 = !DILocation(line: 690, column: 25, scope: !3753)
!3755 = !DILocation(line: 690, column: 25, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3757, file: !241, line: 690, column: 25)
!3757 = distinct !DILexicalBlock(scope: !3746, file: !241, line: 690, column: 25)
!3758 = !DILocation(line: 690, column: 25, scope: !3757)
!3759 = !DILocation(line: 690, column: 25, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3761, file: !241, line: 690, column: 25)
!3761 = distinct !DILexicalBlock(scope: !3741, file: !241, line: 690, column: 25)
!3762 = !DILocation(line: 690, column: 25, scope: !3761)
!3763 = !DILocation(line: 691, column: 25, scope: !3738)
!3764 = !DILocation(line: 691, column: 25, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3766, file: !241, line: 691, column: 25)
!3766 = distinct !DILexicalBlock(scope: !3738, file: !241, line: 691, column: 25)
!3767 = !DILocation(line: 691, column: 25, scope: !3766)
!3768 = !DILocation(line: 692, column: 25, scope: !3738)
!3769 = !DILocation(line: 692, column: 25, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3771, file: !241, line: 692, column: 25)
!3771 = distinct !DILexicalBlock(scope: !3738, file: !241, line: 692, column: 25)
!3772 = !DILocation(line: 692, column: 25, scope: !3771)
!3773 = !DILocation(line: 693, column: 36, scope: !3738)
!3774 = !DILocation(line: 693, column: 38, scope: !3738)
!3775 = !DILocation(line: 693, column: 33, scope: !3738)
!3776 = !DILocation(line: 693, column: 29, scope: !3738)
!3777 = !DILocation(line: 693, column: 27, scope: !3738)
!3778 = !DILocation(line: 694, column: 23, scope: !3738)
!3779 = !DILocation(line: 695, column: 30, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3730, file: !241, line: 695, column: 30)
!3781 = !DILocation(line: 695, column: 30, scope: !3730)
!3782 = !DILocation(line: 697, column: 25, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3780, file: !241, line: 696, column: 23)
!3784 = !DILocation(line: 697, column: 25, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3786, file: !241, line: 697, column: 25)
!3786 = distinct !DILexicalBlock(scope: !3783, file: !241, line: 697, column: 25)
!3787 = !DILocation(line: 697, column: 25, scope: !3786)
!3788 = !DILocation(line: 698, column: 40, scope: !3783)
!3789 = !DILocation(line: 699, column: 23, scope: !3783)
!3790 = !DILocation(line: 700, column: 25, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3731, file: !241, line: 700, column: 25)
!3792 = !DILocation(line: 700, column: 33, scope: !3791)
!3793 = !DILocation(line: 700, column: 35, scope: !3791)
!3794 = !DILocation(line: 700, column: 30, scope: !3791)
!3795 = !DILocation(line: 700, column: 25, scope: !3731)
!3796 = !DILocation(line: 701, column: 23, scope: !3791)
!3797 = !DILocation(line: 702, column: 21, scope: !3731)
!3798 = !DILocation(line: 702, column: 21, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3800, file: !241, line: 702, column: 21)
!3800 = distinct !DILexicalBlock(scope: !3731, file: !241, line: 702, column: 21)
!3801 = !DILocation(line: 702, column: 21, scope: !3800)
!3802 = !DILocation(line: 702, column: 21, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3799, file: !241, line: 702, column: 21)
!3804 = !DILocation(line: 702, column: 21, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3806, file: !241, line: 702, column: 21)
!3806 = distinct !DILexicalBlock(scope: !3803, file: !241, line: 702, column: 21)
!3807 = !DILocation(line: 702, column: 21, scope: !3806)
!3808 = !DILocation(line: 702, column: 21, scope: !3809)
!3809 = distinct !DILexicalBlock(scope: !3810, file: !241, line: 702, column: 21)
!3810 = distinct !DILexicalBlock(scope: !3803, file: !241, line: 702, column: 21)
!3811 = !DILocation(line: 702, column: 21, scope: !3810)
!3812 = !DILocation(line: 703, column: 21, scope: !3731)
!3813 = !DILocation(line: 703, column: 21, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3815, file: !241, line: 703, column: 21)
!3815 = distinct !DILexicalBlock(scope: !3731, file: !241, line: 703, column: 21)
!3816 = !DILocation(line: 703, column: 21, scope: !3815)
!3817 = !DILocation(line: 704, column: 25, scope: !3731)
!3818 = !DILocation(line: 704, column: 29, scope: !3731)
!3819 = !DILocation(line: 704, column: 23, scope: !3731)
!3820 = !DILocation(line: 686, column: 17, scope: !3732)
!3821 = distinct !{!3821, !3822, !3823}
!3822 = !DILocation(line: 686, column: 17, scope: !3733)
!3823 = !DILocation(line: 705, column: 19, scope: !3733)
!3824 = !DILocation(line: 707, column: 17, scope: !3723)
!3825 = !DILocation(line: 710, column: 9, scope: !3326)
!3826 = !DILocation(line: 712, column: 16, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3272, file: !241, line: 712, column: 11)
!3828 = !DILocation(line: 712, column: 34, scope: !3827)
!3829 = !DILocation(line: 712, column: 37, scope: !3827)
!3830 = !DILocation(line: 712, column: 51, scope: !3827)
!3831 = !DILocation(line: 713, column: 15, scope: !3827)
!3832 = !DILocation(line: 713, column: 18, scope: !3827)
!3833 = !DILocation(line: 714, column: 14, scope: !3827)
!3834 = !DILocation(line: 714, column: 17, scope: !3827)
!3835 = !DILocation(line: 715, column: 14, scope: !3827)
!3836 = !DILocation(line: 715, column: 17, scope: !3827)
!3837 = !DILocation(line: 715, column: 33, scope: !3827)
!3838 = !DILocation(line: 715, column: 35, scope: !3827)
!3839 = !DILocation(line: 715, column: 51, scope: !3827)
!3840 = !DILocation(line: 715, column: 53, scope: !3827)
!3841 = !DILocation(line: 715, column: 47, scope: !3827)
!3842 = !DILocation(line: 715, column: 65, scope: !3827)
!3843 = !DILocation(line: 716, column: 11, scope: !3827)
!3844 = !DILocation(line: 716, column: 15, scope: !3827)
!3845 = !DILocation(line: 712, column: 11, scope: !3272)
!3846 = !DILocation(line: 717, column: 9, scope: !3827)
!3847 = !DILabel(scope: !3272, name: "store_escape", file: !241, line: 719)
!3848 = !DILocation(line: 719, column: 5, scope: !3272)
!3849 = !DILocation(line: 720, column: 7, scope: !3272)
!3850 = !DILocation(line: 720, column: 7, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3852, file: !241, line: 720, column: 7)
!3852 = distinct !DILexicalBlock(scope: !3272, file: !241, line: 720, column: 7)
!3853 = !DILocation(line: 720, column: 7, scope: !3852)
!3854 = !DILocation(line: 720, column: 7, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3852, file: !241, line: 720, column: 7)
!3856 = !DILocation(line: 720, column: 7, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3855, file: !241, line: 720, column: 7)
!3858 = !DILocation(line: 720, column: 7, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3860, file: !241, line: 720, column: 7)
!3860 = distinct !DILexicalBlock(scope: !3857, file: !241, line: 720, column: 7)
!3861 = !DILocation(line: 720, column: 7, scope: !3860)
!3862 = !DILocation(line: 720, column: 7, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3864, file: !241, line: 720, column: 7)
!3864 = distinct !DILexicalBlock(scope: !3857, file: !241, line: 720, column: 7)
!3865 = !DILocation(line: 720, column: 7, scope: !3864)
!3866 = !DILocation(line: 720, column: 7, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3868, file: !241, line: 720, column: 7)
!3868 = distinct !DILexicalBlock(scope: !3857, file: !241, line: 720, column: 7)
!3869 = !DILocation(line: 720, column: 7, scope: !3868)
!3870 = !DILocation(line: 720, column: 7, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3872, file: !241, line: 720, column: 7)
!3872 = distinct !DILexicalBlock(scope: !3852, file: !241, line: 720, column: 7)
!3873 = !DILocation(line: 720, column: 7, scope: !3872)
!3874 = !DILabel(scope: !3272, name: "store_c", file: !241, line: 722)
!3875 = !DILocation(line: 722, column: 5, scope: !3272)
!3876 = !DILocation(line: 723, column: 7, scope: !3272)
!3877 = !DILocation(line: 723, column: 7, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3879, file: !241, line: 723, column: 7)
!3879 = distinct !DILexicalBlock(scope: !3272, file: !241, line: 723, column: 7)
!3880 = !DILocation(line: 723, column: 7, scope: !3879)
!3881 = !DILocation(line: 723, column: 7, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3878, file: !241, line: 723, column: 7)
!3883 = !DILocation(line: 723, column: 7, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3885, file: !241, line: 723, column: 7)
!3885 = distinct !DILexicalBlock(scope: !3882, file: !241, line: 723, column: 7)
!3886 = !DILocation(line: 723, column: 7, scope: !3885)
!3887 = !DILocation(line: 723, column: 7, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3889, file: !241, line: 723, column: 7)
!3889 = distinct !DILexicalBlock(scope: !3882, file: !241, line: 723, column: 7)
!3890 = !DILocation(line: 723, column: 7, scope: !3889)
!3891 = !DILocation(line: 724, column: 7, scope: !3272)
!3892 = !DILocation(line: 724, column: 7, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3894, file: !241, line: 724, column: 7)
!3894 = distinct !DILexicalBlock(scope: !3272, file: !241, line: 724, column: 7)
!3895 = !DILocation(line: 724, column: 7, scope: !3894)
!3896 = !DILocation(line: 726, column: 13, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3272, file: !241, line: 726, column: 11)
!3898 = !DILocation(line: 726, column: 11, scope: !3272)
!3899 = !DILocation(line: 727, column: 38, scope: !3897)
!3900 = !DILocation(line: 727, column: 9, scope: !3897)
!3901 = !DILocation(line: 728, column: 5, scope: !3272)
!3902 = !DILocation(line: 400, column: 75, scope: !3261)
!3903 = !DILocation(line: 400, column: 3, scope: !3261)
!3904 = distinct !{!3904, !3270, !3905}
!3905 = !DILocation(line: 728, column: 5, scope: !3258)
!3906 = !DILocation(line: 730, column: 7, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3118, file: !241, line: 730, column: 7)
!3908 = !DILocation(line: 730, column: 11, scope: !3907)
!3909 = !DILocation(line: 730, column: 16, scope: !3907)
!3910 = !DILocation(line: 730, column: 19, scope: !3907)
!3911 = !DILocation(line: 730, column: 33, scope: !3907)
!3912 = !DILocation(line: 731, column: 7, scope: !3907)
!3913 = !DILocation(line: 731, column: 10, scope: !3907)
!3914 = !DILocation(line: 730, column: 7, scope: !3118)
!3915 = !DILocation(line: 732, column: 5, scope: !3907)
!3916 = !DILocation(line: 738, column: 7, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3118, file: !241, line: 738, column: 7)
!3918 = !DILocation(line: 738, column: 21, scope: !3917)
!3919 = !DILocation(line: 738, column: 51, scope: !3917)
!3920 = !DILocation(line: 738, column: 56, scope: !3917)
!3921 = !DILocation(line: 739, column: 7, scope: !3917)
!3922 = !DILocation(line: 739, column: 10, scope: !3917)
!3923 = !DILocation(line: 738, column: 7, scope: !3118)
!3924 = !DILocation(line: 741, column: 11, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3926, file: !241, line: 741, column: 11)
!3926 = distinct !DILexicalBlock(scope: !3917, file: !241, line: 740, column: 5)
!3927 = !DILocation(line: 741, column: 11, scope: !3926)
!3928 = !DILocation(line: 742, column: 42, scope: !3925)
!3929 = !DILocation(line: 742, column: 50, scope: !3925)
!3930 = !DILocation(line: 742, column: 67, scope: !3925)
!3931 = !DILocation(line: 742, column: 72, scope: !3925)
!3932 = !DILocation(line: 744, column: 42, scope: !3925)
!3933 = !DILocation(line: 744, column: 49, scope: !3925)
!3934 = !DILocation(line: 745, column: 42, scope: !3925)
!3935 = !DILocation(line: 745, column: 54, scope: !3925)
!3936 = !DILocation(line: 742, column: 16, scope: !3925)
!3937 = !DILocation(line: 742, column: 9, scope: !3925)
!3938 = !DILocation(line: 746, column: 18, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3925, file: !241, line: 746, column: 16)
!3940 = !DILocation(line: 746, column: 29, scope: !3939)
!3941 = !DILocation(line: 746, column: 32, scope: !3939)
!3942 = !DILocation(line: 746, column: 16, scope: !3925)
!3943 = !DILocation(line: 749, column: 24, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3939, file: !241, line: 747, column: 9)
!3945 = !DILocation(line: 749, column: 22, scope: !3944)
!3946 = !DILocation(line: 750, column: 15, scope: !3944)
!3947 = !DILocation(line: 751, column: 11, scope: !3944)
!3948 = !DILocation(line: 753, column: 5, scope: !3926)
!3949 = !DILocation(line: 755, column: 7, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3118, file: !241, line: 755, column: 7)
!3951 = !DILocation(line: 755, column: 20, scope: !3950)
!3952 = !DILocation(line: 755, column: 24, scope: !3950)
!3953 = !DILocation(line: 755, column: 7, scope: !3118)
!3954 = !DILocation(line: 756, column: 5, scope: !3950)
!3955 = !DILocation(line: 756, column: 13, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3957, file: !241, line: 756, column: 5)
!3957 = distinct !DILexicalBlock(scope: !3950, file: !241, line: 756, column: 5)
!3958 = !DILocation(line: 756, column: 12, scope: !3956)
!3959 = !DILocation(line: 756, column: 5, scope: !3957)
!3960 = !DILocation(line: 757, column: 7, scope: !3956)
!3961 = !DILocation(line: 757, column: 7, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3963, file: !241, line: 757, column: 7)
!3963 = distinct !DILexicalBlock(scope: !3956, file: !241, line: 757, column: 7)
!3964 = !DILocation(line: 757, column: 7, scope: !3963)
!3965 = !DILocation(line: 756, column: 39, scope: !3956)
!3966 = !DILocation(line: 756, column: 5, scope: !3956)
!3967 = distinct !{!3967, !3959, !3968}
!3968 = !DILocation(line: 757, column: 7, scope: !3957)
!3969 = !DILocation(line: 759, column: 7, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3118, file: !241, line: 759, column: 7)
!3971 = !DILocation(line: 759, column: 13, scope: !3970)
!3972 = !DILocation(line: 759, column: 11, scope: !3970)
!3973 = !DILocation(line: 759, column: 7, scope: !3118)
!3974 = !DILocation(line: 760, column: 5, scope: !3970)
!3975 = !DILocation(line: 760, column: 12, scope: !3970)
!3976 = !DILocation(line: 760, column: 17, scope: !3970)
!3977 = !DILocation(line: 761, column: 10, scope: !3118)
!3978 = !DILocation(line: 761, column: 3, scope: !3118)
!3979 = !DILabel(scope: !3118, name: "force_outer_quoting_style", file: !241, line: 763)
!3980 = !DILocation(line: 763, column: 2, scope: !3118)
!3981 = !DILocation(line: 766, column: 7, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3118, file: !241, line: 766, column: 7)
!3983 = !DILocation(line: 766, column: 21, scope: !3982)
!3984 = !DILocation(line: 766, column: 51, scope: !3982)
!3985 = !DILocation(line: 766, column: 54, scope: !3982)
!3986 = !DILocation(line: 766, column: 7, scope: !3118)
!3987 = !DILocation(line: 767, column: 19, scope: !3982)
!3988 = !DILocation(line: 767, column: 5, scope: !3982)
!3989 = !DILocation(line: 768, column: 36, scope: !3118)
!3990 = !DILocation(line: 768, column: 44, scope: !3118)
!3991 = !DILocation(line: 768, column: 56, scope: !3118)
!3992 = !DILocation(line: 768, column: 61, scope: !3118)
!3993 = !DILocation(line: 769, column: 36, scope: !3118)
!3994 = !DILocation(line: 770, column: 36, scope: !3118)
!3995 = !DILocation(line: 770, column: 42, scope: !3118)
!3996 = !DILocation(line: 771, column: 36, scope: !3118)
!3997 = !DILocation(line: 771, column: 48, scope: !3118)
!3998 = !DILocation(line: 768, column: 10, scope: !3118)
!3999 = !DILocation(line: 768, column: 3, scope: !3118)
!4000 = !DILocation(line: 772, column: 1, scope: !3118)
!4001 = !DILocalVariable(name: "escaping", scope: !4002, file: !241, line: 405, type: !18)
!4002 = distinct !DILexicalBlock(scope: !4003, file: !241, line: 401, column: 5)
!4003 = distinct !DILexicalBlock(scope: !4004, file: !241, line: 400, column: 3)
!4004 = distinct !DILexicalBlock(scope: !4005, file: !241, line: 400, column: 3)
!4005 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !241, file: !241, line: 256, type: !3119, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4006, retainedNodes: !4)
!4006 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !4007, nameTableKind: None)
!4007 = !{!4008, !4010, !4012, !4021, !4023, !4025, !4032, !4034}
!4008 = !DIGlobalVariableExpression(var: !4009, expr: !DIExpression())
!4009 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !4006, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!4010 = !DIGlobalVariableExpression(var: !4011, expr: !DIExpression())
!4011 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !4006, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!4012 = !DIGlobalVariableExpression(var: !4013, expr: !DIExpression())
!4013 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !4006, file: !241, line: 1052, type: !4014, isLocal: false, isDefinition: true)
!4014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !4015)
!4015 = !{!4016, !4017, !4018, !4019, !4020}
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !4014, file: !241, line: 68, baseType: !223, size: 32)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4014, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !4014, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !4014, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !4014, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!4021 = !DIGlobalVariableExpression(var: !4022, expr: !DIExpression())
!4022 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !4006, file: !241, line: 116, type: !4014, isLocal: true, isDefinition: true)
!4023 = !DIGlobalVariableExpression(var: !4024, expr: !DIExpression())
!4024 = distinct !DIGlobalVariable(name: "slot0", scope: !4006, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!4025 = !DIGlobalVariableExpression(var: !4026, expr: !DIExpression())
!4026 = distinct !DIGlobalVariable(name: "slotvec", scope: !4006, file: !241, line: 845, type: !4027, isLocal: true, isDefinition: true)
!4027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4028, size: 64)
!4028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !4029)
!4029 = !{!4030, !4031}
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4028, file: !241, line: 836, baseType: !110, size: 64)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4028, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!4032 = !DIGlobalVariableExpression(var: !4033, expr: !DIExpression())
!4033 = distinct !DIGlobalVariable(name: "nslots", scope: !4006, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!4034 = !DIGlobalVariableExpression(var: !4035, expr: !DIExpression())
!4035 = distinct !DIGlobalVariable(name: "slotvec0", scope: !4006, file: !241, line: 844, type: !4028, isLocal: true, isDefinition: true)
!4036 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !4002, file: !241, line: 406, type: !18)
!4037 = distinct !DISubprogram(name: "gettext_quote", scope: !241, file: !241, line: 207, type: !4038, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4038 = !DISubroutineType(types: !4039)
!4039 = !{!49, !49, !223}
!4040 = !DILocalVariable(name: "msgid", arg: 1, scope: !4037, file: !241, line: 207, type: !49)
!4041 = !DILocation(line: 207, column: 28, scope: !4037)
!4042 = !DILocalVariable(name: "s", arg: 2, scope: !4037, file: !241, line: 207, type: !223)
!4043 = !DILocation(line: 207, column: 54, scope: !4037)
!4044 = !DILocalVariable(name: "translation", scope: !4037, file: !241, line: 209, type: !49)
!4045 = !DILocation(line: 209, column: 15, scope: !4037)
!4046 = !DILocation(line: 209, column: 29, scope: !4037)
!4047 = !DILocalVariable(name: "locale_code", scope: !4037, file: !241, line: 210, type: !49)
!4048 = !DILocation(line: 210, column: 15, scope: !4037)
!4049 = !DILocation(line: 212, column: 7, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4037, file: !241, line: 212, column: 7)
!4051 = !DILocation(line: 212, column: 22, scope: !4050)
!4052 = !DILocation(line: 212, column: 19, scope: !4050)
!4053 = !DILocation(line: 212, column: 7, scope: !4037)
!4054 = !DILocation(line: 213, column: 12, scope: !4050)
!4055 = !DILocation(line: 213, column: 5, scope: !4050)
!4056 = !DILocation(line: 233, column: 17, scope: !4037)
!4057 = !DILocation(line: 233, column: 15, scope: !4037)
!4058 = !DILocation(line: 234, column: 7, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4037, file: !241, line: 234, column: 7)
!4060 = !DILocation(line: 234, column: 7, scope: !4037)
!4061 = !DILocation(line: 235, column: 12, scope: !4059)
!4062 = !DILocation(line: 235, column: 21, scope: !4059)
!4063 = !DILocation(line: 235, column: 5, scope: !4059)
!4064 = !DILocation(line: 236, column: 7, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4037, file: !241, line: 236, column: 7)
!4066 = !DILocation(line: 236, column: 7, scope: !4037)
!4067 = !DILocation(line: 237, column: 12, scope: !4065)
!4068 = !DILocation(line: 237, column: 21, scope: !4065)
!4069 = !DILocation(line: 237, column: 5, scope: !4065)
!4070 = !DILocation(line: 239, column: 11, scope: !4037)
!4071 = !DILocation(line: 239, column: 13, scope: !4037)
!4072 = !DILocation(line: 239, column: 3, scope: !4037)
!4073 = !DILocation(line: 240, column: 1, scope: !4037)
!4074 = distinct !DISubprogram(name: "quotearg_char", scope: !241, file: !241, line: 991, type: !4075, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4075 = !DISubroutineType(types: !4076)
!4076 = !{!6, !49, !7}
!4077 = !DILocalVariable(name: "arg", arg: 1, scope: !4074, file: !241, line: 991, type: !49)
!4078 = !DILocation(line: 991, column: 28, scope: !4074)
!4079 = !DILocalVariable(name: "ch", arg: 2, scope: !4074, file: !241, line: 991, type: !7)
!4080 = !DILocation(line: 991, column: 38, scope: !4074)
!4081 = !DILocation(line: 993, column: 29, scope: !4074)
!4082 = !DILocation(line: 993, column: 44, scope: !4074)
!4083 = !DILocation(line: 993, column: 10, scope: !4074)
!4084 = !DILocation(line: 993, column: 3, scope: !4074)
!4085 = distinct !DISubprogram(name: "quotearg_colon", scope: !241, file: !241, line: 997, type: !2581, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4086 = !DILocalVariable(name: "arg", arg: 1, scope: !4085, file: !241, line: 997, type: !49)
!4087 = !DILocation(line: 997, column: 29, scope: !4085)
!4088 = !DILocation(line: 999, column: 25, scope: !4085)
!4089 = !DILocation(line: 999, column: 10, scope: !4085)
!4090 = !DILocation(line: 999, column: 3, scope: !4085)
!4091 = !DILocalVariable(name: "arg", arg: 1, scope: !4092, file: !241, line: 997, type: !49)
!4092 = distinct !DISubprogram(name: "quotearg_colon", scope: !241, file: !241, line: 997, type: !2581, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4093, retainedNodes: !4)
!4093 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !4094, nameTableKind: None)
!4094 = !{!4095, !4097, !4099, !4108, !4110, !4112, !4119, !4121}
!4095 = !DIGlobalVariableExpression(var: !4096, expr: !DIExpression())
!4096 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !4093, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!4097 = !DIGlobalVariableExpression(var: !4098, expr: !DIExpression())
!4098 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !4093, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!4099 = !DIGlobalVariableExpression(var: !4100, expr: !DIExpression())
!4100 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !4093, file: !241, line: 1052, type: !4101, isLocal: false, isDefinition: true)
!4101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !4102)
!4102 = !{!4103, !4104, !4105, !4106, !4107}
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !4101, file: !241, line: 68, baseType: !223, size: 32)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4101, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !4101, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !4101, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !4101, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!4108 = !DIGlobalVariableExpression(var: !4109, expr: !DIExpression())
!4109 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !4093, file: !241, line: 116, type: !4101, isLocal: true, isDefinition: true)
!4110 = !DIGlobalVariableExpression(var: !4111, expr: !DIExpression())
!4111 = distinct !DIGlobalVariable(name: "slot0", scope: !4093, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!4112 = !DIGlobalVariableExpression(var: !4113, expr: !DIExpression())
!4113 = distinct !DIGlobalVariable(name: "slotvec", scope: !4093, file: !241, line: 845, type: !4114, isLocal: true, isDefinition: true)
!4114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4115, size: 64)
!4115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !4116)
!4116 = !{!4117, !4118}
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4115, file: !241, line: 836, baseType: !110, size: 64)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4115, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!4119 = !DIGlobalVariableExpression(var: !4120, expr: !DIExpression())
!4120 = distinct !DIGlobalVariable(name: "nslots", scope: !4093, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!4121 = !DIGlobalVariableExpression(var: !4122, expr: !DIExpression())
!4122 = distinct !DIGlobalVariable(name: "slotvec0", scope: !4093, file: !241, line: 844, type: !4115, isLocal: true, isDefinition: true)
!4123 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !241, file: !241, line: 1009, type: !4124, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4124 = !DISubroutineType(types: !4125)
!4125 = !{!6, !53, !223, !49}
!4126 = !DILocalVariable(name: "n", arg: 1, scope: !4123, file: !241, line: 1009, type: !53)
!4127 = !DILocation(line: 1009, column: 29, scope: !4123)
!4128 = !DILocalVariable(name: "s", arg: 2, scope: !4123, file: !241, line: 1009, type: !223)
!4129 = !DILocation(line: 1009, column: 51, scope: !4123)
!4130 = !DILocalVariable(name: "arg", arg: 3, scope: !4123, file: !241, line: 1009, type: !49)
!4131 = !DILocation(line: 1009, column: 66, scope: !4123)
!4132 = !DILocalVariable(name: "options", scope: !4123, file: !241, line: 1011, type: !254)
!4133 = !DILocation(line: 1011, column: 26, scope: !4123)
!4134 = !DILocation(line: 1012, column: 41, scope: !4123)
!4135 = !DILocation(line: 1012, column: 13, scope: !4123)
!4136 = !DILocation(line: 1013, column: 3, scope: !4123)
!4137 = !DILocation(line: 1014, column: 30, scope: !4123)
!4138 = !DILocation(line: 1014, column: 33, scope: !4123)
!4139 = !DILocation(line: 1014, column: 10, scope: !4123)
!4140 = !DILocation(line: 1014, column: 3, scope: !4123)
!4141 = !DILocalVariable(name: "n", arg: 1, scope: !4142, file: !241, line: 1009, type: !53)
!4142 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !241, file: !241, line: 1009, type: !4124, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4143, retainedNodes: !4)
!4143 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !4144, nameTableKind: None)
!4144 = !{!4145, !4147, !4149, !4158, !4160, !4162, !4169, !4171}
!4145 = !DIGlobalVariableExpression(var: !4146, expr: !DIExpression())
!4146 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !4143, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!4147 = !DIGlobalVariableExpression(var: !4148, expr: !DIExpression())
!4148 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !4143, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!4149 = !DIGlobalVariableExpression(var: !4150, expr: !DIExpression())
!4150 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !4143, file: !241, line: 1052, type: !4151, isLocal: false, isDefinition: true)
!4151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !4152)
!4152 = !{!4153, !4154, !4155, !4156, !4157}
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !4151, file: !241, line: 68, baseType: !223, size: 32)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4151, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !4151, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !4151, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !4151, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!4158 = !DIGlobalVariableExpression(var: !4159, expr: !DIExpression())
!4159 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !4143, file: !241, line: 116, type: !4151, isLocal: true, isDefinition: true)
!4160 = !DIGlobalVariableExpression(var: !4161, expr: !DIExpression())
!4161 = distinct !DIGlobalVariable(name: "slot0", scope: !4143, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!4162 = !DIGlobalVariableExpression(var: !4163, expr: !DIExpression())
!4163 = distinct !DIGlobalVariable(name: "slotvec", scope: !4143, file: !241, line: 845, type: !4164, isLocal: true, isDefinition: true)
!4164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4165, size: 64)
!4165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !4166)
!4166 = !{!4167, !4168}
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4165, file: !241, line: 836, baseType: !110, size: 64)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4165, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!4169 = !DIGlobalVariableExpression(var: !4170, expr: !DIExpression())
!4170 = distinct !DIGlobalVariable(name: "nslots", scope: !4143, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!4171 = !DIGlobalVariableExpression(var: !4172, expr: !DIExpression())
!4172 = distinct !DIGlobalVariable(name: "slotvec0", scope: !4143, file: !241, line: 844, type: !4165, isLocal: true, isDefinition: true)
!4173 = !DILocalVariable(name: "s", arg: 2, scope: !4142, file: !241, line: 1009, type: !223)
!4174 = !DILocalVariable(name: "arg", arg: 3, scope: !4142, file: !241, line: 1009, type: !49)
!4175 = !DILocalVariable(name: "options", scope: !4142, file: !241, line: 1011, type: !4151)
!4176 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !241, file: !241, line: 193, type: !4177, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4177 = !DISubroutineType(types: !4178)
!4178 = !{!254, !223}
!4179 = !DILocalVariable(name: "style", arg: 1, scope: !4176, file: !241, line: 193, type: !223)
!4180 = !DILocation(line: 193, column: 48, scope: !4176)
!4181 = !DILocalVariable(name: "o", scope: !4176, file: !241, line: 195, type: !254)
!4182 = !DILocation(line: 195, column: 26, scope: !4176)
!4183 = !DILocation(line: 196, column: 7, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4176, file: !241, line: 196, column: 7)
!4185 = !DILocation(line: 196, column: 13, scope: !4184)
!4186 = !DILocation(line: 196, column: 7, scope: !4176)
!4187 = !DILocation(line: 197, column: 5, scope: !4184)
!4188 = !DILocation(line: 198, column: 13, scope: !4176)
!4189 = !DILocation(line: 198, column: 5, scope: !4176)
!4190 = !DILocation(line: 198, column: 11, scope: !4176)
!4191 = !DILocation(line: 199, column: 3, scope: !4176)
!4192 = !DILocalVariable(name: "style", arg: 1, scope: !4193, file: !241, line: 193, type: !223)
!4193 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !241, file: !241, line: 193, type: !4194, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4203, retainedNodes: !4)
!4194 = !DISubroutineType(types: !4195)
!4195 = !{!4196, !223}
!4196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !4197)
!4197 = !{!4198, !4199, !4200, !4201, !4202}
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !4196, file: !241, line: 68, baseType: !223, size: 32)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4196, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !4196, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !4196, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !4196, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!4203 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !4204, nameTableKind: None)
!4204 = !{!4205, !4207, !4209, !4211, !4213, !4215, !4222, !4224}
!4205 = !DIGlobalVariableExpression(var: !4206, expr: !DIExpression())
!4206 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !4203, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!4207 = !DIGlobalVariableExpression(var: !4208, expr: !DIExpression())
!4208 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !4203, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!4209 = !DIGlobalVariableExpression(var: !4210, expr: !DIExpression())
!4210 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !4203, file: !241, line: 1052, type: !4196, isLocal: false, isDefinition: true)
!4211 = !DIGlobalVariableExpression(var: !4212, expr: !DIExpression())
!4212 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !4203, file: !241, line: 116, type: !4196, isLocal: true, isDefinition: true)
!4213 = !DIGlobalVariableExpression(var: !4214, expr: !DIExpression())
!4214 = distinct !DIGlobalVariable(name: "slot0", scope: !4203, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!4215 = !DIGlobalVariableExpression(var: !4216, expr: !DIExpression())
!4216 = distinct !DIGlobalVariable(name: "slotvec", scope: !4203, file: !241, line: 845, type: !4217, isLocal: true, isDefinition: true)
!4217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4218, size: 64)
!4218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !4219)
!4219 = !{!4220, !4221}
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4218, file: !241, line: 836, baseType: !110, size: 64)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4218, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!4222 = !DIGlobalVariableExpression(var: !4223, expr: !DIExpression())
!4223 = distinct !DIGlobalVariable(name: "nslots", scope: !4203, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!4224 = !DIGlobalVariableExpression(var: !4225, expr: !DIExpression())
!4225 = distinct !DIGlobalVariable(name: "slotvec0", scope: !4203, file: !241, line: 844, type: !4218, isLocal: true, isDefinition: true)
!4226 = !DILocalVariable(name: "o", scope: !4193, file: !241, line: 195, type: !4196)
!4227 = distinct !DISubprogram(name: "quote_n_mem", scope: !241, file: !241, line: 1061, type: !4228, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4228 = !DISubroutineType(types: !4229)
!4229 = !{!49, !53, !49, !110}
!4230 = !DILocalVariable(name: "n", arg: 1, scope: !4227, file: !241, line: 1061, type: !53)
!4231 = !DILocation(line: 1061, column: 18, scope: !4227)
!4232 = !DILocalVariable(name: "arg", arg: 2, scope: !4227, file: !241, line: 1061, type: !49)
!4233 = !DILocation(line: 1061, column: 33, scope: !4227)
!4234 = !DILocalVariable(name: "argsize", arg: 3, scope: !4227, file: !241, line: 1061, type: !110)
!4235 = !DILocation(line: 1061, column: 45, scope: !4227)
!4236 = !DILocation(line: 1063, column: 30, scope: !4227)
!4237 = !DILocation(line: 1063, column: 33, scope: !4227)
!4238 = !DILocation(line: 1063, column: 38, scope: !4227)
!4239 = !DILocation(line: 1063, column: 10, scope: !4227)
!4240 = !DILocation(line: 1063, column: 3, scope: !4227)
!4241 = distinct !DISubprogram(name: "quote_n", scope: !241, file: !241, line: 1073, type: !4242, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4242 = !DISubroutineType(types: !4243)
!4243 = !{!49, !53, !49}
!4244 = !DILocalVariable(name: "n", arg: 1, scope: !4241, file: !241, line: 1073, type: !53)
!4245 = !DILocation(line: 1073, column: 14, scope: !4241)
!4246 = !DILocalVariable(name: "arg", arg: 2, scope: !4241, file: !241, line: 1073, type: !49)
!4247 = !DILocation(line: 1073, column: 29, scope: !4241)
!4248 = !DILocation(line: 1075, column: 23, scope: !4241)
!4249 = !DILocation(line: 1075, column: 26, scope: !4241)
!4250 = !DILocation(line: 1075, column: 10, scope: !4241)
!4251 = !DILocation(line: 1075, column: 3, scope: !4241)
!4252 = !DILocalVariable(name: "n", arg: 1, scope: !4253, file: !241, line: 1073, type: !53)
!4253 = distinct !DISubprogram(name: "quote_n", scope: !241, file: !241, line: 1073, type: !4242, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4254, retainedNodes: !4)
!4254 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !237, globals: !4255, nameTableKind: None)
!4255 = !{!4256, !4258, !4260, !4269, !4271, !4273, !4280, !4282}
!4256 = !DIGlobalVariableExpression(var: !4257, expr: !DIExpression())
!4257 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !4254, file: !241, line: 85, type: !242, isLocal: false, isDefinition: true)
!4258 = !DIGlobalVariableExpression(var: !4259, expr: !DIExpression())
!4259 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !4254, file: !241, line: 101, type: !248, isLocal: false, isDefinition: true)
!4260 = !DIGlobalVariableExpression(var: !4261, expr: !DIExpression())
!4261 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !4254, file: !241, line: 1052, type: !4262, isLocal: false, isDefinition: true)
!4262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !241, line: 65, size: 448, elements: !4263)
!4263 = !{!4264, !4265, !4266, !4267, !4268}
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !4262, file: !241, line: 68, baseType: !223, size: 32)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4262, file: !241, line: 71, baseType: !53, size: 32, offset: 32)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !4262, file: !241, line: 75, baseType: !259, size: 256, offset: 64)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !4262, file: !241, line: 78, baseType: !49, size: 64, offset: 320)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !4262, file: !241, line: 81, baseType: !49, size: 64, offset: 384)
!4269 = !DIGlobalVariableExpression(var: !4270, expr: !DIExpression())
!4270 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !4254, file: !241, line: 116, type: !4262, isLocal: true, isDefinition: true)
!4271 = !DIGlobalVariableExpression(var: !4272, expr: !DIExpression())
!4272 = distinct !DIGlobalVariable(name: "slot0", scope: !4254, file: !241, line: 842, type: !87, isLocal: true, isDefinition: true)
!4273 = !DIGlobalVariableExpression(var: !4274, expr: !DIExpression())
!4274 = distinct !DIGlobalVariable(name: "slotvec", scope: !4254, file: !241, line: 845, type: !4275, isLocal: true, isDefinition: true)
!4275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4276, size: 64)
!4276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !241, line: 834, size: 128, elements: !4277)
!4277 = !{!4278, !4279}
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4276, file: !241, line: 836, baseType: !110, size: 64)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4276, file: !241, line: 837, baseType: !6, size: 64, offset: 64)
!4280 = !DIGlobalVariableExpression(var: !4281, expr: !DIExpression())
!4281 = distinct !DIGlobalVariable(name: "nslots", scope: !4254, file: !241, line: 843, type: !53, isLocal: true, isDefinition: true)
!4282 = !DIGlobalVariableExpression(var: !4283, expr: !DIExpression())
!4283 = distinct !DIGlobalVariable(name: "slotvec0", scope: !4254, file: !241, line: 844, type: !4276, isLocal: true, isDefinition: true)
!4284 = !DILocalVariable(name: "arg", arg: 2, scope: !4253, file: !241, line: 1073, type: !49)
!4285 = distinct !DISubprogram(name: "quote", scope: !241, file: !241, line: 1079, type: !4286, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4286 = !DISubroutineType(types: !4287)
!4287 = !{!49, !49}
!4288 = !DILocalVariable(name: "arg", arg: 1, scope: !4285, file: !241, line: 1079, type: !49)
!4289 = !DILocation(line: 1079, column: 20, scope: !4285)
!4290 = !DILocation(line: 1081, column: 22, scope: !4285)
!4291 = !DILocation(line: 1081, column: 10, scope: !4285)
!4292 = !DILocation(line: 1081, column: 3, scope: !4285)
!4293 = distinct !DISubprogram(name: "setlocale_null_r", scope: !4294, file: !4294, line: 269, type: !4295, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !296, retainedNodes: !4)
!4294 = !DIFile(filename: "lib/setlocale_null.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4295 = !DISubroutineType(types: !4296)
!4296 = !{!53, !53, !6, !110}
!4297 = !DILocalVariable(name: "category", arg: 1, scope: !4293, file: !4294, line: 269, type: !53)
!4298 = !DILocation(line: 269, column: 23, scope: !4293)
!4299 = !DILocalVariable(name: "buf", arg: 2, scope: !4293, file: !4294, line: 269, type: !6)
!4300 = !DILocation(line: 269, column: 39, scope: !4293)
!4301 = !DILocalVariable(name: "bufsize", arg: 3, scope: !4293, file: !4294, line: 269, type: !110)
!4302 = !DILocation(line: 269, column: 51, scope: !4293)
!4303 = !DILocation(line: 274, column: 35, scope: !4293)
!4304 = !DILocation(line: 274, column: 45, scope: !4293)
!4305 = !DILocation(line: 274, column: 50, scope: !4293)
!4306 = !DILocation(line: 274, column: 10, scope: !4293)
!4307 = !DILocation(line: 274, column: 3, scope: !4293)
!4308 = distinct !DISubprogram(name: "setlocale_null_unlocked", scope: !4294, file: !4294, line: 91, type: !4295, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !296, retainedNodes: !4)
!4309 = !DILocalVariable(name: "category", arg: 1, scope: !4308, file: !4294, line: 91, type: !53)
!4310 = !DILocation(line: 91, column: 30, scope: !4308)
!4311 = !DILocalVariable(name: "buf", arg: 2, scope: !4308, file: !4294, line: 91, type: !6)
!4312 = !DILocation(line: 91, column: 46, scope: !4308)
!4313 = !DILocalVariable(name: "bufsize", arg: 3, scope: !4308, file: !4294, line: 91, type: !110)
!4314 = !DILocation(line: 91, column: 58, scope: !4308)
!4315 = !DILocalVariable(name: "result", scope: !4308, file: !4294, line: 140, type: !49)
!4316 = !DILocation(line: 140, column: 15, scope: !4308)
!4317 = !DILocation(line: 140, column: 51, scope: !4308)
!4318 = !DILocation(line: 140, column: 24, scope: !4308)
!4319 = !DILocation(line: 142, column: 7, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4308, file: !4294, line: 142, column: 7)
!4321 = !DILocation(line: 142, column: 14, scope: !4320)
!4322 = !DILocation(line: 142, column: 7, scope: !4308)
!4323 = !DILocation(line: 145, column: 11, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4325, file: !4294, line: 145, column: 11)
!4325 = distinct !DILexicalBlock(scope: !4320, file: !4294, line: 143, column: 5)
!4326 = !DILocation(line: 145, column: 19, scope: !4324)
!4327 = !DILocation(line: 145, column: 11, scope: !4325)
!4328 = !DILocation(line: 149, column: 9, scope: !4324)
!4329 = !DILocation(line: 149, column: 16, scope: !4324)
!4330 = !DILocation(line: 150, column: 7, scope: !4325)
!4331 = !DILocalVariable(name: "length", scope: !4332, file: !4294, line: 154, type: !110)
!4332 = distinct !DILexicalBlock(scope: !4320, file: !4294, line: 153, column: 5)
!4333 = !DILocation(line: 154, column: 14, scope: !4332)
!4334 = !DILocation(line: 154, column: 31, scope: !4332)
!4335 = !DILocation(line: 154, column: 23, scope: !4332)
!4336 = !DILocation(line: 155, column: 11, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4332, file: !4294, line: 155, column: 11)
!4338 = !DILocation(line: 155, column: 20, scope: !4337)
!4339 = !DILocation(line: 155, column: 18, scope: !4337)
!4340 = !DILocation(line: 155, column: 11, scope: !4332)
!4341 = !DILocation(line: 157, column: 19, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !4337, file: !4294, line: 156, column: 9)
!4343 = !DILocation(line: 157, column: 24, scope: !4342)
!4344 = !DILocation(line: 157, column: 32, scope: !4342)
!4345 = !DILocation(line: 157, column: 39, scope: !4342)
!4346 = !DILocation(line: 157, column: 11, scope: !4342)
!4347 = !DILocation(line: 158, column: 11, scope: !4342)
!4348 = !DILocation(line: 162, column: 15, scope: !4349)
!4349 = distinct !DILexicalBlock(scope: !4350, file: !4294, line: 162, column: 15)
!4350 = distinct !DILexicalBlock(scope: !4337, file: !4294, line: 161, column: 9)
!4351 = !DILocation(line: 162, column: 23, scope: !4349)
!4352 = !DILocation(line: 162, column: 15, scope: !4350)
!4353 = !DILocation(line: 167, column: 23, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4349, file: !4294, line: 163, column: 13)
!4355 = !DILocation(line: 167, column: 28, scope: !4354)
!4356 = !DILocation(line: 167, column: 36, scope: !4354)
!4357 = !DILocation(line: 167, column: 44, scope: !4354)
!4358 = !DILocation(line: 167, column: 15, scope: !4354)
!4359 = !DILocation(line: 168, column: 15, scope: !4354)
!4360 = !DILocation(line: 168, column: 19, scope: !4354)
!4361 = !DILocation(line: 168, column: 27, scope: !4354)
!4362 = !DILocation(line: 168, column: 32, scope: !4354)
!4363 = !DILocation(line: 169, column: 13, scope: !4354)
!4364 = !DILocation(line: 170, column: 11, scope: !4350)
!4365 = !DILocation(line: 174, column: 1, scope: !4308)
!4366 = distinct !DISubprogram(name: "setlocale_null_androidfix", scope: !4294, file: !4294, line: 60, type: !4367, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !296, retainedNodes: !4)
!4367 = !DISubroutineType(types: !4368)
!4368 = !{!49, !53}
!4369 = !DILocalVariable(name: "category", arg: 1, scope: !4366, file: !4294, line: 60, type: !53)
!4370 = !DILocation(line: 60, column: 32, scope: !4366)
!4371 = !DILocalVariable(name: "result", scope: !4366, file: !4294, line: 62, type: !49)
!4372 = !DILocation(line: 62, column: 15, scope: !4366)
!4373 = !DILocation(line: 62, column: 35, scope: !4366)
!4374 = !DILocation(line: 62, column: 24, scope: !4366)
!4375 = !DILocation(line: 87, column: 10, scope: !4366)
!4376 = !DILocation(line: 87, column: 3, scope: !4366)
!4377 = !DILocalVariable(name: "category", arg: 1, scope: !4378, file: !4294, line: 60, type: !53)
!4378 = distinct !DISubprogram(name: "setlocale_null_androidfix", scope: !4294, file: !4294, line: 60, type: !4367, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4379, retainedNodes: !4)
!4379 = distinct !DICompileUnit(language: DW_LANG_C99, file: !297, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!4380 = !DILocalVariable(name: "result", scope: !4378, file: !4294, line: 62, type: !49)
!4381 = distinct !DISubprogram(name: "version_etc_arn", scope: !4382, file: !4382, line: 61, type: !4383, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !299, retainedNodes: !4)
!4382 = !DIFile(filename: "lib/version-etc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4383 = !DISubroutineType(types: !4384)
!4384 = !{null, !4385, !49, !49, !49, !4434, !110}
!4385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4386, size: 64)
!4386 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !4387, line: 7, baseType: !4388)
!4387 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!4388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4389, line: 49, size: 1728, elements: !4390)
!4389 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!4390 = !{!4391, !4392, !4393, !4394, !4395, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403, !4406, !4408, !4409, !4410, !4411, !4412, !4414, !4418, !4421, !4423, !4426, !4429, !4430, !4431, !4432, !4433}
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4388, file: !4389, line: 51, baseType: !53, size: 32)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4388, file: !4389, line: 54, baseType: !6, size: 64, offset: 64)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4388, file: !4389, line: 55, baseType: !6, size: 64, offset: 128)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4388, file: !4389, line: 56, baseType: !6, size: 64, offset: 192)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4388, file: !4389, line: 57, baseType: !6, size: 64, offset: 256)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4388, file: !4389, line: 58, baseType: !6, size: 64, offset: 320)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4388, file: !4389, line: 59, baseType: !6, size: 64, offset: 384)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4388, file: !4389, line: 60, baseType: !6, size: 64, offset: 448)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4388, file: !4389, line: 61, baseType: !6, size: 64, offset: 512)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4388, file: !4389, line: 64, baseType: !6, size: 64, offset: 576)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4388, file: !4389, line: 65, baseType: !6, size: 64, offset: 640)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4388, file: !4389, line: 66, baseType: !6, size: 64, offset: 704)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4388, file: !4389, line: 68, baseType: !4404, size: 64, offset: 768)
!4404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4405, size: 64)
!4405 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !4389, line: 36, flags: DIFlagFwdDecl)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4388, file: !4389, line: 70, baseType: !4407, size: 64, offset: 832)
!4407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4388, size: 64)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4388, file: !4389, line: 72, baseType: !53, size: 32, offset: 896)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4388, file: !4389, line: 73, baseType: !53, size: 32, offset: 928)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4388, file: !4389, line: 74, baseType: !965, size: 64, offset: 960)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4388, file: !4389, line: 77, baseType: !188, size: 16, offset: 1024)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4388, file: !4389, line: 78, baseType: !4413, size: 8, offset: 1040)
!4413 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4388, file: !4389, line: 79, baseType: !4415, size: 8, offset: 1048)
!4415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 8, elements: !4416)
!4416 = !{!4417}
!4417 = !DISubrange(count: 1)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4388, file: !4389, line: 81, baseType: !4419, size: 64, offset: 1088)
!4419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4420, size: 64)
!4420 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !4389, line: 43, baseType: null)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4388, file: !4389, line: 89, baseType: !4422, size: 64, offset: 1152)
!4422 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !12, line: 153, baseType: !13)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4388, file: !4389, line: 91, baseType: !4424, size: 64, offset: 1216)
!4424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4425, size: 64)
!4425 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !4389, line: 37, flags: DIFlagFwdDecl)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4388, file: !4389, line: 92, baseType: !4427, size: 64, offset: 1280)
!4427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4428, size: 64)
!4428 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !4389, line: 38, flags: DIFlagFwdDecl)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4388, file: !4389, line: 93, baseType: !4407, size: 64, offset: 1344)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4388, file: !4389, line: 94, baseType: !8, size: 64, offset: 1408)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4388, file: !4389, line: 95, baseType: !110, size: 64, offset: 1472)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4388, file: !4389, line: 96, baseType: !53, size: 32, offset: 1536)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4388, file: !4389, line: 98, baseType: !105, size: 160, offset: 1568)
!4434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!4435 = !DILocalVariable(name: "stream", arg: 1, scope: !4381, file: !4382, line: 61, type: !4385)
!4436 = !DILocation(line: 61, column: 24, scope: !4381)
!4437 = !DILocalVariable(name: "command_name", arg: 2, scope: !4381, file: !4382, line: 62, type: !49)
!4438 = !DILocation(line: 62, column: 30, scope: !4381)
!4439 = !DILocalVariable(name: "package", arg: 3, scope: !4381, file: !4382, line: 62, type: !49)
!4440 = !DILocation(line: 62, column: 56, scope: !4381)
!4441 = !DILocalVariable(name: "version", arg: 4, scope: !4381, file: !4382, line: 63, type: !49)
!4442 = !DILocation(line: 63, column: 30, scope: !4381)
!4443 = !DILocalVariable(name: "authors", arg: 5, scope: !4381, file: !4382, line: 64, type: !4434)
!4444 = !DILocation(line: 64, column: 39, scope: !4381)
!4445 = !DILocalVariable(name: "n_authors", arg: 6, scope: !4381, file: !4382, line: 64, type: !110)
!4446 = !DILocation(line: 64, column: 55, scope: !4381)
!4447 = !DILocation(line: 66, column: 7, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4381, file: !4382, line: 66, column: 7)
!4449 = !DILocation(line: 66, column: 7, scope: !4381)
!4450 = !DILocation(line: 67, column: 14, scope: !4448)
!4451 = !DILocation(line: 67, column: 38, scope: !4448)
!4452 = !DILocation(line: 67, column: 52, scope: !4448)
!4453 = !DILocation(line: 67, column: 61, scope: !4448)
!4454 = !DILocation(line: 67, column: 5, scope: !4448)
!4455 = !DILocation(line: 69, column: 14, scope: !4448)
!4456 = !DILocation(line: 69, column: 33, scope: !4448)
!4457 = !DILocation(line: 69, column: 42, scope: !4448)
!4458 = !DILocation(line: 69, column: 5, scope: !4448)
!4459 = !DILocation(line: 83, column: 12, scope: !4381)
!4460 = !DILocation(line: 83, column: 43, scope: !4381)
!4461 = !DILocation(line: 83, column: 3, scope: !4381)
!4462 = !DILocation(line: 85, column: 3, scope: !4381)
!4463 = !DILocation(line: 88, column: 12, scope: !4381)
!4464 = !DILocation(line: 88, column: 20, scope: !4381)
!4465 = !DILocation(line: 88, column: 3, scope: !4381)
!4466 = !DILocation(line: 95, column: 3, scope: !4381)
!4467 = !DILocation(line: 97, column: 11, scope: !4381)
!4468 = !DILocation(line: 97, column: 3, scope: !4381)
!4469 = !DILocation(line: 102, column: 7, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4381, file: !4382, line: 98, column: 5)
!4471 = !DILocation(line: 105, column: 16, scope: !4470)
!4472 = !DILocation(line: 105, column: 24, scope: !4470)
!4473 = !DILocation(line: 105, column: 47, scope: !4470)
!4474 = !DILocation(line: 105, column: 7, scope: !4470)
!4475 = !DILocation(line: 106, column: 7, scope: !4470)
!4476 = !DILocation(line: 109, column: 16, scope: !4470)
!4477 = !DILocation(line: 109, column: 24, scope: !4470)
!4478 = !DILocation(line: 109, column: 54, scope: !4470)
!4479 = !DILocation(line: 109, column: 66, scope: !4470)
!4480 = !DILocation(line: 109, column: 7, scope: !4470)
!4481 = !DILocation(line: 110, column: 7, scope: !4470)
!4482 = !DILocation(line: 113, column: 16, scope: !4470)
!4483 = !DILocation(line: 113, column: 24, scope: !4470)
!4484 = !DILocation(line: 114, column: 16, scope: !4470)
!4485 = !DILocation(line: 114, column: 28, scope: !4470)
!4486 = !DILocation(line: 114, column: 40, scope: !4470)
!4487 = !DILocation(line: 113, column: 7, scope: !4470)
!4488 = !DILocation(line: 115, column: 7, scope: !4470)
!4489 = !DILocation(line: 120, column: 16, scope: !4470)
!4490 = !DILocation(line: 120, column: 24, scope: !4470)
!4491 = !DILocation(line: 121, column: 16, scope: !4470)
!4492 = !DILocation(line: 121, column: 28, scope: !4470)
!4493 = !DILocation(line: 121, column: 40, scope: !4470)
!4494 = !DILocation(line: 121, column: 52, scope: !4470)
!4495 = !DILocation(line: 120, column: 7, scope: !4470)
!4496 = !DILocation(line: 122, column: 7, scope: !4470)
!4497 = !DILocation(line: 127, column: 16, scope: !4470)
!4498 = !DILocation(line: 127, column: 24, scope: !4470)
!4499 = !DILocation(line: 128, column: 16, scope: !4470)
!4500 = !DILocation(line: 128, column: 28, scope: !4470)
!4501 = !DILocation(line: 128, column: 40, scope: !4470)
!4502 = !DILocation(line: 128, column: 52, scope: !4470)
!4503 = !DILocation(line: 128, column: 64, scope: !4470)
!4504 = !DILocation(line: 127, column: 7, scope: !4470)
!4505 = !DILocation(line: 129, column: 7, scope: !4470)
!4506 = !DILocation(line: 134, column: 16, scope: !4470)
!4507 = !DILocation(line: 134, column: 24, scope: !4470)
!4508 = !DILocation(line: 135, column: 16, scope: !4470)
!4509 = !DILocation(line: 135, column: 28, scope: !4470)
!4510 = !DILocation(line: 135, column: 40, scope: !4470)
!4511 = !DILocation(line: 135, column: 52, scope: !4470)
!4512 = !DILocation(line: 135, column: 64, scope: !4470)
!4513 = !DILocation(line: 136, column: 16, scope: !4470)
!4514 = !DILocation(line: 134, column: 7, scope: !4470)
!4515 = !DILocation(line: 137, column: 7, scope: !4470)
!4516 = !DILocation(line: 142, column: 16, scope: !4470)
!4517 = !DILocation(line: 142, column: 24, scope: !4470)
!4518 = !DILocation(line: 143, column: 16, scope: !4470)
!4519 = !DILocation(line: 143, column: 28, scope: !4470)
!4520 = !DILocation(line: 143, column: 40, scope: !4470)
!4521 = !DILocation(line: 143, column: 52, scope: !4470)
!4522 = !DILocation(line: 143, column: 64, scope: !4470)
!4523 = !DILocation(line: 144, column: 16, scope: !4470)
!4524 = !DILocation(line: 144, column: 28, scope: !4470)
!4525 = !DILocation(line: 142, column: 7, scope: !4470)
!4526 = !DILocation(line: 145, column: 7, scope: !4470)
!4527 = !DILocation(line: 150, column: 16, scope: !4470)
!4528 = !DILocation(line: 150, column: 24, scope: !4470)
!4529 = !DILocation(line: 152, column: 17, scope: !4470)
!4530 = !DILocation(line: 152, column: 29, scope: !4470)
!4531 = !DILocation(line: 152, column: 41, scope: !4470)
!4532 = !DILocation(line: 152, column: 53, scope: !4470)
!4533 = !DILocation(line: 152, column: 65, scope: !4470)
!4534 = !DILocation(line: 153, column: 17, scope: !4470)
!4535 = !DILocation(line: 153, column: 29, scope: !4470)
!4536 = !DILocation(line: 153, column: 41, scope: !4470)
!4537 = !DILocation(line: 150, column: 7, scope: !4470)
!4538 = !DILocation(line: 154, column: 7, scope: !4470)
!4539 = !DILocation(line: 159, column: 16, scope: !4470)
!4540 = !DILocation(line: 159, column: 24, scope: !4470)
!4541 = !DILocation(line: 161, column: 16, scope: !4470)
!4542 = !DILocation(line: 161, column: 28, scope: !4470)
!4543 = !DILocation(line: 161, column: 40, scope: !4470)
!4544 = !DILocation(line: 161, column: 52, scope: !4470)
!4545 = !DILocation(line: 161, column: 64, scope: !4470)
!4546 = !DILocation(line: 162, column: 16, scope: !4470)
!4547 = !DILocation(line: 162, column: 28, scope: !4470)
!4548 = !DILocation(line: 162, column: 40, scope: !4470)
!4549 = !DILocation(line: 162, column: 52, scope: !4470)
!4550 = !DILocation(line: 159, column: 7, scope: !4470)
!4551 = !DILocation(line: 163, column: 7, scope: !4470)
!4552 = !DILocation(line: 170, column: 16, scope: !4470)
!4553 = !DILocation(line: 170, column: 24, scope: !4470)
!4554 = !DILocation(line: 172, column: 17, scope: !4470)
!4555 = !DILocation(line: 172, column: 29, scope: !4470)
!4556 = !DILocation(line: 172, column: 41, scope: !4470)
!4557 = !DILocation(line: 172, column: 53, scope: !4470)
!4558 = !DILocation(line: 172, column: 65, scope: !4470)
!4559 = !DILocation(line: 173, column: 17, scope: !4470)
!4560 = !DILocation(line: 173, column: 29, scope: !4470)
!4561 = !DILocation(line: 173, column: 41, scope: !4470)
!4562 = !DILocation(line: 173, column: 53, scope: !4470)
!4563 = !DILocation(line: 170, column: 7, scope: !4470)
!4564 = !DILocation(line: 174, column: 7, scope: !4470)
!4565 = !DILocation(line: 176, column: 1, scope: !4381)
!4566 = distinct !DISubprogram(name: "version_etc_va", scope: !4382, file: !4382, line: 199, type: !4567, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !299, retainedNodes: !4)
!4567 = !DISubroutineType(types: !4568)
!4568 = !{null, !4385, !49, !49, !49, !4569}
!4569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4570, size: 64)
!4570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !300, line: 192, size: 192, elements: !4571)
!4571 = !{!4572, !4573, !4574, !4575}
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !4570, file: !300, line: 192, baseType: !180, size: 32)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !4570, file: !300, line: 192, baseType: !180, size: 32, offset: 32)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !4570, file: !300, line: 192, baseType: !8, size: 64, offset: 64)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !4570, file: !300, line: 192, baseType: !8, size: 64, offset: 128)
!4576 = !DILocalVariable(name: "stream", arg: 1, scope: !4566, file: !4382, line: 199, type: !4385)
!4577 = !DILocation(line: 199, column: 23, scope: !4566)
!4578 = !DILocalVariable(name: "command_name", arg: 2, scope: !4566, file: !4382, line: 200, type: !49)
!4579 = !DILocation(line: 200, column: 29, scope: !4566)
!4580 = !DILocalVariable(name: "package", arg: 3, scope: !4566, file: !4382, line: 200, type: !49)
!4581 = !DILocation(line: 200, column: 55, scope: !4566)
!4582 = !DILocalVariable(name: "version", arg: 4, scope: !4566, file: !4382, line: 201, type: !49)
!4583 = !DILocation(line: 201, column: 29, scope: !4566)
!4584 = !DILocalVariable(name: "authors", arg: 5, scope: !4566, file: !4382, line: 201, type: !4569)
!4585 = !DILocation(line: 201, column: 46, scope: !4566)
!4586 = !DILocalVariable(name: "n_authors", scope: !4566, file: !4382, line: 203, type: !110)
!4587 = !DILocation(line: 203, column: 10, scope: !4566)
!4588 = !DILocalVariable(name: "authtab", scope: !4566, file: !4382, line: 204, type: !4589)
!4589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !49, size: 640, elements: !250)
!4590 = !DILocation(line: 204, column: 15, scope: !4566)
!4591 = !DILocation(line: 206, column: 18, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4566, file: !4382, line: 206, column: 3)
!4593 = !DILocation(line: 206, column: 8, scope: !4592)
!4594 = !DILocation(line: 207, column: 8, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4592, file: !4382, line: 206, column: 3)
!4596 = !DILocation(line: 207, column: 18, scope: !4595)
!4597 = !DILocation(line: 208, column: 10, scope: !4595)
!4598 = !DILocation(line: 208, column: 35, scope: !4595)
!4599 = !DILocation(line: 208, column: 22, scope: !4595)
!4600 = !DILocation(line: 208, column: 14, scope: !4595)
!4601 = !DILocation(line: 208, column: 33, scope: !4595)
!4602 = !DILocation(line: 208, column: 67, scope: !4595)
!4603 = !DILocation(line: 0, scope: !4595)
!4604 = !DILocation(line: 206, column: 3, scope: !4592)
!4605 = !DILocation(line: 209, column: 17, scope: !4595)
!4606 = !DILocation(line: 206, column: 3, scope: !4595)
!4607 = distinct !{!4607, !4604, !4608}
!4608 = !DILocation(line: 210, column: 5, scope: !4592)
!4609 = !DILocation(line: 211, column: 20, scope: !4566)
!4610 = !DILocation(line: 211, column: 28, scope: !4566)
!4611 = !DILocation(line: 211, column: 42, scope: !4566)
!4612 = !DILocation(line: 211, column: 51, scope: !4566)
!4613 = !DILocation(line: 212, column: 20, scope: !4566)
!4614 = !DILocation(line: 212, column: 29, scope: !4566)
!4615 = !DILocation(line: 211, column: 3, scope: !4566)
!4616 = !DILocation(line: 213, column: 1, scope: !4566)
!4617 = distinct !DISubprogram(name: "version_etc", scope: !4382, file: !4382, line: 230, type: !4618, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !299, retainedNodes: !4)
!4618 = !DISubroutineType(types: !4619)
!4619 = !{null, !4385, !49, !49, !49, null}
!4620 = !DILocalVariable(name: "stream", arg: 1, scope: !4617, file: !4382, line: 230, type: !4385)
!4621 = !DILocation(line: 230, column: 20, scope: !4617)
!4622 = !DILocalVariable(name: "command_name", arg: 2, scope: !4617, file: !4382, line: 231, type: !49)
!4623 = !DILocation(line: 231, column: 26, scope: !4617)
!4624 = !DILocalVariable(name: "package", arg: 3, scope: !4617, file: !4382, line: 231, type: !49)
!4625 = !DILocation(line: 231, column: 52, scope: !4617)
!4626 = !DILocalVariable(name: "version", arg: 4, scope: !4617, file: !4382, line: 232, type: !49)
!4627 = !DILocation(line: 232, column: 26, scope: !4617)
!4628 = !DILocalVariable(name: "authors", scope: !4617, file: !4382, line: 234, type: !4629)
!4629 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4630, line: 52, baseType: !4631)
!4630 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!4631 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4632, line: 32, baseType: !4633)
!4632 = !DIFile(filename: "/usr/lib/llvm-9/lib/clang/9.0.1/include/stdarg.h", directory: "")
!4633 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !300, line: 234, baseType: !4634)
!4634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4570, size: 192, elements: !4416)
!4635 = !DILocation(line: 234, column: 11, scope: !4617)
!4636 = !DILocation(line: 236, column: 3, scope: !4617)
!4637 = !DILocation(line: 237, column: 19, scope: !4617)
!4638 = !DILocation(line: 237, column: 27, scope: !4617)
!4639 = !DILocation(line: 237, column: 41, scope: !4617)
!4640 = !DILocation(line: 237, column: 50, scope: !4617)
!4641 = !DILocation(line: 237, column: 59, scope: !4617)
!4642 = !DILocation(line: 237, column: 3, scope: !4617)
!4643 = !DILocation(line: 238, column: 3, scope: !4617)
!4644 = !DILocation(line: 239, column: 1, scope: !4617)
!4645 = distinct !DISubprogram(name: "xmalloc", scope: !4646, file: !4646, line: 39, type: !4647, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !301, retainedNodes: !4)
!4646 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4647 = !DISubroutineType(types: !4648)
!4648 = !{!8, !110}
!4649 = !DILocalVariable(name: "n", arg: 1, scope: !4645, file: !4646, line: 39, type: !110)
!4650 = !DILocation(line: 39, column: 17, scope: !4645)
!4651 = !DILocalVariable(name: "p", scope: !4645, file: !4646, line: 41, type: !8)
!4652 = !DILocation(line: 41, column: 9, scope: !4645)
!4653 = !DILocation(line: 41, column: 21, scope: !4645)
!4654 = !DILocation(line: 41, column: 13, scope: !4645)
!4655 = !DILocation(line: 42, column: 8, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4645, file: !4646, line: 42, column: 7)
!4657 = !DILocation(line: 42, column: 10, scope: !4656)
!4658 = !DILocation(line: 42, column: 13, scope: !4656)
!4659 = !DILocation(line: 42, column: 15, scope: !4656)
!4660 = !DILocation(line: 42, column: 7, scope: !4645)
!4661 = !DILocation(line: 43, column: 5, scope: !4656)
!4662 = !DILocation(line: 44, column: 10, scope: !4645)
!4663 = !DILocation(line: 44, column: 3, scope: !4645)
!4664 = distinct !DISubprogram(name: "xrealloc", scope: !4646, file: !4646, line: 51, type: !4665, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !301, retainedNodes: !4)
!4665 = !DISubroutineType(types: !4666)
!4666 = !{!8, !8, !110}
!4667 = !DILocalVariable(name: "p", arg: 1, scope: !4664, file: !4646, line: 51, type: !8)
!4668 = !DILocation(line: 51, column: 17, scope: !4664)
!4669 = !DILocalVariable(name: "n", arg: 2, scope: !4664, file: !4646, line: 51, type: !110)
!4670 = !DILocation(line: 51, column: 27, scope: !4664)
!4671 = !DILocation(line: 53, column: 8, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4664, file: !4646, line: 53, column: 7)
!4673 = !DILocation(line: 53, column: 10, scope: !4672)
!4674 = !DILocation(line: 53, column: 13, scope: !4672)
!4675 = !DILocation(line: 53, column: 7, scope: !4664)
!4676 = !DILocation(line: 57, column: 13, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4672, file: !4646, line: 54, column: 5)
!4678 = !DILocation(line: 57, column: 7, scope: !4677)
!4679 = !DILocation(line: 58, column: 7, scope: !4677)
!4680 = !DILocation(line: 61, column: 16, scope: !4664)
!4681 = !DILocation(line: 61, column: 19, scope: !4664)
!4682 = !DILocation(line: 61, column: 7, scope: !4664)
!4683 = !DILocation(line: 61, column: 5, scope: !4664)
!4684 = !DILocation(line: 62, column: 8, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4664, file: !4646, line: 62, column: 7)
!4686 = !DILocation(line: 62, column: 10, scope: !4685)
!4687 = !DILocation(line: 62, column: 13, scope: !4685)
!4688 = !DILocation(line: 62, column: 7, scope: !4664)
!4689 = !DILocation(line: 63, column: 5, scope: !4685)
!4690 = !DILocation(line: 64, column: 10, scope: !4664)
!4691 = !DILocation(line: 64, column: 3, scope: !4664)
!4692 = !DILocation(line: 65, column: 1, scope: !4664)
!4693 = !DILocalVariable(name: "p", arg: 1, scope: !4694, file: !4646, line: 51, type: !8)
!4694 = distinct !DISubprogram(name: "xrealloc", scope: !4646, file: !4646, line: 51, type: !4665, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4695, retainedNodes: !4)
!4695 = distinct !DICompileUnit(language: DW_LANG_C99, file: !302, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !303, nameTableKind: None)
!4696 = !DILocalVariable(name: "n", arg: 2, scope: !4694, file: !4646, line: 51, type: !110)
!4697 = distinct !DISubprogram(name: "x2nrealloc", scope: !4698, file: !4698, line: 174, type: !4699, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !301, retainedNodes: !4)
!4698 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4699 = !DISubroutineType(types: !4700)
!4700 = !{!8, !8, !4701, !110}
!4701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64)
!4702 = !DILocalVariable(name: "p", arg: 1, scope: !4697, file: !4698, line: 174, type: !8)
!4703 = !DILocation(line: 174, column: 19, scope: !4697)
!4704 = !DILocalVariable(name: "pn", arg: 2, scope: !4697, file: !4698, line: 174, type: !4701)
!4705 = !DILocation(line: 174, column: 30, scope: !4697)
!4706 = !DILocalVariable(name: "s", arg: 3, scope: !4697, file: !4698, line: 174, type: !110)
!4707 = !DILocation(line: 174, column: 41, scope: !4697)
!4708 = !DILocalVariable(name: "n", scope: !4697, file: !4698, line: 176, type: !110)
!4709 = !DILocation(line: 176, column: 10, scope: !4697)
!4710 = !DILocation(line: 176, column: 15, scope: !4697)
!4711 = !DILocation(line: 176, column: 14, scope: !4697)
!4712 = !DILocation(line: 178, column: 9, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4697, file: !4698, line: 178, column: 7)
!4714 = !DILocation(line: 178, column: 7, scope: !4697)
!4715 = !DILocation(line: 180, column: 13, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4717, file: !4698, line: 180, column: 11)
!4717 = distinct !DILexicalBlock(scope: !4713, file: !4698, line: 179, column: 5)
!4718 = !DILocation(line: 180, column: 11, scope: !4717)
!4719 = !DILocation(line: 188, column: 32, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4716, file: !4698, line: 181, column: 9)
!4721 = !DILocation(line: 188, column: 30, scope: !4720)
!4722 = !DILocation(line: 188, column: 13, scope: !4720)
!4723 = !DILocation(line: 189, column: 17, scope: !4720)
!4724 = !DILocation(line: 189, column: 16, scope: !4720)
!4725 = !DILocation(line: 189, column: 13, scope: !4720)
!4726 = !DILocation(line: 190, column: 9, scope: !4720)
!4727 = !DILocation(line: 191, column: 11, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4717, file: !4698, line: 191, column: 11)
!4729 = !DILocation(line: 191, column: 11, scope: !4717)
!4730 = !DILocation(line: 192, column: 9, scope: !4728)
!4731 = !DILocation(line: 193, column: 5, scope: !4717)
!4732 = !DILocation(line: 200, column: 71, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4734, file: !4698, line: 200, column: 11)
!4734 = distinct !DILexicalBlock(scope: !4713, file: !4698, line: 195, column: 5)
!4735 = !DILocation(line: 200, column: 69, scope: !4733)
!4736 = !DILocation(line: 201, column: 14, scope: !4733)
!4737 = !DILocation(line: 201, column: 11, scope: !4733)
!4738 = !DILocation(line: 200, column: 11, scope: !4734)
!4739 = !DILocation(line: 202, column: 9, scope: !4733)
!4740 = !DILocation(line: 203, column: 12, scope: !4734)
!4741 = !DILocation(line: 203, column: 14, scope: !4734)
!4742 = !DILocation(line: 203, column: 18, scope: !4734)
!4743 = !DILocation(line: 203, column: 9, scope: !4734)
!4744 = !DILocation(line: 206, column: 9, scope: !4697)
!4745 = !DILocation(line: 206, column: 4, scope: !4697)
!4746 = !DILocation(line: 206, column: 7, scope: !4697)
!4747 = !DILocation(line: 207, column: 20, scope: !4697)
!4748 = !DILocation(line: 207, column: 23, scope: !4697)
!4749 = !DILocation(line: 207, column: 27, scope: !4697)
!4750 = !DILocation(line: 207, column: 25, scope: !4697)
!4751 = !DILocation(line: 207, column: 10, scope: !4697)
!4752 = !DILocation(line: 207, column: 3, scope: !4697)
!4753 = distinct !DISubprogram(name: "xcharalloc", scope: !4698, file: !4698, line: 216, type: !4754, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !301, retainedNodes: !4)
!4754 = !DISubroutineType(types: !4755)
!4755 = !{!6, !110}
!4756 = !DILocalVariable(name: "n", arg: 1, scope: !4753, file: !4698, line: 216, type: !110)
!4757 = !DILocation(line: 216, column: 20, scope: !4753)
!4758 = !DILocation(line: 218, column: 10, scope: !4753)
!4759 = !DILocation(line: 218, column: 3, scope: !4753)
!4760 = !DILocalVariable(name: "n", arg: 1, scope: !4761, file: !4698, line: 216, type: !110)
!4761 = distinct !DISubprogram(name: "xcharalloc", scope: !4698, file: !4698, line: 216, type: !4754, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4762, retainedNodes: !4)
!4762 = distinct !DICompileUnit(language: DW_LANG_C99, file: !302, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !303, nameTableKind: None)
!4763 = distinct !DISubprogram(name: "xalloc_die", scope: !4764, file: !4764, line: 32, type: !931, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !304, retainedNodes: !4)
!4764 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4765 = !DILocation(line: 34, column: 10, scope: !4763)
!4766 = !DILocation(line: 34, column: 33, scope: !4763)
!4767 = !DILocation(line: 34, column: 3, scope: !4763)
!4768 = !DILocation(line: 40, column: 3, scope: !4763)
!4769 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !4770, file: !4770, line: 86, type: !4771, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !306, retainedNodes: !4)
!4770 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4771 = !DISubroutineType(types: !4772)
!4772 = !{!110, !4773, !49, !110, !4774}
!4773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3618, size: 64)
!4774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4775, size: 64)
!4775 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !3592, line: 6, baseType: !4776)
!4776 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !3594, line: 21, baseType: !4777)
!4777 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3594, line: 13, size: 64, elements: !4778)
!4778 = !{!4779, !4780}
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !4777, file: !3594, line: 15, baseType: !53, size: 32)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !4777, file: !3594, line: 20, baseType: !4781, size: 32, offset: 32)
!4781 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4777, file: !3594, line: 16, size: 32, elements: !4782)
!4782 = !{!4783, !4784}
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !4781, file: !3594, line: 18, baseType: !180, size: 32)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !4781, file: !3594, line: 19, baseType: !82, size: 32)
!4785 = !DILocalVariable(name: "pwc", arg: 1, scope: !4769, file: !4770, line: 86, type: !4773)
!4786 = !DILocation(line: 86, column: 23, scope: !4769)
!4787 = !DILocalVariable(name: "s", arg: 2, scope: !4769, file: !4770, line: 86, type: !49)
!4788 = !DILocation(line: 86, column: 40, scope: !4769)
!4789 = !DILocalVariable(name: "n", arg: 3, scope: !4769, file: !4770, line: 86, type: !110)
!4790 = !DILocation(line: 86, column: 50, scope: !4769)
!4791 = !DILocalVariable(name: "ps", arg: 4, scope: !4769, file: !4770, line: 86, type: !4774)
!4792 = !DILocation(line: 86, column: 64, scope: !4769)
!4793 = !DILocalVariable(name: "ret", scope: !4769, file: !4770, line: 88, type: !110)
!4794 = !DILocation(line: 88, column: 10, scope: !4769)
!4795 = !DILocalVariable(name: "wc", scope: !4769, file: !4770, line: 89, type: !3618)
!4796 = !DILocation(line: 89, column: 11, scope: !4769)
!4797 = !DILocation(line: 105, column: 9, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4769, file: !4770, line: 105, column: 7)
!4799 = !DILocation(line: 105, column: 7, scope: !4769)
!4800 = !DILocation(line: 106, column: 9, scope: !4798)
!4801 = !DILocation(line: 106, column: 5, scope: !4798)
!4802 = !DILocation(line: 145, column: 18, scope: !4769)
!4803 = !DILocation(line: 145, column: 23, scope: !4769)
!4804 = !DILocation(line: 145, column: 26, scope: !4769)
!4805 = !DILocation(line: 145, column: 29, scope: !4769)
!4806 = !DILocation(line: 145, column: 9, scope: !4769)
!4807 = !DILocation(line: 145, column: 7, scope: !4769)
!4808 = !DILocation(line: 154, column: 22, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4769, file: !4770, line: 154, column: 7)
!4810 = !DILocation(line: 154, column: 19, scope: !4809)
!4811 = !DILocation(line: 154, column: 26, scope: !4809)
!4812 = !DILocation(line: 154, column: 29, scope: !4809)
!4813 = !DILocation(line: 154, column: 31, scope: !4809)
!4814 = !DILocation(line: 154, column: 36, scope: !4809)
!4815 = !DILocation(line: 154, column: 41, scope: !4809)
!4816 = !DILocation(line: 154, column: 7, scope: !4769)
!4817 = !DILocalVariable(name: "uc", scope: !4818, file: !4770, line: 156, type: !317)
!4818 = distinct !DILexicalBlock(scope: !4809, file: !4770, line: 155, column: 5)
!4819 = !DILocation(line: 156, column: 21, scope: !4818)
!4820 = !DILocation(line: 156, column: 27, scope: !4818)
!4821 = !DILocation(line: 156, column: 26, scope: !4818)
!4822 = !DILocation(line: 157, column: 14, scope: !4818)
!4823 = !DILocation(line: 157, column: 8, scope: !4818)
!4824 = !DILocation(line: 157, column: 12, scope: !4818)
!4825 = !DILocation(line: 158, column: 7, scope: !4818)
!4826 = !DILocation(line: 162, column: 10, scope: !4769)
!4827 = !DILocation(line: 162, column: 3, scope: !4769)
!4828 = !DILocation(line: 163, column: 1, scope: !4769)
!4829 = !DILocalVariable(name: "pwc", arg: 1, scope: !4830, file: !4770, line: 86, type: !4773)
!4830 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !4770, file: !4770, line: 86, type: !4831, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4844, retainedNodes: !4)
!4831 = !DISubroutineType(types: !4832)
!4832 = !{!110, !4773, !49, !110, !4833}
!4833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4834, size: 64)
!4834 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !3592, line: 6, baseType: !4835)
!4835 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !3594, line: 21, baseType: !4836)
!4836 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3594, line: 13, size: 64, elements: !4837)
!4837 = !{!4838, !4839}
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !4836, file: !3594, line: 15, baseType: !53, size: 32)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !4836, file: !3594, line: 20, baseType: !4840, size: 32, offset: 32)
!4840 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4836, file: !3594, line: 16, size: 32, elements: !4841)
!4841 = !{!4842, !4843}
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !4840, file: !3594, line: 18, baseType: !180, size: 32)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !4840, file: !3594, line: 19, baseType: !82, size: 32)
!4844 = distinct !DICompileUnit(language: DW_LANG_C99, file: !307, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !308, nameTableKind: None)
!4845 = !DILocalVariable(name: "s", arg: 2, scope: !4830, file: !4770, line: 86, type: !49)
!4846 = !DILocalVariable(name: "n", arg: 3, scope: !4830, file: !4770, line: 86, type: !110)
!4847 = !DILocalVariable(name: "ps", arg: 4, scope: !4830, file: !4770, line: 86, type: !4833)
!4848 = !DILocalVariable(name: "ret", scope: !4830, file: !4770, line: 88, type: !110)
!4849 = !DILocalVariable(name: "wc", scope: !4830, file: !4770, line: 89, type: !3618)
!4850 = distinct !DISubprogram(name: "extract_trimmed_name", scope: !4851, file: !4851, line: 49, type: !4852, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !309, retainedNodes: !4)
!4851 = !DIFile(filename: "lib/readutmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4852 = !DISubroutineType(types: !4853)
!4853 = !{!6, !4854}
!4854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4855, size: 64)
!4855 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4856)
!4856 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !4857)
!4857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !4858)
!4858 = !{!4859, !4860, !4861, !4862, !4863, !4864, !4865, !4870, !4871, !4876, !4877}
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !4857, file: !72, line: 57, baseType: !14, size: 16)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !4857, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !4857, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !4857, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !4857, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !4857, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !4857, file: !72, line: 67, baseType: !4866, size: 32, offset: 2656)
!4866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !4867)
!4867 = !{!4868, !4869}
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !4866, file: !72, line: 45, baseType: !14, size: 16)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !4866, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !4857, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !4857, file: !72, line: 79, baseType: !4872, size: 64, offset: 2720)
!4872 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4857, file: !72, line: 75, size: 64, elements: !4873)
!4873 = !{!4874, !4875}
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4872, file: !72, line: 77, baseType: !96, size: 32)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !4872, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !4857, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !4857, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!4878 = !DILocalVariable(name: "ut", arg: 1, scope: !4850, file: !4851, line: 49, type: !4854)
!4879 = !DILocation(line: 49, column: 42, scope: !4850)
!4880 = !DILocalVariable(name: "p", scope: !4850, file: !4851, line: 51, type: !6)
!4881 = !DILocation(line: 51, column: 9, scope: !4850)
!4882 = !DILocalVariable(name: "trimmed_name", scope: !4850, file: !4851, line: 51, type: !6)
!4883 = !DILocation(line: 51, column: 13, scope: !4850)
!4884 = !DILocation(line: 53, column: 18, scope: !4850)
!4885 = !DILocation(line: 53, column: 16, scope: !4850)
!4886 = !DILocation(line: 54, column: 12, scope: !4850)
!4887 = !DILocation(line: 54, column: 26, scope: !4850)
!4888 = !DILocation(line: 54, column: 3, scope: !4850)
!4889 = !DILocation(line: 58, column: 3, scope: !4850)
!4890 = !DILocation(line: 58, column: 39, scope: !4850)
!4891 = !DILocation(line: 59, column: 12, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4850, file: !4851, line: 59, column: 3)
!4893 = !DILocation(line: 59, column: 35, scope: !4892)
!4894 = !DILocation(line: 59, column: 27, scope: !4892)
!4895 = !DILocation(line: 59, column: 25, scope: !4892)
!4896 = !DILocation(line: 59, column: 10, scope: !4892)
!4897 = !DILocation(line: 59, column: 8, scope: !4892)
!4898 = !DILocation(line: 60, column: 8, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4892, file: !4851, line: 59, column: 3)
!4900 = !DILocation(line: 60, column: 23, scope: !4899)
!4901 = !DILocation(line: 60, column: 21, scope: !4899)
!4902 = !DILocation(line: 60, column: 25, scope: !4899)
!4903 = !DILocation(line: 60, column: 28, scope: !4899)
!4904 = !DILocation(line: 60, column: 34, scope: !4899)
!4905 = !DILocation(line: 0, scope: !4899)
!4906 = !DILocation(line: 59, column: 3, scope: !4892)
!4907 = !DILocation(line: 62, column: 5, scope: !4899)
!4908 = !DILocation(line: 61, column: 9, scope: !4899)
!4909 = !DILocation(line: 61, column: 13, scope: !4899)
!4910 = !DILocation(line: 59, column: 3, scope: !4899)
!4911 = distinct !{!4911, !4906, !4912}
!4912 = !DILocation(line: 62, column: 5, scope: !4892)
!4913 = !DILocation(line: 63, column: 10, scope: !4850)
!4914 = !DILocation(line: 63, column: 3, scope: !4850)
!4915 = distinct !DISubprogram(name: "read_utmp", scope: !4851, file: !4851, line: 92, type: !4916, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !309, retainedNodes: !4)
!4916 = !DISubroutineType(types: !4917)
!4917 = !{!53, !49, !4701, !4918, !53}
!4918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4919, size: 64)
!4919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4856, size: 64)
!4920 = !DILocalVariable(name: "file", arg: 1, scope: !4915, file: !4851, line: 92, type: !49)
!4921 = !DILocation(line: 92, column: 24, scope: !4915)
!4922 = !DILocalVariable(name: "n_entries", arg: 2, scope: !4915, file: !4851, line: 92, type: !4701)
!4923 = !DILocation(line: 92, column: 38, scope: !4915)
!4924 = !DILocalVariable(name: "utmp_buf", arg: 3, scope: !4915, file: !4851, line: 92, type: !4918)
!4925 = !DILocation(line: 92, column: 63, scope: !4915)
!4926 = !DILocalVariable(name: "options", arg: 4, scope: !4915, file: !4851, line: 93, type: !53)
!4927 = !DILocation(line: 93, column: 16, scope: !4915)
!4928 = !DILocalVariable(name: "n_read", scope: !4915, file: !4851, line: 95, type: !110)
!4929 = !DILocation(line: 95, column: 10, scope: !4915)
!4930 = !DILocalVariable(name: "n_alloc", scope: !4915, file: !4851, line: 96, type: !110)
!4931 = !DILocation(line: 96, column: 10, scope: !4915)
!4932 = !DILocalVariable(name: "utmp", scope: !4915, file: !4851, line: 97, type: !4919)
!4933 = !DILocation(line: 97, column: 16, scope: !4915)
!4934 = !DILocalVariable(name: "u", scope: !4915, file: !4851, line: 98, type: !4919)
!4935 = !DILocation(line: 98, column: 16, scope: !4915)
!4936 = !DILocation(line: 104, column: 32, scope: !4915)
!4937 = !DILocation(line: 104, column: 3, scope: !4915)
!4938 = !DILocation(line: 106, column: 3, scope: !4915)
!4939 = !DILocation(line: 108, column: 3, scope: !4915)
!4940 = !DILocation(line: 108, column: 15, scope: !4915)
!4941 = !DILocation(line: 108, column: 13, scope: !4915)
!4942 = !DILocation(line: 108, column: 32, scope: !4915)
!4943 = !DILocation(line: 109, column: 31, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4915, file: !4851, line: 109, column: 9)
!4945 = !DILocation(line: 109, column: 34, scope: !4944)
!4946 = !DILocation(line: 109, column: 9, scope: !4944)
!4947 = !DILocation(line: 109, column: 9, scope: !4915)
!4948 = !DILocation(line: 111, column: 13, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4950, file: !4851, line: 111, column: 13)
!4950 = distinct !DILexicalBlock(scope: !4944, file: !4851, line: 110, column: 7)
!4951 = !DILocation(line: 111, column: 23, scope: !4949)
!4952 = !DILocation(line: 111, column: 20, scope: !4949)
!4953 = !DILocation(line: 111, column: 13, scope: !4950)
!4954 = !DILocation(line: 112, column: 30, scope: !4949)
!4955 = !DILocation(line: 112, column: 18, scope: !4949)
!4956 = !DILocation(line: 112, column: 16, scope: !4949)
!4957 = !DILocation(line: 112, column: 11, scope: !4949)
!4958 = !DILocation(line: 114, column: 9, scope: !4950)
!4959 = !DILocation(line: 114, column: 20, scope: !4950)
!4960 = !DILocation(line: 114, column: 27, scope: !4950)
!4961 = !DILocation(line: 114, column: 26, scope: !4950)
!4962 = !DILocation(line: 115, column: 7, scope: !4950)
!4963 = distinct !{!4963, !4939, !4964}
!4964 = !DILocation(line: 115, column: 7, scope: !4915)
!4965 = !DILocation(line: 117, column: 3, scope: !4915)
!4966 = !DILocation(line: 119, column: 16, scope: !4915)
!4967 = !DILocation(line: 119, column: 4, scope: !4915)
!4968 = !DILocation(line: 119, column: 14, scope: !4915)
!4969 = !DILocation(line: 120, column: 15, scope: !4915)
!4970 = !DILocation(line: 120, column: 4, scope: !4915)
!4971 = !DILocation(line: 120, column: 13, scope: !4915)
!4972 = !DILocation(line: 122, column: 3, scope: !4915)
!4973 = !DILocalVariable(name: "file", arg: 1, scope: !4974, file: !4851, line: 92, type: !49)
!4974 = distinct !DISubprogram(name: "read_utmp", scope: !4851, file: !4851, line: 92, type: !4975, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5001, retainedNodes: !4)
!4975 = !DISubroutineType(types: !4976)
!4976 = !{!53, !49, !4701, !4977, !53}
!4977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4978, size: 64)
!4978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4979, size: 64)
!4979 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !4980)
!4980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !4981)
!4981 = !{!4982, !4983, !4984, !4985, !4986, !4987, !4988, !4993, !4994, !4999, !5000}
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !4980, file: !72, line: 57, baseType: !14, size: 16)
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !4980, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !4980, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !4980, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !4980, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !4980, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !4980, file: !72, line: 67, baseType: !4989, size: 32, offset: 2656)
!4989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !4990)
!4990 = !{!4991, !4992}
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !4989, file: !72, line: 45, baseType: !14, size: 16)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !4989, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !4980, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !4980, file: !72, line: 79, baseType: !4995, size: 64, offset: 2720)
!4995 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4980, file: !72, line: 75, size: 64, elements: !4996)
!4996 = !{!4997, !4998}
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4995, file: !72, line: 77, baseType: !96, size: 32)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !4995, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !4980, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !4980, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!5001 = distinct !DICompileUnit(language: DW_LANG_C99, file: !310, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !311, nameTableKind: None)
!5002 = !DILocalVariable(name: "n_entries", arg: 2, scope: !4974, file: !4851, line: 92, type: !4701)
!5003 = !DILocalVariable(name: "utmp_buf", arg: 3, scope: !4974, file: !4851, line: 92, type: !4977)
!5004 = !DILocalVariable(name: "options", arg: 4, scope: !4974, file: !4851, line: 93, type: !53)
!5005 = !DILocalVariable(name: "n_read", scope: !4974, file: !4851, line: 95, type: !110)
!5006 = !DILocalVariable(name: "n_alloc", scope: !4974, file: !4851, line: 96, type: !110)
!5007 = !DILocalVariable(name: "utmp", scope: !4974, file: !4851, line: 97, type: !4978)
!5008 = !DILocalVariable(name: "u", scope: !4974, file: !4851, line: 98, type: !4978)
!5009 = distinct !DISubprogram(name: "desirable_utmp_entry", scope: !4851, file: !4851, line: 69, type: !5010, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !309, retainedNodes: !4)
!5010 = !DISubroutineType(types: !5011)
!5011 = !{!18, !4854, !53}
!5012 = !DILocalVariable(name: "u", arg: 1, scope: !5009, file: !4851, line: 69, type: !4854)
!5013 = !DILocation(line: 69, column: 42, scope: !5009)
!5014 = !DILocalVariable(name: "options", arg: 2, scope: !5009, file: !4851, line: 69, type: !53)
!5015 = !DILocation(line: 69, column: 49, scope: !5009)
!5016 = !DILocalVariable(name: "user_proc", scope: !5009, file: !4851, line: 71, type: !18)
!5017 = !DILocation(line: 71, column: 8, scope: !5009)
!5018 = !DILocation(line: 71, column: 20, scope: !5009)
!5019 = !DILocation(line: 0, scope: !5009)
!5020 = !DILocation(line: 72, column: 8, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5009, file: !4851, line: 72, column: 7)
!5022 = !DILocation(line: 72, column: 16, scope: !5021)
!5023 = !DILocation(line: 72, column: 42, scope: !5021)
!5024 = !DILocation(line: 72, column: 46, scope: !5021)
!5025 = !DILocation(line: 72, column: 7, scope: !5009)
!5026 = !DILocation(line: 73, column: 5, scope: !5021)
!5027 = !DILocation(line: 74, column: 8, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5009, file: !4851, line: 74, column: 7)
!5029 = !DILocation(line: 74, column: 16, scope: !5028)
!5030 = !DILocation(line: 75, column: 7, scope: !5028)
!5031 = !DILocation(line: 75, column: 10, scope: !5028)
!5032 = !DILocation(line: 76, column: 7, scope: !5028)
!5033 = !DILocation(line: 76, column: 14, scope: !5028)
!5034 = !DILocation(line: 76, column: 12, scope: !5028)
!5035 = !DILocation(line: 77, column: 7, scope: !5028)
!5036 = !DILocation(line: 77, column: 17, scope: !5028)
!5037 = !DILocation(line: 77, column: 11, scope: !5028)
!5038 = !DILocation(line: 77, column: 32, scope: !5028)
!5039 = !DILocation(line: 77, column: 36, scope: !5028)
!5040 = !DILocation(line: 77, column: 39, scope: !5028)
!5041 = !DILocation(line: 77, column: 45, scope: !5028)
!5042 = !DILocation(line: 74, column: 7, scope: !5009)
!5043 = !DILocation(line: 78, column: 5, scope: !5028)
!5044 = !DILocation(line: 79, column: 3, scope: !5009)
!5045 = !DILocation(line: 80, column: 1, scope: !5009)
!5046 = !DILocalVariable(name: "u", arg: 1, scope: !5047, file: !4851, line: 69, type: !5050)
!5047 = distinct !DISubprogram(name: "desirable_utmp_entry", scope: !4851, file: !4851, line: 69, type: !5048, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5074, retainedNodes: !4)
!5048 = !DISubroutineType(types: !5049)
!5049 = !{!18, !5050, !53}
!5050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5051, size: 64)
!5051 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5052)
!5052 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRUCT_UTMP", file: !70, line: 146, baseType: !5053)
!5053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !72, line: 55, size: 3072, elements: !5054)
!5054 = !{!5055, !5056, !5057, !5058, !5059, !5060, !5061, !5066, !5067, !5072, !5073}
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !5053, file: !72, line: 57, baseType: !14, size: 16)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !5053, file: !72, line: 58, baseType: !76, size: 32, offset: 32)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !5053, file: !72, line: 59, baseType: !78, size: 256, offset: 64)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !5053, file: !72, line: 61, baseType: !82, size: 32, offset: 320)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !5053, file: !72, line: 63, baseType: !78, size: 256, offset: 352)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !5053, file: !72, line: 65, baseType: !87, size: 2048, offset: 608)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !5053, file: !72, line: 67, baseType: !5062, size: 32, offset: 2656)
!5062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !72, line: 42, size: 32, elements: !5063)
!5063 = !{!5064, !5065}
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !5062, file: !72, line: 45, baseType: !14, size: 16)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !5062, file: !72, line: 46, baseType: !14, size: 16, offset: 16)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !5053, file: !72, line: 74, baseType: !96, size: 32, offset: 2688)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !5053, file: !72, line: 79, baseType: !5068, size: 64, offset: 2720)
!5068 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5053, file: !72, line: 75, size: 64, elements: !5069)
!5069 = !{!5070, !5071}
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !5068, file: !72, line: 77, baseType: !96, size: 32)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !5068, file: !72, line: 78, baseType: !96, size: 32, offset: 32)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !5053, file: !72, line: 84, baseType: !103, size: 128, offset: 2784)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !5053, file: !72, line: 85, baseType: !105, size: 160, offset: 2912)
!5074 = distinct !DICompileUnit(language: DW_LANG_C99, file: !310, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !311, nameTableKind: None)
!5075 = !DILocalVariable(name: "options", arg: 2, scope: !5047, file: !4851, line: 69, type: !53)
!5076 = !DILocalVariable(name: "user_proc", scope: !5047, file: !4851, line: 71, type: !18)
!5077 = distinct !DISubprogram(name: "c_strcasecmp", scope: !5078, file: !5078, line: 27, type: !5079, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !312, retainedNodes: !4)
!5078 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5079 = !DISubroutineType(types: !5080)
!5080 = !{!53, !49, !49}
!5081 = !DILocalVariable(name: "s1", arg: 1, scope: !5077, file: !5078, line: 27, type: !49)
!5082 = !DILocation(line: 27, column: 27, scope: !5077)
!5083 = !DILocalVariable(name: "s2", arg: 2, scope: !5077, file: !5078, line: 27, type: !49)
!5084 = !DILocation(line: 27, column: 43, scope: !5077)
!5085 = !DILocalVariable(name: "p1", scope: !5077, file: !5078, line: 29, type: !315)
!5086 = !DILocation(line: 29, column: 33, scope: !5077)
!5087 = !DILocation(line: 29, column: 62, scope: !5077)
!5088 = !DILocalVariable(name: "p2", scope: !5077, file: !5078, line: 30, type: !315)
!5089 = !DILocation(line: 30, column: 33, scope: !5077)
!5090 = !DILocation(line: 30, column: 62, scope: !5077)
!5091 = !DILocalVariable(name: "c1", scope: !5077, file: !5078, line: 31, type: !317)
!5092 = !DILocation(line: 31, column: 17, scope: !5077)
!5093 = !DILocalVariable(name: "c2", scope: !5077, file: !5078, line: 31, type: !317)
!5094 = !DILocation(line: 31, column: 21, scope: !5077)
!5095 = !DILocation(line: 33, column: 7, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5077, file: !5078, line: 33, column: 7)
!5097 = !DILocation(line: 33, column: 13, scope: !5096)
!5098 = !DILocation(line: 33, column: 10, scope: !5096)
!5099 = !DILocation(line: 33, column: 7, scope: !5077)
!5100 = !DILocation(line: 34, column: 5, scope: !5096)
!5101 = !DILocation(line: 36, column: 3, scope: !5077)
!5102 = !DILocation(line: 38, column: 24, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5077, file: !5078, line: 37, column: 5)
!5104 = !DILocation(line: 38, column: 23, scope: !5103)
!5105 = !DILocation(line: 38, column: 12, scope: !5103)
!5106 = !DILocation(line: 38, column: 10, scope: !5103)
!5107 = !DILocation(line: 39, column: 24, scope: !5103)
!5108 = !DILocation(line: 39, column: 23, scope: !5103)
!5109 = !DILocation(line: 39, column: 12, scope: !5103)
!5110 = !DILocation(line: 39, column: 10, scope: !5103)
!5111 = !DILocation(line: 41, column: 11, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5103, file: !5078, line: 41, column: 11)
!5113 = !DILocation(line: 41, column: 14, scope: !5112)
!5114 = !DILocation(line: 41, column: 11, scope: !5103)
!5115 = !DILocation(line: 42, column: 9, scope: !5112)
!5116 = !DILocation(line: 44, column: 7, scope: !5103)
!5117 = !DILocation(line: 45, column: 7, scope: !5103)
!5118 = !DILocation(line: 46, column: 5, scope: !5103)
!5119 = !DILocation(line: 47, column: 10, scope: !5077)
!5120 = !DILocation(line: 47, column: 16, scope: !5077)
!5121 = !DILocation(line: 47, column: 13, scope: !5077)
!5122 = distinct !{!5122, !5101, !5123}
!5123 = !DILocation(line: 47, column: 18, scope: !5077)
!5124 = !DILocation(line: 50, column: 12, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5077, file: !5078, line: 49, column: 7)
!5126 = !DILocation(line: 50, column: 17, scope: !5125)
!5127 = !DILocation(line: 50, column: 15, scope: !5125)
!5128 = !DILocation(line: 50, column: 5, scope: !5125)
!5129 = !DILocation(line: 56, column: 1, scope: !5077)
!5130 = distinct !DISubprogram(name: "close_stream", scope: !5131, file: !5131, line: 56, type: !5132, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !318, retainedNodes: !4)
!5131 = !DIFile(filename: "lib/close-stream.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5132 = !DISubroutineType(types: !5133)
!5133 = !{!53, !5134}
!5134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5135, size: 64)
!5135 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !4387, line: 7, baseType: !5136)
!5136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4389, line: 49, size: 1728, elements: !5137)
!5137 = !{!5138, !5139, !5140, !5141, !5142, !5143, !5144, !5145, !5146, !5147, !5148, !5149, !5150, !5151, !5153, !5154, !5155, !5156, !5157, !5158, !5159, !5160, !5161, !5162, !5163, !5164, !5165, !5166, !5167}
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5136, file: !4389, line: 51, baseType: !53, size: 32)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5136, file: !4389, line: 54, baseType: !6, size: 64, offset: 64)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5136, file: !4389, line: 55, baseType: !6, size: 64, offset: 128)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5136, file: !4389, line: 56, baseType: !6, size: 64, offset: 192)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5136, file: !4389, line: 57, baseType: !6, size: 64, offset: 256)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5136, file: !4389, line: 58, baseType: !6, size: 64, offset: 320)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5136, file: !4389, line: 59, baseType: !6, size: 64, offset: 384)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5136, file: !4389, line: 60, baseType: !6, size: 64, offset: 448)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5136, file: !4389, line: 61, baseType: !6, size: 64, offset: 512)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5136, file: !4389, line: 64, baseType: !6, size: 64, offset: 576)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5136, file: !4389, line: 65, baseType: !6, size: 64, offset: 640)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5136, file: !4389, line: 66, baseType: !6, size: 64, offset: 704)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5136, file: !4389, line: 68, baseType: !4404, size: 64, offset: 768)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5136, file: !4389, line: 70, baseType: !5152, size: 64, offset: 832)
!5152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5136, size: 64)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5136, file: !4389, line: 72, baseType: !53, size: 32, offset: 896)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5136, file: !4389, line: 73, baseType: !53, size: 32, offset: 928)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5136, file: !4389, line: 74, baseType: !965, size: 64, offset: 960)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5136, file: !4389, line: 77, baseType: !188, size: 16, offset: 1024)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5136, file: !4389, line: 78, baseType: !4413, size: 8, offset: 1040)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5136, file: !4389, line: 79, baseType: !4415, size: 8, offset: 1048)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5136, file: !4389, line: 81, baseType: !4419, size: 64, offset: 1088)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5136, file: !4389, line: 89, baseType: !4422, size: 64, offset: 1152)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5136, file: !4389, line: 91, baseType: !4424, size: 64, offset: 1216)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5136, file: !4389, line: 92, baseType: !4427, size: 64, offset: 1280)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5136, file: !4389, line: 93, baseType: !5152, size: 64, offset: 1344)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5136, file: !4389, line: 94, baseType: !8, size: 64, offset: 1408)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5136, file: !4389, line: 95, baseType: !110, size: 64, offset: 1472)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5136, file: !4389, line: 96, baseType: !53, size: 32, offset: 1536)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5136, file: !4389, line: 98, baseType: !105, size: 160, offset: 1568)
!5168 = !DILocalVariable(name: "stream", arg: 1, scope: !5130, file: !5131, line: 56, type: !5134)
!5169 = !DILocation(line: 56, column: 21, scope: !5130)
!5170 = !DILocalVariable(name: "some_pending", scope: !5130, file: !5131, line: 58, type: !5171)
!5171 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18)
!5172 = !DILocation(line: 58, column: 14, scope: !5130)
!5173 = !DILocation(line: 58, column: 42, scope: !5130)
!5174 = !DILocation(line: 58, column: 30, scope: !5130)
!5175 = !DILocation(line: 58, column: 50, scope: !5130)
!5176 = !DILocalVariable(name: "prev_fail", scope: !5130, file: !5131, line: 59, type: !5171)
!5177 = !DILocation(line: 59, column: 14, scope: !5130)
!5178 = !DILocation(line: 59, column: 27, scope: !5130)
!5179 = !DILocation(line: 59, column: 43, scope: !5130)
!5180 = !DILocalVariable(name: "fclose_fail", scope: !5130, file: !5131, line: 60, type: !5171)
!5181 = !DILocation(line: 60, column: 14, scope: !5130)
!5182 = !DILocation(line: 60, column: 37, scope: !5130)
!5183 = !DILocation(line: 60, column: 29, scope: !5130)
!5184 = !DILocation(line: 60, column: 45, scope: !5130)
!5185 = !DILocation(line: 70, column: 7, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5130, file: !5131, line: 70, column: 7)
!5187 = !DILocation(line: 70, column: 17, scope: !5186)
!5188 = !DILocation(line: 70, column: 21, scope: !5186)
!5189 = !DILocation(line: 70, column: 33, scope: !5186)
!5190 = !DILocation(line: 70, column: 37, scope: !5186)
!5191 = !DILocation(line: 70, column: 50, scope: !5186)
!5192 = !DILocation(line: 70, column: 53, scope: !5186)
!5193 = !DILocation(line: 70, column: 59, scope: !5186)
!5194 = !DILocation(line: 70, column: 7, scope: !5130)
!5195 = !DILocation(line: 72, column: 13, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5197, file: !5131, line: 72, column: 11)
!5197 = distinct !DILexicalBlock(scope: !5186, file: !5131, line: 71, column: 5)
!5198 = !DILocation(line: 72, column: 11, scope: !5197)
!5199 = !DILocation(line: 73, column: 9, scope: !5196)
!5200 = !DILocation(line: 73, column: 15, scope: !5196)
!5201 = !DILocation(line: 74, column: 7, scope: !5197)
!5202 = !DILocation(line: 77, column: 3, scope: !5130)
!5203 = !DILocation(line: 78, column: 1, scope: !5130)
!5204 = distinct !DISubprogram(name: "locale_charset", scope: !5205, file: !5205, line: 831, type: !5206, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !320, retainedNodes: !4)
!5205 = !DIFile(filename: "lib/localcharset.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5206 = !DISubroutineType(types: !5207)
!5207 = !{!49}
!5208 = !DILocalVariable(name: "codeset", scope: !5204, file: !5205, line: 833, type: !49)
!5209 = !DILocation(line: 833, column: 15, scope: !5204)
!5210 = !DILocation(line: 847, column: 13, scope: !5204)
!5211 = !DILocation(line: 847, column: 11, scope: !5204)
!5212 = !DILocation(line: 911, column: 7, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5204, file: !5205, line: 911, column: 7)
!5214 = !DILocation(line: 911, column: 15, scope: !5213)
!5215 = !DILocation(line: 911, column: 7, scope: !5204)
!5216 = !DILocation(line: 913, column: 13, scope: !5213)
!5217 = !DILocation(line: 913, column: 5, scope: !5213)
!5218 = !DILocation(line: 1070, column: 13, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5220, file: !5205, line: 1070, column: 13)
!5220 = distinct !DILexicalBlock(scope: !5221, file: !5205, line: 1060, column: 7)
!5221 = distinct !DILexicalBlock(scope: !5204, file: !5205, line: 1019, column: 3)
!5222 = !DILocation(line: 1070, column: 24, scope: !5219)
!5223 = !DILocation(line: 1070, column: 13, scope: !5220)
!5224 = !DILocation(line: 1071, column: 19, scope: !5219)
!5225 = !DILocation(line: 1071, column: 11, scope: !5219)
!5226 = !DILocation(line: 1158, column: 10, scope: !5204)
!5227 = !DILocation(line: 1158, column: 3, scope: !5204)
!5228 = !DILocalVariable(name: "codeset", scope: !5229, file: !5205, line: 833, type: !49)
!5229 = distinct !DISubprogram(name: "locale_charset", scope: !5205, file: !5205, line: 831, type: !5206, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5230, retainedNodes: !4)
!5230 = distinct !DICompileUnit(language: DW_LANG_C99, file: !321, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!5231 = distinct !DISubprogram(name: "rpl_fclose", scope: !5232, file: !5232, line: 58, type: !5233, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !322, retainedNodes: !4)
!5232 = !DIFile(filename: "lib/fclose.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5233 = !DISubroutineType(types: !5234)
!5234 = !{!53, !5235}
!5235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5236, size: 64)
!5236 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !4387, line: 7, baseType: !5237)
!5237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4389, line: 49, size: 1728, elements: !5238)
!5238 = !{!5239, !5240, !5241, !5242, !5243, !5244, !5245, !5246, !5247, !5248, !5249, !5250, !5251, !5252, !5254, !5255, !5256, !5257, !5258, !5259, !5260, !5261, !5262, !5263, !5264, !5265, !5266, !5267, !5268}
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5237, file: !4389, line: 51, baseType: !53, size: 32)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5237, file: !4389, line: 54, baseType: !6, size: 64, offset: 64)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5237, file: !4389, line: 55, baseType: !6, size: 64, offset: 128)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5237, file: !4389, line: 56, baseType: !6, size: 64, offset: 192)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5237, file: !4389, line: 57, baseType: !6, size: 64, offset: 256)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5237, file: !4389, line: 58, baseType: !6, size: 64, offset: 320)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5237, file: !4389, line: 59, baseType: !6, size: 64, offset: 384)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5237, file: !4389, line: 60, baseType: !6, size: 64, offset: 448)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5237, file: !4389, line: 61, baseType: !6, size: 64, offset: 512)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5237, file: !4389, line: 64, baseType: !6, size: 64, offset: 576)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5237, file: !4389, line: 65, baseType: !6, size: 64, offset: 640)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5237, file: !4389, line: 66, baseType: !6, size: 64, offset: 704)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5237, file: !4389, line: 68, baseType: !4404, size: 64, offset: 768)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5237, file: !4389, line: 70, baseType: !5253, size: 64, offset: 832)
!5253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5237, size: 64)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5237, file: !4389, line: 72, baseType: !53, size: 32, offset: 896)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5237, file: !4389, line: 73, baseType: !53, size: 32, offset: 928)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5237, file: !4389, line: 74, baseType: !965, size: 64, offset: 960)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5237, file: !4389, line: 77, baseType: !188, size: 16, offset: 1024)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5237, file: !4389, line: 78, baseType: !4413, size: 8, offset: 1040)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5237, file: !4389, line: 79, baseType: !4415, size: 8, offset: 1048)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5237, file: !4389, line: 81, baseType: !4419, size: 64, offset: 1088)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5237, file: !4389, line: 89, baseType: !4422, size: 64, offset: 1152)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5237, file: !4389, line: 91, baseType: !4424, size: 64, offset: 1216)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5237, file: !4389, line: 92, baseType: !4427, size: 64, offset: 1280)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5237, file: !4389, line: 93, baseType: !5253, size: 64, offset: 1344)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5237, file: !4389, line: 94, baseType: !8, size: 64, offset: 1408)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5237, file: !4389, line: 95, baseType: !110, size: 64, offset: 1472)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5237, file: !4389, line: 96, baseType: !53, size: 32, offset: 1536)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5237, file: !4389, line: 98, baseType: !105, size: 160, offset: 1568)
!5269 = !DILocalVariable(name: "fp", arg: 1, scope: !5231, file: !5232, line: 58, type: !5235)
!5270 = !DILocation(line: 58, column: 19, scope: !5231)
!5271 = !DILocalVariable(name: "saved_errno", scope: !5231, file: !5232, line: 60, type: !53)
!5272 = !DILocation(line: 60, column: 7, scope: !5231)
!5273 = !DILocalVariable(name: "fd", scope: !5231, file: !5232, line: 61, type: !53)
!5274 = !DILocation(line: 61, column: 7, scope: !5231)
!5275 = !DILocalVariable(name: "result", scope: !5231, file: !5232, line: 62, type: !53)
!5276 = !DILocation(line: 62, column: 7, scope: !5231)
!5277 = !DILocation(line: 65, column: 16, scope: !5231)
!5278 = !DILocation(line: 65, column: 8, scope: !5231)
!5279 = !DILocation(line: 65, column: 6, scope: !5231)
!5280 = !DILocation(line: 66, column: 7, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5231, file: !5232, line: 66, column: 7)
!5282 = !DILocation(line: 66, column: 10, scope: !5281)
!5283 = !DILocation(line: 66, column: 7, scope: !5231)
!5284 = !DILocation(line: 67, column: 28, scope: !5281)
!5285 = !DILocation(line: 67, column: 12, scope: !5281)
!5286 = !DILocation(line: 67, column: 5, scope: !5281)
!5287 = !DILocation(line: 72, column: 9, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5231, file: !5232, line: 72, column: 7)
!5289 = !DILocation(line: 72, column: 23, scope: !5288)
!5290 = !DILocation(line: 72, column: 41, scope: !5288)
!5291 = !DILocation(line: 72, column: 33, scope: !5288)
!5292 = !DILocation(line: 72, column: 26, scope: !5288)
!5293 = !DILocation(line: 72, column: 59, scope: !5288)
!5294 = !DILocation(line: 73, column: 7, scope: !5288)
!5295 = !DILocation(line: 73, column: 18, scope: !5288)
!5296 = !DILocation(line: 73, column: 10, scope: !5288)
!5297 = !DILocation(line: 72, column: 7, scope: !5231)
!5298 = !DILocation(line: 74, column: 19, scope: !5288)
!5299 = !DILocation(line: 74, column: 17, scope: !5288)
!5300 = !DILocation(line: 74, column: 5, scope: !5288)
!5301 = !DILocation(line: 100, column: 28, scope: !5231)
!5302 = !DILocation(line: 100, column: 12, scope: !5231)
!5303 = !DILocation(line: 100, column: 10, scope: !5231)
!5304 = !DILocation(line: 105, column: 7, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5231, file: !5232, line: 105, column: 7)
!5306 = !DILocation(line: 105, column: 19, scope: !5305)
!5307 = !DILocation(line: 105, column: 7, scope: !5231)
!5308 = !DILocation(line: 107, column: 15, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5305, file: !5232, line: 106, column: 5)
!5310 = !DILocation(line: 107, column: 7, scope: !5309)
!5311 = !DILocation(line: 107, column: 13, scope: !5309)
!5312 = !DILocation(line: 108, column: 14, scope: !5309)
!5313 = !DILocation(line: 109, column: 5, scope: !5309)
!5314 = !DILocation(line: 111, column: 10, scope: !5231)
!5315 = !DILocation(line: 111, column: 3, scope: !5231)
!5316 = !DILocation(line: 112, column: 1, scope: !5231)
!5317 = !DILocalVariable(name: "fp", arg: 1, scope: !5318, file: !5232, line: 58, type: !5321)
!5318 = distinct !DISubprogram(name: "rpl_fclose", scope: !5232, file: !5232, line: 58, type: !5319, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5355, retainedNodes: !4)
!5319 = !DISubroutineType(types: !5320)
!5320 = !{!53, !5321}
!5321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5322, size: 64)
!5322 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !4387, line: 7, baseType: !5323)
!5323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4389, line: 49, size: 1728, elements: !5324)
!5324 = !{!5325, !5326, !5327, !5328, !5329, !5330, !5331, !5332, !5333, !5334, !5335, !5336, !5337, !5338, !5340, !5341, !5342, !5343, !5344, !5345, !5346, !5347, !5348, !5349, !5350, !5351, !5352, !5353, !5354}
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5323, file: !4389, line: 51, baseType: !53, size: 32)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5323, file: !4389, line: 54, baseType: !6, size: 64, offset: 64)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5323, file: !4389, line: 55, baseType: !6, size: 64, offset: 128)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5323, file: !4389, line: 56, baseType: !6, size: 64, offset: 192)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5323, file: !4389, line: 57, baseType: !6, size: 64, offset: 256)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5323, file: !4389, line: 58, baseType: !6, size: 64, offset: 320)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5323, file: !4389, line: 59, baseType: !6, size: 64, offset: 384)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5323, file: !4389, line: 60, baseType: !6, size: 64, offset: 448)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5323, file: !4389, line: 61, baseType: !6, size: 64, offset: 512)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5323, file: !4389, line: 64, baseType: !6, size: 64, offset: 576)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5323, file: !4389, line: 65, baseType: !6, size: 64, offset: 640)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5323, file: !4389, line: 66, baseType: !6, size: 64, offset: 704)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5323, file: !4389, line: 68, baseType: !4404, size: 64, offset: 768)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5323, file: !4389, line: 70, baseType: !5339, size: 64, offset: 832)
!5339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5323, size: 64)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5323, file: !4389, line: 72, baseType: !53, size: 32, offset: 896)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5323, file: !4389, line: 73, baseType: !53, size: 32, offset: 928)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5323, file: !4389, line: 74, baseType: !965, size: 64, offset: 960)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5323, file: !4389, line: 77, baseType: !188, size: 16, offset: 1024)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5323, file: !4389, line: 78, baseType: !4413, size: 8, offset: 1040)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5323, file: !4389, line: 79, baseType: !4415, size: 8, offset: 1048)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5323, file: !4389, line: 81, baseType: !4419, size: 64, offset: 1088)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5323, file: !4389, line: 89, baseType: !4422, size: 64, offset: 1152)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5323, file: !4389, line: 91, baseType: !4424, size: 64, offset: 1216)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5323, file: !4389, line: 92, baseType: !4427, size: 64, offset: 1280)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5323, file: !4389, line: 93, baseType: !5339, size: 64, offset: 1344)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5323, file: !4389, line: 94, baseType: !8, size: 64, offset: 1408)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5323, file: !4389, line: 95, baseType: !110, size: 64, offset: 1472)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5323, file: !4389, line: 96, baseType: !53, size: 32, offset: 1536)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5323, file: !4389, line: 98, baseType: !105, size: 160, offset: 1568)
!5355 = distinct !DICompileUnit(language: DW_LANG_C99, file: !323, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!5356 = !DILocalVariable(name: "saved_errno", scope: !5318, file: !5232, line: 60, type: !53)
!5357 = !DILocalVariable(name: "fd", scope: !5318, file: !5232, line: 61, type: !53)
!5358 = !DILocalVariable(name: "result", scope: !5318, file: !5232, line: 62, type: !53)
!5359 = distinct !DISubprogram(name: "rpl_fflush", scope: !5360, file: !5360, line: 129, type: !5361, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !324, retainedNodes: !4)
!5360 = !DIFile(filename: "lib/fflush.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5361 = !DISubroutineType(types: !5362)
!5362 = !{!53, !5363}
!5363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5364, size: 64)
!5364 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !4387, line: 7, baseType: !5365)
!5365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4389, line: 49, size: 1728, elements: !5366)
!5366 = !{!5367, !5368, !5369, !5370, !5371, !5372, !5373, !5374, !5375, !5376, !5377, !5378, !5379, !5380, !5382, !5383, !5384, !5385, !5386, !5387, !5388, !5389, !5390, !5391, !5392, !5393, !5394, !5395, !5396}
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5365, file: !4389, line: 51, baseType: !53, size: 32)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5365, file: !4389, line: 54, baseType: !6, size: 64, offset: 64)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5365, file: !4389, line: 55, baseType: !6, size: 64, offset: 128)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5365, file: !4389, line: 56, baseType: !6, size: 64, offset: 192)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5365, file: !4389, line: 57, baseType: !6, size: 64, offset: 256)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5365, file: !4389, line: 58, baseType: !6, size: 64, offset: 320)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5365, file: !4389, line: 59, baseType: !6, size: 64, offset: 384)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5365, file: !4389, line: 60, baseType: !6, size: 64, offset: 448)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5365, file: !4389, line: 61, baseType: !6, size: 64, offset: 512)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5365, file: !4389, line: 64, baseType: !6, size: 64, offset: 576)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5365, file: !4389, line: 65, baseType: !6, size: 64, offset: 640)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5365, file: !4389, line: 66, baseType: !6, size: 64, offset: 704)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5365, file: !4389, line: 68, baseType: !4404, size: 64, offset: 768)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5365, file: !4389, line: 70, baseType: !5381, size: 64, offset: 832)
!5381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5365, size: 64)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5365, file: !4389, line: 72, baseType: !53, size: 32, offset: 896)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5365, file: !4389, line: 73, baseType: !53, size: 32, offset: 928)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5365, file: !4389, line: 74, baseType: !965, size: 64, offset: 960)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5365, file: !4389, line: 77, baseType: !188, size: 16, offset: 1024)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5365, file: !4389, line: 78, baseType: !4413, size: 8, offset: 1040)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5365, file: !4389, line: 79, baseType: !4415, size: 8, offset: 1048)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5365, file: !4389, line: 81, baseType: !4419, size: 64, offset: 1088)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5365, file: !4389, line: 89, baseType: !4422, size: 64, offset: 1152)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5365, file: !4389, line: 91, baseType: !4424, size: 64, offset: 1216)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5365, file: !4389, line: 92, baseType: !4427, size: 64, offset: 1280)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5365, file: !4389, line: 93, baseType: !5381, size: 64, offset: 1344)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5365, file: !4389, line: 94, baseType: !8, size: 64, offset: 1408)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5365, file: !4389, line: 95, baseType: !110, size: 64, offset: 1472)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5365, file: !4389, line: 96, baseType: !53, size: 32, offset: 1536)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5365, file: !4389, line: 98, baseType: !105, size: 160, offset: 1568)
!5397 = !DILocalVariable(name: "stream", arg: 1, scope: !5359, file: !5360, line: 129, type: !5363)
!5398 = !DILocation(line: 129, column: 19, scope: !5359)
!5399 = !DILocation(line: 150, column: 7, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5359, file: !5360, line: 150, column: 7)
!5401 = !DILocation(line: 150, column: 14, scope: !5400)
!5402 = !DILocation(line: 150, column: 22, scope: !5400)
!5403 = !DILocation(line: 150, column: 27, scope: !5400)
!5404 = !DILocation(line: 150, column: 7, scope: !5359)
!5405 = !DILocation(line: 151, column: 20, scope: !5400)
!5406 = !DILocation(line: 151, column: 12, scope: !5400)
!5407 = !DILocation(line: 151, column: 5, scope: !5400)
!5408 = !DILocation(line: 156, column: 44, scope: !5359)
!5409 = !DILocation(line: 156, column: 3, scope: !5359)
!5410 = !DILocation(line: 158, column: 18, scope: !5359)
!5411 = !DILocation(line: 158, column: 10, scope: !5359)
!5412 = !DILocation(line: 158, column: 3, scope: !5359)
!5413 = !DILocation(line: 235, column: 1, scope: !5359)
!5414 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !5360, file: !5360, line: 41, type: !5415, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !324, retainedNodes: !4)
!5415 = !DISubroutineType(types: !5416)
!5416 = !{null, !5363}
!5417 = !DILocalVariable(name: "fp", arg: 1, scope: !5414, file: !5360, line: 41, type: !5363)
!5418 = !DILocation(line: 41, column: 48, scope: !5414)
!5419 = !DILocation(line: 43, column: 7, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5414, file: !5360, line: 43, column: 7)
!5421 = !DILocation(line: 43, column: 11, scope: !5420)
!5422 = !DILocation(line: 43, column: 18, scope: !5420)
!5423 = !DILocation(line: 43, column: 7, scope: !5414)
!5424 = !DILocation(line: 45, column: 13, scope: !5420)
!5425 = !DILocation(line: 45, column: 5, scope: !5420)
!5426 = !DILocation(line: 46, column: 1, scope: !5414)
!5427 = distinct !DISubprogram(name: "rpl_fseeko", scope: !5428, file: !5428, line: 28, type: !5429, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !326, retainedNodes: !4)
!5428 = !DIFile(filename: "lib/fseeko.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5429 = !DISubroutineType(types: !5430)
!5430 = !{!53, !5431, !5465, !53}
!5431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5432, size: 64)
!5432 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !4387, line: 7, baseType: !5433)
!5433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4389, line: 49, size: 1728, elements: !5434)
!5434 = !{!5435, !5436, !5437, !5438, !5439, !5440, !5441, !5442, !5443, !5444, !5445, !5446, !5447, !5448, !5450, !5451, !5452, !5453, !5454, !5455, !5456, !5457, !5458, !5459, !5460, !5461, !5462, !5463, !5464}
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5433, file: !4389, line: 51, baseType: !53, size: 32)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5433, file: !4389, line: 54, baseType: !6, size: 64, offset: 64)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5433, file: !4389, line: 55, baseType: !6, size: 64, offset: 128)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5433, file: !4389, line: 56, baseType: !6, size: 64, offset: 192)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5433, file: !4389, line: 57, baseType: !6, size: 64, offset: 256)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5433, file: !4389, line: 58, baseType: !6, size: 64, offset: 320)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5433, file: !4389, line: 59, baseType: !6, size: 64, offset: 384)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5433, file: !4389, line: 60, baseType: !6, size: 64, offset: 448)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5433, file: !4389, line: 61, baseType: !6, size: 64, offset: 512)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5433, file: !4389, line: 64, baseType: !6, size: 64, offset: 576)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5433, file: !4389, line: 65, baseType: !6, size: 64, offset: 640)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5433, file: !4389, line: 66, baseType: !6, size: 64, offset: 704)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5433, file: !4389, line: 68, baseType: !4404, size: 64, offset: 768)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5433, file: !4389, line: 70, baseType: !5449, size: 64, offset: 832)
!5449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5433, size: 64)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5433, file: !4389, line: 72, baseType: !53, size: 32, offset: 896)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5433, file: !4389, line: 73, baseType: !53, size: 32, offset: 928)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5433, file: !4389, line: 74, baseType: !965, size: 64, offset: 960)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5433, file: !4389, line: 77, baseType: !188, size: 16, offset: 1024)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5433, file: !4389, line: 78, baseType: !4413, size: 8, offset: 1040)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5433, file: !4389, line: 79, baseType: !4415, size: 8, offset: 1048)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5433, file: !4389, line: 81, baseType: !4419, size: 64, offset: 1088)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5433, file: !4389, line: 89, baseType: !4422, size: 64, offset: 1152)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5433, file: !4389, line: 91, baseType: !4424, size: 64, offset: 1216)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5433, file: !4389, line: 92, baseType: !4427, size: 64, offset: 1280)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5433, file: !4389, line: 93, baseType: !5449, size: 64, offset: 1344)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5433, file: !4389, line: 94, baseType: !8, size: 64, offset: 1408)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5433, file: !4389, line: 95, baseType: !110, size: 64, offset: 1472)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5433, file: !4389, line: 96, baseType: !53, size: 32, offset: 1536)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5433, file: !4389, line: 98, baseType: !105, size: 160, offset: 1568)
!5465 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !4630, line: 63, baseType: !965)
!5466 = !DILocalVariable(name: "fp", arg: 1, scope: !5427, file: !5428, line: 28, type: !5431)
!5467 = !DILocation(line: 28, column: 15, scope: !5427)
!5468 = !DILocalVariable(name: "offset", arg: 2, scope: !5427, file: !5428, line: 28, type: !5465)
!5469 = !DILocation(line: 28, column: 25, scope: !5427)
!5470 = !DILocalVariable(name: "whence", arg: 3, scope: !5427, file: !5428, line: 28, type: !53)
!5471 = !DILocation(line: 28, column: 37, scope: !5427)
!5472 = !DILocation(line: 52, column: 7, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5427, file: !5428, line: 52, column: 7)
!5474 = !DILocation(line: 52, column: 11, scope: !5473)
!5475 = !DILocation(line: 52, column: 27, scope: !5473)
!5476 = !DILocation(line: 52, column: 31, scope: !5473)
!5477 = !DILocation(line: 52, column: 24, scope: !5473)
!5478 = !DILocation(line: 53, column: 7, scope: !5473)
!5479 = !DILocation(line: 53, column: 10, scope: !5473)
!5480 = !DILocation(line: 53, column: 14, scope: !5473)
!5481 = !DILocation(line: 53, column: 31, scope: !5473)
!5482 = !DILocation(line: 53, column: 35, scope: !5473)
!5483 = !DILocation(line: 53, column: 28, scope: !5473)
!5484 = !DILocation(line: 54, column: 7, scope: !5473)
!5485 = !DILocation(line: 54, column: 10, scope: !5473)
!5486 = !DILocation(line: 54, column: 14, scope: !5473)
!5487 = !DILocation(line: 54, column: 28, scope: !5473)
!5488 = !DILocation(line: 52, column: 7, scope: !5427)
!5489 = !DILocalVariable(name: "pos", scope: !5490, file: !5428, line: 117, type: !5465)
!5490 = distinct !DILexicalBlock(scope: !5473, file: !5428, line: 113, column: 5)
!5491 = !DILocation(line: 117, column: 13, scope: !5490)
!5492 = !DILocation(line: 117, column: 34, scope: !5490)
!5493 = !DILocation(line: 117, column: 26, scope: !5490)
!5494 = !DILocation(line: 117, column: 39, scope: !5490)
!5495 = !DILocation(line: 117, column: 47, scope: !5490)
!5496 = !DILocation(line: 117, column: 19, scope: !5490)
!5497 = !DILocation(line: 118, column: 11, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5490, file: !5428, line: 118, column: 11)
!5499 = !DILocation(line: 118, column: 15, scope: !5498)
!5500 = !DILocation(line: 118, column: 11, scope: !5490)
!5501 = !DILocation(line: 124, column: 11, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5498, file: !5428, line: 119, column: 9)
!5503 = !DILocation(line: 129, column: 7, scope: !5490)
!5504 = !DILocation(line: 129, column: 11, scope: !5490)
!5505 = !DILocation(line: 129, column: 18, scope: !5490)
!5506 = !DILocation(line: 130, column: 21, scope: !5490)
!5507 = !DILocation(line: 130, column: 7, scope: !5490)
!5508 = !DILocation(line: 130, column: 11, scope: !5490)
!5509 = !DILocation(line: 130, column: 19, scope: !5490)
!5510 = !DILocation(line: 161, column: 7, scope: !5490)
!5511 = !DILocation(line: 163, column: 18, scope: !5427)
!5512 = !DILocation(line: 163, column: 22, scope: !5427)
!5513 = !DILocation(line: 163, column: 30, scope: !5427)
!5514 = !DILocation(line: 163, column: 10, scope: !5427)
!5515 = !DILocation(line: 163, column: 3, scope: !5427)
!5516 = !DILocation(line: 164, column: 1, scope: !5427)
!5517 = !DILocalVariable(name: "fp", arg: 1, scope: !5518, file: !5428, line: 28, type: !5521)
!5518 = distinct !DISubprogram(name: "rpl_fseeko", scope: !5428, file: !5428, line: 28, type: !5519, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5555, retainedNodes: !4)
!5519 = !DISubroutineType(types: !5520)
!5520 = !{!53, !5521, !5465, !53}
!5521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5522, size: 64)
!5522 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !4387, line: 7, baseType: !5523)
!5523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4389, line: 49, size: 1728, elements: !5524)
!5524 = !{!5525, !5526, !5527, !5528, !5529, !5530, !5531, !5532, !5533, !5534, !5535, !5536, !5537, !5538, !5540, !5541, !5542, !5543, !5544, !5545, !5546, !5547, !5548, !5549, !5550, !5551, !5552, !5553, !5554}
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5523, file: !4389, line: 51, baseType: !53, size: 32)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5523, file: !4389, line: 54, baseType: !6, size: 64, offset: 64)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5523, file: !4389, line: 55, baseType: !6, size: 64, offset: 128)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5523, file: !4389, line: 56, baseType: !6, size: 64, offset: 192)
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5523, file: !4389, line: 57, baseType: !6, size: 64, offset: 256)
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5523, file: !4389, line: 58, baseType: !6, size: 64, offset: 320)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5523, file: !4389, line: 59, baseType: !6, size: 64, offset: 384)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5523, file: !4389, line: 60, baseType: !6, size: 64, offset: 448)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5523, file: !4389, line: 61, baseType: !6, size: 64, offset: 512)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5523, file: !4389, line: 64, baseType: !6, size: 64, offset: 576)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5523, file: !4389, line: 65, baseType: !6, size: 64, offset: 640)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5523, file: !4389, line: 66, baseType: !6, size: 64, offset: 704)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5523, file: !4389, line: 68, baseType: !4404, size: 64, offset: 768)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5523, file: !4389, line: 70, baseType: !5539, size: 64, offset: 832)
!5539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5523, size: 64)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5523, file: !4389, line: 72, baseType: !53, size: 32, offset: 896)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5523, file: !4389, line: 73, baseType: !53, size: 32, offset: 928)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5523, file: !4389, line: 74, baseType: !965, size: 64, offset: 960)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5523, file: !4389, line: 77, baseType: !188, size: 16, offset: 1024)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5523, file: !4389, line: 78, baseType: !4413, size: 8, offset: 1040)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5523, file: !4389, line: 79, baseType: !4415, size: 8, offset: 1048)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5523, file: !4389, line: 81, baseType: !4419, size: 64, offset: 1088)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5523, file: !4389, line: 89, baseType: !4422, size: 64, offset: 1152)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5523, file: !4389, line: 91, baseType: !4424, size: 64, offset: 1216)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5523, file: !4389, line: 92, baseType: !4427, size: 64, offset: 1280)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5523, file: !4389, line: 93, baseType: !5539, size: 64, offset: 1344)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5523, file: !4389, line: 94, baseType: !8, size: 64, offset: 1408)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5523, file: !4389, line: 95, baseType: !110, size: 64, offset: 1472)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5523, file: !4389, line: 96, baseType: !53, size: 32, offset: 1536)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5523, file: !4389, line: 98, baseType: !105, size: 160, offset: 1568)
!5555 = distinct !DICompileUnit(language: DW_LANG_C99, file: !327, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !298, nameTableKind: None)
!5556 = !DILocalVariable(name: "offset", arg: 2, scope: !5518, file: !5428, line: 28, type: !5465)
!5557 = !DILocalVariable(name: "whence", arg: 3, scope: !5518, file: !5428, line: 28, type: !53)
